================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

# Probleme : on a une sequence initiale (1, 2, ..., n).
# On recoit m requetes indiquant un element e_i a deplacer en tete de la sequence.
# Il faut appliquer en ordre toutes ces requetes et afficher la sequence finale.

# Contraintes fortes (n jusqu'a 200000 et m jusqu'a 100000)
# => un simple deplacement O(n) pour chaque requete serait trop lent (O(n*m) ~ 2e10)
# Il faut une structure efficace.

# Approche :
# Chaque element a un "rang" ou "position" dans la sequence.
# Au depart, position[x] = x (pour element x = 1..n)
# Quand on deplace un element e_i en tete, on doit lui attribuer une position plus petite que toutes les autres.
# On peut utiliser un compteur decremente => on attribue une "position virtuelle" plus petite
# Les positions minoreront les precedentes, donc l'ordre final est les elements tries par leur position effective.

# Implementation detaillee :
# - On initialise position[x] = x pour tous x.
# - On initialise cur_pos = 0
# - Pour chaque requete e:
#     on met position[e] = cur_pos
#     on decremente cur_pos de 1 (pour la prochaine mise en tete)
# - Enfin, on trie les elements par position et on affiche dans cet ordre.

def main():
    n, m = map(int, input().split())
    positions = [0] * (n+1)  # positions[elem] = position dans la sequence (position virtuelle)
    for i in range(1, n+1):
        positions[i] = i  # positions initiales

    current_pos = 0  # on commencera a decremente a partir de 0 pour les mises en tete

    for _ in range(m):
        e = int(input())
        # Move e to head: lui donner une position plus petite que toutes les autres
        positions[e] = current_pos
        current_pos -= 1

    # maintenant on a la position virtuelle de chaque element,
    # ceux qui ont une position plus faible sont plus en tete

    # Trier les elements 1..n par position croissante
    elements_sorted = sorted(range(1, n+1), key=lambda x: positions[x])

    # Affichage du resultat
    print('\n'.join(map(str, elements_sorted)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183328330516815
    2. '.' → logprob: -2.3368332386016846
    3. '<|end|>' → logprob: -2.8368332386016846
    4. '\' → logprob: -4.711833477020264
    5. 'newline' → logprob: -5.086833477020264
    6. 'import' → logprob: -5.086833477020264
    7. '
' → logprob: -5.711833477020264
    8. '' → logprob: -5.836833477020264
    9. '<|end|>' → logprob: -5.836833477020264
    10. '\r' → logprob: -6.336833477020264

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005605223122984171
    2. '.' → logprob: -5.255605220794678
    3. ' (' → logprob: -9.380605697631836
    4. '(
' → logprob: -9.380605697631836
    5. ')' → logprob: -9.755605697631836
    6. '()' → logprob: -10.005605697631836
    7. '[' → logprob: -11.005605697631836
    8. '('' → logprob: -11.130605697631836
    9. ' ' → logprob: -11.630605697631836
    10. '=' → logprob: -11.755605697631836

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47524699568748474
    2. 'sys' → logprob: -0.9752470254898071
    3. 'input' → logprob: -6.975246906280518
    4. ' input' → logprob: -8.475247383117676
    5. '(sys' → logprob: -11.350247383117676
    6. '=sys' → logprob: -11.975247383117676
    7. '	sys' → logprob: -11.975247383117676
    8. ' ' → logprob: -14.100247383117676
    9. 'system' → logprob: -15.475247383117676
    10. '_sys' → logprob: -15.725247383117676

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005295606097206473
    2. '.readline' → logprob: -8.750529289245605
    3. '.stdin' → logprob: -9.125529289245605
    4. '.import' → logprob: -9.375529289245605
    5. ' .' → logprob: -10.000529289245605
    6. '.input' → logprob: -10.500529289245605
    7. '[' → logprob: -11.250529289245605
    8. '.`' → logprob: -11.625529289245605
    9. '.argv' → logprob: -12.000529289245605
    10. '.user' → logprob: -12.125529289245605

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28699058294296265
    2. '.readline' → logprob: -1.4119906425476074
    3. '.read' → logprob: -5.161990642547607
    4. '```' → logprob: -10.78699016571045
    5. '.Read' → logprob: -11.16199016571045
    6. 'read' → logprob: -11.28699016571045
    7. '.readlines' → logprob: -11.66199016571045
    8. '.\' → logprob: -12.03699016571045
    9. '.

' → logprob: -12.16199016571045
    10. '.
' → logprob: -12.28699016571045

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0249311663210392
    2. '(' → logprob: -4.149930953979492
    3. '()
' → logprob: -5.524930953979492
    4. '
' → logprob: -6.399930953979492
    5. '(
' → logprob: -6.649930953979492
    6. '\n' → logprob: -7.524930953979492
    7. '()\' → logprob: -7.524930953979492
    8. '().' → logprob: -8.149930953979492
    9. '\' → logprob: -8.274930953979492
    10. '()

' → logprob: -9.024930953979492

Token 9: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18116764724254608
    2. '(' → logprob: -1.8061676025390625
    3. '().' → logprob: -6.9311676025390625
    4. '()
' → logprob: -8.806167602539062
    5. '(
' → logprob: -10.056167602539062
    6. '()

' → logprob: -10.431167602539062
    7. ')' → logprob: -10.431167602539062
    8. '#' → logprob: -10.431167602539062
    9. 'def' → logprob: -10.681167602539062
    10. 'a' → logprob: -10.681167602539062

Token 10: ' Probleme' (ID: 59621)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014013531617820263
    2. ' #' → logprob: -5.639013767242432
    3. '#' → logprob: -6.014013767242432
    4. 's' → logprob: -6.389013767242432
    5. 'd' → logprob: -6.764013767242432
    6. 'i' → logprob: -6.764013767242432
    7. 'a' → logprob: -6.889013767242432
    8. 'n' → logprob: -8.014013290405273
    9. 'def' → logprob: -8.389013290405273
    10. 't' → logprob: -8.764013290405273

Token 11: ' :' (ID: 712)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0881100445985794
    2. 's' → logprob: -3.0881099700927734
    3. 'a' → logprob: -4.088109970092773
    4. ':' → logprob: -4.338109970092773
    5. '_' → logprob: -5.963109970092773
    6. '#' → logprob: -6.338109970092773
    7. 'r' → logprob: -6.838109970092773
    8. ' ' → logprob: -7.088109970092773
    9. ')' → logprob: -7.963109970092773
    10. '```' → logprob: -8.088109970092773

Token 12: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022485673427581787
    2. ' #' → logprob: -5.772485733032227
    3. ' """' → logprob: -5.897485733032227
    4. '#' → logprob: -5.897485733032227
    5. 's' → logprob: -6.022485733032227
    6. ''' → logprob: -6.272485733032227
    7. ' "' → logprob: -6.522485733032227
    8. '"' → logprob: -6.647485733032227
    9. '"""' → logprob: -7.522485733032227
    10. ' def' → logprob: -7.772485733032227

Token 13: ' a' (ID: 261)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.076867699623108
    2. 'pe' → logprob: -2.3268675804138184
    3. 'lit' → logprob: -2.3268675804138184
    4. 't' → logprob: -2.4518675804138184
    5. 'ly' → logprob: -2.7018675804138184
    6. 'line' → logprob: -2.9518675804138184
    7. 've' → logprob: -3.3268675804138184
    8. 'l' → logprob: -3.5768675804138184
    9. 'd' → logprob: -3.8268675804138184
    10. 'continue' → logprob: -4.201867580413818

Token 14: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3143562078475952
    2. ' ' → logprob: -2.1893563270568848
    3. ' une' → logprob: -2.3143563270568848
    4. ' des' → logprob: -4.189356327056885
    5. 'un' → logprob: -4.564356327056885
    6. ' besoin' → logprob: -4.689356327056885
    7. 'une' → logprob: -5.314356327056885
    8. ' plusieurs' → logprob: -6.064356327056885
    9. 'n' → logprob: -6.439356327056885
    10. ' reçu' → logprob: -6.689356327056885

Token 15: ' sequence' (ID: 16281)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014098399318754673
    2. ' liste' → logprob: -4.764098167419434
    3. ' chaîne' → logprob: -6.514098167419434
    4. 'liste' → logprob: -7.139098167419434
    5. 'chaine' → logprob: -7.764098167419434
    6. ' string' → logprob: -8.014098167419434
    7. 'fonction' → logprob: -8.139098167419434
    8. ' chaine' → logprob: -8.514098167419434
    9. ' solution' → logprob: -8.639098167419434
    10. ' ligne' → logprob: -8.639098167419434

Token 16: ' initial' (ID: 4871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10761568695306778
    2. '_' → logprob: -2.3576157093048096
    3. '\' → logprob: -6.8576154708862305
    4. ' \' → logprob: -6.8576154708862305
    5. 's' → logprob: -6.9826154708862305
    6. ',' → logprob: -7.1076154708862305
    7. ' ,' → logprob: -7.3576154708862305
    8. ''' → logprob: -7.7326154708862305
    9. ' de' → logprob: -8.10761547088623
    10. ' _' → logprob: -8.10761547088623

Token 17: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1790953278541565
    2. ' ' → logprob: -2.0540952682495117
    3. '_' → logprob: -3.8040952682495117
    4. ',' → logprob: -4.804095268249512
    5. 'u' → logprob: -6.304095268249512
    6. 's' → logprob: -6.429095268249512
    7. ' ,' → logprob: -8.054095268249512
    8. ' e' → logprob: -8.179095268249512
    9. '  ' → logprob: -8.929095268249512
    10. 'n' → logprob: -9.179095268249512

Token 18: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18526223301887512
    2. ',' → logprob: -1.9352622032165527
    3. ' ,' → logprob: -3.9352622032165527
    4. 's' → logprob: -6.560262203216553
    5. '.' → logprob: -6.935262203216553
    6. '_' → logprob: -7.435262203216553
    7. '  ' → logprob: -7.560262203216553
    8. '<|end|>' → logprob: -8.060262680053711
    9. ' (' → logprob: -8.810262680053711
    10. ' de' → logprob: -8.935262680053711

Token 19: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2112049162387848
    2. ' )' → logprob: -1.7112048864364624
    3. ',' → logprob: -5.461205005645752
    4. ' de' → logprob: -6.086205005645752
    5. 'a' → logprob: -7.211205005645752
    6. ' ' → logprob: -7.461205005645752
    7. 'de' → logprob: -7.711205005645752
    8. 's' → logprob: -8.086204528808594
    9. ' ,' → logprob: -8.586204528808594
    10. 'd' → logprob: -8.836204528808594

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4356783926486969
    2. ')' → logprob: -1.3106783628463745
    3. ' )' → logprob: -3.185678482055664
    4. ' à' → logprob: -4.435678482055664
    5. ' ,' → logprob: -4.560678482055664
    6. ' ' → logprob: -5.060678482055664
    7. '_' → logprob: -5.810678482055664
    8. '0' → logprob: -6.060678482055664
    9. ',)' → logprob: -6.435678482055664
    10. '-' → logprob: -7.060678482055664

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20640549063682556
    2. '2' → logprob: -1.706405520439148
    3. ',' → logprob: -6.3314056396484375
    4. '  ' → logprob: -6.4564056396484375
    5. ' ,' → logprob: -6.9564056396484375
    6. ' ),' → logprob: -8.706405639648438
    7. ' )' → logprob: -8.831405639648438
    8. ')' → logprob: -9.456405639648438
    9. '0' → logprob: -9.831405639648438
    10. '1' → logprob: -10.081405639648438

Token 22: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.031566958874464035
    2. ' ' → logprob: -3.656566858291626
    3. '1' → logprob: -5.906567096710205
    4. '3' → logprob: -6.906567096710205
    5. '4' → logprob: -7.531567096710205
    6. ')' → logprob: -7.781567096710205
    7. ',' → logprob: -8.656566619873047
    8. '0' → logprob: -9.531566619873047
    9. '5' → logprob: -9.531566619873047
    10. '...' → logprob: -9.781566619873047

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009287334396503866
    2. '3' → logprob: -7.50092887878418
    3. ' ,' → logprob: -8.00092887878418
    4. ')' → logprob: -10.87592887878418
    5. '),' → logprob: -11.87592887878418
    6. ',...' → logprob: -12.87592887878418
    7. '1' → logprob: -13.00092887878418
    8. ' ' → logprob: -13.25092887878418
    9. '...' → logprob: -13.25092887878418
    10. '4' → logprob: -13.37592887878418

Token 24: ' ...,' (ID: 126708)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5352616310119629
    2. '3' → logprob: -0.9102616310119629
    3. ' ,' → logprob: -5.160261631011963
    4. ',' → logprob: -5.410261631011963
    5. '...' → logprob: -7.160261631011963
    6. ' ...' → logprob: -8.160261154174805
    7. ')' → logprob: -8.535261154174805
    8. ' )' → logprob: -8.660261154174805
    9. '...,' → logprob: -9.285261154174805
    10. ' ' → logprob: -9.535261154174805

Token 25: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04575178399682045
    2. ' n' → logprob: -3.4207518100738525
    3. 'N' → logprob: -4.545751571655273
    4. ')' → logprob: -7.295751571655273
    5. ' N' → logprob: -8.295751571655273
    6. ',' → logprob: -9.045751571655273
    7. '3' → logprob: -9.420751571655273
    8. ')n' → logprob: -9.545751571655273
    9. '10' → logprob: -9.795751571655273
    10. ' ' → logprob: -10.170751571655273

Token 26: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022320532298181206
    2. ',' → logprob: -9.375223159790039
    3. ' )' → logprob: -9.750223159790039
    4. 'n' → logprob: -10.375223159790039
    5. ')
' → logprob: -11.250223159790039
    6. '')' → logprob: -12.000223159790039
    7. '#' → logprob: -12.125223159790039
    8. ')\' → logprob: -12.375223159790039
    9. ')
' → logprob: -13.125223159790039
    10. ')

' → logprob: -13.125223159790039

Token 27: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5649957060813904
    2. 'n' → logprob: -1.3149957656860352
    3. ')' → logprob: -2.814995765686035
    4. ',' → logprob: -3.814995765686035
    5. '
' → logprob: -3.814995765686035
    6. '\n' → logprob: -4.314995765686035
    7. '\' → logprob: -4.439995765686035
    8. '#' → logprob: -4.689995765686035
    9. '```' → logprob: -5.564995765686035
    10. ' ' → logprob: -6.189995765686035

Token 28: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7870165109634399
    2. ' n' → logprob: -1.91201651096344
    3. 'def' → logprob: -1.91201651096344
    4. '#' → logprob: -2.5370163917541504
    5. 'On' → logprob: -2.6620163917541504
    6. ' On' → logprob: -3.4120163917541504
    7. 'Ens' → logprob: -4.41201639175415
    8. ' #' → logprob: -4.78701639175415
    9. 'La' → logprob: -4.91201639175415
    10. ' def' → logprob: -5.16201639175415

Token 29: ' reco' (ID: 106387)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.9415338635444641
    2. 'a' → logprob: -1.5665338039398193
    3. 've' → logprob: -2.1915338039398193
    4. ' souhaite' → logprob: -2.3165338039398193
    5. ' a' → logprob: -2.6915338039398193
    6. ' doit' → logprob: -3.0665338039398193
    7. 'do' → logprob: -3.8165338039398193
    8. 'veux' → logprob: -4.816534042358398
    9. ' ' → logprob: -5.691534042358398
    10. 'va' → logprob: -5.816534042358398

Token 30: 'it' (ID: 278)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2478518784046173
    2. 'it' → logprob: -1.622851848602295
    3. 'nt' → logprob: -4.747851848602295
    4. 'mp' → logprob: -5.497851848602295
    5. 'm' → logprob: -5.997851848602295
    6. 'nv' → logprob: -6.122851848602295
    7. 'nd' → logprob: -6.747851848602295
    8. 'nn' → logprob: -7.622851848602295
    9. 'rd' → logprob: -7.622851848602295
    10. 'i' → logprob: -7.622851848602295

Token 31: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12566931545734406
    2. ' des' → logprob: -2.625669240951538
    3. ' une' → logprob: -3.875669240951538
    4. ' un' → logprob: -4.000669479370117
    5. ' a' → logprob: -5.875669479370117
    6. ' la' → logprob: -7.000669479370117
    7. 'des' → logprob: -7.625669479370117
    8. ' l' → logprob: -7.875669479370117
    9. ' plusieurs' → logprob: -7.875669479370117
    10. ' n' → logprob: -7.875669479370117

Token 32: ' requ' (ID: 7028)
  Prédit: ' instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instructions' → logprob: -1.567903995513916
    2. ' ' → logprob: -1.692903995513916
    3. ' opérations' → logprob: -1.942903995513916
    4. ' operations' → logprob: -2.192903995513916
    5. ' requ' → logprob: -2.567903995513916
    6. ' des' → logprob: -2.692903995513916
    7. ' commandes' → logprob: -2.692903995513916
    8. ' demandes' → logprob: -3.067903995513916
    9. 'instructions' → logprob: -4.067903995513916
    10. 'operations' → logprob: -4.192903995513916

Token 33: 'etes' (ID: 30200)
  Prédit: 'êtes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.3133847415447235
    2. 'etes' → logprob: -1.313384771347046
    3. 'et' → logprob: -10.438385009765625
    4. 'ê' → logprob: -10.688385009765625
    5. 'ête' → logprob: -11.563385009765625
    6. 'ètes' → logprob: -11.563385009765625
    7. '#' → logprob: -11.688385009765625
    8. '?' → logprob: -11.938385009765625
    9. '�' → logprob: -12.313385009765625
    10. '^' → logprob: -12.313385009765625

Token 34: ' indiqu' (ID: 100773)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.118912935256958
    2. 's' → logprob: -1.368912935256958
    3. ',' → logprob: -1.868912935256958
    4. '\' → logprob: -1.993912935256958
    5. '\n' → logprob: -3.368912935256958
    6. ':' → logprob: -3.743912935256958
    7. '#' → logprob: -4.118912696838379
    8. '.
' → logprob: -4.743912696838379
    9. ',
' → logprob: -4.993912696838379
    10. '```' → logprob: -5.493912696838379

Token 35: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00027134892297908664
    2. 'ent' → logprob: -9.125271797180176
    3. 'e' → logprob: -9.250271797180176
    4. 'er' → logprob: -10.250271797180176
    5. '#' → logprob: -10.875271797180176
    6. 'a' → logprob: -12.250271797180176
    7. ' ant' → logprob: -13.500271797180176
    8. '```' → logprob: -13.750271797180176
    9. 'antt' → logprob: -14.625271797180176
    10. '   ' → logprob: -14.625271797180176

Token 36: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8151992559432983
    2. ' ' → logprob: -2.065199375152588
    3. ' le' → logprob: -2.190199375152588
    4. 's' → logprob: -2.190199375152588
    5. '<|end|>' → logprob: -3.190199375152588
    6. 'le' → logprob: -3.815199375152588
    7. ' l' → logprob: -4.190199375152588
    8. ' quelle' → logprob: -4.440199375152588
    9. ' quelles' → logprob: -4.440199375152588
    10. '  ' → logprob: -4.440199375152588

Token 37: ' element' (ID: 3577)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6836928725242615
    2. ' déplacement' → logprob: -1.9336929321289062
    3. 'élé' → logprob: -2.5586929321289062
    4. ' élément' → logprob: -3.0586929321289062
    5. ' nombre' → logprob: -3.1836929321289062
    6. 'a' → logprob: -3.5586929321289062
    7. 'element' → logprob: -3.6836929321289062
    8. ' element' → logprob: -4.183692932128906
    9. ' indice' → logprob: -4.183692932128906
    10. ' changement' → logprob: -4.183692932128906

Token 38: ' e' (ID: 319)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4362213909626007
    2. 's' → logprob: -1.8112213611602783
    3. ' à' → logprob: -2.8112213611602783
    4. ''' → logprob: -3.3112213611602783
    5. ',' → logprob: -3.5612213611602783
    6. ' '' → logprob: -4.936221599578857
    7. ' ,' → logprob: -4.936221599578857
    8. ' a' → logprob: -5.061221599578857
    9. 'u' → logprob: -5.186221599578857
    10. ''s' → logprob: -5.436221599578857

Token 39: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3832798898220062
    2. ' ' → logprob: -2.008279800415039
    3. ' ,' → logprob: -3.383279800415039
    4. 's' → logprob: -3.508279800415039
    5. 'x' → logprob: -3.633279800415039
    6. 'n' → logprob: -3.883279800415039
    7. ' de' → logprob: -4.883279800415039
    8. 'm' → logprob: -5.008279800415039
    9. '_' → logprob: -5.008279800415039
    10. ' et' → logprob: -5.383279800415039

Token 40: ' a' (ID: 261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.95066237449646
    2. ''' → logprob: -1.45066237449646
    3. 's' → logprob: -1.57566237449646
    4. ' ' → logprob: -3.20066237449646
    5. ' ,' → logprob: -4.075662612915039
    6. ')' → logprob: -4.325662612915039
    7. ' '' → logprob: -4.325662612915039
    8. ' de' → logprob: -4.575662612915039
    9. ' qui' → logprob: -4.825662612915039
    10. 'u' → logprob: -4.950662612915039

Token 41: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.3592690229415894
    2. ' supprimer' → logprob: -1.7342690229415894
    3. ' déplacer' → logprob: -2.359269142150879
    4. 'placer' → logprob: -2.609269142150879
    5. ' retirer' → logprob: -2.984269142150879
    6. 'mettre' → logprob: -3.109269142150879
    7. ' ins' → logprob: -3.609269142150879
    8. 'sup' → logprob: -3.609269142150879
    9. ' enlever' → logprob: -3.609269142150879
    10. ' mettre' → logprob: -3.984269142150879

Token 42: 'placer' (ID: 58807)
  Prédit: 'placer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.002036775927990675
    2. 'place' → logprob: -6.7520365715026855
    3. 'caler' → logprob: -7.3770365715026855
    4. 'placement' → logprob: -9.377037048339844
    5. 'plac' → logprob: -9.502037048339844
    6. 'pla' → logprob: -10.502037048339844
    7. ' placer' → logprob: -11.627037048339844
    8. '```' → logprob: -12.002037048339844
    9. 'pl' → logprob: -12.502037048339844
    10. '#' → logprob: -12.627037048339844

Token 43: ' en' (ID: 469)
  Prédit: ' vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.9555999636650085
    2. ' ' → logprob: -2.0806000232696533
    3. 's' → logprob: -2.7056000232696533
    4. ',' → logprob: -2.7056000232696533
    5. '<|end|>' → logprob: -2.9556000232696533
    6. ' au' → logprob: -3.0806000232696533
    7. '_' → logprob: -3.2056000232696533
    8. ' dans' → logprob: -3.3306000232696533
    9. ' à' → logprob: -3.5806000232696533
    10. ' devant' → logprob: -3.7056000232696533

Token 44: ' tete' (ID: 159380)
  Prédit: ' tête'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tête' → logprob: -0.5823037028312683
    2. ' ' → logprob: -1.207303762435913
    3. 't' → logprob: -3.332303762435913
    4. 'prem' → logprob: -3.707303762435913
    5. ' tete' → logprob: -3.957303762435913
    6. ' t' → logprob: -4.082303524017334
    7. ' position' → logprob: -4.332303524017334
    8. ' debut' → logprob: -4.957303524017334
    9. ' début' → logprob: -5.082303524017334
    10. ' première' → logprob: -5.582303524017334

Token 45: ' de' (ID: 334)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9902759790420532
    2. '\' → logprob: -1.1152759790420532
    3. '#' → logprob: -1.6152759790420532
    4. '.' → logprob: -3.7402758598327637
    5. '
' → logprob: -4.115275859832764
    6. ',' → logprob: -4.115275859832764
    7. 'def' → logprob: -4.990275859832764
    8. ' 
' → logprob: -5.365275859832764
    9. '' → logprob: -5.615275859832764
    10. ',
' → logprob: -5.615275859832764

Token 46: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6537903547286987
    2. ' la' → logprob: -0.7787903547286987
    3. 'l' → logprob: -4.153790473937988
    4. ' sequence' → logprob: -6.278790473937988
    5. 'sequence' → logprob: -6.653790473937988
    6. 'liste' → logprob: -7.528790473937988
    7. ' liste' → logprob: -7.903790473937988
    8. ' l' → logprob: -8.153790473937988
    9. ' ' → logprob: -8.278790473937988
    10. '```' → logprob: -8.778790473937988

Token 47: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.22600969672203064
    2. ' liste' → logprob: -2.2260096073150635
    3. 'sequence' → logprob: -3.2260096073150635
    4. 'liste' → logprob: -3.8510096073150635
    5. ' ' → logprob: -4.351009845733643
    6. 's' → logprob: -4.851009845733643
    7. ' file' → logprob: -5.601009845733643
    8. ' list' → logprob: -5.726009845733643
    9. ' sé' → logprob: -7.226009845733643
    10. 'list' → logprob: -7.226009845733643

Token 48: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6574224829673767
    2. 'n' → logprob: -0.9074224829673767
    3. '#' → logprob: -3.9074225425720215
    4. '
' → logprob: -4.4074225425720215
    5. '\n' → logprob: -4.4074225425720215
    6. '```' → logprob: -4.4074225425720215
    7. '

' → logprob: -4.7824225425720215
    8. '\' → logprob: -4.9074225425720215
    9. 's' → logprob: -6.4074225425720215
    10. 'e' → logprob: -7.0324225425720215

Token 49: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2552579641342163
    2. 'n' → logprob: -1.5052579641342163
    3. '```' → logprob: -7.005258083343506
    4. '#' → logprob: -7.255258083343506
    5. 'for' → logprob: -7.880258083343506
    6. '\' → logprob: -7.880258083343506
    7. '\n' → logprob: -7.880258083343506
    8. '
' → logprob: -8.380257606506348
    9. '

' → logprob: -9.880257606506348
    10. 's' → logprob: -10.130257606506348

Token 50: ' Il' (ID: 5329)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2785240113735199
    2. 'def' → logprob: -1.5285240411758423
    3. '#' → logprob: -4.278523921966553
    4. '\' → logprob: -5.528523921966553
    5. '```' → logprob: -6.153523921966553
    6. '\n' → logprob: -6.278523921966553
    7. 'e' → logprob: -7.278523921966553
    8. 'd' → logprob: -7.278523921966553
    9. 'a' → logprob: -7.278523921966553
    10. 'for' → logprob: -7.528523921966553

Token 51: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.2177552431821823
    2. 'f' → logprob: -2.3427553176879883
    3. 's' → logprob: -2.5927553176879883
    4. ' faudra' → logprob: -4.467755317687988
    5. ' faudrait' → logprob: -4.842755317687988
    6. ''' → logprob: -6.467755317687988
    7. ' manque' → logprob: -6.592755317687988
    8. ' s' → logprob: -7.342755317687988
    9. 'est' → logprob: -8.217755317687988
    10. ' faud' → logprob: -8.717755317687988

Token 52: ' appliquer' (ID: 172872)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.8214796781539917
    2. 'mettre' → logprob: -2.0714797973632812
    3. 'tr' → logprob: -2.5714797973632812
    4. ' mettre' → logprob: -3.3214797973632812
    5. 'impl' → logprob: -3.5714797973632812
    6. 'sim' → logprob: -3.5714797973632812
    7. ' maintenir' → logprob: -4.071479797363281
    8. ' trouver' → logprob: -4.196479797363281
    9. 'implement' → logprob: -4.446479797363281
    10. ' pouvoir' → logprob: -4.696479797363281

Token 53: ' en' (ID: 469)
  Prédit: ' ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ces' → logprob: -1.1112377643585205
    2. ' chacune' → logprob: -1.8612377643585205
    3. ' chaque' → logprob: -1.8612377643585205
    4. ' les' → logprob: -1.9862377643585205
    5. ' la' → logprob: -2.2362377643585205
    6. ' ' → logprob: -2.7362377643585205
    7. ' l' → logprob: -4.236237525939941
    8. 'ces' → logprob: -4.861237525939941
    9. ' each' → logprob: -5.236237525939941
    10. ' toutes' → logprob: -5.236237525939941

Token 54: ' ordre' (ID: 103061)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.09115412831306458
    2. 't' → logprob: -4.091154098510742
    3. 'cha' → logprob: -4.091154098510742
    4. 'temps' → logprob: -4.841154098510742
    5. 'chain' → logprob: -5.091154098510742
    6. 'code' → logprob: -5.091154098510742
    7. 'chaine' → logprob: -5.341154098510742
    8. '```' → logprob: -5.466154098510742
    9. 'place' → logprob: -5.591154098510742
    10. 'semble' → logprob: -5.841154098510742

Token 55: ' toutes' (ID: 17502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.929284930229187
    2. ' les' → logprob: -1.179284930229187
    3. ' la' → logprob: -2.3042850494384766
    4. ' chaque' → logprob: -3.0542850494384766
    5. 's' → logprob: -3.5542850494384766
    6. '<|end|>' → logprob: -3.8042850494384766
    7. ' le' → logprob: -4.554285049438477
    8. ' chacune' → logprob: -4.804285049438477
    9. ',' → logprob: -4.929285049438477
    10. ' l' → logprob: -5.054285049438477

Token 56: ' ces' (ID: 10532)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.035501591861248016
    2. ' ' → logprob: -3.535501480102539
    3. 'les' → logprob: -5.910501480102539
    4. 's' → logprob: -7.535501480102539
    5. '<|end|>' → logprob: -7.660501480102539
    6. ' celles' → logprob: -7.910501480102539
    7. ' ces' → logprob: -8.035501480102539
    8. ' leurs' → logprob: -8.535501480102539
    9. ' l' → logprob: -8.535501480102539
    10. '  ' → logprob: -8.785501480102539

Token 57: ' requ' (ID: 7028)
  Prédit: ' requ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' requ' → logprob: -0.30796724557876587
    2. ' ' → logprob: -2.307967185974121
    3. ' operations' → logprob: -2.932967185974121
    4. ' modifications' → logprob: -3.057967185974121
    5. ' opérations' → logprob: -3.682967185974121
    6. ' ' → logprob: -3.932967185974121
    7. ' manip' → logprob: -5.057967185974121
    8. ' transformations' → logprob: -6.182967185974121
    9. ' instructions' → logprob: -6.307967185974121
    10. ' demandes' → logprob: -6.432967185974121

Token 58: 'etes' (ID: 30200)
  Prédit: 'etes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etes' → logprob: -0.0021104090847074986
    2. 'êtes' → logprob: -6.252110481262207
    3. 'et' → logprob: -9.502110481262207
    4. 'es' → logprob: -9.752110481262207
    5. 'ete' → logprob: -10.627110481262207
    6. 'e' → logprob: -11.502110481262207
    7. 'tes' → logprob: -13.002110481262207
    8. 'entes' → logprob: -13.252110481262207
    9. '\' → logprob: -13.502110481262207
    10. '?' → logprob: -13.502110481262207

Token 59: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21570998430252075
    2. 'def' → logprob: -2.215709924697876
    3. '#' → logprob: -2.715709924697876
    4. '\' → logprob: -4.840710163116455
    5. '
' → logprob: -4.965710163116455
    6. 'd' → logprob: -7.215710163116455
    7. '```' → logprob: -7.340710163116455
    8. '\n' → logprob: -7.590710163116455
    9. '

' → logprob: -7.715710163116455
    10. '' → logprob: -8.090709686279297

Token 60: ' afficher' (ID: 146524)
  Prédit: ' afficher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.06553257256746292
    2. ' impr' → logprob: -3.065532684326172
    3. 'aff' → logprob: -4.690532684326172
    4. ' print' → logprob: -5.940532684326172
    5. ' output' → logprob: -6.440532684326172
    6. ' affich' → logprob: -7.065532684326172
    7. 'print' → logprob: -7.565532684326172
    8. ' aff' → logprob: -7.940532684326172
    9. ' calcul' → logprob: -8.065532684326172
    10. ' produire' → logprob: -8.815532684326172

Token 61: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08412059396505356
    2. ' l' → logprob: -3.209120512008667
    3. ' ' → logprob: -3.709120512008667
    4. 'l' → logprob: -5.209120750427246
    5. 'la' → logprob: -5.209120750427246
    6. ' le' → logprob: -5.959120750427246
    7. ' ' → logprob: -7.334120750427246
    8. ' len' → logprob: -7.834120750427246
    9. 'le' → logprob: -8.584120750427246
    10. '```' → logprob: -8.709120750427246

Token 62: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.061164338141679764
    2. ' ' → logprob: -3.686164379119873
    3. 'sequence' → logprob: -4.436164379119873
    4. ' sé' → logprob: -4.936164379119873
    5. ' sequ' → logprob: -5.061164379119873
    6. 's' → logprob: -5.936164379119873
    7. ' final' → logprob: -6.186164379119873
    8. ' s' → logprob: -6.811164379119873
    9. ' solution' → logprob: -7.686164379119873
    10. 'sé' → logprob: -7.936164379119873

Token 63: ' finale' (ID: 37759)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004042902495712042
    2. 'def' → logprob: -5.879043102264404
    3. '#' → logprob: -7.879043102264404
    4. '\' → logprob: -7.879043102264404
    5. '
' → logprob: -8.879042625427246
    6. '```' → logprob: -8.879042625427246
    7. '\n' → logprob: -9.254042625427246
    8. '(n' → logprob: -10.879042625427246
    9. 'd' → logprob: -11.254042625427246
    10. '' → logprob: -11.254042625427246

Token 64: '.

' (ID: 364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01535338070243597
    2. 'def' → logprob: -4.515353202819824
    3. '#' → logprob: -6.015353202819824
    4. '
' → logprob: -7.015353202819824
    5. '\' → logprob: -7.515353202819824
    6. '```' → logprob: -8.765353202819824
    7. '\n' → logprob: -10.015353202819824
    8. 'd' → logprob: -10.015353202819824
    9. 'a' → logprob: -10.765353202819824
    10. '(n' → logprob: -10.765353202819824

Token 65: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015321242390200496
    2. 'def' → logprob: -6.501532077789307
    3. '#' → logprob: -11.001532554626465
    4. '\' → logprob: -12.126532554626465
    5. '```' → logprob: -12.376532554626465
    6. '
' → logprob: -13.501532554626465
    7. 'd' → logprob: -14.251532554626465
    8. '\n' → logprob: -14.876532554626465
    9. 'import' → logprob: -14.876532554626465
    10. '

' → logprob: -15.376532554626465

Token 66: ' Contra' (ID: 98337)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006773276720196009
    2. 'def' → logprob: -5.006773471832275
    3. '#' → logprob: -9.881772994995117
    4. 'from' → logprob: -12.506772994995117
    5. 'd' → logprob: -13.256772994995117
    6. '```' → logprob: -14.131772994995117
    7. 'import' → logprob: -15.631772994995117
    8. ' n' → logprob: -15.756772994995117
    9. 'class' → logprob: -16.006772994995117
    10. '\' → logprob: -16.256772994995117

Token 67: 'intes' (ID: 72455)
  Prédit: 'intes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intes' → logprob: -0.4354482889175415
    2. 'ints' → logprob: -1.8104482889175415
    3. 'int' → logprob: -2.435448169708252
    4. 'i' → logprob: -3.060448169708252
    5. 'inte' → logprob: -3.685448169708252
    6. '#' → logprob: -4.185448169708252
    7. 'in' → logprob: -5.310448169708252
    8. 'irement' → logprob: -6.685448169708252
    9. 'nte' → logprob: -6.685448169708252
    10. '\' → logprob: -7.310448169708252

Token 68: ' fortes' (ID: 78478)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5214824080467224
    2. ' :' → logprob: -1.0214824676513672
    3. 'n' → logprob: -3.896482467651367
    4. '#' → logprob: -4.646482467651367
    5. ' ' → logprob: -5.021482467651367
    6. ',' → logprob: -6.021482467651367
    7. 's' → logprob: -6.396482467651367
    8. ''' → logprob: -6.521482467651367
    9. '_' → logprob: -7.146482467651367
    10. ' n' → logprob: -7.146482467651367

Token 69: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0026015799958258867
    2. ' n' → logprob: -6.627601623535156
    3. '#' → logprob: -7.502601623535156
    4. '\n' → logprob: -8.502601623535156
    5. 'import' → logprob: -9.002601623535156
    6. '\' → logprob: -9.127601623535156
    7. '```' → logprob: -9.627601623535156
    8. '
' → logprob: -9.627601623535156
    9. '' → logprob: -10.377601623535156
    10. '_n' → logprob: -10.877601623535156

Token 70: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4843391180038452
    2. ' n' → logprob: -1.1093391180038452
    3. '10' → logprob: -3.2343392372131348
    4. ' ' → logprob: -4.859339237213135
    5. '1' → logprob: -5.234339237213135
    6. ')' → logprob: -7.734339237213135
    7. ' ' → logprob: -8.609338760375977
    8. 'import' → logprob: -8.859338760375977
    9. '\n' → logprob: -9.109338760375977
    10. ' )' → logprob: -9.359338760375977

Token 71: ' jusqu' (ID: 21961)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3818839490413666
    2. ',' → logprob: -1.256883978843689
    3. ' =' → logprob: -4.1318840980529785
    4. '<=' → logprob: -4.7568840980529785
    5. ' <=' → logprob: -6.3818840980529785
    6. ' ,' → logprob: -6.6318840980529785
    7. '10' → logprob: -6.7568840980529785
    8. ')' → logprob: -6.7568840980529785
    9. '100' → logprob: -7.8818840980529785
    10. ' ' → logprob: -8.00688362121582

Token 72: ''a' (ID: 10443)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.48177090287208557
    2. 'à' → logprob: -1.2317708730697632
    3. ' à' → logprob: -2.9817709922790527
    4. 'a' → logprob: -3.9817709922790527
    5. '’à' → logprob: -4.356770992279053
    6. '=' → logprob: -5.356770992279053
    7. ' ' → logprob: -7.106770992279053
    8. ' a' → logprob: -7.356770992279053
    9. ''a' → logprob: -7.606770992279053
    10. '100' → logprob: -7.731770992279053

Token 73: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10686308145523071
    2. '100' → logprob: -2.481863021850586
    3. '200' → logprob: -5.106863021850586
    4. '2' → logprob: -5.356863021850586
    5. '500' → logprob: -6.356863021850586
    6. '1' → logprob: -6.481863021850586
    7. '300' → logprob: -6.481863021850586
    8. '5' → logprob: -7.356863021850586
    9. ' ' → logprob: -7.356863021850586
    10. '3' → logprob: -7.981863021850586

Token 74: '200' (ID: 1179)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05134796351194382
    2. '100' → logprob: -3.1763479709625244
    3. '200' → logprob: -5.426347732543945
    4. '2' → logprob: -5.926347732543945
    5. '500' → logprob: -7.926347732543945
    6. '1' → logprob: -8.051347732543945
    7. '300' → logprob: -8.301347732543945
    8. '5' → logprob: -8.426347732543945
    9. '3' → logprob: -9.926347732543945
    10. '250' → logprob: -11.426347732543945

Token 75: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.013346095569431782
    2. '0' → logprob: -4.638346195220947
    3. ' ' → logprob: -6.388346195220947
    4. ')' → logprob: -6.638346195220947
    5. '00' → logprob: -7.513346195220947
    6. ' )' → logprob: -11.138345718383789
    7. ' ' → logprob: -11.513345718383789
    8. '_' → logprob: -11.763345718383789
    9. 'e' → logprob: -12.638345718383789
    10. '  ' → logprob: -13.013345718383789

Token 76: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023586407769471407
    2. '0' → logprob: -6.252358436584473
    3. ',' → logprob: -8.252358436584473
    4. ' )' → logprob: -9.127358436584473
    5. ')
' → logprob: -11.252358436584473
    6. ')n' → logprob: -11.252358436584473
    7. '#' → logprob: -11.877358436584473
    8. '):' → logprob: -12.002358436584473
    9. 'n' → logprob: -12.502358436584473
    10. ')\' → logprob: -13.252358436584473

Token 77: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.28124159574508667
    2. ' m' → logprob: -1.4062416553497314
    3. ' ' → logprob: -10.906241416931152
    4. ' ' → logprob: -11.156241416931152
    5. ')' → logprob: -11.843741416931152
    6. 't' → logprob: -12.031241416931152
    7. 'M' → logprob: -12.281241416931152
    8. ' t' → logprob: -12.843741416931152
    9. '  ' → logprob: -12.968741416931152
    10. 'n' → logprob: -12.968741416931152

Token 78: ' jusqu' (ID: 21961)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6498968601226807
    2. ' up' → logprob: -1.6498968601226807
    3. ' =' → logprob: -1.6498968601226807
    4. ' jusqu' → logprob: -2.5248968601226807
    5. 'up' → logprob: -5.149896621704102
    6. ' ' → logprob: -5.274896621704102
    7. ' jusque' → logprob: -7.399896621704102
    8. '  ' → logprob: -7.899896621704102
    9. 's' → logprob: -8.024896621704102
    10. '<=' → logprob: -9.024896621704102

Token 79: ''a' (ID: 10443)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.002313334261998534
    2. 'à' → logprob: -6.377313137054443
    3. ''a' → logprob: -8.377313613891602
    4. ''' → logprob: -8.377313613891602
    5. '’à' → logprob: -9.377313613891602
    6. 'a' → logprob: -9.877313613891602
    7. ''au' → logprob: -12.002313613891602
    8. '```' → logprob: -12.252313613891602
    9. ' à' → logprob: -14.002313613891602
    10. '`' → logprob: -14.002313613891602

Token 80: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.16059575974941254
    2. ' ' → logprob: -1.9105957746505737
    3. '300' → logprob: -8.660595893859863
    4. '100' → logprob: -9.660595893859863
    5. '500' → logprob: -10.160595893859863
    6. '400' → logprob: -10.285595893859863
    7. '  ' → logprob: -10.785595893859863
    8. '2' → logprob: -11.160595893859863
    9. '250' → logprob: -11.785595893859863
    10. '20' → logprob: -12.410595893859863

Token 81: '100' (ID: 1353)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0009431460639461875
    2. '300' → logprob: -7.875943183898926
    3. '100' → logprob: -8.000943183898926
    4. '500' → logprob: -9.250943183898926
    5. '2' → logprob: -10.000943183898926
    6. ' ' → logprob: -10.125943183898926
    7. '400' → logprob: -10.875943183898926
    8. '10' → logprob: -11.500943183898926
    9. '20' → logprob: -12.250943183898926
    10. '250' → logprob: -12.625943183898926

Token 82: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0052284253761172295
    2. '0' → logprob: -5.630228519439697
    3. '00' → logprob: -6.505228519439697
    4. ' ' → logprob: -9.755228042602539
    5. '001' → logprob: -11.255228042602539
    6. ')' → logprob: -11.505228042602539
    7. '003' → logprob: -11.505228042602539
    8. '4' → logprob: -11.755228042602539
    9. '3' → logprob: -12.005228042602539
    10. ''' → logprob: -12.692728042602539

Token 83: ')
' (ID: 446)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.633391261100769
    2. ')' → logprob: -0.758391261100769
    3. ')
' → logprob: -7.883391380310059
    4. ' )' → logprob: -8.508391380310059
    5. '000' → logprob: -9.008391380310059
    6. '```' → logprob: -10.633391380310059
    7. ')

' → logprob: -11.133391380310059
    8. '00' → logprob: -11.758391380310059
    9. '\n' → logprob: -11.883391380310059
    10. ',' → logprob: -11.883391380310059

Token 84: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013650353066623211
    2. 'd' → logprob: -5.013650417327881
    3. '#' → logprob: -6.013650417327881
    4. 'def' → logprob: -6.138650417327881
    5. '\' → logprob: -7.013650417327881
    6. 'import' → logprob: -8.263649940490723
    7. 'class' → logprob: -8.388649940490723
    8. 'a' → logprob: -8.388649940490723
    9. '```' → logprob: -8.513649940490723
    10. 'from' → logprob: -9.013649940490723

Token 85: ' =>' (ID: 871)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5263179540634155
    2. 'from' → logprob: -1.4013179540634155
    3. 'class' → logprob: -2.651318073272705
    4. 'def' → logprob: -2.776318073272705
    5. 'import' → logprob: -3.651318073272705
    6. '#' → logprob: -5.901318073272705
    7. ' from' → logprob: -7.651318073272705
    8. ' class' → logprob: -8.151317596435547
    9. ' n' → logprob: -8.651317596435547
    10. 'max' → logprob: -9.151317596435547

Token 86: ' un' (ID: 537)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.29552799463272095
    2. '#' → logprob: -2.295527935028076
    3. 'import' → logprob: -3.045527935028076
    4. 'Fen' → logprob: -3.045527935028076
    5. ' from' → logprob: -4.045527935028076
    6. 'Util' → logprob: -4.920527935028076
    7. ' utiliser' → logprob: -5.045527935028076
    8. ' Fen' → logprob: -5.295527935028076
    9. 'bis' → logprob: -5.420527935028076
    10. 'util' → logprob: -5.545527935028076

Token 87: ' simple' (ID: 4705)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8302557468414307
    2. 'e' → logprob: -0.8302557468414307
    3. ' alg' → logprob: -3.9552557468414307
    4. ' algorithm' → logprob: -4.205255508422852
    5. ' a' → logprob: -4.705255508422852
    6. 'ion' → logprob: -4.705255508422852
    7. ' code' → logprob: -5.080255508422852
    8. ' e' → logprob: -5.267755508422852
    9. ' ordre' → logprob: -5.455255508422852
    10. ' log' → logprob: -5.642755508422852

Token 88: ' de' (ID: 334)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.5388308167457581
    2. ' for' → logprob: -2.0388307571411133
    3. ' array' → logprob: -2.6638307571411133
    4. 'for' → logprob: -3.1638307571411133
    5. ' list' → logprob: -3.4138307571411133
    6. ' table' → logprob: -3.7888307571411133
    7. 'list' → logprob: -4.163830757141113
    8. 'table' → logprob: -4.413830757141113
    9. ' trie' → logprob: -4.538830757141113
    10. ' set' → logprob: -4.663830757141113

Token 89: 'placement' (ID: 17947)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.02384827844798565
    2. 'q' → logprob: -4.898848056793213
    3. 'qu' → logprob: -5.398848056793213
    4. 'p' → logprob: -5.648848056793213
    5. 'f' → logprob: -6.398848056793213
    6. 'n' → logprob: -7.148848056793213
    7. 'ques' → logprob: -7.148848056793213
    8. 'c' → logprob: -7.273848056793213
    9. '```' → logprob: -7.398848056793213
    10. 'ck' → logprob: -7.898848056793213

Token 90: ' O' (ID: 532)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3114982545375824
    2. ' de' → logprob: -2.0614981651306152
    3. 's' → logprob: -2.9364981651306152
    4. ' =' → logprob: -3.6864981651306152
    5. '=' → logprob: -4.186498165130615
    6. ' d' → logprob: -4.311498165130615
    7. '_' → logprob: -4.936498165130615
    8. ',' → logprob: -4.936498165130615
    9. ' des' → logprob: -5.686498165130615
    10. 'n' → logprob: -6.436498165130615

Token 91: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39631006121635437
    2. '(n' → logprob: -1.1463100910186768
    3. '(log' → logprob: -5.021309852600098
    4. 'n' → logprob: -6.521309852600098
    5. '(N' → logprob: -7.521309852600098
    6. 'log' → logprob: -8.146309852600098
    7. '(
' → logprob: -9.771309852600098
    8. '(l' → logprob: -10.021309852600098
    9. '(

' → logprob: -10.146309852600098
    10. '\' → logprob: -10.146309852600098

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3410678505897522
    2. '²' → logprob: -1.8410677909851074
    3. '^' → logprob: -2.7160677909851074
    4. '**' → logprob: -3.7160677909851074
    5. '*' → logprob: -4.216067790985107
    6. '2' → logprob: -4.341067790985107
    7. 'log' → logprob: -5.466067790985107
    8. ' )' → logprob: -5.966067790985107
    9. ' log' → logprob: -6.341067790985107
    10. ' ' → logprob: -6.341067790985107

Token 93: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3799792528152466
    2. '#' → logprob: -1.8799792528152466
    3. ' n' → logprob: -2.129979133605957
    4. ''' → logprob: -2.379979133605957
    5. 'n' → logprob: -2.629979133605957
    6. '\' → logprob: -3.254979133605957
    7. '(' → logprob: -3.504979133605957
    8. ',' → logprob: -3.629979133605957
    9. 's' → logprob: -3.879979133605957
    10. ')' → logprob: -3.879979133605957

Token 94: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.21818356215953827
    2. 'cha' → logprob: -2.0931835174560547
    3. 'each' → logprob: -3.4681835174560547
    4. 'ch' → logprob: -4.093183517456055
    5. ' each' → logprob: -4.468183517456055
    6. ' cha' → logprob: -5.468183517456055
    7. ' chacune' → logprob: -5.593183517456055
    8. 'Chaque' → logprob: -6.718183517456055
    9. 'l' → logprob: -7.343183517456055
    10. ' chacun' → logprob: -7.343183517456055

Token 95: ' requ' (ID: 7028)
  Prédit: ' déplacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déplacement' → logprob: -0.4878291189670563
    2. ' de' → logprob: -1.4878290891647339
    3. ' ' → logprob: -3.7378292083740234
    4. 'de' → logprob: -3.9878292083740234
    5. ' mouvement' → logprob: -3.9878292083740234
    6. ' move' → logprob: -4.612829208374023
    7. ' élément' → logprob: -4.612829208374023
    8. ' requ' → logprob: -4.737829208374023
    9. 'e' → logprob: -4.987829208374023
    10. ' espace' → logprob: -5.237829208374023

Token 96: 'ete' (ID: 4539)
  Prédit: 'ete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ete' → logprob: -0.11625339835882187
    2. 'ête' → logprob: -2.24125337600708
    3. 'e' → logprob: -6.74125337600708
    4. 'et' → logprob: -7.36625337600708
    5. 'ê' → logprob: -8.116253852844238
    6. 'etes' → logprob: -8.241253852844238
    7. 'êtes' → logprob: -8.491253852844238
    8. '#' → logprob: -8.616253852844238
    9. '^' → logprob: -8.616253852844238
    10. '�' → logprob: -8.866253852844238

Token 97: ' serait' (ID: 35762)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7969344854354858
    2. ' ne' → logprob: -1.5469344854354858
    3. ' est' → logprob: -2.2969346046447754
    4. ' serait' → logprob: -2.2969346046447754
    5. '#' → logprob: -3.0469346046447754
    6. ' is' → logprob: -4.546934604644775
    7. ' ' → logprob: -4.546934604644775
    8. '<|end|>' → logprob: -4.671934604644775
    9. ' sera' → logprob: -4.921934604644775
    10. 'n' → logprob: -5.171934604644775

Token 98: ' trop' (ID: 14765)
  Prédit: ' trop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trop' → logprob: -0.046920809894800186
    2. 't' → logprob: -3.9219207763671875
    3. 'too' → logprob: -4.5469207763671875
    4. ' T' → logprob: -5.6719207763671875
    5. ' too' → logprob: -6.1719207763671875
    6. 'T' → logprob: -6.2969207763671875
    7. ' impossible' → logprob: -6.6719207763671875
    8. ' ineff' → logprob: -6.7969207763671875
    9. 'ine' → logprob: -7.1719207763671875
    10. 'im' → logprob: -7.2969207763671875

Token 99: ' lent' (ID: 38609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5954412817955017
    2. '#' → logprob: -2.0954413414001465
    3. 'def' → logprob: -2.2204413414001465
    4. 'from' → logprob: -3.2204413414001465
    5. 'import' → logprob: -3.3454413414001465
    6. ' ' → logprob: -3.7204413414001465
    7. 'n' → logprob: -3.8454413414001465
    8. '```' → logprob: -4.2204413414001465
    9. ',' → logprob: -4.3454413414001465
    10. '\' → logprob: -4.3454413414001465

Token 100: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3699810206890106
    2. 'def' → logprob: -1.994981050491333
    3. '
' → logprob: -2.494981050491333
    4. '#' → logprob: -3.244981050491333
    5. 'import' → logprob: -4.244980812072754
    6. '

' → logprob: -4.494980812072754
    7. 'from' → logprob: -4.994980812072754
    8. '```' → logprob: -5.369980812072754
    9. '\' → logprob: -5.744980812072754
    10. '\n' → logprob: -5.744980812072754

Token 101: 'O' (ID: 46)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026014387607574463
    2. ' )' → logprob: -4.40101432800293
    3. '\n' → logprob: -6.02601432800293
    4. 'n' → logprob: -6.02601432800293
    5. ')
' → logprob: -6.15101432800293
    6. ',' → logprob: -6.65101432800293
    7. ')\' → logprob: -6.90101432800293
    8. ').' → logprob: -7.27601432800293
    9. 'O' → logprob: -7.90101432800293
    10. '),' → logprob: -7.90101432800293

Token 102: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0385909229516983
    2. '(' → logprob: -3.288590908050537
    3. 'n' → logprob: -8.038591384887695
    4. '(
' → logprob: -9.413591384887695
    5. '(m' → logprob: -10.413591384887695
    6. '(

' → logprob: -10.663591384887695
    7. ' (' → logprob: -10.788591384887695
    8. '^' → logprob: -11.288591384887695
    9. ')' → logprob: -11.663591384887695
    10. '*(' → logprob: -11.788591384887695

Token 103: '*m' (ID: 85049)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.022348403930664
    2. '*m' → logprob: -1.022348403930664
    3. '**' → logprob: -1.772348403930664
    4. '²' → logprob: -3.022348403930664
    5. ' *' → logprob: -3.522348403930664
    6. '^' → logprob: -3.897348403930664
    7. '2' → logprob: -4.647348403930664
    8. ' ' → logprob: -6.397348403930664
    9. 'm' → logprob: -8.647348403930664
    10. '*n' → logprob: -9.147348403930664

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006495215930044651
    2. '))' → logprob: -5.131494998931885
    3. ' )' → logprob: -7.506494998931885
    4. '*' → logprob: -12.631495475769043
    5. ' ))' → logprob: -13.256495475769043
    6. ')))' → logprob: -13.256495475769043
    7. '),' → logprob: -13.381495475769043
    8. ' ' → logprob: -13.506495475769043
    9. ')),' → logprob: -13.756495475769043
    10. ')`' → logprob: -14.131495475769043

Token 105: ' ~' (ID: 6574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003214665222913027
    2. ' )' → logprob: -6.0032148361206055
    3. ')
' → logprob: -8.253214836120605
    4. '#' → logprob: -8.503214836120605
    5. ')\' → logprob: -9.503214836120605
    6. '')' → logprob: -9.503214836120605
    7. '\n' → logprob: -10.003214836120605
    8. '*' → logprob: -11.753214836120605
    9. '")' → logprob: -11.878214836120605
    10. ',' → logprob: -12.003214836120605

Token 106: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.6679406762123108
    2. '2' → logprob: -1.417940616607666
    3. ' ' → logprob: -1.667940616607666
    4. '10' → logprob: -2.917940616607666
    5. '20' → logprob: -6.417940616607666
    6. '400' → logprob: -8.292941093444824
    7. '100' → logprob: -8.417941093444824
    8. '1' → logprob: -9.542941093444824
    9. '4' → logprob: -9.792941093444824
    10. ' O' → logprob: -11.292941093444824

Token 107: '2' (ID: 17)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.03852680325508118
    2. '2' → logprob: -3.288526773452759
    3. '20' → logprob: -8.03852653503418
    4. '10' → logprob: -8.91352653503418
    5. '100' → logprob: -10.91352653503418
    6. ' ' → logprob: -12.03852653503418
    7. '1' → logprob: -14.41352653503418
    8. 'O' → logprob: -14.78852653503418
    9. '```' → logprob: -15.16352653503418
    10. '400' → logprob: -15.53852653503418

Token 108: 'e' (ID: 68)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0829121470451355
    2. '0' → logprob: -2.5829122066497803
    3. '00' → logprob: -5.957911968231201
    4. '*' → logprob: -7.332911968231201
    5. 'e' → logprob: -7.332911968231201
    6. ' ' → logprob: -10.08291244506836
    7. '10' → logprob: -11.20791244506836
    8. 'x' → logprob: -11.45791244506836
    9. '_' → logprob: -11.83291244506836
    10. ' *' → logprob: -11.83291244506836

Token 109: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0014023828553035855
    2. '11' → logprob: -7.126402378082275
    3. '8' → logprob: -7.751402378082275
    4. '5' → logprob: -9.251402854919434
    5. '+' → logprob: -9.876402854919434
    6. '9' → logprob: -11.876402854919434
    7. '010' → logprob: -12.626402854919434
    8. '```' → logprob: -12.626402854919434
    9. '13' → logprob: -13.001402854919434
    10. '^' → logprob: -13.626402854919434

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07936955988407135
    2. ' )' → logprob: -2.57936954498291
    3. '*' → logprob: -8.95436954498291
    4. ' ' → logprob: -9.20436954498291
    5. ').' → logprob: -9.95436954498291
    6. '0' → logprob: -10.57936954498291
    7. ' ' → logprob: -10.57936954498291
    8. ',' → logprob: -10.82936954498291
    9. ' operations' → logprob: -11.45436954498291
    10. '*)' → logprob: -11.45436954498291

Token 111: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35418832302093506
    2. 'def' → logprob: -1.479188323020935
    3. 'from' → logprob: -3.6041884422302246
    4. 'import' → logprob: -3.9791884422302246
    5. '#' → logprob: -4.229188442230225
    6. 'class' → logprob: -4.979188442230225
    7. '
' → logprob: -7.104188442230225
    8. '\' → logprob: -7.604188442230225
    9. 'd' → logprob: -7.979188442230225
    10. '\n' → logprob: -8.479187965393066

Token 112: ' Il' (ID: 5329)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6566088199615479
    2. 'from' → logprob: -1.6566088199615479
    3. 'class' → logprob: -2.281608819961548
    4. 'n' → logprob: -2.656608819961548
    5. 'import' → logprob: -3.281608819961548
    6. 'def' → logprob: -3.406608819961548
    7. 'd' → logprob: -4.906608581542969
    8. 'fen' → logprob: -5.281608581542969
    9. ')' → logprob: -5.656608581542969
    10. '

' → logprob: -5.781608581542969

Token 113: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.05173485353589058
    2. ' faudrait' → logprob: -3.5517349243164062
    3. ' faudra' → logprob: -4.551734924316406
    4. 'f' → logprob: -4.801734924316406
    5. ''' → logprob: -7.051734924316406
    6. '#' → logprob: -7.551734924316406
    7. ' est' → logprob: -7.926734924316406
    8. ' =' → logprob: -8.426734924316406
    9. ' manque' → logprob: -8.801734924316406
    10. '=' → logprob: -9.051734924316406

Token 114: ' une' (ID: 2463)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.646195650100708
    2. 'don' → logprob: -1.771195650100708
    3. ' utiliser' → logprob: -2.021195650100708
    4. 'une' → logprob: -3.271195650100708
    5. 'tr' → logprob: -3.646195650100708
    6. 'un' → logprob: -3.896195650100708
    7. ' donc' → logprob: -4.146195411682129
    8. ' trouver' → logprob: -4.146195411682129
    9. 'penser' → logprob: -4.271195411682129
    10. ' une' → logprob: -4.896195411682129

Token 115: ' structure' (ID: 8866)
  Prédit: 'structure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'structure' → logprob: -0.5275900959968567
    2. ' structure' → logprob: -1.027590036392212
    3. 'struct' → logprob: -4.777590274810791
    4. 'str' → logprob: -4.902590274810791
    5. ' data' → logprob: -5.277590274810791
    6. 'data' → logprob: -5.277590274810791
    7. ' solution' → logprob: -5.527590274810791
    8. ' approche' → logprob: -5.777590274810791
    9. 'solution' → logprob: -6.027590274810791
    10. 'd' → logprob: -6.027590274810791

Token 116: ' efficace' (ID: 54338)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.6554732918739319
    2. ' de' → logprob: -1.030473232269287
    3. 'de' → logprob: -2.405473232269287
    4. 'from' → logprob: -4.905473232269287
    5. ' deque' → logprob: -5.030473232269287
    6. 'd' → logprob: -5.655473232269287
    7. ' data' → logprob: -5.655473232269287
    8. 'import' → logprob: -6.030473232269287
    9. 'class' → logprob: -6.280473232269287
    10. 'data' → logprob: -6.405473232269287

Token 117: '.

' (ID: 364)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4671763777732849
    2. 'class' → logprob: -1.0921764373779297
    3. 'n' → logprob: -4.46717643737793
    4. 'import' → logprob: -4.46717643737793
    5. '#' → logprob: -4.71717643737793
    6. '
' → logprob: -6.34217643737793
    7. 'def' → logprob: -7.09217643737793
    8. 'd' → logprob: -7.21717643737793
    9. ' from' → logprob: -7.21717643737793
    10. 'deque' → logprob: -7.71717643737793

Token 118: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6436697244644165
    2. 'class' → logprob: -1.0186697244644165
    3. '#' → logprob: -3.268669605255127
    4. 'n' → logprob: -3.643669605255127
    5. 'import' → logprob: -3.893669605255127
    6. 'd' → logprob: -4.018669605255127
    7. 'deque' → logprob: -5.768669605255127
    8. 'fen' → logprob: -6.643669605255127
    9. ' from' → logprob: -6.893669605255127
    10. '```' → logprob: -7.268669605255127

Token 119: ' Appro' (ID: 24145)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28666144609451294
    2. 'class' → logprob: -1.4116613864898682
    3. '#' → logprob: -5.661661624908447
    4. 'import' → logprob: -6.911661624908447
    5. 'n' → logprob: -7.286661624908447
    6. 'def' → logprob: -9.161661148071289
    7. ' from' → logprob: -9.661661148071289
    8. 'd' → logprob: -10.036661148071289
    9. ' class' → logprob: -10.411661148071289
    10. 'f' → logprob: -10.786661148071289

Token 120: 'che' (ID: 926)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.6615978479385376
    2. 'che' → logprob: -1.0365978479385376
    3. 'x' → logprob: -2.911597728729248
    4. '#' → logprob: -3.161597728729248
    5. 'ch' → logprob: -3.911597728729248
    6. 'ches' → logprob: -5.411597728729248
    7. 'xi' → logprob: -6.536597728729248
    8. 'aches' → logprob: -6.536597728729248
    9. '```' → logprob: -6.786597728729248
    10. 'ache' → logprob: -6.911597728729248

Token 121: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24312680959701538
    2. '#' → logprob: -2.49312686920166
    3. ' :' → logprob: -2.86812686920166
    4. ' =' → logprob: -3.49312686920166
    5. 'import' → logprob: -3.49312686920166
    6. 'from' → logprob: -5.49312686920166
    7. ':
' → logprob: -6.11812686920166
    8. 'd' → logprob: -6.24312686920166
    9. 'deque' → logprob: -6.61812686920166
    10. '=' → logprob: -7.24312686920166

Token 122: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3371880352497101
    2. 'from' → logprob: -1.3371880054473877
    3. 'class' → logprob: -3.9621880054473877
    4. 'import' → logprob: -6.587188243865967
    5. ' from' → logprob: -6.962188243865967
    6. 'On' → logprob: -7.087188243865967
    7. ' #' → logprob: -7.712188243865967
    8. '"""
' → logprob: -8.087187767028809
    9. ' class' → logprob: -8.212187767028809
    10. 'Fen' → logprob: -8.962187767028809

Token 123: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3332996368408203
    2. 'from' → logprob: -1.4582996368408203
    3. 'On' → logprob: -3.4582996368408203
    4. 'Util' → logprob: -4.95829963684082
    5. ' from' → logprob: -5.58329963684082
    6. 'class' → logprob: -5.83329963684082
    7. 'import' → logprob: -6.45829963684082
    8. 'Une' → logprob: -6.83329963684082
    9. ' #' → logprob: -6.95829963684082
    10. '"""
' → logprob: -8.33329963684082

Token 124: ' element' (ID: 3577)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.9429219365119934
    2. ' element' → logprob: -1.1929218769073486
    3. 'element' → logprob: -2.1929218769073486
    4. ' requ' → logprob: -2.6929218769073486
    5. 'élé' → logprob: -2.8179218769073486
    6. 'requ' → logprob: -3.9429218769073486
    7. ' valeur' → logprob: -5.067922115325928
    8. ' node' → logprob: -5.317922115325928
    9. 'position' → logprob: -5.442922115325928
    10. ' position' → logprob: -5.692922115325928

Token 125: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0756429433822632
    2. ' =' → logprob: -1.2006429433822632
    3. ' ' → logprob: -2.2006430625915527
    4. ' est' → logprob: -2.7006430625915527
    5. '=' → logprob: -2.8256430625915527
    6. 'a' → logprob: -2.9506430625915527
    7. 's' → logprob: -4.325643062591553
    8. '_' → logprob: -4.325643062591553
    9. 'est' → logprob: -4.700643062591553
    10. ' ' → logprob: -5.575643062591553

Token 126: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6839703321456909
    2. ' une' → logprob: -1.433970332145691
    3. 'un' → logprob: -2.0589704513549805
    4. 'ura' → logprob: -3.0589704513549805
    5. ' un' → logprob: -3.5589704513549805
    6. 'a' → logprob: -4.5589704513549805
    7. 'ur' → logprob: -4.5589704513549805
    8. 'u' → logprob: -5.1839704513549805
    9. 'd' → logprob: -6.0589704513549805
    10. 'vec' → logprob: -6.0589704513549805

Token 127: ' "' (ID: 392)
  Prédit: 'rang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rang' → logprob: -0.04482899233698845
    2. 'position' → logprob: -4.16982889175415
    3. 'rank' → logprob: -5.29482889175415
    4. 'indice' → logprob: -5.79482889175415
    5. ' rang' → logprob: -5.91982889175415
    6. 'po' → logprob: -5.91982889175415
    7. 'numero' → logprob: -6.04482889175415
    8. 'preced' → logprob: -6.04482889175415
    9. 'score' → logprob: -6.29482889175415
    10. 'range' → logprob: -6.79482889175415

Token 128: 'rang' (ID: 71281)
  Prédit: 'rang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rang' → logprob: -0.5646421909332275
    2. 'position' → logprob: -1.0646421909332275
    3. 'rank' → logprob: -3.5646421909332275
    4. 'po' → logprob: -3.8146421909332275
    5. 'pos' → logprob: -4.314641952514648
    6. 'prior' → logprob: -5.189641952514648
    7. 'score' → logprob: -5.564641952514648
    8. 'val' → logprob: -6.189641952514648
    9. 'indice' → logprob: -6.189641952514648
    10. 'preced' → logprob: -6.439641952514648

Token 129: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014270933344960213
    2. ' "' → logprob: -5.014270782470703
    3. ' courant' → logprob: -6.639270782470703
    4. 'initial' → logprob: -7.514270782470703
    5. 'rel' → logprob: -7.514270782470703
    6. ' initial' → logprob: -7.639270782470703
    7. ' de' → logprob: -7.639270782470703
    8. 'de' → logprob: -7.764270782470703
    9. '",' → logprob: -8.014270782470703
    10. 'relative' → logprob: -8.014270782470703

Token 130: ' ou' (ID: 2031)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6334463953971863
    2. ' ' → logprob: -1.133446455001831
    3. ',' → logprob: -2.883446455001831
    4. ' =' → logprob: -4.008446216583252
    5. '#' → logprob: -4.508446216583252
    6. ')' → logprob: -4.633446216583252
    7. ' _' → logprob: -4.758446216583252
    8. '[' → logprob: -5.383446216583252
    9. ' ,' → logprob: -5.883446216583252
    10. '

' → logprob: -6.008446216583252

Token 131: ' "' (ID: 392)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.2662314176559448
    2. '"' → logprob: -1.5162314176559448
    3. ' une' → logprob: -1.5162314176559448
    4. 'un' → logprob: -2.2662315368652344
    5. 'position' → logprob: -2.8912315368652344
    6. 'indice' → logprob: -3.1412315368652344
    7. ' un' → logprob: -3.3912315368652344
    8. ' position' → logprob: -4.641231536865234
    9. 'index' → logprob: -4.891231536865234
    10. ' "' → logprob: -5.016231536865234

Token 132: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.10859255492687225
    2. 'prior' → logprob: -3.4835925102233887
    3. 'indice' → logprob: -3.7335925102233887
    4. 'ordre' → logprob: -4.108592510223389
    5. 'index' → logprob: -4.733592510223389
    6. 'clé' → logprob: -4.858592510223389
    7. 'val' → logprob: -5.483592510223389
    8. 'pos' → logprob: -5.983592510223389
    9. 'priority' → logprob: -6.358592510223389
    10. 'score' → logprob: -6.358592510223389

Token 133: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14178422093391418
    2. ' "' → logprob: -2.766784191131592
    3. 'dans' → logprob: -4.266784191131592
    4. ' dans' → logprob: -4.516784191131592
    5. ')' → logprob: -4.766784191131592
    6. ' initial' → logprob: -5.141784191131592
    7. ' de' → logprob: -5.766784191131592
    8. 'initial' → logprob: -5.766784191131592
    9. '_' → logprob: -6.141784191131592
    10. '_init' → logprob: -6.266784191131592

Token 134: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38683757185935974
    2. ' ' → logprob: -2.0118374824523926
    3. ',' → logprob: -2.1368374824523926
    4. 's' → logprob: -3.7618374824523926
    5. ')' → logprob: -4.636837482452393
    6. '[' → logprob: -5.011837482452393
    7. ' =' → logprob: -5.511837482452393
    8. '#' → logprob: -5.636837482452393
    9. 'import' → logprob: -6.136837482452393
    10. '\' → logprob: -6.511837482452393

Token 135: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3204604983329773
    2. 'l' → logprob: -1.945460557937622
    3. 'le' → logprob: -3.445460557937622
    4. 'un' → logprob: -3.445460557937622
    5. 'une' → logprob: -3.445460557937622
    6. ' la' → logprob: -4.070460319519043
    7. ' une' → logprob: -4.445460319519043
    8. ' un' → logprob: -5.445460319519043
    9. ' l' → logprob: -6.445460319519043
    10. ' le' → logprob: -8.445460319519043

Token 136: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.4265539050102234
    2. 'liste' → logprob: -1.9265539646148682
    3. 'structure' → logprob: -2.551553964614868
    4. ' sequence' → logprob: -3.051553964614868
    5. 'list' → logprob: -3.426553964614868
    6. 'file' → logprob: -3.926553964614868
    7. ' structure' → logprob: -4.801553726196289
    8. ' liste' → logprob: -5.426553726196289
    9. 'sé' → logprob: -5.676553726196289
    10. 'range' → logprob: -6.426553726196289

Token 137: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6783328056335449
    2. '#' → logprob: -1.928332805633545
    3. ',' → logprob: -2.303332805633545
    4. '

' → logprob: -2.803332805633545
    5. 'import' → logprob: -3.178332805633545
    6. 'class' → logprob: -3.803332805633545
    7. 'def' → logprob: -4.303332805633545
    8. 'position' → logprob: -4.303332805633545
    9. '_' → logprob: -4.428332805633545
    10. 'n' → logprob: -4.428332805633545

Token 138: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7154356241226196
    2. '#' → logprob: -1.5904356241226196
    3. 'position' → logprob: -2.46543550491333
    4. 'def' → logprob: -3.21543550491333
    5. 'import' → logprob: -3.46543550491333
    6. 'pos' → logprob: -3.71543550491333
    7. 'class' → logprob: -3.84043550491333
    8. 'positions' → logprob: -3.84043550491333
    9. '
' → logprob: -3.96543550491333
    10. '```' → logprob: -4.59043550491333

Token 139: ' Au' (ID: 18016)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3228914439678192
    2. 'position' → logprob: -1.8228914737701416
    3. '#' → logprob: -2.5728914737701416
    4. 'pos' → logprob: -4.3228912353515625
    5. 'rank' → logprob: -5.3228912353515625
    6. 'class' → logprob: -5.4478912353515625
    7. ' positions' → logprob: -5.4478912353515625
    8. 'from' → logprob: -5.5728912353515625
    9. 'rang' → logprob: -5.5728912353515625
    10. 'import' → logprob: -6.6978912353515625

Token 140: ' depart' (ID: 14182)
  Prédit: 'lie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lie' → logprob: -0.6634083986282349
    2. 'fil' → logprob: -2.2884082794189453
    3. 'final' → logprob: -2.5384082794189453
    4. 'dé' → logprob: -2.9134082794189453
    5. 'l' → logprob: -3.2884082794189453
    6. '#' → logprob: -3.4134082794189453
    7. 'fur' → logprob: -3.6634082794189453
    8. 'mil' → logprob: -4.038408279418945
    9. 'prem' → logprob: -4.413408279418945
    10. 'd' → logprob: -4.538408279418945

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048853956162929535
    2. ' =' → logprob: -3.548853874206543
    3. ' ,' → logprob: -4.673853874206543
    4. ' les' → logprob: -5.673853874206543
    5. ' n' → logprob: -6.548853874206543
    6. 'les' → logprob: -6.923853874206543
    7. '=' → logprob: -7.048853874206543
    8. 'n' → logprob: -7.548853874206543
    9. '#' → logprob: -8.048853874206543
    10. 'positions' → logprob: -8.298853874206543

Token 142: ' position' (ID: 4010)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.41973650455474854
    2. ' la' → logprob: -2.294736385345459
    3. 'les' → logprob: -2.419736385345459
    4. '#' → logprob: -3.044736385345459
    5. ' les' → logprob: -3.294736385345459
    6. ' on' → logprob: -3.669736385345459
    7. 'la' → logprob: -4.169736385345459
    8. ' ils' → logprob: -5.544736385345459
    9. 'cha' → logprob: -5.669736385345459
    10. 'n' → logprob: -5.669736385345459

Token 143: '[x' (ID: 17295)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5337529182434082
    2. ' =' → logprob: -1.0337529182434082
    3. '=' → logprob: -2.908752918243408
    4. '[i' → logprob: -7.033752918243408
    5. '[' → logprob: -7.783752918243408
    6. 'es' → logprob: -7.908752918243408
    7. 'des' → logprob: -7.908752918243408
    8. 'e' → logprob: -8.78375244140625
    9. 'i' → logprob: -9.03375244140625
    10. 'de' → logprob: -9.03375244140625

Token 144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002278127009049058
    2. ']=' → logprob: -6.8772783279418945
    3. '=' → logprob: -7.1272783279418945
    4. ' =' → logprob: -8.252278327941895
    5. ' ]' → logprob: -9.877278327941895
    6. ')' → logprob: -10.002278327941895
    7. 'x' → logprob: -10.752278327941895
    8. '=x' → logprob: -10.752278327941895
    9. 's' → logprob: -11.752278327941895
    10. '-' → logprob: -12.502278327941895

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521977722644806
    2. ' =' → logprob: -1.5021977424621582
    3. '[x' → logprob: -9.502198219299316
    4. '[' → logprob: -9.502198219299316
    5. '=x' → logprob: -9.877198219299316
    6. 'x' → logprob: -10.877198219299316
    7. 's' → logprob: -11.002198219299316
    8. '=[' → logprob: -11.752198219299316
    9. 'import' → logprob: -12.752198219299316
    10. '#' → logprob: -13.127198219299316

Token 146: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06993776559829712
    2. ' x' → logprob: -2.6949377059936523
    3. ' ' → logprob: -14.319937705993652
    4. '	x' → logprob: -15.069937705993652
    5. ' ' → logprob: -15.069937705993652
    6. ')x' → logprob: -16.44493865966797
    7. '"x' → logprob: -17.31993865966797
    8. '(x' → logprob: -17.56993865966797
    9. ')' → logprob: -17.81993865966797
    10. '_x' → logprob: -17.88243865966797

Token 147: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1698824018239975
    2. '\n' → logprob: -3.419882297515869
    3. '#' → logprob: -3.919882297515869
    4. '

' → logprob: -4.044882297515869
    5. '```' → logprob: -4.044882297515869
    6. '[' → logprob: -4.544882297515869
    7. ',' → logprob: -4.919882297515869
    8. '
' → logprob: -5.044882297515869
    9. '\' → logprob: -5.044882297515869
    10. '_' → logprob: -5.294882297515869

Token 148: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012818403542041779
    2. '+' → logprob: -4.637818336486816
    3. ' )' → logprob: -6.512818336486816
    4. ' +' → logprob: -7.387818336486816
    5. '\n' → logprob: -7.637818336486816
    6. ')
' → logprob: -8.512818336486816
    7. '#' → logprob: -9.637818336486816
    8. '
' → logprob: -10.637818336486816
    9. '-' → logprob: -10.762818336486816
    10. '```' → logprob: -10.762818336486816

Token 149: ' element' (ID: 3577)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08196379244327545
    2. 'x' → logprob: -2.5819637775421143
    3. ' i' → logprob: -5.956964015960693
    4. ' ' → logprob: -8.331963539123535
    5. 'i' → logprob: -8.706963539123535
    6. ' n' → logprob: -10.956963539123535
    7. '1' → logprob: -11.206963539123535
    8. ')' → logprob: -11.331963539123535
    9. ' ' → logprob: -11.581963539123535
    10. ' range' → logprob: -12.581963539123535

Token 150: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5408133268356323
    2. ' in' → logprob: -1.1658133268356323
    3. ' )' → logprob: -2.665813446044922
    4. ' ' → logprob: -4.290813446044922
    5. ' en' → logprob: -5.415813446044922
    6. ' dans' → logprob: -5.790813446044922
    7. ' =' → logprob: -5.915813446044922
    8. ' +' → logprob: -6.665813446044922
    9. 'dans' → logprob: -6.665813446044922
    10. ' -' → logprob: -6.790813446044922

Token 151: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017968125641345978
    2. ' )' → logprob: -4.64296817779541
    3. '+' → logprob: -5.01796817779541
    4. ' +' → logprob: -7.14296817779541
    5. '-' → logprob: -7.89296817779541
    6. ')
' → logprob: -9.14296817779541
    7. '#' → logprob: -9.26796817779541
    8. ' ' → logprob: -10.39296817779541
    9. ' -' → logprob: -10.64296817779541
    10. '```' → logprob: -10.89296817779541

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19505192339420319
    2. ' ' → logprob: -1.820051908493042
    3. 'x' → logprob: -4.945052146911621
    4. ' x' → logprob: -5.570052146911621
    5. ' i' → logprob: -6.320052146911621
    6. 'i' → logprob: -6.695052146911621
    7. ' range' → logprob: -7.695052146911621
    8. 'range' → logprob: -7.820052146911621
    9. ')' → logprob: -8.570052146911621
    10. 'n' → logprob: -9.945052146911621

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00422335509210825
    2. 'i' → logprob: -6.129223346710205
    3. ' ' → logprob: -6.629223346710205
    4. 'range' → logprob: -7.754223346710205
    5. 'n' → logprob: -9.254223823547363
    6. 'x' → logprob: -9.379223823547363
    7. ' range' → logprob: -10.129223823547363
    8. ' i' → logprob: -10.254223823547363
    9. '0' → logprob: -11.379223823547363
    10. ')' → logprob: -11.754223823547363

Token 154: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40692874789237976
    2. ',' → logprob: -1.7819287776947021
    3. '+' → logprob: -2.406928777694702
    4. ' )' → logprob: -3.281928777694702
    5. ' +' → logprob: -4.281928539276123
    6. '...' → logprob: -4.656928539276123
    7. ' ,' → logprob: -4.906928539276123
    8. ' ' → logprob: -6.406928539276123
    9. ',...' → logprob: -6.656928539276123
    10. 'import' → logprob: -6.781928539276123

Token 155: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132723271846771
    2. 'n' → logprob: -1.3132723569869995
    3. ' ' → logprob: -11.688272476196289
    4. ')' → logprob: -14.188272476196289
    5. ')n' → logprob: -14.813272476196289
    6. ' ' → logprob: -14.938272476196289
    7. '	n' → logprob: -15.313272476196289
    8. '_n' → logprob: -15.813272476196289
    9. ',n' → logprob: -16.18827247619629
    10. ' )' → logprob: -16.31327247619629

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002672564936801791
    2. '+' → logprob: -6.2526726722717285
    3. ' )' → logprob: -8.00267219543457
    4. ')
' → logprob: -8.37767219543457
    5. '#' → logprob: -9.37767219543457
    6. ' +' → logprob: -10.62767219543457
    7. ',' → logprob: -11.00267219543457
    8. '+)' → logprob: -12.00267219543457
    9. ' ' → logprob: -12.12767219543457
    10. '}' → logprob: -12.37767219543457

Token 157: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2885717749595642
    2. '#' → logprob: -2.163571834564209
    3. 'def' → logprob: -2.663571834564209
    4. 'import' → logprob: -3.663571834564209
    5. '(n' → logprob: -4.413571834564209
    6. '
' → logprob: -4.788571834564209
    7. '\n' → logprob: -4.913571834564209
    8. ' n' → logprob: -6.038571834564209
    9. 'position' → logprob: -6.538571834564209
    10. ',' → logprob: -6.663571834564209

Token 158: ' Quand' (ID: 67052)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5744228363037109
    2. '#' → logprob: -1.074422836303711
    3. 'def' → logprob: -3.074422836303711
    4. 'position' → logprob: -3.949422836303711
    5. 'import' → logprob: -4.074422836303711
    6. 'positions' → logprob: -5.699422836303711
    7. ' n' → logprob: -6.199422836303711
    8. 'from' → logprob: -6.699422836303711
    9. 'pos' → logprob: -7.074422836303711
    10. '
' → logprob: -7.324422836303711

Token 159: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.11001475155353546
    2. 'on' → logprob: -2.8600146770477295
    3. ' un' → logprob: -3.3600146770477295
    4. 'un' → logprob: -5.235014915466309
    5. 'position' → logprob: -5.860014915466309
    6. ' une' → logprob: -7.235014915466309
    7. 'une' → logprob: -7.360014915466309
    8. '#' → logprob: -7.485014915466309
    9. ' position' → logprob: -7.735014915466309
    10. ''on' → logprob: -7.860014915466309

Token 160: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.05974126607179642
    2. ' de' → logprob: -3.184741258621216
    3. 'd' → logprob: -5.559741497039795
    4. 'dé' → logprob: -5.934741497039795
    5. 're' → logprob: -6.559741497039795
    6. ' met' → logprob: -6.684741497039795
    7. ' dé' → logprob: -6.934741497039795
    8. ' re' → logprob: -7.184741497039795
    9. ' veut' → logprob: -7.184741497039795
    10. ' reçoit' → logprob: -7.434741497039795

Token 161: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0012136871227994561
    2. 'placer' → logprob: -6.751213550567627
    3. 'plac' → logprob: -11.126214027404785
    4. '_place' → logprob: -11.751214027404785
    5. ' place' → logprob: -12.251214027404785
    6. 'placement' → logprob: -12.626214027404785
    7. 'Place' → logprob: -12.626214027404785
    8. 'cale' → logprob: -12.876214027404785
    9. 'pla' → logprob: -13.251214027404785
    10. 'pl' → logprob: -13.876214027404785

Token 162: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.011138128116726875
    2. 'un' → logprob: -4.636137962341309
    3. ' l' → logprob: -7.011137962341309
    4. 'l' → logprob: -8.886137962341309
    5. ' ' → logprob: -9.511137962341309
    6. ' element' → logprob: -9.886137962341309
    7. 'x' → logprob: -10.136137962341309
    8. ' x' → logprob: -10.136137962341309
    9. 'element' → logprob: -10.136137962341309
    10. ' an' → logprob: -10.886137962341309

Token 163: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.7855076193809509
    2. ' element' → logprob: -1.4105076789855957
    3. 'élé' → logprob: -1.5355076789855957
    4. ' élément' → logprob: -2.5355076789855957
    5. 'elem' → logprob: -5.910507678985596
    6. 'e' → logprob: -6.660507678985596
    7. ' elem' → logprob: -8.035507202148438
    8. ' ' → logprob: -8.160507202148438
    9. 'é' → logprob: -8.785507202148438
    10. 'x' → logprob: -9.035507202148438

Token 164: ' e' (ID: 319)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.6430103778839111
    2. 'x' → logprob: -1.7680103778839111
    3. ' e' → logprob: -1.7680103778839111
    4. ' en' → logprob: -2.018010377883911
    5. ' à' → logprob: -2.393010377883911
    6. ' vers' → logprob: -2.393010377883911
    7. 'e' → logprob: -2.768010377883911
    8. ' ' → logprob: -3.143010377883911
    9. ' au' → logprob: -4.018010139465332
    10. ' a' → logprob: -5.268010139465332

Token 165: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47466006875038147
    2. '_i' → logprob: -0.9746600389480591
    3. '[i' → logprob: -8.09965991973877
    4. ' _' → logprob: -8.84965991973877
    5. '[' → logprob: -9.72465991973877
    6. 'i' → logprob: -10.47465991973877
    7. '_x' → logprob: -11.84965991973877
    8. '_j' → logprob: -11.97465991973877
    9. '[_' → logprob: -12.22465991973877
    10. ''_' → logprob: -12.72465991973877

Token 166: ' en' (ID: 469)
  Prédit: ' vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.6309962272644043
    2. ' en' → logprob: -2.0059962272644043
    3. ' à' → logprob: -2.3809962272644043
    4. ' ' → logprob: -2.5059962272644043
    5. ' au' → logprob: -2.8809962272644043
    6. ',' → logprob: -3.1309962272644043
    7. ' a' → logprob: -3.5059962272644043
    8. ' ,' → logprob: -4.880996227264404
    9. 'au' → logprob: -5.755996227264404
    10. '_' → logprob: -6.005996227264404

Token 167: ' tete' (ID: 159380)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2807551920413971
    2. ' tête' → logprob: -1.6557551622390747
    3. ' tete' → logprob: -3.0307552814483643
    4. ' t' → logprob: -5.655755043029785
    5. 'position' → logprob: -8.030755043029785
    6. ' position' → logprob: -8.030755043029785
    7. ' ' → logprob: -8.155755043029785
    8. '_t' → logprob: -8.155755043029785
    9. 'prem' → logprob: -8.405755043029785
    10. 'head' → logprob: -8.780755043029785

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06322985887527466
    2. ' ,' → logprob: -2.81322979927063
    3. ':' → logprob: -7.063230037689209
    4. ' de' → logprob: -9.18822956085205
    5. ' :' → logprob: -9.68822956085205
    6. ' =' → logprob: -9.81322956085205
    7. ',
' → logprob: -10.31322956085205
    8. '=' → logprob: -10.31322956085205
    9. ' ' → logprob: -10.68822956085205
    10. 'position' → logprob: -11.31322956085205

Token 169: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7685705423355103
    2. '#' → logprob: -1.0185705423355103
    3. ' il' → logprob: -2.5185704231262207
    4. ' #' → logprob: -2.7685704231262207
    5. 'on' → logprob: -4.518570423126221
    6. ' for' → logprob: -4.768570423126221
    7. 'for' → logprob: -5.393570423126221
    8. 'il' → logprob: -5.893570423126221
    9. 'position' → logprob: -6.393570423126221
    10. 'import' → logprob: -7.268570423126221

Token 170: ' doit' (ID: 21822)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7228966951370239
    2. 'do' → logprob: -0.8478966951370239
    3. ' doit' → logprob: -3.8478965759277344
    4. 'def' → logprob: -4.097896575927734
    5. ' #' → logprob: -4.972896575927734
    6. 'd' → logprob: -5.222896575927734
    7. ' do' → logprob: -5.597896575927734
    8. 'dev' → logprob: -5.847896575927734
    9. 'dim' → logprob: -5.847896575927734
    10. 'de' → logprob: -6.222896575927734

Token 171: ' lui' (ID: 10623)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.963340163230896
    2. 'mettre' → logprob: -1.338340163230896
    3. 'dé' → logprob: -1.838340163230896
    4. 'd' → logprob: -3.2133402824401855
    5. 'le' → logprob: -3.4633402824401855
    6. ' mettre' → logprob: -3.4633402824401855
    7. '#' → logprob: -3.8383402824401855
    8. ' le' → logprob: -4.0883402824401855
    9. ' dimin' → logprob: -4.4633402824401855
    10. ' décr' → logprob: -5.3383402824401855

Token 172: ' attrib' (ID: 72186)
  Prédit: ' donner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donner' → logprob: -1.3484220504760742
    2. 'assign' → logprob: -1.5984220504760742
    3. ' affect' → logprob: -2.098422050476074
    4. ' assign' → logprob: -2.098422050476074
    5. ' attrib' → logprob: -2.223422050476074
    6. ' mettre' → logprob: -2.848422050476074
    7. 'aff' → logprob: -3.098422050476074
    8. 'mettre' → logprob: -3.723422050476074
    9. ' déplacer' → logprob: -4.598422050476074
    10. ' ' → logprob: -5.473422050476074

Token 173: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.0001005630983854644
    2. 'er' → logprob: -9.375100135803223
    3. 'u' → logprob: -11.375100135803223
    4. ' u' → logprob: -13.500100135803223
    5. 'ue' → logprob: -13.625100135803223
    6. 'user' → logprob: -15.375100135803223
    7. 'uter' → logprob: -15.375100135803223
    8. '-' → logprob: -15.500100135803223
    9. 'uir' → logprob: -16.12510108947754
    10. 'ner' → logprob: -16.37510108947754

Token 174: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.14278005063533783
    2. 'une' → logprob: -2.142780065536499
    3. 'un' → logprob: -5.14277982711792
    4. 'position' → logprob: -5.39277982711792
    5. ' un' → logprob: -5.51777982711792
    6. '0' → logprob: -7.51777982711792
    7. ' ' → logprob: -8.017780303955078
    8. ' position' → logprob: -8.517780303955078
    9. ' la' → logprob: -9.642780303955078
    10. 'le' → logprob: -10.892780303955078

Token 175: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.7981075048446655
    2. 'position' → logprob: -1.0481075048446655
    3. 'rang' → logprob: -2.548107624053955
    4. ' nouveau' → logprob: -3.048107624053955
    5. 'nou' → logprob: -4.173107624053955
    6. ' nouvelle' → logprob: -4.423107624053955
    7. ' new' → logprob: -5.048107624053955
    8. 'rank' → logprob: -5.298107624053955
    9. 'r' → logprob: -5.298107624053955
    10. ' valeur' → logprob: -5.423107624053955

Token 176: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.7797387838363647
    2. ' inf' → logprob: -1.6547387838363647
    3. ' strict' → logprob: -2.2797389030456543
    4. ' smaller' → logprob: -3.4047389030456543
    5. ' =' → logprob: -3.5297389030456543
    6. ' moindre' → logprob: -3.6547389030456543
    7. 'strict' → logprob: -3.7797389030456543
    8. ' -' → logprob: -4.154738903045654
    9. ' inférieur' → logprob: -4.154738903045654
    10. ' nég' → logprob: -4.404738903045654

Token 177: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.22486372292041779
    2. ' petite' → logprob: -1.9748637676239014
    3. ' petit' → logprob: -3.5998637676239014
    4. '-' → logprob: -4.224863529205322
    5. ' faible' → logprob: -4.849863529205322
    6. 'b' → logprob: -5.474863529205322
    7. ' basse' → logprob: -6.099863529205322
    8. 'import' → logprob: -6.599863529205322
    9. '```' → logprob: -7.099863529205322
    10. ' -' → logprob: -7.099863529205322

Token 178: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9279406070709229
    2. '_' → logprob: -1.1779406070709229
    3. ',' → logprob: -2.052940607070923
    4. 'import' → logprob: -3.052940607070923
    5. ' _' → logprob: -3.052940607070923
    6. '  ' → logprob: -4.552940368652344
    7. '<|end|>' → logprob: -4.677940368652344
    8. ' que' → logprob: -5.677940368652344
    9. ' ,' → logprob: -5.677940368652344
    10. ' that' → logprob: -5.802940368652344

Token 179: ' toutes' (ID: 17502)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08638951182365417
    2. ' toutes' → logprob: -3.8363895416259766
    3. 'tout' → logprob: -4.086389541625977
    4. 'la' → logprob: -4.211389541625977
    5. ' celle' → logprob: -4.836389541625977
    6. ' all' → logprob: -5.461389541625977
    7. 'min' → logprob: -5.461389541625977
    8. 'celle' → logprob: -5.961389541625977
    9. 'all' → logprob: -6.211389541625977
    10. ' la' → logprob: -6.336389541625977

Token 180: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8253791928291321
    2. ' les' → logprob: -0.8253791928291321
    3. 'positions' → logprob: -3.0753791332244873
    4. ' celles' → logprob: -3.3253791332244873
    5. '```' → logprob: -4.325379371643066
    6. '<|end|>' → logprob: -4.450379371643066
    7. '.' → logprob: -6.075379371643066
    8. '_' → logprob: -6.075379371643066
    9. ' positions' → logprob: -6.200379371643066
    10. '_existing' → logprob: -6.450379371643066

Token 181: ' autres' (ID: 18701)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.15489859879016876
    2. ' positions' → logprob: -2.7798986434936523
    3. 'aut' → logprob: -3.4048986434936523
    4. 'act' → logprob: -4.279898643493652
    5. 'position' → logprob: -4.654898643493652
    6. ' autres' → logprob: -5.029898643493652
    7. 'pr' → logprob: -5.029898643493652
    8. 'exist' → logprob: -5.529898643493652
    9. 'current' → logprob: -7.029898643493652
    10. 'dé' → logprob: -7.029898643493652

Token 182: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9970664978027344
    2. 'n' → logprob: -1.6220664978027344
    3. '#' → logprob: -2.3720664978027344
    4. ',' → logprob: -2.4970664978027344
    5. '\n' → logprob: -2.6220664978027344
    6. '.' → logprob: -3.7470664978027344
    7. '_n' → logprob: -3.7470664978027344
    8. '
' → logprob: -3.8720664978027344
    9. ',
' → logprob: -3.8720664978027344
    10. '(n' → logprob: -3.9970664978027344

Token 183: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48841434717178345
    2. 'position' → logprob: -2.2384142875671387
    3. '#' → logprob: -2.3634142875671387
    4. 'import' → logprob: -2.8634142875671387
    5. '\n' → logprob: -3.3634142875671387
    6. 'def' → logprob: -3.8634142875671387
    7. '
' → logprob: -3.9884142875671387
    8. 'pos' → logprob: -4.113414287567139
    9. '\' → logprob: -4.988414287567139
    10. '

' → logprob: -5.363414287567139

Token 184: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5000051259994507
    2. '
' → logprob: -1.7500051259994507
    3. 'import' → logprob: -2.7500052452087402
    4. 'position' → logprob: -3.0000052452087402
    5. 'n' → logprob: -3.1250052452087402
    6. '\n' → logprob: -3.8750052452087402
    7. '_' → logprob: -5.00000524520874
    8. '\' → logprob: -5.62500524520874
    9. 'max' → logprob: -5.75000524520874
    10. ' 
' → logprob: -5.75000524520874

Token 185: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0747802257537842
    2. ' continue' → logprob: -1.0747802257537842
    3. 'continue' → logprob: -2.199780225753784
    4. '_' → logprob: -2.449780225753784
    5. ' peux' → logprob: -3.449780225753784
    6. 'pe' → logprob: -4.449780464172363
    7. ' #' → logprob: -4.574780464172363
    8. 'n' → logprob: -4.824780464172363
    9. 'don' → logprob: -5.199780464172363
    10. ' peut' → logprob: -5.324780464172363

Token 186: ' utiliser' (ID: 43227)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.0472140312194824
    2. ' continuer' → logprob: -1.1722140312194824
    3. ' utiliser' → logprob: -1.6722140312194824
    4. 'util' → logprob: -3.6722140312194824
    5. ' stock' → logprob: -4.172214031219482
    6. 'don' → logprob: -4.547214031219482
    7. 'import' → logprob: -4.547214031219482
    8. 'assign' → logprob: -4.922214031219482
    9. 'penser' → logprob: -4.922214031219482
    10. 'sim' → logprob: -5.172214031219482

Token 187: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.46493232250213623
    2. ' une' → logprob: -1.4649323225021362
    3. 'un' → logprob: -2.214932441711426
    4. 'une' → logprob: -4.214932441711426
    5. ' des' → logprob: -4.214932441711426
    6. 'des' → logprob: -7.339932441711426
    7. 'position' → logprob: -8.214932441711426
    8. 'l' → logprob: -8.589932441711426
    9. ' l' → logprob: -9.464932441711426
    10. 'positions' → logprob: -9.714932441711426

Token 188: ' compteur' (ID: 163344)
  Prédit: ' diction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diction' → logprob: -0.7760792970657349
    2. 'dict' → logprob: -1.6510792970657349
    3. ' dict' → logprob: -1.7760792970657349
    4. 'd' → logprob: -3.0260791778564453
    5. ' segment' → logprob: -3.0260791778564453
    6. 'segment' → logprob: -3.5260791778564453
    7. ' fen' → logprob: -5.276079177856445
    8. 'int' → logprob: -5.401079177856445
    9. ' compteur' → logprob: -5.401079177856445
    10. 'counter' → logprob: -5.526079177856445

Token 189: ' decre' (ID: 12889)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.6581976413726807
    2. '_position' → logprob: -1.7831976413726807
    3. '_pos' → logprob: -2.0331976413726807
    4. 'pos' → logprob: -2.1581976413726807
    5. 'current' → logprob: -3.0331976413726807
    6. ' position' → logprob: -3.5331976413726807
    7. ' global' → logprob: -3.6581976413726807
    8. ' current' → logprob: -3.6581976413726807
    9. 'de' → logprob: -3.7831976413726807
    10. ' =' → logprob: -3.9081976413726807

Token 190: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.001426663831807673
    2. 'mentar' → logprob: -7.251426696777344
    3. 'mentation' → logprob: -8.001426696777344
    4. 'mented' → logprob: -8.501426696777344
    5. 'mental' → logprob: -9.501426696777344
    6. 'ments' → logprob: -10.626426696777344
    7. 'mentor' → logprob: -11.251426696777344
    8. 'mente' → logprob: -11.251426696777344
    9. 'm' → logprob: -11.751426696777344
    10. 'mant' → logprob: -11.876426696777344

Token 191: ' =>' (ID: 871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.149618148803711
    2. 'r' → logprob: -1.149618148803711
    3. 'd' → logprob: -1.274618148803711
    4. 'nt' → logprob: -2.899618148803711
    5. ',' → logprob: -5.024618148803711
    6. 'n' → logprob: -5.149618148803711
    7. '_counter' → logprob: -5.774618148803711
    8. ' =' → logprob: -6.274618148803711
    9. ' ' → logprob: -6.274618148803711
    10. ' _' → logprob: -6.899618148803711

Token 192: ' on' (ID: 402)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.668349266052246
    2. ' pos' → logprob: -1.668349266052246
    3. ' position' → logprob: -1.793349266052246
    4. ' next' → logprob: -2.418349266052246
    5. 'position' → logprob: -2.418349266052246
    6. ' current' → logprob: -2.918349266052246
    7. ' min' → logprob: -3.418349266052246
    8. 'current' → logprob: -3.543349266052246
    9. ' counter' → logprob: -3.668349266052246
    10. 'top' → logprob: -4.168349266052246

Token 193: ' attrib' (ID: 72186)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9569606184959412
    2. 'continue' → logprob: -2.081960678100586
    3. ' =' → logprob: -2.206960678100586
    4. ' decrement' → logprob: -2.831960678100586
    5. '=' → logprob: -2.956960678100586
    6. ' ' → logprob: -3.206960678100586
    7. 'contin' → logprob: -3.206960678100586
    8. '_' → logprob: -3.456960678100586
    9. 'n' → logprob: -4.206960678100586
    10. '#' → logprob: -4.206960678100586

Token 194: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.01641496829688549
    2. 'uer' → logprob: -4.141415119171143
    3. 'u' → logprob: -8.766414642333984
    4. 'ué' → logprob: -9.891414642333984
    5. 'uera' → logprob: -9.891414642333984
    6. 'uet' → logprob: -10.766414642333984
    7. ' ue' → logprob: -11.266414642333984
    8. 'e' → logprob: -11.266414642333984
    9. 'uent' → logprob: -11.391414642333984
    10. 'ues' → logprob: -11.516414642333984

Token 195: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.21653564274311066
    2. ' position' → logprob: -2.4665355682373047
    3. 'position' → logprob: -3.2165355682373047
    4. ' un' → logprob: -4.216535568237305
    5. ' counter' → logprob: -4.341535568237305
    6. ' a' → logprob: -5.216535568237305
    7. ' positions' → logprob: -5.216535568237305
    8. ' des' → logprob: -5.591535568237305
    9. 'positions' → logprob: -5.591535568237305
    10. ' compteur' → logprob: -5.966535568237305

Token 196: ' "' (ID: 392)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.400867223739624
    2. ' position' → logprob: -1.650867223739624
    3. ' nouvelle' → logprob: -1.775867223739624
    4. 'position' → logprob: -1.900867223739624
    5. ' nouveau' → logprob: -2.025867223739624
    6. ' nouvel' → logprob: -2.900867223739624
    7. 'new' → logprob: -4.025867462158203
    8. ' valeur' → logprob: -5.025867462158203
    9. ' compteur' → logprob: -5.775867462158203
    10. 'nou' → logprob: -5.775867462158203

Token 197: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.20574750006198883
    2. ' position' → logprob: -2.330747604370117
    3. ' new' → logprob: -3.955747604370117
    4. ' nouvelle' → logprob: -3.955747604370117
    5. 'new' → logprob: -4.330747604370117
    6. 'pos' → logprob: -4.705747604370117
    7. ' nouveau' → logprob: -5.455747604370117
    8. 'counter' → logprob: -5.705747604370117
    9. 'nou' → logprob: -5.705747604370117
    10. '-' → logprob: -5.830747604370117

Token 198: ' virtuelle' (ID: 148533)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.8437549471855164
    2. '_min' → logprob: -1.0937550067901611
    3. '_' → logprob: -2.468755006790161
    4. ' =' → logprob: -2.593755006790161
    5. 'min' → logprob: -4.093754768371582
    6. '-=' → logprob: -4.843754768371582
    7. '-' → logprob: -4.968754768371582
    8. ' -' → logprob: -5.218754768371582
    9. '_minus' → logprob: -5.343754768371582
    10. '=' → logprob: -5.343754768371582

Token 199: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5529890060424805
    2. '_"' → logprob: -1.6779890060424805
    3. '_' → logprob: -2.1779890060424805
    4. ' "' → logprob: -3.1779890060424805
    5. '_position' → logprob: -3.8029890060424805
    6. '_min' → logprob: -3.8029890060424805
    7. ' =' → logprob: -4.0529890060424805
    8. '_pos' → logprob: -5.1779890060424805
    9. ' ="' → logprob: -6.3029890060424805
    10. '_counter' → logprob: -6.6779890060424805

Token 200: ' plus' (ID: 2932)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7424035668373108
    2. ' =' → logprob: -0.9924035668373108
    3. ' ' → logprob: -3.367403507232666
    4. ',' → logprob: -3.492403507232666
    5. ' _' → logprob: -3.742403507232666
    6. '=' → logprob: -3.992403507232666
    7. '_position' → logprob: -4.492403507232666
    8. 'position' → logprob: -5.492403507232666
    9. '

' → logprob: -5.617403507232666
    10. ')' → logprob: -6.117403507232666

Token 201: ' petite' (ID: 28119)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6024158596992493
    2. ' -' → logprob: -1.2274158000946045
    3. ' -=' → logprob: -2.9774158000946045
    4. '=' → logprob: -3.2274158000946045
    5. ' =' → logprob: -3.4774158000946045
    6. 'import' → logprob: -4.477416038513184
    7. '-=' → logprob: -4.727416038513184
    8. 'moins' → logprob: -6.102416038513184
    9. '_small' → logprob: -6.227416038513184
    10. '1' → logprob: -6.477416038513184

Token 202: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2335309982299805
    2. ',' → logprob: -1.4835309982299805
    3. ' =' → logprob: -1.6085309982299805
    4. '_' → logprob: -2.4835309982299805
    5. '=' → logprob: -3.1085309982299805
    6. '\n' → logprob: -3.3585309982299805
    7. 'import' → logprob: -3.9835309982299805
    8. '.' → logprob: -4.6085309982299805
    9. ' \' → logprob: -4.7335309982299805
    10. '  ' → logprob: -4.7335309982299805

Token 203: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.822330117225647
    2. '_' → logprob: -1.572330117225647
    3. ' =' → logprob: -1.822330117225647
    4. ' ' → logprob: -2.9473299980163574
    5. '=' → logprob: -3.6973299980163574
    6. '.' → logprob: -4.072329998016357
    7. '<|end|>' → logprob: -4.072329998016357
    8. 'import' → logprob: -4.322329998016357
    9. ')' → logprob: -4.947329998016357
    10. '
' → logprob: -5.197329998016357

Token 204: ' Les' (ID: 7029)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9100438356399536
    2. 'position' → logprob: -1.4100438356399536
    3. '\n' → logprob: -2.285043716430664
    4. '
' → logprob: -2.535043716430664
    5. 'def' → logprob: -3.035043716430664
    6. '

' → logprob: -3.785043716430664
    7. ',' → logprob: -4.035043716430664
    8. 'import' → logprob: -4.285043716430664
    9. 'pos' → logprob: -4.285043716430664
    10. '#' → logprob: -4.910043716430664

Token 205: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.35609203577041626
    2. ' positions' → logprob: -1.3560919761657715
    3. 'position' → logprob: -3.9810919761657715
    4. ' espaces' → logprob: -4.9810919761657715
    5. '_positions' → logprob: -5.3560919761657715
    6. '#' → logprob: -6.1060919761657715
    7. 'pos' → logprob: -6.4810919761657715
    8. '_' → logprob: -6.6060919761657715
    9. ' position' → logprob: -6.7310919761657715
    10. 'esp' → logprob: -6.7310919761657715

Token 206: ' min' (ID: 1349)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06561809033155441
    2. '=' → logprob: -3.0656180381774902
    3. ' ' → logprob: -5.19061803817749
    4. '_' → logprob: -5.31561803817749
    5. '_virtual' → logprob: -7.19061803817749
    6. '.append' → logprob: -7.94061803817749
    7. '_min' → logprob: -8.065618515014648
    8. '[position' → logprob: -8.190618515014648
    9. '_act' → logprob: -8.315618515014648
    10. '.sort' → logprob: -8.565618515014648

Token 207: 'orer' (ID: 13634)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2625861167907715
    2. '_val' → logprob: -2.1375861167907715
    3. '_' → logprob: -3.6375861167907715
    4. '=' → logprob: -4.0125861167907715
    5. 'imum' → logprob: -4.0125861167907715
    6. ' -=' → logprob: -4.2625861167907715
    7. ' ' → logprob: -4.6375861167907715
    8. 'im' → logprob: -4.7625861167907715
    9. '_value' → logprob: -6.6375861167907715
    10. 'imal' → logprob: -7.0125861167907715

Token 208: 'ont' (ID: 645)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6187801361083984
    2. '=' → logprob: -2.1187801361083984
    3. 'es' → logprob: -2.2437801361083984
    4. '_' → logprob: -3.1187801361083984
    5. 'def' → logprob: -3.1187801361083984
    6. ' =' → logprob: -3.3687801361083984
    7. ')' → logprob: -3.9937801361083984
    8. 'r' → logprob: -4.243780136108398
    9. ' ' → logprob: -4.618780136108398
    10. ',' → logprob: -4.618780136108398

Token 209: ' les' (ID: 1341)
  Prédit: ' toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.3466437757015228
    2. ' les' → logprob: -1.8466438055038452
    3. 'es' → logprob: -3.0966436862945557
    4. ' ' → logprob: -3.9716436862945557
    5. ' la' → logprob: -4.596643924713135
    6. ' all' → logprob: -4.846643924713135
    7. 't' → logprob: -4.971643924713135
    8. ' l' → logprob: -5.096643924713135
    9. 'tout' → logprob: -5.471643924713135
    10. 's' → logprob: -5.596643924713135

Token 210: ' preced' (ID: 25951)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9723308086395264
    2. ' positions' → logprob: -1.0973308086395264
    3. ' indices' → logprob: -2.3473308086395264
    4. ' autres' → logprob: -2.5973308086395264
    5. 'indices' → logprob: -3.0973308086395264
    6. ' suivantes' → logprob: -3.7223308086395264
    7. ' anciennes' → logprob: -4.9723310470581055
    8. ' espaces' → logprob: -5.3473310470581055
    9. 'aut' → logprob: -5.5973310470581055
    10. ' toutes' → logprob: -5.5973310470581055

Token 211: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.09738162904977798
    2. 'ents' → logprob: -3.472381591796875
    3. 'ent' → logprob: -3.597381591796875
    4. 'nt' → logprob: -3.847381591796875
    5. 'd' → logprob: -4.972381591796875
    6. 'n' → logprob: -7.222381591796875
    7. 'emment' → logprob: -7.347381591796875
    8. 'ente' → logprob: -7.597381591796875
    9. '#' → logprob: -7.722381591796875
    10. 'dent' → logprob: -7.722381591796875

Token 212: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34008562564849854
    2. 'def' → logprob: -1.8400856256484985
    3. 'import' → logprob: -3.590085506439209
    4. '
' → logprob: -3.715085506439209
    5. '#' → logprob: -3.840085506439209
    6. '

' → logprob: -3.965085506439209
    7. 'position' → logprob: -4.590085506439209
    8. ',' → logprob: -4.840085506439209
    9. ',
' → logprob: -5.715085506439209
    10. '\n' → logprob: -5.965085506439209

Token 213: ' donc' (ID: 14206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5951254963874817
    2. ' ce' → logprob: -1.095125436782837
    3. 'import' → logprob: -3.720125436782837
    4. 'ce' → logprob: -3.970125436782837
    5. 'position' → logprob: -4.345125675201416
    6. ' et' → logprob: -4.720125675201416
    7. 'et' → logprob: -4.845125675201416
    8. ' donc' → logprob: -5.220125675201416
    9. 'def' → logprob: -5.970125675201416
    10. 'positions' → logprob: -5.970125675201416

Token 214: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.3461664915084839
    2. ' la' → logprob: -1.7211664915084839
    3. ' l' → logprob: -2.3461666107177734
    4. 'l' → logprob: -2.4711666107177734
    5. 'le' → logprob: -2.4711666107177734
    6. 'la' → logprob: -2.5961666107177734
    7. 'on' → logprob: -2.8461666107177734
    8. 'les' → logprob: -2.9711666107177734
    9. ' les' → logprob: -3.7211666107177734
    10. ' elles' → logprob: -4.096166610717773

Token 215: ''ordre' (ID: 124753)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.1283904314041138
    2. ''' → logprob: -1.6283904314041138
    3. ' '' → logprob: -2.128390312194824
    4. 'e' → logprob: -3.128390312194824
    5. ''ordre' → logprob: -3.128390312194824
    6. '#' → logprob: -3.378390312194824
    7. 'position' → logprob: -3.503390312194824
    8. ' positions' → logprob: -3.503390312194824
    9. ' a' → logprob: -3.503390312194824
    10. 'a' → logprob: -4.003390312194824

Token 216: ' final' (ID: 1721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11046531051397324
    2. '=' → logprob: -2.6104652881622314
    3. ' ' → logprob: -4.7354655265808105
    4. ',' → logprob: -5.8604655265808105
    5. 'import' → logprob: -5.9854655265808105
    6. 'def' → logprob: -6.3604655265808105
    7. '_' → logprob: -6.4854655265808105
    8. ' ,' → logprob: -6.6104655265808105
    9. ' est' → logprob: -6.6104655265808105
    10. 'continue' → logprob: -6.8604655265808105

Token 217: ' est' (ID: 893)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0669758319854736
    2. 'def' → logprob: -1.5669758319854736
    3. '

' → logprob: -2.0669758319854736
    4. '#' → logprob: -2.6919758319854736
    5. 'position' → logprob: -2.8169758319854736
    6. 'n' → logprob: -3.3169758319854736
    7. '
' → logprob: -3.4419758319854736
    8. '_position' → logprob: -3.8169758319854736
    9. 'positions' → logprob: -3.8169758319854736
    10. ',' → logprob: -4.3169755935668945

Token 218: ' les' (ID: 1341)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -1.2860862016677856
    2. 'bien' → logprob: -2.286086082458496
    3. 'respect' → logprob: -2.411086082458496
    4. ' correct' → logprob: -2.411086082458496
    5. 'maint' → logprob: -2.911086082458496
    6. 'le' → logprob: -3.036086082458496
    7. ' respect' → logprob: -3.286086082458496
    8. 'con' → logprob: -3.286086082458496
    9. ' bien' → logprob: -3.286086082458496
    10. ' invers' → logprob: -3.536086082458496

Token 219: ' elements' (ID: 8632)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6675572991371155
    2. ' positions' → logprob: -0.7925572991371155
    3. 'sorted' → logprob: -4.042557239532471
    4. ' sorted' → logprob: -4.792557239532471
    5. 'position' → logprob: -5.792557239532471
    6. ' position' → logprob: -6.417557239532471
    7. ' indices' → logprob: -7.042557239532471
    8. 'indices' → logprob: -7.542557239532471
    9. ' plus' → logprob: -7.917557239532471
    10. 'rang' → logprob: -8.167557716369629

Token 220: ' tries' (ID: 30519)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.027070779353380203
    2. 'tri' → logprob: -4.527070999145508
    3. ' par' → logprob: -5.777070999145508
    4. '#' → logprob: -6.027070999145508
    5. 'tr' → logprob: -6.277070999145508
    6. '.sort' → logprob: -6.652070999145508
    7. 'class' → logprob: -6.902070999145508
    8. ' ord' → logprob: -6.902070999145508
    9. 'sorted' → logprob: -7.152070999145508
    10. ' class' → logprob: -7.402070999145508

Token 221: ' par' (ID: 686)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7155176401138306
    2. 'par' → logprob: -1.3405176401138306
    3. 'def' → logprob: -2.840517520904541
    4. '#' → logprob: -3.215517520904541
    5. '=' → logprob: -3.465517520904541
    6. ' =' → logprob: -3.840517520904541
    7. '_par' → logprob: -4.465517520904541
    8. ' par' → logprob: -4.715517520904541
    9. 'sur' → logprob: -4.840517520904541
    10. 'positions' → logprob: -4.840517520904541

Token 222: ' leur' (ID: 9853)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.7102973461151123
    2. 'position' → logprob: -0.7102973461151123
    3. 'leur' → logprob: -5.210297584533691
    4. 'positions' → logprob: -5.460297584533691
    5. '"' → logprob: -6.210297584533691
    6. ' leur' → logprob: -6.585297584533691
    7. ''' → logprob: -6.710297584533691
    8. ' positions' → logprob: -6.960297584533691
    9. '_position' → logprob: -7.960297584533691
    10. 'pos' → logprob: -7.960297584533691

Token 223: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.07461388409137726
    2. 'position' → logprob: -2.6996138095855713
    3. ' positions' → logprob: -6.07461404800415
    4. '_position' → logprob: -6.57461404800415
    5. 'positions' → logprob: -7.69961404800415
    6. 'pos' → logprob: -8.824613571166992
    7. '"' → logprob: -9.199613571166992
    8. '_positions' → logprob: -9.949613571166992
    9. ' pos' → logprob: -10.449613571166992
    10. '_' → logprob: -10.449613571166992

Token 224: ' effective' (ID: 8488)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5663900375366211
    2. '

' → logprob: -2.191390037536621
    3. '
' → logprob: -2.441390037536621
    4. 'import' → logprob: -2.441390037536621
    5. 'def' → logprob: -2.816390037536621
    6. '\n' → logprob: -2.941390037536621
    7. '(n' → logprob: -4.191390037536621
    8. ',' → logprob: -5.441390037536621
    9. ',
' → logprob: -6.316390037536621
    10. ' n' → logprob: -6.691390037536621

Token 225: '.

' (ID: 364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2694782614707947
    2. 'def' → logprob: -2.1444783210754395
    3. 'import' → logprob: -2.7694783210754395
    4. '
' → logprob: -3.7694783210754395
    5. 'from' → logprob: -4.2694783210754395
    6. '(n' → logprob: -4.8944783210754395
    7. ',' → logprob: -6.0194783210754395
    8. '#' → logprob: -6.1444783210754395
    9. '\n' → logprob: -6.1444783210754395
    10. '

' → logprob: -6.5194783210754395

Token 226: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02672879584133625
    2. '\n' → logprob: -4.276728630065918
    3. 'def' → logprob: -5.151728630065918
    4. 'import' → logprob: -5.651728630065918
    5. '(n' → logprob: -6.651728630065918
    6. '
' → logprob: -7.776728630065918
    7. '(' → logprob: -8.276728630065918
    8. '\' → logprob: -8.401728630065918
    9. ' n' → logprob: -8.776728630065918
    10. '

' → logprob: -8.901728630065918

Token 227: ' Implementation' (ID: 60216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3171154856681824
    2. 'n' → logprob: -1.4421155452728271
    3. 'import' → logprob: -4.067115306854248
    4. 'from' → logprob: -4.067115306854248
    5. 'input' → logprob: -7.192115306854248
    6. '#' → logprob: -8.692115783691406
    7. ' n' → logprob: -9.567115783691406
    8. ' def' → logprob: -11.192115783691406
    9. ' from' → logprob: -11.317115783691406
    10. 'read' → logprob: -11.317115783691406

Token 228: ' detail' (ID: 10851)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12283177673816681
    2. 'def' → logprob: -2.2478318214416504
    3. 'import' → logprob: -4.87283182144165
    4. 'class' → logprob: -6.74783182144165
    5. 'from' → logprob: -6.87283182144165
    6. ' n' → logprob: -9.997831344604492
    7. '
' → logprob: -10.247831344604492
    8. '#' → logprob: -12.497831344604492
    9. '(n' → logprob: -12.872831344604492
    10. 'ndef' → logprob: -12.872831344604492

Token 229: 'lee' (ID: 10769)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.35042083263397217
    2. 'n' → logprob: -2.7254209518432617
    3. ' =' → logprob: -2.8504209518432617
    4. 'import' → logprob: -2.9754209518432617
    5. ':' → logprob: -3.2254209518432617
    6. ' n' → logprob: -3.3504209518432617
    7. 's' → logprob: -4.100420951843262
    8. ' :
' → logprob: -4.600420951843262
    9. ' import' → logprob: -4.850420951843262
    10. 'def' → logprob: -5.725420951843262

Token 230: ' :
' (ID: 10039)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37903428077697754
    2. 'def' → logprob: -1.2540342807769775
    3. 'import' → logprob: -3.6290342807769775
    4. 'class' → logprob: -6.129034042358398
    5. '
' → logprob: -7.254034042358398
    6. 'from' → logprob: -8.629034042358398
    7. ' n' → logprob: -9.129034042358398
    8. '(n' → logprob: -9.129034042358398
    9. ':' → logprob: -9.379034042358398
    10. '

' → logprob: -10.254034042358398

Token 231: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21068312227725983
    2. 'def' → logprob: -1.8356831073760986
    3. 'import' → logprob: -3.5856831073760986
    4. 'class' → logprob: -6.710683345794678
    5. ' n' → logprob: -7.460683345794678
    6. 'from' → logprob: -7.460683345794678
    7. '#' → logprob: -8.58568286895752
    8. 'input' → logprob: -9.21068286895752
    9. ' def' → logprob: -10.58568286895752
    10. ' import' → logprob: -10.71068286895752

Token 232: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13067695498466492
    2. 'def' → logprob: -2.8806769847869873
    3. 'import' → logprob: -3.1306769847869873
    4. 'class' → logprob: -4.380676746368408
    5. 'from' → logprob: -5.005676746368408
    6. ' n' → logprob: -5.880676746368408
    7. '#' → logprob: -8.005677223205566
    8. 'input' → logprob: -9.130677223205566
    9. ' import' → logprob: -9.255677223205566
    10. ' class' → logprob: -9.880677223205566

Token 233: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.250347763299942
    2. ' n' → logprob: -2.375347852706909
    3. 'def' → logprob: -2.500347852706909
    4. 'import' → logprob: -3.500347852706909
    5. 'from' → logprob: -4.25034761428833
    6. ' def' → logprob: -7.50034761428833
    7. 'On' → logprob: -7.87534761428833
    8. ' import' → logprob: -7.87534761428833
    9. '#' → logprob: -8.750348091125488
    10. 'input' → logprob: -8.875348091125488

Token 234: ' initialise' (ID: 145250)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18838690221309662
    2. 'def' → logprob: -3.063386917114258
    3. ' n' → logprob: -3.188386917114258
    4. 'import' → logprob: -3.563386917114258
    5. 'continue' → logprob: -4.438386917114258
    6. ' continue' → logprob: -5.063386917114258
    7. 'initial' → logprob: -5.563386917114258
    8. 'l' → logprob: -5.813386917114258
    9. 'a' → logprob: -6.188386917114258
    10. 'aj' → logprob: -6.313386917114258

Token 235: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.65639728307724
    2. ' n' → logprob: -1.5313973426818848
    3. 'pos' → logprob: -2.0313973426818848
    4. 'position' → logprob: -2.1563973426818848
    5. ' position' → logprob: -5.281397342681885
    6. 'positions' → logprob: -5.406397342681885
    7. ' pos' → logprob: -5.656397342681885
    8. ' une' → logprob: -6.406397342681885
    9. 'un' → logprob: -7.531397342681885
    10. 'une' → logprob: -7.656397342681885

Token 236: '[x' (ID: 17295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02646040916442871
    2. '=' → logprob: -3.6514604091644287
    3. 's' → logprob: -8.901460647583008
    4. '=[' → logprob: -12.526460647583008
    5. '=[]' → logprob: -12.776460647583008
    6. '={}' → logprob: -12.776460647583008
    7. ',' → logprob: -13.151460647583008
    8. '_' → logprob: -13.901460647583008
    9. 'position' → logprob: -14.026460647583008
    10. 'es' → logprob: -14.026460647583008

Token 237: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010711579816415906
    2. ' ]' → logprob: -7.626070976257324
    3. ']=' → logprob: -7.751070976257324
    4. '[x' → logprob: -9.376070976257324
    5. '=' → logprob: -10.626070976257324
    6. 's' → logprob: -11.001070976257324
    7. ' =' → logprob: -11.751070976257324
    8. 'x' → logprob: -12.251070976257324
    9. '[' → logprob: -12.501070976257324
    10. '   ' → logprob: -13.251070976257324

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868955969810486
    2. '=' → logprob: -1.1368956565856934
    3. '=[' → logprob: -11.011895179748535
    4. '[' → logprob: -13.136895179748535
    5. ' =[' → logprob: -13.386895179748535
    6. '[x' → logprob: -14.136895179748535
    7. 's' → logprob: -14.511895179748535
    8. '=[]' → logprob: -14.636895179748535
    9. 'import' → logprob: -15.011895179748535
    10. ' ' → logprob: -15.011895179748535

Token 239: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007660227827727795
    2. ' x' → logprob: -4.882660388946533
    3. 'int' → logprob: -9.882659912109375
    4. 'import' → logprob: -14.507659912109375
    5. ' int' → logprob: -14.632659912109375
    6. '0' → logprob: -14.757659912109375
    7. ' ' → logprob: -14.882659912109375
    8. 'i' → logprob: -15.007659912109375
    9. '	x' → logprob: -15.382659912109375
    10. '(x' → logprob: -15.882659912109375

Token 240: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7898905873298645
    2. 'n' → logprob: -1.0398905277252197
    3. '#' → logprob: -2.6648905277252197
    4. 'import' → logprob: -2.9148905277252197
    5. ',' → logprob: -3.7898905277252197
    6. 'for' → logprob: -3.9148905277252197
    7. '\n' → logprob: -5.039890766143799
    8. ',
' → logprob: -5.039890766143799
    9. '(n' → logprob: -5.914890766143799
    10. ' for' → logprob: -6.164890766143799

Token 241: ' tous' (ID: 10688)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5760309100151062
    2. ' x' → logprob: -0.8260309100151062
    3. '_' → logprob: -10.451030731201172
    4. ' ' → logprob: -10.701030731201172
    5. ' _' → logprob: -10.701030731201172
    6. ' ' → logprob: -12.201030731201172
    7. ' range' → logprob: -12.326030731201172
    8. ' i' → logprob: -12.451030731201172
    9. '_x' → logprob: -13.701030731201172
    10. '1' → logprob: -14.201030731201172

Token 242: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04377949237823486
    2. 'x' → logprob: -3.1687793731689453
    3. ' ' → logprob: -7.668779373168945
    4. ' _' → logprob: -8.293779373168945
    5. '_' → logprob: -10.793779373168945
    6. ' i' → logprob: -11.543779373168945
    7. ' xrange' → logprob: -12.043779373168945
    8. ' range' → logprob: -12.418779373168945
    9. ' ' → logprob: -12.668779373168945
    10. ' )' → logprob: -13.168779373168945

Token 243: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4276357889175415
    2. '#' → logprob: -1.5526357889175415
    3. '
' → logprob: -1.6776357889175415
    4. '[n' → logprob: -2.802635669708252
    5. ' =' → logprob: -2.927635669708252
    6. ',' → logprob: -3.052635669708252
    7. 'import' → logprob: -3.302635669708252
    8. '=' → logprob: -3.677635669708252
    9. '[' → logprob: -4.177635669708252
    10. 'x' → logprob: -4.177635669708252

Token 244: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1521410346031189
    2. 'n' → logprob: -2.1521410942077637
    3. 'position' → logprob: -4.027141094207764
    4. 'import' → logprob: -6.027141094207764
    5. '\n' → logprob: -6.652141094207764
    6. 'x' → logprob: -6.902141094207764
    7. 'positions' → logprob: -7.277141094207764
    8. '
' → logprob: -7.652141094207764
    9. '```' → logprob: -7.902141094207764
    10. ' n' → logprob: -8.527140617370605

Token 245: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11205228418111801
    2. '#' → logprob: -2.3620522022247314
    3. 'import' → logprob: -4.8620524406433105
    4. 'from' → logprob: -7.1120524406433105
    5. 'position' → logprob: -7.1120524406433105
    6. ' n' → logprob: -7.2370524406433105
    7. '-' → logprob: -7.3620524406433105
    8. 'def' → logprob: -7.8620524406433105
    9. ' #' → logprob: -8.612051963806152
    10. ' -' → logprob: -9.237051963806152

Token 246: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1007639467716217
    2. ' n' → logprob: -3.600764036178589
    3. 'def' → logprob: -3.850764036178589
    4. 'position' → logprob: -4.47576379776001
    5. '#' → logprob: -4.60076379776001
    6. 'On' → logprob: -4.72576379776001
    7. 'from' → logprob: -4.97576379776001
    8. 'import' → logprob: -5.35076379776001
    9. 'pos' → logprob: -6.47576379776001
    10. ' position' → logprob: -7.22576379776001

Token 247: ' initialise' (ID: 145250)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0665743350982666
    2. 'position' → logprob: -1.6915743350982666
    3. 'n' → logprob: -2.3165743350982666
    4. 'contin' → logprob: -2.5665743350982666
    5. 'for' → logprob: -2.9415743350982666
    6. 'initial' → logprob: -3.1915743350982666
    7. 'min' → logprob: -3.1915743350982666
    8. 'pos' → logprob: -4.4415740966796875
    9. 'maint' → logprob: -4.4415740966796875
    10. 'de' → logprob: -4.4415740966796875

Token 248: ' cur' (ID: 4396)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9701855778694153
    2. 'cur' → logprob: -1.4701855182647705
    3. 'pos' → logprob: -2.0951855182647705
    4. 'current' → logprob: -2.2201855182647705
    5. ' min' → logprob: -3.3451855182647705
    6. 'top' → logprob: -3.4701855182647705
    7. ' current' → logprob: -3.7201855182647705
    8. ' cur' → logprob: -3.9701855182647705
    9. 'counter' → logprob: -4.72018575668335
    10. 'curr' → logprob: -4.84518575668335

Token 249: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0462685227394104
    2. 'pos' → logprob: -3.4212684631347656
    3. '_position' → logprob: -4.921268463134766
    4. ' =' → logprob: -5.671268463134766
    5. '_min' → logprob: -7.296268463134766
    6. '=-' → logprob: -7.796268463134766
    7. '=' → logprob: -8.296268463134766
    8. 'Pos' → logprob: -8.796268463134766
    9. 'rent' → logprob: -9.671268463134766
    10. '_rank' → logprob: -9.796268463134766

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934205889701843
    2. ' =' → logprob: -0.6934205889701843
    3. '=-' → logprob: -8.31842041015625
    4. '-=' → logprob: -11.44342041015625
    5. '=n' → logprob: -11.94342041015625
    6. '=int' → logprob: -12.06842041015625
    7. ' -=' → logprob: -12.69342041015625
    8. ' ' → logprob: -14.81842041015625
    9. 'n' → logprob: -14.94342041015625
    10. '=cut' → logprob: -15.31842041015625

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8312570318812504e-05
    2. ' ' → logprob: -11.125018119812012
    3. '-' → logprob: -12.875018119812012
    4. '1' → logprob: -14.375018119812012
    5. '=' → logprob: -15.750018119812012
    6. '000' → logprob: -17.000019073486328
    7. '۰' → logprob: -17.000019073486328
    8. '```' → logprob: -17.250019073486328
    9. ' -' → logprob: -17.375019073486328
    10. '０' → logprob: -17.375019073486328

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. '-' → logprob: -12.875005722045898
    3. ' ' → logprob: -12.875005722045898
    4. '1' → logprob: -15.500005722045898
    5. '=' → logprob: -17.5000057220459
    6. '000' → logprob: -17.6250057220459
    7. '０' → logprob: -17.7500057220459
    8. '۰' → logprob: -17.7500057220459
    9. '-(' → logprob: -17.8750057220459
    10. '-n' → logprob: -17.8750057220459

Token 253: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013628240674734116
    2. '#' → logprob: -5.013628005981445
    3. 'import' → logprob: -5.888628005981445
    4. 'cur' → logprob: -6.263628005981445
    5. '
' → logprob: -7.138628005981445
    6. '\n' → logprob: -8.138628005981445
    7. '

' → logprob: -8.638628005981445
    8. 'n' → logprob: -9.013628005981445
    9. '  
' → logprob: -9.263628005981445
    10. '-' → logprob: -9.388628005981445

Token 254: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3117463290691376
    2. 'import' → logprob: -1.93674635887146
    3. '
' → logprob: -2.43674635887146
    4. 'n' → logprob: -4.061746120452881
    5. 'cur' → logprob: -4.561746120452881
    6. 'def' → logprob: -6.561746120452881
    7. '(n' → logprob: -6.686746120452881
    8. ',' → logprob: -6.686746120452881
    9. '\n' → logprob: -6.936746120452881
    10. 'input' → logprob: -7.561746120452881

Token 255: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.749182939529419
    2. 'cur' → logprob: -1.624182939529419
    3. 'import' → logprob: -2.374182939529419
    4. 'm' → logprob: -2.624182939529419
    5. 'for' → logprob: -3.124182939529419
    6. 'def' → logprob: -3.374182939529419
    7. 'n' → logprob: -3.374182939529419
    8. 'position' → logprob: -4.12418270111084
    9. '-' → logprob: -4.37418270111084
    10. '
' → logprob: -4.74918270111084

Token 256: ' Pour' (ID: 13931)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.6946207880973816
    2. 'for' → logprob: -1.1946208477020264
    3. '#' → logprob: -2.6946208477020264
    4. ' for' → logprob: -3.6946208477020264
    5. 'import' → logprob: -4.069620609283447
    6. ' On' → logprob: -4.069620609283447
    7. 'def' → logprob: -4.194620609283447
    8. 'cur' → logprob: -4.569620609283447
    9. ' on' → logprob: -5.069620609283447
    10. 'on' → logprob: -5.069620609283447

Token 257: ' chaque' (ID: 21194)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -1.0313458442687988
    2. ' chaque' → logprob: -1.1563458442687988
    3. ' _' → logprob: -1.9063458442687988
    4. ' i' → logprob: -2.531345844268799
    5. 'e' → logprob: -3.656345844268799
    6. '_' → logprob: -3.781345844268799
    7. ' x' → logprob: -4.031345844268799
    8. ' each' → logprob: -4.281345844268799
    9. 'i' → logprob: -4.531345844268799
    10. 'x' → logprob: -5.406345844268799

Token 258: ' requ' (ID: 7028)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.14690467715263367
    2. 'e' → logprob: -2.146904706954956
    3. ' requ' → logprob: -5.271904468536377
    4. 'element' → logprob: -5.521904468536377
    5. ' element' → logprob: -5.771904468536377
    6. ' ei' → logprob: -6.521904468536377
    7. 'ei' → logprob: -6.521904468536377
    8. 'requ' → logprob: -6.646904468536377
    9. ' query' → logprob: -7.646904468536377
    10. ' x' → logprob: -8.021904945373535

Token 259: 'ete' (ID: 4539)
  Prédit: 'ete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ete' → logprob: -0.1269782930612564
    2. 'ête' → logprob: -2.1269783973693848
    3. 'ète' → logprob: -10.876977920532227
    4. 'e' → logprob: -11.251977920532227
    5. 'ê' → logprob: -12.126977920532227
    6. 'et' → logprob: -12.376977920532227
    7. 'eté' → logprob: -13.376977920532227
    8. '#' → logprob: -13.376977920532227
    9. 'ette' → logprob: -13.751977920532227
    10. 'ETE' → logprob: -13.876977920532227

Token 260: ' e' (ID: 319)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2251085638999939
    2. ' :' → logprob: -1.7251086235046387
    3. ',' → logprob: -3.9751086235046387
    4. ':
' → logprob: -6.225108623504639
    5. 'e' → logprob: -7.225108623504639
    6. ' ,' → logprob: -7.475108623504639
    7. ' e' → logprob: -7.600108623504639
    8. ' :
' → logprob: -8.10010814666748
    9. ' in' → logprob: -8.97510814666748
    10. '   ' → logprob: -9.10010814666748

Token 261: ':
' (ID: 734)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.011749555356800556
    2. '_' → logprob: -4.511749744415283
    3. ' =' → logprob: -8.136749267578125
    4. '=' → logprob: -8.886749267578125
    5. ' in' → logprob: -9.261749267578125
    6. 'in' → logprob: -10.011749267578125
    7. 'i' → logprob: -10.136749267578125
    8. '[i' → logprob: -10.636749267578125
    9. ',' → logprob: -10.761749267578125
    10. ':' → logprob: -10.886749267578125

Token 262: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09476391226053238
    2. '
' → logprob: -4.09476375579834
    3. '	position' → logprob: -4.21976375579834
    4. ' ' → logprob: -4.96976375579834
    5. '	input' → logprob: -4.96976375579834
    6. '	cur' → logprob: -5.09476375579834
    7. 'input' → logprob: -5.21976375579834
    8. ' cur' → logprob: -5.34476375579834
    9. ' position' → logprob: -5.59476375579834
    10. ' input' → logprob: -5.59476375579834

Token 263: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.806775689125061
    2. ' ' → logprob: -1.931775689125061
    3. '    ' → logprob: -1.931775689125061
    4. ' cur' → logprob: -1.931775689125061
    5. '	cur' → logprob: -3.6817755699157715
    6. ' position' → logprob: -3.6817755699157715
    7. 'cur' → logprob: -4.1817755699157715
    8. ' #' → logprob: -4.8067755699157715
    9. ' if' → logprob: -4.8067755699157715
    10. ' ' → logprob: -5.0567755699157715

Token 264: ' on' (ID: 402)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.1085331439971924
    2. 'position' → logprob: -1.2335331439971924
    3. 'cur' → logprob: -1.4835331439971924
    4. '   ' → logprob: -2.8585331439971924
    5. ' cur' → logprob: -2.8585331439971924
    6. 'if' → logprob: -4.108532905578613
    7. ' if' → logprob: -4.233532905578613
    8. 'pos' → logprob: -5.858532905578613
    9. 'input' → logprob: -7.358532905578613
    10. ' input' → logprob: -7.483532905578613

Token 265: ' met' (ID: 1421)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.256940245628357
    2. ' -=' → logprob: -1.881940245628357
    3. ' position' → logprob: -2.3819403648376465
    4. '   ' → logprob: -2.6319403648376465
    5. 'position' → logprob: -2.6319403648376465
    6. ' decrement' → logprob: -2.8819403648376465
    7. '-=' → logprob: -3.3819403648376465
    8. ' ' → logprob: -3.3819403648376465
    9. '    ' → logprob: -3.8819403648376465
    10. 'continue' → logprob: -4.1319403648376465

Token 266: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.18302254378795624
    2. ' position' → logprob: -1.8080224990844727
    3. '   ' → logprob: -6.683022499084473
    4. '	position' → logprob: -6.808022499084473
    5. ' ' → logprob: -8.058022499084473
    6. 'space' → logprob: -8.808022499084473
    7. '_position' → logprob: -8.808022499084473
    8. '[position' → logprob: -9.058022499084473
    9. '  ' → logprob: -9.558022499084473
    10. '    ' → logprob: -10.683022499084473

Token 267: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0012115450808778405
    2. '[' → logprob: -6.751211643218994
    3. ' [' → logprob: -10.876211166381836
    4. '[input' → logprob: -11.001211166381836
    5. 'e' → logprob: -13.626211166381836
    6. '\[' → logprob: -14.001211166381836
    7. '[element' → logprob: -14.376211166381836
    8. '```' → logprob: -14.376211166381836
    9. '[
' → logprob: -14.501211166381836
    10. '   ' → logprob: -14.501211166381836

Token 268: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027814581990242004
    2. '[e' → logprob: -6.627781391143799
    3. ']=' → logprob: -6.627781391143799
    4. 'e' → logprob: -9.127781867980957
    5. 'x' → logprob: -11.877781867980957
    6. '[x' → logprob: -12.752781867980957
    7. '=e' → logprob: -12.877781867980957
    8. ' ]' → logprob: -13.002781867980957
    9. '[i' → logprob: -13.377781867980957
    10. '-' → logprob: -13.377781867980957

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031954164151102304
    2. ' =' → logprob: -5.753195285797119
    3. '=e' → logprob: -11.628195762634277
    4. '-=' → logprob: -11.753195762634277
    5. ' -=' → logprob: -15.503195762634277
    6. '=input' → logprob: -15.753195762634277
    7. '=

' → logprob: -15.878195762634277
    8. '[e' → logprob: -16.25319480895996
    9. '[' → logprob: -16.62819480895996
    10. '=-' → logprob: -16.75319480895996

Token 270: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.020594444125890732
    2. ' cur' → logprob: -3.895594358444214
    3. '-cur' → logprob: -10.395594596862793
    4. '-' → logprob: -11.645594596862793
    5. '   ' → logprob: -12.770594596862793
    6. '	cur' → logprob: -13.020594596862793
    7. '(cur' → logprob: -13.395594596862793
    8. '[cur' → logprob: -13.770594596862793
    9. '--' → logprob: -13.895594596862793
    10. '```' → logprob: -14.270594596862793

Token 271: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.750000953674316
    3. 'pos' → logprob: -16.000001907348633
    4. ' _' → logprob: -16.375001907348633
    5. '_POS' → logprob: -17.500001907348633
    6. '_p' → logprob: -17.875001907348633
    7. '\' → logprob: -18.125001907348633
    8. 'Pos' → logprob: -18.375001907348633
    9. '_position' → logprob: -18.500001907348633
    10. '_val' → logprob: -18.875001907348633

Token 272: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3133796155452728
    2. '-' → logprob: -1.3133796453475952
    3. '   ' → logprob: -9.688379287719727
    4. '
' → logprob: -11.063379287719727
    5. ' -
' → logprob: -11.188379287719727
    6. ' -=' → logprob: -11.438379287719727
    7. '-
' → logprob: -11.813379287719727
    8. ' ' → logprob: -12.688379287719727
    9. '```' → logprob: -13.063379287719727
    10. '    ' → logprob: -14.188379287719727

Token 273: '#' (ID: 2)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12350546568632126
    2. '   ' → logprob: -2.8735053539276123
    3. ' -' → logprob: -3.1235053539276123
    4. '#' → logprob: -4.498505592346191
    5. '-
' → logprob: -5.748505592346191
    6. '    ' → logprob: -8.248505592346191
    7. 'cur' → logprob: -8.623505592346191
    8. ' -
' → logprob: -8.748505592346191
    9. ' #' → logprob: -8.998505592346191
    10. ' ' → logprob: -8.998505592346191

Token 274: '    ' (ID: 257)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.015069360844790936
    2. '   ' → logprob: -4.890069484710693
    3. '-' → logprob: -5.140069484710693
    4. ' #' → logprob: -7.515069484710693
    5. ' -' → logprob: -8.265069007873535
    6. '    ' → logprob: -8.515069007873535
    7. 'cur' → logprob: -8.765069007873535
    8. 'import' → logprob: -8.890069007873535
    9. ' ' → logprob: -9.890069007873535
    10. '       ' → logprob: -10.265069007873535

Token 275: ' on' (ID: 402)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.011168303899466991
    2. '   ' → logprob: -4.511168479919434
    3. ' cur' → logprob: -9.261168479919434
    4. '	cur' → logprob: -11.136168479919434
    5. '    ' → logprob: -11.761168479919434
    6. '       ' → logprob: -14.136168479919434
    7. ' ' → logprob: -14.136168479919434
    8. '  ' → logprob: -14.886168479919434
    9. '	' → logprob: -15.511168479919434
    10. '#' → logprob: -15.636168479919434

Token 276: ' decre' (ID: 12889)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1534801721572876
    2. ' -=' → logprob: -2.278480052947998
    3. '-' → logprob: -3.403480052947998
    4. ' ' → logprob: -5.278480052947998
    5. 'cur' → logprob: -7.278480052947998
    6. '   ' → logprob: -8.028480529785156
    7. '  ' → logprob: -8.903480529785156
    8. ' -' → logprob: -9.528480529785156
    9. ' ' → logprob: -9.903480529785156
    10. ' decrement' → logprob: -10.028480529785156

Token 277: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.12932893633842468
    2. 'mente' → logprob: -2.129328966140747
    3. 'm' → logprob: -6.629328727722168
    4. 'mented' → logprob: -7.629328727722168
    5. 'ments' → logprob: -8.254328727722168
    6. 'me' → logprob: -9.004328727722168
    7. '-' → logprob: -9.879328727722168
    8. 'mental' → logprob: -10.129328727722168
    9. 'nte' → logprob: -10.504328727722168
    10. 'mentation' → logprob: -10.504328727722168

Token 278: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.008618712425231934
    2. ' cur' → logprob: -4.7586188316345215
    3. '	cur' → logprob: -13.258618354797363
    4. '_cur' → logprob: -13.383618354797363
    5. '   ' → logprob: -15.133618354797363
    6. ' ' → logprob: -15.633618354797363
    7. '(cur' → logprob: -15.633618354797363
    8. ' ' → logprob: -16.50861930847168
    9. '[cur' → logprob: -16.50861930847168
    10. '```' → logprob: -17.88361930847168

Token 279: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -12.750003814697266
    3. 'pos' → logprob: -14.250003814697266
    4. '_position' → logprob: -17.125003814697266
    5. '_p' → logprob: -17.375003814697266
    6. ' _' → logprob: -18.125003814697266
    7. '_POS' → logprob: -18.250003814697266
    8. 'Pos' → logprob: -19.125003814697266
    9. '_val' → logprob: -19.375003814697266
    10. '_positions' → logprob: -19.875003814697266

Token 280: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18138007819652557
    2. '
' → logprob: -2.556380033493042
    3. 'import' → logprob: -2.806380033493042
    4. '(n' → logprob: -5.056380271911621
    5. '```' → logprob: -5.306380271911621
    6. '

' → logprob: -5.806380271911621
    7. 'if' → logprob: -6.056380271911621
    8. 'def' → logprob: -6.056380271911621
    9. '\n' → logprob: -6.056380271911621
    10. '#' → logprob: -6.056380271911621

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '-' → logprob: -17.500019073486328
    4. '```' → logprob: -17.625019073486328
    5. ' ' → logprob: -19.875019073486328
    6. 'un' → logprob: -20.375019073486328
    7. '#' → logprob: -21.000019073486328
    8. '100' → logprob: -21.000019073486328
    9. '   ' → logprob: -21.375019073486328
    10. '_' → logprob: -21.500019073486328

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '-' → logprob: -20.000059127807617
    4. '```' → logprob: -20.000059127807617
    5. '2' → logprob: -21.750059127807617
    6. '100' → logprob: -22.125059127807617
    7. '=' → logprob: -22.875059127807617
    8. '10' → logprob: -23.000059127807617
    9. '   ' → logprob: -23.000059127807617
    10. '.' → logprob: -23.125059127807617

Token 283: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27828213572502136
    2. 'import' → logprob: -1.7782821655273438
    3. 'def' → logprob: -2.6532821655273438
    4. '(n' → logprob: -6.653282165527344
    5. '
' → logprob: -7.278282165527344
    6. '#' → logprob: -7.278282165527344
    7. 'if' → logprob: -8.153282165527344
    8. 'input' → logprob: -9.153282165527344
    9. '\n' → logprob: -9.153282165527344
    10. '

' → logprob: -9.278282165527344

Token 284: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021320602390915155
    2. ' )' → logprob: -6.877131938934326
    3. '
' → logprob: -7.752131938934326
    4. '<|end|>' → logprob: -8.752132415771484
    5. '#' → logprob: -9.252132415771484
    6. '-' → logprob: -9.877132415771484
    7. '<|end|>' → logprob: -9.877132415771484
    8. ')
' → logprob: -10.127132415771484
    9. ' ' → logprob: -10.252132415771484
    10. '   ' → logprob: -10.377132415771484

Token 285: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.245168685913086
    2. ' pouvoir' → logprob: -1.495168685913086
    3. ' avoir' → logprob: -2.245168685913086
    4. ' continuer' → logprob: -2.245168685913086
    5. ' )' → logprob: -2.370168685913086
    6. ' permettre' → logprob: -2.620168685913086
    7. ' garantir' → logprob: -3.370168685913086
    8. 'contin' → logprob: -4.495168685913086
    9. 'avoir' → logprob: -4.870168685913086
    10. ' garder' → logprob: -5.245168685913086

Token 286: ' prochaine' (ID: 78876)
  Prédit: ' prochaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prochaine' → logprob: -1.3435202836990356
    2. 'su' → logprob: -1.4685202836990356
    3. 'pro' → logprob: -1.7185202836990356
    4. 'suite' → logprob: -1.8435202836990356
    5. ' suivante' → logprob: -2.843520164489746
    6. ' suite' → logprob: -3.343520164489746
    7. ' suivre' → logprob: -4.593520164489746
    8. 'contin' → logprob: -4.843520164489746
    9. ' continuer' → logprob: -4.968520164489746
    10. 'next' → logprob: -5.218520164489746

Token 287: ' mise' (ID: 25868)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9316547513008118
    2. ' )' → logprob: -0.9316547513008118
    3. ' ' → logprob: -2.556654691696167
    4. ' position' → logprob: -3.306654691696167
    5. 'position' → logprob: -3.431654691696167
    6. ' ' → logprob: -3.806654691696167
    7. ' ligne' → logprob: -4.931654930114746
    8. ' requ' → logprob: -5.181654930114746
    9. 'ligne' → logprob: -5.306654930114746
    10. '-' → logprob: -5.806654930114746

Token 288: ' en' (ID: 469)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7588366866111755
    2. 'à' → logprob: -0.8838366866111755
    3. '-' → logprob: -2.7588367462158203
    4. '-à' → logprob: -3.5088367462158203
    5. ' ' → logprob: -4.50883674621582
    6. 'a' → logprob: -5.13383674621582
    7. ' -' → logprob: -5.75883674621582
    8. '   ' → logprob: -6.13383674621582
    9. ' a' → logprob: -6.75883674621582
    10. ')' → logprob: -8.13383674621582

Token 289: ' tete' (ID: 159380)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7236188054084778
    2. 'position' → logprob: -0.7236188054084778
    3. 'avant' → logprob: -4.848618984222412
    4. 'pos' → logprob: -5.098618984222412
    5. 'place' → logprob: -5.223618984222412
    6. 'test' → logprob: -6.098618984222412
    7. 'avance' → logprob: -6.473618984222412
    8. 'ligne' → logprob: -7.348618984222412
    9. 'placement' → logprob: -7.598618984222412
    10. 'head' → logprob: -7.598618984222412

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030840709805488586
    2. ' )' → logprob: -6.253084182739258
    3. '   ' → logprob: -7.878084182739258
    4. '\n' → logprob: -8.128084182739258
    5. '#' → logprob: -9.253084182739258
    6. '`)' → logprob: -9.503084182739258
    7. ' ' → logprob: -10.253084182739258
    8. '```' → logprob: -10.503084182739258
    9. ')
' → logprob: -10.753084182739258
    10. '.' → logprob: -10.878084182739258

Token 291: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4989534616470337
    2. 'def' → logprob: -0.9989534616470337
    3. 'import' → logprob: -3.748953342437744
    4. 'if' → logprob: -7.123953342437744
    5. '#' → logprob: -9.623953819274902
    6. 'input' → logprob: -9.873953819274902
    7. '(n' → logprob: -10.748953819274902
    8. '```' → logprob: -10.873953819274902
    9. 'sys' → logprob: -10.873953819274902
    10. 'from' → logprob: -11.123953819274902

Token 292: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3219008445739746
    2. 'def' → logprob: -1.3219008445739746
    3. 'import' → logprob: -4.821900844573975
    4. '(n' → logprob: -8.696901321411133
    5. 'if' → logprob: -8.821901321411133
    6. 'from' → logprob: -10.071901321411133
    7. '
' → logprob: -10.071901321411133
    8. '#' → logprob: -10.321901321411133
    9. 'sys' → logprob: -10.446901321411133
    10. 'line' → logprob: -10.696901321411133

Token 293: ' Enfin' (ID: 85274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6450928449630737
    2. '#' → logprob: -0.7700928449630737
    3. ' n' → logprob: -6.145092964172363
    4. 'import' → logprob: -6.395092964172363
    5. 'def' → logprob: -6.395092964172363
    6. 'position' → logprob: -6.770092964172363
    7. 'On' → logprob: -7.020092964172363
    8. 'for' → logprob: -7.270092964172363
    9. '
' → logprob: -7.520092964172363
    10. 'print' → logprob: -7.520092964172363

Token 294: ',' (ID: 11)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.13322442770004272
    2. 'print' → logprob: -3.7582244873046875
    3. ',' → logprob: -3.8832244873046875
    4. '#' → logprob: -3.8832244873046875
    5. 'position' → logprob: -4.0082244873046875
    6. ' on' → logprob: -4.3832244873046875
    7. ' positions' → logprob: -5.1332244873046875
    8. 'sorted' → logprob: -5.2582244873046875
    9. 'pos' → logprob: -5.6332244873046875
    10. '
' → logprob: -5.7582244873046875

Token 295: ' on' (ID: 402)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6649853587150574
    2. 'position' → logprob: -1.7899854183197021
    3. 'sorted' → logprob: -2.539985418319702
    4. 'n' → logprob: -2.789985418319702
    5. '#' → logprob: -3.539985418319702
    6. 'pos' → logprob: -3.664985418319702
    7. 'result' → logprob: -3.664985418319702
    8. ' n' → logprob: -3.789985418319702
    9. 'elements' → logprob: -3.789985418319702
    10. 'sequence' → logprob: -4.289985179901123

Token 296: ' trie' (ID: 139428)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9958447813987732
    2. 'aff' → logprob: -1.120844841003418
    3. '#' → logprob: -1.745844841003418
    4. 'tr' → logprob: -2.995844841003418
    5. 'range' → logprob: -3.370844841003418
    6. 'position' → logprob: -3.620844841003418
    7. 'positions' → logprob: -5.495844841003418
    8. 'for' → logprob: -6.120844841003418
    9. 'sort' → logprob: -6.745844841003418
    10. 's' → logprob: -6.870844841003418

Token 297: ' les' (ID: 1341)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.3246572017669678
    2. 'n' → logprob: -1.4496572017669678
    3. 'range' → logprob: -2.1996572017669678
    4. 'position' → logprob: -2.4496572017669678
    5. '(n' → logprob: -2.5746572017669678
    6. '()' → logprob: -2.9496572017669678
    7. ' =' → logprob: -3.4496572017669678
    8. '(' → logprob: -4.074657440185547
    9. 'import' → logprob: -4.074657440185547
    10. '(range' → logprob: -4.199657440185547

Token 298: ' elements' (ID: 8632)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1317862570285797
    2. 'position' → logprob: -2.256786346435547
    3. ' range' → logprob: -5.006786346435547
    4. 'elements' → logprob: -5.006786346435547
    5. 'positions' → logprob: -5.381786346435547
    6. ' position' → logprob: -7.881786346435547
    7. ' elements' → logprob: -8.506786346435547
    8. 'items' → logprob: -10.131786346435547
    9. ' positions' → logprob: -10.256786346435547
    10. '(range' → logprob: -10.381786346435547

Token 299: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.047113705426454544
    2. 'import' → logprob: -4.04711389541626
    3. '\n' → logprob: -4.54711389541626
    4. '
' → logprob: -4.92211389541626
    5. '```' → logprob: -5.79711389541626
    6. '[n' → logprob: -6.29711389541626
    7. '(n' → logprob: -6.29711389541626
    8. 'def' → logprob: -6.92211389541626
    9. 'from' → logprob: -7.17211389541626
    10. ',
' → logprob: -7.42211389541626

Token 300: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.16577067971229553
    2. ' position' → logprob: -2.0407707691192627
    3. ' leur' → logprob: -4.790770530700684
    4. 'leur' → logprob: -4.790770530700684
    5. 'lambda' → logprob: -6.165770530700684
    6. 'their' → logprob: -7.040770530700684
    7. 'la' → logprob: -7.290770530700684
    8. ' la' → logprob: -7.665770530700684
    9. 'key' → logprob: -7.790770530700684
    10. ' leurs' → logprob: -8.040770530700684

Token 301: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00899281445890665
    2. 'import' → logprob: -5.133992671966553
    3. 'def' → logprob: -6.133992671966553
    4. '
' → logprob: -7.508992671966553
    5. 'if' → logprob: -8.383993148803711
    6. '(n' → logprob: -9.883993148803711
    7. '#' → logprob: -10.883993148803711
    8. '

' → logprob: -11.133993148803711
    9. ' n' → logprob: -11.258993148803711
    10. 'from' → logprob: -12.383993148803711

Token 302: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07136622816324234
    2. 'aff' → logprob: -3.321366310119629
    3. ' print' → logprob: -4.571366310119629
    4. ' les' → logprob: -4.696366310119629
    5. '#' → logprob: -5.196366310119629
    6. 'les' → logprob: -5.196366310119629
    7. 'for' → logprob: -7.321366310119629
    8. 'on' → logprob: -7.696366310119629
    9. ' on' → logprob: -8.196366310119629
    10. ' affiche' → logprob: -8.696366310119629

Token 303: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13093945384025574
    2. 'aff' → logprob: -2.380939483642578
    3. 'im' → logprob: -4.880939483642578
    4. 'for' → logprob: -5.130939483642578
    5. ' print' → logprob: -5.130939483642578
    6. ' les' → logprob: -5.630939483642578
    7. 'les' → logprob: -5.755939483642578
    8. ' imprime' → logprob: -6.505939483642578
    9. ' affiche' → logprob: -6.880939483642578
    10. ' for' → logprob: -7.130939483642578

Token 304: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05830199271440506
    2. 'import' → logprob: -3.5583019256591797
    3. 'def' → logprob: -3.6833019256591797
    4. '
' → logprob: -6.18330192565918
    5. 'if' → logprob: -7.93330192565918
    6. ' n' → logprob: -8.43330192565918
    7. '(n' → logprob: -8.93330192565918
    8. '```' → logprob: -9.68330192565918
    9. '#' → logprob: -10.05830192565918
    10. 'from' → logprob: -10.18330192565918

Token 305: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04949301853775978
    2. ''' → logprob: -3.6744930744171143
    3. 'print' → logprob: -5.174492835998535
    4. ' l' → logprob: -5.549492835998535
    5. '"' → logprob: -6.174492835998535
    6. 'un' → logprob: -6.424492835998535
    7. '('' → logprob: -6.424492835998535
    8. 'la' → logprob: -6.674492835998535
    9. 'une' → logprob: -6.674492835998535
    10. 'ordre' → logprob: -6.674492835998535

Token 306: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.19243638217449188
    2. ' ordre' → logprob: -1.9424363374710083
    3. ''ordre' → logprob: -4.192436218261719
    4. 'e' → logprob: -5.067436218261719
    5. 'es' → logprob: -5.442436218261719
    6. ' espace' → logprob: -6.567436218261719
    7. 'order' → logprob: -6.692436218261719
    8. 'esp' → logprob: -7.317436218261719
    9. ' order' → logprob: -7.317436218261719
    10. 'ordine' → logprob: -7.942436218261719

Token 307: '.

' (ID: 364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006490480620414019
    2. 'def' → logprob: -5.131490707397461
    3. 'if' → logprob: -8.381490707397461
    4. 'import' → logprob: -9.006490707397461
    5. '(n' → logprob: -9.256490707397461
    6. '
' → logprob: -10.381490707397461
    7. '#' → logprob: -10.381490707397461
    8. ' n' → logprob: -10.756490707397461
    9. 'input' → logprob: -11.881490707397461
    10. 'sys' → logprob: -12.131490707397461

Token 308: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0131831718608737
    2. 'import' → logprob: -4.388183116912842
    3. '\n' → logprob: -8.38818359375
    4. 'def' → logprob: -8.51318359375
    5. '```' → logprob: -9.01318359375
    6. '#' → logprob: -10.13818359375
    7. '
' → logprob: -10.38818359375
    8. '\' → logprob: -11.13818359375
    9. '(n' → logprob: -11.13818359375
    10. 'input' → logprob: -12.51318359375

Token 309: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11092249304056168
    2. ' solve' → logprob: -2.3609225749969482
    3. 'main' → logprob: -5.235922336578369
    4. 'solve' → logprob: -5.860922336578369
    5. ' solution' → logprob: -6.860922336578369
    6. ' final' → logprob: -6.985922336578369
    7. ' process' → logprob: -8.985922813415527
    8. ' reposition' → logprob: -9.610922813415527
    9. ' rearr' → logprob: -10.485922813415527
    10. 'final' → logprob: -10.610922813415527

Token 310: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001302374730585143
    2. ' ():' → logprob: -9.625130653381348
    3. '(' → logprob: -10.500130653381348
    4. '()' → logprob: -10.625130653381348
    5. '():
' → logprob: -11.375130653381348
    6. '()>' → logprob: -14.750130653381348
    7. ' ()' → logprob: -15.875130653381348
    8. '(":' → logprob: -16.62512969970703
    9. '():
' → logprob: -16.75012969970703
    10. ' (' → logprob: -16.87512969970703

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04329102113842964
    2. 'n' → logprob: -3.2932910919189453
    3. ' n' → logprob: -5.543291091918945
    4. '	n' → logprob: -6.668291091918945
    5. 'import' → logprob: -10.043291091918945
    6. ' import' → logprob: -12.418291091918945
    7. '   ' → logprob: -13.543291091918945
    8. ',n' → logprob: -13.668291091918945
    9. '```' → logprob: -14.793291091918945
    10. ' ' → logprob: -14.918291091918945

Token 312: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2702760696411133
    2. '   ' → logprob: -1.5202760696411133
    3. 'import' → logprob: -4.270276069641113
    4. ' n' → logprob: -5.520276069641113
    5. '	n' → logprob: -8.770276069641113
    6. ' import' → logprob: -10.145276069641113
    7. ' ' → logprob: -13.520276069641113
    8. '    
' → logprob: -14.270276069641113
    9. '```' → logprob: -15.645276069641113
    10. '  ' → logprob: -15.770276069641113

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009233691962435842
    2. ' ,' → logprob: -7.375923156738281
    3. ' =' → logprob: -8.375923156738281
    4. '=' → logprob: -10.375923156738281
    5. ',n' → logprob: -11.250923156738281
    6. '   ' → logprob: -11.750923156738281
    7. ',int' → logprob: -12.375923156738281
    8. ',input' → logprob: -13.000923156738281
    9. '=int' → logprob: -13.375923156738281
    10. ',m' → logprob: -13.750923156738281

Token 314: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3132641315460205
    2. 'm' → logprob: -1.3132641315460205
    3. ' ' → logprob: -13.688263893127441
    4. '=' → logprob: -14.688263893127441
    5. ' =' → logprob: -15.688263893127441
    6. '	m' → logprob: -15.813263893127441
    7. '_m' → logprob: -15.813263893127441
    8. '   ' → logprob: -16.063264846801758
    9. '  ' → logprob: -16.563264846801758
    10. '    ' → logprob: -17.063264846801758

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326746940612793
    2. ' =' → logprob: -1.313267469406128
    3. '=input' → logprob: -12.938267707824707
    4. ',' → logprob: -13.188267707824707
    5. ')' → logprob: -14.563267707824707
    6. '   ' → logprob: -15.188267707824707
    7. '=int' → logprob: -15.813267707824707
    8. ' ' → logprob: -16.31326675415039
    9. '=line' → logprob: -16.43826675415039
    10. ')=' → logprob: -16.81326675415039

Token 316: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0005530327325686812
    2. 'map' → logprob: -7.500553131103516
    3. '	map' → logprob: -18.500553131103516
    4. ' ' → logprob: -19.000553131103516
    5. ' list' → logprob: -19.000553131103516
    6. ' input' → logprob: -21.625553131103516
    7. '(map' → logprob: -22.000553131103516
    8. '_map' → logprob: -22.750553131103516
    9. ' mapa' → logprob: -23.000553131103516
    10. '   ' → logprob: -23.125553131103516

Token 317: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014939149841666222
    2. '(' → logprob: -6.62649393081665
    3. '(input' → logprob: -8.876493453979492
    4. 'int' → logprob: -11.126493453979492
    5. '(str' → logprob: -11.501493453979492
    6. 'input' → logprob: -13.876493453979492
    7. '(list' → logprob: -14.001493453979492
    8. ' (' → logprob: -14.501493453979492
    9. '(map' → logprob: -14.751493453979492
    10. '(tuple' → logprob: -15.876493453979492

Token 318: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.043236687779426575
    2. 'input' → logprob: -3.41823673248291
    3. '(' → logprob: -5.29323673248291
    4. ',input' → logprob: -5.79323673248291
    5. '(sys' → logprob: -7.29323673248291
    6. ',' → logprob: -8.04323673248291
    7. ' input' → logprob: -8.66823673248291
    8. '=input' → logprob: -9.04323673248291
    9. '(int' → logprob: -9.29323673248291
    10. ' (' → logprob: -10.29323673248291

Token 319: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011057134717702866
    2. ' input' → logprob: -4.511056900024414
    3. 'int' → logprob: -12.011056900024414
    4. 'sys' → logprob: -12.886056900024414
    5. ' sys' → logprob: -14.386056900024414
    6. 'str' → logprob: -16.511056900024414
    7. '=input' → logprob: -18.761056900024414
    8. 'map' → logprob: -18.886056900024414
    9. ' int' → logprob: -19.136056900024414
    10. '(input' → logprob: -19.511056900024414

Token 320: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001097417771234177
    2. '()' → logprob: -9.125109672546387
    3. '())' → logprob: -14.375109672546387
    4. '(' → logprob: -16.250110626220703
    5. ' ().' → logprob: -17.000110626220703
    6. '()
' → logprob: -17.375110626220703
    7. '()[' → logprob: -18.500110626220703
    8. ')' → logprob: -19.250110626220703
    9. '()>' → logprob: -20.250110626220703
    10. '().
' → logprob: -21.000110626220703

Token 321: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023575741797685623
    2. 'strip' → logprob: -3.773575782775879
    3. 'rstrip' → logprob: -8.023575782775879
    4. ' split' → logprob: -14.148575782775879
    5. 'read' → logprob: -14.273575782775879
    6. '().' → logprob: -14.523575782775879
    7. ')' → logprob: -15.023575782775879
    8. '(split' → logprob: -15.773575782775879
    9. ' strip' → logprob: -16.023574829101562
    10. 'spl' → logprob: -16.273574829101562

Token 322: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3944706916809082
    2. '())' → logprob: -1.1444706916809082
    3. '()' → logprob: -4.894470691680908
    4. '))' → logprob: -10.26947021484375
    5. '(' → logprob: -10.64447021484375
    6. '())
' → logprob: -11.26947021484375
    7. ')
' → logprob: -12.39447021484375
    8. ' )' → logprob: -13.14447021484375
    9. '()))' → logprob: -13.39447021484375
    10. ')`' → logprob: -14.39447021484375

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006995689473114908
    2. '    
' → logprob: -7.750699520111084
    3. 'position' → logprob: -8.750699996948242
    4. 'positions' → logprob: -9.750699996948242
    5. '	position' → logprob: -10.875699996948242
    6. '
' → logprob: -11.125699996948242
    7. ' positions' → logprob: -12.000699996948242
    8. ' position' → logprob: -12.625699996948242
    9. 'pos' → logprob: -13.125699996948242
    10. '```' → logprob: -13.500699996948242

Token 324: ' positions' (ID: 15897)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0001669485354796052
    2. '   ' → logprob: -9.375166893005371
    3. 'positions' (adapté à ' positions') → logprob: -9.875166893005371
    4. 'pos' → logprob: -10.500166893005371
    5. ' position' → logprob: -13.000166893005371
    6. '	position' → logprob: -14.625166893005371
    7. '    
' → logprob: -15.625166893005371
    8. 'posit' → logprob: -16.125167846679688
    9. '#' → logprob: -17.500167846679688
    10. 'import' → logprob: -17.875167846679688

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193166732788086
    2. '=' → logprob: -1.5019316673278809
    3. '[' → logprob: -13.251932144165039
    4. ' ' → logprob: -15.376932144165039
    5. ' =[' → logprob: -15.626932144165039
    6. '=[' → logprob: -15.876932144165039
    7. '   ' → logprob: -16.37693214416504
    8. '＝' → logprob: -16.87693214416504
    9. '	' → logprob: -17.50193214416504
    10. ' ' → logprob: -17.62693214416504

Token 326: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.789719820022583
    2. ' [' → logprob: -0.789719820022583
    3. '[list' → logprob: -2.789719820022583
    4. 'list' → logprob: -3.789719820022583
    5. '{' → logprob: -5.289719581604004
    6. ' list' → logprob: -6.414719581604004
    7. '[n' → logprob: -7.164719581604004
    8. ' {' → logprob: -7.914719581604004
    9. '[i' → logprob: -10.164719581604004
    10. 'dict' → logprob: -10.289719581604004

Token 327: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0026799410115927458
    2. '0' → logprob: -6.002679824829102
    3. ' i' → logprob: -8.502679824829102
    4. '(i' → logprob: -14.502679824829102
    5. ' ' → logprob: -15.752679824829102
    6. 'None' → logprob: -15.877679824829102
    7. 'x' → logprob: -15.877679824829102
    8. '_' → logprob: -16.0026798248291
    9. '*i' → logprob: -16.1276798248291
    10. ']' → logprob: -17.0026798248291

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006043266039341688
    2. ']*(' → logprob: -5.256043434143066
    3. ']+' → logprob: -7.256043434143066
    4. ' ]' → logprob: -9.631043434143066
    5. ',' → logprob: -10.756043434143066
    6. ']*' → logprob: -12.131043434143066
    7. ' for' → logprob: -12.256043434143066
    8. 'for' → logprob: -13.381043434143066
    9. '(n' → logprob: -13.756043434143066
    10. 'n' → logprob: -13.881043434143066

Token 329: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.42620447278022766
    2. '*' → logprob: -1.3012044429779053
    3. ' *' → logprob: -2.6762044429779053
    4. '+' → logprob: -6.301204681396484
    5. ']*(' → logprob: -6.301204681396484
    6. ']' → logprob: -7.551204681396484
    7. '*n' → logprob: -7.676204681396484
    8. '(n' → logprob: -8.176204681396484
    9. ' +' → logprob: -8.801204681396484
    10. ',' → logprob: -8.801204681396484

Token 330: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.673547563375905e-05
    2. ' (' → logprob: -9.375086784362793
    3. '(' → logprob: -13.500086784362793
    4. '((' → logprob: -15.375086784362793
    5. '(max' → logprob: -16.625085830688477
    6. 'n' → logprob: -16.625085830688477
    7. '(N' → logprob: -17.125085830688477
    8. '(nn' → logprob: -19.375085830688477
    9. '   ' → logprob: -19.500085830688477
    10. ' ' → logprob: -20.000085830688477

Token 331: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.088346359931165e-07
    2. ' n' → logprob: -14.375000953674316
    3. '(n' → logprob: -15.375000953674316
    4. '   ' → logprob: -19.625
    5. '	n' → logprob: -20.25
    6. ')n' → logprob: -21.125
    7. ' (' → logprob: -22.125
    8. '[n' → logprob: -22.75
    9. '_n' → logprob: -23.75
    10. ',n' → logprob: -23.75

Token 332: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001797277363948524
    2. ' +' → logprob: -6.376797199249268
    3. '+
' → logprob: -9.376797676086426
    4. '+n' → logprob: -11.626797676086426
    5. ' +
' → logprob: -14.126797676086426
    6. '
' → logprob: -15.126797676086426
    7. ')' → logprob: -16.00179672241211
    8. '+)' → logprob: -16.12679672241211
    9. 'n' → logprob: -16.62679672241211
    10. '+m' → logprob: -16.62679672241211

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.875021934509277
    4. '2' → logprob: -15.375021934509277
    5. '  ' → logprob: -18.500022888183594
    6. '１' → logprob: -19.375022888183594
    7. '
' → logprob: -19.500022888183594
    8. '0' → logprob: -19.812522888183594
    9. '    ' → logprob: -19.875022888183594
    10. 'n' → logprob: -20.125022888183594

Token 334: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034261439577676356
    2. ')
' → logprob: -8.00034236907959
    3. ' )' → logprob: -12.00034236907959
    4. ')

' → logprob: -15.12534236907959
    5. '   ' → logprob: -15.25034236907959
    6. ']' → logprob: -16.250343322753906
    7. ')#' → logprob: -16.875343322753906
    8. '),' → logprob: -17.250343322753906
    9. '#' → logprob: -17.375343322753906
    10. '
' → logprob: -17.375343322753906

Token 335: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7471656799316406
    2. '
' → logprob: -1.1221656799316406
    3. ' for' → logprob: -1.9971656799316406
    4. 'for' → logprob: -2.9971656799316406
    5. '    
' → logprob: -4.372165679931641
    6. ' 
' → logprob: -6.997165679931641
    7. '  
' → logprob: -7.372165679931641
    8. '   
' → logprob: -7.872165679931641
    9. '	for' → logprob: -7.997165679931641
    10. '<|end|>' → logprob: -9.62216567993164

Token 336: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011311880312860012
    2. '   ' → logprob: -4.511312007904053
    3. ' for' → logprob: -8.261311531066895
    4. '
' → logprob: -12.261311531066895
    5. '	for' → logprob: -14.761311531066895
    6. '    
' → logprob: -14.761311531066895
    7. '  ' → logprob: -16.63631248474121
    8. 'cur' → logprob: -16.63631248474121
    9. '```' → logprob: -16.76131248474121
    10. ' ' → logprob: -17.01131248474121

Token 337: ' positions' (ID: 15897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.874882430769503e-05
    2. 'list' → logprob: -10.000079154968262
    3. 'positions' → logprob: -11.125079154968262
    4. ' for' → logprob: -11.875079154968262
    5. 'range' → logprob: -11.875079154968262
    6. '[i' → logprob: -13.750079154968262
    7. '#' → logprob: -13.750079154968262
    8. 'position' → logprob: -14.250079154968262
    9. 'pos' → logprob: -14.375079154968262
    10. '[' → logprob: -14.625079154968262

Token 338: '[' (ID: 58)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23141133785247803
    2. '[' → logprob: -1.981411337852478
    3. '=' → logprob: -3.7314114570617676
    4. ' =' → logprob: -4.356411457061768
    5. '   ' → logprob: -4.606411457061768
    6. ' for' → logprob: -4.856411457061768
    7. '
' → logprob: -5.106411457061768
    8. '[:]' → logprob: -5.481411457061768
    9. '<|end|>' → logprob: -6.981411457061768
    10. 'def' → logprob: -7.606411457061768

Token 339: 'elem' (ID: 35287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12056880444288254
    2. ']' → logprob: -2.9955687522888184
    3. 'i' → logprob: -3.3705687522888184
    4. 'n' → logprob: -4.745568752288818
    5. '0' → logprob: -4.870568752288818
    6. ')' → logprob: -5.745568752288818
    7. 'range' → logprob: -5.745568752288818
    8. ':' → logprob: -6.745568752288818
    9. '
' → logprob: -7.120568752288818
    10. ' ' → logprob: -7.120568752288818

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01327317114919424
    2. ')' → logprob: -5.263273239135742
    3. 'positions' → logprob: -6.263273239135742
    4. ']=' → logprob: -6.638273239135742
    5. 's' → logprob: -6.888273239135742
    6. ' ]' → logprob: -7.388273239135742
    7. '=' → logprob: -7.388273239135742
    8. 'def' → logprob: -7.388273239135742
    9. '0' → logprob: -7.763273239135742
    10. '])' → logprob: -7.888273239135742

Token 341: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6047518253326416
    2. '=' → logprob: -1.3547518253326416
    3. ' =' → logprob: -2.3547518253326416
    4. '<|end|>' → logprob: -2.7297518253326416
    5. ' for' → logprob: -4.1047515869140625
    6. '[' → logprob: -5.4797515869140625
    7. '
' → logprob: -5.4797515869140625
    8. 'range' → logprob: -6.2297515869140625
    9. '<|end|>' → logprob: -6.2297515869140625
    10. 'def' → logprob: -6.9797515869140625

Token 342: ' position' (ID: 4010)
  Prédit: 'elem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elem' → logprob: -0.0007050448912195861
    2. '0' → logprob: -8.000704765319824
    3. ' elem' → logprob: -8.250704765319824
    4. 'élé' → logprob: -9.750704765319824
    5. 'element' → logprob: -11.000704765319824
    6. '	elem' → logprob: -11.375704765319824
    7. '(elem' → logprob: -11.625704765319824
    8. 'ele' → logprob: -12.125704765319824
    9. 'initial' → logprob: -13.500704765319824
    10. 'i' → logprob: -13.625704765319824

Token 343: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30469638109207153
    2. ' for' → logprob: -1.8046963214874268
    3. '   ' → logprob: -2.5546963214874268
    4. '
' → logprob: -3.9296963214874268
    5. '    
' → logprob: -8.054696083068848
    6. ' ' → logprob: -9.179696083068848
    7. '<|end|>' → logprob: -9.429696083068848
    8. ')' → logprob: -9.804696083068848
    9. '	for' → logprob: -9.929696083068848
    10. '  ' → logprob: -10.554696083068848

Token 344: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.020912503823637962
    2. 'sequence' → logprob: -4.3959126472473145
    3. ' la' → logprob: -5.0209126472473145
    4. 'l' → logprob: -7.0209126472473145
    5. 'range' → logprob: -7.7709126472473145
    6. 'le' → logprob: -8.395912170410156
    7. 'the' → logprob: -9.645912170410156
    8. ' sequence' → logprob: -9.645912170410156
    9. 'initial' → logprob: -10.520912170410156
    10. 'final' → logprob: -11.645912170410156

Token 345: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0025938500184565783
    2. 'range' → logprob: -6.502593994140625
    3. ' sequence' → logprob: -6.877593994140625
    4. 'sequ' → logprob: -11.002593994140625
    5. 'sé' → logprob: -11.252593994140625
    6. 'liste' → logprob: -11.502593994140625
    7. 'seq' → logprob: -12.377593994140625
    8. '#' → logprob: -12.377593994140625
    9. 'list' → logprob: -12.502593994140625
    10. '(sequence' → logprob: -13.752593994140625

Token 346: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21471765637397766
    2. 'for' → logprob: -1.9647176265716553
    3. ' for' → logprob: -2.9647176265716553
    4. '
' → logprob: -6.714717864990234
    5. '    
' → logprob: -8.714717864990234
    6. '	for' → logprob: -10.089717864990234
    7. '<|end|>' → logprob: -11.214717864990234
    8. '  ' → logprob: -11.839717864990234
    9. ',' → logprob: -12.089717864990234
    10. ' ' → logprob: -12.214717864990234

Token 347: 'position' (ID: 4504)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05217023938894272
    2. 'elem' → logprob: -3.4271702766418457
    3. 'range' → logprob: -5.052170276641846
    4. '0' → logprob: -5.052170276641846
    5. ')' → logprob: -5.802170276641846
    6. 'for' → logprob: -6.927170276641846
    7. 'x' → logprob: -7.802170276641846
    8. ' i' → logprob: -8.052169799804688
    9. 'list' → logprob: -8.552169799804688
    10. 'import' → logprob: -9.427169799804688

Token 348: ' virtuelle' (ID: 148533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1796417385339737
    2. '[' → logprob: -1.9296417236328125
    3. 'initial' → logprob: -5.3046417236328125
    4. ']' → logprob: -5.6796417236328125
    5. ' )' → logprob: -6.3046417236328125
    6. 'def' → logprob: -6.4296417236328125
    7. '   ' → logprob: -6.5546417236328125
    8. 'import' → logprob: -7.1796417236328125
    9. '#' → logprob: -7.5546417236328125
    10. 's' → logprob: -7.6796417236328125

Token 349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001516173011623323
    2. 'initial' → logprob: -7.126516342163086
    3. ' )' → logprob: -7.876516342163086
    4. ' initial' → logprob: -8.876516342163086
    5. ',' → logprob: -9.251516342163086
    6. '   ' → logprob: -10.876516342163086
    7. 'import' → logprob: -11.626516342163086
    8. ')
' → logprob: -11.626516342163086
    9. '#' → logprob: -11.751516342163086
    10. ' initially' → logprob: -12.251516342163086

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008415993303060532
    2. 'for' → logprob: -5.008416175842285
    3. ' for' → logprob: -6.383416175842285
    4. '    
' → logprob: -12.258416175842285
    5. '	for' → logprob: -12.508416175842285
    6. '
' → logprob: -14.133416175842285
    7. '  ' → logprob: -15.258416175842285
    8. ' ' → logprob: -15.508416175842285
    9. '    ' → logprob: -17.38341522216797
    10. '       ' → logprob: -17.50841522216797

Token 351: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.088346359931165e-07
    2. ' for' → logprob: -14.500000953674316
    3. 'cur' → logprob: -14.875000953674316
    4. '   ' → logprob: -17.625
    5. '
' → logprob: -21.125
    6. '#' → logprob: -21.375
    7. '	for' → logprob: -21.5
    8. '```' → logprob: -21.625
    9. '    
' → logprob: -21.75
    10. ' ' → logprob: -22.75

Token 352: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0199250690639019
    2. 'x' → logprob: -4.019925117492676
    3. ' i' → logprob: -6.519925117492676
    4. 'elem' → logprob: -8.144925117492676
    5. ' x' → logprob: -12.394925117492676
    6. 'e' → logprob: -12.769925117492676
    7. ' elem' → logprob: -13.019925117492676
    8. 'element' → logprob: -15.519925117492676
    9. 'ele' → logprob: -16.01992416381836
    10. 'pos' → logprob: -16.76992416381836

Token 353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038100358098745346
    2. 'in' → logprob: -3.288100242614746
    3. ' ' → logprob: -11.038100242614746
    4. '   ' → logprob: -11.413100242614746
    5. '  ' → logprob: -11.413100242614746
    6. 'range' → logprob: -12.163100242614746
    7. 'In' → logprob: -12.663100242614746
    8. '	in' → logprob: -12.663100242614746
    9. 'n' → logprob: -13.663100242614746
    10. '```' → logprob: -13.913100242614746

Token 354: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '1' → logprob: -16.62747573852539
    4. 'in' → logprob: -18.00247573852539
    5. '(range' → logprob: -18.62747573852539
    6. '   ' → logprob: -18.87747573852539
    7. ' ' → logprob: -19.50247573852539
    8. '	range' → logprob: -19.75247573852539
    9. '  ' → logprob: -20.62747573852539
    10. 'r' → logprob: -20.75247573852539

Token 355: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.125001907348633
    4. ' (' → logprob: -21.375001907348633
    5. '(n' → logprob: -22.375001907348633
    6. '	' → logprob: -23.000001907348633
    7. 'n' → logprob: -23.375001907348633
    8. ' ' → logprob: -23.750001907348633
    9. ',' → logprob: -23.875001907348633
    10. 'def' → logprob: -23.875001907348633

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.875000953674316
    4. 'n' → logprob: -18.125
    5. '(' → logprob: -18.5
    6. '	' → logprob: -21.75
    7. '    ' → logprob: -22.125
    8. '  ' → logprob: -22.25
    9. '2' → logprob: -22.625
    10. ')' → logprob: -22.875

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018296310445293784
    2. ',n' → logprob: -7.001829624176025
    3. ' ,' → logprob: -7.001829624176025
    4. ',
' → logprob: -12.501830101013184
    5. 'n' → logprob: -13.251830101013184
    6. '   ' → logprob: -13.501830101013184
    7. ',len' → logprob: -15.126830101013184
    8. '(n' → logprob: -16.001829147338867
    9. '  ' → logprob: -16.876829147338867
    10. ' ' → logprob: -17.376829147338867

Token 358: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.2729995988775045e-06
    2. ' n' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.2500057220459
    4. '	n' → logprob: -18.8750057220459
    5. 'len' → logprob: -19.3750057220459
    6. '(n' → logprob: -21.5000057220459
    7. ')n' → logprob: -21.5000057220459
    8. '  ' → logprob: -22.6250057220459
    9. ' ' → logprob: -22.8750057220459
    10. ')' → logprob: -23.5000057220459

Token 359: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010367410723119974
    2. ' +' → logprob: -6.876036643981934
    3. '+n' → logprob: -13.501036643981934
    4. '+
' → logprob: -13.876036643981934
    5. '+i' → logprob: -14.501036643981934
    6. '):
' → logprob: -15.126036643981934
    7. '   ' → logprob: -15.126036643981934
    8. '):' → logprob: -16.25103759765625
    9. ',' → logprob: -16.37603759765625
    10. 'n' → logprob: -17.12603759765625

Token 360: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004001822788268328
    2. ' n' → logprob: -5.629001617431641
    3. '1' → logprob: -7.879001617431641
    4. '   ' → logprob: -11.75400161743164
    5. '+' → logprob: -12.37900161743164
    6. '(n' → logprob: -12.37900161743164
    7. ')' → logprob: -12.75400161743164
    8. ' ' → logprob: -13.12900161743164
    9. '_n' → logprob: -14.12900161743164
    10. '	n' → logprob: -15.25400161743164

Token 361: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31336739659309387
    2. '):' → logprob: -1.3133673667907715
    3. ')' → logprob: -9.68836784362793
    4. ':' → logprob: -10.93836784362793
    5. '):
' → logprob: -11.43836784362793
    6. '   ' → logprob: -11.81336784362793
    7. ':
' → logprob: -12.68836784362793
    8. ']:' → logprob: -13.31336784362793
    9. ']:
' → logprob: -13.81336784362793
    10. 'positions' → logprob: -14.81336784362793

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035381787456572056
    2. 'positions' → logprob: -5.878538131713867
    3. ' positions' → logprob: -7.503538131713867
    4. '   ' → logprob: -8.628538131713867
    5. '.positions' → logprob: -14.128538131713867
    6. '     ' → logprob: -14.378538131713867
    7. '_positions' → logprob: -14.378538131713867
    8. '	   ' → logprob: -14.628538131713867
    9. '      ' → logprob: -15.003538131713867
    10. '           ' → logprob: -16.003538131713867

Token 363: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.02567156031727791
    2. ' positions' → logprob: -4.275671482086182
    3. '   ' → logprob: -4.525671482086182
    4. '       ' → logprob: -7.400671482086182
    5. '.positions' → logprob: -13.40067195892334
    6. '    ' → logprob: -14.65067195892334
    7. ' ' → logprob: -14.90067195892334
    8. '    
' → logprob: -15.15067195892334
    9. '  ' → logprob: -15.27567195892334
    10. '
' → logprob: -15.40067195892334

Token 364: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4259644558478612e-05
    2. '[' → logprob: -11.250014305114746
    3. ' [' → logprob: -14.000014305114746
    4. '[I' → logprob: -16.62501335144043
    5. '=' → logprob: -16.87501335144043
    6. '\[' → logprob: -17.37501335144043
    7. '```' → logprob: -18.12501335144043
    8. ' =' → logprob: -18.25001335144043
    9. 'i' → logprob: -18.37501335144043
    10. '[
' → logprob: -19.00001335144043

Token 365: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1867893785238266
    2. ' =' → logprob: -2.1867892742156982
    3. ']' → logprob: -3.4367892742156982
    4. '=i' → logprob: -3.6867892742156982
    5. ']=' → logprob: -7.061789512634277
    6. ' ]' → logprob: -11.561789512634277
    7. ')' → logprob: -12.186789512634277
    8. ' i' → logprob: -12.436789512634277
    9. '[i' → logprob: -12.811789512634277
    10. 'i' → logprob: -12.936789512634277

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006975136697292328
    2. ' =' → logprob: -5.006975173950195
    3. '=i' → logprob: -8.256975173950195
    4. '=int' → logprob: -16.131975173950195
    5. '=
' → logprob: -17.006975173950195
    6. '=

' → logprob: -17.881975173950195
    7. '＝' → logprob: -18.131975173950195
    8. ' ' → logprob: -19.131975173950195
    9. '=}' → logprob: -19.131975173950195
    10. '+=' → logprob: -19.256975173950195

Token 367: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.306760805164231e-05
    2. ' i' → logprob: -11.25001335144043
    3. '	i' → logprob: -18.00001335144043
    4. '   ' → logprob: -19.25001335144043
    5. ' ' → logprob: -24.00001335144043
    6. ' ' → logprob: -24.37501335144043
    7. ')i' → logprob: -24.62501335144043
    8. '  ' → logprob: -24.75001335144043
    9. '```' → logprob: -24.87501335144043
    10. '=i' → logprob: -25.00001335144043

Token 368: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03520379215478897
    2. '
' → logprob: -3.785203695297241
    3. 'cur' → logprob: -4.66020393371582
    4. '	cur' → logprob: -6.53520393371582
    5. '    
' → logprob: -7.16020393371582
    6. ' cur' → logprob: -9.03520393371582
    7. '   
' → logprob: -10.78520393371582
    8. '  ' → logprob: -11.03520393371582
    9. '  
' → logprob: -11.66020393371582
    10. '   ' → logprob: -12.16020393371582

Token 369: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18936112523078918
    2. 'cur' → logprob: -1.9393610954284668
    3. '
' → logprob: -3.939361095428467
    4. '	cur' → logprob: -4.814361095428467
    5. '    
' → logprob: -7.564361095428467
    6. ' cur' → logprob: -7.564361095428467
    7. '  ' → logprob: -10.689361572265625
    8. '
' → logprob: -11.064361572265625
    9. '   
' → logprob: -11.064361572265625
    10. '_cur' → logprob: -11.564361572265625

Token 370: ' positions' (ID: 15897)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08129734545946121
    2. 'positions' → logprob: -3.4562973976135254
    3. 'cur' → logprob: -4.581297397613525
    4. ' positions' → logprob: -4.956297397613525
    5. '<|end|>' → logprob: -5.331297397613525
    6. '0' → logprob: -5.456297397613525
    7. '    
' → logprob: -5.706297397613525
    8. ')' → logprob: -5.706297397613525
    9. ' ' → logprob: -5.831297397613525
    10. '    ' → logprob: -6.331297397613525

Token 371: ' initial' (ID: 4871)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: 'es' (ID: 268)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020354311913251877
    2. '
' → logprob: -4.020354270935059
    3. '    
' → logprob: -6.645354270935059
    4. 'cur' → logprob: -7.395354270935059
    5. '	cur' → logprob: -8.770354270935059
    6. '  
' → logprob: -10.145354270935059
    7. '   
' → logprob: -10.270354270935059
    8. '  ' → logprob: -10.770354270935059
    9. ' cur' → logprob: -11.270354270935059
    10. '
' → logprob: -12.270354270935059

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1006774976849556
    2. 'cur' → logprob: -2.350677490234375
    3. '	cur' → logprob: -8.475677490234375
    4. ' cur' → logprob: -8.600677490234375
    5. '
' → logprob: -10.350677490234375
    6. '    
' → logprob: -10.600677490234375
    7. '  ' → logprob: -11.600677490234375
    8. '_cur' → logprob: -12.475677490234375
    9. '```' → logprob: -12.600677490234375
    10. ' ' → logprob: -13.475677490234375

Token 375: ' current' (ID: 2208)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -4.632542913896032e-05
    2. '   ' → logprob: -10.000046730041504
    3. ' cur' → logprob: -14.000046730041504
    4. '	cur' → logprob: -16.625045776367188
    5. 'current' (adapté à ' current') → logprob: -17.375045776367188
    6. 'curr' → logprob: -18.125045776367188
    7. '_cur' → logprob: -19.375045776367188
    8. '    
' → logprob: -19.750045776367188
    9. '```' → logprob: -20.000045776367188
    10. '  ' → logprob: -20.750045776367188

Token 376: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.07944905757904053
    2. '_position' → logprob: -2.57944917678833
    3. '_positions' → logprob: -7.57944917678833
    4. '_' → logprob: -10.079448699951172
    5. '=' → logprob: -13.454448699951172
    6. ' _' → logprob: -13.579448699951172
    7. ' =' → logprob: -13.829448699951172
    8. 'pos' → logprob: -14.579448699951172
    9. '=_' → logprob: -14.579448699951172
    10. '\' → logprob: -15.204448699951172

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141752064228058
    2. '=' → logprob: -1.7014175653457642
    3. '=-' → logprob: -13.326417922973633
    4. ' ' → logprob: -13.451417922973633
    5. ' -=' → logprob: -14.451417922973633
    6. '   ' → logprob: -15.326417922973633
    7. '-=' → logprob: -15.451417922973633
    8. '  ' → logprob: -16.201417922973633
    9. '=int' → logprob: -17.076417922973633
    10. '＝' → logprob: -17.451417922973633

Token 378: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -19.25007438659668
    4. '  ' → logprob: -19.37507438659668
    5. '=' → logprob: -19.50007438659668
    6. '-' → logprob: -20.00007438659668
    7. '1' → logprob: -20.75007438659668
    8. '۰' → logprob: -20.87507438659668
    9. '０' → logprob: -21.12507438659668
    10. ' ' → logprob: -22.25007438659668

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '-' → logprob: -19.125001907348633
    4. '۰' → logprob: -20.250001907348633
    5. '０' → logprob: -20.750001907348633
    6. '1' → logprob: -21.375001907348633
    7. '=' → logprob: -21.750001907348633
    8. '  ' → logprob: -22.500001907348633
    9. '000' → logprob: -23.250001907348633
    10. '٠' → logprob: -23.250001907348633

Token 380: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015784351155161858
    2. '
' → logprob: -5.01578426361084
    3. 'for' → logprob: -5.39078426361084
    4. ' for' → logprob: -5.76578426361084
    5. '<|end|>' → logprob: -6.89078426361084
    6. '    
' → logprob: -8.39078426361084
    7. '	for' → logprob: -9.76578426361084
    8. '<|end|>' → logprob: -10.76578426361084
    9. '	
' → logprob: -12.51578426361084
    10. '```' → logprob: -13.14078426361084

Token 381: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4856468141078949
    2. 'for' → logprob: -0.9856468439102173
    3. ' for' → logprob: -4.485646724700928
    4. '    
' → logprob: -9.360647201538086
    5. '
' → logprob: -9.610647201538086
    6. '	for' → logprob: -9.735647201538086
    7. '<|end|>' → logprob: -11.360647201538086
    8. ' ' → logprob: -12.860647201538086
    9. '  ' → logprob: -12.985647201538086
    10. '  
' → logprob: -13.485647201538086

Token 382: ' on' (ID: 402)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.293487548828125
    2. 'for' → logprob: -1.668487548828125
    3. ' current' → logprob: -3.668487548828125
    4. ' for' → logprob: -3.918487548828125
    5. '#' → logprob: -5.293487548828125
    6. '<|end|>' → logprob: -5.293487548828125
    7. '
' → logprob: -5.793487548828125
    8. '<|end|>' → logprob: -6.293487548828125
    9. ' ' → logprob: -6.918487548828125
    10. '   ' → logprob: -7.418487548828125

Token 383: ' commenc' (ID: 53342)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7070324420928955
    2. '-=' → logprob: -1.0820324420928955
    3. ' =' → logprob: -2.0820324420928955
    4. ' -=' → logprob: -3.3320324420928955
    5. '-' → logprob: -5.832032203674316
    6. '=-' → logprob: -6.582032203674316
    7. '#' → logprob: -7.082032203674316
    8. '   ' → logprob: -7.957032203674316
    9. 'current' → logprob: -8.207032203674316
    10. '+=' → logprob: -8.207032203674316

Token 384: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.009815588593482971
    2. 'er' → logprob: -4.884815692901611
    3. '=' → logprob: -6.884815692901611
    4. 'ent' → logprob: -6.884815692901611
    5. 'es' → logprob: -9.134815216064453
    6. 'current' → logprob: -11.134815216064453
    7. ' =' → logprob: -11.509815216064453
    8. '   ' → logprob: -11.759815216064453
    9. 't' → logprob: -12.509815216064453
    10. ' current' → logprob: -12.759815216064453

Token 385: ' a' (ID: 261)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3338944911956787
    2. ' current' → logprob: -1.4588944911956787
    3. '   ' → logprob: -3.7088944911956787
    4. '<|end|>' → logprob: -4.458894729614258
    5. '-' → logprob: -5.708894729614258
    6. '	current' → logprob: -6.208894729614258
    7. '=current' → logprob: -6.708894729614258
    8. 'from' → logprob: -6.708894729614258
    9. ' ' → logprob: -6.958894729614258
    10. ' par' → logprob: -7.083894729614258

Token 386: ' decre' (ID: 12889)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09286618232727051
    2. 'current' → logprob: -2.4678661823272705
    3. ' current' → logprob: -6.342865943908691
    4. ' -' → logprob: -6.592865943908691
    5. '-current' → logprob: -7.467865943908691
    6. '0' → logprob: -8.592865943908691
    7. '-c' → logprob: -12.092865943908691
    8. ' ' → logprob: -12.217865943908691
    9. '	current' → logprob: -12.592865943908691
    10. '=current' → logprob: -12.967865943908691

Token 387: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.10744257271289825
    2. 'cre' → logprob: -2.982442617416382
    3. 'crement' → logprob: -3.482442617416382
    4. 'in' → logprob: -5.857442378997803
    5. 'cr' → logprob: -6.107442378997803
    6. 'min' → logprob: -6.357442378997803
    7. 'rement' → logprob: -6.357442378997803
    8. 'ent' → logprob: -6.857442378997803
    9. 'current' → logprob: -6.982442378997803
    10. 'inter' → logprob: -7.107442378997803

Token 388: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5205267667770386
    2. '<|end|>' → logprob: -1.2705267667770386
    3. 'current' → logprob: -2.770526885986328
    4. '<|end|>' → logprob: -4.145526885986328
    5. ' current' → logprob: -4.270526885986328
    6. '
' → logprob: -4.520526885986328
    7. ' ' → logprob: -5.020526885986328
    8. '  ' → logprob: -5.145526885986328
    9. '    
' → logprob: -6.145526885986328
    10. '	current' → logprob: -6.770526885986328

Token 389: ' partir' (ID: 12100)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07520725578069687
    2. 'current' → logprob: -3.450207233428955
    3. ' -' → logprob: -4.075207233428955
    4. '0' → logprob: -4.325207233428955
    5. '1' → logprob: -5.075207233428955
    6. ' current' → logprob: -6.075207233428955
    7. ' ' → logprob: -6.325207233428955
    8. '
' → logprob: -11.075207710266113
    9. '```' → logprob: -11.075207710266113
    10. '(current' → logprob: -11.575207710266113

Token 390: ' de' (ID: 334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38923904299736023
    2. 'current' → logprob: -1.8892390727996826
    3. ' current' → logprob: -2.6392390727996826
    4. ' -' → logprob: -3.3892390727996826
    5. '   ' → logprob: -3.6392390727996826
    6. '0' → logprob: -3.7642390727996826
    7. '1' → logprob: -4.6392388343811035
    8. ' ' → logprob: -6.7642388343811035
    9. '=' → logprob: -6.7642388343811035
    10. '=current' → logprob: -6.7642388343811035

Token 391: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4958881437778473
    2. '0' → logprob: -0.9958881139755249
    3. ' -' → logprob: -4.6208882331848145
    4. 'current' → logprob: -4.7458882331848145
    5. ' ' → logprob: -5.9958882331848145
    6. ' current' → logprob: -7.9958882331848145
    7. '-current' → logprob: -9.120887756347656
    8. '1' → logprob: -9.370887756347656
    9. '  ' → logprob: -12.870887756347656
    10. '   ' → logprob: -12.995887756347656

Token 392: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07997973263263702
    2. '0' → logprob: -2.579979658126831
    3. 'current' → logprob: -6.95497989654541
    4. ' -' → logprob: -9.57997989654541
    5. '-current' → logprob: -10.20497989654541
    6. '1' → logprob: -10.95497989654541
    7. ' current' → logprob: -12.70497989654541
    8. ' ' → logprob: -12.95497989654541
    9. '-l' → logprob: -13.20497989654541
    10. '-n' → logprob: -13.32997989654541

Token 393: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036070480942726135
    2. '
' → logprob: -4.036070346832275
    3. '    
' → logprob: -4.661070346832275
    4. 'for' → logprob: -5.911070346832275
    5. '<|end|>' → logprob: -5.911070346832275
    6. ' for' → logprob: -6.036070346832275
    7. '	
' → logprob: -8.786070823669434
    8. '<|end|>' → logprob: -8.911070823669434
    9. '	for' → logprob: -9.161070823669434
    10. '  
' → logprob: -10.036070823669434

Token 394: ' les' (ID: 1341)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03833752125501633
    2. ' -' → logprob: -3.413337469100952
    3. ' current' → logprob: -6.413337707519531
    4. 'current' → logprob: -6.788337707519531
    5. 'placer' → logprob: -8.413337707519531
    6. 'mettre' → logprob: -8.413337707519531
    7. 'de' → logprob: -8.663337707519531
    8. '-m' → logprob: -8.663337707519531
    9. 'le' → logprob: -8.913337707519531
    10. '-le' → logprob: -9.163337707519531

Token 395: ' mises' (ID: 94675)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.5667396783828735
    2. 'requ' → logprob: -1.8167396783828735
    3. 'élé' → logprob: -2.191739559173584
    4. 'm' → logprob: -3.191739559173584
    5. ' elements' → logprob: -3.191739559173584
    6. 'de' → logprob: -3.441739559173584
    7. 't' → logprob: -4.441739559173584
    8. 'prem' → logprob: -5.441739559173584
    9. ' requ' → logprob: -5.941739559173584
    10. 'moves' → logprob: -6.066739559173584

Token 396: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.020644305273890495
    2. '   ' → logprob: -4.645644187927246
    3. '_en' → logprob: -4.895644187927246
    4. ' en' → logprob: -6.145644187927246
    5. 't' → logprob: -7.770644187927246
    6. 'a' → logprob: -8.395644187927246
    7. '_t' → logprob: -9.145644187927246
    8. '-en' → logprob: -9.770644187927246
    9. '	en' → logprob: -9.770644187927246
    10. 'à' → logprob: -10.020644187927246

Token 397: ' tete' (ID: 159380)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00030114251421764493
    2. '_t' → logprob: -9.250301361083984
    3. 'te' → logprob: -9.500301361083984
    4. 'tet' → logprob: -10.375301361083984
    5. 'tte' → logprob: -10.500301361083984
    6. ' tete' → logprob: -10.750301361083984
    7. ' ' → logprob: -11.625301361083984
    8. '```' → logprob: -12.000301361083984
    9. '   ' → logprob: -12.250301361083984
    10. '1' → logprob: -12.375301361083984

Token 398: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023046301677823067
    2. '
' → logprob: -4.523046493530273
    3. 'for' → logprob: -4.773046493530273
    4. '    
' → logprob: -6.273046493530273
    5. ' for' → logprob: -6.648046493530273
    6. '	for' → logprob: -9.023046493530273
    7. '<|end|>' → logprob: -9.148046493530273
    8. '  
' → logprob: -10.648046493530273
    9. '	
' → logprob: -11.523046493530273
    10. '<|end|>' → logprob: -12.023046493530273

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25228002667427063
    2. 'for' → logprob: -1.5022799968719482
    3. ' for' → logprob: -8.002280235290527
    4. '	for' → logprob: -11.377280235290527
    5. '    
' → logprob: -12.502280235290527
    6. '
' → logprob: -14.627280235290527
    7. 'import' → logprob: -15.877280235290527
    8. '```' → logprob: -16.37727928161621
    9. '<|end|>' → logprob: -16.75227928161621
    10. 'while' → logprob: -17.12727928161621

Token 400: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.2166411478538066e-05
    2. '   ' → logprob: -10.250052452087402
    3. ' for' → logprob: -11.000052452087402
    4. '	for' → logprob: -16.750051498413086
    5. '```' → logprob: -21.500051498413086
    6. '
' → logprob: -21.750051498413086
    7. '    
' → logprob: -21.750051498413086
    8. '  ' → logprob: -23.125051498413086
    9. ' ' → logprob: -23.125051498413086
    10. 'while' → logprob: -23.500051498413086

Token 401: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009533773176372051
    2. ' _' → logprob: -4.759533882141113
    3. '_i' → logprob: -7.009533882141113
    4. '_j' → logprob: -11.759533882141113
    5. '_in' → logprob: -12.259533882141113
    6. ' in' → logprob: -13.884533882141113
    7. '_range' → logprob: -14.384533882141113
    8. '_e' → logprob: -15.259533882141113
    9. '_re' → logprob: -15.884533882141113
    10. 'i' → logprob: -16.009532928466797

Token 402: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17994169890880585
    2. ' in' → logprob: -1.8049416542053223
    3. ' ' → logprob: -9.30494213104248
    4. 'range' → logprob: -9.67994213104248
    5. '_' → logprob: -11.05494213104248
    6. '  ' → logprob: -11.30494213104248
    7. ' _' → logprob: -12.92994213104248
    8. 'import' → logprob: -13.05494213104248
    9. 'i' → logprob: -13.30494213104248
    10. '   ' → logprob: -13.42994213104248

Token 403: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019308974733576179
    2. ' range' → logprob: -6.2519307136535645
    3. 'input' → logprob: -13.376931190490723
    4. '(range' → logprob: -14.501931190490723
    5. '	range' → logprob: -16.251930236816406
    6. 'ange' → logprob: -16.626930236816406
    7. 'in' → logprob: -17.126930236816406
    8. 'rang' → logprob: -18.251930236816406
    9. ' ' → logprob: -18.376930236816406
    10. '   ' → logprob: -18.751930236816406

Token 404: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.347765181795694e-05
    2. '(' → logprob: -10.000053405761719
    3. ' (' → logprob: -11.875053405761719
    4. 'm' → logprob: -15.000053405761719
    5. ' m' → logprob: -15.125053405761719
    6. '(M' → logprob: -15.750053405761719
    7. '(range' → logprob: -15.875053405761719
    8. '(
' → logprob: -17.00005340576172
    9. ',m' → logprob: -17.12505340576172
    10. ',' → logprob: -17.12505340576172

Token 405: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14951947331428528
    2. '):
' → logprob: -2.024519443511963
    3. ',' → logprob: -5.524519443511963
    4. ')' → logprob: -6.649519443511963
    5. ':' → logprob: -6.649519443511963
    6. '   ' → logprob: -10.149519920349121
    7. '):
' → logprob: -10.399519920349121
    8. 'e' → logprob: -10.524519920349121
    9. '):

' → logprob: -10.649519920349121
    10. ' ):' → logprob: -10.899519920349121

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008961634710431099
    2. 'e' → logprob: -5.0089616775512695
    3. ' e' → logprob: -6.1339616775512695
    4. '	e' → logprob: -10.00896167755127
    5. ',e' → logprob: -11.38396167755127
    6. '   ' → logprob: -11.63396167755127
    7. ',' → logprob: -12.50896167755127
    8. '_e' → logprob: -14.00896167755127
    9. '(e' → logprob: -14.00896167755127
    10. '        
' → logprob: -14.00896167755127

Token 407: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.04283097758889198
    2. ' e' → logprob: -3.2928309440612793
    3. '       ' → logprob: -5.542830944061279
    4. '   ' → logprob: -7.792830944061279
    5. 'x' → logprob: -8.542831420898438
    6. '	e' → logprob: -9.042831420898438
    7. 'element' → logprob: -9.792831420898438
    8. 'elem' → logprob: -10.042831420898438
    9. 'ei' → logprob: -11.417831420898438
    10. 'ele' → logprob: -11.917831420898438

Token 408: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143067836761475
    2. '=' → logprob: -1.7014306783676147
    3. '=int' → logprob: -11.826430320739746
    4. ' ' → logprob: -12.201430320739746
    5. ',' → logprob: -12.701430320739746
    6. '_' → logprob: -14.701430320739746
    7. '   ' → logprob: -14.951430320739746
    8. '	' → logprob: -15.201430320739746
    9. ' ,' → logprob: -15.326430320739746
    10. '  ' → logprob: -15.701430320739746

Token 409: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '(int' → logprob: -20.000261306762695
    4. '   ' → logprob: -21.000261306762695
    5. '  ' → logprob: -21.625261306762695
    6. '[int' → logprob: -21.875261306762695
    7. '	int' → logprob: -22.250261306762695
    8. ' ' → logprob: -22.250261306762695
    9. '<int' → logprob: -22.500261306762695
    10. '=int' → logprob: -23.375261306762695

Token 410: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00013095269969198853
    2. '(' → logprob: -9.000130653381348
    3. 'input' → logprob: -11.875130653381348
    4. ' (' → logprob: -15.500130653381348
    5. '(
' → logprob: -15.750130653381348
    6. '=input' → logprob: -16.000131607055664
    7. ' input' → logprob: -17.000131607055664
    8. '()' → logprob: -17.125131607055664
    9. ',input' → logprob: -17.625131607055664
    10. '(

' → logprob: -19.000131607055664

Token 411: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003981516230851412
    2. '().' → logprob: -6.003981590270996
    3. '()' → logprob: -6.503981590270996
    4. ')' → logprob: -12.378981590270996
    5. '())
' → logprob: -13.503981590270996
    6. ' ())' → logprob: -14.003981590270996
    7. '()
' → logprob: -15.003981590270996
    8. '(' → logprob: -15.503981590270996
    9. '();)' → logprob: -15.878981590270996
    10. '())

' → logprob: -16.37898063659668

Token 412: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6371509432792664
    2. '       ' → logprob: -0.8871509432792664
    3. '   ' → logprob: -3.512151002883911
    4. ' current' → logprob: -4.262150764465332
    5. 'current' → logprob: -4.887150764465332
    6. '        
' → logprob: -6.137150764465332
    7. '    
' → logprob: -6.262150764465332
    8. '  
' → logprob: -6.387150764465332
    9. ' 
' → logprob: -6.762150764465332
    10. '   
' → logprob: -8.137150764465332

Token 413: ' #' (ID: 1069)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.005666394717991352
    2. ' positions' → logprob: -5.255666255950928
    3. '       ' → logprob: -7.880666255950928
    4. '   ' → logprob: -10.005666732788086
    5. 'position' → logprob: -11.880666732788086
    6. 'current' → logprob: -13.255666732788086
    7. '           ' → logprob: -15.380666732788086
    8. '.positions' → logprob: -16.005666732788086
    9. ' current' → logprob: -16.255666732788086
    10. ' ' → logprob: -16.755666732788086

Token 414: ' Move' (ID: 25485)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.00706060416996479
    2. ' positions' → logprob: -5.007060527801514
    3. '       ' → logprob: -8.132061004638672
    4. '   ' → logprob: -10.632061004638672
    5. 'position' → logprob: -11.007061004638672
    6. 'current' → logprob: -11.757061004638672
    7. '           ' → logprob: -14.007061004638672
    8. ' current' → logprob: -14.507061004638672
    9. '.positions' → logprob: -15.632061004638672
    10. '        
' → logprob: -15.757061004638672

Token 415: ' e' (ID: 319)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6768296360969543
    2. '[e' → logprob: -0.9268296360969543
    3. 's' → logprob: -3.5518295764923096
    4. '_positions' → logprob: -3.6768295764923096
    5. '[' → logprob: -3.8018295764923096
    6. ' positions' → logprob: -4.551829814910889
    7. '   ' → logprob: -6.426829814910889
    8. ' e' → logprob: -6.551829814910889
    9. '       ' → logprob: -6.801829814910889
    10. 'e' → logprob: -6.801829814910889

Token 416: ' to' (ID: 316)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8289238810539246
    2. '_positions' → logprob: -2.2039239406585693
    3. ' to' → logprob: -2.4539239406585693
    4. 'to' → logprob: -2.5789239406585693
    5. '_to' → logprob: -3.0789239406585693
    6. 's' → logprob: -3.0789239406585693
    7. ']' → logprob: -3.0789239406585693
    8. '<|end|>' → logprob: -3.8289239406585693
    9. 'current' → logprob: -4.07892370223999
    10. '[current' → logprob: -4.32892370223999

Token 417: ' head' (ID: 3189)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3869301974773407
    2. ' current' → logprob: -1.136930227279663
    3. ' ' → logprob: -10.761930465698242
    4. '	current' → logprob: -11.386930465698242
    5. ' the' → logprob: -12.261930465698242
    6. 'the' → logprob: -12.386930465698242
    7. '   ' → logprob: -12.386930465698242
    8. '_current' → logprob: -12.761930465698242
    9. '[current' → logprob: -12.761930465698242
    10. 'head' → logprob: -12.886930465698242

Token 418: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22946879267692566
    2. '
' → logprob: -1.604468822479248
    3. '        
' → logprob: -5.979468822479248
    4. '  
' → logprob: -7.979468822479248
    5. 'current' → logprob: -8.22946834564209
    6. ' 
' → logprob: -8.35446834564209
    7. '    
' → logprob: -8.97946834564209
    8. 'positions' → logprob: -9.22946834564209
    9. ' current' → logprob: -9.47946834564209
    10. ',' → logprob: -9.47946834564209

Token 419: ' lui' (ID: 10623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20932500064373016
    2. 'positions' → logprob: -1.9593249559402466
    3. ' positions' → logprob: -3.084325075149536
    4. 'current' → logprob: -6.584324836730957
    5. ' current' → logprob: -7.584324836730957
    6. '   ' → logprob: -9.209324836730957
    7. '        
' → logprob: -9.459324836730957
    8. '
' → logprob: -10.584324836730957
    9. '_positions' → logprob: -11.459324836730957
    10. 'position' → logprob: -11.959324836730957

Token 420: ' donner' (ID: 32394)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.09476109594106674
    2. '_positions' → logprob: -3.0947611331939697
    3. 's' → logprob: -3.3447611331939697
    4. ' positions' → logprob: -4.844760894775391
    5. '<|end|>' → logprob: -6.969760894775391
    6. 'Positions' → logprob: -7.844760894775391
    7. '<|end|>' → logprob: -9.09476089477539
    8. '.positions' → logprob: -9.09476089477539
    9. ''s' → logprob: -10.59476089477539
    10. 'n' → logprob: -10.59476089477539

Token 421: ' une' (ID: 2463)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3134081959724426
    2. ' current' → logprob: -1.3134081363677979
    3. 'a' → logprob: -9.563407897949219
    4. ' a' → logprob: -10.063407897949219
    5. '	current' → logprob: -11.188407897949219
    6. '[current' → logprob: -12.063407897949219
    7. '   ' → logprob: -12.688407897949219
    8. '=current' → logprob: -13.438407897949219
    9. 'the' → logprob: -13.563407897949219
    10. ' actuel' → logprob: -13.938407897949219

Token 422: ' position' (ID: 4010)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5548455715179443
    2. 'position' → logprob: -0.9298455715179443
    3. ' current' → logprob: -3.6798455715179443
    4. ' position' → logprob: -5.804845809936523
    5. 'new' → logprob: -6.679845809936523
    6. 'pos' → logprob: -8.054845809936523
    7. ' nouvelle' → logprob: -8.179845809936523
    8. 'positions' → logprob: -8.804845809936523
    9. ' new' → logprob: -9.054845809936523
    10. '[current' → logprob: -9.179845809936523

Token 423: ' plus' (ID: 2932)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5154983997344971
    2. ' =' → logprob: -1.890498399734497
    3. '=' → logprob: -2.015498399734497
    4. '=current' → logprob: -2.890498399734497
    5. ' current' → logprob: -3.265498399734497
    6. '[current' → logprob: -3.765498399734497
    7. '   ' → logprob: -7.015498161315918
    8. '       ' → logprob: -8.015498161315918
    9. '	current' → logprob: -8.640498161315918
    10. '(current' → logprob: -10.140498161315918

Token 424: ' petite' (ID: 28119)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7863013744354248
    2. 'small' → logprob: -1.9113013744354248
    3. 'pet' → logprob: -2.536301374435425
    4. ' -' → logprob: -2.536301374435425
    5. 'current' → logprob: -3.036301374435425
    6. 'minus' → logprob: -3.286301374435425
    7. '_small' → logprob: -3.411301374435425
    8. 'min' → logprob: -3.661301374435425
    9. '   ' → logprob: -3.786301374435425
    10. ' petite' → logprob: -4.411301612854004

Token 425: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7541447281837463
    2. 'current' → logprob: -1.8791446685791016
    3. '
' → logprob: -2.1291446685791016
    4. '=' → logprob: -2.2541446685791016
    5. ' =' → logprob: -2.6291446685791016
    6. '   ' → logprob: -3.5041446685791016
    7. ' current' → logprob: -4.504144668579102
    8. '=current' → logprob: -4.754144668579102
    9. '        
' → logprob: -4.879144668579102
    10. ',' → logprob: -5.004144668579102

Token 426: ' toutes' (ID: 17502)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.01277473196387291
    2. ' current' → logprob: -5.26277494430542
    3. 't' → logprob: -5.38777494430542
    4. 'all' → logprob: -6.01277494430542
    5. ' toutes' → logprob: -8.637774467468262
    6. 'any' → logprob: -8.887774467468262
    7. 'tout' → logprob: -9.137774467468262
    8. ' all' → logprob: -10.512774467468262
    9. 'Toutes' → logprob: -12.387774467468262
    10. ' tous' → logprob: -12.637774467468262

Token 427: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1103577613830566
    2. 'current' → logprob: -1.2353577613830566
    3. ' current' → logprob: -1.2353577613830566
    4. '  ' → logprob: -3.9853577613830566
    5. '    ' → logprob: -4.235357761383057
    6. ' than' → logprob: -4.735357761383057
    7. '[current' → logprob: -5.235357761383057
    8. ' ' → logprob: -5.235357761383057
    9. '_current' → logprob: -5.235357761383057
    10. ' =' → logprob: -5.360357761383057

Token 428: ' autres' (ID: 18701)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.20126205682754517
    2. 'current' → logprob: -2.3262619972229004
    3. 'pr' → logprob: -3.2012619972229004
    4. ' positions' → logprob: -4.4512619972229
    5. 'preced' → logprob: -4.5762619972229
    6. ' current' → logprob: -4.9512619972229
    7. 'act' → logprob: -5.9512619972229
    8. '.' → logprob: -6.0762619972229
    9. 'prev' → logprob: -6.7012619972229
    10. 'previous' → logprob: -6.8262619972229

Token 429: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030928602442145348
    2. '
' → logprob: -3.530928611755371
    3. 'current' → logprob: -8.155928611755371
    4. 'positions' → logprob: -8.280928611755371
    5. '        
' → logprob: -8.405928611755371
    6. '<|end|>' → logprob: -8.905928611755371
    7. ' positions' → logprob: -9.405928611755371
    8. ',' → logprob: -10.280928611755371
    9. '  
' → logprob: -10.530928611755371
    10. '
' → logprob: -10.530928611755371

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03360283002257347
    2. 'positions' → logprob: -5.033602714538574
    3. '        
' → logprob: -5.283602714538574
    4. '
' → logprob: -5.283602714538574
    5. ' positions' → logprob: -5.283602714538574
    6. ' current' → logprob: -5.908602714538574
    7. 'current' → logprob: -6.033602714538574
    8. ' 
' → logprob: -6.158602714538574
    9. '  
' → logprob: -6.533602714538574
    10. '   ' → logprob: -6.908602714538574

Token 431: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.3290541470050812
    2. ' positions' → logprob: -1.8290541172027588
    3. '       ' → logprob: -2.329054117202759
    4. 'current' → logprob: -4.204054355621338
    5. ' current' → logprob: -5.454054355621338
    6. '   ' → logprob: -6.329054355621338
    7. '
' → logprob: -6.829054355621338
    8. '        
' → logprob: -9.20405387878418
    9. ' 
' → logprob: -9.57905387878418
    10. 'position' → logprob: -9.95405387878418

Token 432: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. ' [' → logprob: -16.625
    4. 'e' → logprob: -17.25
    5. '[
' → logprob: -19.375
    6. '```' → logprob: -19.375
    7. '	e' → logprob: -20.375
    8. ' e' → logprob: -21.25
    9. '\[' → logprob: -21.375
    10. '(e' → logprob: -21.625

Token 433: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4443260133266449
    2. ']' → logprob: -1.1943260431289673
    3. ' =' → logprob: -3.3193259239196777
    4. ')' → logprob: -4.444325923919678
    5. ']=' → logprob: -5.069325923919678
    6. ' ]' → logprob: -6.819325923919678
    7. ')=' → logprob: -7.819325923919678
    8. ' )' → logprob: -9.194326400756836
    9. '   ' → logprob: -11.194326400756836
    10. ' ' → logprob: -12.319326400756836

Token 434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048882268369198
    2. ' =' → logprob: -4.511048793792725
    3. '=current' → logprob: -14.386049270629883
    4. '＝' → logprob: -16.261049270629883
    5. '=
' → logprob: -16.636049270629883
    6. '=

' → logprob: -16.886049270629883
    7. '=-' → logprob: -17.011049270629883
    8. '.=' → logprob: -17.136049270629883
    9. '   ' → logprob: -17.136049270629883
    10. '=}' → logprob: -17.261049270629883

Token 435: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -3.7697225252486533e-06
    2. ' current' → logprob: -12.500003814697266
    3. 'cur' → logprob: -19.875003814697266
    4. '	current' → logprob: -20.000003814697266
    5. '   ' → logprob: -20.375003814697266
    6. '(current' → logprob: -22.250003814697266
    7. 'curr' → logprob: -22.250003814697266
    8. '$current' → logprob: -22.875003814697266
    9. '[current' → logprob: -23.250003814697266
    10. 'Current' → logprob: -23.625003814697266

Token 436: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.320199877838604e-07
    2. ' _' → logprob: -16.0
    3. '_' → logprob: -16.125
    4. '_positions' → logprob: -16.875
    5. 'pos' → logprob: -17.0
    6. '_position' → logprob: -17.375
    7. '_POS' → logprob: -18.125
    8. 'Pos' → logprob: -18.5
    9. '_p' → logprob: -19.375
    10. '_val' → logprob: -19.375

Token 437: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9159402251243591
    2. 'current' → logprob: -0.9159402251243591
    3. ' current' → logprob: -1.665940284729004
    4. '       ' → logprob: -5.165940284729004
    5. '
' → logprob: -5.540940284729004
    6. '	current' → logprob: -7.040940284729004
    7. ',current' → logprob: -9.540940284729004
    8. '    
' → logprob: -9.915940284729004
    9. ' 
' → logprob: -10.540940284729004
    10. '[current' → logprob: -11.040940284729004

Token 438: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03804057091474533
    2. 'current' → logprob: -3.9130406379699707
    3. ' current' → logprob: -4.163040637969971
    4. '	current' → logprob: -6.413040637969971
    5. '    
' → logprob: -10.288040161132812
    6. '[current' → logprob: -10.288040161132812
    7. '       ' → logprob: -10.913040161132812
    8. '
' → logprob: -11.163040161132812
    9. ',current' → logprob: -11.288040161132812
    10. '(current' → logprob: -11.913040161132812

Token 439: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.13484495878219604
    2. ' current' → logprob: -2.134845018386841
    3. '   ' → logprob: -4.884844779968262
    4. '	current' → logprob: -8.384844779968262
    5. '       ' → logprob: -9.259844779968262
    6. '_current' → logprob: -14.134844779968262
    7. ',current' → logprob: -15.009844779968262
    8. '[current' → logprob: -15.509844779968262
    9. '$current' → logprob: -15.884844779968262
    10. '(current' → logprob: -16.134845733642578

Token 440: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: 0.0
    2. '_' → logprob: -17.875
    3. 'pos' → logprob: -18.125
    4. '_positions' → logprob: -19.75
    5. 'Pos' → logprob: -19.875
    6. '_position' → logprob: -20.625
    7. '_POS' → logprob: -21.0
    8. '_Pos' → logprob: -21.375
    9. '_p' → logprob: -21.75
    10. '._' → logprob: -23.75

Token 441: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.38729819655418396
    2. '-=' → logprob: -1.1372982263565063
    3. '-' → logprob: -7.762298107147217
    4. '   ' → logprob: -14.387298583984375
    5. ' -' → logprob: -14.887298583984375
    6. '	' → logprob: -15.387298583984375
    7. ' ' → logprob: -16.137298583984375
    8. '=' → logprob: -16.262298583984375
    9. '+=' → logprob: -16.262298583984375
    10. '﻿' → logprob: -16.762298583984375

Token 442: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.00002098083496
    4. '```' → logprob: -21.12502098083496
    5. '<|end|>' → logprob: -21.87502098083496
    6. '۱' → logprob: -22.12502098083496
    7. '１' → logprob: -22.37502098083496
    8. ' ' → logprob: -22.50002098083496
    9. '  ' → logprob: -22.75002098083496
    10. '0' → logprob: -23.81252098083496

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -21.375
    4. '   ' → logprob: -21.75
    5. '<|end|>' → logprob: -23.25
    6. '۱' → logprob: -23.5
    7. '１' → logprob: -23.5
    8. '১' → logprob: -24.625
    9. '१' → logprob: -24.625
    10. '  ' → logprob: -24.75

Token 444: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037454310804605484
    2. '    
' → logprob: -3.41245436668396
    3. 'elements' → logprob: -5.912454128265381
    4. '
' → logprob: -7.912454128265381
    5. '```' → logprob: -8.162454605102539
    6. 'sorted' → logprob: -8.662454605102539
    7. '  
' → logprob: -9.787454605102539
    8. ' elems' → logprob: -9.912454605102539
    9. 'items' → logprob: -10.162454605102539
    10. ' elements' → logprob: -10.537454605102539

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008000983856618404
    2. '    
' → logprob: -5.50800085067749
    3. 'elements' → logprob: -5.63300085067749
    4. 'sorted' → logprob: -9.133001327514648
    5. '```' → logprob: -10.008001327514648
    6. ' elems' → logprob: -10.133001327514648
    7. ' elements' → logprob: -10.133001327514648
    8. 'result' → logprob: -10.633001327514648
    9. 'items' → logprob: -10.883001327514648
    10. '
' → logprob: -11.008001327514648

Token 446: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8984726071357727
    2. '   ' → logprob: -1.273472547531128
    3. 'elements' → logprob: -1.898472547531128
    4. 'sorted' → logprob: -2.023472547531128
    5. 'arr' → logprob: -4.898472785949707
    6. 'final' → logprob: -5.023472785949707
    7. 'order' → logprob: -5.023472785949707
    8. 'sequence' → logprob: -5.523472785949707
    9. 'ordered' → logprob: -6.898472785949707
    10. 'items' → logprob: -6.898472785949707

Token 447: ' maintenant' (ID: 35735)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5399952530860901
    2. 'elements' → logprob: -1.0399951934814453
    3. '   ' → logprob: -4.289995193481445
    4. 'arr' → logprob: -4.539995193481445
    5. 'sequence' → logprob: -4.789995193481445
    6. 'final' → logprob: -5.039995193481445
    7. 'sorted' → logprob: -5.039995193481445
    8. 'res' → logprob: -5.164995193481445
    9. 'order' → logprob: -5.539995193481445
    10. 'ele' → logprob: -5.539995193481445

Token 448: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0590786449611187
    2. 'result' → logprob: -4.059078693389893
    3. 'elements' → logprob: -4.059078693389893
    4. 'sorted' → logprob: -4.309078693389893
    5. 'sequence' → logprob: -6.059078693389893
    6. '#' → logprob: -6.309078693389893
    7. 'final' → logprob: -6.684078693389893
    8. ' elements' → logprob: -6.934078693389893
    9. 'arr' → logprob: -7.559078693389893
    10. 'res' → logprob: -8.059078216552734

Token 449: ' a' (ID: 261)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.6133635640144348
    2. '   ' → logprob: -1.73836350440979
    3. 'tr' → logprob: -2.48836350440979
    4. '#' → logprob: -2.73836350440979
    5. 'sorted' → logprob: -3.48836350440979
    6. 'def' → logprob: -4.238363742828369
    7. 'range' → logprob: -4.363363742828369
    8. '.sort' → logprob: -4.488363742828369
    9. 's' → logprob: -4.738363742828369
    10. '_sorted' → logprob: -5.113363742828369

Token 450: ' la' (ID: 557)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.25295376777648926
    2. '   ' → logprob: -2.0029537677764893
    3. 'elements' → logprob: -2.6279537677764893
    4. ' sorted' → logprob: -4.87795352935791
    5. 'range' → logprob: -5.87795352935791
    6. '#' → logprob: -6.87795352935791
    7. 'result' → logprob: -6.87795352935791
    8. 'pairs' → logprob: -6.87795352935791
    9. 'positions' → logprob: -7.62795352935791
    10. ' elements' → logprob: -7.75295352935791

Token 451: ' position' (ID: 4010)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4800022840499878
    2. 'result' → logprob: -1.9800022840499878
    3. 'final' → logprob: -1.9800022840499878
    4. 'sequence' → logprob: -2.3550024032592773
    5. '#' → logprob: -5.730002403259277
    6. 'liste' → logprob: -6.480002403259277
    7. 'positions' → logprob: -6.605002403259277
    8. 'seq' → logprob: -6.730002403259277
    9. 'print' → logprob: -6.980002403259277
    10. 'res' → logprob: -7.605002403259277

Token 452: ' virtuelle' (ID: 148533)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9910896420478821
    2. 'final' → logprob: -2.1160895824432373
    3. '_element' → logprob: -2.6160895824432373
    4. ',' → logprob: -2.9910895824432373
    5. '_final' → logprob: -3.1160895824432373
    6. '_elements' → logprob: -3.1160895824432373
    7. 'des' → logprob: -3.1160895824432373
    8. '_sorted' → logprob: -3.1160895824432373
    9. 'sorted' → logprob: -3.3660895824432373
    10. 'et' → logprob: -3.6160895824432373

Token 453: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49472108483314514
    2. 'elements' → logprob: -1.2447210550308228
    3. 'sorted' → logprob: -2.8697211742401123
    4. 'final' → logprob: -4.494720935821533
    5. 'items' → logprob: -4.869720935821533
    6. ',' → logprob: -4.869720935821533
    7. 'result' → logprob: -4.994720935821533
    8. '#' → logprob: -5.244720935821533
    9. 'ele' → logprob: -5.869720935821533
    10. 'arr' → logprob: -6.994720935821533

Token 454: ' chaque' (ID: 21194)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6818420886993408
    2. 'each' → logprob: -1.4318420886993408
    3. ' chaque' → logprob: -2.306842088699341
    4. 'cha' → logprob: -2.806842088699341
    5. 'ch' → logprob: -3.056842088699341
    6. 'all' → logprob: -3.806842088699341
    7. 'tout' → logprob: -4.181841850280762
    8. 'l' → logprob: -5.931841850280762
    9. 'Chaque' → logprob: -6.431841850280762
    10. 'every' → logprob: -6.681841850280762

Token 455: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.2521692216396332
    2. 'élé' → logprob: -1.7521692514419556
    3. ' element' → logprob: -3.252169132232666
    4. ' élément' → logprob: -4.627169132232666
    5. 'elem' → logprob: -7.627169132232666
    6. 'é' → logprob: -9.127169609069824
    7. '```' → logprob: -9.252169609069824
    8. 'e' → logprob: -10.127169609069824
    9. 'lement' → logprob: -10.377169609069824
    10. 'elements' → logprob: -10.502169609069824

Token 456: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004902008455246687
    2. 'elements' → logprob: -5.879901885986328
    3. 'result' → logprob: -6.504901885986328
    4. 'final' → logprob: -8.004901885986328
    5. 'sorted' → logprob: -9.129901885986328
    6. 'arr' → logprob: -10.504901885986328
    7. 'items' → logprob: -10.629901885986328
    8. ' elements' → logprob: -10.629901885986328
    9. '    
' → logprob: -10.754901885986328
    10. ' elems' → logprob: -10.754901885986328

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036771558225154877
    2. 'elements' → logprob: -5.7536773681640625
    3. ' elements' → logprob: -8.628677368164062
    4. 'sorted' → logprob: -9.003677368164062
    5. ' elems' → logprob: -9.503677368164062
    6. 'result' → logprob: -9.753677368164062
    7. 'final' → logprob: -11.003677368164062
    8. 'arr' → logprob: -11.503677368164062
    9. '#' → logprob: -11.753677368164062
    10. ' sorted' → logprob: -12.128677368164062

Token 458: ' #' (ID: 1069)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.1828012615442276
    2. 'result' → logprob: -2.1828012466430664
    3. 'ele' → logprob: -3.9328012466430664
    4. '   ' → logprob: -4.432801246643066
    5. 'sorted' → logprob: -5.057801246643066
    6. '#' (adapté à ' #') → logprob: -5.307801246643066
    7. 'final' → logprob: -5.432801246643066
    8. 'order' → logprob: -6.182801246643066
    9. 'sequence' → logprob: -6.432801246643066
    10. 'arr' → logprob: -6.932801246643066

Token 459: ' ceux' (ID: 26863)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.029071837663650513
    2. 'result' → logprob: -4.779071807861328
    3. '#' → logprob: -4.904071807861328
    4. 'sorted' → logprob: -5.404071807861328
    5. 'sequence' → logprob: -6.279071807861328
    6. 'ele' → logprob: -6.654071807861328
    7. '   ' → logprob: -6.654071807861328
    8. 'arr' → logprob: -6.904071807861328
    9. 'final' → logprob: -7.654071807861328
    10. 'order' → logprob: -7.779071807861328

Token 460: ' qui' (ID: 2780)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.7304418087005615
    2. '=' → logprob: -1.2304418087005615
    3. ' =' → logprob: -2.8554418087005615
    4. '#' → logprob: -3.2304418087005615
    5. '_' → logprob: -3.8554418087005615
    6. ' qui' → logprob: -4.230442047119141
    7. 'les' → logprob: -4.480442047119141
    8. 'x' → logprob: -5.105442047119141
    9. 'que' → logprob: -5.230442047119141
    10. '_rest' → logprob: -5.355442047119141

Token 461: ' ont' (ID: 4930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3478471040725708
    2. ' n' → logprob: -1.4728471040725708
    3. 'ont' → logprob: -1.4728471040725708
    4. '#' → logprob: -2.2228469848632812
    5. ' have' → logprob: -2.8478469848632812
    6. 's' → logprob: -3.8478469848632812
    7. ' are' → logprob: -4.472846984863281
    8. ' ont' → logprob: -4.472846984863281
    9. ' sont' → logprob: -4.722846984863281
    10. '```' → logprob: -4.847846984863281

Token 462: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.41579005122184753
    2. 'la' → logprob: -2.54079008102417
    3. 'des' → logprob: -2.79079008102417
    4. 'plus' → logprob: -2.91579008102417
    5. 'le' → logprob: -3.04079008102417
    6. 'les' → logprob: -3.41579008102417
    7. 'position' → logprob: -3.54079008102417
    8. '#' → logprob: -3.79079008102417
    9. ' une' → logprob: -5.41579008102417
    10. 'un' → logprob: -5.66579008102417

Token 463: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.2898997366428375
    2. 'plus' → logprob: -1.4148997068405151
    3. 'val' → logprob: -5.664899826049805
    4. ' plus' → logprob: -5.914899826049805
    5. ' position' → logprob: -7.164899826049805
    6. 'pos' → logprob: -7.289899826049805
    7. 'import' → logprob: -8.664899826049805
    8. '#' → logprob: -8.789899826049805
    9. 'sm' → logprob: -8.914899826049805
    10. 'positions' → logprob: -9.164899826049805

Token 464: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.26365700364112854
    2. ' plus' → logprob: -1.7636569738388062
    3. 'moins' → logprob: -4.263657093048096
    4. '<' → logprob: -4.388657093048096
    5. 'import' → logprob: -4.888657093048096
    6. 'strict' → logprob: -5.013657093048096
    7. ' <' → logprob: -5.763657093048096
    8. 'vir' → logprob: -6.138657093048096
    9. 'min' → logprob: -6.138657093048096
    10. 'inf' → logprob: -6.513657093048096

Token 465: ' faible' (ID: 75786)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0074369581416249275
    2. 'b' → logprob: -5.382436752319336
    3. 'small' → logprob: -6.257436752319336
    4. 'gr' → logprob: -7.632436752319336
    5. ' petite' → logprob: -8.882436752319336
    6. '```' → logprob: -8.882436752319336
    7. 'import' → logprob: -9.882436752319336
    8. 'bas' → logprob: -10.507436752319336
    9. 'fa' → logprob: -11.507436752319336
    10. 'Pet' → logprob: -11.632436752319336

Token 466: ' sont' (ID: 5242)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2295156866312027
    2. 's' → logprob: -2.354515790939331
    3. 'ont' → logprob: -3.104515790939331
    4. ' sont' → logprob: -3.354515790939331
    5. 'import' → logprob: -5.104515552520752
    6. ' (' → logprob: -5.229515552520752
    7. ' ont' → logprob: -5.354515552520752
    8. ' seront' → logprob: -5.729515552520752
    9. ' #' → logprob: -6.604515552520752
    10. '(' → logprob: -6.979515552520752

Token 467: ' plus' (ID: 2932)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.9886285662651062
    2. 'aff' → logprob: -1.613628625869751
    3. 'dev' → logprob: -1.613628625869751
    4. 'plus' → logprob: -2.488628625869751
    5. 'à' → logprob: -3.738628625869751
    6. 'plac' → logprob: -3.863628625869751
    7. 'au' → logprob: -3.863628625869751
    8. ' en' → logprob: -3.988628625869751
    9. 'mis' → logprob: -4.238628387451172
    10. 'avant' → logprob: -4.738628387451172

Token 468: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.1127588301897049
    2. 'dev' → logprob: -2.9877588748931885
    3. 't' → logprob: -3.7377588748931885
    4. 'avant' → logprob: -3.8627588748931885
    5. 'prior' → logprob: -5.362758636474609
    6. 'à' → logprob: -6.737758636474609
    7. 'pet' → logprob: -6.737758636474609
    8. 'haut' → logprob: -6.862758636474609
    9. ' en' → logprob: -6.987758636474609
    10. '#' → logprob: -8.11275863647461

Token 469: ' tete' (ID: 159380)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2643882632255554
    2. 'avant' → logprob: -1.5143883228302002
    3. 'dev' → logprob: -4.764388084411621
    4. 'de' → logprob: -6.639388084411621
    5. 'dé' → logprob: -7.389388084411621
    6. 'avance' → logprob: -7.514388084411621
    7. '#' → logprob: -8.139388084411621
    8. 'haut' → logprob: -8.139388084411621
    9. 'prem' → logprob: -8.764388084411621
    10. '```' → logprob: -8.889388084411621

Token 470: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004203409422188997
    2. '
' → logprob: -6.3792033195495605
    3. '    
' → logprob: -6.5042033195495605
    4. 'elements' → logprob: -7.0042033195495605
    5. '```' → logprob: -10.254203796386719
    6. 'sorted' → logprob: -10.754203796386719
    7. 'result' → logprob: -11.379203796386719
    8. ' elements' → logprob: -12.254203796386719
    9. 'final' → logprob: -12.254203796386719
    10. 'items' → logprob: -12.504203796386719

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018392755882814527
    2. 'result' → logprob: -7.0018391609191895
    3. 'elements' → logprob: -7.5018391609191895
    4. 'sorted' → logprob: -8.376839637756348
    5. 'final' → logprob: -9.626839637756348
    6. '    
' → logprob: -10.876839637756348
    7. 'sequence' → logprob: -11.376839637756348
    8. ' elements' → logprob: -11.376839637756348
    9. 'items' → logprob: -11.626839637756348
    10. 'arr' → logprob: -12.251839637756348

Token 472: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9867014288902283
    2. '   ' → logprob: -1.236701488494873
    3. 'elements' → logprob: -1.486701488494873
    4. 'sorted' → logprob: -2.986701488494873
    5. 'arr' → logprob: -3.986701488494873
    6. 'order' → logprob: -4.236701488494873
    7. 'sequence' → logprob: -5.111701488494873
    8. 'ele' → logprob: -5.361701488494873
    9. 'final' → logprob: -5.611701488494873
    10. ' elems' → logprob: -5.986701488494873

Token 473: ' Trier' (ID: 191551)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6887540817260742
    2. 'elements' → logprob: -1.1887540817260742
    3. '   ' → logprob: -2.063754081726074
    4. 'sorted' → logprob: -3.688754081726074
    5. 'arr' → logprob: -3.938754081726074
    6. 'ele' → logprob: -4.438754081726074
    7. 'sequence' → logprob: -5.563754081726074
    8. 'res' → logprob: -6.313754081726074
    9. 'final' → logprob: -6.438754081726074
    10. 'order' → logprob: -6.688754081726074

Token 474: ' les' (ID: 1341)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.4782524108886719
    2. '   ' → logprob: -1.1032524108886719
    3. ' elements' → logprob: -3.978252410888672
    4. 'ele' → logprob: -4.603252410888672
    5. ' elems' → logprob: -4.978252410888672
    6. 'sorted' → logprob: -5.728252410888672
    7. 'indices' → logprob: -6.353252410888672
    8. 'arr' → logprob: -6.353252410888672
    9. 'result' → logprob: -6.603252410888672
    10. 'items' → logprob: -6.978252410888672

Token 475: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.04922034963965416
    2. ' elements' → logprob: -3.049220323562622
    3. 'ele' → logprob: -8.424220085144043
    4. 'élé' → logprob: -8.924220085144043
    5. 'items' → logprob: -9.674220085144043
    6. ' éléments' → logprob: -10.049220085144043
    7. 'pairs' → logprob: -10.049220085144043
    8. ' elems' → logprob: -10.174220085144043
    9. 'range' → logprob: -10.799220085144043
    10. 'indices' → logprob: -11.049220085144043

Token 476: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020626209676265717
    2. 'elements' → logprob: -4.270626068115234
    3. ' =' → logprob: -6.270626068115234
    4. ' elements' → logprob: -6.645626068115234
    5. '=' → logprob: -7.270626068115234
    6. '```' → logprob: -7.395626068115234
    7. ' elems' → logprob: -7.645626068115234
    8. 'sorted' → logprob: -7.770626068115234
    9. ',' → logprob: -8.520626068115234
    10. '(elements' → logprob: -8.520626068115234

Token 477: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27039244771003723
    2. ' =' → logprob: -2.020392417907715
    3. '=' → logprob: -2.645392417907715
    4. 'final' → logprob: -3.895392417907715
    5. 'sorted' → logprob: -5.145392417907715
    6. ',' → logprob: -6.020392417907715
    7. 'elements' → logprob: -6.395392417907715
    8. 'par' → logprob: -7.395392417907715
    9. '_sorted' → logprob: -7.770392417907715
    10. '_elements' → logprob: -8.395392417907715

Token 478: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7418718934059143
    2. '=' → logprob: -0.7418718934059143
    3. '   ' → logprob: -3.9918718338012695
    4. ' =' → logprob: -3.9918718338012695
    5. 'range' → logprob: -5.4918718338012695
    6. 'elements' → logprob: -5.7418718338012695
    7. 'sorted' → logprob: -6.8668718338012695
    8. ')' → logprob: -7.3668718338012695
    9. '(range' → logprob: -7.7418718338012695
    10. '```' → logprob: -8.49187183380127

Token 479: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6012215614318848
    2. ' n' → logprob: -1.4762215614318848
    3. ',' → logprob: -1.6012215614318848
    4. ',n' → logprob: -4.476221561431885
    5. ' ,' → logprob: -4.851221561431885
    6. '```' → logprob: -6.476221561431885
    7. '1' → logprob: -7.976221561431885
    8. '   ' → logprob: -8.351221084594727
    9. 'range' → logprob: -9.226221084594727
    10. '(n' → logprob: -9.601221084594727

Token 480: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1087067648768425
    2. 'elements' → logprob: -2.9837067127227783
    3. 'sorted' → logprob: -3.2337067127227783
    4. ' elements' → logprob: -5.733706951141357
    5. '
' → logprob: -5.983706951141357
    6. ' sorted' → logprob: -6.233706951141357
    7. ' elems' → logprob: -6.733706951141357
    8. ' by' → logprob: -7.108706951141357
    9. '```' → logprob: -7.483706951141357
    10. ',' → logprob: -7.608706951141357

Token 481: ' position' (ID: 4010)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.29742658138275146
    2. 'positions' → logprob: -1.5474265813827515
    3. 'key' → logprob: -3.172426700592041
    4. ' lambda' → logprob: -6.672426700592041
    5. ' key' → logprob: -7.922426700592041
    6. 'their' → logprob: -8.047426223754883
    7. 'position' → logprob: -8.547426223754883
    8. '   ' → logprob: -8.922426223754883
    9. ' positions' → logprob: -9.297426223754883
    10. '=lambda' → logprob: -9.547426223754883

Token 482: ' cro' (ID: 11270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030635295435786247
    2. 'elements' → logprob: -4.030635356903076
    3. 'sorted' → logprob: -5.030635356903076
    4. ',' → logprob: -6.405635356903076
    5. '
' → logprob: -6.530635356903076
    6. '```' → logprob: -6.655635356903076
    7. '    
' → logprob: -8.030634880065918
    8. 'result' → logprob: -8.030634880065918
    9. ' elements' → logprob: -8.905634880065918
    10. 'arr' → logprob: -8.905634880065918

Token 483: 'issante' (ID: 80061)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.7463130354881287
    2. 'def' → logprob: -1.6213130950927734
    3. 'asc' → logprob: -2.8713130950927734
    4. 'issance' → logprob: -3.4963130950927734
    5. 'rt' → logprob: -3.7463130950927734
    6. '   ' → logprob: -3.8713130950927734
    7. 'orted' → logprob: -4.246313095092773
    8. 'ur' → logprob: -4.371313095092773
    9. '_sorted' → logprob: -4.371313095092773
    10. 'isée' → logprob: -4.496313095092773

Token 484: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08908157050609589
    2. 'elements' → logprob: -2.5890815258026123
    3. 'sorted' → logprob: -5.589081764221191
    4. '```' → logprob: -6.339081764221191
    5. ',' → logprob: -6.839081764221191
    6. '
' → logprob: -7.089081764221191
    7. ' elements' → logprob: -7.464081764221191
    8. '    
' → logprob: -7.589081764221191
    9. 'result' → logprob: -7.714081764221191
    10. 'items' → logprob: -8.214081764221191

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11646179854869843
    2. '
' → logprob: -2.991461753845215
    3. 'elements' → logprob: -3.116461753845215
    4. 'sorted' → logprob: -5.241461753845215
    5. '    
' → logprob: -5.491461753845215
    6. 'result' → logprob: -5.741461753845215
    7. '```' → logprob: -7.116461753845215
    8. ',' → logprob: -8.241461753845215
    9. 'arr' → logprob: -8.241461753845215
    10. ' elems' → logprob: -8.241461753845215

Token 486: ' elements' (ID: 8632)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2802317440509796
    2. 'sorted' → logprob: -2.1552317142486572
    3. 'elements' (adapté à ' elements') → logprob: -3.2802317142486572
    4. ' result' → logprob: -3.7802317142486572
    5. 'order' → logprob: -4.030231952667236
    6. '   ' → logprob: -4.155231952667236
    7. ' sorted' → logprob: -4.530231952667236
    8. 'arr' → logprob: -4.905231952667236
    9. ' elements' → logprob: -5.405231952667236
    10. ' order' → logprob: -5.530231952667236

Token 487: '_sorted' (ID: 104993)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18006277084350586
    2. ' =' → logprob: -1.8050627708435059
    3. 'sorted' → logprob: -8.805063247680664
    4. '_sorted' → logprob: -8.805063247680664
    5. '.sort' → logprob: -12.430063247680664
    6. 's' → logprob: -12.680063247680664
    7. ' sorted' → logprob: -12.680063247680664
    8. '＝' → logprob: -13.180063247680664
    9. '(sorted' → logprob: -13.305063247680664
    10. ',' → logprob: -13.680063247680664

Token 488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02325211651623249
    2. ' =' → logprob: -3.773252010345459
    3. '   ' → logprob: -12.898252487182617
    4. '(sorted' → logprob: -14.273252487182617
    5. '(' → logprob: -14.398252487182617
    6. '＝' → logprob: -14.523252487182617
    7. 'sorted' → logprob: -14.898252487182617
    8. '=lambda' → logprob: -15.148252487182617
    9. '=list' → logprob: -15.148252487182617
    10. ')' → logprob: -15.523252487182617

Token 489: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -3.292907877039397e-06
    2. ' sorted' → logprob: -12.75000286102295
    3. 'list' → logprob: -15.25000286102295
    4. 'range' → logprob: -16.750003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '(sorted' → logprob: -18.125003814697266
    7. '```' → logprob: -22.250003814697266
    8. '.sorted' → logprob: -22.375003814697266
    9. 'Sorted' → logprob: -23.625003814697266
    10. '
' → logprob: -23.750003814697266

Token 490: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -3.070975071750581e-05
    2. '(' → logprob: -10.750030517578125
    3. '((' → logprob: -12.625030517578125
    4. '([(' → logprob: -12.750030517578125
    5. 'range' → logprob: -13.000030517578125
    6. '(
' → logprob: -14.750030517578125
    7. '(((' → logprob: -15.000030517578125
    8. '(list' → logprob: -16.875030517578125
    9. '(en' → logprob: -19.250030517578125
    10. ' range' → logprob: -19.375030517578125

Token 491: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028107017278671265
    2. '1' → logprob: -5.877810478210449
    3. ')' → logprob: -13.25281047821045
    4. ',' → logprob: -13.37781047821045
    5. ' (' → logprob: -13.50281047821045
    6. '(
' → logprob: -14.37781047821045
    7. 'def' → logprob: -15.37781047821045
    8. '```' → logprob: -16.377811431884766
    9. '[' → logprob: -16.627811431884766
    10. '<|end|>' → logprob: -17.377811431884766

Token 492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. ' ' → logprob: -16.875017166137695
    4. ')' → logprob: -18.125017166137695
    5. '   ' → logprob: -18.500017166137695
    6. '[' → logprob: -18.875017166137695
    7. ',' → logprob: -19.125017166137695
    8. '```' → logprob: -19.125017166137695
    9. 'from' → logprob: -20.750017166137695
    10. 'n' → logprob: -21.000017166137695

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18550825119018555
    2. ',n' → logprob: -1.8105082511901855
    3. '(n' → logprob: -5.3105082511901855
    4. ' ,' → logprob: -7.5605082511901855
    5. ',
' → logprob: -8.810508728027344
    6. 'n' → logprob: -9.560508728027344
    7. '1' → logprob: -10.560508728027344
    8. '(' → logprob: -10.685508728027344
    9. ',len' → logprob: -12.185508728027344
    10. ',(' → logprob: -13.310508728027344

Token 494: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. ' n' → logprob: -14.625000953674316
    3. 'len' → logprob: -17.875
    4. '   ' → logprob: -18.625
    5. '(n' → logprob: -19.0
    6. ')n' → logprob: -19.625
    7. '	n' → logprob: -20.375
    8. '```' → logprob: -20.75
    9. '
' → logprob: -22.5
    10. ')' → logprob: -22.625

Token 495: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006258221692405641
    2. ',' → logprob: -8.000625610351562
    3. '+n' → logprob: -8.875625610351562
    4. ',n' → logprob: -9.250625610351562
    5. ' +' → logprob: -10.000625610351562
    6. '+,' → logprob: -12.375625610351562
    7. '+
' → logprob: -13.625625610351562
    8. ',+' → logprob: -13.875625610351562
    9. 'n' → logprob: -14.000625610351562
    10. '1' → logprob: -14.375625610351562

Token 496: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4736459888808895e-05
    2. '+' → logprob: -11.500014305114746
    3. ' n' → logprob: -12.750014305114746
    4. '1' → logprob: -13.875014305114746
    5. '(n' → logprob: -14.500014305114746
    6. '```' → logprob: -16.625015258789062
    7. '   ' → logprob: -17.125015258789062
    8. '+n' → logprob: -17.250015258789062
    9. 'len' → logprob: -17.250015258789062
    10. '10' → logprob: -18.375015258789062

Token 497: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006542971823364496
    2. '),' → logprob: -7.375654220581055
    3. ',key' → logprob: -10.625654220581055
    4. 'key' → logprob: -13.250654220581055
    5. '   ' → logprob: -14.250654220581055
    6. ' ,' → logprob: -14.625654220581055
    7. '},' → logprob: -15.375654220581055
    8. ',),' → logprob: -16.000654220581055
    9. '],' → logprob: -16.125654220581055
    10. ' key' → logprob: -16.375654220581055

Token 498: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -7.493430894101039e-05
    2. ' key' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.75007438659668
    4. '	key' → logprob: -19.75007438659668
    5. ',key' → logprob: -20.25007438659668
    6. '       ' → logprob: -20.75007438659668
    7. '           ' → logprob: -21.00007438659668
    8. '(key' → logprob: -21.00007438659668
    9. 'lambda' → logprob: -21.75007438659668
    10. '               ' → logprob: -22.00007438659668

Token 499: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00026217024424113333
    2. '=' → logprob: -8.250262260437012
    3. 'lambda' → logprob: -14.000262260437012
    4. '(lambda' → logprob: -17.250261306762695
    5. ' =' → logprob: -18.250261306762695
    6. ' lambda' → logprob: -20.375261306762695
    7. '=
' → logprob: -20.875261306762695
    8. '=(' → logprob: -21.375261306762695
    9. '=len' → logprob: -22.625261306762695
    10. '=l' → logprob: -22.625261306762695

Token 500: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.3358446166384965e-05
    2. 'e' → logprob: -10.250053405761719
    3. 'i' → logprob: -11.000053405761719
    4. ' x' → logprob: -14.250053405761719
    5. 'elem' → logprob: -15.125053405761719
    6. 'k' → logprob: -16.37505340576172
    7. 'lambda' → logprob: -16.50005340576172
    8. 'ele' → logprob: -17.75005340576172
    9. 'element' → logprob: -18.62505340576172
    10. 'el' → logprob: -19.75005340576172

Token 501: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.988221684878226e-06
    2. ' :' → logprob: -12.000006675720215
    3. 'positions' → logprob: -14.250006675720215
    4. ':
' → logprob: -16.75000762939453
    5. ' positions' → logprob: -16.87500762939453
    6. '=' → logprob: -17.87500762939453
    7. ':return' → logprob: -18.12500762939453
    8. '=lambda' → logprob: -18.87500762939453
    9. 'lambda' → logprob: -19.50000762939453
    10. 'Positions' → logprob: -19.62500762939453

Token 502: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.000340111117111519
    2. ' positions' → logprob: -8.000340461730957
    3. 'lambda' → logprob: -12.375340461730957
    4. 'position' → logprob: -15.375340461730957
    5. '   ' → logprob: -15.875340461730957
    6. 'pos' → logprob: -15.875340461730957
    7. ' lambda' → logprob: -17.75033950805664
    8. 'posit' → logprob: -19.00033950805664
    9. 'Positions' → logprob: -19.12533950805664
    10. '.positions' → logprob: -19.37533950805664

Token 503: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00020771251001860946
    2. 'x' → logprob: -8.500207901000977
    3. '[' → logprob: -12.500207901000977
    4. '[
' → logprob: -15.625207901000977
    5. '(x' → logprob: -16.000207901000977
    6. ' x' → logprob: -16.250207901000977
    7. ' [' → logprob: -16.875207901000977
    8. '```' → logprob: -17.750207901000977
    9. '{x' → logprob: -17.875207901000977
    10. ')x' → logprob: -18.375207901000977

Token 504: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004085878375917673
    2. '))' → logprob: -5.504086017608643
    3. ' )' → logprob: -12.004085540771484
    4. '})' → logprob: -15.129085540771484
    5. ')))' → logprob: -15.129085540771484
    6. ')}' → logprob: -15.754085540771484
    7. '),' → logprob: -16.004085540771484
    8. ')
' → logprob: -16.254085540771484
    9. '])' → logprob: -16.379085540771484
    10. ')]' → logprob: -16.504085540771484

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08709080517292023
    2. '
' → logprob: -2.7120907306671143
    3. 'for' → logprob: -4.462090969085693
    4. 'print' → logprob: -6.212090969085693
    5. ' for' → logprob: -6.337090969085693
    6. '    
' → logprob: -6.712090969085693
    7. '  
' → logprob: -9.087090492248535
    8. '```' → logprob: -9.337090492248535
    9. ')
' → logprob: -9.462090492248535
    10. ')' → logprob: -9.962090492248535

Token 506: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11424721777439117
    2. '   ' → logprob: -2.6142473220825195
    3. 'print' → logprob: -3.3642473220825195
    4. ' for' → logprob: -9.11424732208252
    5. '```' → logprob: -10.23924732208252
    6. '
' → logprob: -12.36424732208252
    7. '    
' → logprob: -14.23924732208252
    8. ' print' → logprob: -14.48924732208252
    9. 'return' → logprob: -16.114246368408203
    10. '	for' → logprob: -16.239246368408203

Token 507: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01419759076088667
    2. 'for' → logprob: -4.264197826385498
    3. ' print' → logprob: -10.51419734954834
    4. ' for' → logprob: -12.26419734954834
    5. '   ' → logprob: -13.01419734954834
    6. '```' → logprob: -20.389198303222656
    7. ' ' → logprob: -21.139198303222656
    8. '#print' → logprob: -21.639198303222656
    9. '  ' → logprob: -21.889198303222656
    10. '
' → logprob: -22.139198303222656

Token 508: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0008959780680015683
    2. '   ' → logprob: -8.000896453857422
    3. '#' → logprob: -8.375896453857422
    4. 'iche' → logprob: -9.125896453857422
    5. 'f' → logprob: -9.250896453857422
    6. 'ic' → logprob: -9.750896453857422
    7. 'ichage' → logprob: -10.375896453857422
    8. 'ich' → logprob: -11.125896453857422
    9. '```' → logprob: -12.375896453857422
    10. 'ichier' → logprob: -12.625896453857422

Token 509: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4418385326862335
    2. '   ' → logprob: -1.4418385028839111
    3. 'for' → logprob: -2.191838502883911
    4. ' for' → logprob: -4.94183874130249
    5. ' print' → logprob: -6.56683874130249
    6. '(' → logprob: -8.191838264465332
    7. '```' → logprob: -10.066838264465332
    8. '()' → logprob: -11.191838264465332
    9. '(print' → logprob: -11.441838264465332
    10. '	print' → logprob: -11.566838264465332

Token 510: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7994585633277893
    2. ''' → logprob: -0.9244585633277893
    3. ' result' → logprob: -3.2994585037231445
    4. 'rés' → logprob: -3.6744585037231445
    5. ' resultat' → logprob: -3.7994585037231445
    6. ' code' → logprob: -4.0494585037231445
    7. 'élé' → logprob: -4.1744585037231445
    8. '"' → logprob: -4.4244585037231445
    9. ' résultat' → logprob: -5.0494585037231445
    10. 'res' → logprob: -5.9244585037231445

Token 511: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7397752404212952
    2. 'for' → logprob: -1.2397751808166504
    3. 'print' → logprob: -1.4897751808166504
    4. ' for' → logprob: -4.98977518081665
    5. '```' → logprob: -7.23977518081665
    6. ' print' → logprob: -8.114775657653809
    7. '    
' → logprob: -10.364775657653809
    8. '
' → logprob: -10.989775657653809
    9. '``' → logprob: -11.364775657653809
    10. '  
' → logprob: -11.614775657653809

Token 512: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22055646777153015
    2. 'for' → logprob: -1.7205564975738525
    3. '   ' → logprob: -3.9705564975738525
    4. ' for' → logprob: -9.595556259155273
    5. ' print' → logprob: -10.470556259155273
    6. '```' → logprob: -13.470556259155273
    7. '    
' → logprob: -15.845556259155273
    8. '
' → logprob: -16.345556259155273
    9. '	print' → logprob: -16.970556259155273
    10. '  ' → logprob: -18.345556259155273

Token 513: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.3782830137643032e-05
    2. ' print' → logprob: -11.75001335144043
    3. '   ' → logprob: -12.75001335144043
    4. 'for' → logprob: -12.75001335144043
    5. '```' → logprob: -18.50001335144043
    6. ' for' → logprob: -20.62501335144043
    7. '
' → logprob: -21.12501335144043
    8. '    
' → logprob: -21.12501335144043
    9. '	print' → logprob: -22.50001335144043
    10. '`' → logprob: -23.62501335144043

Token 514: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.12637943029403687
    2. '('' → logprob: -2.3763794898986816
    3. '(' → logprob: -4.126379489898682
    4. '("' → logprob: -4.876379489898682
    5. '(elements' → logprob: -6.251379489898682
    6. '(*(' → logprob: -9.876379013061523
    7. '("("' → logprob: -10.001379013061523
    8. '(*)' → logprob: -11.001379013061523
    9. 'elements' → logprob: -12.126379013061523
    10. '()' → logprob: -12.251379013061523

Token 515: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18946990370750427
    2. 'n' → logprob: -1.8144699335098267
    3. 'join' → logprob: -5.314469814300537
    4. 't' → logprob: -6.314469814300537
    5. 'w' → logprob: -7.314469814300537
    6. 's' → logprob: -7.689469814300537
    7. '```' → logprob: -8.564470291137695
    8. 'print' → logprob: -9.064470291137695
    9. '"' → logprob: -9.064470291137695
    10. '''.' → logprob: -9.064470291137695

Token 516: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.002862177789211273
    2. '.' → logprob: -6.377861976623535
    3. '.join' → logprob: -7.127861976623535
    4. 'join' → logprob: -8.502861976623535
    5. '".' → logprob: -9.002861976623535
    6. '''.' → logprob: -10.877861976623535
    7. ''' → logprob: -12.502861976623535
    8. ' .' → logprob: -13.002861976623535
    9. 'print' → logprob: -13.127861976623535
    10. ').' → logprob: -13.252861976623535

Token 517: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.1472419600977446e-06
    2. 'print' → logprob: -14.125000953674316
    3. 'jo' → logprob: -15.375000953674316
    4. 'j' → logprob: -16.375001907348633
    5. ' join' → logprob: -17.375001907348633
    6. ''.' → logprob: -17.625001907348633
    7. '```' → logprob: -19.000001907348633
    8. '.join' → logprob: -19.750001907348633
    9. '.' → logprob: -20.625001907348633
    10. 'joint' → logprob: -21.250001907348633

Token 518: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3895754814147949
    2. '(str' → logprob: -1.139575481414795
    3. 'map' → logprob: -6.389575481414795
    4. 'str' → logprob: -6.889575481414795
    5. '[str' → logprob: -13.014575958251953
    6. '(' → logprob: -14.264575958251953
    7. '([' → logprob: -15.264575958251953
    8. '```' → logprob: -16.264575958251953
    9. ' map' → logprob: -16.514575958251953
    10. '(list' → logprob: -17.014575958251953

Token 519: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.16023722290992737
    2. 'str' → logprob: -1.910237193107605
    3. '=str' → logprob: -11.660237312316895
    4. '[str' → logprob: -13.785237312316895
    5. '```' → logprob: -13.785237312316895
    6. ' str' → logprob: -14.035237312316895
    7. '	str' → logprob: -14.160237312316895
    8. '(' → logprob: -14.410237312316895
    9. ',str' → logprob: -15.910237312316895
    10. '   ' → logprob: -16.160236358642578

Token 520: ',' (ID: 11)
  Prédit: '(elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elements' → logprob: -0.0015331897884607315
    2. ',' → logprob: -7.126533031463623
    3. 'elements' → logprob: -7.251533031463623
    4. ',e' → logprob: -11.626533508300781
    5. '(' → logprob: -12.001533508300781
    6. ' elements' → logprob: -13.126533508300781
    7. '(e' → logprob: -13.751533508300781
    8. '.elements' → logprob: -15.251533508300781
    9. '(parts' → logprob: -15.626533508300781
    10. ')' → logprob: -16.00153350830078

Token 521: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -3.166338137816638e-05
    2. ' elements' → logprob: -10.750031471252441
    3. '(elements' → logprob: -11.500031471252441
    4. '.elements' → logprob: -18.500032424926758
    5. '   ' → logprob: -22.375032424926758
    6. '```' → logprob: -22.625032424926758
    7. ')' → logprob: -22.625032424926758
    8. '_elements' → logprob: -22.875032424926758
    9. 'ele' → logprob: -23.000032424926758
    10. 'element' → logprob: -23.375032424926758

Token 522: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0007386347278952599
    2. '[' → logprob: -8.375739097595215
    3. ')))' → logprob: -8.500739097595215
    4. ')' → logprob: -9.000739097595215
    5. 'sorted' → logprob: -9.000739097595215
    6. '_' → logprob: -10.875739097595215
    7. 's' → logprob: -11.625739097595215
    8. '))' → logprob: -12.125739097595215
    9. ']))' → logprob: -12.625739097595215
    10. ')_' → logprob: -12.625739097595215

Token 523: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0007532857125625014
    2. '))' → logprob: -7.250753402709961
    3. ')' → logprob: -10.125753402709961
    4. '))))' → logprob: -13.000753402709961
    5. ' ' → logprob: -14.375753402709961
    6. ')))
' → logprob: -15.125753402709961
    7. ')));' → logprob: -16.50075340270996
    8. '())))' → logprob: -16.50075340270996
    9. '   ' → logprob: -17.37575340270996
    10. ')))

' → logprob: -17.62575340270996

Token 524: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007827592082321644
    2. '<|end|>' → logprob: -5.2578277587890625
    3. '```' → logprob: -6.5078277587890625
    4. ' if' → logprob: -7.7578277587890625
    5. 'main' → logprob: -7.8828277587890625
    6. '
' → logprob: -8.882827758789062
    7. '#' → logprob: -9.382827758789062
    8. '\n' → logprob: -10.882827758789062
    9. '<|end|>' → logprob: -11.507827758789062
    10. '\' → logprob: -11.632827758789062

Token 525: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011416429653763771
    2. '__' → logprob: -5.136416435241699
    3. ' main' → logprob: -5.261416435241699
    4. 'main' → logprob: -8.7614164352417
    5. ' ' → logprob: -10.3864164352417
    6. ' _' → logprob: -10.5114164352417
    7. '_main' → logprob: -11.3864164352417
    8. '()' → logprob: -11.5114164352417
    9. '_' → logprob: -11.5114164352417
    10. ' ' → logprob: -12.0114164352417

Token 526: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.554972231388092
    2. ' ==' → logprob: -0.929972231388092
    3. '==' → logprob: -3.5549721717834473
    4. ' __' → logprob: -6.804972171783447
    5. '=="' → logprob: -7.179972171783447
    6. 'name' → logprob: -7.804972171783447
    7. '=='' → logprob: -8.929972648620605
    8. '[' → logprob: -9.429972648620605
    9. 'main' → logprob: -9.804972648620605
    10. '_' → logprob: -10.554972648620605

Token 527: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00024037064576987177
    2. '==' → logprob: -8.500240325927734
    3. '__.__' → logprob: -10.375240325927734
    4. '=="' → logprob: -12.625240325927734
    5. '__.' → logprob: -14.625240325927734
    6. '=='' → logprob: -14.750240325927734
    7. '__('' → logprob: -14.875240325927734
    8. ' ==' → logprob: -14.875240325927734
    9. '__["' → logprob: -15.125240325927734
    10. '___' → logprob: -15.875240325927734

Token 528: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.353511244058609
    2. '==' → logprob: -1.3535112142562866
    3. ' ==' → logprob: -3.603511333465576
    4. '=="' → logprob: -4.478511333465576
    5. '=='' → logprob: -7.103511333465576
    6. '__.__' → logprob: -10.478510856628418
    7. '=' → logprob: -12.353510856628418
    8. '.__' → logprob: -12.603510856628418
    9. '==
' → logprob: -12.978510856628418
    10. '===' → logprob: -13.103510856628418

Token 529: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0297679603099823
    2. ''' → logprob: -3.5297679901123047
    3. '__' → logprob: -11.279767990112305
    4. ' "__' → logprob: -12.279767990112305
    5. ' '__' → logprob: -16.154767990112305
    6. '   ' → logprob: -17.029767990112305
    7. 'main' → logprob: -18.029767990112305
    8. '"user' → logprob: -18.279767990112305
    9. '"name' → logprob: -18.404767990112305
    10. ' ' → logprob: -19.029767990112305

Token 530: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04878685995936394
    2. '__' → logprob: -3.0487868785858154
    3. '"' → logprob: -8.548787117004395
    4. ''' → logprob: -12.423787117004395
    5. '_main' → logprob: -14.298787117004395
    6. ' main' → logprob: -14.673787117004395
    7. 'name' → logprob: -14.798787117004395
    8. '___' → logprob: -16.923786163330078
    9. '(main' → logprob: -17.048786163330078
    10. '	main' → logprob: -17.048786163330078

Token 531: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2552543580532074
    2. '__":
' → logprob: -1.5052543878555298
    3. '__':
' → logprob: -6.13025426864624
    4. '==' → logprob: -7.50525426864624
    5. '__:' → logprob: -7.88025426864624
    6. ':' → logprob: -10.255254745483398
    7. '__["' → logprob: -10.505254745483398
    8. '__
' → logprob: -10.880254745483398
    9. '__.__' → logprob: -10.880254745483398
    10. '.__' → logprob: -11.005254745483398

Token 532: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0018693790771067142
    2. '	main' → logprob: -7.126869201660156
    3. '   ' → logprob: -7.376869201660156
    4. ' main' → logprob: -7.751869201660156
    5. '_main' → logprob: -12.376869201660156
    6. '__' → logprob: -12.501869201660156
    7. '    
' → logprob: -15.626869201660156
    8. '(main' → logprob: -15.626869201660156
    9. 'Main' → logprob: -16.001869201660156
    10. '_MAIN' → logprob: -16.501869201660156

Token 533: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.0
    3. '	main' → logprob: -24.0
    4. '.main' → logprob: -27.125
    5. '_main' → logprob: -27.5
    6. '(main' → logprob: -28.5
    7. 'mainwindow' → logprob: -29.125
    8. 'Main' → logprob: -29.625
    9. '/main' → logprob: -30.75
    10. '-main' → logprob: -30.75

Token 534: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 532
Tokens correctement prédits (1ère position, stricte): 130
Tokens correctement prédits (1ère position, avec adaptation): 139
Tokens correctement prédits (top 10): 329
Précision stricte (1ère position): 24.44%
Précision adaptée (1ère position): 26.13%
Précision (top 10): 61.84%
================================================================================
