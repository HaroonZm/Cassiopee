================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture des entrées
N = int(input())  # Nombre de pièces
positions = list(map(int, input().split()))  # Positions initiales des pièces, index 0 correspond à la pièce 1

M = int(input())  # Nombre d'opérations
operations = list(map(int, input().split()))  # Pièces à déplacer à chaque opération, pièces numérotées à partir de 1

# On utilise une liste pour suivre les positions des pièces, index i pour pièce i+1
# positions est déjà initialisé

# Pour faciliter la vérification des cases occupées,
# on maintient un ensemble des positions occupées
occupied = set(positions)

GOAL = 2019  # numéro de la case d'arrivée

for move in operations:
    piece_index = move - 1
    current_pos = positions[piece_index]
    next_pos = current_pos + 1

    # Vérifie si la pièce est déjà sur la case but
    if current_pos == GOAL:
        # Ne peut pas avancer
        continue

    # Vérifie si la case suivante est libre
    if next_pos in occupied:
        # Ne peut pas avancer
        continue

    # Sinon, la pièce avance d'une case
    # On met à jour occupied en retirant l'ancienne position
    occupied.remove(current_pos)
    positions[piece_index] = next_pos
    occupied.add(next_pos)

# Affichage du résultat : position finale de chaque pièce
for pos in positions:
    print(pos)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' des' (ID: 731)
  → Token d'amorce (pas de prédiction)

Token 3: ' entr' (ID: 7072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003702924121171236
    2. ' d' → logprob: -6.0037031173706055
    3. ' des' → logprob: -7.6287031173706055
    4. ' du' → logprob: -8.253703117370605
    5. ' :' → logprob: -9.003703117370605
    6. '_' → logprob: -9.253703117370605
    7. ' #' → logprob: -9.878703117370605
    8. 'd' → logprob: -10.253703117370605
    9. ''' → logprob: -10.878703117370605
    10. 'f' → logprob: -11.128703117370605

Token 4: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0011130700586363673
    2. 'ée' → logprob: -7.001112937927246
    3. 'és' → logprob: -8.626112937927246
    4. 'é' → logprob: -11.001112937927246
    5. 'ees' → logprob: -12.626112937927246
    6. 'êtes' → logprob: -13.376112937927246
    7. 'ès' → logprob: -15.626112937927246
    8. 'es' → logprob: -15.876112937927246
    9. 'éis' → logprob: -16.376113891601562
    10. 'ês' → logprob: -16.626113891601562

Token 5: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.47101628780365
    2. '```' → logprob: -1.47101628780365
    3. 'user' → logprob: -2.0960164070129395
    4. '#' → logprob: -2.4710164070129395
    5. 'input' → logprob: -2.4710164070129395
    6. 's' → logprob: -2.7210164070129395
    7. 'inputs' → logprob: -3.0960164070129395
    8. ':' → logprob: -3.3460164070129395
    9. 'n' → logprob: -4.0960164070129395
    10. '=' → logprob: -4.2210164070129395

Token 6: 'N' (ID: 45)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.4676262140274048
    2. '_' → logprob: -1.5926262140274048
    3. 's' → logprob: -3.3426260948181152
    4. 'input' → logprob: -3.7176260948181152
    5. ':' → logprob: -4.092626094818115
    6. '```' → logprob: -4.217626094818115
    7. 'inputs' → logprob: -4.217626094818115
    8. 'n' → logprob: -4.717626094818115
    9. ' =' → logprob: -4.842626094818115
    10. 'entrée' → logprob: -5.217626094818115

Token 7: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03028853051364422
    2. 'ombre' → logprob: -4.5302886962890625
    3. '=' → logprob: -5.0302886962890625
    4. ' =' → logprob: -5.5302886962890625
    5. 'om' → logprob: -6.7802886962890625
    6. 'a' → logprob: -6.9052886962890625
    7. 'u' → logprob: -7.2802886962890625
    8. 'um' → logprob: -7.2802886962890625
    9. 'p' → logprob: -7.4052886962890625
    10. 'e' → logprob: -7.6552886962890625

Token 8: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.021059473976492882
    2. ' input' → logprob: -4.396059513092041
    3. 'int' → logprob: -5.396059513092041
    4. ' ' → logprob: -5.646059513092041
    5. 'input' → logprob: -7.771059513092041
    6. ' len' → logprob: -12.146059036254883
    7. '10' → logprob: -12.271059036254883
    8. ' map' → logprob: -13.146059036254883
    9. ' float' → logprob: -13.146059036254883
    10. '1' → logprob: -13.271059036254883

Token 9: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5760241150856018
    2. '(' → logprob: -0.8260241150856018
    3. '('' → logprob: -9.951024055480957
    4. ' (' → logprob: -11.451024055480957
    5. 'input' → logprob: -11.701024055480957
    6. '()' → logprob: -12.576024055480957
    7. '(
' → logprob: -12.826024055480957
    8. '("' → logprob: -12.951024055480957
    9. '(N' → logprob: -13.076024055480957
    10. '(`' → logprob: -13.701024055480957

Token 10: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01979534514248371
    2. '()' → logprob: -4.2697954177856445
    3. ')' → logprob: -5.3947954177856445
    4. '())' → logprob: -7.5197954177856445
    5. '('' → logprob: -8.644795417785645
    6. '(
' → logprob: -9.019795417785645
    7. '("("' → logprob: -9.519795417785645
    8. '(""))' → logprob: -10.019795417785645
    9. '(

' → logprob: -10.394795417785645
    10. '("")' → logprob: -10.769795417785645

Token 11: ' ' (ID: 220)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.2349584102630615
    2. '\' → logprob: -1.6099584102630615
    3. '\n' → logprob: -1.6099584102630615
    4. ' ' → logprob: -2.7349584102630615
    5. '
' → logprob: -2.8599584102630615
    6. '  
' → logprob: -3.3599584102630615
    7. '```' → logprob: -3.3599584102630615
    8. '' → logprob: -3.6099584102630615
    9. '#' → logprob: -3.8599584102630615
    10. '<|end|>' → logprob: -3.9849584102630615

Token 12: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9211018085479736
    2. '
' → logprob: -1.7961018085479736
    3. '\n' → logprob: -1.9211018085479736
    4. 'for' → logprob: -2.5461018085479736
    5. ')' → logprob: -3.0461018085479736
    6. ' 
' → logprob: -3.1711018085479736
    7. '<|end|>' → logprob: -3.1711018085479736
    8. '#' → logprob: -4.2961015701293945
    9. ' for' → logprob: -4.4211015701293945
    10. '  
' → logprob: -4.4211015701293945

Token 13: ' Nombre' (ID: 70208)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6240171790122986
    2. ' ' → logprob: -0.9990171790122986
    3. ''' → logprob: -2.6240172386169434
    4. ' "' → logprob: -4.124017238616943
    5. '  ' → logprob: -5.624017238616943
    6. ' '' → logprob: -7.499017238616943
    7. ' Nombre' → logprob: -8.249016761779785
    8. ' nombre' → logprob: -8.374016761779785
    9. '"""' → logprob: -8.374016761779785
    10. ')' → logprob: -8.499016761779785

Token 14: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3072672486305237
    2. ' d' → logprob: -1.432267189025879
    3. ' de' → logprob: -4.807267189025879
    4. 's' → logprob: -5.432267189025879
    5. '_' → logprob: -5.807267189025879
    6. '_d' → logprob: -5.932267189025879
    7. '  ' → logprob: -6.057267189025879
    8. 'd' → logprob: -6.307267189025879
    9. ' total' → logprob: -7.307267189025879
    10. '_de' → logprob: -7.807267189025879

Token 15: ' pièces' (ID: 49165)
  Prédit: ' personnes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' personnes' → logprob: -1.6987015008926392
    2. ' joueurs' → logprob: -1.9487015008926392
    3. 'élé' → logprob: -2.4487013816833496
    4. 's' → logprob: -2.8237013816833496
    5. ' points' → logprob: -2.8237013816833496
    6. 'participants' → logprob: -3.3237013816833496
    7. ' participants' → logprob: -3.8237013816833496
    8. ' lignes' → logprob: -3.8237013816833496
    9. 'points' → logprob: -3.8237013816833496
    10. 'd' → logprob: -3.9487013816833496

Token 16: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5797559022903442
    2. ')' → logprob: -1.8297559022903442
    3. 's' → logprob: -2.3297557830810547
    4. ' 
' → logprob: -2.4547557830810547
    5. ' )' → logprob: -3.7047557830810547
    6. '<|end|>' → logprob: -3.8297557830810547
    7. ',' → logprob: -4.454755783081055
    8. '  
' → logprob: -5.329755783081055
    9. '#' → logprob: -5.454755783081055
    10. '
' → logprob: -5.579755783081055

Token 17: 'positions' (ID: 32297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40372559428215027
    2. ' 
' → logprob: -2.2787256240844727
    3. ' ' → logprob: -2.2787256240844727
    4. ' pieces' → logprob: -3.1537256240844727
    5. 'pieces' → logprob: -3.6537256240844727
    6. 'for' → logprob: -4.278725624084473
    7. '
' → logprob: -4.903725624084473
    8. ' for' → logprob: -5.528725624084473
    9. ' pièces' → logprob: -5.778725624084473
    10. '' → logprob: -6.028725624084473

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08647928386926651
    2. '_' → logprob: -2.5864791870117188
    3. '=' → logprob: -6.336479187011719
    4. '_positions' → logprob: -6.461479187011719
    5. ' ' → logprob: -6.586479187011719
    6. ',' → logprob: -7.211479187011719
    7. '[:]' → logprob: -7.961479187011719
    8. '[' → logprob: -7.961479187011719
    9. '_p' → logprob: -8.086479187011719
    10. '[]' → logprob: -8.461479187011719

Token 19: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.31432294845581055
    2. '[]' → logprob: -1.5643229484558105
    3. ' [' → logprob: -3.6893229484558105
    4. 'list' → logprob: -4.4393229484558105
    5. ' list' → logprob: -4.6893229484558105
    6. '[input' → logprob: -4.9393229484558105
    7. '[' → logprob: -5.1893229484558105
    8. '[list' → logprob: -6.5643229484558105
    9. '[int' → logprob: -9.189323425292969
    10. 'input' → logprob: -9.439323425292969

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035665694158524275
    2. '(range' → logprob: -6.003566741943359
    3. '(input' → logprob: -7.003566741943359
    4. '(

' → logprob: -10.00356674194336
    5. '(
' → logprob: -10.12856674194336
    6. '(int' → logprob: -10.25356674194336
    7. '()' → logprob: -10.87856674194336
    8. '(map' → logprob: -11.25356674194336
    9. '(eval' → logprob: -12.50356674194336
    10. '(np' → logprob: -12.75356674194336

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3149125874042511
    2. '(' → logprob: -1.3149125576019287
    3. '(str' → logprob: -7.439912796020508
    4. '(input' → logprob: -7.564912796020508
    5. '(
' → logprob: -7.939912796020508
    6. 'int' → logprob: -9.314912796020508
    7. '(lambda' → logprob: -10.689912796020508
    8. '(float' → logprob: -11.439912796020508
    9. '```' → logprob: -11.564912796020508
    10. '<int' → logprob: -11.689912796020508

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09982343763113022
    2. ',input' → logprob: -2.474823474884033
    3. ',' → logprob: -4.724823474884033
    4. '(' → logprob: -7.224823474884033
    5. 'input' → logprob: -7.599823474884033
    6. '=input' → logprob: -8.099822998046875
    7. ')' → logprob: -8.849822998046875
    8. '))' → logprob: -9.599822998046875
    9. ' ,' → logprob: -9.974822998046875
    10. '),' → logprob: -10.474822998046875

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1002550944685936
    2. ' input' → logprob: -2.350255012512207
    3. '(input' → logprob: -10.100255012512207
    4. ',input' → logprob: -12.475255012512207
    5. '=input' → logprob: -13.225255012512207
    6. '	input' → logprob: -14.225255012512207
    7. ' ' → logprob: -15.350255012512207
    8. '_input' → logprob: -15.350255012512207
    9. ')' → logprob: -15.850255012512207
    10. '<input' → logprob: -15.850255012512207

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01968524605035782
    2. '()' → logprob: -4.7696852684021
    3. '()))' → logprob: -4.8946852684021
    4. '())' → logprob: -5.8946852684021
    5. '())))' → logprob: -8.019684791564941
    6. '()));' → logprob: -8.519684791564941
    7. '(' → logprob: -9.769684791564941
    8. '()>' → logprob: -10.019684791564941
    9. ')' → logprob: -10.269684791564941
    10. '());' → logprob: -11.269684791564941

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024861192796379328
    2. 'strip' → logprob: -6.002486228942871
    3. 'rstrip' → logprob: -11.752486228942871
    4. ' split' → logprob: -13.127486228942871
    5. '(split' → logprob: -14.752486228942871
    6. 'spl' → logprob: -16.377485275268555
    7. ')' → logprob: -17.252485275268555
    8. '```' → logprob: -18.002485275268555
    9. 'replace' → logprob: -18.127485275268555
    10. '.split' → logprob: -18.127485275268555

Token 26: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7369138598442078
    2. '()))' → logprob: -0.8619138598442078
    3. '()' → logprob: -2.8619139194488525
    4. ')' → logprob: -4.236913681030273
    5. '(' → logprob: -4.236913681030273
    6. '))' → logprob: -5.111913681030273
    7. '())))' → logprob: -5.111913681030273
    8. ')))' → logprob: -7.486913681030273
    9. '('' → logprob: -8.861913681030273
    10. '(),' → logprob: -9.986913681030273

Token 27: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' #' (ID: 1069)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3664407730102539
    2. '#' → logprob: -1.491440773010254
    3. ')' → logprob: -3.616440773010254
    4. '
' → logprob: -4.366440773010254
    5. '[' → logprob: -4.741440773010254
    6. ' positions' → logprob: -4.866440773010254
    7. '```' → logprob: -5.491440773010254
    8. '\n' → logprob: -5.491440773010254
    9. 'for' → logprob: -6.116440773010254
    10. '<|end|>' → logprob: -6.241440773010254

Token 29: ' Positions' (ID: 138312)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.096113421022892
    2. 'Positions' → logprob: -2.846113443374634
    3. ' positions' → logprob: -3.596113443374634
    4. '_positions' → logprob: -5.471113204956055
    5. ' Positions' → logprob: -6.846113204956055
    6. 'position' → logprob: -8.596113204956055
    7. ' ' → logprob: -8.721113204956055
    8. '<|end|>' → logprob: -9.221113204956055
    9. ' posiciones' → logprob: -9.346113204956055
    10. 'Pos' → logprob: -9.471113204956055

Token 30: ' initial' (ID: 4871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7430688142776489
    2. '<|end|>' → logprob: -0.7430688142776489
    3. ')' → logprob: -4.118068695068359
    4. '.' → logprob: -4.993068695068359
    5. 's' → logprob: -5.493068695068359
    6. '[' → logprob: -5.743068695068359
    7. '<|end|>' → logprob: -5.743068695068359
    8. ' 
' → logprob: -6.368068695068359
    9. ',' → logprob: -6.618068695068359
    10. ' )' → logprob: -6.993068695068359

Token 31: 'es' (ID: 268)
  Prédit: 'ales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.059694115072488785
    2. 'es' → logprob: -3.0596940517425537
    3. ' des' → logprob: -5.059694290161133
    4. 's' → logprob: -5.809694290161133
    5. 'des' → logprob: -6.809694290161133
    6. ' ' → logprob: -8.559694290161133
    7. 'nelles' → logprob: -9.059694290161133
    8. 'elles' → logprob: -9.559694290161133
    9. '```' → logprob: -10.309694290161133
    10. 'ale' → logprob: -10.559694290161133

Token 32: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.16293667256832123
    2. ' ' → logprob: -2.5379366874694824
    3. 'positions' → logprob: -3.6629366874694824
    4. 'pieces' → logprob: -4.037936687469482
    5. ' pieces' → logprob: -4.662936687469482
    6. 'pi' → logprob: -4.662936687469482
    7. ' positions' → logprob: -5.162936687469482
    8. ' pi' → logprob: -6.287936687469482
    9. 'p' → logprob: -8.037936210632324
    10. '_' → logprob: -8.412936210632324

Token 34: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' index' (ID: 3472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27148234844207764
    2. ' ' → logprob: -1.8964823484420776
    3. ' )' → logprob: -3.146482467651367
    4. ' sorted' → logprob: -4.521482467651367
    5. 'positions' → logprob: -4.771482467651367
    6. ' positions' → logprob: -5.021482467651367
    7. 'sorted' → logprob: -5.271482467651367
    8. 'reverse' → logprob: -5.521482467651367
    9. 'end' → logprob: -6.521482467651367
    10. ' ' → logprob: -6.771482467651367

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9136747121810913
    2. 'es' → logprob: -1.1636747121810913
    3. 's' → logprob: -1.6636747121810913
    4. '0' → logprob: -2.913674831390381
    5. 'ées' → logprob: -3.913674831390381
    6. 'és' → logprob: -5.413674831390381
    7. ' des' → logprob: -5.788674831390381
    8. '<|end|>' → logprob: -6.038674831390381
    9. ' =' → logprob: -6.413674831390381
    10. '_s' → logprob: -6.788674831390381

Token 37: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08254878968000412
    2. 's' → logprob: -3.3325488567352295
    3. '0' → logprob: -3.5825488567352295
    4. ' =' → logprob: -5.08254861831665
    5. ' ' → logprob: -5.45754861831665
    6. 'des' → logprob: -6.95754861831665
    7. ')' → logprob: -7.45754861831665
    8. 'es' → logprob: -7.58254861831665
    9. '1' → logprob: -7.83254861831665
    10. ' des' → logprob: -7.95754861831665

Token 38: ' correspond' (ID: 11095)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2747619152069092
    2. ')' → logprob: -2.274761915206909
    3. ' )' → logprob: -3.774761915206909
    4. '<|end|>' → logprob: -3.774761915206909
    5. '-' → logprob: -3.899761915206909
    6. ' ' → logprob: -4.274762153625488
    7. '-based' → logprob: -4.399762153625488
    8. ' to' → logprob: -4.899762153625488
    9. 'based' → logprob: -5.399762153625488
    10. ':' → logprob: -5.524762153625488

Token 39: ' à' (ID: 1221)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -6.659005157416686e-05
    2. 'a' → logprob: -10.250066757202148
    3. 'ent' → logprob: -11.500066757202148
    4. 'ance' → logprob: -11.625066757202148
    5. 'à' → logprob: -12.125066757202148
    6. ' à' → logprob: -12.750066757202148
    7. 'au' → logprob: -14.750066757202148
    8. 'an' → logprob: -15.000066757202148
    9. '```' → logprob: -15.125066757202148
    10. 'а' → logprob: -15.250066757202148

Token 40: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.060629766434431076
    2. 'la' → logprob: -3.3106298446655273
    3. ' ' → logprob: -4.560629844665527
    4. ' l' → logprob: -5.435629844665527
    5. ' ' → logprob: -5.685629844665527
    6. 'l' → logprob: -6.685629844665527
    7. 'a' → logprob: -8.185629844665527
    8. '_la' → logprob: -8.185629844665527
    9. '```' → logprob: -8.435629844665527
    10. ' à' → logprob: -8.623129844665527

Token 41: ' pièce' (ID: 56132)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.9806129336357117
    2. 'prem' → logprob: -1.8556129932403564
    3. ' ' → logprob: -2.1056129932403564
    4. ' première' → logprob: -2.4806129932403564
    5. ' plus' → logprob: -2.6056129932403564
    6. 'position' → logprob: -3.3556129932403564
    7. ' pièce' → logprob: -3.9806129932403564
    8. ' gauche' → logprob: -4.105612754821777
    9. ' premier' → logprob: -4.605612754821777
    10. '0' → logprob: -4.605612754821777

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2845621407032013
    2. 's' → logprob: -2.659562110900879
    3. '0' → logprob: -2.784562110900879
    4. ' à' → logprob: -3.034562110900879
    5. 'e' → logprob: -3.909562110900879
    6. '1' → logprob: -4.409562110900879
    7. ' au' → logprob: -4.659562110900879
    8. ' la' → logprob: -4.659562110900879
    9. 'es' → logprob: -5.659562110900879
    10. '[' → logprob: -6.659562110900879

Token 43: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48102352023124695
    2. '1' → logprob: -1.4810235500335693
    3. ' à' → logprob: -2.7310235500335693
    4. '0' → logprob: -3.1060235500335693
    5. '_' → logprob: -4.23102331161499
    6. 's' → logprob: -4.48102331161499
    7. 'à' → logprob: -5.35602331161499
    8. ' au' → logprob: -5.48102331161499
    9. ' la' → logprob: -6.23102331161499
    10. ' gauche' → logprob: -6.60602331161499

Token 44: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9660142064094543
    2. '<|end|>' → logprob: -1.7160141468048096
    3. ' 
' → logprob: -2.2160141468048096
    4. ' ' → logprob: -2.3410141468048096
    5. ')' → logprob: -2.8410141468048096
    6. '#' → logprob: -2.9660141468048096
    7. '' → logprob: -3.4660141468048096
    8. '  
' → logprob: -3.8410141468048096
    9. '\n' → logprob: -3.9660141468048096
    10. '.' → logprob: -4.716014385223389

Token 45: 'M' (ID: 44)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9038304090499878
    2. '
' → logprob: -1.4038304090499878
    3. '#' → logprob: -1.5288304090499878
    4. 's' → logprob: -3.6538305282592773
    5. ' positions' → logprob: -4.278830528259277
    6. '' → logprob: -4.403830528259277
    7. '\n' → logprob: -4.528830528259277
    8. '<|end|>' → logprob: -4.528830528259277
    9. ' ' → logprob: -4.778830528259277
    10. ')' → logprob: -4.903830528259277

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0381244532763958
    2. '=' → logprob: -3.2881245613098145
    3. '=int' → logprob: -9.788124084472656
    4. ' ' → logprob: -11.038124084472656
    5. '_' → logprob: -12.288124084472656
    6. '  ' → logprob: -12.413124084472656
    7. ')' → logprob: -14.038124084472656
    8. '=input' → logprob: -15.663124084472656
    9. 'a' → logprob: -15.913124084472656
    10. ',' → logprob: -15.913124084472656

Token 47: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.054899100214242935
    2. ' int' → logprob: -2.929899215698242
    3. '[int' → logprob: -11.804899215698242
    4. ' ' → logprob: -12.554899215698242
    5. '0' → logprob: -13.679899215698242
    6. '  ' → logprob: -14.054899215698242
    7. '=int' → logprob: -14.179899215698242
    8. 'len' → logprob: -14.304899215698242
    9. '10' → logprob: -14.804899215698242
    10. '<int' → logprob: -14.804899215698242

Token 48: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001791916904039681
    2. '(' → logprob: -6.376791954040527
    3. 'input' → logprob: -9.876791954040527
    4. '()' → logprob: -10.876791954040527
    5. ' (' → logprob: -11.626791954040527
    6. '=input' → logprob: -12.501791954040527
    7. ' input' → logprob: -12.626791954040527
    8. '(space' → logprob: -14.501791954040527
    9. '<input' → logprob: -14.626791954040527
    10. '(
' → logprob: -15.001791954040527

Token 49: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10049057006835938
    2. '()' → logprob: -2.3504905700683594
    3. ')' → logprob: -8.22549057006836
    4. '()))' → logprob: -12.10049057006836
    5. '();)' → logprob: -12.85049057006836
    6. '()>' → logprob: -13.47549057006836
    7. '()
' → logprob: -13.47549057006836
    8. '(' → logprob: -13.85049057006836
    9. ' ())' → logprob: -13.97549057006836
    10. '()]' → logprob: -13.97549057006836

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0734189823269844
    2. '<|end|>' → logprob: -2.9484190940856934
    3. ')' → logprob: -4.323419094085693
    4. '#' → logprob: -6.323419094085693
    5. '  ' → logprob: -6.698419094085693
    6. '<|end|>' → logprob: -7.198419094085693
    7. ' )' → logprob: -7.573419094085693
    8. ' #' → logprob: -7.948419094085693
    9. ' ' → logprob: -9.073418617248535
    10. ' 
' → logprob: -9.448418617248535

Token 51: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49084237217903137
    2. ' ' → logprob: -0.990842342376709
    3. ' #' → logprob: -4.990842342376709
    4. 'for' → logprob: -5.490842342376709
    5. '  ' → logprob: -5.990842342376709
    6. ')' → logprob: -6.490842342376709
    7. '<|end|>' → logprob: -7.240842342376709
    8. ' for' → logprob: -7.365842342376709
    9. '#index' → logprob: -9.990842819213867
    10. '```' → logprob: -10.115842819213867

Token 52: ' Nombre' (ID: 70208)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2708388864994049
    2. ' ' → logprob: -2.145838975906372
    3. '<|end|>' → logprob: -2.770838975906372
    4. ' Nombre' → logprob: -3.770838975906372
    5. 'Nombre' → logprob: -4.770838737487793
    6. 'nombre' → logprob: -4.895838737487793
    7. ' number' → logprob: -5.145838737487793
    8. ' nombres' → logprob: -5.520838737487793
    9. '  ' → logprob: -5.645838737487793
    10. '<|end|>' → logprob: -7.020838737487793

Token 53: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32570239901542664
    2. '_de' → logprob: -2.700702428817749
    3. '<|end|>' → logprob: -2.825702428817749
    4. ' d' → logprob: -2.950702428817749
    5. '_' → logprob: -3.075702428817749
    6. 'de' → logprob: -3.950702428817749
    7. '_d' → logprob: -4.32570219039917
    8. 'd' → logprob: -5.32570219039917
    9. '_des' → logprob: -5.45070219039917
    10. ' ' → logprob: -5.70070219039917

Token 54: ''op' (ID: 70747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.06114023178815842
    2. 'é' → logprob: -3.561140298843384
    3. 'ér' → logprob: -3.686140298843384
    4. 'és' → logprob: -5.936140060424805
    5. 'e' → logprob: -6.936140060424805
    6. 'er' → logprob: -7.186140060424805
    7. 'ération' → logprob: -7.561140060424805
    8. 'éra' → logprob: -8.311140060424805
    9. '#' → logprob: -9.311140060424805
    10. '&eacute' → logprob: -9.811140060424805

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: 'operations' (ID: 54914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08980044722557068
    2. ' for' → logprob: -2.7148003578186035
    3. 'operations' → logprob: -4.4648003578186035
    4. '<|end|>' → logprob: -5.4648003578186035
    5. 'positions' → logprob: -6.2148003578186035
    6. ' ' → logprob: -7.0898003578186035
    7. ' operations' → logprob: -7.4648003578186035
    8. 's' → logprob: -9.089800834655762
    9. '<|end|>' → logprob: -9.089800834655762
    10. '```' → logprob: -10.089800834655762

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026545509696006775
    2. '=' → logprob: -3.651545524597168
    3. 's' → logprob: -9.401545524597168
    4. '.' → logprob: -9.776545524597168
    5. '[:]' → logprob: -10.901545524597168
    6. '_' → logprob: -11.026545524597168
    7. ')' → logprob: -11.026545524597168
    8. '[' → logprob: -11.151545524597168
    9. '=[]' → logprob: -11.401545524597168
    10. '[]' → logprob: -11.901545524597168

Token 59: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3106885254383087
    2. ' []' → logprob: -1.4356884956359863
    3. ' list' → logprob: -3.8106884956359863
    4. '[list' → logprob: -5.685688495635986
    5. 'list' → logprob: -6.060688495635986
    6. '[]' → logprob: -7.185688495635986
    7. '[' → logprob: -7.935688495635986
    8. '[input' → logprob: -10.310688972473145
    9. ' [
' → logprob: -10.560688972473145
    10. ' ' → logprob: -10.685688972473145

Token 60: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.026364397257566452
    2. '(' → logprob: -3.651364326477051
    3. '(
' → logprob: -11.02636432647705
    4. '(int' → logprob: -11.15136432647705
    5. '(eval' → logprob: -11.52636432647705
    6. '(input' → logprob: -11.90136432647705
    7. '(range' → logprob: -12.77636432647705
    8. '(m' → logprob: -12.77636432647705
    9. '(s' → logprob: -13.02636432647705
    10. ' (' → logprob: -13.65136432647705

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00015335931675508618
    2. 'int' → logprob: -9.375153541564941
    3. '(' → logprob: -10.000153541564941
    4. '<int' → logprob: -11.625153541564941
    5. '(str' → logprob: -12.375153541564941
    6. '[int' → logprob: -13.125153541564941
    7. '=int' → logprob: -13.125153541564941
    8. ' int' → logprob: -13.500153541564941
    9. ',int' → logprob: -13.875153541564941
    10. ']int' → logprob: -13.875153541564941

Token 62: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13395462930202484
    2. ',input' → logprob: -2.7589545249938965
    3. ',' → logprob: -3.0089545249938965
    4. '(' → logprob: -4.3839545249938965
    5. ' (' → logprob: -9.258955001831055
    6. ' ,' → logprob: -10.258955001831055
    7. '=input' → logprob: -10.758955001831055
    8. 'input' → logprob: -10.758955001831055
    9. ' input' → logprob: -11.633955001831055
    10. ')' → logprob: -12.508955001831055

Token 63: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3137882947921753
    2. ' input' → logprob: -1.3137882947921753
    3. '(input' → logprob: -7.563788414001465
    4. ',input' → logprob: -12.188788414001465
    5. '=input' → logprob: -14.188788414001465
    6. ' ' → logprob: -14.688788414001465
    7. '	input' → logprob: -15.063788414001465
    8. ')' → logprob: -15.313788414001465
    9. '<input' → logprob: -15.688788414001465
    10. '_input' → logprob: -15.688788414001465

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01917748525738716
    2. '()' → logprob: -4.269177436828613
    3. '(' → logprob: -5.519177436828613
    4. '(input' → logprob: -7.519177436828613
    5. '(),' → logprob: -8.269177436828613
    6. '(.' → logprob: -9.894177436828613
    7. ' ().' → logprob: -10.894177436828613
    8. '()
' → logprob: -11.019177436828613
    9. 'input' → logprob: -11.394177436828613
    10. ')' → logprob: -11.394177436828613

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5107177862082608e-05
    2. ' split' → logprob: -11.000024795532227
    3. 'strip' → logprob: -12.000024795532227
    4. '(split' → logprob: -13.375024795532227
    5. ')' → logprob: -15.750024795532227
    6. 's' → logprob: -16.000024795532227
    7. ' ' → logprob: -16.125024795532227
    8. 'rstrip' → logprob: -16.375024795532227
    9. 'spl' → logprob: -16.500024795532227
    10. 'plit' → logprob: -16.750024795532227

Token 66: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05968187004327774
    2. '))' → logprob: -3.3096818923950195
    3. '()' → logprob: -4.0596818923950195
    4. '())' → logprob: -5.8096818923950195
    5. '(' → logprob: -7.1846818923950195
    6. ')' → logprob: -8.18468189239502
    7. '()))
' → logprob: -9.30968189239502
    8. '()));' → logprob: -12.05968189239502
    9. '(),' → logprob: -12.18468189239502
    10. '()))

' → logprob: -12.43468189239502

Token 67: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04684232920408249
    2. ' ' → logprob: -3.671842336654663
    3. '<|end|>' → logprob: -4.921842098236084
    4. ' )' → logprob: -5.796842098236084
    5. '()' → logprob: -5.921842098236084
    6. '#' → logprob: -5.921842098236084
    7. '
' → logprob: -6.671842098236084
    8. '  
' → logprob: -7.171842098236084
    9. '[' → logprob: -7.296842098236084
    10. 'for' → logprob: -7.671842098236084

Token 68: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12063557654619217
    2. '#' → logprob: -2.245635509490967
    3. ' ' → logprob: -5.995635509490967
    4. '
' → logprob: -6.745635509490967
    5. ' )' → logprob: -6.870635509490967
    6. '[' → logprob: -7.120635509490967
    7. ' #' → logprob: -7.870635509490967
    8. 'for' → logprob: -8.245635986328125
    9. ')
' → logprob: -8.245635986328125
    10. ')#' → logprob: -8.370635986328125

Token 69: ' Pi' (ID: 26867)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operations' → logprob: -0.04039681330323219
    2. 'positions' → logprob: -3.5403969287872314
    3. ' operations' → logprob: -4.665396690368652
    4. '<|end|>' → logprob: -8.290396690368652
    5. ' positions' → logprob: -8.540396690368652
    6. ')' → logprob: -8.540396690368652
    7. 'op' → logprob: -9.040396690368652
    8. 'operation' → logprob: -9.665396690368652
    9. ' opérations' → logprob: -10.040396690368652
    10. 'oper' → logprob: -10.040396690368652

Token 70: 'èces' (ID: 100354)
  Prédit: 'èces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èces' → logprob: -0.07734473794698715
    2. 'è' → logprob: -2.7023446559906006
    3. '`' → logprob: -5.45234489440918
    4. 'ec' → logprob: -6.45234489440918
    5. '_' → logprob: -7.82734489440918
    6. 'é' → logprob: -9.32734489440918
    7. 'èce' → logprob: -9.32734489440918
    8. ' ' → logprob: -9.45234489440918
    9. '```' → logprob: -9.82734489440918
    10. ' è' → logprob: -9.95234489440918

Token 71: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03900753706693649
    2. '<|end|>' → logprob: -3.5390074253082275
    3. ' ' → logprob: -5.039007663726807
    4. ' )' → logprob: -6.664007663726807
    5. '<|end|>' → logprob: -7.789007663726807
    6. '```' → logprob: -8.664007186889648
    7. ' ' → logprob: -9.039007186889648
    8. '[' → logprob: -9.039007186889648
    9. '\n' → logprob: -9.289007186889648
    10. '))' → logprob: -9.414007186889648

Token 72: ' déplacer' (ID: 142135)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.23835191130638123
    2. ' déplacer' → logprob: -2.363351821899414
    3. 'd' → logprob: -2.738351821899414
    4. ' dé' → logprob: -3.363351821899414
    5. 'bou' → logprob: -4.613351821899414
    6. 'man' → logprob: -6.488351821899414
    7. 'm' → logprob: -6.613351821899414
    8. 'de' → logprob: -7.113351821899414
    9. 'éc' → logprob: -7.113351821899414
    10. ' bou' → logprob: -7.113351821899414

Token 73: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1164578199386597
    2. '
' → logprob: -1.3664578199386597
    3. 'positions' → logprob: -2.491457939147949
    4. ')' → logprob: -2.616457939147949
    5. ' for' → logprob: -2.616457939147949
    6. '#' → logprob: -2.616457939147949
    7. ' 
' → logprob: -3.741457939147949
    8. '<|end|>' → logprob: -3.991457939147949
    9. '[' → logprob: -4.241457939147949
    10. ' ' → logprob: -4.366457939147949

Token 74: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.9460742473602295
    2. 'g' → logprob: -1.8210742473602295
    3. ' déplacer' → logprob: -2.3210742473602295
    4. 'd' → logprob: -2.4460742473602295
    5. 'dro' → logprob: -2.9460742473602295
    6. ' droite' → logprob: -3.1960742473602295
    7. ' gauche' → logprob: -3.3210742473602295
    8. ' la' → logprob: -3.5710742473602295
    9. 'la' → logprob: -3.5710742473602295
    10. 'l' → logprob: -4.321074485778809

Token 75: ' opération' (ID: 86023)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3602787256240845
    2. ' opération' → logprob: -2.110278606414795
    3. 'operation' → logprob: -2.860278606414795
    4. ' ' → logprob: -3.485278606414795
    5. ' étape' → logprob: -3.860278606414795
    6. 'dé' → logprob: -4.860278606414795
    7. 'pas' → logprob: -4.860278606414795
    8. 'm' → logprob: -4.860278606414795
    9. 'ligne' → logprob: -5.235278606414795
    10. ' déplacement' → logprob: -5.360278606414795

Token 76: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28887972235679626
    2. ' 
' → logprob: -1.9138797521591187
    3. 'positions' → logprob: -4.038879871368408
    4. '  
' → logprob: -4.538879871368408
    5. 'for' → logprob: -4.538879871368408
    6. '#' → logprob: -4.538879871368408
    7. ')' → logprob: -4.913879871368408
    8. '<|end|>' → logprob: -5.038879871368408
    9. '
' → logprob: -5.163879871368408
    10. ' positions' → logprob: -5.288879871368408

Token 77: ' pièces' (ID: 49165)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019746022298932076
    2. ' ' → logprob: -4.394745826721191
    3. ' )' → logprob: -5.269745826721191
    4. 'end' → logprob: -7.644745826721191
    5. '<|end|>' → logprob: -8.144745826721191
    6. '))' → logprob: -8.269745826721191
    7. 'index' → logprob: -8.894745826721191
    8. 'indices' → logprob: -8.894745826721191
    9. '1' → logprob: -9.019745826721191
    10. '0' → logprob: -9.144745826721191

Token 78: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9954476952552795
    2. '-' → logprob: -1.8704476356506348
    3. '<|end|>' → logprob: -2.1204476356506348
    4. ')' → logprob: -2.2454476356506348
    5. '[' → logprob: -2.6204476356506348
    6. '1' → logprob: -3.6204476356506348
    7. ' -' → logprob: -3.7454476356506348
    8. '.' → logprob: -4.120447635650635
    9. '```' → logprob: -4.495447635650635
    10. '[:]' → logprob: -4.495447635650635

Token 79: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.41745737195014954
    2. 'éro' → logprob: -1.1674573421478271
    3. 'éros' → logprob: -3.542457342147827
    4. 'ero' → logprob: -7.667457580566406
    5. ' ' → logprob: -8.667457580566406
    6. 'è' → logprob: -8.667457580566406
    7. 'er' → logprob: -9.292457580566406
    8. 'ér' → logprob: -9.542457580566406
    9. 'éré' → logprob: -10.167457580566406
    10. 'érés' → logprob: -10.167457580566406

Token 80: 'rot' (ID: 8150)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.00041875618626363575
    2. 'r' → logprob: -8.375418663024902
    3. 'éro' → logprob: -10.000418663024902
    4. '```' → logprob: -10.750418663024902
    5. 'rot' → logprob: -11.125418663024902
    6. 'ros' → logprob: -11.250418663024902
    7. '0' → logprob: -11.375418663024902
    8. 'rod' → logprob: -11.375418663024902
    9. ' ro' → logprob: -11.625418663024902
    10. '1' → logprob: -11.750418663024902

Token 81: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.06345610320568085
    2. 'é' → logprob: -2.9384560585021973
    3. 'es' → logprob: -5.563456058502197
    4. 'és' → logprob: -6.063456058502197
    5. '1' → logprob: -7.563456058502197
    6. 'ée' → logprob: -7.688456058502197
    7. ' ' → logprob: -7.938456058502197
    8. 'éros' → logprob: -8.063456535339355
    9. '```' → logprob: -8.438456535339355
    10. 'er' → logprob: -8.563456535339355

Token 82: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9341721534729004
    2. ' ' → logprob: -1.1841721534729004
    3. '```' → logprob: -1.5591721534729004
    4. '<|end|>' → logprob: -3.0591721534729004
    5. '[' → logprob: -3.5591721534729004
    6. ' à' → logprob: -6.0591721534729
    7. 'à' → logprob: -6.5591721534729
    8. ' starting' → logprob: -6.6841721534729
    9. ' (' → logprob: -6.8091721534729
    10. '...' → logprob: -7.1841721534729

Token 83: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.3511141836643219
    2. '1' → logprob: -1.4761141538619995
    3. ' ' → logprob: -2.726114273071289
    4. 'part' → logprob: -6.601114273071289
    5. ' part' → logprob: -7.976114273071289
    6. '0' → logprob: -8.476114273071289
    7. ' l' → logprob: -9.601114273071289
    8. ' ' → logprob: -10.601114273071289
    9. ' partire' → logprob: -10.851114273071289
    10. '```' → logprob: -11.101114273071289

Token 84: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5390337705612183
    2. 'de' → logprob: -1.0390337705612183
    3. ' de' → logprob: -2.789033889770508
    4. 'd' → logprob: -7.414033889770508
    5. ' ' → logprob: -7.664033889770508
    6. '0' → logprob: -9.289033889770508
    7. '=' → logprob: -9.914033889770508
    8. 'du' → logprob: -9.914033889770508
    9. 'à' → logprob: -10.164033889770508
    10. 's' → logprob: -10.789033889770508

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.078914575278759
    2. ' ' → logprob: -2.5789146423339844
    3. '0' → logprob: -10.953914642333984
    4. ' ' → logprob: -11.953914642333984
    5. '<|end|>' → logprob: -15.953914642333984
    6. ' ' → logprob: -16.203914642333984
    7. '2' → logprob: -16.453914642333984
    8. '`' → logprob: -16.578914642333984
    9. '```' → logprob: -16.703914642333984
    10. 'l' → logprob: -16.828914642333984

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.625041007995605
    3. '0' → logprob: -11.000041007995605
    4. '`' → logprob: -16.375041961669922
    5. '```' → logprob: -16.875041961669922
    6. '2' → logprob: -18.375041961669922
    7. '<|end|>' → logprob: -18.437541961669922
    8. '১' → logprob: -18.937541961669922
    9. '１' → logprob: -19.125041961669922
    10. ' ' → logprob: -19.187541961669922

Token 87: '

' (ID: 279)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6597648859024048
    2. '#' → logprob: -1.7847648859024048
    3. '
' → logprob: -2.0347647666931152
    4. 'pos' → logprob: -2.4097647666931152
    5. 'p' → logprob: -3.5347647666931152
    6. 'position' → logprob: -4.409764766693115
    7. '```' → logprob: -4.409764766693115
    8. '' → logprob: -4.659764766693115
    9. 'result' → logprob: -5.409764766693115
    10. 's' → logprob: -5.909764766693115

Token 88: '#' (ID: 2)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7318634390830994
    2. '#' → logprob: -1.1068634986877441
    3. 'pos' → logprob: -2.481863498687744
    4. 'position' → logprob: -3.106863498687744
    5. 'result' → logprob: -4.106863498687744
    6. 'piece' → logprob: -5.231863498687744
    7. 'p' → logprob: -5.231863498687744
    8. 'new' → logprob: -5.356863498687744
    9. 'd' → logprob: -5.606863498687744
    10. '```' → logprob: -5.606863498687744

Token 89: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5583769679069519
    2. 'positions' → logprob: -1.4333770275115967
    3. 'pos' → logprob: -2.4333770275115967
    4. 'position' → logprob: -2.5583770275115967
    5. 'from' → logprob: -4.558376789093018
    6. 'piece' → logprob: -6.058376789093018
    7. ' position' → logprob: -6.683376789093018
    8. ' #' → logprob: -6.808376789093018
    9. ' positions' → logprob: -6.933376789093018
    10. 'pieces' → logprob: -7.308376789093018

Token 90: ' utilise' (ID: 70283)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6030657887458801
    2. ' #' → logprob: -1.7280657291412354
    3. '#' → logprob: -3.1030657291412354
    4. 'e' → logprob: -3.2280657291412354
    5. ''' → logprob: -3.6030657291412354
    6. ' a' → logprob: -3.8530657291412354
    7. ' =' → logprob: -3.9780657291412354
    8. 'a' → logprob: -4.3530659675598145
    9. 'u' → logprob: -4.3530659675598145
    10. ' ' → logprob: -4.3530659675598145

Token 91: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.09934021532535553
    2. ' une' → logprob: -3.3493402004241943
    3. 'un' → logprob: -3.5993402004241943
    4. 'une' → logprob: -4.224340438842773
    5. 'd' → logprob: -4.474340438842773
    6. 'a' → logprob: -6.224340438842773
    7. '_' → logprob: -7.224340438842773
    8. ' d' → logprob: -7.474340438842773
    9. 'u' → logprob: -7.474340438842773
    10. ' a' → logprob: -7.724340438842773

Token 92: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.33412641286849976
    2. 'liste' → logprob: -1.8341264724731445
    3. 'd' → logprob: -2.5841264724731445
    4. ' diction' → logprob: -3.8341264724731445
    5. 'list' → logprob: -5.2091264724731445
    6. ' dict' → logprob: -5.9591264724731445
    7. 'dict' → logprob: -6.0841264724731445
    8. ' structure' → logprob: -6.2091264724731445
    9. ' dictionary' → logprob: -6.3341264724731445
    10. ' table' → logprob: -6.3341264724731445

Token 93: ' pour' (ID: 1930)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.0719029903411865
    2. 'd' → logprob: -1.4469029903411865
    3. 'position' → logprob: -2.5719029903411865
    4. 'de' → logprob: -2.6969029903411865
    5. 'des' → logprob: -3.3219029903411865
    6. ' positions' → logprob: -3.5719029903411865
    7. ' de' → logprob: -3.5719029903411865
    8. '```' → logprob: -3.5719029903411865
    9. ' d' → logprob: -3.6969029903411865
    10. ' des' → logprob: -3.9469029903411865

Token 94: ' suivre' (ID: 54188)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.22742192447185516
    2. ' représ' → logprob: -2.477421998977661
    3. 'mod' → logprob: -3.852421998977661
    4. 'su' → logprob: -4.227421760559082
    5. 'represent' → logprob: -4.227421760559082
    6. ' mod' → logprob: -4.352421760559082
    7. 'sim' → logprob: -4.727421760559082
    8. 'repr' → logprob: -4.727421760559082
    9. 'stock' → logprob: -4.977421760559082
    10. ' garder' → logprob: -4.977421760559082

Token 95: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9580420255661011
    2. ' la' → logprob: -0.9580420255661011
    3. 'l' → logprob: -1.583042025566101
    4. 'la' → logprob: -4.583042144775391
    5. '<|end|>' → logprob: -5.333042144775391
    6. ' les' → logprob: -5.458042144775391
    7. ' lâ' → logprob: -5.833042144775391
    8. 'les' → logprob: -7.333042144775391
    9. 'positions' → logprob: -7.583042144775391
    10. '_l' → logprob: -7.708042144775391

Token 96: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.259135901927948
    2. 'positions' → logprob: -1.5091359615325928
    3. 'ordre' → logprob: -6.134135723114014
    4. ' indices' → logprob: -6.259135723114014
    5. 'indices' → logprob: -7.384135723114014
    6. ' em' → logprob: -7.509135723114014
    7. ' ord' → logprob: -8.134136199951172
    8. ' déplacements' → logprob: -8.384136199951172
    9. 'position' → logprob: -8.509136199951172
    10. 'pos' → logprob: -8.634136199951172

Token 97: ' des' (ID: 731)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3355514109134674
    2. 'current' → logprob: -1.835551381111145
    3. 'des' → logprob: -2.8355515003204346
    4. ' des' → logprob: -3.8355515003204346
    5. 'position' → logprob: -4.3355512619018555
    6. ' positions' → logprob: -5.3355512619018555
    7. 'de' → logprob: -5.4605512619018555
    8. ' current' → logprob: -5.5855512619018555
    9. 'act' → logprob: -6.0855512619018555
    10. ' actuelle' → logprob: -6.0855512619018555

Token 98: ' pièces' (ID: 49165)
  Prédit: ' pièces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièces' → logprob: -0.3562465310096741
    2. 'pi' → logprob: -1.2312464714050293
    3. ' pi' → logprob: -5.106246471405029
    4. ' pieces' → logprob: -7.856246471405029
    5. 'pieces' → logprob: -7.856246471405029
    6. '```' → logprob: -8.106246948242188
    7. 'p' → logprob: -9.481246948242188
    8. ' différentes' → logprob: -9.481246948242188
    9. ' morceaux' → logprob: -9.481246948242188
    10. ' ' → logprob: -9.731246948242188

Token 99: ',' (ID: 11)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.03183280676603317
    2. ' positions' → logprob: -4.406832695007324
    3. 'pos' → logprob: -4.781832695007324
    4. 'position' → logprob: -5.281832695007324
    5. 'current' → logprob: -5.781832695007324
    6. '_positions' → logprob: -7.406832695007324
    7. '
' → logprob: -7.781832695007324
    8. '```' → logprob: -8.531832695007324
    9. ' current' → logprob: -8.656832695007324
    10. ',' → logprob: -8.781832695007324

Token 100: ' index' (ID: 3472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.405252605676651
    2. 'positions' → logprob: -2.155252695083618
    3. 'indices' → logprob: -3.280252695083618
    4. ' ce' → logprob: -3.280252695083618
    5. ' #' → logprob: -3.780252695083618
    6. ' car' → logprob: -3.905252695083618
    7. 'car' → logprob: -4.405252456665039
    8. ' et' → logprob: -4.530252456665039
    9. '#index' → logprob: -4.655252456665039
    10. ' positions' → logprob: -4.780252456665039

Token 101: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8358516097068787
    2. ' des' → logprob: -1.2108516693115234
    3. 's' → logprob: -2.3358516693115234
    4. ' =' → logprob: -2.9608516693115234
    5. 'es' → logprob: -3.4608516693115234
    6. '0' → logprob: -4.085851669311523
    7. '<|end|>' → logprob: -4.210851669311523
    8. ' de' → logprob: -4.835851669311523
    9. '=' → logprob: -5.085851669311523
    10. ' correspond' → logprob: -5.335851669311523

Token 102: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.528943419456482
    2. ' =' → logprob: -1.653943419456482
    3. '<|end|>' → logprob: -1.778943419456482
    4. ' ' → logprob: -1.903943419456482
    5. ' i' → logprob: -2.9039435386657715
    6. ' correspond' → logprob: -2.9039435386657715
    7. ' corresponds' → logprob: -3.0289435386657715
    8. '+' → logprob: -3.9039435386657715
    9. ')' → logprob: -3.9039435386657715
    10. 's' → logprob: -4.2789435386657715

Token 103: ' pièce' (ID: 56132)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2587297558784485
    2. 'la' → logprob: -1.5087296962738037
    3. 'l' → logprob: -6.258729934692383
    4. ' i' → logprob: -7.133729934692383
    5. ' l' → logprob: -7.258729934692383
    6. 'le' → logprob: -7.383729934692383
    7. 'i' → logprob: -7.508729934692383
    8. ' chaque' → logprob: -8.008729934692383
    9. ' ' → logprob: -8.133729934692383
    10. '```' → logprob: -8.133729934692383

Token 104: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.024749405682086945
    2. 'i' → logprob: -3.774749517440796
    3. '<|end|>' → logprob: -7.899749279022217
    4. '[i' → logprob: -8.149749755859375
    5. ' ' → logprob: -8.274749755859375
    6. '	i' → logprob: -8.774749755859375
    7. 's' → logprob: -8.899749755859375
    8. '=i' → logprob: -10.024749755859375
    9. ' ,' → logprob: -10.399749755859375
    10. ' ' → logprob: -10.524749755859375

Token 105: '+' (ID: 10)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -1.1159591674804688
    2. ')' → logprob: -1.2409591674804688
    3. 'positions' → logprob: -1.7409591674804688
    4. ' positions' → logprob: -3.1159591674804688
    5. ',' → logprob: -3.6159591674804688
    6. 's' → logprob: -3.7409591674804688
    7. ' ' → logprob: -3.7409591674804688
    8. ']' → logprob: -3.8659591674804688
    9. '<|end|>' → logprob: -4.365959167480469
    10. ' ,' → logprob: -4.615959167480469

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022532683797180653
    2. ' ' → logprob: -6.12725305557251
    3. '0' → logprob: -10.377253532409668
    4. '```' → logprob: -10.627253532409668
    5. '<|end|>' → logprob: -12.377253532409668
    6. '`' → logprob: -12.627253532409668
    7. '  ' → logprob: -13.877253532409668
    8. 'i' → logprob: -14.502253532409668
    9. '   ' → logprob: -14.752253532409668
    10. 's' → logprob: -14.877253532409668

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7727041244506836
    2. 'positions' → logprob: -1.5227041244506836
    3. '<|end|>' → logprob: -1.8977041244506836
    4. ' 
' → logprob: -2.6477041244506836
    5. ' positions' → logprob: -3.5227041244506836
    6. '  
' → logprob: -3.5227041244506836
    7. ' ' → logprob: -4.647704124450684
    8. '#' → logprob: -5.147704124450684
    9. '\n' → logprob: -5.647704124450684
    10. '.' → logprob: -5.647704124450684

Token 108: '#' (ID: 2)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0262004304677248
    2. 'pos' → logprob: -4.526200294494629
    3. 'for' → logprob: -5.151200294494629
    4. 'current' → logprob: -5.401200294494629
    5. 'position' → logprob: -5.776200294494629
    6. ' positions' → logprob: -7.651200294494629
    7. '```' → logprob: -8.276200294494629
    8. ' for' → logprob: -8.401200294494629
    9. ')' → logprob: -9.151200294494629
    10. 'indices' → logprob: -9.526200294494629

Token 109: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.416384220123291
    2. 'for' → logprob: -1.916384220123291
    3. 'pos' → logprob: -2.541384220123291
    4. ' for' → logprob: -3.166384220123291
    5. 'position' → logprob: -3.291384220123291
    6. 'current' → logprob: -4.041384220123291
    7. ' positions' → logprob: -4.666384220123291
    8. 'piece' → logprob: -6.791384220123291
    9. 'indices' → logprob: -6.916384220123291
    10. 'final' → logprob: -7.166384220123291

Token 110: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' déjà' (ID: 21229)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.17410534620285034
    2. ' la' → logprob: -2.174105405807495
    3. 'modifiable' → logprob: -4.924105167388916
    4. ' mise' → logprob: -5.174105167388916
    5. 'une' → logprob: -5.299105167388916
    6. ' updated' → logprob: -5.424105167388916
    7. ' mod' → logprob: -5.674105167388916
    8. ' un' → logprob: -5.924105167388916
    9. 'la' → logprob: -6.674105167388916
    10. ' toujours' → logprob: -6.674105167388916

Token 112: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.118147850036621
    2. ' initial' → logprob: -1.743147850036621
    3. ' une' → logprob: -2.243147850036621
    4. 'une' → logprob: -2.368147850036621
    5. 'modifiable' → logprob: -2.743147850036621
    6. 'la' → logprob: -2.868147850036621
    7. ' la' → logprob: -3.118147850036621
    8. 'mod' → logprob: -3.868147850036621
    9. ' mise' → logprob: -4.243147850036621
    10. ' mod' → logprob: -4.368147850036621

Token 113: 'isé' (ID: 30065)
  Prédit: 'alis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alis' → logprob: -1.0817316770553589
    2. 'isée' → logprob: -1.0817316770553589
    3. 'al' → logprob: -2.0817317962646484
    4. 'isé' → logprob: -2.4567317962646484
    5. 'isées' → logprob: -3.2067317962646484
    6. 'ise' → logprob: -4.081731796264648
    7. 'ized' → logprob: -4.706731796264648
    8. 'ais' → logprob: -4.831731796264648
    9. 'is' → logprob: -4.956731796264648
    10. '#' → logprob: -5.581731796264648

Token 114: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5728620290756226
    2. '<|end|>' → logprob: -1.1978620290756226
    3. ' for' → logprob: -2.822862148284912
    4. '
' → logprob: -3.322862148284912
    5. 'positions' → logprob: -3.572862148284912
    6. ')' → logprob: -5.697862148284912
    7. '<|end|>' → logprob: -5.947862148284912
    8. '#' → logprob: -6.697862148284912
    9. 'position' → logprob: -7.322862148284912
    10. '```' → logprob: -7.447862148284912

Token 115: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006428294815123081
    2. ' for' → logprob: -5.756428241729736
    3. 'position' → logprob: -6.756428241729736
    4. 'positions' → logprob: -6.756428241729736
    5. 'pos' → logprob: -7.256428241729736
    6. '#' → logprob: -9.506428718566895
    7. 'current' → logprob: -9.881428718566895
    8. 'new' → logprob: -11.256428718566895
    9. 'final' → logprob: -11.631428718566895
    10. '```' → logprob: -11.881428718566895

Token 116: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0259766336530447
    2. '#' → logprob: -4.025976657867432
    3. 'from' → logprob: -5.275976657867432
    4. 'position' → logprob: -6.400976657867432
    5. 'pos' → logprob: -8.025976181030273
    6. ' for' → logprob: -8.150976181030273
    7. 'positions' → logprob: -8.650976181030273
    8. 'def' → logprob: -9.775976181030273
    9. '```' → logprob: -10.275976181030273
    10. 'pour' → logprob: -10.900976181030273

Token 117: ' faciliter' (ID: 106284)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.013944054953753948
    2. ' _' → logprob: -4.388944149017334
    3. ' chaque' → logprob: -7.638944149017334
    4. '_' → logprob: -8.138943672180176
    5. 'i' → logprob: -8.138943672180176
    6. ' déplacer' → logprob: -9.263943672180176
    7. ' op' → logprob: -9.513943672180176
    8. ' idx' → logprob: -9.763943672180176
    9. ' ' → logprob: -10.263943672180176
    10. '_i' → logprob: -11.013943672180176

Token 118: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6892725825309753
    2. 'la' → logprob: -1.9392726421356201
    3. 'l' → logprob: -2.18927264213562
    4. ' le' → logprob: -2.93927264213562
    5. ' les' → logprob: -2.93927264213562
    6. ' chaque' → logprob: -3.06427264213562
    7. 'les' → logprob: -3.31427264213562
    8. ' l' → logprob: -3.81427264213562
    9. 'le' → logprob: -3.93927264213562
    10. 'i' → logprob: -6.564272403717041

Token 119: ' vér' (ID: 42524)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.7994884252548218
    2. ' recherche' → logprob: -1.7994884252548218
    3. 'gestion' → logprob: -2.2994885444641113
    4. 'trait' → logprob: -3.0494885444641113
    5. 'su' → logprob: -3.0494885444641113
    6. ' gestion' → logprob: -3.1744885444641113
    7. 'dé' → logprob: -3.5494885444641113
    8. ' déplacement' → logprob: -3.6744885444641113
    9. ' traitement' → logprob: -4.424488544464111
    10. ' suivi' → logprob: -4.424488544464111

Token 120: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.001906024175696075
    2. 'ifi' → logprob: -7.001905918121338
    3. 'if' → logprob: -7.376905918121338
    4. 'ifie' → logprob: -8.876906394958496
    5. 'ifications' → logprob: -9.501906394958496
    6. 'ication' → logprob: -10.251906394958496
    7. 'acité' → logprob: -10.751906394958496
    8. '#' → logprob: -10.876906394958496
    9. 'ific' → logprob: -10.876906394958496
    10. '```' → logprob: -11.126906394958496

Token 121: ' des' (ID: 731)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8229849338531494
    2. ' de' → logprob: -1.1979849338531494
    3. 'des' → logprob: -2.4479849338531494
    4. ' des' → logprob: -2.6979849338531494
    5. ',' → logprob: -2.9479849338531494
    6. '<|end|>' → logprob: -3.9479849338531494
    7. 'positions' → logprob: -4.07298469543457
    8. ' ,' → logprob: -6.32298469543457
    9. 'du' → logprob: -6.69798469543457
    10. 'for' → logprob: -6.69798469543457

Token 122: ' cases' (ID: 7911)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5588747262954712
    2. ' positions' → logprob: -2.4338746070861816
    3. ' collisions' → logprob: -2.4338746070861816
    4. ' doubl' → logprob: -2.8088746070861816
    5. ' conflits' → logprob: -3.0588746070861816
    6. ' déplacements' → logprob: -3.1838746070861816
    7. ' mouvements' → logprob: -3.6838746070861816
    8. 'con' → logprob: -4.433874607086182
    9. 'dé' → logprob: -4.683874607086182
    10. 'd' → logprob: -4.808874607086182

Token 123: ' occup' (ID: 14815)
  Prédit: 'occup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occup' → logprob: -0.161977618932724
    2. '_oc' → logprob: -3.661977529525757
    3. 'occupied' → logprob: -3.786977529525757
    4. ' occup' → logprob: -4.161977767944336
    5. 'occ' → logprob: -4.411977767944336
    6. '_' → logprob: -4.536977767944336
    7. 'vid' → logprob: -4.536977767944336
    8. 'lib' → logprob: -4.786977767944336
    9. 'ocup' → logprob: -4.786977767944336
    10. 'vide' → logprob: -5.786977767944336

Token 124: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.08037912845611572
    2. 'up' → logprob: -2.830379009246826
    3. 'es' → logprob: -4.455379009246826
    4. 'ees' → logprob: -5.955379009246826
    5. 'p' → logprob: -6.205379009246826
    6. '#' → logprob: -7.955379009246826
    7. '```' → logprob: -8.080379486083984
    8. 'és' → logprob: -8.330379486083984
    9. 'é' → logprob: -8.705379486083984
    10. 'ues' → logprob: -8.830379486083984

Token 125: ',
' (ID: 412)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.7239612340927124
    2. ' occupied' → logprob: -1.7239612340927124
    3. 'positions' → logprob: -2.223961353302002
    4. ',' → logprob: -2.223961353302002
    5. 'position' → logprob: -3.473961353302002
    6. 'occup' → logprob: -3.848961353302002
    7. 'occ' → logprob: -4.098961353302002
    8. ' par' → logprob: -4.473961353302002
    9. 'par' → logprob: -4.848961353302002
    10. ' positions' → logprob: -5.098961353302002

Token 126: '#' (ID: 2)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.6774745583534241
    2. ' occupied' → logprob: -1.1774744987487793
    3. 'occup' → logprob: -2.0524744987487793
    4. 'position' → logprob: -4.802474498748779
    5. 'positions' → logprob: -4.802474498748779
    6. 'occ' → logprob: -5.427474498748779
    7. 'ocup' → logprob: -5.427474498748779
    8. 'pos' → logprob: -5.802474498748779
    9. ' occup' → logprob: -5.802474498748779
    10. ' position' → logprob: -5.927474498748779

Token 127: ' on' (ID: 402)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.6220276951789856
    2. ' occupied' → logprob: -1.1220276355743408
    3. 'occup' → logprob: -2.372027635574341
    4. 'position' → logprob: -5.12202787399292
    5. 'case' → logprob: -5.49702787399292
    6. 'occ' → logprob: -5.49702787399292
    7. 'ocup' → logprob: -5.49702787399292
    8. ' position' → logprob: -5.62202787399292
    9. 'cases' → logprob: -5.62202787399292
    10. 'positions' → logprob: -5.74702787399292

Token 128: ' maint' (ID: 5425)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.20316623151302338
    2. ' peut' → logprob: -2.9531662464141846
    3. 'cr' → logprob: -3.3281662464141846
    4. 'pe' → logprob: -3.5781662464141846
    5. ' va' → logprob: -3.9531662464141846
    6. ' utilise' → logprob: -4.7031660079956055
    7. 'cré' → logprob: -4.7031660079956055
    8. 'util' → logprob: -5.4531660079956055
    9. 'maint' → logprob: -5.7031660079956055
    10. ' a' → logprob: -5.9531660079956055

Token 129: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.0030272675212472677
    2. 'ent' → logprob: -6.628027439117432
    3. 'i' → logprob: -6.878027439117432
    4. 'iend' → logprob: -7.878027439117432
    5. '#' → logprob: -9.753026962280273
    6. '
' → logprob: -10.753026962280273
    7. 'iennent' → logprob: -10.878026962280273
    8. 'int' → logprob: -11.003026962280273
    9. '_' → logprob: -11.128026962280273
    10. '```' → logprob: -11.253026962280273

Token 130: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4875727891921997
    2. ' un' → logprob: -0.9875727891921997
    3. 'une' → logprob: -5.11257266998291
    4. 'un' → logprob: -5.23757266998291
    5. ' a' → logprob: -6.86257266998291
    6. 'a' → logprob: -7.61257266998291
    7. '_' → logprob: -8.73757266998291
    8. '_un' → logprob: -9.23757266998291
    9. '```' → logprob: -9.73757266998291
    10. 's' → logprob: -10.48757266998291

Token 131: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -1.122839093208313
    2. ' diction' → logprob: -1.372839093208313
    3. 'set' → logprob: -1.997839093208313
    4. ' set' → logprob: -2.3728389739990234
    5. 'd' → logprob: -2.3728389739990234
    6. ' ensemble' → logprob: -2.8728389739990234
    7. ' d' → logprob: -3.7478389739990234
    8. ' tableau' → logprob: -4.622838973999023
    9. 'ense' → logprob: -5.622838973999023
    10. 'dict' → logprob: -7.372838973999023

Token 132: ' des' (ID: 731)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.2718955874443054
    2. ' occupied' → logprob: -1.8968956470489502
    3. 'occup' → logprob: -3.02189564704895
    4. 'occ' → logprob: -4.771895408630371
    5. 'positions' → logprob: -5.021895408630371
    6. ' des' → logprob: -5.146895408630371
    7. ' occup' → logprob: -5.396895408630371
    8. 'cases' → logprob: -5.771895408630371
    9. 'ocup' → logprob: -6.271895408630371
    10. ' positions' → logprob: -6.521895408630371

Token 133: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.392891526222229
    2. 'positions' → logprob: -1.142891526222229
    3. '_positions' → logprob: -5.2678914070129395
    4. ' cases' → logprob: -8.017891883850098
    5. 'occup' → logprob: -8.892891883850098
    6. 'position' → logprob: -9.517891883850098
    7. 'occupied' → logprob: -9.767891883850098
    8. ' occupied' → logprob: -9.892891883850098
    9. 'cases' → logprob: -9.892891883850098
    10. 'Positions' → logprob: -10.267891883850098

Token 134: ' occup' (ID: 14815)
  Prédit: 'occup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occup' → logprob: -0.7083520293235779
    2. 'occupied' → logprob: -1.2083520889282227
    3. 'occ' → logprob: -2.2083520889282227
    4. ' occupied' → logprob: -3.0833520889282227
    5. ' occup' → logprob: -3.8333520889282227
    6. 'ocup' → logprob: -4.208352088928223
    7. 'oc' → logprob: -4.833352088928223
    8. '```' → logprob: -6.208352088928223
    9. ' ocu' → logprob: -6.458352088928223
    10. ' occ' → logprob: -6.708352088928223

Token 135: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0031769988127052784
    2. 'es' → logprob: -6.503177165985107
    3. 'ees' → logprob: -6.628177165985107
    4. 'é' → logprob: -8.62817668914795
    5. 'p' → logprob: -9.50317668914795
    6. 'ée' → logprob: -10.37817668914795
    7. 'és' → logprob: -11.25317668914795
    8. 'pees' → logprob: -11.25317668914795
    9. 'e' → logprob: -11.75317668914795
    10. 'nées' → logprob: -12.50317668914795

Token 136: '
' (ID: 198)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.04593713581562042
    2. 'positions' → logprob: -3.5459370613098145
    3. ' occupied' → logprob: -5.1709370613098145
    4. 'occup' → logprob: -5.2959370613098145
    5. 'occ' → logprob: -6.5459370613098145
    6. ',' → logprob: -6.7959370613098145
    7. '```' → logprob: -7.5459370613098145
    8. 'ocup' → logprob: -7.6709370613098145
    9. ' positions' → logprob: -7.9209370613098145
    10. '<|end|>' → logprob: -8.670937538146973

Token 137: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.021623920649290085
    2. 'positions' → logprob: -4.0216240882873535
    3. ' occupied' → logprob: -6.5216240882873535
    4. 'occup' → logprob: -6.6466240882873535
    5. 'cases' → logprob: -8.646623611450195
    6. 'occ' → logprob: -9.271623611450195
    7. '```' → logprob: -9.396623611450195
    8. 'ocup' → logprob: -9.521623611450195
    9. 'pos' → logprob: -9.646623611450195
    10. ' positions' → logprob: -10.271623611450195

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1643490046262741
    2. '=' → logprob: -1.9143489599227905
    3. '_positions' → logprob: -5.53934907913208
    4. '_' → logprob: -9.414348602294922
    5. 's' → logprob: -9.664348602294922
    6. '=set' → logprob: -11.039348602294922
    7. 'positions' → logprob: -11.914348602294922
    8. '_spaces' → logprob: -12.914348602294922
    9. ' ' → logprob: -13.039348602294922
    10. '<|end|>' → logprob: -13.039348602294922

Token 139: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.16037817299365997
    2. ' set' → logprob: -1.9103782176971436
    3. '{' → logprob: -9.035378456115723
    4. ' {' → logprob: -11.035378456115723
    5. '	set' → logprob: -11.660378456115723
    6. '=set' → logprob: -11.910378456115723
    7. '(set' → logprob: -13.285378456115723
    8. ')set' → logprob: -14.910378456115723
    9. ' ' → logprob: -15.035378456115723
    10. '```' → logprob: -15.160378456115723

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011713240382960066
    2. '()' → logprob: -9.375117301940918
    3. ' (' → logprob: -10.625117301940918
    4. 'positions' → logprob: -11.875117301940918
    5. ' positions' → logprob: -15.375117301940918
    6. '(position' → logprob: -15.375117301940918
    7. '(pos' → logprob: -15.625117301940918
    8. '(
' → logprob: -15.875117301940918
    9. '_positions' → logprob: -17.1251163482666
    10. '(points' → logprob: -17.1251163482666

Token 141: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.002204262651503086
    2. ' positions' → logprob: -6.127204418182373
    3. '(' → logprob: -11.752203941345215
    4. ')' → logprob: -12.002203941345215
    5. 'position' → logprob: -12.502203941345215
    6. '.positions' → logprob: -14.627203941345215
    7. '_positions' → logprob: -15.127203941345215
    8. 'pos' → logprob: -15.502203941345215
    9. 'Positions' → logprob: -15.877203941345215
    10. 'posit' → logprob: -16.62720489501953

Token 142: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -12.75000286102295
    3. ')
' → logprob: -15.37500286102295
    4. '))' → logprob: -16.750003814697266
    5. ')

' → logprob: -17.500003814697266
    6. '())' → logprob: -17.875003814697266
    7. ')#' → logprob: -18.250003814697266
    8. '}' → logprob: -18.500003814697266
    9. ')}' → logprob: -18.625003814697266
    10. '<|end|>' → logprob: -19.125003814697266

Token 143: 'GO' (ID: 20446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009258725331164896
    2. ' for' → logprob: -8.25092601776123
    3. 'result' → logprob: -8.37592601776123
    4. 'output' → logprob: -8.75092601776123
    5. '#' → logprob: -9.50092601776123
    6. 'positions' → logprob: -9.62592601776123
    7. 'position' → logprob: -10.00092601776123
    8. 'results' → logprob: -10.12592601776123
    9. '
' → logprob: -11.87592601776123
    10. 'pos' → logprob: -12.12592601776123

Token 144: 'AL' (ID: 1483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1611391305923462
    2. ' ' → logprob: -1.5361391305923462
    3. ' =' → logprob: -1.7861391305923462
    4. '_' → logprob: -2.6611390113830566
    5. '=' → logprob: -3.1611390113830566
    6. '
' → logprob: -3.1611390113830566
    7. '_positions' → logprob: -3.2861390113830566
    8. 's' → logprob: -4.411139011383057
    9. 'positions' → logprob: -4.411139011383057
    10. '<|end|>' → logprob: -4.536139011383057

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1613326221704483
    2. '=' → logprob: -2.911332607269287
    3. '_positions' → logprob: -3.411332607269287
    4. 'for' → logprob: -4.161332607269287
    5. 's' → logprob: -4.286332607269287
    6. '_' → logprob: -4.661332607269287
    7. ' ' → logprob: -5.036332607269287
    8. ':' → logprob: -5.536332607269287
    9. 'positions' → logprob: -5.911332607269287
    10. '<|end|>' → logprob: -6.286332607269287

Token 146: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7395176887512207
    2. '0' → logprob: -0.9895176887512207
    3. 'max' → logprob: -3.4895176887512207
    4. ' max' → logprob: -3.6145176887512207
    5. ' positions' → logprob: -3.8645176887512207
    6. 'positions' → logprob: -4.114517688751221
    7. '10' → logprob: -4.239517688751221
    8. '100' → logprob: -4.239517688751221
    9. ' N' → logprob: -5.364517688751221
    10. '1' → logprob: -5.739517688751221

Token 147: '201' (ID: 667)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5807034969329834
    2. '100' → logprob: -2.4557034969329834
    3. 'max' → logprob: -2.5807034969329834
    4. 'N' → logprob: -2.7057034969329834
    5. '10' → logprob: -2.8307034969329834
    6. '1' → logprob: -3.0807034969329834
    7. 'len' → logprob: -3.0807034969329834
    8. '-' → logprob: -4.4557037353515625
    9. 'positions' → logprob: -4.8307037353515625
    10. 'sorted' → logprob: -4.9557037353515625

Token 148: '9' (ID: 24)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9832577705383301
    2. '<|end|>' → logprob: -1.60825777053833
    3. 'positions' → logprob: -2.48325777053833
    4. '
' → logprob: -2.60825777053833
    5. '0' → logprob: -2.73325777053833
    6. '_' → logprob: -2.98325777053833
    7. 'for' → logprob: -3.10825777053833
    8. ')' → logprob: -3.85825777053833
    9. '

' → logprob: -4.23325777053833
    10. ' 
' → logprob: -4.73325777053833

Token 149: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03315432369709015
    2. 'for' → logprob: -3.783154249191284
    3. ' for' → logprob: -4.783154487609863
    4. '<|end|>' → logprob: -7.533154487609863
    5. '
' → logprob: -7.658154487609863
    6. ' 
' → logprob: -8.408154487609863
    7. '' → logprob: -9.408154487609863
    8. '\n' → logprob: -9.408154487609863
    9. '

' → logprob: -10.283154487609863
    10. '  
' → logprob: -10.908154487609863

Token 150: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02354232221841812
    2. 'for' → logprob: -4.023542404174805
    3. ' for' → logprob: -5.898542404174805
    4. '<|end|>' → logprob: -6.523542404174805
    5. ' 
' → logprob: -7.273542404174805
    6. '
' → logprob: -9.148542404174805
    7. '\n' → logprob: -9.398542404174805
    8. '' → logprob: -9.523542404174805
    9. ' ' → logprob: -9.523542404174805
    10. '#' → logprob: -10.273542404174805

Token 151: ' numéro' (ID: 65036)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18343859910964966
    2. '#' → logprob: -2.308438539505005
    3. ' for' → logprob: -2.933438539505005
    4. 'goal' → logprob: -5.683438777923584
    5. 'target' → logprob: -5.933438777923584
    6. ' #' → logprob: -5.933438777923584
    7. 'while' → logprob: -6.558438777923584
    8. 'max' → logprob: -7.058438777923584
    9. 'def' → logprob: -7.183438777923584
    10. 'positions' → logprob: -7.433438777923584

Token 152: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5467508435249329
    2. ' de' → logprob: -1.546750783920288
    3. '_de' → logprob: -2.796750783920288
    4. 'd' → logprob: -3.421750783920288
    5. 'max' → logprob: -3.671750783920288
    6. 'final' → logprob: -4.296751022338867
    7. 'objectif' → logprob: -4.296751022338867
    8. '_max' → logprob: -4.921751022338867
    9. '_c' → logprob: -5.421751022338867
    10. '_' → logprob: -5.546751022338867

Token 153: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.28814345598220825
    2. 'case' → logprob: -2.4131433963775635
    3. 'la' → logprob: -2.5381433963775635
    4. ' case' → logprob: -3.2881433963775635
    5. 'l' → logprob: -3.5381433963775635
    6. ' l' → logprob: -4.413143634796143
    7. 'but' → logprob: -7.788143634796143
    8. ' but' → logprob: -7.913143634796143
    9. 'the' → logprob: -7.913143634796143
    10. ' the' → logprob: -8.663143157958984

Token 154: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.022900545969605446
    2. ' case' → logprob: -4.397900581359863
    3. 'position' → logprob: -4.772900581359863
    4. 'ligne' → logprob: -8.397900581359863
    5. 'c' → logprob: -8.897900581359863
    6. 'pi' → logprob: -8.897900581359863
    7. 'année' → logprob: -8.897900581359863
    8. ' position' → logprob: -9.022900581359863
    9. 'goal' → logprob: -9.147900581359863
    10. 'der' → logprob: -9.272900581359863

Token 155: ' d' (ID: 272)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6726463437080383
    2. 'for' → logprob: -1.2976462841033936
    3. ' for' → logprob: -1.5476462841033936
    4. '<|end|>' → logprob: -6.422646522521973
    5. ' 
' → logprob: -6.797646522521973
    6. '
' → logprob: -8.297646522521973
    7. '

' → logprob: -8.547646522521973
    8. '\n' → logprob: -9.047646522521973
    9. '<|end|>' → logprob: -9.047646522521973
    10. '#' → logprob: -9.672646522521973

Token 156: ''arrivée' (ID: 156076)
  Prédit: ''arrivée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''arrivée' → logprob: -0.3113425672054291
    2. 'estination' → logprob: -1.8113425970077515
    3. 'arr' → logprob: -2.686342477798462
    4. 'e' → logprob: -4.436342716217041
    5. ''objectif' → logprob: -5.186342716217041
    6. 'objectif' → logprob: -5.311342716217041
    7. ''arr' → logprob: -5.436342716217041
    8. '’arrivée' → logprob: -6.186342716217041
    9. 'but' → logprob: -6.311342716217041
    10. ''arrive' → logprob: -6.436342716217041

Token 157: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7069403529167175
    2. 'for' → logprob: -0.7069403529167175
    3. ' for' → logprob: -4.456940174102783
    4. '<|end|>' → logprob: -6.456940174102783
    5. ' 
' → logprob: -8.331940650939941
    6. 'def' → logprob: -9.581940650939941
    7. '
' → logprob: -9.956940650939941
    8. '```' → logprob: -10.206940650939941
    9. '<|end|>' → logprob: -10.581940650939941
    10. '

' → logprob: -10.706940650939941

Token 158: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000217006730963476
    2. 'def' → logprob: -9.00021743774414
    3. ' for' → logprob: -9.75021743774414
    4. 'result' → logprob: -10.87521743774414
    5. 'results' → logprob: -12.25021743774414
    6. '
' → logprob: -12.62521743774414
    7. 'output' → logprob: -12.87521743774414
    8. 'positions' → logprob: -13.25021743774414
    9. '#' → logprob: -14.62521743774414
    10. 'res' → logprob: -14.62521743774414

Token 159: ' move' (ID: 5275)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.5016799569129944
    2. ' i' → logprob: -1.1266798973083496
    3. ' piece' → logprob: -3.2516798973083496
    4. ' move' → logprob: -4.50167989730835
    5. 'i' → logprob: -5.12667989730835
    6. ' p' → logprob: -5.37667989730835
    7. 'op' → logprob: -6.00167989730835
    8. 'piece' → logprob: -6.37667989730835
    9. ' idx' → logprob: -7.00167989730835
    10. ' x' → logprob: -7.00167989730835

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.26764822006225586
    2. '_' → logprob: -1.6426482200622559
    3. '_piece' → logprob: -3.642648220062256
    4. '_i' → logprob: -5.392648220062256
    5. 'in' → logprob: -5.892648220062256
    6. 'er' → logprob: -6.392648220062256
    7. '_idx' → logprob: -6.892648220062256
    8. '_index' → logprob: -7.142648220062256
    9. '_num' → logprob: -7.267648220062256
    10. '_in' → logprob: -7.392648220062256

Token 161: ' operations' (ID: 12084)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operations' → logprob: -0.007617275230586529
    2. ' operations' → logprob: -4.882617473602295
    3. 'positions' → logprob: -11.882616996765137
    4. 'ops' → logprob: -14.132616996765137
    5. '   ' → logprob: -14.257616996765137
    6. '.operations' → logprob: -14.507616996765137
    7. 'operators' → logprob: -14.757616996765137
    8. 'M' → logprob: -15.007616996765137
    9. 'oper' → logprob: -15.007616996765137
    10. 'm' → logprob: -15.632616996765137

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00046045915223658085
    2. ' :' → logprob: -8.000460624694824
    3. ':
' → logprob: -9.000460624694824
    4. ' :
' → logprob: -14.625460624694824
    5. '):' → logprob: -15.000460624694824
    6. ',' → logprob: -15.000460624694824
    7. ':
' → logprob: -16.250459671020508
    8. '=' → logprob: -16.625459671020508
    9. ':int' → logprob: -16.875459671020508
    10. ':

' → logprob: -17.375459671020508

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.99876469373703
    2. '<|end|>' → logprob: -1.4987647533416748
    3. ' 
' → logprob: -1.6237647533416748
    4. ' ' → logprob: -1.8737647533416748
    5. ' positions' → logprob: -3.998764753341675
    6. '    
' → logprob: -4.498764514923096
    7. '    ' → logprob: -5.498764514923096
    8. ' #' → logprob: -5.873764514923096
    9. 'positions' → logprob: -6.123764514923096
    10. '<|end|>' → logprob: -6.123764514923096

Token 164: ' piece' (ID: 9047)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24949301779270172
    2. 'current' → logprob: -1.8744930028915405
    3. 'pos' → logprob: -3.62449312210083
    4. '#' → logprob: -4.24949312210083
    5. 'old' → logprob: -4.62449312210083
    6. ' current' → logprob: -4.99949312210083
    7. 'index' → logprob: -5.62449312210083
    8. 'idx' → logprob: -6.24949312210083
    9. 'positions' → logprob: -7.12449312210083
    10. ' old' → logprob: -7.37449312210083

Token 165: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.22203852236270905
    2. '_idx' → logprob: -2.097038507461548
    3. '_pos' → logprob: -2.722038507461548
    4. '_' → logprob: -5.222038745880127
    5. '_position' → logprob: -5.597038745880127
    6. ' =' → logprob: -7.597038745880127
    7. '_num' → logprob: -8.097038269042969
    8. ' -=' → logprob: -8.347038269042969
    9. '_id' → logprob: -8.972038269042969
    10. '=' → logprob: -9.597038269042969

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007608635816723108
    2. '=' → logprob: -4.882608413696289
    3. ' ' → logprob: -13.632608413696289
    4. '-' → logprob: -14.632608413696289
    5. ' -=' → logprob: -15.132608413696289
    6. ' =
' → logprob: -16.38260841369629
    7. ' ' → logprob: -16.50760841369629
    8. ')' → logprob: -16.75760841369629
    9. ' =
' → logprob: -16.75760841369629
    10. 's' → logprob: -17.00760841369629

Token 167: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.03804241120815277
    2. ' move' → logprob: -3.2880423069000244
    3. '	move' → logprob: -14.413042068481445
    4. '   ' → logprob: -15.413042068481445
    5. '(move' → logprob: -15.663042068481445
    6. ' ' → logprob: -17.413042068481445
    7. 'piece' → logprob: -17.913042068481445
    8. 'm' → logprob: -18.038042068481445
    9. '.move' → logprob: -18.038042068481445
    10. 'moves' → logprob: -18.038042068481445

Token 168: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014239664189517498
    2. '-' → logprob: -4.26423978805542
    3. ' ' → logprob: -9.514239311218262
    4. ' ' → logprob: -13.514239311218262
    5. '   ' → logprob: -14.764239311218262
    6. '1' → logprob: -15.389239311218262
    7. '  ' → logprob: -16.014240264892578
    8. '
' → logprob: -16.389240264892578
    9. '```' → logprob: -17.264240264892578
    10. '	' → logprob: -17.576740264892578

Token 169: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.250003814697266
    4. '<|end|>' → logprob: -19.562503814697266
    5. '
' → logprob: -20.187503814697266
    6. '   ' → logprob: -20.312503814697266
    7. '১' → logprob: -20.750003814697266
    8. '１' → logprob: -20.812503814697266
    9. '१' → logprob: -20.875003814697266
    10. '۱' → logprob: -20.937503814697266

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -16.750003814697266
    4. '<|end|>' → logprob: -17.250003814697266
    5. '
' → logprob: -18.187503814697266
    6. '   ' → logprob: -18.500003814697266
    7. '১' → logprob: -19.250003814697266
    8. '१' → logprob: -19.250003814697266
    9. '۱' → logprob: -19.375003814697266
    10. '

' → logprob: -19.500003814697266

Token 171: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3905716836452484
    2. ' 
' → logprob: -1.6405717134475708
    3. '   
' → logprob: -3.7655715942382812
    4. ' ' → logprob: -3.8905715942382812
    5. '    
' → logprob: -3.8905715942382812
    6. '   ' → logprob: -4.390571594238281
    7. '  
' → logprob: -4.515571594238281
    8. '     
' → logprob: -4.890571594238281
    9. '#' → logprob: -5.015571594238281
    10. '<|end|>' → logprob: -5.015571594238281

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061859216541051865
    2. 'current' → logprob: -3.561859130859375
    3. '
' → logprob: -3.936859130859375
    4. '    
' → logprob: -5.436859130859375
    5. ' current' → logprob: -6.811859130859375
    6. 'new' → logprob: -6.811859130859375
    7. 'old' → logprob: -6.936859130859375
    8. 'positions' → logprob: -6.936859130859375
    9. 'position' → logprob: -7.186859130859375
    10. '#' → logprob: -7.186859130859375

Token 173: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.2468542903661728
    2. ' current' → logprob: -2.496854305267334
    3. 'old' → logprob: -2.996854305267334
    4. 'occupied' → logprob: -3.371854305267334
    5. 'new' → logprob: -4.121854305267334
    6. '#' → logprob: -4.996854305267334
    7. '   ' → logprob: -5.246854305267334
    8. 'positions' → logprob: -5.371854305267334
    9. ' new' → logprob: -5.746854305267334
    10. 'position' → logprob: -5.996854305267334

Token 174: '_pos' (ID: 14692)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.577229917049408
    2. '_pos' → logprob: -0.827229917049408
    3. 'pos' → logprob: -7.077229976654053
    4. 'position' → logprob: -7.827229976654053
    5. '_' → logprob: -10.952229499816895
    6. 'Pos' → logprob: -11.202229499816895
    7. 'Position' → logprob: -12.077229499816895
    8. '_positions' → logprob: -12.702229499816895
    9. ' =' → logprob: -13.202229499816895
    10. '=' → logprob: -13.577229499816895

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994632631540298
    2. '=' → logprob: -2.6949462890625
    3. ' ' → logprob: -12.4449462890625
    4. ' ' → logprob: -12.6949462890625
    5. '   ' → logprob: -13.9449462890625
    6. '[' → logprob: -14.1949462890625
    7. ']' → logprob: -14.8199462890625
    8. ')' → logprob: -15.5699462890625
    9. '  ' → logprob: -15.8199462890625
    10. ',' → logprob: -16.0699462890625

Token 176: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.25193944573402405
    2. ' positions' → logprob: -1.5019394159317017
    3. '   ' → logprob: -12.12693977355957
    4. 'position' → logprob: -13.50193977355957
    5. '.positions' → logprob: -13.50193977355957
    6. '_positions' → logprob: -13.75193977355957
    7. ' posiciones' → logprob: -15.37693977355957
    8. '
' → logprob: -15.62693977355957
    9. ' ' → logprob: -15.75193977355957
    10. '```' → logprob: -16.12693977355957

Token 177: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -4.656383680412546e-05
    2. '[' → logprob: -10.000046730041504
    3. ' [' → logprob: -14.750046730041504
    4. '[
' → logprob: -15.375046730041504
    5. '```' → logprob: -16.125045776367188
    6. '[position' → logprob: -16.375045776367188
    7. '[c' → logprob: -17.250045776367188
    8. '[current' → logprob: -17.375045776367188
    9. 'piece' → logprob: -17.375045776367188
    10. '[pos' → logprob: -17.375045776367188

Token 178: 'iece' (ID: 12778)
  Prédit: 'iece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iece' → logprob: -6.52788148727268e-05
    2. 'piece' → logprob: -9.750064849853516
    3. 'ece' → logprob: -12.750064849853516
    4. '```' → logprob: -14.000064849853516
    5. '_piece' → logprob: -14.250064849853516
    6. 'ie' → logprob: -14.250064849853516
    7. '   ' → logprob: -14.625064849853516
    8. ' ' → logprob: -15.000064849853516
    9. 'e' → logprob: -15.500064849853516
    10. 'ieces' → logprob: -15.750064849853516

Token 179: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0006688326830044389
    2. 'ce' → logprob: -7.375669002532959
    3. 'index' → logprob: -11.2506685256958
    4. 'e' → logprob: -11.6256685256958
    5. 'ex' → logprob: -12.6256685256958
    6. 'ct' → logprob: -12.7506685256958
    7. 'x' → logprob: -12.8756685256958
    8. 'ces' → logprob: -13.1256685256958
    9. 'nd' → logprob: -13.1256685256958
    10. 'dex' → logprob: -13.2506685256958

Token 180: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5898034572601318
    2. ']' → logprob: -0.8398034572601318
    3. ')
' → logprob: -5.214803695678711
    4. '   ' → logprob: -6.089803695678711
    5. ']
' → logprob: -6.089803695678711
    6. ' ]' → logprob: -6.839803695678711
    7. ' )' → logprob: -7.089803695678711
    8. '#' → logprob: -7.714803695678711
    9. '<|end|>' → logprob: -7.714803695678711
    10. '
' → logprob: -7.839803695678711

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.577980637550354
    2. 'next' → logprob: -1.577980637550354
    3. ' next' → logprob: -2.4529805183410645
    4. 'new' → logprob: -2.5779805183410645
    5. ' new' → logprob: -2.9529805183410645
    6. '    
' → logprob: -5.0779805183410645
    7. '```' → logprob: -5.2029805183410645
    8. 'while' → logprob: -6.5779805183410645
    9. '
' → logprob: -7.0779805183410645
    10. 'target' → logprob: -7.4529805183410645

Token 182: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.5941218137741089
    2. 'new' → logprob: -0.8441218137741089
    3. 'target' → logprob: -5.094121932983398
    4. 'positions' → logprob: -5.844121932983398
    5. 'occupied' → logprob: -6.094121932983398
    6. ' new' → logprob: -6.719121932983398
    7. 'desired' → logprob: -6.969121932983398
    8. ' next' → logprob: -6.969121932983398
    9. 'while' → logprob: -7.094121932983398
    10. 'if' → logprob: -7.094121932983398

Token 183: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.000249061529757455
    2. '_' → logprob: -8.750248908996582
    3. '_position' → logprob: -9.500248908996582
    4. 'pos' → logprob: -12.000248908996582
    5. ' _' → logprob: -12.500248908996582
    6. '_positions' → logprob: -13.125248908996582
    7. 'Pos' → logprob: -14.125248908996582
    8. '_case' → logprob: -14.125248908996582
    9. '_space' → logprob: -14.625248908996582
    10. '_val' → logprob: -14.875248908996582

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269427090883255
    2. '=' → logprob: -2.1269426345825195
    3. '=current' → logprob: -11.75194263458252
    4. ' ' → logprob: -13.50194263458252
    5. ' =
' → logprob: -13.87694263458252
    6. ')' → logprob: -13.87694263458252
    7. 'current' → logprob: -14.25194263458252
    8. '=int' → logprob: -14.75194263458252
    9. 's' → logprob: -15.00194263458252
    10. '<|end|>' → logprob: -15.25194263458252

Token 185: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20152132213115692
    2. ' current' → logprob: -1.7015212774276733
    3. '   ' → logprob: -9.451520919799805
    4. '(current' → logprob: -10.826520919799805
    5. '	current' → logprob: -12.701520919799805
    6. '[current' → logprob: -13.451520919799805
    7. '
' → logprob: -13.576520919799805
    8. ' ' → logprob: -14.201520919799805
    9. ' ' → logprob: -14.201520919799805
    10. '$current' → logprob: -14.201520919799805

Token 186: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.3358446166384965e-05
    2. 'pos' → logprob: -10.000053405761719
    3. '_' → logprob: -12.000053405761719
    4. '+' → logprob: -14.500053405761719
    5. ' _' → logprob: -14.750053405761719
    6. 'Pos' → logprob: -15.375053405761719
    7. '_positions' → logprob: -15.375053405761719
    8. '_p' → logprob: -16.37505340576172
    9. '_POS' → logprob: -16.50005340576172
    10. 'positions' → logprob: -16.75005340576172

Token 187: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759515166282654
    2. '+' → logprob: -0.8259515166282654
    3. ' +
' → logprob: -11.95095157623291
    4. '+
' → logprob: -13.07595157623291
    5. ' plus' → logprob: -14.20095157623291
    6. ' -' → logprob: -15.07595157623291
    7. ' ' → logprob: -15.20095157623291
    8. '1' → logprob: -15.20095157623291
    9. '()+' → logprob: -15.20095157623291
    10. ' ' → logprob: -15.32595157623291

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004913145676255226
    2. ' ' → logprob: -7.625491142272949
    3. '2' → logprob: -13.25049114227295
    4. '3' → logprob: -15.00049114227295
    5. '   ' → logprob: -15.62549114227295
    6. '7' → logprob: -15.87549114227295
    7. '4' → logprob: -16.062992095947266
    8. '10' → logprob: -16.375492095947266
    9. '100' → logprob: -16.437992095947266
    10. '```' → logprob: -16.625492095947266

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.464347173576243e-05
    2. ' ' → logprob: -10.37503433227539
    3. '2' → logprob: -13.00003433227539
    4. '3' → logprob: -15.00003433227539
    5. '7' → logprob: -16.37503433227539
    6. '4' → logprob: -16.37503433227539
    7. '10' → logprob: -16.43753433227539
    8. '0' → logprob: -16.50003433227539
    9. '   ' → logprob: -16.75003433227539
    10. '100' → logprob: -16.75003433227539

Token 190: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04411431401968002
    2. 'while' → logprob: -3.544114351272583
    3. ' while' → logprob: -4.919114112854004
    4. '
' → logprob: -5.044114112854004
    5. '	while' → logprob: -8.419114112854004
    6. '    
' → logprob: -8.544114112854004
    7. '```' → logprob: -11.044114112854004
    8. '   
' → logprob: -11.044114112854004
    9. 'if' → logprob: -11.169114112854004
    10. '#' → logprob: -11.169114112854004

Token 191: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6504909992218018
    2. '   ' → logprob: -0.9004909992218018
    3. ' while' → logprob: -2.6504909992218018
    4. 'if' → logprob: -7.525490760803223
    5. '	while' → logprob: -7.525490760803223
    6. '    
' → logprob: -9.775490760803223
    7. ' if' → logprob: -10.150490760803223
    8. '#' → logprob: -10.525490760803223
    9. '<|end|>' → logprob: -12.525490760803223
    10. '```' → logprob: -12.525490760803223

Token 192: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0035426935646682978
    2. '   ' → logprob: -6.003542900085449
    3. 'if' → logprob: -7.378542900085449
    4. ' while' → logprob: -7.878542900085449
    5. '#' (adapté à ' #') → logprob: -9.75354290008545
    6. '	while' → logprob: -12.37854290008545
    7. 'While' → logprob: -14.75354290008545
    8. '    
' → logprob: -15.37854290008545
    9. '```' → logprob: -16.003541946411133
    10. ' if' → logprob: -16.253541946411133

Token 193: ' Vér' (ID: 159169)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.005811125040054321
    2. 'if' → logprob: -5.2558112144470215
    3. '#' → logprob: -8.130810737609863
    4. '   ' → logprob: -8.505810737609863
    5. ' while' → logprob: -9.505810737609863
    6. 'While' → logprob: -12.380810737609863
    7. '```' → logprob: -14.505810737609863
    8. '	while' → logprob: -14.755810737609863
    9. '
' → logprob: -15.255810737609863
    10. ' if' → logprob: -15.380810737609863

Token 194: 'ifie' (ID: 46409)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.01084017101675272
    2. 'ifie' → logprob: -4.760839939117432
    3. 'if' → logprob: -6.260839939117432
    4. 'ification' → logprob: -8.51084041595459
    5. 'ifiez' → logprob: -9.76084041595459
    6. 'ify' → logprob: -10.38584041595459
    7. 'ifer' → logprob: -11.01084041595459
    8. 'ifi' → logprob: -13.13584041595459
    9. '#' → logprob: -13.88584041595459
    10. 'IFIER' → logprob: -14.01084041595459

Token 195: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32825911045074463
    2. 'if' → logprob: -1.4532591104507446
    3. ' si' → logprob: -3.203258991241455
    4. 'si' → logprob: -6.203258991241455
    5. ' next' → logprob: -6.328258991241455
    6. 's' → logprob: -7.953258991241455
    7. ' s' → logprob: -7.953258991241455
    8. 'next' → logprob: -7.953258991241455
    9. ' ' → logprob: -8.328259468078613
    10. '(next' → logprob: -9.453259468078613

Token 196: ' la' (ID: 557)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.03805239871144295
    2. 'next' → logprob: -3.2880523204803467
    3. '(next' → logprob: -12.038052558898926
    4. '	next' → logprob: -12.663052558898926
    5. '[next' → logprob: -14.288052558898926
    6. '_next' → logprob: -15.163052558898926
    7. ' ' → logprob: -15.163052558898926
    8. ' prochaine' → logprob: -15.538052558898926
    9. 'Next' → logprob: -15.913052558898926
    10. ' nex' → logprob: -16.41305160522461

Token 197: ' pièce' (ID: 56132)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.11754176020622253
    2. ' next' → logprob: -2.242541790008545
    3. 'case' → logprob: -6.117541790008545
    4. ' prochaine' → logprob: -6.492541790008545
    5. ' case' → logprob: -7.242541790008545
    6. 'position' → logprob: -9.117541313171387
    7. 'pro' → logprob: -9.742541313171387
    8. '[next' → logprob: -10.992541313171387
    9. '	next' → logprob: -11.242541313171387
    10. '(next' → logprob: -11.492541313171387

Token 198: ' est' (ID: 893)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.5238374471664429
    2. 'next' → logprob: -1.6488374471664429
    3. ' next' → logprob: -2.5238375663757324
    4. ' est' → logprob: -4.023837566375732
    5. '[next' → logprob: -4.023837566375732
    6. 'n' → logprob: -4.523837566375732
    7. 'if' → logprob: -4.773837566375732
    8. ' is' → logprob: -4.898837566375732
    9. ' suivant' → logprob: -5.023837566375732
    10. ' n' → logprob: -5.023837566375732

Token 199: ' déjà' (ID: 21229)
  Prédit: 'occup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occup' → logprob: -0.9888888001441956
    2. 'dans' → logprob: -0.9888888001441956
    3. ' déjà' → logprob: -2.738888740539551
    4. ' dans' → logprob: -2.988888740539551
    5. 'dé' → logprob: -2.988888740539551
    6. 'à' → logprob: -4.363888740539551
    7. 'sur' → logprob: -4.363888740539551
    8. 'already' → logprob: -4.738888740539551
    9. ' sur' → logprob: -5.238888740539551
    10. 'position' → logprob: -5.488888740539551

Token 200: ' sur' (ID: 1512)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.15216590464115143
    2. 'arr' → logprob: -2.5271658897399902
    3. 'at' → logprob: -3.6521658897399902
    4. 'au' → logprob: -4.15216588973999
    5. 'sur' → logprob: -4.27716588973999
    6. ' à' → logprob: -6.02716588973999
    7. ' at' → logprob: -6.77716588973999
    8. 'position' → logprob: -6.77716588973999
    9. 'dé' → logprob: -8.777166366577148
    10. 'on' → logprob: -9.152166366577148

Token 201: ' la' (ID: 557)
  Prédit: 'GO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GO' → logprob: -0.14303621649742126
    2. ' GO' → logprob: -2.018036127090454
    3. ' la' → logprob: -8.893035888671875
    4. ' next' → logprob: -9.893035888671875
    5. ' le' → logprob: -10.018035888671875
    6. 'le' → logprob: -10.518035888671875
    7. 'next' → logprob: -10.643035888671875
    8. 'la' → logprob: -10.768035888671875
    9. ' ' → logprob: -11.018035888671875
    10. '_GO' → logprob: -11.018035888671875

Token 202: ' case' (ID: 1890)
  Prédit: 'GO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GO' → logprob: -0.04105101898312569
    2. 'case' → logprob: -3.416050910949707
    3. 'goal' → logprob: -5.666050910949707
    4. ' case' → logprob: -6.166050910949707
    5. ' GO' → logprob: -6.416050910949707
    6. ' goal' → logprob: -9.791050910949707
    7. 'CASE' → logprob: -10.166050910949707
    8. 'position' → logprob: -11.291050910949707
    9. ' ' → logprob: -11.541050910949707
    10. '_GO' → logprob: -11.791050910949707

Token 203: ' but' (ID: 889)
  Prédit: 'GO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'GO' → logprob: -0.31346702575683594
    2. ' GO' → logprob: -1.313467025756836
    3. 'next' → logprob: -9.813467025756836
    4. '_GO' → logprob: -9.938467025756836
    5. ' next' → logprob: -10.563467025756836
    6. 'goal' → logprob: -10.813467025756836
    7. 'd' → logprob: -11.688467025756836
    8. ' goal' → logprob: -11.813467025756836
    9. ' de' → logprob: -11.938467025756836
    10. ' d' → logprob: -12.063467025756836

Token 204: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001986090559512377
    2. ' if' → logprob: -7.251986026763916
    3. 'if' → logprob: -8.126986503601074
    4. ':' → logprob: -8.126986503601074
    5. ' or' → logprob: -8.376986503601074
    6. ' and' → logprob: -8.626986503601074
    7. ',' → logprob: -9.251986503601074
    8. '.' → logprob: -10.126986503601074
    9. '    ' → logprob: -10.251986503601074
    10. '  ' → logprob: -10.501986503601074

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.726595241460018e-05
    2. '    
' → logprob: -11.50003719329834
    3. ' if' → logprob: -11.62503719329834
    4. '<|end|>' → logprob: -12.37503719329834
    5. 'if' → logprob: -12.75003719329834
    6. ',' → logprob: -13.00003719329834
    7. '
' → logprob: -13.00003719329834
    8. '```' → logprob: -13.12503719329834
    9. ' or' → logprob: -14.00003719329834
    10. '    ' → logprob: -14.25003719329834

Token 206: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32364150881767273
    2. 'if' (adapté à ' if') → logprob: -1.3236415386199951
    3. ' if' → logprob: -4.573641300201416
    4. '	if' → logprob: -12.698641777038574
    5. '```' → logprob: -13.823641777038574
    6. '   ' → logprob: -13.948641777038574
    7. 'while' → logprob: -15.323641777038574
    8. '    
' → logprob: -15.698641777038574
    9. '    ' → logprob: -16.323640823364258
    10. '
' → logprob: -16.448640823364258

Token 207: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.16168388724327087
    2. 'current' → logprob: -1.9116839170455933
    3. ' next' → logprob: -6.911684036254883
    4. 'next' → logprob: -8.286684036254883
    5. ' positions' → logprob: -9.036684036254883
    6. 'positions' → logprob: -9.411684036254883
    7. '   ' → logprob: -12.036684036254883
    8. '	current' → logprob: -13.786684036254883
    9. '(current' → logprob: -14.036684036254883
    10. ' ' → logprob: -14.536684036254883

Token 208: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.37500286102295
    3. 'pos' → logprob: -14.50000286102295
    4. ' _' → logprob: -15.25000286102295
    5. '_position' → logprob: -15.75000286102295
    6. '_p' → logprob: -17.250001907348633
    7. '_positions' → logprob: -17.625001907348633
    8. ' pos' → logprob: -18.375001907348633
    9. '_po' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.875001907348633

Token 209: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06287125498056412
    2. '==' → logprob: -2.812871217727661
    3. ' >=' → logprob: -7.68787145614624
    4. ' ' → logprob: -8.437870979309082
    5. ' !=' → logprob: -9.312870979309082
    6. ' ' → logprob: -9.812870979309082
    7. '>=' → logprob: -9.937870979309082
    8. ' <' → logprob: -11.312870979309082
    9. '!=' → logprob: -11.312870979309082
    10. ')' → logprob: -12.812870979309082

Token 210: ' GO' (ID: 22136)
  Prédit: 'GO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GO' → logprob: -0.20141403377056122
    2. ' GO' → logprob: -1.7014139890670776
    3. ' ' → logprob: -14.576414108276367
    4. ' ' → logprob: -15.951414108276367
    5. '_GO' → logprob: -16.826414108276367
    6. '   ' → logprob: -17.826414108276367
    7. '201' → logprob: -18.701414108276367
    8. '  ' → logprob: -19.576414108276367
    9. '```' → logprob: -19.576414108276367
    10. '
' → logprob: -19.826414108276367

Token 211: 'AL' (ID: 1483)
  Prédit: 'AL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AL' → logprob: -1.8624639324116288e-06
    2. 'A' → logprob: -14.875001907348633
    3. '   ' → logprob: -15.000001907348633
    4. 'Al' → logprob: -15.125001907348633
    5. 'L' → logprob: -15.500001907348633
    6. ' AL' → logprob: -15.875001907348633
    7. 'АЛ' → logprob: -16.125001907348633
    8. '```' → logprob: -16.250001907348633
    9. '
' → logprob: -16.875001907348633
    10. ')' → logprob: -17.250001907348633

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10063017159700394
    2. ':
' → logprob: -2.350630283355713
    3. '   ' → logprob: -7.975630283355713
    4. '       ' → logprob: -10.100629806518555
    5. ' :' → logprob: -11.100629806518555
    6. ':return' → logprob: -11.725629806518555
    7. ' :
' → logprob: -11.975629806518555
    8. ':
' → logprob: -12.350629806518555
    9. '	continue' → logprob: -13.975629806518555
    10. ' continue' → logprob: -14.100629806518555

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003803995903581381
    2. 'continue' → logprob: -6.0038042068481445
    3. '   ' → logprob: -6.7538042068481445
    4. ' continue' → logprob: -8.878804206848145
    5. '```' → logprob: -11.128804206848145
    6. '	continue' → logprob: -12.503804206848145
    7. '
' → logprob: -13.003804206848145
    8. '           ' → logprob: -15.503804206848145
    9. '   ' → logprob: -15.878804206848145
    10. '	' → logprob: -15.878804206848145

Token 214: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07709920406341553
    2. '   ' → logprob: -3.077099323272705
    3. ' continue' → logprob: -3.577099323272705
    4. '       ' → logprob: -9.577098846435547
    5. 'contin' → logprob: -10.202098846435547
    6. '	continue' → logprob: -11.077098846435547
    7. 'continu' → logprob: -11.327098846435547
    8. '```' → logprob: -12.702098846435547
    9. '    ' → logprob: -12.827098846435547
    10. '   ' → logprob: -12.952098846435547

Token 215: ' Ne' (ID: 4475)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.09509240835905075
    2. ' continue' → logprob: -2.470092296600342
    3. '   ' → logprob: -5.220092296600342
    4. 'contin' → logprob: -7.970092296600342
    5. '       ' → logprob: -8.4700927734375
    6. '	continue' → logprob: -9.5950927734375
    7. 'continu' → logprob: -9.9700927734375
    8. ' continu' → logprob: -11.0950927734375
    9. '    ' → logprob: -11.4700927734375
    10. '           ' → logprob: -12.3450927734375

Token 216: ' peut' (ID: 9216)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.25852707028388977
    2. 'continue' → logprob: -1.7585270404815674
    3. 'pas' → logprob: -4.3835272789001465
    4. '   ' → logprob: -4.6335272789001465
    5. 'contin' → logprob: -4.6335272789001465
    6. ' pas' → logprob: -4.6335272789001465
    7. '       ' → logprob: -5.0085272789001465
    8. ' rien' → logprob: -6.3835272789001465
    9. ' continuer' → logprob: -7.2585272789001465
    10. '_pas' → logprob: -7.5085272789001465

Token 217: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.10527033358812332
    2. ' rien' → logprob: -2.9802703857421875
    3. 'pas' → logprob: -4.1052703857421875
    4. 't' → logprob: -4.2302703857421875
    5. ' continuer' → logprob: -5.1052703857421875
    6. '   ' → logprob: -5.4802703857421875
    7. ' continue' → logprob: -6.2302703857421875
    8. ' plus' → logprob: -6.4802703857421875
    9. 'r' → logprob: -6.6052703857421875
    10. 'contin' → logprob: -7.4802703857421875

Token 218: ' avancer' (ID: 151163)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8065334558486938
    2. ' bou' → logprob: -1.8065334558486938
    3. 'pas' → logprob: -1.9315334558486938
    4. 'contin' → logprob: -2.9315333366394043
    5. ' plus' → logprob: -2.9315333366394043
    6. ' avancer' → logprob: -3.0565333366394043
    7. 'bou' → logprob: -3.4315333366394043
    8. ' pas' → logprob: -3.6815333366394043
    9. 'aller' → logprob: -5.181533336639404
    10. ' continuer' → logprob: -5.306533336639404

Token 219: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.437984436750412
    2. '   ' → logprob: -1.4379844665527344
    3. 'continue' → logprob: -2.5629844665527344
    4. ' continue' → logprob: -3.8129844665527344
    5. '
' → logprob: -4.312984466552734
    6. '	continue' → logprob: -6.687984466552734
    7. '           ' → logprob: -6.812984466552734
    8. ',' → logprob: -7.437984466552734
    9. 'contin' → logprob: -7.562984466552734
    10. '    ' → logprob: -8.437984466552734

Token 220: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6323338150978088
    2. 'continue' → logprob: -0.8823338150978088
    3. '
' → logprob: -4.132333755493164
    4. ' continue' → logprob: -4.257333755493164
    5. '       ' → logprob: -4.382333755493164
    6. 'contin' → logprob: -4.882333755493164
    7. ',' → logprob: -6.507333755493164
    8. '.' → logprob: -7.257333755493164
    9. '           ' → logprob: -7.507333755493164
    10. '    
' → logprob: -8.007333755493164

Token 221: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0012794032227247953
    2. ' continue' → logprob: -7.251279354095459
    3. '   ' → logprob: -7.501279354095459
    4. 'contin' → logprob: -11.876279830932617
    5. '       ' → logprob: -12.501279830932617
    6. '	continue' → logprob: -12.751279830932617
    7. 'continu' → logprob: -13.376279830932617
    8. '```' → logprob: -14.376279830932617
    9. 'pass' → logprob: -14.626279830932617
    10. '           ' → logprob: -15.501279830932617

Token 222: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048273224383592606
    2. '    
' → logprob: -3.4232733249664307
    3. '
' → logprob: -4.423273086547852
    4. 'while' → logprob: -6.798273086547852
    5. '   
' → logprob: -8.298273086547852
    6. 'if' → logprob: -8.548273086547852
    7. ' while' → logprob: -8.923273086547852
    8. '    

' → logprob: -9.048273086547852
    9. '    
    
' → logprob: -9.548273086547852
    10. '  ' → logprob: -9.548273086547852

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08794248104095459
    2. 'while' → logprob: -2.587942600250244
    3. '    
' → logprob: -5.337942600250244
    4. ' while' → logprob: -6.462942600250244
    5. '
' → logprob: -6.712942600250244
    6. 'if' → logprob: -7.087942600250244
    7. '#' → logprob: -7.837942600250244
    8. '   
' → logprob: -9.837942123413086
    9. ' 
' → logprob: -10.587942123413086
    10. '  
' → logprob: -10.587942123413086

Token 224: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12962450087070465
    2. '   ' → logprob: -2.379624605178833
    3. 'if' → logprob: -3.754624605178833
    4. '#' (adapté à ' #') → logprob: -5.504624366760254
    5. ' while' → logprob: -6.629624366760254
    6. '    
' → logprob: -9.129624366760254
    7. 'else' → logprob: -10.504624366760254
    8. '	while' → logprob: -11.254624366760254
    9. 'elif' → logprob: -11.504624366760254
    10. ' if' → logprob: -11.629624366760254

Token 225: ' Vér' (ID: 159169)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.040752243250608444
    2. 'if' → logprob: -3.5407521724700928
    3. '#' → logprob: -4.540752410888672
    4. ' while' → logprob: -8.915752410888672
    5. '   ' → logprob: -9.665752410888672
    6. 'While' → logprob: -9.790752410888672
    7. 'else' → logprob: -12.290752410888672
    8. '
' → logprob: -12.540752410888672
    9. 'elif' → logprob: -12.915752410888672
    10. '	while' → logprob: -13.415752410888672

Token 226: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -5.824579784530215e-05
    2. 'if' → logprob: -10.1250581741333
    3. 'ifier' → logprob: -12.2500581741333
    4. 'f' → logprob: -12.6250581741333
    5. 'ife' → logprob: -12.8750581741333
    6. '#' → logprob: -13.5000581741333
    7. 'ifiez' → logprob: -13.6250581741333
    8. 'ifies' → logprob: -14.0000581741333
    9. '
' → logprob: -14.0000581741333
    10. 'i' → logprob: -14.2500581741333

Token 227: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1305328905582428
    2. 'if' → logprob: -2.13053297996521
    3. ' si' → logprob: -5.755532741546631
    4. ' ' → logprob: -8.505533218383789
    5. ' next' → logprob: -9.380533218383789
    6. 'si' → logprob: -9.380533218383789
    7. ' ' → logprob: -10.630533218383789
    8. ' not' → logprob: -11.630533218383789
    9. 'next' → logprob: -12.255533218383789
    10. ' s' → logprob: -12.630533218383789

Token 228: ' la' (ID: 557)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5759515166282654
    2. 'next' → logprob: -0.8259515166282654
    3. '(next' → logprob: -11.82595157623291
    4. ' ' → logprob: -13.57595157623291
    5. '	next' → logprob: -13.57595157623291
    6. '[next' → logprob: -13.70095157623291
    7. 'n' → logprob: -15.70095157623291
    8. 'not' → logprob: -15.82595157623291
    9. ' ' → logprob: -15.95095157623291
    10. '_next' → logprob: -16.075950622558594

Token 229: ' case' (ID: 1890)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.17982271313667297
    2. ' next' → logprob: -1.8048226833343506
    3. ' prochaine' → logprob: -10.92982292175293
    4. 'not' → logprob: -11.55482292175293
    5. '[next' → logprob: -11.67982292175293
    6. 'occupied' → logprob: -11.67982292175293
    7. '(next' → logprob: -12.42982292175293
    8. ' ' → logprob: -12.55482292175293
    9. '	next' → logprob: -12.67982292175293
    10. '
' → logprob: -12.67982292175293

Token 230: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.7542833089828491
    2. ' next' → logprob: -1.0042833089828491
    3. 'next' → logprob: -2.0042834281921387
    4. ' not' → logprob: -4.754283428192139
    5. ' in' → logprob: -5.629283428192139
    6. '_next' → logprob: -5.879283428192139
    7. '   ' → logprob: -6.504283428192139
    8. ' ' → logprob: -6.754283428192139
    9. 'not' → logprob: -6.754283428192139
    10. ' occup' → logprob: -6.754283428192139

Token 231: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5099042057991028
    2. ' not' → logprob: -1.009904146194458
    3. 'in' → logprob: -3.634904146194458
    4. 'not' → logprob: -4.884904384613037
    5. ' dans' → logprob: -7.634904384613037
    6. ' est' → logprob: -8.634903907775879
    7. ' ' → logprob: -8.759903907775879
    8. 'dans' → logprob: -9.509903907775879
    9. ' n' → logprob: -9.884903907775879
    10. ' ==' → logprob: -10.009903907775879

Token 232: ' libre' (ID: 25486)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7754648327827454
    2. 'not' → logprob: -1.6504647731781006
    3. 'in' → logprob: -2.5254647731781006
    4. 'occup' → logprob: -2.6504647731781006
    5. ' in' → logprob: -2.9004647731781006
    6. ' dans' → logprob: -3.1504647731781006
    7. 'occupied' → logprob: -3.1504647731781006
    8. 'dans' → logprob: -3.2754647731781006
    9. ' occup' → logprob: -4.77546501159668
    10. 'ocup' → logprob: -5.65046501159668

Token 233: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002094945637509227
    2. ' if' → logprob: -7.002094745635986
    3. ' and' → logprob: -7.627094745635986
    4. ' or' → logprob: -8.252095222473145
    5. 'if' → logprob: -8.752095222473145
    6. 'and' → logprob: -9.002095222473145
    7. ',' → logprob: -9.127095222473145
    8. '    
' → logprob: -11.002095222473145
    9. '    ' → logprob: -11.627095222473145
    10. '  ' → logprob: -12.127095222473145

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12565091252326965
    2. ' if' → logprob: -2.3756508827209473
    3. ' and' → logprob: -4.375650882720947
    4. 'if' → logprob: -4.500650882720947
    5. 'and' → logprob: -7.250650882720947
    6. ' or' → logprob: -8.000651359558105
    7. '    
' → logprob: -8.875651359558105
    8. '    ' → logprob: -9.250651359558105
    9. ',' → logprob: -9.375651359558105
    10. '  ' → logprob: -10.750651359558105

Token 235: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3715681731700897
    2. ' if' → logprob: -1.371568202972412
    3. '   ' → logprob: -2.871568202972412
    4. 'not' → logprob: -11.621567726135254
    5. '	if' → logprob: -12.496567726135254
    6. ' not' → logprob: -12.621567726135254
    7. '    ' → logprob: -12.871567726135254
    8. '    
' → logprob: -13.121567726135254
    9. ' and' → logprob: -13.371567726135254
    10. '  ' → logprob: -13.621567726135254

Token 236: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.023251185193657875
    2. 'next' → logprob: -3.7732512950897217
    3. '(next' → logprob: -12.7732515335083
    4. ' not' → logprob: -13.2732515335083
    5. '	next' → logprob: -14.3982515335083
    6. 'not' → logprob: -15.2732515335083
    7. '[next' → logprob: -16.273250579833984
    8. '_next' → logprob: -16.773250579833984
    9. ' ' → logprob: -16.898250579833984
    10. ' ' → logprob: -17.148250579833984

Token 237: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.1888679839321412e-05
    2. '_' → logprob: -11.000021934509277
    3. ' _' → logprob: -12.625021934509277
    4. '_not' → logprob: -14.375021934509277
    5. ' not' → logprob: -14.750021934509277
    6. 'pos' → logprob: -15.000021934509277
    7. 'not' → logprob: -15.750021934509277
    8. '_position' → logprob: -16.87502098083496
    9. ')' → logprob: -17.12502098083496
    10. ' in' → logprob: -17.62502098083496

Token 238: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1567913293838501
    2. 'not' → logprob: -2.6567912101745605
    3. ' in' → logprob: -2.6567912101745605
    4. 'in' → logprob: -5.4067912101745605
    5. ' ' → logprob: -8.656791687011719
    6. ' no' → logprob: -9.781791687011719
    7. ' n' → logprob: -10.906791687011719
    8. 'no' → logprob: -11.531791687011719
    9. ')' → logprob: -11.844291687011719
    10. 'n' → logprob: -11.906791687011719

Token 239: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.0005538671393878758
    2. ' occupied' → logprob: -7.500554084777832
    3. 'occup' → logprob: -14.375554084777832
    4. 'occ' → logprob: -16.500553131103516
    5. ' ' → logprob: -16.750553131103516
    6. 'ocup' → logprob: -17.125553131103516
    7. '
' → logprob: -17.375553131103516
    8. '   ' → logprob: -17.500553131103516
    9. '	' → logprob: -18.125553131103516
    10. 'Occupied' → logprob: -18.250553131103516

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02341201901435852
    2. ':
' → logprob: -3.773411989212036
    3. ':return' → logprob: -10.148411750793457
    4. ' :' → logprob: -10.398411750793457
    5. '):' → logprob: -10.648411750793457
    6. ' continue' → logprob: -11.023411750793457
    7. '   ' → logprob: -11.273411750793457
    8. 'continue' → logprob: -11.523411750793457
    9. '==' → logprob: -11.773411750793457
    10. '):
' → logprob: -12.523411750793457

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00479358434677124
    2. 'continue' → logprob: -5.504793643951416
    3. ' continue' → logprob: -7.504793643951416
    4. '   ' → logprob: -8.879793167114258
    5. '#' → logprob: -12.254793167114258
    6. '	continue' → logprob: -12.254793167114258
    7. ':
' → logprob: -12.879793167114258
    8. ':' → logprob: -13.129793167114258
    9. '```' → logprob: -13.129793167114258
    10. ',' → logprob: -13.129793167114258

Token 242: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0159053802490234
    2. 'continue' → logprob: -1.2659053802490234
    3. '   ' → logprob: -1.3909053802490234
    4. 'while' → logprob: -3.2659053802490234
    5. ' continue' → logprob: -3.3909053802490234
    6. '#' (adapté à ' #') → logprob: -3.7659053802490234
    7. '           ' → logprob: -5.765905380249023
    8. 'positions' → logprob: -6.140905380249023
    9. 'next' → logprob: -6.640905380249023
    10. ' while' → logprob: -6.765905380249023

Token 243: ' Ne' (ID: 4475)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6259164810180664
    2. '#' → logprob: -1.0009164810180664
    3. '   ' → logprob: -3.5009164810180664
    4. 'while' → logprob: -4.000916481018066
    5. 'positions' → logprob: -4.250916481018066
    6. 'pass' → logprob: -4.750916481018066
    7. '       ' → logprob: -5.000916481018066
    8. ' continue' → logprob: -5.375916481018066
    9. 'next' → logprob: -5.500916481018066
    10. 'pos' → logprob: -6.125916481018066

Token 244: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5438615679740906
    2. ' continue' → logprob: -1.7938616275787354
    3. 'pas' → logprob: -2.5438616275787354
    4. '   ' → logprob: -2.6688616275787354
    5. '#' → logprob: -3.0438616275787354
    6. '       ' → logprob: -3.6688616275787354
    7. ' pas' → logprob: -4.418861389160156
    8. ' #' → logprob: -5.418861389160156
    9. 'contin' → logprob: -5.793861389160156
    10. 'pass' → logprob: -6.043861389160156

Token 245: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.0028418414294719696
    2. 'pass' → logprob: -6.252841949462891
    3. ' pas' → logprob: -7.252841949462891
    4. 'continue' → logprob: -9.50284194946289
    5. 'not' → logprob: -10.00284194946289
    6. '_pas' → logprob: -10.00284194946289
    7. '   ' → logprob: -10.50284194946289
    8. '       ' → logprob: -12.00284194946289
    9. 'contin' → logprob: -13.87784194946289
    10. ' pass' → logprob: -14.37784194946289

Token 246: ' avancer' (ID: 151163)
  Prédit: ' avancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avancer' → logprob: -0.0037560209166258574
    2. 'avance' → logprob: -6.503756046295166
    3. ' pas' → logprob: -7.128756046295166
    4. 'pas' → logprob: -7.753756046295166
    5. ' avance' → logprob: -7.753756046295166
    6. 'av' → logprob: -8.003755569458008
    7. ' avanc' → logprob: -9.128755569458008
    8. ' avanç' → logprob: -9.878755569458008
    9. ' avan' → logprob: -10.253755569458008
    10. ' avanzar' → logprob: -10.878755569458008

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012369437143206596
    2. 'continue' → logprob: -5.137369632720947
    3. ' continue' → logprob: -5.512369632720947
    4. '
' → logprob: -6.637369632720947
    5. '           ' → logprob: -7.512369632720947
    6. '   ' → logprob: -8.387369155883789
    7. ',' → logprob: -8.887369155883789
    8. '	continue' → logprob: -9.637369155883789
    9. '```' → logprob: -11.387369155883789
    10. '	' → logprob: -11.512369155883789

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02503778599202633
    2. 'continue' → logprob: -4.02503776550293
    3. ' continue' → logprob: -5.02503776550293
    4. '	continue' → logprob: -8.90003776550293
    5. '   ' → logprob: -9.02503776550293
    6. '           ' → logprob: -11.15003776550293
    7. '	' → logprob: -11.52503776550293
    8. '```' → logprob: -12.65003776550293
    9. ',' → logprob: -13.27503776550293
    10. ' ' → logprob: -13.77503776550293

Token 249: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03485237434506416
    2. ' continue' → logprob: -3.4098522663116455
    3. '       ' → logprob: -7.284852504730225
    4. '   ' → logprob: -7.659852504730225
    5. '	continue' → logprob: -10.159852027893066
    6. 'continu' → logprob: -13.034852027893066
    7. ' ' → logprob: -13.159852027893066
    8. 'contin' → logprob: -13.534852027893066
    9. '           ' → logprob: -13.659852027893066
    10. '```' → logprob: -13.659852027893066

Token 250: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046097658574581146
    2. '    
' → logprob: -3.671097755432129
    3. '
' → logprob: -4.046097755432129
    4. ' positions' → logprob: -7.171097755432129
    5. ' 
' → logprob: -7.671097755432129
    6. 'positions' → logprob: -8.546097755432129
    7. '   
' → logprob: -8.671097755432129
    8. '  
' → logprob: -9.171097755432129
    9. '

' → logprob: -9.546097755432129
    10. '     
' → logprob: -9.796097755432129

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15668238699436188
    2. 'positions' → logprob: -2.2816824913024902
    3. '    
' → logprob: -3.9066824913024902
    4. '#' → logprob: -4.15668249130249
    5. ' positions' → logprob: -5.78168249130249
    6. 'occupied' → logprob: -6.15668249130249
    7. 'else' → logprob: -7.90668249130249
    8. ' #' → logprob: -8.406682014465332
    9. '```' → logprob: -8.406682014465332
    10. ' 
' → logprob: -8.656682014465332

Token 252: ' #' (ID: 1069)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5474824905395508
    2. 'occupied' → logprob: -1.2974824905395508
    3. '   ' → logprob: -2.422482490539551
    4. '#' (adapté à ' #') → logprob: -2.922482490539551
    5. ' positions' → logprob: -5.797482490539551
    6. '    
' → logprob: -6.422482490539551
    7. ' occupied' → logprob: -7.797482490539551
    8. ' #' → logprob: -8.17248249053955
    9. '```' → logprob: -9.04748249053955
    10. 'occup' → logprob: -9.42248249053955

Token 253: ' Sinon' (ID: 154924)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.11775476485490799
    2. '#' → logprob: -2.7427546977996826
    3. 'positions' → logprob: -3.2427546977996826
    4. '   ' → logprob: -4.992754936218262
    5. ' occupied' → logprob: -7.867754936218262
    6. ' positions' → logprob: -8.492754936218262
    7. ' #' → logprob: -9.242754936218262
    8. '    
' → logprob: -9.617754936218262
    9. 'occup' → logprob: -10.367754936218262
    10. '```' → logprob: -11.617754936218262

Token 254: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008518358692526817
    2. 'positions' → logprob: -5.633518218994141
    3. '#' → logprob: -6.508518218994141
    4. '
' → logprob: -7.008518218994141
    5. ' positions' → logprob: -7.133518218994141
    6. '    
' → logprob: -7.133518218994141
    7. ':' → logprob: -7.633518218994141
    8. ':
' → logprob: -9.00851821899414
    9. 'occupied' → logprob: -9.38351821899414
    10. ' #' → logprob: -9.88351821899414

Token 255: ' la' (ID: 557)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.08414425700902939
    2. ' occupied' → logprob: -3.459144353866577
    3. '#' → logprob: -3.584144353866577
    4. '   ' → logprob: -3.959144353866577
    5. ' #' → logprob: -7.084144115447998
    6. ' positions' → logprob: -7.334144115447998
    7. 'positions' → logprob: -7.459144115447998
    8. '    
' → logprob: -8.959144592285156
    9. ' ' → logprob: -9.959144592285156
    10. 'occup' → logprob: -10.084144592285156

Token 256: ' pièce' (ID: 56132)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6889126300811768
    2. 'occupied' → logprob: -1.1889126300811768
    3. 'positions' → logprob: -1.9389126300811768
    4. 'piece' → logprob: -4.063912391662598
    5. '   ' → logprob: -4.688912391662598
    6. ' occupied' → logprob: -5.063912391662598
    7. 'position' → logprob: -5.688912391662598
    8. ' positions' → logprob: -5.813912391662598
    9. ' #' → logprob: -6.063912391662598
    10. '
' → logprob: -6.188912391662598

Token 257: ' avance' (ID: 81376)
  Prédit: 'avance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avance' → logprob: -0.8313403725624084
    2. ' avance' → logprob: -0.9563403725624084
    3. '#' → logprob: -3.7063403129577637
    4. 'occup' → logprob: -4.081340312957764
    5. 's' → logprob: -4.206340312957764
    6. 'advance' → logprob: -4.331340312957764
    7. 'dé' → logprob: -4.581340312957764
    8. '_av' → logprob: -5.081340312957764
    9. 'positions' → logprob: -5.081340312957764
    10. '_index' → logprob: -5.081340312957764

Token 258: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007631112355738878
    2. '    
' → logprob: -5.632631301879883
    3. '
' → logprob: -5.882631301879883
    4. 'positions' → logprob: -7.882631301879883
    5. ' positions' → logprob: -8.382631301879883
    6. '   
' → logprob: -8.632631301879883
    7. '  
' → logprob: -9.132631301879883
    8. 'occupied' → logprob: -9.132631301879883
    9. '  ' → logprob: -9.632631301879883
    10. '#' → logprob: -10.007631301879883

Token 259: ''une' (ID: 13337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011558439582586288
    2. 'un' → logprob: -4.761558532714844
    3. ' ' → logprob: -7.011558532714844
    4. 'e' → logprob: -7.136558532714844
    5. 'une' → logprob: -7.261558532714844
    6. ''un' → logprob: -8.011558532714844
    7. ''une' → logprob: -9.136558532714844
    8. '```' → logprob: -10.886558532714844
    9. ' un' → logprob: -11.011558532714844
    10. 'u' → logprob: -11.261558532714844

Token 260: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.014220389537513256
    2. ' case' → logprob: -4.639220237731934
    3. 'position' → logprob: -5.514220237731934
    4. ' unité' → logprob: -8.264220237731934
    5. 'unit' → logprob: -9.639220237731934
    6. ' position' → logprob: -9.889220237731934
    7. 'pos' → logprob: -10.514220237731934
    8. 'place' → logprob: -11.764220237731934
    9. ' ' → logprob: -12.514220237731934
    10. '1' → logprob: -12.639220237731934

Token 261: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45097118616104126
    2. 'occupied' → logprob: -1.2009711265563965
    3. ' occupied' → logprob: -3.7009711265563965
    4. '
' → logprob: -4.2009711265563965
    5. '    
' → logprob: -4.7009711265563965
    6. 'positions' → logprob: -5.0759711265563965
    7. ' positions' → logprob: -5.8259711265563965
    8. '  
' → logprob: -6.7009711265563965
    9. '   
' → logprob: -6.9509711265563965
    10. '#' → logprob: -7.2009711265563965

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030560730025172234
    2. 'occupied' → logprob: -4.030560493469238
    3. 'positions' → logprob: -5.280560493469238
    4. '    
' → logprob: -5.530560493469238
    5. '
' → logprob: -6.280560493469238
    6. ' positions' → logprob: -7.405560493469238
    7. ' occupied' → logprob: -7.905560493469238
    8. '  
' → logprob: -8.905560493469238
    9. ' 
' → logprob: -10.030560493469238
    10. 'occup' → logprob: -10.030560493469238

Token 263: ' #' (ID: 1069)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.0038663470186293125
    2. '   ' → logprob: -6.253866195678711
    3. ' occupied' → logprob: -6.503866195678711
    4. 'positions' → logprob: -7.878866195678711
    5. ' positions' → logprob: -10.753866195678711
    6. '    
' → logprob: -10.878866195678711
    7. '
' → logprob: -12.128866195678711
    8. 'occup' → logprob: -12.128866195678711
    9. '```' → logprob: -12.378866195678711
    10. ' 
' → logprob: -13.753866195678711

Token 264: ' On' (ID: 2160)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.00160032173153013
    2. '   ' → logprob: -7.00160026550293
    3. 'positions' → logprob: -7.87660026550293
    4. ' occupied' → logprob: -8.12660026550293
    5. ' positions' → logprob: -11.62660026550293
    6. '    
' → logprob: -13.50160026550293
    7. '#' → logprob: -13.75160026550293
    8. 'occup' → logprob: -13.87660026550293
    9. '
' → logprob: -14.75160026550293
    10. '```' → logprob: -15.62660026550293

Token 265: ' met' (ID: 1421)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.18064109981060028
    2. ' occupied' → logprob: -1.9306410551071167
    3. '   ' → logprob: -4.180641174316406
    4. ' positions' → logprob: -6.805641174316406
    5. 'positions' → logprob: -6.930641174316406
    6. 'occup' → logprob: -7.430641174316406
    7. '```' → logprob: -8.055641174316406
    8. '.' → logprob: -8.305641174316406
    9. '.remove' → logprob: -8.305641174316406
    10. '#' → logprob: -8.555641174316406

Token 266: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04501236602663994
    2. 'à' → logprob: -3.4200124740600586
    3. 'positions' → logprob: -5.795012474060059
    4. '```' → logprob: -6.295012474060059
    5. ' ' → logprob: -6.670012474060059
    6. '#' → logprob: -6.795012474060059
    7. ' a' → logprob: -6.920012474060059
    8. ' positions' → logprob: -7.045012474060059
    9. ' #' → logprob: -8.045012474060059
    10. '_positions' → logprob: -8.170012474060059

Token 267: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.014804423786699772
    2. ' jour' → logprob: -4.264804363250732
    3. 'day' → logprob: -7.889804363250732
    4. '```' → logprob: -8.51480484008789
    5. 'jours' → logprob: -9.88980484008789
    6. 'jou' → logprob: -12.13980484008789
    7. ' jours' → logprob: -12.76480484008789
    8. 'Jour' → logprob: -13.26480484008789
    9. 'jourd' → logprob: -13.76480484008789
    10. ' ' → logprob: -13.76480484008789

Token 268: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.02223888225853443
    2. ' occupied' → logprob: -4.772238731384277
    3. '   ' → logprob: -4.897238731384277
    4. 'positions' → logprob: -5.272238731384277
    5. ' positions' → logprob: -7.147238731384277
    6. 'occup' → logprob: -10.022238731384277
    7. ' ' → logprob: -10.897238731384277
    8. '  ' → logprob: -11.022238731384277
    9. '    ' → logprob: -11.272238731384277
    10. ')' → logprob: -11.647238731384277

Token 269: ' en' (ID: 469)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0033477479591965675
    2. '.' → logprob: -6.628347873687744
    3. 'occupied' → logprob: -6.753347873687744
    4. '   ' → logprob: -7.628347873687744
    5. 'remove' → logprob: -8.378347396850586
    6. ' .' → logprob: -10.253347396850586
    7. ')' → logprob: -10.503347396850586
    8. '
' → logprob: -11.003347396850586
    9. 'removed' → logprob: -11.253347396850586
    10. ' occupied' → logprob: -11.503347396850586

Token 270: ' retir' (ID: 35638)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.9135839939117432
    2. 'removed' → logprob: -1.7885839939117432
    3. 'remove' → logprob: -1.9135839939117432
    4. 'occupied' → logprob: -2.163583993911743
    5. '.remove' → logprob: -2.413583993911743
    6. ' removing' → logprob: -3.288583993911743
    7. '   ' → logprob: -4.038583755493164
    8. '
' → logprob: -4.913583755493164
    9. 'lever' → logprob: -5.788583755493164
    10. ' enlever' → logprob: -6.163583755493164

Token 271: 'ant' (ID: 493)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.6936075687408447
    2. 'ant' → logprob: -0.8186075687408447
    3. ' occupied' → logprob: -4.193607330322266
    4. 'oving' → logprob: -4.318607330322266
    5. 'e' → logprob: -4.693607330322266
    6. 'oved' → logprob: -5.068607330322266
    7. 'ving' → logprob: -5.818607330322266
    8. 'ing' → logprob: -5.943607330322266
    9. 'ent' → logprob: -6.693607330322266
    10. 'et' → logprob: -6.818607330322266

Token 272: ' l' (ID: 305)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.005250949412584305
    2. ' current' → logprob: -5.505250930786133
    3. '(current' → logprob: -6.755250930786133
    4. '(' → logprob: -13.130250930786133
    5. '	current' → logprob: -13.130250930786133
    6. 'positions' → logprob: -13.380250930786133
    7. 'cur' → logprob: -14.380250930786133
    8. '{' → logprob: -14.880250930786133
    9. '$current' → logprob: -15.630250930786133
    10. '[current' → logprob: -16.005250930786133

Token 273: ''' (ID: 6)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2524934411048889
    2. ' current' → logprob: -1.5024933815002441
    3. 'positions' → logprob: -8.127493858337402
    4. '(current' → logprob: -8.627493858337402
    5. '[current' → logprob: -10.377493858337402
    6. 'e' → logprob: -10.627493858337402
    7. ' positions' → logprob: -11.627493858337402
    8. '	current' → logprob: -12.502493858337402
    9. '_current' → logprob: -12.627493858337402
    10. '=current' → logprob: -12.627493858337402

Token 274: 'ancienne' (ID: 161355)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0012140447506681085
    2. ' current' → logprob: -6.751214027404785
    3. 'positions' → logprob: -10.251214027404785
    4. 'cur' → logprob: -12.626214027404785
    5. '(current' → logprob: -12.751214027404785
    6. 'curr' → logprob: -14.501214027404785
    7. '[current' → logprob: -14.501214027404785
    8. 'position' → logprob: -15.001214027404785
    9. '	current' → logprob: -15.626214027404785
    10. '$current' → logprob: -15.876214027404785

Token 275: ' position' (ID: 4010)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.22812636196613312
    2. '(current' → logprob: -2.353126287460327
    3. ' current' → logprob: -2.978126287460327
    4. 'position' → logprob: -3.103126287460327
    5. 'pos' → logprob: -4.728126525878906
    6. '[current' → logprob: -7.103126525878906
    7. ' position' → logprob: -7.228126525878906
    8. 'positions' → logprob: -7.478126525878906
    9. '_current' → logprob: -7.728126525878906
    10. '_pos' → logprob: -7.978126525878906

Token 276: '
' (ID: 198)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.30277666449546814
    2. '   ' → logprob: -1.4277766942977905
    3. 'positions' → logprob: -5.05277681350708
    4. ')' → logprob: -5.42777681350708
    5. ' occupied' → logprob: -5.80277681350708
    6. '.' → logprob: -6.05277681350708
    7. '(' → logprob: -6.67777681350708
    8. '.remove' → logprob: -7.05277681350708
    9. ' (' → logprob: -7.42777681350708
    10. ' and' → logprob: -7.92777681350708

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4342833161354065
    2. 'occupied' → logprob: -1.0592832565307617
    3. ')' → logprob: -5.934283256530762
    4. ' occupied' → logprob: -6.184283256530762
    5. ')
' → logprob: -8.809283256530762
    6. '    
' → logprob: -8.809283256530762
    7. '.' → logprob: -8.934283256530762
    8. ',' → logprob: -9.684283256530762
    9. 'occup' → logprob: -9.684283256530762
    10. '
' → logprob: -9.809283256530762

Token 278: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' (adapté à ' occupied') → logprob: -0.17237098515033722
    2. ' occupied' → logprob: -1.9223710298538208
    3. '   ' → logprob: -4.422370910644531
    4. 'occup' → logprob: -11.172370910644531
    5. '    
' → logprob: -11.172370910644531
    6. ')' → logprob: -11.547370910644531
    7. ' ' → logprob: -12.297370910644531
    8. 'Occupied' → logprob: -12.672370910644531
    9. ' ocupado' → logprob: -12.797370910644531
    10. 'occ' → logprob: -12.922370910644531

Token 279: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0011846343986690044
    2. '.' → logprob: -6.751184463500977
    3. '.dis' → logprob: -11.376184463500977
    4. ' .' → logprob: -12.876184463500977
    5. 'remove' → logprob: -15.501184463500977
    6. '.Remove' → logprob: -15.876184463500977
    7. '   ' → logprob: -18.001184463500977
    8. ' remove' → logprob: -18.251184463500977
    9. '	remove' → logprob: -18.251184463500977
    10. '.erase' → logprob: -19.126184463500977

Token 280: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0005854414775967598
    2. '(' → logprob: -7.500585556030273
    3. 'current' → logprob: -10.375585556030273
    4. '(cur' → logprob: -14.375585556030273
    5. '(curr' → logprob: -14.875585556030273
    6. '(
' → logprob: -15.625585556030273
    7. ' (' → logprob: -16.000585556030273
    8. ' current' → logprob: -16.750585556030273
    9. '(previous' → logprob: -17.000585556030273
    10. '(c' → logprob: -17.500585556030273

Token 281: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.553032628493384e-05
    2. 'pos' → logprob: -9.625075340270996
    3. '_positions' → logprob: -12.250075340270996
    4. 'positions' → logprob: -13.125075340270996
    5. '[pos' → logprob: -13.250075340270996
    6. '_' → logprob: -14.875075340270996
    7. 'Pos' → logprob: -15.000075340270996
    8. '._' → logprob: -17.625076293945312
    9. ' _' → logprob: -17.625076293945312
    10. '	pos' → logprob: -18.000076293945312

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38719239830970764
    2. ')
' → logprob: -1.1371923685073853
    3. '   ' → logprob: -8.387192726135254
    4. ')
' → logprob: -9.387192726135254
    5. ' )
' → logprob: -12.262192726135254
    6. ')

' → logprob: -12.637192726135254
    7. ' )' → logprob: -14.137192726135254
    8. ' ' → logprob: -14.887192726135254
    9. '),' → logprob: -15.637192726135254
    10. ',' → logprob: -16.137191772460938

Token 283: '   ' (ID: 271)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.32421326637268066
    2. '   ' → logprob: -1.3242132663726807
    3. ' positions' → logprob: -4.574213027954102
    4. '    
' → logprob: -7.699213027954102
    5. 'occupied' → logprob: -10.074213027954102
    6. '```' → logprob: -10.699213027954102
    7. '.positions' → logprob: -11.324213027954102
    8. '  
' → logprob: -11.574213027954102
    9. '   
' → logprob: -11.824213027954102
    10. '   ' → logprob: -12.074213027954102

Token 284: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.009868237189948559
    2. '   ' → logprob: -5.259868144989014
    3. 'occupied' → logprob: -6.259868144989014
    4. ' positions' → logprob: -6.509868144989014
    5. '    
' → logprob: -6.884868144989014
    6. ' 
' → logprob: -9.884868621826172
    7. '  
' → logprob: -10.759868621826172
    8. '.positions' → logprob: -10.884868621826172
    9. '```' → logprob: -11.009868621826172
    10. '#' → logprob: -11.134868621826172

Token 285: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.546478935983032e-05
    2. '[' → logprob: -10.625025749206543
    3. '[position' → logprob: -15.625025749206543
    4. ' [' → logprob: -15.625025749206543
    5. '```' → logprob: -15.875025749206543
    6. '[pos' → logprob: -16.000024795532227
    7. '(piece' → logprob: -16.125024795532227
    8. '   ' → logprob: -16.250024795532227
    9. '\[' → logprob: -16.375024795532227
    10. '[player' → logprob: -16.750024795532227

Token 286: 'iece' (ID: 12778)
  Prédit: 'iece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iece' → logprob: -0.0013501148205250502
    2. 'piece' → logprob: -6.751349925994873
    3. 'ece' → logprob: -9.376350402832031
    4. 'e' → logprob: -11.001350402832031
    5. 'ice' → logprob: -11.251350402832031
    6. '_piece' → logprob: -11.251350402832031
    7. 'ie' → logprob: -11.376350402832031
    8. 'iec' → logprob: -11.376350402832031
    9. '_index' → logprob: -12.001350402832031
    10. 'ec' → logprob: -12.126350402832031

Token 287: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0008438145159743726
    2. 'index' → logprob: -7.2508440017700195
    3. 'iece' → logprob: -10.37584400177002
    4. 'ex' → logprob: -10.87584400177002
    5. 'dex' → logprob: -10.87584400177002
    6. 'e' → logprob: -11.00084400177002
    7. 's' → logprob: -11.75084400177002
    8. 'Index' → logprob: -11.87584400177002
    9. 'ce' → logprob: -12.00084400177002
    10. 'x' → logprob: -12.00084400177002

Token 288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01924951747059822
    2. '=' → logprob: -4.019249439239502
    3. ' =' → logprob: -7.269249439239502
    4. ']=' → logprob: -8.14424991607666
    5. ' ]' → logprob: -9.14424991607666
    6. ')' → logprob: -12.51924991607666
    7. ']+=' → logprob: -13.51924991607666
    8. ' +=' → logprob: -16.894248962402344
    9. '+=' → logprob: -16.894248962402344
    10. ')=' → logprob: -17.394248962402344

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269349306821823
    2. ' =' → logprob: -2.1269350051879883
    3. ' +=' → logprob: -12.501935005187988
    4. '+=' → logprob: -12.751935005187988
    5. '＝' → logprob: -16.376934051513672
    6. '.=' → logprob: -16.501934051513672
    7. '=

' → logprob: -17.376934051513672
    8. ',' → logprob: -17.501934051513672
    9. ')' → logprob: -17.751934051513672
    10. '=}' → logprob: -17.751934051513672

Token 290: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03804149478673935
    2. ' next' → logprob: -3.288041591644287
    3. '	next' → logprob: -18.038042068481445
    4. '(next' → logprob: -18.538042068481445
    5. '[next' → logprob: -18.913042068481445
    6. 'Next' → logprob: -20.788042068481445
    7. '_next' → logprob: -21.163042068481445
    8. '.next' → logprob: -21.538042068481445
    9. '   ' → logprob: -21.663042068481445
    10. ',next' → logprob: -22.788042068481445

Token 291: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00020461321400944144
    2. 'pos' → logprob: -8.500205039978027
    3. 'Pos' → logprob: -14.000205039978027
    4. '_' → logprob: -16.00020408630371
    5. '+' → logprob: -16.50020408630371
    6. '	pos' → logprob: -17.62520408630371
    7. '[pos' → logprob: -17.87520408630371
    8. '_p' → logprob: -18.00020408630371
    9. ' _' → logprob: -18.12520408630371
    10. '__' → logprob: -18.25020408630371

Token 292: '
' (ID: 198)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.3196798264980316
    2. '   ' → logprob: -1.319679856300354
    3. ' occupied' → logprob: -5.0696797370910645
    4. '    
' → logprob: -9.944680213928223
    5. '```' → logprob: -10.944680213928223
    6. ' 
' → logprob: -11.569680213928223
    7. '  
' → logprob: -11.569680213928223
    8. 'occup' → logprob: -11.819680213928223
    9. '
' → logprob: -12.194680213928223
    10. ' ' → logprob: -12.444680213928223

Token 293: '   ' (ID: 271)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.07966087758541107
    2. '   ' → logprob: -2.8296608924865723
    3. ' occupied' → logprob: -4.079660892486572
    4. '    
' → logprob: -8.579660415649414
    5. '
' → logprob: -8.829660415649414
    6. ' 
' → logprob: -9.079660415649414
    7. '```' → logprob: -9.329660415649414
    8. '  
' → logprob: -9.954660415649414
    9. '   
' → logprob: -11.579660415649414
    10. 'occup' → logprob: -12.079660415649414

Token 294: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' (adapté à ' occupied') → logprob: -0.0002978048287332058
    2. '   ' → logprob: -8.250297546386719
    3. ' occupied' → logprob: -10.250297546386719
    4. '    
' → logprob: -14.875297546386719
    5. '```' → logprob: -15.000297546386719
    6. '
' → logprob: -15.625297546386719
    7. 'occ' → logprob: -15.625297546386719
    8. ' 
' → logprob: -16.12529754638672
    9. 'occup' → logprob: -17.12529754638672
    10. '  
' → logprob: -17.50029754638672

Token 295: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.7968066206085496e-05
    2. '.' → logprob: -10.500027656555176
    3. ' .' → logprob: -15.500027656555176
    4. '.remove' → logprob: -16.625028610229492
    5. 'add' → logprob: -18.500028610229492
    6. '   ' → logprob: -18.625028610229492
    7. '.append' → logprob: -18.875028610229492
    8. '.update' → logprob: -19.000028610229492
    9. '.Add' → logprob: -20.500028610229492
    10. '.insert' → logprob: -21.000028610229492

Token 296: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. 'next' → logprob: -15.87500286102295
    4. '(current' → logprob: -19.500001907348633
    5. ' (' → logprob: -19.750001907348633
    6. ' next' → logprob: -20.125001907348633
    7. '[next' → logprob: -20.500001907348633
    8. '(n' → logprob: -21.125001907348633
    9. ',next' → logprob: -21.500001907348633
    10. '(new' → logprob: -21.875001907348633

Token 297: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00033593899570405483
    2. 'pos' → logprob: -8.000335693359375
    3. 'Pos' → logprob: -15.750335693359375
    4. '_' → logprob: -16.250335693359375
    5. 'p' → logprob: -16.750335693359375
    6. 'x' → logprob: -16.875335693359375
    7. 'next' → logprob: -17.000335693359375
    8. 'os' → logprob: -17.125335693359375
    9. '-pos' → logprob: -17.375335693359375
    10. '_p' → logprob: -17.625335693359375

Token 298: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.625008583068848
    4. '<|end|>' → logprob: -17.87500762939453
    5. ')return' → logprob: -18.50000762939453
    6. ')

' → logprob: -18.62500762939453
    7. '}' → logprob: -19.12500762939453
    8. ')
' → logprob: -19.12500762939453
    9. '),' → logprob: -19.25000762939453
    10. '   ' → logprob: -19.62500762939453

Token 299: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02050195261836052
    2. 'for' → logprob: -4.020502090454102
    3. '#' → logprob: -6.770502090454102
    4. '
' → logprob: -6.895502090454102
    5. ' for' → logprob: -9.770502090454102
    6. ' print' → logprob: -10.145502090454102
    7. '```' → logprob: -10.395502090454102
    8. '

' → logprob: -10.645502090454102
    9. '#print' → logprob: -11.270502090454102
    10. ')' → logprob: -11.395502090454102

Token 300: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15707358717918396
    2. '#' → logprob: -2.407073497772217
    3. 'for' → logprob: -2.907073497772217
    4. ' print' → logprob: -8.157073974609375
    5. ' for' → logprob: -8.782073974609375
    6. '#print' → logprob: -9.032073974609375
    7. 'positions' → logprob: -10.407073974609375
    8. ' #' → logprob: -10.907073974609375
    9. 'result' → logprob: -11.282073974609375
    10. '
' → logprob: -12.032073974609375

Token 301: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.8558089137077332
    2. 'ichage' → logprob: -0.8558089137077332
    3. 'iche' → logprob: -2.355808973312378
    4. '#' → logprob: -2.980808973312378
    5. 'ich' → logprob: -5.730808734893799
    6. '   ' → logprob: -7.480808734893799
    7. 'ic' → logprob: -8.355809211730957
    8. 'iches' → logprob: -8.605809211730957
    9. 'f' → logprob: -9.980809211730957
    10. '```' → logprob: -9.980809211730957

Token 302: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011743901995941997
    2. 'for' → logprob: -6.751174449920654
    3. ' print' → logprob: -12.876173973083496
    4. '
' → logprob: -13.626173973083496
    5. '```' → logprob: -15.626173973083496
    6. ' for' → logprob: -16.001174926757812
    7. '#' → logprob: -18.126174926757812
    8. 'prin' → logprob: -18.501174926757812
    9. '#print' → logprob: -18.876174926757812
    10. '  
' → logprob: -19.251174926757812

Token 303: ' résultat' (ID: 62556)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05363231524825096
    2. 'positions' → logprob: -3.8036322593688965
    3. 'result' → logprob: -4.1786322593688965
    4. '"' → logprob: -5.4286322593688965
    5. 's' → logprob: -5.6786322593688965
    6. 'print' → logprob: -5.9286322593688965
    7. ' résultat' → logprob: -6.9286322593688965
    8. ' '' → logprob: -7.0536322593688965
    9. ' resultat' → logprob: -7.5536322593688965
    10. ' ' → logprob: -8.303632736206055

Token 304: ' :' (ID: 712)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001589618914294988
    2. 'for' → logprob: -8.75015926361084
    3. ' print' → logprob: -14.62515926361084
    4. '```' → logprob: -18.875158309936523
    5. '
' → logprob: -19.000158309936523
    6. 'prin' → logprob: -19.750158309936523
    7. ' for' → logprob: -20.000158309936523
    8. '#' → logprob: -20.750158309936523
    9. '#print' → logprob: -21.000158309936523
    10. 'result' → logprob: -22.250158309936523

Token 305: ' position' (ID: 4010)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001305950863752514
    2. 'for' → logprob: -9.000130653381348
    3. ' print' → logprob: -11.875130653381348
    4. '```' → logprob: -16.75012969970703
    5. 'prin' → logprob: -17.62512969970703
    6. ' for' → logprob: -17.87512969970703
    7. '   ' → logprob: -18.25012969970703
    8. '
' → logprob: -18.62512969970703
    9. '#' → logprob: -19.37512969970703
    10. '    
' → logprob: -19.75012969970703

Token 306: ' finale' (ID: 37759)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10157757997512817
    2. 'print' → logprob: -2.3515775203704834
    3. 'positions' → logprob: -7.3515777587890625
    4. ' s' → logprob: -7.8515777587890625
    5. ' print' → logprob: -8.476577758789062
    6. 'for' → logprob: -9.476577758789062
    7. '1' → logprob: -10.726577758789062
    8. 'final' → logprob: -11.851577758789062
    9. '0' → logprob: -12.851577758789062
    10. 'des' → logprob: -12.851577758789062

Token 307: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005254626274108887
    2. 'for' → logprob: -5.255254745483398
    3. ' print' → logprob: -11.630254745483398
    4. '
' → logprob: -12.255254745483398
    5. '(' → logprob: -12.880254745483398
    6. 's' → logprob: -13.130254745483398
    7. ' for' → logprob: -13.630254745483398
    8. '(print' → logprob: -14.755254745483398
    9. 'positions' → logprob: -14.880254745483398
    10. '(
' → logprob: -15.380254745483398

Token 308: ' chaque' (ID: 21194)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025135546922683716
    2. ' chaque' → logprob: -4.650135517120361
    3. ' toutes' → logprob: -4.650135517120361
    4. ' chacune' → logprob: -5.650135517120361
    5. ' each' → logprob: -8.02513599395752
    6. 'each' → logprob: -8.15013599395752
    7. 'positions' → logprob: -8.15013599395752
    8. ' s' → logprob: -8.15013599395752
    9. 'les' → logprob: -8.52513599395752
    10. 'es' → logprob: -8.65013599395752

Token 309: ' pièce' (ID: 56132)
  Prédit: ' pièce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pièce' → logprob: -0.587287425994873
    2. 'pi' → logprob: -0.962287425994873
    3. 'piece' → logprob: -2.837287425994873
    4. ' piece' → logprob: -5.837287425994873
    5. ' pi' → logprob: -7.837287425994873
    6. ' pièces' → logprob: -9.962287902832031
    7. '```' → logprob: -10.462287902832031
    8. 'print' → logprob: -10.587287902832031
    9. 'p' → logprob: -10.587287902832031
    10. ' ' → logprob: -10.712287902832031

Token 310: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01815052703022957
    2. 'for' → logprob: -4.018150329589844
    3. ' print' → logprob: -14.518150329589844
    4. ' for' → logprob: -15.518150329589844
    5. '
' → logprob: -17.393150329589844
    6. '```' → logprob: -18.143150329589844
    7. 'prin' → logprob: -19.893150329589844
    8. '  
' → logprob: -20.768150329589844
    9. ' 
' → logprob: -21.018150329589844
    10. '    
' → logprob: -21.143150329589844

Token 311: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005234121344983578
    2. 'for' → logprob: -5.255234241485596
    3. ' print' → logprob: -15.505233764648438
    4. '```' → logprob: -16.755233764648438
    5. ' for' → logprob: -18.005233764648438
    6. '
' → logprob: -18.130233764648438
    7. 'prin' → logprob: -18.255233764648438
    8. 'pr' → logprob: -19.255233764648438
    9. '    
' → logprob: -20.005233764648438
    10. '   ' → logprob: -20.505233764648438

Token 312: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12737907469272614
    2. ' pos' → logprob: -2.1273791790008545
    3. 'p' → logprob: -8.377379417419434
    4. 'i' → logprob: -9.002379417419434
    5. 'position' → logprob: -9.627379417419434
    6. ' p' → logprob: -11.252379417419434
    7. ' position' → logprob: -11.377379417419434
    8. ' i' → logprob: -12.127379417419434
    9. '	pos' → logprob: -13.752379417419434
    10. 'piece' → logprob: -14.877379417419434

Token 313: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018167153000831604
    2. 'in' → logprob: -4.018167018890381
    3. 'e' → logprob: -11.643167495727539
    4. ' ' → logprob: -12.393167495727539
    5. '	in' → logprob: -13.893167495727539
    6. '_in' → logprob: -14.143167495727539
    7. ' ' → logprob: -14.768167495727539
    8. 'ion' → logprob: -14.893167495727539
    9. 'pos' → logprob: -15.143167495727539
    10. ',' → logprob: -15.268167495727539

Token 314: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -9.615255839889869e-05
    2. ' positions' → logprob: -9.250096321105957
    3. 'position' → logprob: -18.75009536743164
    4. 'pos' → logprob: -20.75009536743164
    5. '.positions' → logprob: -21.00009536743164
    6. '_positions' → logprob: -22.50009536743164
    7. 'Positions' → logprob: -22.75009536743164
    8. '   ' → logprob: -24.25009536743164
    9. '
' → logprob: -24.62509536743164
    10. 'locations' → logprob: -25.12509536743164

Token 315: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022796615958213806
    2. 'print' → logprob: -4.022796630859375
    3. ':
' → logprob: -5.522796630859375
    4. ' print' → logprob: -7.647796630859375
    5. ',' → logprob: -9.272796630859375
    6. '   ' → logprob: -10.272796630859375
    7. '.print' → logprob: -10.647796630859375
    8. '):' → logprob: -12.647796630859375
    9. ')' → logprob: -13.522796630859375
    10. ' :' → logprob: -13.647796630859375

Token 316: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004088373854756355
    2. ' print' → logprob: -5.754088401794434
    3. '   ' → logprob: -7.004088401794434
    4. '	print' → logprob: -13.254088401794434
    5. '```' → logprob: -15.254088401794434
    6. '.print' → logprob: -17.629087448120117
    7. ' ' → logprob: -19.129087448120117
    8. 'pr' → logprob: -19.129087448120117
    9. 'printf' → logprob: -19.129087448120117
    10. '
' → logprob: -19.254087448120117

Token 317: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.842555426876061e-06
    2. ' print' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.8750057220459
    4. 'prin' → logprob: -19.1250057220459
    5. 'pr' → logprob: -19.6250057220459
    6. '	print' → logprob: -22.1250057220459
    7. 'printf' → logprob: -22.3750057220459
    8. 'pri' → logprob: -22.8750057220459
    9. '.print' → logprob: -23.6250057220459
    10. 'prit' → logprob: -23.6250057220459

Token 318: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0019570598378777504
    2. 'pos' → logprob: -6.251956939697266
    3. '(' → logprob: -10.501956939697266
    4. ' pos' → logprob: -14.001956939697266
    5. '(f' → logprob: -17.376956939697266
    6. ' (' → logprob: -17.751956939697266
    7. '()' → logprob: -18.001956939697266
    8. '(p' → logprob: -18.126956939697266
    9. ',pos' → logprob: -18.126956939697266
    10. '(
' → logprob: -18.751956939697266

Token 319: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ' )' → logprob: -11.50001049041748
    3. ')
' → logprob: -15.75001049041748
    4. '())' → logprob: -17.500009536743164
    5. ')}' → logprob: -18.125009536743164
    6. ')#' → logprob: -18.375009536743164
    7. ',)' → logprob: -18.375009536743164
    8. '),' → logprob: -18.500009536743164
    9. '))' → logprob: -18.500009536743164
    10. ')`' → logprob: -18.625009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 317
Tokens correctement prédits (1ère position, stricte): 102
Tokens correctement prédits (1ère position, avec adaptation): 111
Tokens correctement prédits (top 10): 224
Précision stricte (1ère position): 32.18%
Précision adaptée (1ère position): 35.02%
Précision (top 10): 70.66%
================================================================================
