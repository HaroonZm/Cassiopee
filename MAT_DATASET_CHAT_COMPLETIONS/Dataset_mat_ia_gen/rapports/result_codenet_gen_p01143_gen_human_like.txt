================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input().strip()
    if line == "0 0 0":
        break
    N, M, P = map(int, line.split())
    votes = [int(input()) for _ in range(N)]
    total = sum(votes) * 100
    winner_votes = votes[M - 1]
    if winner_votes == 0:
        print(0)
        continue
    pool_after_tax = total * (100 - P) // 100
    payout = pool_after_tax // winner_votes
    print(payout)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6314842700958252
    2. '    ' → logprob: -2.131484270095825
    3. '    
' → logprob: -2.631484270095825
    4. '\' → logprob: -2.881484270095825
    5. '\n' → logprob: -2.881484270095825
    6. ' ' → logprob: -3.256484270095825
    7. '```' → logprob: -3.256484270095825
    8. ' 
' → logprob: -3.631484270095825
    9. '  
' → logprob: -4.131484031677246
    10. '     
' → logprob: -4.256484031677246

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0779716894030571
    2. '=' → logprob: -2.7029716968536377
    3. 's' → logprob: -5.327971458435059
    4. '.' → logprob: -6.952971458435059
    5. ' ' → logprob: -7.827971458435059
    6. '   ' → logprob: -8.077971458435059
    7. '.startswith' → logprob: -8.452971458435059
    8. '       ' → logprob: -8.577971458435059
    9. '[' → logprob: -8.702971458435059
    10. '_' → logprob: -8.702971458435059

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0890335813164711
    2. 'input' → logprob: -2.464033603668213
    3. ' ' → logprob: -9.714033126831055
    4. ' f' → logprob: -10.964033126831055
    5. '=input' → logprob: -12.589033126831055
    6. ' file' → logprob: -12.839033126831055
    7. ' readline' → logprob: -12.839033126831055
    8. '   ' → logprob: -13.589033126831055
    9. ' s' → logprob: -14.089033126831055
    10. 'file' → logprob: -14.464033126831055

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007377912290394306
    2. '()' → logprob: -5.757378101348877
    3. '('' → logprob: -5.882378101348877
    4. '("("' → logprob: -7.257378101348877
    5. ''' → logprob: -8.382377624511719
    6. '```' → logprob: -8.507377624511719
    7. ')' → logprob: -9.632377624511719
    8. '"' → logprob: -10.382377624511719
    9. '("")' → logprob: -10.507377624511719
    10. '(
' → logprob: -10.757377624511719

Token 8: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00015681622608099133
    2. 'rstrip' → logprob: -9.00015640258789
    3. 'split' → logprob: -10.37515640258789
    4. 'startswith' → logprob: -13.37515640258789
    5. 'replace' → logprob: -15.50015640258789
    6. 'lower' → logprob: -15.87515640258789
    7. ' strip' → logprob: -15.87515640258789
    8. 'str' → logprob: -16.37515640258789
    9. 'read' → logprob: -17.62515640258789
    10. 'l' → logprob: -18.25015640258789

Token 9: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11289790272712708
    2. '(' → logprob: -2.2378978729248047
    3. '(
' → logprob: -11.237897872924805
    4. '()`' → logprob: -11.237897872924805
    5. '()
' → logprob: -11.862897872924805
    6. '`()' → logprob: -11.862897872924805
    7. ')' → logprob: -12.487897872924805
    8. '(

' → logprob: -12.862897872924805
    9. '()>' → logprob: -12.862897872924805
    10. '()(' → logprob: -12.862897872924805

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9835107326507568
    2. ' if' → logprob: -0.9835107326507568
    3. 'if' → logprob: -1.7335107326507568
    4. '<|end|>' → logprob: -3.233510732650757
    5. ' ' → logprob: -4.358510971069336
    6. ':' → logprob: -4.358510971069336
    7. '    ' → logprob: -5.983510971069336
    8. '<|end|>' → logprob: -6.233510971069336
    9. '       ' → logprob: -7.358510971069336
    10. ':
' → logprob: -7.358510971069336

Token 11: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005388141609728336
    2. ' if' → logprob: -5.755388259887695
    3. 'i' → logprob: -6.255388259887695
    4. '```' → logprob: -9.130388259887695
    5. '   ' → logprob: -9.255388259887695
    6. '<|end|>' → logprob: -10.255388259887695
    7. '#' → logprob: -11.130388259887695
    8. 'If' → logprob: -11.505388259887695
    9. ' ' → logprob: -12.130388259887695
    10. '
' → logprob: -12.630388259887695

Token 12: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008302619680762291
    2. 'not' → logprob: -5.008302688598633
    3. ' line' → logprob: -6.508302688598633
    4. 'line' → logprob: -9.383302688598633
    5. ' ' → logprob: -11.633302688598633
    6. ' len' → logprob: -13.758302688598633
    7. ' ' → logprob: -15.383302688598633
    8. '!' → logprob: -15.883302688598633
    9. '	not' → logprob: -16.008302688598633
    10. 'len' → logprob: -16.758302688598633

Token 13: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016089506447315216
    2. '==' → logprob: -4.26608943939209
    3. ' ' → logprob: -7.39108943939209
    4. '.startswith' → logprob: -7.64108943939209
    5. ' !=' → logprob: -8.26608943939209
    6. '<|end|>' → logprob: -8.51608943939209
    7. '<|end|>' → logprob: -9.64108943939209
    8. '.' → logprob: -9.76608943939209
    9. ' ===' → logprob: -9.89108943939209
    10. '[:]' → logprob: -10.76608943939209

Token 14: ' "' (ID: 392)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6140097975730896
    2. '''' → logprob: -0.8640097975730896
    3. ''' → logprob: -3.4890098571777344
    4. '"' → logprob: -5.239009857177734
    5. '"":' → logprob: -6.864009857177734
    6. ' ""' → logprob: -8.614009857177734
    7. ' ''' → logprob: -9.364009857177734
    8. ''ex' → logprob: -9.614009857177734
    9. '""""' → logprob: -10.364009857177734
    10. ''''' → logprob: -10.739009857177734

Token 15: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.2941912114620209
    2. '"' → logprob: -1.7941912412643433
    3. 'exit' → logprob: -2.7941911220550537
    4. 'quit' → logprob: -4.169191360473633
    5. '"":' → logprob: -4.919191360473633
    6. 'end' → logprob: -7.169191360473633
    7. '""' → logprob: -7.419191360473633
    8. 'break' → logprob: -7.544191360473633
    9. 'stop' → logprob: -7.544191360473633
    10. '```' → logprob: -7.544191360473633

Token 16: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.015255002304911613
    2. '"' → logprob: -4.265254974365234
    3. ':' → logprob: -7.140254974365234
    4. '"):' → logprob: -8.765254974365234
    5. '":
' → logprob: -10.140254974365234
    6. '\n' → logprob: -10.265254974365234
    7. '")' → logprob: -11.140254974365234
    8. '0' → logprob: -11.265254974365234
    9. ' ":' → logprob: -11.390254974365234
    10. '":
' → logprob: -12.015254974365234

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4780489206314087
    2. '":' → logprob: -1.1030489206314087
    3. ' ' → logprob: -3.728048801422119
    4. '"' → logprob: -3.853048801422119
    5. '"):' → logprob: -6.228048801422119
    6. ':' → logprob: -9.103049278259277
    7. '":
' → logprob: -9.103049278259277
    8. '"":' → logprob: -9.478049278259277
    9. '":
' → logprob: -9.478049278259277
    10. '">' → logprob: -9.478049278259277

Token 18: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.005235529970377684
    2. '"' → logprob: -5.38023567199707
    3. ':' → logprob: -8.00523567199707
    4. '"):' → logprob: -9.38023567199707
    5. '":
' → logprob: -9.38023567199707
    6. '\n' → logprob: -9.88023567199707
    7. '":
' → logprob: -10.75523567199707
    8. '```' → logprob: -12.13023567199707
    9. '"":' → logprob: -12.38023567199707
    10. '">' → logprob: -12.63023567199707

Token 19: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.023748287931084633
    2. '0' → logprob: -4.773748397827148
    3. ' ' → logprob: -4.773748397827148
    4. '"' → logprob: -5.898748397827148
    5. ' ":' → logprob: -6.648748397827148
    6. '\n' → logprob: -6.898748397827148
    7. ':' → logprob: -7.148748397827148
    8. '":
' → logprob: -7.898748397827148
    9. ' "' → logprob: -9.023748397827148
    10. '":
' → logprob: -9.773748397827148

Token 20: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.02389983832836151
    2. ':' → logprob: -4.023900032043457
    3. '"' → logprob: -5.398900032043457
    4. '":
' → logprob: -7.273900032043457
    5. '\n' → logprob: -8.523900032043457
    6. '"):' → logprob: -8.773900032043457
    7. ':
' → logprob: -10.148900032043457
    8. '")' → logprob: -10.773900032043457
    9. '):' → logprob: -10.898900032043457
    10. '":
' → logprob: -11.148900032043457

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013738969573751092
    2. '   ' → logprob: -10.000137329101562
    3. ':' → logprob: -10.125137329101562
    4. ' break' → logprob: -10.500137329101562
    5. '<|end|>' → logprob: -11.625137329101562
    6. '\n' → logprob: -13.000137329101562
    7. '    ' → logprob: -13.125137329101562
    8. '	break' → logprob: -13.250137329101562
    9. '      ' → logprob: -13.500137329101562
    10. '     ' → logprob: -13.500137329101562

Token 22: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06422733515501022
    2. '       ' → logprob: -2.814227342605591
    3. 'break' (adapté à ' break') → logprob: -6.314227104187012
    4. '\n' → logprob: -8.564227104187012
    5. '	break' → logprob: -8.689227104187012
    6. '   ' → logprob: -9.689227104187012
    7. '_break' → logprob: -12.064227104187012
    8. '```' → logprob: -12.064227104187012
    9. '           ' → logprob: -12.564227104187012
    10. '-break' → logprob: -12.939227104187012

Token 23: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06594178825616837
    2. '\n' → logprob: -3.44094181060791
    3. '    
' → logprob: -3.69094181060791
    4. '\' → logprob: -6.56594181060791
    5. '
' → logprob: -6.56594181060791
    6. ')' → logprob: -6.94094181060791
    7. 'n' → logprob: -7.44094181060791
    8. '<|end|>' → logprob: -7.81594181060791
    9. '\r' → logprob: -7.81594181060791
    10. 'print' → logprob: -8.06594181060791

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03867969661951065
    2. '    
' → logprob: -3.913679599761963
    3. 'n' → logprob: -4.663679599761963
    4. '\n' → logprob: -5.788679599761963
    5. '  
' → logprob: -6.913679599761963
    6. '  ' → logprob: -7.038679599761963
    7. '   
' → logprob: -7.038679599761963
    8. '
' → logprob: -7.538679599761963
    9. ' ' → logprob: -7.788679599761963
    10. '```' → logprob: -8.038680076599121

Token 25: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3642460107803345
    2. 'n' → logprob: -1.4892460107803345
    3. '   ' → logprob: -1.4892460107803345
    4. 'x' → logprob: -2.739245891571045
    5. 'h' → logprob: -2.864245891571045
    6. 'w' → logprob: -3.114245891571045
    7. '    
' → logprob: -4.114245891571045
    8. 'p' → logprob: -4.239245891571045
    9. 't' → logprob: -4.364245891571045
    10. 'r' → logprob: -4.614245891571045

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024358808994293213
    2. ' =' → logprob: -4.274358749389648
    3. ' ,' → logprob: -4.649358749389648
    4. '=' → logprob: -7.774358749389648
    5. ' ' → logprob: -9.774358749389648
    6. ',N' → logprob: -10.524358749389648
    7. '  ' → logprob: -11.774358749389648
    8. ')' → logprob: -11.774358749389648
    9. ',n' → logprob: -12.024358749389648
    10. ',int' → logprob: -12.024358749389648

Token 27: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8218238353729248
    2. 'M' → logprob: -1.0718238353729248
    3. 'Q' → logprob: -3.071823835372925
    4. 'H' → logprob: -3.196823835372925
    5. ' K' → logprob: -3.696823835372925
    6. ' M' → logprob: -4.196824073791504
    7. ' ' → logprob: -4.321824073791504
    8. 'space' → logprob: -4.571824073791504
    9. 'k' → logprob: -5.071824073791504
    10. 's' → logprob: -5.196824073791504

Token 28: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6810415983200073
    2. ',' → logprob: -0.8060415983200073
    3. '=' → logprob: -3.056041717529297
    4. ' ,' → logprob: -9.056041717529297
    5. ')' → logprob: -10.556041717529297
    6. ' ' → logprob: -10.556041717529297
    7. '<|end|>' → logprob: -11.556041717529297
    8. '   ' → logprob: -11.806041717529297
    9. '    ' → logprob: -11.931041717529297
    10. '  ' → logprob: -12.181041717529297

Token 29: ' P' (ID: 398)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3496778905391693
    2. ' K' → logprob: -2.599677801132202
    3. 'Q' → logprob: -3.599677801132202
    4. 'X' → logprob: -3.724677801132202
    5. 'L' → logprob: -3.724677801132202
    6. 'T' → logprob: -3.849677801132202
    7. 'D' → logprob: -3.974677801132202
    8. 'P' → logprob: -3.974677801132202
    9. 'H' → logprob: -3.974677801132202
    10. 'R' → logprob: -4.474678039550781

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141704380512238
    2. '=' → logprob: -1.701417088508606
    3. ')' → logprob: -13.451416969299316
    4. ',' → logprob: -13.951416969299316
    5. ' ' → logprob: -14.326416969299316
    6. '=line' → logprob: -15.576416969299316
    7. '```' → logprob: -15.576416969299316
    8. '=int' → logprob: -16.076417922973633
    9. '   ' → logprob: -16.326417922973633
    10. '    ' → logprob: -16.576417922973633

Token 31: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018978305160999298
    2. 'map' → logprob: -4.018978118896484
    3. ' line' → logprob: -7.268978118896484
    4. ' list' → logprob: -9.643978118896484
    5. 'line' → logprob: -10.518978118896484
    6. ' [' → logprob: -11.393978118896484
    7. '   ' → logprob: -11.643978118896484
    8. ' ' → logprob: -12.018978118896484
    9. '[' → logprob: -12.393978118896484
    10. 'list' → logprob: -12.393978118896484

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07869070023298264
    2. '(' → logprob: -2.828690767288208
    3. '(str' → logprob: -4.203690528869629
    4. '(lambda' → logprob: -6.453690528869629
    5. '(list' → logprob: -11.078690528869629
    6. '(input' → logprob: -11.578690528869629
    7. 'int' → logprob: -11.703690528869629
    8. '(
' → logprob: -11.828690528869629
    9. '[int' → logprob: -12.453690528869629
    10. '<int' → logprob: -12.453690528869629

Token 33: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0021641829516738653
    2. ',line' → logprob: -7.127164363861084
    3. ')' → logprob: -7.252164363861084
    4. '(' → logprob: -8.377163887023926
    5. ' line' → logprob: -8.502163887023926
    6. ',' → logprob: -9.627163887023926
    7. 'line' → logprob: -9.752163887023926
    8. '	line' → logprob: -10.377163887023926
    9. '=line' → logprob: -10.752163887023926
    10. '#line' → logprob: -10.877163887023926

Token 34: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2015540599822998
    2. 'line' → logprob: -1.7015540599822998
    3. ')' → logprob: -9.951554298400879
    4. '	line' → logprob: -10.326554298400879
    5. '(line' → logprob: -10.451554298400879
    6. '[line' → logprob: -11.701554298400879
    7. '#line' → logprob: -11.826554298400879
    8. '=line' → logprob: -12.201554298400879
    9. ' ' → logprob: -12.701554298400879
    10. ',line' → logprob: -12.826554298400879

Token 35: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.004152599256485701
    2. '.' → logprob: -5.754152774810791
    3. ')' → logprob: -7.379152774810791
    4. '().' → logprob: -8.629152297973633
    5. '.strip' → logprob: -9.129152297973633
    6. ' .' → logprob: -10.004152297973633
    7. ').' → logprob: -12.254152297973633
    8. '.readline' → logprob: -12.254152297973633
    9. 'split' → logprob: -12.754152297973633
    10. '.rstrip' → logprob: -13.129152297973633

Token 36: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0649818703532219
    2. '())' → logprob: -2.9399819374084473
    3. '()' → logprob: -5.189981937408447
    4. '("("' → logprob: -6.564981937408447
    5. '(' → logprob: -6.814981937408447
    6. '("' → logprob: -7.064981937408447
    7. ')' → logprob: -7.314981937408447
    8. '(','' → logprob: -7.939981937408447
    9. '()))' → logprob: -10.314981460571289
    10. '(',' → logprob: -11.439981460571289

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0588468313217163
    2. '
' → logprob: -1.8088468313217163
    3. ':' → logprob: -2.433846950531006
    4. '\n' → logprob: -2.933846950531006
    5. '    
' → logprob: -3.058846950531006
    6. '\' → logprob: -3.058846950531006
    7. ' ' → logprob: -3.308846950531006
    8. '<|end|>' → logprob: -3.433846950531006
    9. ')' → logprob: -3.683846950531006
    10. ' 
' → logprob: -3.933846950531006

Token 38: ' votes' (ID: 24183)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.418307900428772
    2. 'matrix' → logprob: -1.418307900428772
    3. '[' → logprob: -1.918307900428772
    4. 'a' → logprob: -2.6683077812194824
    5. ' matrix' → logprob: -2.7933077812194824
    6. 'n' → logprob: -3.1683077812194824
    7. 'r' → logprob: -3.9183077812194824
    8. 'data' → logprob: -4.168307781219482
    9. ',' → logprob: -4.293307781219482
    10. '#' → logprob: -4.418307781219482

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010316220112144947
    2. '=' → logprob: -4.635316371917725
    3. '[' → logprob: -8.010315895080566
    4. '_' → logprob: -9.760315895080566
    5. ' ' → logprob: -10.385315895080566
    6. '_counts' → logprob: -10.385315895080566
    7. '[:]' → logprob: -10.885315895080566
    8. 's' → logprob: -10.885315895080566
    9. ',' → logprob: -11.010315895080566
    10. '_count' → logprob: -11.135315895080566

Token 40: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.763120710849762
    2. ' []' → logprob: -0.763120710849762
    3. '[' → logprob: -3.138120651245117
    4. ' [' → logprob: -3.763120651245117
    5. ' ' → logprob: -8.013120651245117
    6. ' [[]' → logprob: -8.763120651245117
    7. '{}' → logprob: -9.638120651245117
    8. 'list' → logprob: -9.638120651245117
    9. '[list' → logprob: -9.763120651245117
    10. ' list' → logprob: -9.763120651245117

Token 41: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06850381195545197
    2. '[' → logprob: -3.0685038566589355
    3. '[]' → logprob: -4.6935038566589355
    4. ' [' → logprob: -5.3185038566589355
    5. '[int' → logprob: -6.4435038566589355
    6. 'int' → logprob: -6.8185038566589355
    7. ' ' → logprob: -6.9435038566589355
    8. 'list' → logprob: -7.1935038566589355
    9. ' []' → logprob: -7.5685038566589355
    10. ']' → logprob: -8.568503379821777

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.275106817483902
    2. '()' → logprob: -1.9001067876815796
    3. '(' → logprob: -3.025106906890869
    4. '()]' → logprob: -3.275106906890869
    5. '(x' → logprob: -5.650106906890869
    6. '(i' → logprob: -8.025106430053711
    7. ']' → logprob: -8.275106430053711
    8. '(
' → logprob: -8.775106430053711
    9. 'input' → logprob: -9.525106430053711
    10. '()
' → logprob: -10.025106430053711

Token 43: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03229055181145668
    2. '()' → logprob: -4.032290458679199
    3. '().' → logprob: -4.282290458679199
    4. ')' → logprob: -8.7822904586792
    5. '()]' → logprob: -10.9072904586792
    6. '())
' → logprob: -11.1572904586792
    7. '`()' → logprob: -11.4072904586792
    8. '()),' → logprob: -11.9072904586792
    9. '()
' → logprob: -12.0322904586792
    10. ' ())' → logprob: -12.7822904586792

Token 44: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001636024098843336
    2. '())' → logprob: -7.376636028289795
    3. ')' → logprob: -7.751636028289795
    4. '()]' → logprob: -8.001635551452637
    5. 'for' → logprob: -9.001635551452637
    6. '().' → logprob: -9.751635551452637
    7. '(' → logprob: -10.876635551452637
    8. ' for' → logprob: -11.001635551452637
    9. ' ()' → logprob: -11.251635551452637
    10. ' ' → logprob: -13.001635551452637

Token 45: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18833012878894806
    2. ' _' → logprob: -1.9383301734924316
    3. ' ' → logprob: -4.188330173492432
    4. '_' → logprob: -4.438330173492432
    5. 'range' → logprob: -8.063329696655273
    6. '_range' → logprob: -9.313329696655273
    7. ' in' → logprob: -9.313329696655273
    8. '(range' → logprob: -9.563329696655273
    9. '	range' → logprob: -9.563329696655273
    10. ' i' → logprob: -10.313329696655273

Token 46: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4870707392692566
    2. 'range' → logprob: -1.3620707988739014
    3. ' in' → logprob: -2.1120707988739014
    4. 'in' → logprob: -4.862070560455322
    5. '_' → logprob: -7.862070560455322
    6. ' ' → logprob: -9.36207103729248
    7. ' _' → logprob: -9.98707103729248
    8. ' ran' → logprob: -10.11207103729248
    9. '	range' → logprob: -10.23707103729248
    10. 'i' → logprob: -10.36207103729248

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868754208087921
    2. ' range' → logprob: -1.1368753910064697
    3. ' ' → logprob: -13.63687515258789
    4. '(range' → logprob: -13.63687515258789
    5. '	range' → logprob: -13.88687515258789
    6. 'rang' → logprob: -15.01187515258789
    7. '  ' → logprob: -15.13687515258789
    8. '   ' → logprob: -15.38687515258789
    9. ' ran' → logprob: -17.01187515258789
    10. 'ran' → logprob: -17.01187515258789

Token 48: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.002783123403787613
    2. '(' → logprob: -6.502783298492432
    3. '(N' → logprob: -6.877783298492432
    4. ' (' → logprob: -8.627782821655273
    5. '(P' → logprob: -10.002782821655273
    6. ' M' → logprob: -11.252782821655273
    7. 'M' → logprob: -11.627782821655273
    8. ' ' → logprob: -13.877782821655273
    9. ')' → logprob: -14.002782821655273
    10. '(
' → logprob: -14.752782821655273

Token 49: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0028889216482639313
    2. ']' → logprob: -6.377889156341553
    3. ')' → logprob: -6.752889156341553
    4. ' )' → logprob: -11.752888679504395
    5. ' ]' → logprob: -12.502888679504395
    6. ')])' → logprob: -13.877888679504395
    7. '])]' → logprob: -14.002888679504395
    8. '   ' → logprob: -14.127888679504395
    9. ')]
' → logprob: -14.377888679504395
    10. '')]' → logprob: -14.627888679504395

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45033159852027893
    2. 'result' → logprob: -2.825331687927246
    3. '    
' → logprob: -3.075331687927246
    4. 'c' → logprob: -3.700331687927246
    5. '
' → logprob: -3.700331687927246
    6. 'results' → logprob: -3.700331687927246
    7. 'count' → logprob: -3.825331687927246
    8. 'votes' → logprob: -3.825331687927246
    9. ' 
' → logprob: -3.950331687927246
    10. '```' → logprob: -4.200331687927246

Token 51: ' total' (ID: 3609)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2793080806732178
    2. 'result' → logprob: -1.2793080806732178
    3. 'count' → logprob: -2.6543080806732178
    4. 'results' → logprob: -2.7793080806732178
    5. 'votes' → logprob: -3.1543080806732178
    6. ' result' → logprob: -3.7793080806732178
    7. 's' → logprob: -3.9043080806732178
    8. 'sum' → logprob: -3.9043080806732178
    9. '   ' → logprob: -4.029308319091797
    10. 'max' → logprob: -4.029308319091797

Token 52: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.131411612033844
    2. '_votes' → logprob: -2.131411552429199
    3. '_v' → logprob: -6.381411552429199
    4. ' _' → logprob: -7.131411552429199
    5. '_space' → logprob: -7.381411552429199
    6. ' =' → logprob: -7.631411552429199
    7. '_vote' → logprob: -7.881411552429199
    8. '=' → logprob: -8.6314115524292
    9. 'Votes' → logprob: -9.8814115524292
    10. '_sum' → logprob: -10.0064115524292

Token 53: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.15409275889396667
    2. 'sum' → logprob: -2.029092788696289
    3. '0' → logprob: -4.654092788696289
    4. ' ' → logprob: -6.529092788696289
    5. ' P' → logprob: -8.779092788696289
    6. ' M' → logprob: -9.279092788696289
    7. ' max' → logprob: -10.654092788696289
    8. 'M' → logprob: -11.154092788696289
    9. 'P' → logprob: -11.279092788696289
    10. ' votes' → logprob: -11.404092788696289

Token 54: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.12694017589092255
    2. '(' → logprob: -2.1269402503967285
    3. 'votes' → logprob: -12.62693977355957
    4. 'v' → logprob: -13.12693977355957
    5. '(
' → logprob: -13.62693977355957
    6. '((' → logprob: -13.62693977355957
    7. ' (' → logprob: -14.12693977355957
    8. ' votes' → logprob: -14.50193977355957
    9. '(total' → logprob: -14.50193977355957
    10. '(s' → logprob: -14.87693977355957

Token 55: 'otes' (ID: 8534)
  Prédit: 'otes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otes' → logprob: -0.0007891403511166573
    2. 'votes' → logprob: -7.625789165496826
    3. '(' → logprob: -9.750788688659668
    4. ' votes' → logprob: -9.875788688659668
    5. '_votes' → logprob: -10.125788688659668
    6. 'ote' → logprob: -10.375788688659668
    7. 'o' → logprob: -10.625788688659668
    8. ')' → logprob: -11.250788688659668
    9. 'OTES' → logprob: -11.500788688659668
    10. '(v' → logprob: -11.625788688659668

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029651902616024017
    2. ' )' → logprob: -4.154652118682861
    3. ' +' → logprob: -5.029652118682861
    4. '+' → logprob: -5.029652118682861
    5. ')
' → logprob: -9.154651641845703
    6. '   ' → logprob: -9.404651641845703
    7. ' -' → logprob: -10.279651641845703
    8. '()' → logprob: -10.654651641845703
    9. '[' → logprob: -10.779651641845703
    10. ' )
' → logprob: -10.904651641845703

Token 57: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9190825819969177
    2. '
' → logprob: -1.2940826416015625
    3. ' if' → logprob: -2.4190826416015625
    4. '    
' → logprob: -2.7940826416015625
    5. '<|end|>' → logprob: -2.7940826416015625
    6. 'if' → logprob: -3.4190826416015625
    7. '```' → logprob: -4.2940826416015625
    8. ' 
' → logprob: -4.4190826416015625
    9. 'votes' → logprob: -4.9190826416015625
    10. '%' → logprob: -5.1690826416015625

Token 58: ' ' (ID: 220)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.5318682789802551
    2. 'P' → logprob: -1.0318682193756104
    3. ' M' → logprob: -4.2818684577941895
    4. '100' → logprob: -4.2818684577941895
    5. ' ' → logprob: -4.4068684577941895
    6. '2' → logprob: -4.9068684577941895
    7. 'M' → logprob: -5.2818684577941895
    8. ' (' → logprob: -6.5318684577941895
    9. '(P' → logprob: -7.1568684577941895
    10. '3' → logprob: -7.7818684577941895

Token 59: '100' (ID: 1353)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.12866149842739105
    2. 'M' → logprob: -2.5036613941192627
    3. '100' → logprob: -3.8786613941192627
    4. '2' → logprob: -4.628661632537842
    5. '3' → logprob: -5.378661632537842
    6. ' P' → logprob: -6.753661632537842
    7. '(' → logprob: -7.128661632537842
    8. '1' → logprob: -8.253661155700684
    9. '4' → logprob: -8.378661155700684
    10. ' ' → logprob: -8.503661155700684

Token 60: '
' (ID: 198)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.635573148727417
    2. ' //' → logprob: -1.385573148727417
    3. '/' → logprob: -2.635573148727417
    4. ' /
' → logprob: -2.760573148727417
    5. '//' → logprob: -3.385573148727417
    6. ')' → logprob: -4.260573387145996
    7. ' ' → logprob: -4.385573387145996
    8. '   ' → logprob: -4.885573387145996
    9. '/
' → logprob: -5.135573387145996
    10. '<|end|>' → logprob: -6.260573387145996

Token 61: '   ' (ID: 271)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.741805374622345
    2. ' /' → logprob: -1.1168053150177002
    3. '/' → logprob: -2.7418053150177
    4. '   ' → logprob: -2.7418053150177
    5. '//' → logprob: -2.8668053150177
    6. ' /
' → logprob: -6.116805553436279
    7. '0' → logprob: -6.491805553436279
    8. ')' → logprob: -6.616805553436279
    9. ' ' → logprob: -6.741805553436279
    10. '.' → logprob: -7.241805553436279

Token 62: ' winner' (ID: 19499)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.9914188981056213
    2. ' //' → logprob: -0.9914188981056213
    3. ' /' → logprob: -1.8664188385009766
    4. '/' → logprob: -2.6164188385009766
    5. '   ' → logprob: -4.616418838500977
    6. ' ' → logprob: -5.366418838500977
    7. '.' → logprob: -5.616418838500977
    8. ')' → logprob: -5.866418838500977
    9. '0' → logprob: -6.616418838500977
    10. '%' → logprob: -6.741418838500977

Token 63: '_votes' (ID: 167389)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17013202607631683
    2. '=' → logprob: -2.9201319217681885
    3. '_' → logprob: -3.6701319217681885
    4. '_percentage' → logprob: -3.9201319217681885
    5. '_percent' → logprob: -4.170132160186768
    6. '_votes' → logprob: -4.295132160186768
    7. '_pct' → logprob: -4.545132160186768
    8. '_margin' → logprob: -5.420132160186768
    9. '_per' → logprob: -5.920132160186768
    10. 's' → logprob: -6.295132160186768

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07015460729598999
    2. '=' → logprob: -2.6951546669006348
    3. ',' → logprob: -8.820154190063477
    4. ' ==' → logprob: -11.695154190063477
    5. '_percentage' → logprob: -11.695154190063477
    6. '_percent' → logprob: -11.945154190063477
    7. '>' → logprob: -12.070154190063477
    8. ' ' → logprob: -12.070154190063477
    9. '_' → logprob: -12.195154190063477
    10. '_pct' → logprob: -12.445154190063477

Token 65: ' votes' (ID: 24183)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.826860785484314
    2. ' votes' → logprob: -1.201860785484314
    3. 'votes' → logprob: -1.576860785484314
    4. 'max' → logprob: -3.2018609046936035
    5. '0' → logprob: -5.0768609046936035
    6. ' P' → logprob: -5.3268609046936035
    7. ' M' → logprob: -7.2018609046936035
    8. ' ' → logprob: -7.2018609046936035
    9. ' (' → logprob: -8.201860427856445
    10. ' sum' → logprob: -8.264360427856445

Token 66: '[M' (ID: 98407)
  Prédit: '[P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[P' → logprob: -0.1163422167301178
    2. '[' → logprob: -2.366342306137085
    3. '[:]' → logprob: -4.241342067718506
    4. '[M' → logprob: -7.616342067718506
    5. '[:' → logprob: -7.616342067718506
    6. '[-' → logprob: -8.866342544555664
    7. '.index' → logprob: -9.741342544555664
    8. '.count' → logprob: -9.866342544555664
    9. '.' → logprob: -10.116342544555664
    10. '[]' → logprob: -10.116342544555664

Token 67: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14420007169246674
    2. '-' → logprob: -2.394200086593628
    3. '])' → logprob: -3.269200086593628
    4. ' -' → logprob: -5.894199848175049
    5. ']%' → logprob: -7.269199848175049
    6. ']-' → logprob: -7.394199848175049
    7. ')' → logprob: -8.269200325012207
    8. ' ]' → logprob: -8.394200325012207
    9. ']*' → logprob: -9.394200325012207
    10. '])/' → logprob: -10.269200325012207

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001434516510926187
    2. ']' → logprob: -6.876434326171875
    3. ' ' → logprob: -7.876434326171875
    4. ']>' → logprob: -12.126434326171875
    5. ' ]' → logprob: -12.251434326171875
    6. '<|end|>' → logprob: -13.376434326171875
    7. '   ' → logprob: -13.626434326171875
    8. ')' → logprob: -13.751434326171875
    9. '```' → logprob: -13.876434326171875
    10. '2' → logprob: -14.313934326171875

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.423219696851447e-05
    2. ' ' → logprob: -9.500083923339844
    3. ']' → logprob: -12.437583923339844
    4. '<|end|>' → logprob: -14.437583923339844
    5. '```' → logprob: -14.562583923339844
    6. ')' → logprob: -15.000083923339844
    7. '   ' → logprob: -15.000083923339844
    8. '2' → logprob: -15.000083923339844
    9. '  ' → logprob: -15.312583923339844
    10. '>' → logprob: -15.500083923339844

Token 70: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0054971035569906235
    2. ' ]' → logprob: -6.130496978759766
    3. '*' → logprob: -6.880496978759766
    4. ' *' → logprob: -7.005496978759766
    5. ')' → logprob: -7.505496978759766
    6. ']*' → logprob: -7.505496978759766
    7. '   ' → logprob: -9.005496978759766
    8. '])' → logprob: -9.755496978759766
    9. ']
' → logprob: -10.255496978759766
    10. ')]' → logprob: -11.505496978759766

Token 71: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8774619698524475
    2. '*' → logprob: -1.0024619102478027
    3. '   ' → logprob: -1.6274619102478027
    4. ' /' → logprob: -5.002461910247803
    5. 'print' → logprob: -6.002461910247803
    6. ' if' → logprob: -6.002461910247803
    7. 'if' → logprob: -6.127461910247803
    8. ')' → logprob: -6.627461910247803
    9. '100' → logprob: -6.752461910247803
    10. '
' → logprob: -7.377461910247803

Token 72: ' if' (ID: 538)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6379503011703491
    2. ' *' → logprob: -1.5129503011703491
    3. '   ' → logprob: -2.0129504203796387
    4. ' if' → logprob: -2.8879504203796387
    5. 'if' (adapté à ' if') → logprob: -3.0129504203796387
    6. 'print' → logprob: -5.137950420379639
    7. ' /' → logprob: -6.262950420379639
    8. '100' → logprob: -6.887950420379639
    9. '
' → logprob: -7.012950420379639
    10. ' ' → logprob: -7.387950420379639

Token 73: ' winner' (ID: 19499)
  Prédit: ' winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.016045041382312775
    2. ' total' → logprob: -4.391045093536377
    3. 'winner' → logprob: -5.766045093536377
    4. ' ' → logprob: -8.891044616699219
    5. ' (' → logprob: -9.516044616699219
    6. ' votes' → logprob: -9.891044616699219
    7. 'total' → logprob: -10.016044616699219
    8. ' w' → logprob: -11.266044616699219
    9. '   ' → logprob: -11.516044616699219
    10. ' win' → logprob: -11.641044616699219

Token 74: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -0.0005348019185476005
    2. '_' → logprob: -8.125535011291504
    3. ' _' → logprob: -8.875535011291504
    4. '_vote' → logprob: -10.500535011291504
    5. '_v' → logprob: -11.500535011291504
    6. '```' → logprob: -11.625535011291504
    7. '>' → logprob: -11.750535011291504
    8. 's' → logprob: -12.125535011291504
    9. '"_' → logprob: -12.500535011291504
    10. ''_' → logprob: -13.125535011291504

Token 75: ' ==' (ID: 951)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16052661836147308
    2. '*' → logprob: -1.9105266332626343
    3. ' /' → logprob: -8.785526275634766
    4. '/' → logprob: -9.535526275634766
    5. ' ' → logprob: -10.035526275634766
    6. '   ' → logprob: -11.035526275634766
    7. '==' → logprob: -12.035526275634766
    8. '>' → logprob: -12.410526275634766
    9. ' ==' → logprob: -13.160526275634766
    10. '  ' → logprob: -13.785526275634766

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4609948992729187
    2. ' ' → logprob: -1.0859949588775635
    3. ' max' → logprob: -4.085994720458984
    4. 'max' → logprob: -4.460994720458984
    5. 'total' → logprob: -6.335994720458984
    6. ' total' → logprob: -6.585994720458984
    7. ' sum' → logprob: -9.523494720458984
    8. 'sum' → logprob: -9.710994720458984
    9. '  ' → logprob: -10.648494720458984
    10. '   ' → logprob: -11.148494720458984

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18217292428016663
    2. 'max' → logprob: -1.8071728944778442
    3. ' ' → logprob: -6.932172775268555
    4. 'total' → logprob: -7.182172775268555
    5. ' max' → logprob: -7.557172775268555
    6. 'sum' → logprob: -9.682172775268555
    7. '100' → logprob: -11.369672775268555
    8. '   ' → logprob: -11.432172775268555
    9. 'min' → logprob: -11.494672775268555
    10. '```' → logprob: -11.807172775268555

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016390807926654816
    2. ' or' → logprob: -4.391390800476074
    3. ':
' → logprob: -5.641390800476074
    4. '   ' → logprob: -8.766390800476074
    5. ' and' → logprob: -9.141390800476074
    6. '       ' → logprob: -10.891390800476074
    7. ':return' → logprob: -11.141390800476074
    8. ' :' → logprob: -12.141390800476074
    9. '.' → logprob: -12.266390800476074
    10. 'or' → logprob: -12.641390800476074

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08539793640375137
    2. ':' → logprob: -3.085397958755493
    3. '   ' → logprob: -4.085397720336914
    4. ':
' → logprob: -4.835397720336914
    5. '\n' → logprob: -6.335397720336914
    6. ' or' → logprob: -6.585397720336914
    7. '.' → logprob: -6.835397720336914
    8. ')' → logprob: -6.835397720336914
    9. ' continue' → logprob: -6.960397720336914
    10. 'print' → logprob: -7.460397720336914

Token 80: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.014121651649475
    2. '       ' → logprob: -1.264121651649475
    3. 'print' (adapté à ' print') → logprob: -1.639121651649475
    4. ' print' → logprob: -2.0141215324401855
    5. '```' → logprob: -4.6391215324401855
    6. '           ' → logprob: -5.2641215324401855
    7. '0' → logprob: -5.8891215324401855
    8. '    
' → logprob: -6.0141215324401855
    9. '
' → logprob: -6.2641215324401855
    10. '\n' → logprob: -7.2641215324401855

Token 81: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3668269217014313
    2. '(' → logprob: -1.2418268918991089
    3. '('' → logprob: -4.366827011108398
    4. '"' → logprob: -5.741827011108398
    5. ' ("' → logprob: -7.366827011108398
    6. '0' → logprob: -7.491827011108398
    7. ' (' → logprob: -7.991827011108398
    8. '()' → logprob: -8.366827011108398
    9. '("")' → logprob: -9.366827011108398
    10. ''' → logprob: -9.491827011108398

Token 82: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1285817176103592
    2. '"No' → logprob: -3.1285817623138428
    3. 'No' → logprob: -4.253581523895264
    4. '0' → logprob: -4.253581523895264
    5. 'NA' → logprob: -5.003581523895264
    6. 'NO' → logprob: -5.503581523895264
    7. '"N' → logprob: -5.628581523895264
    8. 'na' → logprob: -5.753581523895264
    9. '"D' → logprob: -6.003581523895264
    10. 'div' → logprob: -6.628581523895264

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07020051032304764
    2. ')
' → logprob: -2.6952004432678223
    3. '   ' → logprob: -8.69520092010498
    4. ')
' → logprob: -10.07020092010498
    5. ' )' → logprob: -10.82020092010498
    6. ')

' → logprob: -11.82020092010498
    7. '*' → logprob: -12.57020092010498
    8. '0' → logprob: -12.57020092010498
    9. '))' → logprob: -12.69520092010498
    10. '%)' → logprob: -13.07020092010498

Token 84: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03460458666086197
    2. ' else' → logprob: -4.159604549407959
    3. 'else' → logprob: -4.284604549407959
    4. '       ' → logprob: -6.034604549407959
    5. ')' → logprob: -6.534604549407959
    6. '<|end|>' → logprob: -8.409605026245117
    7. 'elif' → logprob: -8.659605026245117
    8. '	else' → logprob: -9.534605026245117
    9. '    
' → logprob: -9.534605026245117
    10. '```' → logprob: -9.784605026245117

Token 85: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7055914402008057
    2. '       ' → logprob: -0.7055914402008057
    3. ' continue' → logprob: -5.080591201782227
    4. ' else' → logprob: -6.330591201782227
    5. 'continue' (adapté à ' continue') → logprob: -6.580591201782227
    6. 'else' → logprob: -6.705591201782227
    7. '	continue' → logprob: -7.580591201782227
    8. '    
' → logprob: -7.955591201782227
    9. ')' → logprob: -8.080591201782227
    10. '\n' → logprob: -8.830591201782227

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06295721977949142
    2. '    
' → logprob: -3.437957286834717
    3. '
' → logprob: -4.312957286834717
    4. '<|end|>' → logprob: -4.687957286834717
    5. '  
' → logprob: -6.062957286834717
    6. ' 
' → logprob: -6.687957286834717
    7. '   
' → logprob: -6.812957286834717
    8. '  ' → logprob: -7.812957286834717
    9. '<|end|>' → logprob: -7.937957286834717
    10. '```' → logprob: -8.562956809997559

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07883130013942719
    2. '<|end|>' → logprob: -3.453831195831299
    3. '    
' → logprob: -3.578831195831299
    4. '
' → logprob: -4.453831195831299
    5. '  
' → logprob: -6.953831195831299
    6. '<|end|>' → logprob: -7.078831195831299
    7. ' 
' → logprob: -7.328831195831299
    8. '   
' → logprob: -7.328831195831299
    9. '  ' → logprob: -7.703831195831299
    10. ')' → logprob: -7.828831195831299

Token 88: ' pool' (ID: 8389)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051631372421979904
    2. '*' → logprob: -4.426631450653076
    3. '    
' → logprob: -4.926631450653076
    4. ' if' → logprob: -5.051631450653076
    5. ' ' → logprob: -5.426631450653076
    6. '  ' → logprob: -5.676631450653076
    7. 'if' → logprob: -6.176631450653076
    8. '.' → logprob: -6.301631450653076
    9. '
' → logprob: -6.676631450653076
    10. ')' → logprob: -6.676631450653076

Token 89: '_after' (ID: 46788)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16188567876815796
    2. '=' → logprob: -1.9118857383728027
    3. '_' → logprob: -6.536885738372803
    4. ',' → logprob: -10.286885261535645
    5. ' ' → logprob: -10.286885261535645
    6. '_size' → logprob: -10.536885261535645
    7. '   ' → logprob: -10.661885261535645
    8. '_amount' → logprob: -11.286885261535645
    9. '_total' → logprob: -11.661885261535645
    10. '.' → logprob: -11.911885261535645

Token 90: '_tax' (ID: 61146)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056336451321840286
    2. ' =' → logprob: -3.0563364028930664
    3. '_' → logprob: -4.931336402893066
    4. '_fee' → logprob: -8.556336402893066
    5. '_pool' → logprob: -8.931336402893066
    6. '_tax' → logprob: -10.181336402893066
    7. '=_' → logprob: -10.431336402893066
    8. '-' → logprob: -10.806336402893066
    9. '_=' → logprob: -11.181336402893066
    10. ',' → logprob: -11.806336402893066

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367394208908081
    2. '=' → logprob: -3.4086740016937256
    3. '_' → logprob: -11.533674240112305
    4. 'ed' → logprob: -11.783674240112305
    5. ',' → logprob: -12.408674240112305
    6. ' ' → logprob: -12.908674240112305
    7. 's' → logprob: -13.283674240112305
    8. '=int' → logprob: -14.783674240112305
    9. 'd' → logprob: -14.908674240112305
    10. '.' → logprob: -15.533674240112305

Token 92: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.23364630341529846
    2. 'total' → logprob: -2.6086463928222656
    3. ' (' → logprob: -2.8586463928222656
    4. ' int' → logprob: -3.3586463928222656
    5. '(total' → logprob: -3.7336463928222656
    6. 'int' → logprob: -4.483646392822266
    7. ' pool' → logprob: -6.233646392822266
    8. '(int' → logprob: -6.358646392822266
    9. ' P' → logprob: -6.858646392822266
    10. '(P' → logprob: -6.983646392822266

Token 93: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2483614981174469
    2. '*' → logprob: -1.7483614683151245
    3. ' -' → logprob: -3.123361587524414
    4. '-' → logprob: -6.373361587524414
    5. ' ' → logprob: -9.248361587524414
    6. '*(' → logprob: -11.248361587524414
    7. '<|end|>' → logprob: -11.623361587524414
    8. ' ' → logprob: -11.748361587524414
    9. '   ' → logprob: -12.998361587524414
    10. ' //' → logprob: -13.123361587524414

Token 94: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7448800206184387
    2. 'P' → logprob: -1.244879961013794
    3. ' (' → logprob: -1.994879961013794
    4. '0' → logprob: -3.244879961013794
    5. ' P' → logprob: -3.369879961013794
    6. '(P' → logprob: -4.494880199432373
    7. '90' → logprob: -5.244880199432373
    8. '9' → logprob: -6.244880199432373
    9. '85' → logprob: -6.369880199432373
    10. ' ' → logprob: -6.494880199432373

Token 95: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10358990728855133
    2. '1' → logprob: -2.8535900115966797
    3. '(' → logprob: -3.6035900115966797
    4. '90' → logprob: -5.10359001159668
    5. '0' → logprob: -5.22859001159668
    6. ' ' → logprob: -7.97859001159668
    7. '9' → logprob: -8.22859001159668
    8. 'P' → logprob: -8.35359001159668
    9. ' (' → logprob: -8.35359001159668
    10. '10' → logprob: -8.72859001159668

Token 96: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2818518579006195
    2. '-' → logprob: -1.406851887702942
    3. '0' → logprob: -7.656851768493652
    4. ' ' → logprob: -8.906851768493652
    5. '00' → logprob: -9.656851768493652
    6. '000' → logprob: -11.656851768493652
    7. '<|end|>' → logprob: -11.656851768493652
    8. '   ' → logprob: -12.906851768493652
    9. ' ' → logprob: -12.906851768493652
    10. '```' → logprob: -13.281851768493652

Token 97: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.039001572877168655
    2. ' P' → logprob: -3.28900146484375
    3. ' ' → logprob: -7.66400146484375
    4. '   ' → logprob: -8.28900146484375
    5. '10' → logprob: -10.03900146484375
    6. '	P' → logprob: -10.53900146484375
    7. '  ' → logprob: -10.91400146484375
    8. '20' → logprob: -11.16400146484375
    9. '15' → logprob: -11.41400146484375
    10. '5' → logprob: -11.41400146484375

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017421995289623737
    2. ' )' → logprob: -8.875174522399902
    3. ')//' → logprob: -11.000174522399902
    4. ')/' → logprob: -11.125174522399902
    5. '0' → logprob: -13.625174522399902
    6. '))' → logprob: -14.750174522399902
    7. '   ' → logprob: -15.125174522399902
    8. ')`' → logprob: -15.250174522399902
    9. ')
' → logprob: -16.000173568725586
    10. ']' → logprob: -16.250173568725586

Token 99: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.049913160502910614
    2. '//' → logprob: -3.049913167953491
    3. ' /' → logprob: -7.049912929534912
    4. '0' → logprob: -8.42491340637207
    5. '/' → logprob: -10.17491340637207
    6. '100' → logprob: -10.17491340637207
    7. '```' → logprob: -10.17491340637207
    8. ' ' → logprob: -10.29991340637207
    9. '00' → logprob: -10.79991340637207
    10. ' ' → logprob: -11.29991340637207

Token 100: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -16.00037956237793
    4. '1' → logprob: -16.37537956237793
    5. '```' → logprob: -16.50037956237793
    6. '  ' → logprob: -17.00037956237793
    7. '10' → logprob: -17.37537956237793
    8. '１００' → logprob: -17.62537956237793
    9. '>' → logprob: -17.75037956237793
    10. '    ' → logprob: -19.00037956237793

Token 101: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. '10' → logprob: -14.750041007995605
    4. '1' → logprob: -15.625041007995605
    5. '  ' → logprob: -17.75004005432129
    6. '```' → logprob: -17.87504005432129
    7. '   ' → logprob: -18.12504005432129
    8. '0' → logprob: -18.25004005432129
    9. '１００' → logprob: -19.00004005432129
    10. '2' → logprob: -19.00004005432129

Token 102: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.909216046333313
    2. '   ' → logprob: -1.159216046333313
    3. '<|end|>' → logprob: -1.659216046333313
    4. '*' → logprob: -3.6592159271240234
    5. ')' → logprob: -3.7842159271240234
    6. '\n' → logprob: -4.159215927124023
    7. ' ' → logprob: -5.159215927124023
    8. '    
' → logprob: -5.284215927124023
    9. '  ' → logprob: -5.909215927124023
    10. '<|end|>' → logprob: -6.034215927124023

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39239931106567383
    2. '
' → logprob: -1.1423993110656738
    3. '<|end|>' → logprob: -6.017399311065674
    4. '    
' → logprob: -7.017399311065674
    5. ')' → logprob: -8.017398834228516
    6. '*' → logprob: -8.142398834228516
    7. ' if' → logprob: -8.267398834228516
    8. '  
' → logprob: -8.892398834228516
    9. 'print' → logprob: -9.142398834228516
    10. '100' → logprob: -9.267398834228516

Token 104: ' payout' (ID: 50076)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.553875207901001
    2. 'print' → logprob: -1.553875207901001
    3. 'if' → logprob: -2.303875207901001
    4. 'result' → logprob: -2.803875207901001
    5. 'pr' → logprob: -4.678874969482422
    6. '*' → logprob: -4.803874969482422
    7. 'pool' → logprob: -4.928874969482422
    8. ' if' → logprob: -5.303874969482422
    9. 'votes' → logprob: -5.928874969482422
    10. 'w' → logprob: -6.053874969482422

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014175384305417538
    2. '=' → logprob: -4.2641754150390625
    3. 's' → logprob: -11.889175415039062
    4. '   ' → logprob: -13.264175415039062
    5. '_' → logprob: -13.639175415039062
    6. ',' → logprob: -14.639175415039062
    7. ' ' → logprob: -14.639175415039062
    8. '_amount' → logprob: -15.389175415039062
    9. '    ' → logprob: -15.639175415039062
    10. ')' → logprob: -15.639175415039062

Token 106: ' pool' (ID: 8389)
  Prédit: ' pool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pool' → logprob: -0.03919726982712746
    2. ' (' → logprob: -4.1641974449157715
    3. 'pool' → logprob: -4.7891974449157715
    4. ' winner' → logprob: -4.9141974449157715
    5. '(pool' → logprob: -5.0391974449157715
    6. 'winner' → logprob: -8.039196968078613
    7. '(' → logprob: -8.789196968078613
    8. '(p' → logprob: -8.914196968078613
    9. '(w' → logprob: -9.289196968078613
    10. ' ' → logprob: -11.289196968078613

Token 107: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -2.5776860184123507e-06
    2. 'after' → logprob: -14.12500286102295
    3. '_before' → logprob: -14.37500286102295
    4. ' =' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.25000286102295
    6. '=' → logprob: -15.37500286102295
    7. ' after' → logprob: -16.375001907348633
    8. '_at' → logprob: -17.000001907348633
    9. '_AFTER' → logprob: -17.000001907348633
    10. ' *' → logprob: -17.125001907348633

Token 108: '_tax' (ID: 61146)
  Prédit: '_tax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tax' → logprob: -0.0625917986035347
    2. 'tax' → logprob: -2.812591791152954
    3. 'pool' → logprob: -7.562592029571533
    4. '-tax' → logprob: -10.312591552734375
    5. 't' → logprob: -11.062591552734375
    6. '_pool' → logprob: -11.562591552734375
    7. ' tax' → logprob: -12.062591552734375
    8. ' pool' → logprob: -12.437591552734375
    9. '_votes' → logprob: -12.687591552734375
    10. '_pay' → logprob: -12.687591552734375

Token 109: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.048816386610269547
    2. '*' → logprob: -3.048816442489624
    3. ' //' → logprob: -9.048816680908203
    4. '//' → logprob: -10.673816680908203
    5. '   ' → logprob: -10.798816680908203
    6. '*w' → logprob: -10.923816680908203
    7. ' ' → logprob: -11.173816680908203
    8. '*v' → logprob: -11.298816680908203
    9. '*object' → logprob: -11.923816680908203
    10. ' ' → logprob: -11.923816680908203

Token 110: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.022117510437965393
    2. 'N' → logprob: -4.522117614746094
    3. ' winner' → logprob: -4.897117614746094
    4. 'votes' → logprob: -6.022117614746094
    5. 'w' → logprob: -7.272117614746094
    6. 'total' → logprob: -8.272117614746094
    7. '100' → logprob: -10.272117614746094
    8. 'sum' → logprob: -10.522117614746094
    9. ' N' → logprob: -10.522117614746094
    10. 'M' → logprob: -11.022117614746094

Token 111: '_votes' (ID: 167389)
  Prédit: '_votes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_votes' → logprob: -1.843177233240567e-05
    2. 'votes' → logprob: -11.375018119812012
    3. '_' → logprob: -12.250018119812012
    4. 'Votes' → logprob: -13.875018119812012
    5. '_vote' → logprob: -15.250018119812012
    6. '   ' → logprob: -15.625018119812012
    7. ' _' → logprob: -15.625018119812012
    8. '```' → logprob: -15.875018119812012
    9. 's' → logprob: -16.750019073486328
    10. '

' → logprob: -16.875019073486328

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004892281256616116
    2. ')' → logprob: -6.004892349243164
    3. 'print' → logprob: -6.754892349243164
    4. '<|end|>' → logprob: -7.504892349243164
    5. '    
' → logprob: -7.879892349243164
    6. '
' → logprob: -9.129892349243164
    7. '\n' → logprob: -10.004892349243164
    8. ' print' → logprob: -10.254892349243164
    9. ')
' → logprob: -11.004892349243164
    10. ',' → logprob: -11.254892349243164

Token 113: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.09901873022317886
    2. ')' → logprob: -2.4740188121795654
    3. '   ' → logprob: -5.849018573760986
    4. '<|end|>' → logprob: -5.849018573760986
    5. '(' → logprob: -6.974018573760986
    6. 'print' → logprob: -7.224018573760986
    7. '    
' → logprob: -7.974018573760986
    8. '  
' → logprob: -8.099019050598145
    9. ' ' → logprob: -8.224019050598145
    10. ' 
' → logprob: -8.349019050598145

Token 114: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45443981885910034
    2. 'print' (adapté à ' print') → logprob: -1.3294398784637451
    3. '\n' → logprob: -2.704439878463745
    4. '   ' → logprob: -4.204439640045166
    5. '<|end|>' → logprob: -4.454439640045166
    6. '  
' → logprob: -6.954439640045166
    7. '    
' → logprob: -6.954439640045166
    8. ' )' → logprob: -7.329439640045166
    9. '(' → logprob: -7.579439640045166
    10. '    ' → logprob: -7.704439640045166

Token 115: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.011090504936873913
    2. '(' → logprob: -4.511090278625488
    3. 'p' → logprob: -10.386090278625488
    4. ' payout' → logprob: -12.761090278625488
    5. ' (' → logprob: -12.886090278625488
    6. '(pay' → logprob: -13.636090278625488
    7. '(pool' → logprob: -13.636090278625488
    8. '()' → logprob: -13.761090278625488
    9. '((' → logprob: -14.386090278625488
    10. '('' → logprob: -14.511090278625488

Token 116: 'ayout' (ID: 2016)
  Prédit: 'ayout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayout' → logprob: -0.0004031441640108824
    2. 'ay' → logprob: -7.875402927398682
    3. 'ayment' → logprob: -12.00040340423584
    4. 'a' → logprob: -12.25040340423584
    5. 'ayload' → logprob: -12.37540340423584
    6. 'AYOUT' → logprob: -12.62540340423584
    7. 'ayot' → logprob: -13.00040340423584
    8. 'ayet' → logprob: -14.87540340423584
    9. 'out' → logprob: -15.00040340423584
    10. 'ayi' → logprob: -15.25040340423584

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ' )' → logprob: -11.750009536743164
    3. ')
' → logprob: -13.375009536743164
    4. '))' → logprob: -16.375009536743164
    5. '```' → logprob: -16.750009536743164
    6. '   ' → logprob: -17.500009536743164
    7. '')' → logprob: -17.750009536743164
    8. '`)' → logprob: -17.750009536743164
    9. ')`' → logprob: -17.750009536743164
    10. '）' → logprob: -17.875009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 98
Précision stricte (1ère position): 43.48%
Précision adaptée (1ère position): 44.35%
Précision (top 10): 85.22%
================================================================================
