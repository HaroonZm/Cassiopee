================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:31:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Tree:
    def __init__(self, left=None, right=None):
        self.left = left
        self.right = right

def parse_tree(s):
    # Parse tree from string like '((,),(,))'
    # Returns (tree, next_pos)
    # s[pos] should be '(' at start
    def helper(pos):
        if s[pos] != '(':
            return None, pos
        pos += 1  # skip '('
        if s[pos] == ',':
            left = None
        else:
            left, pos = helper(pos)
        if s[pos] != ',':
            return None, pos
        pos += 1  # skip ','
        if s[pos] == ')':
            right = None
        else:
            right, pos = helper(pos)
        if s[pos] != ')':
            return None, pos
        pos += 1  # skip ')'
        return Tree(left, right), pos
    tree, pos = helper(0)
    return tree

def tree_to_str(t):
    if t is None:
        return ''
    left_str = tree_to_str(t.left) if t.left else ''
    right_str = tree_to_str(t.right) if t.right else ''
    return '(' + left_str + ',' + right_str + ')'

def intersection(t1, t2):
    if t1 is None or t2 is None:
        return None
    left = intersection(t1.left, t2.left)
    right = intersection(t1.right, t2.right)
    return Tree(left, right)

def union(t1, t2):
    if t1 is None and t2 is None:
        return None
    left = union(t1.left if t1 else None, t2.left if t2 else None)
    right = union(t1.right if t1 else None, t2.right if t2 else None)
    return Tree(left, right)

import sys

for line in sys.stdin:
    line=line.strip()
    if not line:
        continue
    op, t1s, t2s = line.split(' ', 2)
    t1 = parse_tree(t1s)
    t2 = parse_tree(t2s)
    if op == 'i':
        res = intersection(t1, t2)
    else:
        res = union(t1, t2)
    print(tree_to_str(res))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Tree' (ID: 14224)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018446773290634155
    2. '```' → logprob: -4.518446922302246
    3. '(' → logprob: -5.018446922302246
    4. '():' → logprob: -8.393446922302246
    5. '.' → logprob: -8.643446922302246
    6. ':
' → logprob: -8.893446922302246
    7. '   ' → logprob: -9.893446922302246
    8. '(
' → logprob: -10.393446922302246
    9. '{' → logprob: -10.518446922302246
    10. '``' → logprob: -10.768446922302246

Token 4: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.3359757661819458
    2. '(' → logprob: -1.5859757661819458
    3. '   ' → logprob: -1.5859757661819458
    4. '```' → logprob: -1.8359757661819458
    5. ' ' → logprob: -3.0859756469726562
    6. 'def' (adapté à ' def') → logprob: -3.4609756469726562
    7. ''' → logprob: -3.9609756469726562
    8. '`' → logprob: -4.210975646972656
    9. '    ' → logprob: -4.335975646972656
    10. '_' → logprob: -4.960975646972656

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9158479571342468
    2. ' __' → logprob: -0.9158479571342468
    3. '__' → logprob: -1.6658480167388916
    4. ' init' → logprob: -6.2908477783203125
    5. '  ' → logprob: -7.0408477783203125
    6. ' initialize' → logprob: -7.2908477783203125
    7. ' ' → logprob: -7.4158477783203125
    8. ' create' → logprob: -7.5408477783203125
    9. ' add' → logprob: -7.7908477783203125
    10. '    ' → logprob: -8.040847778320312

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0564331205387134e-05
    2. ' init' → logprob: -12.12501049041748
    3. 'i' → logprob: -12.50001049041748
    4. 'ini' → logprob: -14.00001049041748
    5. 'in' → logprob: -15.00001049041748
    6. '_init' → logprob: -16.375011444091797
    7. '	init' → logprob: -17.000011444091797
    8. 'inti' → logprob: -18.125011444091797
    9. 'int' → logprob: -18.375011444091797
    10. 'innit' → logprob: -18.375011444091797

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1615174561738968
    2. '__' → logprob: -1.9115175008773804
    3. '(' → logprob: -7.41151762008667
    4. '__(
' → logprob: -8.161517143249512
    5. '_' → logprob: -8.286517143249512
    6. '__((' → logprob: -9.536517143249512
    7. '(self' → logprob: -10.411517143249512
    8. '__('' → logprob: -11.161517143249512
    9. '_(' → logprob: -11.411517143249512
    10. '___' → logprob: -11.536517143249512

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002350195776671171
    2. ' self' → logprob: -6.127350330352783
    3. ')' → logprob: -9.752349853515625
    4. '(self' → logprob: -9.752349853515625
    5. ' ' → logprob: -10.752349853515625
    6. ' )' → logprob: -11.377349853515625
    7. 's' → logprob: -12.127349853515625
    8. '_self' → logprob: -13.002349853515625
    9. 'space' → logprob: -13.002349853515625
    10. ',self' → logprob: -14.252349853515625

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7438957691192627
    2. ')' → logprob: -0.7438957691192627
    3. ',' → logprob: -4.493895530700684
    4. '.' → logprob: -4.868895530700684
    5. ' ' → logprob: -4.993895530700684
    6. ' )' → logprob: -5.118895530700684
    7. '<|end|>' → logprob: -5.118895530700684
    8. ' (' → logprob: -5.618895530700684
    9. '_' → logprob: -6.118895530700684
    10. 's' → logprob: -6.993895530700684

Token 10: ' left' (ID: 3561)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.724043607711792
    2. ' )' → logprob: -1.224043607711792
    3. ')' → logprob: -1.599043607711792
    4. 's' → logprob: -4.724043846130371
    5. ' self' → logprob: -4.724043846130371
    6. ' ' → logprob: -8.099043846130371
    7. 'space' → logprob: -8.974043846130371
    8. '(self' → logprob: -9.349043846130371
    9. ' ):' → logprob: -9.349043846130371
    10. '(' → logprob: -9.599043846130371

Token 11: '=None' (ID: 12783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6096200942993164
    2. ')' → logprob: -0.8596200942993164
    3. '=' → logprob: -4.484620094299316
    4. '_' → logprob: -4.609620094299316
    5. ' )' → logprob: -4.734620094299316
    6. '.' → logprob: -6.734620094299316
    7. ' ,' → logprob: -6.859620094299316
    8. ',)' → logprob: -7.484620094299316
    9. '.)' → logprob: -9.984620094299316
    10. ' ' → logprob: -10.109620094299316

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044711565715260804
    2. '):' → logprob: -8.625447273254395
    3. ' ,' → logprob: -8.875447273254395
    4. ')' → logprob: -9.125447273254395
    5. ',right' → logprob: -12.125447273254395
    6. ',left' → logprob: -12.875447273254395
    7. '   ' → logprob: -13.375447273254395
    8. ',b' → logprob: -13.500447273254395
    9. ' ' → logprob: -13.750447273254395
    10. ',a' → logprob: -13.875447273254395

Token 13: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2820936441421509
    2. ' right' → logprob: -1.4070936441421509
    3. 'r' → logprob: -7.657093524932861
    4. ')' → logprob: -8.28209400177002
    5. 'space' → logprob: -9.90709400177002
    6. ''' → logprob: -10.15709400177002
    7. ',right' → logprob: -10.28209400177002
    8. ' )' → logprob: -10.78209400177002
    9. ' ' → logprob: -11.03209400177002
    10. 'rig' → logprob: -11.78209400177002

Token 14: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1859309822320938
    2. ')' → logprob: -2.3109309673309326
    3. ',' → logprob: -3.0609309673309326
    4. '=' → logprob: -3.9359309673309326
    5. '=None' → logprob: -5.685931205749512
    6. ' ):' → logprob: -8.185931205749512
    7. ')=' → logprob: -8.810931205749512
    8. ' ,' → logprob: -9.185931205749512
    9. ':' → logprob: -9.310931205749512
    10. '),' → logprob: -10.560931205749512

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019909875467419624
    2. ',' → logprob: -4.019909858703613
    3. ')' → logprob: -6.394909858703613
    4. ':' → logprob: -10.019909858703613
    5. '   ' → logprob: -10.644909858703613
    6. ' ):' → logprob: -12.269909858703613
    7. '):
' → logprob: -12.644909858703613
    8. ''):' → logprob: -12.894909858703613
    9. '       ' → logprob: -13.394909858703613
    10. '),' → logprob: -13.519909858703613

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07740078121423721
    2. ' ' → logprob: -3.7024006843566895
    3. '    ' → logprob: -3.7024006843566895
    4. '   ' → logprob: -4.2024006843566895
    5. '<|end|>' → logprob: -5.2024006843566895
    6. '        ' → logprob: -6.8274006843566895
    7. '_' → logprob: -6.9524006843566895
    8. '     ' → logprob: -7.4524006843566895
    9. 'self' → logprob: -8.077401161193848
    10. ')' → logprob: -8.327401161193848

Token 17: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7396836876869202
    2. 's' → logprob: -0.9896836876869202
    3. ' ' → logprob: -2.2396836280822754
    4. '_' → logprob: -3.4896836280822754
    5. ' self' → logprob: -4.989683628082275
    6. '       ' → logprob: -5.739683628082275
    7. '[' → logprob: -7.114683628082275
    8. ')' → logprob: -7.614683628082275
    9. '   ' → logprob: -7.614683628082275
    10. '    ' → logprob: -8.114684104919434

Token 18: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005537538789212704
    2. ' ' → logprob: -5.630537509918213
    3. ' .' → logprob: -6.880537509918213
    4. '<|end|>' → logprob: -8.130537986755371
    5. '.left' → logprob: -8.255537986755371
    6. ')' → logprob: -8.755537986755371
    7. '<|end|>' → logprob: -9.380537986755371
    8. '.right' → logprob: -10.880537986755371
    9. '.space' → logprob: -11.130537986755371
    10. '.next' → logprob: -11.880537986755371

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1133897453546524
    2. ' =' → logprob: -2.238389730453491
    3. '<|end|>' → logprob: -7.73838996887207
    4. ' is' → logprob: -10.23838996887207
    5. ' ' → logprob: -10.23838996887207
    6. ')' → logprob: -11.23838996887207
    7. '<|end|>' → logprob: -11.61338996887207
    8. '.' → logprob: -11.61338996887207
    9. '=None' → logprob: -11.73838996887207
    10. '_' → logprob: -11.86338996887207

Token 20: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.023245595395565033
    2. 'left' → logprob: -3.7732455730438232
    3. ' lef' → logprob: -16.148244857788086
    4. '	left' → logprob: -17.023244857788086
    5. '_left' → logprob: -18.898244857788086
    6. '(left' → logprob: -19.023244857788086
    7. '左' → logprob: -19.398244857788086
    8. ' None' → logprob: -19.523244857788086
    9. '[left' → logprob: -19.773244857788086
    10. 'lef' → logprob: -19.773244857788086

Token 21: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6032310128211975
    2. 'self' (adapté à ' self') → logprob: -1.6032309532165527
    3. ',' → logprob: -1.8532309532165527
    4. ' ,' → logprob: -3.4782309532165527
    5. '        ' → logprob: -4.103230953216553
    6. ' ' → logprob: -4.228230953216553
    7. ' self' → logprob: -4.603230953216553
    8. ''' → logprob: -4.978230953216553
    9. '        
' → logprob: -5.978230953216553
    10. 'right' → logprob: -6.103230953216553

Token 24: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.38698917627334595
    2. '.' → logprob: -1.1369891166687012
    3. ' .' → logprob: -9.13698959350586
    4. 'right' → logprob: -12.26198959350586
    5. '.left' → logprob: -13.13698959350586
    6. '.r' → logprob: -13.76198959350586
    7. '.Right' → logprob: -13.88698959350586
    8. '.next' → logprob: -14.88698959350586
    9. '.RIGHT' → logprob: -15.38698959350586
    10. '.user' → logprob: -15.88698959350586

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143848657608032
    2. ' =' → logprob: -1.7014384269714355
    3. '<|end|>' → logprob: -11.076438903808594
    4. ')' → logprob: -13.201438903808594
    5. ' ' → logprob: -13.326438903808594
    6. '.' → logprob: -13.701438903808594
    7. ' =
' → logprob: -13.701438903808594
    8. '=None' → logprob: -13.951438903808594
    9. '=

' → logprob: -14.326438903808594
    10. '<|end|>' → logprob: -14.701438903808594

Token 26: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6931495666503906
    2. 'right' → logprob: -0.6931495666503906
    3. '	right' → logprob: -14.19314956665039
    4. 'None' → logprob: -14.94314956665039
    5. 'r' → logprob: -15.06814956665039
    6. ' None' → logprob: -15.31814956665039
    7. 'Right' → logprob: -15.81814956665039
    8. ' ' → logprob: -15.94314956665039
    9. '[right' → logprob: -16.06814956665039
    10. '(right' → logprob: -16.19314956665039

Token 27: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.536301851272583
    2. ')' → logprob: -2.161301851272583
    3. '.' → logprob: -2.661301851272583
    4. '<|end|>' → logprob: -2.661301851272583
    5. ',' → logprob: -2.786301851272583
    6. '   ' → logprob: -3.161301851272583
    7. '
' → logprob: -3.786301851272583
    8. 'def' → logprob: -4.661301612854004
    9. ' ' → logprob: -5.161301612854004
    10. '(' → logprob: -5.786301612854004

Token 28: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3659593164920807
    2. ':' → logprob: -1.4909592866897583
    3. ')' → logprob: -4.115959167480469
    4. '.' → logprob: -4.240959167480469
    5. ' ' → logprob: -4.240959167480469
    6. ',' → logprob: -4.490959167480469
    7. 'def' → logprob: -4.490959167480469
    8. 'd' → logprob: -5.740959167480469
    9. '    ' → logprob: -6.740959167480469
    10. '\' → logprob: -6.740959167480469

Token 29: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4288090169429779
    2. ' inorder' → logprob: -2.5538089275360107
    3. ' tree' → logprob: -2.6788089275360107
    4. ' space' → logprob: -3.0538089275360107
    5. ' dfs' → logprob: -3.5538089275360107
    6. ' preorder' → logprob: -3.9288089275360107
    7. ' is' → logprob: -4.17880916595459
    8. ' in' → logprob: -4.30380916595459
    9. ' add' → logprob: -4.55380916595459
    10. ' create' → logprob: -4.80380916595459

Token 30: '_tree' (ID: 27118)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3603525757789612
    2. '(' → logprob: -1.2353525161743164
    3. '_tree' → logprob: -4.985352516174316
    4. '_T' → logprob: -5.735352516174316
    5. 'Tree' → logprob: -8.110352516174316
    6. '_node' → logprob: -8.235352516174316
    7. '_token' → logprob: -8.610352516174316
    8. '(tree' → logprob: -9.235352516174316
    9. '(_' → logprob: -9.485352516174316
    10. '_t' → logprob: -9.735352516174316

Token 31: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012248923303559422
    2. '_' → logprob: -9.6251220703125
    3. '("("' → logprob: -11.5001220703125
    4. 's' → logprob: -11.6251220703125
    5. '('' → logprob: -12.0001220703125
    6. '(tree' → logprob: -12.1251220703125
    7. '(node' → logprob: -12.5001220703125
    8. '_parent' → logprob: -12.6251220703125
    9. ':' → logprob: -13.1251220703125
    10. '(root' → logprob: -13.1251220703125

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01761692389845848
    2. ')' → logprob: -4.1426167488098145
    3. ':' → logprob: -6.7676167488098145
    4. ',' → logprob: -8.517617225646973
    5. '[' → logprob: -8.892617225646973
    6. 's' → logprob: -10.142617225646973
    7. ' ):' → logprob: -10.267617225646973
    8. '):
' → logprob: -11.892617225646973
    9. '(' → logprob: -13.267617225646973
    10. ')：' → logprob: -13.767617225646973

Token 33: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06531137228012085
    2. '    ' → logprob: -3.0653114318847656
    3. '   ' → logprob: -4.815311431884766
    4. '(' → logprob: -6.065311431884766
    5. '_' → logprob: -7.190311431884766
    6. ' (' → logprob: -7.190311431884766
    7. 'i' → logprob: -7.440311431884766
    8. '[' → logprob: -7.440311431884766
    9. ' :' → logprob: -7.440311431884766
    10. ':' → logprob: -7.565311431884766

Token 34: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4434259831905365
    2. ' ' → logprob: -1.8184260129928589
    3. 'if' → logprob: -2.6934258937835693
    4. '(' → logprob: -2.8184258937835693
    5. ')' → logprob: -3.8184258937835693
    6. 't' → logprob: -3.9434258937835693
    7. 's' → logprob: -4.693426132202148
    8. ' if' → logprob: -5.068426132202148
    9. ' )' → logprob: -5.943426132202148
    10. ' (' → logprob: -5.943426132202148

Token 35: ' Parse' (ID: 26701)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.066594123840332
    2. 'i' → logprob: -1.941594123840332
    3. ' ' → logprob: -1.941594123840332
    4. ' i' → logprob: -2.066594123840332
    5. 'if' → logprob: -2.941594123840332
    6. ' pass' → logprob: -3.191594123840332
    7. '   ' → logprob: -3.816594123840332
    8. 's' → logprob: -4.066594123840332
    9. ' stack' → logprob: -4.066594123840332
    10. ' tokens' → logprob: -4.191594123840332

Token 36: ' tree' (ID: 8165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1700052171945572
    2. ' (' → logprob: -2.5450053215026855
    3. '(' → logprob: -2.9200053215026855
    4. 's' → logprob: -4.5450053215026855
    5. ' )' → logprob: -4.7950053215026855
    6. '  ' → logprob: -6.7950053215026855
    7. ' '' → logprob: -7.4200053215026855
    8. ')' → logprob: -7.6700053215026855
    9. '(s' → logprob: -7.6700053215026855
    10. ' s' → logprob: -7.6700053215026855

Token 37: ' from' (ID: 591)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15722741186618805
    2. ':' → logprob: -2.9072275161743164
    3. ' ' → logprob: -3.4072275161743164
    4. ' :' → logprob: -4.407227516174316
    5. ')' → logprob: -4.657227516174316
    6. '   ' → logprob: -4.657227516174316
    7. '[' → logprob: -5.157227516174316
    8. ' =' → logprob: -5.407227516174316
    9. ' (' → logprob: -5.657227516174316
    10. '_' → logprob: -5.907227516174316

Token 38: ' string' (ID: 1621)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0211293697357178
    2. ' s' → logprob: -1.5211293697357178
    3. ' a' → logprob: -2.0211293697357178
    4. ' '' → logprob: -2.2711293697357178
    5. ' (' → logprob: -2.5211293697357178
    6. ' "' → logprob: -3.7711293697357178
    7. 's' → logprob: -3.7711293697357178
    8. ' )' → logprob: -4.396129608154297
    9. '(' → logprob: -4.646129608154297
    10. ' '('' → logprob: -4.771129608154297

Token 39: ' like' (ID: 1299)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5047187805175781
    2. ' ' → logprob: -1.5047187805175781
    3. ':' → logprob: -2.504718780517578
    4. '   ' → logprob: -3.254718780517578
    5. '    ' → logprob: -3.754718780517578
    6. ' (' → logprob: -5.004718780517578
    7. '[' → logprob: -5.254718780517578
    8. ' :' → logprob: -5.504718780517578
    9. 'i' → logprob: -5.629718780517578
    10. ')' → logprob: -6.379718780517578

Token 40: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1536282300949097
    2. ' '('' → logprob: -1.1536282300949097
    3. '"' → logprob: -1.7786282300949097
    4. ' '' → logprob: -2.528628349304199
    5. '(' → logprob: -2.903628349304199
    6. ' "("' → logprob: -3.778628349304199
    7. ' "' → logprob: -4.278628349304199
    8. ' (' → logprob: -4.403628349304199
    9. ' ' → logprob: -5.278628349304199
    10. ''(' → logprob: -5.778628349304199

Token 41: '((' (ID: 2054)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7230773568153381
    2. 'T' → logprob: -0.8480773568153381
    3. '(' → logprob: -2.9730772972106934
    4. ''' → logprob: -4.348077297210693
    5. ''T' → logprob: -4.973077297210693
    6. '(T' → logprob: -5.348077297210693
    7. ')' → logprob: -5.723077297210693
    8. '(Tree' → logprob: -5.973077297210693
    9. 'Tree' → logprob: -6.973077297210693
    10. '(None' → logprob: -7.223077297210693

Token 42: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5003893971443176
    2. ')' → logprob: -1.7503893375396729
    3. '()' → logprob: -2.500389337539673
    4. '(None' → logprob: -3.375389337539673
    5. 'Tree' → logprob: -3.500389337539673
    6. '(Tree' → logprob: -4.250389575958252
    7. '(T' → logprob: -4.375389575958252
    8. '())' → logprob: -4.500389575958252
    9. 'T' → logprob: -4.750389575958252
    10. 'A' → logprob: -5.125389575958252

Token 43: '),(' (ID: 54876)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16466312110424042
    2. ')' → logprob: -2.414663076400757
    3. ',' → logprob: -3.539663076400757
    4. '(Tree' → logprob: -4.164663314819336
    5. '()' → logprob: -5.914663314819336
    6. ',)' → logprob: -6.039663314819336
    7. ' (' → logprob: -6.414663314819336
    8. '),' → logprob: -6.539663314819336
    9. ',(' → logprob: -6.664663314819336
    10. '(None' → logprob: -6.664663314819336

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11580991744995117
    2. '(' → logprob: -2.615809917449951
    3. ')' → logprob: -3.990809917449951
    4. '),' → logprob: -4.740809917449951
    5. ' ,' → logprob: -5.865809917449951
    6. ',(' → logprob: -6.240809917449951
    7. '),(' → logprob: -6.365809917449951
    8. '))' → logprob: -7.115809917449951
    9. ',)' → logprob: -7.240809917449951
    10. ' (' → logprob: -8.24081039428711

Token 45: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1161482185125351
    2. ',' → logprob: -2.9911482334136963
    3. '(' → logprob: -3.4911482334136963
    4. ')' → logprob: -3.6161482334136963
    5. '),' → logprob: -7.116147994995117
    6. ''))' → logprob: -7.991147994995117
    7. '((' → logprob: -8.116147994995117
    8. ')),' → logprob: -9.116147994995117
    9. ',)' → logprob: -9.241147994995117
    10. '()))' → logprob: -9.491147994995117

Token 46: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029415559023618698
    2. ')'' → logprob: -3.9044156074523926
    3. '')' → logprob: -5.279415607452393
    4. '(' → logprob: -6.154415607452393
    5. ''' → logprob: -6.904415607452393
    6. '('' → logprob: -7.779415607452393
    7. ' )' → logprob: -9.529415130615234
    8. ' (' → logprob: -10.404415130615234
    9. ' ')'' → logprob: -11.029415130615234
    10. ')`' → logprob: -11.154415130615234

Token 47: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7532700300216675
    2. 'i' → logprob: -1.8782700300216675
    3. ':' → logprob: -2.003270149230957
    4. '   ' → logprob: -2.128270149230957
    5. '(' → logprob: -2.753270149230957
    6. ' ' → logprob: -3.878270149230957
    7. ',' → logprob: -4.253270149230957
    8. 'd' → logprob: -5.503270149230957
    9. ' )' → logprob: -5.878270149230957
    10. 'def' → logprob: -6.128270149230957

Token 48: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9230160117149353
    2. ')' → logprob: -1.42301607131958
    3. 'i' → logprob: -1.42301607131958
    4. ' ' → logprob: -3.54801607131958
    5. ' (' → logprob: -3.92301607131958
    6. 'if' → logprob: -4.04801607131958
    7. ' )' → logprob: -4.17301607131958
    8. '   ' → logprob: -4.54801607131958
    9. ' i' → logprob: -5.04801607131958
    10. 't' → logprob: -5.04801607131958

Token 49: ' Returns' (ID: 9609)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.51512610912323
    2. ')' → logprob: -2.1401262283325195
    3. '   ' → logprob: -2.5151262283325195
    4. ' i' → logprob: -2.8901262283325195
    5. 'p' → logprob: -3.3901262283325195
    6. ' if' → logprob: -3.8901262283325195
    7. ' )' → logprob: -4.2651262283325195
    8. 'if' → logprob: -4.3901262283325195
    9. 's' → logprob: -4.6401262283325195
    10. '    ' → logprob: -4.6401262283325195

Token 50: ' (' (ID: 350)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.09502802044153214
    2. ' Tree' → logprob: -2.4700279235839844
    3. ' ' → logprob: -5.595027923583984
    4. 'None' → logprob: -6.095027923583984
    5. ' a' → logprob: -9.970027923583984
    6. 'Tree' → logprob: -10.595027923583984
    7. '<Tree' → logprob: -11.720027923583984
    8. '	Tree' → logprob: -12.220027923583984
    9. ' True' → logprob: -12.345027923583984
    10. '(Tree' → logprob: -13.470027923583984

Token 51: 'tree' (ID: 19816)
  Prédit: ' Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.8209974765777588
    2. 'Tree' → logprob: -1.3209974765777588
    3. ' None' → logprob: -2.070997476577759
    4. 'None' → logprob: -2.195997476577759
    5. ' tree' → logprob: -3.070997476577759
    6. 'tree' → logprob: -5.44599723815918
    7. ' root' → logprob: -6.32099723815918
    8. ')' → logprob: -6.82099723815918
    9. '<Tree' → logprob: -7.07099723815918
    10. 'root' → logprob: -7.57099723815918

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009983554482460022
    2. ')' → logprob: -5.259983539581299
    3. ' ,' → logprob: -6.134983539581299
    4. ',None' → logprob: -6.134983539581299
    5. ' None' → logprob: -8.759984016418457
    6. 'None' → logprob: -8.884984016418457
    7. ',)' → logprob: -9.759984016418457
    8. ' ' → logprob: -11.509984016418457
    9. ' )' → logprob: -11.634984016418457
    10. '=None' → logprob: -11.759984016418457

Token 53: ' next' (ID: 2613)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3121820390224457
    2. ' rest' → logprob: -2.0621819496154785
    3. ' index' → logprob: -2.5621819496154785
    4. ' pos' → logprob: -3.5621819496154785
    5. ' remainder' → logprob: -5.1871819496154785
    6. ' None' → logprob: -5.3121819496154785
    7. ' ' → logprob: -5.4371819496154785
    8. ' idx' → logprob: -5.5621819496154785
    9. ' remaining' → logprob: -5.5621819496154785
    10. 's' → logprob: -5.8121819496154785

Token 54: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.980693519115448
    2. '_token' → logprob: -0.980693519115448
    3. ' )' → logprob: -2.3556935787200928
    4. ' _' → logprob: -2.9806935787200928
    5. '_index' → logprob: -3.1056935787200928
    6. '_pos' → logprob: -3.7306935787200928
    7. ')' → logprob: -4.105693340301514
    8. '_)' → logprob: -5.355693340301514
    9. '_char' → logprob: -5.355693340301514
    10. ' ' → logprob: -5.605693340301514

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004539061803370714
    2. ' )' → logprob: -5.7545390129089355
    3. ',' → logprob: -6.6295390129089355
    4. ' ,' → logprob: -11.004539489746094
    5. ' ' → logprob: -12.129539489746094
    6. '):' → logprob: -12.129539489746094
    7. ',)' → logprob: -12.754539489746094
    8. '0' → logprob: -13.129539489746094
    9. '),' → logprob: -13.504539489746094
    10. '   ' → logprob: -14.004539489746094

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7434016466140747
    2. ' ' → logprob: -0.9934016466140747
    3. ':' → logprob: -3.243401527404785
    4. '    ' → logprob: -3.493401527404785
    5. 'i' → logprob: -3.743401527404785
    6. '(' → logprob: -4.868401527404785
    7. ' :' → logprob: -4.993401527404785
    8. 'def' → logprob: -4.993401527404785
    9. '_' → logprob: -5.118401527404785
    10. ' i' → logprob: -5.243401527404785

Token 57: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8508481383323669
    2. ' ' → logprob: -0.9758481383323669
    3. 'd' → logprob: -2.7258481979370117
    4. 'p' → logprob: -3.3508481979370117
    5. '   ' → logprob: -3.7258481979370117
    6. '    ' → logprob: -4.725848197937012
    7. ')' → logprob: -4.725848197937012
    8. '(' → logprob: -4.725848197937012
    9. 'n' → logprob: -4.975848197937012
    10. 't' → logprob: -5.100848197937012

Token 58: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.072326898574829
    2. 'i' → logprob: -1.572326898574829
    3. 'pos' → logprob: -2.197326898574829
    4. ' pos' → logprob: -2.197326898574829
    5. ' ' → logprob: -2.947326898574829
    6. '    ' → logprob: -2.947326898574829
    7. '   ' → logprob: -3.447326898574829
    8. 'p' → logprob: -3.697326898574829
    9. ' if' → logprob: -3.947326898574829
    10. ' p' → logprob: -4.57232666015625

Token 59: '[pos' (ID: 48272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003001888981088996
    2. '[int' → logprob: -9.000300407409668
    3. '[s' → logprob: -9.625300407409668
    4. '[]' → logprob: -10.750300407409668
    5. '   ' → logprob: -11.375300407409668
    6. '[pos' → logprob: -11.625300407409668
    7. '[token' → logprob: -11.875300407409668
    8. '\[' → logprob: -12.125300407409668
    9. '[n' → logprob: -12.250300407409668
    10. ',' → logprob: -12.375300407409668

Token 60: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24276627600193024
    2. ']' → logprob: -2.1177663803100586
    3. ' )' → logprob: -2.6177663803100586
    4. '+' → logprob: -4.742766380310059
    5. ' ]' → logprob: -5.117766380310059
    6. ':' → logprob: -6.492766380310059
    7. '<|end|>' → logprob: -7.117766380310059
    8. ']==' → logprob: -7.242766380310059
    9. '=' → logprob: -7.492766380310059
    10. ')]' → logprob: -7.867766380310059

Token 61: ' should' (ID: 1757)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8018625974655151
    2. '==' → logprob: -1.4268625974655151
    3. ' ' → logprob: -2.0518627166748047
    4. '[' → logprob: -2.6768627166748047
    5. '=' → logprob: -2.9268627166748047
    6. '<|end|>' → logprob: -3.8018627166748047
    7. ' =' → logprob: -4.801862716674805
    8. 'if' → logprob: -5.051862716674805
    9. ' if' → logprob: -5.176862716674805
    10. ',' → logprob: -5.426862716674805

Token 62: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.1401943415403366
    2. ' ' → logprob: -2.5151944160461426
    3. '  ' → logprob: -3.7651944160461426
    4. '=' → logprob: -4.515194416046143
    5. ' not' → logprob: -5.890194416046143
    6. '<|end|>' → logprob: -5.890194416046143
    7. 'be' → logprob: -6.140194416046143
    8. ' ==' → logprob: -6.265194416046143
    9. '==' → logprob: -7.265194416046143
    10. ' =' → logprob: -7.390194416046143

Token 63: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.255056232213974
    2. '(' → logprob: -1.5050562620162964
    3. '"' → logprob: -6.130056381225586
    4. ' (' → logprob: -7.380056381225586
    5. ' '('' → logprob: -8.380056381225586
    6. '('' → logprob: -11.380056381225586
    7. ''(' → logprob: -11.505056381225586
    8. '`' → logprob: -11.505056381225586
    9. ' ' → logprob: -11.880056381225586
    10. '')' → logprob: -12.005056381225586

Token 64: ' at' (ID: 540)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5433246493339539
    2. '   ' → logprob: -1.6683247089385986
    3. ':' → logprob: -2.7933247089385986
    4. ' ' → logprob: -2.9183247089385986
    5. ')' → logprob: -3.1683247089385986
    6. 'i' → logprob: -3.7933247089385986
    7. ' (' → logprob: -4.1683244705200195
    8. ',' → logprob: -5.2933244705200195
    9. 'pos' → logprob: -5.2933244705200195
    10. '    ' → logprob: -5.9183244705200195

Token 65: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7612845301628113
    2. 'pos' → logprob: -1.011284589767456
    3. ' pos' → logprob: -2.011284589767456
    4. ' ' → logprob: -3.636284589767456
    5. '<|end|>' → logprob: -5.886284351348877
    6. ' the' → logprob: -6.386284351348877
    7. ' s' → logprob: -6.636284351348877
    8. '<|end|>' → logprob: -6.886284351348877
    9. ' next' → logprob: -7.511284351348877
    10. 's' → logprob: -8.011284828186035

Token 66: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7954745292663574
    2. '   ' → logprob: -1.1704745292663574
    3. 'i' → logprob: -2.2954745292663574
    4. ':' → logprob: -2.7954745292663574
    5. '(' → logprob: -4.045474529266357
    6. '    ' → logprob: -4.545474529266357
    7. ')' → logprob: -4.670474529266357
    8. ' :' → logprob: -5.170474529266357
    9. 'n' → logprob: -5.295474529266357
    10. ' i' → logprob: -5.420474529266357

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.140374094247818
    2. ' ' → logprob: -2.890374183654785
    3. '    ' → logprob: -3.890374183654785
    4. ':' → logprob: -3.890374183654785
    5. ' :' → logprob: -5.140374183654785
    6. ' 
' → logprob: -5.265374183654785
    7. ',' → logprob: -5.640374183654785
    8. ')' → logprob: -6.140374183654785
    9. '       ' → logprob: -6.390374183654785
    10. '     
' → logprob: -6.390374183654785

Token 68: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8187302947044373
    2. ' ' → logprob: -1.318730354309082
    3. '    ' → logprob: -2.818730354309082
    4. ' pos' → logprob: -2.943730354309082
    5. 'pos' → logprob: -3.443730354309082
    6. 'i' → logprob: -3.568730354309082
    7. ' if' → logprob: -3.568730354309082
    8. ' 
' → logprob: -3.943730354309082
    9. 'n' → logprob: -3.943730354309082
    10. 'p' → logprob: -4.693730354309082

Token 69: ' helper' (ID: 25246)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.0031594187021255493
    2. ' helper' → logprob: -6.003159523010254
    3. 'parse' → logprob: -8.253159523010254
    4. '_parse' → logprob: -8.753159523010254
    5. ' _' → logprob: -8.878159523010254
    6. ' parser' → logprob: -10.003159523010254
    7. '_helper' → logprob: -10.253159523010254
    8. ' inner' → logprob: -11.003159523010254
    9. ' p' → logprob: -11.753159523010254
    10. '	parse' → logprob: -12.003159523010254

Token 70: '(pos' (ID: 24566)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36194518208503723
    2. '(s' → logprob: -1.2369451522827148
    3. ' (' → logprob: -4.361945152282715
    4. 's' → logprob: -8.236945152282715
    5. '(
' → logprob: -9.611945152282715
    6. '(pos' → logprob: -9.736945152282715
    7. '('' → logprob: -10.111945152282715
    8. '("("' → logprob: -10.236945152282715
    9. '(p' → logprob: -10.486945152282715
    10. '(paren' → logprob: -10.736945152282715

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003241166938096285
    2. ')' → logprob: -5.878241062164307
    3. ':' → logprob: -8.253241539001465
    4. '):
' → logprob: -9.628241539001465
    5. ' ):' → logprob: -9.628241539001465
    6. '   ' → logprob: -10.753241539001465
    7. ' ' → logprob: -12.378241539001465
    8. '=' → logprob: -12.753241539001465
    9. '<|end|>' → logprob: -12.878241539001465
    10. ',' → logprob: -13.378241539001465

Token 72: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6362445950508118
    2. '       ' → logprob: -1.136244535446167
    3. '    ' → logprob: -2.761244535446167
    4. '   ' → logprob: -3.136244535446167
    5. '<|end|>' → logprob: -4.261244773864746
    6. '        ' → logprob: -4.386244773864746
    7. '  ' → logprob: -5.011244773864746
    8. '     ' → logprob: -6.011244773864746
    9. '      ' → logprob: -7.011244773864746
    10. '        
' → logprob: -7.261244773864746

Token 73: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21948988735675812
    2. 'if' (adapté à ' if') → logprob: -1.9694899320602417
    3. ' if' → logprob: -3.344489812850952
    4. 'pos' → logprob: -5.094490051269531
    5. 's' → logprob: -5.219490051269531
    6. '<|end|>' → logprob: -5.719490051269531
    7. ' 
' → logprob: -6.719490051269531
    8. ' pos' → logprob: -6.719490051269531
    9. '    ' → logprob: -7.094490051269531
    10. '#' → logprob: -7.219490051269531

Token 74: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.002212704159319401
    2. 's' → logprob: -6.3772125244140625
    3. ' ' → logprob: -8.002212524414062
    4. ' pos' → logprob: -8.752212524414062
    5. 'pos' → logprob: -11.377212524414062
    6. ' not' → logprob: -13.002212524414062
    7. ' ' → logprob: -13.627212524414062
    8. '	s' → logprob: -13.877212524414062
    9. '    ' → logprob: -15.377212524414062
    10. ' (' → logprob: -15.877212524414062

Token 75: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.01818939670920372
    2. '[' → logprob: -4.018189430236816
    3. ' [' → logprob: -10.518189430236816
    4. '[
' → logprob: -12.768189430236816
    5. '==' → logprob: -13.268189430236816
    6. '```' → logprob: -13.268189430236816
    7. '[p' → logprob: -14.018189430236816
    8. '[position' → logprob: -14.143189430236816
    9. '[int' → logprob: -14.143189430236816
    10. 'pos' → logprob: -14.143189430236816

Token 76: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7201350927352905
    2. ')' → logprob: -1.0951350927352905
    3. '!=' → logprob: -2.72013521194458
    4. ' ==' → logprob: -2.84513521194458
    5. ']' → logprob: -3.72013521194458
    6. '=' → logprob: -4.47013521194458
    7. '==' → logprob: -4.72013521194458
    8. ' )' → logprob: -5.34513521194458
    9. ' ' → logprob: -6.22013521194458
    10. '[' → logprob: -6.97013521194458

Token 77: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.533043384552002
    2. ' !=' → logprob: -1.033043384552002
    3. ' ==' → logprob: -3.658043384552002
    4. '==' → logprob: -3.783043384552002
    5. '=' → logprob: -5.408043384552002
    6. '!='' → logprob: -5.658043384552002
    7. '[' → logprob: -8.158042907714844
    8. ' ' → logprob: -8.908042907714844
    9. '=='' → logprob: -9.033042907714844
    10. '!' → logprob: -10.033042907714844

Token 78: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026862377300858498
    2. ' '('' → logprob: -3.651862382888794
    3. '"' → logprob: -8.026862144470215
    4. '(' → logprob: -8.901862144470215
    5. ' '' → logprob: -9.651862144470215
    6. ''(' → logprob: -10.776862144470215
    7. ' (' → logprob: -12.276862144470215
    8. ' "("' → logprob: -12.401862144470215
    9. ' ' → logprob: -12.401862144470215
    10. '('' → logprob: -14.526862144470215

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08116655051708221
    2. '):' → logprob: -3.3311665058135986
    3. ')' → logprob: -3.7061665058135986
    4. ' ' → logprob: -4.706166744232178
    5. ' :' → logprob: -5.831166744232178
    6. ' ):' → logprob: -5.956166744232178
    7. ':return' → logprob: -6.831166744232178
    8. ' )' → logprob: -7.206166744232178
    9. '<|end|>' → logprob: -7.206166744232178
    10. ':
' → logprob: -8.58116626739502

Token 80: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009352508001029491
    2. '           ' → logprob: -5.384352684020996
    3. '            ' → logprob: -6.634352684020996
    4. ' )' → logprob: -7.134352684020996
    5. ' 
' → logprob: -7.384352684020996
    6. ')' → logprob: -7.759352684020996
    7. '        ' → logprob: -8.259352684020996
    8. '       ' → logprob: -8.384352684020996
    9. '<|end|>' → logprob: -9.009352684020996
    10. ' ')' → logprob: -9.134352684020996

Token 81: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07632648944854736
    2. ' None' → logprob: -2.826326370239258
    3. 'None' → logprob: -5.201326370239258
    4. 'r' → logprob: -5.201326370239258
    5. ' 
' → logprob: -6.076326370239258
    6. ' raise' → logprob: -8.701326370239258
    7. 'n' → logprob: -8.951326370239258
    8. ' return' → logprob: -8.951326370239258
    9. ' (' → logprob: -10.076326370239258
    10. ' )' → logprob: -10.201326370239258

Token 82: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.10021637380123138
    2. 'None' → logprob: -2.3502163887023926
    3. '(None' → logprob: -12.475215911865234
    4. ',None' → logprob: -12.475215911865234
    5. ' none' → logprob: -13.600215911865234
    6. '_None' → logprob: -14.975215911865234
    7. ' ' → logprob: -15.725215911865234
    8. ')' → logprob: -16.225215911865234
    9. 'none' → logprob: -16.850215911865234
    10. '_none' → logprob: -16.975215911865234

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04798920825123787
    2. ',None' → logprob: -3.1729891300201416
    3. ',pos' → logprob: -5.797989368438721
    4. 'None' → logprob: -7.672989368438721
    5. ' ,' → logprob: -7.797989368438721
    6. ')' → logprob: -8.297988891601562
    7. ',
' → logprob: -8.547988891601562
    8. ',nil' → logprob: -8.797988891601562
    9. '<|end|>' → logprob: -9.047988891601562
    10. ',null' → logprob: -9.672988891601562

Token 84: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12693126499652863
    2. ' pos' → logprob: -2.1269311904907227
    3. '	pos' → logprob: -12.751931190490723
    4. ' ' → logprob: -16.87693214416504
    5. '0' → logprob: -17.12693214416504
    6. '_pos' → logprob: -17.25193214416504
    7. '    ' → logprob: -17.75193214416504
    8. ',pos' → logprob: -18.00193214416504
    9. '[pos' → logprob: -18.12693214416504
    10. '(pos' → logprob: -18.12693214416504

Token 85: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.204135000705719
    2. '
' → logprob: -2.579134941101074
    3. '\n' → logprob: -2.954134941101074
    4. ' 
' → logprob: -3.329134941101074
    5. ' ' → logprob: -4.954134941101074
    6. '\' → logprob: -5.829134941101074
    7. '+
' → logprob: -5.829134941101074
    8. '<|end|>' → logprob: -6.579134941101074
    9. '    
' → logprob: -7.079134941101074
    10. ')' → logprob: -7.204134941101074

Token 86: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02590310573577881
    2. ' ' → logprob: -4.900903224945068
    3. '   ' → logprob: -5.775903224945068
    4. ')' → logprob: -6.025903224945068
    5. ' +' → logprob: -6.150903224945068
    6. '    ' → logprob: -6.275903224945068
    7. ' 
' → logprob: -6.525903224945068
    8. '+
' → logprob: -7.025903224945068
    9. '\n' → logprob: -7.150903224945068
    10. '     
' → logprob: -7.400903224945068

Token 87: ' pos' (ID: 1253)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2532946467399597
    2. 'pos' (adapté à ' pos') → logprob: -1.8782947063446045
    3. ' pos' → logprob: -2.7532947063446045
    4. '<|end|>' → logprob: -6.253294467926025
    5. '	pos' → logprob: -6.628294467926025
    6. '        
' → logprob: -7.503294467926025
    7. ',pos' → logprob: -7.503294467926025
    8. ' ' → logprob: -7.628294467926025
    9. '   ' → logprob: -7.628294467926025
    10. '        ' → logprob: -7.753294467926025

Token 88: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3505931794643402
    2. ' +' → logprob: -1.3505932092666626
    3. ' +=' → logprob: -3.350593090057373
    4. '+=' → logprob: -6.975593090057373
    5. ' =' → logprob: -7.975593090057373
    6. '<|end|>' → logprob: -8.475593566894531
    7. ' ' → logprob: -9.850593566894531
    8. ' +
' → logprob: -10.975593566894531
    9. '=' → logprob: -11.350593566894531
    10. '<|end|>' → logprob: -12.475593566894531

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.875911712646484
    4. '2' → logprob: -17.000911712646484
    5. ' ' → logprob: -17.375911712646484
    6. '```' → logprob: -18.375911712646484
    7. '１' → logprob: -18.750911712646484
    8. '`' → logprob: -19.188411712646484
    9. '  ' → logprob: -19.250911712646484
    10. '
' → logprob: -19.625911712646484

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.375008583068848
    4. '```' → logprob: -17.25000762939453
    5. '2' → logprob: -17.75000762939453
    6. '
' → logprob: -18.12500762939453
    7. '  ' → logprob: -18.31250762939453
    8. '

' → logprob: -19.12500762939453
    9. '`' → logprob: -19.50000762939453
    10. '１' → logprob: -20.00000762939453

Token 91: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8023821115493774
    2. 'if' → logprob: -1.0523821115493774
    3. ' ' → logprob: -2.427381992340088
    4. ' if' → logprob: -2.677381992340088
    5. '        
' → logprob: -4.302381992340088
    6. ' 
' → logprob: -4.802381992340088
    7. '<|end|>' → logprob: -4.927381992340088
    8. '        ' → logprob: -5.552381992340088
    9. ',' → logprob: -6.052381992340088
    10. '    ' → logprob: -6.427381992340088

Token 92: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007148671895265579
    2. '       ' → logprob: -5.507148742675781
    3. ' if' → logprob: -5.882148742675781
    4. '#' → logprob: -9.257148742675781
    5. ' ' → logprob: -9.382148742675781
    6. 'while' → logprob: -10.882148742675781
    7. '        
' → logprob: -11.382148742675781
    8. ',' → logprob: -11.382148742675781
    9. '   ' → logprob: -11.632148742675781
    10. 'token' → logprob: -11.757148742675781

Token 93: ' skip' (ID: 16677)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22408707439899445
    2. '#' → logprob: -1.724087119102478
    3. ' if' → logprob: -4.599087238311768
    4. ' #' → logprob: -5.224087238311768
    5. ' ' → logprob: -5.849087238311768
    6. 'while' → logprob: -6.724087238311768
    7. '
' → logprob: -7.349087238311768
    8. 'skip' → logprob: -7.474087238311768
    9. ' 
' → logprob: -7.849087238311768
    10. 'If' → logprob: -8.47408676147461

Token 94: ' '('' (ID: 87284)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4180237352848053
    2. ' (' → logprob: -1.793023705482483
    3. ''' → logprob: -2.4180238246917725
    4. ' '('' → logprob: -3.2930238246917725
    5. ' ' → logprob: -3.4180238246917725
    6. ' whitespace' → logprob: -5.168023586273193
    7. '<|end|>' → logprob: -6.168023586273193
    8. '`' → logprob: -6.918023586273193
    9. '('' → logprob: -7.043023586273193
    10. ',' → logprob: -7.043023586273193

Token 95: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29184049367904663
    2. '       ' → logprob: -2.4168405532836914
    3. 'i' → logprob: -2.5418405532836914
    4. ' if' → logprob: -2.6668405532836914
    5. ' ' → logprob: -4.541840553283691
    6. ',' → logprob: -7.291840553283691
    7. ' 
' → logprob: -7.416840553283691
    8. '        
' → logprob: -7.416840553283691
    9. 'n' → logprob: -7.541840553283691
    10. ' i' → logprob: -8.166840553283691

Token 96: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35215264558792114
    2. '       ' → logprob: -1.3521525859832764
    3. ' if' → logprob: -3.3521525859832764
    4. '        
' → logprob: -6.7271528244018555
    5. ' ' → logprob: -7.2271528244018555
    6. '
' → logprob: -8.477152824401855
    7. '   ' → logprob: -8.602152824401855
    8. ' 
' → logprob: -8.852152824401855
    9. '  
' → logprob: -9.102152824401855
    10. '<|end|>' → logprob: -9.477152824401855

Token 97: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005839926656335592
    2. 'left' → logprob: -5.880839824676514
    3. ' if' → logprob: -5.880839824676514
    4. ',' → logprob: -9.130840301513672
    5. '       ' → logprob: -10.630840301513672
    6. 'tree' → logprob: -10.630840301513672
    7. 'root' → logprob: -11.130840301513672
    8. ' left' → logprob: -11.630840301513672
    9. ' ' → logprob: -11.880840301513672
    10. 'If' → logprob: -12.130840301513672

Token 98: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.020558703690767288
    2. 's' → logprob: -3.8955585956573486
    3. ' ' → logprob: -11.39555835723877
    4. ',' → logprob: -14.14555835723877
    5. '	s' → logprob: -14.45805835723877
    6. '   ' → logprob: -14.70805835723877
    7. ',s' → logprob: -14.95805835723877
    8. '    ' → logprob: -14.95805835723877
    9. '_s' → logprob: -14.95805835723877
    10. '(s' → logprob: -15.39555835723877

Token 99: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.18806427717208862
    2. '[' → logprob: -2.5630643367767334
    3. ' ==' → logprob: -2.8130643367767334
    4. '==' → logprob: -4.188064098358154
    5. '<|end|>' → logprob: -5.188064098358154
    6. ' ' → logprob: -5.313064098358154
    7. 's' → logprob: -6.063064098358154
    8. '[s' → logprob: -6.688064098358154
    9. '   ' → logprob: -7.563064098358154
    10. '[
' → logprob: -7.813064098358154

Token 100: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1311640590429306
    2. '==' → logprob: -2.131164073944092
    3. ']==' → logprob: -6.881164073944092
    4. ')' → logprob: -7.256164073944092
    5. '=' → logprob: -7.256164073944092
    6. ' ' → logprob: -7.381164073944092
    7. ']' → logprob: -7.631164073944092
    8. ',' → logprob: -8.381163597106934
    9. ' ,' → logprob: -9.131163597106934
    10. ')==' → logprob: -9.381163597106934

Token 101: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5273897051811218
    2. '==' → logprob: -0.9023897051811218
    3. ' ' → logprob: -5.9023895263671875
    4. '=' → logprob: -7.0273895263671875
    5. ',' → logprob: -7.9023895263671875
    6. ' ,' → logprob: -9.902389526367188
    7. ' =' → logprob: -10.027389526367188
    8. ')==' → logprob: -10.777389526367188
    9. ' !=' → logprob: -10.902389526367188
    10. ' in' → logprob: -11.152389526367188

Token 102: ' ','' (ID: 56369)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.3926320970058441
    2. '',' → logprob: -1.1426321268081665
    3. ',' → logprob: -5.642632007598877
    4. '')' → logprob: -6.642632007598877
    5. ' ','' → logprob: -8.142632484436035
    6. ' ',' → logprob: -8.642632484436035
    7. '(',' → logprob: -9.517632484436035
    8. ''):' → logprob: -9.517632484436035
    9. ''' → logprob: -9.767632484436035
    10. '(','' → logprob: -10.142632484436035

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10703039914369583
    2. ',' → logprob: -2.6070303916931152
    3. '):' → logprob: -4.357030391693115
    4. '<|end|>' → logprob: -5.232030391693115
    5. ')' → logprob: -5.357030391693115
    6. ' ,' → logprob: -6.107030391693115
    7. ' ' → logprob: -6.982030391693115
    8. ':
' → logprob: -7.357030391693115
    9. ' :' → logprob: -7.857030391693115
    10. ' and' → logprob: -8.357030868530273

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.766676127910614
    2. ' None' → logprob: -0.766676127910614
    3. 'None' → logprob: -3.266676187515259
    4. ',None' → logprob: -4.64167594909668
    5. '       ' → logprob: -4.89167594909668
    6. ' ' → logprob: -5.39167594909668
    7. '(None' → logprob: -5.76667594909668
    8. '<|end|>' → logprob: -5.76667594909668
    9. ',' → logprob: -6.39167594909668
    10. ' ,' → logprob: -7.14167594909668

Token 105: ' left' (ID: 3561)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3794711232185364
    2. 'None' → logprob: -1.5044710636138916
    3. ' left' → logprob: -2.7544710636138916
    4. 'left' (adapté à ' left') → logprob: -4.379471302032471
    5. '       ' → logprob: -5.004471302032471
    6. ' return' → logprob: -5.504471302032471
    7. '        ' → logprob: -6.004471302032471
    8. 'return' → logprob: -7.004471302032471
    9. ',None' → logprob: -7.629471302032471
    10. ' ' → logprob: -7.754471302032471

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4283973276615143
    2. ' =' → logprob: -1.428397297859192
    3. ',' → logprob: -2.4283974170684814
    4. '=None' → logprob: -3.9283974170684814
    5. ',None' → logprob: -7.928397178649902
    6. ' ,' → logprob: -8.178397178649902
    7. '=null' → logprob: -9.553397178649902
    8. ' ' → logprob: -9.928397178649902
    9. ' None' → logprob: -10.053397178649902
    10. 'None' → logprob: -10.678397178649902

Token 107: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029751762747764587
    2. ' None' → logprob: -3.529751777648926
    3. '_None' → logprob: -14.404751777648926
    4. '(None' → logprob: -14.904751777648926
    5. ',None' → logprob: -14.904751777648926
    6. '   ' → logprob: -16.52975082397461
    7. 'none' → logprob: -17.52975082397461
    8. '=None' → logprob: -17.65475082397461
    9. '.None' → logprob: -17.90475082397461
    10. '
' → logprob: -18.15475082397461

Token 108: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14359307289123535
    2. ' else' → logprob: -2.6435930728912354
    3. 'else' (adapté à ' else') → logprob: -2.8935930728912354
    4. '           ' → logprob: -5.893592834472656
    5. ',' → logprob: -6.893592834472656
    6. '   ' → logprob: -7.143592834472656
    7. '<|end|>' → logprob: -7.143592834472656
    8. '        ' → logprob: -8.018592834472656
    9. 'elif' → logprob: -8.018592834472656
    10. ' ' → logprob: -8.268592834472656

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4000445604324341
    2. '       ' → logprob: -2.6500444412231445
    3. '        ' → logprob: -2.6500444412231445
    4. ',' → logprob: -2.9000444412231445
    5. ':
' → logprob: -3.5250444412231445
    6. ' helper' → logprob: -3.7750444412231445
    7. '           ' → logprob: -3.9000444412231445
    8. '<|end|>' → logprob: -4.1500444412231445
    9. '<|end|>' → logprob: -4.1500444412231445
    10. ' ' → logprob: -5.0250444412231445

Token 112: '           ' (ID: 352)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.5607686042785645
    2. 'left' → logprob: -1.4357686042785645
    3. ' helper' → logprob: -2.9357686042785645
    4. '           ' → logprob: -3.0607686042785645
    5. 'helper' → logprob: -3.8107686042785645
    6. ' tree' → logprob: -3.9357686042785645
    7. 'tree' → logprob: -4.1857686042785645
    8. ',' → logprob: -5.8107686042785645
    9. '        ' → logprob: -5.8107686042785645
    10. 'root' → logprob: -5.9357686042785645

Token 113: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.39003241062164307
    2. 'left' (adapté à ' left') → logprob: -1.140032410621643
    3. ' tree' → logprob: -7.2650322914123535
    4. 'tree' → logprob: -7.5150322914123535
    5. 'root' → logprob: -8.140032768249512
    6. ' subtree' → logprob: -8.140032768249512
    7. ' node' → logprob: -8.265032768249512
    8. 'node' → logprob: -8.390032768249512
    9. '
' → logprob: -8.640032768249512
    10. '(left' → logprob: -9.265032768249512

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.4192871175473556e-05
    2. ',node' → logprob: -10.750054359436035
    3. ' ,' → logprob: -11.250054359436035
    4. ',left' → logprob: -12.750054359436035
    5. ',right' → logprob: -13.000054359436035
    6. ',new' → logprob: -13.125054359436035
    7. ',result' → logprob: -13.125054359436035
    8. ',None' → logprob: -13.500054359436035
    9. ',next' → logprob: -13.625054359436035
    10. ',is' → logprob: -13.875054359436035

Token 115: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.11173036694526672
    2. 'pos' → logprob: -2.3617303371429443
    3. '<|end|>' → logprob: -4.986730575561523
    4. ' next' → logprob: -6.486730575561523
    5. 'next' → logprob: -7.111730575561523
    6. '<|end|>' → logprob: -7.736730575561523
    7. '_pos' → logprob: -7.986730575561523
    8. '(pos' → logprob: -7.986730575561523
    9. ' helper' → logprob: -8.486730575561523
    10. '_next' → logprob: -8.736730575561523

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49815768003463745
    2. '=' → logprob: -0.9981576800346375
    3. ',' → logprob: -3.7481577396392822
    4. '<|end|>' → logprob: -9.748157501220703
    5. ' ,' → logprob: -9.998157501220703
    6. ' ' → logprob: -10.623157501220703
    7. ')' → logprob: -10.748157501220703
    8. '        ' → logprob: -10.873157501220703
    9. '    ' → logprob: -11.248157501220703
    10. '            ' → logprob: -11.373157501220703

Token 117: ' helper' (ID: 25246)
  Prédit: ' helper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' helper' → logprob: -0.005234475247561932
    2. 'helper' → logprob: -5.255234241485596
    3. '(helper' → logprob: -14.755234718322754
    4. '_helper' → logprob: -15.630234718322754
    5. '/helper' → logprob: -16.755233764648438
    6. 'Helper' → logprob: -17.505233764648438
    7. '.helper' → logprob: -17.630233764648438
    8. '-helper' → logprob: -18.505233764648438
    9. ' help' → logprob: -18.755233764648438
    10. ' Helper' → logprob: -19.630233764648438

Token 118: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0010384062770754099
    2. '(' → logprob: -7.001038551330566
    3. 'pos' → logprob: -9.376038551330566
    4. ' (' → logprob: -10.376038551330566
    5. '(
' → logprob: -12.376038551330566
    6. ' pos' → logprob: -12.626038551330566
    7. '(s' → logprob: -13.376038551330566
    8. '[pos' → logprob: -14.876038551330566
    9. '(op' → logprob: -15.751038551330566
    10. ',pos' → logprob: -15.876038551330566

Token 119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006545356009155512
    2. '       ' → logprob: -8.375654220581055
    3. '<|end|>' → logprob: -8.625654220581055
    4. ' )' → logprob: -8.875654220581055
    5. ')
' → logprob: -9.375654220581055
    6. '<|end|>' → logprob: -12.375654220581055
    7. '           ' → logprob: -12.750654220581055
    8. ')return' → logprob: -12.875654220581055
    9. '   ' → logprob: -13.000654220581055
    10. ' ' → logprob: -13.000654220581055

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049986761063337326
    2. '<|end|>' → logprob: -3.1749868392944336
    3. ',' → logprob: -5.174986839294434
    4. '        
' → logprob: -7.549986839294434
    5. '        ' → logprob: -8.549986839294434
    6. '   ' → logprob: -9.174986839294434
    7. '<|end|>' → logprob: -9.174986839294434
    8. '    ' → logprob: -9.299986839294434
    9. '      ' → logprob: -9.799986839294434
    10. '
' → logprob: -9.924986839294434

Token 121: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012830757535994053
    2. '   ' → logprob: -5.26283073425293
    3. ',
' → logprob: -6.13783073425293
    4. '       ' → logprob: -6.51283073425293
    5. ',pos' → logprob: -6.63783073425293
    6. '<|end|>' → logprob: -6.88783073425293
    7. '    ' → logprob: -7.51283073425293
    8. ' ,' → logprob: -7.76283073425293
    9. ' ' → logprob: -8.63783073425293
    10. 'pos' → logprob: -8.88783073425293

Token 122: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01610112003982067
    2. 's' → logprob: -4.141100883483887
    3. ' ' → logprob: -10.266100883483887
    4. '    ' → logprob: -10.891100883483887
    5. '   ' → logprob: -11.641100883483887
    6. '	s' → logprob: -13.016100883483887
    7. '  ' → logprob: -13.891100883483887
    8. ' ' → logprob: -14.891100883483887
    9. ' 
' → logprob: -15.766100883483887
    10. '     ' → logprob: -15.828600883483887

Token 123: '[pos' (ID: 48272)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9096452593803406
    2. '==' → logprob: -1.6596453189849854
    3. ' ' → logprob: -1.9096453189849854
    4. ' !=' → logprob: -2.7846453189849854
    5. '[pos' → logprob: -3.0346453189849854
    6. '[' → logprob: -3.1596453189849854
    7. ' +=' → logprob: -4.159645080566406
    8. '!=' → logprob: -4.284645080566406
    9. '<|end|>' → logprob: -4.409645080566406
    10. ' >=' → logprob: -4.534645080566406

Token 124: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3566465973854065
    2. '==' → logprob: -1.2316465377807617
    3. ']' → logprob: -5.731646537780762
    4. ' !=' → logprob: -6.231646537780762
    5. ']==' → logprob: -6.856646537780762
    6. ' +=' → logprob: -7.981646537780762
    7. ' ' → logprob: -8.106646537780762
    8. ')' → logprob: -8.356646537780762
    9. '   ' → logprob: -8.356646537780762
    10. '!=' → logprob: -8.856646537780762

Token 125: ' !=' (ID: 1666)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25078248977661133
    2. '==' → logprob: -2.6257824897766113
    3. ' ,' → logprob: -2.7507824897766113
    4. ' ==' → logprob: -2.7507824897766113
    5. ' ' → logprob: -4.625782489776611
    6. '=' → logprob: -5.750782489776611
    7. '','' → logprob: -6.000782489776611
    8. '  ' → logprob: -6.375782489776611
    9. ' !=' → logprob: -6.625782489776611
    10. '   ' → logprob: -7.375782489776611

Token 126: ' ','' (ID: 56369)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.12852658331394196
    2. ',' → logprob: -2.6285266876220703
    3. '',' → logprob: -3.1285266876220703
    4. ' ,' → logprob: -6.12852668762207
    5. '","' → logprob: -6.87852668762207
    6. ' ','' → logprob: -7.00352668762207
    7. ' ' → logprob: -9.00352668762207
    8. '','=' → logprob: -9.00352668762207
    9. '`,`' → logprob: -9.75352668762207
    10. '",' → logprob: -9.75352668762207

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3847939372062683
    2. ',' → logprob: -1.384793996810913
    3. '<|end|>' → logprob: -3.634793996810913
    4. ' ,' → logprob: -3.884793996810913
    5. '<|end|>' → logprob: -5.134793758392334
    6. '       ' → logprob: -5.134793758392334
    7. '           ' → logprob: -5.759793758392334
    8. '   ' → logprob: -6.259793758392334
    9. ':
' → logprob: -6.384793758392334
    10. ' :' → logprob: -7.134793758392334

Token 128: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' return' (ID: 622)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.2355508655309677
    2. ' return' → logprob: -1.735550880432129
    3. '            ' → logprob: -4.485550880432129
    4. '        ' → logprob: -4.985550880432129
    5. '           ' → logprob: -5.110550880432129
    6. ' ' → logprob: -5.235550880432129
    7. ' break' → logprob: -6.860550880432129
    8. 'raise' → logprob: -6.985550880432129
    9. '    ' → logprob: -7.235550880432129
    10. '       ' → logprob: -7.610550880432129

Token 130: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008615399710834026
    2. ' None' → logprob: -4.758615493774414
    3. '(None' → logprob: -14.133615493774414
    4. ',None' → logprob: -16.258615493774414
    5. '
' → logprob: -17.383615493774414
    6. '=None' → logprob: -18.383615493774414
    7. 'none' → logprob: -18.633615493774414
    8. '_None' → logprob: -18.883615493774414
    9. ' ' → logprob: -20.508615493774414
    10. 'False' → logprob: -20.508615493774414

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2233518362045288
    2. ',pos' → logprob: -1.8483518362045288
    3. ' ,' → logprob: -3.3483519554138184
    4. ' pos' → logprob: -5.473351955413818
    5. ',None' → logprob: -6.473351955413818
    6. 'pos' → logprob: -6.723351955413818
    7. '<|end|>' → logprob: -7.848351955413818
    8. '	pos' → logprob: -10.22335147857666
    9. ' None' → logprob: -10.22335147857666
    10. 'None' → logprob: -10.34835147857666

Token 132: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3868746757507324
    2. 'pos' → logprob: -1.1368746757507324
    3. '	pos' → logprob: -13.63687515258789
    4. 's' → logprob: -14.51187515258789
    5. 'None' → logprob: -14.88687515258789
    6. '
' → logprob: -15.13687515258789
    7. '(pos' → logprob: -15.26187515258789
    8. 'p' → logprob: -15.38687515258789
    9. ' ' → logprob: -15.88687515258789
    10. 'Pos' → logprob: -16.01187515258789

Token 133: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013961104676127434
    2. '   ' → logprob: -5.513961315155029
    3. '<|end|>' → logprob: -5.513961315155029
    4. ',' → logprob: -6.013961315155029
    5. '    ' → logprob: -7.263961315155029
    6. '        ' → logprob: -7.513961315155029
    7. '
' → logprob: -7.638961315155029
    8. '        
' → logprob: -8.138960838317871
    9. 'pos' → logprob: -8.638960838317871
    10. '	' → logprob: -8.763960838317871

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2799603044986725
    2. ' pos' → logprob: -2.0299603939056396
    3. 'pos' → logprob: -2.5299603939056396
    4. '   ' → logprob: -3.7799603939056396
    5. '<|end|>' → logprob: -5.1549601554870605
    6. '	pos' → logprob: -7.0299601554870605
    7. '
' → logprob: -7.4049601554870605
    8. '    ' → logprob: -7.5299601554870605
    9. ',pos' → logprob: -7.7799601554870605
    10. '        
' → logprob: -7.9049601554870605

Token 135: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.2997916042804718
    2. ' pos' → logprob: -1.4247915744781494
    3. '       ' → logprob: -4.6747918128967285
    4. '   ' → logprob: -5.1747918128967285
    5. ',' → logprob: -6.4247918128967285
    6. ',pos' → logprob: -6.7997918128967285
    7. '    ' → logprob: -8.17479133605957
    8. '	pos' → logprob: -8.29979133605957
    9. '           ' → logprob: -9.67479133605957
    10. ' ,' → logprob: -9.67479133605957

Token 136: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.57595294713974
    2. ' +=' → logprob: -0.82595294713974
    3. '+' → logprob: -11.325952529907227
    4. ']+=' → logprob: -14.075952529907227
    5. '=' → logprob: -14.950952529907227
    6. '    ' → logprob: -16.075952529907227
    7. ' +' → logprob: -16.075952529907227
    8. '```' → logprob: -17.200952529907227
    9. '   ' → logprob: -17.325952529907227
    10. '+="' → logprob: -18.200952529907227

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.76104736328125
    4. '```' → logprob: -18.13604736328125
    5. '   ' → logprob: -18.51104736328125
    6. '
' → logprob: -18.88604736328125
    7. '１' → logprob: -19.26104736328125
    8. '0' → logprob: -19.63604736328125
    9. '+' → logprob: -19.82354736328125
    10. '۱' → logprob: -20.01104736328125

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '
' → logprob: -19.750001907348633
    5. '```' → logprob: -20.000001907348633
    6. '１' → logprob: -21.375001907348633
    7. '0' → logprob: -21.500001907348633
    8. '  ' → logprob: -21.687501907348633
    9. '۱' → logprob: -21.937501907348633
    10. '﻿' → logprob: -22.250001907348633

Token 139: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16317689418792725
    2. '       ' → logprob: -1.9131768941879272
    3. ' if' → logprob: -6.413177013397217
    4. '   ' → logprob: -6.663177013397217
    5. '	if' → logprob: -11.913176536560059
    6. '#' → logprob: -11.913176536560059
    7. ' ' → logprob: -12.038176536560059
    8. '
' → logprob: -12.163176536560059
    9. '     ' → logprob: -13.288176536560059
    10. '    ' → logprob: -13.663176536560059

Token 140: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004453147295862436
    2. '       ' → logprob: -5.504453182220459
    3. ' if' → logprob: -8.0044527053833
    4. '   ' → logprob: -10.3794527053833
    5. '#' → logprob: -11.7544527053833
    6. '	if' → logprob: -14.6294527053833
    7. '```' → logprob: -15.0044527053833
    8. 'If' → logprob: -15.2544527053833
    9. ' ' → logprob: -15.5044527053833
    10. '
' → logprob: -15.6294527053833

Token 141: ' skip' (ID: 16677)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23108279705047607
    2. ' #' → logprob: -2.7310829162597656
    3. '<|end|>' → logprob: -2.9810829162597656
    4. ' ' → logprob: -3.1060829162597656
    5. ' skip' → logprob: -4.356082916259766
    6. ' if' → logprob: -4.981082916259766
    7. 'skip' → logprob: -4.981082916259766
    8. '<|end|>' → logprob: -5.106082916259766
    9. 'if' → logprob: -5.356082916259766
    10. ' continue' → logprob: -6.106082916259766

Token 142: ' ',' (ID: 14089)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '','' → logprob: -0.29988887906074524
    2. ''' → logprob: -1.6748888492584229
    3. '',' → logprob: -3.799888849258423
    4. ')' → logprob: -4.174889087677002
    5. ''s' → logprob: -4.549889087677002
    6. '')' → logprob: -5.049889087677002
    7. ' ','' → logprob: -5.174889087677002
    8. ' '' → logprob: -6.174889087677002
    9. ',' → logprob: -6.299889087677002
    10. '(','' → logprob: -6.674889087677002

Token 143: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.048619385808706284
    2. '       ' → logprob: -3.048619270324707
    3. ' if' → logprob: -10.548619270324707
    4. '   ' → logprob: -12.173619270324707
    5. '```' → logprob: -15.048619270324707
    6. '	if' → logprob: -15.673619270324707
    7. '           ' → logprob: -16.048620223999023
    8. 'If' → logprob: -16.923620223999023
    9. '      ' → logprob: -17.923620223999023
    10. '     ' → logprob: -18.173620223999023

Token 145: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.3306015716807451e-05
    2. '       ' → logprob: -11.25001335144043
    3. ' if' → logprob: -15.25001335144043
    4. '   ' → logprob: -17.37501335144043
    5. '        
' → logprob: -20.25001335144043
    6. '```' → logprob: -20.25001335144043
    7. '	if' → logprob: -20.87501335144043
    8. '
' → logprob: -21.12501335144043
    9. '           ' → logprob: -21.12501335144043
    10. 'If' → logprob: -21.75001335144043

Token 146: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3132627606391907
    2. 's' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.938262939453125
    4. '(s' → logprob: -14.938262939453125
    5. '   ' → logprob: -16.063262939453125
    6. '_s' → logprob: -16.563262939453125
    7. '	s' → logprob: -16.688262939453125
    8. '<s' → logprob: -17.688262939453125
    9. '[s' → logprob: -17.813262939453125
    10. ',' → logprob: -18.375762939453125

Token 147: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.5048530030981055e-06
    2. 'pos' → logprob: -13.875001907348633
    3. '[' → logprob: -14.625001907348633
    4. '[position' → logprob: -18.875001907348633
    5. '[
' → logprob: -18.875001907348633
    6. '```' → logprob: -19.375001907348633
    7. ',pos' → logprob: -19.750001907348633
    8. ' pos' → logprob: -19.750001907348633
    9. '[p' → logprob: -20.375001907348633
    10. ' [' → logprob: -20.500001907348633

Token 148: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25964781641960144
    2. '==' → logprob: -1.5096478462219238
    3. ' !=' → logprob: -5.134647846221924
    4. '!=' → logprob: -7.259647846221924
    5. '=' → logprob: -7.759647846221924
    6. ' ' → logprob: -8.509647369384766
    7. ')' → logprob: -9.009647369384766
    8. ']' → logprob: -9.384647369384766
    9. ']==' → logprob: -9.384647369384766
    10. '   ' → logprob: -9.759647369384766

Token 149: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08959351480007172
    2. ' ==' → logprob: -2.4645934104919434
    3. '=' → logprob: -7.464593410491943
    4. ' ' → logprob: -10.839593887329102
    5. '  ' → logprob: -10.964593887329102
    6. '!=' → logprob: -11.464593887329102
    7. '    ' → logprob: -12.089593887329102
    8. '   ' → logprob: -12.089593887329102
    9. ' !=' → logprob: -12.589593887329102
    10. '==
' → logprob: -12.589593887329102

Token 150: ' ')' (ID: 35910)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '','' → logprob: -0.01185251772403717
    2. '',' → logprob: -4.511852741241455
    3. '')' → logprob: -7.136852741241455
    4. ''' → logprob: -12.261852264404297
    5. ' ','' → logprob: -13.261852264404297
    6. '","' → logprob: -13.886852264404297
    7. ',' → logprob: -13.886852264404297
    8. '(','' → logprob: -15.761852264404297
    9. '',(' → logprob: -16.011852264404297
    10. '','.' → logprob: -16.136852264404297

Token 151: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34574124217033386
    2. ':' → logprob: -1.3457412719726562
    3. '           ' → logprob: -3.4707412719726562
    4. '       ' → logprob: -7.845741271972656
    5. ',' → logprob: -8.970741271972656
    6. '          ' → logprob: -9.470741271972656
    7. '):
' → logprob: -9.720741271972656
    8. '   ' → logprob: -9.970741271972656
    9. ' :
' → logprob: -10.595741271972656
    10. ':

' → logprob: -10.720741271972656

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10989117622375488
    2. 'right' → logprob: -2.484891176223755
    3. 'None' → logprob: -4.734890937805176
    4. ' right' → logprob: -4.859890937805176
    5. ' None' → logprob: -6.109890937805176
    6. 'left' → logprob: -7.109890937805176
    7. '       ' → logprob: -7.734890937805176
    8. '   ' → logprob: -7.734890937805176
    9. '	right' → logprob: -8.734890937805176
    10. ' left' → logprob: -10.484890937805176

Token 153: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.018184827640652657
    2. ' right' → logprob: -4.018184661865234
    3. '           ' → logprob: -10.643184661865234
    4. '       ' → logprob: -11.768184661865234
    5. '	right' → logprob: -13.018184661865234
    6. 'Right' → logprob: -14.768184661865234
    7. '
' → logprob: -15.393184661865234
    8. '[right' → logprob: -15.643184661865234
    9. '.right' → logprob: -16.268184661865234
    10. ',right' → logprob: -16.393184661865234

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270047426223755
    2. '=' → logprob: -2.127004623413086
    3. '=None' → logprob: -9.502004623413086
    4. ',' → logprob: -14.377004623413086
    5. '<|end|>' → logprob: -14.877004623413086
    6. 'None' → logprob: -15.127004623413086
    7. ')' → logprob: -15.252004623413086
    8. ' None' → logprob: -15.752004623413086
    9. ' ' → logprob: -16.002004623413086
    10. '=null' → logprob: -16.752004623413086

Token 155: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10020763427019119
    2. ' None' → logprob: -2.350207567214966
    3. '(None' → logprob: -14.725207328796387
    4. '_None' → logprob: -15.475207328796387
    5. '=None' → logprob: -15.600207328796387
    6. ',None' → logprob: -16.100208282470703
    7. '.None' → logprob: -17.975208282470703
    8. 'none' → logprob: -18.600208282470703
    9. '_none' → logprob: -19.850208282470703
    10. '
' → logprob: -20.600208282470703

Token 156: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2877773344516754
    2. '<|end|>' → logprob: -1.412777304649353
    3. '
' → logprob: -6.037777423858643
    4. '<|end|>' → logprob: -6.537777423858643
    5. ',' → logprob: -6.912777423858643
    6. ' else' → logprob: -7.287777423858643
    7. 'else' → logprob: -7.412777423858643
    8. ')' → logprob: -9.537776947021484
    9. '	' → logprob: -9.787776947021484
    10. '```' → logprob: -10.162776947021484

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03360733017325401
    2. '<|end|>' → logprob: -3.658607244491577
    3. ',' → logprob: -5.783607482910156
    4. 'else' → logprob: -6.033607482910156
    5. ' else' → logprob: -6.533607482910156
    6. '<|end|>' → logprob: -9.033607482910156
    7. '```' → logprob: -9.783607482910156
    8. ')' → logprob: -10.283607482910156
    9. ',
' → logprob: -10.783607482910156
    10. '#else' → logprob: -11.283607482910156

Token 158: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.9126729369163513
    2. ' else' → logprob: -1.037672996520996
    3. '       ' → logprob: -1.412672996520996
    4. ',' → logprob: -8.287672996520996
    5. '<|end|>' → logprob: -8.287672996520996
    6. '	else' → logprob: -9.412672996520996
    7. ':
' → logprob: -9.412672996520996
    8. ':' → logprob: -10.412672996520996
    9. '   ' → logprob: -11.162672996520996
    10. ')' → logprob: -11.162672996520996

Token 159: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1487036645412445
    2. ':' → logprob: -2.7737035751342773
    3. '           ' → logprob: -2.7737035751342773
    4. ':
' → logprob: -4.773703575134277
    5. ',
' → logprob: -6.148703575134277
    6. '       ' → logprob: -6.398703575134277
    7. ' ,' → logprob: -7.273703575134277
    8. ':,' → logprob: -9.148703575134277
    9. '          ' → logprob: -9.898703575134277
    10. '<|end|>' → logprob: -9.898703575134277

Token 160: '           ' (ID: 352)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.24680845439434052
    2. 'right' → logprob: -1.746808409690857
    3. '           ' → logprob: -3.1218085289001465
    4. '	right' → logprob: -8.746808052062988
    5. ',right' → logprob: -10.496808052062988
    6. ',' → logprob: -10.746808052062988
    7. '       ' → logprob: -10.996808052062988
    8. '(right' → logprob: -11.121808052062988
    9. '[right' → logprob: -11.371808052062988
    10. '
' → logprob: -11.621808052062988

Token 161: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.38692235946655273
    2. ' right' → logprob: -1.1369223594665527
    3. '	right' → logprob: -10.761922836303711
    4. '           ' → logprob: -10.886922836303711
    5. '(right' → logprob: -12.886922836303711
    6. ',right' → logprob: -13.011922836303711
    7. '[right' → logprob: -13.136922836303711
    8. 'Right' → logprob: -13.761922836303711
    9. '.right' → logprob: -13.886922836303711
    10. '_right' → logprob: -14.136922836303711

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ',right' → logprob: -13.625003814697266
    4. '=' → logprob: -16.750003814697266
    5. ',left' → logprob: -16.875003814697266
    6. '‌,' → logprob: -17.375003814697266
    7. ',
' → logprob: -17.625003814697266
    8. ',pos' → logprob: -18.000003814697266
    9. ',end' → logprob: -18.000003814697266
    10. ',user' → logprob: -18.250003814697266

Token 163: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.03804194927215576
    2. 'pos' → logprob: -3.2880420684814453
    3. '(pos' → logprob: -15.413042068481445
    4. '	pos' → logprob: -15.413042068481445
    5. '_pos' → logprob: -16.913042068481445
    6. ',pos' → logprob: -17.663042068481445
    7. '[pos' → logprob: -17.788042068481445
    8. '.pos' → logprob: -18.538042068481445
    9. '    ' → logprob: -19.788042068481445
    10. ' ' → logprob: -19.913042068481445

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022492945194244
    2. ' =' → logprob: -1.9102249145507812
    3. '    ' → logprob: -15.410224914550781
    4. ',' → logprob: -15.410224914550781
    5. '   ' → logprob: -15.660224914550781
    6. '        ' → logprob: -16.66022491455078
    7. ' ' → logprob: -17.16022491455078
    8. ')' → logprob: -17.53522491455078
    9. '       ' → logprob: -18.03522491455078
    10. '           ' → logprob: -18.03522491455078

Token 165: ' helper' (ID: 25246)
  Prédit: 'helper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helper' → logprob: -0.3868735730648041
    2. ' helper' → logprob: -1.1368736028671265
    3. '(helper' → logprob: -13.136873245239258
    4. '_helper' → logprob: -15.136873245239258
    5. 'help' → logprob: -15.886873245239258
    6. 'Helper' → logprob: -15.886873245239258
    7. '/helper' → logprob: -17.136873245239258
    8. '-helper' → logprob: -17.386873245239258
    9. '.helper' → logprob: -18.136873245239258
    10. 'handler' → logprob: -19.511873245239258

Token 166: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -2.816093228830141e-06
    2. 'pos' → logprob: -13.75000286102295
    3. '[pos' → logprob: -14.12500286102295
    4. ',pos' → logprob: -15.00000286102295
    5. ' pos' → logprob: -15.37500286102295
    6. '(' → logprob: -15.50000286102295
    7. '	pos' → logprob: -16.000001907348633
    8. ' (' → logprob: -17.750001907348633
    9. '.pos' → logprob: -18.250001907348633
    10. '(position' → logprob: -18.625001907348633

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002368393586948514
    2. '       ' → logprob: -6.127368450164795
    3. ')
' → logprob: -9.002367973327637
    4. '   ' → logprob: -10.877367973327637
    5. ' )' → logprob: -11.127367973327637
    6. '<|end|>' → logprob: -11.127367973327637
    7. '           ' → logprob: -12.752367973327637
    8. '[' → logprob: -13.877367973327637
    9. '())' → logprob: -13.877367973327637
    10. '(' → logprob: -14.252367973327637

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006176802329719067
    2. '<|end|>' → logprob: -5.131176948547363
    3. ')' → logprob: -9.256176948547363
    4. '   ' → logprob: -9.756176948547363
    5. '<|end|>' → logprob: -10.506176948547363
    6. '           ' → logprob: -11.131176948547363
    7. '```' → logprob: -11.506176948547363
    8. '      ' → logprob: -12.131176948547363
    9. '	' → logprob: -12.256176948547363
    10. '[pos' → logprob: -12.756176948547363

Token 169: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6123651266098022
    2. 'if' (adapté à ' if') → logprob: -1.3623651266098022
    3. ' if' → logprob: -1.6123651266098022
    4. 'pos' → logprob: -6.112365245819092
    5. '   ' → logprob: -9.237364768981934
    6. ' pos' → logprob: -9.362364768981934
    7. '           ' → logprob: -11.612364768981934
    8. 'return' → logprob: -11.612364768981934
    9. '	if' → logprob: -11.737364768981934
    10. '<|end|>' → logprob: -11.737364768981934

Token 170: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16024149954319
    2. 's' → logprob: -1.9102414846420288
    3. ' pos' → logprob: -11.78524112701416
    4. 'pos' → logprob: -11.91024112701416
    5. ' ' → logprob: -13.66024112701416
    6. '(s' → logprob: -14.16024112701416
    7. ' ' → logprob: -15.16024112701416
    8. ')' → logprob: -15.78524112701416
    9. '	s' → logprob: -15.78524112701416
    10. '_s' → logprob: -16.410242080688477

Token 171: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.619311974034645e-05
    2. '[s' → logprob: -11.125036239624023
    3. 'pos' → logprob: -11.375036239624023
    4. '[' → logprob: -11.625036239624023
    5. 's' → logprob: -14.375036239624023
    6. '[position' → logprob: -16.000036239624023
    7. '[
' → logprob: -16.750036239624023
    8. '```' → logprob: -16.875036239624023
    9. '[p' → logprob: -17.125036239624023
    10. '[token' → logprob: -17.750036239624023

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11815127730369568
    2. ' !=' → logprob: -2.4931511878967285
    3. ')' → logprob: -4.7431511878967285
    4. '!=' → logprob: -5.2431511878967285
    5. ' ]' → logprob: -5.6181511878967285
    6. ']!=' → logprob: -5.8681511878967285
    7. ' ==' → logprob: -5.8681511878967285
    8. '']' → logprob: -6.3681511878967285
    9. '==' → logprob: -6.3681511878967285
    10. ']==' → logprob: -6.6181511878967285

Token 173: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6517980694770813
    2. '!=' → logprob: -1.2767980098724365
    3. ')' → logprob: -1.7767980098724365
    4. '==' → logprob: -3.9017980098724365
    5. ' ==' → logprob: -5.401798248291016
    6. '')' → logprob: -5.901798248291016
    7. '=' → logprob: -7.026798248291016
    8. ')!=' → logprob: -7.276798248291016
    9. '   ' → logprob: -7.776798248291016
    10. ']' → logprob: -7.776798248291016

Token 174: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.011060434393584728
    2. ')' → logprob: -4.5110602378845215
    3. '")' → logprob: -12.01106071472168
    4. ' ')'' → logprob: -12.76106071472168
    5. ' ')' → logprob: -13.26106071472168
    6. '']' → logprob: -13.88606071472168
    7. ''' → logprob: -15.51106071472168
    8. ''):' → logprob: -15.76106071472168
    9. ')'' → logprob: -15.88606071472168
    10. '   ' → logprob: -15.88606071472168

Token 175: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.591192364692688
    2. ':' → logprob: -1.216192364692688
    3. '           ' → logprob: -2.8411922454833984
    4. '       ' → logprob: -3.3411922454833984
    5. '):
' → logprob: -3.9661922454833984
    6. ')' → logprob: -4.091192245483398
    7. '):' → logprob: -4.091192245483398
    8. ':return' → logprob: -6.466192245483398
    9. '   ' → logprob: -7.591192245483398
    10. ''):
' → logprob: -7.716192245483398

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2928319573402405
    2. ' return' → logprob: -1.5428318977355957
    3. '       ' → logprob: -3.2928318977355957
    4. 'return' → logprob: -5.917831897735596
    5. '        ' → logprob: -9.417832374572754
    6. '   ' → logprob: -9.667832374572754
    7. '	return' → logprob: -10.917832374572754
    8. '               ' → logprob: -11.417832374572754
    9. '```' → logprob: -11.792832374572754
    10. '	       ' → logprob: -11.917832374572754

Token 177: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.00020401719666551799
    2. 'return' (adapté à ' return') → logprob: -8.875204086303711
    3. '           ' → logprob: -10.500204086303711
    4. ' ' → logprob: -11.125204086303711
    5. ' None' → logprob: -12.125204086303711
    6. ' ' → logprob: -12.625204086303711
    7. ' raise' → logprob: -12.750204086303711
    8. ')' → logprob: -13.125204086303711
    9. '            ' → logprob: -13.250204086303711
    10. '   ' → logprob: -13.250204086303711

Token 178: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0031786637846380472
    2. ' None' → logprob: -5.753178596496582
    3. '(None' → logprob: -14.128178596496582
    4. ' ' → logprob: -15.628178596496582
    5. ',None' → logprob: -17.8781795501709
    6. 'False' → logprob: -17.8781795501709
    7. '   ' → logprob: -18.1281795501709
    8. 'none' → logprob: -18.2531795501709
    9. '
' → logprob: -18.2531795501709
    10. '=None' → logprob: -18.7531795501709

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006131303030997515
    2. ',pos' → logprob: -5.131131172180176
    3. ' ,' → logprob: -8.631131172180176
    4. ' pos' → logprob: -11.381131172180176
    5. 'pos' → logprob: -12.131131172180176
    6. ',p' → logprob: -13.006131172180176
    7. '   ' → logprob: -13.381131172180176
    8. ',s' → logprob: -14.506131172180176
    9. '       ' → logprob: -14.881131172180176
    10. '(pos' → logprob: -15.131131172180176

Token 180: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.1602255403995514
    2. 'pos' → logprob: -1.910225510597229
    3. 's' → logprob: -14.660225868225098
    4. '(pos' → logprob: -14.785225868225098
    5. '	pos' → logprob: -15.660225868225098
    6. ' ' → logprob: -16.66022491455078
    7. '[pos' → logprob: -16.78522491455078
    8. '_pos' → logprob: -16.91022491455078
    9. ' s' → logprob: -17.03522491455078
    10. '.pos' → logprob: -17.41022491455078

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001855406299000606
    2. 'pos' → logprob: -9.5001859664917
    3. '   ' → logprob: -9.6251859664917
    4. '	' → logprob: -11.2501859664917
    5. ' pos' → logprob: -11.3751859664917
    6. '           ' → logprob: -12.1251859664917
    7. '	pos' → logprob: -12.3751859664917
    8. '
' → logprob: -13.2501859664917
    9. '<|end|>' → logprob: -13.6251859664917
    10. '```' → logprob: -13.7501859664917

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005458841915242374
    2. 'pos' → logprob: -8.125545501708984
    3. ' pos' → logprob: -9.125545501708984
    4. '   ' → logprob: -9.375545501708984
    5. '	pos' → logprob: -10.875545501708984
    6. '
' → logprob: -11.875545501708984
    7. '           ' → logprob: -12.250545501708984
    8. '<|end|>' → logprob: -12.375545501708984
    9. '```' → logprob: -12.500545501708984
    10. ',pos' → logprob: -12.500545501708984

Token 183: ' pos' (ID: 1253)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16310103237628937
    2. 'pos' (adapté à ' pos') → logprob: -2.0381009578704834
    3. ' pos' → logprob: -3.9131009578704834
    4. '	pos' → logprob: -8.913101196289062
    5. '   ' → logprob: -9.663101196289062
    6. ',pos' → logprob: -11.413101196289062
    7. ')' → logprob: -12.038101196289062
    8. '           ' → logprob: -12.413101196289062
    9. '	' → logprob: -12.538101196289062
    10. '[pos' → logprob: -12.663101196289062

Token 184: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.46913787722587585
    2. '+' → logprob: -1.4691379070281982
    3. '+=' → logprob: -2.2191379070281982
    4. ' +' → logprob: -3.3441379070281982
    5. '    ' → logprob: -8.594138145446777
    6. '   ' → logprob: -8.844138145446777
    7. '       ' → logprob: -12.594138145446777
    8. '=' → logprob: -12.594138145446777
    9. '+
' → logprob: -13.469138145446777
    10. '        ' → logprob: -13.844138145446777

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.393150329589844
    4. '(' → logprob: -17.518150329589844
    5. '#' → logprob: -19.268150329589844
    6. '0' → logprob: -19.518150329589844
    7. '```' → logprob: -19.518150329589844
    8. '
' → logprob: -19.768150329589844
    9. '+' → logprob: -20.018150329589844
    10. '１' → logprob: -20.080650329589844

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -19.875
    5. '
' → logprob: -21.25
    6. '１' → logprob: -21.25
    7. '  ' → logprob: -22.3125
    8. '۱' → logprob: -22.5
    9. '`' → logprob: -22.6875
    10. '0' → logprob: -22.6875

Token 187: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003037650021724403
    2. '        ' → logprob: -9.000304222106934
    3. ' return' → logprob: -9.375304222106934
    4. ' ' → logprob: -9.875304222106934
    5. '      ' → logprob: -11.500304222106934
    6. '   ' → logprob: -11.875304222106934
    7. 'return' → logprob: -12.000304222106934
    8. ',' → logprob: -12.375304222106934
    9. '    ' → logprob: -12.750304222106934
    10. '        
' → logprob: -13.250304222106934

Token 188: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000464035285403952
    2. ' ' → logprob: -8.75046443939209
    3. '   ' → logprob: -8.75046443939209
    4. ' return' → logprob: -10.00046443939209
    5. '#' → logprob: -10.37546443939209
    6. 'return' → logprob: -11.00046443939209
    7. '        ' → logprob: -11.37546443939209
    8. '      ' → logprob: -11.50046443939209
    9. '	' → logprob: -12.12546443939209
    10. ' #' → logprob: -12.25046443939209

Token 189: ' skip' (ID: 16677)
  Prédit: ' skip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' skip' → logprob: -0.6098058223724365
    2. 'skip' → logprob: -0.9848058223724365
    3. ' return' → logprob: -3.1098058223724365
    4. 'return' → logprob: -3.7348058223724365
    5. ')' → logprob: -4.609806060791016
    6. ' ' → logprob: -6.109806060791016
    7. '1' → logprob: -6.984806060791016
    8. '<|end|>' → logprob: -7.609806060791016
    9. '#' → logprob: -8.734806060791016
    10. 'continue' → logprob: -9.109806060791016

Token 190: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.011062909848988056
    2. ')' → logprob: -4.511063098907471
    3. ' ')'' → logprob: -11.511062622070312
    4. ''' → logprob: -12.761062622070312
    5. '")' → logprob: -14.011062622070312
    6. ' ')' → logprob: -14.386062622070312
    7. '`)' → logprob: -14.636062622070312
    8. ')'' → logprob: -15.886062622070312
    9. '']' → logprob: -16.636062622070312
    10. '   ' → logprob: -16.886062622070312

Token 191: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016257872339338064
    2. '
' → logprob: -6.876626014709473
    3. ' return' → logprob: -7.876626014709473
    4. ')' → logprob: -9.126626014709473
    5. 'return' → logprob: -10.501626014709473
    6. '<|end|>' → logprob: -10.751626014709473
    7. '        ' → logprob: -11.126626014709473
    8. '   ' → logprob: -11.626626014709473
    9. '        
' → logprob: -12.126626014709473
    10. '      ' → logprob: -12.251626014709473

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030396245419979095
    2. ' return' → logprob: -6.503039836883545
    3. 'return' → logprob: -6.753039836883545
    4. '   ' → logprob: -8.628039360046387
    5. '
' → logprob: -9.628039360046387
    6. '        
' → logprob: -10.378039360046387
    7. '	return' → logprob: -10.878039360046387
    8. '	' → logprob: -11.128039360046387
    9. '    
' → logprob: -11.253039360046387
    10. '  
' → logprob: -11.503039360046387

Token 193: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006680559832602739
    2. ' return' → logprob: -5.506680488586426
    3. '       ' → logprob: -6.006680488586426
    4. 'tree' → logprob: -9.006680488586426
    5. 'node' → logprob: -11.756680488586426
    6. 't' → logprob: -13.506680488586426
    7. '	return' → logprob: -13.631680488586426
    8. '   ' → logprob: -14.006680488586426
    9. 'root' → logprob: -14.131680488586426
    10. '
' → logprob: -14.131680488586426

Token 194: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.20141752064228058
    2. ' Tree' → logprob: -1.7014175653457642
    3. '	Tree' → logprob: -12.576417922973633
    4. '(Tree' → logprob: -15.076417922973633
    5. '   ' → logprob: -15.201417922973633
    6. '<Tree' → logprob: -16.951417922973633
    7. '_tree' → logprob: -17.451417922973633
    8. 'tree' → logprob: -17.826417922973633
    9. ' ' → logprob: -18.451417922973633
    10. '    ' → logprob: -18.576417922973633

Token 195: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0004365102213341743
    2. '(' → logprob: -7.750436305999756
    3. 'left' → logprob: -12.250436782836914
    4. '(
' → logprob: -14.125436782836914
    5. ' (' → logprob: -16.250436782836914
    6. ',left' → logprob: -16.500436782836914
    7. '[left' → logprob: -16.875436782836914
    8. ' left' → logprob: -18.250436782836914
    9. '((' → logprob: -18.875436782836914
    10. '(

' → logprob: -19.000436782836914

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003374886582605541
    2. ',right' → logprob: -8.125337600708008
    3. ' ,' → logprob: -10.250337600708008
    4. ',left' → logprob: -12.250337600708008
    5. ',
' → logprob: -14.750337600708008
    6. ')' → logprob: -15.250337600708008
    7. 'right' → logprob: -15.250337600708008
    8. '   ' → logprob: -15.750337600708008
    9. '=' → logprob: -16.750337600708008
    10. ',

' → logprob: -17.125337600708008

Token 197: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07889000326395035
    2. ' right' → logprob: -2.578890085220337
    3. '	right' → logprob: -15.703889846801758
    4. 'Right' → logprob: -18.203889846801758
    5. '[right' → logprob: -18.203889846801758
    6. '(right' → logprob: -18.328889846801758
    7. ' ' → logprob: -18.453889846801758
    8. ',right' → logprob: -18.578889846801758
    9. '   ' → logprob: -18.828889846801758
    10. '    ' → logprob: -19.578889846801758

Token 198: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889353483915329
    2. '),' → logprob: -2.5788934230804443
    3. ')
' → logprob: -13.578893661499023
    4. '   ' → logprob: -13.953893661499023
    5. ' )' → logprob: -14.328893661499023
    6. ',' → logprob: -14.703893661499023
    7. ' ),' → logprob: -15.953893661499023
    8. '       ' → logprob: -16.078893661499023
    9. '),
' → logprob: -16.703893661499023
    10. ').' → logprob: -17.453893661499023

Token 199: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00861456897109747
    2. ' pos' → logprob: -4.758614540100098
    3. '	pos' → logprob: -20.383615493774414
    4. '[pos' → logprob: -21.133615493774414
    5. '(pos' → logprob: -21.258615493774414
    6. '_pos' → logprob: -21.258615493774414
    7. '   ' → logprob: -21.883615493774414
    8. 'Pos' → logprob: -22.758615493774414
    9. '    ' → logprob: -23.008615493774414
    10. ' ' → logprob: -23.633615493774414

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23382768034934998
    2. '<|end|>' → logprob: -1.7338277101516724
    3. '       ' → logprob: -3.983827590942383
    4. '<|end|>' → logprob: -5.108827590942383
    5. '	return' → logprob: -5.233827590942383
    6. '    
' → logprob: -7.608827590942383
    7. 'return' → logprob: -8.233827590942383
    8. ' return' → logprob: -8.483827590942383
    9. '    ' → logprob: -8.608827590942383
    10. '
' → logprob: -8.858827590942383

Token 201: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6340604424476624
    2. '<|end|>' → logprob: -1.0090603828430176
    3. '   ' → logprob: -2.3840603828430176
    4. '	' → logprob: -6.009060382843018
    5. 'return' → logprob: -6.134060382843018
    6. ' return' → logprob: -6.259060382843018
    7. '<|end|>' → logprob: -6.509060382843018
    8. '	return' → logprob: -6.634060382843018
    9. '    ' → logprob: -7.134060382843018
    10. ')' → logprob: -7.259060382843018

Token 202: ' tree' (ID: 8165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09778158366680145
    2. ' return' → logprob: -2.5977816581726074
    3. 'return' → logprob: -4.097781658172607
    4. '<|end|>' → logprob: -6.472781658172607
    5. '	return' → logprob: -8.22278118133545
    6. '       ' → logprob: -9.22278118133545
    7. ' ' → logprob: -9.47278118133545
    8. '    ' → logprob: -10.34778118133545
    9. '  ' → logprob: -10.72278118133545
    10. ')' → logprob: -11.09778118133545

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06249179691076279
    2. '=' → logprob: -3.3124918937683105
    3. ' =' → logprob: -3.8124918937683105
    4. ' ,' → logprob: -7.1874918937683105
    5. '(' → logprob: -7.5624918937683105
    6. '   ' → logprob: -7.6874918937683105
    7. ' ' → logprob: -9.187491416931152
    8. ')' → logprob: -10.187491416931152
    9. '(tree' → logprob: -10.562491416931152
    10. '<|end|>' → logprob: -10.562491416931152

Token 204: ' pos' (ID: 1253)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2064201384782791
    2. ' ' → logprob: -1.7064201831817627
    3. '1' → logprob: -5.331419944763184
    4. ' pos' → logprob: -9.581419944763184
    5. 'pos' → logprob: -9.956419944763184
    6. ' len' → logprob: -11.456419944763184
    7. '2' → logprob: -11.956419944763184
    8. ' parse' → logprob: -12.081419944763184
    9. 'parse' → logprob: -12.706419944763184
    10. 'len' → logprob: -13.206419944763184

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1606961488723755
    2. ' =' → logprob: -1.9106961488723755
    3. ',' → logprob: -7.660696029663086
    4. ')' → logprob: -15.785696029663086
    5. '=
' → logprob: -15.785696029663086
    6. '<|end|>' → logprob: -16.410696029663086
    7. ' =)' → logprob: -16.535696029663086
    8. '=

' → logprob: -16.535696029663086
    9. ' =
' → logprob: -16.660696029663086
    10. ')=' → logprob: -16.660696029663086

Token 206: ' helper' (ID: 25246)
  Prédit: 'helper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helper' → logprob: -0.03804194927215576
    2. ' helper' → logprob: -3.2880420684814453
    3. '(helper' → logprob: -14.913042068481445
    4. '_helper' → logprob: -16.663042068481445
    5. 'help' → logprob: -16.788042068481445
    6. 'Helper' → logprob: -17.038042068481445
    7. 'helpers' → logprob: -18.788042068481445
    8. '.helper' → logprob: -18.788042068481445
    9. '/helper' → logprob: -18.913042068481445
    10. '   ' → logprob: -18.913042068481445

Token 207: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8789383830153383e-05
    2. '(s' → logprob: -11.375019073486328
    3. '0' → logprob: -12.250019073486328
    4. '(len' → logprob: -13.500019073486328
    5. ' (' → logprob: -13.875019073486328
    6. '(
' → logprob: -16.375019073486328
    7. ' ' → logprob: -16.500019073486328
    8. '(pos' → logprob: -18.375019073486328
    9. '((' → logprob: -18.875019073486328
    10. '   ' → logprob: -18.875019073486328

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.064297824399546e-05
    2. ' ' → logprob: -9.625070571899414
    3. '1' → logprob: -12.375070571899414
    4. 's' → logprob: -16.250070571899414
    5. '   ' → logprob: -16.375070571899414
    6. '(' → logprob: -17.250070571899414
    7. '  ' → logprob: -18.875070571899414
    8. ')' → logprob: -19.250070571899414
    9. '    ' → logprob: -19.375070571899414
    10. ' s' → logprob: -19.375070571899414

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -14.500000953674316
    4. ')return' → logprob: -17.500001907348633
    5. '))' → logprob: -19.125001907348633
    6. ')}' → logprob: -19.125001907348633
    7. ')

' → logprob: -19.250001907348633
    8. ')`' → logprob: -19.250001907348633
    9. '   ' → logprob: -19.375001907348633
    10. '),' → logprob: -19.625001907348633

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030523387249559164
    2. ' return' → logprob: -6.378052234649658
    3. '	return' → logprob: -7.378052234649658
    4. '<|end|>' → logprob: -7.878052234649658
    5. 'return' → logprob: -9.628052711486816
    6. ':return' → logprob: -9.753052711486816
    7. '    
' → logprob: -10.003052711486816
    8. ')' → logprob: -10.003052711486816
    9. '#' → logprob: -11.003052711486816
    10. '    ' → logprob: -11.253052711486816

Token 211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3595057427883148
    2. ' return' → logprob: -1.3595057725906372
    3. '   ' → logprob: -3.1095056533813477
    4. '	return' → logprob: -7.484505653381348
    5. ' if' → logprob: -13.734505653381348
    6. '  ' → logprob: -13.859505653381348
    7. '    ' → logprob: -13.984505653381348
    8. ':return' → logprob: -13.984505653381348
    9. '_return' → logprob: -14.109505653381348
    10. 'if' → logprob: -14.109505653381348

Token 212: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.38689371943473816
    2. ' tree' → logprob: -1.1368937492370605
    3. '(tree' → logprob: -10.761893272399902
    4. '	tree' → logprob: -13.636893272399902
    5. '_tree' → logprob: -15.636893272399902
    6. 'Tree' → logprob: -16.13689422607422
    7. '.tree' → logprob: -17.51189422607422
    8. '/tree' → logprob: -17.63689422607422
    9. 'trees' → logprob: -18.63689422607422
    10. 'tre' → logprob: -18.76189422607422

Token 213: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' tree' (ID: 8165)
  Prédit: ' serialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' serialize' → logprob: -1.272302269935608
    2. ' inorder' → logprob: -1.272302269935608
    3. ' tree' → logprob: -1.772302269935608
    4. 'serialize' → logprob: -2.5223021507263184
    5. ' print' → logprob: -3.0223021507263184
    6. 'print' → logprob: -3.6473021507263184
    7. 'in' → logprob: -4.272302150726318
    8. 'tree' → logprob: -4.272302150726318
    9. ' count' → logprob: -4.272302150726318
    10. ' traverse' → logprob: -4.522302150726318

Token 216: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.02208217978477478
    2. '_depth' → logprob: -5.397082328796387
    3. '_tr' → logprob: -5.897082328796387
    4. '_size' → logprob: -5.897082328796387
    5. '_equals' → logprob: -5.897082328796387
    6. '_height' → logprob: -6.022082328796387
    7. '_equal' → logprob: -6.397082328796387
    8. '_from' → logprob: -6.897082328796387
    9. '_sum' → logprob: -7.647082328796387
    10. '_' → logprob: -7.772082328796387

Token 217: '_str' (ID: 6182)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.029195722192525864
    2. '_str' → logprob: -3.779195785522461
    3. 'string' → logprob: -5.154195785522461
    4. 'str' → logprob: -9.279195785522461
    5. 'String' → logprob: -10.404195785522461
    6. '_s' → logprob: -10.904195785522461
    7. '_code' → logprob: -12.529195785522461
    8. '_tuple' → logprob: -12.654195785522461
    9. ' string' → logprob: -13.154195785522461
    10. 's' → logprob: -13.529195785522461

Token 218: '(t' (ID: 2025)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.5325900316238403
    2. '(' → logprob: -0.9075900316238403
    3. '(s' → logprob: -5.782589912414551
    4. '(t' → logprob: -5.907589912414551
    5. '(Tree' → logprob: -5.907589912414551
    6. '(root' → logprob: -7.282589912414551
    7. ' (' → logprob: -9.90758991241455
    8. '(tr' → logprob: -10.28258991241455
    9. '(node' → logprob: -10.53258991241455
    10. '(def' → logprob: -10.90758991241455

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02543068304657936
    2. '):
' → logprob: -3.900430679321289
    3. ')' → logprob: -5.400430679321289
    4. ' ):' → logprob: -8.150430679321289
    5. 'e' → logprob: -11.150430679321289
    6. ':' → logprob: -11.275430679321289
    7. '(t' → logprob: -11.400430679321289
    8. 'ee' → logprob: -12.275430679321289
    9. '):

' → logprob: -12.400430679321289
    10. '):
' → logprob: -12.525430679321289

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010469816625118256
    2. ' if' → logprob: -6.876047134399414
    3. '   ' → logprob: -11.251047134399414
    4. '	if' → logprob: -14.251047134399414
    5. '    ' → logprob: -15.376047134399414
    6. 'if' → logprob: -16.126047134399414
    7. '   ' → logprob: -16.251047134399414
    8. '       ' → logprob: -16.501047134399414
    9. '[' → logprob: -17.626047134399414
    10. '  ' → logprob: -17.876047134399414

Token 221: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5433279871940613
    2. '   ' → logprob: -0.9183279871940613
    3. 'if' (adapté à ' if') → logprob: -3.918328046798706
    4. '    ' → logprob: -10.293328285217285
    5. '"' → logprob: -10.793328285217285
    6. 'def' → logprob: -11.168328285217285
    7. ' return' → logprob: -11.418328285217285
    8. ''' → logprob: -11.668328285217285
    9. '	if' → logprob: -11.668328285217285
    10. ' ' → logprob: -11.918328285217285

Token 222: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3869101405143738
    2. ' t' → logprob: -1.1369102001190186
    3. ' not' → logprob: -10.261910438537598
    4. 'not' → logprob: -12.511910438537598
    5. '	t' → logprob: -15.261910438537598
    6. '`t' → logprob: -16.51190948486328
    7. '   ' → logprob: -16.76190948486328
    8. ' ' → logprob: -17.01190948486328
    9. '(t' → logprob: -17.63690948486328
    10. ' ' → logprob: -18.13690948486328

Token 223: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.38688287138938904
    2. 'is' → logprob: -1.1368829011917114
    3. '.is' → logprob: -12.636882781982422
    4. '	is' → logprob: -12.761882781982422
    5. ')' → logprob: -12.886882781982422
    6. ')is' → logprob: -13.511882781982422
    7. ' ' → logprob: -14.261882781982422
    8. '   ' → logprob: -15.386882781982422
    9. 'left' → logprob: -15.511882781982422
    10. '.left' → logprob: -15.636882781982422

Token 224: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01416350994259119
    2. ' None' → logprob: -4.264163494110107
    3. '   ' → logprob: -17.139163970947266
    4. '_None' → logprob: -18.264163970947266
    5. '(None' → logprob: -19.014163970947266
    6. '=None' → logprob: -20.139163970947266
    7. ' ' → logprob: -20.639163970947266
    8. 'none' → logprob: -20.889163970947266
    9. ',None' → logprob: -21.014163970947266
    10. '_none' → logprob: -21.389163970947266

Token 225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01065844390541315
    2. '   ' → logprob: -5.010658264160156
    3. ':return' → logprob: -6.135658264160156
    4. ':
' → logprob: -6.635658264160156
    5. ' :' → logprob: -8.010658264160156
    6. '       ' → logprob: -9.385658264160156
    7. '	return' → logprob: -11.260658264160156
    8. '    ' → logprob: -11.385658264160156
    9. ' return' → logprob: -12.135658264160156
    10. ' or' → logprob: -12.635658264160156

Token 226: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010530696250498295
    2. ' return' → logprob: -5.135530471801758
    3. 'return' → logprob: -5.510530471801758
    4. '       ' → logprob: -7.635530471801758
    5. '"' → logprob: -10.135530471801758
    6. '	return' → logprob: -12.010530471801758
    7. '()' → logprob: -12.385530471801758
    8. '    ' → logprob: -12.510530471801758
    9. ' ' → logprob: -13.135530471801758
    10. '  ' → logprob: -13.510530471801758

Token 227: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.48770463466644287
    2. ''' → logprob: -1.1127046346664429
    3. ' return' → logprob: -3.6127047538757324
    4. '"' → logprob: -3.7377047538757324
    5. '   ' → logprob: -6.612704753875732
    6. ''re' → logprob: -6.862704753875732
    7. ' '('' → logprob: -6.987704753875732
    8. ' '' → logprob: -7.362704753875732
    9. ' ' → logprob: -7.612704753875732
    10. '','' → logprob: -8.112704277038574

Token 228: ' ''
' (ID: 25366)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38700833916664124
    2. '"' → logprob: -1.1370083093643188
    3. ''(' → logprob: -9.637008666992188
    4. '()' → logprob: -10.762008666992188
    5. '"(' → logprob: -11.262008666992188
    6. '','' → logprob: -11.637008666992188
    7. '''' → logprob: -12.137008666992188
    8. '""' → logprob: -12.637008666992188
    9. ' '' → logprob: -12.762008666992188
    10. '","' → logprob: -13.012008666992188

Token 229: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2263036966323853
    2. '   ' → logprob: -1.2263036966323853
    3. '(' → logprob: -1.4763036966323853
    4. 'return' → logprob: -1.7263036966323853
    5. '('' → logprob: -6.226303577423096
    6. ' return' → logprob: -6.351303577423096
    7. '"' → logprob: -6.726303577423096
    8. '()' → logprob: -7.351303577423096
    9. ' '('' → logprob: -7.601303577423096
    10. ' (' → logprob: -8.101304054260254

Token 230: ' left' (ID: 3561)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16537034511566162
    2. 'return' → logprob: -1.9153703451156616
    3. 'left' (adapté à ' left') → logprob: -6.540370464324951
    4. '"' → logprob: -6.665370464324951
    5. 'res' → logprob: -7.540370464324951
    6. 's' → logprob: -7.790370464324951
    7. 'result' → logprob: -7.915370464324951
    8. 'if' → logprob: -7.915370464324951
    9. 'l' → logprob: -8.165369987487793
    10. '   ' → logprob: -8.790369987487793

Token 231: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6662429571151733
    2. '_str' → logprob: -1.1662429571151733
    3. ' =' → logprob: -1.7912429571151733
    4. 'str' → logprob: -6.416243076324463
    5. ''' → logprob: -6.666243076324463
    6. '_repr' → logprob: -6.666243076324463
    7. ')' → logprob: -7.041243076324463
    8. '   ' → logprob: -7.791243076324463
    9. '"' → logprob: -8.041242599487305
    10. '='' → logprob: -8.166242599487305

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34894225001335144
    2. '=' → logprob: -1.2239422798156738
    3. ' +' → logprob: -8.473941802978516
    4. '+' → logprob: -8.473941802978516
    5. '   ' → logprob: -9.973941802978516
    6. '()' → logprob: -11.598941802978516
    7. ' +=' → logprob: -12.223941802978516
    8. '+=' → logprob: -12.348941802978516
    9. ',' → logprob: -13.098941802978516
    10. '    ' → logprob: -13.223941802978516

Token 233: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.10790948569774628
    2. ''' → logprob: -2.3579094409942627
    3. ' tree' → logprob: -5.232909679412842
    4. ' '('' → logprob: -6.232909679412842
    5. '','' → logprob: -8.857909202575684
    6. '"' → logprob: -9.357909202575684
    7. '(tree' → logprob: -9.482909202575684
    8. 't' → logprob: -11.232909202575684
    9. ''(' → logprob: -11.607909202575684
    10. 'Tree' → logprob: -12.107909202575684

Token 234: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.9186317482963204e-05
    2. 'to' → logprob: -10.750049591064453
    3. 'To' → logprob: -11.125049591064453
    4. 't' → logprob: -12.500049591064453
    5. '.to' → logprob: -13.125049591064453
    6. '._' → logprob: -13.500049591064453
    7. '_left' → logprob: -13.500049591064453
    8. 'left' → logprob: -14.125049591064453
    9. ')' → logprob: -14.375049591064453
    10. '   ' → logprob: -14.500049591064453

Token 235: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0008065330912359059
    2. 'str' → logprob: -7.1258063316345215
    3. 't' → logprob: -13.37580680847168
    4. 's' → logprob: -15.00080680847168
    5. '_st' → logprob: -16.37580680847168
    6. 'r' → logprob: -16.50080680847168
    7. '_s' → logprob: -17.00080680847168
    8. ' str' → logprob: -17.62580680847168
    9. 'string' → logprob: -17.62580680847168
    10. 'Str' → logprob: -17.87580680847168

Token 236: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.7120533811976202e-05
    2. '(' → logprob: -11.125017166137695
    3. ' (' → logprob: -13.250017166137695
    4. 't' → logprob: -14.750017166137695
    5. '((' → logprob: -16.875017166137695
    6. ')' → logprob: -16.875017166137695
    7. '(
' → logprob: -17.625017166137695
    8. '	t' → logprob: -18.875017166137695
    9. '```' → logprob: -19.000017166137695
    10. '(tree' → logprob: -19.125017166137695

Token 237: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0032466354314237833
    2. '.t' → logprob: -5.753246784210205
    3. '(t' → logprob: -10.503246307373047
    4. '.' → logprob: -11.253246307373047
    5. 'left' → logprob: -11.253246307373047
    6. ')' → logprob: -11.628246307373047
    7. ' .' → logprob: -12.628246307373047
    8. '(left' → logprob: -13.378246307373047
    9. '.right' → logprob: -14.503246307373047
    10. 't' → logprob: -14.878246307373047

Token 238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006482422351837158
    2. ')
' → logprob: -5.6314826011657715
    3. '())' → logprob: -6.3814826011657715
    4. ')+' → logprob: -6.8814826011657715
    5. '()' → logprob: -9.506482124328613
    6. ' )' → logprob: -10.756482124328613
    7. '   ' → logprob: -10.756482124328613
    8. '())
' → logprob: -10.881482124328613
    9. '),' → logprob: -12.131482124328613
    10. ' ' → logprob: -12.506482124328613

Token 239: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.813146710395813
    2. '','' → logprob: -1.688146710395813
    3. ' +' → logprob: -1.813146710395813
    4. ',' → logprob: -1.813146710395813
    5. '   ' → logprob: -3.8131465911865234
    6. '',' → logprob: -5.313146591186523
    7. '(','' → logprob: -5.563146591186523
    8. ')' → logprob: -6.063146591186523
    9. ' if' → logprob: -6.313146591186523
    10. ' ,' → logprob: -6.438146591186523

Token 240: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03365077078342438
    2. ' t' → logprob: -3.4086508750915527
    3. ' ' → logprob: -12.908650398254395
    4. '   ' → logprob: -14.158650398254395
    5. '(t' → logprob: -14.408650398254395
    6. '`t' → logprob: -15.033650398254395
    7. '  ' → logprob: -15.158650398254395
    8. ' ' → logprob: -16.15865135192871
    9. 'True' → logprob: -16.15865135192871
    10. ' not' → logprob: -16.53365135192871

Token 241: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0017036291537806392
    2. ' is' → logprob: -7.25170373916626
    3. ' else' → logprob: -7.37670373916626
    4. 'else' → logprob: -8.376703262329102
    5. 'left' → logprob: -9.251703262329102
    6. '.' → logprob: -11.126703262329102
    7. 't' → logprob: -11.251703262329102
    8. '.right' → logprob: -11.751703262329102
    9. 'is' → logprob: -13.501703262329102
    10. '.t' → logprob: -14.001703262329102

Token 242: ' else' (ID: 1203)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.41428080201148987
    2. ' else' → logprob: -1.6642807722091675
    3. 'else' → logprob: -1.9142807722091675
    4. 'is' → logprob: -6.039280891418457
    5. '!=' → logprob: -11.539280891418457
    6. ' ' → logprob: -11.914280891418457
    7. '    ' → logprob: -12.914280891418457
    8. ' or' → logprob: -13.289280891418457
    9. '!==' → logprob: -13.414280891418457
    10. ' not' → logprob: -13.414280891418457

Token 243: ' ''
' (ID: 25366)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '','' → logprob: -0.48138049244880676
    2. ''' → logprob: -1.1063804626464844
    3. '''' → logprob: -3.4813804626464844
    4. '"' → logprob: -5.106380462646484
    5. '","' → logprob: -5.356380462646484
    6. '',' → logprob: -5.356380462646484
    7. ''(' → logprob: -6.981380462646484
    8. ' ','' → logprob: -7.356380462646484
    9. ''',' → logprob: -7.606380462646484
    10. ' '('' → logprob: -7.606380462646484

Token 244: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1374999284744263
    2. 'right' → logprob: -1.1374999284744263
    3. '','' → logprob: -1.3874999284744263
    4. ' right' → logprob: -3.7624998092651367
    5. '',' → logprob: -3.8874998092651367
    6. '   ' → logprob: -4.012499809265137
    7. ',' → logprob: -4.512499809265137
    8. ',right' → logprob: -5.012499809265137
    9. 'left' → logprob: -5.387499809265137
    10. '(' → logprob: -5.637499809265137

Token 245: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.11497621238231659
    2. '','' → logprob: -2.364976167678833
    3. ' right' → logprob: -4.489976406097412
    4. '',' → logprob: -6.864976406097412
    5. '')' → logprob: -7.239976406097412
    6. ''' → logprob: -7.364976406097412
    7. 'return' → logprob: -7.989976406097412
    8. ' ','' → logprob: -8.989975929260254
    9. ',right' → logprob: -9.114975929260254
    10. ',' → logprob: -9.364975929260254

Token 246: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -8.061054359131958e-06
    2. '<|end|>' → logprob: -12.500007629394531
    3. '_to' → logprob: -13.875007629394531
    4. ''_' → logprob: -14.375007629394531
    5. '_' → logprob: -14.875007629394531
    6. ')' → logprob: -15.000007629394531
    7. 'str' → logprob: -15.250007629394531
    8. '_STR' → logprob: -15.250007629394531
    9. '```' → logprob: -15.250007629394531
    10. ' _' → logprob: -15.500007629394531

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07924941927194595
    2. '=' → logprob: -2.579249382019043
    3. '_str' → logprob: -8.454249382019043
    4. '_' → logprob: -9.829249382019043
    5. '<|end|>' → logprob: -10.329249382019043
    6. ' ' → logprob: -10.579249382019043
    7. ')' → logprob: -11.329249382019043
    8. '   ' → logprob: -12.329249382019043
    9. ',' → logprob: -12.954249382019043
    10. '    ' → logprob: -13.079249382019043

Token 248: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.4287911057472229
    2. ' tree' → logprob: -1.0537910461425781
    3. '(tree' → logprob: -9.803791046142578
    4. '	tree' → logprob: -10.803791046142578
    5. '_tree' → logprob: -12.428791046142578
    6. ' ' → logprob: -13.428791046142578
    7. '-tree' → logprob: -13.428791046142578
    8. ''' → logprob: -13.553791046142578
    9. 'Tree' → logprob: -13.803791046142578
    10. 'tre' → logprob: -13.803791046142578

Token 249: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -8.061054359131958e-06
    2. 'To' → logprob: -12.750007629394531
    3. 'to' → logprob: -13.250007629394531
    4. '._' → logprob: -13.500007629394531
    5. '_' → logprob: -14.500007629394531
    6. ''_' → logprob: -15.250007629394531
    7. '_str' → logprob: -15.375007629394531
    8. '.' → logprob: -15.375007629394531
    9. '```' → logprob: -15.750007629394531
    10. '>' → logprob: -16.00000762939453

Token 250: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.38753044605255127
    2. 'str' → logprob: -1.1375304460525513
    3. 'tree' → logprob: -7.387530326843262
    4. 's' → logprob: -11.262530326843262
    5. 't' → logprob: -12.012530326843262
    6. '(tree' → logprob: -12.262530326843262
    7. 'st' → logprob: -12.887530326843262
    8. 'r' → logprob: -13.137530326843262
    9. 'Str' → logprob: -13.512530326843262
    10. ' str' → logprob: -13.637530326843262

Token 251: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -8.602024900028482e-05
    2. '(' → logprob: -9.375085830688477
    3. ' (' → logprob: -14.000085830688477
    4. '<|end|>' → logprob: -15.625085830688477
    5. 't' → logprob: -16.500085830688477
    6. '(s' → logprob: -17.500085830688477
    7. '(
' → logprob: -17.625085830688477
    8. ')' → logprob: -18.250085830688477
    9. '(tree' → logprob: -18.250085830688477
    10. '((' → logprob: -18.375085830688477

Token 252: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.9040898880339228e-05
    2. '.' → logprob: -10.500028610229492
    3. '.left' → logprob: -14.000028610229492
    4. ' .' → logprob: -14.375028610229492
    5. ').' → logprob: -17.500028610229492
    6. 'right' → logprob: -17.750028610229492
    7. ')' → logprob: -18.000028610229492
    8. '.Right' → logprob: -19.125028610229492
    9. '   ' → logprob: -19.375028610229492
    10. '	right' → logprob: -20.750028610229492

Token 253: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001071750302799046
    2. '(t' → logprob: -7.751071929931641
    3. ' if' → logprob: -8.12607192993164
    4. 'if' → logprob: -8.50107192993164
    5. ' )' → logprob: -9.50107192993164
    6. '   ' → logprob: -10.37607192993164
    7. '[t' → logprob: -10.75107192993164
    8. ')t' → logprob: -12.37607192993164
    9. 't' → logprob: -12.62607192993164
    10. ' ' → logprob: -13.75107192993164

Token 254: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.076326385140419
    2. 'if' → logprob: -2.826326370239258
    3. '(' → logprob: -5.451326370239258
    4. '   ' → logprob: -6.076326370239258
    5. ' +' → logprob: -6.076326370239258
    6. '('' → logprob: -6.201326370239258
    7. ')' → logprob: -6.701326370239258
    8. '(t' → logprob: -7.451326370239258
    9. '+' → logprob: -7.701326370239258
    10. 't' → logprob: -8.701326370239258

Token 255: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6969845294952393
    2. ' t' → logprob: -0.6969845294952393
    3. '(t' → logprob: -5.57198429107666
    4. ' (' → logprob: -11.94698429107666
    5. 'None' → logprob: -12.07198429107666
    6. ' not' → logprob: -12.32198429107666
    7. 'not' → logprob: -12.57198429107666
    8. '   ' → logprob: -13.44698429107666
    9. '[t' → logprob: -14.07198429107666
    10. ' ' → logprob: -14.44698429107666

Token 256: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.013952400535345078
    2. '.left' → logprob: -4.763952255249023
    3. '.' → logprob: -5.388952255249023
    4. ' else' → logprob: -7.513952255249023
    5. 'else' → logprob: -8.638952255249023
    6. ' .' → logprob: -11.638952255249023
    7. ')' → logprob: -12.013952255249023
    8. 'right' → logprob: -12.138952255249023
    9. ' is' → logprob: -12.638952255249023
    10. '   ' → logprob: -12.763952255249023

Token 257: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04313312843441963
    2. 'else' → logprob: -3.168133020401001
    3. ')' → logprob: -9.418132781982422
    4. ':' → logprob: -11.293132781982422
    5. ' is' → logprob: -11.543132781982422
    6. '   ' → logprob: -12.043132781982422
    7. ' ' → logprob: -12.293132781982422
    8. '        ' → logprob: -12.418132781982422
    9. '    ' → logprob: -12.543132781982422
    10. '       ' → logprob: -13.043132781982422

Token 258: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.06119147688150406
    2. ' ''' → logprob: -3.3111915588378906
    3. 't' → logprob: -4.061191558837891
    4. ' t' → logprob: -5.811191558837891
    5. ''' → logprob: -6.311191558837891
    6. ''t' → logprob: -8.43619155883789
    7. '(t' → logprob: -8.56119155883789
    8. '''
' → logprob: -9.31119155883789
    9. ''',' → logprob: -9.93619155883789
    10. '')' → logprob: -10.06119155883789

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3387758135795593
    2. '(' → logprob: -1.838775873184204
    3. ''' → logprob: -2.088775873184204
    4. 'return' → logprob: -5.713775634765625
    5. '('' → logprob: -7.963775634765625
    6. ' (' → logprob: -8.338775634765625
    7. '"' → logprob: -8.463775634765625
    8. ')' → logprob: -8.963775634765625
    9. ' return' → logprob: -9.338775634765625
    10. ' '('' → logprob: -9.963775634765625

Token 260: ' return' (ID: 622)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24504093825817108
    2. 'return' (adapté à ' return') → logprob: -1.7450408935546875
    3. '   ' → logprob: -3.2450408935546875
    4. '(' → logprob: -6.4950408935546875
    5. ' return' → logprob: -6.4950408935546875
    6. '"' → logprob: -8.120040893554688
    7. ')' → logprob: -9.245040893554688
    8. ' '('' → logprob: -9.245040893554688
    9. ' ' → logprob: -10.370040893554688
    10. 'if' → logprob: -10.495040893554688

Token 261: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.044388365000486374
    2. '"' → logprob: -3.1693882942199707
    3. ' '('' → logprob: -6.919388294219971
    4. 'f' → logprob: -8.169388771057129
    5. ''(' → logprob: -10.419388771057129
    6. ' "("' → logprob: -10.669388771057129
    7. ' f' → logprob: -10.669388771057129
    8. '   ' → logprob: -11.419388771057129
    9. ' ' → logprob: -11.669388771057129
    10. ''f' → logprob: -11.919388771057129

Token 262: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.503652036190033
    2. 'left' → logprob: -1.1286520957946777
    3. ' +' → logprob: -3.3786520957946777
    4. ',left' → logprob: -3.7536520957946777
    5. '','' → logprob: -5.253652095794678
    6. '(left' → logprob: -5.253652095794678
    7. '{}' → logprob: -6.878652095794678
    8. ',' → logprob: -7.128652095794678
    9. '[left' → logprob: -7.253652095794678
    10. ' left' → logprob: -7.628652095794678

Token 263: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.02032662369310856
    2. '(left' → logprob: -4.520326614379883
    3. 'tree' → logprob: -5.395326614379883
    4. '(' → logprob: -6.645326614379883
    5. '','' → logprob: -6.645326614379883
    6. '(','' → logprob: -7.020326614379883
    7. ' left' → logprob: -7.145326614379883
    8. ' (' → logprob: -8.895326614379883
    9. '('' → logprob: -9.645326614379883
    10. '(tree' → logprob: -9.770326614379883

Token 264: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0003920655872207135
    2. 'str' → logprob: -8.750391960144043
    3. '_to' → logprob: -8.750391960144043
    4. '_' → logprob: -10.875391960144043
    5. ''_' → logprob: -11.000391960144043
    6. ''' → logprob: -11.250391960144043
    7. 'left' → logprob: -11.625391960144043
    8. '_left' → logprob: -12.125391960144043
    9. 'to' → logprob: -12.750391960144043
    10. 'Str' → logprob: -13.500391960144043

Token 265: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04081003740429878
    2. ' +' → logprob: -3.2908101081848145
    3. '','' → logprob: -5.9158101081848145
    4. ',' → logprob: -11.040809631347656
    5. '(','' → logprob: -11.165809631347656
    6. '+
' → logprob: -11.540809631347656
    7. '+')' → logprob: -11.915809631347656
    8. '","' → logprob: -12.665809631347656
    9. '+,' → logprob: -12.665809631347656
    10. '+',' → logprob: -12.790809631347656

Token 266: ' ','' (ID: 56369)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -6.217951886355877e-05
    2. ' ','' → logprob: -10.625061988830566
    3. '',' → logprob: -11.000061988830566
    4. '","' → logprob: -11.625061988830566
    5. ',' → logprob: -12.000061988830566
    6. '(','' → logprob: -12.500061988830566
    7. '')' → logprob: -13.500061988830566
    8. ''),' → logprob: -15.375061988830566
    9. '','.' → logprob: -15.375061988830566
    10. ' ' → logprob: -16.625062942504883

Token 267: ' +' (ID: 659)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.027277285233139992
    2. ' right' → logprob: -3.7772772312164307
    3. ' +' → logprob: -5.77727746963501
    4. '+' → logprob: -7.02727746963501
    5. '	right' → logprob: -10.652276992797852
    6. '[right' → logprob: -12.027276992797852
    7. '   ' → logprob: -13.027276992797852
    8. '(right' → logprob: -13.152276992797852
    9. ',right' → logprob: -13.402276992797852
    10. 'r' → logprob: -13.527276992797852

Token 268: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006715370807796717
    2. ' right' → logprob: -5.006715297698975
    3. '	right' → logprob: -18.006715774536133
    4. ' ' → logprob: -18.256715774536133
    5. '[right' → logprob: -18.756715774536133
    6. '(right' → logprob: -19.381715774536133
    7. '   ' → logprob: -19.506715774536133
    8. 'r' → logprob: -19.756715774536133
    9. '+' → logprob: -20.756715774536133
    10. ',right' → logprob: -21.506715774536133

Token 269: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00034964739461429417
    2. 'str' → logprob: -8.000349998474121
    3. 'right' → logprob: -11.875349998474121
    4. 'Str' → logprob: -12.625349998474121
    5. '_' → logprob: -13.750349998474121
    6. 't' → logprob: -14.250349998474121
    7. ''_' → logprob: -14.375349998474121
    8. '_right' → logprob: -14.625349998474121
    9. '+' → logprob: -14.875349998474121
    10. ''' → logprob: -15.125349998474121

Token 270: ' +' (ID: 659)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.41490015387535095
    2. ')' → logprob: -1.1649001836776733
    3. '+')' → logprob: -4.164900302886963
    4. '+' → logprob: -4.539900302886963
    5. ' +' → logprob: -7.039900302886963
    6. ' ')'' → logprob: -8.289899826049805
    7. ')+' → logprob: -8.789899826049805
    8. ')'' → logprob: -9.539899826049805
    9. '   ' → logprob: -10.789899826049805
    10. '+)' → logprob: -10.914899826049805

Token 271: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0020966108422726393
    2. ')' → logprob: -6.252096652984619
    3. ' ')'' → logprob: -8.752096176147461
    4. ')'' → logprob: -11.627096176147461
    5. '')"' → logprob: -15.002096176147461
    6. '")' → logprob: -15.002096176147461
    7. ''' → logprob: -15.252096176147461
    8. ')`' → logprob: -18.12709617614746
    9. '+')' → logprob: -18.12709617614746
    10. ' ')' → logprob: -18.62709617614746

Token 272: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05991789698600769
    2. '')' → logprob: -3.43491792678833
    3. '<|end|>' → logprob: -3.68491792678833
    4. ''' → logprob: -7.80991792678833
    5. '```' → logprob: -8.059917449951172
    6. '}' → logprob: -10.059917449951172
    7. '")' → logprob: -10.809917449951172
    8. '<|end|>' → logprob: -11.684917449951172
    9. '
' → logprob: -12.059917449951172
    10. '`' → logprob: -12.309917449951172

Token 273: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6992746591567993
    2. ')' → logprob: -1.4492746591567993
    3. '#' → logprob: -2.1992745399475098
    4. '<|end|>' → logprob: -2.6992745399475098
    5. '
' → logprob: -3.6992745399475098
    6. 't' → logprob: -4.19927453994751
    7. '[' → logprob: -4.57427453994751
    8. ' ' → logprob: -4.82427453994751
    9. 'a' → logprob: -5.57427453994751
    10. '.' → logprob: -5.82427453994751

Token 274: ' intersection' (ID: 42002)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.6258102655410767
    2. 'count' → logprob: -1.6258102655410767
    3. 'main' → logprob: -2.125810146331787
    4. 'mirror' → logprob: -2.375810146331787
    5. 'tree' → logprob: -2.875810146331787
    6. 'are' → logprob: -3.000810146331787
    7. 'compare' → logprob: -3.125810146331787
    8. 'invert' → logprob: -3.500810146331787
    9. ' main' → logprob: -4.125810146331787
    10. 'merge' → logprob: -4.250810146331787

Token 275: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6826000809669495
    2. '(tree' → logprob: -1.0576000213623047
    3. '(' → logprob: -2.1826000213623047
    4. '(root' → logprob: -4.182600021362305
    5. '(Tree' → logprob: -4.557600021362305
    6. '(a' → logprob: -4.932600021362305
    7. '(left' → logprob: -7.932600021362305
    8. '(T' → logprob: -7.932600021362305
    9. '(s' → logprob: -8.307600021362305
    10. '(node' → logprob: -8.682600021362305

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5441551804542542
    2. ',' → logprob: -0.9191551804542542
    3. ' ,' → logprob: -4.544155120849609
    4. 's' → logprob: -5.294155120849609
    5. ')' → logprob: -6.294155120849609
    6. ',t' → logprob: -6.919155120849609
    7. '):' → logprob: -7.794155120849609
    8. 'A' → logprob: -7.794155120849609
    9. 'a' → logprob: -8.04415512084961
    10. '_left' → logprob: -8.16915512084961

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016766376211307943
    2. ' ,' → logprob: -8.750167846679688
    3. ',t' → logprob: -11.625167846679688
    4. ',
' → logprob: -16.500167846679688
    5. '‌,' → logprob: -17.625167846679688
    6. '_,' → logprob: -17.750167846679688
    7. ' ' → logprob: -18.125167846679688
    8. 't' → logprob: -18.250167846679688
    9. ',n' → logprob: -18.500167846679688
    10. ',T' → logprob: -18.500167846679688

Token 278: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47407716512680054
    2. ' t' → logprob: -0.9740771651268005
    3. '	t' → logprob: -16.349077224731445
    4. '`t' → logprob: -16.724077224731445
    5. '   ' → logprob: -17.099077224731445
    6. ' ' → logprob: -17.724077224731445
    7. ')t' → logprob: -18.224077224731445
    8. ')' → logprob: -18.224077224731445
    9. 'def' → logprob: -18.974077224731445
    10. '```' → logprob: -19.099077224731445

Token 279: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5252039432525635
    2. '1' → logprob: -0.9002039432525635
    3. 'ree' → logprob: -6.775203704833984
    4. ')' → logprob: -8.150203704833984
    5. ' ,' → logprob: -8.525203704833984
    6. ',None' → logprob: -8.775203704833984
    7. 'rees' → logprob: -9.775203704833984
    8. '2' → logprob: -10.025203704833984
    9. 'None' → logprob: -10.525203704833984
    10. '=None' → logprob: -11.150203704833984

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002863723784685135
    2. ',' → logprob: -5.877863883972168
    3. ':' → logprob: -10.377863883972168
    4. '):
' → logprob: -11.627863883972168
    5. ' ):' → logprob: -11.627863883972168
    6. '   ' → logprob: -12.252863883972168
    7. ')' → logprob: -12.377863883972168
    8. '}:' → logprob: -14.752863883972168
    9. ' ,' → logprob: -16.37786293029785
    10. ']:' → logprob: -16.37786293029785

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015537863364443183
    2. ' if' → logprob: -6.501554012298584
    3. '    
' → logprob: -10.876553535461426
    4. '
' → logprob: -11.751553535461426
    5. '   ' → logprob: -12.251553535461426
    6. ' 
' → logprob: -12.501553535461426
    7. '(None' → logprob: -12.626553535461426
    8. ' None' → logprob: -12.626553535461426
    9. '	if' → logprob: -13.376553535461426
    10. '(' → logprob: -13.626553535461426

Token 282: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12741655111312866
    2. ' if' → logprob: -2.1274166107177734
    3. '   ' → logprob: -7.627416610717773
    4. '	if' → logprob: -14.002416610717773
    5. '```' → logprob: -16.502416610717773
    6. 'i' → logprob: -16.627416610717773
    7. ' None' → logprob: -16.627416610717773
    8. 'None' → logprob: -16.627416610717773
    9. 'If' → logprob: -17.127416610717773
    10. ' 
' → logprob: -17.377416610717773

Token 283: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02980949729681015
    2. ' t' → logprob: -3.5298094749450684
    3. ' not' → logprob: -10.154809951782227
    4. 'not' → logprob: -10.904809951782227
    5. '(t' → logprob: -13.904809951782227
    6. '`t' → logprob: -15.154809951782227
    7. '   ' → logprob: -15.279809951782227
    8. '	t' → logprob: -15.779809951782227
    9. ' ' → logprob: -15.904809951782227
    10. 'None' → logprob: -16.529809951782227

Token 284: '1' (ID: 16)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.016344379633665085
    2. '1' → logprob: -4.6413445472717285
    3. ' t' → logprob: -5.2663445472717285
    4. ' None' → logprob: -7.0163445472717285
    5. 't' → logprob: -8.76634407043457
    6. ' ' → logprob: -8.76634407043457
    7. 'is' → logprob: -9.26634407043457
    8. ' or' → logprob: -10.01634407043457
    9. 'None' → logprob: -10.14134407043457
    10. '   ' → logprob: -11.76634407043457

Token 285: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10020958632230759
    2. 'is' → logprob: -2.3502094745635986
    3. 'and' → logprob: -13.47520923614502
    4. ' ' → logprob: -14.22520923614502
    5. ' and' → logprob: -14.60020923614502
    6. '   ' → logprob: -15.22520923614502
    7. '	is' → logprob: -16.725210189819336
    8. ' None' → logprob: -17.225210189819336
    9. '==' → logprob: -17.475210189819336
    10. 'None' → logprob: -17.725210189819336

Token 286: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01815006136894226
    2. ' None' → logprob: -4.0181498527526855
    3. '_None' → logprob: -17.143150329589844
    4. '   ' → logprob: -17.268150329589844
    5. '=None' → logprob: -17.393150329589844
    6. ' ' → logprob: -17.393150329589844
    7. 'not' → logprob: -17.643150329589844
    8. '(None' → logprob: -17.768150329589844
    9. 'none' → logprob: -18.018150329589844
    10. ' not' → logprob: -19.643150329589844

Token 287: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.006032484583556652
    2. 'or' → logprob: -5.131032466888428
    3. ' and' → logprob: -10.006032943725586
    4. '   ' → logprob: -10.131032943725586
    5. ' ' → logprob: -11.506032943725586
    6. '	or' → logprob: -12.131032943725586
    7. 'and' → logprob: -13.381032943725586
    8. ')' → logprob: -13.881032943725586
    9. '    ' → logprob: -14.506032943725586
    10. '  ' → logprob: -15.381032943725586

Token 288: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0025341638829559088
    2. ' t' → logprob: -6.00253438949585
    3. '   ' → logprob: -9.752533912658691
    4. '  ' → logprob: -16.002534866333008
    5. ' ' → logprob: -16.377534866333008
    6. '	t' → logprob: -17.252534866333008
    7. '    ' → logprob: -17.627534866333008
    8. '`t' → logprob: -18.127534866333008
    9. '       ' → logprob: -19.377534866333008
    10. 'not' → logprob: -19.752534866333008

Token 289: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031450390815734863
    2. ' t' → logprob: -6.003145217895508
    3. 't' → logprob: -7.503145217895508
    4. '1' → logprob: -9.753145217895508
    5. '.t' → logprob: -11.128145217895508
    6. ' None' → logprob: -11.253145217895508
    7. ' ' → logprob: -11.628145217895508
    8. '_t' → logprob: -12.003145217895508
    9. 'None' → logprob: -12.253145217895508
    10. '(None' → logprob: -12.253145217895508

Token 290: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006741304416209459
    2. 'is' → logprob: -5.006741523742676
    3. 'None' → logprob: -11.131741523742676
    4. ' None' → logprob: -11.631741523742676
    5. ')' → logprob: -13.506741523742676
    6. '=None' → logprob: -15.131741523742676
    7. '<|end|>' → logprob: -15.131741523742676
    8. '	is' → logprob: -15.631741523742676
    9. ' ' → logprob: -16.25674057006836
    10. '```' → logprob: -16.75674057006836

Token 291: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029752222821116447
    2. ' None' → logprob: -3.529752254486084
    3. '(None' → logprob: -13.904751777648926
    4. '_None' → logprob: -15.029751777648926
    5. '=None' → logprob: -15.404751777648926
    6. ' ' → logprob: -16.654752731323242
    7. '_none' → logprob: -16.779752731323242
    8. '   ' → logprob: -16.904752731323242
    9. 'none' → logprob: -17.279752731323242
    10. '0' → logprob: -18.154752731323242

Token 292: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0145679647102952
    2. ':
' → logprob: -4.264567852020264
    3. '   ' → logprob: -8.639568328857422
    4. ':return' → logprob: -8.764568328857422
    5. '):' → logprob: -10.889568328857422
    6. '       ' → logprob: -11.139568328857422
    7. '):
' → logprob: -11.264568328857422
    8. ' or' → logprob: -11.639568328857422
    9. ',' → logprob: -12.264568328857422
    10. ' :' → logprob: -12.889568328857422

Token 293: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002426790539175272
    2. '       ' → logprob: -6.752426624298096
    3. ' return' → logprob: -7.377426624298096
    4. ' None' → logprob: -7.627426624298096
    5. 'None' → logprob: -9.377427101135254
    6. 'return' → logprob: -10.627427101135254
    7. '	return' → logprob: -10.877427101135254
    8. '(None' → logprob: -11.877427101135254
    9. '    
' → logprob: -12.127427101135254
    10. ' ' → logprob: -14.627427101135254

Token 294: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2176382690668106
    2. ' return' → logprob: -1.7176382541656494
    3. '       ' → logprob: -4.7176384925842285
    4. 'return' (adapté à ' return') → logprob: -4.9676384925842285
    5. '	return' → logprob: -9.34263801574707
    6. ' None' → logprob: -9.34263801574707
    7. ' ' → logprob: -11.84263801574707
    8. '    ' → logprob: -12.46763801574707
    9. '  ' → logprob: -12.71763801574707
    10. 'None' → logprob: -12.71763801574707

Token 295: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03804366663098335
    2. ' None' → logprob: -3.288043737411499
    3. '   ' → logprob: -13.788043975830078
    4. '(None' → logprob: -14.038043975830078
    5. '_None' → logprob: -15.413043975830078
    6. ',None' → logprob: -15.663043975830078
    7. '=None' → logprob: -18.038043975830078
    8. 'none' → logprob: -18.038043975830078
    9. '0' → logprob: -18.788043975830078
    10. '.None' → logprob: -18.913043975830078

Token 296: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6782681345939636
    2. '\n' → logprob: -1.1782681941986084
    3. '
' → logprob: -2.0532681941986084
    4. '    
' → logprob: -3.1782681941986084
    5. '  
' → logprob: -5.053267955780029
    6. ' 
' → logprob: -6.053267955780029
    7. '\' → logprob: -6.178267955780029
    8. '   
' → logprob: -7.303267955780029
    9. ')' → logprob: -7.553267955780029
    10. '<|end|>' → logprob: -7.803267955780029

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015610091388225555
    2. '    
' → logprob: -4.390610218048096
    3. '
' → logprob: -6.515610218048096
    4. '   
' → logprob: -8.390609741210938
    5. '\n' → logprob: -8.515609741210938
    6. ' 
' → logprob: -8.640609741210938
    7. '\t' → logprob: -8.640609741210938
    8. ' ' → logprob: -9.140609741210938
    9. 'if' → logprob: -9.515609741210938
    10. ' if' → logprob: -9.515609741210938

Token 298: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.7249120473861694
    2. 'left' (adapté à ' left') → logprob: -0.8499120473861694
    3. '   ' → logprob: -2.724912166595459
    4. 'node' → logprob: -4.724912166595459
    5. ' node' → logprob: -5.099912166595459
    6. ' res' → logprob: -5.849912166595459
    7. 'root' → logprob: -6.474912166595459
    8. 'res' → logprob: -6.724912166595459
    9. 't' → logprob: -7.349912166595459
    10. ' t' → logprob: -7.974912166595459

Token 299: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014166327193379402
    2. ' =' → logprob: -4.264166355133057
    3. '_inter' → logprob: -14.264165878295898
    4. 'intersection' → logprob: -14.264165878295898
    5. '_=' → logprob: -14.389165878295898
    6. '=sub' → logprob: -15.014165878295898
    7. '_' → logprob: -15.514165878295898
    8. '=
' → logprob: -15.639165878295898
    9. ',' → logprob: -16.2641658782959
    10. 'inter' → logprob: -16.5141658782959

Token 300: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.018150413408875465
    2. ' intersection' → logprob: -4.018150329589844
    3. 'inter' → logprob: -14.893150329589844
    4. '   ' → logprob: -16.643150329589844
    5. 'interaction' → logprob: -17.268150329589844
    6. ' ' → logprob: -18.518150329589844
    7. '
' → logprob: -19.768150329589844
    8. ' ' → logprob: -20.643150329589844
    9. '  ' → logprob: -20.893150329589844
    10. 'Intersection' → logprob: -20.893150329589844

Token 301: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00012356207298580557
    2. '(' → logprob: -9.000123977661133
    3. '(
' → logprob: -16.125123977661133
    4. 't' → logprob: -17.375123977661133
    5. '(

' → logprob: -19.625123977661133
    6. ' (' → logprob: -19.750123977661133
    7. '	t' → logprob: -20.125123977661133
    8. '(tree' → logprob: -20.750123977661133
    9. ' t' → logprob: -21.750123977661133
    10. ',t' → logprob: -22.000123977661133

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.375000953674316
    3. '.left' → logprob: -16.125
    4. 't' → logprob: -16.25
    5. ' ' → logprob: -16.875
    6. '2' → logprob: -17.0
    7. '   ' → logprob: -17.25
    8. '.t' → logprob: -17.875
    9. '```' → logprob: -17.875
    10. ',' → logprob: -18.25

Token 303: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0001302374730585143
    2. '.' → logprob: -9.000130653381348
    3. '.right' → logprob: -12.250130653381348
    4. ' .' → logprob: -13.750130653381348
    5. '.t' → logprob: -14.250130653381348
    6. '.Left' → logprob: -16.12512969970703
    7. '.le' → logprob: -17.00012969970703
    8. ',' → logprob: -17.62512969970703
    9. 'left' → logprob: -18.25012969970703
    10. '.root' → logprob: -18.37512969970703

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021431241184473038
    2. ' ,' → logprob: -6.377142906188965
    3. ',t' → logprob: -7.752142906188965
    4. ' t' → logprob: -11.502142906188965
    5. 't' → logprob: -14.127142906188965
    6. '(t' → logprob: -16.25214385986328
    7. ',
' → logprob: -16.50214385986328
    8. '   ' → logprob: -16.87714385986328
    9. ' ' → logprob: -18.00214385986328
    10. '‌,' → logprob: -18.87714385986328

Token 305: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1602274775505066
    2. ' t' → logprob: -1.9102275371551514
    3. '   ' → logprob: -13.16022777557373
    4. '	t' → logprob: -14.53522777557373
    5. ' ' → logprob: -15.03522777557373
    6. '`t' → logprob: -15.28522777557373
    7. '    ' → logprob: -15.78522777557373
    8. ')t' → logprob: -16.035226821899414
    9. '  ' → logprob: -16.160226821899414
    10. ')' → logprob: -17.160226821899414

Token 306: '2' (ID: 17)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.060240618884563446
    2. 'left' → logprob: -3.0602405071258545
    3. '.right' → logprob: -4.810240745544434
    4. '1' → logprob: -6.185240745544434
    5. '2' → logprob: -7.060240745544434
    6. 'eft' → logprob: -8.185240745544434
    7. 'right' → logprob: -8.435240745544434
    8. 't' → logprob: -11.185240745544434
    9. '.' → logprob: -11.810240745544434
    10. 'ight' → logprob: -13.685240745544434

Token 307: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -7.896309739408025e-07
    2. 'left' → logprob: -15.125000953674316
    3. '.le' → logprob: -15.250000953674316
    4. '.' → logprob: -16.25
    5. ' .' → logprob: -16.375
    6. '.right' → logprob: -17.625
    7. '.Left' → logprob: -20.125
    8. '.l' → logprob: -20.5
    9. '	left' → logprob: -20.625
    10. '.leading' → logprob: -21.0

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6060808522743173e-05
    2. ')
' → logprob: -10.750025749206543
    3. '   ' → logprob: -12.375025749206543
    4. ' )' → logprob: -15.250025749206543
    5. '),' → logprob: -17.50002670288086
    6. ')

' → logprob: -18.00002670288086
    7. ' ' → logprob: -18.25002670288086
    8. ',' → logprob: -18.75002670288086
    9. '')' → logprob: -19.00002670288086
    10. ')
' → logprob: -19.62502670288086

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003272779518738389
    2. 'right' → logprob: -6.378273010253906
    3. ' right' → logprob: -6.628273010253906
    4. '	right' → logprob: -8.628273010253906
    5. ' ' → logprob: -11.003273010253906
    6. '  ' → logprob: -11.378273010253906
    7. ',right' → logprob: -11.378273010253906
    8. '    
' → logprob: -11.753273010253906
    9. '
' → logprob: -12.253273010253906
    10. ',' → logprob: -12.253273010253906

Token 310: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.008664444088935852
    2. ' right' → logprob: -4.758664608001709
    3. '   ' → logprob: -10.00866413116455
    4. '	right' → logprob: -12.25866413116455
    5. ',right' → logprob: -16.633665084838867
    6. '
' → logprob: -17.133665084838867
    7. ' ' → logprob: -17.258665084838867
    8. '       ' → logprob: -17.758665084838867
    9. '.right' → logprob: -17.883665084838867
    10. 'Right' → logprob: -18.133665084838867

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136906623840332
    2. '=' → logprob: -1.3136906623840332
    3. ',' → logprob: -7.813690662384033
    4. ')' → logprob: -11.063690185546875
    5. '   ' → logprob: -12.813690185546875
    6. ' ' → logprob: -12.938690185546875
    7. '<|end|>' → logprob: -12.938690185546875
    8. ' ,' → logprob: -14.938690185546875
    9. ')=' → logprob: -15.438690185546875
    10. '(' → logprob: -15.563690185546875

Token 312: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.011047935113310814
    2. ' intersection' → logprob: -4.511047840118408
    3. 'inter' → logprob: -15.636048316955566
    4. 'interaction' → logprob: -17.01104736328125
    5. '(inter' → logprob: -20.88604736328125
    6. ' ' → logprob: -20.88604736328125
    7. 'int' → logprob: -21.01104736328125
    8. 'union' → logprob: -21.01104736328125
    9. '```' → logprob: -21.01104736328125
    10. '   ' → logprob: -21.38604736328125

Token 313: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.048591457307338715
    2. '(' → logprob: -3.048591375350952
    3. '(
' → logprob: -12.798591613769531
    4. '(

' → logprob: -14.548591613769531
    5. ' (' → logprob: -15.048591613769531
    6. '(s' → logprob: -15.923591613769531
    7. ')' → logprob: -16.17359161376953
    8. 't' → logprob: -16.17359161376953
    9. '=' → logprob: -16.67359161376953
    10. ',' → logprob: -16.67359161376953

Token 314: '1' (ID: 16)
  Prédit: '.right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.17315919697284698
    2. 't' → logprob: -2.173159122467041
    3. '.t' → logprob: -3.173159122467041
    4. '(t' → logprob: -6.423159122467041
    5. 'right' → logprob: -7.298159122467041
    6. '.' → logprob: -7.548159122467041
    7. ' t' → logprob: -8.2981595993042
    8. '.left' → logprob: -9.1731595993042
    9. ')t' → logprob: -10.0481595993042
    10. ')' → logprob: -10.4231595993042

Token 315: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.06999289989471436
    2. ',' → logprob: -2.944993019104004
    3. '.' → logprob: -4.319993019104004
    4. '.left' → logprob: -7.069993019104004
    5. '.t' → logprob: -7.819993019104004
    6. ',right' → logprob: -8.819993019104004
    7. ',t' → logprob: -8.819993019104004
    8. ')' → logprob: -9.319993019104004
    9. '(t' → logprob: -11.444993019104004
    10. ' .' → logprob: -11.694993019104004

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.47757811343763e-05
    2. ',t' → logprob: -10.500044822692871
    3. ' ,' → logprob: -11.125044822692871
    4. ')' → logprob: -13.625044822692871
    5. '   ' → logprob: -14.000044822692871
    6. '(t' → logprob: -15.875044822692871
    7. ',
' → logprob: -16.250043869018555
    8. ' t' → logprob: -17.000043869018555
    9. 't' → logprob: -17.250043869018555
    10. '(' → logprob: -17.625043869018555

Token 317: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03807913884520531
    2. ' t' → logprob: -3.288079023361206
    3. '(t' → logprob: -10.413079261779785
    4. ')t' → logprob: -12.913079261779785
    5. '   ' → logprob: -13.413079261779785
    6. '`t' → logprob: -13.538079261779785
    7. ')' → logprob: -14.288079261779785
    8. '	t' → logprob: -14.288079261779785
    9. ' ' → logprob: -14.788079261779785
    10. '<t' → logprob: -16.03807830810547

Token 318: '2' (ID: 17)
  Prédit: '.right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.020986638963222504
    2. '2' → logprob: -4.270986557006836
    3. 'right' → logprob: -5.020986557006836
    4. 'ight' → logprob: -8.770986557006836
    5. 't' → logprob: -10.270986557006836
    6. '   ' → logprob: -12.895986557006836
    7. ',right' → logprob: -13.145986557006836
    8. ' right' → logprob: -13.270986557006836
    9. ' .' → logprob: -13.395986557006836
    10. '	right' → logprob: -14.020986557006836

Token 319: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -6.790129555156454e-05
    2. 'right' → logprob: -10.250067710876465
    3. ',' → logprob: -11.000067710876465
    4. ')' → logprob: -12.250067710876465
    5. ',right' → logprob: -12.375067710876465
    6. '.' → logprob: -12.500067710876465
    7. 'ight' → logprob: -13.125067710876465
    8. '),' → logprob: -15.625067710876465
    9. '   ' → logprob: -15.750067710876465
    10. '	right' → logprob: -16.00006866455078

Token 320: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005244902800768614
    2. ')
' → logprob: -5.505244731903076
    3. '   ' → logprob: -6.755244731903076
    4. ')return' → logprob: -15.005245208740234
    5. ' )' → logprob: -15.005245208740234
    6. ')
' → logprob: -15.630245208740234
    7. '       ' → logprob: -16.130245208740234
    8. ' ' → logprob: -16.380245208740234
    9. '  ' → logprob: -17.380245208740234
    10. ')\
' → logprob: -17.880245208740234

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01875416748225689
    2. 'return' → logprob: -4.018754005432129
    3. ' return' → logprob: -7.893754005432129
    4. 'if' → logprob: -8.643754005432129
    5. '	return' → logprob: -10.518754005432129
    6. ' if' → logprob: -11.018754005432129
    7. '       ' → logprob: -12.143754005432129
    8. '
' → logprob: -13.268754005432129
    9. '    
' → logprob: -13.768754005432129
    10. '	if' → logprob: -14.268754005432129

Token 322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004788128426298499
    2. ' return' → logprob: -7.750478744506836
    3. '   ' → logprob: -10.000478744506836
    4. '
' → logprob: -13.250478744506836
    5. '	return' → logprob: -14.500478744506836
    6. '```' → logprob: -15.250478744506836
    7. 'if' → logprob: -16.625478744506836
    8. '``' → logprob: -16.625478744506836
    9. '    
' → logprob: -16.750478744506836
    10. ' ' → logprob: -17.625478744506836

Token 323: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.25193047523498535
    2. ' Tree' → logprob: -1.5019304752349854
    3. '	Tree' → logprob: -13.751930236816406
    4. '   ' → logprob: -16.501930236816406
    5. '(Tree' → logprob: -16.751930236816406
    6. '<Tree' → logprob: -17.001930236816406
    7. ' ' → logprob: -17.376930236816406
    8. '.Tree' → logprob: -17.626930236816406
    9. 'Trees' → logprob: -17.626930236816406
    10. ' ' → logprob: -18.126930236816406

Token 324: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0005594660760834813
    2. '(' → logprob: -7.500559329986572
    3. 'left' → logprob: -12.25055980682373
    4. '(
' → logprob: -13.37555980682373
    5. '[left' → logprob: -17.375558853149414
    6. '(

' → logprob: -17.625558853149414
    7. '()' → logprob: -18.000558853149414
    8. ',left' → logprob: -18.125558853149414
    9. '(True' → logprob: -18.375558853149414
    10. ' left' → logprob: -18.625558853149414

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007570966263301671
    2. ',right' → logprob: -7.250757217407227
    3. ' ,' → logprob: -10.000757217407227
    4. ',
' → logprob: -13.625757217407227
    5. ',left' → logprob: -15.625757217407227
    6. ')' → logprob: -16.125757217407227
    7. '   ' → logprob: -16.125757217407227
    8. ',r' → logprob: -16.500757217407227
    9. 'right' → logprob: -17.500757217407227
    10. '[right' → logprob: -17.875757217407227

Token 326: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00033546582562848926
    2. ' right' → logprob: -8.000335693359375
    3. '	right' → logprob: -19.875335693359375
    4. '   ' → logprob: -21.500335693359375
    5. ' ' → logprob: -21.875335693359375
    6. ')' → logprob: -21.875335693359375
    7. 'rig' → logprob: -22.500335693359375
    8. '[right' → logprob: -22.625335693359375
    9. '(right' → logprob: -23.000335693359375
    10. 'r' → logprob: -23.000335693359375

Token 327: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -17.5
    4. ')return' → logprob: -18.625
    5. '   ' → logprob: -18.875
    6. ')}' → logprob: -19.625
    7. ')#' → logprob: -20.75
    8. '))' → logprob: -20.875
    9. ')`' → logprob: -20.875
    10. '}' → logprob: -21.0

Token 328: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43413612246513367
    2. '#' → logprob: -1.434136152267456
    3. '<|end|>' → logprob: -2.559136152267456
    4. '(' → logprob: -4.309135913848877
    5. '```' → logprob: -4.309135913848877
    6. ')' → logprob: -6.559135913848877
    7. '
' → logprob: -6.559135913848877
    8. 'result' → logprob: -6.809135913848877
    9. '(
' → logprob: -7.059135913848877
    10. 'tree' → logprob: -7.309135913848877

Token 329: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.011692996136844158
    2. ' union' → logprob: -5.636693000793457
    3. 'difference' → logprob: -5.636693000793457
    4. 'main' → logprob: -6.261693000793457
    5. 'tree' → logprob: -7.386693000793457
    6. 's' → logprob: -7.511693000793457
    7. 'intersection' → logprob: -7.886693000793457
    8. 'un' → logprob: -8.011693000793457
    9. 'parse' → logprob: -8.886693000793457
    10. '_union' → logprob: -9.386693000793457

Token 330: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.002821754664182663
    2. '(' → logprob: -5.877821922302246
    3. ' (' → logprob: -11.502821922302246
    4. '(tree' → logprob: -12.252821922302246
    5. '(s' → logprob: -13.627821922302246
    6. '(a' → logprob: -15.377821922302246
    7. '(
' → logprob: -15.752821922302246
    8. '(u' → logprob: -16.75282096862793
    9. '(def' → logprob: -17.00282096862793
    10. '(root' → logprob: -17.00282096862793

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015100252814590931
    2. '(t' → logprob: -4.265100479125977
    3. 't' → logprob: -7.265100479125977
    4. ',' → logprob: -9.015100479125977
    5. ')' → logprob: -10.515100479125977
    6. ' t' → logprob: -10.765100479125977
    7. '_t' → logprob: -11.390100479125977
    8. '```' → logprob: -11.390100479125977
    9. ')t' → logprob: -11.390100479125977
    10. '(' → logprob: -11.765100479125977

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ',t' → logprob: -10.500031471252441
    3. ' ,' → logprob: -12.500031471252441
    4. 't' → logprob: -16.250032424926758
    5. ',
' → logprob: -17.000032424926758
    6. '‌,' → logprob: -18.375032424926758
    7. '_,' → logprob: -19.125032424926758
    8. ' t' → logprob: -19.125032424926758
    9. ',

' → logprob: -19.125032424926758
    10. ',T' → logprob: -19.500032424926758

Token 333: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00861528143286705
    2. ' t' → logprob: -4.758615493774414
    3. '   ' → logprob: -15.508615493774414
    4. '`t' → logprob: -15.633615493774414
    5. '<|end|>' → logprob: -16.383615493774414
    6. '	t' → logprob: -16.633615493774414
    7. ' ' → logprob: -16.883615493774414
    8. ')' → logprob: -16.883615493774414
    9. ')t' → logprob: -17.383615493774414
    10. '_t' → logprob: -18.258615493774414

Token 334: '2' (ID: 17)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22786423563957214
    2. '2' → logprob: -1.7278642654418945
    3. '1' → logprob: -3.9778642654418945
    4. ',' → logprob: -5.9778642654418945
    5. ' t' → logprob: -6.1028642654418945
    6. 'None' → logprob: -6.2278642654418945
    7. '=None' → logprob: -8.477864265441895
    8. 'or' → logprob: -9.227864265441895
    9. 'if' → logprob: -9.602864265441895
    10. ')' → logprob: -9.977864265441895

Token 335: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03389095142483711
    2. '):
' → logprob: -3.408890962600708
    3. ',' → logprob: -8.533890724182129
    4. '):
' → logprob: -10.408890724182129
    5. ')' → logprob: -11.783890724182129
    6. '):

' → logprob: -12.533890724182129
    7. ' ):' → logprob: -12.783890724182129
    8. ':' → logprob: -13.533890724182129
    9. '   ' → logprob: -13.533890724182129
    10. '=None' → logprob: -15.283890724182129

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16380338370800018
    2. ' if' → logprob: -1.9138033390045166
    3. ' None' → logprob: -6.038803577423096
    4. 'None' → logprob: -7.663803577423096
    5. '<|end|>' → logprob: -7.788803577423096
    6. 'if' → logprob: -8.538803100585938
    7. '  ' → logprob: -10.663803100585938
    8. '    ' → logprob: -11.038803100585938
    9. ' t' → logprob: -11.413803100585938
    10. ' ' → logprob: -11.413803100585938

Token 337: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.97024549683556e-05
    2. 'None' → logprob: -10.000080108642578
    3. ' if' → logprob: -10.375080108642578
    4. '   ' → logprob: -12.750080108642578
    5. ' None' → logprob: -16.625080108642578
    6. '
' → logprob: -17.125080108642578
    7. 't' → logprob: -18.125080108642578
    8. 'If' → logprob: -18.625080108642578
    9. 'none' → logprob: -19.000080108642578
    10. '	if' → logprob: -19.250080108642578

Token 338: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.17977449297904968
    2. 't' → logprob: -1.804774522781372
    3. ' not' → logprob: -10.804774284362793
    4. '	t' → logprob: -12.679774284362793
    5. 'None' → logprob: -13.429774284362793
    6. ' ' → logprob: -13.679774284362793
    7. ' None' → logprob: -13.679774284362793
    8. 'not' → logprob: -14.304774284362793
    9. '   ' → logprob: -14.804774284362793
    10. '`t' → logprob: -14.929774284362793

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5638458728790283
    2. ' t' → logprob: -0.9388458728790283
    3. 't' → logprob: -3.3138458728790283
    4. ' None' → logprob: -5.938845634460449
    5. 'None' → logprob: -7.813845634460449
    6. ' is' → logprob: -7.813845634460449
    7. '=None' → logprob: -10.31384563446045
    8. '_t' → logprob: -11.18884563446045
    9. ' ' → logprob: -11.43884563446045
    10. '_' → logprob: -11.93884563446045

Token 340: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20141851902008057
    2. 'is' → logprob: -1.7014185190200806
    3. ' ' → logprob: -12.57641887664795
    4. 's' → logprob: -14.32641887664795
    5. '<|end|>' → logprob: -15.07641887664795
    6. ')' → logprob: -15.20141887664795
    7. ' t' → logprob: -15.70141887664795
    8. '   ' → logprob: -15.82641887664795
    9. 't' → logprob: -16.701417922973633
    10. '
' → logprob: -16.951417922973633

Token 341: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07889199256896973
    2. ' None' → logprob: -2.5788919925689697
    3. '_None' → logprob: -13.95389175415039
    4. '(None' → logprob: -14.45389175415039
    5. ' ' → logprob: -15.07889175415039
    6. '=None' → logprob: -15.45389175415039
    7. 'none' → logprob: -15.95389175415039
    8. '_none' → logprob: -16.32889175415039
    9. '.None' → logprob: -16.82889175415039
    10. ',None' → logprob: -17.07889175415039

Token 342: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049625180661678314
    2. ' and' → logprob: -3.2996251583099365
    3. 'and' → logprob: -4.674625396728516
    4. ':
' → logprob: -6.799625396728516
    5. ':return' → logprob: -7.299625396728516
    6. ' or' → logprob: -9.049625396728516
    7. '   ' → logprob: -9.049625396728516
    8. ' :' → logprob: -9.924625396728516
    9. ',' → logprob: -10.049625396728516
    10. '):' → logprob: -11.049625396728516

Token 343: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10055384784936905
    2. ' t' → logprob: -2.3505537509918213
    3. '   ' → logprob: -7.9755539894104
    4. '	t' → logprob: -13.725553512573242
    5. ' ' → logprob: -14.350553512573242
    6. '  ' → logprob: -14.350553512573242
    7. 'None' → logprob: -14.350553512573242
    8. '`t' → logprob: -15.350553512573242
    9. '(t' → logprob: -15.725553512573242
    10. '    ' → logprob: -15.975553512573242

Token 344: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' t' → logprob: -13.000005722045898
    3. 't' → logprob: -13.375005722045898
    4. ' ' → logprob: -14.000005722045898
    5. '   ' → logprob: -15.500005722045898
    6. '1' → logprob: -15.625005722045898
    7. 'None' → logprob: -15.875005722045898
    8. '_' → logprob: -16.1250057220459
    9. ' not' → logprob: -17.0000057220459
    10. '  ' → logprob: -17.3750057220459

Token 345: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1002984344959259
    2. 'is' → logprob: -2.3502984046936035
    3. '<|end|>' → logprob: -9.475298881530762
    4. ' ' → logprob: -12.100298881530762
    5. 'None' → logprob: -12.850298881530762
    6. ')' → logprob: -12.850298881530762
    7. '<|end|>' → logprob: -13.475298881530762
    8. ':' → logprob: -14.725298881530762
    9. '	is' → logprob: -14.975298881530762
    10. '=None' → logprob: -15.100298881530762

Token 346: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.14347732067108154
    2. ' None' → logprob: -2.018477439880371
    3. ' not' → logprob: -7.393477439880371
    4. 'not' → logprob: -8.643477439880371
    5. '(None' → logprob: -12.518477439880371
    6. '_None' → logprob: -13.143477439880371
    7. 'none' → logprob: -13.643477439880371
    8. ' ' → logprob: -13.893477439880371
    9. 'Not' → logprob: -14.393477439880371
    10. '_none' → logprob: -14.518477439880371

Token 347: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034062184393405914
    2. '   ' → logprob: -4.034062385559082
    3. ':
' → logprob: -4.284062385559082
    4. '       ' → logprob: -6.659062385559082
    5. ':return' → logprob: -7.284062385559082
    6. '):' → logprob: -11.534062385559082
    7. '):
' → logprob: -11.909062385559082
    8. ':
' → logprob: -12.909062385559082
    9. ' :' → logprob: -13.034062385559082
    10. ' return' → logprob: -13.909062385559082

Token 348: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12715750932693481
    2. '       ' → logprob: -2.12715744972229
    3. ' return' → logprob: -8.627157211303711
    4. 'return' → logprob: -10.127157211303711
    5. '    
' → logprob: -12.627157211303711
    6. '	return' → logprob: -13.627157211303711
    7. '   ' → logprob: -14.002157211303711
    8. '     ' → logprob: -14.127157211303711
    9. ' None' → logprob: -14.252157211303711
    10. '    ' → logprob: -14.377157211303711

Token 349: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.41297149658203125
    2. ' return' → logprob: -1.6629714965820312
    3. '   ' → logprob: -1.9129714965820312
    4. '       ' → logprob: -6.912971496582031
    5. '	return' → logprob: -9.287971496582031
    6. ' ' → logprob: -12.162971496582031
    7. '           ' → logprob: -12.412971496582031
    8. '  ' → logprob: -13.162971496582031
    9. 'None' → logprob: -13.662971496582031
    10. ' None' → logprob: -13.912971496582031

Token 350: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020354038861114532
    2. ' None' → logprob: -8.500203132629395
    3. '_None' → logprob: -18.37520408630371
    4. '(None' → logprob: -18.50020408630371
    5. '   ' → logprob: -19.50020408630371
    6. ',None' → logprob: -19.75020408630371
    7. '=None' → logprob: -20.50020408630371
    8. 'none' → logprob: -20.62520408630371
    9. 'No' → logprob: -20.75020408630371
    10. '.None' → logprob: -22.25020408630371

Token 351: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1789434254169464
    2. '
' → logprob: -2.428943395614624
    3. '    
' → logprob: -3.553943395614624
    4. '\n' → logprob: -4.053943634033203
    5. ':
' → logprob: -4.178943634033203
    6. '  
' → logprob: -5.428943634033203
    7. ' 
' → logprob: -5.803943634033203
    8. '   
' → logprob: -5.928943634033203
    9. ':' → logprob: -6.803943634033203
    10. '\' → logprob: -7.303943634033203

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03462842479348183
    2. '
' → logprob: -4.034628391265869
    3. '    
' → logprob: -5.034628391265869
    4. ' if' → logprob: -5.784628391265869
    5. '```' → logprob: -6.284628391265869
    6. ' 
' → logprob: -6.534628391265869
    7. '   
' → logprob: -7.534628391265869
    8. '\n' → logprob: -7.909628391265869
    9. ':
' → logprob: -8.034628868103027
    10. 'if' → logprob: -8.159628868103027

Token 353: ' left' (ID: 3561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10223491489887238
    2. ' if' → logprob: -2.3522348403930664
    3. 'left' (adapté à ' left') → logprob: -6.727234840393066
    4. 'i' → logprob: -8.352234840393066
    5. '   ' → logprob: -8.352234840393066
    6. ' left' → logprob: -8.477234840393066
    7. 't' → logprob: -9.602234840393066
    8. '
' → logprob: -10.227234840393066
    9. ' i' → logprob: -10.602234840393066
    10. ' t' → logprob: -11.852234840393066

Token 354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478381156921
    2. ' =' → logprob: -0.6931478381156921
    3. 'union' → logprob: -15.818147659301758
    4. '   ' → logprob: -16.193147659301758
    5. ',' → logprob: -16.318147659301758
    6. ' ' → logprob: -16.443147659301758
    7. '_union' → logprob: -16.443147659301758
    8. '=
' → logprob: -17.443147659301758
    9. ' union' → logprob: -17.443147659301758
    10. '_' → logprob: -17.568147659301758

Token 355: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.69315105676651
    2. 'union' → logprob: -0.69315105676651
    3. '	union' → logprob: -13.818151473999023
    4. '.union' → logprob: -14.318151473999023
    5. 'unit' → logprob: -14.443151473999023
    6. '   ' → logprob: -14.818151473999023
    7. '_union' → logprob: -14.943151473999023
    8. 'un' → logprob: -15.568151473999023
    9. 'Union' → logprob: -15.818151473999023
    10. 'None' → logprob: -15.943151473999023

Token 356: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0015008177142590284
    2. '(' → logprob: -7.126500606536865
    3. '((' → logprob: -7.376500606536865
    4. '(
' → logprob: -10.001501083374023
    5. '(get' → logprob: -11.126501083374023
    6. '(None' → logprob: -12.626501083374023
    7. ' (' → logprob: -12.751501083374023
    8. 't' → logprob: -13.126501083374023
    9. 'get' → logprob: -13.376501083374023
    10. 'None' → logprob: -15.501501083374023

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16225051879882812
    2. '(t' → logprob: -1.9122505187988281
    3. 't' → logprob: -6.412250518798828
    4. ' t' → logprob: -8.162250518798828
    5. '(' → logprob: -10.162250518798828
    6. ' (' → logprob: -10.912250518798828
    7. '.t' → logprob: -11.037250518798828
    8. '.' → logprob: -11.787250518798828
    9. ' ' → logprob: -12.287250518798828
    10. ',t' → logprob: -13.037250518798828

Token 358: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.5599239468574524
    2. '.t' → logprob: -1.1849238872528076
    3. '(t' → logprob: -2.3099238872528076
    4. 'left' → logprob: -4.434924125671387
    5. 't' → logprob: -5.559924125671387
    6. ' and' → logprob: -5.684924125671387
    7. '.right' → logprob: -7.059924125671387
    8. ' t' → logprob: -7.059924125671387
    9. ' .' → logprob: -7.309924125671387
    10. 'and' → logprob: -7.559924125671387

Token 359: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05891456827521324
    2. ',' → logprob: -3.1839146614074707
    3. 'if' → logprob: -4.183914661407471
    4. '   ' → logprob: -7.683914661407471
    5. ' ,' → logprob: -10.308914184570312
    6. ',t' → logprob: -10.433914184570312
    7. 't' → logprob: -11.558914184570312
    8. '    ' → logprob: -11.683914184570312
    9. ' ' → logprob: -12.808914184570312
    10. ' t' → logprob: -13.183914184570312

Token 360: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1602243334054947
    2. ' t' → logprob: -1.9102243185043335
    3. '(t' → logprob: -16.66022491455078
    4. '	t' → logprob: -16.91022491455078
    5. '   ' → logprob: -17.03522491455078
    6. 's' → logprob: -17.03522491455078
    7. '`t' → logprob: -17.03522491455078
    8. ')t' → logprob: -18.28522491455078
    9. ' ' → logprob: -18.41022491455078
    10. '<t' → logprob: -18.66022491455078

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. 't' → logprob: -13.00000286102295
    3. ' ' → logprob: -15.00000286102295
    4. ' t' → logprob: -15.00000286102295
    5. '2' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.625003814697266
    7. 'and' → logprob: -16.875003814697266
    8. 'else' → logprob: -17.125003814697266
    9. 'left' → logprob: -17.125003814697266
    10. ' and' → logprob: -17.625003814697266

Token 362: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.49375683069229126
    2. 'else' → logprob: -0.9937568306922913
    3. ' is' → logprob: -3.9937567710876465
    4. 'and' → logprob: -7.8687567710876465
    5. 'is' → logprob: -8.243757247924805
    6. ' and' → logprob: -8.243757247924805
    7. 'left' → logprob: -9.993757247924805
    8. '    ' → logprob: -10.118757247924805
    9. '   ' → logprob: -10.118757247924805
    10. ' left' → logprob: -12.243757247924805

Token 363: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.23768246173858643
    2. ' None' → logprob: -1.8626824617385864
    3. 't' → logprob: -3.362682342529297
    4. ' t' → logprob: -3.862682342529297
    5. '   ' → logprob: -8.112682342529297
    6. '(None' → logprob: -8.862682342529297
    7. 'Tree' → logprob: -10.487682342529297
    8. ' ' → logprob: -10.487682342529297
    9. '    ' → logprob: -10.612682342529297
    10. ' (' → logprob: -10.612682342529297

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019653335213661194
    2. ',t' → logprob: -4.1446533203125
    3. ' ,' → logprob: -5.6446533203125
    4. ',
' → logprob: -10.2696533203125
    5. '   ' → logprob: -11.2696533203125
    6. ' t' → logprob: -11.7696533203125
    7. '(t' → logprob: -12.1446533203125
    8. ',(' → logprob: -12.2696533203125
    9. 't' → logprob: -12.6446533203125
    10. ' ' → logprob: -13.0196533203125

Token 365: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.20142397284507751
    2. 't' → logprob: -1.7014240026474
    3. '   ' → logprob: -12.076423645019531
    4. '    ' → logprob: -13.076423645019531
    5. '(t' → logprob: -13.826423645019531
    6. ' ' → logprob: -14.201423645019531
    7. ' ' → logprob: -14.826423645019531
    8. '	t' → logprob: -14.826423645019531
    9. '`t' → logprob: -15.701423645019531
    10. ' (' → logprob: -16.20142364501953

Token 366: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.176947600673884e-05
    2. 't' → logprob: -10.875021934509277
    3. ' ' → logprob: -14.000021934509277
    4. '1' → logprob: -14.875021934509277
    5. '   ' → logprob: -14.875021934509277
    6. ' t' → logprob: -15.375021934509277
    7. '.t' → logprob: -15.500021934509277
    8. '.' → logprob: -16.00002098083496
    9. '  ' → logprob: -16.43752098083496
    10. '.right' → logprob: -16.87502098083496

Token 367: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.749814019713085e-06
    2. 'left' → logprob: -12.000006675720215
    3. '.' → logprob: -14.500006675720215
    4. ' .' → logprob: -16.87500762939453
    5. ''.' → logprob: -18.25000762939453
    6. '`.' → logprob: -18.50000762939453
    7. '.right' → logprob: -18.62500762939453
    8. '	left' → logprob: -18.75000762939453
    9. '.Left' → logprob: -19.12500762939453
    10. '[left' → logprob: -19.87500762939453

Token 368: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20141616463661194
    2. 'if' → logprob: -1.7014161348342896
    3. ')' → logprob: -12.951416015625
    4. '   ' → logprob: -15.201416015625
    5. '(if' → logprob: -16.951416015625
    6. '    ' → logprob: -17.076416015625
    7. ' ' → logprob: -17.076416015625
    8. '	if' → logprob: -17.576416015625
    9. '),' → logprob: -17.701416015625
    10. 'If' → logprob: -17.826416015625

Token 369: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12694711983203888
    2. ' t' → logprob: -2.1269471645355225
    3. '(t' → logprob: -12.126947402954102
    4. '   ' → logprob: -12.501947402954102
    5. '`t' → logprob: -12.501947402954102
    6. 'None' → logprob: -13.376947402954102
    7. ' ' → logprob: -13.376947402954102
    8. '    ' → logprob: -14.501947402954102
    9. ' not' → logprob: -14.626947402954102
    10. '	t' → logprob: -14.751947402954102

Token 370: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.440506407059729e-05
    2. '1' → logprob: -10.50003433227539
    3. ' ' → logprob: -13.12503433227539
    4. 'else' → logprob: -13.37503433227539
    5. 'None' → logprob: -13.75003433227539
    6. 't' → logprob: -14.81253433227539
    7. '   ' → logprob: -15.31253433227539
    8. ' else' → logprob: -15.31253433227539
    9. ' None' → logprob: -15.37503433227539
    10. '```' → logprob: -15.50003433227539

Token 371: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20141372084617615
    2. 'else' → logprob: -1.7014137506484985
    3. '	else' → logprob: -15.451414108276367
    4. ' ' → logprob: -15.826414108276367
    5. ' is' → logprob: -16.326414108276367
    6. '   ' → logprob: -17.451414108276367
    7. '```' → logprob: -18.076414108276367
    8. '    ' → logprob: -18.451414108276367
    9. '        ' → logprob: -19.076414108276367
    10. '_else' → logprob: -19.201414108276367

Token 372: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12692999839782715
    2. ' None' → logprob: -2.126929998397827
    3. ' ' → logprob: -14.001930236816406
    4. '(None' → logprob: -14.376930236816406
    5. ',None' → logprob: -16.126930236816406
    6. '=None' → logprob: -16.251930236816406
    7. '  ' → logprob: -16.501930236816406
    8. '_None' → logprob: -16.751930236816406
    9. '   ' → logprob: -16.876930236816406
    10. 'No' → logprob: -17.376930236816406

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020276637747883797
    2. ')
' → logprob: -4.1452765464782715
    3. ',' → logprob: -6.0202765464782715
    4. '   ' → logprob: -6.3952765464782715
    5. 'if' → logprob: -10.77027702331543
    6. ')

' → logprob: -10.89527702331543
    7. ' if' → logprob: -11.02027702331543
    8. ' )' → logprob: -11.14527702331543
    9. '),' → logprob: -11.14527702331543
    10. ',)' → logprob: -11.64527702331543

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44278648495674133
    2. ' or' → logprob: -1.192786455154419
    3. ' if' → logprob: -3.817786455154419
    4. 'or' → logprob: -3.817786455154419
    5. ',' → logprob: -6.192786693572998
    6. 'right' → logprob: -6.317786693572998
    7. ' right' → logprob: -6.317786693572998
    8. 'left' → logprob: -6.317786693572998
    9. ' left' → logprob: -6.817786693572998
    10. 'if' → logprob: -7.567786693572998

Token 375: ' right' (ID: 1849)
  Prédit: ' union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.3086162209510803
    2. 'union' → logprob: -1.4336161613464355
    3. ' right' → logprob: -4.5586161613464355
    4. '   ' → logprob: -5.0586161613464355
    5. ' left' → logprob: -5.0586161613464355
    6. 'left' → logprob: -6.3086161613464355
    7. 'right' (adapté à ' right') → logprob: -6.6836161613464355
    8. '    ' → logprob: -9.183616638183594
    9. ' None' → logprob: -9.183616638183594
    10. ' ' → logprob: -9.308616638183594

Token 376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740826487541199
    2. '=' → logprob: -0.9740826487541199
    3. '(' → logprob: -12.724082946777344
    4. '   ' → logprob: -13.724082946777344
    5. '(t' → logprob: -14.224082946777344
    6. ' (' → logprob: -14.849082946777344
    7. ')' → logprob: -15.974082946777344
    8. 'union' → logprob: -16.599082946777344
    9. '=t' → logprob: -16.724082946777344
    10. ' ' → logprob: -16.724082946777344

Token 377: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.2811569273471832
    2. ' union' → logprob: -1.4061568975448608
    3. '_union' → logprob: -13.531156539916992
    4. '   ' → logprob: -13.656156539916992
    5. '.union' → logprob: -13.656156539916992
    6. '	union' → logprob: -13.906156539916992
    7. ' ' → logprob: -14.156156539916992
    8. 'Union' → logprob: -14.906156539916992
    9. 'unit' → logprob: -15.156156539916992
    10. ' Union' → logprob: -16.156156539916992

Token 378: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00016229959146585315
    2. '(' → logprob: -8.875162124633789
    3. 't' → logprob: -11.125162124633789
    4. '((' → logprob: -12.000162124633789
    5. ' (' → logprob: -13.750162124633789
    6. '(
' → logprob: -14.750162124633789
    7. ' t' → logprob: -17.12516212463379
    8. '	t' → logprob: -18.12516212463379
    9. '   ' → logprob: -18.87516212463379
    10. '<t' → logprob: -18.87516212463379

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016825977945700288
    2. '(t' → logprob: -8.750167846679688
    3. 't' → logprob: -11.625167846679688
    4. '.t' → logprob: -15.375167846679688
    5. '(None' → logprob: -15.500167846679688
    6. '(' → logprob: -15.750167846679688
    7. '   ' → logprob: -16.375167846679688
    8. ' t' → logprob: -16.750167846679688
    9. '[t' → logprob: -17.125167846679688
    10. ' ' → logprob: -17.125167846679688

Token 380: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.04987369850277901
    2. '.left' → logprob: -3.0498735904693604
    3. '.' → logprob: -6.6748738288879395
    4. 'right' → logprob: -11.424873352050781
    5. 'if' → logprob: -12.674873352050781
    6. ')' → logprob: -13.174873352050781
    7. ''.' → logprob: -13.299873352050781
    8. '   ' → logprob: -13.549873352050781
    9. ').' → logprob: -14.049873352050781
    10. ' .' → logprob: -14.174873352050781

Token 381: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.002805940806865692
    2. 'if' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.752805709838867
    4. 'If' → logprob: -14.877805709838867
    5. '(if' → logprob: -15.502805709838867
    6. '<|end|>' → logprob: -17.252805709838867
    7. '   ' → logprob: -17.377805709838867
    8. '	if' → logprob: -17.627805709838867
    9. ')' → logprob: -18.377805709838867
    10. '```' → logprob: -18.502805709838867

Token 382: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20201119780540466
    2. ' t' → logprob: -1.702011227607727
    3. '(t' → logprob: -7.8270111083984375
    4. 'None' → logprob: -9.077011108398438
    5. ' None' → logprob: -10.077011108398438
    6. '   ' → logprob: -10.827011108398438
    7. ' (' → logprob: -11.077011108398438
    8. '`t' → logprob: -13.452011108398438
    9. ' ' → logprob: -13.577011108398438
    10. '(None' → logprob: -14.077011108398438

Token 383: '1' (ID: 16)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.976033627986908
    2. '2' → logprob: -1.7260336875915527
    3. 'else' → logprob: -2.1010336875915527
    4. ' else' → logprob: -2.1010336875915527
    5. 'None' → logprob: -2.1010336875915527
    6. '1' → logprob: -3.7260336875915527
    7. ' right' → logprob: -4.226033687591553
    8. 'right' → logprob: -4.351033687591553
    9. '   ' → logprob: -4.726033687591553
    10. ' ' → logprob: -5.101033687591553

Token 384: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16024544835090637
    2. 'else' → logprob: -1.910245418548584
    3. ' if' → logprob: -11.410245895385742
    4. 'if' → logprob: -12.160245895385742
    5. ' ' → logprob: -13.035245895385742
    6. ' or' → logprob: -13.535245895385742
    7. ' is' → logprob: -14.785245895385742
    8. '	else' → logprob: -15.410245895385742
    9. ')' → logprob: -15.660245895385742
    10. '   ' → logprob: -15.910245895385742

Token 385: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06196869537234306
    2. ' None' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.686968803405762
    4. '(None' → logprob: -14.686968803405762
    5. '   ' → logprob: -17.311967849731445
    6. '=None' → logprob: -17.561967849731445
    7. '_None' → logprob: -17.936967849731445
    8. 'Right' → logprob: -17.936967849731445
    9. '0' → logprob: -18.186967849731445
    10. 'No' → logprob: -18.436967849731445

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002169413026422262
    2. ' ,' → logprob: -6.252169609069824
    3. ',t' → logprob: -8.502169609069824
    4. ' if' → logprob: -10.502169609069824
    5. 'if' → logprob: -12.377169609069824
    6. ',None' → logprob: -12.877169609069824
    7. '   ' → logprob: -13.877169609069824
    8. ',
' → logprob: -14.002169609069824
    9. ' t' → logprob: -14.877169609069824
    10. ',right' → logprob: -15.002169609069824

Token 387: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3484955132007599
    2. ' t' → logprob: -1.2234954833984375
    3. '   ' → logprob: -10.223495483398438
    4. ' ' → logprob: -12.223495483398438
    5. '    ' → logprob: -12.598495483398438
    6. '(t' → logprob: -12.973495483398438
    7. '  ' → logprob: -13.848495483398438
    8. '`t' → logprob: -14.098495483398438
    9. '	t' → logprob: -14.848495483398438
    10. 'None' → logprob: -14.973495483398438

Token 388: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022148462012410164
    2. 't' → logprob: -6.8772149085998535
    3. 'right' → logprob: -7.1272149085998535
    4. '.right' → logprob: -8.127214431762695
    5. ' right' → logprob: -10.627214431762695
    6. 'ight' → logprob: -10.877214431762695
    7. '   ' → logprob: -11.502214431762695
    8. ' t' → logprob: -11.627214431762695
    9. '(right' → logprob: -12.252214431762695
    10. ' ' → logprob: -12.502214431762695

Token 389: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.048791177570819855
    2. 'right' → logprob: -3.0487911701202393
    3. ' right' → logprob: -8.54879093170166
    4. ' .' → logprob: -13.04879093170166
    5. '	right' → logprob: -13.17379093170166
    6. 'if' → logprob: -13.54879093170166
    7. '.' → logprob: -13.67379093170166
    8. '   ' → logprob: -13.92379093170166
    9. ' ' → logprob: -13.92379093170166
    10. '[right' → logprob: -14.54879093170166

Token 390: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.029750484973192215
    2. 'if' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.52975082397461
    4. ')' → logprob: -18.52975082397461
    5. '   ' → logprob: -19.02975082397461
    6. '	if' → logprob: -19.27975082397461
    7. 'If' → logprob: -19.65475082397461
    8. 'else' → logprob: -20.77975082397461
    9. ' else' → logprob: -21.02975082397461
    10. ' ' → logprob: -21.02975082397461

Token 391: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009762817993760109
    2. ' t' → logprob: -4.634762763977051
    3. '(t' → logprob: -13.00976276397705
    4. '   ' → logprob: -13.25976276397705
    5. 'None' → logprob: -13.50976276397705
    6. '`t' → logprob: -14.38476276397705
    7. ' ' → logprob: -15.38476276397705
    8. '    ' → logprob: -15.88476276397705
    9. '2' → logprob: -16.009763717651367
    10. '  ' → logprob: -16.134763717651367

Token 392: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.363567590713501
    2. 'right' → logprob: -2.738567590713501
    3. 'None' → logprob: -2.738567590713501
    4. ' right' → logprob: -2.863567590713501
    5. 'else' → logprob: -2.988567590713501
    6. ' else' → logprob: -3.738567590713501
    7. 't' → logprob: -3.738567590713501
    8. ' None' → logprob: -4.238567352294922
    9. '   ' → logprob: -6.988567352294922
    10. ' t' → logprob: -7.113567352294922

Token 393: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08898591250181198
    2. ' else' → logprob: -2.4639859199523926
    3. ' ' → logprob: -11.088985443115234
    4. '   ' → logprob: -11.963985443115234
    5. 'None' → logprob: -12.088985443115234
    6. 'right' → logprob: -12.463985443115234
    7. '```' → logprob: -12.713985443115234
    8. 'if' → logprob: -12.713985443115234
    9. '?' → logprob: -13.463985443115234
    10. ')' → logprob: -13.713985443115234

Token 394: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005319497082382441
    2. ' None' → logprob: -5.255319595336914
    3. 't' → logprob: -9.630319595336914
    4. 'right' → logprob: -11.380319595336914
    5. ' t' → logprob: -12.505319595336914
    6. '(None' → logprob: -13.505319595336914
    7. ' right' → logprob: -13.630319595336914
    8. 'Right' → logprob: -13.630319595336914
    9. '(t' → logprob: -14.630319595336914
    10. ' ' → logprob: -15.005319595336914

Token 395: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6446700096130371
    2. ')
' → logprob: -0.7696700096130371
    3. 'if' → logprob: -5.144670009613037
    4. '   ' → logprob: -5.644670009613037
    5. ' if' → logprob: -6.144670009613037
    6. ' )
' → logprob: -9.269670486450195
    7. ')t' → logprob: -9.769670486450195
    8. ' )' → logprob: -9.769670486450195
    9. '(t' → logprob: -9.894670486450195
    10. ')

' → logprob: -10.269670486450195

Token 396: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.312555193901062
    2. 'return' → logprob: -2.1875553131103516
    3. '   ' → logprob: -2.4375553131103516
    4. ' if' → logprob: -2.8125553131103516
    5. ' return' → logprob: -4.937555313110352
    6. 't' → logprob: -7.062555313110352
    7. ' t' → logprob: -8.437555313110352
    8. 'Tree' → logprob: -8.437555313110352
    9. 'left' → logprob: -8.687555313110352
    10. ' Tree' → logprob: -9.937555313110352

Token 397: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.580498218536377
    2. 'if' → logprob: -0.830498218536377
    3. 'Tree' → logprob: -6.455498218536377
    4. ' return' → logprob: -6.830498218536377
    5. ' if' → logprob: -6.955498218536377
    6. 't' → logprob: -7.705498218536377
    7. '   ' → logprob: -8.205497741699219
    8. 'root' → logprob: -9.955497741699219
    9. 'tree' → logprob: -9.955497741699219
    10. 'result' → logprob: -10.080497741699219

Token 398: ' Tree' (ID: 14224)
  Prédit: ' Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.1002107709646225
    2. 'Tree' → logprob: -2.350210666656494
    3. '	Tree' → logprob: -12.850211143493652
    4. '   ' → logprob: -14.600211143493652
    5. '(Tree' → logprob: -14.850211143493652
    6. ' ' → logprob: -15.100211143493652
    7. ' ' → logprob: -15.725211143493652
    8. '<Tree' → logprob: -16.225210189819336
    9. ' Trees' → logprob: -16.850210189819336
    10. 'Trees' → logprob: -17.475210189819336

Token 399: '(left' (ID: 32958)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.09594914317131042
    2. '((' → logprob: -3.595949172973633
    3. '(left' → logprob: -3.595949172973633
    4. '(
' → logprob: -3.720949172973633
    5. '(' → logprob: -4.470949172973633
    6. 'left' → logprob: -7.220949172973633
    7. 't' → logprob: -8.470949172973633
    8. '(

' → logprob: -11.345949172973633
    9. '(None' → logprob: -11.595949172973633
    10. '(((' → logprob: -12.595949172973633

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03693124279379845
    2. ' if' → logprob: -3.786931276321411
    3. ' or' → logprob: -4.911931037902832
    4. 'if' → logprob: -5.786931037902832
    5. ',right' → logprob: -6.411931037902832
    6. 'or' → logprob: -7.286931037902832
    7. ' ,' → logprob: -7.911931037902832
    8. '   ' → logprob: -8.411931037902832
    9. ',left' → logprob: -8.411931037902832
    10. 'left' → logprob: -11.161931037902832

Token 401: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.005234356038272381
    2. ' right' → logprob: -5.255234241485596
    3. '   ' → logprob: -14.755234718322754
    4. '(right' → logprob: -17.505233764648438
    5. '	right' → logprob: -18.005233764648438
    6. '       ' → logprob: -18.380233764648438
    7. ' ' → logprob: -18.505233764648438
    8. '     ' → logprob: -18.880233764648438
    9. '    ' → logprob: -18.880233764648438
    10. '      ' → logprob: -19.505233764648438

Token 402: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003115680068731308
    2. ')' → logprob: -6.878115653991699
    3. '   ' → logprob: -7.128115653991699
    4. ' ,' → logprob: -7.378115653991699
    5. ',right' → logprob: -8.3781156539917
    6. ' if' → logprob: -8.8781156539917
    7. ',left' → logprob: -8.8781156539917
    8. ' or' → logprob: -10.1281156539917
    9. 'if' → logprob: -10.2531156539917
    10. ',
' → logprob: -10.3781156539917

Token 403: 'import' (ID: 561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6724700927734375
    2. 'if' → logprob: -0.9224700927734375
    3. ' if' → logprob: -2.4224700927734375
    4. 'def' → logprob: -6.5474700927734375
    5. '       ' → logprob: -7.0474700927734375
    6. 't' → logprob: -8.547470092773438
    7. ' ' → logprob: -8.672470092773438
    8. '	if' → logprob: -9.297470092773438
    9. ')' → logprob: -9.422470092773438
    10. 'import' → logprob: -9.672470092773438

Token 404: ' sys' (ID: 12228)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.6852669715881348
    2. 're' → logprob: -1.1852669715881348
    3. 'sys' → logprob: -1.9352669715881348
    4. 'collections' → logprob: -3.1852669715881348
    5. 'math' → logprob: -5.685266971588135
    6. 'heap' → logprob: -7.935266971588135
    7. 'random' → logprob: -8.310266494750977
    8. 'queue' → logprob: -8.560266494750977
    9. ' copy' → logprob: -9.185266494750977
    10. 'json' → logprob: -9.435266494750977

Token 405: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026594143360853195
    2. 'for' → logprob: -4.526594161987305
    3. '
' → logprob: -4.901594161987305
    4. 'input' → logprob: -5.776594161987305
    5. 'data' → logprob: -6.526594161987305
    6. 'if' → logprob: -6.651594161987305
    7. 'pos' → logprob: -7.651594161987305
    8. 'sys' → logprob: -7.901594161987305
    9. 'args' → logprob: -8.151594161987305
    10. '\n' → logprob: -8.526594161987305

Token 406: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7935865521430969
    2. 'for' → logprob: -0.7935865521430969
    3. 'line' → logprob: -2.793586492538452
    4. 's' → logprob: -4.543586730957031
    5. 'if' → logprob: -4.668586730957031
    6. 't' → logprob: -5.043586730957031
    7. 'input' → logprob: -5.918586730957031
    8. 'data' → logprob: -6.418586730957031
    9. 'n' → logprob: -6.543586730957031
    10. 'tree' → logprob: -7.043586730957031

Token 407: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3113798499107361
    2. ' line' → logprob: -1.4363799095153809
    3. ' _' → logprob: -3.561379909515381
    4. ' s' → logprob: -7.811379909515381
    5. ' i' → logprob: -7.936379909515381
    6. ' l' → logprob: -8.561379432678223
    7. '  ' → logprob: -8.811379432678223
    8. '_' → logprob: -9.061379432678223
    9. 'line' → logprob: -10.436379432678223
    10. ' ▁' → logprob: -10.811379432678223

Token 408: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007621653378009796
    2. 'in' → logprob: -4.882621765136719
    3. ' ' → logprob: -11.757621765136719
    4. 's' → logprob: -13.007621765136719
    5. '	in' → logprob: -13.632621765136719
    6. '()' → logprob: -14.132621765136719
    7. 'line' → logprob: -14.507621765136719
    8. '_' → logprob: -14.632621765136719
    9. '  ' → logprob: -14.757621765136719
    10. 'import' → logprob: -15.257621765136719

Token 409: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005535095697268844
    2. ' sys' → logprob: -7.500553607940674
    3. '=sys' → logprob: -15.125553131103516
    4. '	sys' → logprob: -16.750553131103516
    5. 'import' → logprob: -17.125553131103516
    6. 'stdin' → logprob: -17.125553131103516
    7. 'iter' → logprob: -18.000553131103516
    8. '(sys' → logprob: -18.125553131103516
    9. 'in' → logprob: -19.625553131103516
    10. 'input' → logprob: -20.125553131103516

Token 410: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0012040425790473819
    2. 'stdin' → logprob: -6.876204013824463
    3. '.readline' → logprob: -9.001204490661621
    4. '(stdin' → logprob: -11.376204490661621
    5. 'import' → logprob: -11.626204490661621
    6. 'in' → logprob: -11.876204490661621
    7. '.' → logprob: -11.876204490661621
    8. '.argv' → logprob: -12.376204490661621
    9. ' stdin' → logprob: -13.376204490661621
    10. '.stdout' → logprob: -13.501204490661621

Token 411: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13504306972026825
    2. '.readline' → logprob: -2.885043144226074
    3. ' in' → logprob: -3.010043144226074
    4. 'in' → logprob: -5.010043144226074
    5. '.strip' → logprob: -5.135043144226074
    6. ':
' → logprob: -5.760043144226074
    7. '.' → logprob: -6.385043144226074
    8. '.readlines' → logprob: -6.385043144226074
    9. '.rstrip' → logprob: -7.385043144226074
    10. '():' → logprob: -8.260043144226074

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005889683496206999
    2. ' line' → logprob: -5.630889892578125
    3. ' s' → logprob: -6.130889892578125
    4. 's' → logprob: -10.505889892578125
    5. ' if' → logprob: -10.630889892578125
    6. '    
' → logprob: -11.505889892578125
    7. '(line' → logprob: -11.880889892578125
    8. '=line' → logprob: -11.880889892578125
    9. 'line' → logprob: -12.130889892578125
    10. '	line' → logprob: -12.130889892578125

Token 413: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38462987542152405
    2. ' line' → logprob: -1.2596298456192017
    3. ' s' → logprob: -3.759629964828491
    4. ' t' → logprob: -5.134629726409912
    5. 's' → logprob: -5.634629726409912
    6. 'line' (adapté à ' line') → logprob: -6.259629726409912
    7. 't' → logprob: -8.25963020324707
    8. ' l' → logprob: -8.75963020324707
    9. ' if' → logprob: -8.88463020324707
    10. ' a' → logprob: -9.38463020324707

Token 414: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5034428238868713
    2. ' =' → logprob: -1.5034427642822266
    3. '=line' → logprob: -1.7534427642822266
    4. 'line' → logprob: -11.753442764282227
    5. '=
' → logprob: -12.878442764282227
    6. '.strip' → logprob: -14.128442764282227
    7. ' =
' → logprob: -14.503442764282227
    8. '=

' → logprob: -14.503442764282227
    9. '[line' → logprob: -14.878442764282227
    10. ' ' → logprob: -15.253442764282227

Token 415: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004088966641575098
    2. '.rstrip' → logprob: -5.504088878631592
    3. '.' → logprob: -12.12908935546875
    4. 'strip' → logprob: -13.25408935546875
    5. ' .' → logprob: -13.50408935546875
    6. '().' → logprob: -13.62908935546875
    7. ' strip' → logprob: -15.75408935546875
    8. 'rstrip' → logprob: -15.87908935546875
    9. '.replace' → logprob: -16.00408935546875
    10. '_strip' → logprob: -16.25408935546875

Token 416: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01816176250576973
    2. '()
' → logprob: -4.018161773681641
    3. '()

' → logprob: -12.01816177368164
    4. '()
' → logprob: -12.76816177368164
    5. '(' → logprob: -14.14316177368164
    6. '()\' → logprob: -14.39316177368164
    7. '()==' → logprob: -15.26816177368164
    8. '()`' → logprob: -15.39316177368164
    9. '()>' → logprob: -15.39316177368164
    10. '();' → logprob: -15.39316177368164

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11079327762126923
    2. 'if' → logprob: -2.735793352127075
    3. ' if' → logprob: -3.235793352127075
    4. 't' → logprob: -7.610793113708496
    5. ',' → logprob: -9.735793113708496
    6. 's' → logprob: -9.860793113708496
    7. '[' → logprob: -10.985793113708496
    8. 'a' → logprob: -11.110793113708496
    9. ' t' → logprob: -11.610793113708496
    10. '	if' → logprob: -11.735793113708496

Token 418: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002252314705401659
    2. 't' → logprob: -7.252252101898193
    3. '   ' → logprob: -7.252252101898193
    4. ' if' → logprob: -7.252252101898193
    5. 'parts' → logprob: -9.502252578735352
    6. 'trees' → logprob: -10.627252578735352
    7. 'tree' → logprob: -11.752252578735352
    8. 's' → logprob: -12.002252578735352
    9. 'i' → logprob: -12.752252578735352
    10. '	if' → logprob: -13.377252578735352

Token 419: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5652440190315247
    2. 'not' → logprob: -0.9402440190315247
    3. 'line' → logprob: -3.31524395942688
    4. ' line' → logprob: -5.315244197845459
    5. ' ' → logprob: -13.5652437210083
    6. '	not' → logprob: -14.3152437210083
    7. '#line' → logprob: -14.8152437210083
    8. '   ' → logprob: -14.8152437210083
    9. '=line' → logprob: -14.8152437210083
    10. 'len' → logprob: -14.8152437210083

Token 420: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20141421258449554
    2. 'line' → logprob: -1.7014142274856567
    3. ' ' → logprob: -14.451414108276367
    4. '(line' → logprob: -16.076414108276367
    5. '	line' → logprob: -16.201414108276367
    6. '#line' → logprob: -16.826414108276367
    7. 'Line' → logprob: -17.451414108276367
    8. ' lin' → logprob: -17.701414108276367
    9. '   ' → logprob: -18.201414108276367
    10. 'l' → logprob: -18.326414108276367

Token 421: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2346784621477127
    2. ':
' → logprob: -1.6096785068511963
    3. ' or' → logprob: -4.734678268432617
    4. ' :' → logprob: -9.109678268432617
    5. ':return' → logprob: -9.109678268432617
    6. '   ' → logprob: -9.609678268432617
    7. ' :
' → logprob: -10.484678268432617
    8. '.startswith' → logprob: -10.734678268432617
    9. 'or' → logprob: -10.984678268432617
    10. '():
' → logprob: -11.234678268432617

Token 422: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05379601567983627
    2. '       ' → logprob: -3.1787960529327393
    3. ':' → logprob: -4.55379581451416
    4. ':
' → logprob: -9.42879581451416
    5. ',' → logprob: -9.55379581451416
    6. '   ' → logprob: -11.17879581451416
    7. '    ' → logprob: -11.42879581451416
    8. ' continue' → logprob: -11.67879581451416
    9. ' or' → logprob: -12.17879581451416
    10. '     ' → logprob: -12.92879581451416

Token 423: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.41285958886146545
    2. ' break' → logprob: -1.162859559059143
    3. 'continue' (adapté à ' continue') → logprob: -4.2878594398498535
    4. '   ' → logprob: -4.6628594398498535
    5. ' continue' → logprob: -6.5378594398498535
    6. '       ' → logprob: -7.4128594398498535
    7. '	break' → logprob: -7.7878594398498535
    8. '	continue' → logprob: -12.162859916687012
    9. '    ' → logprob: -12.787859916687012
    10. '           ' → logprob: -13.412859916687012

Token 424: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024192532524466515
    2. 't' → logprob: -4.6491923332214355
    3. ' t' → logprob: -4.7741923332214355
    4. ' parts' → logprob: -6.3991923332214355
    5. ' tree' → logprob: -6.6491923332214355
    6. 'tree' → logprob: -7.3991923332214355
    7. '    
' → logprob: -7.7741923332214355
    8. ' if' → logprob: -8.274192810058594
    9. 'tokens' → logprob: -8.399192810058594
    10. 'a' → logprob: -8.524192810058594

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3609483242034912
    2. 't' → logprob: -1.4859483242034912
    3. ' t' → logprob: -2.735948324203491
    4. ' parts' → logprob: -4.98594856262207
    5. 'parts' → logprob: -6.11094856262207
    6. 'tree' → logprob: -7.36094856262207
    7. 'a' → logprob: -7.48594856262207
    8. 'tokens' → logprob: -7.86094856262207
    9. 's' → logprob: -7.98594856262207
    10. 'trees' → logprob: -8.23594856262207

Token 426: ' op' (ID: 991)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16407164931297302
    2. 'trees' → logprob: -2.164071559906006
    3. 'parts' → logprob: -3.664071559906006
    4. '   ' → logprob: -5.164071559906006
    5. 'ts' → logprob: -6.289071559906006
    6. 'tree' → logprob: -6.914071559906006
    7. ' t' → logprob: -7.164071559906006
    8. 'if' → logprob: -7.289071559906006
    9. ' parts' → logprob: -8.539072036743164
    10. ' trees' → logprob: -8.789072036743164

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006766291335225105
    2. ' ,' → logprob: -5.756766319274902
    3. '_,' → logprob: -7.006766319274902
    4. '=' → logprob: -7.256766319274902
    5. ' =' → logprob: -7.381766319274902
    6. ',_' → logprob: -8.131766319274902
    7. '_parts' → logprob: -8.506766319274902
    8. '_tokens' → logprob: -8.506766319274902
    9. '_' → logprob: -9.131766319274902
    10. ',args' → logprob: -9.506766319274902

Token 428: ' t' (ID: 260)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.11229950189590454
    2. 's' → logprob: -3.1122994422912598
    3. ' rest' → logprob: -3.1122994422912598
    4. 'data' → logprob: -5.61229944229126
    5. 'tree' → logprob: -5.61229944229126
    6. ' s' → logprob: -5.98729944229126
    7. 'expr' → logprob: -6.23729944229126
    8. 'trees' → logprob: -6.48729944229126
    9. 'args' → logprob: -6.61229944229126
    10. 'space' → logprob: -6.98729944229126

Token 429: '1' (ID: 16)
  Prédit: 'rees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.8470950126647949
    2. 'ree' → logprob: -0.9720950126647949
    3. '1' → logprob: -2.097095012664795
    4. 's' → logprob: -2.972095012664795
    5. ',' → logprob: -5.097095012664795
    6. '_str' → logprob: -5.472095012664795
    7. 'rest' → logprob: -5.972095012664795
    8. 'ext' → logprob: -5.972095012664795
    9. 'r' → logprob: -7.222095012664795
    10. 'str' → logprob: -7.347095012664795

Token 430: 's' (ID: 82)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.3006812334060669
    2. ',' → logprob: -1.925681233406067
    3. 'str' → logprob: -2.6756811141967773
    4. 's' → logprob: -3.1756811141967773
    5. '_s' → logprob: -6.175681114196777
    6. ',s' → logprob: -8.175681114196777
    7. '_,' → logprob: -8.175681114196777
    8. '_raw' → logprob: -9.050681114196777
    9. '_repr' → logprob: -9.300681114196777
    10. '_string' → logprob: -9.550681114196777

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01143693644553423
    2. 'tr' → logprob: -5.511436939239502
    3. '=' → logprob: -5.761436939239502
    4. 't' → logprob: -5.886436939239502
    5. ',t' → logprob: -7.136436939239502
    6. ' =' → logprob: -7.886436939239502
    7. ',tr' → logprob: -10.136436462402344
    8. 'p' → logprob: -10.261436462402344
    9. '_,' → logprob: -10.386436462402344
    10. 'tring' → logprob: -10.511436462402344

Token 432: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029750952497124672
    2. ' t' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.27975082397461
    4. ' ' → logprob: -16.52975082397461
    5. ',' → logprob: -17.27975082397461
    6. '  ' → logprob: -17.40475082397461
    7. '_t' → logprob: -17.40475082397461
    8. '    ' → logprob: -17.52975082397461
    9. ',t' → logprob: -17.90475082397461
    10. 'space' → logprob: -18.15475082397461

Token 433: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4538555443286896
    2. 's' → logprob: -1.0788555145263672
    3. '1' → logprob: -3.703855514526367
    4. 't' → logprob: -8.703855514526367
    5. 'ree' → logprob: -11.578855514526367
    6. '=' → logprob: -11.828855514526367
    7. ' =' → logprob: -11.953855514526367
    8. ',' → logprob: -12.078855514526367
    9. '3' → logprob: -13.203855514526367
    10. '_s' → logprob: -13.328855514526367

Token 434: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4080236852169037
    2. ' =' → logprob: -1.158023715019226
    3. '=' → logprob: -3.9080235958099365
    4. ',' → logprob: -7.283023834228516
    5. 'tr' → logprob: -9.783023834228516
    6. '=line' → logprob: -10.158023834228516
    7. '=s' → logprob: -11.158023834228516
    8. 'r' → logprob: -11.283023834228516
    9. 'tring' → logprob: -11.533023834228516
    10. ')' → logprob: -12.283023834228516

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005412572994828224
    2. ' =' → logprob: -5.255412578582764
    3. '=line' → logprob: -8.630412101745605
    4. '=s' → logprob: -16.630413055419922
    5. '=t' → logprob: -17.505413055419922
    6. '＝' → logprob: -18.130413055419922
    7. '=input' → logprob: -18.505413055419922
    8. '=parse' → logprob: -18.755413055419922
    9. '=
' → logprob: -19.380413055419922
    10. ')=' → logprob: -19.380413055419922

Token 436: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10020720958709717
    2. ' line' → logprob: -2.3502073287963867
    3. '   ' → logprob: -15.350207328796387
    4. '[line' → logprob: -15.850207328796387
    5. '=line' → logprob: -16.35020637512207
    6. '	line' → logprob: -17.10020637512207
    7. '(line' → logprob: -17.35020637512207
    8. '_line' → logprob: -18.22520637512207
    9. 'map' → logprob: -18.60020637512207
    10. '#line' → logprob: -19.97520637512207

Token 437: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010787817649543285
    2. ' =' → logprob: -4.7607879638671875
    3. '=line' → logprob: -6.1357879638671875
    4. '.split' → logprob: -12.260787963867188
    5. '=s' → logprob: -13.760787963867188
    6. '=input' → logprob: -15.135787963867188
    7. 'split' → logprob: -15.135787963867188
    8. '.=' → logprob: -16.010787963867188
    9. '＝' → logprob: -16.260787963867188
    10. '.' → logprob: -16.885787963867188

Token 438: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.39881226420402527
    2. '()' → logprob: -1.1488122940063477
    3. '(max' → logprob: -5.023812294006348
    4. '(None' → logprob: -5.523812294006348
    5. ''' → logprob: -7.148812294006348
    6. 'max' → logprob: -8.523812294006348
    7. 'None' → logprob: -8.773812294006348
    8. '(' → logprob: -9.398812294006348
    9. ' max' → logprob: -10.523812294006348
    10. '("' → logprob: -10.773812294006348

Token 439: ' ',' (ID: 14089)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6152726411819458
    2. ' ' → logprob: -1.6152726411819458
    3. ')' → logprob: -1.7402726411819458
    4. ''' → logprob: -1.9902726411819458
    5. ' ,' → logprob: -2.2402725219726562
    6. '('' → logprob: -2.4902725219726562
    7. ' )' → logprob: -3.3652725219726562
    8. ' '' → logprob: -4.115272521972656
    9. '(max' → logprob: -4.240272521972656
    10. ' ',' → logprob: -4.865272521972656

Token 440: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '1' → logprob: -17.00000762939453
    4. '   ' → logprob: -17.75000762939453
    5. '3' → logprob: -17.87500762939453
    6. '```' → logprob: -19.00000762939453
    7. ')' → logprob: -19.37500762939453
    8. '  ' → logprob: -19.50000762939453
    9. 'max' → logprob: -20.37500762939453
    10. '`' → logprob: -20.50000762939453

Token 441: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -14.125001907348633
    4. '3' → logprob: -17.500001907348633
    5. '```' → logprob: -18.125001907348633
    6. 'max' → logprob: -18.625001907348633
    7. '   ' → logprob: -18.750001907348633
    8. ')' → logprob: -19.375001907348633
    9. '２' → logprob: -20.250001907348633
    10. '  ' → logprob: -20.500001907348633

Token 442: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.625029563903809
    4. '')' → logprob: -15.000029563903809
    5. ',' → logprob: -15.750029563903809
    6. ')
' → logprob: -15.750029563903809
    7. ')

' → logprob: -16.250030517578125
    8. '   ' → logprob: -16.250030517578125
    9. ')`' → logprob: -16.625030517578125
    10. '),' → logprob: -16.875030517578125

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18040522933006287
    2. 't' → logprob: -1.8054052591323853
    3. '    
' → logprob: -8.180405616760254
    4. ' t' → logprob: -8.180405616760254
    5. '
' → logprob: -10.555405616760254
    6. '`t' → logprob: -10.555405616760254
    7. '  ' → logprob: -11.430405616760254
    8. '   
' → logprob: -12.055405616760254
    9. '  
' → logprob: -12.180405616760254
    10. '	t' → logprob: -12.180405616760254

Token 444: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00038300611777231097
    2. ' t' → logprob: -8.125383377075195
    3. 'tree' → logprob: -9.375383377075195
    4. '   ' → logprob: -13.375383377075195
    5. '`t' → logprob: -15.625383377075195
    6. '
' → logprob: -15.875383377075195
    7. ' tree' → logprob: -16.000383377075195
    8. 'if' → logprob: -16.375383377075195
    9. 'try' → logprob: -16.750383377075195
    10. '```' → logprob: -18.000383377075195

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -13.125004768371582
    3. 'ree' → logprob: -13.375004768371582
    4. 's' → logprob: -14.625004768371582
    5. 'r' → logprob: -15.500004768371582
    6. 'a' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.0000057220459
    8. 'ype' → logprob: -16.0000057220459
    9. ' ' → logprob: -16.3750057220459
    10. 'p' → logprob: -16.6250057220459

Token 446: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038098301738500595
    2. ' =' → logprob: -3.2880983352661133
    3. '=parse' → logprob: -9.788098335266113
    4. ',' → logprob: -14.288098335266113
    5. '=

' → logprob: -16.913097381591797
    6. '=create' → logprob: -17.788097381591797
    7. '=
' → logprob: -17.913097381591797
    8. ' ' → logprob: -18.288097381591797
    9. '=t' → logprob: -18.288097381591797
    10. 's' → logprob: -18.288097381591797

Token 447: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0009117019944824278
    2. ' parse' → logprob: -7.000911712646484
    3. '(parse' → logprob: -17.125911712646484
    4. ' ' → logprob: -18.375911712646484
    5. '   ' → logprob: -18.375911712646484
    6. '=parse' → logprob: -18.375911712646484
    7. 'parser' → logprob: -18.625911712646484
    8. '	parse' → logprob: -19.125911712646484
    9. 'par' → logprob: -20.000911712646484
    10. '  ' → logprob: -20.875911712646484

Token 448: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.9361264946837764e-07
    2. '_t' → logprob: -16.375
    3. 'tree' → logprob: -18.0
    4. '_' → logprob: -19.0
    5. '_TREE' → logprob: -20.875
    6. '<Tree' → logprob: -21.0
    7. ' tree' → logprob: -21.375
    8. 't' → logprob: -21.375
    9. '_parse' → logprob: -21.625
    10. '__' → logprob: -22.375

Token 449: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. 't' → logprob: -16.250001907348633
    4. ' (' → logprob: -18.000001907348633
    5. '((' → logprob: -19.250001907348633
    6. '(T' → logprob: -20.125001907348633
    7. 's' → logprob: -20.500001907348633
    8. '[t' → logprob: -22.000001907348633
    9. '(s' → logprob: -22.125001907348633
    10. '(
' → logprob: -22.250001907348633

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012706820853054523
    2. 's' → logprob: -4.387706756591797
    3. 't' → logprob: -9.762706756591797
    4. ')' → logprob: -9.762706756591797
    5. '(t' → logprob: -10.012706756591797
    6. '(s' → logprob: -10.887706756591797
    7. '(' → logprob: -11.887706756591797
    8. '```' → logprob: -13.512706756591797
    9. ')(' → logprob: -13.512706756591797
    10. ' s' → logprob: -13.637706756591797

Token 451: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004170645028352737
    2. 't' → logprob: -6.0041704177856445
    3. '(t' → logprob: -6.6291704177856445
    4. ')' → logprob: -8.504170417785645
    5. '(s' → logprob: -9.379170417785645
    6. ')(' → logprob: -10.379170417785645
    7. ',' → logprob: -11.129170417785645
    8. ')t' → logprob: -11.504170417785645
    9. ' s' → logprob: -12.504170417785645
    10. '),' → logprob: -12.879170417785645

Token 452: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759639143943787
    2. ')' → logprob: -0.8259639143943787
    3. ')
' → logprob: -10.950963973999023
    4. '   ' → logprob: -12.950963973999023
    5. ')

' → logprob: -13.200963973999023
    6. ' )
' → logprob: -13.700963973999023
    7. ')t' → logprob: -13.700963973999023
    8. ' )' → logprob: -14.950963973999023
    9. '),' → logprob: -16.450963973999023
    10. ');' → logprob: -16.950963973999023

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16110597550868988
    2. 't' → logprob: -1.911105990409851
    3. ' t' → logprob: -7.036106109619141
    4. '`t' → logprob: -14.03610610961914
    5. ' ' → logprob: -15.03610610961914
    6. '
' → logprob: -15.41110610961914
    7. '    
' → logprob: -15.41110610961914
    8. '  ' → logprob: -15.41110610961914
    9. '	t' → logprob: -16.16110610961914
    10. '```' → logprob: -17.28610610961914

Token 454: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0031840058509260416
    2. ' t' → logprob: -6.003183841705322
    3. '   ' → logprob: -7.253183841705322
    4. '  ' → logprob: -16.753183364868164
    5. '`t' → logprob: -16.753183364868164
    6. '	t' → logprob: -17.628183364868164
    7. ' ' → logprob: -18.128183364868164
    8. '    ' → logprob: -18.878183364868164
    9. '_t' → logprob: -20.253183364868164
    10. '
' → logprob: -20.378183364868164

Token 455: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. ' =' → logprob: -15.125000953674316
    4. '   ' → logprob: -17.5
    5. '=' → logprob: -17.875
    6. '₂' → logprob: -18.625
    7. '  ' → logprob: -19.375
    8. '２' → logprob: -19.5
    9. '۲' → logprob: -19.875
    10. '_' → logprob: -19.875

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327128410339355
    2. '=' → logprob: -1.3132712841033936
    3. '=parse' → logprob: -11.563271522521973
    4. 's' → logprob: -17.688270568847656
    5. 'parse' → logprob: -18.063270568847656
    6. ' ' → logprob: -18.188270568847656
    7. ' parse' → logprob: -19.313270568847656
    8. '   ' → logprob: -19.563270568847656
    9. '＝' → logprob: -20.063270568847656
    10. ',' → logprob: -20.063270568847656

Token 457: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.02975395694375038
    2. ' parse' → logprob: -3.5297539234161377
    3. '(parse' → logprob: -13.154753684997559
    4. '=parse' → logprob: -14.154753684997559
    5. '	parse' → logprob: -14.529753684997559
    6. '.parse' → logprob: -15.404753684997559
    7. '_parse' → logprob: -16.779754638671875
    8. '   ' → logprob: -17.404754638671875
    9. 'parser' → logprob: -18.154754638671875
    10. ' ' → logprob: -18.279754638671875

Token 458: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.0009189624106511474
    2. 'parse' → logprob: -7.000918865203857
    3. 'tree' → logprob: -11.875919342041016
    4. '(parse' → logprob: -15.875919342041016
    5. '_t' → logprob: -16.000919342041016
    6. '_TREE' → logprob: -16.625919342041016
    7. ' parse' → logprob: -16.750919342041016
    8. '=parse' → logprob: -17.000919342041016
    9. 't' → logprob: -17.125919342041016
    10. '_parse' → logprob: -17.125919342041016

Token 459: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -8.840432565193623e-05
    2. '(' → logprob: -9.375088691711426
    3. 't' → logprob: -12.625088691711426
    4. ' (' → logprob: -16.50008773803711
    5. '(
' → logprob: -16.62508773803711
    6. 's' → logprob: -18.00008773803711
    7. '(tree' → logprob: -18.50008773803711
    8. '	t' → logprob: -19.12508773803711
    9. '[t' → logprob: -19.25008773803711
    10. '(T' → logprob: -19.50008773803711

Token 460: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6327304840087891
    2. '2' → logprob: -0.7577304840087891
    3. 't' → logprob: -9.257730484008789
    4. '_s' → logprob: -11.632730484008789
    5. '```' → logprob: -12.132730484008789
    6. '1' → logprob: -12.507730484008789
    7. ' s' → logprob: -12.882730484008789
    8. ')' → logprob: -12.882730484008789
    9. ')s' → logprob: -13.132730484008789
    10. '   ' → logprob: -13.132730484008789

Token 461: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.5776860184123507e-06
    2. 't' → logprob: -13.25000286102295
    3. '2' → logprob: -15.25000286102295
    4. '_s' → logprob: -15.25000286102295
    5. ')' → logprob: -15.87500286102295
    6. '(s' → logprob: -16.250001907348633
    7. '(t' → logprob: -18.000001907348633
    8. ')s' → logprob: -18.125001907348633
    9. '(' → logprob: -18.625001907348633
    10. '```' → logprob: -19.250001907348633

Token 462: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6405310816480778e-05
    2. ')
' → logprob: -11.125016212463379
    3. '   ' → logprob: -13.750016212463379
    4. ' )' → logprob: -14.500016212463379
    5. ')

' → logprob: -17.000017166137695
    6. '))' → logprob: -17.750017166137695
    7. ')`' → logprob: -18.250017166137695
    8. '),' → logprob: -18.625017166137695
    9. ').' → logprob: -18.750017166137695
    10. ')
' → logprob: -19.250017166137695

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13733842968940735
    2. 'if' → logprob: -2.137338399887085
    3. 'result' → logprob: -5.262338638305664
    4. ' if' → logprob: -6.012338638305664
    5. 'i' → logprob: -6.387338638305664
    6. 't' → logprob: -7.262338638305664
    7. ' result' → logprob: -8.762338638305664
    8. 'r' → logprob: -9.387338638305664
    9. '    
' → logprob: -10.512338638305664
    10. ' i' → logprob: -10.637338638305664

Token 464: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0018957947613671422
    2. 'r' → logprob: -6.751895904541016
    3. 'res' → logprob: -8.001895904541016
    4. 'result' → logprob: -8.251895904541016
    5. ' if' → logprob: -9.001895904541016
    6. 'i' → logprob: -12.751895904541016
    7. '   ' → logprob: -13.251895904541016
    8. 't' → logprob: -13.751895904541016
    9. '
' → logprob: -15.251895904541016
    10. '    
' → logprob: -15.876895904541016

Token 465: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.0019289902411401272
    2. 'op' → logprob: -6.251928806304932
    3. '(op' → logprob: -15.50192928314209
    4. '	op' → logprob: -15.75192928314209
    5. ' ' → logprob: -16.626928329467773
    6. ' ' → logprob: -16.876928329467773
    7. ' o' → logprob: -19.126928329467773
    8. '_op' → logprob: -19.251928329467773
    9. 's' → logprob: -19.626928329467773
    10. 'o' → logprob: -19.751928329467773

Token 466: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2548258602619171
    2. '==' → logprob: -1.5048258304595947
    3. '=='' → logprob: -6.004826068878174
    4. '=="' → logprob: -8.129825592041016
    5. '=' → logprob: -9.629825592041016
    6. ' =='' → logprob: -10.254825592041016
    7. ' =' → logprob: -11.754825592041016
    8. '===' → logprob: -12.004825592041016
    9. '==
' → logprob: -12.754825592041016
    10. ' ' → logprob: -12.879825592041016

Token 467: ' '' (ID: 461)
  Prédit: ''inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''inter' → logprob: -0.5324614644050598
    2. ''un' → logprob: -1.032461404800415
    3. ''' → logprob: -3.407461404800415
    4. ''Union' → logprob: -4.032461643218994
    5. '"' → logprob: -5.782461643218994
    6. ''u' → logprob: -6.657461643218994
    7. ''univers' → logprob: -7.157461643218994
    8. ''in' → logprob: -8.657461166381836
    9. ''t' → logprob: -9.407461166381836
    10. ''une' → logprob: -9.532461166381836

Token 468: 'i' (ID: 72)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.21440908312797546
    2. 'inter' → logprob: -2.339409112930298
    3. 'union' → logprob: -3.214409112930298
    4. 'INTER' → logprob: -3.714409112930298
    5. 'int' → logprob: -4.714408874511719
    6. 'and' → logprob: -4.964408874511719
    7. 'AND' → logprob: -5.089408874511719
    8. 'I' → logprob: -5.464408874511719
    9. 'i' → logprob: -5.714408874511719
    10. 'INT' → logprob: -7.339408874511719

Token 469: '':
' (ID: 7669)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4378848391061183e-05
    2. 'nt' → logprob: -11.625014305114746
    3. 'ns' → logprob: -13.250014305114746
    4. '':' → logprob: -14.000014305114746
    5. '':
' → logprob: -14.000014305114746
    6. 'nte' → logprob: -14.375014305114746
    7. ''' → logprob: -15.000014305114746
    8. ''):
' → logprob: -15.375014305114746
    9. 'nst' → logprob: -15.875014305114746
    10. 'nner' → logprob: -16.125015258789062

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15205122530460358
    2. '   ' → logprob: -2.0270512104034424
    3. ':' → logprob: -5.7770514488220215
    4. ' t' → logprob: -6.5270514488220215
    5. 'result' → logprob: -6.6520514488220215
    6. ' result' → logprob: -6.7770514488220215
    7. '        
' → logprob: -7.2770514488220215
    8. '    
' → logprob: -7.7770514488220215
    9. 't' → logprob: -8.527050971984863
    10. '    ' → logprob: -8.652050971984863

Token 471: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.054123569279909134
    2. 'r' → logprob: -3.554123640060425
    3. 'result' → logprob: -4.304123401641846
    4. ' res' → logprob: -4.929123401641846
    5. 't' → logprob: -5.804123401641846
    6. ' r' → logprob: -8.804123878479004
    7. ' result' → logprob: -9.554123878479004
    8. 'out' → logprob: -9.929123878479004
    9. '   ' → logprob: -10.929123878479004
    10. ' t' → logprob: -11.179123878479004

Token 472: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932308077812195
    2. ' =' → logprob: -0.6932308077812195
    3. 'ult' → logprob: -10.193230628967285
    4. '=res' → logprob: -10.568230628967285
    5. '=result' → logprob: -11.818230628967285
    6. '=t' → logprob: -12.068230628967285
    7. 'ection' → logprob: -14.068230628967285
    8. '=s' → logprob: -14.193230628967285
    9. '=int' → logprob: -14.193230628967285
    10. '   ' → logprob: -14.568230628967285

Token 473: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.0067156096920371056
    2. ' intersection' → logprob: -5.006715774536133
    3. 'union' → logprob: -15.631715774536133
    4. 'inter' → logprob: -15.881715774536133
    5. 'interaction' → logprob: -18.006715774536133
    6. 'Intersection' → logprob: -21.756715774536133
    7. ' union' → logprob: -21.881715774536133
    8. 'interval' → logprob: -22.006715774536133
    9. '   ' → logprob: -22.756715774536133
    10. ' ' → logprob: -23.006715774536133

Token 474: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -16.250003814697266
    4. 't' → logprob: -16.375003814697266
    5. '(
' → logprob: -17.250003814697266
    6. ' t' → logprob: -20.000003814697266
    7. '```' → logprob: -20.000003814697266
    8. 'res' → logprob: -20.500003814697266
    9. '=t' → logprob: -20.625003814697266
    10. '	t' → logprob: -20.750003814697266

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ',' → logprob: -16.25
    3. 'ree' → logprob: -17.375
    4. '```' → logprob: -17.9375
    5. ' ' → logprob: -18.6875
    6. '   ' → logprob: -19.1875
    7. '_' → logprob: -19.3125
    8. '１' → logprob: -19.4375
    9. ')' → logprob: -19.5625
    10. 'ype' → logprob: -19.9375

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010712771909311414
    2. ',t' → logprob: -7.001071453094482
    3. ' ,' → logprob: -8.751070976257324
    4. 't' → logprob: -14.251070976257324
    5. ',
' → logprob: -14.501070976257324
    6. ',res' → logprob: -16.25107192993164
    7. ' t' → logprob: -16.62607192993164
    8. 's' → logprob: -18.12607192993164
    9. '‌,' → logprob: -18.62607192993164
    10. '```' → logprob: -18.87607192993164

Token 477: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008615042082965374
    2. ' t' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.383615493774414
    4. '`t' → logprob: -16.133615493774414
    5. ')t' → logprob: -16.258615493774414
    6. '	t' → logprob: -17.133615493774414
    7. '       ' → logprob: -17.758615493774414
    8. '_t' → logprob: -19.758615493774414
    9. '    ' → logprob: -20.633615493774414
    10. ')' → logprob: -20.758615493774414

Token 478: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.25
    3. 't' → logprob: -17.25
    4. 'ree' → logprob: -17.875
    5. ' ' → logprob: -19.75
    6. '₂' → logprob: -19.75
    7. '۲' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. 's' → logprob: -20.4375
    10. '２' → logprob: -20.5625

Token 479: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024261999875307083
    2. ')
' → logprob: -3.774261951446533
    3. '   ' → logprob: -6.899261951446533
    4. '       ' → logprob: -12.649262428283691
    5. ')
' → logprob: -12.774262428283691
    6. ')return' → logprob: -14.649262428283691
    7. ')

' → logprob: -15.399262428283691
    8. ' )' → logprob: -15.774262428283691
    9. ')n' → logprob: -16.274261474609375
    10. ')`
' → logprob: -16.524261474609375

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045807508286088705
    2. 'elif' → logprob: -7.750458240509033
    3. '<|end|>' → logprob: -11.125457763671875
    4. 'print' → logprob: -12.250457763671875
    5. '```' → logprob: -12.625457763671875
    6. ' elif' → logprob: -13.250457763671875
    7. 'else' → logprob: -14.000457763671875
    8. '	elif' → logprob: -14.875457763671875
    9. '
' → logprob: -15.625457763671875
    10. '<|end|>' → logprob: -15.625457763671875

Token 481: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3871516287326813
    2. 'elif' → logprob: -1.1371515989303589
    3. ' elif' → logprob: -8.887151718139648
    4. 'else' (adapté à ' else') → logprob: -8.887151718139648
    5. 'e' → logprob: -13.387151718139648
    6. '	elif' → logprob: -14.262151718139648
    7. '    
' → logprob: -14.637151718139648
    8. 'if' → logprob: -14.637151718139648
    9. 'el' → logprob: -14.887151718139648
    10. ' else' → logprob: -15.512151718139648

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005492840893566608
    2. ':
' → logprob: -6.130492687225342
    3. ' :' → logprob: -6.505492687225342
    4. '=' → logprob: -7.505492687225342
    5. ' if' → logprob: -7.880492687225342
    6. 'if' → logprob: -8.0054931640625
    7. '   ' → logprob: -8.1304931640625
    8. ' =' → logprob: -9.0054931640625
    9. '  ' → logprob: -9.8804931640625
    10. '       ' → logprob: -10.6304931640625

Token 483: '       ' (ID: 309)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5552976727485657
    2. 'res' → logprob: -1.430297613143921
    3. '       ' → logprob: -1.805297613143921
    4. '   ' → logprob: -3.805297613143921
    5. '    ' → logprob: -9.3052978515625
    6. ' ' → logprob: -10.1802978515625
    7. '	res' → logprob: -11.4302978515625
    8. '
' → logprob: -12.0552978515625
    9. '        ' → logprob: -12.0552978515625
    10. '     ' → logprob: -12.1802978515625

Token 484: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.20141392946243286
    2. ' res' → logprob: -1.701413869857788
    3. '   ' → logprob: -14.951414108276367
    4. '       ' → logprob: -15.951414108276367
    5. '
' → logprob: -16.076414108276367
    6. '	res' → logprob: -16.826414108276367
    7. ' ' → logprob: -18.451414108276367
    8. '_res' → logprob: -19.701414108276367
    9. '$res' → logprob: -19.701414108276367
    10. 're' → logprob: -19.826414108276367

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141403377056122
    2. '=' → logprob: -1.7014139890670776
    3. '=res' → logprob: -14.576414108276367
    4. 's' → logprob: -16.326414108276367
    5. ' ' → logprob: -16.451414108276367
    6. 'es' → logprob: -16.701414108276367
    7. '   ' → logprob: -18.201414108276367
    8. ':' → logprob: -19.201414108276367
    9. 'res' → logprob: -19.326414108276367
    10. '＝' → logprob: -19.701414108276367

Token 486: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.6931476593017578
    2. 'union' → logprob: -0.6931476593017578
    3. '.union' → logprob: -15.943147659301758
    4. 'Union' → logprob: -15.943147659301758
    5. '_union' → logprob: -16.068147659301758
    6. '	union' → logprob: -16.943147659301758
    7. ' ' → logprob: -17.943147659301758
    8. '   ' → logprob: -17.943147659301758
    9. 'un' → logprob: -18.318147659301758
    10. 'unit' → logprob: -19.193147659301758

Token 487: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.625000953674316
    3. ' (' → logprob: -16.250001907348633
    4. '(tree' → logprob: -17.000001907348633
    5. '(
' → logprob: -19.375001907348633
    6. '(res' → logprob: -19.875001907348633
    7. '(T' → logprob: -20.625001907348633
    8. 't' → logprob: -21.375001907348633
    9. '   ' → logprob: -21.375001907348633
    10. '```' → logprob: -21.625001907348633

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ',' → logprob: -16.625
    3. '2' → logprob: -16.625
    4. '(t' → logprob: -16.875
    5. ' ' → logprob: -17.0
    6. '```' → logprob: -17.0
    7. '   ' → logprob: -17.125
    8. ')' → logprob: -17.875
    9. '(' → logprob: -18.25
    10. '
' → logprob: -19.1875

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037919526221230626
    2. ',t' → logprob: -8.00037956237793
    3. ' ,' → logprob: -10.75037956237793
    4. '(t' → logprob: -11.00037956237793
    5. 't' → logprob: -13.12537956237793
    6. ',res' → logprob: -13.62537956237793
    7. '(' → logprob: -13.75037956237793
    8. ')' → logprob: -14.25037956237793
    9. ',
' → logprob: -15.37537956237793
    10. ' t' → logprob: -16.75037956237793

Token 490: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009768604300916195
    2. ' t' → logprob: -4.634768486022949
    3. '   ' → logprob: -11.50976848602295
    4. '(t' → logprob: -14.13476848602295
    5. ')t' → logprob: -14.50976848602295
    6. '	t' → logprob: -14.63476848602295
    7. '`t' → logprob: -14.75976848602295
    8. ' ' → logprob: -15.50976848602295
    9. '  ' → logprob: -16.009769439697266
    10. ')' → logprob: -16.134769439697266

Token 491: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2723104848410003e-05
    2. '1' → logprob: -10.750022888183594
    3. 'res' → logprob: -15.125022888183594
    4. '   ' → logprob: -15.875022888183594
    5. '```' → logprob: -15.875022888183594
    6. 's' → logprob: -16.187522888183594
    7. ' ' → logprob: -16.187522888183594
    8. 'ree' → logprob: -16.437522888183594
    9. 't' → logprob: -16.937522888183594
    10. 'r' → logprob: -17.250022888183594

Token 492: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015179537003859878
    2. ')
' → logprob: -6.5015177726745605
    3. ')t' → logprob: -11.751518249511719
    4. '   ' → logprob: -12.001518249511719
    5. ' )' → logprob: -13.876518249511719
    6. ')
' → logprob: -15.376518249511719
    7. ',' → logprob: -15.626518249511719
    8. ')

' → logprob: -16.25151824951172
    9. ' ' → logprob: -17.12651824951172
    10. ')`' → logprob: -17.62651824951172

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20158466696739197
    2. 'print' → logprob: -1.7015846967697144
    3. ' print' → logprob: -8.826584815979004
    4. '
' → logprob: -11.076584815979004
    5. '	print' → logprob: -12.326584815979004
    6. '       ' → logprob: -13.576584815979004
    7. '  ' → logprob: -13.701584815979004
    8. '    
' → logprob: -14.576584815979004
    9. '```' → logprob: -14.576584815979004
    10. '<|end|>' → logprob: -14.576584815979004

Token 494: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.250000953674316
    4. 'if' → logprob: -20.25
    5. '	print' → logprob: -20.5
    6. '
' → logprob: -21.75
    7. 'import' → logprob: -22.75
    8. 'pr' → logprob: -23.0
    9. 'println' → logprob: -24.0
    10. '.print' → logprob: -24.375

Token 495: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0001238004770129919
    2. 'tree' → logprob: -9.000123977661133
    3. '(' → logprob: -14.875123977661133
    4. '(t' → logprob: -17.250123977661133
    5. ' tree' → logprob: -18.875123977661133
    6. 'Tree' → logprob: -19.000123977661133
    7. '	tree' → logprob: -19.375123977661133
    8. '((' → logprob: -19.500123977661133
    9. '(Tree' → logprob: -20.375123977661133
    10. '/tree' → logprob: -20.750123977661133

Token 496: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'To' → logprob: -17.625
    3. 'to' → logprob: -17.75
    4. '_str' → logprob: -17.875
    5. ')_' → logprob: -17.875
    6. ' _' → logprob: -18.0
    7. '_t' → logprob: -18.25
    8. ''_' → logprob: -18.875
    9. ')' → logprob: -19.5
    10. ' to' → logprob: -19.875

Token 497: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.011050998233258724
    2. 'str' → logprob: -4.511051177978516
    3. 's' → logprob: -13.886051177978516
    4. ' str' → logprob: -14.261051177978516
    5. 'string' → logprob: -14.386051177978516
    6. '_s' → logprob: -14.886051177978516
    7. 'Str' → logprob: -16.011051177978516
    8. '_st' → logprob: -16.011051177978516
    9. '_string' → logprob: -16.261051177978516
    10. '	str' → logprob: -16.636051177978516

Token 498: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.195421494543552e-05
    2. 'res' → logprob: -9.62507152557373
    3. '(' → logprob: -12.75007152557373
    4. ')(' → logprob: -13.37507152557373
    5. ')' → logprob: -13.87507152557373
    6. ' res' → logprob: -15.62507152557373
    7. ',res' → logprob: -15.75007152557373
    8. '	res' → logprob: -16.125072479248047
    9. ' (' → logprob: -17.750072479248047
    10. '=res' → logprob: -17.750072479248047

Token 499: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2560848295688629
    2. '))' → logprob: -1.5060847997665405
    3. '())' → logprob: -5.50608491897583
    4. '()))' → logprob: -9.506084442138672
    5. ')))' → logprob: -12.256084442138672
    6. '()' → logprob: -12.631084442138672
    7. ' )' → logprob: -14.381084442138672
    8. '})' → logprob: -14.756084442138672
    9. ')`' → logprob: -14.756084442138672
    10. ' ))' → logprob: -14.881084442138672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 497
Tokens correctement prédits (1ère position, stricte): 198
Tokens correctement prédits (1ère position, avec adaptation): 222
Tokens correctement prédits (top 10): 435
Précision stricte (1ère position): 39.84%
Précision adaptée (1ère position): 44.67%
Précision (top 10): 87.53%
================================================================================
