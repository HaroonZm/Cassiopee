================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from itertools import combinations

for line in sys.stdin:
    line = line.strip()
    if line == "":
        continue
    n, s = map(int, line.split())
    if n == 0 and s == 0:
        break
    count = 0
    nums = list(range(101))
    for comb in combinations(nums, n):
        if sum(comb) == s:
            count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405025720596313
    2. '.' → logprob: -0.8905025720596313
    3. 'import' → logprob: -4.015502452850342
    4. 'newline' → logprob: -4.265502452850342
    5. '\' → logprob: -4.765502452850342
    6. '<|end|>' → logprob: -5.015502452850342
    7. '```' → logprob: -5.390502452850342
    8. '
' → logprob: -5.765502452850342
    9. '<|end|>' → logprob: -6.515502452850342
    10. '' → logprob: -6.515502452850342

Token 4: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.021073132753372192
    2. 'os' → logprob: -4.021073341369629
    3. ' Py' → logprob: -7.271073341369629
    4. ' pathlib' → logprob: -7.521073341369629
    5. ' collections' → logprob: -7.646073341369629
    6. ' ' → logprob: -8.021073341369629
    7. ' math' → logprob: -8.521073341369629
    8. ' typing' → logprob: -8.896073341369629
    9. ' datetime' → logprob: -9.396073341369629
    10. 'collections' → logprob: -9.896073341369629

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.571735680103302
    2. 'import' → logprob: -0.946735680103302
    3. '.' → logprob: -3.0717356204986572
    4. '.import' → logprob: -7.446735858917236
    5. ' .' → logprob: -8.321735382080078
    6. '	import' → logprob: -9.071735382080078
    7. '<|end|>' → logprob: -10.071735382080078
    8. ' itertools' → logprob: -10.696735382080078
    9. '_import' → logprob: -10.821735382080078
    10. '.im' → logprob: -11.196735382080078

Token 6: ' combinations' (ID: 43835)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0789483785629272
    2. 'chain' → logprob: -2.203948497772217
    3. 'com' → logprob: -2.328948497772217
    4. 'product' → logprob: -2.328948497772217
    5. 'group' → logprob: -2.453948497772217
    6. 'cycle' → logprob: -2.703948497772217
    7. ' group' → logprob: -3.203948497772217
    8. 'per' → logprob: -3.328948497772217
    9. ' chain' → logprob: -3.578948497772217
    10. ' permutations' → logprob: -3.703948497772217

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009630238637328148
    2. '(
' → logprob: -5.63463020324707
    3. '\' → logprob: -6.38463020324707
    4. '.' → logprob: -6.75963020324707
    5. '\n' → logprob: -7.00963020324707
    6. '\(' → logprob: -7.38463020324707
    7. 'import' → logprob: -7.63463020324707
    8. '```' → logprob: -7.63463020324707
    9. '(

' → logprob: -8.13463020324707
    10. ' (' → logprob: -9.75963020324707

Token 8: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008528760634362698
    2. '(
' → logprob: -5.258528709411621
    3. '.' → logprob: -6.883528709411621
    4. 'def' → logprob: -7.133528709411621
    5. '(

' → logprob: -7.883528709411621
    6. 'import' → logprob: -8.008528709411621
    7. '\(' → logprob: -9.008528709411621
    8. '\' → logprob: -9.008528709411621
    9. '```' → logprob: -9.133528709411621
    10. ',' → logprob: -9.508528709411621

Token 9: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002897117054089904
    2. ' i' → logprob: -6.627897262573242
    3. ' item' → logprob: -6.877897262573242
    4. '  ' → logprob: -7.877897262573242
    5. ' space' → logprob: -9.877897262573242
    6. ' element' → logprob: -10.377897262573242
    7. ' line' → logprob: -11.127897262573242
    8. ' ' → logprob: -11.877897262573242
    9. ' token' → logprob: -12.127897262573242
    10. ' pair' → logprob: -12.252897262573242

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35003209114074707
    2. 'in' → logprob: -1.225032091140747
    3. ' ' → logprob: -7.225031852722168
    4. 's' → logprob: -8.350031852722168
    5. '_' → logprob: -8.975031852722168
    6. '  ' → logprob: -8.975031852722168
    7. 'import' → logprob: -9.100031852722168
    8. '[' → logprob: -10.100031852722168
    9. ' =' → logprob: -10.350031852722168
    10. '(' → logprob: -10.600031852722168

Token 11: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.14271390438079834
    2. 'sys' → logprob: -2.017714023590088
    3. '=sys' → logprob: -10.64271354675293
    4. '(sys' → logprob: -11.76771354675293
    5. '	sys' → logprob: -12.51771354675293
    6. ' itertools' → logprob: -13.64271354675293
    7. ' iter' → logprob: -14.39271354675293
    8. ' open' → logprob: -14.51771354675293
    9. '_sys' → logprob: -15.76771354675293
    10. 'open' → logprob: -15.89271354675293

Token 12: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.05287480354309082
    2. 'stdin' → logprob: -3.052874803543091
    3. ':' → logprob: -6.802874565124512
    4. ' stdin' → logprob: -6.802874565124512
    5. '.readline' → logprob: -7.552874565124512
    6. '(stdin' → logprob: -8.052874565124512
    7. '```' → logprob: -8.052874565124512
    8. '.stdout' → logprob: -8.427874565124512
    9. '.' → logprob: -8.927874565124512
    10. 'in' → logprob: -9.177874565124512

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0066221775487065315
    2. '.readline' → logprob: -5.381622314453125
    3. ':
' → logprob: -6.756622314453125
    4. ' :' → logprob: -8.006622314453125
    5. '.' → logprob: -9.131622314453125
    6. '   ' → logprob: -9.756622314453125
    7. '():' → logprob: -9.881622314453125
    8. '[:]' → logprob: -10.006622314453125
    9. '):' → logprob: -10.381622314453125
    10. '.readlines' → logprob: -10.506622314453125

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019007660448551178
    2. '    
' → logprob: -4.269007682800293
    3. ' line' → logprob: -6.394007682800293
    4. '.strip' → logprob: -7.144007682800293
    5. '```' → logprob: -7.519007682800293
    6. '.rstrip' → logprob: -7.894007682800293
    7. ' if' → logprob: -8.144007682800293
    8. ' readline' → logprob: -8.644007682800293
    9. '    ' → logprob: -9.019007682800293
    10. ' token' → logprob: -9.894007682800293

Token 15: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6005390286445618
    2. '   ' → logprob: -0.8505390286445618
    3. 'line' (adapté à ' line') → logprob: -4.225539207458496
    4. ' lines' → logprob: -6.100539207458496
    5. ' stripped' → logprob: -6.100539207458496
    6. ' if' → logprob: -6.350539207458496
    7. ' items' → logprob: -6.725539207458496
    8. ' for' → logprob: -7.475539207458496
    9. ' data' → logprob: -8.225539207458496
    10. ' print' → logprob: -8.475539207458496

Token 16: ' =' (ID: 314)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.13836216926574707
    2. '.' → logprob: -2.138362169265747
    3. '.rstrip' → logprob: -5.013361930847168
    4. '.split' → logprob: -5.388361930847168
    5. ' .' → logprob: -9.638361930847168
    6. '.readline' → logprob: -10.263361930847168
    7. '.startswith' → logprob: -10.638361930847168
    8. '.replace' → logprob: -12.638361930847168
    9. '.s' → logprob: -12.763361930847168
    10. 'rstrip' → logprob: -13.013361930847168

Token 17: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00862627848982811
    2. 'line' → logprob: -4.758626461029053
    3. '	line' → logprob: -12.133625984191895
    4. '=line' → logprob: -13.133625984191895
    5. '(line' → logprob: -13.633625984191895
    6. '#line' → logprob: -13.883625984191895
    7. ' ' → logprob: -14.258625984191895
    8. '[line' → logprob: -15.008625984191895
    9. '```' → logprob: -15.008625984191895
    10. ' readline' → logprob: -15.758625984191895

Token 18: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.002456272253766656
    2. '.rstrip' → logprob: -6.127456188201904
    3. '.' → logprob: -8.377456665039062
    4. '.split' → logprob: -10.752456665039062
    5. 'strip' → logprob: -11.002456665039062
    6. '.lower' → logprob: -13.627456665039062
    7. 'rstrip' → logprob: -14.127456665039062
    8. ' .' → logprob: -14.752456665039062
    9. '.startswith' → logprob: -15.752456665039062
    10. '.replace' → logprob: -15.752456665039062

Token 19: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025499812327325344
    2. '(' → logprob: -6.00255012512207
    3. '()`' → logprob: -10.62755012512207
    4. '()
' → logprob: -11.37755012512207
    5. ' ()' → logprob: -12.00255012512207
    6. '().' → logprob: -12.25255012512207
    7. '`()' → logprob: -12.37755012512207
    8. '()"' → logprob: -12.75255012512207
    9. ' parentheses' → logprob: -12.87755012512207
    10. '('' → logprob: -13.25255012512207

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7599880695343018
    2. ' if' → logprob: -0.8849880695343018
    3. 'if' → logprob: -2.1349880695343018
    4. '    
' → logprob: -7.384987831115723
    5. 'tokens' → logprob: -8.759987831115723
    6. '```' → logprob: -9.134987831115723
    7. ',' → logprob: -9.259987831115723
    8. ' ' → logprob: -10.009987831115723
    9. '<|end|>' → logprob: -10.134987831115723
    10. ' 
' → logprob: -10.259987831115723

Token 21: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13862423598766327
    2. ' if' → logprob: -2.1386241912841797
    3. 'numbers' → logprob: -5.01362419128418
    4. '   ' → logprob: -7.01362419128418
    5. ' numbers' → logprob: -7.01362419128418
    6. 'words' → logprob: -7.26362419128418
    7. 'nums' → logprob: -7.63862419128418
    8. 'tokens' → logprob: -7.76362419128418
    9. 'items' → logprob: -7.88862419128418
    10. 'for' → logprob: -8.26362419128418

Token 22: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.016714299097657204
    2. ' line' → logprob: -4.141714096069336
    3. ' ' → logprob: -7.891714096069336
    4. 'not' → logprob: -8.266714096069336
    5. 'line' → logprob: -10.266714096069336
    6. ' len' → logprob: -11.266714096069336
    7. ' ' → logprob: -14.641714096069336
    8. '  ' → logprob: -15.391714096069336
    9. ' '' → logprob: -15.516714096069336
    10. ''' → logprob: -15.641714096069336

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02652367576956749
    2. '.startswith' → logprob: -3.9015235900878906
    3. '==' → logprob: -5.276523590087891
    4. '.endswith' → logprob: -7.526523590087891
    5. ' ' → logprob: -9.52652359008789
    6. ' .' → logprob: -9.65152359008789
    7. '.' → logprob: -10.65152359008789
    8. ' !=' → logprob: -10.65152359008789
    9. '<|end|>' → logprob: -10.65152359008789
    10. '<|end|>' → logprob: -10.65152359008789

Token 24: ' "":
' (ID: 132826)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9064805507659912
    2. '''' → logprob: -1.1564805507659912
    3. '""' → logprob: -1.7814805507659912
    4. '"' → logprob: -2.406480550765991
    5. '"":' → logprob: -4.40648078918457
    6. ' ""' → logprob: -5.53148078918457
    7. ' ''' → logprob: -5.65648078918457
    8. ' '' → logprob: -6.28148078918457
    9. ' "' → logprob: -7.65648078918457
    10. ''t' → logprob: -8.78148078918457

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020983250811696053
    2. '   ' → logprob: -3.8959832191467285
    3. ' break' → logprob: -8.020983695983887
    4. ' continue' → logprob: -10.395983695983887
    5. 'break' → logprob: -10.770983695983887
    6. '    ' → logprob: -11.270983695983887
    7. '	break' → logprob: -11.520983695983887
    8. '```' → logprob: -11.520983695983887
    9. 'continue' → logprob: -12.145983695983887
    10. '	   ' → logprob: -12.395983695983887

Token 26: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.02812153287231922
    2. '   ' → logprob: -4.528121471405029
    3. ' continue' → logprob: -4.653121471405029
    4. 'break' → logprob: -5.028121471405029
    5. 'continue' (adapté à ' continue') → logprob: -7.528121471405029
    6. '       ' → logprob: -8.278121948242188
    7. '	break' → logprob: -10.903121948242188
    8. '    ' → logprob: -11.403121948242188
    9. ' ' → logprob: -11.653121948242188
    10. '```' → logprob: -11.653121948242188

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028778258711099625
    2. '    
' → logprob: -3.653778314590454
    3. '
' → logprob: -7.028778076171875
    4. '<|end|>' → logprob: -7.528778076171875
    5. '\n' → logprob: -8.778778076171875
    6. '  
' → logprob: -9.028778076171875
    7. '    ' → logprob: -9.028778076171875
    8. '   
' → logprob: -9.153778076171875
    9. '```' → logprob: -9.653778076171875
    10. ' ' → logprob: -9.778778076171875

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005955107044428587
    2. '    
' → logprob: -5.255955219268799
    3. '
' → logprob: -8.38095474243164
    4. '<|end|>' → logprob: -8.75595474243164
    5. 'for' → logprob: -9.13095474243164
    6. '```' → logprob: -9.50595474243164
    7. 'tokens' → logprob: -10.00595474243164
    8. ' for' → logprob: -10.63095474243164
    9. '<|end|>' → logprob: -10.75595474243164
    10. 'print' → logprob: -11.50595474243164

Token 29: ' n' (ID: 297)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -1.0233865976333618
    2. '   ' → logprob: -1.7733865976333618
    3. 'parts' → logprob: -2.6483864784240723
    4. 'n' (adapté à ' n') → logprob: -2.6483864784240723
    5. 'tokens' → logprob: -2.7733864784240723
    6. 'numbers' → logprob: -2.8983864784240723
    7. 'items' → logprob: -3.1483864784240723
    8. 'data' → logprob: -3.2733864784240723
    9. ' parts' → logprob: -3.6483864784240723
    10. 'nums' → logprob: -4.023386478424072

Token 30: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06534085422754288
    2. ',' → logprob: -2.940340757369995
    3. ' ,' → logprob: -5.065340995788574
    4. '=' → logprob: -5.690340995788574
    5. ' ' → logprob: -7.315340995788574
    6. '=int' → logprob: -11.190340995788574
    7. 's' → logprob: -12.565340995788574
    8. ')' → logprob: -12.690340995788574
    9. '   ' → logprob: -12.690340995788574
    10. '  ' → logprob: -12.690340995788574

Token 31: ' s' (ID: 265)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7537369728088379
    2. ' k' → logprob: -0.7537369728088379
    3. 'm' → logprob: -4.378736972808838
    4. ' items' → logprob: -5.378736972808838
    5. ' m' → logprob: -5.503736972808838
    6. '*' → logprob: -5.503736972808838
    7. 'items' → logprob: -5.503736972808838
    8. ' numbers' → logprob: -6.003736972808838
    9. 'data' → logprob: -6.003736972808838
    10. 's' → logprob: -6.128736972808838

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030011849477887154
    2. '=' → logprob: -3.5300118923187256
    3. ',' → logprob: -8.280012130737305
    4. ' ' → logprob: -13.030012130737305
    5. '=line' → logprob: -13.780012130737305
    6. '=input' → logprob: -14.405012130737305
    7. ' ,' → logprob: -14.530012130737305
    8. '_' → logprob: -14.780012130737305
    9. ' =
' → logprob: -15.030012130737305
    10. '=int' → logprob: -15.155012130737305

Token 33: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.18603351712226868
    2. 'line' → logprob: -1.8110334873199463
    3. ' map' → logprob: -5.186033725738525
    4. 'map' → logprob: -7.311033725738525
    5. '   ' → logprob: -12.936033248901367
    6. '[line' → logprob: -14.061033248901367
    7. '	line' → logprob: -14.186033248901367
    8. '(line' → logprob: -14.311033248901367
    9. '=line' → logprob: -14.311033248901367
    10. ' ' → logprob: -14.811033248901367

Token 34: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5990426540374756
    2. '(int' → logprob: -0.8490426540374756
    3. '(str' → logprob: -4.474042892456055
    4. '(lambda' → logprob: -4.474042892456055
    5. 'int' → logprob: -11.974042892456055
    6. '(
' → logprob: -12.099042892456055
    7. '[int' → logprob: -12.349042892456055
    8. '(eval' → logprob: -12.349042892456055
    9. 'str' → logprob: -12.974042892456055
    10. '<int' → logprob: -13.349042892456055

Token 35: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.2198498249053955
    2. ',' → logprob: -1.7198498249053955
    3. ')' → logprob: -4.969849586486816
    4. ',line' → logprob: -4.969849586486816
    5. '(' → logprob: -5.594849586486816
    6. 'line' → logprob: -8.219849586486816
    7. ' line' → logprob: -8.719849586486816
    8. '#line' → logprob: -10.344849586486816
    9. ')(' → logprob: -10.469849586486816
    10. '),' → logprob: -10.469849586486816

Token 36: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3134461045265198
    2. ' line' → logprob: -1.313446044921875
    3. '   ' → logprob: -8.938446044921875
    4. '(line' → logprob: -10.688446044921875
    5. ')' → logprob: -10.938446044921875
    6. '	line' → logprob: -12.063446044921875
    7. ' ' → logprob: -12.563446044921875
    8. '  ' → logprob: -13.688446044921875
    9. '    ' → logprob: -14.313446044921875
    10. '[line' → logprob: -14.438446044921875

Token 37: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0117921968922019
    2. '.' → logprob: -5.136792182922363
    3. '.strip' → logprob: -5.761792182922363
    4. '().' → logprob: -6.011792182922363
    5. ')' → logprob: -8.636792182922363
    6. '.rstrip' → logprob: -10.011792182922363
    7. ' .' → logprob: -11.011792182922363
    8. '.readline' → logprob: -12.136792182922363
    9. ').' → logprob: -12.761792182922363
    10. 'split' → logprob: -14.136792182922363

Token 38: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16911102831363678
    2. '())' → logprob: -1.9191110134124756
    3. '()' → logprob: -5.419111251831055
    4. '("' → logprob: -6.044111251831055
    5. '(','' → logprob: -6.794111251831055
    6. '(' → logprob: -7.544111251831055
    7. ')' → logprob: -8.669111251831055
    8. '(',' → logprob: -9.544111251831055
    9. '("("' → logprob: -9.544111251831055
    10. '()))' → logprob: -10.544111251831055

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9624202847480774
    2. '    
' → logprob: -1.8374202251434326
    3. '<|end|>' → logprob: -1.8374202251434326
    4. '
' → logprob: -2.5874202251434326
    5. '\n' → logprob: -3.0874202251434326
    6. ' 
' → logprob: -3.4624202251434326
    7. ',' → logprob: -3.7124202251434326
    8. ':' → logprob: -4.087420463562012
    9. ' if' → logprob: -4.462420463562012
    10. '\' → logprob: -4.587420463562012

Token 40: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8886919021606445
    2. ' combinations' → logprob: -2.7636919021606445
    3. ' for' → logprob: -2.8886919021606445
    4. '<|end|>' → logprob: -3.2636919021606445
    5. '    
' → logprob: -3.3886919021606445
    6. 'for' → logprob: -3.3886919021606445
    7. ' numbers' → logprob: -3.3886919021606445
    8. ' ' → logprob: -3.5136919021606445
    9. ' items' → logprob: -3.5136919021606445
    10. '
' → logprob: -3.6386919021606445

Token 41: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011512719094753265
    2. ' s' → logprob: -4.511512756347656
    3. 'n' → logprob: -7.761512756347656
    4. ' ' → logprob: -11.386512756347656
    5. 's' → logprob: -11.511512756347656
    6. ' ' → logprob: -11.636512756347656
    7. ' not' → logprob: -11.761512756347656
    8. '(n' → logprob: -15.136512756347656
    9. '	n' → logprob: -16.011512756347656
    10. ' (' → logprob: -16.011512756347656

Token 42: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14127498865127563
    2. ' <' → logprob: -3.141274929046631
    3. ' <=' → logprob: -3.266274929046631
    4. ' ==' → logprob: -3.766274929046631
    5. '>' → logprob: -4.141274929046631
    6. ' >=' → logprob: -5.016274929046631
    7. ' ' → logprob: -6.266274929046631
    8. '==' → logprob: -6.766274929046631
    9. '<' → logprob: -7.766274929046631
    10. '<=' → logprob: -8.141275405883789

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03365318849682808
    2. ' ' → logprob: -3.4086532592773438
    3. 's' → logprob: -12.658653259277344
    4. '   ' → logprob: -13.908653259277344
    5. '  ' → logprob: -13.971153259277344
    6. '-' → logprob: -14.346153259277344
    7. '1' → logprob: -15.408653259277344
    8. ' s' → logprob: -15.596153259277344
    9. '```' → logprob: -15.596153259277344
    10. '7' → logprob: -16.096153259277344

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003087678924202919
    2. ' ' → logprob: -8.125308990478516
    3. 's' → logprob: -11.625308990478516
    4. '-' → logprob: -13.250308990478516
    5. '1' → logprob: -15.250308990478516
    6. ' -' → logprob: -15.437808990478516
    7. '```' → logprob: -15.812808990478516
    8. 'n' → logprob: -16.125308990478516
    9. '   ' → logprob: -16.375308990478516
    10. '  ' → logprob: -16.500308990478516

Token 45: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08391979336738586
    2. ' and' → logprob: -2.5839197635650635
    3. ':
' → logprob: -5.458920001983643
    4. '   ' → logprob: -8.208919525146484
    5. 'and' → logprob: -8.833919525146484
    6. ' :' → logprob: -8.958919525146484
    7. ' ' → logprob: -10.083919525146484
    8. ' or' → logprob: -10.208919525146484
    9. '    ' → logprob: -10.333919525146484
    10. '       ' → logprob: -10.708919525146484

Token 46: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04300912097096443
    2. 's' → logprob: -3.168009042739868
    3. ' ' → logprob: -11.668008804321289
    4. ' ' → logprob: -14.293008804321289
    5. '  ' → logprob: -14.918008804321289
    6. '	s' → logprob: -15.043008804321289
    7. '<|end|>' → logprob: -16.66800880432129
    8. '   ' → logprob: -17.04300880432129
    9. '_s' → logprob: -17.54300880432129
    10. '0' → logprob: -17.60550880432129

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026318999007344246
    2. '==' → logprob: -3.6513190269470215
    3. '0' → logprob: -12.151318550109863
    4. '<|end|>' → logprob: -12.526318550109863
    5. '=' → logprob: -12.651318550109863
    6. ' ' → logprob: -13.026318550109863
    7. ' =' → logprob: -13.151318550109863
    8. '  ' → logprob: -14.276318550109863
    9. ' ' → logprob: -14.401318550109863
    10. '<|end|>' → logprob: -14.776318550109863

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033646274358034134
    2. ' ' → logprob: -3.40864634513855
    3. ' ' → logprob: -15.658646583557129
    4. '  ' → logprob: -15.783646583557129
    5. '   ' → logprob: -16.158645629882812
    6. '<|end|>' → logprob: -17.283645629882812
    7. '<|end|>' → logprob: -17.721145629882812
    8. 's' → logprob: -17.846145629882812
    9. '۰' → logprob: -17.971145629882812
    10. '=' → logprob: -18.346145629882812

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '-' → logprob: -17.250179290771484
    4. '  ' → logprob: -17.312679290771484
    5. ' ' → logprob: -18.062679290771484
    6. '۰' → logprob: -18.187679290771484
    7. '   ' → logprob: -18.250179290771484
    8. '1' → logprob: -18.500179290771484
    9. ' -' → logprob: -18.750179290771484
    10. '00' → logprob: -19.250179290771484

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010192327899858356
    2. ':
' → logprob: -7.00101900100708
    3. '   ' → logprob: -9.251019477844238
    4. '       ' → logprob: -11.751019477844238
    5. ' :' → logprob: -13.251019477844238
    6. ':return' → logprob: -13.751019477844238
    7. '    ' → logprob: -15.376019477844238
    8. '.' → logprob: -15.501019477844238
    9. '):' → logprob: -15.751019477844238
    10. ' :
' → logprob: -16.751018524169922

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051968805491924286
    2. ':' → logprob: -3.176968812942505
    3. '   ' → logprob: -4.801968574523926
    4. ':
' → logprob: -7.426968574523926
    5. ' break' → logprob: -10.176968574523926
    6. '	break' → logprob: -10.676968574523926
    7. '     ' → logprob: -11.551968574523926
    8. '      ' → logprob: -11.926968574523926
    9. '\t' → logprob: -12.176968574523926
    10. '<|end|>' → logprob: -12.176968574523926

Token 52: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.024340307340025902
    2. 'break' (adapté à ' break') → logprob: -3.7743403911590576
    3. '       ' → logprob: -6.8993401527404785
    4. '   ' → logprob: -9.524340629577637
    5. '	break' → logprob: -11.399340629577637
    6. '           ' → logprob: -14.649340629577637
    7. '_break' → logprob: -15.149340629577637
    8. '```' → logprob: -15.399340629577637
    9. ' ' → logprob: -15.524340629577637
    10. '-break' → logprob: -16.39933967590332

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06725070625543594
    2. '   ' → logprob: -3.3172507286071777
    3. '<|end|>' → logprob: -4.317250728607178
    4. '```' → logprob: -4.817250728607178
    5. '    
' → logprob: -5.442250728607178
    6. '\n' → logprob: -7.192250728607178
    7. 'for' → logprob: -7.442250728607178
    8. ' for' → logprob: -7.567250728607178
    9. 'n' → logprob: -8.44225025177002
    10. '<|end|>' → logprob: -8.44225025177002

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03859551250934601
    2. '    
' → logprob: -4.413595676422119
    3. '
' → logprob: -4.663595676422119
    4. 'for' → logprob: -4.913595676422119
    5. 'pairs' → logprob: -6.163595676422119
    6. ' for' → logprob: -7.038595676422119
    7. '```' → logprob: -7.163595676422119
    8. 'com' → logprob: -7.288595676422119
    9. 'tokens' → logprob: -7.913595676422119
    10. '<|end|>' → logprob: -7.913595676422119

Token 55: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7626767754554749
    2. 'nums' → logprob: -1.88767671585083
    3. 'numbers' → logprob: -2.13767671585083
    4. ' numbers' → logprob: -2.51267671585083
    5. ' nums' → logprob: -3.01267671585083
    6. 'arr' → logprob: -3.38767671585083
    7. 'items' → logprob: -4.76267671585083
    8. ' items' → logprob: -4.76267671585083
    9. '    
' → logprob: -4.88767671585083
    10. 'cards' → logprob: -5.26267671585083

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031741343438625336
    2. '=' → logprob: -4.031741142272949
    3. '_' → logprob: -5.156741142272949
    4. 's' → logprob: -5.281741142272949
    5. ' ' → logprob: -6.156741142272949
    6. '(' → logprob: -8.40674114227295
    7. '_pairs' → logprob: -10.03174114227295
    8. '_space' → logprob: -10.40674114227295
    9. '_s' → logprob: -10.78174114227295
    10. '   ' → logprob: -11.03174114227295

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5761207938194275
    2. ' ' → logprob: -0.8261207938194275
    3. ' sum' → logprob: -9.451120376586914
    4. 'sum' → logprob: -10.326120376586914
    5. ' n' → logprob: -11.076120376586914
    6. '1' → logprob: -11.076120376586914
    7. ' s' → logprob: -11.201120376586914
    8. 's' → logprob: -12.326120376586914
    9. 'n' → logprob: -12.888620376586914
    10. 'com' → logprob: -13.076120376586914

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011377158807590604
    2. 'sum' → logprob: -7.126137733459473
    3. ' ' → logprob: -8.626137733459473
    4. 'len' → logprob: -9.126137733459473
    5. '1' → logprob: -11.626137733459473
    6. 'com' → logprob: -11.626137733459473
    7. 'comb' → logprob: -12.251137733459473
    8. ' sum' → logprob: -12.376137733459473
    9. 'list' → logprob: -12.501137733459473
    10. 's' → logprob: -12.876137733459473

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8867616653442383
    2. '<|end|>' → logprob: -0.8867616653442383
    3. '   ' → logprob: -1.8867616653442383
    4. '    
' → logprob: -4.761761665344238
    5. '\n' → logprob: -5.511761665344238
    6. '<|end|>' → logprob: -5.761761665344238
    7. ' ' → logprob: -6.136761665344238
    8. ' 
' → logprob: -6.386761665344238
    9. ' for' → logprob: -6.636761665344238
    10. '  
' → logprob: -7.386761665344238

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2347293645143509
    2. ' for' → logprob: -2.234729290008545
    3. '<|end|>' → logprob: -2.984729290008545
    4. 'for' → logprob: -3.484729290008545
    5. ' ' → logprob: -4.984729290008545
    6. '    
' → logprob: -5.484729290008545
    7. '
' → logprob: -5.734729290008545
    8. ' 
' → logprob: -5.859729290008545
    9. '    ' → logprob: -6.484729290008545
    10. '<|end|>' → logprob: -6.984729290008545

Token 61: ' nums' (ID: 18117)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2699981927871704
    2. ' for' → logprob: -2.519998073577881
    3. 'com' → logprob: -2.519998073577881
    4. '   ' → logprob: -3.394998073577881
    5. 'numbers' → logprob: -4.894998073577881
    6. 'pairs' → logprob: -5.019998073577881
    7. 'c' → logprob: -5.269998073577881
    8. 'nums' (adapté à ' nums') → logprob: -5.644998073577881
    9. 'elements' → logprob: -6.019998073577881
    10. 'items' → logprob: -6.019998073577881

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005274191964417696
    2. '=' → logprob: -5.255274295806885
    3. '[' → logprob: -11.380273818969727
    4. ' ' → logprob: -11.630273818969727
    5. '   ' → logprob: -11.880273818969727
    6. '    ' → logprob: -13.130273818969727
    7. ',' → logprob: -13.130273818969727
    8. 's' → logprob: -13.380273818969727
    9. '.' → logprob: -13.755273818969727
    10. '```' → logprob: -14.005273818969727

Token 63: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.11884694546461105
    2. 'list' → logprob: -2.743846893310547
    3. ' [' → logprob: -3.618846893310547
    4. ' []' → logprob: -4.493846893310547
    5. '[]' → logprob: -5.618846893310547
    6. ' range' → logprob: -5.743846893310547
    7. '[' → logprob: -6.368846893310547
    8. '[list' → logprob: -7.493846893310547
    9. 'range' → logprob: -7.618846893310547
    10. ' ' → logprob: -11.118846893310547

Token 64: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0949900820851326
    2. '(com' → logprob: -2.8449900150299072
    3. '(' → logprob: -3.4699900150299072
    4. '(map' → logprob: -6.844990253448486
    5. '(filter' → logprob: -8.844989776611328
    6. 'com' → logprob: -9.969989776611328
    7. '()' → logprob: -10.219989776611328
    8. '(
' → logprob: -10.594989776611328
    9. '(nums' → logprob: -11.469989776611328
    10. '(numbers' → logprob: -12.094989776611328

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010151672904612496
    2. '(n' → logprob: -9.750101089477539
    3. '(s' → logprob: -10.125101089477539
    4. '1' → logprob: -13.500101089477539
    5. '   ' → logprob: -14.125101089477539
    6. ' (' → logprob: -15.250101089477539
    7. ')' → logprob: -15.250101089477539
    8. ' ' → logprob: -16.00010108947754
    9. 's' → logprob: -16.25010108947754
    10. '(
' → logprob: -16.87510108947754

Token 66: '101' (ID: 7959)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000925157277379185
    2. 'n' → logprob: -8.125925064086914
    3. ' ' → logprob: -8.125925064086914
    4. '   ' → logprob: -8.500925064086914
    5. '(' → logprob: -9.125925064086914
    6. ' n' → logprob: -12.125925064086914
    7. '    ' → logprob: -12.500925064086914
    8. '(n' → logprob: -12.750925064086914
    9. 's' → logprob: -13.375925064086914
    10. '           ' → logprob: -14.125925064086914

Token 67: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018956080079078674
    2. ',' → logprob: -4.018956184387207
    3. ' ))' → logprob: -8.393956184387207
    4. ' ,' → logprob: -8.768956184387207
    5. ')' → logprob: -8.893956184387207
    6. '))
' → logprob: -9.643956184387207
    7. '1' → logprob: -10.018956184387207
    8. '))[' → logprob: -10.143956184387207
    9. '+' → logprob: -10.268956184387207
    10. ')[' → logprob: -10.518956184387207

Token 68: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24250157177448273
    2. '<|end|>' → logprob: -2.7425014972686768
    3. 'for' (adapté à ' for') → logprob: -3.1175014972686768
    4. '   ' → logprob: -3.3675014972686768
    5. '[' → logprob: -3.6175014972686768
    6. ' for' → logprob: -4.617501735687256
    7. '[:' → logprob: -5.117501735687256
    8. '  ' → logprob: -5.492501735687256
    9. ' 
' → logprob: -5.492501735687256
    10. '  
' → logprob: -5.742501735687256

Token 70: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.8424308896064758
    2. ' combo' → logprob: -1.342430830001831
    3. 'combo' → logprob: -2.342430830001831
    4. 'comb' → logprob: -2.342430830001831
    5. ' c' → logprob: -3.092430830001831
    6. ' combination' → logprob: -3.717430830001831
    7. 'c' → logprob: -4.34243106842041
    8. ' subset' → logprob: -4.34243106842041
    9. ' cmb' → logprob: -5.21743106842041
    10. 'com' → logprob: -5.34243106842041

Token 71: ' in' (ID: 306)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.7476204633712769
    2. ' in' → logprob: -0.9976204633712769
    3. 'in' → logprob: -1.8726204633712769
    4. 'inations' → logprob: -5.622620582580566
    5. 'inition' → logprob: -9.747620582580566
    6. 'i' → logprob: -9.872620582580566
    7. '   ' → logprob: -9.872620582580566
    8. ',' → logprob: -9.997620582580566
    9. 'ina' → logprob: -10.247620582580566
    10. 'inas' → logprob: -10.497620582580566

Token 72: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.007675841450691223
    2. ' combinations' → logprob: -4.882675647735596
    3. ' com' → logprob: -10.257676124572754
    4. '(com' → logprob: -10.632676124572754
    5. '   ' → logprob: -12.382676124572754
    6. '	com' → logprob: -12.757676124572754
    7. 'comb' → logprob: -13.507676124572754
    8. ' ' → logprob: -14.257676124572754
    9. '<com' → logprob: -14.757676124572754
    10. '=com' → logprob: -15.507676124572754

Token 73: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.0005724519141949713
    2. '(range' → logprob: -7.625572681427002
    3. '(' → logprob: -9.500572204589844
    4. '(numbers' → logprob: -11.875572204589844
    5. '(num' → logprob: -13.125572204589844
    6. ' (' → logprob: -14.750572204589844
    7. '(s' → logprob: -16.250572204589844
    8. '(n' → logprob: -16.625572204589844
    9. ' nums' → logprob: -17.375572204589844
    10. 'nums' → logprob: -17.750572204589844

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019355426775291562
    2. ' ,' → logprob: -6.6269354820251465
    3. 's' → logprob: -8.376935958862305
    4. ',n' → logprob: -8.501935958862305
    5. ',s' → logprob: -8.751935958862305
    6. ' s' → logprob: -11.626935958862305
    7. '   ' → logprob: -13.251935958862305
    8. '，' → logprob: -13.626935958862305
    9. '    ' → logprob: -13.751935958862305
    10. ',k' → logprob: -14.001935958862305

Token 75: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6179372668266296
    2. 'n' → logprob: -0.8679372668266296
    3. ' s' → logprob: -3.7429373264312744
    4. 's' → logprob: -4.242937088012695
    5. '5' → logprob: -6.867937088012695
    6. '6' → logprob: -7.367937088012695
    7. ' ' → logprob: -7.367937088012695
    8. '7' → logprob: -7.992937088012695
    9. '   ' → logprob: -9.367937088012695
    10. ')' → logprob: -9.492937088012695

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023592622950673103
    2. '):
' → logprob: -3.773592710494995
    3. ' ):' → logprob: -8.898592948913574
    4. ')' → logprob: -9.273592948913574
    5. '):
' → logprob: -9.398592948913574
    6. ':' → logprob: -11.523592948913574
    7. ',' → logprob: -12.148592948913574
    8. ' ):
' → logprob: -12.523592948913574
    9. '   ' → logprob: -12.648592948913574
    10. '):

' → logprob: -12.773592948913574

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3356265127658844
    2. '<|end|>' → logprob: -1.335626482963562
    3. '    ' → logprob: -4.710626602172852
    4. '   ' → logprob: -5.085626602172852
    5. ' ' → logprob: -5.835626602172852
    6. ':' → logprob: -6.710626602172852
    7. '<|end|>' → logprob: -6.835626602172852
    8. ' if' → logprob: -7.085626602172852
    9. '        ' → logprob: -8.710626602172852
    10. ',' → logprob: -9.210626602172852

Token 78: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4390423893928528
    2. '       ' → logprob: -1.189042329788208
    3. 'if' (adapté à ' if') → logprob: -4.314042568206787
    4. '   ' → logprob: -4.564042568206787
    5. ' sum' → logprob: -4.689042568206787
    6. '<|end|>' → logprob: -5.189042568206787
    7. '           ' → logprob: -5.439042568206787
    8. '    ' → logprob: -6.314042568206787
    9. '        ' → logprob: -6.314042568206787
    10. ' ' → logprob: -6.439042568206787

Token 79: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.38701990246772766
    2. 'sum' → logprob: -1.1370198726654053
    3. '(sum' → logprob: -10.262020111083984
    4. '=sum' → logprob: -10.262020111083984
    5. ' ' → logprob: -10.512020111083984
    6. '   ' → logprob: -10.887020111083984
    7. '	sum' → logprob: -11.387020111083984
    8. 's' → logprob: -11.887020111083984
    9. ' s' → logprob: -12.387020111083984
    10. '  ' → logprob: -13.012020111083984

Token 80: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.00016194197814911604
    2. '(' → logprob: -8.750162124633789
    3. 'comb' → logprob: -14.000162124633789
    4. '(combo' → logprob: -14.000162124633789
    5. ' (' → logprob: -14.250162124633789
    6. ')' → logprob: -15.875162124633789
    7. '<com' → logprob: -15.875162124633789
    8. 'com' → logprob: -16.25016212463379
    9. '(list' → logprob: -16.50016212463379
    10. '   ' → logprob: -16.50016212463379

Token 81: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.97024549683556e-05
    2. 'bination' → logprob: -10.250080108642578
    3. ')' → logprob: -10.750080108642578
    4. 'binations' → logprob: -12.000080108642578
    5. 'comb' → logprob: -13.125080108642578
    6. 'com' → logprob: -13.250080108642578
    7. '>' → logprob: -13.375080108642578
    8. 'б' → logprob: -13.625080108642578
    9. 'bs' → logprob: -13.625080108642578
    10. '   ' → logprob: -13.875080108642578

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030615298077464104
    2. ' ==' → logprob: -4.280615329742432
    3. '==' → logprob: -4.405615329742432
    4. ')==' → logprob: -5.530615329742432
    5. ' )' → logprob: -9.030614852905273
    6. '=' → logprob: -11.655614852905273
    7. 's' → logprob: -12.280614852905273
    8. ',' → logprob: -13.280614852905273
    9. '===' → logprob: -13.655614852905273
    10. ' <=' → logprob: -13.905614852905273

Token 83: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1277824342250824
    2. '==' → logprob: -2.1277823448181152
    3. ' <=' → logprob: -7.377782344818115
    4. '=' → logprob: -9.377782821655273
    5. '<=' → logprob: -9.877782821655273
    6. ' >=' → logprob: -10.252782821655273
    7. '<|end|>' → logprob: -11.502782821655273
    8. '>=' → logprob: -11.627782821655273
    9. ' =' → logprob: -11.752782821655273
    10. ' ' → logprob: -11.877782821655273

Token 84: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.126929372549057
    2. 's' → logprob: -2.12692928314209
    3. ' ' → logprob: -13.75192928314209
    4. ' ' → logprob: -15.62692928314209
    5. '   ' → logprob: -17.251930236816406
    6. '	s' → logprob: -17.376930236816406
    7. '(s' → logprob: -17.501930236816406
    8. '{s' → logprob: -17.626930236816406
    9. '>s' → logprob: -17.751930236816406
    10. '<|end|>' → logprob: -17.751930236816406

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006500058807432652
    2. ':
' → logprob: -7.375649929046631
    3. '       ' → logprob: -11.125650405883789
    4. '):' → logprob: -12.875650405883789
    5. ' :' → logprob: -13.250650405883789
    6. '           ' → logprob: -13.375650405883789
    7. ' and' → logprob: -13.625650405883789
    8. ',' → logprob: -15.000650405883789
    9. ':
' → logprob: -15.375650405883789
    10. ':

' → logprob: -15.500650405883789

Token 86: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041829995810985565
    2. ':' → logprob: -3.416830062866211
    3. '       ' → logprob: -5.291830062866211
    4. ':
' → logprob: -6.916830062866211
    5. '<|end|>' → logprob: -7.041830062866211
    6. '
' → logprob: -7.291830062866211
    7. '               ' → logprob: -8.791830062866211
    8. ' :' → logprob: -9.291830062866211
    9. '            
' → logprob: -10.041830062866211
    10. '<|end|>' → logprob: -10.041830062866211

Token 87: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.2553024888038635
    2. ' count' → logprob: -1.7553024291992188
    3. '               ' → logprob: -3.1303024291992188
    4. '   ' → logprob: -5.380302429199219
    5. '       ' → logprob: -5.880302429199219
    6. '           ' → logprob: -7.255302429199219
    7. '	count' → logprob: -8.255302429199219
    8. ' ' → logprob: -9.255302429199219
    9. '                ' → logprob: -9.255302429199219
    10. '    ' → logprob: -9.255302429199219

Token 88: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02644532173871994
    2. '+=' → logprob: -3.6514453887939453
    3. '<|end|>' → logprob: -9.276445388793945
    4. '+' → logprob: -10.526445388793945
    5. ' ' → logprob: -11.526445388793945
    6. ']+=' → logprob: -12.276445388793945
    7. '   ' → logprob: -13.276445388793945
    8. ' +' → logprob: -13.276445388793945
    9. '    ' → logprob: -13.651445388793945
    10. '```' → logprob: -13.776445388793945

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.125085830688477
    4. '<|end|>' → logprob: -17.812585830688477
    5. '```' → logprob: -17.937585830688477
    6. '  ' → logprob: -19.125085830688477
    7. '１' → logprob: -19.187585830688477
    8. '۱' → logprob: -19.625085830688477
    9. ' ' → logprob: -20.000085830688477
    10. '१' → logprob: -20.312585830688477

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.18750762939453
    4. '<|end|>' → logprob: -19.00000762939453
    5. '   ' → logprob: -19.18750762939453
    6. '۱' → logprob: -19.68750762939453
    7. '１' → logprob: -19.81250762939453
    8. 'count' → logprob: -20.00000762939453
    9. '2' → logprob: -20.43750762939453
    10. '  ' → logprob: -20.50000762939453

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.666400671005249
    2. 'print' → logprob: -1.041400671005249
    3. '
' → logprob: -2.166400671005249
    4. '<|end|>' → logprob: -4.041400909423828
    5. ' print' → logprob: -7.166400909423828
    6. '<|end|>' → logprob: -8.916400909423828
    7. '    
' → logprob: -9.666400909423828
    8. '```' → logprob: -9.666400909423828
    9. ' ' → logprob: -9.791400909423828
    10. '	print' → logprob: -10.166400909423828

Token 92: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25216424465179443
    2. '   ' → logprob: -1.5021642446517944
    3. ' print' → logprob: -9.127163887023926
    4. '<|end|>' → logprob: -9.377163887023926
    5. '```' → logprob: -11.002163887023926
    6. '
' → logprob: -12.252163887023926
    7. '	print' → logprob: -12.252163887023926
    8. '       ' → logprob: -12.877163887023926
    9. ')' → logprob: -13.002163887023926
    10. '#print' → logprob: -13.127163887023926

Token 93: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00018923594325315207
    2. '   ' → logprob: -8.625188827514648
    3. ' print' → logprob: -11.625188827514648
    4. '```' → logprob: -14.500188827514648
    5. ' ' → logprob: -17.12518882751465
    6. '
' → logprob: -17.87518882751465
    7. '#print' → logprob: -17.87518882751465
    8. '	print' → logprob: -17.87518882751465
    9. '    
' → logprob: -18.25018882751465
    10. '       ' → logprob: -18.50018882751465

Token 94: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0011960632400587201
    2. '(' → logprob: -6.751195907592773
    3. 'count' → logprob: -10.626195907592773
    4. ' (' → logprob: -14.001195907592773
    5. '()' → logprob: -15.251195907592773
    6. '(f' → logprob: -15.751195907592773
    7. '(cnt' → logprob: -16.376195907592773
    8. '(c' → logprob: -16.501195907592773
    9. '((' → logprob: -17.001195907592773
    10. ' count' → logprob: -17.126195907592773

Token 95: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.875000953674316
    4. '))' → logprob: -17.625001907348633
    5. ')`' → logprob: -18.000001907348633
    6. '`)' → logprob: -19.000001907348633
    7. '),' → logprob: -20.125001907348633
    8. ')}' → logprob: -20.500001907348633
    9. '')' → logprob: -20.750001907348633
    10. '()' → logprob: -21.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 93
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 52.69%
Précision adaptée (1ère position): 55.91%
Précision (top 10): 86.02%
================================================================================
