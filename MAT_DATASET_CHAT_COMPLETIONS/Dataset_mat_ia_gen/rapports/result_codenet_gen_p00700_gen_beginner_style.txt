================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
for _ in range(n):
    x, y = 0, 0
    max_dist = 0
    treasure_x = 0
    treasure_y = 0
    while True:
        dx, dy = map(int, input().split())
        if dx == 0 and dy == 0:
            break
        x += dx
        y += dy
        dist = (x*x + y*y)**0.5
        if dist > max_dist or (dist == max_dist and x > treasure_x):
            max_dist = dist
            treasure_x = x
            treasure_y = y
    print(treasure_x, treasure_y)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.996708104154095e-05
    2. ''' → logprob: -10.625100135803223
    3. '('' → logprob: -11.125100135803223
    4. '(
' → logprob: -11.125100135803223
    5. '`' → logprob: -11.625100135803223
    6. '(n' → logprob: -11.625100135803223
    7. '()' → logprob: -12.000100135803223
    8. '```' → logprob: -12.250100135803223
    9. '("("' → logprob: -12.250100135803223
    10. '[' → logprob: -13.250100135803223

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1218075230717659
    2. ')' → logprob: -2.37180757522583
    3. '()' → logprob: -4.12180757522583
    4. '())' → logprob: -5.62180757522583
    5. '(
' → logprob: -7.74680757522583
    6. '```' → logprob: -8.621807098388672
    7. '('' → logprob: -8.746807098388672
    8. '(()' → logprob: -9.121807098388672
    9. '("("' → logprob: -9.246807098388672
    10. '(

' → logprob: -9.746807098388672

Token 5: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01382907573133707
    2. ' i' → logprob: -5.013829231262207
    3. '  ' → logprob: -5.388829231262207
    4. ' n' → logprob: -6.013829231262207
    5. 'i' → logprob: -10.513829231262207
    6. ' ' → logprob: -11.138829231262207
    7. '_' → logprob: -11.888829231262207
    8. ''' → logprob: -12.513829231262207
    9. 'n' → logprob: -12.513829231262207
    10. ' ‌' → logprob: -12.638829231262207

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004942819941788912
    2. 'in' → logprob: -5.629942893981934
    3. ' ' → logprob: -6.629942893981934
    4. '  ' → logprob: -11.754942893981934
    5. ' i' → logprob: -12.879942893981934
    6. ' n' → logprob: -12.879942893981934
    7. 'n' → logprob: -13.129942893981934
    8. 'space' → logprob: -13.629942893981934
    9. '_' → logprob: -14.004942893981934
    10. 'range' → logprob: -14.254942893981934

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868841528892517
    2. ' range' → logprob: -1.1368842124938965
    3. '	range' → logprob: -12.636883735656738
    4. '_range' → logprob: -13.136883735656738
    5. ' ' → logprob: -13.136883735656738
    6. 'n' → logprob: -13.261883735656738
    7. 'in' → logprob: -13.886883735656738
    8. '(range' → logprob: -14.011883735656738
    9. '_' → logprob: -14.511883735656738
    10. ' n' → logprob: -14.761883735656738

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04863937199115753
    2. '(n' → logprob: -3.0486392974853516
    3. ' (' → logprob: -9.923639297485352
    4. '(range' → logprob: -13.548639297485352
    5. '(
' → logprob: -14.423639297485352
    6. '((' → logprob: -15.298639297485352
    7. '(in' → logprob: -15.798639297485352
    8. '(`' → logprob: -15.798639297485352
    9. '(len' → logprob: -16.54863929748535
    10. '(m' → logprob: -16.79863929748535

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34876781702041626
    2. ')' → logprob: -1.2237677574157715
    3. ':' → logprob: -8.09876823425293
    4. '):
' → logprob: -12.72376823425293
    5. ' )' → logprob: -13.09876823425293
    6. ' ):' → logprob: -13.09876823425293
    7. ':)' → logprob: -13.22376823425293
    8. ')>' → logprob: -13.59876823425293
    9. '))' → logprob: -13.97376823425293
    10. '```' → logprob: -13.97376823425293

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006509078200906515
    2. '    
' → logprob: -5.131509304046631
    3. ' input' → logprob: -8.756508827209473
    4. ' print' → logprob: -9.381508827209473
    5. 'input' → logprob: -9.506508827209473
    6. 'print' → logprob: -9.881508827209473
    7. ' ' → logprob: -10.131508827209473
    8. ' 
' → logprob: -10.381508827209473
    9. '   ' → logprob: -10.506508827209473
    10. '```' → logprob: -10.506508827209473

Token 12: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25684353709220886
    2. 'print' → logprob: -2.0068435668945312
    3. 'x' (adapté à ' x') → logprob: -3.3818435668945312
    4. 'a' → logprob: -4.006843566894531
    5. 'name' → logprob: -4.381843566894531
    6. 'input' → logprob: -4.881843566894531
    7. 'user' → logprob: -5.881843566894531
    8. 'i' → logprob: -6.006843566894531
    9. ' print' → logprob: -6.256843566894531
    10. 'line' → logprob: -6.256843566894531

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.377212256193161
    2. ' ' → logprob: -2.2522122859954834
    3. '=' → logprob: -2.3772122859954834
    4. ' +=' → logprob: -3.3772122859954834
    5. ',' → logprob: -4.002212047576904
    6. '+' → logprob: -4.002212047576904
    7. '.' → logprob: -4.502212047576904
    8. ')' → logprob: -5.002212047576904
    9. '[' → logprob: -5.127212047576904
    10. '   ' → logprob: -5.627212047576904

Token 14: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0891452431678772
    2. ' y' → logprob: -2.4641451835632324
    3. ' ' → logprob: -8.83914566040039
    4. ' =' → logprob: -10.58914566040039
    5. ''' → logprob: -11.71414566040039
    6. '=' → logprob: -11.96414566040039
    7. ''y' → logprob: -12.21414566040039
    8. '"' → logprob: -12.71414566040039
    9. '<|end|>' → logprob: -13.33914566040039
    10. ',y' → logprob: -13.58914566040039

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25366804003715515
    2. '=' → logprob: -1.5036680698394775
    3. ',' → logprob: -6.378667831420898
    4. ')' → logprob: -10.628667831420898
    5. '   ' → logprob: -12.628667831420898
    6. ' ,' → logprob: -12.878667831420898
    7. ' ' → logprob: -13.003667831420898
    8. '  ' → logprob: -13.503667831420898
    9. '=input' → logprob: -13.628667831420898
    10. '    ' → logprob: -14.003667831420898

Token 16: ' ' (ID: 220)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0761110931634903
    2. 'map' → logprob: -2.701111078262329
    3. ' input' → logprob: -5.451111316680908
    4. 'input' → logprob: -6.326111316680908
    5. ' ' → logprob: -10.95111083984375
    6. 'int' → logprob: -11.20111083984375
    7. ' list' → logprob: -11.20111083984375
    8. '   ' → logprob: -11.95111083984375
    9. ' int' → logprob: -12.07611083984375
    10. '	map' → logprob: -12.20111083984375

Token 17: '0' (ID: 15)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04394002631306648
    2. ' map' → logprob: -3.1689400672912598
    3. 'input' → logprob: -7.04394006729126
    4. 'int' → logprob: -10.418939590454102
    5. '[' → logprob: -11.293939590454102
    6. ' input' → logprob: -11.668939590454102
    7. 'list' → logprob: -11.793939590454102
    8. '(map' → logprob: -12.543939590454102
    9. '	map' → logprob: -13.418939590454102
    10. '0' → logprob: -14.293939590454102

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009215266443789005
    2. ' ,' → logprob: -4.759215354919434
    3. ',
' → logprob: -7.634215354919434
    4. ',y' → logprob: -10.384215354919434
    5. '0' → logprob: -10.884215354919434
    6. '<|end|>' → logprob: -11.259215354919434
    7. ' ,
' → logprob: -11.634215354919434
    8. '
' → logprob: -12.259215354919434
    9. ' ' → logprob: -12.259215354919434
    10. '1' → logprob: -12.509215354919434

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005418377462774515
    2. ' ' → logprob: -5.255418300628662
    3. '1' → logprob: -8.63041877746582
    4. 'x' → logprob: -13.13041877746582
    5. 'y' → logprob: -14.13041877746582
    6. '10' → logprob: -14.13041877746582
    7. '   ' → logprob: -14.63041877746582
    8. ' y' → logprob: -14.63041877746582
    9. '100' → logprob: -15.13041877746582
    10. '  ' → logprob: -15.38041877746582

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011003263061866164
    2. ' ' → logprob: -7.001100540161133
    3. '1' → logprob: -8.751100540161133
    4. 'x' → logprob: -10.876100540161133
    5. 'y' → logprob: -11.751100540161133
    6. '10' → logprob: -14.438600540161133
    7. '-' → logprob: -14.501100540161133
    8. '100' → logprob: -14.751100540161133
    9. ' y' → logprob: -15.063600540161133
    10. 'n' → logprob: -15.251100540161133

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10565395653247833
    2. '<|end|>' → logprob: -2.480654001235962
    3. '    
' → logprob: -5.105653762817383
    4. '       ' → logprob: -5.230653762817383
    5. '
' → logprob: -5.980653762817383
    6. '<|end|>' → logprob: -7.230653762817383
    7. ')' → logprob: -7.605653762817383
    8. '    ' → logprob: -8.230653762817383
    9. ',' → logprob: -8.855653762817383
    10. '#' → logprob: -8.855653762817383

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024991968646645546
    2. '    
' → logprob: -4.149991989135742
    3. '<|end|>' → logprob: -6.274991989135742
    4. '    ' → logprob: -6.774991989135742
    5. '```' → logprob: -7.024991989135742
    6. '
' → logprob: -7.524991989135742
    7. ',' → logprob: -7.774991989135742
    8. 'while' → logprob: -8.024991989135742
    9. '	while' → logprob: -8.274991989135742
    10. ' ' → logprob: -8.399991989135742

Token 23: ' max' (ID: 2999)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.45675015449523926
    2. '   ' → logprob: -1.7067501544952393
    3. 'for' → logprob: -1.8317501544952393
    4. ' while' → logprob: -4.08174991607666
    5. ' for' → logprob: -5.58174991607666
    6. 's' → logprob: -6.95674991607666
    7. 'x' → logprob: -7.58174991607666
    8. '    ' → logprob: -8.08174991607666
    9. '  ' → logprob: -8.20674991607666
    10. ' ' → logprob: -8.33174991607666

Token 24: '_dist' (ID: 37968)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11527157574892044
    2. '_x' → logprob: -2.49027156829834
    3. '_val' → logprob: -5.11527156829834
    4. '_dist' → logprob: -5.24027156829834
    5. '_len' → logprob: -5.61527156829834
    6. '_distance' → logprob: -6.11527156829834
    7. '_length' → logprob: -6.49027156829834
    8. '_value' → logprob: -6.74027156829834
    9. '_count' → logprob: -6.99027156829834
    10. '_sum' → logprob: -7.24027156829834

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7604930400848389
    2. ' =' → logprob: -0.7604930400848389
    3. '_' → logprob: -2.885493040084839
    4. 'ance' → logprob: -5.260493278503418
    5. ' ' → logprob: -6.260493278503418
    6. ',' → logprob: -7.010493278503418
    7. '_=' → logprob: -7.260493278503418
    8. 'a' → logprob: -9.385493278503418
    9. '  ' → logprob: -9.760493278503418
    10. ' _' → logprob: -9.885493278503418

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5787780284881592
    2. '0' → logprob: -0.8287780284881592
    3. ' float' → logprob: -6.578778266906738
    4. ' -' → logprob: -7.328778266906738
    5. ' max' → logprob: -7.953778266906738
    6. 'float' → logprob: -8.953778266906738
    7. '-' → logprob: -9.203778266906738
    8. '   ' → logprob: -9.828778266906738
    9. 'max' → logprob: -10.078778266906738
    10. ' int' → logprob: -10.703778266906738

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012127915397286415
    2. ' ' → logprob: -4.512127876281738
    3. '-' → logprob: -7.512127876281738
    4. 'float' → logprob: -8.762127876281738
    5. 'max' → logprob: -9.387127876281738
    6. ' float' → logprob: -9.387127876281738
    7. 'int' → logprob: -9.637127876281738
    8. ' -' → logprob: -9.762127876281738
    9. ' max' → logprob: -10.512127876281738
    10. '1' → logprob: -11.262127876281738

Token 28: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006188295315951109
    2. '<|end|>' → logprob: -5.25618839263916
    3. '    
' → logprob: -7.75618839263916
    4. '
' → logprob: -8.75618839263916
    5. '<|end|>' → logprob: -9.00618839263916
    6. ' ' → logprob: -9.88118839263916
    7. ' for' → logprob: -10.00618839263916
    8. '    ' → logprob: -10.63118839263916
    9. 'for' → logprob: -11.00618839263916
    10. ')' → logprob: -11.25618839263916

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01617876999080181
    2. '<|end|>' → logprob: -4.266178607940674
    3. '    
' → logprob: -7.141178607940674
    4. ' ' → logprob: -8.141179084777832
    5. '<|end|>' → logprob: -8.641179084777832
    6. '
' → logprob: -8.641179084777832
    7. ')' → logprob: -9.141179084777832
    8. '    ' → logprob: -9.266179084777832
    9. '\' → logprob: -9.891179084777832
    10. '  ' → logprob: -9.891179084777832

Token 30: ' treasure' (ID: 47849)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46346867084503174
    2. 'for' → logprob: -1.0884686708450317
    3. ' for' → logprob: -3.713468551635742
    4. '<|end|>' → logprob: -5.588468551635742
    5. ' ' → logprob: -6.713468551635742
    6. '
' → logprob: -6.713468551635742
    7. 'while' → logprob: -7.338468551635742
    8. '  ' → logprob: -7.713468551635742
    9. 'n' → logprob: -7.963468551635742
    10. '	for' → logprob: -8.088468551635742

Token 31: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10679130256175995
    2. '_map' → logprob: -3.4817912578582764
    3. 's' → logprob: -3.6067912578582764
    4. '=' → logprob: -3.7317912578582764
    5. ' =' → logprob: -4.2317914962768555
    6. '_h' → logprob: -6.6067914962768555
    7. '_pos' → logprob: -7.3567914962768555
    8. '_positions' → logprob: -7.3567914962768555
    9. '_=' → logprob: -7.7317914962768555
    10. '_location' → logprob: -7.8567914962768555

Token 32: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010644052177667618
    2. ' =' → logprob: -5.13564395904541
    3. ' ,' → logprob: -5.63564395904541
    4. '=' → logprob: -8.13564395904541
    5. ' +=' → logprob: -8.13564395904541
    6. '<|end|>' → logprob: -8.13564395904541
    7. 's' → logprob: -9.51064395904541
    8. '<|end|>' → logprob: -9.88564395904541
    9. ')' → logprob: -10.88564395904541
    10. '_,' → logprob: -11.26064395904541

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5796777009963989
    2. ' ' → logprob: -1.079677700996399
    3. ' None' → logprob: -3.7046775817871094
    4. ' -' → logprob: -3.9546775817871094
    5. ' x' → logprob: -3.9546775817871094
    6. 'None' → logprob: -4.829677581787109
    7. 'x' → logprob: -4.954677581787109
    8. ' []' → logprob: -5.204677581787109
    9. '[]' → logprob: -5.454677581787109
    10. 'y' → logprob: -5.954677581787109

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13013285398483276
    2. 'tre' → logprob: -2.6301329135894775
    3. 'None' → logprob: -4.130132675170898
    4. '-' → logprob: -4.380132675170898
    5. ' ' → logprob: -4.630132675170898
    6. ' None' → logprob: -5.255132675170898
    7. 'x' → logprob: -6.380132675170898
    8. ' -' → logprob: -6.380132675170898
    9. 'y' → logprob: -7.130132675170898
    10. 'int' → logprob: -7.380132675170898

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' treasure' (ID: 47849)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -1.26071298122406
    2. '   ' → logprob: -1.51071298122406
    3. '<|end|>' → logprob: -1.76071298122406
    4. 't' → logprob: -2.1357131004333496
    5. ' ' → logprob: -3.3857131004333496
    6. 'max' → logprob: -3.5107131004333496
    7. '<|end|>' → logprob: -3.5107131004333496
    8. 'for' → logprob: -3.7607131004333496
    9. 'x' → logprob: -3.7607131004333496
    10. ' treasure' → logprob: -4.01071310043335

Token 38: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00605950178578496
    2. '_x' → logprob: -5.131059646606445
    3. '_' → logprob: -9.006059646606445
    4. 'y' → logprob: -12.881059646606445
    5. ' _' → logprob: -13.131059646606445
    6. '```' → logprob: -14.756059646606445
    7. 'Y' → logprob: -14.881059646606445
    8. '_s' → logprob: -15.381059646606445
    9. '_z' → logprob: -15.506059646606445
    10. '_dist' → logprob: -15.881059646606445

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006725788116455078
    2. '=' → logprob: -5.006725788116455
    3. ' ' → logprob: -12.506725311279297
    4. ',' → logprob: -12.506725311279297
    5. '<|end|>' → logprob: -14.006725311279297
    6. ' =
' → logprob: -14.131725311279297
    7. ' +=' → logprob: -14.756725311279297
    8. ')' → logprob: -15.006725311279297
    9. '0' → logprob: -15.256725311279297
    10. ' ,' → logprob: -16.006725311279297

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519378066062927
    2. ' ' → logprob: -1.5019378662109375
    3. ' -' → logprob: -13.189437866210938
    4. 'x' → logprob: -13.251937866210938
    5. ' ' → logprob: -14.564437866210938
    6. '1' → logprob: -14.751937866210938
    7. 'tre' → logprob: -14.751937866210938
    8. ' x' → logprob: -14.814437866210938
    9. '  ' → logprob: -14.876937866210938
    10. '-' → logprob: -14.939437866210938

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002811059355735779
    2. ' ' → logprob: -5.877810955047607
    3. '-' → logprob: -13.002811431884766
    4. 'x' → logprob: -13.440311431884766
    5. ' -' → logprob: -14.252811431884766
    6. '1' → logprob: -15.502811431884766
    7. 'y' → logprob: -15.565311431884766
    8. '  ' → logprob: -15.565311431884766
    9. '   ' → logprob: -15.877811431884766
    10. '100' → logprob: -16.065311431884766

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13978196680545807
    2. '<|end|>' → logprob: -2.139781951904297
    3. '
' → logprob: -5.014781951904297
    4. 'while' → logprob: -6.264781951904297
    5. ' for' → logprob: -6.889781951904297
    6. ' while' → logprob: -7.014781951904297
    7. 'for' → logprob: -7.014781951904297
    8. '<|end|>' → logprob: -7.514781951904297
    9. '```' → logprob: -8.389781951904297
    10. ' ' → logprob: -9.014781951904297

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.320585161447525
    2. '<|end|>' → logprob: -1.9455851316452026
    3. 'for' → logprob: -2.195585250854492
    4. ' for' → logprob: -4.820585250854492
    5. '```' → logprob: -6.070585250854492
    6. 'while' → logprob: -6.195585250854492
    7. '<|end|>' → logprob: -6.570585250854492
    8. 't' → logprob: -7.070585250854492
    9. ' ' → logprob: -7.445585250854492
    10. 'n' → logprob: -7.695585250854492

Token 44: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3393501043319702
    2. '<|end|>' → logprob: -2.0893502235412598
    3. ' for' → logprob: -2.4643502235412598
    4. '   ' → logprob: -3.2143502235412598
    5. 'n' → logprob: -4.08935022354126
    6. 't' → logprob: -5.46435022354126
    7. 'm' → logprob: -5.46435022354126
    8. '```' → logprob: -5.58935022354126
    9. 'x' → logprob: -6.46435022354126
    10. 'd' → logprob: -6.83935022354126

Token 45: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.05540754646062851
    2. 'True' → logprob: -2.9304075241088867
    3. '(True' → logprob: -7.805407524108887
    4. ' x' → logprob: -10.305407524108887
    5. ' n' → logprob: -10.430407524108887
    6. ' ' → logprob: -11.055407524108887
    7. ' not' → logprob: -11.680407524108887
    8. ' y' → logprob: -11.805407524108887
    9. '_true' → logprob: -12.055407524108887
    10. 'n' → logprob: -12.930407524108887

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013166792632546276
    2. '   ' → logprob: -10.125131607055664
    3. '<|end|>' → logprob: -10.375131607055664
    4. '):' → logprob: -10.875131607055664
    5. '       ' → logprob: -11.000131607055664
    6. ',' → logprob: -11.875131607055664
    7. ':
' → logprob: -12.250131607055664
    8. ':**' → logprob: -12.375131607055664
    9. '():' → logprob: -12.875131607055664
    10. ' :' → logprob: -13.125131607055664

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08567262440919876
    2. ' ' → logprob: -3.335672616958618
    3. '   ' → logprob: -4.210672855377197
    4. '    ' → logprob: -4.210672855377197
    5. '<|end|>' → logprob: -4.960672855377197
    6. '     ' → logprob: -6.710672855377197
    7. '```' → logprob: -6.710672855377197
    8. 'n' → logprob: -6.835672855377197
    9. '        ' → logprob: -6.960672855377197
    10. '        
' → logprob: -7.210672855377197

Token 48: ' dx' (ID: 29472)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07805614173412323
    2. 'line' → logprob: -3.9530560970306396
    3. 's' → logprob: -4.203056335449219
    4. ' s' → logprob: -4.203056335449219
    5. '   ' → logprob: -4.953056335449219
    6. ' inp' → logprob: -5.203056335449219
    7. ' try' → logprob: -5.453056335449219
    8. ' data' → logprob: -5.703056335449219
    9. 'data' → logprob: -7.203056335449219
    10. ' direction' → logprob: -7.578056335449219

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024993177503347397
    2. ' ,' → logprob: -6.252499103546143
    3. '=' → logprob: -7.752499103546143
    4. ' =' → logprob: -9.2524995803833
    5. '<|end|>' → logprob: -11.1274995803833
    6. ',d' → logprob: -11.5024995803833
    7. ')' → logprob: -12.3774995803833
    8. ',y' → logprob: -13.1274995803833
    9. '<|end|>' → logprob: -13.2524995803833
    10. '‌,' → logprob: -13.7524995803833

Token 50: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.42871570587158203
    2. 'dy' → logprob: -1.053715705871582
    3. ' ' → logprob: -12.303715705871582
    4. '<|end|>' → logprob: -12.303715705871582
    5. 'd' → logprob: -13.178715705871582
    6. '<|end|>' → logprob: -14.053715705871582
    7. '.dy' → logprob: -14.428715705871582
    8. '=' → logprob: -14.928715705871582
    9. 'Dy' → logprob: -15.178715705871582
    10. ',' → logprob: -15.303715705871582

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326354146003723
    2. '=' → logprob: -0.7576354146003723
    3. ',' → logprob: -11.007635116577148
    4. '<|end|>' → logprob: -11.757635116577148
    5. '=input' → logprob: -12.132635116577148
    6. ')' → logprob: -12.882635116577148
    7. '=int' → logprob: -13.507635116577148
    8. '<|end|>' → logprob: -14.257635116577148
    9. '=line' → logprob: -15.757635116577148
    10. ' =)' → logprob: -16.00763511657715

Token 52: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4289740025997162
    2. 'map' → logprob: -1.0539740324020386
    3. '[' → logprob: -9.803974151611328
    4. 'list' → logprob: -10.178974151611328
    5. ' ' → logprob: -10.303974151611328
    6. 'input' → logprob: -10.553974151611328
    7. ' [' → logprob: -10.678974151611328
    8. '(map' → logprob: -10.803974151611328
    9. '	map' → logprob: -10.803974151611328
    10. ' input' → logprob: -11.428974151611328

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025103818625211716
    2. '(' → logprob: -6.3775105476379395
    3. '(lambda' → logprob: -7.8775105476379395
    4. '<|end|>' → logprob: -8.252510070800781
    5. '[int' → logprob: -10.127510070800781
    6. 'int' → logprob: -10.252510070800781
    7. '(str' → logprob: -10.377510070800781
    8. '<int' → logprob: -10.627510070800781
    9. '(input' → logprob: -10.752510070800781
    10. '=int' → logprob: -12.127510070800781

Token 54: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.017695743590593338
    2. '(' → logprob: -4.767695903778076
    3. ')' → logprob: -5.142695903778076
    4. '<|end|>' → logprob: -6.517695903778076
    5. 'input' → logprob: -7.142695903778076
    6. ',input' → logprob: -7.267695903778076
    7. ',' → logprob: -9.642695426940918
    8. '=input' → logprob: -9.767695426940918
    9. ' input' → logprob: -10.267695426940918
    10. '()' → logprob: -11.142695426940918

Token 55: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16351038217544556
    2. ' input' → logprob: -1.9135103225708008
    3. ')' → logprob: -5.788510322570801
    4. '(input' → logprob: -8.6635103225708
    5. '=input' → logprob: -11.5385103225708
    6. ',input' → logprob: -11.6635103225708
    7. '<|end|>' → logprob: -11.7885103225708
    8. ' )' → logprob: -11.9135103225708
    9. '<input' → logprob: -12.4135103225708
    10. '	input' → logprob: -12.6635103225708

Token 56: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015500946901738644
    2. '()' → logprob: -6.501550197601318
    3. '())' → logprob: -10.00154972076416
    4. ')' → logprob: -14.25154972076416
    5. '()
' → logprob: -14.62654972076416
    6. '(' → logprob: -14.62654972076416
    7. '()))' → logprob: -15.75154972076416
    8. ' ().' → logprob: -16.001550674438477
    9. '());' → logprob: -16.251550674438477
    10. '()[' → logprob: -16.501550674438477

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010115911572938785
    2. 'strip' → logprob: -9.250101089477539
    3. 'rstrip' → logprob: -12.500101089477539
    4. ' split' → logprob: -14.375101089477539
    5. '(split' → logprob: -14.875101089477539
    6. ')' → logprob: -15.500101089477539
    7. 's' → logprob: -16.50010108947754
    8. 'spl' → logprob: -16.75010108947754
    9. '.split' → logprob: -18.00010108947754
    10. '_split' → logprob: -18.25010108947754

Token 58: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010646294802427292
    2. '()' → logprob: -5.260646343231201
    3. '()))' → logprob: -5.760646343231201
    4. ')' → logprob: -6.135646343231201
    5. '))' → logprob: -9.635645866394043
    6. '())
' → logprob: -11.510645866394043
    7. '()),' → logprob: -13.135645866394043
    8. '(' → logprob: -13.510645866394043
    9. ' ())' → logprob: -13.760645866394043
    10. '(),' → logprob: -13.885645866394043

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34521085023880005
    2. '<|end|>' → logprob: -1.3452107906341553
    3. ' if' → logprob: -3.7202107906341553
    4. ' 
' → logprob: -5.845211029052734
    5. 'if' (adapté à ' if') → logprob: -6.470211029052734
    6. ')' → logprob: -6.845211029052734
    7. '<|end|>' → logprob: -7.970211029052734
    8. ' )' → logprob: -8.095211029052734
    9. '  ' → logprob: -8.845211029052734
    10. '#' → logprob: -9.095211029052734

Token 61: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.013340688310563564
    2. 'dx' → logprob: -5.013340473175049
    3. ' not' → logprob: -6.138340473175049
    4. ' (' → logprob: -6.263340473175049
    5. '(dx' → logprob: -6.513340473175049
    6. ' ' → logprob: -7.138340473175049
    7. ' abs' → logprob: -8.888340950012207
    8. 'abs' → logprob: -10.638340950012207
    9. 'not' → logprob: -10.638340950012207
    10. ' x' → logprob: -11.138340950012207

Token 62: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6965448260307312
    2. ' ==' → logprob: -0.6965448260307312
    3. ' ' → logprob: -5.946544647216797
    4. '=' → logprob: -7.696544647216797
    5. ' <' → logprob: -9.321544647216797
    6. '<' → logprob: -9.321544647216797
    7. '==-' → logprob: -10.696544647216797
    8. '```' → logprob: -11.071544647216797
    9. '0' → logprob: -11.384044647216797
    10. ' =' → logprob: -11.446544647216797

Token 63: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2670420706272125
    2. '0' → logprob: -1.5170420408248901
    3. ' -' → logprob: -4.64204216003418
    4. '-' → logprob: -5.26704216003418
    5. ' dy' → logprob: -9.76704216003418
    6. 'y' → logprob: -10.01704216003418
    7. 'dy' → logprob: -10.26704216003418
    8. ' y' → logprob: -10.39204216003418
    9. '99' → logprob: -12.20454216003418
    10. '```' → logprob: -12.26704216003418

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033314721658825874
    2. '-' → logprob: -6.128331661224365
    3. ' ' → logprob: -6.878331661224365
    4. ' -' → logprob: -10.128331184387207
    5. 'dy' → logprob: -10.753331184387207
    6. '999' → logprob: -10.753331184387207
    7. 'y' → logprob: -11.503331184387207
    8. '99' → logprob: -12.128331184387207
    9. '100' → logprob: -12.753331184387207
    10. '9' → logprob: -12.753331184387207

Token 65: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011063620448112488
    2. 'and' → logprob: -4.511063575744629
    3. ' ' → logprob: -11.386063575744629
    4. '   ' → logprob: -14.011063575744629
    5. '0' → logprob: -14.261063575744629
    6. '<|end|>' → logprob: -14.511063575744629
    7. '	and' → logprob: -14.511063575744629
    8. '    ' → logprob: -14.636063575744629
    9. ' or' → logprob: -15.011063575744629
    10. ' и' → logprob: -15.386063575744629

Token 66: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.20141880214214325
    2. 'dy' → logprob: -1.7014187574386597
    3. '.dy' → logprob: -13.07641887664795
    4. '   ' → logprob: -13.95141887664795
    5. '	d' → logprob: -14.07641887664795
    6. ' ' → logprob: -14.20141887664795
    7. '<|end|>' → logprob: -14.82641887664795
    8. ' ' → logprob: -15.82641887664795
    9. 'dym' → logprob: -16.201417922973633
    10. '```' → logprob: -16.576417922973633

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07900744676589966
    2. '==' → logprob: -2.579007387161255
    3. '<|end|>' → logprob: -9.329007148742676
    4. ' ' → logprob: -11.329007148742676
    5. '<|end|>' → logprob: -12.204007148742676
    6. ')==' → logprob: -12.954007148742676
    7. '0' → logprob: -13.454007148742676
    8. ' ' → logprob: -13.579007148742676
    9. ' =' → logprob: -13.704007148742676
    10. '==-' → logprob: -14.079007148742676

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42870789766311646
    2. '0' → logprob: -1.0537078380584717
    3. '  ' → logprob: -12.80370807647705
    4. ' ' → logprob: -13.17870807647705
    5. ' -' → logprob: -13.92870807647705
    6. '   ' → logprob: -15.05370807647705
    7. '<|end|>' → logprob: -15.24120807647705
    8. '-' → logprob: -15.86620807647705
    9. '```' → logprob: -16.116207122802734
    10. '=' → logprob: -16.116207122802734

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002493968466296792
    2. ' ' → logprob: -6.002493858337402
    3. '-' → logprob: -11.502493858337402
    4. '  ' → logprob: -13.127493858337402
    5. ' -' → logprob: -13.189993858337402
    6. '   ' → logprob: -13.689993858337402
    7. '1' → logprob: -13.939993858337402
    8. '```' → logprob: -15.252493858337402
    9. '    ' → logprob: -15.814993858337402
    10. ' ' → logprob: -16.06499481201172

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021105022460687906
    2. ':
' → logprob: -8.625210762023926
    3. '       ' → logprob: -11.000210762023926
    4. '):' → logprob: -11.875210762023926
    5. '           ' → logprob: -13.000210762023926
    6. '   ' → logprob: -13.250210762023926
    7. ' :' → logprob: -13.375210762023926
    8. ',' → logprob: -14.000210762023926
    9. '.' → logprob: -15.125210762023926
    10. ')' → logprob: -15.250210762023926

Token 71: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15564171969890594
    2. '           ' → logprob: -2.030641794204712
    3. '       ' → logprob: -4.405641555786133
    4. ':
' → logprob: -7.530641555786133
    5. '   ' → logprob: -10.530641555786133
    6. ' :' → logprob: -10.780641555786133
    7. ',' → logprob: -11.280641555786133
    8. '		' → logprob: -12.030641555786133
    9. '	break' → logprob: -12.030641555786133
    10. '          ' → logprob: -12.155641555786133

Token 72: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005326485726982355
    2. ' break' → logprob: -5.380326271057129
    3. '           ' → logprob: -8.255326271057129
    4. '   ' → logprob: -8.380326271057129
    5. 'break' (adapté à ' break') → logprob: -8.755326271057129
    6. '	break' → logprob: -9.880326271057129
    7. '```' → logprob: -12.630326271057129
    8. ' ' → logprob: -14.005326271057129
    9. ' ' → logprob: -14.255326271057129
    10. '               ' → logprob: -14.380326271057129

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5341303944587708
    2. '<|end|>' → logprob: -1.034130334854126
    3. '```' → logprob: -4.409130573272705
    4. '       ' → logprob: -4.409130573272705
    5. '\n' → logprob: -4.784130573272705
    6. '<|end|>' → logprob: -4.909130573272705
    7. '   ' → logprob: -4.909130573272705
    8. '  
' → logprob: -5.284130573272705
    9. '    
' → logprob: -6.034130573272705
    10. ' 
' → logprob: -7.159130573272705

Token 74: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13169868290424347
    2. '<|end|>' → logprob: -2.3816986083984375
    3. '       ' → logprob: -3.8816986083984375
    4. '  
' → logprob: -6.0066986083984375
    5. '<|end|>' → logprob: -6.2566986083984375
    6. '```' → logprob: -6.3816986083984375
    7. '        
' → logprob: -6.6316986083984375
    8. ' 
' → logprob: -7.0066986083984375
    9. '    
' → logprob: -7.1316986083984375
    10. '\n' → logprob: -7.7566986083984375

Token 75: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1999576091766357
    2. '       ' → logprob: -1.1999576091766357
    3. ' 
' → logprob: -2.1999576091766357
    4. '        
' → logprob: -2.8249576091766357
    5. '<|end|>' → logprob: -2.8249576091766357
    6. '```' → logprob: -3.0749576091766357
    7. 'distance' → logprob: -3.9499576091766357
    8. '    
' → logprob: -4.074957847595215
    9. '   
' → logprob: -4.074957847595215
    10. '   ' → logprob: -4.699957847595215

Token 76: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2521250545978546
    2. '+=' → logprob: -1.5021250247955322
    3. '+' → logprob: -8.877124786376953
    4. '=' → logprob: -11.252124786376953
    5. ',' → logprob: -11.377124786376953
    6. ']+=' → logprob: -11.877124786376953
    7. '    ' → logprob: -11.877124786376953
    8. ' =' → logprob: -12.002124786376953
    9. '   ' → logprob: -12.252124786376953
    10. ' +' → logprob: -13.627124786376953

Token 77: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.2519298195838928
    2. 'dx' → logprob: -1.501929759979248
    3. 'd' → logprob: -15.251930236816406
    4. '_dx' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.626930236816406
    6. '(dx' → logprob: -16.876930236816406
    7. '.dx' → logprob: -17.251930236816406
    8. ' d' → logprob: -17.876930236816406
    9. 'Dx' → logprob: -18.001930236816406
    10. '	d' → logprob: -18.501930236816406

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '       ' (ID: 309)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.70623379945755
    2. '<|end|>' → logprob: -1.3312337398529053
    3. ',' → logprob: -2.3312337398529053
    4. ',y' → logprob: -2.5812337398529053
    5. ' ' → logprob: -3.4562337398529053
    6. ' dy' → logprob: -4.706233978271484
    7. '       ' → logprob: -4.956233978271484
    8. 'y' → logprob: -5.581233978271484
    9. '```' → logprob: -5.831233978271484
    10. '    ' → logprob: -5.831233978271484

Token 80: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.4768437445163727
    2. ' y' → logprob: -0.9768437147140503
    3. ' dy' → logprob: -6.10184383392334
    4. 'dy' → logprob: -7.60184383392334
    5. '<|end|>' → logprob: -11.47684383392334
    6. '    ' → logprob: -12.35184383392334
    7. ' ' → logprob: -12.85184383392334
    8. ',y' → logprob: -12.97684383392334
    9. '	y' → logprob: -13.10184383392334
    10. ',' → logprob: -14.60184383392334

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13532964885234833
    2. '+=' → logprob: -2.5103297233581543
    3. '+' → logprob: -3.1353297233581543
    4. ' +' → logprob: -6.385329723358154
    5. '<|end|>' → logprob: -9.260329246520996
    6. '+='' → logprob: -10.760329246520996
    7. ' ' → logprob: -11.760329246520996
    8. '```' → logprob: -11.885329246520996
    9. ']+=' → logprob: -12.010329246520996
    10. '    ' → logprob: -12.010329246520996

Token 82: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.12717744708061218
    2. ' dy' → logprob: -2.1271774768829346
    3. 'y' → logprob: -8.377177238464355
    4. ' y' → logprob: -10.877177238464355
    5. ' ' → logprob: -15.627177238464355
    6. '.dy' → logprob: -16.127178192138672
    7. 'Dy' → logprob: -16.502178192138672
    8. 'd' → logprob: -16.877178192138672
    9. 'dym' → logprob: -18.377178192138672
    10. '   ' → logprob: -18.377178192138672

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.560764729976654
    2. '<|end|>' → logprob: -1.4357647895812988
    3. '```' → logprob: -2.935764789581299
    4. '
' → logprob: -3.310764789581299
    5. '        
' → logprob: -3.310764789581299
    6. ' 
' → logprob: -4.185764789581299
    7. '    
' → logprob: -4.560764789581299
    8. ' ' → logprob: -4.685764789581299
    9. '  
' → logprob: -4.685764789581299
    10. '   ' → logprob: -5.060764789581299

Token 85: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.22575348615646362
    2. ' dist' → logprob: -1.7257535457611084
    3. 'distance' → logprob: -3.9757535457611084
    4. ' distance' → logprob: -6.100753307342529
    5. '```' → logprob: -6.475753307342529
    6. ' if' → logprob: -7.725753307342529
    7. 'd' → logprob: -8.350753784179688
    8. '       ' → logprob: -8.975753784179688
    9. 'max' → logprob: -9.225753784179688
    10. 'curr' → logprob: -9.350753784179688

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04932009428739548
    2. '=' → logprob: -3.0493199825286865
    3. 'ance' → logprob: -7.299320220947266
    4. '_' → logprob: -10.174320220947266
    5. 'anced' → logprob: -12.049320220947266
    6. ' ' → logprob: -12.424320220947266
    7. '_squared' → logprob: -13.299320220947266
    8. 'ANCE' → logprob: -13.924320220947266
    9. 'an' → logprob: -14.299320220947266
    10. 'ances' → logprob: -14.299320220947266

Token 87: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1782301664352417
    2. 'x' → logprob: -2.5532302856445312
    3. ' (' → logprob: -2.5532302856445312
    4. '(x' → logprob: -5.303230285644531
    5. ' abs' → logprob: -6.553230285644531
    6. '(' → logprob: -7.803230285644531
    7. ' max' → logprob: -8.303230285644531
    8. 'abs' → logprob: -8.303230285644531
    9. '(abs' → logprob: -9.303230285644531
    10. ' ' → logprob: -10.053230285644531

Token 88: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014582175761461258
    2. '(x' → logprob: -4.88958215713501
    3. ' x' → logprob: -5.01458215713501
    4. ' (' → logprob: -8.514582633972168
    5. '   ' → logprob: -9.389582633972168
    6. ')x' → logprob: -11.389582633972168
    7. '       ' → logprob: -11.639582633972168
    8. ')' → logprob: -12.514582633972168
    9. ' ' → logprob: -13.389582633972168
    10. '	x' → logprob: -14.639582633972168

Token 89: '*x' (ID: 46987)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03838995099067688
    2. ' **' → logprob: -3.9133899211883545
    3. '*' → logprob: -5.163390159606934
    4. '-' → logprob: -5.413390159606934
    5. ' -' → logprob: -5.413390159606934
    6. ')**' → logprob: -6.538390159606934
    7. ')' → logprob: -6.788390159606934
    8. ' *' → logprob: -7.913390159606934
    9. '   ' → logprob: -10.288390159606934
    10. '*x' → logprob: -10.663390159606934

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20159655809402466
    2. ' +' → logprob: -1.7015964984893799
    3. ')' → logprob: -8.8265962600708
    4. ')+' → logprob: -11.0765962600708
    5. '+y' → logprob: -11.4515962600708
    6. '+)' → logprob: -12.3265962600708
    7. '<|end|>' → logprob: -13.2015962600708
    8. ' )' → logprob: -13.5765962600708
    9. ')+(' → logprob: -14.2015962600708
    10. ' ' → logprob: -14.5765962600708

Token 91: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018171953037381172
    2. ' y' → logprob: -4.018171787261963
    3. '	y' → logprob: -11.643172264099121
    4. '<|end|>' → logprob: -11.893172264099121
    5. '   ' → logprob: -12.518172264099121
    6. ' ' → logprob: -13.393172264099121
    7. ')y' → logprob: -14.393172264099121
    8. '    ' → logprob: -15.393172264099121
    9. '  ' → logprob: -15.768172264099121
    10. ')' → logprob: -16.143171310424805

Token 92: '*y' (ID: 83575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3517036437988281
    2. ')**' → logprob: -1.2267036437988281
    3. '**' → logprob: -5.851703643798828
    4. '<|end|>' → logprob: -8.351703643798828
    5. ' )' → logprob: -9.976703643798828
    6. '**)' → logprob: -10.851703643798828
    7. '```' → logprob: -11.101703643798828
    8. '*)' → logprob: -11.601703643798828
    9. '<|end|>' → logprob: -11.726703643798828
    10. ')`' → logprob: -12.226703643798828

Token 93: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.12978209555149078
    2. ')' → logprob: -2.129782199859619
    3. ' )' → logprob: -5.879782199859619
    4. '**' → logprob: -10.379781723022461
    5. '   ' → logprob: -11.379781723022461
    6. '       ' → logprob: -12.004781723022461
    7. ' ' → logprob: -13.629781723022461
    8. ')^' → logprob: -14.129781723022461
    9. '    ' → logprob: -14.254781723022461
    10. '**)' → logprob: -14.754781723022461

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.500005722045898
    3. '.' → logprob: -13.625005722045898
    4. ' ' → logprob: -13.750005722045898
    5. '   ' → logprob: -20.3750057220459
    6. '۰' → logprob: -20.6250057220459
    7. '```' → logprob: -20.7500057220459
    8. '05' → logprob: -20.8750057220459
    9. '-' → logprob: -21.1250057220459
    10. '1' → logprob: -21.4375057220459

Token 95: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010223194840364158
    2. '5' → logprob: -9.375102043151855
    3. '0' → logprob: -12.500102043151855
    4. '```' → logprob: -12.625102043151855
    5. '.-' → logprob: -13.000102043151855
    6. '1' → logprob: -13.500102043151855
    7. '`.' → logprob: -13.750102043151855
    8. '-' → logprob: -13.750102043151855
    9. '.​' → logprob: -14.375102043151855
    10. '2' → logprob: -14.500102043151855

Token 96: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.125000953674316
    3. 'five' → logprob: -16.0
    4. '0' → logprob: -16.9375
    5. '4' → logprob: -17.1875
    6. '   ' → logprob: -17.1875
    7. '25' → logprob: -17.875
    8. '2' → logprob: -18.0625
    9. ' ' → logprob: -18.125
    10. '``' → logprob: -18.25

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40840592980384827
    2. '<|end|>' → logprob: -1.2834059000015259
    3. '       ' → logprob: -3.0334060192108154
    4. '<|end|>' → logprob: -5.658405780792236
    5. '        
' → logprob: -6.158405780792236
    6. '    
' → logprob: -7.033405780792236
    7. '   ' → logprob: -7.158405780792236
    8. ' 
' → logprob: -7.158405780792236
    9. '  
' → logprob: -7.658405780792236
    10. '```' → logprob: -7.908405780792236

Token 98: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2310856282711029
    2. '
' → logprob: -1.9810856580734253
    3. ' 
' → logprob: -3.6060855388641357
    4. ' if' → logprob: -3.8560855388641357
    5. '        
' → logprob: -4.606085777282715
    6. ' ' → logprob: -5.731085777282715
    7. 'if' (adapté à ' if') → logprob: -5.856085777282715
    8. '        ' → logprob: -6.731085777282715
    9. '  
' → logprob: -7.106085777282715
    10. '\n' → logprob: -7.981085777282715

Token 100: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.011051828041672707
    2. 'dist' → logprob: -4.511051654815674
    3. '	dist' → logprob: -13.136052131652832
    4. '(dist' → logprob: -13.386052131652832
    5. ' ' → logprob: -14.761052131652832
    6. '_dist' → logprob: -17.511051177978516
    7. ' ' → logprob: -17.636051177978516
    8. 'Dist' → logprob: -17.886051177978516
    9. ' max' → logprob: -18.636051177978516
    10. '   ' → logprob: -19.261051177978516

Token 101: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020734218880534172
    2. '>' → logprob: -3.8957343101501465
    3. ' ' → logprob: -8.645733833312988
    4. '<|end|>' → logprob: -11.895733833312988
    5. ' >=' → logprob: -12.770733833312988
    6. ' ' → logprob: -13.520733833312988
    7. '   ' → logprob: -13.770733833312988
    8. '  ' → logprob: -14.020733833312988
    9. '<|end|>' → logprob: -14.520733833312988
    10. ')' → logprob: -14.520733833312988

Token 102: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06196925416588783
    2. 'max' → logprob: -2.81196928024292
    3. '	max' → logprob: -14.311968803405762
    4. ' ' → logprob: -14.811968803405762
    5. '   ' → logprob: -15.436968803405762
    6. '_max' → logprob: -16.061969757080078
    7. '(max' → logprob: -16.436969757080078
    8. ' ' → logprob: -16.811969757080078
    9. ' maxlength' → logprob: -17.436969757080078
    10. ' maximum' → logprob: -17.436969757080078

Token 103: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.000006675720215
    3. ' _' → logprob: -14.625006675720215
    4. '_d' → logprob: -16.37500762939453
    5. 'dist' → logprob: -17.12500762939453
    6. '_diff' → logprob: -17.25000762939453
    7. '_distance' → logprob: -17.87500762939453
    8. ' ' → logprob: -17.87500762939453
    9. '_max' → logprob: -18.12500762939453
    10. '_dis' → logprob: -18.12500762939453

Token 104: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004981054808013141
    2. ':
' → logprob: -8.250497817993164
    3. '       ' → logprob: -9.625497817993164
    4. '):' → logprob: -9.750497817993164
    5. '<|end|>' → logprob: -10.000497817993164
    6. '           ' → logprob: -10.250497817993164
    7. ' :' → logprob: -11.375497817993164
    8. '<|end|>' → logprob: -11.500497817993164
    9. ',' → logprob: -13.500497817993164
    10. '   ' → logprob: -13.750497817993164

Token 105: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.434847354888916
    2. '(dist' → logprob: -1.809847354888916
    3. '(max' → logprob: -2.934847354888916
    4. '(abs' → logprob: -3.309847354888916
    5. '(x' → logprob: -3.309847354888916
    6. ' dist' → logprob: -4.059847354888916
    7. ' max' → logprob: -4.559847354888916
    8. '(dx' → logprob: -4.684847354888916
    9. ' abs' → logprob: -4.934847354888916
    10. 'dist' → logprob: -5.309847354888916

Token 106: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2555656433105469
    2. ' dist' → logprob: -1.7555656433105469
    3. 'abs' → logprob: -3.380565643310547
    4. ' abs' → logprob: -4.505565643310547
    5. '(dist' → logprob: -5.255565643310547
    6. '(abs' → logprob: -6.380565643310547
    7. ' (' → logprob: -7.505565643310547
    8. 'int' → logprob: -9.880565643310547
    9. '(' → logprob: -10.630565643310547
    10. 'math' → logprob: -11.255565643310547

Token 107: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03083440475165844
    2. '==' → logprob: -3.530834436416626
    3. ' >=' → logprob: -6.905834197998047
    4. '>=' → logprob: -10.530834197998047
    5. '=' → logprob: -10.780834197998047
    6. ' ' → logprob: -11.280834197998047
    7. ' =' → logprob: -11.655834197998047
    8. ' >' → logprob: -12.405834197998047
    9. ' <=' → logprob: -12.780834197998047
    10. ',' → logprob: -13.655834197998047

Token 108: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16049809753894806
    2. 'max' → logprob: -1.9104981422424316
    3. '0' → logprob: -8.660497665405273
    4. ' ' → logprob: -9.285497665405273
    5. '	max' → logprob: -12.910497665405273
    6. '(max' → logprob: -13.910497665405273
    7. '   ' → logprob: -14.160497665405273
    8. '>' → logprob: -14.472997665405273
    9. '  ' → logprob: -14.785497665405273
    10. '1' → logprob: -14.785497665405273

Token 109: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00085678935283795
    2. 'dist' → logprob: -7.125856876373291
    3. '<|end|>' → logprob: -10.625856399536133
    4. '	dist' → logprob: -11.000856399536133
    5. 'Dist' → logprob: -12.750856399536133
    6. '_' → logprob: -13.250856399536133
    7. ' dist' → logprob: -13.375856399536133
    8. '```' → logprob: -14.000856399536133
    9. '_DIST' → logprob: -14.250856399536133
    10. '_d' → logprob: -14.625856399536133

Token 110: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007639163173735142
    2. 'and' → logprob: -4.882638931274414
    3. '   ' → logprob: -11.007638931274414
    4. ')' → logprob: -11.882638931274414
    5. '    ' → logprob: -12.382638931274414
    6. ' ' → logprob: -12.632638931274414
    7. '<|end|>' → logprob: -14.507638931274414
    8. '	and' → logprob: -14.882638931274414
    9. ' )' → logprob: -15.257638931274414
    10. '       ' → logprob: -15.882638931274414

Token 111: ' x' (ID: 1215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6532434225082397
    2. '(y' → logprob: -1.1532434225082397
    3. '(x' → logprob: -2.1532435417175293
    4. ' y' → logprob: -3.6532435417175293
    5. '(' → logprob: -5.028243541717529
    6. ' x' → logprob: -5.403243541717529
    7. 'y' → logprob: -5.403243541717529
    8. 'x' → logprob: -6.153243541717529
    9. '(abs' → logprob: -6.653243541717529
    10. '(dx' → logprob: -6.903243541717529

Token 112: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6971747279167175
    2. ' <' → logprob: -0.9471747279167175
    3. '>' → logprob: -2.5721747875213623
    4. '<' → logprob: -3.4471747875213623
    5. ' ' → logprob: -5.697174549102783
    6. ' ==' → logprob: -7.072174549102783
    7. '==' → logprob: -7.572174549102783
    8. ' >=' → logprob: -8.447175025939941
    9. ' and' → logprob: -8.822175025939941
    10. 'and' → logprob: -9.197175025939941

Token 113: ' treasure' (ID: 47849)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.007690986152738333
    2. ' treasure' → logprob: -4.882690906524658
    3. ' ' → logprob: -10.632691383361816
    4. '0' → logprob: -10.757691383361816
    5. ' tre' → logprob: -11.257691383361816
    6. '```' → logprob: -11.757691383361816
    7. '   ' → logprob: -12.007691383361816
    8. '  ' → logprob: -12.382691383361816
    9. 'x' → logprob: -12.507691383361816
    10. ' ' → logprob: -13.507691383361816

Token 114: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.759734732331708e-05
    2. 'x' → logprob: -11.125017166137695
    3. '_' → logprob: -13.375017166137695
    4. '   ' → logprob: -14.750017166137695
    5. ' _' → logprob: -15.375017166137695
    6. ' ' → logprob: -15.500017166137695
    7. '```' → logprob: -15.625017166137695
    8. '_y' → logprob: -15.875017166137695
    9. ')' → logprob: -17.375017166137695
    10. ' x' → logprob: -17.937517166137695

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008924176916480064
    2. '):
' → logprob: -4.8839240074157715
    3. ')' → logprob: -7.3839240074157715
    4. ' and' → logprob: -7.8839240074157715
    5. ' ):' → logprob: -8.38392448425293
    6. 'and' → logprob: -10.38392448425293
    7. '   ' → logprob: -10.88392448425293
    8. '):
' → logprob: -11.38392448425293
    9. '       ' → logprob: -11.50892448425293
    10. ' ):
' → logprob: -12.00892448425293

Token 116: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1762617975473404
    2. '           ' → logprob: -2.3012619018554688
    3. ':
' → logprob: -2.8012619018554688
    4. '       ' → logprob: -8.176261901855469
    5. ',' → logprob: -9.176261901855469
    6. '<|end|>' → logprob: -9.551261901855469
    7. '```' → logprob: -9.551261901855469
    8. ' and' → logprob: -10.051261901855469
    9. '):' → logprob: -10.176261901855469
    10. '):
' → logprob: -10.301261901855469

Token 117: ' max' (ID: 2999)
  Prédit: ' treasure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' treasure' → logprob: -0.149254709482193
    2. '           ' → logprob: -2.39925479888916
    3. ' max' → logprob: -3.89925479888916
    4. '               ' → logprob: -4.27425479888916
    5. 'tre' → logprob: -4.52425479888916
    6. 'max' (adapté à ' max') → logprob: -6.39925479888916
    7. ' tre' → logprob: -7.89925479888916
    8. '            ' → logprob: -8.64925479888916
    9. '```' → logprob: -9.14925479888916
    10. '       ' → logprob: -9.39925479888916

Token 118: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00012582694762386382
    2. '_distance' → logprob: -9.750125885009766
    3. '_' → logprob: -10.375125885009766
    4. 'dist' → logprob: -11.125125885009766
    5. '_x' → logprob: -11.625125885009766
    6. 'Dist' → logprob: -12.375125885009766
    7. '_d' → logprob: -13.375125885009766
    8. '<|end|>' → logprob: -13.750125885009766
    9. ' _' → logprob: -14.000125885009766
    10. '	dist' → logprob: -14.125125885009766

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023797055706381798
    2. '=' → logprob: -3.773797035217285
    3. ',' → logprob: -7.523797035217285
    4. ' ' → logprob: -12.023797035217285
    5. ' ,' → logprob: -12.648797035217285
    6. '            ' → logprob: -14.523797035217285
    7. '=max' → logprob: -15.148797035217285
    8. '<|end|>' → logprob: -15.148797035217285
    9. ' =)' → logprob: -15.773797035217285
    10. '           ' → logprob: -15.773797035217285

Token 120: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.31326326727867126
    2. 'dist' → logprob: -1.3132632970809937
    3. '	dist' → logprob: -13.563262939453125
    4. '(dist' → logprob: -15.688262939453125
    5. '_dist' → logprob: -16.688262939453125
    6. ' ' → logprob: -17.813262939453125
    7. '.dist' → logprob: -17.938262939453125
    8. ' ' → logprob: -18.563262939453125
    9. 'Dist' → logprob: -18.688262939453125
    10. 'd' → logprob: -19.563262939453125

Token 121: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005322697106748819
    2. '
' → logprob: -5.5053229331970215
    3. '<|end|>' → logprob: -7.0053229331970215
    4. '       ' → logprob: -8.880322456359863
    5. '            
' → logprob: -9.380322456359863
    6. ' 
' → logprob: -10.880322456359863
    7. '               ' → logprob: -11.130322456359863
    8. '```' → logprob: -11.380322456359863
    9. ',' → logprob: -11.505322456359863
    10. '   ' → logprob: -11.755322456359863

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013501148205250502
    2. ' treasure' → logprob: -7.376349925994873
    3. '```' → logprob: -8.376350402832031
    4. '       ' → logprob: -9.126350402832031
    5. '            
' → logprob: -9.251350402832031
    6. '
' → logprob: -9.376350402832031
    7. ' 
' → logprob: -9.876350402832031
    8. 'tre' → logprob: -10.376350402832031
    9. '            ' → logprob: -10.751350402832031
    10. '   ' → logprob: -10.751350402832031

Token 123: ' treasure' (ID: 47849)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.6408870220184326
    2. ' treasure' → logprob: -0.7658870220184326
    3. '           ' → logprob: -4.890887260437012
    4. ' tre' → logprob: -7.765887260437012
    5. '   ' → logprob: -8.640887260437012
    6. 'x' → logprob: -10.015887260437012
    7. '       ' → logprob: -10.640887260437012
    8. '```' → logprob: -11.015887260437012
    9. ' x' → logprob: -11.515887260437012
    10. ' ' → logprob: -11.515887260437012

Token 124: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.250005722045898
    3. '_y' → logprob: -14.250005722045898
    4. 'x' → logprob: -15.250005722045898
    5. ' _' → logprob: -17.2500057220459
    6. '```' → logprob: -18.3750057220459
    7. '_
' → logprob: -19.5000057220459
    8. '<|end|>' → logprob: -19.6250057220459
    9. ' ' → logprob: -20.3750057220459
    10. '‌' → logprob: -20.6250057220459

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4756227433681488
    2. ' =' → logprob: -0.9756227731704712
    3. ',' → logprob: -6.475622653961182
    4. '<|end|>' → logprob: -13.22562313079834
    5. '=x' → logprob: -13.72562313079834
    6. 'x' → logprob: -14.85062313079834
    7. ' ,' → logprob: -15.47562313079834
    8. ',x' → logprob: -15.60062313079834
    9. '=

' → logprob: -16.100622177124023
    10. ' ' → logprob: -16.100622177124023

Token 126: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759396553039551
    2. ' x' → logprob: -0.8259396553039551
    3. '	x' → logprob: -15.325939178466797
    4. ')x' → logprob: -18.200939178466797
    5. ' ' → logprob: -18.450939178466797
    6. '"x' → logprob: -19.075939178466797
    7. '(x' → logprob: -19.325939178466797
    8. '>x' → logprob: -19.325939178466797
    9. ' ' → logprob: -19.700939178466797
    10. '{x' → logprob: -19.825939178466797

Token 127: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006100731901824474
    2. '
' → logprob: -5.131100654602051
    3. '            
' → logprob: -9.88110065460205
    4. '       ' → logprob: -10.13110065460205
    5. '          ' → logprob: -11.25610065460205
    6. ' 
' → logprob: -11.38110065460205
    7. '<|end|>' → logprob: -11.38110065460205
    8. '               ' → logprob: -11.38110065460205
    9. '            ' → logprob: -12.38110065460205
    10. '
' → logprob: -12.50610065460205

Token 129: ' treasure' (ID: 47849)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020354038861114532
    2. ' y' → logprob: -8.500203132629395
    3. '<|end|>' → logprob: -17.75020408630371
    4. '	y' → logprob: -18.87520408630371
    5. '           ' → logprob: -19.75020408630371
    6. ')y' → logprob: -20.75020408630371
    7. '   ' → logprob: -21.12520408630371
    8. ' ' → logprob: -21.25020408630371
    9. '    ' → logprob: -21.37520408630371
    10. '       ' → logprob: -21.37520408630371

Token 130: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0022023592609912157
    2. 'y' → logprob: -6.12720251083374
    3. '_' → logprob: -11.752202033996582
    4. '<|end|>' → logprob: -12.377202033996582
    5. '_x' → logprob: -12.502202033996582
    6. ' y' → logprob: -14.002202033996582
    7. ' _' → logprob: -14.752202033996582
    8. '```' → logprob: -17.5022029876709
    9. 'Y' → logprob: -17.6272029876709
    10. '	y' → logprob: -17.8772029876709

Token 131: ' =' (ID: 314)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.8622521162033081
    2. '<|end|>' → logprob: -0.9872521162033081
    3. ' =' → logprob: -2.8622522354125977
    4. '=' → logprob: -2.8622522354125977
    5. ' ' → logprob: -3.1122522354125977
    6. 'y' → logprob: -3.1122522354125977
    7. ' x' → logprob: -7.237252235412598
    8. '<|end|>' → logprob: -8.362252235412598
    9. 'x' → logprob: -8.612252235412598
    10. '+' → logprob: -9.112252235412598

Token 132: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011047935113310814
    2. ' y' → logprob: -4.511047840118408
    3. '	y' → logprob: -16.76104736328125
    4. '<|end|>' → logprob: -18.01104736328125
    5. ' ' → logprob: -18.88604736328125
    6. '   ' → logprob: -19.01104736328125
    7. ')y' → logprob: -19.51104736328125
    8. '           ' → logprob: -19.76104736328125
    9. '    ' → logprob: -20.76104736328125
    10. 'x' → logprob: -21.01104736328125

Token 133: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23069071769714355
    2. 'print' → logprob: -2.4806907176971436
    3. '<|end|>' → logprob: -2.4806907176971436
    4. '\n' → logprob: -3.6056907176971436
    5. '   ' → logprob: -5.230690956115723
    6. ' print' → logprob: -6.980690956115723
    7. 'newline' → logprob: -6.980690956115723
    8. ')' → logprob: -7.230690956115723
    9. '    
' → logprob: -7.480690956115723
    10. '```' → logprob: -7.480690956115723

Token 134: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03486572578549385
    2. '<|end|>' → logprob: -3.784865617752075
    3. ')' → logprob: -5.534865856170654
    4. '   ' → logprob: -5.659865856170654
    5. '
' → logprob: -6.159865856170654
    6. ' print' → logprob: -6.659865856170654
    7. '#' → logprob: -8.409865379333496
    8. '```' → logprob: -8.909865379333496
    9. '#print' → logprob: -9.534865379333496
    10. ']' → logprob: -10.034865379333496

Token 135: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006392885115928948
    2. ' print' → logprob: -7.50063943862915
    3. '   ' → logprob: -9.375638961791992
    4. '```' → logprob: -14.000638961791992
    5. '
' → logprob: -14.875638961791992
    6. 'pr' → logprob: -16.375638961791992
    7. '    
' → logprob: -16.500638961791992
    8. 'prit' → logprob: -16.625638961791992
    9. ')' → logprob: -17.000638961791992
    10. '<|end|>' → logprob: -17.375638961791992

Token 136: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.4402781128883362
    2. '(' → logprob: -1.4402780532836914
    3. '(f' → logprob: -2.1902780532836914
    4. '("' → logprob: -6.315278053283691
    5. '('' → logprob: -6.315278053283691
    6. '(max' → logprob: -6.690278053283691
    7. '(abs' → logprob: -6.940278053283691
    8. '((' → logprob: -7.065278053283691
    9. '("("' → logprob: -8.440278053283691
    10. 'tre' → logprob: -8.565278053283691

Token 137: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00026658078422769904
    2. 'reas' → logprob: -8.750267028808594
    3. 'e' → logprob: -9.625267028808594
    4. 'r' → logprob: -10.500267028808594
    5. '(re' → logprob: -12.750267028808594
    6. 'reach' → logprob: -12.750267028808594
    7. 'asure' → logprob: -12.875267028808594
    8. '(' → logprob: -13.500267028808594
    9. ')' → logprob: -14.250267028808594
    10. '	re' → logprob: -14.375267028808594

Token 138: 'asure' (ID: 5450)
  Prédit: 'asure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asure' → logprob: -0.00017433916218578815
    2. 'as' → logprob: -8.875174522399902
    3. 'a' → logprob: -10.750174522399902
    4. 'sure' → logprob: -12.250174522399902
    5. 'ASURE' → logprob: -12.875174522399902
    6. 'ature' → logprob: -13.625174522399902
    7. 'asurer' → logprob: -13.750174522399902
    8. 'asury' → logprob: -13.750174522399902
    9. 'azure' → logprob: -14.250174522399902
    10. 'asures' → logprob: -14.625174522399902

Token 139: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.004604334011673927
    2. '_y' → logprob: -5.754604339599609
    3. 'a' → logprob: -6.754604339599609
    4. '_' → logprob: -10.12960433959961
    5. 'as' → logprob: -10.12960433959961
    6. '_a' → logprob: -10.12960433959961
    7. 's' → logprob: -10.25460433959961
    8. 'e' → logprob: -10.75460433959961
    9. '_
' → logprob: -11.00460433959961
    10. 'r' → logprob: -11.25460433959961

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002891066251322627
    2. ' ,' → logprob: -8.250288963317871
    3. ',t' → logprob: -11.375288963317871
    4. ')' → logprob: -11.750288963317871
    5. ',y' → logprob: -12.750288963317871
    6. ',end' → logprob: -12.750288963317871
    7. 'tre' → logprob: -13.500288963317871
    8. ' tre' → logprob: -15.125288963317871
    9. ',
' → logprob: -15.375288963317871
    10. ',p' → logprob: -16.250289916992188

Token 141: ' treasure' (ID: 47849)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.03811195120215416
    2. ' treasure' → logprob: -3.288111925125122
    3. ' tre' → logprob: -9.663111686706543
    4. ''' → logprob: -12.788111686706543
    5. '"' → logprob: -12.913111686706543
    6. ' ' → logprob: -14.288111686706543
    7. ' '' → logprob: -14.663111686706543
    8. ' ' → logprob: -15.413111686706543
    9. 'Tre' → logprob: -16.78811264038086
    10. '   ' → logprob: -16.78811264038086

Token 142: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.26624128222465515
    2. 'asure' → logprob: -1.7662413120269775
    3. 'y' → logprob: -3.1412413120269775
    4. 'sure' → logprob: -4.141241073608398
    5. 'as' → logprob: -6.266241073608398
    6. 's' → logprob: -7.141241073608398
    7. 'a' → logprob: -8.141241073608398
    8. 'asury' → logprob: -8.516241073608398
    9. 'asy' → logprob: -8.891241073608398
    10. 'e' → logprob: -10.016241073608398

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.500000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '')' → logprob: -17.125
    5. ')`' → logprob: -18.0
    6. '))' → logprob: -18.375
    7. '")' → logprob: -19.125
    8. '`)' → logprob: -19.125
    9. ')#' → logprob: -19.25
    10. '}' → logprob: -19.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 141
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 122
Précision stricte (1ère position): 49.65%
Précision adaptée (1ère position): 51.77%
Précision (top 10): 86.52%
================================================================================
