================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache
s = input()
n = len(s)
digits = list(map(int, s))

# Precompute prefix sums of digits
sum_s = sum(digits)

# Compute prod_s modulo nothing (we need exact big int)
prod_s = 1
for d in digits:
    prod_s *= (d+1)

# Convert s to integer
int_s = int(s)

# max sum is 9 * n
max_sum = 9 * n

# For sums and products, we store dp states:
# dp_sum[count][sum] = number of sequences of length count with sum of digits = sum
# We need to count sequences less than s, in order defined:
# sequences less than s = sequences with sum < sum_s
# + sequences with sum==sum_s and prod < prod_s
# + sequences with sum==sum_s and prod==prod_s and int < int_s

# The main challenge is dealing with large product space.
# But product can be up to (10)^n which is huge.
# We will note that the (d_i +1) are in [1..10]

# Let's factorize product in prime factors 2,3,5,7
# since 10=2*5, digits+1 in 1..10
# primes = [2,3,5,7]
# we encode product by exponents of these primes

primes = [2,3,5,7]
def prime_factors(x):
    res = [0]*4
    for i,p in enumerate(primes):
        while x % p == 0:
            res[i]+=1
            x//=p
    return tuple(res)

prod_factors = tuple(0 if d==0 else prime_factors(d+1) for d in digits)

# Since prod_s = product of digits+1
# We can combine factors by summing tuple components

def add_factors(a,b):
    return tuple(x+y for x,y in zip(a,b))

def less_factor(a,b):
    # return True if a < b in lex order
    # but here factors are exponents, compare as integers
    # Since factorization represents product,
    # compare by cross multiply is complicated, but 
    # since we compare products, compare tuple lex order
    # but actually we want numeric comparison:
    # We can compare by log(product)
    # log_p = sum of exponents * log(prime)
    log_primes = [0.6931471805599453, 1.0986122886681098, 1.6094379124341003, 1.9459101490553132]
    la = sum(a[i]*log_primes[i] for i in range(4))
    lb = sum(b[i]*log_primes[i] for i in range(4))
    return la < lb

# Compute prod_s factors:
prod_s_factor = (0,0,0,0)
for d in digits:
    prod_s_factor = add_factors(prod_s_factor, prime_factors(d+1))

@lru_cache(None)
def dp_sum_prod(pos, sumd, prodf):
    # return number of sequences of length pos with sum sumd and prod factors prodf
    if pos==0:
        return 1 if sumd==0 else 0
    total = 0
    for dig in range(10):
        if sumd - dig < 0:
            break
        pf = prime_factors(dig+1)
        newf = add_factors(prodf,pf)
        total += dp_sum_prod(pos-1, sumd-dig, newf)
    return total

# We will iterate sum from 0 to sum_s-1 and sum==sum_s separately

# count sequences with sum < sum_s
ans = 0
memo_sp = {}
def dfs_sum_prod(pos, sumd, prodf):
    key = (pos,sumd,prodf)
    if key in memo_sp:
        return memo_sp[key]
    if pos==n:
        return 1 if sumd==0 else 0
    if sumd<0:
        return 0
    res=0
    for dig in range(10):
        if sumd - dig <0:
            break
        pf = prime_factors(dig+1)
        newf = add_factors(prodf,pf)
        res += dfs_sum_prod(pos+1, sumd-dig, newf)
    memo_sp[key]=res
    return res

# sum < sum_s
for sm in range(sum_s):
    ans += dfs_sum_prod(0, sm, (0,0,0,0))

# Now sequences with sum == sum_s and product < prod_s_factor
# Another DP with prod factor state for sum_s

@lru_cache(None)
def dfs_sum_eq_prod_less(pos, prodf, less_flag):
    # less_flag: whether product factor already less than prod_s_factor, so no constraint
    if pos == n:
        return 1
    total = 0
    for dig in range(10):
        pf = prime_factors(dig+1)
        newf = add_factors(prodf, pf)
        if less_flag:
            total += dfs_sum_eq_prod_less(pos+1, newf, True)
        else:
            # check if newf < prod_s_factor prefix
            # We do lex compare factor by factor
            # But primes=4, so compare as tuple
            # If newf < prod_s_factor => less_flag=True
            # If newf == prod_s_factor => less_flag=False
            # else break
            # But we need to check sum digits as well

            # We must ensure the total digits sum is sum_s, so only generate digits that sum up to sum_s
            # So prune by sum digits: handled outside
            # So here we just compare products incrementally

            # Since product factors can only increase, if newf > prod_s_factor, skip
            # Compare newf and prod_s_factor lex order

            # Check if newf[i] > prod_s_factor[i]
            for i in range(4):
                if newf[i] > prod_s_factor[i]:
                    break
                if newf[i] < prod_s_factor[i]:
                    total += dfs_sum_eq_prod_less(pos+1, newf, True)
                    break
            else:
                # equal so far, less_flag remains False
                total += dfs_sum_eq_prod_less(pos+1, newf, False)
    return total

# The above ignores sum constraint, need to track sum digits

# So redesign:

@lru_cache(None)
def dfs_sum_eq_prod_less_sum(pos, sumd, prodf, less_flag):
    if pos == n:
        return 1 if sumd == 0 else 0
    res = 0
    for dig in range(10):
        if sumd - dig < 0:
            break
        pf = prime_factors(dig+1)
        newf = add_factors(prodf, pf)
        if less_flag:
            res += dfs_sum_eq_prod_less_sum(pos+1, sumd - dig, newf, True)
        else:
            # Check if newf > prod_s_factor, skip
            # compare newf and prod_s_factor
            # If newf > prod_s_factor, skip
            for i in range(4):
                if newf[i] > prod_s_factor[i]:
                    break
                if newf[i] < prod_s_factor[i]:
                    res += dfs_sum_eq_prod_less_sum(pos+1, sumd - dig, newf, True)
                    break
            else:
                # equal so far, less_flag stays False
                res += dfs_sum_eq_prod_less_sum(pos+1, sumd - dig, newf, False)
    return res

ans += dfs_sum_eq_prod_less_sum(0, sum_s, (0,0,0,0), False)

# Now sequences with sum==sum_s and prod==prod_s_factor and int < int_s
# To count that, we enumerate sequences digit by digit with those constraints

# We basically count sequences s' with same sum, prod and s' < s in decimal lex order

@lru_cache(None)
def dfs_final(pos, sumd, prodf, less_flag):
    if pos == n:
        return 1 if sumd == 0 else 0
    res = 0
    limit = digits[pos] if not less_flag else 9
    for dig in range(limit+1):
        if sumd - dig <0:
            break
        pf = prime_factors(dig+1)
        newf = add_factors(prodf, pf)
        if newf > prod_s_factor:
            continue
        if newf < prod_s_factor:
            continue
        new_less_flag = less_flag or (dig < digits[pos])
        res += dfs_final(pos+1, sumd - dig, newf, new_less_flag)
    return res

# The above counts sequences <= s, but we want < s, so subtract 1 if applicable
# but dfs_final counts sequences with prod == prod_s_factor, sum == sum_s

count_eq_prod_sum_less_int = dfs_final(0, sum_s, (0,0,0,0), False) - 1

ans += count_eq_prod_sum_less_int

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3717036545276642
    2. 'partial' → logprob: -1.3717036247253418
    3. 'reduce' → logprob: -3.121703624725342
    4. ' wraps' → logprob: -4.746703624725342
    5. 'l' → logprob: -6.121703624725342
    6. 'cached' → logprob: -7.121703624725342
    7. 'cache' → logprob: -8.1217041015625
    8. '```' → logprob: -8.4967041015625
    9. ' partial' → logprob: -8.8717041015625
    10. 'cmp' → logprob: -8.8717041015625

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -2.069664333248511e-05
    2. 'partial' → logprob: -11.750020980834961
    3. 'wrap' → logprob: -12.375020980834961
    4. 'reduce' → logprob: -12.875020980834961
    5. 'ruz' → logprob: -13.000020980834961
    6. 'z' → logprob: -13.500020980834961
    7. 'ambda' → logprob: -14.625020980834961
    8. '```' → logprob: -15.125020980834961
    9. '_ru' → logprob: -15.500020980834961
    10. 'r' → logprob: -15.625020980834961

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.033753350377082825
    2. 'cache' → logprob: -4.283753395080566
    3. '_c' → logprob: -4.408753395080566
    4. 'c' → logprob: -5.033753395080566
    5. '_' → logprob: -8.158753395080566
    6. 'm' → logprob: -9.283753395080566
    7. '_ca' → logprob: -9.658753395080566
    8. '_cached' → logprob: -10.033753395080566
    9. 't' → logprob: -10.283753395080566
    10. 'ch' → logprob: -10.533753395080566

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10960971564054489
    2. '@' → logprob: -2.984609603881836
    3. 'def' → logprob: -2.984609603881836
    4. '```' → logprob: -6.359609603881836
    5. '\(' → logprob: -7.859609603881836
    6. '(
' → logprob: -8.359609603881836
    7. '\' → logprob: -9.359609603881836
    8. 'd' → logprob: -9.984609603881836
    9. 'de' → logprob: -10.234609603881836
    10. '(def' → logprob: -10.734609603881836

Token 7: 's' (ID: 82)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.24036239087581635
    2. '(' → logprob: -1.6153624057769775
    3. '\' → logprob: -5.365362167358398
    4. 'def' → logprob: -5.365362167358398
    5. '```' → logprob: -6.365362167358398
    6. '\(' → logprob: -6.865362167358398
    7. '(
' → logprob: -7.115362167358398
    8. '@
' → logprob: -7.240362167358398
    9. 'd' → logprob: -8.365362167358398
    10. '\n' → logprob: -8.740362167358398

Token 8: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4354802072048187
    2. 'u' → logprob: -2.0604801177978516
    3. '@' → logprob: -2.1854801177978516
    4. 't' → logprob: -2.5604801177978516
    5. 'i' → logprob: -3.9354801177978516
    6. '```' → logprob: -5.810480117797852
    7. ')' → logprob: -6.060480117797852
    8. '=' → logprob: -6.685480117797852
    9. 'q' → logprob: -6.935480117797852
    10. 'm' → logprob: -7.185480117797852

Token 9: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6680218577384949
    2. ' "' → logprob: -1.7930219173431396
    3. ''' → logprob: -2.5430219173431396
    4. ' ' → logprob: -2.9180219173431396
    5. ' ""' → logprob: -3.1680219173431396
    6. ' '' → logprob: -3.2930219173431396
    7. ' ''' → logprob: -3.2930219173431396
    8. '''' → logprob: -3.6680219173431396
    9. '""' → logprob: -3.7930219173431396
    10. ''s' → logprob: -4.9180216789245605

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04499538615345955
    2. ''' → logprob: -3.9199953079223633
    3. '"' → logprob: -4.669995307922363
    4. '`' → logprob: -5.169995307922363
    5. '('' → logprob: -5.919995307922363
    6. '(
' → logprob: -6.419995307922363
    7. '```' → logprob: -6.419995307922363
    8. ')' → logprob: -7.044995307922363
    9. '()' → logprob: -7.794995307922363
    10. '(

' → logprob: -8.169995307922363

Token 11: 'n' (ID: 77)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0003609680861700326
    2. '@
' → logprob: -8.625361442565918
    3. '@s' → logprob: -10.250361442565918
    4. '@n' → logprob: -10.250361442565918
    5. 'for' → logprob: -10.375361442565918
    6. 'print' → logprob: -11.000361442565918
    7. '```' → logprob: -11.250361442565918
    8. '@if' → logprob: -11.375361442565918
    9. 'result' → logprob: -12.250361442565918
    10. '@m' → logprob: -12.500361442565918

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1687121391296387
    2. '=' → logprob: -1.2937121391296387
    3. '_' → logprob: -1.7937121391296387
    4. '.' → logprob: -2.2937121391296387
    5. 'x' → logprob: -2.6687121391296387
    6. '[' → logprob: -3.0437121391296387
    7. ' ' → logprob: -4.168712139129639
    8. ')' → logprob: -5.918712139129639
    9. 'xt' → logprob: -5.918712139129639
    10. '+' → logprob: -6.668712139129639

Token 13: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5813626646995544
    2. 'len' → logprob: -0.8313626646995544
    3. 'int' → logprob: -5.581362724304199
    4. ' int' → logprob: -6.456362724304199
    5. ' ' → logprob: -9.8313627243042
    6. '0' → logprob: -12.2063627243042
    7. '10' → logprob: -12.3313627243042
    8. '(len' → logprob: -13.4563627243042
    9. '1' → logprob: -13.5813627243042
    10. ' s' → logprob: -13.8313627243042

Token 14: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00035250463406555355
    2. '(' → logprob: -8.00035285949707
    3. 's' → logprob: -11.00035285949707
    4. '(n' → logprob: -15.25035285949707
    5. '(
' → logprob: -16.37535285949707
    6. '(str' → logprob: -18.12535285949707
    7. ' (' → logprob: -18.12535285949707
    8. ')' → logprob: -18.25035285949707
    9. '(`' → logprob: -19.25035285949707
    10. '(

' → logprob: -19.25035285949707

Token 15: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2378600735682994e-05
    2. '))' → logprob: -10.875032424926758
    3. '[' → logprob: -12.250032424926758
    4. ' )' → logprob: -12.375032424926758
    5. '`)' → logprob: -13.875032424926758
    6. '')' → logprob: -14.125032424926758
    7. ')
' → logprob: -14.875032424926758
    8. ')))' → logprob: -14.875032424926758
    9. '()' → logprob: -15.375032424926758
    10. '#' → logprob: -15.375032424926758

Token 16: 'digits' (ID: 135574)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -8.578184497309849e-05
    2. '@
' → logprob: -9.750085830688477
    3. '@if' → logprob: -11.500085830688477
    4. '@n' → logprob: -12.375085830688477
    5. '```' → logprob: -12.625085830688477
    6. 'for' → logprob: -13.000085830688477
    7. '@s' → logprob: -13.875085830688477
    8. '@index' → logprob: -14.000085830688477
    9. '@

' → logprob: -14.000085830688477
    10. '@\' → logprob: -14.250085830688477

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7940805554389954
    2. '=' → logprob: -1.0440804958343506
    3. '_' → logprob: -2.1690804958343506
    4. ' =' → logprob: -2.5440804958343506
    5. 's' → logprob: -7.41908073425293
    6. '_count' → logprob: -7.54408073425293
    7. ']' → logprob: -8.04408073425293
    8. '[]' → logprob: -8.16908073425293
    9. ')' → logprob: -8.29408073425293
    10. '_counts' → logprob: -8.29408073425293

Token 18: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.30929216742515564
    2. '[' → logprob: -2.0592920780181885
    3. ' []' → logprob: -2.4342920780181885
    4. '[]' → logprob: -3.4342920780181885
    5. '[int' → logprob: -4.934292316436768
    6. '[s' → logprob: -5.309292316436768
    7. ' list' → logprob: -5.934292316436768
    8. 'list' → logprob: -6.684292316436768
    9. '[list' → logprob: -7.309292316436768
    10. 's' → logprob: -7.434292316436768

Token 19: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049166906625032425
    2. '(s' → logprob: -3.0491669178009033
    3. '(range' → logprob: -7.674166679382324
    4. '(str' → logprob: -10.424166679382324
    5. '(int' → logprob: -10.799166679382324
    6. '(

' → logprob: -11.424166679382324
    7. '(
' → logprob: -11.549166679382324
    8. '('' → logprob: -11.924166679382324
    9. '((' → logprob: -11.924166679382324
    10. '(d' → logprob: -12.049166679382324

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010431708069518209
    2. '(str' → logprob: -7.501043319702148
    3. '(' → logprob: -8.376043319702148
    4. 'int' → logprob: -8.501043319702148
    5. '(lambda' → logprob: -10.501043319702148
    6. '<int' → logprob: -11.126043319702148
    7. '[int' → logprob: -12.376043319702148
    8. '(ord' → logprob: -12.376043319702148
    9. 'str' → logprob: -12.876043319702148
    10. '=int' → logprob: -13.626043319702148

Token 21: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.026717301458120346
    2. '(' → logprob: -3.651717185974121
    3. 's' → logprob: -8.026717185974121
    4. ' (' → logprob: -10.526717185974121
    5. ')' → logprob: -10.901717185974121
    6. '))' → logprob: -11.151717185974121
    7. '(
' → logprob: -11.901717185974121
    8. ',' → logprob: -12.276717185974121
    9. '((' → logprob: -12.401717185974121
    10. '(input' → logprob: -12.776717185974121

Token 22: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02094215713441372
    2. ' s' → logprob: -3.895942211151123
    3. 'list' → logprob: -8.520941734313965
    4. '(s' → logprob: -8.645941734313965
    5. ' list' → logprob: -11.020941734313965
    6. ')' → logprob: -12.395941734313965
    7. ')s' → logprob: -13.770941734313965
    8. 'str' → logprob: -13.770941734313965
    9. '(' → logprob: -14.895941734313965
    10. 'input' → logprob: -15.145941734313965

Token 23: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017576448153704405
    2. ')))' → logprob: -7.251757621765137
    3. '[' → logprob: -7.501757621765137
    4. ')' → logprob: -7.751757621765137
    5. '[s' → logprob: -10.251757621765137
    6. ']))' → logprob: -12.001757621765137
    7. '[n' → logprob: -12.376757621765137
    8. 's' → logprob: -12.876757621765137
    9. ' ))' → logprob: -13.501757621765137
    10. '[]' → logprob: -13.501757621765137

Token 24: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00014096579980105162
    2. '@
' → logprob: -9.125141143798828
    3. '```' → logprob: -11.875141143798828
    4. '@n' → logprob: -12.000141143798828
    5. 'd' → logprob: -12.125141143798828
    6. 'def' → logprob: -12.375141143798828
    7. '
' → logprob: -12.875141143798828
    8. '@

' → logprob: -13.125141143798828
    9. '@index' → logprob: -13.625141143798828
    10. 'n' → logprob: -14.375141143798828

Token 25: ' Pre' (ID: 4659)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.014018700458109379
    2. ' @' → logprob: -4.514018535614014
    3. 'def' → logprob: -6.264018535614014
    4. 'l' → logprob: -7.639018535614014
    5. 'dp' → logprob: -8.014019012451172
    6. 'from' → logprob: -9.139019012451172
    7. ' l' → logprob: -10.014019012451172
    8. 'for' → logprob: -10.264019012451172
    9. '```' → logprob: -11.389019012451172
    10. ' def' → logprob: -11.639019012451172

Token 26: 'compute' (ID: 54521)
  Prédit: 'vious'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vious' → logprob: -0.8179123401641846
    2. 'v' → logprob: -2.0679123401641846
    3. 'sum' → logprob: -2.5679123401641846
    4. 'viously' → logprob: -2.5679123401641846
    5. 'fix' → logprob: -2.8179123401641846
    6. 'd' → logprob: -2.9429123401641846
    7. 'compute' → logprob: -3.3179123401641846
    8. 's' → logprob: -3.4429123401641846
    9. 'def' → logprob: -4.1929121017456055
    10. 'comput' → logprob: -4.5679121017456055

Token 27: ' prefix' (ID: 18633)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.0571166276931763
    2. 'dp' → logprob: -1.8071166276931763
    3. ')' → logprob: -2.1821165084838867
    4. 'factor' → logprob: -2.3071165084838867
    5. ' factorial' → logprob: -2.9321165084838867
    6. 'pow' → logprob: -3.3071165084838867
    7. ' pow' → logprob: -3.9321165084838867
    8. 'div' → logprob: -4.307116508483887
    9. '```' → logprob: -4.432116508483887
    10. ' counts' → logprob: -4.432116508483887

Token 28: ' sums' (ID: 73121)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4782041609287262
    2. '_sum' → logprob: -1.2282041311264038
    3. '_' → logprob: -2.4782042503356934
    4. '_counts' → logprob: -6.103204250335693
    5. '_hash' → logprob: -7.603204250335693
    6. 'sum' → logprob: -8.603203773498535
    7. 's' → logprob: -9.478203773498535
    8. '_max' → logprob: -9.728203773498535
    9. '_products' → logprob: -9.978203773498535
    10. '_len' → logprob: -10.103203773498535

Token 29: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22437837719917297
    2. 'prefix' → logprob: -1.8493783473968506
    3. '_prefix' → logprob: -4.09937858581543
    4. 'psum' → logprob: -4.22437858581543
    5. ' prefix' → logprob: -4.97437858581543
    6. 'ps' → logprob: -6.22437858581543
    7. '_ps' → logprob: -6.59937858581543
    8. '[' → logprob: -7.72437858581543
    9. 'p' → logprob: -7.97437858581543
    10. 's' → logprob: -8.47437858581543

Token 30: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.3487589657306671
    2. 'digits' → logprob: -1.2237589359283447
    3. '_digits' → logprob: -9.348758697509766
    4. 'd' → logprob: -9.973758697509766
    5. 'digit' → logprob: -9.973758697509766
    6. ' the' → logprob: -10.223758697509766
    7. ' digit' → logprob: -11.098758697509766
    8. ')' → logprob: -11.348758697509766
    9. 's' → logprob: -11.473758697509766
    10. 'prefix' → logprob: -11.598758697509766

Token 31: '
' (ID: 198)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.05765245854854584
    2. ' prefix' → logprob: -3.682652473449707
    3. 'psum' → logprob: -4.307652473449707
    4. '_prefix' → logprob: -5.182652473449707
    5. '_' → logprob: -5.307652473449707
    6. 'pre' → logprob: -6.057652473449707
    7. 'ps' → logprob: -6.682652473449707
    8. ':' → logprob: -7.432652473449707
    9. 'pres' → logprob: -7.557652473449707
    10. 'sum' → logprob: -7.807652473449707

Token 32: 'sum' (ID: 12298)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.05109109356999397
    2. 'psum' → logprob: -3.801091194152832
    3. 'pre' → logprob: -4.801091194152832
    4. ' prefix' → logprob: -5.176091194152832
    5. 'p' → logprob: -5.176091194152832
    6. 'ps' → logprob: -5.801091194152832
    7. '_prefix' → logprob: -6.301091194152832
    8. '_' → logprob: -7.051091194152832
    9. 'pres' → logprob: -7.176091194152832
    10. 'sum' → logprob: -8.176091194152832

Token 33: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016547704115509987
    2. '_' → logprob: -4.266547679901123
    3. '_digits' → logprob: -6.391547679901123
    4. '_prefix' → logprob: -7.891547679901123
    5. '_s' → logprob: -8.141548156738281
    6. '_sum' → logprob: -11.141548156738281
    7. '_=' → logprob: -11.891548156738281
    8. ' =' → logprob: -11.891548156738281
    9. '=' → logprob: -13.016548156738281
    10. '_digit' → logprob: -13.016548156738281

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7011480331420898
    2. '_' → logprob: -0.9511480331420898
    3. ' =' → logprob: -2.20114803314209
    4. 's' → logprob: -5.70114803314209
    5. '[' → logprob: -5.95114803314209
    6. ' ' → logprob: -8.07614803314209
    7. '_=' → logprob: -8.45114803314209
    8. '_prefix' → logprob: -9.07614803314209
    9. '=[' → logprob: -9.70114803314209
    10. ')' → logprob: -9.70114803314209

Token 35: ' sum' (ID: 4215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029759978875517845
    2. ' [' → logprob: -3.5297598838806152
    3. '0' → logprob: -12.654760360717773
    4. '[n' → logprob: -13.154760360717773
    5. '[d' → logprob: -13.279760360717773
    6. '[s' → logprob: -14.029760360717773
    7. '[len' → logprob: -14.779760360717773
    8. '[int' → logprob: -15.029760360717773
    9. ' ' → logprob: -15.154760360717773
    10. '[i' → logprob: -15.779760360717773

Token 36: '(d' (ID: 2572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49217599630355835
    2. 's' → logprob: -1.8671760559082031
    3. '_digits' → logprob: -2.117176055908203
    4. 'digits' → logprob: -2.992176055908203
    5. '_s' → logprob: -3.117176055908203
    6. '(' → logprob: -4.867176055908203
    7. '_d' → logprob: -5.742176055908203
    8. '[' → logprob: -5.867176055908203
    9. '_[' → logprob: -6.992176055908203
    10. 'prefix' → logprob: -7.117176055908203

Token 37: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0020826896652579308
    2. '[' → logprob: -7.252082824707031
    3. 'its' → logprob: -7.627082824707031
    4. 'digits' → logprob: -8.252082824707031
    5. '[i' → logprob: -8.502082824707031
    6. 's' → logprob: -9.377082824707031
    7. 'ig' → logprob: -9.752082824707031
    8. '[:' → logprob: -10.252082824707031
    9. 'igts' → logprob: -10.252082824707031
    10. '_digits' → logprob: -10.377082824707031

Token 38: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016937021166086197
    2. '[' → logprob: -4.516937255859375
    3. '[:' → logprob: -5.641937255859375
    4. ' )' → logprob: -7.016937255859375
    5. ' ' → logprob: -8.016937255859375
    6. 's' → logprob: -8.391937255859375
    7. ')
' → logprob: -8.391937255859375
    8. '(' → logprob: -8.641937255859375
    9. '[])' → logprob: -9.016937255859375
    10. ')+' → logprob: -9.891937255859375

Token 39: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6709855794906616
    2. '<|end|>' → logprob: -1.1709855794906616
    3. '_' → logprob: -3.295985698699951
    4. '\n' → logprob: -3.420985698699951
    5. '\' → logprob: -3.670985698699951
    6. 'n' → logprob: -4.045985698699951
    7. '#' → logprob: -4.420985698699951
    8. '```' → logprob: -4.545985698699951
    9. ')' → logprob: -5.170985698699951
    10. '<|end|>' → logprob: -5.295985698699951

Token 40: ' Compute' (ID: 45438)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.466558814048767
    2. 'for' → logprob: -2.3415589332580566
    3. 'prefix' → logprob: -2.3415589332580566
    4. 'dp' → logprob: -2.5915589332580566
    5. ' for' → logprob: -2.7165589332580566
    6. 'l' → logprob: -2.9665589332580566
    7. ' prefix' → logprob: -2.9665589332580566
    8. ' dp' → logprob: -3.3415589332580566
    9. '_' → logprob: -3.8415589332580566
    10. 'total' → logprob: -3.8415589332580566

Token 41: ' prod' (ID: 10207)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.4600156545639038
    2. ' dp' → logprob: -1.4600156545639038
    3. ' average' → logprob: -2.9600157737731934
    4. ' s' → logprob: -2.9600157737731934
    5. ' all' → logprob: -3.2100157737731934
    6. ' ans' → logprob: -3.3350157737731934
    7. ' prefix' → logprob: -3.3350157737731934
    8. ' sum' → logprob: -3.3350157737731934
    9. ' total' → logprob: -3.4600157737731934
    10. '_' → logprob: -3.5850157737731934

Token 42: '_s' (ID: 1278)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.0006789539474993944
    2. '=' → logprob: -8.125679016113281
    3. '_' → logprob: -9.000679016113281
    4. 'cut' → logprob: -9.375679016113281
    5. 'ct' → logprob: -9.750679016113281
    6. ' =' → logprob: -10.250679016113281
    7. 's' → logprob: -10.625679016113281
    8. 'duct' → logprob: -10.875679016113281
    9. 'u' → logprob: -12.250679016113281
    10. '```' → logprob: -12.250679016113281

Token 43: ' modulo' (ID: 112372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2926681935787201
    2. '=' → logprob: -1.9176682233810425
    3. ' =' → logprob: -2.917668104171753
    4. '_s' → logprob: -3.167668104171753
    5. 's' → logprob: -5.167668342590332
    6. '*' → logprob: -6.667668342590332
    7. 'prod' → logprob: -7.292668342590332
    8. '_prod' → logprob: -7.292668342590332
    9. '_=' → logprob: -7.542668342590332
    10. 'd' → logprob: -8.292668342590332

Token 44: ' nothing' (ID: 6939)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35530030727386475
    2. '10' → logprob: -2.1053004264831543
    3. ' (' → logprob: -2.4803004264831543
    4. '100' → logprob: -3.7303004264831543
    5. '(' → logprob: -4.230300426483154
    6. 's' → logprob: -4.480300426483154
    7. ' =' → logprob: -5.480300426483154
    8. 'sum' → logprob: -5.480300426483154
    9. '1' → logprob: -5.605300426483154
    10. ' n' → logprob: -5.855300426483154

Token 45: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13301636278629303
    2. '=' → logprob: -2.508016347885132
    3. '*' → logprob: -4.383016586303711
    4. ' =' → logprob: -4.508016586303711
    5. 's' → logprob: -4.758016586303711
    6. '_s' → logprob: -5.508016586303711
    7. ' ' → logprob: -5.883016586303711
    8. '_prod' → logprob: -7.508016586303711
    9. 'prod' → logprob: -7.633016586303711
    10. '_pro' → logprob: -7.633016586303711

Token 46: 'we' (ID: 854)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4112657904624939
    2. ' )' → logprob: -1.5362658500671387
    3. ' ' → logprob: -2.9112658500671387
    4. '1' → logprob: -3.5362658500671387
    5. ' sum' → logprob: -4.911265850067139
    6. 'sum' → logprob: -5.036265850067139
    7. 's' → logprob: -5.161265850067139
    8. ' n' → logprob: -5.786265850067139
    9. ' s' → logprob: -5.911265850067139
    10. ' =' → logprob: -6.536265850067139

Token 47: ' need' (ID: 1309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7099238038063049
    2. '=' → logprob: -1.0849237442016602
    3. ' =' → logprob: -1.9599237442016602
    4. ' ' → logprob: -4.08492374420166
    5. '*' → logprob: -5.58492374420166
    6. '<|end|>' → logprob: -6.83492374420166
    7. ' )' → logprob: -6.95992374420166
    8. ',' → logprob: -7.45992374420166
    9. ']' → logprob: -7.58492374420166
    10. '**' → logprob: -7.58492374420166

Token 48: ' exact' (ID: 6354)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17104347050189972
    2. ' to' → logprob: -3.0460433959960938
    3. 'to' → logprob: -3.1710433959960938
    4. '*' → logprob: -4.046043395996094
    5. ' *' → logprob: -4.546043395996094
    6. ' )' → logprob: -4.796043395996094
    7. ' ' → logprob: -5.046043395996094
    8. 's' → logprob: -5.296043395996094
    9. '1' → logprob: -5.546043395996094
    10. ' the' → logprob: -5.921043395996094

Token 49: ' big' (ID: 3464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1791132688522339
    2. ' ' → logprob: -2.9291133880615234
    3. ' )' → logprob: -3.4291133880615234
    4. ' product' → logprob: -3.6791133880615234
    5. '*' → logprob: -4.304113388061523
    6. '*)' → logprob: -4.554113388061523
    7. ' value' → logprob: -4.679113388061523
    8. ' *)' → logprob: -5.804113388061523
    9. 's' → logprob: -5.929113388061523
    10. '_' → logprob: -5.929113388061523

Token 50: ' int' (ID: 677)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.6874727606773376
    2. 'int' → logprob: -1.6874728202819824
    3. 'inte' → logprob: -2.5624728202819824
    4. ')' → logprob: -2.8124728202819824
    5. ' *' → logprob: -3.1874728202819824
    6. '*' → logprob: -3.4374728202819824
    7. 'ints' → logprob: -3.8124728202819824
    8. ' integer' → logprob: -3.9374728202819824
    9. 'integer' → logprob: -4.062472820281982
    10. 's' → logprob: -4.187472820281982

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025289691984653473
    2. ' )' → logprob: -4.400289535522461
    3. 's' → logprob: -4.525289535522461
    4. '_product' → logprob: -7.900289535522461
    5. '*)' → logprob: -8.400289535522461
    6. 'product' → logprob: -8.525289535522461
    7. 'prod' → logprob: -9.025289535522461
    8. ' product' → logprob: -9.150289535522461
    9. '_prod' → logprob: -9.150289535522461
    10. ' ' → logprob: -9.275289535522461

Token 52: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.5009734630584717
    2. '1' → logprob: -1.8759734630584717
    3. '*' → logprob: -2.5009734630584717
    4. 's' → logprob: -3.3759734630584717
    5. '_' → logprob: -3.6259734630584717
    6. 'p' → logprob: -3.8759734630584717
    7. 'digits' → logprob: -4.375973701477051
    8. 'product' → logprob: -4.375973701477051
    9. '_prod' → logprob: -4.750973701477051
    10. '```' → logprob: -5.250973701477051

Token 53: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.009850174188613892
    2. '_' → logprob: -4.634850025177002
    3. 's' → logprob: -9.63485050201416
    4. '=' → logprob: -11.00985050201416
    5. ' =' → logprob: -12.13485050201416
    6. '_=' → logprob: -12.63485050201416
    7. '=_' → logprob: -14.00985050201416
    8. ' _' → logprob: -14.63485050201416
    9. '```' → logprob: -15.00985050201416
    10. '_prod' → logprob: -15.50985050201416

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603759378194809
    2. '=' → logprob: -1.910375952720642
    3. '_' → logprob: -9.160375595092773
    4. 's' → logprob: -10.035375595092773
    5. '_=' → logprob: -13.910375595092773
    6. ',' → logprob: -14.410375595092773
    7. ' ' → logprob: -14.785375595092773
    8. '_s' → logprob: -15.035375595092773
    9. '=[]' → logprob: -16.410375595092773
    10. '=int' → logprob: -16.535375595092773

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. 'digits' → logprob: -16.625
    4. '```' → logprob: -17.625
    5. 'int' → logprob: -17.875
    6. '   ' → logprob: -18.25
    7. '`' → logprob: -19.5
    8. 'eval' → logprob: -19.5
    9. 'prod' → logprob: -19.75
    10. '=' → logprob: -20.0

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. 'digits' → logprob: -15.000000953674316
    3. 'int' → logprob: -15.250000953674316
    4. ' ' → logprob: -15.500000953674316
    5. '```' → logprob: -16.000001907348633
    6. 'eval' → logprob: -16.750001907348633
    7. 'pow' → logprob: -17.875001907348633
    8. '`' → logprob: -18.000001907348633
    9. 'prod' → logprob: -18.000001907348633
    10. '(' → logprob: -18.625001907348633

Token 57: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034912578761577606
    2. ' for' → logprob: -3.534912586212158
    3. '*' → logprob: -5.659912586212158
    4. '<|end|>' → logprob: -6.534912586212158
    5. '<|end|>' → logprob: -10.284912109375
    6. '```' → logprob: -10.409912109375
    7. '
' → logprob: -10.534912109375
    8. ' ' → logprob: -10.659912109375
    9. '  
' → logprob: -11.159912109375
    10. ' *' → logprob: -11.784912109375

Token 58: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3875284194946289
    2. ' for' → logprob: -1.137528419494629
    3. '*' → logprob: -7.512528419494629
    4. ' ' → logprob: -9.887528419494629
    5. '<|end|>' → logprob: -10.262528419494629
    6. '	for' → logprob: -12.262528419494629
    7. ')' → logprob: -12.387528419494629
    8. ' *' → logprob: -12.512528419494629
    9. '_' → logprob: -12.637528419494629
    10. '#' → logprob: -13.887528419494629

Token 59: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04886212944984436
    2. ' d' → logprob: -3.0488622188568115
    3. 'digit' → logprob: -8.29886245727539
    4. ' digit' → logprob: -11.04886245727539
    5. 'i' → logprob: -12.04886245727539
    6. 'x' → logprob: -13.54886245727539
    7. '```' → logprob: -13.67386245727539
    8. ' i' → logprob: -14.17386245727539
    9. 'dig' → logprob: -14.92386245727539
    10. '   ' → logprob: -15.42386245727539

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036561263259500265
    2. 'in' → logprob: -5.628655910491943
    3. ' ' → logprob: -10.378656387329102
    4. 'd' → logprob: -11.253656387329102
    5. 's' → logprob: -11.753656387329102
    6. 'n' → logprob: -14.003656387329102
    7. 'i' → logprob: -14.378656387329102
    8. '  ' → logprob: -14.503656387329102
    9. ' i' → logprob: -14.753656387329102
    10. '	in' → logprob: -15.191156387329102

Token 61: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.3869155943393707
    2. ' digits' → logprob: -1.1369155645370483
    3. 'igits' → logprob: -10.13691520690918
    4. 'd' → logprob: -12.38691520690918
    5. '_digits' → logprob: -14.13691520690918
    6. 'Digits' → logprob: -17.13691520690918
    7. 'digit' → logprob: -17.38691520690918
    8. '	d' → logprob: -18.26191520690918
    9. ' ' → logprob: -18.38691520690918
    10. '```' → logprob: -19.38691520690918

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.145118848304264e-05
    2. ':
' → logprob: -11.000051498413086
    3. ' :' → logprob: -11.250051498413086
    4. '<|end|>' → logprob: -12.250051498413086
    5. '   ' → logprob: -12.625051498413086
    6. '):' → logprob: -12.750051498413086
    7. ',' → logprob: -13.250051498413086
    8. '=' → logprob: -13.250051498413086
    9. ':**' → logprob: -13.375051498413086
    10. '```' → logprob: -14.250051498413086

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006308307871222496
    2. ' prod' → logprob: -5.381308078765869
    3. ' ' → logprob: -7.381308078765869
    4. '    ' → logprob: -8.131308555603027
    5. 'prod' → logprob: -8.381308555603027
    6. '  ' → logprob: -8.756308555603027
    7. ' *' → logprob: -9.256308555603027
    8. ' if' → logprob: -9.506308555603027
    9. '```' → logprob: -9.631308555603027
    10. ':' → logprob: -10.881308555603027

Token 64: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' (adapté à ' prod') → logprob: -0.201786071062088
    2. ' prod' → logprob: -1.7017860412597656
    3. '   ' → logprob: -8.201786041259766
    4. ' product' → logprob: -10.326786041259766
    5. 'product' → logprob: -10.576786041259766
    6. '```' → logprob: -11.451786041259766
    7. '_prod' → logprob: -11.826786041259766
    8. ' if' → logprob: -11.951786041259766
    9. 'if' → logprob: -12.576786041259766
    10. '.prod' → logprob: -12.701786041259766

Token 65: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.5928495486150496e-05
    2. '_' → logprob: -11.125016212463379
    3. 's' → logprob: -14.500016212463379
    4. '_d' → logprob: -15.750016212463379
    5. ' _' → logprob: -16.125015258789062
    6. '=' → logprob: -16.625015258789062
    7. '```' → logprob: -17.000015258789062
    8. 'prod' → logprob: -17.125015258789062
    9. '=_' → logprob: -17.625015258789062
    10. '_a' → logprob: -17.750015258789062

Token 66: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0016820825403556228
    2. ' *=' → logprob: -6.501682281494141
    3. '*' → logprob: -8.62668228149414
    4. '=' → logprob: -14.75168228149414
    5. '```' → logprob: -17.37668228149414
    6. ' ' → logprob: -17.62668228149414
    7. '**' → logprob: -18.37668228149414
    8. '	' → logprob: -18.50168228149414
    9. '*>' → logprob: -19.12668228149414
    10. ' ' → logprob: -19.12668228149414

Token 67: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0206720617134124e-05
    2. ' d' → logprob: -11.50001049041748
    3. '	d' → logprob: -21.625009536743164
    4. ')d' → logprob: -22.000009536743164
    5. '   ' → logprob: -22.250009536743164
    6. '_d' → logprob: -22.625009536743164
    7. '%d' → logprob: -22.875009536743164
    8. ' ' → logprob: -23.000009536743164
    9. 'int' → logprob: -23.375009536743164
    10. '*d' → logprob: -23.500009536743164

Token 68: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3306015716807451e-05
    2. ' d' → logprob: -11.25001335144043
    3. ')' → logprob: -16.37501335144043
    4. ')d' → logprob: -16.50001335144043
    5. '   ' → logprob: -16.62501335144043
    6. ' ' → logprob: -19.75001335144043
    7. '  ' → logprob: -19.87501335144043
    8. '	d' → logprob: -21.87501335144043
    9. '    ' → logprob: -22.12501335144043
    10. '```' → logprob: -22.50001335144043

Token 69: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02941879630088806
    2. ' +' → logprob: -4.4044189453125
    3. '+)' → logprob: -4.7794189453125
    4. ')' → logprob: -5.1544189453125
    5. ' or' → logprob: -6.5294189453125
    6. ' if' → logprob: -7.0294189453125
    7. 'if' → logprob: -9.0294189453125
    8. ' )' → logprob: -9.2794189453125
    9. '+
' → logprob: -11.9044189453125
    10. 'or' → logprob: -11.9044189453125

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011013990733772516
    2. ' ' → logprob: -6.876101493835449
    3. '0' → logprob: -9.62610149383545
    4. 's' → logprob: -14.25110149383545
    5. '2' → logprob: -15.00110149383545
    6. ')' → logprob: -15.25110149383545
    7. '+' → logprob: -15.56360149383545
    8. '   ' → logprob: -16.001100540161133
    9. '10' → logprob: -16.063600540161133
    10. '9' → logprob: -16.251100540161133

Token 71: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ' )' → logprob: -11.875009536743164
    3. ')#' → logprob: -14.250009536743164
    4. ')
' → logprob: -14.625009536743164
    5. ')**' → logprob: -15.375009536743164
    6. ')return' → logprob: -15.875009536743164
    7. '))' → logprob: -16.000009536743164
    8. ')}}' → logprob: -16.000009536743164
    9. ')`' → logprob: -16.250009536743164
    10. '<|end|>' → logprob: -16.375009536743164

Token 72: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.07192570716142654
    2. '
' → logprob: -4.071925640106201
    3. '#' → logprob: -4.446925640106201
    4. ')' → logprob: -5.071925640106201
    5. 'print' → logprob: -5.321925640106201
    6. '<|end|>' → logprob: -5.446925640106201
    7. 'n' → logprob: -5.571925640106201
    8. 'def' → logprob: -6.071925640106201
    9. 'max' → logprob: -6.446925640106201
    10. '+' → logprob: -6.446925640106201

Token 73: ' Convert' (ID: 15629)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.04385901242494583
    2. ' @' → logprob: -3.7938590049743652
    3. 'def' → logprob: -4.293859004974365
    4. '#' → logprob: -5.668859004974365
    5. ' def' → logprob: -7.418859004974365
    6. 'from' → logprob: -7.418859004974365
    7. 'print' → logprob: -7.793859004974365
    8. ' #' → logprob: -8.543859481811523
    9. 'dp' → logprob: -8.543859481811523
    10. ' l' → logprob: -9.043859481811523

Token 74: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5823211073875427
    2. 'prod' → logprob: -1.3323211669921875
    3. ' s' → logprob: -2.5823211669921875
    4. ' prod' → logprob: -2.8323211669921875
    5. 'product' → logprob: -4.9573211669921875
    6. 'sum' → logprob: -5.0823211669921875
    7. 'digits' → logprob: -5.8323211669921875
    8. 'n' → logprob: -5.9573211669921875
    9. ' product' → logprob: -6.2073211669921875
    10. ')' → logprob: -6.3323211669921875

Token 75: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3774537444114685
    2. '_' → logprob: -2.0024538040161133
    3. '=' → logprob: -2.5024538040161133
    4. 's' → logprob: -4.252453804016113
    5. '[:]' → logprob: -4.252453804016113
    6. '_tokens' → logprob: -4.752453804016113
    7. '[' → logprob: -4.752453804016113
    8. '_to' → logprob: -5.127453804016113
    9. '[::-' → logprob: -5.252453804016113
    10. '_token' → logprob: -5.252453804016113

Token 76: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029321912676095963
    2. 'list' → logprob: -4.904322147369385
    3. ' int' → logprob: -5.029322147369385
    4. 'an' → logprob: -5.529322147369385
    5. 'integer' → logprob: -5.529322147369385
    6. 'a' → logprob: -6.154322147369385
    7. ' an' → logprob: -6.654322147369385
    8. ' list' → logprob: -7.154322147369385
    9. ' integer' → logprob: -7.404322147369385
    10. 'string' → logprob: -7.654322147369385

Token 77: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.285200595855713
    2. 'x' → logprob: -1.660200595855713
    3. 'num' → logprob: -1.910200595855713
    4. 'n' → logprob: -2.160200595855713
    5. 'value' → logprob: -2.410200595855713
    6. 'v' → logprob: -3.285200595855713
    7. '
' → logprob: -3.535200595855713
    8. 'number' → logprob: -3.535200595855713
    9. 'i' → logprob: -3.660200595855713
    10. 'val' → logprob: -4.535200595855713

Token 78: 'int' (ID: 491)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.14943324029445648
    2. 'val' → logprob: -3.024433135986328
    3. 's' → logprob: -3.399433135986328
    4. 'x' → logprob: -3.524433135986328
    5. 'value' → logprob: -4.524433135986328
    6. 'number' → logprob: -4.524433135986328
    7. ' num' → logprob: -6.024433135986328
    8. 'n' → logprob: -7.024433135986328
    9. '```' → logprob: -7.399433135986328
    10. 'int' → logprob: -7.774433135986328

Token 79: '_s' (ID: 1278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.612768828868866
    2. '_s' → logprob: -0.862768828868866
    3. '(s' → logprob: -3.3627688884735107
    4. '(' → logprob: -7.487768650054932
    5. '_val' → logprob: -7.737768650054932
    6. '_' → logprob: -8.73776912689209
    7. 'value' → logprob: -8.98776912689209
    8. '_value' → logprob: -9.11276912689209
    9. 'S' → logprob: -10.48776912689209
    10. '```' → logprob: -11.23776912689209

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6956835985183716
    2. ' =' → logprob: -0.6956835985183716
    3. 's' → logprob: -6.570683479309082
    4. '_' → logprob: -7.070683479309082
    5. '()' → logprob: -9.070683479309082
    6. ')' → logprob: -9.820683479309082
    7. '(' → logprob: -10.070683479309082
    8. '=int' → logprob: -10.320683479309082
    9. '_=' → logprob: -11.570683479309082
    10. '_s' → logprob: -11.820683479309082

Token 81: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759425163269043
    2. ' int' → logprob: -0.8259425163269043
    3. '0' → logprob: -13.450942993164062
    4. ' ' → logprob: -13.950942993164062
    5. '=int' → logprob: -15.825942993164062
    6. '```' → logprob: -15.950942993164062
    7. '[int' → logprob: -16.075942993164062
    8. 's' → logprob: -16.450942993164062
    9. '<int' → logprob: -16.575942993164062
    10. '(int' → logprob: -16.950942993164062

Token 82: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.008628644980490208
    2. '(' → logprob: -4.758628845214844
    3. 's' → logprob: -11.258628845214844
    4. ' (' → logprob: -14.258628845214844
    5. '(
' → logprob: -15.633628845214844
    6. '((' → logprob: -16.383628845214844
    7. '('' → logprob: -16.508628845214844
    8. '("("' → logprob: -17.133628845214844
    9. '(str' → logprob: -17.383628845214844
    10. '(ss' → logprob: -17.508628845214844

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. '))' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.875005722045898
    4. '[' → logprob: -14.375005722045898
    5. ')
' → logprob: -15.000005722045898
    6. ')s' → logprob: -16.6250057220459
    7. '())' → logprob: -16.6250057220459
    8. ']' → logprob: -17.0000057220459
    9. ')#' → logprob: -17.2500057220459
    10. ')`' → logprob: -17.2500057220459

Token 84: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0029506010469049215
    2. '
' → logprob: -7.502950668334961
    3. 'def' → logprob: -7.502950668334961
    4. '#' → logprob: -8.252950668334961
    5. '```' → logprob: -8.752950668334961
    6. '\' → logprob: -9.127950668334961
    7. '@
' → logprob: -9.377950668334961
    8. 'n' → logprob: -9.377950668334961
    9. '@app' → logprob: -9.377950668334961
    10. '@return' → logprob: -9.502950668334961

Token 85: ' max' (ID: 2999)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.004409466870129108
    2. 'def' → logprob: -5.879409313201904
    3. 'from' → logprob: -6.879409313201904
    4. 'for' → logprob: -9.129409790039062
    5. 'if' → logprob: -9.379409790039062
    6. '#' → logprob: -9.379409790039062
    7. 'result' → logprob: -10.254409790039062
    8. '@s' → logprob: -10.254409790039062
    9. 'print' → logprob: -10.504409790039062
    10. '@n' → logprob: -10.879409790039062

Token 86: ' sum' (ID: 4215)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.6320796012878418
    2. '_length' → logprob: -2.132079601287842
    3. '_val' → logprob: -2.132079601287842
    4. '_sum' → logprob: -2.757079601287842
    5. '_' → logprob: -3.257079601287842
    6. '_product' → logprob: -3.507079601287842
    7. '_value' → logprob: -3.507079601287842
    8. '_chunk' → logprob: -4.007079601287842
    9. '_num' → logprob: -5.007079601287842
    10. '_partition' → logprob: -5.007079601287842

Token 87: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2766280770301819
    2. '_sum' → logprob: -2.151628017425537
    3. '_val' → logprob: -3.026628017425537
    4. '_s' → logprob: -3.526628017425537
    5. '_digits' → logprob: -3.901628017425537
    6. '_possible' → logprob: -5.026628017425537
    7. '_digit' → logprob: -5.026628017425537
    8. '_len' → logprob: -5.276628017425537
    9. '_value' → logprob: -5.901628017425537
    10. 'sum' → logprob: -6.651628017425537

Token 88: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5580865740776062
    2. ' ' → logprob: -1.683086633682251
    3. ' n' → logprob: -1.808086633682251
    4. 'n' → logprob: -2.683086633682251
    5. ' sum' → logprob: -5.308086395263672
    6. 'sum' → logprob: -5.683086395263672
    7. 'digits' → logprob: -8.433086395263672
    8. ' digits' → logprob: -8.808086395263672
    9. ' (' → logprob: -8.933086395263672
    10. '(n' → logprob: -9.183086395263672

Token 89: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.05788648501038551
    2. 'n' → logprob: -3.1828866004943848
    3. '81' → logprob: -5.057886600494385
    4. 'sum' → logprob: -5.682886600494385
    5. ' ' → logprob: -6.307886600494385
    6. '45' → logprob: -7.432886600494385
    7. '(n' → logprob: -7.432886600494385
    8. ' n' → logprob: -7.557886600494385
    9. '(' → logprob: -8.182886123657227
    10. '18' → logprob: -8.807886123657227

Token 90: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3837267756462097
    2. ' *' → logprob: -1.3837268352508545
    3. '*n' → logprob: -3.8837268352508545
    4. '0' → logprob: -4.258726596832275
    5. '+' → logprob: -4.383726596832275
    6. '**' → logprob: -5.383726596832275
    7. '1' → logprob: -5.508726596832275
    8. '2' → logprob: -6.133726596832275
    9. ' ' → logprob: -6.383726596832275
    10. ' +' → logprob: -6.758726596832275

Token 91: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0622328519821167
    2. ' n' → logprob: -2.8122329711914062
    3. '(n' → logprob: -9.937232971191406
    4. '10' → logprob: -10.062232971191406
    5. '20' → logprob: -10.437232971191406
    6. ' (' → logprob: -10.437232971191406
    7. '9' → logprob: -10.562232971191406
    8. '15' → logprob: -10.812232971191406
    9. '(' → logprob: -11.437232971191406
    10. ' ' → logprob: -11.437232971191406

Token 92: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009905888698995113
    2. ' max' → logprob: -5.759905815124512
    3. '#' → logprob: -6.384905815124512
    4. '
' → logprob: -6.384905815124512
    5. '9' → logprob: -7.134905815124512
    6. 'dp' → logprob: -7.759905815124512
    7. 'm' → logprob: -7.884905815124512
    8. '```' → logprob: -8.384905815124512
    9. 'sum' → logprob: -8.509905815124512
    10. 'MAX' → logprob: -9.009905815124512

Token 93: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04054552689194679
    2. 'dp' → logprob: -3.7905454635620117
    3. 'MAX' → logprob: -4.790545463562012
    4. '@' → logprob: -5.540545463562012
    5. '9' → logprob: -6.165545463562012
    6. 'from' → logprob: -7.165545463562012
    7. '#' → logprob: -7.540545463562012
    8. 'for' → logprob: -7.915545463562012
    9. 'mod' → logprob: -8.040545463562012
    10. 'cache' → logprob: -9.290545463562012

Token 94: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.006179760210216045
    2. '_' → logprob: -5.2561798095703125
    3. '_s' → logprob: -7.1311798095703125
    4. 'sum' → logprob: -9.631179809570312
    5. '_len' → logprob: -10.756179809570312
    6. '_val' → logprob: -10.756179809570312
    7. ' _' → logprob: -11.381179809570312
    8. '_value' → logprob: -12.256179809570312
    9. '_SUM' → logprob: -12.881179809570312
    10. '_suffix' → logprob: -13.256179809570312

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10038156807422638
    2. '=' → logprob: -2.35038161277771
    3. '_' → logprob: -9.225381851196289
    4. 's' → logprob: -9.975381851196289
    5. '_s' → logprob: -11.100381851196289
    6. ')' → logprob: -11.975381851196289
    7. '_=' → logprob: -12.350381851196289
    8. ',' → logprob: -13.600381851196289
    9. '_val' → logprob: -14.475381851196289
    10. '+' → logprob: -15.225381851196289

Token 96: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11282943934202194
    2. ' ' → logprob: -2.2378294467926025
    3. '   ' → logprob: -12.237829208374023
    4. 'n' → logprob: -14.112829208374023
    5. 's' → logprob: -14.862829208374023
    6. '  ' → logprob: -14.862829208374023
    7. '```' → logprob: -15.862829208374023
    8. '`' → logprob: -16.112829208374023
    9. ' ' → logprob: -16.237829208374023
    10. '90' → logprob: -16.237829208374023

Token 97: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00013214473437983543
    2. ' ' → logprob: -9.00013256072998
    3. '81' → logprob: -12.25013256072998
    4. '(' → logprob: -13.25013256072998
    5. '   ' → logprob: -13.25013256072998
    6. '  ' → logprob: -16.250131607055664
    7. '```' → logprob: -16.375131607055664
    8. 'digits' → logprob: -16.500131607055664
    9. 'n' → logprob: -17.000131607055664
    10. '`' → logprob: -17.625131607055664

Token 98: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.419555127620697
    2. '*' → logprob: -1.4195551872253418
    3. '*n' → logprob: -2.294555187225342
    4. '**' → logprob: -11.669554710388184
    5. '*num' → logprob: -11.669554710388184
    6. '*object' → logprob: -12.419554710388184
    7. ' ' → logprob: -12.669554710388184
    8. ' ' → logprob: -14.044554710388184
    9. '*q' → logprob: -14.294554710388184
    10. ' **' → logprob: -14.294554710388184

Token 99: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018150178715586662
    2. ' n' → logprob: -4.018150329589844
    3. '	n' → logprob: -16.268150329589844
    4. ' ' → logprob: -16.393150329589844
    5. '   ' → logprob: -18.518150329589844
    6. '(n' → logprob: -18.518150329589844
    7. '  ' → logprob: -18.768150329589844
    8. '
' → logprob: -19.018150329589844
    9. '_n' → logprob: -19.268150329589844
    10. ')n' → logprob: -19.518150329589844

Token 100: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.3717358708381653
    2. 'dp' → logprob: -1.4967358112335205
    3. '
' → logprob: -2.8717358112335205
    4. ')' → logprob: -5.2467360496521
    5. '

' → logprob: -5.3717360496521
    6. '#' → logprob: -5.9967360496521
    7. '```' → logprob: -6.3717360496521
    8. 'from' → logprob: -6.3717360496521
    9. '\n' → logprob: -6.6217360496521
    10. 'max' → logprob: -6.7467360496521

Token 101: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.010325534269213676
    2. 'dp' → logprob: -4.8853254318237305
    3. 'mod' → logprob: -6.7603254318237305
    4. 'from' → logprob: -7.6353254318237305
    5. 'MOD' → logprob: -8.26032543182373
    6. 'l' → logprob: -9.51032543182373
    7. 'def' → logprob: -9.63532543182373
    8. 'memo' → logprob: -9.76032543182373
    9. '#' → logprob: -10.01032543182373
    10. 'import' → logprob: -10.13532543182373

Token 102: ' For' (ID: 2214)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.005693418905138969
    2. 'dp' → logprob: -5.755693435668945
    3. 'from' → logprob: -6.380693435668945
    4. 'def' → logprob: -8.255693435668945
    5. '#' → logprob: -8.630693435668945
    6. 'memo' → logprob: -10.005693435668945
    7. 'for' → logprob: -10.005693435668945
    8. 'import' → logprob: -10.130693435668945
    9. 'result' → logprob: -10.255693435668945
    10. 'MOD' → logprob: -10.380693435668945

Token 103: ' sums' (ID: 73121)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.048945665359497
    2. ' i' → logprob: -1.423945665359497
    3. 'sum' → logprob: -1.923945665359497
    4. ' _' → logprob: -3.048945665359497
    5. ' dp' → logprob: -3.048945665359497
    6. 'i' → logprob: -3.798945665359497
    7. ' d' → logprob: -3.923945665359497
    8. ' s' → logprob: -4.548945426940918
    9. '_sum' → logprob: -4.548945426940918
    10. ' length' → logprob: -4.548945426940918

Token 104: ' and' (ID: 326)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5023153424263
    2. ' in' → logprob: -1.1273152828216553
    3. '=' → logprob: -3.1273152828216553
    4. 'from' → logprob: -4.877315521240234
    5. ' =' → logprob: -5.377315521240234
    6. 'um' → logprob: -5.502315521240234
    7. 's' → logprob: -5.627315521240234
    8. ',' → logprob: -5.877315521240234
    9. 'for' → logprob: -6.877315521240234
    10. '_' → logprob: -7.252315521240234

Token 105: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.7880644202232361
    2. ' products' → logprob: -2.163064479827881
    3. 'prod' → logprob: -2.663064479827881
    4. 'pro' → logprob: -2.663064479827881
    5. 'dp' → logprob: -3.038064479827881
    6. 'product' → logprob: -3.163064479827881
    7. 'length' → logprob: -3.413064479827881
    8. ' product' → logprob: -3.663064479827881
    9. ' lengths' → logprob: -3.663064479827881
    10. ' prod' → logprob: -3.788064479827881

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42942726612091064
    2. 'dp' → logprob: -1.1794272661209106
    3. 'from' → logprob: -4.679427146911621
    4. '#' → logprob: -4.679427146911621
    5. ',
' → logprob: -5.554427146911621
    6. '_dp' → logprob: -5.554427146911621
    7. '=' → logprob: -6.054427146911621
    8. 'cache' → logprob: -6.304427146911621
    9. 'memo' → logprob: -6.554427146911621
    10. ':' → logprob: -6.554427146911621

Token 107: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.146008849143982
    2. 'dp' → logprob: -1.396008849143982
    3. 'we' → logprob: -2.1460089683532715
    4. 'from' → logprob: -3.0210089683532715
    5. 'cache' → logprob: -3.2710089683532715
    6. ' we' → logprob: -3.2710089683532715
    7. 'for' → logprob: -3.6460089683532715
    8. 'the' → logprob: -3.7710089683532715
    9. ' the' → logprob: -4.0210089683532715
    10. 'max' → logprob: -4.3960089683532715

Token 108: ' store' (ID: 4897)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -1.3060286045074463
    2. ' can' → logprob: -1.9310286045074463
    3. ' need' → logprob: -2.0560286045074463
    4. 'can' → logprob: -2.4310286045074463
    5. ' want' → logprob: -2.4310286045074463
    6. ''ll' → logprob: -2.9310286045074463
    7. 'have' → logprob: -3.3060286045074463
    8. '...' → logprob: -3.4310286045074463
    9. '#' → logprob: -3.4310286045074463
    10. 'continue' → logprob: -3.8060286045074463

Token 109: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1402270793914795
    2. 'the' → logprob: -2.8902270793914795
    3. 'a' → logprob: -4.015227317810059
    4. 'from' → logprob: -4.015227317810059
    5. ' the' → logprob: -4.390227317810059
    6. ' dp' → logprob: -5.390227317810059
    7. ' a' → logprob: -5.890227317810059
    8. 'counts' → logprob: -5.890227317810059
    9. 'results' → logprob: -6.390227317810059
    10. 'possible' → logprob: -6.515227317810059

Token 110: ' states' (ID: 9407)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09311015158891678
    2. '=' → logprob: -2.7181100845336914
    3. '_dp' → logprob: -5.343110084533691
    4. '_' → logprob: -5.468110084533691
    5. '_states' → logprob: -5.468110084533691
    6. 'dp' → logprob: -5.593110084533691
    7. '_s' → logprob: -6.593110084533691
    8. 's' → logprob: -6.718110084533691
    9. '[' → logprob: -7.593110084533691
    10. '0' → logprob: -7.968110084533691

Token 111: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007405600044876337
    2. '[' → logprob: -6.757405757904053
    3. '{' → logprob: -6.757405757904053
    4. '_dp' → logprob: -6.757405757904053
    5. '#' → logprob: -7.382405757904053
    6. 'from' → logprob: -7.757405757904053
    7. '_' → logprob: -7.757405757904053
    8. 'states' → logprob: -8.007405281066895
    9. ' dp' → logprob: -8.132405281066895
    10. '(dp' → logprob: -8.382405281066895

Token 112: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03410746157169342
    2. 'from' → logprob: -3.5341074466705322
    3. ' dp' → logprob: -6.659107685089111
    4. '#' → logprob: -6.909107685089111
    5. 'sum' → logprob: -7.909107685089111
    6. 'max' → logprob: -7.909107685089111
    7. ' from' → logprob: -8.034107208251953
    8. 'import' → logprob: -8.534107208251953
    9. '[' → logprob: -8.534107208251953
    10. 'digits' → logprob: -9.159107208251953

Token 113: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09414652734994888
    2. 'from' → logprob: -2.594146490097046
    3. ' dp' → logprob: -5.219146728515625
    4. '#' → logprob: -5.344146728515625
    5. 'sum' → logprob: -6.219146728515625
    6. ' from' → logprob: -6.969146728515625
    7. 'max' → logprob: -7.594146728515625
    8. 'import' → logprob: -7.844146728515625
    9. '@' → logprob: -8.094146728515625
    10. 'digits' → logprob: -9.094146728515625

Token 114: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04568164795637131
    2. '=' → logprob: -3.2956817150115967
    3. '_states' → logprob: -5.420681476593018
    4. '_s' → logprob: -7.545681476593018
    5. '_sum' → logprob: -7.795681476593018
    6. '[' → logprob: -7.795681476593018
    7. '_' → logprob: -8.295681953430176
    8. 's' → logprob: -8.295681953430176
    9. 'states' → logprob: -8.295681953430176
    10. '```' → logprob: -8.545681953430176

Token 115: '[count' (ID: 62384)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31692785024642944
    2. '=' → logprob: -1.3169279098510742
    3. ',' → logprob: -6.816927909851074
    4. '_states' → logprob: -7.441927909851074
    5. ')' → logprob: -7.816927909851074
    6. 's' → logprob: -8.066927909851074
    7. '[' → logprob: -8.191927909851074
    8. ']' → logprob: -8.316927909851074
    9. 'dp' → logprob: -9.191927909851074
    10. '_dp' → logprob: -9.566927909851074

Token 116: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5207467675209045
    2. ']' → logprob: -1.0207467079162598
    3. 's' → logprob: -4.14574670791626
    4. '],' → logprob: -4.64574670791626
    5. '+' → logprob: -6.27074670791626
    6. ',' → logprob: -6.27074670791626
    7. '_digits' → logprob: -6.27074670791626
    8. ']=' → logprob: -6.39574670791626
    9. ' ][' → logprob: -6.39574670791626
    10. '_states' → logprob: -6.52074670791626

Token 117: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.44899114966392517
    2. 'digit' → logprob: -1.5739911794662476
    3. 'product' → logprob: -3.448991060256958
    4. 'pos' → logprob: -3.573991060256958
    5. 'last' → logprob: -3.698991060256958
    6. 'position' → logprob: -4.448991298675537
    7. 'mod' → logprob: -5.073991298675537
    8. 'length' → logprob: -5.073991298675537
    9. 'digits' → logprob: -5.198991298675537
    10. ' sum' → logprob: -5.448991298675537

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1670820266008377
    2. '][' → logprob: -2.2920820713043213
    3. '_digits' → logprob: -3.7920820713043213
    4. '_]' → logprob: -4.167081832885742
    5. '_' → logprob: -6.292081832885742
    6. '_value' → logprob: -6.417081832885742
    7. ' ]' → logprob: -6.792081832885742
    8. 'd' → logprob: -6.792081832885742
    9. ']=' → logprob: -7.042081832885742
    10. '_sum' → logprob: -7.167081832885742

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35565516352653503
    2. '=' → logprob: -1.2306551933288574
    3. '<|end|>' → logprob: -5.730655193328857
    4. ']' → logprob: -5.855655193328857
    5. 's' → logprob: -7.855655193328857
    6. '=[]' → logprob: -8.9806547164917
    7. ',' → logprob: -9.3556547164917
    8. '<|end|>' → logprob: -9.4806547164917
    9. ')' → logprob: -9.6056547164917
    10. ']=' → logprob: -9.7306547164917

Token 120: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5350602865219116
    2. 'set' → logprob: -1.6600602865219116
    3. 'True' → logprob: -1.6600602865219116
    4. 'number' → logprob: -1.9100602865219116
    5. 'False' → logprob: -2.535060405731201
    6. '[' → logprob: -3.410060405731201
    7. '{}' → logprob: -3.785060405731201
    8. '{' → logprob: -4.285060405731201
    9. ' set' → logprob: -4.285060405731201
    10. ' number' → logprob: -4.410060405731201

Token 121: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7127401232719421
    2. '[' → logprob: -1.587740182876587
    3. ']' → logprob: -1.962740182876587
    4. '[
' → logprob: -2.837740182876587
    5. ' =' → logprob: -3.337740182876587
    6. 's' → logprob: -4.087739944458008
    7. '_' → logprob: -4.337739944458008
    8. '[]' → logprob: -4.837739944458008
    9. '<|end|>' → logprob: -4.837739944458008
    10. ')' → logprob: -5.587739944458008

Token 122: ' sequences' (ID: 45665)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.04450764134526253
    2. ' ways' → logprob: -3.1695077419281006
    3. ' sequences' → logprob: -7.9195075035095215
    4. 'digits' → logprob: -8.66950798034668
    5. 'possible' → logprob: -8.91950798034668
    6. 'numbers' → logprob: -9.04450798034668
    7. 'se' → logprob: -9.16950798034668
    8. 'counts' → logprob: -9.66950798034668
    9. 'valid' → logprob: -9.79450798034668
    10. 'count' → logprob: -9.79450798034668

Token 123: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7446368932723999
    2. 'count' → logprob: -0.8696368932723999
    3. 'digits' → logprob: -2.6196370124816895
    4. ' length' → logprob: -5.3696370124816895
    5. 'numbers' → logprob: -5.7446370124816895
    6. '[count' → logprob: -5.7446370124816895
    7. '<|end|>' → logprob: -5.8696370124816895
    8. '0' → logprob: -6.1196370124816895
    9. ' ' → logprob: -6.2446370124816895
    10. 'counts' → logprob: -6.3696370124816895

Token 125: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.36997103691101074
    2. '[count' → logprob: -2.4949710369110107
    3. 'n' → logprob: -2.7449710369110107
    4. 's' → logprob: -3.2449710369110107
    5. '<|end|>' → logprob: -3.6199710369110107
    6. '(count' → logprob: -3.7449710369110107
    7. '0' → logprob: -4.24497127532959
    8. ' count' → logprob: -4.49497127532959
    9. ' ' → logprob: -4.61997127532959
    10. '[' → logprob: -5.11997127532959

Token 126: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4948962926864624
    2. ' sum' → logprob: -1.8698962926864624
    3. ' given' → logprob: -1.8698962926864624
    4. 'given' → logprob: -3.619896411895752
    5. ' a' → logprob: -4.244896411895752
    6. 'total' → logprob: -4.619896411895752
    7. ' total' → logprob: -5.119896411895752
    8. 'a' → logprob: -5.119896411895752
    9. 'exact' → logprob: -5.994896411895752
    10. ' that' → logprob: -6.619896411895752

Token 128: ' of' (ID: 328)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.004886269569397
    2. '][' → logprob: -1.254886269569397
    3. 'max' → logprob: -2.3798861503601074
    4. '=' → logprob: -2.6298861503601074
    5. 'dp' → logprob: -3.2548861503601074
    6. '<|end|>' → logprob: -3.8798861503601074
    7. ' =' → logprob: -4.254886150360107
    8. 'states' → logprob: -4.379886150360107
    9. 's' → logprob: -4.629886150360107
    10. '_states' → logprob: -4.879886150360107

Token 129: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.012286295183002949
    2. ' digits' → logprob: -4.512286186218262
    3. 's' → logprob: -7.762286186218262
    4. 'd' → logprob: -8.137286186218262
    5. '_digits' → logprob: -9.387286186218262
    6. 'values' → logprob: -9.512286186218262
    7. 'sum' → logprob: -9.887286186218262
    8. ' ' → logprob: -10.262286186218262
    9. 'numbers' → logprob: -10.637286186218262
    10. '<|end|>' → logprob: -11.012286186218262

Token 130: ' =' (ID: 314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8571939468383789
    2. '<|end|>' → logprob: -1.732193946838379
    3. '#' → logprob: -2.232193946838379
    4. '][' → logprob: -2.357193946838379
    5. '=' → logprob: -2.607193946838379
    6. ' =' → logprob: -3.607193946838379
    7. 's' → logprob: -3.607193946838379
    8. '[' → logprob: -3.982193946838379
    9. '<|end|>' → logprob: -4.482193946838379
    10. ')' → logprob: -5.107193946838379

Token 131: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04706946760416031
    2. ' sum' → logprob: -3.422069549560547
    3. '0' → logprob: -5.047069549560547
    4. 's' → logprob: -6.172069549560547
    5. 'dp' → logprob: -6.547069549560547
    6. 'digits' → logprob: -6.922069549560547
    7. ' ' → logprob: -7.047069549560547
    8. 'count' → logprob: -8.047069549560547
    9. '<|end|>' → logprob: -8.422069549560547
    10. '[' → logprob: -8.922069549560547

Token 132: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7864207625389099
    2. '<|end|>' → logprob: -1.5364208221435547
    3. ']' → logprob: -2.0364208221435547
    4. '#' → logprob: -2.1614208221435547
    5. '_dp' → logprob: -3.7864208221435547
    6. '
' → logprob: -3.9114208221435547
    7. ')' → logprob: -4.411420822143555
    8. '<|end|>' → logprob: -4.661420822143555
    9. '[' → logprob: -5.286420822143555
    10. 'max' → logprob: -5.411420822143555

Token 133: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8291689157485962
    2. '=' → logprob: -1.9541689157485962
    3. ' =' → logprob: -2.3291687965393066
    4. ']' → logprob: -2.4541687965393066
    5. 'from' → logprob: -2.7041687965393066
    6. 'digits' → logprob: -3.3291687965393066
    7. '#' → logprob: -3.3291687965393066
    8. '<|end|>' → logprob: -3.5791687965393066
    9. 'max' → logprob: -3.8291687965393066
    10. '[' → logprob: -4.329168796539307

Token 134: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018370823934674263
    2. 'from' → logprob: -4.643370628356934
    3. '#' → logprob: -5.893370628356934
    4. 'digits' → logprob: -6.018370628356934
    5. 'max' → logprob: -6.643370628356934
    6. ' dp' → logprob: -7.768370628356934
    7. 'count' → logprob: -8.018370628356934
    8. ' from' → logprob: -8.018370628356934
    9. 'digit' → logprob: -9.268370628356934
    10. 'n' → logprob: -9.268370628356934

Token 135: ' need' (ID: 1309)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1637444496154785
    2. '#' → logprob: -1.2887444496154785
    3. '=' → logprob: -2.5387444496154785
    4. 'need' → logprob: -2.9137444496154785
    5. ' continue' → logprob: -3.0387444496154785
    6. 'have' → logprob: -3.7887444496154785
    7. 'dp' → logprob: -3.7887444496154785
    8. ' =' → logprob: -3.9137444496154785
    9. ''ll' → logprob: -3.9137444496154785
    10. ' need' → logprob: -4.0387444496154785

Token 136: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6206933259963989
    2. 'to' → logprob: -0.8706933259963989
    3. 'dp' → logprob: -3.2456932067871094
    4. ' dp' → logprob: -5.870693206787109
    5. 'def' → logprob: -8.24569320678711
    6. ' sequences' → logprob: -8.37069320678711
    7. 'the' → logprob: -8.87069320678711
    8. ']' → logprob: -8.99569320678711
    9. 'max' → logprob: -8.99569320678711
    10. ' the' → logprob: -9.24569320678711

Token 137: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4152112305164337
    2. 'find' → logprob: -2.2902112007141113
    3. 'continue' → logprob: -2.5402112007141113
    4. 'from' → logprob: -3.5402112007141113
    5. 'fill' → logprob: -3.7902112007141113
    6. 'build' → logprob: -3.7902112007141113
    7. 'consider' → logprob: -4.165211200714111
    8. 'generate' → logprob: -4.415211200714111
    9. 'calculate' → logprob: -5.040211200714111
    10. 'compute' → logprob: -5.415211200714111

Token 138: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -1.0506800413131714
    2. 'dp' → logprob: -1.3006800413131714
    3. 'the' → logprob: -1.8006800413131714
    4. ' the' → logprob: -2.425680160522461
    5. '<|end|>' → logprob: -3.925680160522461
    6. 'se' → logprob: -4.300680160522461
    7. 'possible' → logprob: -4.675680160522461
    8. 'distinct' → logprob: -5.300680160522461
    9. 'all' → logprob: -5.425680160522461
    10. 'for' → logprob: -5.425680160522461

Token 139: ' less' (ID: 3760)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2724653482437134
    2. ')' → logprob: -1.8974653482437134
    3. '<|end|>' → logprob: -1.8974653482437134
    4. '#' → logprob: -2.647465229034424
    5. '[' → logprob: -3.022465229034424
    6. '=' → logprob: -3.022465229034424
    7. 'of' → logprob: -3.272465229034424
    8. ' of' → logprob: -3.522465229034424
    9. ' =' → logprob: -3.897465229034424
    10. ']' → logprob: -3.897465229034424

Token 140: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.8458917140960693
    2. ' than' → logprob: -0.9708917140960693
    3. '_than' → logprob: -1.7208917140960693
    4. '=' → logprob: -5.220891952514648
    5. '<=' → logprob: -5.845891952514648
    6. '<|end|>' → logprob: -6.845891952514648
    7. '_equal' → logprob: -7.595891952514648
    8. '-than' → logprob: -7.845891952514648
    9. '<' → logprob: -8.095891952514648
    10. '_THAN' → logprob: -8.220891952514648

Token 141: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2994703948497772
    2. 's' → logprob: -1.9244704246520996
    3. '=' → logprob: -2.9244704246520996
    4. ' or' → logprob: -3.4244704246520996
    5. 'int' → logprob: -4.4244704246521
    6. 'or' → logprob: -5.1744704246521
    7. ' the' → logprob: -6.1744704246521
    8. ' =' → logprob: -6.1744704246521
    9. ' int' → logprob: -6.4244704246521
    10. '=int' → logprob: -7.0494704246521

Token 142: ',' (ID: 11)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.18777690827846527
    2. ')' → logprob: -2.437776803970337
    3. '=' → logprob: -4.062777042388916
    4. '#' → logprob: -4.312777042388916
    5. 'dp' → logprob: -4.312777042388916
    6. 'from' → logprob: -4.812777042388916
    7. 'max' → logprob: -5.062777042388916
    8. '
' → logprob: -5.437777042388916
    9. '<|end|>' → logprob: -6.312777042388916
    10. ',' → logprob: -6.312777042388916

Token 143: ' in' (ID: 306)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4695788025856018
    2. 'dp' → logprob: -1.344578742980957
    3. ' so' → logprob: -4.844578742980957
    4. 'def' → logprob: -4.844578742980957
    5. '...' → logprob: -4.969578742980957
    6. ' and' → logprob: -4.969578742980957
    7. '<|end|>' → logprob: -4.969578742980957
    8. 'with' → logprob: -5.219578742980957
    9. ' #' → logprob: -5.219578742980957
    10. ' dp' → logprob: -5.219578742980957

Token 144: ' order' (ID: 2569)
  Prédit: ' lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lex' → logprob: -1.1445798873901367
    2. 'lex' → logprob: -2.2695798873901367
    3. 'exact' → logprob: -2.3945798873901367
    4. 'python' → logprob: -2.7695798873901367
    5. 'length' → logprob: -3.1445798873901367
    6. ' length' → logprob: -3.2695798873901367
    7. ' total' → logprob: -3.5195798873901367
    8. 'creasing' → logprob: -3.5195798873901367
    9. ' python' → logprob: -3.8945798873901367
    10. 'total' → logprob: -3.8945798873901367

Token 145: ' defined' (ID: 9113)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0114892721176147
    2. '=' → logprob: -1.1364892721176147
    3. ' to' → logprob: -1.2614892721176147
    4. ')' → logprob: -4.261489391326904
    5. 'def' → logprob: -5.636489391326904
    6. '<|end|>' → logprob: -5.636489391326904
    7. '(' → logprob: -6.136489391326904
    8. 's' → logprob: -6.511489391326904
    9. '_to' → logprob: -7.011489391326904
    10. 'for' → logprob: -7.261489391326904

Token 146: ':
' (ID: 734)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -1.6972724199295044
    2. '#' → logprob: -1.9472724199295044
    3. ')' → logprob: -2.072272300720215
    4. '_' → logprob: -2.197272300720215
    5. 'dp' → logprob: -2.572272300720215
    6. '<|end|>' → logprob: -2.572272300720215
    7. '
' → logprob: -2.697272300720215
    8. '=' → logprob: -3.572272300720215
    9. '_dp' → logprob: -3.822272300720215
    10. 'from' → logprob: -3.947272300720215

Token 147: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.636078417301178
    2. 'dp' → logprob: -1.0110783576965332
    3. 'from' → logprob: -3.511078357696533
    4. ')' → logprob: -4.011078357696533
    5. '#' → logprob: -4.386078357696533
    6. 'max' → logprob: -4.761078357696533
    7. 'def' → logprob: -5.261078357696533
    8. ' @' → logprob: -5.511078357696533
    9. 'for' → logprob: -5.636078357696533
    10. ' dp' → logprob: -6.011078357696533

Token 148: ' sequences' (ID: 45665)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.19843260943889618
    2. 'from' → logprob: -2.823432683944702
    3. 'dp' → logprob: -2.823432683944702
    4. ' @' → logprob: -3.573432683944702
    5. ')' → logprob: -4.448432445526123
    6. 'def' → logprob: -5.323432445526123
    7. '#' → logprob: -5.698432445526123
    8. ' dp' → logprob: -6.073432445526123
    9. ' from' → logprob: -6.198432445526123
    10. 'for' → logprob: -6.823432445526123

Token 149: ' less' (ID: 3760)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34902381896972656
    2. '=' → logprob: -1.9740238189697266
    3. '_less' → logprob: -2.9740238189697266
    4. '<|end|>' → logprob: -3.3490238189697266
    5. '_' → logprob: -4.599023818969727
    6. '<|end|>' → logprob: -4.974023818969727
    7. 'of' → logprob: -5.099023818969727
    8. '=[]' → logprob: -5.224023818969727
    9. ')' → logprob: -5.474023818969727
    10. ' of' → logprob: -5.599023818969727

Token 150: ' than' (ID: 1572)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24860574305057526
    2. ' =' → logprob: -2.873605728149414
    3. 'of' → logprob: -3.123605728149414
    4. '_less' → logprob: -3.498605728149414
    5. '<' → logprob: -3.873605728149414
    6. '_than' → logprob: -4.748605728149414
    7. '_s' → logprob: -4.873605728149414
    8. 'less' → logprob: -5.248605728149414
    9. '<=' → logprob: -5.373605728149414
    10. ')' → logprob: -5.623605728149414

Token 151: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2525375187397003
    2. ' s' → logprob: -1.502537488937378
    3. 'the' → logprob: -9.252537727355957
    4. 'int' → logprob: -9.377537727355957
    5. 'length' → logprob: -9.502537727355957
    6. ' the' → logprob: -9.877537727355957
    7. ' ' → logprob: -10.377537727355957
    8. 'tuple' → logprob: -10.877537727355957
    9. 'input' → logprob: -11.002537727355957
    10. ' or' → logprob: -11.252537727355957

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3491812944412231
    2. '<|end|>' → logprob: -1.9741812944412231
    3. ',' → logprob: -2.7241811752319336
    4. ' =' → logprob: -2.8491811752319336
    5. 'def' → logprob: -2.8491811752319336
    6. '[' → logprob: -2.9741811752319336
    7. ':' → logprob: -3.0991811752319336
    8. '#' → logprob: -3.0991811752319336
    9. '<|end|>' → logprob: -3.2241811752319336
    10. '@' → logprob: -3.4741811752319336

Token 153: ' sequences' (ID: 45665)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.21516795456409454
    2. ' []' → logprob: -3.090167999267578
    3. '0' → logprob: -3.215167999267578
    4. '[' → logprob: -3.340167999267578
    5. 's' → logprob: -4.590167999267578
    6. 'set' → logprob: -4.590167999267578
    7. '...' → logprob: -4.840167999267578
    8. ' ' → logprob: -4.965167999267578
    9. ' [' → logprob: -5.715167999267578
    10. 'lambda' → logprob: -5.715167999267578

Token 154: ' with' (ID: 483)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -2.0019686222076416
    2. 'with' → logprob: -2.1269686222076416
    3. '_less' → logprob: -2.2519686222076416
    4. ' =' → logprob: -2.3769686222076416
    5. ' of' → logprob: -2.3769686222076416
    6. ' less' → logprob: -2.5019686222076416
    7. '<|end|>' → logprob: -2.5019686222076416
    8. ' with' → logprob: -2.7519686222076416
    9. ' that' → logprob: -2.8769686222076416
    10. 'def' → logprob: -3.3769686222076416

Token 155: ' sum' (ID: 4215)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4139806926250458
    2. ' length' → logprob: -1.2889807224273682
    3. 'count' → logprob: -3.913980722427368
    4. 'leading' → logprob: -4.663980484008789
    5. ' leading' → logprob: -5.038980484008789
    6. ' count' → logprob: -5.663980484008789
    7. 'same' → logprob: -5.663980484008789
    8. ' fewer' → logprob: -6.288980484008789
    9. 'lex' → logprob: -6.413980484008789
    10. 'sum' → logprob: -6.538980484008789

Token 156: ' <' (ID: 464)
  Prédit: ' less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' less' → logprob: -1.544603705406189
    2. '_less' → logprob: -1.919603705406189
    3. '<|end|>' → logprob: -2.0446038246154785
    4. '<' → logprob: -2.2946038246154785
    5. ' <' → logprob: -2.2946038246154785
    6. 's' → logprob: -2.4196038246154785
    7. ')' → logprob: -2.9196038246154785
    8. 'less' → logprob: -3.0446038246154785
    9. '<|end|>' → logprob: -4.0446038246154785
    10. 'def' → logprob: -4.4196038246154785

Token 157: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.13867799937725067
    2. 'max' → logprob: -2.2636780738830566
    3. 'int' → logprob: -4.263678073883057
    4. 's' → logprob: -4.888678073883057
    5. ' sum' → logprob: -6.388678073883057
    6. 'n' → logprob: -7.888678073883057
    7. ' max' → logprob: -8.388677597045898
    8. '9' → logprob: -8.388677597045898
    9. 'current' → logprob: -8.763677597045898
    10. 'digits' → logprob: -8.888677597045898

Token 158: '_s' (ID: 1278)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8146268725395203
    2. 'or' → logprob: -1.564626932144165
    3. '_s' → logprob: -2.439626932144165
    4. '+' → logprob: -2.564626932144165
    5. 's' → logprob: -2.564626932144165
    6. ')' → logprob: -3.439626932144165
    7. '<|end|>' → logprob: -3.439626932144165
    8. '#' → logprob: -4.689626693725586
    9. '_' → logprob: -4.689626693725586
    10. ',' → logprob: -5.314626693725586

Token 159: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5064715147018433
    2. '#' → logprob: -1.5064715147018433
    3. ']' → logprob: -2.881471633911133
    4. '@' → logprob: -3.256471633911133
    5. 'dp' → logprob: -3.631471633911133
    6. '<|end|>' → logprob: -3.756471633911133
    7. '
' → logprob: -4.756471633911133
    8. '[' → logprob: -5.506471633911133
    9. 'from' → logprob: -5.631471633911133
    10. ',' → logprob: -6.506471633911133

Token 160: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47004953026771545
    2. ')' → logprob: -2.4700496196746826
    3. '
' → logprob: -2.9700496196746826
    4. ' or' → logprob: -3.0950496196746826
    5. ',' → logprob: -3.2200496196746826
    6. '<|end|>' → logprob: -3.4700496196746826
    7. '[' → logprob: -3.8450496196746826
    8. '=' → logprob: -3.9700496196746826
    9. ']' → logprob: -4.0950493812561035
    10. ',
' → logprob: -4.4700493812561035

Token 161: ' +' (ID: 659)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1326091289520264
    2. 'dp' → logprob: -1.1326091289520264
    3. ')' → logprob: -1.5076091289520264
    4. 'from' → logprob: -3.0076091289520264
    5. '@' → logprob: -3.6326091289520264
    6. '<|end|>' → logprob: -4.1326093673706055
    7. 'max' → logprob: -4.5076093673706055
    8. '
' → logprob: -5.7576093673706055
    9. 'count' → logprob: -5.8826093673706055
    10. '[' → logprob: -6.0076093673706055

Token 162: ' sequences' (ID: 45665)
  Prédit: ' sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.6664534211158752
    2. 'se' → logprob: -0.7914534211158752
    3. ' (' → logprob: -4.1664533615112305
    4. '(se' → logprob: -4.4164533615112305
    5. '(' → logprob: -6.0414533615112305
    6. '#' → logprob: -6.9164533615112305
    7. '(s' → logprob: -7.7914533615112305
    8. 'sum' → logprob: -8.04145336151123
    9. 'digits' → logprob: -8.66645336151123
    10. 's' → logprob: -8.79145336151123

Token 163: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5766651034355164
    2. 'with' → logprob: -0.8266651034355164
    3. '[count' → logprob: -8.201664924621582
    4. '_with' → logprob: -8.326664924621582
    5. '[' → logprob: -9.201664924621582
    6. '	with' → logprob: -11.076664924621582
    7. 'def' → logprob: -11.326664924621582
    8. ' of' → logprob: -11.451664924621582
    9. '[length' → logprob: -11.701664924621582
    10. '[len' → logprob: -11.701664924621582

Token 164: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.05167563632130623
    2. ' sum' → logprob: -3.17667555809021
    3. 'same' → logprob: -5.926675796508789
    4. 'count' → logprob: -6.176675796508789
    5. 'length' → logprob: -6.426675796508789
    6. ' same' → logprob: -7.926675796508789
    7. 'product' → logprob: -8.051675796508789
    8. ' length' → logprob: -8.176675796508789
    9. 'equal' → logprob: -8.176675796508789
    10. ' count' → logprob: -8.676675796508789

Token 165: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0286873579025269
    2. '_s' → logprob: -1.1536873579025269
    3. '==' → logprob: -1.7786873579025269
    4. ' <' → logprob: -2.6536874771118164
    5. ' ==' → logprob: -3.0286874771118164
    6. '=' → logprob: -4.153687477111816
    7. '<=' → logprob: -4.528687477111816
    8. ' <=' → logprob: -6.028687477111816
    9. '>' → logprob: -6.153687477111816
    10. 's' → logprob: -6.403687477111816

Token 166: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.006779319606721401
    2. ' sum' → logprob: -5.006779193878174
    3. 's' → logprob: -10.006779670715332
    4. 'prod' → logprob: -11.006779670715332
    5. '_sum' → logprob: -14.506779670715332
    6. '
' → logprob: -14.631779670715332
    7. ' ' → logprob: -14.756779670715332
    8. '=sum' → logprob: -16.006778717041016
    9. '```' → logprob: -16.131778717041016
    10. ' s' → logprob: -16.131778717041016

Token 167: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0020856857299805
    2. '_s' → logprob: -1.7520856857299805
    3. 's' → logprob: -2.3770856857299805
    4. ')' → logprob: -2.5020856857299805
    5. '=' → logprob: -2.8770856857299805
    6. '#' → logprob: -3.0020856857299805
    7. ']' → logprob: -3.0020856857299805
    8. '_cache' → logprob: -3.3770856857299805
    9. '[' → logprob: -3.8770856857299805
    10. ',' → logprob: -4.7520856857299805

Token 168: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6185139417648315
    2. ')' → logprob: -1.7435139417648315
    3. '=' → logprob: -1.7435139417648315
    4. ']' → logprob: -2.118514060974121
    5. '<|end|>' → logprob: -2.368514060974121
    6. '[' → logprob: -2.743514060974121
    7. 'from' → logprob: -3.618514060974121
    8. 's' → logprob: -3.743514060974121
    9. '_' → logprob: -3.868514060974121
    10. ',' → logprob: -4.243514060974121

Token 169: ' prod' (ID: 10207)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.3584706485271454
    2. ' product' → logprob: -1.7334706783294678
    3. 'prod' → logprob: -2.8584706783294678
    4. 'digits' → logprob: -4.233470439910889
    5. '(product' → logprob: -5.108470439910889
    6. '...' → logprob: -5.108470439910889
    7. ' any' → logprob: -5.233470439910889
    8. ' prod' → logprob: -5.483470439910889
    9. ' digits' → logprob: -5.858470439910889
    10. 'any' → logprob: -5.858470439910889

Token 170: ' <' (ID: 464)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1249970868229866
    2. '<' → logprob: -2.874997138977051
    3. '<=' → logprob: -3.749997138977051
    4. '_less' → logprob: -4.874997138977051
    5. '<s' → logprob: -4.874997138977051
    6. '_' → logprob: -5.374997138977051
    7. 's' → logprob: -5.499997138977051
    8. ' <' → logprob: -5.749997138977051
    9. '<_' → logprob: -5.874997138977051
    10. '<int' → logprob: -6.749997138977051

Token 171: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -3.774276774493046e-05
    2. ' prod' → logprob: -10.250038146972656
    3. '(prod' → logprob: -13.875038146972656
    4. 'product' → logprob: -14.000038146972656
    5. 'int' → logprob: -16.000038146972656
    6. '_prod' → logprob: -16.250038146972656
    7. '```' → logprob: -16.375038146972656
    8. 'proc' → logprob: -16.875038146972656
    9. '.prod' → logprob: -16.875038146972656
    10. 'p' → logprob: -17.000038146972656

Token 172: '_s' (ID: 1278)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.9924635291099548
    2. '_cache' → logprob: -1.1174635887145996
    3. '_s' → logprob: -1.4924635887145996
    4. 'from' → logprob: -3.1174635887145996
    5. ')' → logprob: -4.7424635887146
    6. 'cache' → logprob: -4.9924635887146
    7. 's' → logprob: -4.9924635887146
    8. '#' → logprob: -6.1174635887146
    9. '_' → logprob: -6.2424635887146
    10. 'def' → logprob: -6.7424635887146

Token 173: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5443001389503479
    2. '@' → logprob: -1.9193000793457031
    3. 'dp' → logprob: -2.544300079345703
    4. '#' → logprob: -2.669300079345703
    5. '
' → logprob: -3.169300079345703
    6. '<|end|>' → logprob: -3.669300079345703
    7. ']' → logprob: -4.294300079345703
    8. 'from' → logprob: -4.419300079345703
    9. '_dp' → logprob: -5.169300079345703
    10. ',' → logprob: -6.169300079345703

Token 174: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2967372238636017
    2. ')' → logprob: -2.6717371940612793
    3. ':' → logprob: -2.9217371940612793
    4. 'dp' → logprob: -2.9217371940612793
    5. '#' → logprob: -3.5467371940612793
    6. '[' → logprob: -4.296737194061279
    7. ']' → logprob: -4.671737194061279
    8. '\n' → logprob: -5.046737194061279
    9. '(' → logprob: -5.421737194061279
    10. 'def' → logprob: -5.796737194061279

Token 175: ' +' (ID: 659)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.12460733950138092
    2. 'dp' → logprob: -2.3746073246002197
    3. ')' → logprob: -4.624607563018799
    4. 'from' → logprob: -4.749607563018799
    5. '#' → logprob: -5.999607563018799
    6. 'def' → logprob: -7.249607563018799
    7. ']' → logprob: -7.499607563018799
    8. '[' → logprob: -7.749607563018799
    9. 'cache' → logprob: -8.62460708618164
    10. 'max' → logprob: -8.87460708618164

Token 176: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.6995628476142883
    2. ' sequences' → logprob: -0.6995628476142883
    3. '...' → logprob: -5.449563026428223
    4. 'def' → logprob: -7.699563026428223
    5. '#' → logprob: -8.074563026428223
    6. 'dp' → logprob: -8.324563026428223
    7. '(se' → logprob: -8.699563026428223
    8. 'sum' → logprob: -8.949563026428223
    9. 'sequence' → logprob: -9.074563026428223
    10. 'from' → logprob: -9.699563026428223

Token 177: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.12754583358764648
    2. 'with' → logprob: -2.1275458335876465
    3. 'equal' → logprob: -8.127546310424805
    4. ' equal' → logprob: -9.252546310424805
    5. ' of' → logprob: -9.627546310424805
    6. 'def' → logprob: -9.877546310424805
    7. ' less' → logprob: -11.252546310424805
    8. 'length' → logprob: -11.252546310424805
    9. '_with' → logprob: -11.377546310424805
    10. '[length' → logprob: -11.752546310424805

Token 178: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.08297699689865112
    2. 'same' → logprob: -3.207977056503296
    3. ' sum' → logprob: -4.707976818084717
    4. 'length' → logprob: -4.832976818084717
    5. 'equal' → logprob: -5.082976818084717
    6. 'the' → logprob: -5.082976818084717
    7. 'prod' → logprob: -5.332976818084717
    8. ' same' → logprob: -6.707976818084717
    9. 'count' → logprob: -7.332976818084717
    10. 'product' → logprob: -7.457976818084717

Token 179: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03983725979924202
    2. ' ==' → logprob: -3.66483736038208
    3. '_s' → logprob: -4.53983736038208
    4. 's' → logprob: -6.78983736038208
    5. '=' → logprob: -7.16483736038208
    6. '<=' → logprob: -8.414836883544922
    7. '__' → logprob: -8.789836883544922
    8. '_' → logprob: -9.414836883544922
    9. '<' → logprob: -9.914836883544922
    10. 'def' → logprob: -10.039836883544922

Token 180: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.011063974350690842
    2. 'prod' → logprob: -4.511064052581787
    3. ' sum' → logprob: -11.386063575744629
    4. 's' → logprob: -12.386063575744629
    5. '
' → logprob: -15.511063575744629
    6. ' prod' → logprob: -16.011064529418945
    7. 'max' → logprob: -16.261064529418945
    8. 'product' → logprob: -16.261064529418945
    9. '(prod' → logprob: -17.761064529418945
    10. '(sum' → logprob: -17.886064529418945

Token 181: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.786196975852363e-05
    2. 's' → logprob: -10.750038146972656
    3. ')' → logprob: -11.625038146972656
    4. '[' → logprob: -12.625038146972656
    5. '_' → logprob: -13.375038146972656
    6. '```' → logprob: -14.000038146972656
    7. '#' → logprob: -14.875038146972656
    8. 'import' → logprob: -15.625038146972656
    9. '=' → logprob: -16.000038146972656
    10. ']' → logprob: -16.375038146972656

Token 182: ' and' (ID: 326)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.9419266581535339
    2. '_s' → logprob: -1.8169267177581787
    3. '_' → logprob: -2.4419267177581787
    4. '_dp' → logprob: -2.5669267177581787
    5. '_sum' → logprob: -2.8169267177581787
    6. '@' → logprob: -2.8169267177581787
    7. '_count' → logprob: -3.0669267177581787
    8. '#' → logprob: -3.6919267177581787
    9. 'dp' → logprob: -3.8169267177581787
    10. ')' → logprob: -4.4419264793396

Token 183: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.04431207478046417
    2. ' prod' → logprob: -3.169312000274658
    3. 'product' → logprob: -7.544312000274658
    4. 'digits' → logprob: -8.669312477111816
    5. '(prod' → logprob: -8.669312477111816
    6. ' product' → logprob: -9.044312477111816
    7. 'length' → logprob: -9.169312477111816
    8. 'len' → logprob: -9.669312477111816
    9. ' digits' → logprob: -9.919312477111816
    10. ' length' → logprob: -10.294312477111816

Token 184: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2038852721452713
    2. ' ==' → logprob: -1.8288853168487549
    3. '<=' → logprob: -4.578885078430176
    4. '=' → logprob: -5.328885078430176
    5. '[' → logprob: -5.578885078430176
    6. ' <=' → logprob: -5.828885078430176
    7. '_s' → logprob: -7.828885078430176
    8. 's' → logprob: -8.203885078430176
    9. '_equal' → logprob: -8.203885078430176
    10. ' =' → logprob: -9.203885078430176

Token 185: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.00012642296496778727
    2. ' prod' → logprob: -9.000126838684082
    3. 'product' → logprob: -13.625126838684082
    4. '(prod' → logprob: -13.625126838684082
    5. '.prod' → logprob: -15.500126838684082
    6. '_prod' → logprob: -15.875126838684082
    7. 'pro' → logprob: -16.000125885009766
    8. 'prob' → logprob: -17.625125885009766
    9. 'p' → logprob: -18.000125885009766
    10. '0' → logprob: -18.000125885009766

Token 186: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.694766489090398e-05
    2. 's' → logprob: -10.250066757202148
    3. '```' → logprob: -12.000066757202148
    4. '_' → logprob: -12.750066757202148
    5. '_prod' → logprob: -12.750066757202148
    6. ''_' → logprob: -12.750066757202148
    7. ')_' → logprob: -12.875066757202148
    8. '_p' → logprob: -12.875066757202148
    9. '_d' → logprob: -13.500066757202148
    10. '\' → logprob: -13.500066757202148

Token 187: ' and' (ID: 326)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.014971079304814339
    2. '_' → logprob: -5.2649712562561035
    3. ')' → logprob: -5.7649712562561035
    4. '@
' → logprob: -6.5149712562561035
    5. ':' → logprob: -7.2649712562561035
    6. ',' → logprob: -7.7649712562561035
    7. '
' → logprob: -7.8899712562561035
    8. '\' → logprob: -8.139970779418945
    9. '_
' → logprob: -8.389970779418945
    10. '\n' → logprob: -8.389970779418945

Token 188: ' int' (ID: 677)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.3484678268432617
    2. ' pos' → logprob: -2.2234678268432617
    3. 'digits' → logprob: -2.3484678268432617
    4. ' all' → logprob: -2.7234678268432617
    5. ' digits' → logprob: -2.7234678268432617
    6. ' count' → logprob: -3.2234678268432617
    7. ' prefix' → logprob: -3.2234678268432617
    8. 'prefix' → logprob: -3.2234678268432617
    9. 'count' → logprob: -3.4734678268432617
    10. 'i' → logprob: -3.8484678268432617

Token 189: ' <' (ID: 464)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.020848993211984634
    2. '_' → logprob: -3.8958489894866943
    3. 's' → logprob: -9.270849227905273
    4. ')' → logprob: -10.395849227905273
    5. '(' → logprob: -10.645849227905273
    6. '```' → logprob: -10.645849227905273
    7. '_tokens' → logprob: -10.770849227905273
    8. ' _' → logprob: -11.145849227905273
    9. '_token' → logprob: -11.395849227905273
    10. '_n' → logprob: -12.020849227905273

Token 190: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038056403398513794
    2. ' int' → logprob: -3.2880563735961914
    3. 's' → logprob: -11.788056373596191
    4. ' s' → logprob: -12.788056373596191
    5. '=int' → logprob: -13.413056373596191
    6. '(int' → logprob: -13.538056373596191
    7. ' ' → logprob: -14.663056373596191
    8. '```' → logprob: -15.288056373596191
    9. '_int' → logprob: -15.913056373596191
    10. '`' → logprob: -15.913056373596191

Token 191: '_s' (ID: 1278)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.013833542354404926
    2. ')' → logprob: -5.263833522796631
    3. '\n' → logprob: -6.513833522796631
    4. 'dp' → logprob: -7.138833522796631
    5. '(' → logprob: -7.263833522796631
    6. '#' → logprob: -7.263833522796631
    7. '[' → logprob: -7.388833522796631
    8. '\' → logprob: -7.638833522796631
    9. '(
' → logprob: -7.638833522796631
    10. '```' → logprob: -7.763833522796631

Token 192: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.005281665362417698
    2. 'dp' → logprob: -6.755281448364258
    3. '_' → logprob: -7.130281448364258
    4. '_dp' → logprob: -7.505281448364258
    5. '@
' → logprob: -7.755281448364258
    6. ')' → logprob: -7.755281448364258
    7. 'from' → logprob: -8.130281448364258
    8. '\' → logprob: -8.630281448364258
    9. 'def' → logprob: -9.005281448364258
    10. '_cache' → logprob: -9.130281448364258

Token 193: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00660962238907814
    2. 'dp' → logprob: -5.2566094398498535
    3. 'from' → logprob: -6.7566094398498535
    4. 'def' → logprob: -10.006609916687012
    5. ')' → logprob: -10.131609916687012
    6. '#' → logprob: -11.006609916687012
    7. 'max' → logprob: -11.131609916687012
    8. 'digits' → logprob: -11.256609916687012
    9. '```' → logprob: -11.756609916687012
    10. '@
' → logprob: -11.881609916687012

Token 194: ' The' (ID: 623)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.002224364085122943
    2. 'from' → logprob: -6.627224445343018
    3. 'def' → logprob: -7.627224445343018
    4. 'dp' → logprob: -8.00222396850586
    5. 'import' → logprob: -11.12722396850586
    6. 'digits' → logprob: -11.62722396850586
    7. '#' → logprob: -12.12722396850586
    8. '@n' → logprob: -12.12722396850586
    9. 'max' → logprob: -12.62722396850586
    10. ' @' → logprob: -12.62722396850586

Token 195: ' main' (ID: 2758)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.004402582533657551
    2. 'from' → logprob: -5.8794026374816895
    3. 'def' → logprob: -7.3794026374816895
    4. ' @' → logprob: -8.254402160644531
    5. '
' → logprob: -9.129402160644531
    6. 'next' → logprob: -9.254402160644531
    7. '@
' → logprob: -9.379402160644531
    8. 'dp' → logprob: -9.879402160644531
    9. 'remaining' → logprob: -10.129402160644531
    10. 's' → logprob: -10.254402160644531

Token 196: ' challenge' (ID: 12160)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.10589224845170975
    2. 'def' → logprob: -2.4808921813964844
    3. '_' → logprob: -4.230892181396484
    4. 'from' → logprob: -7.605892181396484
    5. ' @' → logprob: -7.605892181396484
    6. '(' → logprob: -7.980892181396484
    7. '()' → logprob: -8.605892181396484
    8. '@param' → logprob: -9.230892181396484
    9. '_token' → logprob: -9.355892181396484
    10. ')' → logprob: -9.605892181396484

Token 197: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.664189875125885
    2. 'is' → logprob: -1.9141898155212402
    3. '=' → logprob: -2.4141898155212402
    4. ':' → logprob: -2.5391898155212402
    5. '#' → logprob: -3.0391898155212402
    6. '@' → logprob: -3.2891898155212402
    7. ',' → logprob: -3.5391898155212402
    8. 'def' → logprob: -4.03918981552124
    9. '<|end|>' → logprob: -5.16418981552124
    10. ')' → logprob: -5.28918981552124

Token 198: ' dealing' (ID: 21706)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03650204464793205
    2. ' to' → logprob: -3.6615021228790283
    3. 'that' → logprob: -5.536501884460449
    4. 'def' → logprob: -5.911501884460449
    5. 't' → logprob: -7.036501884460449
    6. 'the' → logprob: -7.411501884460449
    7. 'handling' → logprob: -7.411501884460449
    8. ' that' → logprob: -7.786501884460449
    9. 'how' → logprob: -8.28650188446045
    10. 'implement' → logprob: -8.91150188446045

Token 199: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.14223815500736237
    2. ' with' → logprob: -2.142238140106201
    3. '=' → logprob: -4.767238140106201
    4. '_' → logprob: -5.392238140106201
    5. '<|end|>' → logprob: -6.767238140106201
    6. ',' → logprob: -8.64223861694336
    7. '#' → logprob: -8.76723861694336
    8. ')' → logprob: -9.01723861694336
    9. '_with' → logprob: -9.01723861694336
    10. '<|end|>' → logprob: -9.14223861694336

Token 200: ' large' (ID: 4410)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.755889892578125
    2. 'products' → logprob: -1.880889892578125
    3. 'the' → logprob: -2.005889892578125
    4. 'three' → logprob: -2.130889892578125
    5. ' the' → logprob: -2.630889892578125
    6. 'prod' → logprob: -2.880889892578125
    7. ' three' → logprob: -2.880889892578125
    8. 'large' → logprob: -3.255889892578125
    9. ' large' → logprob: -3.380889892578125
    10. 'leading' → logprob: -3.505889892578125

Token 201: ' product' (ID: 1888)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.2247411012649536
    2. ' states' → logprob: -2.474740982055664
    3. 'numbers' → logprob: -3.974740982055664
    4. ' integers' → logprob: -4.474740982055664
    5. 'digits' → logprob: -4.724740982055664
    6. '_dp' → logprob: -4.849740982055664
    7. 'dp' → logprob: -4.974740982055664
    8. 'states' → logprob: -4.974740982055664
    9. ' digits' → logprob: -5.474740982055664
    10. 'state' → logprob: -5.474740982055664

Token 202: ' space' (ID: 4918)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.002860866254195571
    2. ')' → logprob: -6.627861022949219
    3. '(' → logprob: -7.502861022949219
    4. 'def' → logprob: -8.627861022949219
    5. 'dp' → logprob: -8.752861022949219
    6. '#' → logprob: -8.752861022949219
    7. ' @' → logprob: -9.502861022949219
    8. '_' → logprob: -9.877861022949219
    9. '(
' → logprob: -9.877861022949219
    10. ',' → logprob: -9.877861022949219

Token 203: '.
' (ID: 558)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.01636289805173874
    2. ')' → logprob: -4.51636266708374
    3. '#' → logprob: -6.64136266708374
    4. 'from' → logprob: -6.89136266708374
    5. 'def' → logprob: -6.89136266708374
    6. '(' → logprob: -8.141363143920898
    7. 'dp' → logprob: -8.141363143920898
    8. '```' → logprob: -8.516363143920898
    9. ',' → logprob: -8.891363143920898
    10. ']' → logprob: -8.891363143920898

Token 204: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.12387656420469284
    2. 'dp' → logprob: -3.7488765716552734
    3. ')' → logprob: -3.8738765716552734
    4. '#' → logprob: -4.248876571655273
    5. '\' → logprob: -4.873876571655273
    6. 'def' → logprob: -4.873876571655273
    7. '```' → logprob: -4.873876571655273
    8. '(' → logprob: -4.873876571655273
    9. ' @' → logprob: -5.123876571655273
    10. 'n' → logprob: -5.248876571655273

Token 205: ' But' (ID: 3072)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2356991320848465
    2. 'dp' → logprob: -2.36069917678833
    3. 'from' → logprob: -2.86069917678833
    4. 'def' → logprob: -3.48569917678833
    5. ' @' → logprob: -4.61069917678833
    6. 'import' → logprob: -5.23569917678833
    7. '#' → logprob: -6.23569917678833
    8. '\' → logprob: -6.48569917678833
    9. 'DP' → logprob: -6.48569917678833
    10. '\n' → logprob: -6.61069917678833

Token 206: ' product' (ID: 1888)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.8769618272781372
    2. 'from' → logprob: -2.0019617080688477
    3. ' the' → logprob: -2.2519617080688477
    4. 'we' → logprob: -2.6269617080688477
    5. '@' → logprob: -2.8769617080688477
    6. ' from' → logprob: -2.8769617080688477
    7. '#' → logprob: -3.6269617080688477
    8. 'the' → logprob: -4.001961708068848
    9. ' since' → logprob: -4.251961708068848
    10. 'def' → logprob: -4.251961708068848

Token 207: ' can' (ID: 665)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.7956753969192505
    2. '<|end|>' → logprob: -1.0456753969192505
    3. '<|end|>' → logprob: -1.7956753969192505
    4. 's' → logprob: -4.295675277709961
    5. '_' → logprob: -4.670675277709961
    6. ' =' → logprob: -5.920675277709961
    7. '_states' → logprob: -6.795675277709961
    8. ',' → logprob: -7.670675277709961
    9. '=' → logprob: -7.795675277709961
    10. ')' → logprob: -7.920675277709961

Token 208: ' be' (ID: 413)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.0828930139541626
    2. 'only' → logprob: -1.0828930139541626
    3. ' be' → logprob: -1.5828930139541626
    4. 'be' → logprob: -3.707892894744873
    5. 'range' → logprob: -4.207892894744873
    6. 'increase' → logprob: -4.207892894744873
    7. ' range' → logprob: -4.457892894744873
    8. ' at' → logprob: -4.957892894744873
    9. '=' → logprob: -4.957892894744873
    10. ' take' → logprob: -5.082892894744873

Token 209: ' up' (ID: 869)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -1.457632064819336
    2. 'factor' → logprob: -1.832632064819336
    3. 'hu' → logprob: -2.207632064819336
    4. 'up' → logprob: -2.332632064819336
    5. 'very' → logprob: -2.332632064819336
    6. 'too' → logprob: -2.707632064819336
    7. 'big' → logprob: -2.832632064819336
    8. 'at' → logprob: -3.082632064819336
    9. 'represented' → logprob: -3.207632064819336
    10. '0' → logprob: -3.582632064819336

Token 210: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.10647326707839966
    2. '1' → logprob: -3.981473207473755
    3. '9' → logprob: -4.106473445892334
    4. '_to' → logprob: -4.356473445892334
    5. 'p' → logprob: -4.481473445892334
    6. '0' → logprob: -4.606473445892334
    7. 't' → logprob: -5.481473445892334
    8. 'To' → logprob: -5.606473445892334
    9. '16' → logprob: -6.356473445892334
    10. 'n' → logprob: -6.356473445892334

Token 211: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4364013969898224
    2. ' (' → logprob: -1.6864013671875
    3. '10' → logprob: -2.3114013671875
    4. '(prod' → logprob: -3.6864013671875
    5. '100' → logprob: -4.0614013671875
    6. 'prod' → logprob: -4.6864013671875
    7. '(n' → logprob: -5.1864013671875
    8. ' ' → logprob: -5.8114013671875
    9. '(pow' → logprob: -5.8114013671875
    10. 'pow' → logprob: -6.9364013671875

Token 212: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.017008859664201736
    2. '9' → logprob: -4.1420087814331055
    3. ' ' → logprob: -7.2670087814331055
    4. '11' → logprob: -9.267008781433105
    5. 'd' → logprob: -9.642008781433105
    6. '```' → logprob: -10.642008781433105
    7. 'digit' → logprob: -11.017008781433105
    8. 'digits' → logprob: -11.142008781433105
    9. '1' → logprob: -11.517008781433105
    10. 'max' → logprob: -11.642008781433105

Token 213: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4870634377002716
    2. ')**' → logprob: -1.2370634078979492
    3. '**' → logprob: -2.737063407897949
    4. '0' → logprob: -4.362063407897949
    5. ')^' → logprob: -4.737063407897949
    6. '^' → logprob: -6.237063407897949
    7. '```' → logprob: -6.237063407897949
    8. ' )' → logprob: -6.362063407897949
    9. '*n' → logprob: -6.987063407897949
    10. ' **' → logprob: -7.737063407897949

Token 214: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13418199121952057
    2. '(' → logprob: -2.6341819763183594
    3. '(n' → logprob: -3.2591819763183594
    4. '9' → logprob: -4.509181976318359
    5. '0' → logprob: -6.509181976318359
    6. '```' → logprob: -7.259181976318359
    7. ' n' → logprob: -7.634181976318359
    8. 'digits' → logprob: -7.884181976318359
    9. ' (' → logprob: -8.00918197631836
    10. '10' → logprob: -8.25918197631836

Token 215: ' which' (ID: 1118)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8398699760437012
    2. '#' → logprob: -1.7148699760437012
    3. ')' → logprob: -1.8398699760437012
    4. 'from' → logprob: -2.839869976043701
    5. '<|end|>' → logprob: -3.714869976043701
    6. '@' → logprob: -3.839869976043701
    7. '_' → logprob: -4.089869976043701
    8. ',' → logprob: -4.214869976043701
    9. '```' → logprob: -4.464869976043701
    10. 'import' → logprob: -4.464869976043701

Token 216: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1558656543493271
    2. 'is' → logprob: -2.0308656692504883
    3. '
' → logprob: -5.655865669250488
    4. ' can' → logprob: -6.030865669250488
    5. '#' → logprob: -6.155865669250488
    6. 'can' → logprob: -6.530865669250488
    7. ' exceeds' → logprob: -6.905865669250488
    8. ' may' → logprob: -7.905865669250488
    9. '```' → logprob: -8.280865669250488
    10. 'ex' → logprob: -8.280865669250488

Token 217: ' huge' (ID: 9560)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.08493660390377045
    2. 'hu' → logprob: -3.0849366188049316
    3. 'very' → logprob: -3.7099366188049316
    4. ' too' → logprob: -5.959936618804932
    5. 'large' → logprob: -6.209936618804932
    6. 'im' → logprob: -6.709936618804932
    7. 'ext' → logprob: -6.709936618804932
    8. 'ex' → logprob: -6.834936618804932
    9. 'mass' → logprob: -7.084936618804932
    10. 'en' → logprob: -7.334936618804932

Token 218: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.069517970085144
    2. '@' → logprob: -1.319517970085144
    3. '
' → logprob: -2.1945180892944336
    4. '#' → logprob: -2.5695180892944336
    5. ',' → logprob: -2.8195180892944336
    6. '<|end|>' → logprob: -3.4445180892944336
    7. '```' → logprob: -4.069518089294434
    8. 'from' → logprob: -4.444518089294434
    9. 'def' → logprob: -4.444518089294434
    10. 'import' → logprob: -4.569518089294434

Token 219: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.44289547204971313
    2. '#' → logprob: -2.0678954124450684
    3. ')' → logprob: -2.5678954124450684
    4. 'def' → logprob: -3.0678954124450684
    5. 'dp' → logprob: -3.4428954124450684
    6. '
' → logprob: -4.192895412445068
    7. '\' → logprob: -4.567895412445068
    8. '```' → logprob: -4.692895412445068
    9. '\n' → logprob: -5.067895412445068
    10. 'from' → logprob: -5.192895412445068

Token 220: ' We' (ID: 1416)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2047462910413742
    2. ')' → logprob: -2.0797462463378906
    3. '#' → logprob: -3.5797462463378906
    4. '(' → logprob: -5.204746246337891
    5. ' @' → logprob: -5.579746246337891
    6. 'dp' → logprob: -5.579746246337891
    7. 'def' → logprob: -5.829746246337891
    8. '
' → logprob: -6.204746246337891
    9. 'import' → logprob: -6.329746246337891
    10. ' 
' → logprob: -6.579746246337891

Token 221: ' will' (ID: 738)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2881520986557007
    2. ''ll' → logprob: -1.9131520986557007
    3. ' cannot' → logprob: -2.0381522178649902
    4. 'cannot' → logprob: -2.1631522178649902
    5. ' =' → logprob: -2.6631522178649902
    6. ' can' → logprob: -2.9131522178649902
    7. ' will' → logprob: -2.9131522178649902
    8. '=' → logprob: -3.4131522178649902
    9. 'import' → logprob: -3.6631522178649902
    10. ' need' → logprob: -3.7881522178649902

Token 222: ' note' (ID: 7477)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.31970053911209106
    2. 'compress' → logprob: -2.5697004795074463
    3. 'import' → logprob: -2.9447004795074463
    4. 'try' → logprob: -3.0697004795074463
    5. 'factor' → logprob: -3.4447004795074463
    6. 'cache' → logprob: -3.9447004795074463
    7. 'from' → logprob: -4.569700717926025
    8. 'def' → logprob: -5.069700717926025
    9. 'approx' → logprob: -5.069700717926025
    10. 'apply' → logprob: -5.569700717926025

Token 223: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.8148698210716248
    2. ' that' → logprob: -1.1898698806762695
    3. '#' → logprob: -1.8148698806762695
    4. '_' → logprob: -3.5648698806762695
    5. 'from' → logprob: -4.6898698806762695
    6. 'import' → logprob: -4.9398698806762695
    7. '_that' → logprob: -5.6898698806762695
    8. ':' → logprob: -5.8148698806762695
    9. 'down' → logprob: -5.8148698806762695
    10. '...' → logprob: -5.9398698806762695

Token 224: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.005955457687378
    2. 'product' → logprob: -2.130955457687378
    3. '10' → logprob: -2.255955457687378
    4. 'for' → logprob: -2.505955457687378
    5. 'import' → logprob: -3.130955457687378
    6. '#' → logprob: -3.130955457687378
    7. 'log' → logprob: -3.505955457687378
    8. 'from' → logprob: -3.630955457687378
    9. 'each' → logprob: -3.880955457687378
    10. 'products' → logprob: -3.880955457687378

Token 225: ' (' (ID: 350)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6622703671455383
    2. 'next' → logprob: -2.0372703075408936
    3. ' next' → logprob: -2.2872703075408936
    4. ' product' → logprob: -2.2872703075408936
    5. 'digits' → logprob: -3.5372703075408936
    6. 'code' → logprob: -4.037270545959473
    7. 'products' → logprob: -4.162270545959473
    8. 'log' → logprob: -4.162270545959473
    9. 'problem' → logprob: -4.162270545959473
    10. ' code' → logprob: -5.162270545959473

Token 226: 'd' (ID: 67)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -1.3196519613265991
    2. '10' → logprob: -1.4446519613265991
    3. ')' → logprob: -1.6946519613265991
    4. 'prod' → logprob: -2.9446520805358887
    5. 'product' → logprob: -3.0696520805358887
    6. 'd' → logprob: -3.6946520805358887
    7. 'next' → logprob: -3.8196520805358887
    8. ' next' → logprob: -4.069652080535889
    9. ' product' → logprob: -4.069652080535889
    10. ' digits' → logprob: -4.194652080535889

Token 227: '_i' (ID: 10853)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40071800351142883
    2. ')' → logprob: -1.5257179737091064
    3. 'igits' → logprob: -2.6507179737091064
    4. '**' → logprob: -4.0257182121276855
    5. '+)' → logprob: -4.5257182121276855
    6. 'igit' → logprob: -5.9007182121276855
    7. 's' → logprob: -6.4007182121276855
    8. '=' → logprob: -6.7757182121276855
    9. ')+' → logprob: -7.1507182121276855
    10. 'd' → logprob: -7.1507182121276855

Token 228: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05811844766139984
    2. ')' → logprob: -3.3081183433532715
    3. ' +' → logprob: -4.6831183433532715
    4. 's' → logprob: -5.9331183433532715
    5. ')+' → logprob: -5.9331183433532715
    6. '==' → logprob: -6.6831183433532715
    7. '+)' → logprob: -7.3081183433532715
    8. ' ==' → logprob: -7.4331183433532715
    9. '**' → logprob: -7.5581183433532715
    10. '```' → logprob: -8.05811882019043

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019426802173256874
    2. ' ' → logprob: -6.2519426345825195
    3. ')' → logprob: -11.62694263458252
    4. '0' → logprob: -13.00194263458252
    5. '```' → logprob: -13.87694263458252
    6. '+' → logprob: -14.50194263458252
    7. '=' → logprob: -14.62694263458252
    8. '   ' → logprob: -15.37694263458252
    9. '  ' → logprob: -16.126943588256836
    10. '
' → logprob: -16.126943588256836

Token 230: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009630831889808178
    2. ')**' → logprob: -5.3846306800842285
    3. ')^' → logprob: -6.5096306800842285
    4. ')`' → logprob: -7.2596306800842285
    5. ')#' → logprob: -7.6346306800842285
    6. ')_' → logprob: -7.7596306800842285
    7. '[' → logprob: -8.259631156921387
    8. ')[' → logprob: -8.384631156921387
    9. ')+' → logprob: -8.509631156921387
    10. '```' → logprob: -8.634631156921387

Token 231: ' are' (ID: 553)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5181796550750732
    2. ' factors' → logprob: -1.5181796550750732
    3. 's' → logprob: -1.7681796550750732
    4. ' is' → logprob: -2.5181796550750732
    5. 'factor' → logprob: -2.7681796550750732
    6. ' factor' → logprob: -3.2681796550750732
    7. ' can' → logprob: -3.2681796550750732
    8. 'values' → logprob: -3.3931796550750732
    9. ' are' → logprob: -3.5181796550750732
    10. ' values' → logprob: -4.268179893493652

Token 232: ' in' (ID: 306)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.0799294710159302
    2. 'all' → logprob: -2.0799293518066406
    3. 'small' → logprob: -2.0799293518066406
    4. ' all' → logprob: -2.4549293518066406
    5. ' at' → logprob: -2.9549293518066406
    6. 'at' → logprob: -3.0799293518066406
    7. ' either' → logprob: -3.3299293518066406
    8. 'either' → logprob: -3.4549293518066406
    9. 'always' → logprob: -3.5799293518066406
    10. 'only' → logprob: -4.079929351806641

Token 233: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04279705137014389
    2. ' range' → logprob: -4.042797088623047
    3. '{' → logprob: -4.542797088623047
    4. ' [' → logprob: -5.042797088623047
    5. 'range' → logprob: -5.042797088623047
    6. '1' → logprob: -7.917797088623047
    7. ' {' → logprob: -8.792797088623047
    8. 'the' → logprob: -9.667797088623047
    9. ' ' → logprob: -10.042797088623047
    10. '(' → logprob: -10.292797088623047

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4034345187828876e-05
    2. 'range' → logprob: -11.75002384185791
    3. ' ' → logprob: -12.25002384185791
    4. ',' → logprob: -12.62502384185791
    5. ']' → logprob: -13.12502384185791
    6. '(' → logprob: -13.25002384185791
    7. 'from' → logprob: -13.50002384185791
    8. '[' → logprob: -14.00002384185791
    9. '{' → logprob: -14.37502384185791
    10. '```' → logprob: -14.75002384185791

Token 235: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004146661143749952
    2. '10' → logprob: -6.754146575927734
    3. '0' → logprob: -6.879146575927734
    4. ']' → logprob: -7.004146575927734
    5. ' ,' → logprob: -7.629146575927734
    6. '```' → logprob: -7.879146575927734
    7. '11' → logprob: -9.754146575927734
    8. ':' → logprob: -10.504146575927734
    9. '1' → logprob: -10.629146575927734
    10. '...' → logprob: -11.629146575927734

Token 236: '10' (ID: 702)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.001544737839139998
    2. '10' → logprob: -6.501544952392578
    3. '```' → logprob: -10.501544952392578
    4. '101' → logprob: -12.251544952392578
    5. ' ' → logprob: -12.626544952392578
    6. ']' → logprob: -13.126544952392578
    7. '``' → logprob: -13.876544952392578
    8. '1' → logprob: -14.501544952392578
    9. '
' → logprob: -14.751544952392578
    10. '100' → logprob: -14.876544952392578

Token 237: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045557913836091757
    2. '],' → logprob: -8.500455856323242
    3. '**' → logprob: -9.375455856323242
    4. ' ]' → logprob: -10.000455856323242
    5. ']
' → logprob: -10.250455856323242
    6. '].' → logprob: -10.750455856323242
    7. ')' → logprob: -11.375455856323242
    8. '#' → logprob: -11.750455856323242
    9. '])' → logprob: -11.750455856323242
    10. ']:' → logprob: -12.000455856323242

Token 238: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.387203186750412
    2. ')' → logprob: -1.8872032165527344
    3. 'from' → logprob: -2.6372032165527344
    4. '#' → logprob: -2.8872032165527344
    5. 'dp' → logprob: -4.512203216552734
    6. 'import' → logprob: -4.887203216552734
    7. 'def' → logprob: -5.137203216552734
    8. '[' → logprob: -5.762203216552734
    9. '```' → logprob: -5.887203216552734
    10. ']' → logprob: -6.387203216552734

Token 239: ' Let's' (ID: 41021)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.01159343495965004
    2. 'from' → logprob: -5.386593341827393
    3. 'dp' → logprob: -6.011593341827393
    4. 'MOD' → logprob: -6.886593341827393
    5. 'def' → logprob: -7.261593341827393
    6. 'mod' → logprob: -7.261593341827393
    7. '#' → logprob: -7.261593341827393
    8. 'digits' → logprob: -8.13659381866455
    9. 'import' → logprob: -8.63659381866455
    10. 'cache' → logprob: -8.76159381866455

Token 240: ' factor' (ID: 12332)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.22523333132266998
    2. 'from' → logprob: -2.225233316421509
    3. 'def' → logprob: -3.100233316421509
    4. 'define' → logprob: -3.100233316421509
    5. 'continue' → logprob: -6.225233554840088
    6. '...' → logprob: -7.600233554840088
    7. ' define' → logprob: -7.975233554840088
    8. 'write' → logprob: -8.72523307800293
    9. 'dp' → logprob: -9.35023307800293
    10. 'import' → logprob: -9.47523307800293

Token 241: 'ize' (ID: 750)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3696909546852112
    2. '#' → logprob: -2.4946908950805664
    3. 'd' → logprob: -3.3696908950805664
    4. '_' → logprob: -3.4946908950805664
    5. 'ize' → logprob: -3.4946908950805664
    6. 'from' → logprob: -3.8696908950805664
    7. 'digits' → logprob: -3.8696908950805664
    8. 'ization' → logprob: -3.9946908950805664
    9. ' ' → logprob: -4.119690895080566
    10. '(' → logprob: -4.244690895080566

Token 242: ' product' (ID: 1888)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1483643651008606
    2. 'prime' → logprob: -3.148364305496216
    3. 'pr' → logprob: -3.773364305496216
    4. ' from' → logprob: -4.398364543914795
    5. 'factor' → logprob: -4.398364543914795
    6. ' primes' → logprob: -4.398364543914795
    7. 'import' → logprob: -4.773364543914795
    8. '#' → logprob: -5.023364543914795
    9. 'def' → logprob: -5.023364543914795
    10. 'f' → logprob: -5.148364543914795

Token 243: ' in' (ID: 306)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12287837266921997
    2. 'prime' → logprob: -3.247878313064575
    3. 'f' → logprob: -3.372878313064575
    4. 'factor' → logprob: -3.872878313064575
    5. 'import' → logprob: -4.497878551483154
    6. 'pr' → logprob: -5.497878551483154
    7. 'def' → logprob: -5.497878551483154
    8. '#' → logprob: -6.872878551483154
    9. 'fact' → logprob: -8.122878074645996
    10. ' from' → logprob: -8.372878074645996

Token 244: ' prime' (ID: 9197)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.771361231803894
    2. '[' → logprob: -1.146361231803894
    3. 'prime' → logprob: -1.896361231803894
    4. 'pr' → logprob: -3.3963613510131836
    5. '{' → logprob: -3.8963613510131836
    6. ' prime' → logprob: -4.271361351013184
    7. '2' → logprob: -8.146361351013184
    8. 'the' → logprob: -8.396361351013184
    9. ' [' → logprob: -8.521361351013184
    10. 'small' → logprob: -8.896361351013184

Token 245: ' factors' (ID: 11652)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4757060408592224
    2. 'f' → logprob: -1.2257061004638672
    3. '_f' → logprob: -2.475706100463867
    4. 'factor' → logprob: -8.475706100463867
    5. ' factors' → logprob: -8.725706100463867
    6. 'pr' → logprob: -8.725706100463867
    7. '_pr' → logprob: -8.975706100463867
    8. '_factor' → logprob: -9.475706100463867
    9. '```' → logprob: -9.850706100463867
    10. 'es' → logprob: -10.225706100463867

Token 246: ' ' (ID: 220)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.005814909934997559
    2. ' primes' → logprob: -5.505815029144287
    3. 'from' → logprob: -6.880815029144287
    4. 'prime' → logprob: -7.755815029144287
    5. '```' → logprob: -9.255814552307129
    6. 'import' → logprob: -9.630814552307129
    7. ' from' → logprob: -10.130814552307129
    8. ':' → logprob: -10.755814552307129
    9. 'def' → logprob: -11.005814552307129
    10. '_pr' → logprob: -11.630814552307129

Token 247: '2' (ID: 17)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.020767036825418472
    2. ':' → logprob: -4.0207672119140625
    3. ' primes' → logprob: -6.8957672119140625
    4. 'prime' → logprob: -7.3957672119140625
    5. '_pr' → logprob: -7.5207672119140625
    6. 'from' → logprob: -8.895767211914062
    7. 'import' → logprob: -9.270767211914062
    8. ':
' → logprob: -9.770767211914062
    9. '```' → logprob: -10.645767211914062
    10. 's' → logprob: -10.645767211914062

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016880759969353676
    2. ' ,' → logprob: -4.391880989074707
    3. '3' → logprob: -6.141880989074707
    4. ' =' → logprob: -7.641880989074707
    5. '2' → logprob: -7.891880989074707
    6. ' ' → logprob: -8.016880989074707
    7. ' and' → logprob: -8.516880989074707
    8. 'and' → logprob: -8.766880989074707
    9. '37' → logprob: -9.266880989074707
    10. ':' → logprob: -9.391880989074707

Token 249: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004623322281986475
    2. ' ' → logprob: -5.3796234130859375
    3. '5' → logprob: -12.754623413085938
    4. '7' → logprob: -16.504623413085938
    5. '2' → logprob: -17.129623413085938
    6. '```' → logprob: -17.692123413085938
    7. ' ' → logprob: -17.879623413085938
    8. '
' → logprob: -18.692123413085938
    9. '#' → logprob: -18.879623413085938
    10. 'and' → logprob: -19.004623413085938

Token 250: ',' (ID: 11)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.48124614357948303
    2. ',' → logprob: -1.1062461137771606
    3. ' ,' → logprob: -3.60624623298645
    4. ' ' → logprob: -3.73124623298645
    5. ' and' → logprob: -10.856245994567871
    6. '7' → logprob: -11.231245994567871
    7. 'and' → logprob: -11.356245994567871
    8. '2' → logprob: -11.606245994567871
    9. ',
' → logprob: -12.606245994567871
    10. '=' → logprob: -13.106245994567871

Token 251: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.7292167184641585e-05
    2. ' ' → logprob: -9.875057220458984
    3. 'and' → logprob: -13.000057220458984
    4. '2' → logprob: -13.500057220458984
    5. '#' → logprob: -14.125057220458984
    6. ' and' → logprob: -14.875057220458984
    7. ',' → logprob: -15.250057220458984
    8. '```' → logprob: -15.687557220458984
    9. '7' → logprob: -16.312557220458984
    10. '[' → logprob: -16.750057220458984

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050636883825063705
    2. '7' → logprob: -3.9256367683410645
    3. '2' → logprob: -4.3006367683410645
    4. 'import' → logprob: -5.9256367683410645
    5. 'pr' → logprob: -6.4256367683410645
    6. ':' → logprob: -6.4256367683410645
    7. 'from' → logprob: -6.5506367683410645
    8. ' ,' → logprob: -6.6756367683410645
    9. 'factor' → logprob: -6.6756367683410645
    10. 'f' → logprob: -6.9256367683410645

Token 253: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0010380487656220794
    2. 'and' → logprob: -7.001038074493408
    3. ' ' → logprob: -9.62603759765625
    4. ' and' → logprob: -9.75103759765625
    5. '2' → logprob: -13.75103759765625
    6. '#' → logprob: -15.12603759765625
    7. ',' → logprob: -15.87603759765625
    8. '1' → logprob: -16.00103759765625
    9. '```' → logprob: -16.37603759765625
    10. '...' → logprob: -16.62603759765625

Token 254: '
' (ID: 198)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0325857512652874
    2. 'from' → logprob: -3.657585859298706
    3. 'import' → logprob: -5.657585620880127
    4. 'def' → logprob: -7.032585620880127
    5. 'prime' → logprob: -7.532585620880127
    6. ' primes' → logprob: -7.532585620880127
    7. '#' → logprob: -7.782585620880127
    8. '```' → logprob: -9.282586097717285
    9. '2' → logprob: -9.657586097717285
    10. 'f' → logprob: -9.657586097717285

Token 255: '#' (ID: 2)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.02068190649151802
    2. 'from' → logprob: -4.395681858062744
    3. 'prime' → logprob: -6.145681858062744
    4. '#' → logprob: -6.270681858062744
    5. 'import' → logprob: -6.395681858062744
    6. 'def' → logprob: -7.020681858062744
    7. ' primes' → logprob: -7.020681858062744
    8. 'f' → logprob: -8.645682334899902
    9. 'factor' → logprob: -8.895682334899902
    10. '```' → logprob: -9.270682334899902

Token 256: ' since' (ID: 3630)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.07166130840778351
    2. 'from' → logprob: -2.9466612339019775
    3. '#' → logprob: -5.071661472320557
    4. 'def' → logprob: -5.696661472320557
    5. 'import' → logprob: -5.821661472320557
    6. 'prime' → logprob: -5.821661472320557
    7. ' primes' → logprob: -7.571661472320557
    8. '```' → logprob: -8.946660995483398
    9. 'p' → logprob: -9.196660995483398
    10. 'f' → logprob: -9.696660995483398

Token 257: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06203848868608475
    2. ' ' → logprob: -3.9370384216308594
    3. '10' → logprob: -4.312038421630859
    4. '(' → logprob: -5.062038421630859
    5. '7' → logprob: -5.187038421630859
    6. 'the' → logprob: -5.562038421630859
    7. 'def' → logprob: -5.687038421630859
    8. 'from' → logprob: -6.187038421630859
    9. ' (' → logprob: -6.937038421630859
    10. 'we' → logprob: -7.437038421630859

Token 258: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08361008763313293
    2. '(' → logprob: -3.4586100578308105
    3. '10' → logprob: -4.0836100578308105
    4. 'the' → logprob: -4.9586100578308105
    5. 'digits' → logprob: -5.2086100578308105
    6. 'def' → logprob: -5.3336100578308105
    7. 'l' → logprob: -6.4586100578308105
    8. 'each' → logprob: -6.4586100578308105
    9. 'all' → logprob: -6.7086100578308105
    10. '[' → logprob: -6.8336100578308105

Token 259: '=' (ID: 28)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.23991365730762482
    2. ' =' → logprob: -2.6149137020111084
    3. '**' → logprob: -2.8649137020111084
    4. '=' → logprob: -3.1149137020111084
    5. '^' → logprob: -4.614913463592529
    6. ',' → logprob: -5.364913463592529
    7. ' ' → logprob: -5.489913463592529
    8. 'is' → logprob: -5.864913463592529
    9. ' has' → logprob: -5.989913463592529
    10. ' contains' → logprob: -6.114913463592529

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00606969790533185
    2. ' ' → logprob: -5.381069660186768
    3. '10' → logprob: -7.131069660186768
    4. '(' → logprob: -7.506069660186768
    5. '```' → logprob: -10.131070137023926
    6. '1' → logprob: -10.631070137023926
    7. ''' → logprob: -11.631070137023926
    8. '7' → logprob: -11.756070137023926
    9. ' (' → logprob: -11.881070137023926
    10. 'prime' → logprob: -13.506070137023926

Token 261: '*' (ID: 9)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07317060977220535
    2. '3' → logprob: -3.5731706619262695
    3. ',
' → logprob: -4.0731706619262695
    4. '*' → logprob: -5.3231706619262695
    5. '2' → logprob: -5.4481706619262695
    6. ' ,' → logprob: -5.4481706619262695
    7. '<|end|>' → logprob: -5.5731706619262695
    8. ' ' → logprob: -6.1981706619262695
    9. '**' → logprob: -7.0731706619262695
    10. 'import' → logprob: -7.3231706619262695

Token 262: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.633853652398102e-05
    2. '3' → logprob: -9.875056266784668
    3. '7' → logprob: -13.250056266784668
    4. '53' → logprob: -14.000056266784668
    5. '2' → logprob: -14.250056266784668
    6. ' ' → logprob: -14.625056266784668
    7. '517' → logprob: -16.000057220458984
    8. 'prime' → logprob: -16.437557220458984
    9. '
' → logprob: -16.500057220458984
    10. '_' → logprob: -16.562557220458984

Token 263: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6235548853874207
    2. 'def' → logprob: -1.6235549449920654
    3. 'pr' → logprob: -1.9985549449920654
    4. 'from' → logprob: -3.2485549449920654
    5. 'prime' → logprob: -3.3735549449920654
    6. '2' → logprob: -3.6235549449920654
    7. 'p' → logprob: -5.373554706573486
    8. 'f' → logprob: -5.498554706573486
    9. 'import' → logprob: -5.748554706573486
    10. '7' → logprob: -5.998554706573486

Token 264: ' digits' (ID: 37806)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.745507001876831
    2. '#' → logprob: -1.120507001876831
    3. '11' → logprob: -2.620507001876831
    4. 'from' → logprob: -2.870507001876831
    5. ' ' → logprob: -3.745507001876831
    6. 'import' → logprob: -4.37050724029541
    7. 'and' → logprob: -4.74550724029541
    8. '```' → logprob: -4.99550724029541
    9. '3' → logprob: -5.12050724029541
    10. 'def' → logprob: -5.37050724029541

Token 265: '+' (ID: 10)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1327886581420898
    2. '+' → logprob: -1.7577886581420898
    3. ' in' → logprob: -1.7577886581420898
    4. ' are' → logprob: -2.13278865814209
    5. 'in' → logprob: -2.50778865814209
    6. 's' → logprob: -3.75778865814209
    7. ' =' → logprob: -3.75778865814209
    8. ' ' → logprob: -4.13278865814209
    9. ',' → logprob: -4.88278865814209
    10. ' can' → logprob: -4.88278865814209

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38697582483291626
    2. '=' → logprob: -1.1369757652282715
    3. ' =' → logprob: -9.76197624206543
    4. ' ' → logprob: -10.26197624206543
    5. '0' → logprob: -12.51197624206543
    6. '```' → logprob: -13.13697624206543
    7. '[' → logprob: -13.26197624206543
    8. '   ' → logprob: -13.51197624206543
    9. '=[' → logprob: -14.13697624206543
    10. '#' → logprob: -14.13697624206543

Token 267: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9276538491249084
    2. ' =' → logprob: -1.6776537895202637
    3. 's' → logprob: -1.6776537895202637
    4. 'def' → logprob: -3.5526537895202637
    5. ':' → logprob: -3.6776537895202637
    6. '#' → logprob: -3.8026537895202637
    7. 'import' → logprob: -4.052653789520264
    8. ')' → logprob: -4.177653789520264
    9. ' are' → logprob: -4.302653789520264
    10. 'from' → logprob: -4.302653789520264

Token 268: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0789157897233963
    2. ' [' → logprob: -3.07891583442688
    3. ' range' → logprob: -3.82891583442688
    4. 'range' → logprob: -4.828915596008301
    5. '1' → logprob: -9.5789155960083
    6. '{' → logprob: -10.0789155960083
    7. ' ' → logprob: -10.8289155960083
    8. '```' → logprob: -12.2039155960083
    9. ' {' → logprob: -12.4539155960083
    10. '[
' → logprob: -13.4539155960083

Token 269: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02388657070696354
    2. 'range' → logprob: -3.7738866806030273
    3. '1' → logprob: -7.898886680603027
    4. ' range' → logprob: -8.648886680603027
    5. '{' → logprob: -10.023886680603027
    6. ' [' → logprob: -10.273886680603027
    7. '[
' → logprob: -11.773886680603027
    8. '```' → logprob: -12.898886680603027
    9. '0' → logprob: -13.648886680603027
    10. '10' → logprob: -14.398886680603027

Token 270: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.5384287238121033
    2. '0' → logprob: -0.9134287238121033
    3. ':' → logprob: -5.413428783416748
    4. '...' → logprob: -5.538428783416748
    5. '.' → logprob: -6.163428783416748
    6. '10' → logprob: -6.913428783416748
    7. ',' → logprob: -7.288428783416748
    8. '<=' → logprob: -7.538428783416748
    9. '012' → logprob: -7.788428783416748
    10. '#' → logprob: -7.913428783416748

Token 271: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06204129010438919
    2. '0' → logprob: -2.8120412826538086
    3. '1' → logprob: -10.062041282653809
    4. ' ' → logprob: -11.062041282653809
    5. '9' → logprob: -12.062041282653809
    6. '```' → logprob: -12.874541282653809
    7. '[' → logprob: -13.249541282653809
    8. '{' → logprob: -14.062041282653809
    9. '(' → logprob: -14.249541282653809
    10. '
' → logprob: -14.624541282653809

Token 272: '
' (ID: 198)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.3163803219795227
    2. 'from' → logprob: -2.691380262374878
    3. 'prime' → logprob: -2.816380262374878
    4. '#' → logprob: -2.816380262374878
    5. 'def' → logprob: -2.816380262374878
    6. 'f' → logprob: -4.691380500793457
    7. 'import' → logprob: -5.191380500793457
    8. 'factor' → logprob: -5.191380500793457
    9. '```' → logprob: -7.066380500793457
    10. '2' → logprob: -7.316380500793457

Token 273: '#' (ID: 2)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.48629435896873474
    2. '#' → logprob: -1.9862943887710571
    3. 'def' → logprob: -2.4862942695617676
    4. 'from' → logprob: -2.7362942695617676
    5. 'prime' → logprob: -3.2362942695617676
    6. 'import' → logprob: -3.8612942695617676
    7. '2' → logprob: -4.486294269561768
    8. 'f' → logprob: -5.111294269561768
    9. 'p' → logprob: -5.236294269561768
    10. 'factor' → logprob: -5.486294269561768

Token 274: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.1079946756362915
    2. 'def' → logprob: -3.107994556427002
    3. 'from' → logprob: -3.607994556427002
    4. '#' → logprob: -3.982994556427002
    5. 'prime' → logprob: -4.857994556427002
    6. 'import' → logprob: -6.232994556427002
    7. 'f' → logprob: -7.982994556427002
    8. 'p' → logprob: -7.982994556427002
    9. 'factor' → logprob: -8.10799503326416
    10. '```' → logprob: -8.10799503326416

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197933852672577
    2. '=' → logprob: -2.811979293823242
    3. 'pr' → logprob: -12.311979293823242
    4. '2' → logprob: -12.936979293823242
    5. ':' → logprob: -13.936979293823242
    6. '_' → logprob: -14.061979293823242
    7. '=[' → logprob: -14.186979293823242
    8. ' ' → logprob: -14.311979293823242
    9. 's' → logprob: -14.811979293823242
    10. ',' → logprob: -14.936979293823242

Token 276: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -17.875
    3. '2' → logprob: -19.0
    4. '[
' → logprob: -21.5
    5. '(' → logprob: -22.0
    6. '\[' → logprob: -22.875
    7. '{' → logprob: -23.375
    8. '[]' → logprob: -24.375
    9. 'pr' → logprob: -24.625
    10. '['' → logprob: -25.125

Token 277: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '[' → logprob: -18.625
    4. '(' → logprob: -18.75
    5. ']' → logprob: -20.0
    6. '   ' → logprob: -21.5
    7. '{' → logprob: -21.75
    8. ']
' → logprob: -21.875
    9. '```' → logprob: -22.125
    10. '
' → logprob: -22.375

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ',
' → logprob: -11.375020027160645
    3. ' ,' → logprob: -11.875020027160645
    4. '2' → logprob: -13.750020027160645
    5. '3' → logprob: -15.375020027160645
    6. '7' → logprob: -15.875020027160645
    7. ']' → logprob: -17.12502098083496
    8. '6' → logprob: -17.62502098083496
    9. ',
' → logprob: -17.75002098083496
    10. '4' → logprob: -18.00002098083496

Token 279: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. ']' → logprob: -15.625380516052246
    4. ',' → logprob: -15.750380516052246
    5. '   ' → logprob: -17.87537956237793
    6. '2' → logprob: -18.00037956237793
    7. ']
' → logprob: -18.00037956237793
    8. '7' → logprob: -18.25037956237793
    9. '
' → logprob: -18.37537956237793
    10. '```' → logprob: -19.62537956237793

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.954393079970032e-05
    2. ' ,' → logprob: -10.500049591064453
    3. '7' → logprob: -11.375049591064453
    4. '5' → logprob: -11.500049591064453
    5. ',
' → logprob: -15.750049591064453
    6. ' ' → logprob: -17.375049591064453
    7. ']' → logprob: -17.375049591064453
    8. '_,' → logprob: -18.375049591064453
    9. ',,' → logprob: -18.625049591064453
    10. '```' → logprob: -18.750049591064453

Token 281: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '7' → logprob: -16.50000762939453
    4. ',' → logprob: -16.62500762939453
    5. '   ' → logprob: -18.75000762939453
    6. ']' → logprob: -19.00000762939453
    7. '
' → logprob: -19.12500762939453
    8. '2' → logprob: -19.37500762939453
    9. '  ' → logprob: -19.50000762939453
    10. '```' → logprob: -19.62500762939453

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022587371058762074
    2. '7' → logprob: -6.127258777618408
    3. ' ,' → logprob: -9.62725830078125
    4. ',
' → logprob: -11.87725830078125
    5. ']' → logprob: -14.87725830078125
    6. '   ' → logprob: -16.00225830078125
    7. ' ' → logprob: -16.37725830078125
    8. '```' → logprob: -16.50225830078125
    9. ']
' → logprob: -17.62725830078125
    10. '4' → logprob: -17.75225830078125

Token 283: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. ',' → logprob: -19.125
    4. ']' → logprob: -20.375
    5. '   ' → logprob: -20.875
    6. '```' → logprob: -21.0
    7. '
' → logprob: -21.625
    8. '[' → logprob: -21.75
    9. '  ' → logprob: -21.875
    10. '2' → logprob: -22.25

Token 284: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02526411972939968
    2. ']
' → logprob: -3.900264024734497
    3. ',' → logprob: -5.400264263153076
    4. ']
' → logprob: -9.400263786315918
    5. ']

' → logprob: -9.650263786315918
    6. ',
' → logprob: -11.025263786315918
    7. ' ]' → logprob: -11.775263786315918
    8. '[' → logprob: -12.400263786315918
    9. '   ' → logprob: -12.650263786315918
    10. '```' → logprob: -13.025263786315918

Token 285: '#' (ID: 2)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0005616117268800735
    2. '#' → logprob: -8.750561714172363
    3. 'def' → logprob: -8.750561714172363
    4. 'prime' → logprob: -9.250561714172363
    5. 'from' → logprob: -10.500561714172363
    6. ' primes' → logprob: -10.500561714172363
    7. 'import' → logprob: -10.625561714172363
    8. '```' → logprob: -10.750561714172363
    9. 'p' → logprob: -11.500561714172363
    10. 'factor' → logprob: -11.750561714172363

Token 286: ' we' (ID: 581)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0014879583613947034
    2. 'def' → logprob: -7.501487731933594
    3. ' primes' → logprob: -8.251487731933594
    4. '#' → logprob: -8.501487731933594
    5. 'from' → logprob: -8.876487731933594
    6. 'import' → logprob: -9.126487731933594
    7. 'p' → logprob: -9.876487731933594
    8. 'dp' → logprob: -9.876487731933594
    9. '```' → logprob: -10.126487731933594
    10. 'prime' → logprob: -10.376487731933594

Token 287: ' encode' (ID: 31288)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6719661951065063
    2. '=' → logprob: -1.1719661951065063
    3. 'pr' → logprob: -2.796966075897217
    4. 'from' → logprob: -3.296966075897217
    5. '#' → logprob: -4.421966075897217
    6. 'factor' → logprob: -4.421966075897217
    7. '_pr' → logprob: -4.546966075897217
    8. 'import' → logprob: -4.796966075897217
    9. ' primes' → logprob: -5.421966075897217
    10. 'def' → logprob: -5.546966075897217

Token 288: ' product' (ID: 1888)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -1.2455130815505981
    2. 'prod' → logprob: -1.4955130815505981
    3. 'product' → logprob: -2.1205129623413086
    4. 'pr' → logprob: -2.1205129623413086
    5. 'factor' → logprob: -3.1205129623413086
    6. 'the' → logprob: -3.1205129623413086
    7. '(' → logprob: -3.6205129623413086
    8. 'state' → logprob: -4.120512962341309
    9. 'ex' → logprob: -4.120512962341309
    10. 'f' → logprob: -4.245512962341309

Token 289: ' by' (ID: 656)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.3075883388519287
    2. ' =' → logprob: -2.6825883388519287
    3. '_factor' → logprob: -3.1825883388519287
    4. '_ex' → logprob: -3.1825883388519287
    5. 'f' → logprob: -3.3075883388519287
    6. '_pr' → logprob: -3.4325883388519287
    7. '=' → logprob: -4.432588577270508
    8. '_prime' → logprob: -5.182588577270508
    9. '_p' → logprob: -5.307588577270508
    10. 'pr' → logprob: -5.682588577270508

Token 290: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.4474264681339264
    2. 'a' → logprob: -2.4474265575408936
    3. '(' → logprob: -2.6974265575408936
    4. 'the' → logprob: -3.1974265575408936
    5. 'prime' → logprob: -3.3224265575408936
    6. 'tuple' → logprob: -3.3224265575408936
    7. '(ex' → logprob: -3.9474265575408936
    8. '[' → logprob: -3.9474265575408936
    9. 'counts' → logprob: -4.3224263191223145
    10. 'its' → logprob: -4.5724263191223145

Token 291: 'ponents' (ID: 4331)
  Prédit: 'ponents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -0.21383506059646606
    2. 'ponent' → logprob: -2.2138350009918213
    3. 'p' → logprob: -2.7138350009918213
    4. 'ps' → logprob: -4.8388352394104
    5. 'pon' → logprob: -5.7138352394104
    6. 'po' → logprob: -6.4638352394104
    7. '```' → logprob: -6.4638352394104
    8. 'prime' → logprob: -7.7138352394104
    9. 'pos' → logprob: -7.9638352394104
    10. 'pow' → logprob: -8.463834762573242

Token 292: ' of' (ID: 328)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.010914000682532787
    2. ':' → logprob: -4.760913848876953
    3. '#' → logprob: -7.635913848876953
    4. ',' → logprob: -8.135913848876953
    5. '=' → logprob: -8.135913848876953
    6. '```' → logprob: -8.510913848876953
    7. ' =' → logprob: -9.135913848876953
    8. '.' → logprob: -9.135913848876953
    9. '_pr' → logprob: -9.260913848876953
    10. '[' → logprob: -9.260913848876953

Token 293: ' these' (ID: 1879)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3492744266986847
    2. 'pr' → logprob: -1.3492743968963623
    3. '2' → logprob: -3.4742743968963623
    4. '(' → logprob: -5.724274635314941
    5. '{' → logprob: -7.474274635314941
    6. ' [' → logprob: -7.974274635314941
    7. '[
' → logprob: -9.724274635314941
    8. ' ' → logprob: -10.349274635314941
    9. '{
' → logprob: -10.474274635314941
    10. ' primes' → logprob: -10.599274635314941

Token 294: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.01704636588692665
    2. ']' → logprob: -4.7670464515686035
    3. '=' → logprob: -5.6420464515686035
    4. ':' → logprob: -6.3920464515686035
    5. ' =' → logprob: -6.3920464515686035
    6. '[' → logprob: -7.3920464515686035
    7. '```' → logprob: -8.517045974731445
    8. ',' → logprob: -8.767045974731445
    9. '_pr' → logprob: -9.267045974731445
    10. '#' → logprob: -9.392045974731445

Token 295: '

' (ID: 279)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0011339050251990557
    2. ':' → logprob: -7.376133918762207
    3. ']' → logprob: -8.751133918762207
    4. '#' → logprob: -9.501133918762207
    5. '```' → logprob: -9.501133918762207
    6. 'def' → logprob: -10.251133918762207
    7. '[' → logprob: -10.501133918762207
    8. 'import' → logprob: -10.626133918762207
    9. ' primes' → logprob: -11.001133918762207
    10. 'p' → logprob: -11.001133918762207

Token 296: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.028539974242448807
    2. 'def' → logprob: -3.7785398960113525
    3. '#' → logprob: -6.028540134429932
    4. 'from' → logprob: -7.153540134429932
    5. 'import' → logprob: -7.653540134429932
    6. 'prime' → logprob: -8.028539657592773
    7. ']' → logprob: -8.278539657592773
    8. '```' → logprob: -8.528539657592773
    9. ' primes' → logprob: -8.528539657592773
    10. 'dp' → logprob: -8.903539657592773

Token 297: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0005759088089689612
    2. '#' → logprob: -8.37557601928711
    3. 'im' → logprob: -8.62557601928711
    4. 'import' → logprob: -10.00057601928711
    5. 'i' → logprob: -10.25057601928711
    6. 'ime' → logprob: -10.87557601928711
    7. 'pr' → logprob: -11.25057601928711
    8. 'ims' → logprob: -12.12557601928711
    9. '```' → logprob: -12.12557601928711
    10. 'imers' → logprob: -13.00057601928711

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008617527782917023
    2. '=' → logprob: -4.758617401123047
    3. ' =[' → logprob: -12.883617401123047
    4. '=[' → logprob: -15.508617401123047
    5. '[' → logprob: -16.758617401123047
    6. ' ' → logprob: -17.008617401123047
    7. ']' → logprob: -17.008617401123047
    8. ',' → logprob: -17.133617401123047
    9. ' =)' → logprob: -17.258617401123047
    10. ')' → logprob: -17.258617401123047

Token 299: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001584850688232109
    2. ' [' → logprob: -8.750158309936523
    3. '[
' → logprob: -23.125158309936523
    4. ' ' → logprob: -24.375158309936523
    5. '(' → logprob: -24.500158309936523
    6. '{' → logprob: -25.000158309936523
    7. '   ' → logprob: -25.500158309936523
    8. ' ' → logprob: -25.875158309936523
    9. '\[' → logprob: -26.000158309936523
    10. '[[' → logprob: -27.875158309936523

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '(' → logprob: -19.625
    4. '   ' → logprob: -20.5
    5. '```' → logprob: -21.0
    6. '  ' → logprob: -22.125
    7. '[' → logprob: -22.25
    8. '{' → logprob: -22.375
    9. '1' → logprob: -22.5
    10. ']' → logprob: -22.875

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010521204239921644
    2. ' ,' → logprob: -9.250104904174805
    3. ',
' → logprob: -11.625104904174805
    4. '3' → logprob: -17.625104904174805
    5. ',

' → logprob: -18.625104904174805
    6. ' ,
' → logprob: -18.625104904174805
    7. '   ' → logprob: -18.750104904174805
    8. ']' → logprob: -19.000104904174805
    9. ',
' → logprob: -19.375104904174805
    10. '2' → logprob: -19.375104904174805

Token 302: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.250431060791016
    4. ']' → logprob: -20.500431060791016
    5. '
' → logprob: -21.000431060791016
    6. '  ' → logprob: -21.250431060791016
    7. '３' → logprob: -21.625431060791016
    8. '۳' → logprob: -22.000431060791016
    9. ',' → logprob: -22.125431060791016
    10. '```' → logprob: -22.375431060791016

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. '5' → logprob: -11.125019073486328
    3. ' ,' → logprob: -12.375019073486328
    4. ',
' → logprob: -17.375019073486328
    5. '7' → logprob: -18.375019073486328
    6. ']' → logprob: -19.875019073486328
    7. '],' → logprob: -20.875019073486328
    8. ' ' → logprob: -20.875019073486328
    9. ',,' → logprob: -21.250019073486328
    10. '   ' → logprob: -21.500019073486328

Token 304: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -22.0
    4. ',' → logprob: -22.5
    5. '  ' → logprob: -22.625
    6. ']' → logprob: -22.75
    7. '
' → logprob: -22.875
    8. '۵' → logprob: -22.875
    9. '```' → logprob: -23.0
    10. '５' → logprob: -23.25

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021105022460687906
    2. '7' → logprob: -8.500210762023926
    3. ' ,' → logprob: -11.875210762023926
    4. '5' → logprob: -15.375210762023926
    5. ',
' → logprob: -15.375210762023926
    6. ']' → logprob: -17.500211715698242
    7. ',,' → logprob: -17.875211715698242
    8. ' ' → logprob: -18.375211715698242
    9. '   ' → logprob: -19.000211715698242
    10. '```' → logprob: -19.562711715698242

Token 306: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -22.125
    4. ',' → logprob: -22.375
    5. '۷' → logprob: -22.5
    6. '   ' → logprob: -22.5
    7. '  ' → logprob: -22.625
    8. '７' → logprob: -23.5
    9. '٧' → logprob: -24.25
    10. '2' → logprob: -24.375

Token 307: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.255023956531659e-05
    2. ']
' → logprob: -9.750072479248047
    3. ']

' → logprob: -11.875072479248047
    4. ']
' → logprob: -12.250072479248047
    5. ' ]' → logprob: -13.250072479248047
    6. ']

' → logprob: -14.625072479248047
    7. ',' → logprob: -16.375072479248047
    8. '#' → logprob: -17.500072479248047
    9. '])' → logprob: -18.000072479248047
    10. ')' → logprob: -18.125072479248047

Token 308: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.52064448595047
    2. 'from' → logprob: -1.2706444263458252
    3. 'prime' → logprob: -2.395644426345825
    4. 'factor' → logprob: -3.895644426345825
    5. 'max' → logprob: -5.645644664764404
    6. 'pr' → logprob: -5.645644664764404
    7. '```' → logprob: -6.270644664764404
    8. 'pow' → logprob: -6.895644664764404
    9. '#' → logprob: -7.020644664764404
    10. 'ex' → logprob: -7.395644664764404

Token 309: ' prime' (ID: 9197)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.520267903804779
    2. ' factor' → logprob: -1.5202679634094238
    3. 'prime' → logprob: -2.395267963409424
    4. ' prime' → logprob: -2.395267963409424
    5. ' get' → logprob: -6.020267963409424
    6. 'get' → logprob: -6.520267963409424
    7. '_factor' → logprob: -8.270267486572266
    8. 'f' → logprob: -8.395267486572266
    9. 'encode' → logprob: -9.270267486572266
    10. 'count' → logprob: -10.270267486572266

Token 310: '_f' (ID: 1337)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.5780131220817566
    2. '_f' → logprob: -0.8280131220817566
    3. '_ex' → logprob: -6.328012943267822
    4. 'f' → logprob: -8.57801342010498
    5. 'factor' → logprob: -9.32801342010498
    6. '```' → logprob: -13.20301342010498
    7. ' factor' → logprob: -13.57801342010498
    8. '_exp' → logprob: -13.82801342010498
    9. '_fact' → logprob: -14.32801342010498
    10. 'Factors' → logprob: -14.32801342010498

Token 311: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.576277494430542
    2. 'actor' → logprob: -0.826277494430542
    3. '_factor' → logprob: -9.076277732849121
    4. 'act' → logprob: -9.951277732849121
    5. 'f' → logprob: -10.201277732849121
    6. '```' → logprob: -10.451277732849121
    7. '_f' → logprob: -10.576277732849121
    8. 'factor' → logprob: -10.576277732849121
    9. 'ac' → logprob: -10.951277732849121
    10. '_' → logprob: -11.451277732849121

Token 312: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.24052810668945312
    2. '(' → logprob: -2.490528106689453
    3. '(x' → logprob: -2.740528106689453
    4. '(d' → logprob: -3.115528106689453
    5. ' (' → logprob: -4.240528106689453
    6. '(num' → logprob: -5.865528106689453
    7. '(k' → logprob: -6.115528106689453
    8. '_(' → logprob: -6.740528106689453
    9. '_of' → logprob: -8.615528106689453
    10. '(number' → logprob: -8.865528106689453

Token 313: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003020961594302207
    2. '):
' → logprob: -8.1253023147583
    3. '):
' → logprob: -12.7503023147583
    4. ')' → logprob: -13.6253023147583
    5. ' ):' → logprob: -14.1253023147583
    6. ':' → logprob: -14.3753023147583
    7. '=' → logprob: -15.2503023147583
    8. '   ' → logprob: -16.125301361083984
    9. '}:' → logprob: -16.875301361083984
    10. ']:' → logprob: -17.125301361083984

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021105022460687906
    2. ':' → logprob: -10.000210762023926
    3. '   ' → logprob: -10.125210762023926
    4. '    ' → logprob: -11.000210762023926
    5. '   ' → logprob: -11.125210762023926
    6. ' ' → logprob: -11.250210762023926
    7. '    
' → logprob: -11.375210762023926
    8. 'factor' → logprob: -11.625210762023926
    9. ',' → logprob: -11.875210762023926
    10. ' if' → logprob: -12.000210762023926

Token 315: ' res' (ID: 694)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002475777640938759
    2. '   ' → logprob: -6.752475738525391
    3. ' factors' → logprob: -7.002475738525391
    4. 'res' (adapté à ' res') → logprob: -8.12747573852539
    5. ' res' → logprob: -10.75247573852539
    6. 'ex' → logprob: -11.00247573852539
    7. 'pf' → logprob: -11.12747573852539
    8. 'facts' → logprob: -11.25247573852539
    9. 'factor' → logprob: -11.62747573852539
    10. '	f' → logprob: -11.75247573852539

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038522906601428986
    2. ' =' → logprob: -3.288522958755493
    3. '=[]' → logprob: -7.788522720336914
    4. '={}' → logprob: -9.788522720336914
    5. '=[]
' → logprob: -13.038522720336914
    6. '[]' → logprob: -13.413522720336914
    7. '[' → logprob: -13.663522720336914
    8. '   ' → logprob: -13.788522720336914
    9. ' ' → logprob: -14.288522720336914
    10. ',' → logprob: -14.288522720336914

Token 317: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13110028207302094
    2. '[]' → logprob: -2.8811001777648926
    3. '{}' → logprob: -3.5061001777648926
    4. '{' → logprob: -4.131100177764893
    5. '[]
' → logprob: -4.131100177764893
    6. '{}
' → logprob: -5.381100177764893
    7. ' [' → logprob: -11.38110065460205
    8. '{
' → logprob: -11.63110065460205
    9. '{'' → logprob: -12.25610065460205
    10. 'default' → logprob: -12.50610065460205

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. ']' → logprob: -16.875
    4. '(' → logprob: -19.0625
    5. '[' → logprob: -19.25
    6. 'x' → logprob: -19.4375
    7. '   ' → logprob: -19.5625
    8. 'pr' → logprob: -19.6875
    9. '
' → logprob: -19.75
    10. '۰' → logprob: -19.9375

Token 319: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07712845504283905
    2. ']' → logprob: -3.2021284103393555
    3. ']*' → logprob: -3.9521284103393555
    4. ' for' → logprob: -4.7021284103393555
    5. 'for' → logprob: -5.5771284103393555
    6. '   ' → logprob: -6.7021284103393555
    7. ',
' → logprob: -9.577128410339355
    8. ' ,' → logprob: -10.202128410339355
    9. '	for' → logprob: -10.577128410339355
    10. ' ' → logprob: -10.702128410339355

Token 320: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00023059594968799502
    2. 'len' → logprob: -8.37523078918457
    3. ' len' → logprob: -18.25023078918457
    4. '```' → logprob: -18.25023078918457
    5. '(len' → logprob: -18.37523078918457
    6. ' ' → logprob: -19.37523078918457
    7. '(' → logprob: -20.50023078918457
    8. '
' → logprob: -21.12523078918457
    9. '=len' → logprob: -21.75023078918457
    10. '{' → logprob: -21.75023078918457

Token 321: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023340750485658646
    2. '	
' → logprob: -5.148340702056885
    3. '   ' → logprob: -5.398340702056885
    4. ' for' → logprob: -5.898340702056885
    5. '
' → logprob: -6.273340702056885
    6. '    
' → logprob: -6.398340702056885
    7. '	while' → logprob: -6.773340702056885
    8. '<|end|>' → logprob: -6.898340702056885
    9. 'for' → logprob: -7.023340702056885
    10. ' while' → logprob: -7.023340702056885

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06288256496191025
    2. ' for' → logprob: -3.187882661819458
    3. 'for' → logprob: -3.937882661819458
    4. ' while' → logprob: -9.312882423400879
    5. 'while' → logprob: -10.062882423400879
    6. '    
' → logprob: -10.937882423400879
    7. ' i' → logprob: -10.937882423400879
    8. '	for' → logprob: -11.562882423400879
    9. 'i' → logprob: -11.687882423400879
    10. '
' → logprob: -12.562882423400879

Token 323: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.1782583391759545e-05
    2. ' for' → logprob: -10.750031471252441
    3. 'i' → logprob: -12.375031471252441
    4. 'while' → logprob: -12.750031471252441
    5. '   ' → logprob: -12.875031471252441
    6. 'x' → logprob: -15.250031471252441
    7. '	for' → logprob: -16.625032424926758
    8. '    
' → logprob: -16.875032424926758
    9. 'tmp' → logprob: -17.625032424926758
    10. 'idx' → logprob: -17.750032424926758

Token 324: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005794849130325019
    2. 'p' → logprob: -7.500579357147217
    3. '(i' → logprob: -11.000579833984375
    4. ' i' → logprob: -12.250579833984375
    5. 'idx' → logprob: -12.500579833984375
    6. '_i' → logprob: -14.500579833984375
    7. 'pi' → logprob: -15.250579833984375
    8. '	i' → logprob: -15.375579833984375
    9. ',i' → logprob: -16.625579833984375
    10. '[i' → logprob: -17.000579833984375

Token 325: ',p' (ID: 14835)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11522578448057175
    2. 'in' → logprob: -2.3652257919311523
    3. ',' → logprob: -4.240225791931152
    4. ' ' → logprob: -7.990225791931152
    5. ' ,' → logprob: -8.865225791931152
    6. '<|end|>' → logprob: -11.865225791931152
    7. '  ' → logprob: -12.115225791931152
    8. 'range' → logprob: -12.740225791931152
    9. '	in' → logprob: -13.865225791931152
    10. '0' → logprob: -13.990225791931152

Token 326: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062056753784418106
    2. 'in' → logprob: -2.81205677986145
    3. ',' → logprob: -9.562056541442871
    4. 'range' → logprob: -11.312056541442871
    5. 'r' → logprob: -12.687056541442871
    6. ' ' → logprob: -14.312056541442871
    7. 'enumer' → logprob: -14.437056541442871
    8. '```' → logprob: -15.062056541442871
    9. 'index' → logprob: -15.312056541442871
    10. 'idx' → logprob: -15.437056541442871

Token 327: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0025717332027852535
    2. 'range' → logprob: -6.0025715827941895
    3. ' enumerate' → logprob: -9.252572059631348
    4. 'zip' → logprob: -17.12757110595703
    5. 'enum' → logprob: -17.25257110595703
    6. '
' → logprob: -17.50257110595703
    7. '   ' → logprob: -18.25257110595703
    8. ' range' → logprob: -18.50257110595703
    9. '(' → logprob: -18.62757110595703
    10. '```' → logprob: -18.75257110595703

Token 328: '(pr' (ID: 38401)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0005399276851676404
    2. '(pr' → logprob: -8.000539779663086
    3. ' primes' → logprob: -8.500539779663086
    4. '(' → logprob: -14.500539779663086
    5. 'range' → logprob: -15.250539779663086
    6. '[' → logprob: -15.875539779663086
    7. '	pr' → logprob: -16.000539779663086
    8. 'prime' → logprob: -18.125539779663086
    9. ' ' → logprob: -18.250539779663086
    10. ')' → logprob: -18.375539779663086

Token 329: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.000116655595775228
    2. '[' → logprob: -9.375116348266602
    3. 'mes' → logprob: -11.500116348266602
    4. '{' → logprob: -12.625116348266602
    5. '#' → logprob: -13.500116348266602
    6. '​' → logprob: -13.875116348266602
    7. 'pr' → logprob: -13.875116348266602
    8. '[]' → logprob: -14.000116348266602
    9. '[[' → logprob: -14.000116348266602
    10. 'ines' → logprob: -14.125116348266602

Token 330: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04861961305141449
    2. '):' → logprob: -3.048619508743286
    3. '):
' → logprob: -10.798619270324707
    4. ':' → logprob: -12.298619270324707
    5. '   ' → logprob: -12.423619270324707
    6. ' ):
' → logprob: -13.673619270324707
    7. ':
' → logprob: -13.798619270324707
    8. '):

' → logprob: -14.923619270324707
    9. ')' → logprob: -15.173619270324707
    10. '():
' → logprob: -15.298619270324707

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11651347577571869
    2. ' while' → logprob: -2.24151349067688
    3. '   ' → logprob: -5.991513252258301
    4. ' x' → logprob: -7.491513252258301
    5. 'while' → logprob: -7.866513252258301
    6. '    ' → logprob: -8.8665132522583
    7. '	while' → logprob: -10.7415132522583
    8. '        
' → logprob: -11.2415132522583
    9. '
' → logprob: -11.6165132522583
    10. '    
' → logprob: -12.1165132522583

Token 332: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5760199427604675
    2. ' while' → logprob: -0.8260199427604675
    3. '       ' → logprob: -9.701020240783691
    4. '   ' → logprob: -11.076020240783691
    5. '	while' → logprob: -12.951020240783691
    6. '           ' → logprob: -14.076020240783691
    7. 'While' → logprob: -14.826020240783691
    8. '    ' → logprob: -16.076019287109375
    9. '        
' → logprob: -16.951019287109375
    10. 'v' → logprob: -16.951019287109375

Token 333: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020377879263833165
    2. ' x' → logprob: -8.500204086303711
    3. '(x' → logprob: -15.625204086303711
    4. '	x' → logprob: -18.12520408630371
    5. '$x' → logprob: -19.50020408630371
    6. '_x' → logprob: -19.75020408630371
    7. '   ' → logprob: -20.50020408630371
    8. '"x' → logprob: -21.00020408630371
    9. '[x' → logprob: -21.25020408630371
    10. '{x' → logprob: -21.37520408630371

Token 334: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.012074435129761696
    2. ' %' → logprob: -4.5120744705200195
    3. '%i' → logprob: -7.5120744705200195
    4. '%x' → logprob: -8.26207447052002
    5. '%d' → logprob: -9.13707447052002
    6. '%e' → logprob: -9.38707447052002
    7. '%s' → logprob: -11.13707447052002
    8. '%E' → logprob: -12.38707447052002
    9. '%c' → logprob: -12.51207447052002
    10. '%b' → logprob: -12.88707447052002

Token 335: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2664456789934775e-06
    2. ' p' → logprob: -13.625000953674316
    3. '_p' → logprob: -20.875001907348633
    4. '2' → logprob: -20.875001907348633
    5. '-p' → logprob: -22.125001907348633
    6. '[p' → logprob: -22.125001907348633
    7. '(p' → logprob: -22.625001907348633
    8. 'pr' → logprob: -22.750001907348633
    9. '	p' → logprob: -23.125001907348633
    10. '$p' → logprob: -23.125001907348633

Token 336: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018280694261193275
    2. ' ==' → logprob: -4.018280506134033
    3. '=' → logprob: -9.893280982971191
    4. ')==' → logprob: -10.018280982971191
    5. '===' → logprob: -10.768280982971191
    6. ']==' → logprob: -11.518280982971191
    7. '()==' → logprob: -13.143280982971191
    8. '==
' → logprob: -13.393280982971191
    9. '```' → logprob: -14.893280982971191
    10. '[' → logprob: -15.518280982971191

Token 337: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -21.625
    4. '=' → logprob: -22.125
    5. '۰' → logprob: -22.125
    6. '00' → logprob: -22.25
    7. 's' → logprob: -22.5
    8. '```' → logprob: -22.5
    9. 'p' → logprob: -23.125
    10. '
' → logprob: -23.25

Token 338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -22.375
    4. '   ' → logprob: -22.5
    5. '

' → logprob: -22.75
    6. '
' → logprob: -23.125
    7. '```' → logprob: -23.25
    8. '=' → logprob: -23.875
    9. '00' → logprob: -23.875
    10. 'p' → logprob: -24.25

Token 339: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39174920320510864
    2. ':' → logprob: -1.1417491436004639
    3. ' and' → logprob: -6.391749382019043
    4. '):
' → logprob: -6.516749382019043
    5. '           ' → logprob: -7.266749382019043
    6. '       ' → logprob: -7.266749382019043
    7. 'and' → logprob: -8.641749382019043
    8. ':
' → logprob: -10.516749382019043
    9. ',' → logprob: -10.641749382019043
    10. '   ' → logprob: -10.891749382019043

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029302112758159637
    2. ' x' → logprob: -3.9043021202087402
    3. 'x' → logprob: -5.15430212020874
    4. '       ' → logprob: -6.15430212020874
    5. '   ' → logprob: -8.779301643371582
    6. ',' → logprob: -8.904301643371582
    7. ' and' → logprob: -9.154301643371582
    8. ':
' → logprob: -9.279301643371582
    9. ' res' → logprob: -9.904301643371582
    10. 'res' → logprob: -10.404301643371582

Token 341: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.5859506130218506
    2. 'x' → logprob: -0.8359506130218506
    3. ' x' → logprob: -5.08595085144043
    4. ' res' → logprob: -5.58595085144043
    5. '           ' → logprob: -10.71095085144043
    6. '   ' → logprob: -12.83595085144043
    7. '       ' → logprob: -13.58595085144043
    8. '	res' → logprob: -14.96095085144043
    9. '               ' → logprob: -15.08595085144043
    10. '```' → logprob: -15.46095085144043

Token 342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.250005722045898
    3. '[
' → logprob: -15.375005722045898
    4. '[I' → logprob: -15.375005722045898
    5. ' [' → logprob: -15.750005722045898
    6. '[p' → logprob: -16.2500057220459
    7. '
' → logprob: -17.1250057220459
    8. '[u' → logprob: -17.1250057220459
    9. '```' → logprob: -17.3750057220459
    10. '[j' → logprob: -18.1250057220459

Token 343: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07889022678136826
    2. ']+=' → logprob: -2.578890323638916
    3. '+=' → logprob: -15.578889846801758
    4. ']+' → logprob: -15.828889846801758
    5. '[' → logprob: -16.078889846801758
    6. ' ]' → logprob: -17.453889846801758
    7. ']
' → logprob: -17.953889846801758
    8. '']' → logprob: -18.078889846801758
    9. '   ' → logprob: -18.203889846801758
    10. ']++;
' → logprob: -18.453889846801758

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -21.500001907348633
    4. '```' → logprob: -22.625001907348633
    5. '
' → logprob: -22.875001907348633
    6. ' ' → logprob: -24.000001907348633
    7. '１' → logprob: -24.250001907348633
    8. '۱' → logprob: -24.437501907348633
    9. '

' → logprob: -24.500001907348633
    10. '  ' → logprob: -24.812501907348633

Token 345: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019623523578047752
    2. 'x' → logprob: -4.019623756408691
    3. ' x' → logprob: -6.769623756408691
    4. '       ' → logprob: -8.269623756408691
    5. ',' → logprob: -10.144623756408691
    6. '   ' → logprob: -12.269623756408691
    7. '               ' → logprob: -12.269623756408691
    8. '
' → logprob: -12.769623756408691
    9. '          ' → logprob: -12.894623756408691
    10. 'import' → logprob: -12.894623756408691

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20981647074222565
    2. 'x' → logprob: -1.7098164558410645
    3. ' x' → logprob: -5.3348164558410645
    4. '       ' → logprob: -5.7098164558410645
    5. '   ' → logprob: -9.709816932678223
    6. ',' → logprob: -9.709816932678223
    7. '               ' → logprob: -10.334816932678223
    8. '
' → logprob: -10.459816932678223
    9. '<|end|>' → logprob: -11.584816932678223
    10. '	       ' → logprob: -11.959816932678223

Token 347: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00012415809032972902
    2. ' x' → logprob: -9.000123977661133
    3. '           ' → logprob: -14.250123977661133
    4. '               ' → logprob: -18.875123977661133
    5. '	x' → logprob: -19.625123977661133
    6. '   ' → logprob: -20.000123977661133
    7. '       ' → logprob: -20.250123977661133
    8. ')x' → logprob: -20.625123977661133
    9. ',x' → logprob: -21.375123977661133
    10. '"x' → logprob: -21.625123977661133

Token 348: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.03807133063673973
    2. ' //' → logprob: -3.288071393966675
    3. '//' → logprob: -11.163071632385254
    4. '=' → logprob: -11.288071632385254
    5. ' ' → logprob: -13.538071632385254
    6. '/=' → logprob: -13.788071632385254
    7. ' =' → logprob: -14.663071632385254
    8. '   ' → logprob: -16.163070678710938
    9. ' ' → logprob: -16.288070678710938
    10. '  ' → logprob: -17.288070678710938

Token 349: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.676292231422849e-05
    2. ' p' → logprob: -11.000017166137695
    3. '<p' → logprob: -21.750017166137695
    4. '2' → logprob: -22.000017166137695
    5. '7' → logprob: -22.500017166137695
    6. '10' → logprob: -23.250017166137695
    7. '	p' → logprob: -23.375017166137695
    8. '
' → logprob: -23.375017166137695
    9. '[p' → logprob: -23.500017166137695
    10. '```' → logprob: -23.625017166137695

Token 350: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03073887713253498
    2. ' return' → logprob: -3.7807388305664062
    3. 'return' → logprob: -4.905738830566406
    4. ',' → logprob: -11.030738830566406
    5. ' ' → logprob: -11.405738830566406
    6. '	return' → logprob: -11.405738830566406
    7. '
' → logprob: -11.905738830566406
    8. '       ' → logprob: -12.155738830566406
    9. ':return' → logprob: -12.905738830566406
    10. ')' → logprob: -13.155738830566406

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041852486319839954
    2. ' return' → logprob: -6.004185199737549
    3. 'return' → logprob: -6.379185199737549
    4. ' ' → logprob: -12.629185676574707
    5. '       ' → logprob: -13.129185676574707
    6. '	return' → logprob: -13.129185676574707
    7. '```' → logprob: -13.629185676574707
    8. ',' → logprob: -13.754185676574707
    9. 'def' → logprob: -14.879185676574707
    10. '
' → logprob: -15.129185676574707

Token 352: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03709379956126213
    2. ' return' → logprob: -3.7870938777923584
    3. '   ' → logprob: -4.287093639373779
    4. '```' → logprob: -12.287094116210938
    5. ' ' → logprob: -13.162094116210938
    6. '	return' → logprob: -14.537094116210938
    7. ':return' → logprob: -15.037094116210938
    8. '       ' → logprob: -15.787094116210938
    9. '
' → logprob: -15.787094116210938
    10. '{return' → logprob: -16.287094116210938

Token 353: ' tuple' (ID: 31311)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9361264946837764e-07
    2. ' res' → logprob: -17.0
    3. 'tuple' → logprob: -17.0
    4. '[' → logprob: -22.5
    5. '(res' → logprob: -23.5
    6. '	res' → logprob: -24.75
    7. 're' → logprob: -25.375
    8. '$res' → logprob: -26.25
    9. 'list' → logprob: -26.625
    10. 'r' → logprob: -26.625

Token 354: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0031777136027812958
    2. 'res' → logprob: -5.753177642822266
    3. '(' → logprob: -17.753177642822266
    4. ' res' → logprob: -18.128177642822266
    5. '(tuple' → logprob: -18.253177642822266
    6. '$res' → logprob: -19.003177642822266
    7. '	res' → logprob: -19.628177642822266
    8. '_res' → logprob: -20.253177642822266
    9. 'tuple' → logprob: -20.753177642822266
    10. '(
' → logprob: -21.128177642822266

Token 355: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -17.0
    3. ' )' → logprob: -17.625
    4. '())' → logprob: -18.25
    5. '))' → logprob: -18.5
    6. '),' → logprob: -19.0
    7. ')`' → logprob: -19.0
    8. ')return' → logprob: -19.125
    9. ')}' → logprob: -19.5
    10. '}' → logprob: -19.625

Token 356: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.15359927713871002
    2. '@' → logprob: -2.278599262237549
    3. 'dp' → logprob: -4.528599262237549
    4. 'product' → logprob: -4.903599262237549
    5. 'digits' → logprob: -5.653599262237549
    6. 'pow' → logprob: -6.153599262237549
    7. 'factor' → logprob: -6.278599262237549
    8. 'max' → logprob: -6.403599262237549
    9. 'from' → logprob: -6.403599262237549
    10. 'encoded' → logprob: -6.653599262237549

Token 357: '_f' (ID: 1337)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1269790232181549
    2. '_f' → logprob: -2.126979112625122
    3. '_' → logprob: -10.251978874206543
    4. '_factor' → logprob: -12.251978874206543
    5. '=' → logprob: -12.751978874206543
    6. '=_' → logprob: -13.376978874206543
    7. '```' → logprob: -13.751978874206543
    8. 's' → logprob: -14.001978874206543
    9. '_=' → logprob: -14.126978874206543
    10. '_t' → logprob: -14.501978874206543

Token 358: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.0002790935104712844
    2. 'actor' → logprob: -8.250279426574707
    3. 'act' → logprob: -11.750279426574707
    4. 'or' → logprob: -13.000279426574707
    5. 'acts' → logprob: -13.250279426574707
    6. '_s' → logprob: -13.750279426574707
    7. '_' → logprob: -13.750279426574707
    8. 's' → logprob: -14.000279426574707
    9. 'ac' → logprob: -14.375279426574707
    10. 'ors' → logprob: -14.750279426574707

Token 359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16045331954956055
    2. ' =' → logprob: -1.9104533195495605
    3. 's' → logprob: -9.535453796386719
    4. '_=' → logprob: -9.785453796386719
    5. '_' → logprob: -10.160453796386719
    6. '=_' → logprob: -10.910453796386719
    7. '(prod' → logprob: -11.535453796386719
    8. '_s' → logprob: -11.660453796386719
    9. '=(' → logprob: -11.785453796386719
    10. '(s' → logprob: -12.285453796386719

Token 360: ' tuple' (ID: 31311)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.003661475842818618
    2. '[' → logprob: -5.878661632537842
    3. 'tuple' → logprob: -7.628661632537842
    4. ' prime' → logprob: -8.503661155700684
    5. 'prod' → logprob: -9.003661155700684
    6. '[]
' → logprob: -11.003661155700684
    7. 'product' → logprob: -11.878661155700684
    8. '(' → logprob: -12.253661155700684
    9. 'list' → logprob: -12.628661155700684
    10. '(pr' → logprob: -13.503661155700684

Token 361: '(' (ID: 7)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.23572765290737152
    2. '(prod' → logprob: -1.6107276678085327
    3. 'prime' → logprob: -5.485727787017822
    4. '([' → logprob: -5.610727787017822
    5. '(' → logprob: -7.110727787017822
    6. 'prod' → logprob: -7.485727787017822
    7. '(map' → logprob: -7.610727787017822
    8. '((' → logprob: -8.485727310180664
    9. '(product' → logprob: -8.485727310180664
    10. '(pro' → logprob: -9.610727310180664

Token 362: '0' (ID: 15)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.007346781436353922
    2. 'prod' → logprob: -5.0073466300964355
    3. 'map' → logprob: -7.3823466300964355
    4. '[' → logprob: -12.507347106933594
    5. ' prime' → logprob: -12.632347106933594
    6. 'product' → logprob: -14.382347106933594
    7. '(prod' → logprob: -14.882347106933594
    8. '(' → logprob: -15.007347106933594
    9. '1' → logprob: -15.507347106933594
    10. '0' → logprob: -15.632347106933594

Token 363: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6375045776367188
    2. ')' → logprob: -0.8875045776367188
    3. 'for' → logprob: -3.0125045776367188
    4. ' if' → logprob: -5.512504577636719
    5. ']' → logprob: -6.012504577636719
    6. ')*' → logprob: -7.137504577636719
    7. ',)' → logprob: -7.137504577636719
    8. '[i' → logprob: -7.762504577636719
    9. ' )' → logprob: -7.887504577636719
    10. '[' → logprob: -8.137504577636719

Token 364: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06971465796232224
    2. 'x' → logprob: -3.5697145462036133
    3. 'i' → logprob: -4.569714546203613
    4. 'digits' → logprob: -4.694714546203613
    5. 'prod' → logprob: -5.194714546203613
    6. 'digit' → logprob: -5.444714546203613
    7. 's' → logprob: -5.694714546203613
    8. 'p' → logprob: -6.444714546203613
    9. ' d' → logprob: -7.069714546203613
    10. 'len' → logprob: -7.069714546203613

Token 365: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009163758717477322
    2. ' ==' → logprob: -4.884163856506348
    3. '+' → logprob: -7.009163856506348
    4. '==-' → logprob: -7.759163856506348
    5. 'd' → logprob: -9.509163856506348
    6. '<' → logprob: -9.884163856506348
    7. '==(' → logprob: -10.009163856506348
    8. 's' → logprob: -11.509163856506348
    9. 'not' → logprob: -12.009163856506348
    10. '=' → logprob: -12.134163856506348

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13314804434776306
    2. '9' → logprob: -2.258147954940796
    3. '-' → logprob: -4.008148193359375
    4. '10' → logprob: -6.633148193359375
    5. 's' → logprob: -8.008148193359375
    6. ' ' → logprob: -8.758148193359375
    7. ' -' → logprob: -9.133148193359375
    8. '   ' → logprob: -11.758148193359375
    9. '```' → logprob: -12.258148193359375
    10. 'None' → logprob: -12.758148193359375

Token 367: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005255814641714096
    2. ' else' → logprob: -5.255255699157715
    3. '   ' → logprob: -11.005255699157715
    4. ' ' → logprob: -12.380255699157715
    5. '
' → logprob: -14.630255699157715
    6. '  ' → logprob: -15.380255699157715
    7. 'for' → logprob: -15.755255699157715
    8. '    ' → logprob: -15.880255699157715
    9. '       ' → logprob: -16.38025665283203
    10. '	else' → logprob: -16.75525665283203

Token 368: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.0008854917832650244
    2. 'prod' → logprob: -7.375885486602783
    3. '0' → logprob: -9.000885963439941
    4. ' prime' → logprob: -9.000885963439941
    5. 'tuple' → logprob: -13.250885963439941
    6. 'factor' → logprob: -13.250885963439941
    7. 'res' → logprob: -13.500885963439941
    8. '(' → logprob: -13.500885963439941
    9. 'sum' → logprob: -13.750885963439941
    10. 'pr' → logprob: -13.750885963439941

Token 369: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.259079363080673e-05
    2. 'f' → logprob: -11.375012397766113
    3. '_' → logprob: -15.000012397766113
    4. '_factor' → logprob: -15.625012397766113
    5. ')' → logprob: -16.00001335144043
    6. ' factors' → logprob: -16.00001335144043
    7. 'Factors' → logprob: -16.12501335144043
    8. '_s' → logprob: -16.87501335144043
    9. '\' → logprob: -17.25001335144043
    10. '+' → logprob: -17.37501335144043

Token 370: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.0002123614540323615
    2. 'f' → logprob: -9.375212669372559
    3. 'actor' → logprob: -10.250212669372559
    4. 'ctors' → logprob: -10.250212669372559
    5. 'Factors' → logprob: -10.875212669372559
    6. '_f' → logprob: -11.375212669372559
    7. 'acters' → logprob: -12.000212669372559
    8. 'act' → logprob: -12.500212669372559
    9. 'ac' → logprob: -12.750212669372559
    10. 'a' → logprob: -12.750212669372559

Token 371: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0005253921262919903
    2. '((' → logprob: -7.62552547454834
    3. 'digits' → logprob: -11.12552547454834
    4. ' (' → logprob: -11.50052547454834
    5. 'd' → logprob: -12.00052547454834
    6. '(' → logprob: -12.37552547454834
    7. '(prod' → logprob: -13.50052547454834
    8. ' digits' → logprob: -15.75052547454834
    9. ')(' → logprob: -16.500524520874023
    10. '(products' → logprob: -16.750524520874023

Token 372: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0054679443128407
    2. '(d' → logprob: -5.255467891693115
    3. ' +' → logprob: -9.130468368530273
    4. 'digits' → logprob: -10.380468368530273
    5. 's' → logprob: -10.630468368530273
    6. ')' → logprob: -11.130468368530273
    7. 'd' → logprob: -11.380468368530273
    8. '+(' → logprob: -11.630468368530273
    9. '[d' → logprob: -11.755468368530273
    10. '+d' → logprob: -12.255468368530273

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04511002078652382
    2. 'd' → logprob: -3.670109987258911
    3. 's' → logprob: -4.29511022567749
    4. '0' → logprob: -5.79511022567749
    5. ' ' → logprob: -7.04511022567749
    6. ')' → logprob: -7.92011022567749
    7. 'int' → logprob: -7.92011022567749
    8. ' s' → logprob: -9.045109748840332
    9. ' d' → logprob: -9.170109748840332
    10. '9' → logprob: -10.545109748840332

Token 374: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.060365608893335e-05
    2. 'for' → logprob: -10.375041007995605
    3. ' for' → logprob: -12.625041007995605
    4. '))' → logprob: -13.375041007995605
    5. ' )' → logprob: -13.375041007995605
    6. '[d' → logprob: -13.375041007995605
    7. 'd' → logprob: -14.750041007995605
    8. '[' → logprob: -15.125041007995605
    9. '   ' → logprob: -15.375041007995605
    10. ')
' → logprob: -16.12504005432129

Token 375: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20157715678215027
    2. 'for' → logprob: -1.7015771865844727
    3. '   ' → logprob: -8.826577186584473
    4. ')' → logprob: -11.201577186584473
    5. ' ' → logprob: -13.701577186584473
    6. '    ' → logprob: -14.076577186584473
    7. '	for' → logprob: -14.451577186584473
    8. '  ' → logprob: -15.076577186584473
    9. '       ' → logprob: -15.701577186584473
    10. '          ' → logprob: -16.451576232910156

Token 376: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3868755102157593
    2. ' d' → logprob: -1.1368755102157593
    3. '_d' → logprob: -13.01187515258789
    4. '	d' → logprob: -13.76187515258789
    5. ' ' → logprob: -15.63687515258789
    6. ')d' → logprob: -16.01187515258789
    7. '
' → logprob: -16.13687515258789
    8. ' д' → logprob: -16.26187515258789
    9. '_' → logprob: -16.38687515258789
    10. '`' → logprob: -16.51187515258789

Token 377: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16036547720432281
    2. 'in' → logprob: -1.9103654623031616
    3. 'digits' → logprob: -9.285365104675293
    4. 'd' → logprob: -10.660365104675293
    5. ' digits' → logprob: -11.035365104675293
    6. ' ' → logprob: -12.660365104675293
    7. 'range' → logprob: -13.410365104675293
    8. ')' → logprob: -13.910365104675293
    9. 's' → logprob: -14.160365104675293
    10. ',' → logprob: -14.660365104675293

Token 378: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.20218318700790405
    2. ' digits' → logprob: -1.7021832466125488
    3. 'range' → logprob: -7.702183246612549
    4. ' range' → logprob: -8.07718276977539
    5. 'd' → logprob: -13.07718276977539
    6. '[' → logprob: -13.57718276977539
    7. 'digit' → logprob: -13.57718276977539
    8. 's' → logprob: -14.32718276977539
    9. 'Digits' → logprob: -14.95218276977539
    10. ' ' → logprob: -14.95218276977539

Token 379: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -16.750001907348633
    4. '),' → logprob: -17.000001907348633
    5. '))' → logprob: -17.500001907348633
    6. ')`' → logprob: -17.500001907348633
    7. '())' → logprob: -18.000001907348633
    8. '[' → logprob: -18.125001907348633
    9. ')#' → logprob: -18.500001907348633
    10. ')...' → logprob: -18.500001907348633

Token 380: '#' (ID: 2)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -1.1056311130523682
    2. ')' → logprob: -1.2306311130523682
    3. 'def' → logprob: -2.105631113052368
    4. 'from' → logprob: -2.105631113052368
    5. '#' → logprob: -2.605631113052368
    6. ']' → logprob: -4.230630874633789
    7. '@' → logprob: -4.605630874633789
    8. 'dp' → logprob: -5.105630874633789
    9. 'max' → logprob: -5.730630874633789
    10. '
' → logprob: -5.730630874633789

Token 381: ' Since' (ID: 12265)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.015303951688110828
    2. 'from' → logprob: -4.265304088592529
    3. 'def' → logprob: -6.890304088592529
    4. '#' → logprob: -9.515303611755371
    5. 'dp' → logprob: -11.640303611755371
    6. 'for' → logprob: -12.015303611755371
    7. 's' → logprob: -12.140303611755371
    8. ' @' → logprob: -12.515303611755371
    9. 'import' → logprob: -12.640303611755371
    10. 'sum' → logprob: -12.640303611755371

Token 382: ' prod' (ID: 10207)
  Prédit: ' prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.44757553935050964
    2. ' we' → logprob: -2.322575569152832
    3. 'prod' → logprob: -2.822575569152832
    4. ' the' → logprob: -3.697575569152832
    5. ' n' → logprob: -3.822575569152832
    6. ' max' → logprob: -3.947575569152832
    7. 'max' → logprob: -4.322575569152832
    8. 'n' → logprob: -4.447575569152832
    9. 'we' → logprob: -4.697575569152832
    10. 'the' → logprob: -4.697575569152832

Token 383: '_s' (ID: 1278)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.007012071553617716
    2. 's' → logprob: -5.882011890411377
    3. '_s' → logprob: -6.382011890411377
    4. '_' → logprob: -6.507011890411377
    5. '=' → logprob: -7.507011890411377
    6. ' =' → logprob: -8.757012367248535
    7. 'f' → logprob: -8.757012367248535
    8. '#' → logprob: -10.007012367248535
    9. ' factors' → logprob: -10.882012367248535
    10. ')' → logprob: -11.132012367248535

Token 384: ' =' (ID: 314)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.6579939723014832
    2. '=' → logprob: -0.7829939723014832
    3. ' =' → logprob: -4.407993793487549
    4. 'f' → logprob: -4.532993793487549
    5. '=f' → logprob: -7.407993793487549
    6. 's' → logprob: -8.157994270324707
    7. 'is' → logprob: -8.282994270324707
    8. '#' → logprob: -8.407994270324707
    9. '=sum' → logprob: -9.407994270324707
    10. '```' → logprob: -9.532994270324707

Token 385: ' product' (ID: 1888)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18152721226215363
    2. '[' → logprob: -2.1815271377563477
    3. '1' → logprob: -3.5565271377563477
    4. 'prime' → logprob: -4.181527137756348
    5. 'prod' → logprob: -5.431527137756348
    6. 'tuple' → logprob: -5.556527137756348
    7. '(prod' → logprob: -8.681527137756348
    8. 'sum' → logprob: -8.681527137756348
    9. '()
' → logprob: -8.806527137756348
    10. '0' → logprob: -9.181527137756348

Token 386: ' of' (ID: 328)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.4456714689731598
    2. 'of' → logprob: -2.070671558380127
    3. '(d' → logprob: -2.820671558380127
    4. ' of' → logprob: -3.070671558380127
    5. '_s' → logprob: -3.195671558380127
    6. '(' → logprob: -4.195671558380127
    7. '(prod' → logprob: -4.320671558380127
    8. '((' → logprob: -4.695671558380127
    9. 'for' → logprob: -4.945671558380127
    10. '_' → logprob: -4.945671558380127

Token 387: ' digits' (ID: 37806)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.23615491390228271
    2. '((' → logprob: -2.3611550331115723
    3. '(prod' → logprob: -3.2361550331115723
    4. '(p' → logprob: -3.8611550331115723
    5. 'prod' → logprob: -4.361155033111572
    6. '(' → logprob: -4.611155033111572
    7. '(pr' → logprob: -4.861155033111572
    8. ' (' → logprob: -4.986155033111572
    9. '[(' → logprob: -5.236155033111572
    10. '(x' → logprob: -5.861155033111572

Token 388: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015997298061847687
    2. 'plus' → logprob: -5.140997409820557
    3. '_plus' → logprob: -5.640997409820557
    4. '[i' → logprob: -5.765997409820557
    5. '_f' → logprob: -7.140997409820557
    6. '```' → logprob: -7.390997409820557
    7. '[' → logprob: -7.640997409820557
    8. ' +' → logprob: -7.890997409820557
    9. 's' → logprob: -8.640996932983398
    10. '_i' → logprob: -8.765996932983398

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.125006675720215
    3. ' ' → logprob: -13.750006675720215
    4. '```' → logprob: -14.750006675720215
    5. '(' → logprob: -16.75000762939453
    6. '+' → logprob: -18.00000762939453
    7. '``' → logprob: -18.37500762939453
    8. '   ' → logprob: -18.75000762939453
    9. ' [' → logprob: -19.12500762939453
    10. '`' → logprob: -19.25000762939453

Token 390: '
' (ID: 198)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.4928717613220215
    2. 'f' → logprob: -1.8678717613220215
    3. 'prod' → logprob: -1.9928717613220215
    4. 'ex' → logprob: -2.1178717613220215
    5. 'for' → logprob: -2.2428717613220215
    6. 's' → logprob: -2.8678717613220215
    7. '_ex' → logprob: -3.2428717613220215
    8. '_s' → logprob: -3.6178717613220215
    9. ',' → logprob: -3.6178717613220215
    10. '#' → logprob: -4.2428717613220215

Token 391: '#' (ID: 2)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.4178891181945801
    2. '#' → logprob: -2.04288911819458
    3. 'ex' → logprob: -2.04288911819458
    4. 'from' → logprob: -4.29288911819458
    5. ')' → logprob: -4.41788911819458
    6. 'def' → logprob: -4.54288911819458
    7. 'max' → logprob: -5.16788911819458
    8. '_ex' → logprob: -5.16788911819458
    9. ',' → logprob: -5.41788911819458
    10. ' ex' → logprob: -5.66788911819458

Token 392: ' We' (ID: 1416)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.1312595158815384
    2. 'from' → logprob: -2.7562594413757324
    3. 'max' → logprob: -3.8812594413757324
    4. 'def' → logprob: -4.506259441375732
    5. '#' → logprob: -4.631259441375732
    6. 'ex' → logprob: -5.131259441375732
    7. 'dp' → logprob: -6.131259441375732
    8. 'f' → logprob: -6.256259441375732
    9. 'factor' → logprob: -6.631259441375732
    10. 'exp' → logprob: -6.756259441375732

Token 393: ' can' (ID: 665)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.6824405193328857
    2. '#' → logprob: -2.1824405193328857
    3. 'have' → logprob: -2.1824405193328857
    4. 'continue' → logprob: -2.6824405193328857
    5. 'will' → logprob: -2.8074405193328857
    6. 'can' → logprob: -2.9324405193328857
    7. 'want' → logprob: -3.4324405193328857
    8. 'store' → logprob: -4.807440757751465
    9. 'def' → logprob: -4.932440757751465
    10. 'now' → logprob: -5.057440757751465

Token 394: ' combine' (ID: 21700)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.9833493828773499
    2. 'define' → logprob: -1.733349323272705
    3. 'cache' → logprob: -1.858349323272705
    4. 'def' → logprob: -2.733349323272705
    5. 'from' → logprob: -2.983349323272705
    6. 'continue' → logprob: -3.108349323272705
    7. 'factor' → logprob: -3.608349323272705
    8. 'store' → logprob: -3.858349323272705
    9. 'encode' → logprob: -4.233349323272705
    10. 'pre' → logprob: -4.608349323272705

Token 395: ' factors' (ID: 11652)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.13612854480743408
    2. ' prod' → logprob: -2.7611284255981445
    3. 'def' → logprob: -4.1361284255981445
    4. 'from' → logprob: -4.3861284255981445
    5. 'for' → logprob: -4.5111284255981445
    6. 'f' → logprob: -5.0111284255981445
    7. 'ex' → logprob: -5.3861284255981445
    8. '[' → logprob: -5.8861284255981445
    9. 'factor' → logprob: -6.0111284255981445
    10. 'all' → logprob: -6.2611284255981445

Token 396: ' by' (ID: 656)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.12379094213247299
    2. 'from' → logprob: -2.373790979385376
    3. 'def' → logprob: -3.998790979385376
    4. 'total' → logprob: -5.623790740966797
    5. ' from' → logprob: -8.373790740966797
    6. 'for' → logprob: -8.498790740966797
    7. ' prod' → logprob: -9.123790740966797
    8. '#' → logprob: -9.248790740966797
    9. '=' → logprob: -9.248790740966797
    10. 'ex' → logprob: -9.373790740966797

Token 397: ' summ' (ID: 16552)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43388843536376953
    2. 'lambda' → logprob: -1.1838884353637695
    3. '(lambda' → logprob: -4.4338884353637695
    4. 'from' → logprob: -4.5588884353637695
    5. '[' → logprob: -4.6838884353637695
    6. 'tuple' → logprob: -5.6838884353637695
    7. ' lambda' → logprob: -5.8088884353637695
    8. 'import' → logprob: -5.9338884353637695
    9. '(' → logprob: -6.5588884353637695
    10. 'adding' → logprob: -7.0588884353637695

Token 398: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -3.011373155459296e-05
    2. 'ation' → logprob: -10.500030517578125
    3. 'ng' → logprob: -14.250030517578125
    4. '[' → logprob: -14.500030517578125
    5. 'sum' → logprob: -15.500030517578125
    6. '(' → logprob: -15.625030517578125
    7. '(sum' → logprob: -16.125030517578125
    8. 'e' → logprob: -16.250030517578125
    9. 'i' → logprob: -16.375030517578125
    10. 'eing' → logprob: -16.625030517578125

Token 399: ' tuple' (ID: 31311)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7571861743927002
    2. 'prod' → logprob: -1.0071861743927002
    3. 's' → logprob: -2.7571861743927
    4. 'from' → logprob: -3.7571861743927
    5. '#' → logprob: -4.007185935974121
    6. ')' → logprob: -4.757185935974121
    7. '
' → logprob: -5.382185935974121
    8. ' prod' → logprob: -5.382185935974121
    9. 'factor' → logprob: -5.507185935974121
    10. '(prod' → logprob: -5.507185935974121

Token 400: ' components' (ID: 10674)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23751308023929596
    2. 'from' → logprob: -1.6125130653381348
    3. '
' → logprob: -4.987513065338135
    4. 'prod' → logprob: -6.362513065338135
    5. '#' → logprob: -7.112513065338135
    6. ' from' → logprob: -7.737513065338135
    7. 'import' → logprob: -7.737513065338135
    8. 's' → logprob: -7.737513065338135
    9. ')' → logprob: -8.237513542175293
    10. 'sum' → logprob: -8.862513542175293

Token 401: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7158935070037842
    2. 'from' → logprob: -0.7158935070037842
    3. '
' → logprob: -5.215893745422363
    4. '#' → logprob: -5.465893745422363
    5. ' from' → logprob: -5.715893745422363
    6. ')' → logprob: -5.965893745422363
    7. 'prod' → logprob: -6.090893745422363
    8. 'import' → logprob: -6.465893745422363
    9. '+' → logprob: -7.590893745422363
    10. 'sum' → logprob: -7.965893745422363

Token 402: 'def' (ID: 1314)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.10338782519102097
    2. 'from' → logprob: -2.3533878326416016
    3. 'def' → logprob: -5.853387832641602
    4. 'max' → logprob: -9.228387832641602
    5. '@n' → logprob: -10.103387832641602
    6. ' @' → logprob: -10.228387832641602
    7. 'dp' → logprob: -10.603387832641602
    8. ' from' → logprob: -10.728387832641602
    9. 'import' → logprob: -11.228387832641602
    10. '
' → logprob: -11.603387832641602

Token 403: ' add' (ID: 1147)
  Prédit: ' combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combine' → logprob: -1.089789628982544
    2. ' add' → logprob: -1.464789628982544
    3. 'combine' → logprob: -1.589789628982544
    4. 'add' → logprob: -1.839789628982544
    5. ' prod' → logprob: -2.964789628982544
    6. 'prod' → logprob: -4.839789390563965
    7. ' mul' → logprob: -6.589789390563965
    8. 'mul' → logprob: -6.589789390563965
    9. 'factor' → logprob: -6.964789390563965
    10. ' factor' → logprob: -6.964789390563965

Token 404: '_f' (ID: 1337)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12617802619934082
    2. '(t' → logprob: -2.626178026199341
    3. '_t' → logprob: -3.876178026199341
    4. '(x' → logprob: -4.626177787780762
    5. '_f' → logprob: -5.001177787780762
    6. '(tuple' → logprob: -6.001177787780762
    7. '_tuple' → logprob: -6.501177787780762
    8. 'tuple' → logprob: -6.626177787780762
    9. '(f' → logprob: -6.751177787780762
    10. 'tu' → logprob: -7.001177787780762

Token 405: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.007636439986526966
    2. 'actor' → logprob: -4.882636547088623
    3. 'ac' → logprob: -11.007636070251465
    4. 'act' → logprob: -11.882636070251465
    5. 'acts' → logprob: -14.007636070251465
    6. 'acs' → logprob: -14.007636070251465
    7. 'a' → logprob: -14.257636070251465
    8. 'def' → logprob: -14.257636070251465
    9. 'irst' → logprob: -14.757636070251465
    10. '(' → logprob: -14.757636070251465

Token 406: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.007921506650745869
    2. '(f' → logprob: -5.0079216957092285
    3. '(t' → logprob: -6.7579216957092285
    4. '(x' → logprob: -10.63292121887207
    5. '((' → logprob: -12.00792121887207
    6. ' (' → logprob: -12.00792121887207
    7. '(tuple' → logprob: -12.00792121887207
    8. '(' → logprob: -15.13292121887207
    9. '(p' → logprob: -15.38292121887207
    10. '(lhs' → logprob: -15.88292121887207

Token 407: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031258054077625275
    2. ',b' → logprob: -3.5312581062316895
    3. ',a' → logprob: -6.5312581062316895
    4. ' ,' → logprob: -10.156257629394531
    5. ',f' → logprob: -12.156257629394531
    6. ',c' → logprob: -13.156257629394531
    7. ',d' → logprob: -13.906257629394531
    8. ',t' → logprob: -15.031257629394531
    9. ',n' → logprob: -15.156257629394531
    10. ',v' → logprob: -15.281257629394531

Token 408: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760230422019958
    2. '):
' → logprob: -0.8260230422019958
    3. '):
' → logprob: -9.45102310180664
    4. ' ):' → logprob: -13.32602310180664
    5. ')' → logprob: -13.70102310180664
    6. ' ):
' → logprob: -13.82602310180664
    7. ':' → logprob: -14.32602310180664
    8. '):

' → logprob: -14.82602310180664
    9. '   ' → logprob: -15.70102310180664
    10. '):(' → logprob: -17.45102310180664

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024416742846369743
    2. '(tuple' → logprob: -4.399416923522949
    3. 'return' → logprob: -5.024416923522949
    4. ' return' → logprob: -6.024416923522949
    5. ' tuple' → logprob: -6.899416923522949
    6. '[' → logprob: -7.774416923522949
    7. 'tuple' → logprob: -7.899416923522949
    8. '(' → logprob: -7.899416923522949
    9. '(a' → logprob: -9.02441692352295
    10. '(
' → logprob: -9.14941692352295

Token 410: ' return' (ID: 622)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.3401581645011902
    2. 'return' (adapté à ' return') → logprob: -1.590158224105835
    3. ' tuple' → logprob: -2.840158224105835
    4. '   ' → logprob: -4.465157985687256
    5. ' return' → logprob: -4.465157985687256
    6. '(tuple' → logprob: -6.215157985687256
    7. ' ' → logprob: -6.965157985687256
    8. '(' → logprob: -10.090158462524414
    9. 'a' → logprob: -10.965158462524414
    10. '  ' → logprob: -11.965158462524414

Token 411: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.006401054095476866
    2. ' tuple' → logprob: -5.256401062011719
    3. '(tuple' → logprob: -6.756401062011719
    4. 'a' → logprob: -13.256401062011719
    5. '(a' → logprob: -14.006401062011719
    6. '   ' → logprob: -14.506401062011719
    7. '(' → logprob: -16.00640106201172
    8. ' ' → logprob: -16.88140106201172
    9. ' a' → logprob: -18.75640106201172
    10. '  ' → logprob: -19.00640106201172

Token 412: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21034130454063416
    2. 'a' → logprob: -2.710341215133667
    3. '(x' → logprob: -2.710341215133667
    4. 'x' → logprob: -3.460341215133667
    5. '(ai' → logprob: -3.710341215133667
    6. 'ai' → logprob: -7.585341453552246
    7. '[a' → logprob: -8.335341453552246
    8. '[x' → logprob: -11.835341453552246
    9. '(i' → logprob: -11.960341453552246
    10. '([' → logprob: -11.960341453552246

Token 413: '+y' (ID: 102753)
  Prédit: '+y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.5026625990867615
    2. '+' → logprob: -1.0026626586914062
    3. '+b' → logprob: -4.502662658691406
    4. '+a' → logprob: -4.752662658691406
    5. ' +' → logprob: -5.252662658691406
    6. '+x' → logprob: -5.752662658691406
    7. 'a' → logprob: -10.377662658691406
    8. '+i' → logprob: -11.877662658691406
    9. '1' → logprob: -12.127662658691406
    10. '+k' → logprob: -12.252662658691406

Token 414: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07889209687709808
    2. 'for' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.32889175415039
    4. '	for' → logprob: -14.82889175415039
    5. '1' → logprob: -16.57889175415039
    6. '   ' → logprob: -16.57889175415039
    7. '  ' → logprob: -16.82889175415039
    8. 'a' → logprob: -16.95389175415039
    9. '
' → logprob: -17.70389175415039
    10. 'x' → logprob: -17.82889175415039

Token 415: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0052392068319022655
    2. ' x' → logprob: -5.255239009857178
    3. 'a' → logprob: -12.630239486694336
    4. '(x' → logprob: -13.255239486694336
    5. ',x' → logprob: -15.130239486694336
    6. ' a' → logprob: -17.255239486694336
    7. '	x' → logprob: -17.755239486694336
    8. ',' → logprob: -17.880239486694336
    9. ' ' → logprob: -19.255239486694336
    10. ' (' → logprob: -19.630239486694336

Token 416: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7338926792144775
    2. ',b' → logprob: -0.7338926792144775
    3. ',y' → logprob: -3.2338926792144775
    4. ',x' → logprob: -7.858892440795898
    5. ',a' → logprob: -9.233892440795898
    6. ' ,' → logprob: -10.858892440795898
    7. 'b' → logprob: -12.233892440795898
    8. ',v' → logprob: -12.858892440795898
    9. 'a' → logprob: -12.983892440795898
    10. ',z' → logprob: -12.983892440795898

Token 417: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693072855472565
    2. 'in' → logprob: -2.1269307136535645
    3. 'zip' → logprob: -13.751931190490723
    4. ' ' → logprob: -14.876931190490723
    5. 's' → logprob: -15.251931190490723
    6. ',' → logprob: -15.251931190490723
    7. 'import' → logprob: -15.876931190490723
    8. ')' → logprob: -16.126930236816406
    9. ' zip' → logprob: -16.251930236816406
    10. '   ' → logprob: -16.501930236816406

Token 418: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.10020699352025986
    2. ' zip' → logprob: -2.3502070903778076
    3. '(zip' → logprob: -15.100207328796387
    4. '.zip' → logprob: -17.60020637512207
    5. '_zip' → logprob: -17.97520637512207
    6. 'Zip' → logprob: -19.60020637512207
    7. 'z' → logprob: -21.35020637512207
    8. '```' → logprob: -21.47520637512207
    9. 'enumer' → logprob: -22.22520637512207
    10. 'ZIP' → logprob: -22.72520637512207

Token 419: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.696889623621246e-06
    2. 'a' → logprob: -12.87500286102295
    3. '(' → logprob: -18.250001907348633
    4. ' (' → logprob: -19.875001907348633
    5. ' a' → logprob: -21.250001907348633
    6. '   ' → logprob: -22.750001907348633
    7. '(
' → logprob: -22.875001907348633
    8. '((' → logprob: -23.500001907348633
    9. '
' → logprob: -23.875001907348633
    10. 'def' → logprob: -24.125001907348633

Token 420: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.07973485440015793
    2. ',a' → logprob: -2.8297348022460938
    3. ',' → logprob: -4.079734802246094
    4. ' ,' → logprob: -8.079734802246094
    5. 'a' → logprob: -8.079734802246094
    6. '(a' → logprob: -10.204734802246094
    7. 'b' → logprob: -10.329734802246094
    8. ' a' → logprob: -12.329734802246094
    9. ',x' → logprob: -14.329734802246094
    10. ',y' → logprob: -14.329734802246094

Token 421: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.491498531133402e-06
    2. ')' → logprob: -12.000009536743164
    3. ' ))' → logprob: -13.250009536743164
    4. ')))' → logprob: -14.000009536743164
    5. ')),' → logprob: -15.250009536743164
    6. '))
' → logprob: -15.375009536743164
    7. '))

' → logprob: -17.125009536743164
    8. '));' → logprob: -17.125009536743164
    9. '()))' → logprob: -17.500009536743164
    10. ' ' → logprob: -17.500009536743164

Token 422: 'def' (ID: 1314)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.09281469136476517
    2. 'def' → logprob: -2.4678146839141846
    3. 'from' → logprob: -6.092814922332764
    4. ')' → logprob: -7.342814922332764
    5. 'dp' → logprob: -8.592814445495605
    6. '
' → logprob: -8.717814445495605
    7. '#' → logprob: -8.967814445495605
    8. 'max' → logprob: -9.217814445495605
    9. '_cache' → logprob: -9.967814445495605
    10. '@n' → logprob: -10.092814445495605

Token 423: ' less' (ID: 3760)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.04133598878979683
    2. 'subtract' → logprob: -3.6663360595703125
    3. 'mul' → logprob: -4.2913360595703125
    4. 'multiply' → logprob: -7.6663360595703125
    5. 'factor' → logprob: -8.041336059570312
    6. 'mult' → logprob: -8.916336059570312
    7. 'prod' → logprob: -9.041336059570312
    8. ' sub' → logprob: -10.041336059570312
    9. 'dp' → logprob: -10.041336059570312
    10. 'main' → logprob: -10.791336059570312

Token 424: '_factor' (ID: 43757)
  Prédit: '_than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.07557672262191772
    2. '_equal' → logprob: -2.8255767822265625
    3. '_' → logprob: -5.3255767822265625
    4. '_f' → logprob: -5.5755767822265625
    5. '_factor' → logprob: -5.9505767822265625
    6. '_equals' → logprob: -7.2005767822265625
    7. '_eq' → logprob: -8.200576782226562
    8. '_then' → logprob: -8.325576782226562
    9. '(a' → logprob: -8.700576782226562
    10. '(_' → logprob: -9.075576782226562

Token 425: '(a' (ID: 6271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.7835754988482222e-05
    2. '(s' → logprob: -11.875018119812012
    3. '(a' → logprob: -12.375018119812012
    4. 'al' → logprob: -12.500018119812012
    5. 'ial' → logprob: -14.250018119812012
    6. '_s' → logprob: -14.375018119812012
    7. '_than' → logprob: -14.625018119812012
    8. '(' → logprob: -14.750018119812012
    9. 'a' → logprob: -15.750018119812012
    10. '(tuple' → logprob: -16.250017166137695

Token 426: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30918794870376587
    2. ',b' → logprob: -1.559187889099121
    3. ',a' → logprob: -2.934187889099121
    4. ' ,' → logprob: -6.559187889099121
    5. '(a' → logprob: -7.434187889099121
    6. 'a' → logprob: -8.684187889099121
    7. ',(' → logprob: -9.184187889099121
    8. 'b' → logprob: -10.684187889099121
    9. ',_' → logprob: -11.059187889099121
    10. ',d' → logprob: -11.309187889099121

Token 427: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10027643293142319
    2. '):' → logprob: -2.350276470184326
    3. '):
' → logprob: -9.600275993347168
    4. ')' → logprob: -13.600275993347168
    5. '):

' → logprob: -14.475275993347168
    6. ' ):
' → logprob: -15.725275993347168
    7. '   ' → logprob: -15.975275993347168
    8. ' ):' → logprob: -16.975276947021484
    9. '():
' → logprob: -17.100276947021484
    10. ':' → logprob: -17.725276947021484

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014555385336279869
    2. 'for' → logprob: -4.51455545425415
    3. ' for' → logprob: -5.76455545425415
    4. 'def' → logprob: -8.889554977416992
    5. 'return' → logprob: -9.639554977416992
    6. 'all' → logprob: -10.014554977416992
    7. '```' → logprob: -10.014554977416992
    8. ' all' → logprob: -10.389554977416992
    9. ' return' → logprob: -11.264554977416992
    10. '
' → logprob: -11.514554977416992

Token 429: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00013381359167397022
    2. ' for' → logprob: -9.000133514404297
    3. 'return' → logprob: -11.750133514404297
    4. '   ' → logprob: -13.375133514404297
    5. 'if' → logprob: -14.375133514404297
    6. '
' → logprob: -15.625133514404297
    7. 'def' → logprob: -15.875133514404297
    8. '	for' → logprob: -16.750133514404297
    9. ' return' → logprob: -17.875133514404297
    10. '#' (adapté à ' #') → logprob: -19.000133514404297

Token 430: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.8351892473874614e-05
    2. ' for' → logprob: -10.750048637390137
    3. 'def' → logprob: -11.000048637390137
    4. '   ' → logprob: -12.000048637390137
    5. 'return' → logprob: -12.500048637390137
    6. 'if' → logprob: -16.00004768371582
    7. 'For' → logprob: -17.62504768371582
    8. '	for' → logprob: -17.62504768371582
    9. '#' → logprob: -18.12504768371582
    10. 'from' → logprob: -19.62504768371582

Token 431: ' True' (ID: 6432)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30831271409988403
    2. 'all' → logprob: -1.8083126544952393
    3. 'any' → logprob: -2.3083126544952393
    4. 'sum' → logprob: -6.933312892913818
    5. 'True' → logprob: -7.433312892913818
    6. ' all' → logprob: -8.30831241607666
    7. ' any' → logprob: -9.30831241607666
    8. ' a' → logprob: -10.55831241607666
    9. '[a' → logprob: -11.30831241607666
    10. 'tuple' → logprob: -12.43331241607666

Token 432: ' if' (ID: 538)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3945348858833313
    2. 'all' → logprob: -2.1445348262786865
    3. 'if' → logprob: -3.0195348262786865
    4. 'a' → logprob: -3.1445348262786865
    5. 'and' → logprob: -3.2695348262786865
    6. '   ' → logprob: -3.7695348262786865
    7. ' and' → logprob: -4.019535064697266
    8. ' if' → logprob: -4.019535064697266
    9. 'for' → logprob: -4.894535064697266
    10. ' a' → logprob: -5.644535064697266

Token 433: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000477620807942003
    2. 'any' → logprob: -7.7504777908325195
    3. ' a' → logprob: -10.62547779083252
    4. 'all' → logprob: -11.25047779083252
    5. ' any' → logprob: -12.12547779083252
    6. 'sum' → logprob: -12.75047779083252
    7. '   ' → logprob: -14.62547779083252
    8. '(a' → logprob: -15.25047779083252
    9. ' all' → logprob: -15.75047779083252
    10. '[a' → logprob: -16.250476837158203

Token 434: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05760136991739273
    2. ' <' → logprob: -3.4326014518737793
    3. '!=' → logprob: -4.307601451873779
    4. '[' → logprob: -5.432601451873779
    5. '<x' → logprob: -6.557601451873779
    6. '<a' → logprob: -6.932601451873779
    7. ' !=' → logprob: -6.932601451873779
    8. '==' → logprob: -7.432601451873779
    9. '<b' → logprob: -7.807601451873779
    10. '[i' → logprob: -7.807601451873779

Token 435: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001170225441455841
    2. ' b' → logprob: -6.7511701583862305
    3. '   ' → logprob: -18.251171112060547
    4. ' ' → logprob: -18.751171112060547
    5. '	b' → logprob: -20.001171112060547
    6. '_b' → logprob: -20.376171112060547
    7. 'tuple' → logprob: -20.501171112060547
    8. '```' → logprob: -20.751171112060547
    9. '  ' → logprob: -21.001171112060547
    10. ')b' → logprob: -21.001171112060547

Token 436: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34540143609046936
    2. ' for' → logprob: -1.845401406288147
    3. ' and' → logprob: -2.5954015254974365
    4. 'for' → logprob: -3.9704015254974365
    5. ':' → logprob: -4.095401287078857
    6. 'and' → logprob: -4.845401287078857
    7. '
' → logprob: -5.095401287078857
    8. ':
' → logprob: -5.095401287078857
    9. ' if' → logprob: -7.095401287078857
    10. ',' → logprob: -7.720401287078857

Token 437: ' lex' (ID: 37772)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.46588394045829773
    2. 'a' → logprob: -1.5908839702606201
    3. ' lex' → logprob: -2.96588397026062
    4. 'all' → logprob: -3.09088397026062
    5. 'tuple' → logprob: -3.84088397026062
    6. 'sum' → logprob: -3.96588397026062
    7. 'any' → logprob: -4.590883731842041
    8. '[' → logprob: -4.715883731842041
    9. ' tuple' → logprob: -6.090883731842041
    10. '[a' → logprob: -6.090883731842041

Token 438: ' order' (ID: 2569)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0020709214732050896
    2. ' order' → logprob: -7.002070903778076
    3. 'ographical' → logprob: -7.877070903778076
    4. 'ico' → logprob: -8.252071380615234
    5. 'order' → logprob: -8.627071380615234
    6. 'ical' → logprob: -9.002071380615234
    7. ' ' → logprob: -9.752071380615234
    8. '_order' → logprob: -10.252071380615234
    9. 'ographic' → logprob: -10.502071380615234
    10. 'icon' → logprob: -11.252071380615234

Token 439: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7153673768043518
    2. '   ' → logprob: -1.215367317199707
    3. ':
' → logprob: -1.840367317199707
    4. '<|end|>' → logprob: -3.840367317199707
    5. '():
' → logprob: -4.715367317199707
    6. '(
' → logprob: -5.340367317199707
    7. '```' → logprob: -5.840367317199707
    8. '):
' → logprob: -5.840367317199707
    9. '(' → logprob: -6.090367317199707
    10. ':return' → logprob: -6.215367317199707

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004400205798447132
    2. ' for' → logprob: -6.129400253295898
    3. '
' → logprob: -7.129400253295898
    4. '```' → logprob: -7.379400253295898
    5. '    
' → logprob: -8.004400253295898
    6. ':' → logprob: -9.129400253295898
    7. '<|end|>' → logprob: -9.254400253295898
    8. 'for' → logprob: -9.379400253295898
    9. '  
' → logprob: -10.504400253295898
    10. '       ' → logprob: -10.629400253295898

Token 441: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07747956365346909
    2. 'for' → logprob: -3.077479600906372
    3. '   ' → logprob: -3.577479600906372
    4. ' return' → logprob: -7.827479362487793
    5. 'return' → logprob: -10.077479362487793
    6. ' if' → logprob: -10.202479362487793
    7. '
' → logprob: -10.827479362487793
    8. '	for' → logprob: -10.952479362487793
    9. 'if' → logprob: -11.952479362487793
    10. ' ' → logprob: -12.577479362487793

Token 442: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5863262414932251
    2. ' for' → logprob: -0.8363262414932251
    3. '   ' → logprob: -4.5863261222839355
    4. 'return' → logprob: -9.586326599121094
    5. ' return' → logprob: -9.961326599121094
    6. '
' → logprob: -11.336326599121094
    7. 'if' → logprob: -12.461326599121094
    8. '```' → logprob: -12.836326599121094
    9. 'n' → logprob: -13.086326599121094
    10. ' ' → logprob: -13.211326599121094

Token 443: ' here' (ID: 2105)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24654614925384521
    2. ' for' → logprob: -2.2465462684631348
    3. 'a' → logprob: -3.2465462684631348
    4. 'return' → logprob: -3.8715462684631348
    5. 'all' → logprob: -4.746546268463135
    6. 'any' → logprob: -4.871546268463135
    7. 'not' → logprob: -4.871546268463135
    8. '   ' → logprob: -4.996546268463135
    9. '
' → logprob: -5.121546268463135
    10. ' all' → logprob: -5.371546268463135

Token 444: ' factors' (ID: 11652)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3203024864196777
    2. ' return' → logprob: -1.4453024864196777
    3. '   ' → logprob: -1.5703024864196777
    4. ' for' → logprob: -2.1953024864196777
    5. 'a' → logprob: -2.8203024864196777
    6. ' a' → logprob: -3.0703024864196777
    7. '
' → logprob: -3.4453024864196777
    8. 'for' → logprob: -3.4453024864196777
    9. 'def' → logprob: -5.945302486419678
    10. '#' → logprob: -6.320302486419678

Token 445: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.2821440696716309
    2. 'def' → logprob: -1.4071440696716309
    3. '   ' → logprob: -1.9071440696716309
    4. '#' → logprob: -2.157144069671631
    5. ' are' → logprob: -2.157144069671631
    6. '[' → logprob: -3.532144069671631
    7. 'a' → logprob: -4.407144069671631
    8. 'should' → logprob: -4.657144069671631
    9. '==' → logprob: -5.157144069671631
    10. '=' → logprob: -5.157144069671631

Token 446: ' ex' (ID: 513)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.3822578489780426
    2. 'tu' → logprob: -1.2572578191757202
    3. 'tuple' → logprob: -5.00725793838501
    4. 'all' → logprob: -5.13225793838501
    5. ' compared' → logprob: -5.25725793838501
    6. 'non' → logprob: -6.13225793838501
    7. 'com' → logprob: -6.25725793838501
    8. ' tuples' → logprob: -6.25725793838501
    9. 'stored' → logprob: -6.88225793838501
    10. 'length' → logprob: -6.88225793838501

Token 447: 'ponents' (ID: 4331)
  Prédit: 'pected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pected' → logprob: -0.3593723773956299
    2. 'act' → logprob: -1.6093723773956299
    3. 'pressed' → logprob: -3.35937237739563
    4. 'p' → logprob: -3.48437237739563
    5. 'ponent' → logprob: -4.359372138977051
    6. 'acted' → logprob: -5.109372138977051
    7. 'haust' → logprob: -5.984372138977051
    8. 't' → logprob: -5.984372138977051
    9. '[' → logprob: -6.359372138977051
    10. '```' → logprob: -6.609372138977051

Token 448: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38248783349990845
    2. ' for' → logprob: -1.6324877738952637
    3. 'def' → logprob: -2.2574877738952637
    4. 'for' → logprob: -4.132487773895264
    5. ' def' → logprob: -8.257488250732422
    6. ' =' → logprob: -8.257488250732422
    7. ',' → logprob: -8.507488250732422
    8. ' and' → logprob: -8.757488250732422
    9. '
' → logprob: -8.757488250732422
    10. ':' → logprob: -8.882488250732422

Token 449: ' compare' (ID: 12221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2243357002735138
    2. 'for' → logprob: -1.7243356704711914
    3. ' for' → logprob: -3.8493356704711914
    4. '   ' → logprob: -7.474335670471191
    5. '
' → logprob: -7.599335670471191
    6. ' def' → logprob: -8.349335670471191
    7. 'return' → logprob: -10.224335670471191
    8. 'n' → logprob: -11.724335670471191
    9. '#' → logprob: -11.849335670471191
    10. ' return' → logprob: -11.974335670471191

Token 450: ' as' (ID: 472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9125222563743591
    2. 'for' → logprob: -1.412522315979004
    3. 'component' → logprob: -2.037522315979004
    4. 'lex' → logprob: -2.287522315979004
    5. 'element' → logprob: -3.287522315979004
    6. 'tuple' → logprob: -3.287522315979004
    7. '(a' → logprob: -4.037522315979004
    8. 'len' → logprob: -4.287522315979004
    9. ' lex' → logprob: -5.037522315979004
    10. 'from' → logprob: -5.537522315979004

Token 451: ' integers' (ID: 54912)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25356248021125793
    2. 'tuple' → logprob: -2.7535624504089355
    3. 'tu' → logprob: -3.1285624504089355
    4. 'for' → logprob: -3.2535624504089355
    5. 'sum' → logprob: -3.3785624504089355
    6. ' follows' → logprob: -4.2535624504089355
    7. ' tuples' → logprob: -5.1285624504089355
    8. ' tuple' → logprob: -5.5035624504089355
    9. 'f' → logprob: -5.6285624504089355
    10. 'all' → logprob: -5.7535624504089355

Token 452: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9602363109588623
    2. 'for' → logprob: -0.9602363109588623
    3. '   ' → logprob: -2.0852363109588623
    4. 'def' → logprob: -2.2102363109588623
    5. '
' → logprob: -7.960236549377441
    6. ' def' → logprob: -10.710236549377441
    7. '```' → logprob: -10.835236549377441
    8. ':' → logprob: -11.085236549377441
    9. ',' → logprob: -11.585236549377441
    10. ' if' → logprob: -12.710236549377441

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3169606029987335
    2. 'for' → logprob: -1.8169605731964111
    3. ' for' → logprob: -2.316960573196411
    4. 'def' → logprob: -4.56696081161499
    5. '
' → logprob: -9.066960334777832
    6. '```' → logprob: -11.191960334777832
    7. 'if' → logprob: -11.441960334777832
    8. ' def' → logprob: -11.816960334777832
    9. 'n' → logprob: -12.316960334777832
    10. ' if' → logprob: -12.941960334777832

Token 454: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010326127521693707
    2. ' for' → logprob: -5.010325908660889
    3. '   ' → logprob: -5.635325908660889
    4. 'def' → logprob: -10.635326385498047
    5. 'if' → logprob: -12.135326385498047
    6. 'n' → logprob: -13.010326385498047
    7. 'return' → logprob: -13.385326385498047
    8. '
' → logprob: -14.260326385498047
    9. '	for' → logprob: -15.010326385498047
    10. ' ' → logprob: -16.010326385498047

Token 455: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020544764993246645
    2. '   ' → logprob: -9.250205039978027
    3. 'def' → logprob: -9.875205039978027
    4. ' for' → logprob: -10.250205039978027
    5. '
' → logprob: -11.375205039978027
    6. 'return' → logprob: -11.750205039978027
    7. 'n' → logprob: -13.500205039978027
    8. 'if' → logprob: -14.125205039978027
    9. 'from' → logprob: -15.500205039978027
    10. '#' → logprob: -16.125205993652344

Token 456: ' factor' (ID: 12332)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49926045536994934
    2. 'product' → logprob: -2.499260425567627
    3. 'prime' → logprob: -3.249260425567627
    4. 'all' → logprob: -3.374260425567627
    5. 'prod' → logprob: -3.499260425567627
    6. 'b' → logprob: -3.624260425567627
    7. 'we' → logprob: -3.874260425567627
    8. 'products' → logprob: -3.874260425567627
    9. 'for' → logprob: -3.874260425567627
    10. 'the' → logprob: -4.249260425567627

Token 457: 'ization' (ID: 2860)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.042350489646196365
    2. 'a' → logprob: -3.2923505306243896
    3. 'ials' → logprob: -6.6673502922058105
    4. ' tuples' → logprob: -6.6673502922058105
    5. 'ial' → logprob: -7.4173502922058105
    6. 'ex' → logprob: -8.417350769042969
    7. '   ' → logprob: -9.042350769042969
    8. 'def' → logprob: -9.292350769042969
    9. 'sizes' → logprob: -9.667350769042969
    10. 'tuple' → logprob: -9.667350769042969

Token 458: ' represents' (ID: 18627)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.5505040884017944
    2. 'is' → logprob: -1.8005040884017944
    3. '#' → logprob: -2.175504207611084
    4. 'rep' → logprob: -2.175504207611084
    5. 's' → logprob: -2.425504207611084
    6. 'a' → logprob: -2.550504207611084
    7. ' represents' → logprob: -3.050504207611084
    8. 'components' → logprob: -3.800504207611084
    9. 'def' → logprob: -3.925504207611084
    10. '   ' → logprob: -4.300504207611084

Token 459: ' product' (ID: 1888)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.4377812445163727
    2. 'numbers' → logprob: -1.5627812147140503
    3. 'inte' → logprob: -2.56278133392334
    4. 'a' → logprob: -3.81278133392334
    5. 'number' → logprob: -3.81278133392334
    6. 'product' → logprob: -4.43778133392334
    7. 'the' → logprob: -5.81278133392334
    8. 'integer' → logprob: -6.06278133392334
    9. 'products' → logprob: -6.18778133392334
    10. 'mult' → logprob: -7.06278133392334

Token 460: ',
' (ID: 412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20051804184913635
    2. 'a' → logprob: -1.950518012046814
    3. '#' → logprob: -4.3255181312561035
    4. ',' → logprob: -4.8255181312561035
    5. 'for' → logprob: -4.8255181312561035
    6. '
' → logprob: -5.8255181312561035
    7. '   ' → logprob: -5.9505181312561035
    8. ' for' → logprob: -6.7005181312561035
    9. ' a' → logprob: -6.9505181312561035
    10. 'from' → logprob: -7.7005181312561035

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5327864289283752
    2. ' for' → logprob: -1.2827863693237305
    3. 'def' → logprob: -2.7827863693237305
    4. 'for' → logprob: -2.9077863693237305
    5. ' def' → logprob: -4.7827863693237305
    6. '#' → logprob: -4.9077863693237305
    7. ' a' → logprob: -7.1577863693237305
    8. 'a' → logprob: -7.2827863693237305
    9. ' return' → logprob: -7.5327863693237305
    10. ' #' → logprob: -7.6577863693237305

Token 462: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25747916102409363
    2. '#' (adapté à ' #') → logprob: -2.507479190826416
    3. 'def' → logprob: -3.007479190826416
    4. ' for' → logprob: -3.507479190826416
    5. '   ' → logprob: -3.632479190826416
    6. 'return' → logprob: -4.007479190826416
    7. 'a' → logprob: -4.382479190826416
    8. 'prod' → logprob: -5.757479190826416
    9. 'product' → logprob: -6.632479190826416
    10. ' #' → logprob: -7.007479190826416

Token 463: ' compare' (ID: 12221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3343663215637207
    2. '#' → logprob: -2.5843663215637207
    3. 'def' → logprob: -2.9593663215637207
    4. 'a' → logprob: -3.2093663215637207
    5. 'from' → logprob: -3.3343663215637207
    6. 'prod' → logprob: -3.3343663215637207
    7. 'val' → logprob: -4.084366321563721
    8. 'product' → logprob: -4.459366321563721
    9. '   ' → logprob: -5.584366321563721
    10. 'res' → logprob: -5.834366321563721

Token 464: ' by' (ID: 656)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0507284440100193
    2. 'def' → logprob: -4.1757283210754395
    3. 'sum' → logprob: -4.4257283210754395
    4. 'product' → logprob: -4.9257283210754395
    5. '1' → logprob: -5.1757283210754395
    6. 'prod' → logprob: -5.1757283210754395
    7. 'x' → logprob: -7.5507283210754395
    8. 'from' → logprob: -7.6757283210754395
    9. '(a' → logprob: -7.9257283210754395
    10. '#' → logprob: -8.175728797912598

Token 465: ' cross' (ID: 8088)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4339444041252136
    2. 'product' → logprob: -1.9339444637298584
    3. 'multip' → logprob: -2.5589444637298584
    4. 'def' → logprob: -3.9339444637298584
    5. 'sum' → logprob: -4.183944225311279
    6. 'the' → logprob: -4.183944225311279
    7. 'actual' → logprob: -4.183944225311279
    8. 'value' → logprob: -4.308944225311279
    9. 'lambda' → logprob: -4.683944225311279
    10. '
' → logprob: -5.308944225311279

Token 466: ' multiply' (ID: 57388)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.02244710363447666
    2. 'multiply' → logprob: -4.022447109222412
    3. 'a' → logprob: -6.147447109222412
    4. 'mul' → logprob: -7.022447109222412
    5. 'mult' → logprob: -7.772447109222412
    6. ' multiplying' → logprob: -7.897447109222412
    7. ' multiplication' → logprob: -8.397446632385254
    8. '-m' → logprob: -8.897446632385254
    9. ' multiply' → logprob: -9.522446632385254
    10. 'product' → logprob: -11.272446632385254

Token 467: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05824835225939751
    2. ':' → logprob: -3.308248281478882
    3. 'a' → logprob: -5.183248519897461
    4. '(a' → logprob: -5.683248519897461
    5. ' if' → logprob: -6.183248519897461
    6. '   ' → logprob: -6.433248519897461
    7. '(' → logprob: -6.808248519897461
    8. 'if' → logprob: -6.808248519897461
    9. '(
' → logprob: -7.183248519897461
    10. ' for' → logprob: -7.433248519897461

Token 468: ' complicated' (ID: 25334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6499629616737366
    2. 'False' → logprob: -2.024962902069092
    3. ' a' → logprob: -2.149962902069092
    4. ' True' → logprob: -2.524962902069092
    5. 'True' → logprob: -3.024962902069092
    6. ' False' → logprob: -3.024962902069092
    7. ' all' → logprob: -3.899962902069092
    8. 'all' → logprob: -4.649962902069092
    9. ' not' → logprob: -5.399962902069092
    10. 'def' → logprob: -5.649962902069092

Token 469: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031036430969834328
    2. 'def' → logprob: -5.281036376953125
    3. ':
' → logprob: -5.406036376953125
    4. '   ' → logprob: -5.531036376953125
    5. '):' → logprob: -5.531036376953125
    6. '<|end|>' → logprob: -5.531036376953125
    7. ',' → logprob: -6.156036376953125
    8. ')' → logprob: -6.281036376953125
    9. '#' → logprob: -6.281036376953125
    10. '
' → logprob: -7.031036376953125

Token 470: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04996589198708534
    2. '   ' → logprob: -3.1749658584594727
    3. 'def' → logprob: -5.549965858459473
    4. 'False' → logprob: -7.424965858459473
    5. ' but' → logprob: -7.549965858459473
    6. 'return' → logprob: -7.674965858459473
    7. 'but' → logprob: -7.924965858459473
    8. '
' → logprob: -8.174965858459473
    9. 'True' → logprob: -8.549965858459473
    10. 'not' → logprob: -8.674965858459473

Token 471: ' 
' (ID: 793)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.593697726726532
    2. '#' → logprob: -0.968697726726532
    3. 'return' → logprob: -3.7186977863311768
    4. 'def' → logprob: -4.218697547912598
    5. 'for' → logprob: -4.593697547912598
    6. 'all' → logprob: -5.343697547912598
    7. 'a' → logprob: -5.343697547912598
    8. ' False' → logprob: -5.843697547912598
    9. '   ' → logprob: -6.218697547912598
    10. 'True' → logprob: -6.468697547912598

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2590833604335785
    2. '#' → logprob: -1.5090833902359009
    3. ' return' → logprob: -5.884083271026611
    4. 'def' → logprob: -6.384083271026611
    5. ' #' → logprob: -6.884083271026611
    6. 'return' → logprob: -7.134083271026611
    7. ' for' → logprob: -7.759083271026611
    8. ' we' → logprob: -9.13408374786377
    9. 'pass' → logprob: -9.63408374786377
    10. ' pass' → logprob: -9.75908374786377

Token 473: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.06759148091077805
    2. 'return' → logprob: -3.567591428756714
    3. 'def' → logprob: -3.817591428756714
    4. '   ' → logprob: -4.317591667175293
    5. ' return' → logprob: -7.317591667175293
    6. ' #' → logprob: -7.817591667175293
    7. 'for' → logprob: -7.942591667175293
    8. '
' → logprob: -10.067591667175293
    9. 'we' → logprob: -10.067591667175293
    10. ' for' → logprob: -10.192591667175293

Token 474: ' since' (ID: 3630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06794016808271408
    2. 'return' → logprob: -3.4429402351379395
    3. 'def' → logprob: -3.5679402351379395
    4. '   ' → logprob: -5.4429402351379395
    5. 'for' → logprob: -7.5679402351379395
    6. '
' → logprob: -8.442939758300781
    7. 'False' → logprob: -9.317939758300781
    8. ' return' → logprob: -9.692939758300781
    9. ' #' → logprob: -9.942939758300781
    10. 'import' → logprob: -10.067939758300781

Token 475: ' we' (ID: 581)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3044012784957886
    2. 'ex' → logprob: -2.429401397705078
    3. 'f' → logprob: -3.679401397705078
    4. 'digits' → logprob: -3.679401397705078
    5. 'pr' → logprob: -3.804401397705078
    6. 'a' → logprob: -3.804401397705078
    7. 'the' → logprob: -3.929401397705078
    8. 'products' → logprob: -4.554401397705078
    9. 'numbers' → logprob: -4.804401397705078
    10. 'bases' → logprob: -4.804401397705078

Token 476: ' compare' (ID: 12221)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.7693713307380676
    2. 'know' → logprob: -1.7693712711334229
    3. 'compare' → logprob: -2.394371271133423
    4. 'only' → logprob: -3.019371271133423
    5. ' only' → logprob: -3.269371271133423
    6. ' have' → logprob: -3.394371271133423
    7. 'are' → logprob: -3.644371271133423
    8. ' know' → logprob: -4.019371509552002
    9. 'want' → logprob: -4.019371509552002
    10. 'can' → logprob: -4.394371509552002

Token 477: ' products' (ID: 3891)
  Prédit: 'products'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'products' → logprob: -0.36348041892051697
    2. 'product' → logprob: -2.73848032951355
    3. 'factor' → logprob: -3.36348032951355
    4. 'ex' → logprob: -3.48848032951355
    5. 'tuple' → logprob: -3.61348032951355
    6. 'by' → logprob: -3.61348032951355
    7. 'the' → logprob: -3.98848032951355
    8. 'a' → logprob: -4.113480567932129
    9. 'prime' → logprob: -4.863480567932129
    10. 'powers' → logprob: -4.988480567932129

Token 478: ',' (ID: 11)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.1959667205810547
    2. ',' → logprob: -1.5709667205810547
    3. '   ' → logprob: -2.1959667205810547
    4. 'by' → logprob: -2.3209667205810547
    5. 'a' → logprob: -3.1959667205810547
    6. '#' → logprob: -3.1959667205810547
    7. '=' → logprob: -3.3209667205810547
    8. 'def' → logprob: -3.8209667205810547
    9. 'based' → logprob: -4.070966720581055
    10. 'exact' → logprob: -4.195966720581055

Token 479: ' compare' (ID: 12221)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7149125337600708
    2. 'def' → logprob: -0.9649125337600708
    3. '   ' → logprob: -2.7149124145507812
    4. ' for' → logprob: -4.089912414550781
    5. 'for' → logprob: -4.089912414550781
    6. 'from' → logprob: -4.839912414550781
    7. 'import' → logprob: -5.214912414550781
    8. 'return' → logprob: -5.214912414550781
    9. 'if' → logprob: -6.214912414550781
    10. '
' → logprob: -6.214912414550781

Token 480: ' tuple' (ID: 31311)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08294013142585754
    2. 'sum' → logprob: -2.832940101623535
    3. 'x' → logprob: -5.707940101623535
    4. 'all' → logprob: -6.207940101623535
    5. 'tuple' → logprob: -6.332940101623535
    6. 'factor' → logprob: -6.332940101623535
    7. 'def' → logprob: -6.582940101623535
    8. 'prod' → logprob: -6.707940101623535
    9. 'product' → logprob: -6.832940101623535
    10. '(' → logprob: -6.832940101623535

Token 481: ' lex' (ID: 37772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07938585430383682
    2. '(a' → logprob: -4.454385757446289
    3. 'lex' → logprob: -4.454385757446289
    4. 'def' → logprob: -4.829385757446289
    5. ' a' → logprob: -5.204385757446289
    6. '[::-' → logprob: -5.329385757446289
    7. '(' → logprob: -5.704385757446289
    8. 'for' → logprob: -6.079385757446289
    9. ' lex' → logprob: -6.079385757446289
    10. ',' → logprob: -6.079385757446289

Token 482: ' order' (ID: 2569)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.15127405524253845
    2. ' order' → logprob: -2.6512739658355713
    3. ')' → logprob: -4.27627420425415
    4. 'ically' → logprob: -4.40127420425415
    5. 'def' → logprob: -4.52627420425415
    6. ' ' → logprob: -4.90127420425415
    7. '   ' → logprob: -5.02627420425415
    8. 'order' → logprob: -5.02627420425415
    9. '
' → logprob: -5.52627420425415
    10. 'sort' → logprob: -6.40127420425415

Token 483: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6012954711914062
    2. 'def' → logprob: -1.3512954711914062
    3. ':' → logprob: -1.7262954711914062
    4. ':
' → logprob: -5.601295471191406
    5. ':return' → logprob: -5.851295471191406
    6. '
' → logprob: -6.101295471191406
    7. ',' → logprob: -6.351295471191406
    8. '):' → logprob: -7.476295471191406
    9. 'return' → logprob: -7.726295471191406
    10. ' return' → logprob: -7.851295471191406

Token 484: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20070238411426544
    2. '   ' → logprob: -1.825702428817749
    3. ':' → logprob: -4.20070219039917
    4. '```' → logprob: -6.20070219039917
    5. ' def' → logprob: -6.20070219039917
    6. ':
' → logprob: -7.95070219039917
    7. ':def' → logprob: -8.200702667236328
    8. '):
' → logprob: -8.325702667236328
    9. '
' → logprob: -8.325702667236328
    10. '):' → logprob: -8.825702667236328

Token 485: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.517591118812561
    2. '   ' → logprob: -1.017591118812561
    3. ' for' → logprob: -3.2675909996032715
    4. 'if' → logprob: -6.1425909996032715
    5. 'return' → logprob: -6.7675909996032715
    6. 'def' → logprob: -7.3925909996032715
    7. 'a' → logprob: -7.7675909996032715
    8. ' return' → logprob: -9.76759147644043
    9. ' if' → logprob: -10.01759147644043
    10. '
' → logprob: -11.26759147644043

Token 486: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1966937780380249
    2. 'def' → logprob: -2.3216938972473145
    3. '   ' → logprob: -3.1966938972473145
    4. 'if' → logprob: -4.1966938972473145
    5. ' for' → logprob: -4.4466938972473145
    6. 'return' → logprob: -5.0716938972473145
    7. 'a' → logprob: -5.3216938972473145
    8. '#' → logprob: -6.9466938972473145
    9. '
' → logprob: -7.9466938972473145
    10. 'n' → logprob: -9.071693420410156

Token 487: ' actually' (ID: 4771)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3276798725128174
    2. 'all' → logprob: -1.4526798725128174
    3. 'sum' → logprob: -2.0776798725128174
    4. '#' → logprob: -2.2026798725128174
    5. 'not' → logprob: -2.4526798725128174
    6. ' all' → logprob: -3.2026798725128174
    7. 'False' → logprob: -3.4526798725128174
    8. 'len' → logprob: -3.9526798725128174
    9. 'for' → logprob: -4.077679634094238
    10. 'any' → logprob: -4.452679634094238

Token 488: ' we' (ID: 581)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.8819546103477478
    2. '#' → logprob: -2.5069546699523926
    3. 'to' → logprob: -2.8819546699523926
    4. 'products' → logprob: -3.1319546699523926
    5. 'product' → logprob: -3.1319546699523926
    6. 'the' → logprob: -3.2569546699523926
    7. ' we' → logprob: -3.2569546699523926
    8. 'for' → logprob: -3.2569546699523926
    9. 'multip' → logprob: -3.6319546699523926
    10. ' comparing' → logprob: -3.7569546699523926

Token 489: ' want' (ID: 1682)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.63362056016922
    2. '#' → logprob: -1.7586205005645752
    3. ' need' → logprob: -2.508620500564575
    4. ' want' → logprob: -3.383620500564575
    5. 'should' → logprob: -3.383620500564575
    6. 'cannot' → logprob: -3.383620500564575
    7. 'want' → logprob: -4.258620738983154
    8. 'can' → logprob: -4.383620738983154
    9. ' should' → logprob: -4.383620738983154
    10. 'don't' → logprob: -4.508620738983154

Token 490: ' numeric' (ID: 52077)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5549783110618591
    2. 'all' → logprob: -1.304978370666504
    3. 'False' → logprob: -2.679978370666504
    4. 'sum' → logprob: -3.179978370666504
    5. 'prod' → logprob: -4.179978370666504
    6. ' all' → logprob: -4.679978370666504
    7. 'def' → logprob: -5.554978370666504
    8. ' a' → logprob: -5.804978370666504
    9. 'to' → logprob: -6.054978370666504
    10. 'product' → logprob: -6.054978370666504

Token 491: ' comparison' (ID: 19211)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4780241250991821
    2. 'import' → logprob: -1.8530241250991821
    3. 'value' → logprob: -2.3530240058898926
    4. 'def' → logprob: -2.4780240058898926
    5. 'comparison' → logprob: -3.2280240058898926
    6. '_' → logprob: -3.3530240058898926
    7. ')' → logprob: -3.3530240058898926
    8. '<' → logprob: -3.8530240058898926
    9. ' a' → logprob: -3.8530240058898926
    10. '>' → logprob: -3.8530240058898926

Token 492: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38231509923934937
    2. ':' → logprob: -1.5073151588439941
    3. '#' → logprob: -3.007315158843994
    4. ':
' → logprob: -3.632315158843994
    5. ',' → logprob: -5.257315158843994
    6. '   ' → logprob: -5.382315158843994
    7. ' def' → logprob: -6.757315158843994
    8. '
' → logprob: -6.757315158843994
    9. 'import' → logprob: -7.257315158843994
    10. '):
' → logprob: -7.257315158843994

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25331398844718933
    2. '#' → logprob: -2.0033140182495117
    3. 'def' → logprob: -3.5033140182495117
    4. ' #' → logprob: -4.128314018249512
    5. ' if' → logprob: -4.253314018249512
    6. '```' → logprob: -5.003314018249512
    7. ' def' → logprob: -5.128314018249512
    8. '    ' → logprob: -5.503314018249512
    9. ' return' → logprob: -6.128314018249512
    10. ' pass' → logprob: -6.503314018249512

Token 494: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4604106843471527
    2. 'def' → logprob: -1.960410714149475
    3. ' from' → logprob: -2.4604105949401855
    4. 'a' → logprob: -3.2104105949401855
    5. '   ' → logprob: -3.7104105949401855
    6. 'prod' → logprob: -3.8354105949401855
    7. 'import' → logprob: -4.2104105949401855
    8. ' a' → logprob: -4.7104105949401855
    9. 'for' → logprob: -5.0854105949401855
    10. '#' (adapté à ' #') → logprob: -5.3354105949401855

Token 495: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0917614698410034
    2. 'from' → logprob: -1.2167614698410034
    3. 'def' → logprob: -1.4667614698410034
    4. 'import' → logprob: -2.716761589050293
    5. ' from' → logprob: -3.591761589050293
    6. 'prod' → logprob: -4.966761589050293
    7. ' def' → logprob: -5.216761589050293
    8. ' #' → logprob: -5.216761589050293
    9. 'product' → logprob: -5.466761589050293
    10. '
' → logprob: -5.966761589050293

Token 496: ' can' (ID: 665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18213269114494324
    2. '#' → logprob: -2.4321327209472656
    3. ' can' → logprob: -4.557132720947266
    4. 'need' → logprob: -4.557132720947266
    5. 'can' → logprob: -4.807132720947266
    6. 'will' → logprob: -4.932132720947266
    7. ''ll' → logprob: -4.932132720947266
    8. ' will' → logprob: -4.932132720947266
    9. ' need' → logprob: -5.307132720947266
    10. 'import' → logprob: -5.432132720947266

Token 497: ' compare' (ID: 12221)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.49069440364837646
    2. 'try' → logprob: -1.6156944036483765
    3. 'implement' → logprob: -3.115694522857666
    4. 'do' → logprob: -3.365694522857666
    5. 'def' → logprob: -3.365694522857666
    6. 'convert' → logprob: -3.740694522857666
    7. 'use' → logprob: -4.990694522857666
    8. 'approx' → logprob: -4.990694522857666
    9. 'compute' → logprob: -5.240694522857666
    10. 'define' → logprob: -5.365694522857666

Token 498: ' by' (ID: 656)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03418811038136482
    2. 'def' → logprob: -4.909188270568848
    3. 'pow' → logprob: -5.034188270568848
    4. 'prod' → logprob: -5.034188270568848
    5. 'sum' → logprob: -5.909188270568848
    6. 'x' → logprob: -5.909188270568848
    7. '(a' → logprob: -6.284188270568848
    8. '(' → logprob: -6.659188270568848
    9. '#' → logprob: -7.034188270568848
    10. ' a' → logprob: -7.284188270568848

Token 499: ' log' (ID: 2142)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0960899591445923
    2. 'def' → logprob: -1.5960899591445923
    3. 'import' → logprob: -1.8460899591445923
    4. '#' → logprob: -2.2210898399353027
    5. 'from' → logprob: -2.8460898399353027
    6. 'product' → logprob: -3.4710898399353027
    7. '
' → logprob: -4.346089839935303
    8. 'cross' → logprob: -4.346089839935303
    9. 'sum' → logprob: -4.471089839935303
    10. 'for' → logprob: -4.721089839935303

Token 500: '(product' (ID: 31697)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0757180452346802
    2. 'def' → logprob: -1.4507180452346802
    3. 'import' → logprob: -1.4507180452346802
    4. '10' → logprob: -2.2007179260253906
    5. ' def' → logprob: -4.075717926025391
    6. '_' → logprob: -4.075717926025391
    7. '```' → logprob: -4.450717926025391
    8. 's' → logprob: -5.075717926025391
    9. '(a' → logprob: -5.450717926025391
    10. '1' → logprob: -5.575717926025391

Token 501: ')
' (ID: 446)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7484623193740845
    2. ')' → logprob: -0.8734623193740845
    3. 's' → logprob: -2.998462200164795
    4. '(a' → logprob: -3.748462200164795
    5. '_a' → logprob: -4.873462200164795
    6. '+' → logprob: -5.123462200164795
    7. '10' → logprob: -5.373462200164795
    8. '(' → logprob: -5.873462200164795
    9. '),' → logprob: -6.123462200164795
    10. ')
' → logprob: -6.373462200164795

Token 502: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0491435527801514
    2. '   ' → logprob: -1.2991435527801514
    3. 'def' → logprob: -1.6741435527801514
    4. 'a' → logprob: -2.4241435527801514
    5. ' def' → logprob: -3.7991435527801514
    6. '#' → logprob: -4.0491437911987305
    7. ' a' → logprob: -4.6741437911987305
    8. '_a' → logprob: -4.9241437911987305
    9. '(a' → logprob: -5.1741437911987305
    10. ' import' → logprob: -5.1741437911987305

Token 503: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.060052383691072464
    2. '   ' → logprob: -3.6850523948669434
    3. 'from' → logprob: -4.310052394866943
    4. 'def' → logprob: -4.935052394866943
    5. ' import' → logprob: -5.560052394866943
    6. 'return' → logprob: -5.810052394866943
    7. ' from' → logprob: -6.310052394866943
    8. ' return' → logprob: -6.435052394866943
    9. ')' → logprob: -6.810052394866943
    10. 'a' → logprob: -8.310051918029785

Token 504: ' log' (ID: 2142)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06493831425905228
    2. 'from' → logprob: -3.1899383068084717
    3. '#' → logprob: -5.064938545227051
    4. 'def' → logprob: -5.314938545227051
    5. 'return' → logprob: -5.689938545227051
    6. '   ' → logprob: -6.064938545227051
    7. ' import' → logprob: -6.189938545227051
    8. ' from' → logprob: -6.314938545227051
    9. 'log' → logprob: -8.18993854522705
    10. '
' → logprob: -8.68993854522705

Token 505: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4496891498565674
    2. '_product' → logprob: -1.4496891498565674
    3. '10' → logprob: -2.0746891498565674
    4. '_prod' → logprob: -2.1996891498565674
    5. '_value' → logprob: -2.6996891498565674
    6. 's' → logprob: -3.0746891498565674
    7. '_val' → logprob: -3.6996891498565674
    8. '_s' → logprob: -3.9496891498565674
    9. ' =' → logprob: -3.9496891498565674
    10. 'a' → logprob: -3.9496891498565674

Token 506: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04852626845240593
    2. 'ro' → logprob: -3.5485262870788574
    3. ' =' → logprob: -4.798526287078857
    4. '=' → logprob: -4.923526287078857
    5. 's' → logprob: -7.298526287078857
    6. 'rod' → logprob: -7.548526287078857
    7. '=[' → logprob: -8.1735258102417
    8. 'rodu' → logprob: -8.4235258102417
    9. '=(' → logprob: -8.6735258102417
    10. '```' → logprob: -8.7985258102417

Token 507: ' sum' (ID: 4215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03952733427286148
    2. '[x' → logprob: -4.164527416229248
    3. 'lambda' → logprob: -5.039527416229248
    4. ' [' → logprob: -5.289527416229248
    5. '(lambda' → logprob: -5.539527416229248
    6. '[
' → logprob: -5.539527416229248
    7. '[i' → logprob: -7.289527416229248
    8. '[a' → logprob: -7.289527416229248
    9. '[len' → logprob: -7.664527416229248
    10. '[p' → logprob: -7.914527416229248

Token 508: ' of' (ID: 328)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.8816234469413757
    2. '(x' → logprob: -1.3816235065460205
    3. 'math' → logprob: -1.8816235065460205
    4. '[' → logprob: -3.3816235065460205
    5. 'x' → logprob: -3.3816235065460205
    6. 'a' → logprob: -3.5066235065460205
    7. '(' → logprob: -3.8816235065460205
    8. '([' → logprob: -4.006623268127441
    9. '(log' → logprob: -4.881623268127441
    10. 'log' → logprob: -5.506623268127441

Token 509: ' ex' (ID: 513)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8837068676948547
    2. 'x' → logprob: -1.00870680809021
    3. '(x' → logprob: -1.63370680809021
    4. '[x' → logprob: -5.133707046508789
    5. '(a' → logprob: -5.258707046508789
    6. 'xi' → logprob: -6.258707046508789
    7. 'i' → logprob: -6.758707046508789
    8. 'ex' → logprob: -6.758707046508789
    9. '[' → logprob: -6.758707046508789
    10. '(' → logprob: -6.758707046508789

Token 510: 'ponents' (ID: 4331)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.49368569254875183
    2. 'ps' → logprob: -0.9936857223510742
    3. 'ponents' → logprob: -3.993685722351074
    4. 'ponent' → logprob: -7.993685722351074
    5. 'pr' → logprob: -9.118685722351074
    6. 'po' → logprob: -9.493685722351074
    7. '[' → logprob: -9.743685722351074
    8. 'ports' → logprob: -9.993685722351074
    9. 'pons' → logprob: -10.118685722351074
    10. 'logs' → logprob: -10.868685722351074

Token 511: ' *' (ID: 425)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.008887767791748
    2. 'def' → logprob: -1.508887767791748
    3. 's' → logprob: -2.758887767791748
    4. '[' → logprob: -3.008887767791748
    5. '_a' → logprob: -3.133887767791748
    6. ')' → logprob: -3.258887767791748
    7. 'a' → logprob: -3.758887767791748
    8. '[i' → logprob: -3.883887767791748
    9. ' *' → logprob: -4.008887767791748
    10. '   ' → logprob: -4.008887767791748

Token 512: ' log' (ID: 2142)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5954161286354065
    2. '[' → logprob: -1.8454160690307617
    3. 'import' → logprob: -1.8454160690307617
    4. 'p' → logprob: -3.7204160690307617
    5. 'math' → logprob: -3.8454160690307617
    6. 'pr' → logprob: -4.345416069030762
    7. '(pr' → logprob: -4.470416069030762
    8. '(' → logprob: -4.720416069030762
    9. ' [' → logprob: -4.970416069030762
    10. '[p' → logprob: -5.095416069030762

Token 513: '(pr' (ID: 38401)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0247375965118408
    2. 'p' → logprob: -1.1497375965118408
    3. '_p' → logprob: -1.7747375965118408
    4. '_' → logprob: -3.149737596511841
    5. '_pr' → logprob: -3.149737596511841
    6. 'pr' → logprob: -3.274737596511841
    7. '10' → logprob: -4.649737358093262
    8. '(pr' → logprob: -5.024737358093262
    9. '2' → logprob: -6.149737358093262
    10. 'ps' → logprob: -6.274737358093262

Token 514: 'ime' (ID: 642)
  Prédit: 'imes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.008626751601696014
    2. 'im' → logprob: -6.008626937866211
    3. 'ime' → logprob: -6.008626937866211
    4. '[' → logprob: -6.258626937866211
    5. '[i' → logprob: -7.633626937866211
    6. 'i' → logprob: -8.383626937866211
    7. '{' → logprob: -9.383626937866211
    8. 'import' → logprob: -9.508626937866211
    9. '```' → logprob: -9.508626937866211
    10. '[]' → logprob: -9.821126937866211

Token 515: ')
' (ID: 446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11397877335548401
    2. ')' → logprob: -2.238978862762451
    3. '[' → logprob: -7.988978862762451
    4. 'p' → logprob: -8.613978385925293
    5. ')s' → logprob: -8.613978385925293
    6. '[i' → logprob: -8.863978385925293
    7. '_s' → logprob: -9.738978385925293
    8. '))' → logprob: -10.363978385925293
    9. '_' → logprob: -10.613978385925293
    10. ')]' → logprob: -10.738978385925293

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.199274480342865
    2. 'import' → logprob: -2.0742745399475098
    3. 'def' → logprob: -3.9492745399475098
    4. ')' → logprob: -4.32427453994751
    5. '
' → logprob: -5.19927453994751
    6. '):' → logprob: -5.44927453994751
    7. 'log' → logprob: -5.69927453994751
    8. '):
' → logprob: -5.94927453994751
    9. ':' → logprob: -6.57427453994751
    10. '```' → logprob: -7.07427453994751

Token 517: ' log' (ID: 2142)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47185173630714417
    2. 'import' → logprob: -1.2218517065048218
    3. 'def' → logprob: -2.7218518257141113
    4. '
' → logprob: -5.346851825714111
    5. 'from' → logprob: -5.596851825714111
    6. 'log' (adapté à ' log') → logprob: -5.721851825714111
    7. ')' → logprob: -7.221851825714111
    8. '):
' → logprob: -7.346851825714111
    9. ' def' → logprob: -7.721851825714111
    10. '):' → logprob: -8.096851348876953

Token 518: '_pr' (ID: 18177)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.26504284143447876
    2. 's' → logprob: -1.640042781829834
    3. '_pr' → logprob: -3.515042781829834
    4. '_values' → logprob: -5.515042781829834
    5. '_vals' → logprob: -6.140042781829834
    6. '_ps' → logprob: -6.890042781829834
    7. '_probs' → logprob: -7.265042781829834
    8. '_' → logprob: -8.015043258666992
    9. '_s' → logprob: -8.515043258666992
    10. '_logs' → logprob: -9.015043258666992

Token 519: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.002738781739026308
    2. 'ime' → logprob: -6.502738952636719
    3. ' =' → logprob: -7.502738952636719
    4. '=' → logprob: -9.127738952636719
    5. 'ices' → logprob: -9.252738952636719
    6. 'es' → logprob: -10.002738952636719
    7. '_pr' → logprob: -10.002738952636719
    8. 'im' → logprob: -10.127738952636719
    9. 's' → logprob: -10.127738952636719
    10. 'pr' → logprob: -10.627738952636719

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693165123462677
    2. ' =' → logprob: -0.693165123462677
    3. '=[' → logprob: -11.568164825439453
    4. ' =[' → logprob: -12.068164825439453
    5. ']' → logprob: -13.693164825439453
    6. ')' → logprob: -14.318164825439453
    7. ']=' → logprob: -15.193164825439453
    8. 's' → logprob: -15.318164825439453
    9. '[' → logprob: -15.568164825439453
    10. ')=' → logprob: -16.818164825439453

Token 521: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005479914136230946
    2. ' [' → logprob: -5.25547981262207
    3. '{' → logprob: -9.00547981262207
    4. '(' → logprob: -9.38047981262207
    5. '{
' → logprob: -11.63047981262207
    6. '   ' → logprob: -11.75547981262207
    7. ' ' → logprob: -11.88047981262207
    8. '[
' → logprob: -11.88047981262207
    9. ' (' → logprob: -12.63047981262207
    10. '  ' → logprob: -13.13047981262207

Token 522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014658546075224876
    2. 'math' → logprob: -5.139658451080322
    3. 'import' → logprob: -5.889658451080322
    4. '[' → logprob: -6.514658451080322
    5. '2' → logprob: -6.639658451080322
    6. ' ' → logprob: -6.889658451080322
    7. 'p' → logprob: -7.764658451080322
    8. '3' → logprob: -7.889658451080322
    9. '1' → logprob: -8.01465892791748
    10. '   ' → logprob: -8.88965892791748

Token 523: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002572686644271016
    2. ',' → logprob: -6.252572536468506
    3. '0' → logprob: -8.752573013305664
    4. ' for' → logprob: -9.002573013305664
    5. '   ' → logprob: -9.002573013305664
    6. 'for' → logprob: -9.252573013305664
    7. ']' → logprob: -10.502573013305664
    8. ',
' → logprob: -11.377573013305664
    9. '       ' → logprob: -11.502573013305664
    10. '1' → logprob: -11.502573013305664

Token 524: '693' (ID: 48779)
  Prédit: '693'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '693' → logprob: -0.2684282660484314
    2. '602' → logprob: -1.6434283256530762
    3. 'log' → logprob: -4.643428325653076
    4. '0' → logprob: -4.768428325653076
    5. '405' → logprob: -4.893428325653076
    6. '301' → logprob: -4.893428325653076
    7. '397' → logprob: -6.643428325653076
    8. '176' → logprob: -6.643428325653076
    9. '510' → logprob: -7.018428325653076
    10. '477' → logprob: -7.143428325653076

Token 525: '147' (ID: 18902)
  Prédit: '147'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '147' → logprob: -0.0008591734222136438
    2. '1' → logprob: -7.125859260559082
    3. '15' → logprob: -10.125859260559082
    4. ',' → logprob: -12.500859260559082
    5. 'p' → logprob: -12.750859260559082
    6. ')' → logprob: -13.250859260559082
    7. 'log' → logprob: -13.375859260559082
    8. 'l' → logprob: -14.250859260559082
    9. ' ' → logprob: -14.375859260559082
    10. '[' → logprob: -14.500859260559082

Token 526: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.6553618311882019
    2. ',' → logprob: -1.0303618907928467
    3. '2' → logprob: -2.5303618907928467
    4. '=' → logprob: -5.030361652374268
    5. 'n' → logprob: -5.280361652374268
    6. ' ' → logprob: -5.280361652374268
    7. '...' → logprob: -5.530361652374268
    8. ')' → logprob: -6.155361652374268
    9. 'def' → logprob: -6.280361652374268
    10. '  ' → logprob: -6.405361652374268

Token 527: '559' (ID: 43685)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '180' → logprob: -0.02207530103623867
    2. '18' → logprob: -4.147075176239014
    3. '...' → logprob: -6.272075176239014
    4. '1' → logprob: -6.647075176239014
    5. 'f' → logprob: -7.522075176239014
    6. ',' → logprob: -7.647075176239014
    7. '185' → logprob: -7.647075176239014
    8. '=' → logprob: -7.772075176239014
    9. '   ' → logprob: -8.022075653076172
    10. '  ' → logprob: -9.272075653076172

Token 528: '945' (ID: 46519)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2871310710906982
    2. '...' → logprob: -1.7871310710906982
    3. '```' → logprob: -1.9121310710906982
    4. '945' → logprob: -2.4121310710906982
    5. 'f' → logprob: -2.9121310710906982
    6. '   ' → logprob: -3.6621310710906982
    7. 'def' → logprob: -3.6621310710906982
    8. '5' → logprob: -3.7871310710906982
    9. '095' → logprob: -3.7871310710906982
    10. '__' → logprob: -4.037131309509277

Token 529: '3' (ID: 18)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004273327067494392
    2. ' ' → logprob: -6.629273414611816
    3. ' ,' → logprob: -6.879273414611816
    4. ']' → logprob: -7.754273414611816
    5. '  ' → logprob: -7.879273414611816
    6. '3' → logprob: -8.379273414611816
    7. '   ' → logprob: -8.629273414611816
    8. ',
' → logprob: -9.129273414611816
    9. '_,' → logprob: -9.254273414611816
    10. '253' → logprob: -9.504273414611816

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003415705170482397
    2. ' ,' → logprob: -6.378415584564209
    3. ',
' → logprob: -6.378415584564209
    4. ' ,
' → logprob: -12.128416061401367
    5. '   ' → logprob: -12.878416061401367
    6. '  ' → logprob: -13.503416061401367
    7. ' ' → logprob: -13.878416061401367
    8. '       ' → logprob: -14.503416061401367
    9. ',\
' → logprob: -14.753416061401367
    10. '1' → logprob: -15.003416061401367

Token 531: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015622020873706788
    2. ' ' → logprob: -9.00015640258789
    3. '   ' → logprob: -11.25015640258789
    4. '  ' → logprob: -12.18765640258789
    5. '[' → logprob: -13.06265640258789
    6. '     ' → logprob: -13.25015640258789
    7. '0' → logprob: -13.31265640258789
    8. '    ' → logprob: -13.62515640258789
    9. '``' → logprob: -13.68765640258789
    10. '```' → logprob: -13.75015640258789

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.011373155459296e-05
    2. ' ' → logprob: -11.500030517578125
    3. '[' → logprob: -12.375030517578125
    4. '   ' → logprob: -12.375030517578125
    5. '0' → logprob: -13.187530517578125
    6. '  ' → logprob: -13.250030517578125
    7. '``' → logprob: -13.500030517578125
    8. '
' → logprob: -13.625030517578125
    9. '```' → logprob: -13.625030517578125
    10. '     ' → logprob: -14.562530517578125

Token 533: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4378848391061183e-05
    2. '1' → logprob: -11.250014305114746
    3. '0' → logprob: -14.000014305114746
    4. ',' → logprob: -15.125014305114746
    5. ' ' → logprob: -16.625015258789062
    6. '```' → logprob: -16.875015258789062
    7. '.
' → logprob: -17.312515258789062
    8. ' .' → logprob: -17.625015258789062
    9. '2' → logprob: -17.687515258789062
    10. '...' → logprob: -18.750015258789062

Token 534: '098' (ID: 43616)
  Prédit: '098'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '098' → logprob: -1.2664456789934775e-06
    2. '609' → logprob: -14.500000953674316
    3. '099' → logprob: -14.625000953674316
    4. '386' → logprob: -16.125001907348633
    5. '097' → logprob: -17.000001907348633
    6. '09' → logprob: -17.375001907348633
    7. '0' → logprob: -17.375001907348633
    8. '091' → logprob: -17.500001907348633
    9. '093' → logprob: -18.500001907348633
    10. '252' → logprob: -19.250001907348633

Token 535: '612' (ID: 38189)
  Prédit: '612'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '612' → logprob: -0.001783475512638688
    2. '613' → logprob: -6.37678337097168
    3. '610' → logprob: -10.25178337097168
    4. '609' → logprob: -10.50178337097168
    5. '6' → logprob: -11.50178337097168
    6. '611' → logprob: -12.62678337097168
    7. '61' → logprob: -12.87678337097168
    8. '618' → logprob: -13.50178337097168
    9. '607' → logprob: -15.00178337097168
    10. '615' → logprob: -15.37678337097168

Token 536: '288' (ID: 26678)
  Prédit: '213'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '213' → logprob: -0.8014392852783203
    2. '206' → logprob: -1.8014392852783203
    3. '207' → logprob: -2.0514392852783203
    4. '288' → logprob: -2.5514392852783203
    5. '217' → logprob: -2.8014392852783203
    6. '204' → logprob: -3.8014392852783203
    7. '192' → logprob: -4.42643928527832
    8. '208' → logprob: -4.55143928527832
    9. '448' → logprob: -4.67643928527832
    10. '223' → logprob: -4.92643928527832

Token 537: '668' (ID: 43345)
  Prédit: '269'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '269' → logprob: -0.08797402679920197
    2. '219' → logprob: -3.7129740715026855
    3. '193' → logprob: -4.3379740715026855
    4. '253' → logprob: -5.3379740715026855
    5. '313' → logprob: -5.4629740715026855
    6. '319' → logprob: -5.4629740715026855
    7. '192' → logprob: -5.5879740715026855
    8. '259' → logprob: -5.5879740715026855
    9. '273' → logprob: -5.7129740715026855
    10. '196' → logprob: -5.8379740715026855

Token 538: '109' (ID: 13923)
  Prédit: '269'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '269' → logprob: -0.2599228620529175
    2. '153' → logprob: -3.509922981262207
    3. '094' → logprob: -3.884922981262207
    4. '209' → logprob: -4.134922981262207
    5. '154' → logprob: -4.134922981262207
    6. '259' → logprob: -4.259922981262207
    7. '169' → logprob: -4.259922981262207
    8. '194' → logprob: -4.759922981262207
    9. '273' → logprob: -4.884922981262207
    10. '309' → logprob: -4.884922981262207

Token 539: '8' (ID: 23)
  Prédit: '179'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '179' → logprob: -0.6184000372886658
    2. ',' → logprob: -1.3684000968933105
    3. '317' → logprob: -3.1184000968933105
    4. '4' → logprob: -3.7434000968933105
    5. '269' → logprob: -3.7434000968933105
    6. '267' → logprob: -4.2434000968933105
    7. '[' → logprob: -4.2434000968933105
    8. '2' → logprob: -4.9934000968933105
    9. '017' → logprob: -4.9934000968933105
    10. '079' → logprob: -5.2434000968933105

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0077328612096607685
    2. ' ,' → logprob: -4.88273286819458
    3. '   ' → logprob: -9.382732391357422
    4. ',
' → logprob: -10.882732391357422
    5. ' ' → logprob: -12.382732391357422
    6. '  ' → logprob: -12.507732391357422
    7. '0' → logprob: -13.257732391357422
    8. '4' → logprob: -13.382732391357422
    9. '3' → logprob: -13.507732391357422
    10. '       ' → logprob: -13.507732391357422

Token 541: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04406309127807617
    2. ' ' → logprob: -3.169063091278076
    3. '2' → logprob: -7.044063091278076
    4. '   ' → logprob: -9.169063568115234
    5. '0' → logprob: -9.794063568115234
    6. '
' → logprob: -11.669063568115234
    7. '  ' → logprob: -12.231563568115234
    8. '       ' → logprob: -12.669063568115234
    9. '``' → logprob: -12.981563568115234
    10. '     ' → logprob: -13.294063568115234

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017672323156148195
    2. '0' → logprob: -8.875176429748535
    3. '2' → logprob: -10.750176429748535
    4. ' ' → logprob: -11.875176429748535
    5. '
' → logprob: -12.375176429748535
    6. '``' → logprob: -13.750176429748535
    7. '[' → logprob: -14.187676429748535
    8. '```' → logprob: -14.375176429748535
    9. '   ' → logprob: -15.000176429748535
    10. '{' → logprob: -15.062676429748535

Token 543: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.0722858102526516e-05
    2. '0' → logprob: -10.375041007995605
    3. '1' → logprob: -12.625041007995605
    4. '2' → logprob: -12.625041007995605
    5. '5' → logprob: -14.312541007995605
    6. '.
' → logprob: -14.500041007995605
    7. '
' → logprob: -15.125041007995605
    8. '4' → logprob: -15.187541007995605
    9. '3' → logprob: -15.687541007995605
    10. ',' → logprob: -15.750041007995605

Token 544: '609' (ID: 39716)
  Prédit: '386'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '386' → logprob: -0.7073763012886047
    2. '945' → logprob: -0.7073763012886047
    3. '282' → logprob: -5.207376480102539
    4. '609' → logprob: -5.207376480102539
    5. '791' → logprob: -7.207376480102539
    6. '280' → logprob: -7.457376480102539
    7. '946' → logprob: -7.457376480102539
    8. '281' → logprob: -7.957376480102539
    9. '252' → logprob: -8.582376480102539
    10. '279' → logprob: -9.207376480102539

Token 545: '437' (ID: 35536)
  Prédit: '437'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '437' → logprob: -0.40977922081947327
    2. '442' → logprob: -2.0347793102264404
    3. '433' → logprob: -2.4097793102264404
    4. '477' → logprob: -3.2847793102264404
    5. '448' → logprob: -4.034779071807861
    6. '447' → logprob: -4.284779071807861
    7. '438' → logprob: -4.909779071807861
    8. '444' → logprob: -4.909779071807861
    9. '441' → logprob: -5.034779071807861
    10. '443' → logprob: -5.034779071807861

Token 546: '912' (ID: 43023)
  Prédit: '912'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '912' → logprob: -1.0709905624389648
    2. '952' → logprob: -1.9459905624389648
    3. '964' → logprob: -2.820990562438965
    4. '942' → logprob: -2.820990562438965
    5. '948' → logprob: -2.820990562438965
    6. '944' → logprob: -3.320990562438965
    7. '927' → logprob: -3.445990562438965
    8. '921' → logprob: -3.570990562438965
    9. '910' → logprob: -3.570990562438965
    10. '954' → logprob: -3.945990562438965

Token 547: '434' (ID: 36697)
  Prédit: '262'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '262' → logprob: -0.7855086922645569
    2. '264' → logprob: -1.535508632659912
    3. '252' → logprob: -2.910508632659912
    4. '504' → logprob: -3.285508632659912
    5. '192' → logprob: -3.660508632659912
    6. '257' → logprob: -3.785508632659912
    7. '294' → logprob: -4.160508632659912
    8. '267' → logprob: -4.285508632659912
    9. '494' → logprob: -4.285508632659912
    10. '254' → logprob: -4.660508632659912

Token 548: '100' (ID: 1353)
  Prédit: '295'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '295' → logprob: -1.854702115058899
    2. '952' → logprob: -1.979702115058899
    3. '950' → logprob: -2.1047019958496094
    4. '395' → logprob: -2.3547019958496094
    5. '795' → logprob: -2.4797019958496094
    6. '195' → logprob: -2.6047019958496094
    7. '995' → logprob: -3.1047019958496094
    8. '95' → logprob: -3.2297019958496094
    9. '262' → logprob: -3.6047019958496094
    10. '951' → logprob: -3.8547019958496094

Token 549: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.9395877122879028
    2. '7' → logprob: -1.5645877122879028
    3. '4' → logprob: -2.5645875930786133
    4. '2' → logprob: -2.6895875930786133
    5. '197' → logprob: -3.1895875930786133
    6. ',' → logprob: -3.4395875930786133
    7. '6' → logprob: -3.8145875930786133
    8. '9' → logprob: -4.064587593078613
    9. '19' → logprob: -4.064587593078613
    10. '517' → logprob: -4.314587593078613

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011552194133400917
    2. ' ,' → logprob: -4.511552333831787
    3. '   ' → logprob: -7.761552333831787
    4. ',
' → logprob: -11.261551856994629
    5. '       ' → logprob: -11.261551856994629
    6. '  ' → logprob: -11.261551856994629
    7. ' ' → logprob: -11.636551856994629
    8. '7' → logprob: -12.136551856994629
    9. '[' → logprob: -12.761551856994629
    10. '           ' → logprob: -13.136551856994629

Token 551: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03930087760090828
    2. ' ' → logprob: -3.5393009185791016
    3. '0' → logprob: -4.789300918579102
    4. '1' → logprob: -6.914300918579102
    5. '   ' → logprob: -8.789300918579102
    6. '  ' → logprob: -11.164300918579102
    7. '
' → logprob: -11.789300918579102
    8. '     ' → logprob: -12.789300918579102
    9. '3' → logprob: -12.851800918579102
    10. '    ' → logprob: -13.226800918579102

Token 552: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20256996154785156
    2. '0' → logprob: -1.7025699615478516
    3. '1' → logprob: -6.827569961547852
    4. '3' → logprob: -9.952569961547852
    5. '   ' → logprob: -11.702569961547852
    6. '
' → logprob: -12.577569961547852
    7. '``' → logprob: -12.827569961547852
    8. '4' → logprob: -13.077569961547852
    9. '```' → logprob: -13.390069961547852
    10. ' ' → logprob: -13.390069961547852

Token 553: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.7610454708337784e-05
    2. '0' → logprob: -12.250027656555176
    3. '417' → logprob: -13.375027656555176
    4. '793' → logprob: -13.500027656555176
    5. '1' → logprob: -13.875027656555176
    6. '209' → logprob: -14.000027656555176
    7. '[' → logprob: -14.125027656555176
    8. '297' → logprob: -14.375027656555176
    9. '309' → logprob: -14.375027656555176
    10. ' .' → logprob: -14.625027656555176

Token 554: '945' (ID: 46519)
  Prédit: '945'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '945' → logprob: -0.1123892143368721
    2. '386' → logprob: -2.737389326095581
    3. '791' → logprob: -3.612389326095581
    4. '609' → logprob: -4.612389087677002
    5. '946' → logprob: -5.987389087677002
    6. '427' → logprob: -8.36238956451416
    7. '943' → logprob: -8.36238956451416
    8. '098' → logprob: -8.36238956451416
    9. '178' → logprob: -8.73738956451416
    10. '792' → logprob: -8.86238956451416

Token 555: '910' (ID: 36848)
  Prédit: '244'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '244' → logprob: -0.46838927268981934
    2. '144' → logprob: -1.2183892726898193
    3. '213' → logprob: -2.7183892726898193
    4. '214' → logprob: -5.218389511108398
    5. '245' → logprob: -5.968389511108398
    6. '149' → logprob: -7.718389511108398
    7. '945' → logprob: -7.843389511108398
    8. '152' → logprob: -8.093389511108398
    9. '...' → logprob: -8.780889511108398
    10. '944' → logprob: -8.843389511108398

Token 556: '149' (ID: 18235)
  Prédit: '264'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '264' → logprob: -0.008897710591554642
    2. '265' → logprob: -5.13389778137207
    3. '263' → logprob: -6.63389778137207
    4. '164' → logprob: -7.63389778137207
    5. '157' → logprob: -8.38389778137207
    6. '257' → logprob: -8.38389778137207
    7. '267' → logprob: -8.88389778137207
    8. '259' → logprob: -9.50889778137207
    9. '258' → logprob: -9.75889778137207
    10. '244' → logprob: -10.13389778137207

Token 557: '055' (ID: 40636)
  Prédit: '158'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '158' → logprob: -1.2193320989608765
    2. '157' → logprob: -1.3443320989608765
    3. '265' → logprob: -2.719332218170166
    4. '258' → logprob: -2.844332218170166
    5. '262' → logprob: -3.219332218170166
    6. '159' → logprob: -3.219332218170166
    7. '317' → logprob: -3.344332218170166
    8. '269' → logprob: -3.719332218170166
    9. '267' → logprob: -3.969332218170166
    10. '259' → logprob: -4.094332218170166

Token 558: '313' (ID: 28643)
  Prédit: '317'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '317' → logprob: -0.09007979929447174
    2. '318' → logprob: -2.5900797843933105
    3. '322' → logprob: -4.9650797843933105
    4. '320' → logprob: -6.0900797843933105
    5. '682' → logprob: -8.215080261230469
    6. '385' → logprob: -8.590080261230469
    7. '327' → logprob: -8.715080261230469
    8. '167' → logprob: -8.840080261230469
    9. '397' → logprob: -8.965080261230469
    10. '32' → logprob: -9.340080261230469

Token 559: '2' (ID: 17)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9809361100196838
    2. '2' → logprob: -2.230936050415039
    3. '7' → logprob: -2.480936050415039
    4. '6' → logprob: -2.730936050415039
    5. '9' → logprob: -2.730936050415039
    6. '4' → logprob: -2.855936050415039
    7. '5' → logprob: -2.855936050415039
    8. '1' → logprob: -2.980936050415039
    9. '8' → logprob: -3.230936050415039
    10. '])' → logprob: -3.730936050415039

Token 560: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.05736580491065979
    2. ']' → logprob: -2.932365894317627
    3. ']

' → logprob: -6.557365894317627
    4. '   ' → logprob: -7.807365894317627
    5. ']
' → logprob: -7.932365894317627
    6. 'def' → logprob: -8.557365417480469
    7. ' ]
' → logprob: -9.557365417480469
    8. ')
' → logprob: -11.807365417480469
    9. '])' → logprob: -12.307365417480469
    10. '])
' → logprob: -12.557365417480469

Token 561: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030747776851058006
    2. '   ' → logprob: -4.280747890472412
    3. '
' → logprob: -4.405747890472412
    4. ' def' → logprob: -6.280747890472412
    5. '```' → logprob: -6.530747890472412
    6. ')' → logprob: -8.155747413635254
    7. '):
' → logprob: -8.905747413635254
    8. '    
' → logprob: -9.655747413635254
    9. ')
' → logprob: -10.030747413635254
    10. ':' → logprob: -10.030747413635254

Token 562: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09085024893283844
    2. '   ' → logprob: -2.590850353240967
    3. ' def' → logprob: -4.590850353240967
    4. '
' → logprob: -7.715850353240967
    5. ' for' → logprob: -8.340849876403809
    6. 'log' → logprob: -8.590849876403809
    7. '       ' → logprob: -8.965849876403809
    8. 'import' → logprob: -9.215849876403809
    9. 'for' → logprob: -9.340849876403809
    10. 'a' → logprob: -9.840849876403809

Token 563: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022360600531101227
    2. '=' → logprob: -4.397360801696777
    3. 'a' → logprob: -5.522360801696777
    4. 'l' → logprob: -6.397360801696777
    5. '   ' → logprob: -6.647360801696777
    6. ',' → logprob: -7.522360801696777
    7. 's' → logprob: -7.772360801696777
    8. '_a' → logprob: -8.022360801696777
    9. 'la' → logprob: -8.147360801696777
    10. '=[' → logprob: -8.647360801696777

Token 564: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06204196438193321
    2. ' sum' → logprob: -2.812041997909546
    3. '0' → logprob: -9.812042236328125
    4. '[' → logprob: -11.562042236328125
    5. ' [' → logprob: -12.187042236328125
    6. '   ' → logprob: -13.312042236328125
    7. '(sum' → logprob: -13.437042236328125
    8. ' ' → logprob: -13.937042236328125
    9. '=sum' → logprob: -15.062042236328125
    10. '	sum' → logprob: -15.937042236328125

Token 565: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0023486497811973095
    2. 'x' → logprob: -6.25234842300415
    3. '(a' → logprob: -8.752348899841309
    4. '(' → logprob: -8.877348899841309
    5. '([' → logprob: -9.752348899841309
    6. '((' → logprob: -10.377348899841309
    7. 'a' → logprob: -10.752348899841309
    8. '[x' → logprob: -12.627348899841309
    9. ' (' → logprob: -13.127348899841309
    10. '(i' → logprob: -13.627348899841309

Token 566: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003819332632701844
    2. 'i' → logprob: -8.750381469726562
    3. '[x' → logprob: -9.000381469726562
    4. '_i' → logprob: -9.625381469726562
    5. 'x' → logprob: -11.250381469726562
    6. '[' → logprob: -11.750381469726562
    7. 'log' → logprob: -12.750381469726562
    8. '*i' → logprob: -13.500381469726562
    9. 'e' → logprob: -13.750381469726562
    10. '*' → logprob: -13.875381469726562

Token 567: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3872464895248413
    2. ']*' → logprob: -1.5122464895248413
    3. ']' → logprob: -2.887246608734131
    4. ' *' → logprob: -3.137246608734131
    5. '*x' → logprob: -7.762246608734131
    6. '   ' → logprob: -7.887246608734131
    7. ')*' → logprob: -8.262246131896973
    8. '*i' → logprob: -9.512246131896973
    9. '*pi' → logprob: -9.887246131896973
    10. ')' → logprob: -10.012246131896973

Token 568: 'log' (ID: 2133)
  Prédit: 'log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -2.45848218582978e-06
    2. ' log' → logprob: -13.00000286102295
    3. '(log' → logprob: -17.000001907348633
    4. 'logen' → logprob: -17.625001907348633
    5. 'import' → logprob: -17.875001907348633
    6. '	log' → logprob: -18.125001907348633
    7. 'loga' → logprob: -18.375001907348633
    8. '
' → logprob: -18.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. '"log' → logprob: -18.875001907348633

Token 569: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -7.941850526549388e-06
    2. '10' → logprob: -13.375007629394531
    3. '_p' → logprob: -13.875007629394531
    4. 'a' → logprob: -14.000007629394531
    5. '(pr' → logprob: -14.125007629394531
    6. 's' → logprob: -14.250007629394531
    7. ' _' → logprob: -14.250007629394531
    8. '```' → logprob: -14.375007629394531
    9. '_' → logprob: -14.500007629394531
    10. 'pr' → logprob: -14.750007629394531

Token 570: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0009247996495105326
    2. '[' → logprob: -8.125925064086914
    3. 'mes' → logprob: -8.625925064086914
    4. 'i' → logprob: -9.875925064086914
    5. 'omes' → logprob: -10.250925064086914
    6. 'ames' → logprob: -10.625925064086914
    7. 'a' → logprob: -10.875925064086914
    8. '{' → logprob: -10.875925064086914
    9. 'im' → logprob: -10.875925064086914
    10. 'pr' → logprob: -11.000925064086914

Token 571: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10485254228115082
    2. ' for' → logprob: -2.7298524379730225
    3. 'i' → logprob: -4.104852676391602
    4. 'for' → logprob: -4.104852676391602
    5. ' i' → logprob: -6.979852676391602
    6. '(i' → logprob: -8.729852676391602
    7. ']' → logprob: -9.104852676391602
    8. ')' → logprob: -9.604852676391602
    9. ' ' → logprob: -11.104852676391602
    10. '   ' → logprob: -11.729852676391602

Token 572: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4214302897453308
    2. 'for' → logprob: -1.2964303493499756
    3. ']' → logprob: -2.6714303493499756
    4. ')' → logprob: -6.9214301109313965
    5. ' ' → logprob: -9.046430587768555
    6. '   ' → logprob: -10.421430587768555
    7. '	for' → logprob: -10.421430587768555
    8. '0' → logprob: -11.421430587768555
    9. 'i' → logprob: -11.421430587768555
    10. '  ' → logprob: -11.546430587768555

Token 573: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014310657978058
    2. 'for' → logprob: -1.7014310359954834
    3. '	for' → logprob: -12.451431274414062
    4. ')' → logprob: -12.576431274414062
    5. '
' → logprob: -12.826431274414062
    6. ' ' → logprob: -12.951431274414062
    7. ' -' → logprob: -13.451431274414062
    8. '```' → logprob: -14.201431274414062
    9. ',' → logprob: -14.701431274414062
    10. 'i' → logprob: -14.701431274414062

Token 574: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.8497312895488e-05
    2. ' i' → logprob: -9.875068664550781
    3. 'range' → logprob: -11.000068664550781
    4. ' range' → logprob: -15.500068664550781
    5. '
' → logprob: -16.75006866455078
    6. '	i' → logprob: -17.87506866455078
    7. ' ' → logprob: -18.00006866455078
    8. '   ' → logprob: -18.75006866455078
    9. ')' → logprob: -19.25006866455078
    10. '  ' → logprob: -19.37506866455078

Token 575: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.062175724655389786
    2. 'in' → logprob: -2.812175750732422
    3. 'range' → logprob: -9.187175750732422
    4. ')' → logprob: -10.062175750732422
    5. 'i' → logprob: -10.937175750732422
    6. ' range' → logprob: -11.062175750732422
    7. ' ' → logprob: -11.312175750732422
    8. ' i' → logprob: -11.562175750732422
    9. ',' → logprob: -13.062175750732422
    10. '   ' → logprob: -13.562175750732422

Token 576: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '
' → logprob: -21.12502670288086
    4. ' ' → logprob: -21.75002670288086
    5. '(range' → logprob: -22.12502670288086
    6. '	range' → logprob: -22.12502670288086
    7. '0' → logprob: -22.87502670288086
    8. '   ' → logprob: -23.12502670288086
    9. 'r' → logprob: -23.50002670288086
    10. '4' → logprob: -23.62502670288086

Token 577: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.723352049040841e-06
    2. 'len' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.250004768371582
    4. '   ' → logprob: -14.875004768371582
    5. '(' → logprob: -17.125003814697266
    6. ' len' → logprob: -19.125003814697266
    7. ')' → logprob: -19.250003814697266
    8. '  ' → logprob: -19.625003814697266
    9. '(len' → logprob: -19.750003814697266
    10. '
' → logprob: -20.125003814697266

Token 578: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -15.125
    3. ' ' → logprob: -15.625
    4. ')' → logprob: -20.125
    5. '   ' → logprob: -21.375
    6. '```' → logprob: -21.625
    7. 'def' → logprob: -21.875
    8. ' len' → logprob: -22.0
    9. '  ' → logprob: -22.875
    10. '
' → logprob: -23.0

Token 579: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021650521084666252
    2. ')
' → logprob: -3.896650552749634
    3. '))' → logprob: -7.021650314331055
    4. '))
' → logprob: -9.271650314331055
    5. ' )' → logprob: -9.396650314331055
    6. ' )
' → logprob: -11.271650314331055
    7. '   ' → logprob: -11.896650314331055
    8. ')
' → logprob: -12.146650314331055
    9. ')+' → logprob: -12.271650314331055
    10. ')

' → logprob: -13.146650314331055

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072684441693127155
    2. ' if' → logprob: -5.50726842880249
    3. ' return' → logprob: -7.13226842880249
    4. 'def' → logprob: -7.63226842880249
    5. 'return' → logprob: -7.88226842880249
    6. '```' → logprob: -8.007268905639648
    7. 'lb' → logprob: -8.007268905639648
    8. 'if' → logprob: -8.132268905639648
    9. ' lb' → logprob: -9.132268905639648
    10. 'b' → logprob: -9.382268905639648

Token 581: ' lb' (ID: 32474)
  Prédit: 'lb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lb' (adapté à ' lb') → logprob: -0.014714455232024193
    2. ' lb' → logprob: -4.264714241027832
    3. '   ' → logprob: -7.514714241027832
    4. 'll' → logprob: -13.264714241027832
    5. '(lb' → logprob: -13.514714241027832
    6. '_lb' → logprob: -13.889714241027832
    7. ' ' → logprob: -14.764714241027832
    8. 'log' → logprob: -14.889714241027832
    9. 'lab' → logprob: -15.014714241027832
    10. 'Lb' → logprob: -15.264714241027832

Token 582: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575945258140564
    2. ' =' → logprob: -0.825945258140564
    3. '   ' → logprob: -12.950944900512695
    4. ' ' → logprob: -13.700944900512695
    5. ')' → logprob: -13.825944900512695
    6. '=
' → logprob: -15.200944900512695
    7. '  ' → logprob: -15.325944900512695
    8. '>' → logprob: -16.325944900512695
    9. ' =
' → logprob: -16.325944900512695
    10. '=sum' → logprob: -16.450944900512695

Token 583: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3868725001811981
    2. ' sum' → logprob: -1.1368725299835205
    3. 'b' → logprob: -14.886872291564941
    4. '   ' → logprob: -14.886872291564941
    5. '(sum' → logprob: -14.886872291564941
    6. ' ' → logprob: -15.136872291564941
    7. '=sum' → logprob: -16.261873245239258
    8. '	sum' → logprob: -17.636873245239258
    9. '
' → logprob: -17.886873245239258
    10. '    ' → logprob: -18.136873245239258

Token 584: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0025354712270200253
    2. 'b' → logprob: -6.002535343170166
    3. '(a' → logprob: -10.502535820007324
    4. ' (' → logprob: -11.752535820007324
    5. '   ' → logprob: -11.877535820007324
    6. 'a' → logprob: -12.252535820007324
    7. ' b' → logprob: -12.502535820007324
    8. '(' → logprob: -12.627535820007324
    9. '[b' → logprob: -12.877535820007324
    10. '([' → logprob: -14.127535820007324

Token 585: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.456358823925257e-05
    2. 'i' → logprob: -10.375064849853516
    3. '(i' → logprob: -10.375064849853516
    4. '[' → logprob: -13.875064849853516
    5. '[j' → logprob: -14.625064849853516
    6. '```' → logprob: -15.000064849853516
    7. ',i' → logprob: -16.125064849853516
    8. ' [' → logprob: -16.750064849853516
    9. '_i' → logprob: -17.375064849853516
    10. '][' → logprob: -17.375064849853516

Token 586: ']*' (ID: 18579)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0025143080856651068
    2. ']*' → logprob: -6.127514362335205
    3. '*' → logprob: -9.127513885498047
    4. '*i' → logprob: -9.627513885498047
    5. '```' → logprob: -10.502513885498047
    6. ']' → logprob: -10.502513885498047
    7. '*[' → logprob: -10.627513885498047
    8. '[' → logprob: -10.752513885498047
    9. '][' → logprob: -11.127513885498047
    10. 'i' → logprob: -11.252513885498047

Token 587: 'log' (ID: 2133)
  Prédit: 'log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.750001907348633
    3. 'pr' → logprob: -14.750001907348633
    4. '4' → logprob: -14.875001907348633
    5. ' log' → logprob: -15.125001907348633
    6. 'i' → logprob: -15.625001907348633
    7. '[i' → logprob: -16.250001907348633
    8. '(log' → logprob: -17.500001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '
' → logprob: -19.375001907348633

Token 588: '_pr' (ID: 18177)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5654149651527405
    2. '_pr' → logprob: -1.6904149055480957
    3. 'pr' → logprob: -2.5654149055480957
    4. '(i' → logprob: -2.6904149055480957
    5. 'i' → logprob: -2.8154149055480957
    6. '[' → logprob: -3.4404149055480957
    7. '_i' → logprob: -5.440414905548096
    8. 'range' → logprob: -7.065414905548096
    9. '(pr' → logprob: -7.440414905548096
    10. 'b' → logprob: -7.565414905548096

Token 589: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00186307227704674
    2. '[' → logprob: -8.001863479614258
    3. 'i' → logprob: -8.751863479614258
    4. 'mes' → logprob: -8.876863479614258
    5. '_' → logprob: -9.126863479614258
    6. 'ines' → logprob: -9.251863479614258
    7. '
' → logprob: -9.251863479614258
    8. '   ' → logprob: -9.501863479614258
    9. '[i' → logprob: -9.876863479614258
    10. '```' → logprob: -10.001863479614258

Token 590: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '(i' → logprob: -14.00000286102295
    3. '[' → logprob: -14.12500286102295
    4. '```' → logprob: -14.75000286102295
    5. 'i' → logprob: -15.75000286102295
    6. '[j' → logprob: -16.500001907348633
    7. 'for' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.000001907348633
    9. '[
' → logprob: -18.125001907348633
    10. 'import' → logprob: -18.250001907348633

Token 591: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04127627983689308
    2. ']' → logprob: -3.291276216506958
    3. 'for' → logprob: -6.166276454925537
    4. ')' → logprob: -7.416276454925537
    5. ' for' → logprob: -8.791275978088379
    6. '(i' → logprob: -9.166275978088379
    7. '   ' → logprob: -9.166275978088379
    8. '[' → logprob: -9.916275978088379
    9. 'i' → logprob: -10.041275978088379
    10. '])' → logprob: -10.041275978088379

Token 592: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6102725863456726
    2. ' for' → logprob: -1.3602726459503174
    3. '[i' → logprob: -1.6102726459503174
    4. '[' → logprob: -8.610272407531738
    5. ')' → logprob: -8.985272407531738
    6. '   ' → logprob: -10.860272407531738
    7. '```' → logprob: -11.735272407531738
    8. '	for' → logprob: -11.860272407531738
    9. '(i' → logprob: -11.985272407531738
    10. '[j' → logprob: -12.485272407531738

Token 593: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0839715301990509
    2. 'i' → logprob: -2.8339715003967285
    3. ' range' → logprob: -3.8339715003967285
    4. ' i' → logprob: -9.208971977233887
    5. '   ' → logprob: -10.958971977233887
    6. '[i' → logprob: -12.083971977233887
    7. '[' → logprob: -12.208971977233887
    8. '(i' → logprob: -12.583971977233887
    9. '(range' → logprob: -12.708971977233887
    10. ' ' → logprob: -12.833971977233887

Token 594: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021422896534204483
    2. 'range' → logprob: -6.627142429351807
    3. 'in' → logprob: -7.252142429351807
    4. ' range' → logprob: -10.377141952514648
    5. '4' → logprob: -10.627141952514648
    6. '
' → logprob: -10.877141952514648
    7. '(' → logprob: -11.002141952514648
    8. '(range' → logprob: -12.002141952514648
    9. ',' → logprob: -12.377141952514648
    10. ' ' → logprob: -13.877141952514648

Token 595: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12704287469387054
    2. '4' → logprob: -2.127042770385742
    3. ' range' → logprob: -9.127042770385742
    4. '(range' → logprob: -12.502042770385742
    5. '(' → logprob: -13.752042770385742
    6. '
' → logprob: -14.002042770385742
    7. '   ' → logprob: -16.002042770385742
    8. ' ' → logprob: -16.127042770385742
    9. '[' → logprob: -16.627042770385742
    10. 'Range' → logprob: -17.627042770385742

Token 596: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0009315869538113475
    2. '(' → logprob: -7.000931739807129
    3. 'range' → logprob: -11.250931739807129
    4. '
' → logprob: -13.125931739807129
    5. '```' → logprob: -13.500931739807129
    6. '   ' → logprob: -13.625931739807129
    7. ' ' → logprob: -14.250931739807129
    8. '1' → logprob: -15.000931739807129
    9. '           ' → logprob: -15.375931739807129
    10. '[' → logprob: -15.875931739807129

Token 597: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.7697225252486533e-06
    2. 'range' → logprob: -13.125003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '
' → logprob: -14.500003814697266
    5. '   ' → logprob: -15.250003814697266
    6. '```' → logprob: -16.375003814697266
    7. '(' → logprob: -16.937503814697266
    8. ')' → logprob: -17.000003814697266
    9. 'len' → logprob: -17.062503814697266
    10. ' range' → logprob: -17.812503814697266

Token 598: '))
' (ID: 2210)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.047232307493686676
    2. ')' → logprob: -3.1722323894500732
    3. '])
' → logprob: -6.297232151031494
    4. ')])' → logprob: -6.672232151031494
    5. ')]' → logprob: -7.297232151031494
    6. '))' → logprob: -8.297232627868652
    7. ')
' → logprob: -8.922232627868652
    8. ']' → logprob: -11.422232627868652
    9. '   ' → logprob: -11.672232627868652
    10. ']))' → logprob: -12.172232627868652

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012159519828855991
    2. ' return' → logprob: -7.376215934753418
    3. 'return' → logprob: -7.626215934753418
    4. ' if' → logprob: -10.251215934753418
    5. '```' → logprob: -10.626215934753418
    6. '
' → logprob: -10.751215934753418
    7. 'if' → logprob: -12.001215934753418
    8. '    
' → logprob: -12.501215934753418
    9. '	return' → logprob: -12.626215934753418
    10. ')' → logprob: -12.876215934753418

Token 600: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04184314236044884
    2. 'return' (adapté à ' return') → logprob: -3.2918431758880615
    3. ' return' → logprob: -5.666842937469482
    4. 'if' → logprob: -8.29184341430664
    5. ' if' → logprob: -9.54184341430664
    6. '	return' → logprob: -11.79184341430664
    7. '
' → logprob: -13.04184341430664
    8. '```' → logprob: -14.29184341430664
    9. '    
' → logprob: -14.41684341430664
    10. '  ' → logprob: -14.79184341430664

Token 601: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0019311357755213976
    2. ' la' → logprob: -6.251931190490723
    3. '(' → logprob: -13.376931190490723
    4. '_la' → logprob: -14.126931190490723
    5. ' ' → logprob: -16.501930236816406
    6. 'La' → logprob: -16.626930236816406
    7. '-la' → logprob: -17.001930236816406
    8. ' (' → logprob: -17.126930236816406
    9. '.la' → logprob: -17.251930236816406
    10. '/la' → logprob: -18.126930236816406

Token 602: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20141714811325073
    2. '<' → logprob: -1.7014172077178955
    3. '<ll' → logprob: -14.076416969299316
    4. ' ' → logprob: -14.576416969299316
    5. '<int' → logprob: -15.076416969299316
    6. ' ' → logprob: -15.451416969299316
    7. ' <
' → logprob: -15.451416969299316
    8. '<class' → logprob: -15.451416969299316
    9. '[' → logprob: -15.701416969299316
    10. '<len' → logprob: -15.701416969299316

Token 603: ' lb' (ID: 32474)
  Prédit: 'lb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lb' → logprob: -9.615255839889869e-05
    2. ' lb' → logprob: -9.250096321105957
    3. '(lb' → logprob: -17.50009536743164
    4. '_lb' → logprob: -18.25009536743164
    5. 'lbs' → logprob: -21.37509536743164
    6. 'l' → logprob: -21.50009536743164
    7. '.lb' → logprob: -21.75009536743164
    8. 'rb' → logprob: -23.00009536743164
    9. 'lbl' → logprob: -23.25009536743164
    10. 'lab' → logprob: -23.37509536743164

Token 604: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.226529061794281
    2. 'def' → logprob: -1.7265291213989258
    3. 'from' → logprob: -3.976529121398926
    4. 'dp' → logprob: -6.351529121398926
    5. 'cache' → logprob: -6.601529121398926
    6. 'max' → logprob: -7.351529121398926
    7. '#' → logprob: -7.476529121398926
    8. 'memo' → logprob: -7.601529121398926
    9. 'n' → logprob: -8.351529121398926
    10. 'digits' → logprob: -8.726529121398926

Token 605: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0010762764140963554
    2. 'from' → logprob: -6.8760762214660645
    3. 'def' → logprob: -11.376076698303223
    4. 'dp' → logprob: -11.626076698303223
    5. '@n' → logprob: -11.876076698303223
    6. 'import' → logprob: -12.126076698303223
    7. '```' → logprob: -12.501076698303223
    8. 'cache' → logprob: -13.376076698303223
    9. 'max' → logprob: -13.501076698303223
    10. '@s' → logprob: -13.751076698303223

Token 606: ' Compute' (ID: 45438)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0789424479007721
    2. 'from' → logprob: -2.5789425373077393
    3. 'import' → logprob: -10.70394229888916
    4. 'dp' → logprob: -10.82894229888916
    5. 'memo' → logprob: -12.45394229888916
    6. 'cache' → logprob: -12.95394229888916
    7. 'sys' → logprob: -13.82894229888916
    8. 'def' → logprob: -14.45394229888916
    9. 'MOD' → logprob: -14.95394229888916
    10. ' @' → logprob: -14.95394229888916

Token 607: ' prod' (ID: 10207)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2057315707206726
    2. 'from' → logprob: -1.8307316303253174
    3. 'dp' → logprob: -3.7057316303253174
    4. 'max' → logprob: -8.455731391906738
    5. 'def' → logprob: -9.205731391906738
    6. 'factor' → logprob: -9.330731391906738
    7. 's' → logprob: -9.455731391906738
    8. 'cache' → logprob: -9.705731391906738
    9. '```' → logprob: -9.705731391906738
    10. '#' → logprob: -9.830731391906738

Token 608: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.2849498391151428
    2. '_f' → logprob: -1.784949779510498
    3. 's' → logprob: -3.284949779510498
    4. '_states' → logprob: -4.534949779510498
    5. '_cache' → logprob: -5.159949779510498
    6. '_factor' → logprob: -5.284949779510498
    7. '_dp' → logprob: -5.659949779510498
    8. 'f' → logprob: -5.784949779510498
    9. '_prod' → logprob: -5.784949779510498
    10. 'prod' → logprob: -6.159949779510498

Token 609: ' factors' (ID: 11652)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.30129751563072205
    2. '#' → logprob: -1.6762975454330444
    3. 'for' → logprob: -4.176297664642334
    4. '=' → logprob: -4.426297664642334
    5. '_s' → logprob: -4.551297664642334
    6. 'f' → logprob: -4.676297664642334
    7. '_f' → logprob: -5.301297664642334
    8. '_prod' → logprob: -5.301297664642334
    9. 'def' → logprob: -5.926297664642334
    10. ' =' → logprob: -6.176297664642334

Token 610: ':
' (ID: 734)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.011055245995521545
    2. '=' → logprob: -4.8860554695129395
    3. '_prod' → logprob: -7.0110554695129395
    4. '_s' → logprob: -7.1360554695129395
    5. 's' → logprob: -7.2610554695129395
    6. ' =' → logprob: -7.6360554695129395
    7. 'def' → logprob: -9.136054992675781
    8. 'from' → logprob: -9.636054992675781
    9. 'factor' → logprob: -10.011054992675781
    10. 'sum' → logprob: -10.011054992675781

Token 611: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.0002680112374946475
    2. 'from' → logprob: -8.62526798248291
    3. 'def' → logprob: -10.37526798248291
    4. 'factor' → logprob: -11.00026798248291
    5. 'total' → logprob: -11.50026798248291
    6. 'fact' → logprob: -12.00026798248291
    7. 'product' → logprob: -12.00026798248291
    8. '```' → logprob: -12.12526798248291
    9. 'f' → logprob: -13.00026798248291
    10. 'sum' → logprob: -13.12526798248291

Token 612: '_s' (ID: 1278)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.5761452913284302
    2. '_s' → logprob: -0.8261452913284302
    3. 'f' → logprob: -9.20114517211914
    4. 's' → logprob: -9.95114517211914
    5. '=' → logprob: -10.45114517211914
    6. '_factor' → logprob: -11.32614517211914
    7. '_prod' → logprob: -12.57614517211914
    8. '```' → logprob: -12.70114517211914
    9. '_fact' → logprob: -13.20114517211914
    10. 'prod' → logprob: -13.57614517211914

Token 613: '_factor' (ID: 43757)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.2808241546154022
    2. '=' → logprob: -1.6558241844177246
    3. ' =' → logprob: -3.2808241844177246
    4. 'f' → logprob: -4.655824184417725
    5. '_factor' → logprob: -5.155824184417725
    6. '_fact' → logprob: -7.780824184417725
    7. 'factor' → logprob: -8.280823707580566
    8. 'fact' → logprob: -9.280823707580566
    9. '=f' → logprob: -9.905823707580566
    10. 'prod' → logprob: -10.155823707580566

Token 614: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7025935649871826
    2. 's' → logprob: -0.7025935649871826
    3. '_s' → logprob: -5.327593803405762
    4. ' =' → logprob: -5.452593803405762
    5. '=sum' → logprob: -9.327593803405762
    6. '=s' → logprob: -9.702593803405762
    7. '=f' → logprob: -10.452593803405762
    8. '_f' → logprob: -10.827593803405762
    9. '=_' → logprob: -10.952593803405762
    10. 'f' → logprob: -11.577593803405762

Token 615: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06674077361822128
    2. 'prime' → logprob: -2.8167407512664795
    3. 'tuple' → logprob: -5.691740989685059
    4. '[' → logprob: -7.691740989685059
    5. '(pr' → logprob: -7.941740989685059
    6. 'prod' → logprob: -8.066740989685059
    7. 'add' → logprob: -9.566740989685059
    8. ' (' → logprob: -9.691740989685059
    9. '(prod' → logprob: -9.941740989685059
    10. '(tuple' → logprob: -10.441740989685059

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -17.5
    3. ')' → logprob: -18.75
    4. 'sum' → logprob: -19.75
    5. '[' → logprob: -19.875
    6. '
' → logprob: -20.125
    7. ' ' → logprob: -20.375
    8. 'tuple' → logprob: -20.875
    9. '۰' → logprob: -21.0
    10. ')
' → logprob: -21.0

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02499348297715187
    2. '0' → logprob: -4.399993419647217
    3. '
' → logprob: -4.899993419647217
    4. '+' → logprob: -6.399993419647217
    5. ',)' → logprob: -6.774993419647217
    6. ')' → logprob: -7.524993419647217
    7. ',
' → logprob: -7.649993419647217
    8. '4' → logprob: -8.149993896484375
    9. 'for' → logprob: -8.649993896484375
    10. '[' → logprob: -9.024993896484375

Token 618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12306759506464005
    2. 'sum' → logprob: -2.248067617416382
    3. ')' → logprob: -5.123067378997803
    4. 'prod' → logprob: -6.123067378997803
    5. 'n' → logprob: -6.998067378997803
    6. ' sum' → logprob: -8.623067855834961
    7. 'digits' → logprob: -8.623067855834961
    8. '9' → logprob: -9.123067855834961
    9. '
' → logprob: -9.748067855834961
    10. ')
' → logprob: -9.873067855834961

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022206762805581093
    2. '0' → logprob: -6.127220630645752
    3. ' ,' → logprob: -10.25222110748291
    4. '4' → logprob: -16.377220153808594
    5. ' ' → logprob: -16.627220153808594
    6. ',
' → logprob: -17.377220153808594
    7. '```' → logprob: -18.127220153808594
    8. '3' → logprob: -18.127220153808594
    9. '   ' → logprob: -18.377220153808594
    10. ')' → logprob: -18.502220153808594

Token 620: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026336227892898023
    2. '1' → logprob: -9.875263214111328
    3. ' ' → logprob: -10.000263214111328
    4. 'prod' → logprob: -10.125263214111328
    5. '3' → logprob: -10.875263214111328
    6. '4' → logprob: -10.875263214111328
    7. '2' → logprob: -10.875263214111328
    8. '5' → logprob: -11.125263214111328
    9. 'sum' → logprob: -11.500263214111328
    10. '7' → logprob: -11.750263214111328

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017421995289623737
    2. '0' → logprob: -8.750174522399902
    3. ' ,' → logprob: -11.125174522399902
    4. '1' → logprob: -14.875174522399902
    5. '4' → logprob: -15.375174522399902
    6. ',
' → logprob: -16.250173568725586
    7. ')' → logprob: -16.875173568725586
    8. '3' → logprob: -16.875173568725586
    9. '7' → logprob: -16.875173568725586
    10. '   ' → logprob: -17.000173568725586

Token 622: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.668304245569743e-05
    2. '1' → logprob: -10.500046730041504
    3. ' ' → logprob: -12.375046730041504
    4. '4' → logprob: -12.500046730041504
    5. '3' → logprob: -12.875046730041504
    6. '2' → logprob: -12.875046730041504
    7. ')' → logprob: -13.000046730041504
    8. '7' → logprob: -14.250046730041504
    9. '5' → logprob: -14.500046730041504
    10. 'sum' → logprob: -14.812546730041504

Token 623: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.048605985939502716
    2. ')' → logprob: -3.0486059188842773
    3. ')
' → logprob: -11.423605918884277
    4. ')

' → logprob: -12.048605918884277
    5. ' )
' → logprob: -14.298605918884277
    6. ')#' → logprob: -14.798605918884277
    7. 'for' → logprob: -15.048605918884277
    8. ' )' → logprob: -16.798606872558594
    9. ')`
' → logprob: -16.798606872558594
    10. ');
' → logprob: -17.048606872558594

Token 624: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.65707261255011e-06
    2. ' for' → logprob: -11.750008583068848
    3. 'prod' → logprob: -14.375008583068848
    4. 'from' → logprob: -16.125009536743164
    5. '```' → logprob: -19.000009536743164
    6. 'import' → logprob: -19.125009536743164
    7. ')' → logprob: -19.500009536743164
    8. 'idx' → logprob: -20.125009536743164
    9. '
' → logprob: -20.250009536743164
    10. 'product' → logprob: -20.750009536743164

Token 625: ' d' (ID: 272)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12811389565467834
    2. 'pf' → logprob: -2.1281139850616455
    3. 'd' → logprob: -8.128113746643066
    4. 'i' → logprob: -8.503113746643066
    5. ' pf' → logprob: -8.503113746643066
    6. 'fac' → logprob: -8.628113746643066
    7. ' f' → logprob: -8.878113746643066
    8. 'factor' → logprob: -9.378113746643066
    9. 'af' → logprob: -11.003113746643066
    10. 'ff' → logprob: -11.128113746643066

Token 626: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4314042627811432
    2. ' in' → logprob: -1.0564042329788208
    3. '_factor' → logprob: -6.431404113769531
    4. 'f' → logprob: -7.431404113769531
    5. 'factor' → logprob: -8.431404113769531
    6. '_f' → logprob: -9.181404113769531
    7. ',' → logprob: -9.931404113769531
    8. '_in' → logprob: -9.931404113769531
    9. 'd' → logprob: -10.181404113769531
    10. ',f' → logprob: -11.556404113769531

Token 627: ' digits' (ID: 37806)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.31464850902557373
    2. 'digits' → logprob: -1.3146485090255737
    3. ' digits' → logprob: -7.314648628234863
    4. ' prod' → logprob: -8.064648628234863
    5. 'prime' → logprob: -8.439648628234863
    6. 'range' → logprob: -9.189648628234863
    7. 'pr' → logprob: -10.189648628234863
    8. 'dig' → logprob: -11.439648628234863
    9. '(prod' → logprob: -11.439648628234863
    10. 'product' → logprob: -11.814648628234863

Token 628: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3143838942050934
    2. ':' → logprob: -1.314383864402771
    3. '   ' → logprob: -7.3143839836120605
    4. ',' → logprob: -9.064383506774902
    5. '[' → logprob: -9.189383506774902
    6. ' in' → logprob: -9.689383506774902
    7. '=' → logprob: -9.939383506774902
    8. 'in' → logprob: -10.439383506774902
    9. '[i' → logprob: -10.689383506774902
    10. '[:-' → logprob: -11.064383506774902

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02101231925189495
    2. ' prod' → logprob: -3.896012306213379
    3. 'prod' → logprob: -7.771012306213379
    4. ' if' → logprob: -10.646012306213379
    5. '	pro' → logprob: -12.396012306213379
    6. ' ' → logprob: -12.521012306213379
    7. ' for' → logprob: -12.771012306213379
    8. '       ' → logprob: -12.771012306213379
    9. '    ' → logprob: -13.021012306213379
    10. ' product' → logprob: -13.271012306213379

Token 630: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' (adapté à ' prod') → logprob: -0.3933800756931305
    2. 'pf' → logprob: -1.143380045890808
    3. 'for' → logprob: -5.893380165100098
    4. 'f' → logprob: -6.643380165100098
    5. 'p' → logprob: -7.143380165100098
    6. 'temp' → logprob: -7.393380165100098
    7. 'tmp' → logprob: -8.143380165100098
    8. '   ' → logprob: -8.643380165100098
    9. 'if' → logprob: -9.018380165100098
    10. 'fact' → logprob: -9.268380165100098

Token 631: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0005307526444084942
    2. '_f' → logprob: -7.75053071975708
    3. 's' → logprob: -9.750531196594238
    4. '_factor' → logprob: -10.750531196594238
    5. '=' → logprob: -12.125531196594238
    6. ' =' → logprob: -12.625531196594238
    7. 'f' → logprob: -13.500531196594238
    8. '+' → logprob: -13.500531196594238
    9. '_d' → logprob: -13.625531196594238
    10. '_val' → logprob: -13.750531196594238

Token 632: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00040791230276227
    2. 'factor' → logprob: -8.500408172607422
    3. '_f' → logprob: -8.875408172607422
    4. '=' → logprob: -10.250408172607422
    5. '_s' → logprob: -11.375408172607422
    6. 'f' → logprob: -11.750408172607422
    7. '_fact' → logprob: -13.000408172607422
    8. 's' → logprob: -13.750408172607422
    9. '_fac' → logprob: -13.750408172607422
    10. '_product' → logprob: -13.875408172607422

Token 633: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016042228788137436
    2. ' =' → logprob: -4.141042232513428
    3. '+=' → logprob: -12.01604175567627
    4. 'prod' → logprob: -13.89104175567627
    5. ' +=' → logprob: -15.51604175567627
    6. '=int' → logprob: -16.391042709350586
    7. '=f' → logprob: -16.766042709350586
    8. '=d' → logprob: -17.016042709350586
    9. '=

' → logprob: -17.141042709350586
    10. '.=' → logprob: -17.516042709350586

Token 634: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0004307884373702109
    2. ' add' → logprob: -7.750430583953857
    3. 'tuple' → logprob: -17.625431060791016
    4. '(add' → logprob: -18.750431060791016
    5. '(' → logprob: -19.000431060791016
    6. '   ' → logprob: -19.875431060791016
    7. '	add' → logprob: -20.625431060791016
    8. 'prod' → logprob: -20.750431060791016
    9. ' ' → logprob: -21.375431060791016
    10. '_add' → logprob: -22.500431060791016

Token 635: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00012523093027994037
    2. 'f' → logprob: -9.00012493133545
    3. '_factor' → logprob: -14.37512493133545
    4. 'prod' → logprob: -14.75012493133545
    5. '```' → logprob: -15.50012493133545
    6. '(prod' → logprob: -16.500125885009766
    7. '(f' → logprob: -16.625125885009766
    8. 'factor' → logprob: -16.750125885009766
    9. 's' → logprob: -17.500125885009766
    10. '_fact' → logprob: -17.625125885009766

Token 636: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.708583652973175
    2. 'actors' → logprob: -0.708583652973175
    3. 'f' → logprob: -4.208583831787109
    4. 'actor' → logprob: -7.833583831787109
    5. 'Factors' → logprob: -10.95858383178711
    6. 'ctors' → logprob: -11.95858383178711
    7. 'act' → logprob: -11.95858383178711
    8. 'acters' → logprob: -11.95858383178711
    9. '_factor' → logprob: -12.70858383178711
    10. ' factors' → logprob: -12.70858383178711

Token 637: '(prod' (ID: 129733)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.6931679248809814
    2. '(prod' → logprob: -0.6931679248809814
    3. '(pro' → logprob: -11.318167686462402
    4. ' prod' → logprob: -12.068167686462402
    5. '(' → logprob: -13.568167686462402
    6. '.prod' → logprob: -13.943167686462402
    7. '(pr' → logprob: -15.193167686462402
    8. '_prod' → logprob: -15.693167686462402
    9. 'Prod' → logprob: -16.44316864013672
    10. '(product' → logprob: -16.56816864013672

Token 638: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.255707710981369
    2. '_f' → logprob: -1.5057077407836914
    3. 's' → logprob: -5.755707740783691
    4. 'f' → logprob: -7.630707740783691
    5. '_factor' → logprob: -9.380707740783691
    6. 'factor' → logprob: -11.255707740783691
    7. 'd' → logprob: -12.380707740783691
    8. 'Factors' → logprob: -12.755707740783691
    9. '```' → logprob: -13.130707740783691
    10. 'ectors' → logprob: -13.255707740783691

Token 639: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.016062874346971512
    2. 'factor' → logprob: -4.1410627365112305
    3. 'f' → logprob: -11.26606273651123
    4. '_f' → logprob: -11.89106273651123
    5. 's' → logprob: -12.76606273651123
    6. 'actor' → logprob: -13.14106273651123
    7. '-factor' → logprob: -14.26606273651123
    8. '(f' → logprob: -14.64106273651123
    9. ' factor' → logprob: -15.14106273651123
    10. 'Factor' → logprob: -15.14106273651123

Token 640: ',' (ID: 11)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.1697838455438614
    2. ',' → logprob: -1.9197838306427002
    3. ' prime' → logprob: -4.794784069061279
    4. '(pr' → logprob: -6.794784069061279
    5. 'pr' → logprob: -9.544783592224121
    6. ' ,' → logprob: -10.294783592224121
    7. '_prime' → logprob: -12.794783592224121
    8. 'prod' → logprob: -12.794783592224121
    9. 'prim' → logprob: -13.294783592224121
    10. ' (' → logprob: -13.294783592224121

Token 641: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -9.9728669738397e-05
    2. ' prime' → logprob: -9.625100135803223
    3. 'prod' → logprob: -10.375100135803223
    4. 'tuple' → logprob: -13.500100135803223
    5. '0' → logprob: -15.375100135803223
    6. 'product' → logprob: -15.625100135803223
    7. '(' → logprob: -15.625100135803223
    8. 'prim' → logprob: -15.875100135803223
    9. 'principal' → logprob: -16.000099182128906
    10. 'pr' → logprob: -16.625099182128906

Token 642: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.128163257315464e-07
    2. 'f' → logprob: -16.25
    3. 'Factors' → logprob: -16.5
    4. '_factor' → logprob: -16.875
    5. '```' → logprob: -19.125
    6. ' factors' → logprob: -19.625
    7. ')' → logprob: -20.875
    8. 'factor' → logprob: -21.125
    9. '\' → logprob: -21.5
    10. '_' → logprob: -22.75

Token 643: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.009973282925784588
    2. '_f' → logprob: -5.259973049163818
    3. 'f' → logprob: -5.384973049163818
    4. 'ctors' → logprob: -9.009973526000977
    5. 'actor' → logprob: -11.634973526000977
    6. 'Factors' → logprob: -12.759973526000977
    7. 'acters' → logprob: -12.884973526000977
    8. 'd' → logprob: -13.384973526000977
    9. 'act' → logprob: -13.634973526000977
    10. ' factors' → logprob: -14.509973526000977

Token 644: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.5213274309644476e-05
    2. 'd' → logprob: -11.125015258789062
    3. '((' → logprob: -15.250015258789062
    4. ' (' → logprob: -16.000015258789062
    5. '(' → logprob: -16.750015258789062
    6. '(
' → logprob: -18.875015258789062
    7. ')' → logprob: -18.875015258789062
    8. ')d' → logprob: -18.875015258789062
    9. ' d' → logprob: -19.000015258789062
    10. '[d' → logprob: -19.250015258789062

Token 645: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007584078120999038
    2. ' +' → logprob: -7.250758171081543
    3. '(d' → logprob: -11.125758171081543
    4. '()+' → logprob: -11.500758171081543
    5. ')+' → logprob: -11.750758171081543
    6. '(' → logprob: -11.875758171081543
    7. '   ' → logprob: -12.625758171081543
    8. 's' → logprob: -13.875758171081543
    9. '(+' → logprob: -13.875758171081543
    10. ')' → logprob: -14.250758171081543

Token 646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -15.12500286102295
    4. '0' → logprob: -16.375003814697266
    5. '+' → logprob: -17.500003814697266
    6. '```' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.250003814697266
    8. '(' → logprob: -18.687503814697266
    9. '))' → logprob: -19.875003814697266
    10. '=' → logprob: -20.187503814697266

Token 647: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408509254455566
    2. '))' → logprob: -0.9740850925445557
    3. ')))' → logprob: -12.224084854125977
    4. ')
' → logprob: -13.224084854125977
    5. '))
' → logprob: -14.224084854125977
    6. '   ' → logprob: -14.849084854125977
    7. ' )' → logprob: -16.349084854125977
    8. ' ))' → logprob: -16.724084854125977
    9. '))))' → logprob: -17.474084854125977
    10. ')`' → logprob: -17.599084854125977

Token 648: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.005524373147636652
    2. 'from' → logprob: -5.255524158477783
    3. 'cache' → logprob: -9.505524635314941
    4. 'dp' → logprob: -9.505524635314941
    5. 'import' → logprob: -10.130524635314941
    6. '```' → logprob: -10.505524635314941
    7. 'def' → logprob: -10.505524635314941
    8. 'memo' → logprob: -11.255524635314941
    9. '@n' → logprob: -11.755524635314941
    10. '#' → logprob: -12.255524635314941

Token 649: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -18.5
    3. 'dat' → logprob: -18.5
    4. 'cache' → logprob: -18.625
    5. '```' → logprob: -20.25
    6. '`' → logprob: -21.875
    7. 'staticmethod' → logprob: -22.125
    8. '@' → logprob: -22.625
    9. '
' → logprob: -23.375
    10. 'fun' → logprob: -23.5

Token 650: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.04986541345715523
    2. 'r' → logprob: -3.049865484237671
    3. '@' → logprob: -6.674865245819092
    4. '```' → logprob: -12.54986572265625
    5. 'def' → logprob: -12.79986572265625
    6. 'rl' → logprob: -12.92486572265625
    7. 'rc' → logprob: -13.29986572265625
    8. 'l' → logprob: -14.29986572265625
    9. 'RU' → logprob: -14.54986572265625
    10. 'rw' → logprob: -14.67486572265625

Token 651: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0003445216570980847
    2. '@' → logprob: -8.375344276428223
    3. 'cache' → logprob: -9.500344276428223
    4. '_cached' → logprob: -10.250344276428223
    5. 'cached' → logprob: -12.750344276428223
    6. 'Cache' → logprob: -15.250344276428223
    7. 'def' → logprob: -15.250344276428223
    8. '_CACHE' → logprob: -16.50034523010254
    9. '\' → logprob: -16.87534523010254
    10. '```' → logprob: -16.87534523010254

Token 652: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00026169343618676066
    2. '
' → logprob: -8.875261306762695
    3. '(None' → logprob: -9.125261306762695
    4. ' def' → logprob: -12.250261306762695
    5. 'None' → logprob: -12.250261306762695
    6. '(' → logprob: -13.250261306762695
    7. '(def' → logprob: -14.625261306762695
    8. '(max' → logprob: -15.500261306762695
    9. '(False' → logprob: -15.500261306762695
    10. 'ndef' → logprob: -15.875261306762695

Token 653: ')
' (ID: 446)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029469724744558334
    2. ')
' → logprob: -4.0294694900512695
    3. ')' → logprob: -4.5294694900512695
    4. '
' → logprob: -8.02946949005127
    5. '(' → logprob: -9.90446949005127
    6. ' def' → logprob: -10.27946949005127
    7. '(def' → logprob: -10.77946949005127
    8. '  
' → logprob: -11.65446949005127
    9. '    
' → logprob: -11.77946949005127
    10. '#' → logprob: -12.40446949005127

Token 654: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.36574100604048e-06
    2. ' def' → logprob: -13.000004768371582
    3. '
' → logprob: -13.125004768371582
    4. 'Def' → logprob: -18.125003814697266
    5. '<|end|>' → logprob: -18.375003814697266
    6. '  
' → logprob: -19.125003814697266
    7. '	def' → logprob: -19.125003814697266
    8. '0' → logprob: -19.375003814697266
    9. '    
' → logprob: -19.500003814697266
    10. '#' → logprob: -19.750003814697266

Token 655: ' dp' (ID: 21546)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7771131992340088
    2. 'dp' → logprob: -0.7771131992340088
    3. 'dfs' → logprob: -2.527113199234009
    4. 'solve' → logprob: -7.52711296081543
    5. 'go' → logprob: -9.90211296081543
    6. 'f' → logprob: -10.52711296081543
    7. 'digit' → logprob: -10.90211296081543
    8. 'search' → logprob: -12.40211296081543
    9. 'cnt' → logprob: -12.90211296081543
    10. 'calc' → logprob: -13.15211296081543

Token 656: '_sum' (ID: 29859)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.10460133850574493
    2. '(i' → logprob: -2.7296013832092285
    3. '(position' → logprob: -4.2296013832092285
    4. '(index' → logprob: -4.7296013832092285
    5. '(idx' → logprob: -5.3546013832092285
    6. 'pos' → logprob: -5.7296013832092285
    7. '(length' → logprob: -6.8546013832092285
    8. '(count' → logprob: -7.1046013832092285
    9. 'def' → logprob: -7.9796013832092285
    10. 'dp' → logprob: -8.85460090637207

Token 657: '_prod' (ID: 78031)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.08920357376337051
    2. '(i' → logprob: -3.3392035961151123
    3. '(length' → logprob: -4.464203357696533
    4. '(' → logprob: -4.464203357696533
    5. '(pos' → logprob: -4.464203357696533
    6. '(index' → logprob: -5.214203357696533
    7. '(idx' → logprob: -5.464203357696533
    8. '(n' → logprob: -5.964203357696533
    9. '(cnt' → logprob: -6.214203357696533
    10. '(len' → logprob: -8.089203834533691

Token 658: '(pos' (ID: 24566)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.09560500085353851
    2. '(length' → logprob: -2.47060489654541
    3. '(i' → logprob: -5.97060489654541
    4. '(pos' → logprob: -6.34560489654541
    5. '(position' → logprob: -7.34560489654541
    6. '(depth' → logprob: -7.72060489654541
    7. '(len' → logprob: -8.22060489654541
    8. '(n' → logprob: -8.59560489654541
    9. '(state' → logprob: -8.72060489654541
    10. '(index' → logprob: -8.97060489654541

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007995037594810128
    2. ',pos' → logprob: -7.750799655914307
    3. ',count' → logprob: -8.375799179077148
    4. ' ,' → logprob: -10.125799179077148
    5. ',state' → logprob: -10.750799179077148
    6. ',num' → logprob: -10.750799179077148
    7. ',length' → logprob: -11.125799179077148
    8. ',d' → logprob: -11.625799179077148
    9. ',int' → logprob: -12.125799179077148
    10. ',len' → logprob: -12.500799179077148

Token 660: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.037799201905727386
    2. 'curr' → logprob: -3.537799119949341
    3. 'current' → logprob: -5.16279935836792
    4. 'cur' → logprob: -6.41279935836792
    5. 'sm' → logprob: -7.91279935836792
    6. 'less' → logprob: -9.787798881530762
    7. 'is' → logprob: -10.037798881530762
    8. 'acc' → logprob: -10.162798881530762
    9. 's' → logprob: -10.412798881530762
    10. 'total' → logprob: -10.412798881530762

Token 661: 'd' (ID: 67)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05861658975481987
    2. '_,' → logprob: -3.0586166381835938
    3. '_f' → logprob: -5.683616638183594
    4. '_digits' → logprob: -5.683616638183594
    5. ',f' → logprob: -7.183616638183594
    6. ',pos' → logprob: -7.433616638183594
    7. ',d' → logprob: -8.058616638183594
    8. ',current' → logprob: -8.308616638183594
    9. 'f' → logprob: -8.433616638183594
    10. ' ,' → logprob: -8.558616638183594

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022845028433948755
    2. 'igits' → logprob: -9.125228881835938
    3. ',pos' → logprob: -10.000228881835938
    4. 's' → logprob: -10.500228881835938
    5. '_,' → logprob: -11.250228881835938
    6. ' ,' → logprob: -11.500228881835938
    7. ',s' → logprob: -12.875228881835938
    8. ',_' → logprob: -13.125228881835938
    9. ',count' → logprob: -13.125228881835938
    10. 'ig' → logprob: -13.250228881835938

Token 663: ' pro' (ID: 440)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.00992713961750269
    2. 'factor' → logprob: -5.384927272796631
    3. 'pf' → logprob: -5.759927272796631
    4. 'f' → logprob: -7.134927272796631
    5. 'fact' → logprob: -7.134927272796631
    6. ' prod' → logprob: -8.634926795959473
    7. 'pro' → logprob: -9.509926795959473
    8. 'product' → logprob: -9.634926795959473
    9. 'p' → logprob: -10.134926795959473
    10. 'max' → logprob: -10.509926795959473

Token 664: 'df' (ID: 4750)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00943009927868843
    2. 'df' → logprob: -4.884429931640625
    3. 'f' → logprob: -6.634429931640625
    4. 'ds' → logprob: -8.009429931640625
    5. 'duct' → logprob: -9.134429931640625
    6. 'dp' → logprob: -10.884429931640625
    7. '_factor' → logprob: -11.634429931640625
    8. 'factor' → logprob: -11.884429931640625
    9. 'du' → logprob: -12.134429931640625
    10. 'dt' → logprob: -12.634429931640625

Token 665: '):
' (ID: 1883)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -1.3195265531539917
    2. 'actor' → logprob: -1.3195265531539917
    3. 'ac' → logprob: -1.5695265531539917
    4. 'actors' → logprob: -1.5695265531539917
    5. ',' → logprob: -3.1945266723632812
    6. '_factor' → logprob: -6.444526672363281
    7. 'acs' → logprob: -6.694526672363281
    8. 'or' → logprob: -6.819526672363281
    9. 'a' → logprob: -7.319526672363281
    10. 'acts' → logprob: -7.944526672363281

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17966662347316742
    2. ' if' → logprob: -2.054666519165039
    3. 'if' → logprob: -4.304666519165039
    4. ':' → logprob: -4.554666519165039
    5. ',' → logprob: -4.679666519165039
    6. '```' → logprob: -7.054666519165039
    7. 's' → logprob: -7.554666519165039
    8. ' for' → logprob: -7.929666519165039
    9. '	if' → logprob: -8.804666519165039
    10. 'for' → logprob: -9.179666519165039

Token 667: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09055018424987793
    2. ' if' → logprob: -2.590550184249878
    3. '   ' → logprob: -4.465550422668457
    4. '	if' → logprob: -9.340550422668457
    5. '    
' → logprob: -12.590550422668457
    6. 'If' → logprob: -14.340550422668457
    7. '    ' → logprob: -14.840550422668457
    8. 'token' → logprob: -14.840550422668457
    9. ' ' → logprob: -14.965550422668457
    10. 'tokens' → logprob: -15.215550422668457

Token 668: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2595761716365814
    2. ' if' → logprob: -1.5095762014389038
    3. '   ' → logprob: -4.884576320648193
    4. '	if' → logprob: -10.009575843811035
    5. 'If' → logprob: -11.759575843811035
    6. '```' → logprob: -14.134575843811035
    7. ' ' → logprob: -14.259575843811035
    8. '    ' → logprob: -15.134575843811035
    9. '<|end|>' → logprob: -15.384575843811035
    10. '#' → logprob: -16.38457679748535

Token 669: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00465831533074379
    2. 'dp' → logprob: -6.504658222198486
    3. ' ' → logprob: -6.629658222198486
    4. 'int' → logprob: -7.129658222198486
    5. 'pos' → logprob: -8.004658699035645
    6. 'sum' → logprob: -8.879658699035645
    7. '(' → logprob: -9.004658699035645
    8. '[' → logprob: -9.254658699035645
    9. '[int' → logprob: -9.504658699035645
    10. '(pos' → logprob: -9.879658699035645

Token 670: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.28853121399879456
    2. 'of' → logprob: -1.7885311841964722
    3. ')' → logprob: -4.038531303405762
    4. '(' → logprob: -4.163531303405762
    5. '<|end|>' → logprob: -4.663531303405762
    6. '=' → logprob: -4.788531303405762
    7. ' ' → logprob: -5.163531303405762
    8. '_of' → logprob: -5.288531303405762
    9. '(
' → logprob: -5.663531303405762
    10. '(s' → logprob: -6.038531303405762

Token 671: ' sequences' (ID: 45665)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.21865682303905487
    2. 'digits' → logprob: -2.5936567783355713
    3. ' sequences' → logprob: -2.7186567783355713
    4. 'pos' → logprob: -3.5936567783355713
    5. 'int' → logprob: -4.96865701675415
    6. 'ways' → logprob: -4.96865701675415
    7. 'poss' → logprob: -6.21865701675415
    8. 'possible' → logprob: -6.21865701675415
    9. '0' → logprob: -6.46865701675415
    10. 'valid' → logprob: -6.46865701675415

Token 672: ' of' (ID: 328)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4770588278770447
    2. '   ' → logprob: -1.4770588874816895
    3. 'if' → logprob: -2.2270588874816895
    4. ' =' → logprob: -4.1020588874816895
    5. ',' → logprob: -4.8520588874816895
    6. '=' → logprob: -4.9770588874816895
    7. 'def' → logprob: -6.3520588874816895
    8. ' that' → logprob: -6.7270588874816895
    9. '(pos' → logprob: -6.9770588874816895
    10. 'from' → logprob: -6.9770588874816895

Token 673: ' length' (ID: 5517)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.18573884665966034
    2. 'length' → logprob: -1.8107388019561768
    3. '(pos' → logprob: -5.935739040374756
    4. 'n' → logprob: -6.310739040374756
    5. '[pos' → logprob: -7.560739040374756
    6. 'digits' → logprob: -7.685739040374756
    7. ' pos' → logprob: -8.810738563537598
    8. 'positions' → logprob: -9.560738563537598
    9. 'range' → logprob: -9.935738563537598
    10. 'nt' → logprob: -10.185738563537598

Token 674: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.28461891412734985
    2. 'n' → logprob: -1.409618854522705
    3. '(pos' → logprob: -6.784618854522705
    4. '=' → logprob: -6.909618854522705
    5. ' pos' → logprob: -7.784618854522705
    6. '[pos' → logprob: -8.409619331359863
    7. ',' → logprob: -8.534619331359863
    8. ' n' → logprob: -8.909619331359863
    9. 's' → logprob: -9.284619331359863
    10. '```' → logprob: -9.659619331359863

Token 675: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1147855669260025
    2. '   ' → logprob: -2.739785671234131
    3. '<|end|>' → logprob: -3.989785671234131
    4. ':' → logprob: -4.239785671234131
    5. ')' → logprob: -5.864785671234131
    6. '):' → logprob: -6.489785671234131
    7. '{' → logprob: -6.614785671234131
    8. ' that' → logprob: -6.739785671234131
    9. '[' → logprob: -6.864785671234131
    10. '(' → logprob: -7.489785671234131

Token 676: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.020589184015989304
    2. 'given' → logprob: -4.895589351654053
    3. 'exact' → logprob: -5.645589351654053
    4. 'current' → logprob: -6.145589351654053
    5. 'digits' → logprob: -6.145589351654053
    6. 'total' → logprob: -7.020589351654053
    7. 'specific' → logprob: -7.270589351654053
    8. ' sum' → logprob: -7.645589351654053
    9. 'certain' → logprob: -7.645589351654053
    10. '
' → logprob: -8.020588874816895

Token 677: ' sum' (ID: 4215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.00191330909729
    2. 'd' → logprob: -1.12691330909729
    3. 'pro' → logprob: -2.00191330909729
    4. '=' → logprob: -3.25191330909729
    5. 'def' → logprob: -3.25191330909729
    6. 'prod' → logprob: -3.50191330909729
    7. 'and' → logprob: -3.62691330909729
    8. '   ' → logprob: -4.501913070678711
    9. '(pro' → logprob: -5.376913070678711
    10. 'pos' → logprob: -5.876913070678711

Token 678: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005096645909361541
    2. ',' → logprob: -9.000509262084961
    3. '_d' → logprob: -9.000509262084961
    4. '   ' → logprob: -9.250509262084961
    5. 'digits' → logprob: -10.250509262084961
    6. '=' → logprob: -10.500509262084961
    7. '```' → logprob: -11.000509262084961
    8. '
' → logprob: -11.000509262084961
    9. '_,' → logprob: -11.750509262084961
    10. ' ' → logprob: -11.875509262084961

Token 679: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10307960212230682
    2. '   ' → logprob: -2.3530795574188232
    3. ' and' → logprob: -6.603079795837402
    4. 'and' → logprob: -7.603079795837402
    5. ':' → logprob: -8.353079795837402
    6. 'def' → logprob: -8.478079795837402
    7. ' ,' → logprob: -8.728079795837402
    8. ' that' → logprob: -8.728079795837402
    9. ')' → logprob: -10.103079795837402
    10. '```' → logprob: -10.228079795837402

Token 680: ' prod' (ID: 10207)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.4062236249446869
    2. 'prod' → logprob: -1.1562236547470093
    3. ' prod' → logprob: -5.406223773956299
    4. 'product' → logprob: -5.531223773956299
    5. ' pro' → logprob: -6.031223773956299
    6. 'factor' → logprob: -6.281223773956299
    7. 'max' → logprob: -6.406223773956299
    8. 'def' → logprob: -6.906223773956299
    9. 'f' → logprob: -7.031223773956299
    10. 'digits' → logprob: -7.406223773956299

Token 681: ' factors' (ID: 11652)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.19078995287418365
    2. 'prod' → logprob: -2.5657899379730225
    3. 'pos' → logprob: -3.0657899379730225
    4. 'def' → logprob: -3.8157899379730225
    5. '=' → logprob: -5.065790176391602
    6. '   ' → logprob: -5.315790176391602
    7. '(pro' → logprob: -5.690790176391602
    8. 'factor' → logprob: -5.690790176391602
    9. '_pro' → logprob: -5.815790176391602
    10. '(pos' → logprob: -7.065790176391602

Token 682: ' pro' (ID: 440)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1007696390151978
    2. '=' → logprob: -1.7257696390151978
    3. '):' → logprob: -1.8507696390151978
    4. ':' → logprob: -1.8507696390151978
    5. '):
' → logprob: -3.350769519805908
    6. 'if' → logprob: -3.850769519805908
    7. '=None' → logprob: -3.975769519805908
    8. '(' → logprob: -4.225769519805908
    9. ',' → logprob: -4.475769519805908
    10. '.' → logprob: -4.475769519805908

Token 683: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.010429601185023785
    2. 'd' → logprob: -4.760429382324219
    3. 'f' → logprob: -6.385429382324219
    4. 'factor' → logprob: -9.885429382324219
    5. 'dfs' → logprob: -10.260429382324219
    6. 'cf' → logprob: -11.010429382324219
    7. 'def' → logprob: -12.385429382324219
    8. '_df' → logprob: -12.635429382324219
    9. '_f' → logprob: -12.760429382324219
    10. '_factor' → logprob: -12.760429382324219

Token 684: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024357294663786888
    2. '   ' → logprob: -4.024357318878174
    3. '):' → logprob: -5.524357318878174
    4. ',' → logprob: -6.399357318878174
    5. '.' → logprob: -9.024356842041016
    6. ':
' → logprob: -9.524356842041016
    7. ' :' → logprob: -9.649356842041016
    8. ')' → logprob: -9.774356842041016
    9. ' if' → logprob: -9.899356842041016
    10. 'if' → logprob: -10.399356842041016

Token 685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2835994064807892
    2. ':' → logprob: -1.4085993766784668
    3. '):' → logprob: -6.408599376678467
    4. ' if' → logprob: -9.033599853515625
    5. ',' → logprob: -9.408599853515625
    6. ':
' → logprob: -9.408599853515625
    7. '```' → logprob: -9.533599853515625
    8. '<|end|>' → logprob: -9.783599853515625
    9. '():' → logprob: -9.908599853515625
    10. 'if' → logprob: -9.908599853515625

Token 686: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6376904845237732
    2. '   ' → logprob: -1.137690544128418
    3. ' if' → logprob: -2.637690544128418
    4. 'count' → logprob: -2.637690544128418
    5. ' count' → logprob: -6.137690544128418
    6. 'result' → logprob: -6.512690544128418
    7. 'res' → logprob: -6.637690544128418
    8. 'total' → logprob: -6.887690544128418
    9. ' res' → logprob: -7.262690544128418
    10. '    
' → logprob: -8.387690544128418

Token 687: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0004306692280806601
    2. ' pos' → logprob: -7.750430583953857
    3. '(pos' → logprob: -19.500431060791016
    4. '	pos' → logprob: -20.875431060791016
    5. '_pos' → logprob: -23.125431060791016
    6. '[pos' → logprob: -23.250431060791016
    7. '   ' → logprob: -23.625431060791016
    8. 'not' → logprob: -23.750431060791016
    9. '0' → logprob: -23.875431060791016
    10. ' ' → logprob: -24.125431060791016

Token 688: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1798488050699234
    2. ' ==' → logprob: -1.8048487901687622
    3. '>=' → logprob: -10.554848670959473
    4. '==
' → logprob: -10.554848670959473
    5. ')==' → logprob: -10.929848670959473
    6. ')' → logprob: -11.804848670959473
    7. '=' → logprob: -12.054848670959473
    8. '===' → logprob: -12.429848670959473
    9. '()==' → logprob: -12.804848670959473
    10. ':' → logprob: -13.304848670959473

Token 689: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002806417876854539
    2. '0' → logprob: -5.877806186676025
    3. ' n' → logprob: -14.002806663513184
    4. '
' → logprob: -15.502806663513184
    5. 's' → logprob: -15.752806663513184
    6. 'len' → logprob: -16.377805709838867
    7. '```' → logprob: -16.627805709838867
    8. '_n' → logprob: -16.752805709838867
    9. '(n' → logprob: -16.752805709838867
    10. ' ' → logprob: -17.002805709838867

Token 690: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5769473314285278
    2. ':
' → logprob: -0.8269473314285278
    3. ':return' → logprob: -7.701947212219238
    4. ' and' → logprob: -8.451947212219238
    5. '   ' → logprob: -8.701947212219238
    6. 'and' → logprob: -9.201947212219238
    7. ':
' → logprob: -10.076947212219238
    8. '       ' → logprob: -11.701947212219238
    9. '):
' → logprob: -11.701947212219238
    10. '<|end|>' → logprob: -12.576947212219238

Token 691: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009582539089024067
    2. '       ' → logprob: -5.25958251953125
    3. 'return' → logprob: -5.50958251953125
    4. ' return' → logprob: -8.50958251953125
    5. 'if' → logprob: -10.25958251953125
    6. ' if' → logprob: -10.63458251953125
    7. '	return' → logprob: -11.00958251953125
    8. ':return' → logprob: -11.50958251953125
    9. '   ' → logprob: -13.88458251953125
    10. '<|end|>' → logprob: -14.25958251953125

Token 692: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00020175233657937497
    2. '   ' → logprob: -8.750202178955078
    3. ' return' → logprob: -10.750202178955078
    4. 'if' → logprob: -10.750202178955078
    5. '       ' → logprob: -15.375202178955078
    6. '	return' → logprob: -16.500202178955078
    7. '    
' → logprob: -17.375202178955078
    8. '
' → logprob: -18.250202178955078
    9. '{return' → logprob: -18.375202178955078
    10. ':return' → logprob: -18.750202178955078

Token 693: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008438145159743726
    2. '0' → logprob: -7.8758440017700195
    3. 'int' → logprob: -8.00084400177002
    4. '{' → logprob: -9.62584400177002
    5. ' ' → logprob: -10.37584400177002
    6. '(' → logprob: -10.62584400177002
    7. '(int' → logprob: -12.75084400177002
    8. '{}' → logprob: -12.75084400177002
    9. ' int' → logprob: -14.87584400177002
    10. '[int' → logprob: -15.25084400177002

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005213391850702465
    2. 'int' → logprob: -7.625521183013916
    3. '{' → logprob: -10.625521659851074
    4. '(' → logprob: -11.875521659851074
    5. '{}' → logprob: -14.125521659851074
    6. '(int' → logprob: -14.375521659851074
    7. '0' → logprob: -14.750521659851074
    8. ' ' → logprob: -15.625521659851074
    9. ' int' → logprob: -16.375520706176758
    10. '[int' → logprob: -16.875520706176758

Token 695: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48776280879974365
    2. '
' → logprob: -1.3627628087997437
    3. '<|end|>' → logprob: -3.237762928009033
    4. '    
' → logprob: -3.362762928009033
    5. '  
' → logprob: -3.737762928009033
    6. '\n' → logprob: -5.237762928009033
    7. ')' → logprob: -5.487762928009033
    8. ' 
' → logprob: -5.487762928009033
    9. ' ' → logprob: -5.612762928009033
    10. '(' → logprob: -6.362762928009033

Token 696: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00032747918157838285
    2. ' sum' → logprob: -8.250327110290527
    3. '(sum' → logprob: -9.625327110290527
    4. '(' → logprob: -16.375328063964844
    5. 's' → logprob: -18.000328063964844
    6. '0' → logprob: -18.250328063964844
    7. ' (' → logprob: -18.750328063964844
    8. 'all' → logprob: -19.000328063964844
    9. '=sum' → logprob: -19.625328063964844
    10. '(s' → logprob: -19.750328063964844

Token 697: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.127333340875339e-06
    2. '==' → logprob: -12.750003814697266
    3. '```' → logprob: -14.875003814697266
    4. '_d' → logprob: -15.375003814697266
    5. ' ==' → logprob: -15.500003814697266
    6. '_' → logprob: -16.125003814697266
    7. '=' → logprob: -16.250003814697266
    8. '<|end|>' → logprob: -16.625003814697266
    9. ' ' → logprob: -17.375003814697266
    10. 's' → logprob: -17.750003814697266

Token 698: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0009244420798495412
    2. ' ==' → logprob: -7.000924587249756
    3. '<=' → logprob: -11.750924110412598
    4. '==
' → logprob: -13.625924110412598
    5. '>=' → logprob: -13.750924110412598
    6. ']==' → logprob: -14.250924110412598
    7. ')==' → logprob: -14.750924110412598
    8. '=' → logprob: -14.750924110412598
    9. '()==' → logprob: -15.000924110412598
    10. '==(' → logprob: -15.000924110412598

Token 699: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. 's' → logprob: -16.125001907348633
    4. 'sum' → logprob: -18.000001907348633
    5. 'n' → logprob: -19.000001907348633
    6. 'max' → logprob: -19.625001907348633
    7. 'digits' → logprob: -20.375001907348633
    8. '=' → logprob: -21.375001907348633
    9. 'digit' → logprob: -21.625001907348633
    10. '#' → logprob: -21.750001907348633

Token 700: ' else' (ID: 1203)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5759662985801697
    2. ' and' → logprob: -0.8259662985801697
    3. ' else' → logprob: -10.825965881347656
    4. 'else' → logprob: -12.075965881347656
    5. ' ' → logprob: -14.325965881347656
    6. '	and' → logprob: -15.575965881347656
    7. '   ' → logprob: -15.950965881347656
    8. '0' → logprob: -16.075965881347656
    9. '<|end|>' → logprob: -16.325965881347656
    10. '    ' → logprob: -16.575965881347656

Token 701: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -23.75
    4. '۰' → logprob: -24.25
    5. '```' → logprob: -24.625
    6. '000' → logprob: -24.625
    7. '00' → logprob: -25.5
    8. '  ' → logprob: -26.0
    9. 'False' → logprob: -26.25
    10. ' ' → logprob: -26.875

Token 702: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. 'False' → logprob: -24.125
    4. '۰' → logprob: -24.125
    5. '000' → logprob: -25.0
    6. '   ' → logprob: -25.375
    7. '```' → logprob: -25.75
    8. '00' → logprob: -26.625
    9. '০' → logprob: -26.75
    10. '  ' → logprob: -26.75

Token 703: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007953437976539135
    2. ' ' → logprob: -6.007953643798828
    3. '
' → logprob: -6.382953643798828
    4. '    
' → logprob: -6.757953643798828
    5. '<|end|>' → logprob: -7.382953643798828
    6. 'return' → logprob: -7.632953643798828
    7. '.' → logprob: -8.382953643798828
    8. '  
' → logprob: -8.382953643798828
    9. '  ' → logprob: -8.757953643798828
    10. '	' → logprob: -8.882953643798828

Token 704: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011992781655862927
    2. '    
' → logprob: -7.376199245452881
    3. '<|end|>' → logprob: -9.126199722290039
    4. ')' → logprob: -9.251199722290039
    5. '
' → logprob: -9.251199722290039
    6. ' ' → logprob: -10.001199722290039
    7. 's' → logprob: -10.501199722290039
    8. '  
' → logprob: -10.501199722290039
    9. ' 
' → logprob: -10.626199722290039
    10. '```' → logprob: -11.251199722290039

Token 705: ' total' (ID: 3609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3820263147354126
    2. '   ' → logprob: -2.132026195526123
    3. 'result' → logprob: -3.007026195526123
    4. ' res' → logprob: -3.257026195526123
    5. 'count' → logprob: -3.507026195526123
    6. 'total' (adapté à ' total') → logprob: -3.632026195526123
    7. 'for' → logprob: -4.132026195526123
    8. 'token' → logprob: -4.257026195526123
    9. 'ans' → logprob: -4.632026195526123
    10. ' ans' → logprob: -6.632026195526123

Token 706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004080301150679588
    2. ' =' → logprob: -5.504080295562744
    3. '+=' → logprob: -13.254080772399902
    4. ' +=' → logprob: -17.254079818725586
    5. '_=' → logprob: -18.004079818725586
    6. '=
' → logprob: -18.129079818725586
    7. '=sum' → logprob: -18.129079818725586
    8. '```' → logprob: -18.754079818725586
    9. '=[]' → logprob: -18.879079818725586
    10. ')' → logprob: -19.129079818725586

Token 707: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'total' → logprob: -17.25
    4. '{}' → logprob: -17.625
    5. 'dp' → logprob: -17.625
    6. '
' → logprob: -18.375
    7. '[' → logprob: -19.0
    8. '{' → logprob: -19.0
    9. '{}
' → logprob: -19.5
    10. '1' → logprob: -19.625

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. 'dp' → logprob: -19.375
    4. 'total' → logprob: -20.75
    5. '```' → logprob: -21.625
    6. '1' → logprob: -21.875
    7. '۰' → logprob: -22.125
    8. '000' → logprob: -22.25
    9. '=' → logprob: -22.5
    10. 'sum' → logprob: -22.625

Token 709: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028855163604021072
    2. ' for' → logprob: -4.153855323791504
    3. '<|end|>' → logprob: -5.153855323791504
    4. '
' → logprob: -5.778855323791504
    5. 'for' → logprob: -6.653855323791504
    6. '	for' → logprob: -7.153855323791504
    7. '```' → logprob: -7.653855323791504
    8. '    
' → logprob: -7.778855323791504
    9. ' ' → logprob: -8.153855323791504
    10. '  
' → logprob: -9.403855323791504

Token 710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10544971376657486
    2. ' for' → logprob: -2.855449676513672
    3. '<|end|>' → logprob: -3.355449676513672
    4. 'for' → logprob: -5.355449676513672
    5. '<|end|>' → logprob: -7.605449676513672
    6. ' ' → logprob: -7.855449676513672
    7. '    
' → logprob: -7.855449676513672
    8. ',' → logprob: -8.105449676513672
    9. '	for' → logprob: -8.105449676513672
    10. ')' → logprob: -8.230449676513672

Token 711: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03805847465991974
    2. ' for' → logprob: -3.2880585193634033
    3. '   ' → logprob: -11.163058280944824
    4. '```' → logprob: -13.913058280944824
    5. 'return' → logprob: -14.788058280944824
    6. 'factor' → logprob: -15.038058280944824
    7. '    
' → logprob: -15.413058280944824
    8. 'prev' → logprob: -15.538058280944824
    9. '
' → logprob: -15.538058280944824
    10. 'pro' → logprob: -15.788058280944824

Token 712: ' dig' (ID: 3807)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10685032606124878
    2. 'digit' → logprob: -2.3568503856658936
    3. 'dig' → logprob: -5.1068501472473145
    4. 'x' → logprob: -8.481850624084473
    5. ' digit' → logprob: -8.731850624084473
    6. ' d' → logprob: -9.231850624084473
    7. 'nd' → logprob: -10.356850624084473
    8. 'next' → logprob: -10.481850624084473
    9. 'i' → logprob: -10.981850624084473
    10. ' dig' → logprob: -11.856850624084473

Token 713: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011374774621799588
    2. 'in' → logprob: -7.0011372566223145
    3. 't' → logprob: -8.501137733459473
    4. ' ' → logprob: -11.876137733459473
    5. 'a' → logprob: -12.751137733459473
    6. ' ' → logprob: -13.001137733459473
    7. ',' → logprob: -13.501137733459473
    8. '```' → logprob: -13.751137733459473
    9. 'd' → logprob: -13.876137733459473
    10. '
' → logprob: -13.876137733459473

Token 714: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. '0' → logprob: -15.625204086303711
    4. '10' → logprob: -19.00020408630371
    5. '(range' → logprob: -19.25020408630371
    6. '	range' → logprob: -20.25020408630371
    7. 'digits' → logprob: -21.37520408630371
    8. '[' → logprob: -21.37520408630371
    9. '1' → logprob: -22.25020408630371
    10. '   ' → logprob: -22.50020408630371

Token 715: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003258161712437868
    2. '0' → logprob: -5.753258228302002
    3. '11' → logprob: -9.753257751464844
    4. '(' → logprob: -10.878257751464844
    5. '1' → logprob: -12.753257751464844
    6. ' ' → logprob: -14.878257751464844
    7. '
' → logprob: -16.503257751464844
    8. '```' → logprob: -17.128257751464844
    9. '=' → logprob: -17.628257751464844
    10. '   ' → logprob: -17.878257751464844

Token 716: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0029292032122612
    2. '0' → logprob: -5.877929210662842
    3. '11' → logprob: -9.127928733825684
    4. '(' → logprob: -11.377928733825684
    5. '1' → logprob: -12.877928733825684
    6. 'min' → logprob: -14.627928733825684
    7. 'max' → logprob: -14.752928733825684
    8. 'digits' → logprob: -15.752928733825684
    9. 'digit' → logprob: -15.877928733825684
    10. '```' → logprob: -16.0029296875

Token 717: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014362464658915997
    2. '):' → logprob: -4.264362335205078
    3. '       ' → logprob: -9.389362335205078
    4. '   ' → logprob: -9.639362335205078
    5. '+' → logprob: -10.639362335205078
    6. '):
' → logprob: -11.514362335205078
    7. ':' → logprob: -12.514362335205078
    8. ':
' → logprob: -12.639362335205078
    9. '():
' → logprob: -12.889362335205078
    10. '):

' → logprob: -13.264362335205078

Token 718: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002016331272898242
    2. '        
' → logprob: -9.750201225280762
    3. ',' → logprob: -9.875201225280762
    4. '   ' → logprob: -10.375201225280762
    5. '```' → logprob: -10.750201225280762
    6. '<|end|>' → logprob: -11.750201225280762
    7. ' if' → logprob: -12.750201225280762
    8. '     ' → logprob: -12.875201225280762
    9. '  
' → logprob: -12.875201225280762
    10. '    
' → logprob: -12.875201225280762

Token 719: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8572753071784973
    2. '       ' → logprob: -1.1072752475738525
    3. ' if' → logprob: -2.1072752475738525
    4. 'new' → logprob: -2.8572752475738525
    5. ' new' → logprob: -3.2322752475738525
    6. '           ' → logprob: -4.232275485992432
    7. 'next' → logprob: -4.732275485992432
    8. 'n' → logprob: -6.732275485992432
    9. ' next' → logprob: -7.232275485992432
    10. 'prev' → logprob: -8.857275009155273

Token 720: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.11600875109434128
    2. 'sum' → logprob: -2.241008758544922
    3. ' dig' → logprob: -5.991008758544922
    4. 'dig' → logprob: -7.866008758544922
    5. '(sum' → logprob: -8.741008758544922
    6. '	sum' → logprob: -10.241008758544922
    7. ' digits' → logprob: -10.991008758544922
    8. ' pos' → logprob: -11.428508758544922
    9. ' not' → logprob: -11.616008758544922
    10. 'pos' → logprob: -11.803508758544922

Token 721: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.491498531133402e-06
    2. '_d' → logprob: -12.250009536743164
    3. '>=' → logprob: -13.125009536743164
    4. ' >=' → logprob: -14.250009536743164
    5. 'dig' → logprob: -14.625009536743164
    6. '>' → logprob: -15.250009536743164
    7. '```' → logprob: -15.500009536743164
    8. '+' → logprob: -15.625009536743164
    9. ')' → logprob: -15.750009536743164
    10. '_' → logprob: -16.000009536743164

Token 722: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.027527466416358948
    2. ' >=' → logprob: -3.9025275707244873
    3. '-' → logprob: -5.027527332305908
    4. '+' → logprob: -8.527527809143066
    5. ' -' → logprob: -9.402527809143066
    6. '>' → logprob: -10.027527809143066
    7. ')>=' → logprob: -10.652527809143066
    8. '```' → logprob: -11.402527809143066
    9. '   ' → logprob: -11.527527809143066
    10. '-d' → logprob: -12.027527809143066

Token 723: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -4.763666947837919e-05
    2. ' dig' → logprob: -10.12504768371582
    3. 'digits' → logprob: -12.12504768371582
    4. 'digit' → logprob: -13.25004768371582
    5. 'd' → logprob: -15.75004768371582
    6. '0' → logprob: -16.62504768371582
    7. ' ' → logprob: -17.37504768371582
    8. '   ' → logprob: -17.50004768371582
    9. '  ' → logprob: -19.00004768371582
    10. '[' → logprob: -19.00004768371582

Token 724: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5389664769172668
    2. '<' → logprob: -1.288966417312622
    3. ' >=' → logprob: -2.538966417312622
    4. ' <' → logprob: -2.788966417312622
    5. ')>=' → logprob: -7.788966655731201
    6. ']>=' → logprob: -8.663966178894043
    7. ')' → logprob: -10.538966178894043
    8. ' ' → logprob: -11.538966178894043
    9. '[' → logprob: -11.913966178894043
    10. '   ' → logprob: -12.163966178894043

Token 725: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -20.25
    4. '=' → logprob: -20.875
    5. '   ' → logprob: -21.25
    6. '
' → logprob: -22.375
    7. '```' → logprob: -22.375
    8. '０' → logprob: -23.125
    9. '     ' → logprob: -23.125
    10. '০' → logprob: -23.5

Token 726: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -19.75
    4. '   ' → logprob: -22.375
    5. '０' → logprob: -22.75
    6. '=' → logprob: -22.75
    7. '০' → logprob: -22.875
    8. '     ' → logprob: -23.875
    9. '         ' → logprob: -24.25
    10. '०' → logprob: -24.375

Token 727: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13062945008277893
    2. ':' → logprob: -2.130629539489746
    3. '       ' → logprob: -6.380629539489746
    4. ' or' → logprob: -6.880629539489746
    5. '           ' → logprob: -7.130629539489746
    6. '   ' → logprob: -9.630629539489746
    7. ':return' → logprob: -9.755629539489746
    8. 'or' → logprob: -10.755629539489746
    9. '):
' → logprob: -11.380629539489746
    10. ':
' → logprob: -12.380629539489746

Token 728: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005247395019978285
    2. ':' → logprob: -5.380247592926025
    3. ':
' → logprob: -7.630247592926025
    4. ' or' → logprob: -10.380247116088867
    5. '       ' → logprob: -10.380247116088867
    6. 'continue' → logprob: -10.630247116088867
    7. '               ' → logprob: -10.880247116088867
    8. ' continue' → logprob: -11.380247116088867
    9. '		' → logprob: -11.630247116088867
    10. '	       ' → logprob: -12.255247116088867

Token 729: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3682560622692108
    2. 'break' (adapté à ' break') → logprob: -1.3682560920715332
    3. 'continue' → logprob: -2.993256092071533
    4. '       ' → logprob: -6.118256092071533
    5. '               ' → logprob: -7.618256092071533
    6. ' break' → logprob: -8.618255615234375
    7. '	break' → logprob: -8.993255615234375
    8. '		' → logprob: -9.118255615234375
    9. ' continue' → logprob: -9.118255615234375
    10. '```' → logprob: -9.743255615234375

Token 730: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00375020201317966
    2. '
' → logprob: -6.253750324249268
    3. ':
' → logprob: -7.003750324249268
    4. ':' → logprob: -7.753750324249268
    5. '           ' → logprob: -8.62874984741211
    6. '        
' → logprob: -9.50374984741211
    7. ',' → logprob: -9.87874984741211
    8. '   ' → logprob: -10.37874984741211
    9. ',
' → logprob: -10.37874984741211
    10. '):
' → logprob: -10.75374984741211

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.641841820150148e-05
    2. '```' → logprob: -11.75002670288086
    3. '           ' → logprob: -12.00002670288086
    4. '   ' → logprob: -12.62502670288086
    5. 'continue' → logprob: -13.00002670288086
    6. '<|end|>' → logprob: -13.50002670288086
    7. 'pro' → logprob: -14.25002670288086
    8. ',' → logprob: -14.25002670288086
    9. '        
' → logprob: -14.37502670288086
    10. 'return' → logprob: -14.50002670288086

Token 732: ' pf' (ID: 27291)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5327121615409851
    2. 'total' → logprob: -1.9077122211456299
    3. '       ' → logprob: -2.15771222114563
    4. 'pf' (adapté à ' pf') → logprob: -2.90771222114563
    5. 'factor' → logprob: -3.90771222114563
    6. 'prev' → logprob: -4.032711982727051
    7. 'next' → logprob: -4.032711982727051
    8. 'pro' → logprob: -4.407711982727051
    9. ' new' → logprob: -5.032711982727051
    10. 'nf' → logprob: -5.532711982727051

Token 733: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14278894662857056
    2. ' =' → logprob: -2.017788887023926
    3. '_new' → logprob: -10.017788887023926
    4. 'f' → logprob: -10.892788887023926
    5. 'new' → logprob: -11.392788887023926
    6. '_f' → logprob: -11.767788887023926
    7. '_add' → logprob: -11.767788887023926
    8. '=get' → logprob: -12.767788887023926
    9. '_factor' → logprob: -12.892788887023926
    10. 'actors' → logprob: -13.017788887023926

Token 734: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.00039111197111196816
    2. 'prod' → logprob: -8.375391006469727
    3. ' prime' → logprob: -9.250391006469727
    4. 'add' → logprob: -9.875391006469727
    5. '(' → logprob: -12.125391006469727
    6. 'tuple' → logprob: -12.250391006469727
    7. 'pr' → logprob: -14.000391006469727
    8. 'pro' → logprob: -14.500391006469727
    9. 'product' → logprob: -15.125391006469727
    10. '   ' → logprob: -15.250391006469727

Token 735: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0007196996593847871
    2. 'f' → logprob: -7.2507195472717285
    3. '_factor' → logprob: -12.375720024108887
    4. ')' → logprob: -14.000720024108887
    5. ')_' → logprob: -14.000720024108887
    6. '_fac' → logprob: -14.125720024108887
    7. '_s' → logprob: -14.500720024108887
    8. ' =' → logprob: -15.125720024108887
    9. 's' → logprob: -15.125720024108887
    10. '=' → logprob: -15.250720024108887

Token 736: 'actors' (ID: 37126)
  Prédit: 'actors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actors' → logprob: -0.009131040424108505
    2. 'f' → logprob: -4.884130954742432
    3. '_f' → logprob: -6.509130954742432
    4. 'acters' → logprob: -11.63413143157959
    5. 'ac' → logprob: -12.13413143157959
    6. 'actor' → logprob: -12.38413143157959
    7. 'ctors' → logprob: -12.63413143157959
    8. 'act' → logprob: -13.00913143157959
    9. '```' → logprob: -13.25913143157959
    10. 'Factors' → logprob: -13.38413143157959

Token 737: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -8.792751032160595e-05
    2. 'dig' → logprob: -9.37508773803711
    3. '(' → logprob: -13.37508773803711
    4. '((' → logprob: -15.00008773803711
    5. '(di' → logprob: -15.00008773803711
    6. 'd' → logprob: -15.37508773803711
    7. '   ' → logprob: -15.50008773803711
    8. '(dic' → logprob: -16.00008773803711
    9. '       ' → logprob: -17.00008773803711
    10. ' (' → logprob: -17.12508773803711

Token 738: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.0011361661599949002
    2. '+' → logprob: -7.251136302947998
    3. '(' → logprob: -9.00113582611084
    4. '(d' → logprob: -9.12613582611084
    5. '(p' → logprob: -10.50113582611084
    6. 'p' → logprob: -10.62613582611084
    7. 'g' → logprob: -10.62613582611084
    8. 'dig' → logprob: -10.87613582611084
    9. '(g' → logprob: -11.12613582611084
    10. 'i' → logprob: -11.25113582611084

Token 739: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001116404077038169
    2. ')' → logprob: -6.8761162757873535
    3. ')+' → logprob: -10.626116752624512
    4. ' +' → logprob: -10.876116752624512
    5. ')[' → logprob: -11.376116752624512
    6. ')
' → logprob: -11.751116752624512
    7. '[' → logprob: -11.751116752624512
    8. '(' → logprob: -11.876116752624512
    9. '+)' → logprob: -13.251116752624512
    10. '()+' → logprob: -13.626116752624512

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -13.500003814697266
    3. ')' → logprob: -13.875003814697266
    4. ' ' → logprob: -14.625003814697266
    5. '0' → logprob: -15.625003814697266
    6. '   ' → logprob: -16.125003814697266
    7. '``' → logprob: -16.250003814697266
    8. '
' → logprob: -16.750003814697266
    9. '`' → logprob: -17.125003814697266
    10. ')
' → logprob: -17.250003814697266

Token 741: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10083982348442078
    2. ')' → logprob: -2.350839853286743
    3. '       ' → logprob: -7.725839614868164
    4. ')
' → logprob: -8.600839614868164
    5. ')[' → logprob: -12.725839614868164
    6. ')

' → logprob: -13.225839614868164
    7. ')`
' → logprob: -14.225839614868164
    8. '   ' → logprob: -14.725839614868164
    9. '           ' → logprob: -15.100839614868164
    10. '())
' → logprob: -15.725839614868164

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015002528380136937
    2. 'total' → logprob: -9.125149726867676
    3. '```' → logprob: -11.250149726867676
    4. ' total' → logprob: -11.375149726867676
    5. 'pro' → logprob: -12.500149726867676
    6. '        
' → logprob: -12.875149726867676
    7. '
' → logprob: -13.125149726867676
    8. '           ' → logprob: -13.375149726867676
    9. '   ' → logprob: -13.500149726867676
    10. '<|end|>' → logprob: -13.750149726867676

Token 743: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.047257665544748306
    2. 'next' → logprob: -4.047257900238037
    3. 'np' → logprob: -4.297257900238037
    4. 'total' → logprob: -5.047257900238037
    5. 'nf' → logprob: -5.422257900238037
    6. ' new' → logprob: -6.047257900238037
    7. 'n' → logprob: -6.922257900238037
    8. 'if' → logprob: -8.297257423400879
    9. 'prev' → logprob: -9.047257423400879
    10. '       ' → logprob: -9.297257423400879

Token 744: 'f' (ID: 69)
  Prédit: '_pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pro' → logprob: -0.03291131183505058
    2. 'pro' → logprob: -3.5329113006591797
    3. 'f' → logprob: -6.53291130065918
    4. '_f' → logprob: -6.78291130065918
    5. 'prod' → logprob: -7.90791130065918
    6. '_prod' → logprob: -8.90791130065918
    7. 'sum' → logprob: -10.78291130065918
    8. '_sum' → logprob: -11.28291130065918
    9. '_factor' → logprob: -11.40791130065918
    10. 'factor' → logprob: -12.15791130065918

Token 745: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001502598519437015
    2. ' =' → logprob: -6.501502513885498
    3. '=
' → logprob: -15.501502990722656
    4. 'actor' → logprob: -17.251502990722656
    5. 'actors' → logprob: -17.251502990722656
    6. '   ' → logprob: -17.501502990722656
    7. ')' → logprob: -18.001502990722656
    8. '=f' → logprob: -18.126502990722656
    9. '=int' → logprob: -18.126502990722656
    10. '```' → logprob: -18.251502990722656

Token 746: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.001063655479811132
    2. ' add' → logprob: -7.001063823699951
    3. 'tuple' → logprob: -8.876063346862793
    4. '   ' → logprob: -11.501063346862793
    5. ' tuple' → logprob: -13.751063346862793
    6. '(add' → logprob: -14.501063346862793
    7. ' ' → logprob: -15.251063346862793
    8. '(' → logprob: -16.25106430053711
    9. '
' → logprob: -16.50106430053711
    10. '  ' → logprob: -16.75106430053711

Token 747: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.1424973713001236e-05
    2. 'f' → logprob: -10.375031471252441
    3. '_factor' → logprob: -15.875031471252441
    4. 'Factors' → logprob: -17.375030517578125
    5. 'factor' → logprob: -17.500030517578125
    6. 's' → logprob: -17.750030517578125
    7. '(' → logprob: -18.125030517578125
    8. '\' → logprob: -18.125030517578125
    9. '(f' → logprob: -18.250030517578125
    10. '```' → logprob: -18.375030517578125

Token 748: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.20149490237236023
    2. 'f' → logprob: -1.7014949321746826
    3. 'Factors' → logprob: -10.451495170593262
    4. 'factor' → logprob: -11.201495170593262
    5. '(f' → logprob: -11.701495170593262
    6. '(' → logprob: -12.576495170593262
    7. '-f' → logprob: -12.576495170593262
    8. 'fact' → logprob: -12.701495170593262
    9. 'actors' → logprob: -12.826495170593262
    10. '_factor' → logprob: -12.826495170593262

Token 749: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -7.696077227592468e-05
    2. 'pro' → logprob: -9.500077247619629
    3. '(' → logprob: -13.375077247619629
    4. '(prod' → logprob: -15.375077247619629
    5. '_pro' → logprob: -16.375076293945312
    6. ' (' → logprob: -17.500076293945312
    7. '	pro' → logprob: -17.625076293945312
    8. '   ' → logprob: -17.750076293945312
    9. '(p' → logprob: -18.625076293945312
    10. '(pr' → logprob: -19.250076293945312

Token 750: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.0018301078816875815
    2. 'd' → logprob: -6.751830101013184
    3. 'ro' → logprob: -8.501830101013184
    4. 'rof' → logprob: -9.001830101013184
    5. '_df' → logprob: -9.501830101013184
    6. 'f' → logprob: -9.626830101013184
    7. 'ctor' → logprob: -10.376830101013184
    8. 'od' → logprob: -10.751830101013184
    9. 'def' → logprob: -10.751830101013184
    10. '_f' → logprob: -10.751830101013184

Token 751: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038232315331697464
    2. ',p' → logprob: -3.2882323265075684
    3. ',f' → logprob: -8.91323184967041
    4. ' ,' → logprob: -10.91323184967041
    5. 'pf' → logprob: -10.91323184967041
    6. ',d' → logprob: -11.91323184967041
    7. ',
' → logprob: -12.66323184967041
    8. ',(' → logprob: -12.66323184967041
    9. ',new' → logprob: -12.91323184967041
    10. '   ' → logprob: -13.66323184967041

Token 752: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.523948907968588e-05
    2. 'pf' → logprob: -11.250035285949707
    3. 'r' → logprob: -11.375035285949707
    4. '(f' → logprob: -12.500035285949707
    5. '(p' → logprob: -13.000035285949707
    6. '(' → logprob: -14.125035285949707
    7. 'rf' → logprob: -14.250035285949707
    8. '
' → logprob: -14.625035285949707
    9. 'F' → logprob: -15.125035285949707
    10. '   ' → logprob: -15.125035285949707

Token 753: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25253841280937195
    2. ')' → logprob: -1.5025384426116943
    3. '       ' → logprob: -7.502538204193115
    4. '):
' → logprob: -11.252538681030273
    5. '   ' → logprob: -11.377538681030273
    6. ')
' → logprob: -11.627538681030273
    7. '           ' → logprob: -11.752538681030273
    8. ')

' → logprob: -11.877538681030273
    9. ')`
' → logprob: -12.502538681030273
    10. ' )
' → logprob: -13.877538681030273

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011033779446734115
    2. '	' → logprob: -10.125110626220703
    3. '<|end|>' → logprob: -10.750110626220703
    4. ')' → logprob: -11.125110626220703
    5. '        
' → logprob: -11.750110626220703
    6. 'if' → logprob: -12.125110626220703
    7. ',' → logprob: -12.125110626220703
    8. '```' → logprob: -12.625110626220703
    9. '           ' → logprob: -13.125110626220703
    10. '
' → logprob: -13.375110626220703

Token 755: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.051913682371377945
    2. '       ' → logprob: -3.0519137382507324
    3. 'if' → logprob: -5.801913738250732
    4. ' total' → logprob: -8.301913261413574
    5. '   ' → logprob: -10.551913261413574
    6. '           ' → logprob: -11.426913261413574
    7. ' if' → logprob: -11.676913261413574
    8. '	total' → logprob: -12.676913261413574
    9. '        
' → logprob: -14.426913261413574
    10. 'token' → logprob: -15.176913261413574

Token 756: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038100700825452805
    2. ' +=' → logprob: -3.2881007194519043
    3. '=' → logprob: -10.413100242614746
    4. ']+=' → logprob: -11.163100242614746
    5. '```' → logprob: -11.663100242614746
    6. '   ' → logprob: -13.163100242614746
    7. '+=(' → logprob: -13.163100242614746
    8. '+' → logprob: -13.788100242614746
    9. '+="' → logprob: -14.913100242614746
    10. '+='' → logprob: -14.913100242614746

Token 757: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00015860427811276168
    2. ' dp' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.125158309936523
    4. '	dp' → logprob: -17.250158309936523
    5. '(dp' → logprob: -18.625158309936523
    6. '
' → logprob: -19.625158309936523
    7. '_dp' → logprob: -20.000158309936523
    8. ' ' → logprob: -20.500158309936523
    9. '```' → logprob: -20.750158309936523
    10. '0' → logprob: -21.125158309936523

Token 758: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.128163257315464e-07
    2. 'sum' → logprob: -15.25
    3. 'dp' → logprob: -17.375
    4. '_s' → logprob: -17.875
    5. '_prod' → logprob: -18.125
    6. '\' → logprob: -18.375
    7. '_dp' → logprob: -18.375
    8. 's' → logprob: -18.875
    9. 'Sum' → logprob: -19.375
    10. '_total' → logprob: -19.375

Token 759: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.024796508252620697
    2. '_sum' → logprob: -4.024796485900879
    3. '_pos' → logprob: -5.774796485900879
    4. 'prod' → logprob: -6.024796485900879
    5. '_pro' → logprob: -7.524796485900879
    6. 'pos' → logprob: -7.649796485900879
    7. '(pos' → logprob: -10.274796485900879
    8. 'sum' → logprob: -10.774796485900879
    9. '_product' → logprob: -11.524796485900879
    10. '(prod' → logprob: -12.149796485900879

Token 760: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0031859094742685556
    2. 'pos' → logprob: -5.753185749053955
    3. ' pos' → logprob: -12.253186225891113
    4. '[pos' → logprob: -12.878186225891113
    5. '(' → logprob: -14.753186225891113
    6. '```' → logprob: -15.253186225891113
    7. ',pos' → logprob: -17.003185272216797
    8. '(
' → logprob: -17.003185272216797
    9. '	pos' → logprob: -17.378185272216797
    10. '_pos' → logprob: -18.378185272216797

Token 761: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017608561320230365
    2. ' -' → logprob: -6.376760959625244
    3. ',' → logprob: -10.001760482788086
    4. '   ' → logprob: -12.001760482788086
    5. '	' → logprob: -12.626760482788086
    6. ' ' → logprob: -13.876760482788086
    7. '  ' → logprob: -14.876760482788086
    8. '```' → logprob: -15.001760482788086
    9. '       ' → logprob: -15.126760482788086
    10. '−' → logprob: -15.376760482788086

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.000001907348633
    3. ',' → logprob: -14.250001907348633
    4. '```' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.500001907348633
    6. 's' → logprob: -17.500001907348633
    7. '(' → logprob: -18.000001907348633
    8. '
' → logprob: -18.250001907348633
    9. 'pos' → logprob: -18.625001907348633
    10. '

' → logprob: -19.250001907348633

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20478814840316772
    2. ',new' → logprob: -1.7047882080078125
    3. ' ,' → logprob: -6.3297882080078125
    4. ',sum' → logprob: -7.4547882080078125
    5. 'new' → logprob: -8.329788208007812
    6. '(new' → logprob: -8.704788208007812
    7. ',total' → logprob: -9.079788208007812
    8. ',(' → logprob: -9.204788208007812
    9. '(' → logprob: -9.329788208007812
    10. ',s' → logprob: -9.454788208007812

Token 764: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00157127995043993
    2. ' sum' → logprob: -6.501571178436279
    3. 'new' → logprob: -9.626571655273438
    4. '(sum' → logprob: -14.376571655273438
    5. ' new' → logprob: -14.501571655273438
    6. '    ' → logprob: -14.501571655273438
    7. '   ' → logprob: -14.501571655273438
    8. ' ' → logprob: -15.251571655273438
    9. '  ' → logprob: -15.501571655273438
    10. '           ' → logprob: -16.251571655273438

Token 765: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.612634362885728e-05
    2. 'prod' → logprob: -9.750076293945312
    3. 'od' → logprob: -11.375076293945312
    4. 'f' → logprob: -12.625076293945312
    5. '_prod' → logprob: -13.500076293945312
    6. 'dig' → logprob: -14.750076293945312
    7. '-' → logprob: -15.125076293945312
    8. 'ot' → logprob: -15.875076293945312
    9. 'o' → logprob: -15.875076293945312
    10. 'of' → logprob: -16.375076293945312

Token 766: '-d' (ID: 2469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3174703121185303
    2. '-new' → logprob: -1.4424703121185303
    3. ' -' → logprob: -1.5674703121185303
    4. '-d' → logprob: -1.6924703121185303
    5. '-' → logprob: -2.4424703121185303
    6. ',new' → logprob: -4.692470550537109
    7. '   ' → logprob: -6.067470550537109
    8. ' ,' → logprob: -6.692470550537109
    9. '-digit' → logprob: -7.067470550537109
    10. '  ' → logprob: -7.817470550537109

Token 767: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.00011939727846765891
    2. 'it' → logprob: -10.25011920928955
    3. 'igits' → logprob: -11.12511920928955
    4. 'igit' → logprob: -11.25011920928955
    5. '[' → logprob: -11.62511920928955
    6. '
' → logprob: -12.25011920928955
    7. 'g' → logprob: -12.50011920928955
    8. '   ' → logprob: -12.50011920928955
    9. '1' → logprob: -12.75011920928955
    10. '```' → logprob: -12.75011920928955

Token 768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06209977716207504
    2. ',new' → logprob: -2.8120996952056885
    3. ' ,' → logprob: -9.18709945678711
    4. 'new' → logprob: -10.56209945678711
    5. ' new' → logprob: -13.93709945678711
    6. '   ' → logprob: -14.18709945678711
    7. ',next' → logprob: -14.68709945678711
    8. '[new' → logprob: -14.81209945678711
    9. ',
' → logprob: -14.93709945678711
    10. ',n' → logprob: -15.93709945678711

Token 769: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004091224167495966
    2. ' new' → logprob: -5.504091262817383
    3. '   ' → logprob: -12.254091262817383
    4. 'tuple' → logprob: -12.254091262817383
    5. '    ' → logprob: -14.379091262817383
    6. '           ' → logprob: -14.629091262817383
    7. '(new' → logprob: -14.879091262817383
    8. '  ' → logprob: -15.004091262817383
    9. '       ' → logprob: -15.004091262817383
    10. ' tuple' → logprob: -15.129091262817383

Token 770: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005249176174402237
    2. '_f' → logprob: -5.2552490234375
    3. '_factor' → logprob: -12.1302490234375
    4. 'Factors' → logprob: -12.1302490234375
    5. ')' → logprob: -13.2552490234375
    6. '_' → logprob: -14.3802490234375
    7. 'F' → logprob: -14.7552490234375
    8. 'ф' → logprob: -15.0052490234375
    9. '_tokens' → logprob: -15.1302490234375
    10. ' factors' → logprob: -15.2552490234375

Token 771: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011957057286053896
    2. ')
' → logprob: -6.751195907592773
    3. '   ' → logprob: -10.626195907592773
    4. ')return' → logprob: -14.126195907592773
    5. ' )' → logprob: -15.251195907592773
    6. '       ' → logprob: -16.001195907592773
    7. ')
' → logprob: -16.126195907592773
    8. ')

' → logprob: -17.626195907592773
    9. ')#' → logprob: -18.251195907592773
    10. ' ' → logprob: -19.001195907592773

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004765341989696026
    2. ')' → logprob: -6.254765510559082
    3. 'return' → logprob: -6.754765510559082
    4. ':return' → logprob: -7.504765510559082
    5. '<|end|>' → logprob: -7.879765510559082
    6. '	return' → logprob: -7.879765510559082
    7. ' return' → logprob: -8.629765510559082
    8. ')return' → logprob: -10.254765510559082
    9. '    
' → logprob: -10.254765510559082
    10. '       ' → logprob: -10.629765510559082

Token 773: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12913137674331665
    2. 'return' (adapté à ' return') → logprob: -2.129131317138672
    3. ' return' → logprob: -6.254131317138672
    4. '	return' → logprob: -8.504131317138672
    5. ':return' → logprob: -10.254131317138672
    6. ')' → logprob: -11.254131317138672
    7. ')return' → logprob: -11.754131317138672
    8. '{return' → logprob: -11.879131317138672
    9. '<|end|>' → logprob: -12.629131317138672
    10. '@return' → logprob: -13.129131317138672

Token 774: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0031777136027812958
    2. ' total' → logprob: -5.753177642822266
    3. '	total' → logprob: -18.878177642822266
    4. '(total' → logprob: -19.378177642822266
    5. '   ' → logprob: -20.378177642822266
    6. 'tot' → logprob: -20.753177642822266
    7. '$total' → logprob: -21.003177642822266
    8. 't' → logprob: -21.753177642822266
    9. 'return' → logprob: -21.878177642822266
    10. '_total' → logprob: -22.253177642822266

Token 775: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06048952788114548
    2. '#' → logprob: -3.5604894161224365
    3. '<|end|>' → logprob: -3.9354894161224365
    4. '(' → logprob: -5.810489654541016
    5. ':' → logprob: -6.185489654541016
    6. 'def' → logprob: -6.310489654541016
    7. '_' → logprob: -6.810489654541016
    8. '[' → logprob: -7.810489654541016
    9. '<|end|>' → logprob: -8.060489654541016
    10. ',' → logprob: -8.060489654541016

Token 777: ' We' (ID: 1416)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.40352267026901245
    2. '#' → logprob: -1.7785227298736572
    3. 'def' → logprob: -2.2785227298736572
    4. 'result' → logprob: -3.5285227298736572
    5. ')' → logprob: -5.028522491455078
    6. 'count' → logprob: -5.653522491455078
    7. 'res' → logprob: -5.653522491455078
    8. 'n' → logprob: -6.028522491455078
    9. 'dp' → logprob: -6.153522491455078
    10. 'print' → logprob: -6.278522491455078

Token 778: ' will' (ID: 738)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14292432367801666
    2. ' =' → logprob: -2.1429243087768555
    3. ' want' → logprob: -4.5179243087768555
    4. 's' → logprob: -6.7679243087768555
    5. ' need' → logprob: -7.1429243087768555
    6. '#' → logprob: -7.3929243087768555
    7. 'need' → logprob: -7.6429243087768555
    8. 'def' → logprob: -8.267924308776855
    9. 'want' → logprob: -8.517924308776855
    10. '[' → logprob: -8.892924308776855

Token 779: ' iterate' (ID: 63166)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8974434733390808
    2. 'count' → logprob: -1.8974435329437256
    3. 'use' → logprob: -2.2724435329437256
    4. 'calculate' → logprob: -2.6474435329437256
    5. 'def' → logprob: -2.8974435329437256
    6. 'build' → logprob: -3.1474435329437256
    7. 'compute' → logprob: -3.2724435329437256
    8. 'define' → logprob: -3.3974435329437256
    9. 'complete' → logprob: -3.5224435329437256
    10. '#' → logprob: -4.2724432945251465

Token 780: ' sum' (ID: 4215)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.36038994789123535
    2. 'pos' → logprob: -2.2353899478912354
    3. 'for' → logprob: -2.7353899478912354
    4. 'sum' → logprob: -3.1103899478912354
    5. ' over' → logprob: -3.7353899478912354
    6. 'from' → logprob: -3.9853899478912354
    7. 'max' → logprob: -5.235389709472656
    8. 's' → logprob: -5.485389709472656
    9. 'count' → logprob: -5.610389709472656
    10. '=' → logprob: -5.610389709472656

Token 781: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1903771311044693
    2. '_s' → logprob: -1.940377116203308
    3. 'sum' → logprob: -4.565377235412598
    4. '_sum' → logprob: -4.565377235412598
    5. 'for' → logprob: -5.690377235412598
    6. '_=' → logprob: -6.315377235412598
    7. 'd' → logprob: -6.815377235412598
    8. 's' → logprob: -7.315377235412598
    9. '_for' → logprob: -8.065377235412598
    10. '_
' → logprob: -8.190377235412598

Token 782: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013446388766169548
    2. 'max' → logprob: -7.126344680786133
    3. '1' → logprob: -8.501344680786133
    4. 'sum' → logprob: -9.126344680786133
    5. 'n' → logprob: -9.626344680786133
    6. '9' → logprob: -10.251344680786133
    7. '#' → logprob: -10.376344680786133
    8. 's' → logprob: -10.376344680786133
    9. ' ' → logprob: -11.001344680786133
    10. '(' → logprob: -11.126344680786133

Token 783: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020270596724003553
    2. 'max' → logprob: -9.250203132629395
    3. '1' → logprob: -9.500203132629395
    4. 'sum' → logprob: -11.500203132629395
    5. 'n' → logprob: -11.875203132629395
    6. '9' → logprob: -12.375203132629395
    7. '#' → logprob: -12.500203132629395
    8. 's' → logprob: -12.625203132629395
    9. '(' → logprob: -14.125203132629395
    10. 'i' → logprob: -14.750203132629395

Token 784: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.07771815359592438
    2. ' to' → logprob: -3.3277182579040527
    3. 'for' → logprob: -3.5777182579040527
    4. 'in' → logprob: -4.952718257904053
    5. '=' → logprob: -6.327718257904053
    6. ' in' → logprob: -7.202718257904053
    7. ' =' → logprob: -7.827718257904053
    8. '#' → logprob: -8.202717781066895
    9. ',' → logprob: -8.702717781066895
    10. ' for' → logprob: -8.827717781066895

Token 785: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6489283442497253
    2. 'max' → logprob: -0.7739283442497253
    3. ' sum' → logprob: -4.648928165435791
    4. ' max' → logprob: -5.148928165435791
    5. 'n' → logprob: -7.773928165435791
    6. '9' → logprob: -8.27392864227295
    7. 's' → logprob: -9.89892864227295
    8. 'prod' → logprob: -10.14892864227295
    9. ' n' → logprob: -10.39892864227295
    10. ' ' → logprob: -12.39892864227295

Token 786: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0004581942630466074
    2. 's' → logprob: -7.875458240509033
    3. 'max' → logprob: -10.125457763671875
    4. '+' → logprob: -11.000457763671875
    5. 'n' → logprob: -11.625457763671875
    6. '_' → logprob: -11.875457763671875
    7. '_sum' → logprob: -13.625457763671875
    8. '_n' → logprob: -14.000457763671875
    9. 'sum' → logprob: -14.000457763671875
    10. '```' → logprob: -14.125457763671875

Token 787: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3341773450374603
    2. 'count' → logprob: -1.7091773748397827
    3. 'less' → logprob: -2.959177255630493
    4. 'total' → logprob: -3.459177255630493
    5. 'result' → logprob: -4.709177494049072
    6. '
' → logprob: -5.084177494049072
    7. 'res' → logprob: -6.334177494049072
    8. 'answer' → logprob: -6.584177494049072
    9. 'ans' → logprob: -7.959177494049072
    10. 'cnt' → logprob: -8.084177017211914

Token 788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019012707052752376
    2. 's' → logprob: -7.126901149749756
    3. ' ' → logprob: -7.751901149749756
    4. '```' → logprob: -7.876901149749756
    5. '0' → logprob: -8.626901626586914
    6. '9' → logprob: -10.376901626586914
    7. '``' → logprob: -10.626901626586914
    8. '`' → logprob: -11.126901626586914
    9. '-' → logprob: -11.876901626586914
    10. '(' → logprob: -11.876901626586914

Token 789: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10588206350803375
    2. 'total' → logprob: -3.105882167816162
    3. '
' → logprob: -3.480882167816162
    4. 'count' → logprob: -4.105882167816162
    5. 'result' → logprob: -5.105882167816162
    6. 'res' → logprob: -6.605882167816162
    7. 'answer' → logprob: -7.730882167816162
    8. ' for' → logprob: -8.355881690979004
    9. '```' → logprob: -8.855881690979004
    10. 'ans' → logprob: -9.230881690979004

Token 790: ' sum' (ID: 4215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9338062405586243
    2. ' for' → logprob: -1.3088061809539795
    3. 'total' → logprob: -1.8088061809539795
    4. '#' → logprob: -2.3088061809539795
    5. ' total' → logprob: -3.4338061809539795
    6. '
' → logprob: -4.183806419372559
    7. 'count' → logprob: -4.558806419372559
    8. 'print' → logprob: -4.933806419372559
    9. 's' → logprob: -5.683806419372559
    10. ' #' → logprob: -6.433806419372559

Token 791: '==' (ID: 560)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.27415093779563904
    2. '=' → logprob: -2.274150848388672
    3. 'for' → logprob: -2.899150848388672
    4. 'range' → logprob: -3.899150848388672
    5. 's' → logprob: -4.024150848388672
    6. 'from' → logprob: -4.649150848388672
    7. ' =' → logprob: -4.774150848388672
    8. 'in' → logprob: -4.899150848388672
    9. '_range' → logprob: -6.274150848388672
    10. '(range' → logprob: -6.274150848388672

Token 792: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -6.301394023466855e-05
    2. 's' → logprob: -9.875062942504883
    3. 'prod' → logprob: -12.375062942504883
    4. '
' → logprob: -12.500062942504883
    5. ' sum' → logprob: -12.875062942504883
    6. '```' → logprob: -14.125062942504883
    7. '_sum' → logprob: -16.000062942504883
    8. '_s' → logprob: -16.875062942504883
    9. '=sum' → logprob: -16.875062942504883
    10. '0' → logprob: -17.500062942504883

Token 793: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0003613256849348545
    2. 's' → logprob: -8.250361442565918
    3. '_' → logprob: -9.375361442565918
    4. 'for' → logprob: -12.250361442565918
    5. 'from' → logprob: -13.500361442565918
    6. '```' → logprob: -13.500361442565918
    7. '=' → logprob: -13.750361442565918
    8. '+' → logprob: -13.750361442565918
    9. '_
' → logprob: -14.250361442565918
    10. '#' → logprob: -14.750361442565918

Token 794: ' separately' (ID: 37741)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5767531394958496
    2. 'for' → logprob: -1.5767531394958496
    3. 'count' → logprob: -1.7017531394958496
    4. 'result' → logprob: -3.7017531394958496
    5. '#' → logprob: -4.57675313949585
    6. '
' → logprob: -4.70175313949585
    7. 'res' → logprob: -6.20175313949585
    8. 'answer' → logprob: -6.70175313949585
    9. ' for' → logprob: -7.45175313949585
    10. 'def' → logprob: -8.076753616333008

Token 795: '

' (ID: 279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3378390073776245
    2. 'total' → logprob: -1.8378390073776245
    3. 'less' → logprob: -1.9628390073776245
    4. 'res' → logprob: -1.9628390073776245
    5. 'answer' → logprob: -1.9628390073776245
    6. 'result' → logprob: -2.087839126586914
    7. 'count' → logprob: -3.462839126586914
    8. 'def' → logprob: -7.337839126586914
    9. 'for' → logprob: -7.712839126586914
    10. 'cnt' → logprob: -8.462839126586914

Token 796: '#' (ID: 2)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9203591346740723
    2. 'result' → logprob: -1.7953591346740723
    3. 'total' → logprob: -2.0453591346740723
    4. 'count' → logprob: -2.2953591346740723
    5. 'less' → logprob: -2.4203591346740723
    6. 'ans' → logprob: -3.1703591346740723
    7. 'answer' → logprob: -3.5453591346740723
    8. '#' → logprob: -3.6703591346740723
    9. 'def' → logprob: -4.045359134674072
    10. 'for' → logprob: -6.420359134674072

Token 797: ' count' (ID: 3605)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0748227834701538
    2. 'ans' → logprob: -1.3248227834701538
    3. 'result' → logprob: -1.5748227834701538
    4. 'answer' → logprob: -2.3248229026794434
    5. 'total' → logprob: -2.8248229026794434
    6. 'def' → logprob: -4.199822902679443
    7. 'less' → logprob: -4.574822902679443
    8. 'count' → logprob: -5.824822902679443
    9. '#' → logprob: -8.324822425842285
    10. 'below' → logprob: -9.949822425842285

Token 798: ' sequences' (ID: 45665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4771488308906555
    2. '_less' → logprob: -1.2271487712860107
    3. ' =' → logprob: -3.2271487712860107
    4. 'less' → logprob: -3.4771487712860107
    5. '_sequences' → logprob: -4.72714900970459
    6. 'total' → logprob: -6.10214900970459
    7. '_' → logprob: -6.72714900970459
    8. '_sm' → logprob: -7.10214900970459
    9. '_lt' → logprob: -7.10214900970459
    10. '_total' → logprob: -7.35214900970459

Token 799: ' with' (ID: 483)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.49146679043769836
    2. '=' → logprob: -0.991466760635376
    3. '_less' → logprob: -4.491466999053955
    4. 'total' → logprob: -5.616466999053955
    5. 'ans' → logprob: -6.991466999053955
    6. 'result' → logprob: -8.241466522216797
    7. 'lt' → logprob: -8.366466522216797
    8. ' =' → logprob: -8.616466522216797
    9. '_lt' → logprob: -8.991466522216797
    10. 'res' → logprob: -9.241466522216797

Token 800: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06793203949928284
    2. 'length' → logprob: -2.81793212890625
    3. 'total' → logprob: -6.19293212890625
    4. 'digits' → logprob: -6.31793212890625
    5. 'strict' → logprob: -7.69293212890625
    6. 'sm' → logprob: -7.94293212890625
    7. 'less' → logprob: -8.06793212890625
    8. ' sum' → logprob: -8.31793212890625
    9. '#' → logprob: -8.44293212890625
    10. 'def' → logprob: -9.31793212890625

Token 801: ' <' (ID: 464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17734861373901367
    2. ' =' → logprob: -2.4273486137390137
    3. '_less' → logprob: -3.4273486137390137
    4. 'in' → logprob: -4.052348613739014
    5. 'from' → logprob: -5.552348613739014
    6. '<' → logprob: -5.677348613739014
    7. 'less' → logprob: -5.802348613739014
    8. ' in' → logprob: -6.302348613739014
    9. 'sum' → logprob: -6.302348613739014
    10. '_s' → logprob: -6.677348613739014

Token 802: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.004099654499441385
    2. ' sum' → logprob: -5.5040998458862305
    3. '
' → logprob: -11.12909984588623
    4. '(sum' → logprob: -12.37909984588623
    5. '=sum' → logprob: -13.87909984588623
    6. 's' → logprob: -14.25409984588623
    7. '```' → logprob: -15.62909984588623
    8. ' ' → logprob: -15.75409984588623
    9. '   ' → logprob: -15.87909984588623
    10. '_sum' → logprob: -16.379098892211914

Token 803: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.02514415606856346
    2. '_' → logprob: -4.400144100189209
    3. 's' → logprob: -4.525144100189209
    4. 'd' → logprob: -7.150144100189209
    5. '_sum' → logprob: -7.650144100189209
    6. ' =' → logprob: -8.650144577026367
    7. '_d' → logprob: -9.275144577026367
    8. 'sum' → logprob: -10.525144577026367
    9. '=' → logprob: -11.150144577026367
    10. '_less' → logprob: -11.150144577026367

Token 804: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.21534442901611328
    2. 'count' → logprob: -1.9653444290161133
    3. 'result' → logprob: -3.9653444290161133
    4. 'res' → logprob: -4.215344429016113
    5. 'ans' → logprob: -4.215344429016113
    6. 'answer' → logprob: -5.840344429016113
    7. 'less' → logprob: -6.215344429016113
    8. '```' → logprob: -9.215344429016113
    9. 'cnt' → logprob: -9.340344429016113
    10. 'for' → logprob: -11.465344429016113

Token 805: 'ans' (ID: 616)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9487574100494385
    2. 'ans' → logprob: -1.4487574100494385
    3. 'result' → logprob: -2.1987574100494385
    4. 'res' → logprob: -2.1987574100494385
    5. 'count' → logprob: -2.4487574100494385
    6. 'answer' → logprob: -2.9487574100494385
    7. 'less' → logprob: -4.198757171630859
    8. '```' → logprob: -6.198757171630859
    9. 'cnt' → logprob: -9.32375717163086
    10. '``' → logprob: -10.44875717163086

Token 806: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759462714195251
    2. '=' → logprob: -0.8259462714195251
    3. '_' → logprob: -12.325945854187012
    4. ' ' → logprob: -13.825945854187012
    5. ' +=' → logprob: -14.325945854187012
    6. '_=' → logprob: -15.450945854187012
    7. ' =
' → logprob: -15.575945854187012
    8. '+=' → logprob: -16.575946807861328
    9. ',' → logprob: -16.825946807861328
    10. ')' → logprob: -16.950946807861328

Token 807: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007202956476248801
    2. 'sum' → logprob: -7.250720500946045
    3. ' ' → logprob: -12.125720024108887
    4. 'dp' → logprob: -12.375720024108887
    5. ' sum' → logprob: -14.750720024108887
    6. '```' → logprob: -16.125720977783203
    7. '
' → logprob: -17.625720977783203
    8. '   ' → logprob: -18.000720977783203
    9. 's' → logprob: -18.000720977783203
    10. 'int' → logprob: -18.250720977783203

Token 808: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005541055579669774
    2. 'sum' → logprob: -7.500554084777832
    3. 'dp' → logprob: -14.125554084777832
    4. ' ' → logprob: -15.250554084777832
    5. '```' → logprob: -16.62555503845215
    6. '
' → logprob: -17.37555503845215
    7. ' sum' → logprob: -17.50055503845215
    8. 'ans' → logprob: -18.25055503845215
    9. 's' → logprob: -18.50055503845215
    10. '``' → logprob: -18.62555503845215

Token 809: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.4272752852994017e-05
    2. ' for' → logprob: -10.75002384185791
    3. '
' → logprob: -13.12502384185791
    4. '```' → logprob: -15.00002384185791
    5. 'sum' → logprob: -15.37502384185791
    6. 'ans' → logprob: -15.75002384185791
    7. '``' → logprob: -18.250024795532227
    8. 'i' → logprob: -18.500024795532227
    9. 'from' → logprob: -19.250024795532227
    10. ')' → logprob: -19.875024795532227

Token 810: 'memo' (ID: 113822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9623810658231378e-05
    2. 'ans' → logprob: -11.625020027160645
    3. '```' → logprob: -11.625020027160645
    4. ' for' → logprob: -13.750020027160645
    5. '
' → logprob: -14.500020027160645
    6. 'sum' → logprob: -16.875019073486328
    7. '``' → logprob: -16.875019073486328
    8. 'i' → logprob: -18.250019073486328
    9. '#' → logprob: -18.875019073486328
    10. 'from' → logprob: -20.250019073486328

Token 811: '_sp' (ID: 18491)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1460622400045395
    2. ' =' → logprob: -2.146062135696411
    3. '_' → logprob: -4.52106237411499
    4. '.setdefault' → logprob: -5.77106237411499
    5. '={}' → logprob: -7.14606237411499
    6. '_cache' → logprob: -7.27106237411499
    7. '[' → logprob: -7.27106237411499
    8. '.' → logprob: -7.39606237411499
    9. '_=' → logprob: -8.396061897277832
    10. ')' → logprob: -8.396061897277832

Token 812: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.507875382900238
    2. ' =' → logprob: -1.5078754425048828
    3. '_sum' → logprob: -3.132875442504883
    4. '_' → logprob: -3.257875442504883
    5. '={}' → logprob: -3.632875442504883
    6. '_states' → logprob: -4.132875442504883
    7. '=[]' → logprob: -4.257875442504883
    8. '.setdefault' → logprob: -4.382875442504883
    9. '={}
' → logprob: -5.632875442504883
    10. '={
' → logprob: -5.882875442504883

Token 813: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.810037742368877e-05
    2. 'dict' → logprob: -10.250038146972656
    3. '{' → logprob: -13.500038146972656
    4. '{}
' → logprob: -13.750038146972656
    5. '{}

' → logprob: -15.750038146972656
    6. '{})' → logprob: -16.875038146972656
    7. ' {}' → logprob: -17.500038146972656
    8. '{}\' → logprob: -17.750038146972656
    9. '={}' → logprob: -17.875038146972656
    10. '[' → logprob: -18.625038146972656

Token 814: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020520923135336488
    2. 'def' → logprob: -8.875205039978027
    3. 'sum' → logprob: -10.625205039978027
    4. ' for' → logprob: -10.875205039978027
    5. '```' → logprob: -11.125205039978027
    6. '
' → logprob: -12.500205039978027
    7. 'range' → logprob: -14.125205039978027
    8. 'i' → logprob: -14.500205039978027
    9. 'next' → logprob: -14.875205039978027
    10. 'from' → logprob: -14.875205039978027

Token 815: ' dfs' (ID: 51252)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.020609859377145767
    2. 'dfs' → logprob: -4.3956098556518555
    3. 'solve' → logprob: -5.8956098556518555
    4. 'dp' → logprob: -5.8956098556518555
    5. ' count' → logprob: -7.1456098556518555
    6. 'go' → logprob: -7.6456098556518555
    7. 'calc' → logprob: -7.7706098556518555
    8. 'less' → logprob: -8.395609855651855
    9. 'f' → logprob: -8.520609855651855
    10. 'search' → logprob: -9.145609855651855

Token 816: '_sum' (ID: 29859)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.43078532814979553
    2. '_sum' → logprob: -1.4307852983474731
    3. '_d' → logprob: -2.6807854175567627
    4. '(' → logprob: -3.8057854175567627
    5. '_dp' → logprob: -4.680785179138184
    6. '_' → logprob: -6.055785179138184
    7. '(dp' → logprob: -6.555785179138184
    8. 'dfs' → logprob: -6.805785179138184
    9. '_depth' → logprob: -6.805785179138184
    10. '_pos' → logprob: -6.930785179138184

Token 817: '_prod' (ID: 78031)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3088195025920868
    2. '(pos' → logprob: -2.308819532394409
    3. '_' → logprob: -2.808819532394409
    4. '_count' → logprob: -3.058819532394409
    5. '(' → logprob: -3.433819532394409
    6. '_pos' → logprob: -4.80881929397583
    7. '_s' → logprob: -4.93381929397583
    8. '_d' → logprob: -6.30881929397583
    9. '(count' → logprob: -6.80881929397583
    10. '):' → logprob: -7.30881929397583

Token 818: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.006875806488096714
    2. '(' → logprob: -5.006875991821289
    3. '(depth' → logprob: -10.006875991821289
    4. '(d' → logprob: -11.131875991821289
    5. '_' → logprob: -11.131875991821289
    6. '(dp' → logprob: -11.506875991821289
    7. '```' → logprob: -11.506875991821289
    8. '_(' → logprob: -11.881875991821289
    9. '[pos' → logprob: -12.006875991821289
    10. '_pos' → logprob: -12.006875991821289

Token 819: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.910643762443215e-05
    2. ',pos' → logprob: -10.500079154968262
    3. ' ,' → logprob: -10.750079154968262
    4. ',s' → logprob: -11.750079154968262
    5. ',int' → logprob: -12.375079154968262
    6. ',d' → logprob: -12.875079154968262
    7. ',p' → logprob: -13.000079154968262
    8. '   ' → logprob: -13.250079154968262
    9. '‌,' → logprob: -13.250079154968262
    10. ',state' → logprob: -13.625079154968262

Token 820: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00771025475114584
    2. ' sum' → logprob: -4.8827104568481445
    3. 's' → logprob: -10.757710456848145
    4. 'ans' → logprob: -11.382710456848145
    5. '   ' → logprob: -12.007710456848145
    6. 'max' → logprob: -12.132710456848145
    7. ' ' → logprob: -12.132710456848145
    8. 'target' → logprob: -12.257710456848145
    9. 'limit' → logprob: -12.632710456848145
    10. ')' → logprob: -12.757710456848145

Token 821: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012278467183932662
    2. ',' → logprob: -7.001227855682373
    3. 'def' → logprob: -9.126227378845215
    4. '):' → logprob: -9.376227378845215
    5. ')' → logprob: -10.126227378845215
    6. '_d' → logprob: -10.876227378845215
    7. 's' → logprob: -11.251227378845215
    8. '):
' → logprob: -11.626227378845215
    9. '   ' → logprob: -12.126227378845215
    10. '  ' → logprob: -12.376227378845215

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.125210297293961e-05
    2. ',d' → logprob: -10.500081062316895
    3. ' ,' → logprob: -11.125081062316895
    4. ',int' → logprob: -11.250081062316895
    5. ',p' → logprob: -11.875081062316895
    6. ',pos' → logprob: -12.500081062316895
    7. ',k' → logprob: -13.000081062316895
    8. ',n' → logprob: -13.000081062316895
    9. ',state' → logprob: -13.000081062316895
    10. '   ' → logprob: -14.125081062316895

Token 823: ' pro' (ID: 440)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.023739203810691833
    2. 'prod' → logprob: -3.7737390995025635
    3. ' pro' → logprob: -8.773738861083984
    4. 'tuple' → logprob: -9.273738861083984
    5. ' prod' → logprob: -9.898738861083984
    6. 'pos' → logprob: -10.148738861083984
    7. ')' → logprob: -10.398738861083984
    8. '(pro' → logprob: -10.898738861083984
    9. 'pr' → logprob: -11.023738861083984
    10. 'pf' → logprob: -11.023738861083984

Token 824: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.5801661610603333
    2. 'd' → logprob: -0.8301661610603333
    3. 'fd' → logprob: -6.205166339874268
    4. 'f' → logprob: -6.580166339874268
    5. 'dfs' → logprob: -7.205166339874268
    6. 'fds' → logprob: -10.45516586303711
    7. '_df' → logprob: -11.95516586303711
    8. 'dfa' → logprob: -12.08016586303711
    9. '_fd' → logprob: -12.33016586303711
    10. 'dr' → logprob: -12.58016586303711

Token 825: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.663151741027832
    2. '):' → logprob: -1.038151741027832
    3. ',' → logprob: -2.038151741027832
    4. '   ' → logprob: -8.788151741027832
    5. '):

' → logprob: -9.163151741027832
    6. '):
' → logprob: -9.788151741027832
    7. ')' → logprob: -9.913151741027832
    8. ',p' → logprob: -11.913151741027832
    9. ',user' → logprob: -12.788151741027832
    10. ':' → logprob: -13.038151741027832

Token 826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014472213573753834
    2. '	if' → logprob: -4.889472007751465
    3. ' if' → logprob: -5.139472007751465
    4. 'if' → logprob: -7.639472007751465
    5. '```' → logprob: -7.889472007751465
    6. '\t' → logprob: -9.514472007751465
    7. '	key' → logprob: -10.889472007751465
    8. '	for' → logprob: -11.639472007751465
    9. '   ' → logprob: -12.514472007751465
    10. '	return' → logprob: -12.639472007751465

Token 827: ' key' (ID: 2140)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21834658086299896
    2. '   ' → logprob: -2.21834659576416
    3. 'key' (adapté à ' key') → logprob: -2.96834659576416
    4. ' if' → logprob: -3.34334659576416
    5. ' key' → logprob: -7.84334659576416
    6. '	if' → logprob: -8.46834659576416
    7. '	key' → logprob: -10.84334659576416
    8. '```' → logprob: -11.09334659576416
    9. '       ' → logprob: -11.71834659576416
    10. 'indent' → logprob: -12.34334659576416

Token 828: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06201675161719322
    2. ' =' → logprob: -2.812016725540161
    3. ',' → logprob: -10.812016487121582
    4. '=(' → logprob: -11.687016487121582
    5. '=
' → logprob: -11.812016487121582
    6. '=('' → logprob: -12.187016487121582
    7. ')' → logprob: -12.437016487121582
    8. '   ' → logprob: -13.687016487121582
    9. ')=' → logprob: -14.312016487121582
    10. '=("' → logprob: -14.312016487121582

Token 829: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.01416798122227192
    2. ' (' → logprob: -4.264167785644531
    3. '   ' → logprob: -13.389167785644531
    4. '(' → logprob: -13.889167785644531
    5. 'pos' → logprob: -14.139167785644531
    6. '[pos' → logprob: -14.639167785644531
    7. '(Pos' → logprob: -15.014167785644531
    8. ',pos' → logprob: -15.514167785644531
    9. ' pos' → logprob: -15.764167785644531
    10. ' ' → logprob: -16.13916778564453

Token 830: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.9361264946837764e-07
    2. ' pos' → logprob: -15.75
    3. '(pos' → logprob: -18.75
    4. '   ' → logprob: -22.875
    5. 'position' → logprob: -23.0
    6. 'p' → logprob: -24.0
    7. '	pos' → logprob: -24.25
    8. '_pos' → logprob: -24.5
    9. ',pos' → logprob: -25.75
    10. 'Pos' → logprob: -26.0

Token 831: ',sum' (ID: 169036)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002549024939071387
    2. ' ,' → logprob: -9.37525463104248
    3. ',s' → logprob: -10.00025463104248
    4. ',pos' → logprob: -10.12525463104248
    5. '<|end|>' → logprob: -11.50025463104248
    6. ',int' → logprob: -11.50025463104248
    7. ',len' → logprob: -11.75025463104248
    8. ',key' → logprob: -12.00025463104248
    9. ',p' → logprob: -12.00025463104248
    10. ',sum' → logprob: -12.00025463104248

Token 832: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00019567293929867446
    2. ',' → logprob: -8.875195503234863
    3. ')' → logprob: -10.375195503234863
    4. '_d' → logprob: -12.000195503234863
    5. ')d' → logprob: -12.375195503234863
    6. '_,' → logprob: -13.250195503234863
    7. '<|end|>' → logprob: -13.250195503234863
    8. '),' → logprob: -13.375195503234863
    9. '_key' → logprob: -13.375195503234863
    10. '```' → logprob: -13.500195503234863

Token 833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026806436479091644
    2. ',key' → logprob: -3.651806354522705
    3. ',p' → logprob: -8.651806831359863
    4. ',user' → logprob: -9.651806831359863
    5. ')' → logprob: -10.276806831359863
    6. ',new' → logprob: -10.401806831359863
    7. ',pos' → logprob: -10.401806831359863
    8. ',size' → logprob: -11.026806831359863
    9. ',m' → logprob: -11.026806831359863
    10. ',len' → logprob: -11.151806831359863

Token 834: 'pro' (ID: 823)
  Prédit: 'pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -6.988221684878226e-06
    2. ' pro' → logprob: -11.875006675720215
    3. '(pro' → logprob: -19.12500762939453
    4. '	pro' → logprob: -19.62500762939453
    5. 'pr' → logprob: -20.25000762939453
    6. 'Pro' → logprob: -21.00000762939453
    7. 'prow' → logprob: -21.00000762939453
    8. 'p' → logprob: -21.12500762939453
    9. '_pro' → logprob: -21.12500762939453
    10. 'prod' → logprob: -21.12500762939453

Token 835: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.0025202499236911535
    2. 'f' → logprob: -6.1275200843811035
    3. 'd' → logprob: -8.127520561218262
    4. 'factor' → logprob: -11.502520561218262
    5. '_df' → logprob: -11.627520561218262
    6. '_f' → logprob: -11.877520561218262
    7. '_factor' → logprob: -12.502520561218262
    8. 'cf' → logprob: -13.127520561218262
    9. 'dfs' → logprob: -13.377520561218262
    10. 'dfa' → logprob: -13.627520561218262

Token 836: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001399879576638341
    2. ')
' → logprob: -6.876399993896484
    3. '):' → logprob: -8.126399993896484
    4. '):
' → logprob: -9.626399993896484
    5. ')=' → logprob: -12.751399993896484
    6. '   ' → logprob: -15.001399993896484
    7. ')

' → logprob: -15.126399993896484
    8. ')**' → logprob: -15.251399993896484
    9. '):

' → logprob: -15.376399993896484
    10. ')#' → logprob: -15.501399993896484

Token 837: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015312091272789985
    2. 'if' → logprob: -9.000153541564941
    3. ' if' → logprob: -11.000153541564941
    4. '```' → logprob: -12.250153541564941
    5. '<|end|>' → logprob: -12.750153541564941
    6. '	if' → logprob: -12.875153541564941
    7. ':' → logprob: -14.625153541564941
    8. '       ' → logprob: -14.875153541564941
    9. '    
' → logprob: -15.000153541564941
    10. '   ' → logprob: -15.125153541564941

Token 838: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0013314292300492525
    2. '   ' → logprob: -6.751331329345703
    3. ' if' → logprob: -8.751331329345703
    4. '	if' → logprob: -12.876331329345703
    5. '```' → logprob: -15.501331329345703
    6. 'global' → logprob: -15.751331329345703
    7. 'try' → logprob: -18.501331329345703
    8. '    
' → logprob: -18.626331329345703
    9. '  ' → logprob: -18.751331329345703
    10. '       ' → logprob: -19.376331329345703

Token 839: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.048653338104486465
    2. ' key' → logprob: -3.0486533641815186
    3. 'pos' → logprob: -9.673653602600098
    4. '(key' → logprob: -13.548653602600098
    5. ' pos' → logprob: -13.673653602600098
    6. '_key' → logprob: -15.673653602600098
    7. ')' → logprob: -15.798653602600098
    8. ' ' → logprob: -16.67365264892578
    9. '   ' → logprob: -16.92365264892578
    10. ' (' → logprob: -17.79865264892578

Token 840: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17503561079502106
    2. ' in' → logprob: -1.9250355958938599
    3. 'not' → logprob: -4.80003547668457
    4. ' not' → logprob: -5.17503547668457
    5. ')' → logprob: -7.92503547668457
    6. 'is' → logprob: -8.92503547668457
    7. '[' → logprob: -9.17503547668457
    8. '<|end|>' → logprob: -9.55003547668457
    9. '==' → logprob: -10.30003547668457
    10. ' is' → logprob: -10.80003547668457

Token 841: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -4.656383680412546e-05
    2. ' memo' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.500046730041504
    4. 'm' → logprob: -15.375046730041504
    5. 'dfs' → logprob: -15.625046730041504
    6. '
' → logprob: -16.125045776367188
    7. 'memory' → logprob: -17.750045776367188
    8. ' ' → logprob: -18.125045776367188
    9. '```' → logprob: -18.125045776367188
    10. 'mem' → logprob: -18.375045776367188

Token 842: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.001812629052437842
    2. ':
' → logprob: -6.75181245803833
    3. ':' → logprob: -7.62681245803833
    4. '_' → logprob: -9.501812934875488
    5. '_:' → logprob: -10.501812934875488
    6. 'sp' → logprob: -11.751812934875488
    7. '_SP' → logprob: -11.876812934875488
    8. '_s' → logprob: -12.376812934875488
    9. '):
' → logprob: -12.376812934875488
    10. '```' → logprob: -12.376812934875488

Token 843: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5989612936973572
    2. ':' → logprob: -0.8489612936973572
    3. ':return' → logprob: -3.848961353302002
    4. '   ' → logprob: -7.098961353302002
    5. '=' → logprob: -8.098960876464844
    6. 'return' → logprob: -9.223960876464844
    7. '):
' → logprob: -9.348960876464844
    8. ' and' → logprob: -10.598960876464844
    9. '==' → logprob: -10.973960876464844
    10. '       ' → logprob: -10.973960876464844

Token 844: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016118593513965607
    2. '   ' → logprob: -4.14111852645874
    3. '```' → logprob: -10.141119003295898
    4. ' return' → logprob: -10.516119003295898
    5. 'return' → logprob: -11.516119003295898
    6. ':return' → logprob: -12.516119003295898
    7. ':' → logprob: -13.516119003295898
    8. ',' → logprob: -14.891119003295898
    9. '   ' → logprob: -14.891119003295898
    10. '	   ' → logprob: -15.266119003295898

Token 845: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007855643052607775
    2. ' return' → logprob: -7.2507853507995605
    3. '   ' → logprob: -9.500785827636719
    4. '       ' → logprob: -15.125785827636719
    5. '	return' → logprob: -15.375785827636719
    6. '```' → logprob: -15.375785827636719
    7. ':return' → logprob: -16.50078582763672
    8. '{return' → logprob: -17.00078582763672
    9. '
' → logprob: -17.12578582763672
    10. ')return' → logprob: -19.00078582763672

Token 846: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.00043102685594931245
    2. ' memo' → logprob: -7.750431060791016
    3. 'm' → logprob: -15.250431060791016
    4. 'mem' → logprob: -15.875431060791016
    5. '0' → logprob: -17.625431060791016
    6. 'mime' → logprob: -18.625431060791016
    7. '.memo' → logprob: -18.750431060791016
    8. '[m' → logprob: -19.125431060791016
    9. '   ' → logprob: -19.875431060791016
    10. '```' → logprob: -20.125431060791016

Token 847: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -9.13388703338569e-06
    2. 'memo' → logprob: -11.750009536743164
    3. 'sp' → logprob: -14.625009536743164
    4. 'm' → logprob: -15.625009536743164
    5. 'p' → logprob: -15.750009536743164
    6. 'o' → logprob: -16.000009536743164
    7. 'or' → logprob: -16.375009536743164
    8. '_spi' → logprob: -17.500009536743164
    9. 'Sp' → logprob: -17.625009536743164
    10. 's' → logprob: -17.625009536743164

Token 848: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.08372597396373749
    2. '
' → logprob: -3.083725929260254
    3. '   ' → logprob: -3.583725929260254
    4. '(key' → logprob: -6.083725929260254
    5. 'key' → logprob: -6.333725929260254
    6. '```' → logprob: -6.958725929260254
    7. '=' → logprob: -7.958725929260254
    8. '    
' → logprob: -8.208725929260254
    9. ')
' → logprob: -8.458725929260254
    10. ' key' → logprob: -8.708725929260254

Token 849: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2878499925136566
    2. ')' → logprob: -1.412850022315979
    3. '   ' → logprob: -5.0378499031066895
    4. ']
' → logprob: -9.787850379943848
    5. ']' → logprob: -10.037850379943848
    6. '])
' → logprob: -10.537850379943848
    7. ' )
' → logprob: -11.537850379943848
    8. '])' → logprob: -11.787850379943848
    9. ')=' → logprob: -11.787850379943848
    10. ')]
' → logprob: -12.037850379943848

Token 850: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008764302358031273
    2. '```' → logprob: -4.758764266967773
    3. '
' → logprob: -9.508764266967773
    4. '       ' → logprob: -10.758764266967773
    5. '{
' → logprob: -11.008764266967773
    6. '``' → logprob: -11.383764266967773
    7. '    
' → logprob: -11.758764266967773
    8. ' if' → logprob: -12.633764266967773
    9. '<|end|>' → logprob: -12.883764266967773
    10. ' for' → logprob: -13.258764266967773

Token 851: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.943632960319519
    2. 'if' (adapté à ' if') → logprob: -0.943632960319519
    3. 'total' → logprob: -1.943632960319519
    4. ' if' → logprob: -3.0686330795288086
    5. 'res' → logprob: -4.318633079528809
    6. ' res' → logprob: -4.693633079528809
    7. ' total' → logprob: -4.693633079528809
    8. ' ' → logprob: -9.568633079528809
    9. 'ans' → logprob: -9.693633079528809
    10. 'ret' → logprob: -10.443633079528809

Token 852: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07889044284820557
    2. ' pos' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.703890800476074
    4. '	pos' → logprob: -16.078889846801758
    5. '_pos' → logprob: -16.703889846801758
    6. '(pos' → logprob: -16.703889846801758
    7. '.pos' → logprob: -19.078889846801758
    8. '[pos' → logprob: -19.203889846801758
    9. 'Pos' → logprob: -19.453889846801758
    10. ' ' → logprob: -19.703889846801758

Token 853: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0032669571228325367
    2. ' ==' → logprob: -5.75326681137085
    3. '==
' → logprob: -10.753267288208008
    4. ')==' → logprob: -11.253267288208008
    5. '()==' → logprob: -11.253267288208008
    6. '```' → logprob: -11.503267288208008
    7. '===' → logprob: -11.628267288208008
    8. '=' → logprob: -11.878267288208008
    9. ']==' → logprob: -12.378267288208008
    10. '==-' → logprob: -12.628267288208008

Token 854: 'n' (ID: 77)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2352385965641588e-05
    2. 'n' → logprob: -11.750012397766113
    3. ' ' → logprob: -12.375012397766113
    4. '1' → logprob: -16.500011444091797
    5. '```' → logprob: -17.125011444091797
    6. '   ' → logprob: -17.250011444091797
    7. '10' → logprob: -18.125011444091797
    8. '
' → logprob: -18.125011444091797
    9. '(' → logprob: -18.250011444091797
    10. ' n' → logprob: -18.625011444091797

Token 855: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.825690746307373
    2. ':
' → logprob: -0.825690746307373
    3. '       ' → logprob: -2.950690746307373
    4. ' and' → logprob: -3.450690746307373
    5. '   ' → logprob: -3.575690746307373
    6. 'and' → logprob: -4.825690746307373
    7. ':return' → logprob: -5.950690746307373
    8. '==' → logprob: -8.075691223144531
    9. '<|end|>' → logprob: -8.200691223144531
    10. '=' → logprob: -8.450691223144531

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008858494111336768
    2. ' if' → logprob: -7.750885963439941
    3. '   ' → logprob: -8.250885963439941
    4. 'if' → logprob: -8.750885963439941
    5. '```' → logprob: -10.625885963439941
    6. '<|end|>' → logprob: -12.875885963439941
    7. ',' → logprob: -13.625885963439941
    8. 'return' → logprob: -13.625885963439941
    9. ' for' → logprob: -14.125885963439941
    10. '{
' → logprob: -14.250885963439941

Token 857: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.156520813703537
    2. 'return' (adapté à ' return') → logprob: -2.9065208435058594
    3. '   ' → logprob: -3.5315208435058594
    4. 'if' → logprob: -3.5315208435058594
    5. ' if' → logprob: -3.6565208435058594
    6. ' return' → logprob: -5.156520843505859
    7. ' ' → logprob: -10.40652084350586
    8. 'result' → logprob: -10.78152084350586
    9. '           ' → logprob: -11.03152084350586
    10. '     ' → logprob: -11.15652084350586

Token 858: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005280109471641481
    2. '0' → logprob: -8.125528335571289
    3. 'int' → logprob: -8.500528335571289
    4. ' ' → logprob: -11.250528335571289
    5. '(' → logprob: -11.875528335571289
    6. 'sum' → logprob: -12.375528335571289
    7. 'pro' → logprob: -13.125528335571289
    8. '(pro' → logprob: -14.125528335571289
    9. 'prod' → logprob: -14.250528335571289
    10. ' int' → logprob: -14.375528335571289

Token 859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000442351185483858
    2. '0' → logprob: -8.375442504882812
    3. 'int' → logprob: -8.500442504882812
    4. '(' → logprob: -12.500442504882812
    5. ' ' → logprob: -12.625442504882812
    6. 'sum' → logprob: -14.125442504882812
    7. ' int' → logprob: -15.125442504882812
    8. '(int' → logprob: -16.000442504882812
    9. 'prod' → logprob: -16.500442504882812
    10. '
' → logprob: -16.875442504882812

Token 860: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23004822432994843
    2. '<|end|>' → logprob: -1.9800481796264648
    3. '
' → logprob: -2.980048179626465
    4. ' if' → logprob: -4.855048179626465
    5. '    
' → logprob: -6.605048179626465
    6. '```' → logprob: -6.730048179626465
    7. '<|end|>' → logprob: -6.855048179626465
    8. 'if' → logprob: -6.980048179626465
    9. ')' → logprob: -7.105048179626465
    10. '       ' → logprob: -7.230048179626465

Token 861: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01818588376045227
    2. ' sum' → logprob: -4.018186092376709
    3. '(sum' → logprob: -10.39318561553955
    4. '   ' → logprob: -12.51818561553955
    5. ' ' → logprob: -14.14318561553955
    6. '  ' → logprob: -15.26818561553955
    7. 'pro' → logprob: -15.39318561553955
    8. '	sum' → logprob: -16.143186569213867
    9. 'prod' → logprob: -16.518186569213867
    10. '(' → logprob: -16.518186569213867

Token 862: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5378072261810303
    2. 'sum' → logprob: -1.1628072261810303
    3. '==' → logprob: -2.4128072261810303
    4. '(sum' → logprob: -5.162807464599609
    5. '_sum' → logprob: -5.787807464599609
    6. ' ==' → logprob: -5.912807464599609
    7. '<=' → logprob: -7.162807464599609
    8. 's' → logprob: -7.412807464599609
    9. '=sum' → logprob: -8.53780746459961
    10. '<' → logprob: -8.53780746459961

Token 863: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0046310266479849815
    2. ' ==' → logprob: -5.379631042480469
    3. '<=' → logprob: -12.754631042480469
    4. '==
' → logprob: -12.879631042480469
    5. '()==' → logprob: -13.504631042480469
    6. '=' → logprob: -13.879631042480469
    7. '[' → logprob: -14.254631042480469
    8. ')==' → logprob: -14.379631042480469
    9. '==(' → logprob: -14.754631042480469
    10. ']==' → logprob: -14.879631042480469

Token 864: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20328910648822784
    2. 'sum' → logprob: -1.7032891511917114
    3. 'prod' → logprob: -6.453289031982422
    4. 'ans' → logprob: -9.328289031982422
    5. 's' → logprob: -9.578289031982422
    6. '==' → logprob: -10.203289031982422
    7. '=' → logprob: -11.203289031982422
    8. ' sum' → logprob: -11.203289031982422
    9. 'product' → logprob: -11.453289031982422
    10. ' ' → logprob: -11.703289031982422

Token 865: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.041248712688684464
    2. 'else' → logprob: -3.2912487983703613
    3. '   ' → logprob: -5.916248798370361
    4. '       ' → logprob: -8.166248321533203
    5. '	else' → logprob: -8.916248321533203
    6. ' and' → logprob: -10.541248321533203
    7. '    ' → logprob: -10.916248321533203
    8. 'and' → logprob: -11.791248321533203
    9. ' ' → logprob: -11.791248321533203
    10. '  ' → logprob: -11.916248321533203

Token 866: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -20.250003814697266
    4. 'False' → logprob: -20.750003814697266
    5. '۰' → logprob: -21.000003814697266
    6. '```' → logprob: -21.750003814697266
    7. '  ' → logprob: -22.500003814697266
    8. '
' → logprob: -23.187503814697266
    9. 's' → logprob: -23.375003814697266
    10. '<|end|>' → logprob: -23.687503814697266

Token 867: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۰' → logprob: -22.0
    4. '```' → logprob: -23.0
    5. '   ' → logprob: -23.75
    6. '1' → logprob: -24.125
    7. 'int' → logprob: -24.1875
    8. '000' → logprob: -24.3125
    9. '[' → logprob: -24.375
    10. '<|end|>' → logprob: -24.8125

Token 868: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00172230729367584
    2. '
' → logprob: -7.25172233581543
    3. '    
' → logprob: -7.62672233581543
    4. '<|end|>' → logprob: -8.50172233581543
    5. '```' → logprob: -9.62672233581543
    6. ')' → logprob: -10.25172233581543
    7. 'return' → logprob: -10.25172233581543
    8. '       ' → logprob: -11.25172233581543
    9. '        
' → logprob: -11.37672233581543
    10. '	return' → logprob: -11.37672233581543

Token 869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018268341955263168
    2. '<|end|>' → logprob: -9.87518310546875
    3. '```' → logprob: -10.25018310546875
    4. 'if' → logprob: -10.87518310546875
    5. ' if' → logprob: -11.12518310546875
    6. ' ' → logprob: -11.25018310546875
    7. '
' → logprob: -11.37518310546875
    8. '    
' → logprob: -11.50018310546875
    9. 'def' → logprob: -12.12518310546875
    10. ')' → logprob: -12.75018310546875

Token 870: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5152848958969116
    2. '   ' → logprob: -1.3902848958969116
    3. 'total' → logprob: -2.390285015106201
    4. ' res' → logprob: -3.390285015106201
    5. 'ans' → logprob: -3.890285015106201
    6. 'for' → logprob: -6.015285015106201
    7. ' ans' → logprob: -6.265285015106201
    8. ' total' → logprob: -6.640285015106201
    9. 'if' (adapté à ' if') → logprob: -6.890285015106201
    10. 'result' → logprob: -7.765285015106201

Token 871: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07537906616926193
    2. ' sum' → logprob: -2.7003791332244873
    3. 'pos' → logprob: -5.575378894805908
    4. ' pos' → logprob: -7.450378894805908
    5. '   ' → logprob: -7.575378894805908
    6. 'pro' → logprob: -8.700379371643066
    7. ' ' → logprob: -8.950379371643066
    8. 'not' → logprob: -10.075379371643066
    9. '  ' → logprob: -10.200379371643066
    10. '(sum' → logprob: -10.200379371643066

Token 872: 'd' (ID: 67)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24632124602794647
    2. 'd' → logprob: -1.746321201324463
    3. ' ==' → logprob: -3.746321201324463
    4. '<' → logprob: -4.621321201324463
    5. '>' → logprob: -5.621321201324463
    6. ' <' → logprob: -6.246321201324463
    7. '   ' → logprob: -6.371321201324463
    8. '!=' → logprob: -6.746321201324463
    9. '>=' → logprob: -7.871321201324463
    10. '  ' → logprob: -7.996321201324463

Token 873: '<' (ID: 27)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15660318732261658
    2. ' >' → logprob: -2.6566030979156494
    3. ' <' → logprob: -3.0316030979156494
    4. '<' → logprob: -3.9066030979156494
    5. '==' → logprob: -5.9066033363342285
    6. '0' → logprob: -6.7816033363342285
    7. '<n' → logprob: -7.1566033363342285
    8. ' ==' → logprob: -7.5316033363342285
    9. '   ' → logprob: -8.03160285949707
    10. '>=' → logprob: -8.28160285949707

Token 874: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.750009536743164
    3. 'digits' → logprob: -15.000009536743164
    4. '   ' → logprob: -15.750009536743164
    5. '```' → logprob: -16.000009536743164
    6. '=' → logprob: -16.250009536743164
    7. 'digit' → logprob: -16.312509536743164
    8. 'n' → logprob: -16.500009536743164
    9. '
' → logprob: -17.000009536743164
    10. '۰' → logprob: -17.125009536743164

Token 875: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4201473295688629
    2. ':' → logprob: -1.5451472997665405
    3. ':
' → logprob: -2.17014741897583
    4. '   ' → logprob: -4.54514741897583
    5. ' or' → logprob: -5.79514741897583
    6. ':return' → logprob: -6.79514741897583
    7. ',' → logprob: -7.79514741897583
    8. '):
' → logprob: -9.045146942138672
    9. '<|end|>' → logprob: -9.045146942138672
    10. '	' → logprob: -10.045146942138672

Token 876: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0402480773627758
    2. '       ' → logprob: -3.665248155593872
    3. '```' → logprob: -4.290247917175293
    4. ' return' → logprob: -9.665247917175293
    5. '<|end|>' → logprob: -10.415247917175293
    6. '   ' → logprob: -11.290247917175293
    7. '``' → logprob: -11.540247917175293
    8. ',' → logprob: -12.040247917175293
    9. 'return' → logprob: -12.040247917175293
    10. ' for' → logprob: -12.290247917175293

Token 877: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2520729601383209
    2. '0' → logprob: -1.5020729303359985
    3. ' return' → logprob: -8.877073287963867
    4. '   ' → logprob: -12.877073287963867
    5. '
' → logprob: -14.252073287963867
    6. ' ' → logprob: -14.502073287963867
    7. '	return' → logprob: -14.627073287963867
    8. '```' → logprob: -16.752073287963867
    9. ':return' → logprob: -17.252073287963867
    10. '1' → logprob: -17.377073287963867

Token 878: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -21.875
    5. '۰' → logprob: -22.5
    6. ' ' → logprob: -24.0
    7. '
' → logprob: -24.125
    8. '000' → logprob: -24.375
    9. 'return' → logprob: -24.5
    10. '00' → logprob: -25.125

Token 879: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.0
    3. '۰' → logprob: -23.0
    4. '000' → logprob: -24.25
    5. '00' → logprob: -24.625
    6. '```' → logprob: -24.75
    7. '   ' → logprob: -25.625
    8. 'return' → logprob: -25.625
    9. '<|end|>' → logprob: -25.875
    10. '[' → logprob: -26.125

Token 880: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008118899422697723
    2. '```' → logprob: -7.25081205368042
    3. '
' → logprob: -9.750811576843262
    4. '    
' → logprob: -11.250811576843262
    5. '<|end|>' → logprob: -11.250811576843262
    6. '   ' → logprob: -12.625811576843262
    7. ',' → logprob: -12.750811576843262
    8. '       ' → logprob: -13.750811576843262
    9. ')' → logprob: -13.750811576843262
    10. ' ' → logprob: -14.250811576843262

Token 881: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014799882774241269
    2. '```' → logprob: -9.250147819519043
    3. ' ans' → logprob: -11.125147819519043
    4. ' res' → logprob: -11.250147819519043
    5. 'total' → logprob: -11.875147819519043
    6. ' total' → logprob: -12.125147819519043
    7. '
' → logprob: -12.750147819519043
    8. 'ans' → logprob: -13.500147819519043
    9. 'res' → logprob: -13.750147819519043
    10. 'result' → logprob: -13.875147819519043

Token 882: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.21883976459503174
    2. '   ' → logprob: -2.218839645385742
    3. 'ans' → logprob: -3.343839645385742
    4. 'total' → logprob: -3.468839645385742
    5. ' res' → logprob: -3.968839645385742
    6. ' ans' → logprob: -7.468839645385742
    7. 'result' → logprob: -7.718839645385742
    8. '```' → logprob: -7.718839645385742
    9. ' total' → logprob: -8.218839645385742
    10. 'if' → logprob: -8.468839645385742

Token 883: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164566993713379
    2. ' =' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.389164924621582
    4. '=True' → logprob: -16.014163970947266
    5. 'def' → logprob: -16.889163970947266
    6. '=None' → logprob: -17.014163970947266
    7. ')' → logprob: -17.014163970947266
    8. '=[]' → logprob: -17.014163970947266
    9. ',' → logprob: -17.389163970947266
    10. '+=' → logprob: -17.514163970947266

Token 884: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.750001907348633
    4. 'dfs' → logprob: -16.500001907348633
    5. '
' → logprob: -19.250001907348633
    6. 'res' → logprob: -20.750001907348633
    7. '  ' → logprob: -20.750001907348633
    8. 'dp' → logprob: -21.250001907348633
    9. '۰' → logprob: -21.375001907348633
    10. '=' → logprob: -21.375001907348633

Token 885: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014662963803857565
    2. ' for' → logprob: -6.751466274261475
    3. 'for' → logprob: -8.376466751098633
    4. '```' → logprob: -10.126466751098633
    5. '	for' → logprob: -10.876466751098633
    6. '   ' → logprob: -12.751466751098633
    7. '
' → logprob: -13.376466751098633
    8. ',' → logprob: -14.126466751098633
    9. '<|end|>' → logprob: -14.251466751098633
    10. '       ' → logprob: -14.501466751098633

Token 886: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005794408731162548
    2. ' for' → logprob: -5.255794525146484
    3. 'for' → logprob: -7.880794525146484
    4. '```' → logprob: -9.130794525146484
    5. '	for' → logprob: -9.755794525146484
    6. '<|end|>' → logprob: -11.505794525146484
    7. '   ' → logprob: -13.630794525146484
    8. '       ' → logprob: -13.630794525146484
    9. '<|end|>' → logprob: -14.505794525146484
    10. ' ' → logprob: -14.755794525146484

Token 887: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03045862726867199
    2. '   ' → logprob: -4.030458450317383
    3. ' for' → logprob: -4.405458450317383
    4. 'digit' → logprob: -11.905458450317383
    5. 'next' → logprob: -12.405458450317383
    6. 'd' → logprob: -12.655458450317383
    7. '```' → logprob: -12.780458450317383
    8. '    
' → logprob: -13.280458450317383
    9. '	for' → logprob: -13.530458450317383
    10. 'limit' → logprob: -14.530458450317383

Token 888: ' dig' (ID: 3807)
  Prédit: ' dig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dig' → logprob: -0.6405086517333984
    2. 'dig' → logprob: -0.7655086517333984
    3. 'd' → logprob: -5.515508651733398
    4. ' digit' → logprob: -6.265508651733398
    5. 'digit' → logprob: -6.765508651733398
    6. ' d' → logprob: -7.265508651733398
    7. '   ' → logprob: -9.390508651733398
    8. ' ' → logprob: -12.890508651733398
    9. ' digi' → logprob: -13.015508651733398
    10. '```' → logprob: -13.015508651733398

Token 889: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0619683600962162
    2. 'in' → logprob: -2.8119683265686035
    3. '	in' → logprob: -16.061967849731445
    4. '```' → logprob: -16.061967849731445
    5. ' ' → logprob: -16.311967849731445
    6. '   ' → logprob: -16.561967849731445
    7. '
' → logprob: -16.811967849731445
    8. ' ' → logprob: -16.811967849731445
    9. 'd' → logprob: -17.061967849731445
    10. '1' → logprob: -17.561967849731445

Token 890: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519293427467346
    2. ' range' → logprob: -1.5019292831420898
    3. '0' → logprob: -16.251930236816406
    4. '(range' → logprob: -16.876930236816406
    5. '	range' → logprob: -17.751930236816406
    6. '10' → logprob: -17.876930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '[' → logprob: -18.751930236816406
    9. ' in' → logprob: -19.126930236816406
    10. 'in' → logprob: -19.251930236816406

Token 891: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3135426342487335
    2. '10' → logprob: -1.3135426044464111
    3. '0' → logprob: -8.313542366027832
    4. '   ' → logprob: -10.688542366027832
    5. ',' → logprob: -12.438542366027832
    6. ' ' → logprob: -12.688542366027832
    7. '(
' → logprob: -12.688542366027832
    8. '	' → logprob: -14.188542366027832
    9. '```' → logprob: -14.688542366027832
    10. '9' → logprob: -14.813542366027832

Token 892: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.52919222577475e-05
    2. '0' → logprob: -9.500075340270996
    3. '1' → logprob: -15.375075340270996
    4. ' ' → logprob: -16.37507438659668
    5. 'digit' → logprob: -17.37507438659668
    6. '   ' → logprob: -18.25007438659668
    7. '9' → logprob: -18.87507438659668
    8. ')' → logprob: -19.12507438659668
    9. '
' → logprob: -19.25007438659668
    10. '(' → logprob: -19.25007438659668

Token 893: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.016355160623788834
    2. '):' → logprob: -4.891355037689209
    3. '   ' → logprob: -5.641355037689209
    4. '       ' → logprob: -6.016355037689209
    5. ':' → logprob: -6.516355037689209
    6. '+' → logprob: -7.516355037689209
    7. ':
' → logprob: -7.766355037689209
    8. ',' → logprob: -9.266355514526367
    9. '):
' → logprob: -9.766355514526367
    10. '():
' → logprob: -10.266355514526367

Token 894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031377444975078106
    2. '<|end|>' → logprob: -8.500313758850098
    3. '        
' → logprob: -9.875313758850098
    4. '```' → logprob: -10.375313758850098
    5. ' if' → logprob: -12.000313758850098
    6. '<|end|>' → logprob: -12.125313758850098
    7. '[' → logprob: -12.500313758850098
    8. '
' → logprob: -12.750313758850098
    9. ',' → logprob: -13.000313758850098
    10. '   ' → logprob: -13.375313758850098

Token 895: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.306545227766037
    2. 'if' (adapté à ' if') → logprob: -1.8065452575683594
    3. ' if' → logprob: -2.3065452575683594
    4. '           ' → logprob: -8.80654525756836
    5. '   ' → logprob: -11.68154525756836
    6. '```' → logprob: -11.93154525756836
    7. ' new' → logprob: -12.05654525756836
    8. '	if' → logprob: -12.68154525756836
    9. 'new' → logprob: -12.80654525756836
    10. '
' → logprob: -13.43154525756836

Token 896: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20641665160655975
    2. ' sum' → logprob: -1.7064166069030762
    3. 'dig' → logprob: -6.206416606903076
    4. '   ' → logprob: -6.706416606903076
    5. ' dig' → logprob: -7.081416606903076
    6. ' ' → logprob: -8.206417083740234
    7. '  ' → logprob: -8.706417083740234
    8. 'pos' → logprob: -9.331417083740234
    9. 'digit' → logprob: -9.456417083740234
    10. '(sum' → logprob: -9.706417083740234

Token 897: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2680954337120056
    2. '>' → logprob: -2.2680954933166504
    3. ' >' → logprob: -2.2680954933166504
    4. '+' → logprob: -4.64309549331665
    5. ' <' → logprob: -4.89309549331665
    6. '<' → logprob: -5.14309549331665
    7. '>d' → logprob: -6.76809549331665
    8. ' <=' → logprob: -6.89309549331665
    9. ' +' → logprob: -7.01809549331665
    10. '<=' → logprob: -7.39309549331665

Token 898: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6218886971473694
    2. ' -' → logprob: -1.1218886375427246
    3. '-d' → logprob: -2.6218886375427246
    4. '>=' → logprob: -3.2468886375427246
    5. ' >=' → logprob: -4.121888637542725
    6. '<' → logprob: -4.996888637542725
    7. ' <' → logprob: -6.121888637542725
    8. '   ' → logprob: -8.621889114379883
    9. '==' → logprob: -9.121889114379883
    10. '-digit' → logprob: -9.121889114379883

Token 899: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -0.00010247035970678553
    2. ' dig' → logprob: -9.375102043151855
    3. 'digit' → logprob: -11.375102043151855
    4. 'digits' → logprob: -12.250102043151855
    5. '```' → logprob: -15.000102043151855
    6. '   ' → logprob: -15.125102043151855
    7. '10' → logprob: -15.625102043151855
    8. 'd' → logprob: -16.000102996826172
    9. '1' → logprob: -16.125102996826172
    10. ' ' → logprob: -16.250102996826172

Token 900: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2305138111114502
    2. ' <' → logprob: -1.7305138111114502
    3. '>=' → logprob: -3.98051381111145
    4. ' >=' → logprob: -4.605513572692871
    5. '   ' → logprob: -12.605513572692871
    6. '[' → logprob: -13.855513572692871
    7. ' ' → logprob: -14.230513572692871
    8. ')>=' → logprob: -14.230513572692871
    9. '       ' → logprob: -14.605513572692871
    10. ']>=' → logprob: -14.730513572692871

Token 901: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '=' → logprob: -17.625
    4. '
' → logprob: -18.875
    5. '۰' → logprob: -20.375
    6. '```' → logprob: -21.5
    7. '   ' → logprob: -21.875
    8. '

' → logprob: -22.1875
    9. '-' → logprob: -22.4375
    10. '1' → logprob: -22.4375

Token 902: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6813939809799194
    2. ':
' → logprob: -0.9313939809799194
    3. ':' → logprob: -2.306394100189209
    4. '       ' → logprob: -8.05639362335205
    5. ':return' → logprob: -10.05639362335205
    6. '		' → logprob: -10.93139362335205
    7. ',' → logprob: -11.05639362335205
    8. '               ' → logprob: -11.18139362335205
    9. '          ' → logprob: -11.68139362335205
    10. '):
' → logprob: -11.68139362335205

Token 903: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003920655872207135
    2. 'continue' → logprob: -9.000391960144043
    3. ' continue' → logprob: -9.500391960144043
    4. '       ' → logprob: -9.625391960144043
    5. '               ' → logprob: -9.750391960144043
    6. '```' → logprob: -10.500391960144043
    7. '		' → logprob: -11.750391960144043
    8. '<|end|>' → logprob: -12.125391960144043
    9. ':' → logprob: -12.250391960144043
    10. ':
' → logprob: -12.375391960144043

Token 904: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4939099848270416
    2. 'break' (adapté à ' break') → logprob: -1.2439099550247192
    3. 'continue' → logprob: -2.868910074234009
    4. '       ' → logprob: -3.118910074234009
    5. '	break' → logprob: -8.74390983581543
    6. '               ' → logprob: -8.86890983581543
    7. '```' → logprob: -9.61890983581543
    8. ' break' → logprob: -9.86890983581543
    9. ' continue' → logprob: -10.61890983581543
    10. '		' → logprob: -10.61890983581543

Token 905: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014846279518678784
    2. '```' → logprob: -7.001484394073486
    3. '<|end|>' → logprob: -7.876484394073486
    4. '           ' → logprob: -9.501484870910645
    5. ',' → logprob: -10.501484870910645
    6. '        
' → logprob: -11.001484870910645
    7. '\' → logprob: -11.501484870910645
    8. '[' → logprob: -11.501484870910645
    9. ':
' → logprob: -11.626484870910645
    10. ':' → logprob: -12.126484870910645

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003370438702404499
    2. '```' → logprob: -5.75337028503418
    3. '           ' → logprob: -9.12837028503418
    4. '[' → logprob: -10.25337028503418
    5. '<|end|>' → logprob: -11.00337028503418
    6. '``' → logprob: -11.62837028503418
    7. '   ' → logprob: -12.00337028503418
    8. '\' → logprob: -12.50337028503418
    9. '               ' → logprob: -12.75337028503418
    10. 'continue' → logprob: -13.62837028503418

Token 907: ' pf' (ID: 27291)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' (adapté à ' pf') → logprob: -0.5263544321060181
    2. '       ' → logprob: -0.9013544321060181
    3. 'new' → logprob: -6.4013543128967285
    4. '           ' → logprob: -6.9013543128967285
    5. ' pf' → logprob: -8.651354789733887
    6. 'res' → logprob: -9.151354789733887
    7. 'next' → logprob: -9.776354789733887
    8. 'key' → logprob: -9.776354789733887
    9. 'nf' → logprob: -10.151354789733887
    10. 'if' → logprob: -10.901354789733887

Token 908: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47411635518074036
    2. ' =' → logprob: -0.974116325378418
    3. '=f' → logprob: -10.724116325378418
    4. '=p' → logprob: -12.474116325378418
    5. '_f' → logprob: -12.724116325378418
    6. '_pf' → logprob: -12.724116325378418
    7. 'f' → logprob: -12.974116325378418
    8. 'pf' → logprob: -12.974116325378418
    9. '_factor' → logprob: -15.099116325378418
    10. 'new' → logprob: -15.099116325378418

Token 909: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.006747108418494463
    2. ' prime' → logprob: -5.006747245788574
    3. '(' → logprob: -10.381747245788574
    4. ' (' → logprob: -14.881747245788574
    5. '(pr' → logprob: -15.381747245788574
    6. '_prime' → logprob: -16.006746292114258
    7. 'pr' → logprob: -17.131746292114258
    8. '[' → logprob: -17.131746292114258
    9. 'principal' → logprob: -19.506746292114258
    10. 'tuple' → logprob: -19.881746292114258

Token 910: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00010270876373397186
    2. 'f' → logprob: -9.250102996826172
    3. 'Factors' → logprob: -13.250102996826172
    4. '_factor' → logprob: -13.375102996826172
    5. '(' → logprob: -13.500102996826172
    6. ')' → logprob: -14.625102996826172
    7. '_s' → logprob: -14.750102996826172
    8. '```' → logprob: -16.000102996826172
    9. '(_' → logprob: -16.125102996826172
    10. ' =' → logprob: -16.375102996826172

Token 911: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.5549806952476501
    2. 'f' → logprob: -1.054980754852295
    3. 'actors' → logprob: -2.554980754852295
    4. 'actor' → logprob: -11.554980278015137
    5. '_' → logprob: -12.929980278015137
    6. '#' → logprob: -13.429980278015137
    7. 'ctors' → logprob: -13.429980278015137
    8. 'act' → logprob: -13.679980278015137
    9. '```' → logprob: -13.804980278015137
    10. 'acters' → logprob: -13.929980278015137

Token 912: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.320199877838604e-07
    2. 'dig' → logprob: -15.125
    3. 'd' → logprob: -16.75
    4. '(' → logprob: -17.25
    5. '[d' → logprob: -18.375
    6. '((' → logprob: -19.5
    7. '   ' → logprob: -19.5
    8. '```' → logprob: -19.75
    9. ' (' → logprob: -19.875
    10. '[' → logprob: -20.0

Token 913: 'ig' (ID: 343)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -0.4085409343242645
    2. 'ig' → logprob: -1.158540964126587
    3. '(d' → logprob: -3.908540964126587
    4. 'g' → logprob: -8.033540725708008
    5. ' dig' → logprob: -8.408540725708008
    6. '+' → logprob: -8.533540725708008
    7. '[' → logprob: -8.783540725708008
    8. '(' → logprob: -8.908540725708008
    9. '```' → logprob: -8.908540725708008
    10. '{' → logprob: -10.158540725708008

Token 914: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8444881536415778e-05
    2. ' +' → logprob: -10.625028610229492
    3. ')' → logprob: -13.625028610229492
    4. '()+' → logprob: -14.125028610229492
    5. '[' → logprob: -14.250028610229492
    6. ')+' → logprob: -14.750028610229492
    7. '(' → logprob: -15.125028610229492
    8. '```' → logprob: -15.250028610229492
    9. '<|end|>' → logprob: -15.375028610229492
    10. '+
' → logprob: -16.125028610229492

Token 915: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010068230039905757
    2. '+' → logprob: -9.750101089477539
    3. '```' → logprob: -10.875101089477539
    4. '(' → logprob: -11.875101089477539
    5. ' ' → logprob: -12.125101089477539
    6. ')' → logprob: -12.125101089477539
    7. '<|end|>' → logprob: -13.875101089477539
    8. ')+' → logprob: -14.250101089477539
    9. ' +' → logprob: -14.250101089477539
    10. '`' → logprob: -14.500101089477539

Token 916: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3196256160736084
    2. ')' → logprob: -1.3196256160736084
    3. '       ' → logprob: -5.0696258544921875
    4. ')
' → logprob: -10.444625854492188
    5. ')new' → logprob: -11.069625854492188
    6. '):
' → logprob: -12.319625854492188
    7. ')

' → logprob: -13.444625854492188
    8. '),' → logprob: -13.694625854492188
    9. '<|end|>' → logprob: -14.069625854492188
    10. '   ' → logprob: -14.194625854492188

Token 917: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022841589525341988
    2. ' new' → logprob: -4.022841453552246
    3. 'new' → logprob: -5.397841453552246
    4. '<|end|>' → logprob: -9.397841453552246
    5. '```' → logprob: -10.522841453552246
    6. '[new' → logprob: -10.897841453552246
    7. '	new' → logprob: -11.647841453552246
    8. ',new' → logprob: -12.647841453552246
    9. '[' → logprob: -13.397841453552246
    10. '	' → logprob: -13.397841453552246

Token 918: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.031215310096740723
    2. ' new' → logprob: -3.531215190887451
    3. '       ' → logprob: -6.531215190887451
    4. 'n' → logprob: -12.65621566772461
    5. 'next' → logprob: -13.65621566772461
    6. 'nf' → logprob: -13.78121566772461
    7. '	new' → logprob: -14.90621566772461
    8. '```' → logprob: -15.40621566772461
    9. 'np' → logprob: -15.65621566772461
    10. '   ' → logprob: -16.65621566772461

Token 919: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0015537863364443183
    2. '_f' → logprob: -6.501554012298584
    3. '_pro' → logprob: -11.251553535461426
    4. '_key' → logprob: -11.501553535461426
    5. '_factor' → logprob: -11.501553535461426
    6. 'res' → logprob: -11.751553535461426
    7. 'factor' → logprob: -12.751553535461426
    8. '_res' → logprob: -13.126553535461426
    9. 'pro' → logprob: -13.376553535461426
    10. ' =' → logprob: -13.876553535461426

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024756586644798517
    2. ' =' → logprob: -6.002475738525391
    3. '=create' → logprob: -18.00247573852539
    4. '=
' → logprob: -19.00247573852539
    5. ')' → logprob: -19.50247573852539
    6. ')=' → logprob: -20.25247573852539
    7. ',' → logprob: -20.62747573852539
    8. '＝' → logprob: -20.87747573852539
    9. '=_' → logprob: -21.00247573852539
    10. '=sub' → logprob: -21.00247573852539

Token 921: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.001502598519437015
    2. ' add' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.376502990722656
    4. '(add' → logprob: -16.626502990722656
    5. '           ' → logprob: -17.126502990722656
    6. '       ' → logprob: -17.376502990722656
    7. '	add' → logprob: -18.501502990722656
    8. '(' → logprob: -19.751502990722656
    9. '    ' → logprob: -20.626502990722656
    10. ' ' → logprob: -20.626502990722656

Token 922: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.5048530030981055e-06
    2. 'f' → logprob: -13.750001907348633
    3. '_factor' → logprob: -15.250001907348633
    4. '```' → logprob: -16.375001907348633
    5. 'Factors' → logprob: -17.250001907348633
    6. 'def' → logprob: -17.500001907348633
    7. '(' → logprob: -17.875001907348633
    8. '[' → logprob: -18.500001907348633
    9. ')' → logprob: -18.750001907348633
    10. '\' → logprob: -19.000001907348633

Token 923: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.40722501277923584
    2. 'f' → logprob: -1.1572250127792358
    3. 'actors' → logprob: -3.9072251319885254
    4. 'Factors' → logprob: -10.657224655151367
    5. 'actor' → logprob: -11.282224655151367
    6. 'acters' → logprob: -12.157224655151367
    7. '-f' → logprob: -12.532224655151367
    8. 'act' → logprob: -13.032224655151367
    9. 'ac' → logprob: -13.907224655151367
    10. '(' → logprob: -14.532224655151367

Token 924: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.000263481488218531
    2. 'pro' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.750263214111328
    4. '(' → logprob: -14.750263214111328
    5. ' (' → logprob: -15.500263214111328
    6. '_pro' → logprob: -15.500263214111328
    7. '       ' → logprob: -16.500263214111328
    8. '	pro' → logprob: -16.750263214111328
    9. '```' → logprob: -17.375263214111328
    10. '(p' → logprob: -17.625263214111328

Token 925: 'df' (ID: 4750)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8174285292625427
    2. '(pro' → logprob: -1.5674285888671875
    3. 'pro' → logprob: -1.9424285888671875
    4. 'rof' → logprob: -2.4424285888671875
    5. 'ro' → logprob: -3.1924285888671875
    6. 'ctors' → logprob: -3.4424285888671875
    7. 'actors' → logprob: -4.3174285888671875
    8. '(' → logprob: -4.4424285888671875
    9. '_factor' → logprob: -5.0674285888671875
    10. '_f' → logprob: -5.5674285888671875

Token 926: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.695793628692627
    2. ',new' → logprob: -0.695793628692627
    3. ',p' → logprob: -6.445793628692627
    4. ',(' → logprob: -7.820793628692627
    5. ',key' → logprob: -8.445793151855469
    6. '       ' → logprob: -8.945793151855469
    7. ' ,' → logprob: -9.570793151855469
    8. '(new' → logprob: -10.070793151855469
    9. '(pro' → logprob: -10.320793151855469
    10. '   ' → logprob: -10.320793151855469

Token 927: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.91732100979425e-05
    2. '(' → logprob: -11.250039100646973
    3. '(p' → logprob: -11.625039100646973
    4. 'pf' → logprob: -11.875039100646973
    5. '(f' → logprob: -12.375039100646973
    6. '```' → logprob: -14.375039100646973
    7. ')' → logprob: -14.500039100646973
    8. '[' → logprob: -14.875039100646973
    9. 'ф' → logprob: -15.000039100646973
    10. '
' → logprob: -15.375039100646973

Token 928: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4491013288497925
    2. ')
' → logprob: -1.6991013288497925
    3. '       ' → logprob: -2.324101448059082
    4. '):
' → logprob: -2.574101448059082
    5. ',' → logprob: -6.824101448059082
    6. '):' → logprob: -6.824101448059082
    7. '           ' → logprob: -6.949101448059082
    8. '[:-' → logprob: -8.449101448059082
    9. '   ' → logprob: -8.699101448059082
    10. '[' → logprob: -8.824101448059082

Token 929: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7133641196996905e-05
    2. '```' → logprob: -11.12502670288086
    3. '           ' → logprob: -12.37502670288086
    4. '	' → logprob: -12.87502670288086
    5. '               ' → logprob: -12.87502670288086
    6. '<|end|>' → logprob: -13.87502670288086
    7. 'res' → logprob: -14.25002670288086
    8. ' res' → logprob: -15.62502670288086
    9. '[' → logprob: -15.87502670288086
    10. '                       ' → logprob: -15.87502670288086

Token 930: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0038596971426159143
    2. '       ' → logprob: -6.253859519958496
    3. ' res' → logprob: -6.253859519958496
    4. '	res' → logprob: -12.628859519958496
    5. '```' → logprob: -13.878859519958496
    6. '           ' → logprob: -14.003859519958496
    7. 'result' → logprob: -14.378859519958496
    8. '_res' → logprob: -16.378860473632812
    9. '$res' → logprob: -16.503860473632812
    10. '   ' → logprob: -16.503860473632812

Token 931: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004640880040824413
    2. ' +=' → logprob: -5.379641056060791
    3. '```' → logprob: -12.004640579223633
    4. ']+=' → logprob: -12.129640579223633
    5. '=' → logprob: -12.504640579223633
    6. '+=(' → logprob: -12.879640579223633
    7. '   ' → logprob: -13.379640579223633
    8. '+' → logprob: -14.504640579223633
    9. '+='' → logprob: -14.754640579223633
    10. '+="' → logprob: -15.129640579223633

Token 932: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00030316898482851684
    2. ' dfs' → logprob: -8.125303268432617
    3. 'dp' → logprob: -11.875303268432617
    4. 'df' → logprob: -16.625303268432617
    5. 'd' → logprob: -17.750303268432617
    6. 'memo' → logprob: -17.750303268432617
    7. '   ' → logprob: -18.375303268432617
    8. 'ans' → logprob: -18.625303268432617
    9. '
' → logprob: -19.500303268432617
    10. '0' → logprob: -19.875303268432617

Token 933: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.173704271830502e-06
    2. 'sum' → logprob: -12.75000286102295
    3. 'd' → logprob: -16.875003814697266
    4. '_sp' → logprob: -17.625003814697266
    5. ' sum' → logprob: -18.000003814697266
    6. '(' → logprob: -18.000003814697266
    7. '_key' → logprob: -18.000003814697266
    8. '_' → logprob: -18.500003814697266
    9. 'dfs' → logprob: -18.500003814697266
    10. 's' → logprob: -18.625003814697266

Token 934: '_prod' (ID: 78031)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.003149438416585326
    2. '_prod' → logprob: -5.878149509429932
    3. 'sum' → logprob: -8.628149032592773
    4. 'prod' → logprob: -9.378149032592773
    5. '(pos' → logprob: -11.003149032592773
    6. '_pos' → logprob: -11.128149032592773
    7. 'pos' → logprob: -11.378149032592773
    8. 'd' → logprob: -12.128149032592773
    9. '_pow' → logprob: -12.128149032592773
    10. '_mul' → logprob: -12.503149032592773

Token 935: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.750015258789062
    3. 'pos' → logprob: -12.375015258789062
    4. '[pos' → logprob: -14.375015258789062
    5. ',pos' → logprob: -14.500015258789062
    6. '(position' → logprob: -14.625015258789062
    7. '(
' → logprob: -14.750015258789062
    8. ' (' → logprob: -15.000015258789062
    9. ' pos' → logprob: -15.500015258789062
    10. '(n' → logprob: -15.750015258789062

Token 936: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005645881756208837
    2. ' +' → logprob: -7.7505645751953125
    3. ',pos' → logprob: -9.625564575195312
    4. ',' → logprob: -10.375564575195312
    5. '(pos' → logprob: -10.500564575195312
    6. '+,' → logprob: -13.000564575195312
    7. '(n' → logprob: -13.000564575195312
    8. '(' → logprob: -13.625564575195312
    9. '+
' → logprob: -14.375564575195312
    10. '+n' → logprob: -14.500564575195312

Token 937: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ',' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.000004768371582
    4. '(' → logprob: -15.500004768371582
    5. '```' → logprob: -15.875004768371582
    6. '
' → logprob: -16.5000057220459
    7. '+' → logprob: -17.8750057220459
    8. 'pos' → logprob: -18.5000057220459
    9. ')' → logprob: -18.6250057220459
    10. '   ' → logprob: -19.0000057220459

Token 938: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035494628828018904
    2. ',pos' → logprob: -6.628549575805664
    3. ',s' → logprob: -7.128549575805664
    4. ',sum' → logprob: -7.503549575805664
    5. ',d' → logprob: -8.128549575805664
    6. ',n' → logprob: -8.628549575805664
    7. ',new' → logprob: -9.753549575805664
    8. '(' → logprob: -9.878549575805664
    9. '```' → logprob: -10.003549575805664
    10. ',next' → logprob: -10.128549575805664

Token 939: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0015041481237858534
    2. ' sum' → logprob: -6.501503944396973
    3. '(sum' → logprob: -14.001503944396973
    4. '
' → logprob: -14.251503944396973
    5. ',sum' → logprob: -16.62650489807129
    6. 's' → logprob: -16.87650489807129
    7. '   ' → logprob: -17.37650489807129
    8. '	sum' → logprob: -17.62650489807129
    9. 'new' → logprob: -17.75150489807129
    10. ' ' → logprob: -17.87650489807129

Token 940: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008703675703145564
    2. 's' → logprob: -7.125870227813721
    3. '_s' → logprob: -10.125870704650879
    4. ',' → logprob: -12.125870704650879
    5. 'sum' → logprob: -12.500870704650879
    6. '_d' → logprob: -12.750870704650879
    7. 'prod' → logprob: -13.000870704650879
    8. 'f' → logprob: -13.250870704650879
    9. ')' → logprob: -13.375870704650879
    10. 'res' → logprob: -14.125870704650879

Token 941: '-d' (ID: 2469)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.546782374382019
    2. ',' → logprob: -1.796782374382019
    3. '-d' → logprob: -1.796782374382019
    4. ' -' → logprob: -2.7967824935913086
    5. ',sum' → logprob: -4.421782493591309
    6. '-new' → logprob: -5.296782493591309
    7. '-s' → logprob: -5.921782493591309
    8. '-sub' → logprob: -6.046782493591309
    9. '-pro' → logprob: -6.671782493591309
    10. ',d' → logprob: -6.796782493591309

Token 942: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -8.792751032160595e-05
    2. 'igits' → logprob: -10.87508773803711
    3. 'eg' → logprob: -11.25008773803711
    4. 'igit' → logprob: -11.75008773803711
    5. '```' → logprob: -12.68758773803711
    6. 'dig' → logprob: -12.68758773803711
    7. 'pf' → logprob: -12.68758773803711
    8. 'pro' → logprob: -12.68758773803711
    9. 'f' → logprob: -12.87508773803711
    10. 'if' → logprob: -13.06258773803711

Token 943: ',' (ID: 11)
  Prédit: ',new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',new' → logprob: -0.06197473779320717
    2. ',' → logprob: -2.8119747638702393
    3. 'new' → logprob: -12.56197452545166
    4. ' ,' → logprob: -12.68697452545166
    5. ',
' → logprob: -16.311975479125977
    6. ' new' → logprob: -16.311975479125977
    7. '(new' → logprob: -16.686975479125977
    8. ',n' → logprob: -16.811975479125977
    9. ',user' → logprob: -17.061975479125977
    10. ',current' → logprob: -17.061975479125977

Token 944: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0002613358374219388
    2. ' new' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.375261306762695
    4. '           ' → logprob: -19.125261306762695
    5. '
' → logprob: -19.375261306762695
    6. '(new' → logprob: -19.500261306762695
    7. ')new' → logprob: -20.000261306762695
    8. '       ' → logprob: -20.125261306762695
    9. '	new' → logprob: -20.250261306762695
    10. ' ' → logprob: -21.125261306762695

Token 945: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12183190137147903
    2. 'new' → logprob: -2.8718318939208984
    3. '_factor' → logprob: -3.6218318939208984
    4. 'ew' → logprob: -4.371831893920898
    5. 'w' → logprob: -4.371831893920898
    6. '_f' → logprob: -5.746831893920898
    7. 'res' → logprob: -6.371831893920898
    8. 'factor' → logprob: -7.746831893920898
    9. 'prod' → logprob: -8.371831893920898
    10. '(new' → logprob: -8.871831893920898

Token 946: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006768537685275078
    2. ')
' → logprob: -5.006768703460693
    3. '   ' → logprob: -9.881768226623535
    4. ')
' → logprob: -13.756768226623535
    5. '       ' → logprob: -14.881768226623535
    6. ' )' → logprob: -15.131768226623535
    7. ')return' → logprob: -15.381768226623535
    8. ')

' → logprob: -16.75676918029785
    9. ' ' → logprob: -18.13176918029785
    10. '))' → logprob: -18.25676918029785

Token 947: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001151174888946116
    2. ')' → logprob: -7.251151084899902
    3. '```' → logprob: -7.876151084899902
    4. ')
' → logprob: -10.751151084899902
    5. '
' → logprob: -12.001151084899902
    6. 'memo' → logprob: -12.126151084899902
    7. '       ' → logprob: -12.251151084899902
    8. ',' → logprob: -12.501151084899902
    9. ']' → logprob: -12.501151084899902
    10. ' memo' → logprob: -12.876151084899902

Token 948: ' memo' (ID: 46393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06048571318387985
    2. 'memo' (adapté à ' memo') → logprob: -3.310485601425171
    3. ' memo' → logprob: -4.81048583984375
    4. ')' → logprob: -4.81048583984375
    5. '```' → logprob: -5.31048583984375
    6. '       ' → logprob: -8.06048583984375
    7. ')
' → logprob: -9.06048583984375
    8. ' ' → logprob: -9.18548583984375
    9. 'return' → logprob: -9.56048583984375
    10. '``' → logprob: -10.18548583984375

Token 949: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -5.512236498361744e-07
    2. '[key' → logprob: -15.125000953674316
    3. '[' → logprob: -16.25
    4. 'sp' → logprob: -17.25
    5. '[_' → logprob: -17.375
    6. '_SP' → logprob: -17.375
    7. '```' → logprob: -17.5
    8. '	sp' → logprob: -17.625
    9. '\' → logprob: -17.875
    10. '_[' → logprob: -17.875

Token 950: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. '```' → logprob: -16.375001907348633
    4. '\[' → logprob: -16.500001907348633
    5. '[
' → logprob: -17.000001907348633
    6. '[user' → logprob: -19.625001907348633
    7. 'key' → logprob: -19.875001907348633
    8. '[token' → logprob: -20.125001907348633
    9. '[(' → logprob: -20.375001907348633
    10. ' [' → logprob: -20.375001907348633

Token 951: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36905065178871155
    2. '=' → logprob: -1.8690506219863892
    3. ']=' → logprob: -1.8690506219863892
    4. ')' → logprob: -10.994050979614258
    5. ')=' → logprob: -11.119050979614258
    6. ' =' → logprob: -11.119050979614258
    7. '[key' → logprob: -11.619050979614258
    8. ']+=' → logprob: -12.619050979614258
    9. '   ' → logprob: -12.744050979614258
    10. '```' → logprob: -13.369050979614258

Token 952: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -19.5
    3. '$res' → logprob: -24.125
    4. '	res' → logprob: -25.875
    5. '(res' → logprob: -25.875
    6. '_res' → logprob: -25.875
    7. 'return' → logprob: -26.0
    8. 're' → logprob: -26.25
    9. 'resi' → logprob: -26.875
    10. '=res' → logprob: -27.5

Token 953: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.8590300139039755e-05
    2. 'return' → logprob: -10.125048637390137
    3. '```' → logprob: -12.500048637390137
    4. ' return' → logprob: -13.500048637390137
    5. '
' → logprob: -14.000048637390137
    6. '<|end|>' → logprob: -14.250048637390137
    7. ')' → logprob: -14.375048637390137
    8. '	return' → logprob: -15.250048637390137
    9. ':return' → logprob: -15.250048637390137
    10. '       ' → logprob: -15.875048637390137

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001259398995898664
    2. 'return' → logprob: -6.7512593269348145
    3. '```' → logprob: -10.501259803771973
    4. ')' → logprob: -10.876259803771973
    5. ' return' → logprob: -11.126259803771973
    6. '<|end|>' → logprob: -11.876259803771973
    7. '	return' → logprob: -12.126259803771973
    8. '#' → logprob: -12.626259803771973
    9. '       ' → logprob: -13.251259803771973
    10. '.' → logprob: -13.376259803771973

Token 955: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1607150286436081
    2. 'return' (adapté à ' return') → logprob: -1.9107149839401245
    3. ' return' → logprob: -7.785715103149414
    4. '```' → logprob: -9.785715103149414
    5. '	return' → logprob: -11.160715103149414
    6. '
' → logprob: -13.285715103149414
    7. ':return' → logprob: -13.410715103149414
    8. '{return' → logprob: -14.785715103149414
    9. '       ' → logprob: -15.160715103149414
    10. '``' → logprob: -15.785715103149414

Token 956: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -17.75
    3. 're' → logprob: -25.5
    4. '	res' → logprob: -26.125
    5. '$res' → logprob: -26.25
    6. '(res' → logprob: -26.25
    7. '```' → logprob: -27.0
    8. 'ress' → logprob: -28.25
    9. 'resi' → logprob: -28.25
    10. '
' → logprob: -28.25

Token 957: '

' (ID: 279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1845753788948059
    2. '#' → logprob: -2.434575319290161
    3. 'for' → logprob: -2.809575319290161
    4. 'def' → logprob: -5.30957555770874
    5. 'res' → logprob: -5.43457555770874
    6. 'if' → logprob: -5.80957555770874
    7. 'next' → logprob: -5.93457555770874
    8. 'answer' → logprob: -6.68457555770874
    9. 'total' → logprob: -7.30957555770874
    10. 'result' → logprob: -7.43457555770874

Token 958: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.41157296299934387
    2. '#' → logprob: -1.6615729331970215
    3. 'for' → logprob: -2.1615729331970215
    4. 'res' → logprob: -4.0365729331970215
    5. 'def' → logprob: -5.6615729331970215
    6. 'less' → logprob: -6.0365729331970215
    7. 'count' → logprob: -6.1615729331970215
    8. 'result' → logprob: -6.5365729331970215
    9. 'if' → logprob: -6.5365729331970215
    10. 'sum' → logprob: -7.0365729331970215

Token 959: ' sum' (ID: 4215)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.49319297075271606
    2. 'for' → logprob: -1.4931929111480713
    3. '#' → logprob: -2.2431929111480713
    4. 'def' → logprob: -2.9931929111480713
    5. 'less' → logprob: -5.11819314956665
    6. 'res' → logprob: -6.74319314956665
    7. 'total' → logprob: -8.118192672729492
    8. 'from' → logprob: -8.243192672729492
    9. 'sum' → logprob: -8.368192672729492
    10. 'if' → logprob: -9.618192672729492

Token 960: ' <' (ID: 464)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.7847272157669067
    2. '_less' → logprob: -1.0347272157669067
    3. 'for' → logprob: -2.409727096557617
    4. 's' → logprob: -3.534727096557617
    5. '_' → logprob: -4.284727096557617
    6. 'ans' → logprob: -4.284727096557617
    7. '_ans' → logprob: -4.284727096557617
    8. '#' → logprob: -4.659727096557617
    9. '_=' → logprob: -6.034727096557617
    10. 'less' → logprob: -6.159727096557617

Token 961: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0002557369298301637
    2. 'ans' → logprob: -8.375255584716797
    3. ' sum' → logprob: -11.750255584716797
    4. 's' → logprob: -12.250255584716797
    5. '_sum' → logprob: -12.375255584716797
    6. 'prod' → logprob: -13.250255584716797
    7. '(sum' → logprob: -13.375255584716797
    8. '_s' → logprob: -14.000255584716797
    9. 'for' → logprob: -14.250255584716797
    10. '=sum' → logprob: -14.250255584716797

Token 962: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.012068432755768299
    2. 's' → logprob: -5.012068271636963
    3. '_ans' → logprob: -5.887068271636963
    4. 'ans' → logprob: -6.137068271636963
    5. 'for' → logprob: -8.012068748474121
    6. '_' → logprob: -10.637068748474121
    7. '=' → logprob: -11.012068748474121
    8. ' =' → logprob: -11.887068748474121
    9. '
' → logprob: -12.137068748474121
    10. '(ans' → logprob: -12.387068748474121

Token 963: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004085997585207224
    2. 'ans' → logprob: -5.504086017608643
    3. 'answer' → logprob: -12.629085540771484
    4. ' for' → logprob: -13.754085540771484
    5. '```' → logprob: -13.754085540771484
    6. 'res' → logprob: -14.504085540771484
    7. 'from' → logprob: -14.754085540771484
    8. 'total' → logprob: -14.879085540771484
    9. '
' → logprob: -15.254085540771484
    10. '``' → logprob: -16.379085540771484

Token 964: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00594017468392849
    2. 'ans' → logprob: -5.130939960479736
    3. '```' → logprob: -11.755940437316895
    4. '
' → logprob: -13.755940437316895
    5. ' for' → logprob: -14.255940437316895
    6. '``' → logprob: -14.630940437316895
    7. 'from' → logprob: -14.755940437316895
    8. 'answer' → logprob: -15.005940437316895
    9. 'total' → logprob: -15.255940437316895
    10. '`' → logprob: -16.880939483642578

Token 965: ' sm' (ID: 1765)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.22250239551067352
    2. 'sm' → logprob: -2.5975024700164795
    3. 's' → logprob: -2.9725024700164795
    4. ' sum' → logprob: -3.4725024700164795
    5. 'curr' → logprob: -4.5975022315979
    6. '_sum' → logprob: -4.7225022315979
    7. ' s' → logprob: -5.2225022315979
    8. ' sm' → logprob: -5.5975022315979
    9. 'current' → logprob: -5.9725022315979
    10. 'ss' → logprob: -6.0975022315979

Token 966: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3880709409713745
    2. ' in' → logprob: -1.1380709409713745
    3. 'i' → logprob: -6.888071060180664
    4. '_' → logprob: -9.888071060180664
    5. 'range' → logprob: -9.888071060180664
    6. ' ' → logprob: -10.263071060180664
    7. '   ' → logprob: -11.263071060180664
    8. '_in' → logprob: -11.763071060180664
    9. 'ine' → logprob: -12.513071060180664
    10. '  ' → logprob: -12.763071060180664

Token 967: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023258639499545097
    2. ' range' → logprob: -3.773258686065674
    3. '0' → logprob: -11.273258209228516
    4. 'in' → logprob: -15.773258209228516
    5. '(range' → logprob: -15.898258209228516
    6. ' in' → logprob: -16.398258209228516
    7. 'sum' → logprob: -17.273258209228516
    8. ' ' → logprob: -17.523258209228516
    9. '`' → logprob: -19.273258209228516
    10. '_range' → logprob: -19.273258209228516

Token 968: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40812698006629944
    2. '(sum' → logprob: -1.408126950263977
    3. '0' → logprob: -2.4081270694732666
    4. 'sum' → logprob: -8.408126831054688
    5. '(s' → logprob: -9.283126831054688
    6. '(max' → logprob: -9.283126831054688
    7. ' (' → logprob: -9.533126831054688
    8. '(
' → logprob: -11.533126831054688
    9. '(ans' → logprob: -11.908126831054688
    10. '1' → logprob: -11.908126831054688

Token 969: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.01337480265647173
    2. 's' → logprob: -5.1383748054504395
    3. '+' → logprob: -5.2633748054504395
    4. '(' → logprob: -7.0133748054504395
    5. '_' → logprob: -7.8883748054504395
    6. 'd' → logprob: -8.013374328613281
    7. ')' → logprob: -8.138374328613281
    8. '(_' → logprob: -8.888374328613281
    9. '(s' → logprob: -9.138374328613281
    10. ' +' → logprob: -10.388374328613281

Token 970: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23213529586791992
    2. '):
' → logprob: -1.60713529586792
    3. '+' → logprob: -5.48213529586792
    4. '(' → logprob: -6.98213529586792
    5. ':' → logprob: -7.85713529586792
    6. '   ' → logprob: -8.232135772705078
    7. ',' → logprob: -8.357135772705078
    8. ')' → logprob: -8.982135772705078
    9. '():
' → logprob: -8.982135772705078
    10. ' +' → logprob: -9.357135772705078

Token 971: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011153695173561573
    2. '   ' → logprob: -4.511153697967529
    3. ' ans' → logprob: -9.636153221130371
    4. '	ans' → logprob: -10.261153221130371
    5. '```' → logprob: -12.386153221130371
    6. '(ans' → logprob: -14.511153221130371
    7. '
' → logprob: -15.261153221130371
    8. '``' → logprob: -15.761153221130371
    9. '_ans' → logprob: -16.261154174804688
    10. 'answer' → logprob: -16.386154174804688

Token 972: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -3.128163257315464e-07
    2. ' ans' → logprob: -15.5
    3. '```' → logprob: -16.625
    4. '
' → logprob: -17.75
    5. '	ans' → logprob: -17.75
    6. '   ' → logprob: -18.5
    7. 'for' → logprob: -19.375
    8. '(ans' → logprob: -19.5
    9. 'answer' → logprob: -19.875
    10. 'anst' → logprob: -20.125

Token 973: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.126929372549057
    2. ' +=' → logprob: -2.12692928314209
    3. '+=(' → logprob: -14.37692928314209
    4. ']+=' → logprob: -14.62692928314209
    5. '   ' → logprob: -16.126930236816406
    6. '=' → logprob: -16.501930236816406
    7. '+' → logprob: -17.126930236816406
    8. '+='' → logprob: -17.376930236816406
    9. '+="' → logprob: -17.751930236816406
    10. '```' → logprob: -18.626930236816406

Token 974: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -2.7729658540920354e-05
    2. ' dfs' → logprob: -10.500027656555176
    3. 'ans' → logprob: -16.625028610229492
    4. '
' → logprob: -17.000028610229492
    5. '0' → logprob: -18.500028610229492
    6. 'df' → logprob: -18.750028610229492
    7. '   ' → logprob: -19.250028610229492
    8. 'DFS' → logprob: -19.375028610229492
    9. 'dns' → logprob: -20.375028610229492
    10. 'def' → logprob: -20.625028610229492

Token 975: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: 0.0
    2. 'sum' → logprob: -17.375
    3. '_s' → logprob: -19.125
    4. '_' → logprob: -20.75
    5. ' _' → logprob: -20.875
    6. '```' → logprob: -21.125
    7. '\' → logprob: -21.5
    8. '(_' → logprob: -21.625
    9. '_ans' → logprob: -21.625
    10. '_SUM' → logprob: -21.75

Token 976: '_prod' (ID: 78031)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00013440960901789367
    2. '_prod' → logprob: -9.500134468078613
    3. 'sum' → logprob: -9.750134468078613
    4. 'prod' → logprob: -14.125134468078613
    5. '(sum' → logprob: -15.375134468078613
    6. '_s' → logprob: -16.750133514404297
    7. 's' → logprob: -17.750133514404297
    8. 'Sum' → logprob: -17.750133514404297
    9. '```' → logprob: -17.750133514404297
    10. ' sum' → logprob: -18.000133514404297

Token 977: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00040660108788870275
    2. '(n' → logprob: -8.125406265258789
    3. '0' → logprob: -9.125406265258789
    4. ' (' → logprob: -14.000406265258789
    5. '(
' → logprob: -14.250406265258789
    6. '```' → logprob: -16.62540626525879
    7. 'n' → logprob: -17.12540626525879
    8. '(s' → logprob: -17.25040626525879
    9. '<|end|>' → logprob: -17.50040626525879
    10. '
' → logprob: -18.12540626525879

Token 978: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '(' → logprob: -19.125
    4. '
' → logprob: -19.25
    5. '```' → logprob: -20.125
    6. '۰' → logprob: -20.375
    7. ')' → logprob: -20.75
    8. '０' → logprob: -21.25
    9. '1' → logprob: -21.3125
    10. '=' → logprob: -21.5625

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31398826837539673
    2. ',n' → logprob: -1.313988208770752
    3. ',s' → logprob: -7.438988208770752
    4. ' ,' → logprob: -9.93898868560791
    5. ',len' → logprob: -10.43898868560791
    6. ',m' → logprob: -10.81398868560791
    7. ',num' → logprob: -11.81398868560791
    8. ',int' → logprob: -11.81398868560791
    9. 'n' → logprob: -12.18898868560791
    10. '   ' → logprob: -12.43898868560791

Token 980: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.013443739153444767
    2. 'n' → logprob: -4.388443946838379
    3. '0' → logprob: -7.013443946838379
    4. ' sm' → logprob: -10.763443946838379
    5. 's' → logprob: -12.138443946838379
    6. 'sum' → logprob: -13.388443946838379
    7. 'nm' → logprob: -13.888443946838379
    8. ' n' → logprob: -14.263443946838379
    9. '(sm' → logprob: -14.263443946838379
    10. 'ans' → logprob: -14.513443946838379

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03408948704600334
    2. ',(' → logprob: -3.4090895652770996
    3. '(' → logprob: -7.9090895652771
    4. ',None' → logprob: -10.284089088439941
    5. ')' → logprob: -11.534089088439941
    6. ',)' → logprob: -12.534089088439941
    7. ' ,' → logprob: -12.534089088439941
    8. '```' → logprob: -12.659089088439941
    9. ',new' → logprob: -12.784089088439941
    10. '   ' → logprob: -12.784089088439941

Token 982: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -17.25
    3. 'tuple' → logprob: -21.0
    4. 'prod' → logprob: -21.125
    5. '((' → logprob: -21.25
    6. '0' → logprob: -21.375
    7. ')' → logprob: -23.0
    8. '   ' → logprob: -23.0
    9. '(prod' → logprob: -23.375
    10. ' ' → logprob: -23.5

Token 983: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -12.87500286102295
    3. '000' → logprob: -21.625001907348633
    4. '۰' → logprob: -21.875001907348633
    5. ' ' → logprob: -22.125001907348633
    6. '[' → logprob: -22.125001907348633
    7. '{' → logprob: -22.625001907348633
    8. '```' → logprob: -23.250001907348633
    9. ')' → logprob: -23.375001907348633
    10. '０' → logprob: -23.625001907348633

Token 984: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002631238894537091
    2. '0' → logprob: -8.250263214111328
    3. ' ,' → logprob: -13.750263214111328
    4. ',
' → logprob: -14.375263214111328
    5. '   ' → logprob: -17.125263214111328
    6. '000' → logprob: -17.250263214111328
    7. ' ' → logprob: -17.500263214111328
    8. '```' → logprob: -18.125263214111328
    9. '
' → logprob: -19.625263214111328
    10. '<|end|>' → logprob: -20.000263214111328

Token 985: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. ')' → logprob: -21.0
    4. ',' → logprob: -21.625
    5. '000' → logprob: -22.125
    6. '
' → logprob: -22.375
    7. '   ' → logprob: -22.5
    8. '۰' → logprob: -23.75
    9. '  ' → logprob: -24.0
    10. '(' → logprob: -24.625

Token 986: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164102263748646
    2. ',' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.764163970947266
    4. ' ,' → logprob: -16.014163970947266
    5. '   ' → logprob: -17.764163970947266
    6. ')' → logprob: -18.014163970947266
    7. '))' → logprob: -18.139163970947266
    8. '```' → logprob: -18.139163970947266
    9. '00' → logprob: -18.764163970947266
    10. '  ' → logprob: -19.014163970947266

Token 987: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '(' → logprob: -17.750001907348633
    4. '   ' → logprob: -18.125001907348633
    5. ')' → logprob: -18.937501907348633
    6. '[' → logprob: -19.562501907348633
    7. '  ' → logprob: -19.625001907348633
    8. '۰' → logprob: -19.750001907348633
    9. '000' → logprob: -20.250001907348633
    10. '{' → logprob: -20.250001907348633

Token 988: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931696534156799
    2. '0' → logprob: -0.6931696534156799
    3. '))' → logprob: -11.443169593811035
    4. ' ,' → logprob: -11.693169593811035
    5. ' ' → logprob: -13.068169593811035
    6. ')' → logprob: -14.068169593811035
    7. ')))' → logprob: -15.443169593811035
    8. '```' → logprob: -16.19317054748535
    9. '(' → logprob: -17.06817054748535
    10. '00' → logprob: -17.19317054748535

Token 989: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.0
    3. ' ' → logprob: -16.5
    4. ')' → logprob: -17.375
    5. ')))' → logprob: -19.5
    6. '   ' → logprob: -20.5625
    7. '۰' → logprob: -20.75
    8. '000' → logprob: -21.0
    9. '(' → logprob: -21.625
    10. '00' → logprob: -21.875

Token 990: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001490716531407088
    2. ')' → logprob: -8.87514877319336
    3. '))
' → logprob: -11.87514877319336
    4. ')))' → logprob: -13.12514877319336
    5. ' ))' → logprob: -17.25014877319336
    6. '()))' → logprob: -17.50014877319336
    7. '));' → logprob: -17.50014877319336
    8. '))

' → logprob: -17.50014877319336
    9. '))+' → logprob: -17.50014877319336
    10. ')
' → logprob: -17.62514877319336

Token 991: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.516029953956604
    2. 'from' → logprob: -1.391029953956604
    3. 'def' → logprob: -2.0160298347473145
    4. 'prod' → logprob: -4.8910298347473145
    5. 'target' → logprob: -5.6410298347473145
    6. 'key' → logprob: -6.2660298347473145
    7. 'import' → logprob: -6.5160298347473145
    8. '```' → logprob: -7.1410298347473145
    9. 'pos' → logprob: -7.2660298347473145
    10. 'factor' → logprob: -7.2660298347473145

Token 992: ' Now' (ID: 6549)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33532872796058655
    2. '#' → logprob: -1.7103286981582642
    3. 'from' → logprob: -2.3353288173675537
    4. 'target' → logprob: -6.210328578948975
    5. 'import' → logprob: -6.335328578948975
    6. 'memo' → logprob: -6.460328578948975
    7. 'for' → logprob: -7.085328578948975
    8. '
' → logprob: -8.335329055786133
    9. 'key' → logprob: -8.835329055786133
    10. 'limit' → logprob: -9.085329055786133

Token 993: ' sequences' (ID: 45665)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10500741750001907
    2. 'from' → logprob: -2.8550074100494385
    3. 'def' → logprob: -3.3550074100494385
    4. 'we' → logprob: -5.980007648468018
    5. '
' → logprob: -5.980007648468018
    6. 'import' → logprob: -7.230007648468018
    7. 'for' → logprob: -7.480007648468018
    8. 'sum' → logprob: -8.23000717163086
    9. 'pos' → logprob: -8.60500717163086
    10. 'start' → logprob: -8.98000717163086

Token 994: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.15053288638591766
    2. '=' → logprob: -2.6505329608917236
    3. 'equal' → logprob: -3.9005329608917236
    4. '#' → logprob: -4.0255327224731445
    5. ' with' → logprob: -4.6505327224731445
    6. 'for' → logprob: -4.7755327224731445
    7. 'def' → logprob: -4.9005327224731445
    8. 'less' → logprob: -5.7755327224731445
    9. 'from' → logprob: -7.9005327224731445
    10. ' equal' → logprob: -8.150532722473145

Token 995: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.6087021473795176e-05
    2. ' sum' → logprob: -10.500045776367188
    3. '#' → logprob: -11.500045776367188
    4. 's' → logprob: -12.500045776367188
    5. 'exact' → logprob: -14.125045776367188
    6. '
' → logprob: -14.375045776367188
    7. '(sum' → logprob: -14.500045776367188
    8. 'prod' → logprob: -14.875045776367188
    9. 'product' → logprob: -14.875045776367188
    10. 'length' → logprob: -15.000045776367188

Token 996: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001470226445235312
    2. '=' → logprob: -6.87647008895874
    3. ' ==' → logprob: -8.376470565795898
    4. '_s' → logprob: -8.751470565795898
    5. 'equal' → logprob: -10.876470565795898
    6. '===' → logprob: -11.876470565795898
    7. '()==' → logprob: -12.001470565795898
    8. '_equal' → logprob: -12.126470565795898
    9. 's' → logprob: -12.751470565795898
    10. '==
' → logprob: -13.376470565795898

Token 997: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.692145012086257e-05
    2. ' sum' → logprob: -10.000046730041504
    3. 's' → logprob: -13.750046730041504
    4. '```' → logprob: -15.500046730041504
    5. '
' → logprob: -16.00004768371582
    6. '...' → logprob: -16.62504768371582
    7. '=sum' → logprob: -17.12504768371582
    8. '(sum' → logprob: -17.37504768371582
    9. 'prod' → logprob: -18.50004768371582
    10. '#' → logprob: -19.25004768371582

Token 998: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0004896456957794726
    2. 's' → logprob: -7.625489711761475
    3. 'sum' → logprob: -14.125489234924316
    4. '```' → logprob: -15.000489234924316
    5. 'for' → logprob: -15.125489234924316
    6. '_sum' → logprob: -15.375489234924316
    7. '#' → logprob: -17.500490188598633
    8. '=' → logprob: -17.875490188598633
    9. 'def' → logprob: -18.000490188598633
    10. 'ans' → logprob: -18.500490188598633

Token 999: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6116562485694885
    2. 'from' → logprob: -1.6116561889648438
    3. '#' → logprob: -2.1116561889648438
    4. 'memo' → logprob: -2.4866561889648438
    5. '
' → logprob: -3.1116561889648438
    6. 'import' → logprob: -5.236656188964844
    7. 'ans' → logprob: -5.986656188964844
    8. 'pos' → logprob: -8.236656188964844
    9. 'visited' → logprob: -8.736656188964844
    10. 'limit' → logprob: -8.986656188964844

Token 1000: ' product' (ID: 1888)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.4431799352169037
    2. 'def' → logprob: -1.693179965019226
    3. 'pro' → logprob: -2.5681798458099365
    4. '#' → logprob: -3.3181798458099365
    5. 'pos' → logprob: -3.5681798458099365
    6. ' prod' → logprob: -4.568180084228516
    7. 'product' → logprob: -5.068180084228516
    8. '
' → logprob: -5.193180084228516
    9. 'ans' → logprob: -5.318180084228516
    10. 'less' → logprob: -6.943180084228516

Token 1001: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2835124433040619
    2. '_factor' → logprob: -2.5335123538970947
    3. 'less' → logprob: -3.0335123538970947
    4. '_less' → logprob: -3.1585123538970947
    5. '_f' → logprob: -3.9085123538970947
    6. ' <' → logprob: -4.408512592315674
    7. '<(' → logprob: -4.658512592315674
    8. '==' → logprob: -4.783512592315674
    9. '<=' → logprob: -5.158512592315674
    10. 'factor' → logprob: -5.158512592315674

Token 1002: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -1.1994775377388578e-05
    2. ' prod' → logprob: -11.375012397766113
    3. '(prod' → logprob: -15.250012397766113
    4. 'product' → logprob: -15.625012397766113
    5. 'ans' → logprob: -16.125011444091797
    6. '.prod' → logprob: -18.375011444091797
    7. '```' → logprob: -18.750011444091797
    8. '_prod' → logprob: -19.375011444091797
    9. 'proj' → logprob: -19.500011444091797
    10. 'prof' → logprob: -19.500011444091797

Token 1003: '_s' (ID: 1278)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.46827569603919983
    2. '_s' → logprob: -1.4682756662368774
    3. 'factor' → logprob: -1.9682756662368774
    4. 's' → logprob: -5.968275547027588
    5. '_f' → logprob: -7.218275547027588
    6. '#' → logprob: -8.718276023864746
    7. 'for' → logprob: -8.718276023864746
    8. 'f' → logprob: -9.093276023864746
    9. '```' → logprob: -9.718276023864746
    10. 'def' → logprob: -9.718276023864746

Token 1004: '_factor' (ID: 43757)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.435088187456131
    2. 'from' → logprob: -1.4350881576538086
    3. 'memo' → logprob: -2.3100881576538086
    4. '
' → logprob: -4.935088157653809
    5. '@' → logprob: -5.810088157653809
    6. '#' → logprob: -5.935088157653809
    7. 'import' → logprob: -6.060088157653809
    8. 'visited' → logprob: -9.435088157653809
    9. '```' → logprob: -9.935088157653809
    10. 'ans' → logprob: -10.310088157653809

Token 1005: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18456755578517914
    2. 'memo' → logprob: -2.559567451477051
    3. 'from' → logprob: -2.684567451477051
    4. '
' → logprob: -3.934567451477051
    5. '@' → logprob: -6.559567451477051
    6. 'import' → logprob: -6.809567451477051
    7. '#' → logprob: -7.809567451477051
    8. 'visited' → logprob: -8.80956745147705
    9. 'ans' → logprob: -9.18456745147705
    10. 'key' → logprob: -10.18456745147705

Token 1006: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4732832610607147
    2. 'def' → logprob: -1.098283290863037
    3. 'memo' → logprob: -3.598283290863037
    4. '
' → logprob: -5.348283290863037
    5. 'import' → logprob: -5.348283290863037
    6. '@' → logprob: -5.348283290863037
    7. '#' → logprob: -6.723283290863037
    8. 'ans' → logprob: -8.348282814025879
    9. 'stack' → logprob: -8.973282814025879
    10. 'prefix' → logprob: -9.348282814025879

Token 1007: ' Another' (ID: 20064)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7464492917060852
    2. 'from' → logprob: -0.8714492917060852
    3. 'memo' → logprob: -2.3714492321014404
    4. 'import' → logprob: -4.8714494705200195
    5. '#' → logprob: -5.6214494705200195
    6. '@' → logprob: -6.1214494705200195
    7. '
' → logprob: -7.7464494705200195
    8. 'ans' → logprob: -9.74644947052002
    9. 'prefix' → logprob: -10.12144947052002
    10. 'visited' → logprob: -10.24644947052002

Token 1008: ' DP' (ID: 51992)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.09167362004518509
    2. '
' → logprob: -3.2166736125946045
    3. 'from' → logprob: -3.9666736125946045
    4. '@' → logprob: -3.9666736125946045
    5. 'def' → logprob: -4.716673851013184
    6. '#' → logprob: -7.591673851013184
    7. 'import' → logprob: -9.341673851013184
    8. 'cache' → logprob: -10.216673851013184
    9. '```' → logprob: -11.716673851013184
    10. 'mem' → logprob: -11.841673851013184

Token 1009: ' with' (ID: 483)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.43076884746551514
    2. 'memo' → logprob: -1.3057688474655151
    3. '@' → logprob: -2.9307689666748047
    4. 'dp' → logprob: -3.9307689666748047
    5. 'less' → logprob: -6.180768966674805
    6. '#' → logprob: -6.930768966674805
    7. 'import' → logprob: -7.055768966674805
    8. 'cache' → logprob: -7.430768966674805
    9. 'ans' → logprob: -8.305768966674805
    10. 'l' → logprob: -8.305768966674805

Token 1010: ' prod' (ID: 10207)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.11311851441860199
    2. 'from' → logprob: -2.6131184101104736
    3. 'memo' → logprob: -3.7381184101104736
    4. 'l' → logprob: -5.488118648529053
    5. 'pos' → logprob: -5.863118648529053
    6. 'def' → logprob: -6.363118648529053
    7. '
' → logprob: -7.738118648529053
    8. 'import' → logprob: -8.363118171691895
    9. 'ans' → logprob: -8.988118171691895
    10. 'visited' → logprob: -9.988118171691895

Token 1011: ' factor' (ID: 12332)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.249253749847412
    2. '_factor' → logprob: -1.624253749847412
    3. 'factor' → logprob: -1.999253749847412
    4. '_f' → logprob: -2.124253749847412
    5. 'memo' → logprob: -2.624253749847412
    6. 'from' → logprob: -2.624253749847412
    7. 'f' → logprob: -3.124253749847412
    8. 's' → logprob: -4.249253749847412
    9. '_cache' → logprob: -4.499253749847412
    10. '#' → logprob: -5.124253749847412

Token 1012: ' state' (ID: 2608)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.021841824054718018
    2. 'from' → logprob: -4.396842002868652
    3. 'dp' → logprob: -5.771842002868652
    4. 'prod' → logprob: -6.271842002868652
    5. '
' → logprob: -6.646842002868652
    6. '#' → logprob: -6.896842002868652
    7. 'ans' → logprob: -7.146842002868652
    8. '@' → logprob: -7.771842002868652
    9. 'def' → logprob: -7.896842002868652
    10. 'import' → logprob: -8.896842002868652

Token 1013: ' for' (ID: 395)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.13226166367530823
    2. 'from' → logprob: -2.5072617530822754
    3. '@' → logprob: -3.8822617530822754
    4. 'dp' → logprob: -4.132261753082275
    5. 'ans' → logprob: -6.507261753082275
    6. '
' → logprob: -6.757261753082275
    7. '#' → logprob: -6.757261753082275
    8. 'import' → logprob: -6.882261753082275
    9. 'def' → logprob: -7.757261753082275
    10. 'prod' → logprob: -9.382261276245117

Token 1014: ' sum' (ID: 4215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7303370833396912
    2. 'memo' → logprob: -1.605337142944336
    3. 'def' → logprob: -2.105337142944336
    4. 'prod' → logprob: -2.980337142944336
    5. '#' → logprob: -3.355337142944336
    6. '@' → logprob: -3.605337142944336
    7. 'less' → logprob: -3.980337142944336
    8. 'dfs' → logprob: -4.355337142944336
    9. 'the' → logprob: -4.730337142944336
    10. 'dp' → logprob: -5.105337142944336

Token 1015: '_s' (ID: 1278)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.4588090777397156
    2. '
' → logprob: -1.8338091373443604
    3. '#' → logprob: -3.2088091373443604
    4. 'ans' → logprob: -3.3338091373443604
    5. 'from' → logprob: -3.3338091373443604
    6. '=' → logprob: -3.4588091373443604
    7. 'prod' → logprob: -3.7088091373443604
    8. ' =' → logprob: -5.083808898925781
    9. 'less' → logprob: -5.333808898925781
    10. 's' → logprob: -5.583808898925781

Token 1016: '

' (ID: 279)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.38412025570869446
    2. 'from' → logprob: -1.259120225906372
    3. 'dp' → logprob: -3.634120225906372
    4. 'import' → logprob: -5.884120464324951
    5. '#' → logprob: -6.259120464324951
    6. 'prod' → logprob: -6.384120464324951
    7. '@' → logprob: -6.759120464324951
    8. 'ans' → logprob: -8.259119987487793
    9. '
' → logprob: -8.384119987487793
    10. 'def' → logprob: -8.509119987487793

Token 1017: '@' (ID: 31)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.7388182282447815
    2. 'def' → logprob: -1.1138181686401367
    3. 'from' → logprob: -1.7388181686401367
    4. 'dp' → logprob: -5.113818168640137
    5. 'prod' → logprob: -5.863818168640137
    6. 'visited' → logprob: -5.988818168640137
    7. '@' → logprob: -6.738818168640137
    8. 'import' → logprob: -6.863818168640137
    9. 'state' → logprob: -7.238818168640137
    10. '
' → logprob: -7.238818168640137

Token 1018: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. 'dat' → logprob: -18.25
    3. '
' → logprob: -20.125
    4. '@' → logprob: -21.125
    5. ' l' → logprob: -21.25
    6. 'staticmethod' → logprob: -21.5
    7. 'cache' → logprob: -22.0
    8. '```' → logprob: -23.25
    9. '@@' → logprob: -23.875
    10. 'lr' → logprob: -24.5

Token 1019: 'ru' (ID: 1942)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.061054359131958e-06
    2. 'cache' → logprob: -12.250007629394531
    3. 'lu' → logprob: -14.000007629394531
    4. '```' → logprob: -14.125007629394531
    5. 'lr' → logprob: -14.500007629394531
    6. ' l' → logprob: -15.125007629394531
    7. '@' → logprob: -15.500007629394531
    8. 'cached' → logprob: -16.00000762939453
    9. '(l' → logprob: -16.37500762939453
    10. '``' → logprob: -16.50000762939453

Token 1020: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.001118307700380683
    2. 'cache' → logprob: -7.126118183135986
    3. '_cached' → logprob: -8.126118659973145
    4. 'cached' → logprob: -11.501118659973145
    5. 'def' → logprob: -12.751118659973145
    6. 'max' → logprob: -13.626118659973145
    7. 'l' → logprob: -13.876118659973145
    8. 'dp' → logprob: -14.251118659973145
    9. '_code' → logprob: -14.876118659973145
    10. '```' → logprob: -15.001118659973145

Token 1021: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.5798749327659607
    2. 'def' → logprob: -0.8298749327659607
    3. 'None' → logprob: -5.5798749923706055
    4. '(' → logprob: -9.829874992370605
    5. '(False' → logprob: -10.454874992370605
    6. '
' → logprob: -10.704874992370605
    7. '(lambda' → logprob: -11.204874992370605
    8. '(def' → logprob: -11.329874992370605
    9. '(int' → logprob: -11.329874992370605
    10. ' def' → logprob: -12.329874992370605

Token 1022: ')
' (ID: 446)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00665841531008482
    2. ')
' → logprob: -5.256658554077148
    3. '(' → logprob: -6.881658554077148
    4. '
' → logprob: -8.506658554077148
    5. ')' → logprob: -8.881658554077148
    6. ' def' → logprob: -10.506658554077148
    7. '(def' → logprob: -11.506658554077148
    8. '(pos' → logprob: -12.006658554077148
    9. '(n' → logprob: -12.256658554077148
    10. '(None' → logprob: -13.381658554077148

Token 1023: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020771251001860946
    2. '
' → logprob: -8.500207901000977
    3. ' def' → logprob: -12.500207901000977
    4. 'dfs' → logprob: -15.500207901000977
    5. '(def' → logprob: -16.875207901000977
    6. '#' → logprob: -17.375207901000977
    7. '(' → logprob: -18.000207901000977
    8. 'dp' → logprob: -18.250207901000977
    9. 'ndef' → logprob: -18.625207901000977
    10. 'd' → logprob: -18.875207901000977

Token 1024: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.12415016442537308
    2. 'count' → logprob: -2.874150276184082
    3. 'dp' → logprob: -3.249150276184082
    4. 'def' → logprob: -3.874150276184082
    5. 'diff' → logprob: -8.749150276184082
    6. 'compare' → logprob: -8.874150276184082
    7. 'solve' → logprob: -9.124150276184082
    8. ' dfs' → logprob: -9.249150276184082
    9. 'cmp' → logprob: -10.124150276184082
    10. 'search' → logprob: -10.374150276184082

Token 1025: '_sum' (ID: 29859)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.799770176410675
    2. '_sum' → logprob: -1.0497701168060303
    3. '_prod' → logprob: -2.4247701168060303
    4. '(' → logprob: -2.7997701168060303
    5. '_product' → logprob: -3.7997701168060303
    6. '_less' → logprob: -3.7997701168060303
    7. '_f' → logprob: -7.049770355224609
    8. '_s' → logprob: -7.174770355224609
    9. 'prod' → logprob: -7.174770355224609
    10. '_equal' → logprob: -7.299770355224609

Token 1026: '_eq' (ID: 28373)
  Prédit: '_prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.007842378690838814
    2. 'prod' → logprob: -5.257842540740967
    3. '(' → logprob: -7.132842540740967
    4. '_product' → logprob: -7.257842540740967
    5. '_pro' → logprob: -8.382842063903809
    6. '<|end|>' → logprob: -8.507842063903809
    7. '(prod' → logprob: -8.632842063903809
    8. '_factor' → logprob: -8.757842063903809
    9. 'Prod' → logprob: -9.132842063903809
    10. '_' → logprob: -9.882842063903809

Token 1027: '_prod' (ID: 78031)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2134276032447815
    2. 'prod' → logprob: -2.2134275436401367
    3. '_prod' → logprob: -2.9634275436401367
    4. 'pos' → logprob: -4.338427543640137
    5. '_s' → logprob: -4.963427543640137
    6. 's' → logprob: -5.713427543640137
    7. '0' → logprob: -6.088427543640137
    8. '_eq' → logprob: -6.463427543640137
    9. '_pos' → logprob: -6.838427543640137
    10. '_sum' → logprob: -7.463427543640137

Token 1028: '_less' (ID: 154196)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.006010921206325293
    2. '_prod' → logprob: -5.756011009216309
    3. 'prod' → logprob: -7.381011009216309
    4. '(' → logprob: -7.506011009216309
    5. '_factor' → logprob: -7.756011009216309
    6. '_less' → logprob: -7.756011009216309
    7. '(prod' → logprob: -8.131011009216309
    8. 'pos' → logprob: -8.881011009216309
    9. '_pos' → logprob: -9.131011009216309
    10. 'factor' → logprob: -9.256011009216309

Token 1029: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.5213274309644476e-05
    2. 'pos' → logprob: -11.500015258789062
    3. '(' → logprob: -13.000015258789062
    4. '_pos' → logprob: -14.375015258789062
    5. '[pos' → logprob: -14.500015258789062
    6. ',pos' → logprob: -14.625015258789062
    7. 'def' → logprob: -15.125015258789062
    8. '(prod' → logprob: -15.875015258789062
    9. ' pos' → logprob: -16.000015258789062
    10. '(n' → logprob: -16.125015258789062

Token 1030: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03828968107700348
    2. ',pos' → logprob: -3.288289785385132
    3. 'pos' → logprob: -9.038290023803711
    4. '(pos' → logprob: -9.288290023803711
    5. ' ,' → logprob: -11.038290023803711
    6. ' pos' → logprob: -11.288290023803711
    7. ',sum' → logprob: -13.413290023803711
    8. ',s' → logprob: -13.663290023803711
    9. ',int' → logprob: -13.663290023803711
    10. ',p' → logprob: -14.163290023803711

Token 1031: ' pro' (ID: 440)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.034490007907152176
    2. 'prod' → logprob: -3.9094901084899902
    3. 'pro' → logprob: -4.53449010848999
    4. ' sum' → logprob: -6.03449010848999
    5. ' prod' → logprob: -7.78449010848999
    6. ' pro' → logprob: -8.659489631652832
    7. 'factor' → logprob: -10.159489631652832
    8. 'product' → logprob: -10.659489631652832
    9. 's' → logprob: -10.909489631652832
    10. '   ' → logprob: -12.159489631652832

Token 1032: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.24934300780296326
    2. 'd' → logprob: -1.6243430376052856
    3. '_factor' → logprob: -4.374342918395996
    4. 'f' → logprob: -5.374342918395996
    5. '_f' → logprob: -6.249342918395996
    6. 'factor' → logprob: -6.499342918395996
    7. '_df' → logprob: -6.624342918395996
    8. 'ds' → logprob: -6.999342918395996
    9. 'dfs' → logprob: -8.249342918395996
    10. '(df' → logprob: -9.374342918395996

Token 1033: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004667218774557114
    2. ',pos' → logprob: -5.379667282104492
    3. ' ,' → logprob: -11.254667282104492
    4. ',s' → logprob: -11.754667282104492
    5. ',f' → logprob: -11.879667282104492
    6. ',p' → logprob: -12.004667282104492
    7. ',key' → logprob: -13.004667282104492
    8. '   ' → logprob: -13.004667282104492
    9. ',sum' → logprob: -13.004667282104492
    10. 'pos' → logprob: -13.629667282104492

Token 1034: ' less' (ID: 3760)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04235883057117462
    2. 'prod' → logprob: -3.292358875274658
    3. 'limit' → logprob: -6.167358875274658
    4. 'less' → logprob: -6.792358875274658
    5. 'is' → logprob: -8.1673583984375
    6. ' sum' → logprob: -9.2923583984375
    7. '):
' → logprob: -9.6673583984375
    8. 'strict' → logprob: -9.6673583984375
    9. 'flag' → logprob: -9.9173583984375
    10. 'sm' → logprob: -10.0423583984375

Token 1035: '_flag' (ID: 25269)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1363834142684937
    2. '):' → logprob: -1.1363834142684937
    3. ',' → logprob: -1.2613834142684937
    4. '_flag' → logprob: -2.886383533477783
    5. '_than' → logprob: -4.511383533477783
    6. 'flag' → logprob: -6.386383533477783
    7. '_equal' → logprob: -6.886383533477783
    8. '_ok' → logprob: -7.261383533477783
    9. '_s' → logprob: -7.511383533477783
    10. '_allowed' → logprob: -8.011383056640625

Token 1036: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006749047315679491
    2. '):
' → logprob: -7.750674724578857
    3. ',pos' → logprob: -9.000675201416016
    4. '):' → logprob: -9.125675201416016
    5. ' ,' → logprob: -11.875675201416016
    6. ',p' → logprob: -14.250675201416016
    7. ',is' → logprob: -14.750675201416016
    8. '   ' → logprob: -15.000675201416016
    9. '):

' → logprob: -15.000675201416016
    10. ',state' → logprob: -15.125675201416016

Token 1037: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8523574471473694
    2. ',' → logprob: -1.7273573875427246
    3. ':' → logprob: -1.7273573875427246
    4. '   ' → logprob: -1.7273573875427246
    5. '```' → logprob: -4.602357387542725
    6. '(s' → logprob: -4.852357387542725
    7. ' (' → logprob: -5.852357387542725
    8. '(lambda' → logprob: -6.102357387542725
    9. '<|end|>' → logprob: -6.102357387542725
    10. '):' → logprob: -6.352357387542725

Token 1038: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.045988600701093674
    2. ':' → logprob: -3.6709885597229004
    3. ' if' → logprob: -4.2959885597229
    4. '   ' → logprob: -5.7959885597229
    5. '(' → logprob: -6.6709885597229
    6. '):' → logprob: -7.7959885597229
    7. 's' → logprob: -8.545989036560059
    8. 'pos' → logprob: -8.795989036560059
    9. '```' → logprob: -9.295989036560059
    10. 'n' → logprob: -9.295989036560059

Token 1039: ' less' (ID: 3760)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007561552803963423
    2. ' if' → logprob: -5.882561683654785
    3. '   ' → logprob: -6.507561683654785
    4. 'pos' → logprob: -6.632561683654785
    5. 'def' → logprob: -7.382561683654785
    6. 'int' → logprob: -7.507561683654785
    7. 'n' → logprob: -7.882561683654785
    8. '```' → logprob: -8.507561683654785
    9. '
' → logprob: -9.257561683654785
    10. 'sum' → logprob: -10.882561683654785

Token 1040: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.021712815389037132
    2. 'flag' → logprob: -4.896712779998779
    3. '==' → logprob: -5.771712779998779
    4. ',' → logprob: -6.146712779998779
    5. '_f' → logprob: -6.521712779998779
    6. '_factor' → logprob: -6.896712779998779
    7. '```' → logprob: -7.021712779998779
    8. 'pos' → logprob: -7.021712779998779
    9. '_flags' → logprob: -7.146712779998779
    10. '_code' → logprob: -7.521712779998779

Token 1041: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4028240442276001
    2. ',' → logprob: -1.7778240442276
    3. '=False' → logprob: -2.9028239250183105
    4. ' =' → logprob: -3.1528239250183105
    5. '):' → logprob: -3.5278239250183105
    6. '):
' → logprob: -4.7778239250183105
    7. ':' → logprob: -4.9028239250183105
    8. '=True' → logprob: -5.0278239250183105
    9. ')' → logprob: -5.1528239250183105
    10. 'def' → logprob: -5.4028239250183105

Token 1042: ' whether' (ID: 5588)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030585117638111115
    2. 'False' → logprob: -4.155585289001465
    3. 'int' → logprob: -5.155585289001465
    4. 'True' → logprob: -5.280585289001465
    5. 'bool' → logprob: -5.905585289001465
    6. '1' → logprob: -8.405585289001465
    7. ' ' → logprob: -8.780585289001465
    8. ' True' → logprob: -9.030585289001465
    9. ' False' → logprob: -9.155585289001465
    10. ' int' → logprob: -9.280585289001465

Token 1043: ' product' (ID: 1888)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2016957551240921
    2. 'True' → logprob: -1.7016957998275757
    3. 'pos' → logprob: -8.826695442199707
    4. '1' → logprob: -9.951695442199707
    5. '(True' → logprob: -10.701695442199707
    6. ' pos' → logprob: -11.076695442199707
    7. ' not' → logprob: -11.326695442199707
    8. 'False' → logprob: -11.451695442199707
    9. ' ' → logprob: -11.576695442199707
    10. ' False' → logprob: -12.076695442199707

Token 1044: ' factor' (ID: 12332)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5545758008956909
    2. '_factor' → logprob: -2.0545759201049805
    3. ',' → logprob: -3.0545759201049805
    4. '_f' → logprob: -3.1795759201049805
    5. ')' → logprob: -3.4295759201049805
    6. '_is' → logprob: -3.4295759201049805
    7. ' <' → logprob: -3.4295759201049805
    8. '   ' → logprob: -3.6795759201049805
    9. '==' → logprob: -4.3045759201049805
    10. '_less' → logprob: -4.4295759201049805

Token 1045: ' already' (ID: 4279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2203024625778198
    2. '):
' → logprob: -1.8453024625778198
    3. '<' → logprob: -1.9703024625778198
    4. ')' → logprob: -2.4703025817871094
    5. '   ' → logprob: -2.8453025817871094
    6. 'is' → logprob: -2.9703025817871094
    7. '_ex' → logprob: -3.5953025817871094
    8. '):' → logprob: -3.5953025817871094
    9. '==' → logprob: -3.7203025817871094
    10. ' is' → logprob: -4.095302581787109

Token 1046: ' less' (ID: 3760)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.2099533081054688
    2. 'less' → logprob: -1.4599533081054688
    3. 'is' → logprob: -1.8349533081054688
    4. 'known' → logprob: -2.7099533081054688
    5. 'comp' → logprob: -2.8349533081054688
    6. 'encoded' → logprob: -3.3349533081054688
    7. '<(' → logprob: -3.9599533081054688
    8. 'strict' → logprob: -4.209953308105469
    9. ' <' → logprob: -4.334953308105469
    10. 'in' → logprob: -4.459953308105469

Token 1047: ' than' (ID: 1572)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5673993825912476
    2. '):
' → logprob: -1.6923993825912476
    3. '   ' → logprob: -1.9423993825912476
    4. ':' → logprob: -2.692399501800537
    5. '):' → logprob: -4.067399501800537
    6. ':
' → logprob: -4.942399501800537
    7. '```' → logprob: -5.317399501800537
    8. ')' → logprob: -6.692399501800537
    9. ',
' → logprob: -7.067399501800537
    10. '():
' → logprob: -7.067399501800537

Token 1048: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.01951702870428562
    2. ' prod' → logprob: -4.019516944885254
    3. '   ' → logprob: -7.269516944885254
    4. ')' → logprob: -7.644516944885254
    5. 'pro' → logprob: -9.019516944885254
    6. '(prod' → logprob: -10.769516944885254
    7. ' ' → logprob: -12.019516944885254
    8. '_prod' → logprob: -12.144516944885254
    9. '  ' → logprob: -12.519516944885254
    10. '=' → logprob: -12.769516944885254

Token 1049: '_s' (ID: 1278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8434737920761108
    2. '):
' → logprob: -0.8434737920761108
    3. ',' → logprob: -2.8434739112854004
    4. '```' → logprob: -3.3434739112854004
    5. '):' → logprob: -3.9684739112854004
    6. ')' → logprob: -5.4684739112854
    7. '_s' → logprob: -5.4684739112854
    8. 'def' → logprob: -5.7184739112854
    9. '[' → logprob: -5.7184739112854
    10. '``' → logprob: -5.9684739112854

Token 1050: '_factor' (ID: 43757)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41468074917793274
    2. '):
' → logprob: -1.9146807193756104
    3. ':' → logprob: -2.4146807193756104
    4. '):' → logprob: -3.0396807193756104
    5. ':
' → logprob: -3.7896807193756104
    6. ',' → logprob: -4.2896809577941895
    7. ')' → logprob: -4.9146809577941895
    8. '(pos' → logprob: -5.1646809577941895
    9. '```' → logprob: -6.0396809577941895
    10. '[pos' → logprob: -6.5396809577941895

Token 1051: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2491374909877777
    2. ':' → logprob: -2.3741374015808105
    3. '):
' → logprob: -2.9991374015808105
    4. ':
' → logprob: -2.9991374015808105
    5. '```' → logprob: -4.4991374015808105
    6. '):' → logprob: -5.2491374015808105
    7. ',' → logprob: -5.6241374015808105
    8. '(
' → logprob: -6.7491374015808105
    9. 'def' → logprob: -7.3741374015808105
    10. '():
' → logprob: -7.3741374015808105

Token 1052: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2923765182495117
    2. '):
' → logprob: -1.6673765182495117
    3. '):' → logprob: -3.7923765182495117
    4. ')' → logprob: -4.042376518249512
    5. 'pos' → logprob: -4.667376518249512
    6. '
' → logprob: -4.792376518249512
    7. ' pos' → logprob: -5.792376518249512
    8. ')
' → logprob: -6.667376518249512
    9. ',' → logprob: -7.417376518249512
    10. '```' → logprob: -7.667376518249512

Token 1053: ' no' (ID: 860)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3566429913043976
    2. '(pos' → logprob: -2.106642961502075
    3. 'True' → logprob: -2.356642961502075
    4. 'less' → logprob: -3.481642961502075
    5. 'not' → logprob: -3.606642961502075
    6. 'we' → logprob: -4.856643199920654
    7. '(True' → logprob: -4.981643199920654
    8. ' True' → logprob: -5.856643199920654
    9. '#' → logprob: -6.606643199920654
    10. '(not' → logprob: -7.106643199920654

Token 1054: ' constraint' (ID: 44762)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.21815654635429382
    2. 'restriction' → logprob: -1.8431565761566162
    3. 'constraint' → logprob: -4.218156337738037
    4. 'limit' → logprob: -4.718156337738037
    5. 'restr' → logprob: -4.968156337738037
    6. 'constraints' → logprob: -5.593156337738037
    7. '#' → logprob: -6.843156337738037
    8. 'more' → logprob: -7.218156337738037
    9. 'check' → logprob: -7.968156337738037
    10. ' need' → logprob: -8.593156814575195

Token 1055: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04127867892384529
    2. '):
' → logprob: -3.916278600692749
    3. '```' → logprob: -4.291278839111328
    4. ',' → logprob: -5.916278839111328
    5. ':' → logprob: -6.541278839111328
    6. ':
' → logprob: -7.041278839111328
    7. '):' → logprob: -7.416278839111328
    8. ')' → logprob: -7.666278839111328
    9. '
' → logprob: -9.041278839111328
    10. 'def' → logprob: -9.166278839111328

Token 1056: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21632422506809235
    2. '```' → logprob: -2.3413243293762207
    3. ':' → logprob: -3.3413243293762207
    4. '):
' → logprob: -3.4663243293762207
    5. ':
' → logprob: -4.091324329376221
    6. ',' → logprob: -4.966324329376221
    7. '):' → logprob: -6.216324329376221
    8. ')' → logprob: -6.341324329376221
    9. '[' → logprob: -6.716324329376221
    10. '(' → logprob: -7.216324329376221

Token 1057: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8689062595367432
    2. ' if' → logprob: -0.8689062595367432
    3. ' pos' → logprob: -3.493906259536743
    4. '```' → logprob: -3.493906259536743
    5. ':' → logprob: -3.618906259536743
    6. ',' → logprob: -3.993906259536743
    7. 'if' (adapté à ' if') → logprob: -3.993906259536743
    8. '(' → logprob: -4.368906021118164
    9. ' (' → logprob: -5.368906021118164
    10. 'pos' → logprob: -5.868906021118164

Token 1058: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02324547804892063
    2. ' pos' → logprob: -3.7732455730438232
    3. '(pos' → logprob: -18.648244857788086
    4. '	pos' → logprob: -19.523244857788086
    5. '[pos' → logprob: -20.273244857788086
    6. '0' → logprob: -20.273244857788086
    7. '   ' → logprob: -20.523244857788086
    8. '_pos' → logprob: -20.648244857788086
    9. 'Pos' → logprob: -20.773244857788086
    10. '```' → logprob: -21.648244857788086

Token 1059: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.015124323777854443
    2. ' ==' → logprob: -4.265124320983887
    3. '<' → logprob: -7.640124320983887
    4. '+' → logprob: -9.765124320983887
    5. '()==' → logprob: -9.890124320983887
    6. '```' → logprob: -10.015124320983887
    7. '[' → logprob: -10.140124320983887
    8. '{' → logprob: -10.390124320983887
    9. '<int' → logprob: -10.515124320983887
    10. '<len' → logprob: -10.765124320983887

Token 1060: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4617256056226324e-05
    2. '0' → logprob: -11.250014305114746
    3. '9' → logprob: -14.375014305114746
    4. '10' → logprob: -14.750014305114746
    5. ' n' → logprob: -15.125014305114746
    6. '```' → logprob: -16.250015258789062
    7. '_n' → logprob: -16.375015258789062
    8. '   ' → logprob: -16.625015258789062
    9. '	n' → logprob: -17.250015258789062
    10. '``' → logprob: -18.875015258789062

Token 1061: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20768536627292633
    2. ':
' → logprob: -1.7076853513717651
    3. '   ' → logprob: -5.457685470581055
    4. ':return' → logprob: -6.832685470581055
    5. '       ' → logprob: -7.582685470581055
    6. '+' → logprob: -8.957685470581055
    7. '-' → logprob: -9.332685470581055
    8. ' and' → logprob: -9.957685470581055
    9. '<|end|>' → logprob: -10.582685470581055
    10. '```' → logprob: -11.332685470581055

Token 1062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1608600914478302
    2. '   ' → logprob: -1.9108600616455078
    3. ':' → logprob: -8.285860061645508
    4. '```' → logprob: -8.285860061645508
    5. ':
' → logprob: -9.535860061645508
    6. '<|end|>' → logprob: -11.410860061645508
    7. ':return' → logprob: -11.660860061645508
    8. '	return' → logprob: -12.160860061645508
    9. '           ' → logprob: -12.410860061645508
    10. '     ' → logprob: -12.660860061645508

Token 1063: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39855238795280457
    2. 'return' (adapté à ' return') → logprob: -1.148552417755127
    3. 'if' → logprob: -5.523552417755127
    4. '   ' → logprob: -5.648552417755127
    5. ' return' → logprob: -5.648552417755127
    6. '	return' → logprob: -8.398551940917969
    7. ' if' → logprob: -8.648551940917969
    8. '{return' → logprob: -9.773551940917969
    9. ':return' → logprob: -10.148551940917969
    10. '```' → logprob: -11.398551940917969

Token 1064: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013923770748078823
    2. '0' → logprob: -6.626392364501953
    3. 'int' → logprob: -10.126392364501953
    4. '(' → logprob: -11.001392364501953
    5. ' ' → logprob: -12.001392364501953
    6. 'sum' → logprob: -12.751392364501953
    7. '   ' → logprob: -15.251392364501953
    8. '
' → logprob: -16.626392364501953
    9. '(int' → logprob: -16.626392364501953
    10. 'ans' → logprob: -16.751392364501953

Token 1065: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007507824921049178
    2. '0' → logprob: -7.25075101852417
    3. 'int' → logprob: -10.625750541687012
    4. '(' → logprob: -11.125750541687012
    5. ' ' → logprob: -14.000750541687012
    6. 'sum' → logprob: -14.625750541687012
    7. 'ans' → logprob: -15.375750541687012
    8. 'pro' → logprob: -17.125751495361328
    9. '(int' → logprob: -17.250751495361328
    10. '   ' → logprob: -17.625751495361328

Token 1066: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1067: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01883968710899353
    2. '    
' → logprob: -5.2688398361206055
    3. '<|end|>' → logprob: -5.2688398361206055
    4. '```' → logprob: -5.6438398361206055
    5. ' if' → logprob: -6.3938398361206055
    6. '
' → logprob: -6.8938398361206055
    7. ')' → logprob: -7.3938398361206055
    8. 'if' → logprob: -8.143839836120605
    9. '(' → logprob: -8.643839836120605
    10. '<|end|>' → logprob: -8.768839836120605

Token 1068: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.058298058807849884
    2. ' for' → logprob: -3.558298110961914
    3. 'total' (adapté à ' total') → logprob: -4.433298110961914
    4. '   ' → logprob: -4.933298110961914
    5. 'if' → logprob: -6.183298110961914
    6. 'res' → logprob: -6.308298110961914
    7. 'next' → logprob: -6.433298110961914
    8. '```' → logprob: -6.683298110961914
    9. 'key' → logprob: -7.183298110961914
    10. ' res' → logprob: -8.183298110961914

Token 1069: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.542771577835083
    2. ' +=' → logprob: -1.667771577835083
    3. ' =' → logprob: -1.917771577835083
    4. '+=' → logprob: -3.167771577835083
    5. '+' → logprob: -3.792771577835083
    6. ' +' → logprob: -5.167771339416504
    7. '   ' → logprob: -5.417771339416504
    8. '(' → logprob: -6.542771339416504
    9. '```' → logprob: -6.792771339416504
    10. ' ' → logprob: -6.792771339416504

Token 1070: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038264848990365863
    2. ' ' → logprob: -7.875382423400879
    3. 'total' → logprob: -13.125382423400879
    4. '
' → logprob: -16.000383377075195
    5. ' total' → logprob: -16.000383377075195
    6. '   ' → logprob: -16.125383377075195
    7. 'ans' → logprob: -17.000383377075195
    8. ' ' → logprob: -17.250383377075195
    9. 'for' → logprob: -17.250383377075195
    10. 'dfs' → logprob: -17.250383377075195

Token 1071: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029470553272403777
    2. ' ' → logprob: -8.25029468536377
    3. 'total' → logprob: -10.37529468536377
    4. ' total' → logprob: -14.25029468536377
    5. 'for' → logprob: -14.62529468536377
    6. '
' → logprob: -14.62529468536377
    7. '   ' → logprob: -15.37529468536377
    8. 'dfs' → logprob: -16.250295639038086
    9. 'dp' → logprob: -16.375295639038086
    10. 'sum' → logprob: -17.000295639038086

Token 1072: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027345011476427317
    2. ' for' → logprob: -6.002734661102295
    3. 'for' → logprob: -9.002734184265137
    4. '	for' → logprob: -9.252734184265137
    5. '
' → logprob: -11.002734184265137
    6. '```' → logprob: -12.002734184265137
    7. '    
' → logprob: -12.377734184265137
    8. ',' → logprob: -13.252734184265137
    9. '   ' → logprob: -13.377734184265137
    10. '<|end|>' → logprob: -13.502734184265137

Token 1073: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6253346800804138
    2. '```' → logprob: -1.0003347396850586
    3. ' for' → logprob: -2.3753347396850586
    4. 'for' → logprob: -5.875334739685059
    5. '``' → logprob: -7.875334739685059
    6. '	for' → logprob: -8.125334739685059
    7. '`' → logprob: -8.500334739685059
    8. '    
' → logprob: -8.750334739685059
    9. '    ' → logprob: -9.875334739685059
    10. '       ' → logprob: -9.875334739685059

Token 1074: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0055068302899599075
    2. ' for' → logprob: -5.255506992340088
    3. 'digit' → logprob: -8.88050651550293
    4. '   ' → logprob: -10.00550651550293
    5. 's' → logprob: -10.00550651550293
    6. 'd' → logprob: -10.75550651550293
    7. 'dig' → logprob: -12.00550651550293
    8. 'digits' → logprob: -12.00550651550293
    9. '```' → logprob: -12.38050651550293
    10. 'pos' → logprob: -13.63050651550293

Token 1075: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -0.010486460290849209
    2. ' dig' → logprob: -4.760486602783203
    3. 'd' → logprob: -6.510486602783203
    4. 'digit' → logprob: -7.885486602783203
    5. ' digit' → logprob: -12.385486602783203
    6. ' d' → logprob: -13.510486602783203
    7. '   ' → logprob: -14.510486602783203
    8. '```' → logprob: -15.885486602783203
    9. 'digits' → logprob: -17.760486602783203
    10. 'next' → logprob: -18.135486602783203

Token 1076: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003196131670847535
    2. 'in' → logprob: -5.7531962394714355
    3. ' ' → logprob: -12.003195762634277
    4. '	in' → logprob: -12.378195762634277
    5. '<|end|>' → logprob: -13.128195762634277
    6. ' 
' → logprob: -13.628195762634277
    7. '_in' → logprob: -13.628195762634277
    8. 'd' → logprob: -14.128195762634277
    9. ' ' → logprob: -15.003195762634277
    10. '0' → logprob: -15.003195762634277

Token 1077: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '(range' → logprob: -17.256715774536133
    4. '
' → logprob: -19.506715774536133
    5. '10' → logprob: -20.006715774536133
    6. ' ' → logprob: -20.131715774536133
    7. '0' → logprob: -20.131715774536133
    8. '	range' → logprob: -20.881715774536133
    9. '```' → logprob: -20.881715774536133
    10. '   ' → logprob: -22.131715774536133

Token 1078: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.061972059309482574
    2. '10' → logprob: -2.811972141265869
    3. '
' → logprob: -13.686971664428711
    4. '(
' → logprob: -13.811971664428711
    5. ' ' → logprob: -14.436971664428711
    6. '0' → logprob: -14.686971664428711
    7. '   ' → logprob: -14.686971664428711
    8. '```' → logprob: -14.686971664428711
    9. '9' → logprob: -15.686971664428711
    10. 'def' → logprob: -16.68697166442871

Token 1079: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00023119196703191847
    2. '0' → logprob: -8.37523078918457
    3. ' ' → logprob: -14.75023078918457
    4. '1' → logprob: -17.12523078918457
    5. 'range' → logprob: -17.25023078918457
    6. '
' → logprob: -17.37523078918457
    7. '   ' → logprob: -17.62523078918457
    8. ')' → logprob: -17.87523078918457
    9. '```' → logprob: -18.50023078918457
    10. '(' → logprob: -18.87523078918457

Token 1080: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04779079556465149
    2. '):' → logprob: -3.172790765762329
    3. ':' → logprob: -6.047791004180908
    4. '   ' → logprob: -6.422791004180908
    5. '):
' → logprob: -8.29779052734375
    6. ':
' → logprob: -8.92279052734375
    7. '+' → logprob: -9.42279052734375
    8. '<|end|>' → logprob: -9.42279052734375
    9. ')' → logprob: -9.54779052734375
    10. '():
' → logprob: -10.42279052734375

Token 1081: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016229959146585315
    2. ' if' → logprob: -9.875162124633789
    3. '```' → logprob: -9.875162124633789
    4. '   ' → logprob: -11.000162124633789
    5. '<|end|>' → logprob: -11.125162124633789
    6. '[' → logprob: -12.250162124633789
    7. '           ' → logprob: -12.250162124633789
    8. '    ' → logprob: -12.625162124633789
    9. ' ' → logprob: -13.625162124633789
    10. '#' → logprob: -13.750162124633789

Token 1082: ' pf' (ID: 27291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15164044499397278
    2. 'pf' (adapté à ' pf') → logprob: -2.2766404151916504
    3. 'if' → logprob: -3.9016404151916504
    4. ' if' → logprob: -4.65164041519165
    5. ' pf' → logprob: -5.15164041519165
    6. 'new' → logprob: -7.15164041519165
    7. ' new' → logprob: -7.27664041519165
    8. '           ' → logprob: -8.526640892028809
    9. ' key' → logprob: -9.026640892028809
    10. 'key' → logprob: -9.026640892028809

Token 1083: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17997965216636658
    2. '=' → logprob: -1.804979681968689
    3. '<|end|>' → logprob: -10.42997932434082
    4. ',' → logprob: -10.80497932434082
    5. '=(' → logprob: -11.17997932434082
    6. '=
' → logprob: -11.17997932434082
    7. ')' → logprob: -11.17997932434082
    8. '_f' → logprob: -11.42997932434082
    9. '_=' → logprob: -11.42997932434082
    10. '   ' → logprob: -11.55497932434082

Token 1084: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.014790100045502186
    2. ' prime' → logprob: -4.264790058135986
    3. '(' → logprob: -7.389790058135986
    4. ' (' → logprob: -12.389790534973145
    5. 'pr' → logprob: -13.264790534973145
    6. 'prod' → logprob: -13.264790534973145
    7. '(pr' → logprob: -14.264790534973145
    8. '_prime' → logprob: -15.014790534973145
    9. 'prim' → logprob: -16.389789581298828
    10. 'add' → logprob: -16.889789581298828

Token 1085: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0008425032719969749
    2. 'f' → logprob: -7.125842571258545
    3. '_factor' → logprob: -11.750842094421387
    4. 'Factors' → logprob: -11.875842094421387
    5. '_s' → logprob: -12.250842094421387
    6. '```' → logprob: -12.375842094421387
    7. ')' → logprob: -12.750842094421387
    8. '_fac' → logprob: -13.125842094421387
    9. 's' → logprob: -14.000842094421387
    10. '_' → logprob: -14.000842094421387

Token 1086: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.07376705855131149
    2. 'f' → logprob: -2.6987669467926025
    3. 'actors' → logprob: -5.573767185211182
    4. '_factor' → logprob: -12.323766708374023
    5. 'actor' → logprob: -12.448766708374023
    6. '-f' → logprob: -12.573766708374023
    7. '```' → logprob: -13.073766708374023
    8. '_' → logprob: -13.323766708374023
    9. ')' → logprob: -13.573766708374023
    10. 'Factors' → logprob: -13.698766708374023

Token 1087: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.3425219549390022e-05
    2. 'dig' → logprob: -11.25001335144043
    3. 'd' → logprob: -14.75001335144043
    4. 'digit' → logprob: -19.25001335144043
    5. '[d' → logprob: -19.25001335144043
    6. '(dic' → logprob: -19.37501335144043
    7. '(' → logprob: -19.75001335144043
    8. ' (' → logprob: -21.37501335144043
    9. '	d' → logprob: -21.37501335144043
    10. '(div' → logprob: -21.50001335144043

Token 1088: 'ig' (ID: 343)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.4749844968318939
    2. 'dig' → logprob: -0.9749845266342163
    3. 'd' → logprob: -7.099984645843506
    4. ' dig' → logprob: -10.224984169006348
    5. 'ig' → logprob: -10.849984169006348
    6. ' (' → logprob: -12.099984169006348
    7. '[d' → logprob: -12.224984169006348
    8. 'digit' → logprob: -12.474984169006348
    9. 'igit' → logprob: -13.224984169006348
    10. '[' → logprob: -13.349984169006348

Token 1089: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9146995327901095e-05
    2. '(' → logprob: -11.750019073486328
    3. ' +' → logprob: -12.000019073486328
    4. '()+' → logprob: -13.125019073486328
    5. '[' → logprob: -13.500019073486328
    6. '(+' → logprob: -14.125019073486328
    7. ')+' → logprob: -15.125019073486328
    8. '+
' → logprob: -15.625019073486328
    9. '+(' → logprob: -16.375019073486328
    10. ')' → logprob: -16.750019073486328

Token 1090: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.288163083605468e-05
    2. '+' → logprob: -10.000052452087402
    3. '```' → logprob: -12.125052452087402
    4. ' ' → logprob: -14.000052452087402
    5. ')' → logprob: -15.000052452087402
    6. '0' → logprob: -15.000052452087402
    7. '`' → logprob: -15.875052452087402
    8. ' +' → logprob: -16.12505340576172
    9. ')+' → logprob: -16.25005340576172
    10. '[' → logprob: -17.00005340576172

Token 1091: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.002844579517841339
    2. '       ' → logprob: -6.50284481048584
    3. ')' → logprob: -6.62784481048584
    4. ')
' → logprob: -11.25284481048584
    5. '```' → logprob: -13.50284481048584
    6. '):
' → logprob: -13.62784481048584
    7. '   ' → logprob: -14.75284481048584
    8. ')

' → logprob: -14.87784481048584
    9. '[' → logprob: -15.25284481048584
    10. '())
' → logprob: -15.50284481048584

Token 1092: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02834230102598667
    2. ' new' → logprob: -4.028342247009277
    3. 'new' → logprob: -5.028342247009277
    4. '
' → logprob: -6.403342247009277
    5. '```' → logprob: -6.403342247009277
    6. '_new' → logprob: -9.778342247009277
    7. ' if' → logprob: -10.028342247009277
    8. 'if' → logprob: -10.653342247009277
    9. '#' → logprob: -11.153342247009277
    10. ',' → logprob: -11.278342247009277

Token 1093: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.012548855505883694
    2. ' new' → logprob: -4.637548923492432
    3. '       ' → logprob: -6.512548923492432
    4. 'if' → logprob: -7.012548923492432
    5. 'next' → logprob: -8.387548446655273
    6. 'n' → logprob: -9.887548446655273
    7. '```' → logprob: -10.262548446655273
    8. 'prod' → logprob: -10.512548446655273
    9. ' if' → logprob: -11.012548446655273
    10. 'nf' → logprob: -11.637548446655273

Token 1094: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.020656106993556023
    2. '_f' → logprob: -3.895656108856201
    3. '_factor' → logprob: -9.645655632019043
    4. 'factor' → logprob: -10.645655632019043
    5. 'prod' → logprob: -11.645655632019043
    6. ' =' → logprob: -12.395655632019043
    7. '=' → logprob: -12.520655632019043
    8. '_pro' → logprob: -12.645655632019043
    9. '```' → logprob: -13.645655632019043
    10. 'pro' → logprob: -13.895655632019043

Token 1095: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061970602720975876
    2. ' =' → logprob: -2.8119707107543945
    3. ')' → logprob: -13.311970710754395
    4. '=
' → logprob: -14.311970710754395
    5. ',' → logprob: -14.686970710754395
    6. ')=' → logprob: -15.686970710754395
    7. '   ' → logprob: -17.811969757080078
    8. '=create' → logprob: -17.811969757080078
    9. '=_' → logprob: -17.936969757080078
    10. '```' → logprob: -18.811969757080078

Token 1096: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.10030792653560638
    2. ' add' → logprob: -2.3503079414367676
    3. '(' → logprob: -9.35030746459961
    4. '(add' → logprob: -11.60030746459961
    5. ' (' → logprob: -12.85030746459961
    6. 'if' → logprob: -13.97530746459961
    7. '	add' → logprob: -14.72530746459961
    8. '
' → logprob: -15.47530746459961
    9. '   ' → logprob: -15.60030746459961
    10. '...' → logprob: -16.10030746459961

Token 1097: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00017016702622640878
    2. 'Factors' → logprob: -9.25016975402832
    3. 'f' → logprob: -10.00016975402832
    4. 'add' → logprob: -10.75016975402832
    5. '_factor' → logprob: -13.25016975402832
    6. 's' → logprob: -13.25016975402832
    7. '(add' → logprob: -13.37516975402832
    8. '(' → logprob: -14.12516975402832
    9. ')' → logprob: -15.37516975402832
    10. 'def' → logprob: -16.12516975402832

Token 1098: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.10082117468118668
    2. 'actors' → logprob: -2.8508212566375732
    3. 'f' → logprob: -3.8508212566375732
    4. 'ctors' → logprob: -4.225821018218994
    5. 'add' → logprob: -7.475821018218994
    6. 'tors' → logprob: -7.850821018218994
    7. 'Factors' → logprob: -8.100821495056152
    8. 'd' → logprob: -8.850821495056152
    9. '(add' → logprob: -9.100821495056152
    10. 'actor' → logprob: -9.225821495056152

Token 1099: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -2.165027217415627e-05
    2. 'pro' → logprob: -10.750021934509277
    3. '(prod' → logprob: -16.62502098083496
    4. '   ' → logprob: -17.37502098083496
    5. '(' → logprob: -17.75002098083496
    6. '_pro' → logprob: -18.62502098083496
    7. '	pro' → logprob: -18.62502098083496
    8. ' (' → logprob: -18.87502098083496
    9. '(pr' → logprob: -19.25002098083496
    10. '(p' → logprob: -19.37502098083496

Token 1100: 'df' (ID: 4750)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.639413058757782
    2. 'rof' → logprob: -0.889413058757782
    3. 'df' → logprob: -3.1394131183624268
    4. '(pro' → logprob: -4.764412879943848
    5. 'pro' → logprob: -5.264412879943848
    6. 'rod' → logprob: -5.764412879943848
    7. 'def' → logprob: -7.639412879943848
    8. 'f' → logprob: -8.514412879943848
    9. 'd' → logprob: -8.889412879943848
    10. 'or' → logprob: -9.264412879943848

Token 1101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37165042757987976
    2. '(p' → logprob: -1.7466504573822021
    3. ',p' → logprob: -1.9966504573822021
    4. '(pro' → logprob: -9.121650695800781
    5. ' ,' → logprob: -9.496650695800781
    6. ' (' → logprob: -10.371650695800781
    7. ',(' → logprob: -11.746650695800781
    8. '       ' → logprob: -12.121650695800781
    9. '   ' → logprob: -12.496650695800781
    10. '           ' → logprob: -12.621650695800781

Token 1102: ' pf' (ID: 27291)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' → logprob: -6.623244553338736e-05
    2. ' pf' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.50006675720215
    4. '(' → logprob: -17.50006675720215
    5. '           ' → logprob: -18.50006675720215
    6. '_pf' → logprob: -18.75006675720215
    7. '(p' → logprob: -19.00006675720215
    8. 'py' → logprob: -19.00006675720215
    9. ' ' → logprob: -19.12506675720215
    10. '       ' → logprob: -19.37506675720215

Token 1103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5772629976272583
    2. ')
' → logprob: -0.8272629976272583
    3. '       ' → logprob: -6.702262878417969
    4. ')
' → logprob: -9.577262878417969
    5. '   ' → logprob: -11.577262878417969
    6. ')

' → logprob: -12.077262878417969
    7. '):
' → logprob: -13.077262878417969
    8. '[' → logprob: -13.327262878417969
    9. ')`
' → logprob: -13.327262878417969
    10. '           ' → logprob: -13.702262878417969

Token 1104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017302791820839047
    2. '```' → logprob: -9.00017261505127
    3. 'if' → logprob: -11.00017261505127
    4. ',' → logprob: -11.25017261505127
    5. ' if' → logprob: -12.25017261505127
    6. '+' → logprob: -12.87517261505127
    7. '
' → logprob: -13.25017261505127
    8. '        
' → logprob: -13.37517261505127
    9. '#' → logprob: -13.50017261505127
    10. ')' → logprob: -13.62517261505127

Token 1105: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005139119457453489
    2. '       ' → logprob: -5.380139350891113
    3. ' if' → logprob: -7.630139350891113
    4. 'prod' → logprob: -11.255139350891113
    5. '```' → logprob: -11.505139350891113
    6. '#' → logprob: -12.630139350891113
    7. 'for' → logprob: -12.880139350891113
    8. '           ' → logprob: -13.130139350891113
    9. 'prev' → logprob: -14.630139350891113
    10. 'next' → logprob: -14.880139350891113

Token 1106: ' less' (ID: 3760)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.533892810344696
    2. 'less' → logprob: -1.0338928699493408
    3. '(not' → logprob: -3.533892869949341
    4. ' not' → logprob: -3.783892869949341
    5. ' less' → logprob: -5.408892631530762
    6. '(' → logprob: -7.283892631530762
    7. '   ' → logprob: -7.908892631530762
    8. 'new' → logprob: -8.283892631530762
    9. ' (' → logprob: -9.283892631530762
    10. 'pos' → logprob: -9.408892631530762

Token 1107: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -2.2842308680992573e-05
    2. 'flag' → logprob: -11.375022888183594
    3. '_f' → logprob: -12.250022888183594
    4. 'Flag' → logprob: -13.500022888183594
    5. '_FLAG' → logprob: -14.375022888183594
    6. '_factor' → logprob: -14.625022888183594
    7. ':' → logprob: -14.750022888183594
    8. '_flags' → logprob: -14.875022888183594
    9. '\' → logprob: -14.875022888183594
    10. '   ' → logprob: -15.125022888183594

Token 1108: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04885191097855568
    2. 'or' → logprob: -3.04885196685791
    3. ':' → logprob: -9.29885196685791
    4. '           ' → logprob: -9.54885196685791
    5. '==' → logprob: -9.79885196685791
    6. '       ' → logprob: -11.17385196685791
    7. ':
' → logprob: -11.17385196685791
    8. '	or' → logprob: -12.29885196685791
    9. ' ==' → logprob: -13.04885196685791
    10. '               ' → logprob: -13.17385196685791

Token 1109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4246383011341095
    2. ':' → logprob: -1.174638271331787
    3. '       ' → logprob: -4.049638271331787
    4. ':
' → logprob: -4.549638271331787
    5. '```' → logprob: -5.424638271331787
    6. ' or' → logprob: -5.799638271331787
    7. '<|end|>' → logprob: -8.049638748168945
    8. '          ' → logprob: -8.049638748168945
    9. '               ' → logprob: -8.674638748168945
    10. ' and' → logprob: -9.049638748168945

Token 1110: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0023499573580920696
    2. '           ' → logprob: -6.752349853515625
    3. ' total' → logprob: -6.752349853515625
    4. '```' → logprob: -12.502349853515625
    5. '       ' → logprob: -13.002349853515625
    6. '	total' → logprob: -13.502349853515625
    7. ',total' → logprob: -14.377349853515625
    8. '(total' → logprob: -14.377349853515625
    9. '_total' → logprob: -14.502349853515625
    10. '$total' → logprob: -14.752349853515625

Token 1111: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10024678707122803
    2. '+=' → logprob: -2.3502469062805176
    3. ']+=' → logprob: -11.35024642944336
    4. '```' → logprob: -11.47524642944336
    5. '   ' → logprob: -12.10024642944336
    6. '           ' → logprob: -12.22524642944336
    7. '       ' → logprob: -12.60024642944336
    8. '          ' → logprob: -13.22524642944336
    9. '+' → logprob: -14.60024642944336
    10. '+="' → logprob: -15.47524642944336

Token 1112: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.10163281857967377
    2. 'dp' → logprob: -2.351632833480835
    3. ' dfs' → logprob: -6.726632595062256
    4. '1' → logprob: -8.851633071899414
    5. ' dp' → logprob: -9.601633071899414
    6. 'df' → logprob: -12.226633071899414
    7. '   ' → logprob: -12.851633071899414
    8. '
' → logprob: -13.726633071899414
    9. ' ' → logprob: -13.726633071899414
    10. '(dp' → logprob: -14.289133071899414

Token 1113: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.7432603272027336e-06
    2. 'sum' → logprob: -13.375001907348633
    3. '_' → logprob: -16.875001907348633
    4. '_factor' → logprob: -17.000001907348633
    5. '_s' → logprob: -17.500001907348633
    6. '
' → logprob: -18.250001907348633
    7. '(sum' → logprob: -18.875001907348633
    8. '\' → logprob: -19.000001907348633
    9. ' sum' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 1114: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.023274246603250504
    2. '_sum' → logprob: -3.7732741832733154
    3. '_equ' → logprob: -11.523274421691895
    4. 'eq' → logprob: -11.773274421691895
    5. '_less' → logprob: -12.148274421691895
    6. '_equal' → logprob: -12.648274421691895
    7. '_factor' → logprob: -14.023274421691895
    8. '```' → logprob: -14.398274421691895
    9. '_equals' → logprob: -14.898274421691895
    10. '_prod' → logprob: -15.398274421691895

Token 1115: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.02417973428964615
    2. 'prod' → logprob: -4.024179935455322
    3. '_eq' → logprob: -5.399179935455322
    4. 'pos' → logprob: -6.774179935455322
    5. '_pos' → logprob: -8.774179458618164
    6. 'eq' → logprob: -9.274179458618164
    7. '(prod' → logprob: -10.024179458618164
    8. '_less' → logprob: -10.649179458618164
    9. '(pos' → logprob: -11.649179458618164
    10. '_equal' → logprob: -12.024179458618164

Token 1116: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.00023226479243021458
    2. 'less' → logprob: -8.500232696533203
    3. '(pos' → logprob: -10.625232696533203
    4. 'Less' → logprob: -13.250232696533203
    5. 'pos' → logprob: -13.500232696533203
    6. ' less' → logprob: -14.875232696533203
    7. '[pos' → logprob: -15.250232696533203
    8. '(' → logprob: -15.750232696533203
    9. '```' → logprob: -16.500232696533203
    10. '_lt' → logprob: -16.625232696533203

Token 1117: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -14.125001907348633
    3. 'pos' → logprob: -14.125001907348633
    4. ',pos' → logprob: -15.000001907348633
    5. ' (' → logprob: -16.375001907348633
    6. '(
' → logprob: -16.625001907348633
    7. '[pos' → logprob: -16.875001907348633
    8. ' pos' → logprob: -17.250001907348633
    9. '(position' → logprob: -17.250001907348633
    10. '	pos' → logprob: -18.375001907348633

Token 1118: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007493520388379693
    2. ' +' → logprob: -7.375749588012695
    3. ',' → logprob: -9.125749588012695
    4. '(pos' → logprob: -12.250749588012695
    5. '+,' → logprob: -12.375749588012695
    6. ',pos' → logprob: -12.875749588012695
    7. '1' → logprob: -14.500749588012695
    8. '(+' → logprob: -14.750749588012695
    9. '+
' → logprob: -15.000749588012695
    10. '(' → logprob: -15.125749588012695

Token 1119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012724967673420906
    2. 'pos' → logprob: -6.751272678375244
    3. '(pos' → logprob: -9.376272201538086
    4. '(' → logprob: -11.251272201538086
    5. '   ' → logprob: -13.626272201538086
    6. ' ' → logprob: -13.751272201538086
    7. '
' → logprob: -14.251272201538086
    8. ',' → logprob: -14.501272201538086
    9. '+' → logprob: -14.626272201538086
    10. ',pos' → logprob: -16.001272201538086

Token 1120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05613788962364197
    2. ',new' → logprob: -2.931137800216675
    3. '(new' → logprob: -7.556138038635254
    4. '(pro' → logprob: -8.181138038635254
    5. ',(' → logprob: -8.181138038635254
    6. '           ' → logprob: -9.306138038635254
    7. 'new' → logprob: -11.181138038635254
    8. '(' → logprob: -11.306138038635254
    9. '          ' → logprob: -12.056138038635254
    10. ' ,' → logprob: -12.056138038635254

Token 1121: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00014132341311778873
    2. ' new' → logprob: -8.875141143798828
    3. '(new' → logprob: -13.750141143798828
    4. '(' → logprob: -16.250141143798828
    5. '   ' → logprob: -17.125141143798828
    6. '
' → logprob: -17.125141143798828
    7. '_new' → logprob: -18.125141143798828
    8. 'add' → logprob: -18.250141143798828
    9. 'tuple' → logprob: -18.500141143798828
    10. '	new' → logprob: -18.625141143798828

Token 1122: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05544261634349823
    2. '_f' → logprob: -2.9304425716400146
    3. 'F' → logprob: -8.180442810058594
    4. 'Factors' → logprob: -9.805442810058594
    5. '(new' → logprob: -10.305442810058594
    6. '(' → logprob: -10.305442810058594
    7. '(_' → logprob: -10.555442810058594
    8. 'factor' → logprob: -10.680442810058594
    9. '_factor' → logprob: -11.055442810058594
    10. 's' → logprob: -11.555442810058594

Token 1123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004902127664536238
    2. 'False' → logprob: -5.754902362823486
    3. 'True' → logprob: -6.504902362823486
    4. '(False' → logprob: -8.754901885986328
    5. '(True' → logprob: -9.879901885986328
    6. '=True' → logprob: -11.879901885986328
    7. '=False' → logprob: -11.879901885986328
    8. ' ,' → logprob: -13.754901885986328
    9. ' False' → logprob: -13.879901885986328
    10. ' True' → logprob: -14.004901885986328

Token 1124: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0280383548888494e-06
    2. ' True' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '1' → logprob: -16.000001907348633
    5. '           ' → logprob: -17.000001907348633
    6. '       ' → logprob: -17.500001907348633
    7. '(True' → logprob: -17.875001907348633
    8. '
' → logprob: -19.250001907348633
    9. '    ' → logprob: -19.375001907348633
    10. 'False' → logprob: -19.875001907348633

Token 1125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012238722294569016
    2. ')
' → logprob: -4.887238502502441
    3. '       ' → logprob: -5.387238502502441
    4. '   ' → logprob: -11.262238502502441
    5. ')+' → logprob: -11.887238502502441
    6. '           ' → logprob: -12.012238502502441
    7. ' )' → logprob: -12.262238502502441
    8. '+' → logprob: -12.637238502502441
    9. ')return' → logprob: -12.762238502502441
    10. '```' → logprob: -12.887238502502441

Token 1126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005304908379912376
    2. '```' → logprob: -5.25530481338501
    3. '           ' → logprob: -10.130305290222168
    4. '``' → logprob: -11.505305290222168
    5. '               ' → logprob: -12.130305290222168
    6. ' else' → logprob: -12.880305290222168
    7. 'else' → logprob: -13.005305290222168
    8. ' ' → logprob: -13.005305290222168
    9. '	' → logprob: -13.380305290222168
    10. '        
' → logprob: -13.630305290222168

Token 1127: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3352350890636444
    2. '       ' → logprob: -1.3352351188659668
    3. ' else' → logprob: -3.835235118865967
    4. '```' → logprob: -9.710234642028809
    5. 'elif' → logprob: -9.835234642028809
    6. ' ' → logprob: -12.210234642028809
    7. '           ' → logprob: -12.210234642028809
    8. ' elif' → logprob: -12.835234642028809
    9. '               ' → logprob: -13.085234642028809
    10. '   ' → logprob: -13.210234642028809

Token 1128: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0239801406860352
    2. '           ' → logprob: -1.5239801406860352
    3. ' if' → logprob: -1.5239801406860352
    4. ':' → logprob: -2.023980140686035
    5. '       ' → logprob: -3.023980140686035
    6. 'if' → logprob: -4.148980140686035
    7. '{
' → logprob: -5.773980140686035
    8. '{' → logprob: -6.148980140686035
    9. '[' → logprob: -7.023980140686035
    10. '<|end|>' → logprob: -7.773980140686035

Token 1129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003359866328537464
    2. '```' → logprob: -6.378359794616699
    3. ' if' → logprob: -6.503359794616699
    4. '               ' → logprob: -9.6283597946167
    5. 'if' → logprob: -10.0033597946167
    6. '``' → logprob: -11.2533597946167
    7. '       ' → logprob: -11.6283597946167
    8. '          ' → logprob: -12.1283597946167
    9. '                   ' → logprob: -12.3783597946167
    10. '		' → logprob: -12.8783597946167

Token 1130: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02812965400516987
    2. '               ' → logprob: -4.528129577636719
    3. ' if' → logprob: -4.778129577636719
    4. 'prod' → logprob: -5.028129577636719
    5. '           ' → logprob: -7.403129577636719
    6. '#' (adapté à ' #') → logprob: -7.403129577636719
    7. 'new' → logprob: -8.153129577636719
    8. 'log' → logprob: -8.903129577636719
    9. 'for' → logprob: -9.403129577636719
    10. 'product' → logprob: -10.278129577636719

Token 1131: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0639977902173996
    2. 'prod' → logprob: -3.063997745513916
    3. '           ' → logprob: -5.563997745513916
    4. 'sum' → logprob: -5.813997745513916
    5. '               ' → logprob: -5.938997745513916
    6. 'new' → logprob: -6.438997745513916
    7. '#' → logprob: -7.438997745513916
    8. ' if' → logprob: -7.438997745513916
    9. 's' → logprob: -7.563997745513916
    10. 'log' → logprob: -7.688997745513916

Token 1132: ' if' (ID: 538)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.3614709377288818
    2. 'new' → logprob: -1.8614709377288818
    3. ' prod' → logprob: -1.8614709377288818
    4. ' less' → logprob: -1.9864709377288818
    5. 'less' → logprob: -1.9864709377288818
    6. 'prod' → logprob: -2.361470937728882
    7. ' add' → logprob: -4.111471176147461
    8. ' not' → logprob: -4.736471176147461
    9. 'if' → logprob: -4.986471176147461
    10. 'add' → logprob: -4.986471176147461

Token 1133: ' new' (ID: 620)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.03501307964324951
    2. ' less' → logprob: -4.035013198852539
    3. 'new' → logprob: -4.410013198852539
    4. 'not' → logprob: -6.285013198852539
    5. 'all' → logprob: -6.910013198852539
    6. ' new' → logprob: -7.660013198852539
    7. 'add' → logprob: -7.910013198852539
    8. ' not' → logprob: -8.285013198852539
    9. 'prod' → logprob: -8.660013198852539
    10. '   ' → logprob: -9.785013198852539

Token 1134: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07658931612968445
    2. '_f' → logprob: -2.701589345932007
    3. 'prod' → logprob: -5.576589107513428
    4. '_factor' → logprob: -7.076589107513428
    5. '_s' → logprob: -7.826589107513428
    6. '_prod' → logprob: -7.826589107513428
    7. 'factor' → logprob: -8.076589584350586
    8. 'pf' → logprob: -8.076589584350586
    9. '_pro' → logprob: -8.576589584350586
    10. 'pro' → logprob: -9.076589584350586

Token 1135: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8377153277397156
    2. ' <=' → logprob: -1.0877153873443604
    3. '[i' → logprob: -1.7127153873443604
    4. ' <' → logprob: -3.5877153873443604
    5. '==' → logprob: -4.587715148925781
    6. ' ==' → logprob: -5.212715148925781
    7. '<' → logprob: -6.212715148925781
    8. '```' → logprob: -6.212715148925781
    9. '[' → logprob: -6.712715148925781
    10. '           ' → logprob: -7.962715148925781

Token 1136: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.05608819052577019
    2. ' prod' → logprob: -2.9310882091522217
    3. 'new' → logprob: -7.306087970733643
    4. 'add' → logprob: -8.0560884475708
    5. '(' → logprob: -9.8060884475708
    6. '(prod' → logprob: -10.0560884475708
    7. 'tuple' → logprob: -10.3060884475708
    8. ' new' → logprob: -10.6810884475708
    9. '=' → logprob: -10.6810884475708
    10. 'pro' → logprob: -12.1810884475708

Token 1137: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.2246291337069124e-05
    2. 's' → logprob: -11.500021934509277
    3. '_factor' → logprob: -11.625021934509277
    4. '           ' → logprob: -13.375021934509277
    5. '```' → logprob: -14.750021934509277
    6. 'factor' → logprob: -15.000021934509277
    7. '       ' → logprob: -15.250021934509277
    8. '_f' → logprob: -15.250021934509277
    9. '               ' → logprob: -15.750021934509277
    10. '   ' → logprob: -15.875021934509277

Token 1138: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00013464801304508
    2. '           ' → logprob: -9.875134468078613
    3. 'factor' → logprob: -10.125134468078613
    4. '```' → logprob: -11.625134468078613
    5. '_f' → logprob: -11.750134468078613
    6. '               ' → logprob: -11.875134468078613
    7. 'Factor' → logprob: -12.500134468078613
    8. ':' → logprob: -13.125134468078613
    9. ':
' → logprob: -13.250134468078613
    10. '       ' → logprob: -13.375134468078613

Token 1139: ' prefix' (ID: 18633)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015886548906564713
    2. ' and' → logprob: -5.2658867835998535
    3. ':' → logprob: -5.3908867835998535
    4. '               ' → logprob: -6.1408867835998535
    5. '<|end|>' → logprob: -7.1408867835998535
    6. ' if' → logprob: -7.5158867835998535
    7. ' =' → logprob: -7.8908867835998535
    8. '       ' → logprob: -8.140886306762695
    9. '```' → logprob: -8.140886306762695
    10. ':
' → logprob: -8.265886306762695

Token 1140: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3452447652816772
    2. '               ' → logprob: -1.8452447652816772
    3. 'and' → logprob: -1.8452447652816772
    4. ' or' → logprob: -1.9702447652816772
    5. '           ' → logprob: -2.095244884490967
    6. ':' → logprob: -2.845244884490967
    7. ':
' → logprob: -2.970244884490967
    8. 'or' → logprob: -3.970244884490967
    9. '[' → logprob: -4.970244884490967
    10. 'if' → logprob: -5.595244884490967

Token 1141: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05171707272529602
    2. ' and' → logprob: -3.6767170429229736
    3. '           ' → logprob: -4.051717281341553
    4. '```' → logprob: -5.676717281341553
    5. '                   ' → logprob: -6.551717281341553
    6. '``' → logprob: -7.301717281341553
    7. 'and' → logprob: -7.426717281341553
    8. ':
' → logprob: -7.801717281341553
    9. ' or' → logprob: -7.926717281341553
    10. ' if' → logprob: -8.051716804504395

Token 1142: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027965398505330086
    2. ' if' → logprob: -4.027965545654297
    3. '               ' → logprob: -4.777965545654297
    4. 'new' → logprob: -7.277965545654297
    5. 'prod' → logprob: -8.027965545654297
    6. '           ' → logprob: -8.777965545654297
    7. ' new' → logprob: -9.777965545654297
    8. '                   ' → logprob: -10.402965545654297
    9. 'not' → logprob: -10.527965545654297
    10. 'for' → logprob: -11.152965545654297

Token 1143: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13799388706684113
    2. ' if' → logprob: -2.512993812561035
    3. '               ' → logprob: -3.137993812561035
    4. '           ' → logprob: -6.512993812561035
    5. 'prod' → logprob: -6.637993812561035
    6. '                   ' → logprob: -7.137993812561035
    7. '```' → logprob: -8.387993812561035
    8. 'new' → logprob: -8.637993812561035
    9. '``' → logprob: -8.887993812561035
    10. 'for' → logprob: -9.387993812561035

Token 1144: ' do' (ID: 621)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4359403848648071
    2. '           ' → logprob: -1.5609403848648071
    3. 'if' → logprob: -1.5609403848648071
    4. ' if' → logprob: -1.9359403848648071
    5. 'continue' → logprob: -2.3109402656555176
    6. '```' → logprob: -3.5609402656555176
    7. ' continue' → logprob: -3.9359402656555176
    8. '
' → logprob: -4.685940265655518
    9. ' can' → logprob: -5.185940265655518
    10. 'should' → logprob: -5.310940265655518

Token 1145: ' lex' (ID: 37772)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4062058627605438
    2. 'if' → logprob: -1.7812058925628662
    3. '           ' → logprob: -2.406205892562866
    4. ' not' → logprob: -3.031205892562866
    5. 'n't' → logprob: -5.031205654144287
    6. '               ' → logprob: -5.281205654144287
    7. '```' → logprob: -5.656205654144287
    8. ' if' → logprob: -5.781205654144287
    9. 'the' → logprob: -6.531205654144287
    10. 'compare' → logprob: -6.656205654144287

Token 1146: ' compare' (ID: 12221)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.7359563112258911
    2. '_compare' → logprob: -1.2359563112258911
    3. 'ic' → logprob: -1.9859563112258911
    4. 'ical' → logprob: -3.1109561920166016
    5. '_order' → logprob: -4.110956192016602
    6. 'order' → logprob: -4.485956192016602
    7. ')' → logprob: -5.485956192016602
    8. '(compare' → logprob: -5.735956192016602
    9. '   ' → logprob: -5.985956192016602
    10. 'cmp' → logprob: -6.235956192016602

Token 1147: ' factor' (ID: 12332)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029650047421455383
    2. ' if' → logprob: -4.2796502113342285
    3. 'if' → logprob: -4.2796502113342285
    4. '       ' → logprob: -7.7796502113342285
    5. '```' → logprob: -8.15464973449707
    6. ':' → logprob: -9.02964973449707
    7. '               ' → logprob: -9.15464973449707
    8. ':
' → logprob: -9.15464973449707
    9. ',' → logprob: -9.27964973449707
    10. ' and' → logprob: -9.52964973449707

Token 1148: ' by' (ID: 656)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7918027639389038
    2. 'for' → logprob: -1.4168027639389038
    3. '       ' → logprob: -2.6668028831481934
    4. 's' → logprob: -2.6668028831481934
    5. '=' → logprob: -3.1668028831481934
    6. '           ' → logprob: -3.4168028831481934
    7. 'or' → logprob: -4.041802883148193
    8. 'def' → logprob: -4.541802883148193
    9. 'ion' → logprob: -4.541802883148193
    10. ' =' → logprob: -4.666802883148193

Token 1149: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.06679529696702957
    2. 'position' → logprob: -3.5667953491210938
    3. 'prefix' → logprob: -4.316795349121094
    4. 'component' → logprob: -5.066795349121094
    5. 'index' → logprob: -5.066795349121094
    6. 'step' → logprob: -6.191795349121094
    7. 'i' → logprob: -6.691795349121094
    8. '
' → logprob: -6.816795349121094
    9. 'lambda' → logprob: -6.941795349121094
    10. 'element' → logprob: -7.066795349121094

Token 1150: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016193082556128502
    2. '       ' → logprob: -4.14119291305542
    3. 'if' → logprob: -9.766193389892578
    4. ' if' → logprob: -9.891193389892578
    5. ',' → logprob: -11.391193389892578
    6. '               ' → logprob: -11.391193389892578
    7. ' for' → logprob: -11.891193389892578
    8. 'for' → logprob: -12.016193389892578
    9. '```' → logprob: -12.391193389892578
    10. '   ' → logprob: -12.891193389892578

Token 1151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0042500621639192104
    2. '```' → logprob: -5.6292500495910645
    3. '       ' → logprob: -8.129250526428223
    4. ' if' → logprob: -9.129250526428223
    5. '               ' → logprob: -9.254250526428223
    6. 'if' → logprob: -9.629250526428223
    7. '``' → logprob: -10.254250526428223
    8. ',' → logprob: -11.504250526428223
    9. '{
' → logprob: -11.629250526428223
    10. ' for' → logprob: -12.004250526428223

Token 1152: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42273908853530884
    2. '               ' → logprob: -1.672739028930664
    3. 'for' → logprob: -2.172739028930664
    4. '           ' → logprob: -3.422739028930664
    5. ' for' → logprob: -5.422739028930664
    6. ' if' → logprob: -5.797739028930664
    7. 'cmp' → logprob: -6.922739028930664
    8. '```' → logprob: -7.547739028930664
    9. 'i' → logprob: -7.797739028930664
    10. '                   ' → logprob: -8.047739028930664

Token 1153: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038862720131874084
    2. 'if' → logprob: -3.663862705230713
    3. 'for' → logprob: -4.663862705230713
    4. 'prod' → logprob: -6.413862705230713
    5. 'cmp' → logprob: -7.663862705230713
    6. '```' → logprob: -8.288863182067871
    7. ' for' → logprob: -9.538863182067871
    8. 'idx' → logprob: -9.663863182067871
    9. 'comp' → logprob: -9.788863182067871
    10. ' if' → logprob: -9.913863182067871

Token 1154: ' primes' (ID: 104042)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7230679392814636
    2. '#' → logprob: -2.0980679988861084
    3. ' all' → logprob: -2.7230679988861084
    4. 'new' → logprob: -2.8480679988861084
    5. ' not' → logprob: -2.8480679988861084
    6. 'all' → logprob: -3.0980679988861084
    7. '           ' → logprob: -3.2230679988861084
    8. ' new' → logprob: -3.4730679988861084
    9. 'not' → logprob: -3.4730679988861084
    10. ' if' → logprob: -3.5980679988861084

Token 1155: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8318235278129578
    2. '=' → logprob: -1.4568235874176025
    3. 'are' → logprob: -2.3318235874176025
    4. ':' → logprob: -3.2068235874176025
    5. ' are' → logprob: -3.2068235874176025
    6. '==' → logprob: -3.8318235874176025
    7. 'for' → logprob: -4.081823348999023
    8. '```' → logprob: -4.206823348999023
    9. 'continue' → logprob: -5.081823348999023
    10. '[' → logprob: -5.081823348999023

Token 1156: '4' (ID: 19)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002353640884393826
    2. ' [' → logprob: -8.625235557556152
    3. '7' → logprob: -10.125235557556152
    4. '(' → logprob: -11.875235557556152
    5. '```' → logprob: -13.500235557556152
    6. '=[' → logprob: -14.000235557556152
    7. '[(' → logprob: -14.000235557556152
    8. '4' → logprob: -14.000235557556152
    9. '           ' → logprob: -14.125235557556152
    10. '   ' → logprob: -14.250235557556152

Token 1157: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22966332733631134
    2. '       ' → logprob: -1.604663372039795
    3. 'if' → logprob: -5.854663372039795
    4. ' if' → logprob: -7.479663372039795
    5. '```' → logprob: -8.354662895202637
    6. 'for' → logprob: -8.979662895202637
    7. ',' → logprob: -9.229662895202637
    8. '               ' → logprob: -9.979662895202637
    9. ':' → logprob: -9.979662895202637
    10. '
' → logprob: -10.104662895202637

Token 1158: ' so' (ID: 813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7240555882453918
    2. ' if' → logprob: -0.8490555882453918
    3. '           ' → logprob: -2.974055528640747
    4. ' for' → logprob: -3.974055528640747
    5. 'for' → logprob: -5.224055767059326
    6. '               ' → logprob: -5.724055767059326
    7. '```' → logprob: -5.974055767059326
    8. '#' → logprob: -6.099055767059326
    9. ' all' → logprob: -6.974055767059326
    10. ' first' → logprob: -8.099055290222168

Token 1159: ' compare' (ID: 12221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07439059764146805
    2. ' for' → logprob: -3.1993906497955322
    3. '               ' → logprob: -4.324390411376953
    4. '```' → logprob: -5.449390411376953
    5. 'if' → logprob: -5.824390411376953
    6. 'all' → logprob: -5.949390411376953
    7. 'found' → logprob: -6.199390411376953
    8. '``' → logprob: -7.074390411376953
    9. 'equal' → logprob: -7.074390411376953
    10. 'flag' → logprob: -7.449390411376953

Token 1160: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3249552845954895
    2. '           ' → logprob: -1.8249552249908447
    3. 'if' → logprob: -3.0749552249908447
    4. ' for' → logprob: -3.5749552249908447
    5. '```' → logprob: -3.8249552249908447
    6. '               ' → logprob: -4.574955463409424
    7. '``' → logprob: -5.949955463409424
    8. '       ' → logprob: -6.574955463409424
    9. 'all' → logprob: -7.074955463409424
    10. 'flag' → logprob: -7.074955463409424

Token 1161: ' tuple' (ID: 31311)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2310173511505127
    2. 'all' → logprob: -1.4810173511505127
    3. 'for' → logprob: -2.3560173511505127
    4. 'f' → logprob: -2.6060173511505127
    5. 'def' → logprob: -2.8560173511505127
    6. ' follows' → logprob: -2.8560173511505127
    7. '```' → logprob: -3.2310173511505127
    8. 'pr' → logprob: -3.4810173511505127
    9. 'tuple' → logprob: -3.4810173511505127
    10. 'any' → logprob: -3.9810173511505127

Token 1162: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08227763324975967
    2. 'if' → logprob: -3.582277536392212
    3. ' if' → logprob: -3.707277536392212
    4. ':
' → logprob: -4.332277774810791
    5. '{
' → logprob: -5.457277774810791
    6. ',' → logprob: -6.082277774810791
    7. ':' → logprob: -6.832277774810791
    8. '       ' → logprob: -7.207277774810791
    9. '```' → logprob: -7.207277774810791
    10. ' =' → logprob: -7.457277774810791

Token 1163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043710620957426727
    2. '```' → logprob: -7.875437259674072
    3. '       ' → logprob: -10.375436782836914
    4. 'if' → logprob: -11.000436782836914
    5. '               ' → logprob: -12.875436782836914
    6. ' if' → logprob: -13.375436782836914
    7. '{
' → logprob: -13.750436782836914
    8. '		' → logprob: -14.250436782836914
    9. '``' → logprob: -14.250436782836914
    10. ',' → logprob: -14.750436782836914

Token 1164: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04381600394845009
    2. 'if' → logprob: -3.168816089630127
    3. ' if' → logprob: -7.418816089630127
    4. 'for' → logprob: -9.418815612792969
    5. '               ' → logprob: -9.668815612792969
    6. '```' → logprob: -9.918815612792969
    7. '{
' → logprob: -12.293815612792969
    8. '       ' → logprob: -12.543815612792969
    9. ' for' → logprob: -12.793815612792969
    10. '``' → logprob: -13.043815612792969

Token 1165: ' If' (ID: 1843)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11549346148967743
    2. 'if' → logprob: -2.2404935359954834
    3. ' if' → logprob: -6.365493297576904
    4. 'for' → logprob: -7.365493297576904
    5. 'cmp' → logprob: -9.490493774414062
    6. 'prod' → logprob: -9.865493774414062
    7. ' for' → logprob: -10.115493774414062
    8. '```' → logprob: -10.365493774414062
    9. '               ' → logprob: -10.615493774414062
    10. 'idx' → logprob: -11.365493774414062

Token 1166: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.34929999709129333
    2. 'less' → logprob: -1.4743000268936157
    3. 'all' → logprob: -3.099299907684326
    4. 'not' → logprob: -4.474299907684326
    5. ' new' → logprob: -5.599299907684326
    6. 'any' → logprob: -6.224299907684326
    7. '(new' → logprob: -7.099299907684326
    8. ' all' → logprob: -7.224299907684326
    9. '(not' → logprob: -7.724299907684326
    10. ' less' → logprob: -8.224300384521484

Token 1167: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001121403300203383
    2. '_f' → logprob: -6.876121520996094
    3. '```' → logprob: -10.501121520996094
    4. 's' → logprob: -10.626121520996094
    5. '_s' → logprob: -10.876121520996094
    6. '``' → logprob: -13.126121520996094
    7. 'factor' → logprob: -13.251121520996094
    8. 'for' → logprob: -13.501121520996094
    9. '_factor' → logprob: -13.626121520996094
    10. ')' → logprob: -13.751121520996094

Token 1168: ' <' (ID: 464)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.264976441860199
    2. '<=' → logprob: -2.0149765014648438
    3. ' <=' → logprob: -3.1399765014648438
    4. '==' → logprob: -4.264976501464844
    5. ' <' → logprob: -4.389976501464844
    6. '>' → logprob: -4.639976501464844
    7. '>=' → logprob: -5.514976501464844
    8. '<' → logprob: -5.514976501464844
    9. '[' → logprob: -5.639976501464844
    10. ' ==' → logprob: -5.889976501464844

Token 1169: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.2097073346376419
    2. ' prod' → logprob: -1.7097073793411255
    3. 'new' → logprob: -5.209707260131836
    4. ' new' → logprob: -7.084707260131836
    5. 'tuple' → logprob: -7.334707260131836
    6. ' tuple' → logprob: -8.209707260131836
    7. '(prod' → logprob: -8.334707260131836
    8. '(' → logprob: -8.709707260131836
    9. '           ' → logprob: -8.709707260131836
    10. '=' → logprob: -9.209707260131836

Token 1170: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00013655527436640114
    2. 's' → logprob: -9.000136375427246
    3. '_f' → logprob: -11.875136375427246
    4. '```' → logprob: -13.375136375427246
    5. '_factor' → logprob: -13.500136375427246
    6. 'f' → logprob: -14.000136375427246
    7. 'factor' → logprob: -14.500136375427246
    8. '``' → logprob: -14.625136375427246
    9. '   ' → logprob: -15.000136375427246
    10. '`' → logprob: -15.250136375427246

Token 1171: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.000111768240458332
    2. 'factor' → logprob: -9.12511157989502
    3. '
' → logprob: -14.12511157989502
    4. 'Factor' → logprob: -15.00011157989502
    5. '   ' → logprob: -15.37511157989502
    6. '```' → logprob: -15.62511157989502
    7. ')' → logprob: -15.87511157989502
    8. '_fac' → logprob: -16.000112533569336
    9. '_fact' → logprob: -16.250112533569336
    10. '[' → logprob: -16.375112533569336

Token 1172: ' =>' (ID: 871)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.9579212665557861
    2. ' and' → logprob: -1.4579212665557861
    3. ':
' → logprob: -1.9579212665557861
    4. '           ' → logprob: -2.207921266555786
    5. ':' → logprob: -2.707921266555786
    6. '               ' → logprob: -3.582921266555786
    7. '==' → logprob: -4.832921028137207
    8. ' or' → logprob: -4.957921028137207
    9. 'or' → logprob: -5.207921028137207
    10. 'if' → logprob: -5.207921028137207

Token 1173: ' less' (ID: 3760)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6724677085876465
    2. 'total' → logprob: -0.7974677085876465
    3. ' total' → logprob: -3.9224677085876465
    4. 'ans' → logprob: -5.1724677085876465
    5. ' True' → logprob: -5.1724677085876465
    6. 'dfs' → logprob: -5.2974677085876465
    7. '           ' → logprob: -6.9224677085876465
    8. 'new' → logprob: -7.7974677085876465
    9. ' dfs' → logprob: -7.7974677085876465
    10. ' ans' → logprob: -8.172468185424805

Token 1174: '_flag' (ID: 25269)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8788875937461853
    2. '               ' → logprob: -1.12888765335083
    3. ':' → logprob: -2.25388765335083
    4. '_flag' → logprob: -2.62888765335083
    5. 'if' → logprob: -3.25388765335083
    6. ':
' → logprob: -4.25388765335083
    7. '_s' → logprob: -4.87888765335083
    8. '_factor' → logprob: -5.12888765335083
    9. '=' → logprob: -5.62888765335083
    10. ' =' → logprob: -6.25388765335083

Token 1175: '=True' (ID: 7827)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029102873057127
    2. '               ' → logprob: -4.904102802276611
    3. ' =' → logprob: -5.154102802276611
    4. ':' → logprob: -5.154102802276611
    5. ' and' → logprob: -5.654102802276611
    6. ':
' → logprob: -6.029102802276611
    7. '=' → logprob: -7.029102802276611
    8. ' or' → logprob: -7.029102802276611
    9. ' ==' → logprob: -8.02910327911377
    10. '=True' → logprob: -8.02910327911377

Token 1176: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020926215802319348
    2. '       ' → logprob: -9.125208854675293
    3. 'if' → logprob: -9.750208854675293
    4. '               ' → logprob: -10.625208854675293
    5. '```' → logprob: -11.750208854675293
    6. ' if' → logprob: -12.500208854675293
    7. ',' → logprob: -13.375208854675293
    8. '{
' → logprob: -13.375208854675293
    9. '                   ' → logprob: -14.250208854675293
    10. '		' → logprob: -14.625208854675293

Token 1177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007561430102214217
    2. '```' → logprob: -7.25075626373291
    3. '       ' → logprob: -10.75075626373291
    4. '               ' → logprob: -11.25075626373291
    5. '``' → logprob: -12.87575626373291
    6. '{
' → logprob: -12.87575626373291
    7. ',' → logprob: -13.75075626373291
    8. ' if' → logprob: -13.87575626373291
    9. 'if' → logprob: -14.25075626373291
    10. '		' → logprob: -14.37575626373291

Token 1178: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050596535205841064
    2. 'if' → logprob: -3.0505964756011963
    3. ' if' → logprob: -6.675596714019775
    4. '       ' → logprob: -7.300596714019775
    5. '               ' → logprob: -9.800596237182617
    6. '
' → logprob: -12.800596237182617
    7. '```' → logprob: -13.300596237182617
    8. '   ' → logprob: -13.425596237182617
    9. '{
' → logprob: -13.425596237182617
    10. 'for' → logprob: -13.550596237182617

Token 1179: ' If' (ID: 1843)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015942457830533385
    2. 'if' → logprob: -6.501594066619873
    3. ' if' → logprob: -9.626594543457031
    4. '```' → logprob: -11.751594543457031
    5. '{
' → logprob: -12.251594543457031
    6. '
' → logprob: -12.626594543457031
    7. '       ' → logprob: -13.376594543457031
    8. '		' → logprob: -13.376594543457031
    9. '#' → logprob: -13.876594543457031
    10. '               ' → logprob: -14.001594543457031

Token 1180: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16207759082317352
    2. ' new' → logprob: -2.0370776653289795
    3. 'less' → logprob: -4.5370774269104
    4. 'all' → logprob: -5.5370774269104
    5. ' all' → logprob: -6.2870774269104
    6. 'not' → logprob: -6.9120774269104
    7. ' less' → logprob: -7.1620774269104
    8. 'tuple' → logprob: -7.9120774269104
    9. ' not' → logprob: -8.537077903747559
    10. ' tuple' → logprob: -9.037077903747559

Token 1181: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00026288547087460756
    2. '_f' → logprob: -8.500263214111328
    3. '==' → logprob: -11.000263214111328
    4. '```' → logprob: -11.500263214111328
    5. '_' → logprob: -12.125263214111328
    6. '=' → logprob: -12.750263214111328
    7. '
' → logprob: -12.750263214111328
    8. ' ==' → logprob: -12.875263214111328
    9. 'if' → logprob: -12.875263214111328
    10. '``' → logprob: -13.000263214111328

Token 1182: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.043135866522789
    2. ' ==' → logprob: -3.41813588142395
    3. '[i' → logprob: -4.793135643005371
    4. '<=' → logprob: -7.168135643005371
    5. '==
' → logprob: -9.543135643005371
    6. '>' → logprob: -9.668135643005371
    7. '!=' → logprob: -10.293135643005371
    8. ' <=' → logprob: -10.293135643005371
    9. '           ' → logprob: -10.418135643005371
    10. '```' → logprob: -10.668135643005371

Token 1183: ' prod' (ID: 10207)
  Prédit: ' prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.5304090976715088
    2. 'prod' → logprob: -1.2804090976715088
    3. 'new' → logprob: -2.405409097671509
    4. ' new' → logprob: -3.155409097671509
    5. '(prod' → logprob: -7.78040885925293
    6. 'tuple' → logprob: -8.65540885925293
    7. ' tuple' → logprob: -9.40540885925293
    8. '(' → logprob: -9.90540885925293
    9. '(new' → logprob: -10.28040885925293
    10. 'pro' → logprob: -10.65540885925293

Token 1184: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.23925639688968658
    2. '_f' → logprob: -1.9892563819885254
    3. 'f' → logprob: -2.6142563819885254
    4. '_factor' → logprob: -6.239256381988525
    5. 'factor' → logprob: -8.489256858825684
    6. 's' → logprob: -8.489256858825684
    7. '```' → logprob: -8.614256858825684
    8. '``' → logprob: -9.364256858825684
    9. ''_' → logprob: -9.739256858825684
    10. '_fac' → logprob: -11.614256858825684

Token 1185: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00034940900513902307
    2. 'factor' → logprob: -8.750349044799805
    3. '_s' → logprob: -9.500349044799805
    4. '_f' → logprob: -11.000349044799805
    5. '   ' → logprob: -11.125349044799805
    6. '```' → logprob: -11.125349044799805
    7. '_fac' → logprob: -11.625349044799805
    8. '``' → logprob: -11.875349044799805
    9. '_flag' → logprob: -11.875349044799805
    10. '\' → logprob: -12.500349044799805

Token 1186: ' =>' (ID: 871)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.646151602268219
    2. 'and' → logprob: -1.1461515426635742
    3. ':' → logprob: -2.146151542663574
    4. ':
' → logprob: -3.396151542663574
    5. '           ' → logprob: -5.646151542663574
    6. '==' → logprob: -6.271151542663574
    7. '=' → logprob: -7.521151542663574
    8. ',' → logprob: -8.521151542663574
    9. ' or' → logprob: -8.521151542663574
    10. '       ' → logprob: -8.521151542663574

Token 1187: ' less' (ID: 3760)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7885273098945618
    2. ' if' → logprob: -1.288527250289917
    3. ' new' → logprob: -1.413527250289917
    4. 'new' → logprob: -4.038527488708496
    5. ' less' → logprob: -6.413527488708496
    6. 'dig' → logprob: -6.413527488708496
    7. ' dig' → logprob: -6.788527488708496
    8. 'dfs' → logprob: -7.163527488708496
    9. ' prod' → logprob: -7.288527488708496
    10. '(new' → logprob: -7.288527488708496

Token 1188: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.047721926122903824
    2. 'if' → logprob: -3.6727218627929688
    3. 'flag' → logprob: -4.047721862792969
    4. 'f' → logprob: -6.672721862792969
    5. 'Flag' → logprob: -7.047721862792969
    6. '_f' → logprob: -7.672721862792969
    7. '           ' → logprob: -8.047721862792969
    8. ':' → logprob: -8.797721862792969
    9. 'continue' → logprob: -9.047721862792969
    10. '_FLAG' → logprob: -9.047721862792969

Token 1189: '=False' (ID: 12148)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6792956590652466
    2. '=False' → logprob: -0.8042956590652466
    3. '==' → logprob: -3.429295539855957
    4. ' =' → logprob: -5.179295539855957
    5. '=True' → logprob: -5.554295539855957
    6. 'False' → logprob: -6.179295539855957
    7. '           ' → logprob: -7.929295539855957
    8. 'and' → logprob: -8.554295539855957
    9. '```' → logprob: -8.679295539855957
    10. ' ==' → logprob: -9.054295539855957

Token 1190: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002529952325858176
    2. ',' → logprob: -9.750252723693848
    3. '```' → logprob: -9.750252723693848
    4. ' if' → logprob: -10.125252723693848
    5. 'elif' → logprob: -11.000252723693848
    6. 'if' → logprob: -11.250252723693848
    7. '       ' → logprob: -11.750252723693848
    8. ' or' → logprob: -11.750252723693848
    9. ' and' → logprob: -11.750252723693848
    10. '<|end|>' → logprob: -11.875252723693848

Token 1191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013436852023005486
    2. '```' → logprob: -7.376343727111816
    3. '       ' → logprob: -8.001343727111816
    4. '               ' → logprob: -8.251343727111816
    5. ' else' → logprob: -10.626343727111816
    6. '          ' → logprob: -10.876343727111816
    7. ' if' → logprob: -10.876343727111816
    8. '``' → logprob: -11.876343727111816
    9. '         ' → logprob: -12.126343727111816
    10. ',' → logprob: -12.251343727111816

Token 1192: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04823858290910721
    2. 'if' → logprob: -3.173238515853882
    3. '       ' → logprob: -5.923238754272461
    4. ' if' → logprob: -6.048238754272461
    5. '```' → logprob: -9.298238754272461
    6. '               ' → logprob: -10.798238754272461
    7. '{
' → logprob: -10.923238754272461
    8. '
' → logprob: -11.048238754272461
    9. 'for' → logprob: -11.298238754272461
    10. '``' → logprob: -12.173238754272461

Token 1193: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05662386491894722
    2. 'if' → logprob: -2.931623935699463
    3. 'cmp' → logprob: -7.181623935699463
    4. ' if' → logprob: -7.431623935699463
    5. '```' → logprob: -8.556623458862305
    6. 'for' → logprob: -9.306623458862305
    7. 'comp' → logprob: -10.431623458862305
    8. '       ' → logprob: -11.181623458862305
    9. 'compare' → logprob: -11.556623458862305
    10. '``' → logprob: -11.931623458862305

Token 1194: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8675864934921265
    2. ' if' → logprob: -0.8675864934921265
    3. 'if' → logprob: -1.8675864934921265
    4. '               ' → logprob: -5.367586612701416
    5. 'continue' → logprob: -8.117586135864258
    6. ' continue' → logprob: -8.367586135864258
    7. '```' → logprob: -8.742586135864258
    8. '                   ' → logprob: -10.492586135864258
    9. '{
' → logprob: -10.492586135864258
    10. ' new' → logprob: -10.867586135864258

Token 1195: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001906024175696075
    2. '```' → logprob: -6.376905918121338
    3. '       ' → logprob: -9.001906394958496
    4. 'if' → logprob: -10.751906394958496
    5. ' if' → logprob: -10.876906394958496
    6. '               ' → logprob: -11.126906394958496
    7. '{
' → logprob: -11.876906394958496
    8. '``' → logprob: -12.751906394958496
    9. ',' → logprob: -13.001906394958496
    10. '		' → logprob: -13.251906394958496

Token 1196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28590384125709534
    2. '       ' → logprob: -1.535903811454773
    3. '```' → logprob: -3.4109039306640625
    4. 'if' → logprob: -9.160903930664062
    5. '``' → logprob: -9.410903930664062
    6. '{
' → logprob: -9.535903930664062
    7. ' if' → logprob: -10.160903930664062
    8. '{' → logprob: -10.285903930664062
    9. '               ' → logprob: -11.035903930664062
    10. '   ' → logprob: -12.160903930664062

Token 1197: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15038582682609558
    2. 'if' → logprob: -2.150385856628418
    3. 'for' → logprob: -4.275385856628418
    4. '       ' → logprob: -5.525385856628418
    5. ' if' → logprob: -6.400385856628418
    6. 'idx' → logprob: -6.900385856628418
    7. 'i' → logprob: -7.150385856628418
    8. ' for' → logprob: -7.275385856628418
    9. '               ' → logprob: -7.900385856628418
    10. 'cmp' → logprob: -8.775385856628418

Token 1198: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0066690705716609955
    2. ' for' → logprob: -6.631669044494629
    3. 'if' → logprob: -6.631669044494629
    4. 'for' → logprob: -6.631669044494629
    5. 'i' → logprob: -7.256669044494629
    6. ' if' → logprob: -8.006669044494629
    7. '```' → logprob: -8.006669044494629
    8. 'idx' → logprob: -8.256669044494629
    9. 'prod' → logprob: -8.381669044494629
    10. ' i' → logprob: -8.756669044494629

Token 1199: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8513914346694946
    2. '           ' → logprob: -1.7263914346694946
    3. 'if' → logprob: -1.9763914346694946
    4. ' prod' → logprob: -1.9763914346694946
    5. 'prod' → logprob: -3.101391315460205
    6. 'sum' → logprob: -4.226391315460205
    7. '#' → logprob: -4.476391315460205
    8. ' for' → logprob: -4.601391315460205
    9. ' sum' → logprob: -4.601391315460205
    10. ' #' → logprob: -5.101391315460205

Token 1200: ' need' (ID: 1309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5629887580871582
    2. 'continue' → logprob: -1.4379887580871582
    3. ' need' → logprob: -2.687988758087158
    4. '           ' → logprob: -3.062988758087158
    5. ' should' → logprob: -4.437988758087158
    6. ' can' → logprob: -4.562988758087158
    7. 'cannot' → logprob: -5.062988758087158
    8. ' if' → logprob: -5.062988758087158
    9. ' cannot' → logprob: -5.187988758087158
    10. 'need' → logprob: -5.187988758087158

Token 1201: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.037783145904541
    2. ' new' → logprob: -1.662783145904541
    3. 'sum' → logprob: -2.037783145904541
    4. ' all' → logprob: -2.662783145904541
    5. ' prod' → logprob: -2.912783145904541
    6. 'prod' → logprob: -3.037783145904541
    7. 'new' → logprob: -3.662783145904541
    8. '#' → logprob: -3.662783145904541
    9. ' sum' → logprob: -3.662783145904541
    10. ' not' → logprob: -4.037783145904541

Token 1202: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.874739408493042
    2. 'for' → logprob: -1.624739408493042
    3. 'continue' → logprob: -2.249739408493042
    4. 'compare' → logprob: -2.499739408493042
    5. '
' → logprob: -2.999739408493042
    6. '```' → logprob: -3.374739408493042
    7. '#' → logprob: -3.874739408493042
    8. ' for' → logprob: -3.874739408493042
    9. '           ' → logprob: -4.374739646911621
    10. 'check' → logprob: -4.374739646911621

Token 1203: ' sum' (ID: 4215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9745301008224487
    2. ' for' → logprob: -0.9745301008224487
    3. 'for' → logprob: -2.0995302200317383
    4. 'if' → logprob: -3.3495302200317383
    5. 'prod' → logprob: -3.3495302200317383
    6. ' if' → logprob: -3.8495302200317383
    7. ' prod' → logprob: -3.9745302200317383
    8. '```' → logprob: -5.849530220031738
    9. ' new' → logprob: -6.099530220031738
    10. 'new' → logprob: -7.099530220031738

Token 1204: ' digits' (ID: 37806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4945855736732483
    2. '           ' → logprob: -1.7445855140686035
    3. '+' → logprob: -2.6195855140686035
    4. 'd' → logprob: -3.1195855140686035
    5. ' +' → logprob: -3.9945855140686035
    6. 'if' → logprob: -4.3695855140686035
    7. '==' → logprob: -4.7445855140686035
    8. ' if' → logprob: -4.7445855140686035
    9. 'sum' → logprob: -4.9945855140686035
    10. 's' → logprob: -5.2445855140686035

Token 1205: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25482869148254395
    2. '           ' → logprob: -1.504828691482544
    3. ' if' → logprob: -7.504828453063965
    4. ',' → logprob: -7.504828453063965
    5. '
' → logprob: -7.629828453063965
    6. ')' → logprob: -7.629828453063965
    7. 'if' → logprob: -8.379828453063965
    8. '```' → logprob: -9.254828453063965
    9. '               ' → logprob: -9.629828453063965
    10. 'for' → logprob: -9.879828453063965

Token 1206: ' well' (ID: 1775)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8323818445205688
    2. 'digits' → logprob: -1.2073818445205688
    3. 'sum' → logprob: -3.0823817253112793
    4. 'well' → logprob: -3.8323817253112793
    5. '           ' → logprob: -4.207381725311279
    6. '```' → logprob: -4.332381725311279
    7. ' well' → logprob: -4.457381725311279
    8. 'continue' → logprob: -4.457381725311279
    9. 'dp' → logprob: -4.582381725311279
    10. '0' → logprob: -4.582381725311279

Token 1207: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2032395899295807
    2. '           ' → logprob: -1.7032395601272583
    3. '<|end|>' → logprob: -7.328239440917969
    4. ',' → logprob: -8.328239440917969
    5. ')' → logprob: -8.578239440917969
    6. ' if' → logprob: -8.828239440917969
    7. '   ' → logprob: -8.828239440917969
    8. 'if' → logprob: -8.953239440917969
    9. '               ' → logprob: -10.078239440917969
    10. '		' → logprob: -10.203239440917969

Token 1208: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023123843129724264
    2. '           ' → logprob: -6.627312183380127
    3. ' if' → logprob: -8.252312660217285
    4. '```' → logprob: -8.377312660217285
    5. ',' → logprob: -8.627312660217285
    6. ')' → logprob: -9.377312660217285
    7. ' for' → logprob: -10.252312660217285
    8. '{' → logprob: -10.377312660217285
    9. '        ' → logprob: -10.502312660217285
    10. '<|end|>' → logprob: -10.752312660217285

Token 1209: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009961479343473911
    2. 'if' → logprob: -5.3849616050720215
    3. ' if' → logprob: -5.5099616050720215
    4. '       ' → logprob: -7.8849616050720215
    5. 'prod' → logprob: -8.009961128234863
    6. 'sum' → logprob: -8.884961128234863
    7. ' for' → logprob: -9.134961128234863
    8. '```' → logprob: -9.259961128234863
    9. 'for' → logprob: -9.509961128234863
    10. ' prod' → logprob: -10.134961128234863

Token 1210: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2619132995605469
    2. 'if' → logprob: -1.2619132995605469
    3. ' if' → logprob: -1.2619132995605469
    4. '       ' → logprob: -2.261913299560547
    5. 'sum' → logprob: -3.761913299560547
    6. 'prod' → logprob: -4.886913299560547
    7. ' sum' → logprob: -5.261913299560547
    8. ' prod' → logprob: -5.636913299560547
    9. 'digit' → logprob: -7.136913299560547
    10. 'd' → logprob: -7.261913299560547

Token 1211: ' must' (ID: 2804)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1039237231016159
    2. '       ' → logprob: -2.978923797607422
    3. ' if' → logprob: -4.353923797607422
    4. 'if' → logprob: -5.103923797607422
    5. '   ' → logprob: -5.353923797607422
    6. 'continue' → logprob: -5.478923797607422
    7. ' continue' → logprob: -5.978923797607422
    8. ' need' → logprob: -6.103923797607422
    9. '```' → logprob: -6.353923797607422
    10. '               ' → logprob: -6.478923797607422

Token 1212: ' ensure' (ID: 6757)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1391171216964722
    2. 'continue' → logprob: -1.2641171216964722
    3. 'check' → logprob: -1.3891171216964722
    4. 'sum' → logprob: -2.7641172409057617
    5. ' check' → logprob: -3.6391172409057617
    6. '#' → logprob: -4.014117240905762
    7. '       ' → logprob: -4.889117240905762
    8. '               ' → logprob: -5.389117240905762
    9. '```' → logprob: -5.389117240905762
    10. 'if' → logprob: -5.889117240905762

Token 1213: ' the' (ID: 290)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3737471103668213
    2. 'new' → logprob: -2.6237471103668213
    3. ' new' → logprob: -2.7487471103668213
    4. 'False' → logprob: -2.7487471103668213
    5. ' sum' → logprob: -2.9987471103668213
    6. ' False' → logprob: -4.248746871948242
    7. 'digits' → logprob: -4.373746871948242
    8. 'pos' → logprob: -4.998746871948242
    9. 'dfs' → logprob: -5.748746871948242
    10. ' digits' → logprob: -5.873746871948242

Token 1214: ' total' (ID: 3609)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2670992910861969
    2. ' sum' → logprob: -2.517099380493164
    3. ' new' → logprob: -2.767099380493164
    4. 'new' → logprob: -3.142099380493164
    5. 'pos' → logprob: -3.642099380493164
    6. 'dig' → logprob: -5.392099380493164
    7. ' pos' → logprob: -5.642099380493164
    8. 's' → logprob: -6.017099380493164
    9. 'digits' → logprob: -6.392099380493164
    10. 'dfs' → logprob: -6.767099380493164

Token 1215: ' digits' (ID: 37806)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6993771195411682
    2. '           ' → logprob: -1.4493770599365234
    3. 'digit' → logprob: -1.9493770599365234
    4. 'd' → logprob: -3.1993770599365234
    5. '_sum' → logprob: -3.9493770599365234
    6. 'digits' → logprob: -3.9493770599365234
    7. '       ' → logprob: -4.074377059936523
    8. '```' → logprob: -4.949377059936523
    9. ' sum' → logprob: -5.074377059936523
    10. '   ' → logprob: -6.199377059936523

Token 1216: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6022468209266663
    2. ' +' → logprob: -2.1022467613220215
    3. ' <=' → logprob: -2.3522467613220215
    4. 'sum' → logprob: -2.7272467613220215
    5. '+' → logprob: -2.8522467613220215
    6. '<=' → logprob: -3.6022467613220215
    7. '           ' → logprob: -4.1022467613220215
    8. ' <' → logprob: -4.2272467613220215
    9. ' and' → logprob: -4.9772467613220215
    10. '_sum' → logprob: -5.1022467613220215

Token 1217: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5772813558578491
    2. ' <=' → logprob: -1.5772813558578491
    3. ' +' → logprob: -3.3272814750671387
    4. ' <' → logprob: -3.4522814750671387
    5. '<=' → logprob: -3.4522814750671387
    6. ' ==' → logprob: -3.5772814750671387
    7. '+' → logprob: -3.8272814750671387
    8. '       ' → logprob: -4.077281475067139
    9. '==' → logprob: -4.202281475067139
    10. ' if' → logprob: -4.952281475067139

Token 1218: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.212311029434204
    2. '0' → logprob: -2.587311029434204
    3. '<=' → logprob: -2.587311029434204
    4. ' not' → logprob: -2.587311029434204
    5. 'not' → logprob: -2.712311029434204
    6. 'less' → logprob: -2.962311029434204
    7. ' less' → logprob: -3.337311029434204
    8. 'ans' → logprob: -3.337311029434204
    9. ' exactly' → logprob: -3.462311029434204
    10. 'equal' → logprob: -3.462311029434204

Token 1219: '_s' (ID: 1278)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21319358050823212
    2. 'd' → logprob: -2.338193655014038
    3. '           ' → logprob: -2.588193655014038
    4. ')' → logprob: -5.463193416595459
    5. '               ' → logprob: -5.463193416595459
    6. '_' → logprob: -6.088193416595459
    7. '        ' → logprob: -6.713193416595459
    8. '      ' → logprob: -7.088193416595459
    9. '          ' → logprob: -7.338193416595459
    10. ',' → logprob: -7.338193416595459

Token 1220: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12273255735635757
    2. '           ' → logprob: -2.247732639312744
    3. ',' → logprob: -5.747732639312744
    4. '```' → logprob: -6.122732639312744
    5. ' if' → logprob: -6.622732639312744
    6. '<|end|>' → logprob: -6.747732639312744
    7. ' for' → logprob: -7.747732639312744
    8. ')' → logprob: -7.747732639312744
    9. '   ' → logprob: -8.372732162475586
    10. '...' → logprob: -8.747732162475586

Token 1221: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014077324885874987
    2. '       ' → logprob: -6.626407623291016
    3. '#' → logprob: -10.126407623291016
    4. '               ' → logprob: -11.376407623291016
    5. '
' → logprob: -11.626407623291016
    6. '```' → logprob: -12.626407623291016
    7. '...' → logprob: -12.751407623291016
    8. 'if' → logprob: -12.751407623291016
    9. '          ' → logprob: -13.376407623291016
    10. 'for' → logprob: -13.376407623291016

Token 1222: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4328450858592987
    2. ' if' → logprob: -2.307845115661621
    3. '       ' → logprob: -2.932845115661621
    4. ' for' → logprob: -3.057845115661621
    5. 'if' → logprob: -3.307845115661621
    6. '#' → logprob: -3.807845115661621
    7. 'sum' → logprob: -4.182845115661621
    8. 'dig' → logprob: -4.307845115661621
    9. 'for' → logprob: -4.432845115661621
    10. 'd' → logprob: -4.557845115661621

Token 1223: ' generate' (ID: 10419)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8165896534919739
    2. '           ' → logprob: -1.566589593887329
    3. '```' → logprob: -1.691589593887329
    4. ' if' → logprob: -2.566589593887329
    5. 'continue' → logprob: -2.816589593887329
    6. '#' → logprob: -4.941589832305908
    7. 'digits' → logprob: -5.441589832305908
    8. '               ' → logprob: -5.441589832305908
    9. 'dig' → logprob: -5.816589832305908
    10. ' continue' → logprob: -6.691589832305908

Token 1224: ' digits' (ID: 37806)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.315810203552246
    2. '               ' → logprob: -1.565810203552246
    3. ' new' → logprob: -2.065810203552246
    4. 'digits' → logprob: -2.315810203552246
    5. ' if' → logprob: -2.440810203552246
    6. ' digits' → logprob: -3.065810203552246
    7. '```' → logprob: -3.315810203552246
    8. 'if' → logprob: -3.940810203552246
    9. '       ' → logprob: -3.940810203552246
    10. ')' → logprob: -4.065810203552246

Token 1225: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6022776365280151
    2. '           ' → logprob: -1.4772776365280151
    3. ' if' → logprob: -1.7272776365280151
    4. ' for' → logprob: -4.977277755737305
    5. 'if' → logprob: -4.977277755737305
    6. ' continue' → logprob: -5.227277755737305
    7. '```' → logprob: -5.477277755737305
    8. '   ' → logprob: -5.477277755737305
    9. ',' → logprob: -5.727277755737305
    10. '<|end|>' → logprob: -5.727277755737305

Token 1226: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12858077883720398
    2. ' sum' → logprob: -2.6285808086395264
    3. '```' → logprob: -4.503580570220947
    4. 'do' → logprob: -5.128580570220947
    5. 'keep' → logprob: -5.253580570220947
    6. ' are' → logprob: -5.628580570220947
    7. ' can' → logprob: -6.128580570220947
    8. ' do' → logprob: -6.378580570220947
    9. 'continue' → logprob: -6.503580570220947
    10. 'make' → logprob: -6.628580570220947

Token 1227: ' up' (ID: 869)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4212886095046997
    2. ' <=' → logprob: -1.5462886095046997
    3. '       ' → logprob: -2.04628849029541
    4. 'd' → logprob: -2.17128849029541
    5. '<=' → logprob: -2.17128849029541
    6. '+' → logprob: -2.29628849029541
    7. '               ' → logprob: -3.54628849029541
    8. ' +' → logprob: -3.79628849029541
    9. '=' → logprob: -4.42128849029541
    10. '```' → logprob: -4.92128849029541

Token 1228: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1022107601165771
    2. ' to' → logprob: -1.4772107601165771
    3. '           ' → logprob: -1.6022107601165771
    4. '       ' → logprob: -2.602210760116577
    5. '                   ' → logprob: -3.352210760116577
    6. ' for' → logprob: -4.102210998535156
    7. '```' → logprob: -4.102210998535156
    8. ' less' → logprob: -4.477210998535156
    9. ' continue' → logprob: -4.602210998535156
    10. ' while' → logprob: -5.102210998535156

Token 1229: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0047415029257535934
    2. '```' → logprob: -5.754741668701172
    3. ' sum' → logprob: -7.129741668701172
    4. '
' → logprob: -8.754741668701172
    5. 'prod' → logprob: -9.129741668701172
    6. 'the' → logprob: -9.129741668701172
    7. '(sum' → logprob: -9.629741668701172
    8. 'less' → logprob: -9.754741668701172
    9. '<=' → logprob: -10.254741668701172
    10. 'remaining' → logprob: -10.379741668701172

Token 1230: '_s' (ID: 1278)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35561445355415344
    2. ')' → logprob: -2.105614423751831
    3. '_' → logprob: -2.105614423751831
    4. '_s' → logprob: -3.230614423751831
    5. 's' → logprob: -4.85561466217041
    6. '_d' → logprob: -5.98061466217041
    7. '```' → logprob: -6.73061466217041
    8. ' _' → logprob: -6.98061466217041
    9. '   ' → logprob: -7.48061466217041
    10. '_)' → logprob: -7.60561466217041

Token 1231: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9365051984786987
    2. '<|end|>' → logprob: -1.4365051984786987
    3. '           ' → logprob: -1.8115051984786987
    4. '   ' → logprob: -2.4365053176879883
    5. ')' → logprob: -3.3115053176879883
    6. '...' → logprob: -4.186505317687988
    7. '<|end|>' → logprob: -4.686505317687988
    8. ' ' → logprob: -4.686505317687988
    9. '    ' → logprob: -4.811505317687988
    10. '```' → logprob: -4.936505317687988

Token 1232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3156684637069702
    2. '       ' → logprob: -1.3156684637069702
    3. '```' → logprob: -6.06566858291626
    4. '               ' → logprob: -10.440668106079102
    5. ',' → logprob: -11.065668106079102
    6. '   ' → logprob: -12.315668106079102
    7. '          ' → logprob: -12.315668106079102
    8. 'for' → logprob: -12.815668106079102
    9. ' if' → logprob: -12.940668106079102
    10. '``' → logprob: -12.940668106079102

Token 1233: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43385058641433716
    2. '       ' → logprob: -1.0588505268096924
    3. '```' → logprob: -6.1838507652282715
    4. ' if' → logprob: -6.3088507652282715
    5. 'if' → logprob: -6.8088507652282715
    6. '
' → logprob: -9.933850288391113
    7. '   ' → logprob: -10.933850288391113
    8. 'for' → logprob: -11.058850288391113
    9. '               ' → logprob: -11.183850288391113
    10. ' for' → logprob: -11.683850288391113

Token 1234: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20700038969516754
    2. '           ' → logprob: -1.7070003747940063
    3. ' if' → logprob: -5.582000255584717
    4. '
' → logprob: -7.457000255584717
    5. '```' → logprob: -7.832000255584717
    6. 'if' → logprob: -7.957000255584717
    7. ' for' → logprob: -8.582000732421875
    8. 'for' → logprob: -9.332000732421875
    9. ',' → logprob: -9.832000732421875
    10. '#' → logprob: -10.457000732421875

Token 1235: ' prune' (ID: 140388)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.300182044506073
    2. 'if' → logprob: -2.0501821041107178
    3. '           ' → logprob: -2.5501821041107178
    4. '       ' → logprob: -3.1751821041107178
    5. ' for' → logprob: -5.800181865692139
    6. 'sum' → logprob: -6.175181865692139
    7. '#' → logprob: -7.175181865692139
    8. 'for' → logprob: -7.300181865692139
    9. ' sum' → logprob: -7.300181865692139
    10. ' total' → logprob: -7.675181865692139

Token 1236: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09468411654233932
    2. '           ' → logprob: -2.96968412399292
    3. ' if' → logprob: -3.59468412399292
    4. 'if' → logprob: -5.46968412399292
    5. ' for' → logprob: -5.46968412399292
    6. 'for' → logprob: -6.34468412399292
    7. '               ' → logprob: -7.71968412399292
    8. '```' → logprob: -8.219683647155762
    9. '   ' → logprob: -8.844683647155762
    10. ',' → logprob: -8.969683647155762

Token 1237: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.19471170008182526
    2. 'if' → logprob: -2.569711685180664
    3. 'checking' → logprob: -2.569711685180664
    4. 'dfs' → logprob: -5.444711685180664
    5. 'pos' → logprob: -5.444711685180664
    6. '```' → logprob: -6.069711685180664
    7. ' sum' → logprob: -6.319711685180664
    8. 'continu' → logprob: -6.444711685180664
    9. 'continue' → logprob: -6.694711685180664
    10. 'dig' → logprob: -6.819711685180664

Token 1238: ' digits' (ID: 37806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6557571887969971
    2. '           ' → logprob: -1.405757188796997
    3. ' for' → logprob: -1.780757188796997
    4. '   ' → logprob: -3.780757188796997
    5. 'for' → logprob: -4.655756950378418
    6. '```' → logprob: -5.030756950378418
    7. '...' → logprob: -5.530756950378418
    8. ' if' → logprob: -5.530756950378418
    9. ' continue' → logprob: -6.155756950378418
    10. '    ' → logprob: -6.155756950378418

Token 1239: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5129713416099548
    2. '       ' → logprob: -1.0129714012145996
    3. ' for' → logprob: -4.1379714012146
    4. 'for' → logprob: -4.5129714012146
    5. '   ' → logprob: -5.7629714012146
    6. 'sum' → logprob: -6.2629714012146
    7. ' if' → logprob: -6.5129714012146
    8. '#' → logprob: -7.2629714012146
    9. '```' → logprob: -7.5129714012146
    10. 'total' → logprob: -7.6379714012146

Token 1240: ' handled' (ID: 29594)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12393081188201904
    2. '       ' → logprob: -2.2489309310913086
    3. ' for' → logprob: -5.373930931091309
    4. 'for' → logprob: -6.373930931091309
    5. '   ' → logprob: -6.623930931091309
    6. '```' → logprob: -6.623930931091309
    7. ' if' → logprob: -7.123930931091309
    8. '#' → logprob: -8.748930931091309
    9. 'sum' → logprob: -8.748930931091309
    10. '...' → logprob: -9.123930931091309

Token 1241: ' outside' (ID: 7539)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6276724338531494
    2. '       ' → logprob: -1.0026724338531494
    3. ' for' → logprob: -3.6276724338531494
    4. '<|end|>' → logprob: -3.8776724338531494
    5. '...' → logprob: -4.62767219543457
    6. ',' → logprob: -5.50267219543457
    7. '   ' → logprob: -5.50267219543457
    8. ' if' → logprob: -5.62767219543457
    9. ' continue' → logprob: -5.62767219543457
    10. ')' → logprob: -5.87767219543457

Token 1242: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34205731749534607
    2. '<|end|>' → logprob: -1.4670573472976685
    3. '           ' → logprob: -3.467057228088379
    4. '...' → logprob: -4.717057228088379
    5. '<|end|>' → logprob: -5.092057228088379
    6. ')' → logprob: -5.842057228088379
    7. '        ' → logprob: -5.842057228088379
    8. ',' → logprob: -6.967057228088379
    9. '   ' → logprob: -7.217057228088379
    10. '            ' → logprob: -7.467057228088379

Token 1243: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21319375932216644
    2. '           ' → logprob: -1.7131937742233276
    3. '<|end|>' → logprob: -4.963193893432617
    4. '```' → logprob: -5.838193893432617
    5. ',' → logprob: -8.088193893432617
    6. '   ' → logprob: -8.088193893432617
    7. '...' → logprob: -8.338193893432617
    8. '<|end|>' → logprob: -8.463193893432617
    9. ' for' → logprob: -8.713193893432617
    10. ' if' → logprob: -9.213193893432617

Token 1244: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47789183259010315
    2. '           ' → logprob: -0.9778918027877808
    3. ' if' → logprob: -6.22789192199707
    4. '```' → logprob: -7.10289192199707
    5. ',' → logprob: -8.22789192199707
    6. ' for' → logprob: -8.60289192199707
    7. 'if' → logprob: -8.97789192199707
    8. '<|end|>' → logprob: -9.35289192199707
    9. '   ' → logprob: -9.47789192199707
    10. ')' → logprob: -9.47789192199707

Token 1245: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20194418728351593
    2. '       ' → logprob: -1.7019442319869995
    3. '   ' → logprob: -8.951944351196289
    4. '```' → logprob: -9.201944351196289
    5. ' if' → logprob: -9.326944351196289
    6. '#' → logprob: -9.701944351196289
    7. '               ' → logprob: -10.701944351196289
    8. 'if' → logprob: -10.701944351196289
    9. '
' → logprob: -10.951944351196289
    10. 'for' → logprob: -11.326944351196289

Token 1246: ' here' (ID: 2105)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5233656764030457
    2. ' if' → logprob: -1.5233657360076904
    3. 'if' → logprob: -2.2733657360076904
    4. '       ' → logprob: -2.6483657360076904
    5. ' for' → logprob: -5.148365497589111
    6. 'for' → logprob: -5.648365497589111
    7. 'sum' → logprob: -6.148365497589111
    8. '   ' → logprob: -7.023365497589111
    9. '#' → logprob: -7.648365497589111
    10. ' sum' → logprob: -7.648365497589111

Token 1247: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34844592213630676
    2. '       ' → logprob: -1.7234458923339844
    3. ' if' → logprob: -2.4734458923339844
    4. 'if' → logprob: -4.098445892333984
    5. ' for' → logprob: -5.348445892333984
    6. 'for' → logprob: -6.098445892333984
    7. 'continue' → logprob: -6.098445892333984
    8. ' continue' → logprob: -6.223445892333984
    9. '   ' → logprob: -6.723445892333984
    10. ',' → logprob: -7.723445892333984

Token 1248: ' just' (ID: 1327)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.22971856594085693
    2. ' continue' → logprob: -1.854718565940857
    3. '       ' → logprob: -4.3547186851501465
    4. '           ' → logprob: -4.6047186851501465
    5. '   ' → logprob: -4.9797186851501465
    6. ' have' → logprob: -5.9797186851501465
    7. ':' → logprob: -6.1047186851501465
    8. 'have' → logprob: -6.2297186851501465
    9. '```' → logprob: -6.4797186851501465
    10. 'must' → logprob: -6.7297186851501465

Token 1249: ' compare' (ID: 12221)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6596224308013916
    2. 'check' → logprob: -1.5346224308013916
    3. 'if' → logprob: -2.2846224308013916
    4. '           ' → logprob: -2.9096224308013916
    5. 'for' → logprob: -3.2846224308013916
    6. 'pass' → logprob: -4.4096221923828125
    7. ' check' → logprob: -4.4096221923828125
    8. ' continue' → logprob: -4.4096221923828125
    9. ' if' → logprob: -5.0346221923828125
    10. ' for' → logprob: -5.1596221923828125

Token 1250: ' products' (ID: 3891)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06051084026694298
    2. '       ' → logprob: -3.4355108737945557
    3. ' if' → logprob: -4.185510635375977
    4. '               ' → logprob: -5.685510635375977
    5. 'if' → logprob: -5.935510635375977
    6. '<|end|>' → logprob: -6.560510635375977
    7. ' new' → logprob: -6.935510635375977
    8. 'new' → logprob: -7.685510635375977
    9. ')' → logprob: -7.810510635375977
    10. '...' → logprob: -7.935510635375977

Token 1251: ' increment' (ID: 24032)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09147825092077255
    2. '           ' → logprob: -2.4664783477783203
    3. '<|end|>' → logprob: -7.21647834777832
    4. ' if' → logprob: -8.09147834777832
    5. ')' → logprob: -8.21647834777832
    6. '```' → logprob: -8.34147834777832
    7. 'for' → logprob: -8.46647834777832
    8. ' for' → logprob: -8.46647834777832
    9. ',' → logprob: -8.84147834777832
    10. '...' → logprob: -9.34147834777832

Token 1252: 'ally' (ID: 2146)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16389456391334534
    2. '           ' → logprob: -2.1638946533203125
    3. '   ' → logprob: -3.5388946533203125
    4. '               ' → logprob: -5.9138946533203125
    5. 'al' → logprob: -6.0388946533203125
    6. 'sum' → logprob: -7.0388946533203125
    7. '
' → logprob: -8.538894653320312
    8. 'ally' → logprob: -9.038894653320312
    9. '                   ' → logprob: -9.163894653320312
    10. 'if' → logprob: -9.288894653320312

Token 1253: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.53352290391922
    2. '       ' → logprob: -0.90852290391922
    3. '<|end|>' → logprob: -4.908523082733154
    4. ',' → logprob: -7.408523082733154
    5. '   ' → logprob: -7.658523082733154
    6. '<|end|>' → logprob: -7.783523082733154
    7. ')' → logprob: -8.033522605895996
    8. '```' → logprob: -8.158522605895996
    9. '...' → logprob: -8.408522605895996
    10. ' if' → logprob: -8.658522605895996

Token 1254: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039319105446338654
    2. '           ' → logprob: -3.2893190383911133
    3. '```' → logprob: -6.789319038391113
    4. '<|end|>' → logprob: -10.289319038391113
    5. ' if' → logprob: -10.539319038391113
    6. '               ' → logprob: -10.914319038391113
    7. ')' → logprob: -11.164319038391113
    8. '   ' → logprob: -11.289319038391113
    9. ',' → logprob: -11.539319038391113
    10. '{' → logprob: -12.039319038391113

Token 1255: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13042660057544708
    2. '       ' → logprob: -2.1304266452789307
    3. ' if' → logprob: -5.755426406860352
    4. '               ' → logprob: -9.380426406860352
    5. 'if' → logprob: -9.505426406860352
    6. '```' → logprob: -9.630426406860352
    7. ',' → logprob: -10.505426406860352
    8. ' new' → logprob: -11.255426406860352
    9. ' for' → logprob: -11.380426406860352
    10. ')' → logprob: -11.630426406860352

Token 1256: ' Since' (ID: 12265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27063828706741333
    2. '       ' → logprob: -2.0206382274627686
    3. 'if' → logprob: -2.6456382274627686
    4. ' if' → logprob: -3.6456382274627686
    5. 'sum' → logprob: -5.145638465881348
    6. '```' → logprob: -8.270638465881348
    7. 'new' → logprob: -8.395638465881348
    8. ' sum' → logprob: -8.770638465881348
    9. '   ' → logprob: -8.895638465881348
    10. 'for' → logprob: -9.020638465881348

Token 1257: ' product' (ID: 1888)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7884267568588257
    2. 'pos' → logprob: -1.7884267568588257
    3. ' sum' → logprob: -1.7884267568588257
    4. ' pos' → logprob: -2.5384268760681152
    5. ' new' → logprob: -2.7884268760681152
    6. 'new' → logprob: -3.7884268760681152
    7. ' dig' → logprob: -4.288426876068115
    8. 'dig' → logprob: -4.788426876068115
    9. 'pro' → logprob: -5.038426876068115
    10. ' pro' → logprob: -5.163426876068115

Token 1258: ' factors' (ID: 11652)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.301413655281067
    2. '_f' → logprob: -1.676413655281067
    3. '+' → logprob: -2.0514135360717773
    4. 'factor' → logprob: -2.0514135360717773
    5. '_factor' → logprob: -2.0514135360717773
    6. '               ' → logprob: -3.9264135360717773
    7. 'f' → logprob: -4.051413536071777
    8. ' factor' → logprob: -4.176413536071777
    9. '_s' → logprob: -4.301413536071777
    10. ' <' → logprob: -4.801413536071777

Token 1259: ' can' (ID: 665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6196730136871338
    2. '==' → logprob: -2.244673013687134
    3. '[i' → logprob: -2.369673013687134
    4. ':' → logprob: -3.494673013687134
    5. '               ' → logprob: -3.619673013687134
    6. ' ==' → logprob: -3.869673013687134
    7. 'and' → logprob: -3.994673013687134
    8. ':
' → logprob: -4.119672775268555
    9. ' and' → logprob: -4.494672775268555
    10. '=' → logprob: -4.494672775268555

Token 1260: ' only' (ID: 1606)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.9429994821548462
    2. ' be' → logprob: -1.8179994821548462
    3. 'not' → logprob: -2.0679993629455566
    4. 'only' → logprob: -2.4429993629455566
    5. ' not' → logprob: -2.6929993629455566
    6. ' only' → logprob: -2.6929993629455566
    7. 'have' → logprob: -3.0679993629455566
    8. 'ex' → logprob: -4.067999362945557
    9. ' have' → logprob: -4.942999362945557
    10. '           ' → logprob: -5.442999362945557

Token 1261: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.789757251739502
    2. 'be' → logprob: -0.914757251739502
    3. ' be' → logprob: -2.414757251739502
    4. 'grow' → logprob: -3.914757251739502
    5. 'increment' → logprob: -4.414757251739502
    6. ' increase' → logprob: -5.289757251739502
    7. 'd' → logprob: -5.789757251739502
    8. 'equal' → logprob: -6.039757251739502
    9. 'have' → logprob: -6.414757251739502
    10. '   ' → logprob: -6.664757251739502

Token 1262: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08525946736335754
    2. '       ' → logprob: -2.710259437561035
    3. ',' → logprob: -5.210259437561035
    4. ' if' → logprob: -5.335259437561035
    5. ':' → logprob: -6.835259437561035
    6. '```' → logprob: -7.210259437561035
    7. ':
' → logprob: -7.585259437561035
    8. ' and' → logprob: -7.710259437561035
    9. '<|end|>' → logprob: -7.835259437561035
    10. ' for' → logprob: -8.335259437561035

Token 1263: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028130000457167625
    2. ' if' → logprob: -4.403130054473877
    3. 'if' → logprob: -4.528130054473877
    4. 'continue' → logprob: -5.903130054473877
    5. ' continue' → logprob: -6.778130054473877
    6. '       ' → logprob: -7.903130054473877
    7. '```' → logprob: -8.778129577636719
    8. '<|end|>' → logprob: -10.153129577636719
    9. '...' → logprob: -10.653129577636719
    10. '               ' → logprob: -10.653129577636719

Token 1264: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8699471354484558
    2. 'less' → logprob: -0.8699471354484558
    3. ' new' → logprob: -2.6199471950531006
    4. 'not' → logprob: -3.1199471950531006
    5. ' not' → logprob: -3.8699471950531006
    6. ' less' → logprob: -4.2449469566345215
    7. 'all' → logprob: -6.4949469566345215
    8. 'add' → logprob: -6.7449469566345215
    9. 'prod' → logprob: -6.7449469566345215
    10. ' all' → logprob: -7.2449469566345215

Token 1265: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004123192047700286
    2. '_f' → logprob: -8.000411987304688
    3. '```' → logprob: -9.875411987304688
    4. '``' → logprob: -12.000411987304688
    5. '
' → logprob: -12.125411987304688
    6. '_' → logprob: -13.000411987304688
    7. '_factor' → logprob: -13.000411987304688
    8. '`' → logprob: -14.250411987304688
    9. ')' → logprob: -14.437911987304688
    10. '_flag' → logprob: -14.562911987304688

Token 1266: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9433850646018982
    2. ' <=' → logprob: -1.443385124206543
    3. '>' → logprob: -1.693385124206543
    4. ' >' → logprob: -2.443385124206543
    5. '==' → logprob: -2.943385124206543
    6. ' ==' → logprob: -3.943385124206543
    7. '[i' → logprob: -4.193385124206543
    8. ' <' → logprob: -5.318385124206543
    9. '>=' → logprob: -5.318385124206543
    10. '<' → logprob: -6.443385124206543

Token 1267: ' prod' (ID: 10207)
  Prédit: ' prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prod' → logprob: -0.14273157715797424
    2. 'prod' → logprob: -2.0177316665649414
    3. 'pro' → logprob: -11.142731666564941
    4. '(prod' → logprob: -11.142731666564941
    5. '=' → logprob: -11.642731666564941
    6. '```' → logprob: -13.142731666564941
    7. '>' → logprob: -13.267731666564941
    8. 'new' → logprob: -13.392731666564941
    9. ' new' → logprob: -13.642731666564941
    10. ' ' → logprob: -13.767731666564941

Token 1268: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0003799104888457805
    2. '_f' → logprob: -8.50037956237793
    3. '_factor' → logprob: -10.00037956237793
    4. 's' → logprob: -10.25037956237793
    5. '```' → logprob: -10.50037956237793
    6. 'f' → logprob: -10.62537956237793
    7. 'factor' → logprob: -11.00037956237793
    8. '``' → logprob: -12.12537956237793
    9. ''_' → logprob: -12.62537956237793
    10. '   ' → logprob: -12.75037956237793

Token 1269: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -5.44312788406387e-05
    2. 'factor' → logprob: -10.375054359436035
    3. '   ' → logprob: -11.750054359436035
    4. '
' → logprob: -11.875054359436035
    5. '_f' → logprob: -13.750054359436035
    6. '```' → logprob: -13.875054359436035
    7. '#' → logprob: -14.500054359436035
    8. '[' → logprob: -14.750054359436035
    9. 'Factor' → logprob: -14.750054359436035
    10. '           ' → logprob: -14.875054359436035

Token 1270: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49635031819343567
    2. ':
' → logprob: -1.6213502883911133
    3. '           ' → logprob: -2.3713502883911133
    4. ':' → logprob: -2.4963502883911133
    5. ' or' → logprob: -5.371350288391113
    6. ',' → logprob: -5.621350288391113
    7. ' and' → logprob: -5.871350288391113
    8. 'and' → logprob: -6.121350288391113
    9. 'or' → logprob: -6.996350288391113
    10. '                   ' → logprob: -6.996350288391113

Token 1271: ' skip' (ID: 16677)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042200107127428055
    2. 'continue' → logprob: -3.4172000885009766
    3. ' continue' → logprob: -5.292200088500977
    4. '                   ' → logprob: -6.667200088500977
    5. 'break' → logprob: -6.792200088500977
    6. '```' → logprob: -7.542200088500977
    7. '                       ' → logprob: -8.417200088500977
    8. '           ' → logprob: -8.917200088500977
    9. '                               ' → logprob: -10.042200088500977
    10. ' break' → logprob: -10.167200088500977

Token 1272: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01045543234795332
    2. '               ' → logprob: -5.26045560836792
    3. '       ' → logprob: -5.38545560836792
    4. '```' → logprob: -8.385455131530762
    5. ' continue' → logprob: -9.135455131530762
    6. 'continue' → logprob: -9.635455131530762
    7. '                   ' → logprob: -9.885455131530762
    8. ',' → logprob: -10.260455131530762
    9. ' if' → logprob: -11.010455131530762
    10. '                       ' → logprob: -11.260455131530762

Token 1273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00866586435586214
    2. '```' → logprob: -5.258666038513184
    3. '               ' → logprob: -6.008666038513184
    4. '       ' → logprob: -7.258666038513184
    5. '``' → logprob: -9.008666038513184
    6. ':' → logprob: -10.633666038513184
    7. ' continue' → logprob: -10.633666038513184
    8. ',' → logprob: -11.258666038513184
    9. ' if' → logprob: -11.383666038513184
    10. ':
' → logprob: -11.508666038513184

Token 1274: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3905709981918335
    2. '       ' → logprob: -1.1405709981918335
    3. 'if' → logprob: -5.640571117401123
    4. ' if' → logprob: -9.890570640563965
    5. '               ' → logprob: -10.390570640563965
    6. '		' → logprob: -11.015570640563965
    7. '   ' → logprob: -11.265570640563965
    8. '```' → logprob: -11.265570640563965
    9. '
' → logprob: -11.890570640563965
    10. '	' → logprob: -13.015570640563965

Token 1275: ' Compare' (ID: 38200)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2292293757200241
    2. '       ' → logprob: -1.9792293310165405
    3. 'if' → logprob: -2.72922945022583
    4. ' if' → logprob: -6.72922945022583
    5. '   ' → logprob: -9.229228973388672
    6. '               ' → logprob: -10.604228973388672
    7. '```' → logprob: -10.604228973388672
    8. '+' → logprob: -11.104228973388672
    9. 'for' → logprob: -11.479228973388672
    10. '
' → logprob: -11.979228973388672

Token 1276: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33400845527648926
    2. '           ' → logprob: -1.5840084552764893
    3. ' if' → logprob: -3.5840084552764893
    4. 'for' → logprob: -3.7090084552764893
    5. 'cmp' → logprob: -4.20900821685791
    6. 'comp' → logprob: -5.70900821685791
    7. ' for' → logprob: -6.33400821685791
    8. '               ' → logprob: -7.08400821685791
    9. 'new' → logprob: -7.45900821685791
    10. '   ' → logprob: -7.58400821685791

Token 1277: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0002715873415581882
    2. '_f' → logprob: -9.000271797180176
    3. '_factor' → logprob: -10.125271797180176
    4. 'if' → logprob: -10.625271797180176
    5. '_flag' → logprob: -11.125271797180176
    6. 'factor' → logprob: -11.375271797180176
    7. '```' → logprob: -11.500271797180176
    8. 'flag' → logprob: -12.375271797180176
    9. 'prod' → logprob: -12.375271797180176
    10. 'for' → logprob: -12.750271797180176

Token 1278: ' and' (ID: 326)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16314144432544708
    2. '==' → logprob: -3.2881414890289307
    3. ' >' → logprob: -4.038141250610352
    4. 'new' → logprob: -4.038141250610352
    5. '=' → logprob: -4.163141250610352
    6. 'if' → logprob: -4.538141250610352
    7. '[' → logprob: -4.788141250610352
    8. '```' → logprob: -5.288141250610352
    9. '<' → logprob: -5.538141250610352
    10. ',' → logprob: -5.538141250610352

Token 1279: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.0002036595979006961
    2. ' prod' → logprob: -8.500204086303711
    3. '(prod' → logprob: -17.12520408630371
    4. '_prod' → logprob: -18.00020408630371
    5. '```' → logprob: -18.00020408630371
    6. 'new' → logprob: -18.25020408630371
    7. '.prod' → logprob: -18.25020408630371
    8. 'proc' → logprob: -18.37520408630371
    9. 'pro' → logprob: -18.62520408630371
    10. 'prog' → logprob: -18.62520408630371

Token 1280: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0003242607053834945
    2. 'f' → logprob: -9.250324249267578
    3. 's' → logprob: -9.250324249267578
    4. '_f' → logprob: -9.625324249267578
    5. 'factor' → logprob: -10.000324249267578
    6. '_factor' → logprob: -11.250324249267578
    7. 'prod' → logprob: -13.750324249267578
    8. '   ' → logprob: -13.875324249267578
    9. '```' → logprob: -14.125324249267578
    10. 'if' → logprob: -14.250324249267578

Token 1281: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.001727776019833982
    2. 'factor' → logprob: -6.75172758102417
    3. 'actor' → logprob: -7.75172758102417
    4. '_f' → logprob: -9.876728057861328
    5. '```' → logprob: -10.626728057861328
    6. 'ctor' → logprob: -11.251728057861328
    7. '   ' → logprob: -11.876728057861328
    8. 'or' → logprob: -12.001728057861328
    9. '``' → logprob: -12.251728057861328
    10. 'ector' → logprob: -13.251728057861328

Token 1282: ' lex' (ID: 37772)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28180932998657227
    2. 'if' → logprob: -1.5318093299865723
    3. 'for' → logprob: -4.031809329986572
    4. '```' → logprob: -4.906809329986572
    5. 'cmp' → logprob: -6.406809329986572
    6. ' if' → logprob: -7.156809329986572
    7. 'comp' → logprob: -7.906809329986572
    8. ' for' → logprob: -7.906809329986572
    9. '   ' → logprob: -8.281808853149414
    10. '``' → logprob: -8.656808853149414

Token 1283: ' order' (ID: 2569)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17227916419506073
    2. 'if' → logprob: -2.672279119491577
    3. '
' → logprob: -3.422279119491577
    4. '       ' → logprob: -3.797279119491577
    5. ':
' → logprob: -4.422279357910156
    6. ' if' → logprob: -4.922279357910156
    7. 'order' → logprob: -6.172279357910156
    8. '):
' → logprob: -6.297279357910156
    9. ' =' → logprob: -6.547279357910156
    10. '```' → logprob: -6.797279357910156

Token 1284: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049121953547000885
    2. '       ' → logprob: -3.049121856689453
    3. '```' → logprob: -7.924121856689453
    4. 'if' → logprob: -9.674121856689453
    5. ',' → logprob: -9.674121856689453
    6. ' if' → logprob: -11.049121856689453
    7. '               ' → logprob: -11.674121856689453
    8. '   ' → logprob: -12.049121856689453
    9. 'for' → logprob: -13.049121856689453
    10. '
' → logprob: -13.299121856689453

Token 1285: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34943509101867676
    2. '           ' → logprob: -1.2244350910186768
    3. ' if' → logprob: -7.849434852600098
    4. '```' → logprob: -7.974434852600098
    5. 'if' → logprob: -9.099434852600098
    6. '   ' → logprob: -9.599434852600098
    7. '               ' → logprob: -10.349434852600098
    8. '``' → logprob: -11.224434852600098
    9. '          ' → logprob: -11.849434852600098
    10. '         ' → logprob: -12.349434852600098

Token 1286: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2756810486316681
    2. 'if' → logprob: -1.7756810188293457
    3. '       ' → logprob: -2.6506810188293457
    4. ' if' → logprob: -7.525681018829346
    5. '   ' → logprob: -8.900681495666504
    6. '```' → logprob: -9.150681495666504
    7. 'for' → logprob: -9.400681495666504
    8. 'cmp' → logprob: -10.525681495666504
    9. 'prod' → logprob: -11.900681495666504
    10. '
' → logprob: -11.900681495666504

Token 1287: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7435352802276611
    2. '       ' → logprob: -1.6185352802276611
    3. ' if' → logprob: -1.6185352802276611
    4. '           ' → logprob: -2.368535280227661
    5. 'sum' → logprob: -3.618535280227661
    6. '   ' → logprob: -6.118535041809082
    7. ' sum' → logprob: -6.743535041809082
    8. '#' → logprob: -7.368535041809082
    9. 'prod' → logprob: -7.493535041809082
    10. 'pos' → logprob: -7.493535041809082

Token 1288: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8003842830657959
    2. '           ' → logprob: -0.9253842830657959
    3. ' if' → logprob: -2.050384283065796
    4. 'for' → logprob: -5.175384521484375
    5. 'not' → logprob: -5.550384521484375
    6. ' for' → logprob: -5.925384521484375
    7. ' new' → logprob: -6.050384521484375
    8. ' not' → logprob: -6.050384521484375
    9. 'new' → logprob: -6.175384521484375
    10. '   ' → logprob: -6.425384521484375

Token 1289: ' new' (ID: 620)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.027614209800958633
    2. 'not' → logprob: -3.902614116668701
    3. 'new' → logprob: -5.902614116668701
    4. ' less' → logprob: -6.152614116668701
    5. 'all' → logprob: -6.652614116668701
    6. ' not' → logprob: -8.40261459350586
    7. '   ' → logprob: -8.65261459350586
    8. '(not' → logprob: -8.90261459350586
    9. 'any' → logprob: -9.15261459350586
    10. '(' → logprob: -9.27761459350586

Token 1290: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00899730809032917
    2. '_f' → logprob: -5.258997440338135
    3. '_factor' → logprob: -6.383997440338135
    4. '```' → logprob: -6.758997440338135
    5. '``' → logprob: -7.633997440338135
    6. '           ' → logprob: -9.008996963500977
    7. 'factor' → logprob: -9.883996963500977
    8. '=' → logprob: -10.383996963500977
    9. '   ' → logprob: -10.508996963500977
    10. '       ' → logprob: -10.633996963500977

Token 1291: '[i' (ID: 1768)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8714626431465149
    2. '[i' → logprob: -0.9964626431465149
    3. ' ==' → logprob: -1.9964625835418701
    4. '>' → logprob: -3.49646258354187
    5. '<=' → logprob: -3.87146258354187
    6. ' >' → logprob: -4.746462821960449
    7. ' <=' → logprob: -4.871462821960449
    8. ' <' → logprob: -5.371462821960449
    9. '<' → logprob: -6.996462821960449
    10. '```' → logprob: -6.996462821960449

Token 1292: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014617888256907463
    2. ']' → logprob: -5.514617919921875
    3. '==' → logprob: -5.889617919921875
    4. ' ==' → logprob: -6.264617919921875
    5. ' <=' → logprob: -6.389617919921875
    6. '<=' → logprob: -6.389617919921875
    7. ' <' → logprob: -7.389617919921875
    8. '>' → logprob: -7.514617919921875
    9. '[' → logprob: -8.014617919921875
    10. '][' → logprob: -8.514617919921875

Token 1293: ' >' (ID: 1424)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5310052037239075
    2. '>' → logprob: -2.0310051441192627
    3. ' <' → logprob: -2.5310051441192627
    4. '<' → logprob: -2.5310051441192627
    5. '<=' → logprob: -2.7810051441192627
    6. ' <=' → logprob: -3.9060051441192627
    7. '<i' → logprob: -4.031005382537842
    8. ' >' → logprob: -4.406005382537842
    9. '==' → logprob: -5.281005382537842
    10. ' ==' → logprob: -6.281005382537842

Token 1294: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.0006006922340020537
    2. ' prod' → logprob: -7.500600814819336
    3. 'i' → logprob: -11.000600814819336
    4. '0' → logprob: -11.250600814819336
    5. '   ' → logprob: -11.750600814819336
    6. '```' → logprob: -13.125600814819336
    7. '(prod' → logprob: -13.375600814819336
    8. '
' → logprob: -13.750600814819336
    9. 'proc' → logprob: -14.125600814819336
    10. 'new' → logprob: -14.250600814819336

Token 1295: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0852428451180458
    2. 'f' → logprob: -3.210242748260498
    3. '_f' → logprob: -3.210242748260498
    4. 'factor' → logprob: -7.835242748260498
    5. 's' → logprob: -8.585243225097656
    6. 'd' → logprob: -9.585243225097656
    7. '           ' → logprob: -9.710243225097656
    8. 'df' → logprob: -9.835243225097656
    9. '_factor' → logprob: -9.960243225097656
    10. '_d' → logprob: -10.460243225097656

Token 1296: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0013002344639971852
    2. 'factor' → logprob: -6.75130033493042
    3. '[i' → logprob: -10.001299858093262
    4. '_f' → logprob: -10.751299858093262
    5. '_s' → logprob: -11.376299858093262
    6. '```' → logprob: -11.751299858093262
    7. '   ' → logprob: -12.001299858093262
    8. 'Factor' → logprob: -12.126299858093262
    9. '[' → logprob: -12.626299858093262
    10. 'i' → logprob: -12.751299858093262

Token 1297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5708174705505371
    2. '           ' → logprob: -1.820817470550537
    3. ':
' → logprob: -3.070817470550537
    4. '               ' → logprob: -3.195817470550537
    5. ' >' → logprob: -3.320817470550537
    6. 'if' → logprob: -3.445817470550537
    7. 'for' → logprob: -3.820817470550537
    8. '>' → logprob: -3.945817470550537
    9. ' if' → logprob: -4.695817470550537
    10. '[' → logprob: -4.820817470550537

Token 1298: ']
' (ID: 1592)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2932276725769043
    2. ':
' → logprob: -1.5432276725769043
    3. ':' → logprob: -1.9182276725769043
    4. ']:
' → logprob: -2.6682276725769043
    5. 'and' → logprob: -2.7932276725769043
    6. ' for' → logprob: -2.9182276725769043
    7. ']' → logprob: -2.9182276725769043
    8. 'for' → logprob: -2.9182276725769043
    9. ']:' → logprob: -3.0432276725769043
    10. '[i' → logprob: -5.043227672576904

Token 1299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015076763927936554
    2. '       ' → logprob: -5.515076637268066
    3. ' and' → logprob: -6.015076637268066
    4. '```' → logprob: -6.015076637268066
    5. '               ' → logprob: -6.265076637268066
    6. 'and' → logprob: -6.890076637268066
    7. ' or' → logprob: -7.515076637268066
    8. ' if' → logprob: -7.640076637268066
    9. ' for' → logprob: -7.890076637268066
    10. '==' → logprob: -8.140076637268066

Token 1300: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09313666075468063
    2. '       ' → logprob: -2.5931365489959717
    3. 'if' → logprob: -4.593136787414551
    4. ' if' → logprob: -5.718136787414551
    5. 'for' (adapté à ' for') → logprob: -7.718136787414551
    6. ' for' → logprob: -9.21813678741455
    7. '   ' → logprob: -9.46813678741455
    8. '```' → logprob: -9.46813678741455
    9. '               ' → logprob: -10.84313678741455
    10. '                   ' → logprob: -12.84313678741455

Token 1301: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.710618905955926e-05
    2. ' i' → logprob: -9.250097274780273
    3. 'idx' → logprob: -15.000097274780273
    4. '_i' → logprob: -15.500097274780273
    5. 'j' → logprob: -15.750097274780273
    6. '   ' → logprob: -15.875097274780273
    7. '0' → logprob: -16.625097274780273
    8. '```' → logprob: -17.125097274780273
    9. 'ii' → logprob: -18.250097274780273
    10. '	i' → logprob: -18.500097274780273

Token 1302: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25194251537323
    2. ' in' → logprob: -1.50194251537323
    3. '0' → logprob: -12.12694263458252
    4. ',' → logprob: -12.50194263458252
    5. '```' → logprob: -13.87694263458252
    6. '_in' → logprob: -14.12694263458252
    7. '
' → logprob: -14.25194263458252
    8. 'i' → logprob: -14.50194263458252
    9. ' ' → logprob: -14.75194263458252
    10. '<|end|>' → logprob: -15.50194263458252

Token 1303: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.662937372922897e-05
    2. ' range' → logprob: -9.250096321105957
    3. '0' → logprob: -15.125096321105957
    4. '[' → logprob: -15.750096321105957
    5. '(range' → logprob: -17.500097274780273
    6. '
' → logprob: -18.125097274780273
    7. '(' → logprob: -18.750097274780273
    8. '	range' → logprob: -19.375097274780273
    9. ' ' → logprob: -20.125097274780273
    10. '   ' → logprob: -20.250097274780273

Token 1304: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '(' → logprob: -17.875
    3. 'len' → logprob: -17.875
    4. '0' → logprob: -19.25
    5. ' ' → logprob: -19.5
    6. '3' → logprob: -20.75
    7. '```' → logprob: -20.875
    8. '1' → logprob: -22.0
    9. '
' → logprob: -22.25
    10. '   ' → logprob: -22.625

Token 1305: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. 'len' → logprob: -17.25
    3. ' ' → logprob: -19.25
    4. '0' → logprob: -19.5
    5. '3' → logprob: -19.625
    6. '
' → logprob: -21.0
    7. '1' → logprob: -21.25
    8. '(' → logprob: -22.0
    9. 'i' → logprob: -22.375
    10. 'def' → logprob: -22.5625

Token 1306: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007014202419668436
    2. ':
' → logprob: -6.007014274597168
    3. '               ' → logprob: -6.382014274597168
    4. '+' → logprob: -6.882014274597168
    5. '           ' → logprob: -7.382014274597168
    6. '       ' → logprob: -7.757014274597168
    7. '):' → logprob: -8.257014274597168
    8. ':' → logprob: -9.007014274597168
    9. '```' → logprob: -9.007014274597168
    10. '                       ' → logprob: -10.382014274597168

Token 1307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000926826149225235
    2. '           ' → logprob: -7.875926971435547
    3. ' if' → logprob: -8.250926971435547
    4. '<|end|>' → logprob: -9.250926971435547
    5. '       ' → logprob: -9.750926971435547
    6. '```' → logprob: -10.625926971435547
    7. '	           ' → logprob: -10.750926971435547
    8. '                   ' → logprob: -10.875926971435547
    9. '		       ' → logprob: -11.500926971435547
    10. '<|end|>' → logprob: -11.500926971435547

Token 1308: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26821988821029663
    2. '               ' → logprob: -1.5182199478149414
    3. ' if' → logprob: -4.268219947814941
    4. '                   ' → logprob: -6.268219947814941
    5. '                       ' → logprob: -9.643219947814941
    6. '```' → logprob: -9.768219947814941
    7. '           ' → logprob: -10.143219947814941
    8. '@if' → logprob: -10.643219947814941
    9. '   ' → logprob: -10.893219947814941
    10. '	if' → logprob: -10.893219947814941

Token 1309: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -7.493430894101039e-05
    2. ' new' → logprob: -9.500075340270996
    3. '               ' → logprob: -17.37507438659668
    4. '_new' → logprob: -18.62507438659668
    5. '           ' → logprob: -19.00007438659668
    6. '                   ' → logprob: -19.37507438659668
    7. ')new' → logprob: -19.37507438659668
    8. '```' → logprob: -19.62507438659668
    9. '	new' → logprob: -20.12507438659668
    10. 'New' → logprob: -20.25007438659668

Token 1310: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00014132341311778873
    2. '_f' → logprob: -9.125141143798828
    3. 'w' → logprob: -12.000141143798828
    4. '```' → logprob: -12.000141143798828
    5. '``' → logprob: -12.250141143798828
    6. '
' → logprob: -12.875141143798828
    7. '[' → logprob: -13.500141143798828
    8. 'ф' → logprob: -13.750141143798828
    9. 'new' → logprob: -14.000141143798828
    10. '>' → logprob: -14.062641143798828

Token 1311: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.37500286102295
    3. 'i' → logprob: -14.75000286102295
    4. '>' → logprob: -15.00000286102295
    5. ' [' → logprob: -15.50000286102295
    6. '```' → logprob: -15.87500286102295
    7. '>[' → logprob: -16.250003814697266
    8. '
' → logprob: -16.375003814697266
    9. '(i' → logprob: -16.625003814697266
    10. '[I' → logprob: -16.750003814697266

Token 1312: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05029118433594704
    2. ' >' → logprob: -3.0502912998199463
    3. ']>' → logprob: -6.925291061401367
    4. ']' → logprob: -7.300291061401367
    5. '[i' → logprob: -10.925291061401367
    6. '               ' → logprob: -11.675291061401367
    7. '                   ' → logprob: -12.050291061401367
    8. '>
' → logprob: -12.675291061401367
    9. ')>' → logprob: -13.675291061401367
    10. '>[' → logprob: -14.050291061401367

Token 1313: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.038058821111917496
    2. ' >' → logprob: -3.2880587577819824
    3. '>
' → logprob: -12.03805923461914
    4. '                   ' → logprob: -13.03805923461914
    5. '               ' → logprob: -13.03805923461914
    6. ']>' → logprob: -13.66305923461914
    7. '()>' → logprob: -13.78805923461914
    8. ')>' → logprob: -14.03805923461914
    9. '   ' → logprob: -14.78805923461914
    10. '>`' → logprob: -14.91305923461914

Token 1314: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -1.0280383548888494e-06
    2. ' prod' → logprob: -13.875000953674316
    3. '
' → logprob: -18.375001907348633
    4. '(prod' → logprob: -18.625001907348633
    5. 'proc' → logprob: -18.750001907348633
    6. 'pred' → logprob: -19.500001907348633
    7. '0' → logprob: -20.250001907348633
    8. '.prod' → logprob: -20.375001907348633
    9. 'prog' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.500001907348633

Token 1315: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.019531643018126488
    2. 's' → logprob: -4.019531726837158
    3. 'f' → logprob: -7.019531726837158
    4. '_f' → logprob: -8.39453125
    5. 'i' → logprob: -8.76953125
    6. '_factor' → logprob: -10.51953125
    7. '   ' → logprob: -10.64453125
    8. 'factor' → logprob: -11.01953125
    9. '_i' → logprob: -11.14453125
    10. 'prod' → logprob: -11.89453125

Token 1316: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.000706236984115094
    2. 'factor' → logprob: -7.750706195831299
    3. '_s' → logprob: -8.875706672668457
    4. '_i' → logprob: -10.375706672668457
    5. '[i' → logprob: -10.625706672668457
    6. 'i' → logprob: -10.875706672668457
    7. 's' → logprob: -11.000706672668457
    8. '   ' → logprob: -11.875706672668457
    9. '[' → logprob: -12.250706672668457
    10. '_f' → logprob: -12.375706672668457

Token 1317: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '               ' → logprob: -13.250003814697266
    3. '                   ' → logprob: -14.625003814697266
    4. 'i' → logprob: -15.125003814697266
    5. '[' → logprob: -15.375003814697266
    6. '           ' → logprob: -15.500003814697266
    7. '(i' → logprob: -15.750003814697266
    8. '][' → logprob: -16.000003814697266
    9. '```' → logprob: -16.000003814697266
    10. ':
' → logprob: -16.500003814697266

Token 1318: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46142828464508057
    2. '                   ' → logprob: -1.3364282846450806
    3. ':' → logprob: -2.586428165435791
    4. '               ' → logprob: -4.336428165435791
    5. ':return' → logprob: -4.586428165435791
    6. '                       ' → logprob: -5.711428165435791
    7. '           ' → logprob: -6.211428165435791
    8. '):
' → logprob: -6.836428165435791
    9. '                           ' → logprob: -7.836428165435791
    10. ' or' → logprob: -8.21142864227295

Token 1319: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000284696085145697
    2. '                       ' → logprob: -8.500285148620605
    3. ':
' → logprob: -10.500285148620605
    4. '                  ' → logprob: -11.500285148620605
    5. '               ' → logprob: -11.625285148620605
    6. ':' → logprob: -11.625285148620605
    7. ' break' → logprob: -12.375285148620605
    8. '           ' → logprob: -12.625285148620605
    9. ',' → logprob: -12.625285148620605
    10. ' or' → logprob: -12.875285148620605

Token 1320: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.014807598665356636
    2. '                   ' → logprob: -4.26480770111084
    3. ' break' → logprob: -7.88980770111084
    4. 'return' → logprob: -9.38980770111084
    5. '                       ' → logprob: -9.51480770111084
    6. 'continue' → logprob: -9.76480770111084
    7. '```' → logprob: -10.01480770111084
    8. '               ' → logprob: -12.13980770111084
    9. '``' → logprob: -13.63980770111084
    10. '   ' → logprob: -14.01480770111084

Token 1321: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7735704779624939
    2. '                   ' → logprob: -0.7735704779624939
    3. '           ' → logprob: -3.0235705375671387
    4. '                       ' → logprob: -4.273570537567139
    5. '```' → logprob: -5.273570537567139
    6. 'else' → logprob: -5.398570537567139
    7. ' else' → logprob: -5.898570537567139
    8. 'continue' → logprob: -7.523570537567139
    9. ' continue' → logprob: -7.898570537567139
    10. '       ' → logprob: -8.02357006072998

Token 1322: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03481403365731239
    2. '                   ' → logprob: -3.9098141193389893
    3. '           ' → logprob: -4.53481388092041
    4. '```' → logprob: -5.90981388092041
    5. 'else' → logprob: -7.90981388092041
    6. '                       ' → logprob: -8.53481388092041
    7. ' else' → logprob: -9.40981388092041
    8. '       ' → logprob: -10.90981388092041
    9. ',' → logprob: -11.03481388092041
    10. '   ' → logprob: -11.53481388092041

Token 1323: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15822894871234894
    2. 'if' (adapté à ' if') → logprob: -3.033228874206543
    3. 'elif' → logprob: -3.283228874206543
    4. 'else' → logprob: -3.533228874206543
    5. ' if' → logprob: -4.283228874206543
    6. '           ' → logprob: -4.408228874206543
    7. '```' → logprob: -6.533228874206543
    8. ' elif' → logprob: -6.783228874206543
    9. ' else' → logprob: -7.658228874206543
    10. '
' → logprob: -7.783228874206543

Token 1324: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.018150296062231064
    2. ' new' → logprob: -4.018150329589844
    3. '(new' → logprob: -15.893150329589844
    4. '```' → logprob: -17.143150329589844
    5. '	new' → logprob: -17.268150329589844
    6. '   ' → logprob: -17.518150329589844
    7. '
' → logprob: -17.643150329589844
    8. ' ' → logprob: -18.018150329589844
    9. '_new' → logprob: -18.018150329589844
    10. '[new' → logprob: -18.268150329589844

Token 1325: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0002153378736693412
    2. 'w' → logprob: -8.500215530395508
    3. 'new' → logprob: -11.750215530395508
    4. 'for' → logprob: -14.125215530395508
    5. 'ф' → logprob: -14.500215530395508
    6. 'of' → logprob: -14.500215530395508
    7. 'ew' → logprob: -14.875215530395508
    8. '(new' → logprob: -15.625215530395508
    9. '
' → logprob: -15.750215530395508
    10. 'fw' → logprob: -15.750215530395508

Token 1326: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.12127808178775e-05
    2. '[' → logprob: -10.375051498413086
    3. ' [' → logprob: -12.375051498413086
    4. 'i' → logprob: -13.125051498413086
    5. '[pos' → logprob: -13.125051498413086
    6. '][' → logprob: -13.250051498413086
    7. '```' → logprob: -13.375051498413086
    8. '==' → logprob: -13.500051498413086
    9. '
' → logprob: -13.875051498413086
    10. 's' → logprob: -14.125051498413086

Token 1327: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3224245607852936
    2. '[i' → logprob: -1.8224245309829712
    3. ']<' → logprob: -2.6974246501922607
    4. ' <' → logprob: -3.3224246501922607
    5. '<' → logprob: -5.322424411773682
    6. '<i' → logprob: -5.697424411773682
    7. '[' → logprob: -6.572424411773682
    8. '][' → logprob: -8.57242488861084
    9. '[j' → logprob: -8.82242488861084
    10. '                   ' → logprob: -9.32242488861084

Token 1328: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5235101580619812
    2. ' <' → logprob: -0.8985101580619812
    3. '<int' → logprob: -9.648509979248047
    4. '[' → logprob: -9.648509979248047
    5. '<i' → logprob: -10.023509979248047
    6. '<class' → logprob: -10.773509979248047
    7. '<data' → logprob: -10.773509979248047
    8. '<len' → logprob: -10.898509979248047
    9. '[i' → logprob: -11.148509979248047
    10. '<n' → logprob: -11.273509979248047

Token 1329: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.0007131471065804362
    2. ' prod' → logprob: -7.250713348388672
    3. '(prod' → logprob: -13.500713348388672
    4. '```' → logprob: -13.625713348388672
    5. '
' → logprob: -15.125713348388672
    6. '                   ' → logprob: -16.500713348388672
    7. '           ' → logprob: -16.875713348388672
    8. '               ' → logprob: -17.250713348388672
    9. '.prod' → logprob: -17.250713348388672
    10. '_prod' → logprob: -17.500713348388672

Token 1330: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.04640337452292442
    2. 's' → logprob: -3.296403408050537
    3. '_factor' → logprob: -5.046403408050537
    4. 'prod' → logprob: -6.671403408050537
    5. 'factor' → logprob: -8.046402931213379
    6. 'rod' → logprob: -8.796402931213379
    7. '_f' → logprob: -9.296402931213379
    8. '(prod' → logprob: -11.296402931213379
    9. '_prod' → logprob: -11.921402931213379
    10. 'actor' → logprob: -12.046402931213379

Token 1331: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.007012663409113884
    2. 'actor' → logprob: -5.757012844085693
    3. 'factor' → logprob: -6.257012844085693
    4. 's' → logprob: -6.757012844085693
    5. '_s' → logprob: -7.632012844085693
    6. 'prod' → logprob: -10.132012367248535
    7. 'i' → logprob: -10.257012367248535
    8. '
' → logprob: -10.757012367248535
    9. '   ' → logprob: -10.757012367248535
    10. '_f' → logprob: -10.882012367248535

Token 1332: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.574251918005757e-05
    2. '[' → logprob: -10.125055313110352
    3. '                   ' → logprob: -12.375055313110352
    4. '               ' → logprob: -12.875055313110352
    5. 'i' → logprob: -13.000055313110352
    6. ':
' → logprob: -13.125055313110352
    7. '(i' → logprob: -13.625055313110352
    8. '][' → logprob: -13.750055313110352
    9. '```' → logprob: -14.000055313110352
    10. ']:
' → logprob: -14.875055313110352

Token 1333: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4280812442302704
    2. '                   ' → logprob: -1.3030812740325928
    3. ':' → logprob: -3.3030812740325928
    4. ']:
' → logprob: -3.4280812740325928
    5. '):
' → logprob: -5.303081035614014
    6. '               ' → logprob: -7.553081035614014
    7. '                       ' → logprob: -7.678081035614014
    8. ']:' → logprob: -7.678081035614014
    9. ':return' → logprob: -8.303081512451172
    10. '           ' → logprob: -8.303081512451172

Token 1334: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00033439300023019314
    2. '                       ' → logprob: -8.250334739685059
    3. '               ' → logprob: -10.125334739685059
    4. ' return' → logprob: -11.750334739685059
    5. 'return' → logprob: -12.125334739685059
    6. ':
' → logprob: -12.375334739685059
    7. '           ' → logprob: -12.625334739685059
    8. '```' → logprob: -12.625334739685059
    9. '                  ' → logprob: -12.750334739685059
    10. '                           ' → logprob: -13.375334739685059

Token 1335: ' total' (ID: 3609)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.3689071834087372
    2. ' less' → logprob: -1.3689072132110596
    3. '                   ' → logprob: -2.9939072132110596
    4. '               ' → logprob: -6.1189069747924805
    5. '                       ' → logprob: -7.6189069747924805
    6. 'total' (adapté à ' total') → logprob: -7.6189069747924805
    7. '           ' → logprob: -8.86890697479248
    8. '```' → logprob: -8.86890697479248
    9. 'return' → logprob: -8.99390697479248
    10. ' total' → logprob: -9.49390697479248

Token 1336: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5308652520179749
    2. '+=' → logprob: -0.9058652520179749
    3. '```' → logprob: -5.40586519241333
    4. '=' → logprob: -6.40586519241333
    5. '=True' → logprob: -7.15586519241333
    6. '                   ' → logprob: -7.90586519241333
    7. '               ' → logprob: -9.655865669250488
    8. '_flag' → logprob: -10.155865669250488
    9. '                       ' → logprob: -10.155865669250488
    10. '           ' → logprob: -10.280865669250488

Token 1337: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.12721313536167145
    2. ' dfs' → logprob: -2.1272132396698
    3. '1' → logprob: -8.252213478088379
    4. 'dp' → logprob: -11.127213478088379
    5. '   ' → logprob: -12.627213478088379
    6. ' ' → logprob: -12.752213478088379
    7. ' dp' → logprob: -13.752213478088379
    8. 'df' → logprob: -15.002213478088379
    9. '
' → logprob: -15.127213478088379
    10. '       ' → logprob: -15.252213478088379

Token 1338: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.392202976712724e-06
    2. '_eq' → logprob: -12.625006675720215
    3. 'sum' → logprob: -13.500006675720215
    4. '_pos' → logprob: -14.125006675720215
    5. '```' → logprob: -14.750006675720215
    6. '(_' → logprob: -16.2500057220459
    7. '(' → logprob: -16.3750057220459
    8. '(pos' → logprob: -16.3750057220459
    9. '_s' → logprob: -17.1250057220459
    10. '_' → logprob: -17.1250057220459

Token 1339: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.0001205893131555058
    2. 'eq' → logprob: -9.875120162963867
    3. '_sum' → logprob: -10.250120162963867
    4. '_pos' → logprob: -11.125120162963867
    5. 'pos' → logprob: -11.875120162963867
    6. '_prod' → logprob: -12.125120162963867
    7. '(pos' → logprob: -12.625120162963867
    8. '_equ' → logprob: -13.500120162963867
    9. 'prod' → logprob: -13.875120162963867
    10. 'Eq' → logprob: -14.875120162963867

Token 1340: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.04389335587620735
    2. 'prod' → logprob: -3.168893337249756
    3. 'pos' → logprob: -7.418893337249756
    4. '_pos' → logprob: -8.293893814086914
    5. '```' → logprob: -10.793893814086914
    6. 'Prod' → logprob: -12.043893814086914
    7. '(prod' → logprob: -12.543893814086914
    8. '-prod' → logprob: -13.418893814086914
    9. '_proj' → logprob: -13.668893814086914
    10. '_proc' → logprob: -13.668893814086914

Token 1341: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -8.900034299585968e-05
    2. '_eq' → logprob: -10.625088691711426
    3. '_prod' → logprob: -10.625088691711426
    4. '_pos' → logprob: -11.000088691711426
    5. 'less' → logprob: -11.125088691711426
    6. '(pos' → logprob: -12.875088691711426
    7. '_le' → logprob: -13.250088691711426
    8. 'Less' → logprob: -13.750088691711426
    9. 'pos' → logprob: -14.125088691711426
    10. '_lt' → logprob: -14.250088691711426

Token 1342: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -2.696889623621246e-06
    2. 'pos' → logprob: -13.50000286102295
    3. '(' → logprob: -14.00000286102295
    4. '```' → logprob: -15.37500286102295
    5. '[pos' → logprob: -16.125001907348633
    6. ' (' → logprob: -17.375001907348633
    7. ',pos' → logprob: -17.625001907348633
    8. ' pos' → logprob: -18.000001907348633
    9. '(position' → logprob: -18.375001907348633
    10. '(
' → logprob: -18.500001907348633

Token 1343: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.320199877838604e-07
    2. ' +' → logprob: -14.75
    3. '```' → logprob: -17.625
    4. '()+' → logprob: -18.625
    5. '＋' → logprob: -18.75
    6. ',' → logprob: -18.875
    7. '[' → logprob: -19.0
    8. '...' → logprob: -19.0
    9. '+,' → logprob: -20.5
    10. '1' → logprob: -20.5

Token 1344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -14.000001907348633
    3. '+' → logprob: -14.125001907348633
    4. ' ' → logprob: -16.250001907348633
    5. ',' → logprob: -18.250001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.125001907348633
    8. 'user' → logprob: -20.000001907348633
    9. 'next' → logprob: -20.375001907348633
    10. '``' → logprob: -20.500001907348633

Token 1345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.052788257598877
    2. '(True' → logprob: -1.427788257598877
    3. '(pro' → logprob: -1.927788257598877
    4. '(' → logprob: -2.552788257598877
    5. '(False' → logprob: -2.552788257598877
    6. '(None' → logprob: -2.927788257598877
    7. '(pos' → logprob: -3.052788257598877
    8. '(new' → logprob: -5.052788257598877
    9. '```' → logprob: -7.052788257598877
    10. '(true' → logprob: -8.177787780761719

Token 1346: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.002842080080881715
    2. ' new' → logprob: -5.877841949462891
    3. 'True' → logprob: -10.87784194946289
    4. '(' → logprob: -12.37784194946289
    5. '(new' → logprob: -12.50284194946289
    6. 'False' → logprob: -12.87784194946289
    7. 'pro' → logprob: -13.12784194946289
    8. 'tuple' → logprob: -13.12784194946289
    9. 'prod' → logprob: -14.00284194946289
    10. ' (' → logprob: -14.75284194946289

Token 1347: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.000655250798445195
    2. '_f' → logprob: -7.750655174255371
    3. '_factor' → logprob: -9.250655174255371
    4. '_flag' → logprob: -9.875655174255371
    5. 'w' → logprob: -10.875655174255371
    6. '_flags' → logprob: -11.125655174255371
    7. '(' → logprob: -11.875655174255371
    8. '(f' → logprob: -12.500655174255371
    9. 'flag' → logprob: -12.625655174255371
    10. 'factor' → logprob: -12.750655174255371

Token 1348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010166837833821774
    2. '(True' → logprob: -4.635166645050049
    3. 'True' → logprob: -8.135167121887207
    4. '(False' → logprob: -9.885167121887207
    5. '=True' → logprob: -10.010167121887207
    6. '```' → logprob: -11.385167121887207
    7. ' ,' → logprob: -12.760167121887207
    8. '   ' → logprob: -12.885167121887207
    9. 'False' → logprob: -13.885167121887207
    10. '[' → logprob: -13.885167121887207

Token 1349: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. '(True' → logprob: -17.000001907348633
    4. '                   ' → logprob: -18.000001907348633
    5. '=True' → logprob: -18.500001907348633
    6. '                       ' → logprob: -20.250001907348633
    7. '               ' → logprob: -20.625001907348633
    8. 'true' → logprob: -21.875001907348633
    9. '           ' → logprob: -22.250001907348633
    10. '
' → logprob: -22.750001907348633

Token 1350: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24194543063640594
    2. ')' → logprob: -2.241945505142212
    3. '                       ' → logprob: -2.991945505142212
    4. '               ' → logprob: -3.616945505142212
    5. '```' → logprob: -4.616945266723633
    6. '                           ' → logprob: -4.866945266723633
    7. '           ' → logprob: -5.366945266723633
    8. '                               ' → logprob: -5.991945266723633
    9. '       ' → logprob: -5.991945266723633
    10. '<|end|>' → logprob: -6.616945266723633

Token 1351: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013607130385935307
    2. '```' → logprob: -6.751360893249512
    3. '               ' → logprob: -9.376360893249512
    4. '                       ' → logprob: -9.876360893249512
    5. '           ' → logprob: -10.376360893249512
    6. '                           ' → logprob: -11.626360893249512
    7. '``' → logprob: -11.751360893249512
    8. '       ' → logprob: -12.751360893249512
    9. '                  ' → logprob: -13.876360893249512
    10. '                    ' → logprob: -14.376360893249512

Token 1352: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005937820533290505
    2. '```' → logprob: -8.000594139099121
    3. '                       ' → logprob: -9.125594139099121
    4. '               ' → logprob: -9.625594139099121
    5. 'continue' → logprob: -10.500594139099121
    6. '           ' → logprob: -11.375594139099121
    7. '                           ' → logprob: -11.375594139099121
    8. 'break' (adapté à ' break') → logprob: -11.500594139099121
    9. 'return' → logprob: -11.750594139099121
    10. '``' → logprob: -12.375594139099121

Token 1353: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45088666677474976
    2. '               ' → logprob: -1.2008867263793945
    3. 'else' → logprob: -3.2008867263793945
    4. '```' → logprob: -4.7008867263793945
    5. '       ' → logprob: -4.9508867263793945
    6. '                   ' → logprob: -5.4508867263793945
    7. ' else' → logprob: -7.3258867263793945
    8. 'continue' → logprob: -9.575886726379395
    9. '                       ' → logprob: -10.950886726379395
    10. '``' → logprob: -11.075886726379395

Token 1354: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7094874382019043
    2. '           ' → logprob: -1.4594874382019043
    3. '               ' → logprob: -1.4594874382019043
    4. '```' → logprob: -3.7094874382019043
    5. ' else' → logprob: -4.709487438201904
    6. '       ' → logprob: -4.959487438201904
    7. '                   ' → logprob: -6.209487438201904
    8. 'continue' → logprob: -8.084487915039062
    9. '              ' → logprob: -9.334487915039062
    10. '          ' → logprob: -9.584487915039062

Token 1355: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0795271247625351
    2. '           ' → logprob: -2.5795271396636963
    3. ' else' → logprob: -7.829526901245117
    4. '       ' → logprob: -9.204526901245117
    5. '               ' → logprob: -9.704526901245117
    6. '                   ' → logprob: -10.454526901245117
    7. 'elif' → logprob: -10.704526901245117
    8. '```' → logprob: -10.829526901245117
    9. 'continue' → logprob: -12.454526901245117
    10. '   ' → logprob: -13.704526901245117

Token 1356: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46601614356040955
    2. ':' → logprob: -1.591016173362732
    3. ':
' → logprob: -1.841016173362732
    4. '           ' → logprob: -4.7160162925720215
    5. '                   ' → logprob: -7.0910162925720215
    6. '       ' → logprob: -8.591015815734863
    7. '                       ' → logprob: -9.966015815734863
    8. '              ' → logprob: -10.966015815734863
    9. '             ' → logprob: -11.091015815734863
    10. '):
' → logprob: -11.341015815734863

Token 1357: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01904953457415104
    2. '           ' → logprob: -4.144049644470215
    3. '                   ' → logprob: -6.269049644470215
    4. '```' → logprob: -7.394049644470215
    5. 'total' → logprob: -8.269049644470215
    6. '                       ' → logprob: -9.894049644470215
    7. ' total' → logprob: -10.269049644470215
    8. '       ' → logprob: -10.269049644470215
    9. '             ' → logprob: -10.644049644470215
    10. '              ' → logprob: -10.894049644470215

Token 1358: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.016276350244879723
    2. '               ' → logprob: -4.6412763595581055
    3. ' total' → logprob: -5.7662763595581055
    4. 'if' → logprob: -6.0162763595581055
    5. '                   ' → logprob: -7.2662763595581055
    6. '           ' → logprob: -8.641276359558105
    7. ' if' → logprob: -10.391276359558105
    8. '                       ' → logprob: -11.516276359558105
    9. '(total' → logprob: -12.641276359558105
    10. '#' (adapté à ' #') → logprob: -12.891276359558105

Token 1359: ' equal' (ID: 12629)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.057634107768535614
    2. '               ' → logprob: -3.807634115219116
    3. 'if' → logprob: -3.932634115219116
    4. ' total' → logprob: -4.682633876800537
    5. '           ' → logprob: -5.807633876800537
    6. ' if' → logprob: -6.932633876800537
    7. '                   ' → logprob: -7.182633876800537
    8. '#' → logprob: -8.682634353637695
    9. 'continue' → logprob: -11.557634353637695
    10. '                       ' → logprob: -11.807634353637695

Token 1360: ' so' (ID: 813)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5559157729148865
    2. '           ' → logprob: -1.0559158325195312
    3. '                   ' → logprob: -3.1809158325195312
    4. ':' → logprob: -4.055915832519531
    5. ':
' → logprob: -4.930915832519531
    6. ' and' → logprob: -5.055915832519531
    7. 'and' → logprob: -6.180915832519531
    8. 'total' → logprob: -6.305915832519531
    9. ' if' → logprob: -7.180915832519531
    10. ' total' → logprob: -7.430915832519531

Token 1361: ' far' (ID: 4150)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.33110311627388
    2. '           ' → logprob: -2.2061030864715576
    3. ':
' → logprob: -2.7061030864715576
    4. ' total' → logprob: -3.5811030864715576
    5. '                   ' → logprob: -3.5811030864715576
    6. '               ' → logprob: -3.5811030864715576
    7. ':' → logprob: -4.081103324890137
    8. '(total' → logprob: -6.456103324890137
    9. 'continue' → logprob: -6.831103324890137
    10. '       ' → logprob: -8.206103324890137

Token 1362: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04758509248495102
    2. '                   ' → logprob: -3.5475850105285645
    3. ' if' → logprob: -5.2975850105285645
    4. ' continue' → logprob: -5.6725850105285645
    5. ' total' → logprob: -5.6725850105285645
    6. '           ' → logprob: -5.7975850105285645
    7. 'total' → logprob: -7.0475850105285645
    8. 'continue' → logprob: -7.0475850105285645
    9. '```' → logprob: -7.5475850105285645
    10. 'if' → logprob: -8.922585487365723

Token 1363: ' less' (ID: 3760)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19326753914356232
    2. 'total' → logprob: -2.318267583847046
    3. '                   ' → logprob: -2.943267583847046
    4. ' total' → logprob: -3.943267583847046
    5. 'if' → logprob: -5.693267345428467
    6. ' if' → logprob: -7.193267345428467
    7. 'continue' → logprob: -7.693267345428467
    8. '                ' → logprob: -8.568267822265625
    9. '           ' → logprob: -8.568267822265625
    10. ' continue' → logprob: -9.068267822265625

Token 1364: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.025178682059049606
    2. 'flag' → logprob: -4.025178909301758
    3. '                   ' → logprob: -5.400178909301758
    4. '               ' → logprob: -7.150178909301758
    5. '+=' → logprob: -8.150178909301758
    6. 'Flag' → logprob: -8.150178909301758
    7. ':' → logprob: -8.525178909301758
    8. 'if' → logprob: -8.650178909301758
    9. ':
' → logprob: -9.400178909301758
    10. 'and' → logprob: -9.650178909301758

Token 1365: ' remains' (ID: 14777)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4720827341079712
    2. '=' → logprob: -1.8470827341079712
    3. '=False' → logprob: -1.8470827341079712
    4. 'False' → logprob: -3.2220826148986816
    5. 'is' → logprob: -4.472082614898682
    6. ' is' → logprob: -6.097082614898682
    7. 'contin' → logprob: -6.847082614898682
    8. 'continue' → logprob: -6.972082614898682
    9. ' ==' → logprob: -7.347082614898682
    10. '+=' → logprob: -7.347082614898682

Token 1366: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005724519141949713
    2. ' False' → logprob: -7.500572681427002
    3. '                   ' → logprob: -11.250572204589844
    4. '               ' → logprob: -12.875572204589844
    5. '=False' → logprob: -13.375572204589844
    6. '(False' → logprob: -13.875572204589844
    7. '                       ' → logprob: -14.375572204589844
    8. '           ' → logprob: -14.875572204589844
    9. '                           ' → logprob: -15.500572204589844
    10. 'false' → logprob: -16.250572204589844

Token 1367: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3883332908153534
    2. '               ' → logprob: -1.1383333206176758
    3. '```' → logprob: -7.263333320617676
    4. '                       ' → logprob: -8.263333320617676
    5. '           ' → logprob: -8.638333320617676
    6. ' total' → logprob: -9.638333320617676
    7. '                           ' → logprob: -10.138333320617676
    8. ',' → logprob: -10.263333320617676
    9. '(total' → logprob: -10.263333320617676
    10. ' continue' → logprob: -10.638333320617676

Token 1368: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09577281028032303
    2. '```' → logprob: -3.0957727432250977
    3. '               ' → logprob: -3.2207727432250977
    4. '                       ' → logprob: -5.595772743225098
    5. ' total' → logprob: -7.845772743225098
    6. ' continue' → logprob: -8.095772743225098
    7. '``' → logprob: -8.345772743225098
    8. '                               ' → logprob: -8.470772743225098
    9. '(total' → logprob: -8.595772743225098
    10. '   ' → logprob: -8.720772743225098

Token 1369: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0022987050469964743
    2. ' total' → logprob: -6.627298831939697
    3. '                   ' → logprob: -7.752298831939697
    4. 'return' → logprob: -7.752298831939697
    5. '               ' → logprob: -9.252298355102539
    6. '           ' → logprob: -12.002298355102539
    7. 'continue' → logprob: -12.377298355102539
    8. '                       ' → logprob: -12.877298355102539
    9. ' return' → logprob: -14.002298355102539
    10. '(total' → logprob: -14.377298355102539

Token 1370: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760473608970642
    2. ' +=' → logprob: -0.8260473608970642
    3. '```' → logprob: -9.95104694366455
    4. '=' → logprob: -10.70104694366455
    5. '          ' → logprob: -11.32604694366455
    6. '           ' → logprob: -11.70104694366455
    7. '+' → logprob: -12.20104694366455
    8. '+=(' → logprob: -12.70104694366455
    9. ']+=' → logprob: -13.70104694366455
    10. '               ' → logprob: -13.82604694366455

Token 1371: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.006715728435665369
    2. ' dfs' → logprob: -5.006715774536133
    3. 'dp' → logprob: -14.881715774536133
    4. 'df' → logprob: -16.881715774536133
    5. '   ' → logprob: -19.256715774536133
    6. '```' → logprob: -19.256715774536133
    7. 'DFS' → logprob: -19.756715774536133
    8. ' ' → logprob: -19.881715774536133
    9. 'dfa' → logprob: -20.381715774536133
    10. 'fs' → logprob: -20.631715774536133

Token 1372: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00012356207298580557
    2. '_eq' → logprob: -9.000123977661133
    3. 'sum' → logprob: -15.750123977661133
    4. '```' → logprob: -17.625123977661133
    5. '_s' → logprob: -17.750123977661133
    6. '_equal' → logprob: -18.000123977661133
    7. '=' → logprob: -18.375123977661133
    8. '_seq' → logprob: -18.625123977661133
    9. 'eq' → logprob: -18.875123977661133
    10. '_equ' → logprob: -18.875123977661133

Token 1373: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -1.0206720617134124e-05
    2. 'eq' → logprob: -11.87501049041748
    3. '_equ' → logprob: -14.00001049041748
    4. '_pos' → logprob: -14.25001049041748
    5. 'pos' → logprob: -14.50001049041748
    6. '_less' → logprob: -15.00001049041748
    7. '_prod' → logprob: -15.50001049041748
    8. '_sum' → logprob: -15.62501049041748
    9. '_equals' → logprob: -15.87501049041748
    10. '_equal' → logprob: -16.625009536743164

Token 1374: '_prod' (ID: 78031)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.07951556891202927
    2. '_prod' → logprob: -2.7045154571533203
    3. '_less' → logprob: -5.20451545715332
    4. 'pos' → logprob: -5.70451545715332
    5. 'less' → logprob: -8.20451545715332
    6. '(prod' → logprob: -9.70451545715332
    7. 'eq' → logprob: -10.07951545715332
    8. '_eq' → logprob: -10.07951545715332
    9. 'sum' → logprob: -10.20451545715332
    10. '_sum' → logprob: -10.32951545715332

Token 1375: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -2.0100624169572257e-05
    2. 'less' → logprob: -11.000020027160645
    3. 'Less' → logprob: -13.375020027160645
    4. '_pos' → logprob: -14.125020027160645
    5. 'pos' → logprob: -14.750020027160645
    6. '```' → logprob: -15.625020027160645
    7. '(pos' → logprob: -15.875020027160645
    8. '_' → logprob: -17.00002098083496
    9. '[pos' → logprob: -17.12502098083496
    10. 'prod' → logprob: -17.37502098083496

Token 1376: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.750000953674316
    3. 'pos' → logprob: -15.375000953674316
    4. ' (' → logprob: -16.000001907348633
    5. '[pos' → logprob: -16.500001907348633
    6. '(position' → logprob: -16.875001907348633
    7. ',pos' → logprob: -17.125001907348633
    8. '(
' → logprob: -17.375001907348633
    9. '(Pos' → logprob: -17.625001907348633
    10. '```' → logprob: -17.875001907348633

Token 1377: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10396444797515869
    2. 'pos' → logprob: -2.353964328765869
    3. '(pos' → logprob: -5.603964328765869
    4. '1' → logprob: -10.728964805603027
    5. ' pos' → logprob: -11.103964805603027
    6. ' +' → logprob: -11.228964805603027
    7. ',pos' → logprob: -11.853964805603027
    8. '[pos' → logprob: -12.353964805603027
    9. '```' → logprob: -13.353964805603027
    10. '(' → logprob: -13.353964805603027

Token 1378: '1' (ID: 16)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4742218255996704
    2. '1' → logprob: -0.9742218255996704
    3. '+' → logprob: -9.349222183227539
    4. '(pos' → logprob: -10.224222183227539
    5. ' pos' → logprob: -11.224222183227539
    6. 'n' → logprob: -12.599222183227539
    7. '[pos' → logprob: -13.224222183227539
    8. 'next' → logprob: -14.349222183227539
    9. 'position' → logprob: -14.474222183227539
    10. '```' → logprob: -14.599222183227539

Token 1379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015629465924575925
    2. ',pos' → logprob: -7.25156307220459
    3. '(pos' → logprob: -7.75156307220459
    4. ',new' → logprob: -8.62656307220459
    5. '(' → logprob: -9.00156307220459
    6. '```' → logprob: -10.37656307220459
    7. '(pro' → logprob: -10.62656307220459
    8. '(new' → logprob: -10.75156307220459
    9. '           ' → logprob: -11.25156307220459
    10. ' ,' → logprob: -11.37656307220459

Token 1380: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00027730545843951404
    2. ' new' → logprob: -8.375277519226074
    3. 'False' → logprob: -10.000277519226074
    4. 'pro' → logprob: -14.875277519226074
    5. '   ' → logprob: -15.125277519226074
    6. '    ' → logprob: -15.500277519226074
    7. '       ' → logprob: -16.125276565551758
    8. '(new' → logprob: -16.375276565551758
    9. '     ' → logprob: -16.375276565551758
    10. 'false' → logprob: -17.000276565551758

Token 1381: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0012021353468298912
    2. '_f' → logprob: -7.00120210647583
    3. 'of' → logprob: -8.376202583312988
    4. ',' → logprob: -10.751202583312988
    5. 'factor' → logprob: -11.626202583312988
    6. 'w' → logprob: -12.251202583312988
    7. '_factor' → logprob: -12.376202583312988
    8. 'o' → logprob: -12.376202583312988
    9. '=' → logprob: -12.876202583312988
    10. 'prod' → logprob: -13.126202583312988

Token 1382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.093505099765025e-05
    2. ' ,' → logprob: -11.125020980834961
    3. 'False' → logprob: -12.250020980834961
    4. '(False' → logprob: -14.750020980834961
    5. '   ' → logprob: -15.375020980834961
    6. '       ' → logprob: -15.625020980834961
    7. ',false' → logprob: -15.875020980834961
    8. '=False' → logprob: -16.12502098083496
    9. ',
' → logprob: -16.50002098083496
    10. '           ' → logprob: -16.50002098083496

Token 1383: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. '(False' → logprob: -18.75
    4. 'True' → logprob: -21.0
    5. '   ' → logprob: -21.125
    6. '=False' → logprob: -21.5
    7. 'false' → logprob: -22.625
    8. 'less' → logprob: -22.875
    9. '    ' → logprob: -23.25
    10. '0' → logprob: -24.375

Token 1384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20368535816669464
    2. ')
' → logprob: -1.7036854028701782
    3. '       ' → logprob: -6.328685283660889
    4. '   ' → logprob: -8.078685760498047
    5. ')return' → logprob: -9.328685760498047
    6. '           ' → logprob: -10.328685760498047
    7. ',' → logprob: -11.078685760498047
    8. 'return' → logprob: -11.203685760498047
    9. '               ' → logprob: -12.203685760498047
    10. ')
' → logprob: -12.453685760498047

Token 1385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9199145436286926
    2. '       ' → logprob: -1.0449144840240479
    3. '           ' → logprob: -1.9199144840240479
    4. 'return' → logprob: -2.919914484024048
    5. '<|end|>' → logprob: -3.419914484024048
    6. ' return' → logprob: -4.919914722442627
    7. '               ' → logprob: -6.294914722442627
    8. '```' → logprob: -6.294914722442627
    9. '	return' → logprob: -6.794914722442627
    10. ')' → logprob: -6.794914722442627

Token 1386: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04778921231627464
    2. '       ' → logprob: -3.9227890968322754
    3. 'return' (adapté à ' return') → logprob: -4.297789096832275
    4. ' return' → logprob: -4.797789096832275
    5. '           ' → logprob: -5.922789096832275
    6. ')' → logprob: -6.297789096832275
    7. '```' → logprob: -8.672789573669434
    8. '	return' → logprob: -9.172789573669434
    9. ':return' → logprob: -9.547789573669434
    10. '+' → logprob: -10.047789573669434

Token 1387: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00033546582562848926
    2. ' total' → logprob: -8.000335693359375
    3. '(total' → logprob: -19.750335693359375
    4. '$total' → logprob: -21.875335693359375
    5. '	total' → logprob: -21.875335693359375
    6. 't' → logprob: -22.125335693359375
    7. '_total' → logprob: -22.875335693359375
    8. 'Total' → logprob: -23.250335693359375
    9. ',total' → logprob: -23.250335693359375
    10. 'tot' → logprob: -23.625335693359375

Token 1388: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1389: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02591739036142826
    2. 'def' → logprob: -4.9009175300598145
    3. 'sum' → logprob: -4.9009175300598145
    4. '@' → logprob: -5.5259175300598145
    5. 'ans' → logprob: -6.1509175300598145
    6. 'for' → logprob: -6.7759175300598145
    7. 'prod' → logprob: -7.0259175300598145
    8. 's' → logprob: -7.7759175300598145
    9. 'print' → logprob: -8.025917053222656
    10. 'total' → logprob: -8.400917053222656

Token 1390: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1789923757314682
    2. 'def' → logprob: -2.05399227142334
    3. 'sum' → logprob: -4.30399227142334
    4. '@' → logprob: -4.92899227142334
    5. 'ans' → logprob: -5.67899227142334
    6. 'from' → logprob: -6.05399227142334
    7. '
' → logprob: -6.17899227142334
    8. 'target' → logprob: -6.67899227142334
    9. 'for' → logprob: -7.05399227142334
    10. 'digits' → logprob: -7.17899227142334

Token 1391: ' above' (ID: 5151)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27206501364707947
    2. 'def' → logprob: -2.8970649242401123
    3. 'for' → logprob: -2.8970649242401123
    4. '
' → logprob: -3.6470649242401123
    5. 'dfs' → logprob: -3.6470649242401123
    6. 'code' → logprob: -4.522065162658691
    7. '=' → logprob: -4.522065162658691
    8. 'sum' → logprob: -4.647065162658691
    9. 'next' → logprob: -5.272065162658691
    10. ' =' → logprob: -5.772065162658691

Token 1392: ' ignores' (ID: 119719)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30658239126205444
    2. 'def' → logprob: -2.181582450866699
    3. 'code' → logprob: -3.431582450866699
    4. 'is' → logprob: -3.681582450866699
    5. 'return' → logprob: -3.806582450866699
    6. 'for' → logprob: -4.056582450866699
    7. ' is' → logprob: -4.181582450866699
    8. ' code' → logprob: -4.431582450866699
    9. 'dfs' → logprob: -5.181582450866699
    10. 'part' → logprob: -5.806582450866699

Token 1393: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1178242415189743
    2. 'the' → logprob: -2.6178243160247803
    3. '#' → logprob: -3.3678243160247803
    4. 'checking' → logprob: -6.242824077606201
    5. 'digits' → logprob: -7.117824077606201
    6. 'digit' → logprob: -7.867824077606201
    7. ' sum' → logprob: -8.36782455444336
    8. 'handling' → logprob: -9.36782455444336
    9. ' the' → logprob: -9.36782455444336
    10. 'constraint' → logprob: -9.74282455444336

Token 1394: ' constraint' (ID: 44762)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1395: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45052817463874817
    2. '<|end|>' → logprob: -1.8255281448364258
    3. '...' → logprob: -2.200528144836426
    4. ')' → logprob: -3.200528144836426
    5. '<|end|>' → logprob: -3.950528144836426
    6. 'for' → logprob: -4.200528144836426
    7. ' for' → logprob: -5.450528144836426
    8. '
' → logprob: -6.575528144836426
    9. '   ' → logprob: -6.825528144836426
    10. 'def' → logprob: -7.075528144836426

Token 1396: ' need' (ID: 1309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008916379883885384
    2. 'but' → logprob: -5.75891637802124
    3. ' but' → logprob: -6.50891637802124
    4. ' #' → logprob: -6.88391637802124
    5. '
' → logprob: -7.63391637802124
    6. 'which' → logprob: -7.63391637802124
    7. 'def' → logprob: -7.75891637802124
    8. 'and' → logprob: -8.258916854858398
    9. ' so' → logprob: -8.633916854858398
    10. 'so' → logprob: -8.758916854858398

Token 1397: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4774340093135834
    2. 'to' → logprob: -1.3524340391159058
    3. '#' → logprob: -3.227433919906616
    4. 'def' → logprob: -3.227433919906616
    5. 'return' → logprob: -4.727434158325195
    6. 'sum' → logprob: -5.227434158325195
    7. '
' → logprob: -5.852434158325195
    8. 'the' → logprob: -6.352434158325195
    9. 'additional' → logprob: -6.352434158325195
    10. 'pos' → logprob: -6.602434158325195

Token 1398: ' track' (ID: 5290)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.4700847864151001
    2. 'pass' → logprob: -1.8450847864151
    3. '#' → logprob: -1.9700847864151
    4. 'def' → logprob: -3.7200846672058105
    5. 'include' → logprob: -4.4700846672058105
    6. 'implement' → logprob: -4.7200846672058105
    7. 'handle' → logprob: -5.0950846672058105
    8. ' add' → logprob: -5.3450846672058105
    9. 'inc' → logprob: -5.3450846672058105
    10. 'modify' → logprob: -5.8450846672058105

Token 1399: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.24767471849918365
    2. ' sum' → logprob: -2.2476747035980225
    3. '#' → logprob: -3.2476747035980225
    4. 'def' → logprob: -3.9976747035980225
    5. 'pos' → logprob: -3.9976747035980225
    6. '...' → logprob: -4.372674942016602
    7. ',' → logprob: -5.122674942016602
    8. ')' → logprob: -5.747674942016602
    9. ' pos' → logprob: -5.997674942016602
    10. 'pass' → logprob: -6.872674942016602

Token 1400: ' digits' (ID: 37806)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36937054991722107
    2. ',' → logprob: -1.8693705797195435
    3. '@' → logprob: -2.494370460510254
    4. '...' → logprob: -3.619370460510254
    5. ')' → logprob: -4.744370460510254
    6. '#' → logprob: -5.244370460510254
    7. '
' → logprob: -5.369370460510254
    8. '_s' → logprob: -5.369370460510254
    9. 'from' → logprob: -5.744370460510254
    10. '_' → logprob: -5.994370460510254

Token 1401: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.002835899591445923
    2. 'def' → logprob: -6.502835750579834
    3. '#' → logprob: -7.252835750579834
    4. 'from' → logprob: -7.627835750579834
    5. '
' → logprob: -9.752836227416992
    6. 'import' → logprob: -9.877836227416992
    7. '```' → logprob: -12.502836227416992
    8. '...' → logprob: -12.627836227416992
    9. '@n' → logprob: -12.627836227416992
    10. ')' → logprob: -12.752836227416992

Token 1402: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.03976038470864296
    2. 'def' → logprob: -3.5397603511810303
    3. 'from' → logprob: -4.664760589599609
    4. '#' → logprob: -8.28976058959961
    5. '```' → logprob: -8.91476058959961
    6. '@n' → logprob: -9.78976058959961
    7. '
' → logprob: -11.03976058959961
    8. '...' → logprob: -11.28976058959961
    9. 'import' → logprob: -11.28976058959961
    10. '@s' → logprob: -11.66476058959961

Token 1403: ' So' (ID: 2632)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0796012207865715
    2. 'from' → logprob: -2.704601287841797
    3. 'def' → logprob: -4.954601287841797
    4. '#' → logprob: -6.079601287841797
    5. 'import' → logprob: -8.829601287841797
    6. '@n' → logprob: -10.329601287841797
    7. '
' → logprob: -10.454601287841797
    8. 'sum' → logprob: -10.829601287841797
    9. 'From' → logprob: -11.204601287841797
    10. '@s' → logprob: -11.704601287841797

Token 1404: ' redesign' (ID: 92463)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.4916801452636719
    2. 'from' → logprob: -0.9916801452636719
    3. 'def' → logprob: -4.491680145263672
    4. '#' → logprob: -5.991680145263672
    5. 'import' → logprob: -6.991680145263672
    6. ' from' → logprob: -6.991680145263672
    7. 'sum' → logprob: -7.241680145263672
    8. '
' → logprob: -8.491680145263672
    9. 'We' → logprob: -8.741680145263672
    10. ' @' → logprob: -9.241680145263672

Token 1405: ':

' (ID: 1402)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.024331115186214447
    2. 'from' → logprob: -3.7743310928344727
    3. 'def' → logprob: -7.149331092834473
    4. '#' → logprob: -8.899331092834473
    5. 'import' → logprob: -9.649331092834473
    6. '@n' → logprob: -10.399331092834473
    7. 'sum' → logprob: -11.274331092834473
    8. ')' → logprob: -11.399331092834473
    9. '```' → logprob: -11.399331092834473
    10. '
' → logprob: -12.024331092834473

Token 1406: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.04318073391914368
    2. 'from' → logprob: -3.2931807041168213
    3. 'def' → logprob: -5.2931809425354
    4. '#' → logprob: -10.418180465698242
    5. 'import' → logprob: -10.418180465698242
    6. '```' → logprob: -11.043180465698242
    7. '@n' → logprob: -11.543180465698242
    8. '+' → logprob: -12.418180465698242
    9. '
' → logprob: -12.543180465698242
    10. ' from' → logprob: -13.543180465698242

Token 1407: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. 'cache' → logprob: -17.75
    3. '
' → logprob: -18.625
    4. 'dat' → logprob: -19.25
    5. ' l' → logprob: -19.75
    6. '@' → logprob: -20.375
    7. '```' → logprob: -20.625
    8. '(l' → logprob: -21.625
    9. '`' → logprob: -22.125
    10. '_l' → logprob: -22.125

Token 1408: 'ru' (ID: 1942)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.065608562901616e-05
    2. 'cache' → logprob: -10.250081062316895
    3. 'lr' → logprob: -10.875081062316895
    4. 'lu' → logprob: -11.875081062316895
    5. 'ru' → logprob: -12.000081062316895
    6. '```' → logprob: -12.500081062316895
    7. 'r' → logprob: -12.875081062316895
    8. 'w' → logprob: -13.250081062316895
    9. 'cached' → logprob: -13.750081062316895
    10. '@' → logprob: -13.875081062316895

Token 1409: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.002597180427983403
    2. '_cached' → logprob: -6.002597332000732
    3. '@' → logprob: -9.627596855163574
    4. 'def' → logprob: -10.002596855163574
    5. '```' → logprob: -12.752596855163574
    6. 'cache' → logprob: -12.877596855163574
    7. 'cached' → logprob: -13.627596855163574
    8. '_CACHE' → logprob: -13.752596855163574
    9. '_code' → logprob: -14.252596855163574
    10. 'Cache' → logprob: -14.752596855163574

Token 1410: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.0003183041699230671
    2. 'def' → logprob: -8.75031852722168
    3. 'None' → logprob: -8.75031852722168
    4. '_None' → logprob: -15.00031852722168
    5. '(False' → logprob: -15.37531852722168
    6. '=None' → logprob: -15.62531852722168
    7. '(' → logprob: -15.75031852722168
    8. '(max' → logprob: -15.87531852722168
    9. '```' → logprob: -15.87531852722168
    10. '
' → logprob: -16.12531852722168

Token 1411: ')
' (ID: 446)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027440080884844065
    2. '(None' → logprob: -6.252744197845459
    3. '(' → logprob: -7.627744197845459
    4. '
' → logprob: -8.3777437210083
    5. ' def' → logprob: -10.2527437210083
    6. '(pos' → logprob: -10.5027437210083
    7. '(def' → logprob: -11.1277437210083
    8. ')
' → logprob: -11.6277437210083
    9. ')' → logprob: -12.1277437210083
    10. '(int' → logprob: -13.7527437210083

Token 1412: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015079588629305363
    2. '
' → logprob: -6.501507759094238
    3. ' def' → logprob: -12.376507759094238
    4. '(def' → logprob: -14.126507759094238
    5. '(' → logprob: -14.876507759094238
    6. '(
' → logprob: -16.001508712768555
    7. '#' → logprob: -16.126508712768555
    8. '    
' → logprob: -17.501508712768555
    9. '('' → logprob: -17.876508712768555
    10. '  
' → logprob: -18.001508712768555

Token 1413: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.07689138501882553
    2. 'dp' → logprob: -2.7018914222717285
    3. 'def' → logprob: -5.0768914222717285
    4. 'count' → logprob: -7.8268914222717285
    5. ' dfs' → logprob: -8.45189094543457
    6. 'digit' → logprob: -10.57689094543457
    7. 'd' → logprob: -11.07689094543457
    8. '
' → logprob: -11.45189094543457
    9. 'df' → logprob: -12.07689094543457
    10. ' dp' → logprob: -12.45189094543457

Token 1414: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.011784185655415058
    2. '_eq' → logprob: -4.636784076690674
    3. '(' → logprob: -6.761784076690674
    4. '_equal' → logprob: -8.011784553527832
    5. '_equals' → logprob: -8.386784553527832
    6. '_less' → logprob: -8.761784553527832
    7. 'sum' → logprob: -10.136784553527832
    8. '_equ' → logprob: -10.636784553527832
    9. '_pos' → logprob: -11.261784553527832
    10. 'def' → logprob: -11.511784553527832

Token 1415: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.02550063654780388
    2. '_equ' → logprob: -4.650500774383545
    3. '_equal' → logprob: -4.900500774383545
    4. '_equals' → logprob: -4.900500774383545
    5. 'eq' → logprob: -8.275500297546387
    6. '_prod' → logprob: -8.775500297546387
    7. '_e' → logprob: -9.150500297546387
    8. '_' → logprob: -10.275500297546387
    9. 'd' → logprob: -10.650500297546387
    10. '_exact' → logprob: -10.775500297546387

Token 1416: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.005219890270382166
    2. 'prod' → logprob: -5.63021993637085
    3. '_eq' → logprob: -6.63021993637085
    4. '_pos' → logprob: -9.380219459533691
    5. '_less' → logprob: -9.380219459533691
    6. '_equal' → logprob: -9.630219459533691
    7. '```' → logprob: -11.005219459533691
    8. '(prod' → logprob: -11.380219459533691
    9. '_equals' → logprob: -11.880219459533691
    10. 'eq' → logprob: -12.005219459533691

Token 1417: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.0013971416046842933
    2. '(pos' → logprob: -6.626397132873535
    3. '_equal' → logprob: -10.501397132873535
    4. 'less' → logprob: -10.751397132873535
    5. '_pos' → logprob: -12.126397132873535
    6. 'pos' → logprob: -12.876397132873535
    7. '_equals' → logprob: -12.876397132873535
    8. '_eq' → logprob: -13.001397132873535
    9. '_lt' → logprob: -13.126397132873535
    10. 'Less' → logprob: -13.376397132873535

Token 1418: '_sum' (ID: 29859)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.750003814697266
    3. '[pos' → logprob: -14.125003814697266
    4. ',pos' → logprob: -14.125003814697266
    5. '(position' → logprob: -15.250003814697266
    6. 'def' → logprob: -15.375003814697266
    7. 'pos' → logprob: -15.750003814697266
    8. '(idx' → logprob: -15.750003814697266
    9. ' (' → logprob: -16.125003814697266
    10. '(i' → logprob: -16.250003814697266

Token 1419: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.0683535037969705e-05
    2. ',pos' → logprob: -12.62501049041748
    3. '(position' → logprob: -13.62501049041748
    4. '(' → logprob: -13.75001049041748
    5. '(n' → logprob: -13.75001049041748
    6. '_pos' → logprob: -13.75001049041748
    7. 'pos' → logprob: -14.12501049041748
    8. '[pos' → logprob: -14.25001049041748
    9. '(prod' → logprob: -14.87501049041748
    10. '(num' → logprob: -15.75001049041748

Token 1420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028628890868276358
    2. ',pos' → logprob: -5.877862930297852
    3. ' ,' → logprob: -10.627862930297852
    4. ',sum' → logprob: -11.127862930297852
    5. ',int' → logprob: -11.502862930297852
    6. ',s' → logprob: -12.877862930297852
    7. '(pos' → logprob: -13.127862930297852
    8. ',state' → logprob: -13.377862930297852
    9. ',n' → logprob: -14.752862930297852
    10. 'pos' → logprob: -14.752862930297852

Token 1421: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.011167946271598339
    2. ' sum' → logprob: -5.136168003082275
    3. 'prod' → logprob: -6.011168003082275
    4. 'pro' → logprob: -7.011168003082275
    5. 's' → logprob: -7.136168003082275
    6. 'curr' → logprob: -7.511168003082275
    7. 'current' → logprob: -9.386167526245117
    8. ' prod' → logprob: -9.386167526245117
    9. 'int' → logprob: -9.636167526245117
    10. 'digits' → logprob: -10.011167526245117

Token 1422: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12695781886577606
    2. '_s' → logprob: -3.126957893371582
    3. ',' → logprob: -3.251957893371582
    4. 's' → logprob: -3.626957893371582
    5. 'pos' → logprob: -5.376957893371582
    6. '(pos' → logprob: -6.251957893371582
    7. ',pos' → logprob: -6.501957893371582
    8. '(s' → logprob: -7.626957893371582
    9. '(' → logprob: -7.626957893371582
    10. '_,' → logprob: -8.126957893371582

Token 1423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1928003813372925e-05
    2. ',pos' → logprob: -10.750051498413086
    3. ',int' → logprob: -11.500051498413086
    4. ' ,' → logprob: -12.125051498413086
    5. ',s' → logprob: -12.625051498413086
    6. ',t' → logprob: -12.750051498413086
    7. ',p' → logprob: -13.000051498413086
    8. ',d' → logprob: -13.875051498413086
    9. ',state' → logprob: -14.500051498413086
    10. ',f' → logprob: -14.750051498413086

Token 1424: ' pro' (ID: 440)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0011112819192931056
    2. 'prod' → logprob: -7.0011115074157715
    3. ' pro' → logprob: -8.626111030578613
    4. 'tuple' → logprob: -11.626111030578613
    5. 'sum' → logprob: -12.626111030578613
    6. 'pos' → logprob: -13.126111030578613
    7. ' prod' → logprob: -14.001111030578613
    8. 'product' → logprob: -14.001111030578613
    9. '(pro' → logprob: -14.126111030578613
    10. '0' → logprob: -14.626111030578613

Token 1425: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.00034988581319339573
    2. 'd' → logprob: -8.000349998474121
    3. '_df' → logprob: -12.000349998474121
    4. 'dfs' → logprob: -12.500349998474121
    5. '_f' → logprob: -12.875349998474121
    6. '_factor' → logprob: -14.500349998474121
    7. 'dfa' → logprob: -14.750349998474121
    8. '(df' → logprob: -14.875349998474121
    9. 'f' → logprob: -15.500349998474121
    10. 'factor' → logprob: -16.250349044799805

Token 1426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2524021157296374e-05
    2. ' ,' → logprob: -10.375052452087402
    3. '   ' → logprob: -11.500052452087402
    4. '):
' → logprob: -12.375052452087402
    5. '):' → logprob: -12.875052452087402
    6. ',pos' → logprob: -13.625052452087402
    7. ',new' → logprob: -13.875052452087402
    8. ',p' → logprob: -14.125052452087402
    9. '  ' → logprob: -16.00005340576172
    10. ',size' → logprob: -16.00005340576172

Token 1427: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -3.690834273584187e-05
    2. 'False' → logprob: -10.62503719329834
    3. ' less' → logprob: -11.37503719329834
    4. 'flag' → logprob: -14.62503719329834
    5. 'false' → logprob: -15.50003719329834
    6. 'is' → logprob: -16.375036239624023
    7. 'least' → logprob: -16.500036239624023
    8. 'les' → logprob: -16.750036239624023
    9. 'ans' → logprob: -16.875036239624023
    10. 'has' → logprob: -17.000036239624023

Token 1428: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -6.682846287731081e-05
    2. 'Flag' → logprob: -10.750066757202148
    3. 'flag' → logprob: -11.000066757202148
    4. '_FLAG' → logprob: -11.750066757202148
    5. '_f' → logprob: -12.000066757202148
    6. ',' → logprob: -12.750066757202148
    7. '_flags' → logprob: -12.750066757202148
    8. '):' → logprob: -12.875066757202148
    9. '):
' → logprob: -13.500066757202148
    10. '_' → logprob: -14.000066757202148

Token 1429: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2526732385158539
    2. '):' → logprob: -1.5026732683181763
    3. ',' → logprob: -7.252673149108887
    4. '):
' → logprob: -10.627673149108887
    5. '   ' → logprob: -12.377673149108887
    6. '):

' → logprob: -12.502673149108887
    7. ')' → logprob: -13.127673149108887
    8. ':' → logprob: -14.252673149108887
    9. ',pos' → logprob: -15.752673149108887
    10. '```' → logprob: -15.877673149108887

Token 1430: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006591144483536482
    2. ' if' → logprob: -5.381591320037842
    3. '    ' → logprob: -7.381591320037842
    4. '\t' → logprob: -8.631590843200684
    5. '```' → logprob: -8.631590843200684
    6. '	if' → logprob: -8.756590843200684
    7. ' for' → logprob: -8.756590843200684
    8. ':' → logprob: -9.256590843200684
    9. '   ' → logprob: -9.506590843200684
    10. ',' → logprob: -9.506590843200684

Token 1431: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07217716425657272
    2. ' total' → logprob: -3.3221771717071533
    3. ' if' → logprob: -4.822176933288574
    4. '    ' → logprob: -4.947176933288574
    5. 'total' → logprob: -5.447176933288574
    6. '       ' → logprob: -5.572176933288574
    7. ':' → logprob: -5.697176933288574
    8. 'if' (adapté à ' if') → logprob: -6.322176933288574
    9. ' for' → logprob: -6.447176933288574
    10. '```' → logprob: -7.072176933288574

Token 1432: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.008615042082965374
    2. ' pos' → logprob: -4.758615016937256
    3. '(pos' → logprob: -15.008615493774414
    4. '	pos' → logprob: -15.883615493774414
    5. '_pos' → logprob: -17.383615493774414
    6. '[pos' → logprob: -18.258615493774414
    7. '.pos' → logprob: -18.633615493774414
    8. 'n' → logprob: -18.883615493774414
    9. '```' → logprob: -19.258615493774414
    10. 'not' → logprob: -19.508615493774414

Token 1433: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03251028433442116
    2. ' ==' → logprob: -3.907510280609131
    3. '<' → logprob: -4.657510280609131
    4. '<int' → logprob: -7.157510280609131
    5. '<len' → logprob: -8.032510757446289
    6. '+' → logprob: -8.657510757446289
    7. '<size' → logprob: -9.032510757446289
    8. '[' → logprob: -9.157510757446289
    9. '<|end|>' → logprob: -9.407510757446289
    10. '```' → logprob: -9.407510757446289

Token 1434: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. ' n' → logprob: -14.750000953674316
    3. '_n' → logprob: -16.125
    4. '	n' → logprob: -16.625
    5. '```' → logprob: -16.75
    6. '(n' → logprob: -17.25
    7. '0' → logprob: -17.25
    8. '<n' → logprob: -18.0
    9. '   ' → logprob: -18.125
    10. '[n' → logprob: -19.0

Token 1435: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1245805099606514
    2. '       ' → logprob: -2.9995806217193604
    3. '   ' → logprob: -3.3745806217193604
    4. ':
' → logprob: -3.4995806217193604
    5. ' and' → logprob: -6.249580383300781
    6. '<|end|>' → logprob: -8.374580383300781
    7. ':return' → logprob: -8.374580383300781
    8. 'and' → logprob: -8.999580383300781
    9. '[' → logprob: -9.124580383300781
    10. '```' → logprob: -10.124580383300781

Token 1436: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21807390451431274
    2. '       ' → logprob: -1.718073844909668
    3. ' if' → logprob: -4.218073844909668
    4. 'if' → logprob: -6.593073844909668
    5. '```' → logprob: -7.968073844909668
    6. ' return' → logprob: -10.718073844909668
    7. '``' → logprob: -10.968073844909668
    8. 'return' → logprob: -11.218073844909668
    9. '	if' → logprob: -12.468073844909668
    10. '
' → logprob: -12.718073844909668

Token 1437: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15834107995033264
    2. '       ' → logprob: -2.0333411693573
    3. '   ' → logprob: -4.408340930938721
    4. 'if' → logprob: -6.033340930938721
    5. ' return' → logprob: -7.658340930938721
    6. '```' → logprob: -7.783340930938721
    7. '	return' → logprob: -10.033341407775879
    8. '
' → logprob: -11.158341407775879
    9. '``' → logprob: -12.533341407775879
    10. '{return' → logprob: -12.658341407775879

Token 1438: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.500045776367188
    3. 'int' → logprob: -11.875045776367188
    4. '   ' → logprob: -12.125045776367188
    5. '0' → logprob: -12.250045776367188
    6. '(' → logprob: -13.875045776367188
    7. 'ans' → logprob: -16.250045776367188
    8. 'sum' → logprob: -16.375045776367188
    9. '
' → logprob: -16.500045776367188
    10. '  ' → logprob: -17.000045776367188

Token 1439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. 'int' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '0' → logprob: -16.375
    5. '
' → logprob: -17.625
    6. '(' → logprob: -18.125
    7. 'ans' → logprob: -18.375
    8. '   ' → logprob: -18.875
    9. 'sum' → logprob: -19.0
    10. '```' → logprob: -20.375

Token 1440: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15201795101165771
    2. '<|end|>' → logprob: -2.4020180702209473
    3. ' if' → logprob: -3.4020180702209473
    4. '       ' → logprob: -5.027018070220947
    5. 'if' → logprob: -6.027018070220947
    6. '  ' → logprob: -6.652018070220947
    7. '<|end|>' → logprob: -6.777018070220947
    8. ' ' → logprob: -7.027018070220947
    9. '```' → logprob: -7.152018070220947
    10. '
' → logprob: -7.277018070220947

Token 1441: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -9.901345038088039e-05
    2. ' sum' → logprob: -9.250099182128906
    3. '(sum' → logprob: -12.750099182128906
    4. 's' → logprob: -22.000099182128906
    5. '   ' → logprob: -22.250099182128906
    6. '
' → logprob: -22.375099182128906
    7. '(' → logprob: -22.625099182128906
    8. '	sum' → logprob: -22.750099182128906
    9. '(s' → logprob: -23.000099182128906
    10. ' ' → logprob: -23.000099182128906

Token 1442: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.093505099765025e-05
    2. '==' → logprob: -11.250020980834961
    3. '_d' → logprob: -12.750020980834961
    4. 's' → logprob: -13.750020980834961
    5. ' ==' → logprob: -13.875020980834961
    6. '```' → logprob: -14.125020980834961
    7. '_s' → logprob: -14.375020980834961
    8. '=' → logprob: -14.625020980834961
    9. '>' → logprob: -15.625020980834961
    10. 'д' → logprob: -15.750020980834961

Token 1443: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003615039400756359
    2. ' ==' → logprob: -5.628614902496338
    3. ')==' → logprob: -12.128615379333496
    4. '==
' → logprob: -12.378615379333496
    5. ']==' → logprob: -13.253615379333496
    6. '```' → logprob: -13.503615379333496
    7. '()==' → logprob: -13.628615379333496
    8. '===' → logprob: -14.878615379333496
    9. '==(' → logprob: -15.128615379333496
    10. '=' → logprob: -15.128615379333496

Token 1444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.25002098083496
    4. '(' → logprob: -17.37502098083496
    5. '
' → logprob: -19.62502098083496
    6. 'sum' → logprob: -19.62502098083496
    7. '00' → logprob: -20.37502098083496
    8. '```' → logprob: -20.50002098083496
    9. '  ' → logprob: -20.62502098083496
    10. '=' → logprob: -20.87502098083496

Token 1445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'sum' → logprob: -15.500001907348633
    4. '(' → logprob: -16.125001907348633
    5. '
' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '==' → logprob: -18.250001907348633
    8. '00' → logprob: -19.000001907348633
    9. 's' → logprob: -19.125001907348633
    10. '=' → logprob: -19.250001907348633

Token 1446: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0133315185084939
    2. 'else' → logprob: -4.638331413269043
    3. ' and' → logprob: -5.763331413269043
    4. 'and' → logprob: -7.763331413269043
    5. ' ' → logprob: -14.263331413269043
    6. '   ' → logprob: -14.388331413269043
    7. '       ' → logprob: -14.638331413269043
    8. '    ' → logprob: -14.638331413269043
    9. '	else' → logprob: -14.763331413269043
    10. '        ' → logprob: -15.138331413269043

Token 1447: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -22.000003814697266
    4. '   ' → logprob: -22.750003814697266
    5. '  ' → logprob: -24.000003814697266
    6. '
' → logprob: -24.625003814697266
    7. '<|end|>' → logprob: -24.750003814697266
    8. '```' → logprob: -25.000003814697266
    9. '    ' → logprob: -25.750003814697266
    10. '000' → logprob: -25.750003814697266

Token 1448: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۰' → logprob: -21.5
    4. '   ' → logprob: -21.875
    5. '000' → logprob: -22.25
    6. '1' → logprob: -22.5
    7. '```' → logprob: -22.75
    8. '(' → logprob: -22.9375
    9. '
' → logprob: -23.0625
    10. 'int' → logprob: -23.125

Token 1449: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007956989109516144
    2. ':' → logprob: -5.0079569816589355
    3. '<|end|>' → logprob: -7.2579569816589355
    4. '```' → logprob: -8.507957458496094
    5. '<|end|>' → logprob: -9.882957458496094
    6. '       ' → logprob: -10.382957458496094
    7. ':
' → logprob: -11.132957458496094
    8. ')' → logprob: -11.132957458496094
    9. ':return' → logprob: -11.132957458496094
    10. '    
' → logprob: -11.257957458496094

Token 1450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.4192871175473556e-05
    2. '```' → logprob: -10.750054359436035
    3. '    
' → logprob: -12.125054359436035
    4. '       ' → logprob: -12.250054359436035
    5. '<|end|>' → logprob: -12.500054359436035
    6. '
' → logprob: -12.750054359436035
    7. '   ' → logprob: -12.875054359436035
    8. '	total' → logprob: -13.000054359436035
    9. '[' → logprob: -13.000054359436035
    10. '	token' → logprob: -14.000054359436035

Token 1451: ' res' (ID: 694)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.34151896834373474
    2. '   ' → logprob: -1.3415189981460571
    3. 'total' → logprob: -3.5915188789367676
    4. '	total' → logprob: -8.466519355773926
    5. ' res' → logprob: -10.716519355773926
    6. '
' → logprob: -11.091519355773926
    7. ' result' → logprob: -11.091519355773926
    8. '```' → logprob: -11.216519355773926
    9. ' for' → logprob: -12.216519355773926
    10. '    ' → logprob: -12.466519355773926

Token 1452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024463046342134476
    2. ' =' → logprob: -3.899462938308716
    3. ' +=' → logprob: -6.149463176727295
    4. '+=' → logprob: -6.399463176727295
    5. '   ' → logprob: -9.149462699890137
    6. ',' → logprob: -12.524462699890137
    7. '  ' → logprob: -13.399462699890137
    8. ' ' → logprob: -13.899462699890137
    9. '    ' → logprob: -14.149462699890137
    10. '	' → logprob: -14.399462699890137

Token 1453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.375004768371582
    4. 'res' → logprob: -19.125003814697266
    5. '
' → logprob: -19.500003814697266
    6. '=' → logprob: -20.750003814697266
    7. '  ' → logprob: -20.750003814697266
    8. '```' → logprob: -21.000003814697266
    9. '(' → logprob: -21.500003814697266
    10. '       ' → logprob: -21.625003814697266

Token 1454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '=' → logprob: -21.25
    4. '۰' → logprob: -21.75
    5. '
' → logprob: -22.625
    6. '   ' → logprob: -22.75
    7. '```' → logprob: -23.125
    8. 'total' → logprob: -23.25
    9. 'sum' → logprob: -23.375
    10. 'for' → logprob: -23.625

Token 1455: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011823773384094238
    2. ' for' → logprob: -4.636823654174805
    3. 'for' → logprob: -6.761823654174805
    4. '	for' → logprob: -7.886823654174805
    5. '<|end|>' → logprob: -8.511823654174805
    6. '    
' → logprob: -9.511823654174805
    7. '
' → logprob: -10.011823654174805
    8. '```' → logprob: -10.261823654174805
    9. '       ' → logprob: -10.636823654174805
    10. ' 
' → logprob: -10.636823654174805

Token 1456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09354982525110245
    2. ' for' → logprob: -2.7185497283935547
    3. 'for' → logprob: -3.8435497283935547
    4. '```' → logprob: -6.843549728393555
    5. '	for' → logprob: -7.093549728393555
    6. ' ' → logprob: -12.218549728393555
    7. '   ' → logprob: -12.218549728393555
    8. '``' → logprob: -12.343549728393555
    9. '       ' → logprob: -12.593549728393555
    10. '
' → logprob: -13.968549728393555

Token 1457: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012523093027994037
    2. ' for' → logprob: -9.00012493133545
    3. '   ' → logprob: -13.37512493133545
    4. '	for' → logprob: -16.625125885009766
    5. '```' → logprob: -17.500125885009766
    6. '
' → logprob: -18.500125885009766
    7. ' ' → logprob: -19.000125885009766
    8. '    
' → logprob: -19.500125885009766
    9. '  ' → logprob: -19.625125885009766
    10. 'pro' → logprob: -21.500125885009766

Token 1458: ' dig' (ID: 3807)
  Prédit: ' dig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dig' → logprob: -0.4740773141384125
    2. 'dig' → logprob: -0.9740773439407349
    3. 'd' → logprob: -15.724077224731445
    4. '   ' → logprob: -16.849077224731445
    5. ' digit' → logprob: -17.099077224731445
    6. 'digit' → logprob: -17.099077224731445
    7. '```' → logprob: -17.224077224731445
    8. ' d' → logprob: -17.349077224731445
    9. '    ' → logprob: -18.974077224731445
    10. ' dif' → logprob: -19.474077224731445

Token 1459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006813408341258764
    2. 'in' → logprob: -5.0068135261535645
    3. '	in' → logprob: -10.256813049316406
    4. ' ' → logprob: -11.131813049316406
    5. '<|end|>' → logprob: -11.881813049316406
    6. '_in' → logprob: -12.256813049316406
    7. '_' → logprob: -12.444313049316406
    8. '<|end|>' → logprob: -12.631813049316406
    9. '   ' → logprob: -12.694313049316406
    10. 'd' → logprob: -12.881813049316406

Token 1460: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3141627907752991
    2. ' range' → logprob: -1.3141627311706543
    3. '10' → logprob: -7.564162731170654
    4. '0' → logprob: -8.314163208007812
    5. ' in' → logprob: -9.564163208007812
    6. ' ' → logprob: -10.314163208007812
    7. 'in' → logprob: -11.189163208007812
    8. '(range' → logprob: -11.314163208007812
    9. '```' → logprob: -12.939163208007812
    10. '9' → logprob: -12.939163208007812

Token 1461: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20178958773612976
    2. '(' → logprob: -1.7017896175384521
    3. ' ' → logprob: -8.201789855957031
    4. '   ' → logprob: -10.326789855957031
    5. '```' → logprob: -10.451789855957031
    6. '0' → logprob: -10.826789855957031
    7. ',' → logprob: -12.076789855957031
    8. '
' → logprob: -12.201789855957031
    9. 'range' → logprob: -13.201789855957031
    10. ')' → logprob: -13.326789855957031

Token 1462: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.057743949990254e-05
    2. '0' → logprob: -11.500020980834961
    3. ' ' → logprob: -11.875020980834961
    4. 'dig' → logprob: -13.000020980834961
    5. '1' → logprob: -15.000020980834961
    6. 'digit' → logprob: -15.125020980834961
    7. ')' → logprob: -15.625020980834961
    8. '```' → logprob: -15.875020980834961
    9. '(' → logprob: -16.50002098083496
    10. '9' → logprob: -16.62502098083496

Token 1463: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.45981907844543457
    2. ':
' → logprob: -1.3348190784454346
    3. ':' → logprob: -2.7098190784454346
    4. '   ' → logprob: -3.3348190784454346
    5. '):' → logprob: -6.8348188400268555
    6. '       ' → logprob: -6.9598188400268555
    7. '():
' → logprob: -7.8348188400268555
    8. '```' → logprob: -8.334818840026855
    9. ',' → logprob: -9.084818840026855
    10. '):
' → logprob: -9.709818840026855

Token 1464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005022776313126087
    2. '<|end|>' → logprob: -7.875502109527588
    3. '```' → logprob: -9.750502586364746
    4. '        
' → logprob: -10.500502586364746
    5. ' if' → logprob: -11.500502586364746
    6. '<|end|>' → logprob: -11.750502586364746
    7. '           ' → logprob: -12.375502586364746
    8. 'if' → logprob: -13.000502586364746
    9. '
' → logprob: -13.125502586364746
    10. ' ' → logprob: -13.500502586364746

Token 1465: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19133906066417694
    2. '       ' → logprob: -2.4413390159606934
    3. ' if' → logprob: -2.4413390159606934
    4. '```' → logprob: -10.066339492797852
    5. '           ' → logprob: -11.691339492797852
    6. '	if' → logprob: -12.691339492797852
    7. '   ' → logprob: -13.316339492797852
    8. 'new' → logprob: -13.816339492797852
    9. ' ' → logprob: -14.191339492797852
    10. '``' → logprob: -14.316339492797852

Token 1466: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5236944556236267
    2. 'sum' → logprob: -0.8986944556236267
    3. ' dig' → logprob: -7.8986945152282715
    4. 'dig' → logprob: -8.898694038391113
    5. '(sum' → logprob: -10.648694038391113
    6. ' ' → logprob: -10.648694038391113
    7. '   ' → logprob: -12.148694038391113
    8. '	sum' → logprob: -12.398694038391113
    9. '  ' → logprob: -13.273694038391113
    10. ' (' → logprob: -13.648694038391113

Token 1467: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.088346359931165e-07
    2. '_d' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.375
    4. 's' → logprob: -16.625
    5. '```' → logprob: -16.875
    6. '_s' → logprob: -17.5
    7. ' ' → logprob: -17.5
    8. ' d' → logprob: -17.5
    9. '==' → logprob: -17.625
    10. '  ' → logprob: -18.0

Token 1468: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08958937227725983
    2. '-' → logprob: -2.4645893573760986
    3. '-d' → logprob: -8.21458911895752
    4. ' <' → logprob: -8.96458911895752
    5. ' >=' → logprob: -9.33958911895752
    6. '>=' → logprob: -9.46458911895752
    7. '<' → logprob: -9.58958911895752
    8. '   ' → logprob: -11.58958911895752
    9. '    ' → logprob: -14.08958911895752
    10. ' ' → logprob: -14.21458911895752

Token 1469: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -0.00038682064041495323
    2. ' dig' → logprob: -7.875386714935303
    3. 'digit' → logprob: -12.500387191772461
    4. '1' → logprob: -13.250387191772461
    5. 'digits' → logprob: -14.250387191772461
    6. '```' → logprob: -15.375387191772461
    7. ' ' → logprob: -15.625387191772461
    8. '0' → logprob: -16.00038719177246
    9. '   ' → logprob: -16.62538719177246
    10. ' digit' → logprob: -17.87538719177246

Token 1470: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3138353228569031
    2. ' <' → logprob: -1.3138353824615479
    3. '>=' → logprob: -7.938835144042969
    4. ' >=' → logprob: -8.438835144042969
    5. ' ' → logprob: -15.313835144042969
    6. '   ' → logprob: -15.563835144042969
    7. '       ' → logprob: -16.68883514404297
    8. ' ' → logprob: -17.81383514404297
    9. '           ' → logprob: -17.93883514404297
    10. '```' → logprob: -18.06383514404297

Token 1471: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '=' → logprob: -17.25000762939453
    4. '   ' → logprob: -19.87500762939453
    5. '۰' → logprob: -20.00000762939453
    6. '<|end|>' → logprob: -21.62500762939453
    7. '```' → logprob: -21.87500762939453
    8. '
' → logprob: -22.12500762939453
    9. '  ' → logprob: -22.75000762939453
    10. '০' → logprob: -22.87500762939453

Token 1472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. '=' → logprob: -12.000006675720215
    3. ' ' → logprob: -15.125006675720215
    4. '۰' → logprob: -19.0000057220459
    5. '1' → logprob: -20.3750057220459
    6. '```' → logprob: -21.0000057220459
    7. '   ' → logprob: -21.1250057220459
    8. '>' → logprob: -21.3750057220459
    9. '
' → logprob: -21.6250057220459
    10. '>=' → logprob: -22.0000057220459

Token 1473: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5093050003051758
    2. ':' → logprob: -1.2593050003051758
    3. ':
' → logprob: -2.384305000305176
    4. '       ' → logprob: -4.009305000305176
    5. '<|end|>' → logprob: -5.759305000305176
    6. '<|end|>' → logprob: -7.134305000305176
    7. '          ' → logprob: -8.384305000305176
    8. '   ' → logprob: -9.009305000305176
    9. ':return' → logprob: -9.009305000305176
    10. '               ' → logprob: -9.134305000305176

Token 1474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08088281005620956
    2. '       ' → logprob: -2.5808827877044678
    3. '<|end|>' → logprob: -7.080883026123047
    4. '               ' → logprob: -8.330883026123047
    5. '```' → logprob: -8.705883026123047
    6. '   ' → logprob: -8.955883026123047
    7. '	       ' → logprob: -9.330883026123047
    8. '          ' → logprob: -9.455883026123047
    9. '<|end|>' → logprob: -9.580883026123047
    10. '		' → logprob: -9.955883026123047

Token 1475: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05905380845069885
    2. 'break' (adapté à ' break') → logprob: -3.809053897857666
    3. ' break' → logprob: -3.934053897857666
    4. ' continue' → logprob: -4.684053897857666
    5. 'continue' → logprob: -5.184053897857666
    6. '               ' → logprob: -7.809053897857666
    7. '```' → logprob: -8.809053421020508
    8. '       ' → logprob: -9.559053421020508
    9. ' ' → logprob: -9.934053421020508
    10. '	       ' → logprob: -10.184053421020508

Token 1476: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010681778658181429
    2. '<|end|>' → logprob: -7.626068115234375
    3. '        
' → logprob: -8.126068115234375
    4. '```' → logprob: -9.126068115234375
    5. '           ' → logprob: -9.876068115234375
    6. ' ' → logprob: -10.251068115234375
    7. '[' → logprob: -11.251068115234375
    8. '   ' → logprob: -11.626068115234375
    9. '<|end|>' → logprob: -11.626068115234375
    10. '       
' → logprob: -11.751068115234375

Token 1477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043567578541114926
    2. '```' → logprob: -8.000435829162598
    3. '           ' → logprob: -9.750435829162598
    4. '        
' → logprob: -11.375435829162598
    5. '[' → logprob: -11.875435829162598
    6. '<|end|>' → logprob: -12.000435829162598
    7. '               ' → logprob: -12.125435829162598
    8. '	' → logprob: -12.125435829162598
    9. '	       ' → logprob: -13.875435829162598
    10. '   ' → logprob: -14.000435829162598

Token 1478: ' pf' (ID: 27291)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' (adapté à ' pf') → logprob: -0.2586769163608551
    2. '       ' → logprob: -1.5086768865585327
    3. ' pf' → logprob: -5.008677005767822
    4. '           ' → logprob: -11.008676528930664
    5. 'new' → logprob: -11.133676528930664
    6. '```' → logprob: -11.633676528930664
    7. '   ' → logprob: -13.383676528930664
    8. '_pf' → logprob: -13.758676528930664
    9. ' new' → logprob: -14.383676528930664
    10. '      ' → logprob: -15.008676528930664

Token 1479: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519311308860779
    2. '=' → logprob: -1.5019311904907227
    3. ')' → logprob: -14.126931190490723
    4. '   ' → logprob: -14.626931190490723
    5. '       ' → logprob: -14.751931190490723
    6. '=
' → logprob: -15.876931190490723
    7. 's' → logprob: -16.501930236816406
    8. ' =
' → logprob: -16.626930236816406
    9. '    ' → logprob: -17.251930236816406
    10. ' ' → logprob: -17.501930236816406

Token 1480: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.0007101670489646494
    2. ' prime' → logprob: -7.2507100105285645
    3. '_prime' → logprob: -16.000709533691406
    4. '(' → logprob: -17.500709533691406
    5. '[' → logprob: -17.500709533691406
    6. 'principal' → logprob: -18.125709533691406
    7. 'tuple' → logprob: -18.250709533691406
    8. 'premium' → logprob: -18.375709533691406
    9. 'pr' → logprob: -19.125709533691406
    10. '(pr' → logprob: -19.500709533691406

Token 1481: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00011415231710998341
    2. 'f' → logprob: -9.125114440917969
    3. '```' → logprob: -13.000114440917969
    4. '_factor' → logprob: -13.125114440917969
    5. ')' → logprob: -15.375114440917969
    6. '(_' → logprob: -15.750114440917969
    7. 'Factors' → logprob: -16.25011444091797
    8. 'factor' → logprob: -16.25011444091797
    9. '(' → logprob: -16.87511444091797
    10. '``' → logprob: -16.87511444091797

Token 1482: 'actors' (ID: 37126)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.724902868270874
    2. 'actors' → logprob: -0.724902868270874
    3. '_f' → logprob: -3.474902868270874
    4. 'ctors' → logprob: -9.724903106689453
    5. 'Factors' → logprob: -10.224903106689453
    6. 'factor' → logprob: -10.349903106689453
    7. 'acters' → logprob: -10.599903106689453
    8. 'actor' → logprob: -10.599903106689453
    9. '_' → logprob: -10.849903106689453
    10. ' factors' → logprob: -11.224903106689453

Token 1483: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.5941604690160602e-05
    2. 'dig' → logprob: -10.625025749206543
    3. '[d' → logprob: -14.750025749206543
    4. 'd' → logprob: -15.125025749206543
    5. '   ' → logprob: -15.250025749206543
    6. '	d' → logprob: -16.00002670288086
    7. '[' → logprob: -16.12502670288086
    8. ',d' → logprob: -16.25002670288086
    9. '```' → logprob: -16.75002670288086
    10. ' (' → logprob: -16.87502670288086

Token 1484: 'ig' (ID: 343)
  Prédit: 'ig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.002842080080881715
    2. 'dig' → logprob: -5.877841949462891
    3. '(d' → logprob: -11.12784194946289
    4. 'g' → logprob: -11.62784194946289
    5. '(' → logprob: -12.75284194946289
    6. '```' → logprob: -13.00284194946289
    7. '(p' → logprob: -13.25284194946289
    8. '[' → logprob: -13.50284194946289
    9. ')' → logprob: -14.37784194946289
    10. 'd' → logprob: -14.37784194946289

Token 1485: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2233183042553719e-05
    2. ' +' → logprob: -11.875012397766113
    3. ')+' → logprob: -13.000012397766113
    4. '()+' → logprob: -13.500012397766113
    5. '(' → logprob: -14.125012397766113
    6. ')' → logprob: -14.375012397766113
    7. '[' → logprob: -15.625012397766113
    8. '+
' → logprob: -16.625011444091797
    9. '```' → logprob: -16.875011444091797
    10. '   ' → logprob: -18.250011444091797

Token 1486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. '+' → logprob: -10.750025749206543
    3. 'dig' → logprob: -13.250025749206543
    4. '```' → logprob: -13.375025749206543
    5. ' ' → logprob: -14.625025749206543
    6. ')' → logprob: -16.125024795532227
    7. '   ' → logprob: -16.875024795532227
    8. ' +' → logprob: -17.250024795532227
    9. '
' → logprob: -17.500024795532227
    10. '``' → logprob: -18.000024795532227

Token 1487: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12766125798225403
    2. ')' → logprob: -2.1276612281799316
    3. '       ' → logprob: -7.377661228179932
    4. ')
' → logprob: -10.00266170501709
    5. '   ' → logprob: -10.25266170501709
    6. '),' → logprob: -11.62766170501709
    7. 'new' → logprob: -11.87766170501709
    8. ')new' → logprob: -12.00266170501709
    9. ')`
' → logprob: -13.37766170501709
    10. '           ' → logprob: -14.50266170501709

Token 1488: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027578065637499094
    2. ' new' → logprob: -6.377758026123047
    3. '```' → logprob: -7.252758026123047
    4. 'new' → logprob: -8.252758026123047
    5. '<|end|>' → logprob: -9.627758026123047
    6. ')new' → logprob: -12.377758026123047
    7. ',new' → logprob: -13.252758026123047
    8. '​' → logprob: -13.252758026123047
    9. '[new' → logprob: -13.377758026123047
    10. '<|end|>' → logprob: -13.502758026123047

Token 1489: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00012570773833431304
    2. ' new' → logprob: -9.000125885009766
    3. '       ' → logprob: -13.000125885009766
    4. '   ' → logprob: -17.875125885009766
    5. '	new' → logprob: -18.000125885009766
    6. '           ' → logprob: -18.375125885009766
    7. '```' → logprob: -18.500125885009766
    8. '_new' → logprob: -19.375125885009766
    9. ')new' → logprob: -20.000125885009766
    10. '[new' → logprob: -20.625125885009766

Token 1490: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0067405966110527515
    2. '_f' → logprob: -5.381740570068359
    3. '=' → logprob: -6.881740570068359
    4. ' =' → logprob: -7.506740570068359
    5. 'pro' → logprob: -8.13174057006836
    6. 'factor' → logprob: -8.75674057006836
    7. '_pro' → logprob: -9.75674057006836
    8. '_factor' → logprob: -10.63174057006836
    9. '```' → logprob: -12.38174057006836
    10. '=f' → logprob: -14.00674057006836

Token 1491: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04305616766214371
    2. ' =' → logprob: -3.1680562496185303
    3. ',' → logprob: -10.16805648803711
    4. '=
' → logprob: -12.54305648803711
    5. '=create' → logprob: -12.54305648803711
    6. '=res' → logprob: -12.91805648803711
    7. '=f' → logprob: -13.16805648803711
    8. '=new' → logprob: -13.54305648803711
    9. '=lambda' → logprob: -14.41805648803711
    10. ')' → logprob: -14.54305648803711

Token 1492: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -7.171581091824919e-05
    2. ' add' → logprob: -9.62507152557373
    3. '(add' → logprob: -12.37507152557373
    4. '(' → logprob: -13.87507152557373
    5. '   ' → logprob: -14.87507152557373
    6. 'tuple' → logprob: -16.750072479248047
    7. '           ' → logprob: -17.250072479248047
    8. '	add' → logprob: -17.750072479248047
    9. ' (' → logprob: -18.000072479248047
    10. '       ' → logprob: -18.000072479248047

Token 1493: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.00041208078619092703
    2. 'add' → logprob: -8.125411987304688
    3. 'f' → logprob: -9.375411987304688
    4. '(add' → logprob: -11.500411987304688
    5. '_factor' → logprob: -12.000411987304688
    6. 'Factors' → logprob: -12.500411987304688
    7. '_add' → logprob: -12.875411987304688
    8. 'factor' → logprob: -13.250411987304688
    9. 'tuple' → logprob: -13.500411987304688
    10. 's' → logprob: -13.625411987304688

Token 1494: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.002556638326495886
    2. 'f' → logprob: -6.252556800842285
    3. 'add' → logprob: -7.752556800842285
    4. 'ctors' → logprob: -9.877556800842285
    5. 'dd' → logprob: -10.002556800842285
    6. '(add' → logprob: -10.002556800842285
    7. 'Factors' → logprob: -11.627556800842285
    8. 'd' → logprob: -11.752556800842285
    9. '(' → logprob: -11.877556800842285
    10. 'ss' → logprob: -12.877556800842285

Token 1495: '(pro' (ID: 7092)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.693148672580719
    2. '(pro' → logprob: -0.693148672580719
    3. '	pro' → logprob: -14.318148612976074
    4. '   ' → logprob: -14.693148612976074
    5. '_pro' → logprob: -15.693148612976074
    6. '       ' → logprob: -16.31814956665039
    7. 'prod' → logprob: -16.81814956665039
    8. ' pro' → logprob: -17.06814956665039
    9. '(prod' → logprob: -18.31814956665039
    10. '```' → logprob: -18.56814956665039

Token 1496: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.00115486653521657
    2. 'rof' → logprob: -7.126154899597168
    3. 'ro' → logprob: -9.501154899597168
    4. 'f' → logprob: -9.751154899597168
    5. '_df' → logprob: -9.751154899597168
    6. '(pro' → logprob: -10.251154899597168
    7. 'pro' → logprob: -10.251154899597168
    8. 'rf' → logprob: -10.376154899597168
    9. 'd' → logprob: -11.126154899597168
    10. 'rod' → logprob: -12.001154899597168

Token 1497: ',' (ID: 11)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.38688042759895325
    2. ',' → logprob: -1.1368803977966309
    3. ' ,' → logprob: -12.261880874633789
    4. ',
' → logprob: -13.886880874633789
    5. ',d' → logprob: -14.011880874633789
    6. '   ' → logprob: -14.261880874633789
    7. ',(' → logprob: -14.511880874633789
    8. ',v' → logprob: -15.386880874633789
    9. ',b' → logprob: -15.636880874633789
    10. ',s' → logprob: -15.761880874633789

Token 1498: ' pf' (ID: 27291)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' → logprob: -5.200166469876422e-06
    2. 'new' → logprob: -13.125004768371582
    3. ' pf' → logprob: -13.500004768371582
    4. '(p' → logprob: -13.625004768371582
    5. 'tuple' → logprob: -14.750004768371582
    6. '(' → logprob: -15.750004768371582
    7. '(new' → logprob: -17.5000057220459
    8. '   ' → logprob: -17.6250057220459
    9. '_pf' → logprob: -18.0000057220459
    10. ' (' → logprob: -18.8750057220459

Token 1499: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21118000149726868
    2. ')' → logprob: -1.7111799716949463
    3. ')
' → logprob: -5.336180210113525
    4. ',' → logprob: -5.961180210113525
    5. '):
' → logprob: -6.836180210113525
    6. '```' → logprob: -7.961180210113525
    7. '   ' → logprob: -9.086179733276367
    8. '           ' → logprob: -9.211179733276367
    9. '),' → logprob: -9.211179733276367
    10. '<|end|>' → logprob: -9.336179733276367

Token 1500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002883913984987885
    2. '```' → logprob: -8.250288009643555
    3. '<|end|>' → logprob: -10.750288009643555
    4. '``' → logprob: -13.000288009643555
    5. '[' → logprob: -14.375288009643555
    6. '           ' → logprob: -14.625288009643555
    7. '<|end|>' → logprob: -14.875288009643555
    8. ' if' → logprob: -15.000288009643555
    9. '        
' → logprob: -15.125288009643555
    10. '               ' → logprob: -15.375288009643555

Token 1501: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3187083601951599
    2. 'if' (adapté à ' if') → logprob: -1.3187084197998047
    3. ' if' → logprob: -5.693708419799805
    4. '```' → logprob: -6.193708419799805
    5. '``' → logprob: -11.068708419799805
    6. '           ' → logprob: -12.693708419799805
    7. 'res' → logprob: -13.943708419799805
    8. '   ' → logprob: -14.318708419799805
    9. 'If' → logprob: -14.818708419799805
    10. '	if' → logprob: -15.193708419799805

Token 1502: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.005260799080133438
    2. 'not' → logprob: -5.630260944366455
    3. ' less' → logprob: -6.505260944366455
    4. ' not' → logprob: -9.130260467529297
    5. '(not' → logprob: -10.505260467529297
    6. 'new' → logprob: -11.380260467529297
    7. '(' → logprob: -12.005260467529297
    8. 'sum' → logprob: -12.630260467529297
    9. '   ' → logprob: -13.005260467529297
    10. '
' → logprob: -13.505260467529297

Token 1503: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -3.531315314830863e-06
    2. 'flag' → logprob: -13.625003814697266
    3. '_FLAG' → logprob: -14.250003814697266
    4. 'd' → logprob: -14.375003814697266
    5. '       ' → logprob: -14.750003814697266
    6. '_f' → logprob: -15.125003814697266
    7. 'Flag' → logprob: -15.625003814697266
    8. '_flags' → logprob: -16.500003814697266
    9. '```' → logprob: -17.375003814697266
    10. '           ' → logprob: -17.500003814697266

Token 1504: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2265913486480713
    2. '==' → logprob: -1.2265913486480713
    3. ':
' → logprob: -1.3515913486480713
    4. '           ' → logprob: -2.7265913486480713
    5. '       ' → logprob: -3.1015913486480713
    6. ' or' → logprob: -3.3515913486480713
    7. 'or' → logprob: -5.226591110229492
    8. ' ==' → logprob: -6.476591110229492
    9. '=True' → logprob: -7.226591110229492
    10. '=' → logprob: -7.476591110229492

Token 1505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29010286927223206
    2. '       ' → logprob: -1.9151028394699097
    3. '<|end|>' → logprob: -3.290102958679199
    4. ':' → logprob: -3.790102958679199
    5. '```' → logprob: -4.040102958679199
    6. '               ' → logprob: -4.915102958679199
    7. ':
' → logprob: -5.165102958679199
    8. '<|end|>' → logprob: -5.415102958679199
    9. '          ' → logprob: -6.290102958679199
    10. '	       ' → logprob: -6.540102958679199

Token 1506: ' res' (ID: 694)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7505322098731995
    2. 'res' (adapté à ' res') → logprob: -0.7505322098731995
    3. '               ' → logprob: -3.2505321502685547
    4. '```' → logprob: -4.875532150268555
    5. '       ' → logprob: -5.375532150268555
    6. ' res' → logprob: -6.375532150268555
    7. '``' → logprob: -7.000532150268555
    8. '	       ' → logprob: -7.125532150268555
    9. '            ' → logprob: -8.000532150268555
    10. '             ' → logprob: -9.250532150268555

Token 1507: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023256193846464157
    2. ' +=' → logprob: -3.773256301879883
    3. '   ' → logprob: -12.273256301879883
    4. ']+=' → logprob: -12.773256301879883
    5. '+' → logprob: -13.898256301879883
    6. '=' → logprob: -14.148256301879883
    7. '```' → logprob: -14.523256301879883
    8. '+='' → logprob: -15.398256301879883
    9. '+=(' → logprob: -15.523256301879883
    10. '           ' → logprob: -15.773256301879883

Token 1508: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0010348338400945067
    2. ' dfs' → logprob: -6.876034736633301
    3. '   ' → logprob: -13.6260347366333
    4. 'df' → logprob: -15.3760347366333
    5. '       ' → logprob: -15.3760347366333
    6. '           ' → logprob: -16.126035690307617
    7. '  ' → logprob: -16.626035690307617
    8. ' ' → logprob: -16.626035690307617
    9. '     ' → logprob: -17.376035690307617
    10. 'dp' → logprob: -17.751035690307617

Token 1509: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.8624639324116288e-06
    2. 'sum' → logprob: -13.250001907348633
    3. '_' → logprob: -17.875001907348633
    4. '_s' → logprob: -19.125001907348633
    5. ' sum' → logprob: -19.875001907348633
    6. '```' → logprob: -20.000001907348633
    7. '_eq' → logprob: -21.125001907348633
    8. 's' → logprob: -21.500001907348633
    9. '_SUM' → logprob: -21.625001907348633
    10. ')' → logprob: -21.750001907348633

Token 1510: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.47409310936927795
    2. '_sum' → logprob: -0.9740930795669556
    3. 'sum' → logprob: -11.599093437194824
    4. 'eq' → logprob: -12.224093437194824
    5. '_equ' → logprob: -13.349093437194824
    6. '```' → logprob: -15.599093437194824
    7. '_equal' → logprob: -16.974092483520508
    8. 'equ' → logprob: -17.099092483520508
    9. '__' → logprob: -17.474092483520508
    10. '\' → logprob: -18.224092483520508

Token 1511: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.006089119240641594
    2. 'prod' → logprob: -5.506089210510254
    3. '_eq' → logprob: -6.381089210510254
    4. '_sum' → logprob: -8.131089210510254
    5. '_proj' → logprob: -12.006089210510254
    6. '_pos' → logprob: -12.256089210510254
    7. '_pro' → logprob: -12.756089210510254
    8. 'eq' → logprob: -13.381089210510254
    9. '(prod' → logprob: -13.881089210510254
    10. 'pos' → logprob: -14.006089210510254

Token 1512: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.20269639790058136
    2. '_sum' → logprob: -2.4526963233947754
    3. '_prod' → logprob: -2.8276963233947754
    4. 'pos' → logprob: -4.077696323394775
    5. '_pos' → logprob: -4.702696323394775
    6. 'prod' → logprob: -5.452696323394775
    7. '(pos' → logprob: -5.577696323394775
    8. '_eq' → logprob: -5.827696323394775
    9. '```' → logprob: -7.702696323394775
    10. '_le' → logprob: -8.202696800231934

Token 1513: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.392202976712724e-06
    2. 'sum' → logprob: -12.000006675720215
    3. '(sum' → logprob: -17.6250057220459
    4. '```' → logprob: -17.7500057220459
    5. '(pos' → logprob: -17.8750057220459
    6. 'pos' → logprob: -18.2500057220459
    7. '
' → logprob: -19.1250057220459
    8. '_pos' → logprob: -19.1250057220459
    9. '   ' → logprob: -19.5000057220459
    10. ' sum' → logprob: -19.7500057220459

Token 1514: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.375001907348633
    3. '(
' → logprob: -16.250001907348633
    4. 'pos' → logprob: -16.250001907348633
    5. ' (' → logprob: -17.250001907348633
    6. '[pos' → logprob: -17.500001907348633
    7. '(position' → logprob: -17.500001907348633
    8. ',pos' → logprob: -17.875001907348633
    9. '```' → logprob: -19.375001907348633
    10. ' pos' → logprob: -19.625001907348633

Token 1515: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.246537173457909e-06
    2. ' +' → logprob: -12.375003814697266
    3. '+,' → logprob: -17.000003814697266
    4. '+
' → logprob: -17.875003814697266
    5. ',' → logprob: -18.125003814697266
    6. '()+' → logprob: -18.750003814697266
    7. '＋' → logprob: -18.875003814697266
    8. ',pos' → logprob: -19.000003814697266
    9. '(pos' → logprob: -19.125003814697266
    10. '1' → logprob: -19.250003814697266

Token 1516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.625000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '+' → logprob: -15.625000953674316
    5. '
' → logprob: -15.750000953674316
    6. '```' → logprob: -16.000001907348633
    7. 'pos' → logprob: -16.500001907348633
    8. '(pos' → logprob: -17.500001907348633
    9. ',' → logprob: -18.125001907348633
    10. '...' → logprob: -18.250001907348633

Token 1517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006608496769331396
    2. '(' → logprob: -7.8756608963012695
    3. '```' → logprob: -8.62566089630127
    4. '(None' → logprob: -10.37566089630127
    5. '           ' → logprob: -10.87566089630127
    6. ' ,' → logprob: -10.87566089630127
    7. ',None' → logprob: -11.87566089630127
    8. ',pos' → logprob: -12.12566089630127
    9. '   ' → logprob: -12.37566089630127
    10. '       ' → logprob: -12.75066089630127

Token 1518: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0002619318547658622
    2. ' sum' → logprob: -8.250262260437012
    3. '(sum' → logprob: -14.625262260437012
    4. 'new' → logprob: -16.625261306762695
    5. '   ' → logprob: -16.875261306762695
    6. ' ' → logprob: -17.625261306762695
    7. '  ' → logprob: -17.875261306762695
    8. 's' → logprob: -18.500261306762695
    9. '    ' → logprob: -18.625261306762695
    10. '0' → logprob: -18.625261306762695

Token 1519: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008439282886683941
    2. '_eq' → logprob: -5.258439064025879
    3. 'eq' → logprob: -6.258439064025879
    4. '+' → logprob: -7.883439064025879
    5. 'f' → logprob: -8.258439064025879
    6. 's' → logprob: -8.383439064025879
    7. 'prod' → logprob: -9.258439064025879
    8. '=' → logprob: -9.633439064025879
    9. ',' → logprob: -9.758439064025879
    10. 'pro' → logprob: -9.883439064025879

Token 1520: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.15984594821929932
    2. '-' → logprob: -2.1598458290100098
    3. ' -' → logprob: -3.6598458290100098
    4. ',' → logprob: -5.03484582901001
    5. '   ' → logprob: -10.534846305847168
    6. '  ' → logprob: -10.784846305847168
    7. '-digit' → logprob: -10.784846305847168
    8. ',d' → logprob: -10.909846305847168
    9. '-ex' → logprob: -11.659846305847168
    10. '-D' → logprob: -12.409846305847168

Token 1521: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -1.1472419600977446e-06
    2. ' dig' → logprob: -14.500000953674316
    3. '1' → logprob: -14.750000953674316
    4. 'digit' → logprob: -15.375000953674316
    5. 'digits' → logprob: -18.125001907348633
    6. '```' → logprob: -18.375001907348633
    7. '   ' → logprob: -19.500001907348633
    8. 'Dig' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.125001907348633
    10. '``' → logprob: -22.250001907348633

Token 1522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037681119283661246
    2. ',new' → logprob: -8.00037670135498
    3. ' ,' → logprob: -10.37537670135498
    4. '           ' → logprob: -12.50037670135498
    5. '       ' → logprob: -13.12537670135498
    6. '```' → logprob: -13.62537670135498
    7. '   ' → logprob: -14.37537670135498
    8. '          ' → logprob: -14.62537670135498
    9. ',p' → logprob: -15.00037670135498
    10. 'new' → logprob: -15.00037670135498

Token 1523: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.31349846720695496
    2. 'True' → logprob: -1.3134984970092773
    3. '(True' → logprob: -8.688498497009277
    4. '(' → logprob: -10.313498497009277
    5. ' new' → logprob: -10.938498497009277
    6. ' True' → logprob: -12.188498497009277
    7. 'False' → logprob: -12.188498497009277
    8. '(new' → logprob: -12.188498497009277
    9. 'New' → logprob: -13.563498497009277
    10. 'pro' → logprob: -15.813498497009277

Token 1524: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.23766112327575684
    2. '_flag' → logprob: -1.6126611232757568
    3. '_f' → logprob: -4.737661361694336
    4. 'flag' → logprob: -6.112661361694336
    5. 'Flag' → logprob: -7.737661361694336
    6. '_factor' → logprob: -7.987661361694336
    7. '1' → logprob: -9.112661361694336
    8. 'prod' → logprob: -9.237661361694336
    9. '_flags' → logprob: -9.612661361694336
    10. 'd' → logprob: -10.237661361694336

Token 1525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. 'True' → logprob: -13.000007629394531
    3. '           ' → logprob: -13.250007629394531
    4. ' ,' → logprob: -13.875007629394531
    5. '(True' → logprob: -14.000007629394531
    6. '=True' → logprob: -14.375007629394531
    7. '       ' → logprob: -15.250007629394531
    8. '```' → logprob: -15.875007629394531
    9. '   ' → logprob: -16.37500762939453
    10. '               ' → logprob: -16.75000762939453

Token 1526: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.512236498361744e-07
    2. ' True' → logprob: -15.000000953674316
    3. '           ' → logprob: -16.625
    4. '   ' → logprob: -17.0
    5. '(True' → logprob: -17.875
    6. '       ' → logprob: -18.125
    7. '
' → logprob: -18.875
    8. '                   ' → logprob: -20.0
    9. '               ' → logprob: -20.25
    10. '1' → logprob: -21.125

Token 1527: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016146040288731456
    2. '       ' → logprob: -6.501614570617676
    3. ')
' → logprob: -9.376614570617676
    4. '           ' → logprob: -11.251614570617676
    5. '   ' → logprob: -12.126614570617676
    6. '):
' → logprob: -13.001614570617676
    7. '               ' → logprob: -13.501614570617676
    8. ')return' → logprob: -13.626614570617676
    9. '):' → logprob: -13.751614570617676
    10. '```' → logprob: -14.126614570617676

Token 1528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04005202278494835
    2. '```' → logprob: -3.4150519371032715
    3. '           ' → logprob: -5.9150519371032715
    4. '               ' → logprob: -6.6650519371032715
    5. ')' → logprob: -6.7900519371032715
    6. '<|end|>' → logprob: -7.7900519371032715
    7. '):
' → logprob: -9.16505241394043
    8. '``' → logprob: -9.16505241394043
    9. '[' → logprob: -9.29005241394043
    10. ' else' → logprob: -9.54005241394043

Token 1529: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010459556244313717
    2. 'else' (adapté à ' else') → logprob: -4.8854594230651855
    3. ' else' → logprob: -6.2604594230651855
    4. '```' → logprob: -7.0104594230651855
    5. '           ' → logprob: -11.510459899902344
    6. ' ' → logprob: -12.010459899902344
    7. '   ' → logprob: -12.260459899902344
    8. '	' → logprob: -12.635459899902344
    9. 'elif' → logprob: -12.885459899902344
    10. '               ' → logprob: -13.135459899902344

Token 1530: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40186968445777893
    2. ':' → logprob: -1.2768696546554565
    3. '       ' → logprob: -3.526869773864746
    4. ':
' → logprob: -4.151869773864746
    5. '          ' → logprob: -6.401869773864746
    6. '         ' → logprob: -6.651869773864746
    7. '               ' → logprob: -7.151869773864746
    8. '[' → logprob: -7.276869773864746
    9. '{' → logprob: -7.776869773864746
    10. '                   ' → logprob: -8.151869773864746

Token 1531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17995384335517883
    2. '```' → logprob: -2.9299538135528564
    3. '               ' → logprob: -3.5549538135528564
    4. '            ' → logprob: -3.6799538135528564
    5. '        ' → logprob: -3.8049538135528564
    6. '       ' → logprob: -4.3049540519714355
    7. '                ' → logprob: -5.1799540519714355
    8. '          ' → logprob: -5.4299540519714355
    9. '[' → logprob: -6.3049540519714355
    10. ' for' → logprob: -6.6799540519714355

Token 1532: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40125730633735657
    2. 'if' → logprob: -1.9012572765350342
    3. '           ' → logprob: -2.151257276535034
    4. '               ' → logprob: -3.151257276535034
    5. '```' → logprob: -4.151257514953613
    6. ' for' → logprob: -5.776257514953613
    7. '#' (adapté à ' #') → logprob: -6.651257514953613
    8. ' if' → logprob: -7.776257514953613
    9. '``' → logprob: -7.776257514953613
    10. '                   ' → logprob: -7.776257514953613

Token 1533: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17923195660114288
    2. 'if' → logprob: -2.304231882095337
    3. '           ' → logprob: -3.554231882095337
    4. 'less' → logprob: -4.429232120513916
    5. 'greater' → logprob: -4.929232120513916
    6. 'flag' → logprob: -5.054232120513916
    7. 'prod' → logprob: -5.929232120513916
    8. '               ' → logprob: -6.679232120513916
    9. 'can' → logprob: -6.804232120513916
    10. '#' → logprob: -7.054232120513916

Token 1534: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36477190256118774
    2. 'new' → logprob: -2.239771842956543
    3. ' if' → logprob: -2.364771842956543
    4. 'for' → logprob: -3.239771842956543
    5. ' new' → logprob: -3.614771842956543
    6. '           ' → logprob: -3.864771842956543
    7. '               ' → logprob: -4.739771842956543
    8. '(new' → logprob: -5.864771842956543
    9. ' for' → logprob: -5.989771842956543
    10. '       ' → logprob: -7.614771842956543

Token 1535: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11427187919616699
    2. 'any' → logprob: -2.614271879196167
    3. 'all' → logprob: -3.489271879196167
    4. 'dig' → logprob: -6.489272117614746
    5. ' new' → logprob: -6.739272117614746
    6. ' all' → logprob: -8.114272117614746
    7. '           ' → logprob: -8.364272117614746
    8. ' any' → logprob: -8.364272117614746
    9. 'pos' → logprob: -8.989272117614746
    10. 'max' → logprob: -9.114272117614746

Token 1536: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.339278580620885e-06
    2. '_f' → logprob: -13.500001907348633
    3. '
' → logprob: -15.250001907348633
    4. '```' → logprob: -15.250001907348633
    5. 'F' → logprob: -16.500001907348633
    6. '``' → logprob: -17.000001907348633
    7. '_' → logprob: -17.125001907348633
    8. 'ф' → logprob: -17.625001907348633
    9. 'factor' → logprob: -18.250001907348633
    10. '`' → logprob: -18.250001907348633

Token 1537: ' >' (ID: 1424)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12409930676221848
    2. '<=' → logprob: -3.4990992546081543
    3. '==' → logprob: -3.6240992546081543
    4. '_less' → logprob: -3.8740992546081543
    5. ' ==' → logprob: -4.499099254608154
    6. '[' → logprob: -4.749099254608154
    7. ' <=' → logprob: -4.749099254608154
    8. '```' → logprob: -5.999099254608154
    9. ' <' → logprob: -6.499099254608154
    10. '_equal' → logprob: -6.999099254608154

Token 1538: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.31329089403152466
    2. ' prod' → logprob: -1.3132908344268799
    3. '(prod' → logprob: -11.0632905960083
    4. 'pro' → logprob: -12.6882905960083
    5. ' new' → logprob: -13.3132905960083
    6. 'new' → logprob: -13.3132905960083
    7. '_prod' → logprob: -13.9382905960083
    8. 'proc' → logprob: -14.0632905960083
    9. '(' → logprob: -14.1882905960083
    10. '	pro' → logprob: -14.3132905960083

Token 1539: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0018016769317910075
    2. '_factor' → logprob: -6.751801490783691
    3. '_f' → logprob: -7.501801490783691
    4. 'factor' → logprob: -10.376801490783691
    5. '```' → logprob: -10.876801490783691
    6. '           ' → logprob: -11.626801490783691
    7. '               ' → logprob: -12.126801490783691
    8. 's' → logprob: -12.376801490783691
    9. '(_' → logprob: -13.501801490783691
    10. 'f' → logprob: -13.626801490783691

Token 1540: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -6.933173426659778e-05
    2. '_f' → logprob: -9.750069618225098
    3. '```' → logprob: -12.500069618225098
    4. '               ' → logprob: -13.125069618225098
    5. 'factor' → logprob: -13.125069618225098
    6. '           ' → logprob: -13.500069618225098
    7. '                   ' → logprob: -14.000069618225098
    8. ')_' → logprob: -16.00006866455078
    9. ''_' → logprob: -16.37506866455078
    10. '_fac' → logprob: -16.75006866455078

Token 1541: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2825716435909271
    2. '               ' → logprob: -1.4075716733932495
    3. '                   ' → logprob: -7.907571792602539
    4. ':' → logprob: -8.657571792602539
    5. '```' → logprob: -8.782571792602539
    6. '       ' → logprob: -8.907571792602539
    7. 'for' → logprob: -9.032571792602539
    8. ' and' → logprob: -9.282571792602539
    9. ':
' → logprob: -9.407571792602539
    10. 'and' → logprob: -9.407571792602539

Token 1542: ' skip' (ID: 16677)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03765030950307846
    2. 'if' → logprob: -3.5376503467559814
    3. 'for' → logprob: -5.287650108337402
    4. '                   ' → logprob: -6.537650108337402
    5. ' if' → logprob: -7.287650108337402
    6. '           ' → logprob: -8.537650108337402
    7. ' for' → logprob: -8.662650108337402
    8. '   ' → logprob: -9.162650108337402
    9. 'continue' → logprob: -9.662650108337402
    10. '                       ' → logprob: -9.787650108337402

Token 1543: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023270171135663986
    2. '               ' → logprob: -4.148270130157471
    3. 'for' → logprob: -5.523270130157471
    4. 'if' → logprob: -6.023270130157471
    5. '       ' → logprob: -7.773270130157471
    6. '                   ' → logprob: -8.023270606994629
    7. ' for' → logprob: -11.023270606994629
    8. '   ' → logprob: -11.648270606994629
    9. ' if' → logprob: -11.648270606994629
    10. '                       ' → logprob: -12.148270606994629

Token 1544: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008286540396511555
    2. '               ' → logprob: -4.883286476135254
    3. 'for' → logprob: -7.883286476135254
    4. '```' → logprob: -8.508286476135254
    5. ' for' → logprob: -9.883286476135254
    6. '       ' → logprob: -10.508286476135254
    7. '                   ' → logprob: -11.258286476135254
    8. 'if' → logprob: -12.383286476135254
    9. '		' → logprob: -12.508286476135254
    10. '                       ' → logprob: -14.133286476135254

Token 1545: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.168341264128685
    2. '           ' → logprob: -2.1683411598205566
    3. '               ' → logprob: -3.5433411598205566
    4. 'for' → logprob: -4.543341159820557
    5. '       ' → logprob: -7.793341159820557
    6. ' if' → logprob: -7.918341159820557
    7. '                   ' → logprob: -9.168341636657715
    8. '{
' → logprob: -9.793341636657715
    9. '   ' → logprob: -10.168341636657715
    10. ' for' → logprob: -11.543341636657715

Token 1546: ' compare' (ID: 12221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7203051447868347
    2. 'for' → logprob: -0.8453051447868347
    3. 'if' → logprob: -3.0953052043914795
    4. 'flag' → logprob: -4.3453049659729
    5. 'skip' → logprob: -4.9703049659729
    6. 'greater' → logprob: -5.2203049659729
    7. ' for' → logprob: -5.9703049659729
    8. 'ex' → logprob: -6.2203049659729
    9. '       ' → logprob: -6.3453049659729
    10. '   ' → logprob: -6.7203049659729

Token 1547: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47260406613349915
    2. 'new' → logprob: -1.5976040363311768
    3. 'True' → logprob: -2.7226040363311768
    4. 'for' → logprob: -3.0976040363311768
    5. 'any' → logprob: -3.7226040363311768
    6. ' True' → logprob: -3.9726040363311768
    7. 'False' → logprob: -5.097604274749756
    8. ' new' → logprob: -5.722604274749756
    9. '               ' → logprob: -6.097604274749756
    10. ' any' → logprob: -6.597604274749756

Token 1548: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.531315314830863e-06
    2. '_f' → logprob: -13.125003814697266
    3. 'for' → logprob: -13.875003814697266
    4. 'if' → logprob: -15.625003814697266
    5. 'factor' → logprob: -16.125003814697266
    6. '(new' → logprob: -16.625003814697266
    7. '_factor' → logprob: -16.750003814697266
    8. '(f' → logprob: -16.750003814697266
    9. 'new' → logprob: -17.625003814697266
    10. '
' → logprob: -18.000003814697266

Token 1549: ' and' (ID: 326)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.448751300573349
    2. '           ' → logprob: -1.5737513303756714
    3. 'for' → logprob: -2.823751211166382
    4. '>' → logprob: -3.073751211166382
    5. '==' → logprob: -4.323751449584961
    6. '=' → logprob: -5.073751449584961
    7. ' >' → logprob: -5.323751449584961
    8. '[' → logprob: -5.448751449584961
    9. '               ' → logprob: -5.823751449584961
    10. ',' → logprob: -5.948751449584961

Token 1550: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.00034893216798081994
    2. ' prod' → logprob: -8.000349044799805
    3. '           ' → logprob: -11.625349044799805
    4. '(prod' → logprob: -12.875349044799805
    5. 'tuple' → logprob: -14.250349044799805
    6. 'new' → logprob: -15.125349044799805
    7. '(' → logprob: -15.125349044799805
    8. '         ' → logprob: -16.250349044799805
    9. '```' → logprob: -16.500349044799805
    10. '.prod' → logprob: -16.750349044799805

Token 1551: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00034356804098933935
    2. 's' → logprob: -8.125343322753906
    3. '_f' → logprob: -10.250343322753906
    4. 'prod' → logprob: -11.750343322753906
    5. 'f' → logprob: -12.875343322753906
    6. 'factor' → logprob: -14.375343322753906
    7. 'rod' → logprob: -14.750343322753906
    8. '\' → logprob: -15.750343322753906
    9. '_' → logprob: -16.125343322753906
    10. '```' → logprob: -16.125343322753906

Token 1552: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.46839627623558044
    2. '_s' → logprob: -1.0933963060379028
    3. '_f' → logprob: -3.3433961868286133
    4. 'factor' → logprob: -6.343396186828613
    5. 's' → logprob: -6.843396186828613
    6. '```' → logprob: -8.218396186828613
    7. 'f' → logprob: -9.093396186828613
    8. '``' → logprob: -9.468396186828613
    9. 'prod' → logprob: -9.718396186828613
    10. '   ' → logprob: -10.218396186828613

Token 1553: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006091965362429619
    2. 'for' → logprob: -5.631092071533203
    3. '               ' → logprob: -6.506092071533203
    4. ' for' → logprob: -7.506092071533203
    5. '```' → logprob: -8.506092071533203
    6. '       ' → logprob: -9.006092071533203
    7. 'if' → logprob: -10.756092071533203
    8. '                   ' → logprob: -10.881092071533203
    9. '   ' → logprob: -11.131092071533203
    10. '>' → logprob: -11.131092071533203

Token 1554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035397247411310673
    2. '               ' → logprob: -6.128539562225342
    3. '```' → logprob: -7.128539562225342
    4. 'for' → logprob: -7.878539562225342
    5. '                   ' → logprob: -9.7535400390625
    6. '       ' → logprob: -10.0035400390625
    7. ' for' → logprob: -10.2535400390625
    8. 'if' → logprob: -10.5035400390625
    9. ' if' → logprob: -13.2535400390625
    10. '   ' → logprob: -13.5035400390625

Token 1555: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6632615327835083
    2. 'for' → logprob: -1.2882615327835083
    3. 'if' → logprob: -1.7882615327835083
    4. '               ' → logprob: -3.2882614135742188
    5. '                   ' → logprob: -6.663261413574219
    6. ' for' → logprob: -6.913261413574219
    7. '       ' → logprob: -7.163261413574219
    8. ' if' → logprob: -7.913261413574219
    9. '   ' → logprob: -8.538261413574219
    10. '```' → logprob: -8.663261413574219

Token 1556: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43231770396232605
    2. 'if' → logprob: -1.5573177337646484
    3. '           ' → logprob: -2.4323177337646484
    4. '               ' → logprob: -3.5573177337646484
    5. 'greater' → logprob: -4.557317733764648
    6. ' for' → logprob: -5.182317733764648
    7. '                   ' → logprob: -5.682317733764648
    8. ' if' → logprob: -7.182317733764648
    9. 'flag' → logprob: -7.182317733764648
    10. '   ' → logprob: -7.182317733764648

Token 1557: ' new' (ID: 620)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.030742568895220757
    2. 'new' → logprob: -3.905742645263672
    3. 'all' → logprob: -4.655742645263672
    4. ' any' → logprob: -8.030742645263672
    5. 'max' → logprob: -8.405742645263672
    6. '(any' → logprob: -10.655742645263672
    7. 'tuple' → logprob: -11.155742645263672
    8. 'less' → logprob: -11.530742645263672
    9. 'for' → logprob: -12.155742645263672
    10. '   ' → logprob: -12.155742645263672

Token 1558: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4974866644479334e-05
    2. '```' → logprob: -12.250015258789062
    3. '_f' → logprob: -12.375015258789062
    4. '``' → logprob: -14.000015258789062
    5. 'for' → logprob: -14.125015258789062
    6. ' ' → logprob: -14.375015258789062
    7. '       ' → logprob: -14.375015258789062
    8. 'w' → logprob: -14.750015258789062
    9. '   ' → logprob: -14.875015258789062
    10. '
' → logprob: -15.000015258789062

Token 1559: ' >' (ID: 1424)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15782049298286438
    2. '>' → logprob: -2.657820463180542
    3. '==' → logprob: -3.032820463180542
    4. ' ==' → logprob: -4.407820701599121
    5. ' >' → logprob: -4.907820701599121
    6. '<=' → logprob: -6.532820701599121
    7. '           ' → logprob: -6.782820701599121
    8. 'def' → logprob: -7.157820701599121
    9. '```' → logprob: -7.157820701599121
    10. '=' → logprob: -7.407820701599121

Token 1560: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.10559646785259247
    2. 'new' → logprob: -2.4805965423583984
    3. ' prod' → logprob: -4.230596542358398
    4. ' new' → logprob: -6.730596542358398
    5. '(prod' → logprob: -7.980596542358398
    6. '           ' → logprob: -9.730596542358398
    7. '_prod' → logprob: -10.105596542358398
    8. '=' → logprob: -10.105596542358398
    9. '   ' → logprob: -10.230596542358398
    10. '(' → logprob: -10.480596542358398

Token 1561: '_s' (ID: 1278)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.35457292199134827
    2. 'f' → logprob: -1.2295728921890259
    3. '_factor' → logprob: -5.479572772979736
    4. '_s' → logprob: -6.729572772979736
    5. 'factor' → logprob: -8.104573249816895
    6. '           ' → logprob: -8.229573249816895
    7. '```' → logprob: -9.604573249816895
    8. 's' → logprob: -10.979573249816895
    9. '       ' → logprob: -11.104573249816895
    10. '               ' → logprob: -11.354573249816895

Token 1562: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0001354824344161898
    2. 'factor' → logprob: -9.25013542175293
    3. '_f' → logprob: -11.00013542175293
    4. '           ' → logprob: -12.25013542175293
    5. 'Factor' → logprob: -12.25013542175293
    6. '```' → logprob: -12.37513542175293
    7. '   ' → logprob: -13.37513542175293
    8. '[i' → logprob: -13.50013542175293
    9. '``' → logprob: -13.75013542175293
    10. '_s' → logprob: -13.87513542175293

Token 1563: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1406555324792862
    2. '               ' → logprob: -2.765655517578125
    3. '           ' → logprob: -3.140655517578125
    4. ':' → logprob: -4.765655517578125
    5. ':
' → logprob: -5.015655517578125
    6. '>' → logprob: -6.265655517578125
    7. '[' → logprob: -6.265655517578125
    8. '```' → logprob: -6.640655517578125
    9. ' and' → logprob: -7.015655517578125
    10. 'and' → logprob: -7.390655517578125

Token 1564: ' skip' (ID: 16677)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14354431629180908
    2. 'for' → logprob: -2.8935441970825195
    3. 'continue' → logprob: -3.1435441970825195
    4. 'if' → logprob: -3.8935441970825195
    5. ' continue' → logprob: -5.1435441970825195
    6. ' for' → logprob: -5.3935441970825195
    7. '   ' → logprob: -6.2685441970825195
    8. ' if' → logprob: -6.8935441970825195
    9. '                   ' → logprob: -7.3935441970825195
    10. '           ' → logprob: -8.01854419708252

Token 1565: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09060387313365936
    2. '               ' → logprob: -2.465603828430176
    3. '```' → logprob: -7.090603828430176
    4. '                   ' → logprob: -7.840603828430176
    5. 'for' → logprob: -8.590603828430176
    6. ' for' → logprob: -9.340603828430176
    7. '       ' → logprob: -9.465603828430176
    8. '                       ' → logprob: -9.715603828430176
    9. 'if' → logprob: -11.590603828430176
    10. '   ' → logprob: -12.090603828430176

Token 1566: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10210706293582916
    2. '               ' → logprob: -2.352107048034668
    3. '```' → logprob: -6.352107048034668
    4. '       ' → logprob: -9.727107048034668
    5. 'for' → logprob: -10.227107048034668
    6. '                   ' → logprob: -10.852107048034668
    7. '{
' → logprob: -11.352107048034668
    8. ' for' → logprob: -11.727107048034668
    9. 'if' → logprob: -12.227107048034668
    10. '   ' → logprob: -12.602107048034668

Token 1567: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0495636910200119
    2. 'if' → logprob: -3.9245636463165283
    3. 'for' (adapté à ' for') → logprob: -4.049563884735107
    4. '       ' → logprob: -4.674563884735107
    5. '               ' → logprob: -6.674563884735107
    6. ' for' → logprob: -8.17456340789795
    7. ' if' → logprob: -8.67456340789795
    8. '   ' → logprob: -9.92456340789795
    9. '                   ' → logprob: -10.54956340789795
    10. '
' → logprob: -11.42456340789795

Token 1568: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.1689596148207784e-05
    2. ' i' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.125051498413086
    4. '0' → logprob: -17.500051498413086
    5. '	i' → logprob: -18.500051498413086
    6. ' ' → logprob: -19.500051498413086
    7. '_i' → logprob: -19.500051498413086
    8. '```' → logprob: -19.750051498413086
    9. '(i' → logprob: -20.375051498413086
    10. 'idx' → logprob: -20.750051498413086

Token 1569: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31326597929000854
    2. ' in' → logprob: -1.3132660388946533
    3. 'i' → logprob: -13.063265800476074
    4. '```' → logprob: -14.438265800476074
    5. '0' → logprob: -14.688265800476074
    6. '
' → logprob: -15.063265800476074
    7. ',' → logprob: -15.688265800476074
    8. '(' → logprob: -15.813265800476074
    9. 'range' → logprob: -16.06326675415039
    10. ' ' → logprob: -16.31326675415039

Token 1570: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020544764993246645
    2. ' range' → logprob: -8.500205039978027
    3. 'in' → logprob: -13.250205039978027
    4. '0' → logprob: -16.125205993652344
    5. '(range' → logprob: -17.125205993652344
    6. ' in' → logprob: -17.250205993652344
    7. '[' → logprob: -17.750205993652344
    8. '(' → logprob: -18.375205993652344
    9. 'i' → logprob: -18.875205993652344
    10. '   ' → logprob: -19.500205993652344

Token 1571: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0010209017200395465
    2. '(' → logprob: -7.001020908355713
    3. 'range' → logprob: -9.126020431518555
    4. '0' → logprob: -14.751020431518555
    5. '```' → logprob: -16.001020431518555
    6. 'i' → logprob: -17.876020431518555
    7. ' range' → logprob: -17.876020431518555
    8. '(range' → logprob: -18.376020431518555
    9. 'in' → logprob: -18.626020431518555
    10. '(i' → logprob: -18.751020431518555

Token 1572: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2233183042553719e-05
    2. '0' → logprob: -11.750012397766113
    3. 'range' → logprob: -12.625012397766113
    4. '(' → logprob: -15.000012397766113
    5. 'i' → logprob: -15.375012397766113
    6. '   ' → logprob: -15.625012397766113
    7. ' ' → logprob: -15.875012397766113
    8. 'n' → logprob: -16.750011444091797
    9. '```' → logprob: -16.875011444091797
    10. '
' → logprob: -17.250011444091797

Token 1573: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5975953936576843
    2. '):
' → logprob: -0.8475953936576843
    3. '):' → logprob: -5.09759521484375
    4. ':' → logprob: -5.34759521484375
    5. ' +' → logprob: -5.97259521484375
    6. '```' → logprob: -5.97259521484375
    7. ',' → logprob: -6.59759521484375
    8. '<|end|>' → logprob: -6.97259521484375
    9. ':
' → logprob: -7.09759521484375
    10. '   ' → logprob: -7.97259521484375

Token 1574: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004085083492100239
    2. '           ' → logprob: -8.500408172607422
    3. '       ' → logprob: -9.750408172607422
    4. ' if' → logprob: -10.375408172607422
    5. 'if' → logprob: -10.625408172607422
    6. '		       ' → logprob: -10.625408172607422
    7. '<|end|>' → logprob: -10.750408172607422
    8. '	           ' → logprob: -11.125408172607422
    9. '	       ' → logprob: -11.750408172607422
    10. '                   ' → logprob: -11.875408172607422

Token 1575: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.674913227558136
    2. '                   ' → logprob: -1.4249131679534912
    3. '               ' → logprob: -1.4249131679534912
    4. '           ' → logprob: -5.29991340637207
    5. ' if' → logprob: -5.54991340637207
    6. '                       ' → logprob: -7.92491340637207
    7. '       ' → logprob: -8.67491340637207
    8. '```' → logprob: -9.04991340637207
    9. '   ' → logprob: -9.29991340637207
    10. '              ' → logprob: -10.92491340637207

Token 1576: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.688212614681106e-05
    2. ' new' → logprob: -11.000017166137695
    3. '               ' → logprob: -16.750017166137695
    4. '           ' → logprob: -17.875017166137695
    5. '                   ' → logprob: -19.875017166137695
    6. '   ' → logprob: -20.375017166137695
    7. '_new' → logprob: -20.375017166137695
    8. '(new' → logprob: -20.500017166137695
    9. '	new' → logprob: -21.125017166137695
    10. '$new' → logprob: -21.750017166137695

Token 1577: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0005780545179732144
    2. 'new' → logprob: -7.500577926635742
    3. 'w' → logprob: -11.750577926635742
    4. '```' → logprob: -12.375577926635742
    5. '(new' → logprob: -12.500577926635742
    6. ' new' → logprob: -12.625577926635742
    7. '_f' → logprob: -13.000577926635742
    8. '``' → logprob: -13.375577926635742
    9. '_new' → logprob: -14.125577926635742
    10. '
' → logprob: -14.500577926635742

Token 1578: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0087516784551553e-05
    2. '               ' → logprob: -12.50001049041748
    3. '[' → logprob: -12.87501049041748
    4. '                   ' → logprob: -13.37501049041748
    5. '```' → logprob: -13.37501049041748
    6. '(i' → logprob: -15.87501049041748
    7. 'i' → logprob: -16.125009536743164
    8. '[I' → logprob: -16.625009536743164
    9. '           ' → logprob: -16.875009536743164
    10. ' [' → logprob: -16.875009536743164

Token 1579: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.42881670594215393
    2. ']' → logprob: -2.178816795349121
    3. '[i' → logprob: -2.428816795349121
    4. ' >' → logprob: -2.553816795349121
    5. ']>' → logprob: -2.678816795349121
    6. '                   ' → logprob: -7.928816795349121
    7. '               ' → logprob: -8.303816795349121
    8. '[' → logprob: -8.928816795349121
    9. '```' → logprob: -9.928816795349121
    10. '(i' → logprob: -10.803816795349121

Token 1580: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004670780152082443
    2. ' >' → logprob: -5.3796706199646
    3. '[i' → logprob: -10.504671096801758
    4. ']>' → logprob: -11.629671096801758
    5. '[' → logprob: -12.129671096801758
    6. ']' → logprob: -12.754671096801758
    7. '>
' → logprob: -12.754671096801758
    8. '```' → logprob: -13.629671096801758
    9. '>[' → logprob: -15.129671096801758
    10. '           ' → logprob: -15.754671096801758

Token 1581: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -4.692145012086257e-05
    2. ' prod' → logprob: -10.000046730041504
    3. 'i' → logprob: -14.125046730041504
    4. '(prod' → logprob: -14.625046730041504
    5. '   ' → logprob: -16.37504768371582
    6. '_prod' → logprob: -17.12504768371582
    7. 'proc' → logprob: -17.25004768371582
    8. '           ' → logprob: -17.37504768371582
    9. '.prod' → logprob: -17.75004768371582
    10. '               ' → logprob: -19.25004768371582

Token 1582: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.031665705144405365
    2. 's' → logprob: -3.781665802001953
    3. 'i' → logprob: -5.406665802001953
    4. '_factor' → logprob: -6.531665802001953
    5. 'prod' → logprob: -7.156665802001953
    6. '_f' → logprob: -7.281665802001953
    7. 'factor' → logprob: -7.406665802001953
    8. '_i' → logprob: -8.406665802001953
    9. 'f' → logprob: -10.156665802001953
    10. '[i' → logprob: -10.281665802001953

Token 1583: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00023917861108202487
    2. 'factor' → logprob: -8.500239372253418
    3. 's' → logprob: -10.875239372253418
    4. 'i' → logprob: -11.375239372253418
    5. '[i' → logprob: -13.000239372253418
    6. 'prod' → logprob: -14.125239372253418
    7. '_FACTOR' → logprob: -14.625239372253418
    8. 'Factor' → logprob: -14.750239372253418
    9. '_s' → logprob: -15.250239372253418
    10. '_i' → logprob: -15.375239372253418

Token 1584: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.127333340875339e-06
    2. '               ' → logprob: -13.750003814697266
    3. '```' → logprob: -14.125003814697266
    4. '                   ' → logprob: -14.625003814697266
    5. '           ' → logprob: -14.875003814697266
    6. '   ' → logprob: -14.875003814697266
    7. '[
' → logprob: -15.000003814697266
    8. '[' → logprob: -15.375003814697266
    9. ']' → logprob: -15.500003814697266
    10. '       ' → logprob: -16.000003814697266

Token 1585: ']:
' (ID: 22152)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1671309471130371
    2. ':
' → logprob: -1.917130947113037
    3. ':' → logprob: -5.292130947113037
    4. '               ' → logprob: -7.167130947113037
    5. '):
' → logprob: -8.042131423950195
    6. ':return' → logprob: -8.667131423950195
    7. '           ' → logprob: -9.167131423950195
    8. '                       ' → logprob: -9.292131423950195
    9. '```' → logprob: -10.042131423950195
    10. '<|end|>' → logprob: -10.167131423950195

Token 1586: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00021927160560153425
    2. '                       ' → logprob: -9.375219345092773
    3. 'break' → logprob: -10.250219345092773
    4. '```' → logprob: -10.250219345092773
    5. '               ' → logprob: -10.500219345092773
    6. ':
' → logprob: -11.875219345092773
    7. '                  ' → logprob: -12.125219345092773
    8. ':' → logprob: -12.375219345092773
    9. '                           ' → logprob: -12.375219345092773
    10. '           ' → logprob: -12.375219345092773

Token 1587: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3139191269874573
    2. 'break' (adapté à ' break') → logprob: -1.3139190673828125
    3. '                       ' → logprob: -8.313919067382812
    4. 'return' → logprob: -8.688919067382812
    5. '```' → logprob: -9.063919067382812
    6. ' break' → logprob: -9.313919067382812
    7. '               ' → logprob: -11.313919067382812
    8. '	break' → logprob: -11.938919067382812
    9. '				' → logprob: -12.188919067382812
    10. '   ' → logprob: -12.563919067382812

Token 1588: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07782810926437378
    2. '           ' → logprob: -2.7028281688690186
    3. 'continue' → logprob: -6.0778279304504395
    4. '```' → logprob: -6.0778279304504395
    5. '                   ' → logprob: -6.4528279304504395
    6. 'else' → logprob: -7.5778279304504395
    7. '<|end|>' → logprob: -7.7028279304504395
    8. ' continue' → logprob: -8.077828407287598
    9. '                       ' → logprob: -9.702828407287598
    10. '       ' → logprob: -9.702828407287598

Token 1589: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02919398806989193
    2. '           ' → logprob: -3.779193878173828
    3. '```' → logprob: -5.279193878173828
    4. '                   ' → logprob: -8.279193878173828
    5. 'continue' → logprob: -8.279193878173828
    6. '       ' → logprob: -9.279193878173828
    7. 'else' → logprob: -9.404193878173828
    8. '              ' → logprob: -10.404193878173828
    9. ' continue' → logprob: -10.529193878173828
    10. 'if' → logprob: -10.779193878173828

Token 1590: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005858282092958689
    2. '           ' → logprob: -5.505858421325684
    3. 'if' (adapté à ' if') → logprob: -6.505858421325684
    4. '```' → logprob: -9.130858421325684
    5. 'continue' → logprob: -10.130858421325684
    6. '              ' → logprob: -10.505858421325684
    7. 'else' → logprob: -10.505858421325684
    8. ' if' → logprob: -10.630858421325684
    9. '       ' → logprob: -11.005858421325684
    10. '                   ' → logprob: -11.880858421325684

Token 1591: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.003177952254191041
    2. ' new' → logprob: -5.753178119659424
    3. 'New' → logprob: -16.503177642822266
    4. '```' → logprob: -16.878177642822266
    5. '(new' → logprob: -17.128177642822266
    6. '_new' → logprob: -17.753177642822266
    7. '$new' → logprob: -17.753177642822266
    8. '	new' → logprob: -18.253177642822266
    9. '[new' → logprob: -18.628177642822266
    10. 'n' → logprob: -19.003177642822266

Token 1592: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0001217813478433527
    2. 'new' → logprob: -9.1251220703125
    3. 'w' → logprob: -11.7501220703125
    4. '(new' → logprob: -12.7501220703125
    5. '_f' → logprob: -14.7501220703125
    6. '```' → logprob: -15.1251220703125
    7. ' new' → logprob: -15.7501220703125
    8. '
' → logprob: -15.8751220703125
    9. '``' → logprob: -16.2501220703125
    10. 'ф' → logprob: -16.3751220703125

Token 1593: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.895480277715251e-06
    2. '[' → logprob: -11.875008583068848
    3. '[
' → logprob: -14.250008583068848
    4. 'i' → logprob: -14.625008583068848
    5. '```' → logprob: -14.750008583068848
    6. '(i' → logprob: -15.875008583068848
    7. 's' → logprob: -16.625009536743164
    8. '<|end|>' → logprob: -17.625009536743164
    9. '
' → logprob: -18.625009536743164
    10. '[I' → logprob: -19.000009536743164

Token 1594: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.3464544432936236e-05
    2. ']' → logprob: -10.375043869018555
    3. 'i' → logprob: -12.000043869018555
    4. '[' → logprob: -13.000043869018555
    5. '][' → logprob: -13.500043869018555
    6. ']<' → logprob: -14.375043869018555
    7. '[
' → logprob: -14.750043869018555
    8. '<i' → logprob: -15.500043869018555
    9. '(i' → logprob: -15.875043869018555
    10. '[j' → logprob: -15.875043869018555

Token 1595: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9497007131576538
    2. '[i' → logprob: -0.9497007131576538
    3. ' <' → logprob: -1.5747007131576538
    4. '<i' → logprob: -4.199700832366943
    5. '[' → logprob: -6.074700832366943
    6. '[d' → logprob: -7.699700832366943
    7. '[new' → logprob: -7.699700832366943
    8. '<int' → logprob: -8.574700355529785
    9. '[
' → logprob: -8.824700355529785
    10. '<n' → logprob: -9.199700355529785

Token 1596: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.011054190807044506
    2. ' prod' → logprob: -4.511054039001465
    3. '           ' → logprob: -13.261054039001465
    4. '(prod' → logprob: -13.386054039001465
    5. '
' → logprob: -13.761054039001465
    6. '```' → logprob: -14.886054039001465
    7. '   ' → logprob: -15.136054039001465
    8. 'new' → logprob: -15.761054039001465
    9. '       ' → logprob: -15.761054039001465
    10. '.prod' → logprob: -15.761054039001465

Token 1597: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.05413520336151123
    2. '_factor' → logprob: -3.054135322570801
    3. '_f' → logprob: -5.554135322570801
    4. 'factor' → logprob: -6.929135322570801
    5. 's' → logprob: -7.429135322570801
    6. 'prod' → logprob: -9.6791353225708
    7. 'f' → logprob: -10.9291353225708
    8. '_prod' → logprob: -13.0541353225708
    9. '(prod' → logprob: -13.5541353225708
    10. 'S' → logprob: -14.5541353225708

Token 1598: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.005035694222897291
    2. 'prod' → logprob: -5.630035877227783
    3. 'factor' → logprob: -6.630035877227783
    4. '_prod' → logprob: -9.630035400390625
    5. '_f' → logprob: -11.505035400390625
    6. '_s' → logprob: -11.755035400390625
    7. 's' → logprob: -11.880035400390625
    8. '(prod' → logprob: -12.380035400390625
    9. 'actor' → logprob: -12.880035400390625
    10. 'Factor' → logprob: -13.005035400390625

Token 1599: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2233183042553719e-05
    2. 'i' → logprob: -12.250012397766113
    3. '[' → logprob: -12.625012397766113
    4. '```' → logprob: -13.500012397766113
    5. '                   ' → logprob: -13.750012397766113
    6. '(i' → logprob: -14.500012397766113
    7. '               ' → logprob: -14.625012397766113
    8. '           ' → logprob: -15.125012397766113
    9. 'factor' → logprob: -16.250011444091797
    10. '       ' → logprob: -16.875011444091797

Token 1600: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8426422476768494
    2. ']:
' → logprob: -1.2176423072814941
    3. '                   ' → logprob: -1.8426423072814941
    4. ':' → logprob: -2.717642307281494
    5. '):
' → logprob: -3.217642307281494
    6. ']:' → logprob: -5.467642307281494
    7. '               ' → logprob: -6.717642307281494
    8. '```' → logprob: -7.342642307281494
    9. '           ' → logprob: -7.467642307281494
    10. '):' → logprob: -7.592642307281494

Token 1601: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0092528210952878
    2. '```' → logprob: -4.884253025054932
    3. '               ' → logprob: -7.634253025054932
    4. '                       ' → logprob: -7.759253025054932
    5. '``' → logprob: -8.884252548217773
    6. '                  ' → logprob: -9.009252548217773
    7. '                           ' → logprob: -9.134252548217773
    8. '   ' → logprob: -9.634252548217773
    9. '                                           ' → logprob: -9.884252548217773
    10. '           ' → logprob: -10.134252548217773

Token 1602: ' res' (ID: 694)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03812973573803902
    2. 'res' (adapté à ' res') → logprob: -3.6631298065185547
    3. 'total' → logprob: -5.038129806518555
    4. ' res' → logprob: -6.038129806518555
    5. '                       ' → logprob: -6.913129806518555
    6. ' total' → logprob: -7.163129806518555
    7. '               ' → logprob: -7.788129806518555
    8. '```' → logprob: -8.538129806518555
    9. '           ' → logprob: -9.038129806518555
    10. '                  ' → logprob: -9.288129806518555

Token 1603: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005184662528336048
    2. '+=' → logprob: -5.505184650421143
    3. '```' → logprob: -6.880184650421143
    4. '+' → logprob: -10.3801851272583
    5. ' +' → logprob: -11.6301851272583
    6. '          ' → logprob: -11.8801851272583
    7. '``' → logprob: -12.0051851272583
    8. '                   ' → logprob: -12.6301851272583
    9. ']+=' → logprob: -12.7551851272583
    10. '                           ' → logprob: -13.2551851272583

Token 1604: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2014138251543045
    2. 'dfs' → logprob: -1.701413869857788
    3. '1' → logprob: -15.326414108276367
    4. ' ' → logprob: -16.326414108276367
    5. '```' → logprob: -16.826414108276367
    6. ' DFS' → logprob: -16.951414108276367
    7. 'DFS' → logprob: -17.076414108276367
    8. 'df' → logprob: -17.826414108276367
    9. '   ' → logprob: -17.951414108276367
    10. ' dp' → logprob: -18.326414108276367

Token 1605: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0015073629328981042
    2. '_eq' → logprob: -6.50150728225708
    3. 'sum' → logprob: -12.626507759094238
    4. 'eq' → logprob: -14.626507759094238
    5. '(' → logprob: -15.876507759094238
    6. '_equ' → logprob: -15.876507759094238
    7. '(pos' → logprob: -16.001506805419922
    8. '_pos' → logprob: -16.376506805419922
    9. '```' → logprob: -16.376506805419922
    10. '_seq' → logprob: -16.501506805419922

Token 1606: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -3.531315314830863e-06
    2. '_equ' → logprob: -13.375003814697266
    3. 'eq' → logprob: -13.625003814697266
    4. '_sum' → logprob: -14.875003814697266
    5. '_pos' → logprob: -15.250003814697266
    6. '```' → logprob: -16.125003814697266
    7. '_equals' → logprob: -17.000003814697266
    8. '__' → logprob: -18.250003814697266
    9. '_less' → logprob: -18.500003814697266
    10. '_prod' → logprob: -18.625003814697266

Token 1607: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.003766113193705678
    2. 'prod' → logprob: -5.628766059875488
    3. '_less' → logprob: -9.378766059875488
    4. '_sum' → logprob: -9.628766059875488
    5. '_pro' → logprob: -12.128766059875488
    6. '_pos' → logprob: -12.253766059875488
    7. '_prob' → logprob: -13.503766059875488
    8. 'Prod' → logprob: -14.128766059875488
    9. '(prod' → logprob: -14.253766059875488
    10. '_factor' → logprob: -15.128766059875488

Token 1608: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -1.1279553291387856e-05
    2. 'less' → logprob: -11.500011444091797
    3. '_sum' → logprob: -14.875011444091797
    4. '```' → logprob: -15.125011444091797
    5. '_le' → logprob: -15.500011444091797
    6. 'Less' → logprob: -16.625011444091797
    7. 'ess' → logprob: -16.875011444091797
    8. '_' → logprob: -17.750011444091797
    9. ' less' → logprob: -17.750011444091797
    10. '_else' → logprob: -18.375011444091797

Token 1609: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.438573680294212e-06
    2. '```' → logprob: -12.250005722045898
    3. 'sum' → logprob: -15.000005722045898
    4. '_SUM' → logprob: -16.6250057220459
    5. '_pos' → logprob: -17.3750057220459
    6. '`' → logprob: -17.8750057220459
    7. 'Sum' → logprob: -18.2500057220459
    8. '\' → logprob: -18.3750057220459
    9. '           ' → logprob: -18.3750057220459
    10. '_s' → logprob: -18.5000057220459

Token 1610: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -4.0484450437361374e-05
    2. 'pos' → logprob: -10.250040054321289
    3. '[pos' → logprob: -13.250040054321289
    4. '(' → logprob: -13.500040054321289
    5. '```' → logprob: -13.625040054321289
    6. ' pos' → logprob: -15.250040054321289
    7. '(position' → logprob: -15.625040054321289
    8. ',pos' → logprob: -15.750040054321289
    9. '(None' → logprob: -16.87504005432129
    10. '	pos' → logprob: -17.00004005432129

Token 1611: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.4121114822482923e-06
    2. ' +' → logprob: -12.750003814697266
    3. '()+' → logprob: -15.750003814697266
    4. '```' → logprob: -16.000003814697266
    5. '[' → logprob: -17.000003814697266
    6. 'Next' → logprob: -17.250003814697266
    7. '+
' → logprob: -17.500003814697266
    8. '...' → logprob: -17.875003814697266
    9. '<|end|>' → logprob: -17.875003814697266
    10. '<|end|>' → logprob: -18.125003814697266

Token 1612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011285445652902126
    2. '+' → logprob: -7.501128673553467
    3. 'pos' → logprob: -7.626128673553467
    4. '(pos' → logprob: -10.126128196716309
    5. 'i' → logprob: -11.376128196716309
    6. '(i' → logprob: -11.626128196716309
    7. 'new' → logprob: -12.251128196716309
    8. ' ' → logprob: -12.251128196716309
    9. '(' → logprob: -12.501128196716309
    10. '```' → logprob: -12.626128196716309

Token 1613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23396022617816925
    2. '(None' → logprob: -1.9839602708816528
    3. '(' → logprob: -3.3589601516723633
    4. '(sum' → logprob: -3.4839601516723633
    5. '(False' → logprob: -6.233960151672363
    6. '(s' → logprob: -6.733960151672363
    7. '```' → logprob: -7.233960151672363
    8. ',sum' → logprob: -7.858960151672363
    9. '(True' → logprob: -8.358960151672363
    10. 'None' → logprob: -8.483960151672363

Token 1614: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0007108822464942932
    2. ' sum' → logprob: -7.250710964202881
    3. '                ' → logprob: -15.750710487365723
    4. '(sum' → logprob: -15.875710487365723
    5. '    ' → logprob: -16.00071144104004
    6. '                    ' → logprob: -16.25071144104004
    7. '            ' → logprob: -16.25071144104004
    8. '                   ' → logprob: -16.37571144104004
    9. '   ' → logprob: -17.00071144104004
    10. '               ' → logprob: -17.12571144104004

Token 1615: 'd' (ID: 67)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22395777702331543
    2. 'd' → logprob: -2.0989577770233154
    3. '-' → logprob: -3.9739577770233154
    4. '_s' → logprob: -4.3489580154418945
    5. 'f' → logprob: -4.5989580154418945
    6. '1' → logprob: -5.2239580154418945
    7. ',' → logprob: -5.3489580154418945
    8. ' ' → logprob: -5.8489580154418945
    9. '=' → logprob: -5.9739580154418945
    10. 's' → logprob: -6.0989580154418945

Token 1616: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0437869094312191
    2. '-' → logprob: -3.2937870025634766
    3. '-d' → logprob: -5.168787002563477
    4. '   ' → logprob: -10.918787002563477
    5. '    ' → logprob: -12.543787002563477
    6. ' ' → logprob: -12.793787002563477
    7. ',' → logprob: -13.043787002563477
    8. '```' → logprob: -13.293787002563477
    9. '-digit' → logprob: -13.543787002563477
    10. '           ' → logprob: -14.043787002563477

Token 1617: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -0.0007204149151220918
    2. ' dig' → logprob: -7.250720500946045
    3. 'digit' → logprob: -12.000720024108887
    4. 'digits' → logprob: -14.000720024108887
    5. '```' → logprob: -14.125720024108887
    6. '1' → logprob: -14.625720024108887
    7. 'd' → logprob: -14.750720024108887
    8. '   ' → logprob: -15.000720024108887
    9. ' ' → logprob: -15.125720024108887
    10. '
' → logprob: -16.000720977783203

Token 1618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040468014776706696
    2. ',new' → logprob: -3.2904679775238037
    3. 'new' → logprob: -6.040468215942383
    4. ' new' → logprob: -11.040468215942383
    5. '```' → logprob: -11.415468215942383
    6. ' ,' → logprob: -11.540468215942383
    7. '[new' → logprob: -13.165468215942383
    8. '(new' → logprob: -13.915468215942383
    9. '           ' → logprob: -14.540468215942383
    10. '`,' → logprob: -14.790468215942383

Token 1619: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0037629054859280586
    2. ' new' → logprob: -6.128762722015381
    3. 'True' → logprob: -6.753762722015381
    4. '(' → logprob: -8.253763198852539
    5. '(True' → logprob: -9.628763198852539
    6. '(new' → logprob: -10.378763198852539
    7. 'None' → logprob: -10.628763198852539
    8. ' (' → logprob: -11.628763198852539
    9. ' True' → logprob: -11.628763198852539
    10. 'pro' → logprob: -12.128763198852539

Token 1620: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.051112957298755646
    2. '_f' → logprob: -3.1761128902435303
    3. 'Factors' → logprob: -5.301113128662109
    4. '(pro' → logprob: -7.426113128662109
    5. '_factor' → logprob: -7.426113128662109
    6. '(f' → logprob: -7.801113128662109
    7. 'add' → logprob: -7.926113128662109
    8. '(' → logprob: -7.926113128662109
    9. '(new' → logprob: -8.30111312866211
    10. 'pro' → logprob: -9.30111312866211

Token 1621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019829542725346982
    2. 'True' → logprob: -8.875198364257812
    3. '=True' → logprob: -11.000198364257812
    4. '(True' → logprob: -11.000198364257812
    5. ' ,' → logprob: -11.875198364257812
    6. '                   ' → logprob: -12.750198364257812
    7. ',true' → logprob: -12.750198364257812
    8. '           ' → logprob: -13.000198364257812
    9. ',
' → logprob: -13.375198364257812
    10. '```' → logprob: -13.500198364257812

Token 1622: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.318681188422488e-05
    2. ' True' → logprob: -11.25001335144043
    3. '(True' → logprob: -16.25001335144043
    4. '                   ' → logprob: -17.25001335144043
    5. '                       ' → logprob: -19.50001335144043
    6. '=True' → logprob: -19.62501335144043
    7. '               ' → logprob: -20.00001335144043
    8. '           ' → logprob: -21.37501335144043
    9. '                           ' → logprob: -21.50001335144043
    10. '   ' → logprob: -22.50001335144043

Token 1623: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014299227041192353
    2. '               ' → logprob: -9.375143051147461
    3. '                       ' → logprob: -10.875143051147461
    4. '```' → logprob: -11.125143051147461
    5. '           ' → logprob: -11.500143051147461
    6. '
' → logprob: -12.750143051147461
    7. '				' → logprob: -12.875143051147461
    8. '       ' → logprob: -13.250143051147461
    9. ')' → logprob: -13.625143051147461
    10. '                    
' → logprob: -13.750143051147461

Token 1624: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.01986662857234478
    2. '                   ' → logprob: -4.019866466522217
    3. '``' → logprob: -7.019866466522217
    4. '               ' → logprob: -7.644866466522217
    5. '                       ' → logprob: -8.519866943359375
    6. '           ' → logprob: -9.769866943359375
    7. '                           ' → logprob: -9.894866943359375
    8. '                               ' → logprob: -11.394866943359375
    9. '       ' → logprob: -12.019866943359375
    10. '                  ' → logprob: -12.644866943359375

Token 1625: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002501343551557511
    2. 'break' (adapté à ' break') → logprob: -8.875249862670898
    3. '```' → logprob: -9.750249862670898
    4. '               ' → logprob: -10.875249862670898
    5. '           ' → logprob: -11.125249862670898
    6. '                       ' → logprob: -11.500249862670898
    7. '				' → logprob: -12.250249862670898
    8. '                  ' → logprob: -14.125249862670898
    9. '``' → logprob: -14.500249862670898
    10. '                           ' → logprob: -14.625249862670898

Token 1626: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.06929685920476913
    2. '               ' → logprob: -2.8192968368530273
    3. '``' → logprob: -5.569296836853027
    4. '           ' → logprob: -5.819296836853027
    5. '                   ' → logprob: -8.569296836853027
    6. '              ' → logprob: -9.444296836853027
    7. '                
' → logprob: -10.194296836853027
    8. '       ' → logprob: -10.319296836853027
    9. '                               ' → logprob: -10.694296836853027
    10. '                       ' → logprob: -10.944296836853027

Token 1627: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.033497344702482224
    2. '           ' → logprob: -3.6584973335266113
    3. '               ' → logprob: -5.783497333526611
    4. '       ' → logprob: -6.283497333526611
    5. '``' → logprob: -6.408497333526611
    6. '                   ' → logprob: -8.78349781036377
    7. 'else' → logprob: -9.15849781036377
    8. '          ' → logprob: -9.78349781036377
    9. '                       ' → logprob: -10.03349781036377
    10. '                               ' → logprob: -10.40849781036377

Token 1628: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04196786880493164
    2. '```' → logprob: -3.4169678688049316
    3. 'else' (adapté à ' else') → logprob: -5.291967868804932
    4. '       ' → logprob: -5.791967868804932
    5. '               ' → logprob: -9.291967391967773
    6. '``' → logprob: -10.291967391967773
    7. ' else' → logprob: -11.166967391967773
    8. '​' → logprob: -11.291967391967773
    9. '                       ' → logprob: -11.666967391967773
    10. '   ' → logprob: -11.791967391967773

Token 1629: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6669235825538635
    2. '               ' → logprob: -1.1669235229492188
    3. ':' → logprob: -2.1669235229492188
    4. ':
' → logprob: -3.7919235229492188
    5. '       ' → logprob: -4.916923522949219
    6. '                       ' → logprob: -5.291923522949219
    7. '[' → logprob: -5.541923522949219
    8. '                   ' → logprob: -5.666923522949219
    9. '{' → logprob: -5.666923522949219
    10. '<|end|>' → logprob: -6.166923522949219

Token 1630: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1333537995815277
    2. '               ' → logprob: -2.5083537101745605
    3. '```' → logprob: -3.5083537101745605
    4. '       ' → logprob: -5.6333537101745605
    5. '                       ' → logprob: -6.0083537101745605
    6. '``' → logprob: -6.1333537101745605
    7. '                   ' → logprob: -6.2583537101745605
    8. '                                           ' → logprob: -7.8833537101745605
    9. '          ' → logprob: -7.8833537101745605
    10. '                           ' → logprob: -8.008354187011719

Token 1631: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10896935313940048
    2. 'res' → logprob: -2.7339694499969482
    3. '```' → logprob: -3.6089694499969482
    4. '                   ' → logprob: -5.233969211578369
    5. '                       ' → logprob: -5.983969211578369
    6. ' res' → logprob: -7.108969211578369
    7. '                           ' → logprob: -7.608969211578369
    8. '           ' → logprob: -7.733969211578369
    9. '                ' → logprob: -7.858969211578369
    10. '              ' → logprob: -8.358969688415527

Token 1632: ' equal' (ID: 12629)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0013433275744318962
    2. '               ' → logprob: -6.751343250274658
    3. '                   ' → logprob: -9.501343727111816
    4. '```' → logprob: -10.001343727111816
    5. ' res' → logprob: -11.626343727111816
    6. '                       ' → logprob: -11.876343727111816
    7. '                           ' → logprob: -11.876343727111816
    8. '           ' → logprob: -12.126343727111816
    9. '``' → logprob: -12.251343727111816
    10. '                ' → logprob: -12.376343727111816

Token 1633: ' so' (ID: 813)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8849310278892517
    2. '                   ' → logprob: -1.2599310874938965
    3. '                ' → logprob: -2.0099310874938965
    4. ':
' → logprob: -2.1349310874938965
    5. ':' → logprob: -4.3849310874938965
    6. '                  ' → logprob: -4.5099310874938965
    7. '              ' → logprob: -5.1349310874938965
    8. '                 ' → logprob: -5.2599310874938965
    9. '_flag' → logprob: -5.3849310874938965
    10. '                    ' → logprob: -5.8849310874938965

Token 1634: ' far' (ID: 4150)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6382250785827637
    2. ':
' → logprob: -1.5132250785827637
    3. ':' → logprob: -2.3882250785827637
    4. '               ' → logprob: -2.5132250785827637
    5. '                  ' → logprob: -4.013225078582764
    6. '=' → logprob: -4.263225078582764
    7. 'flag' → logprob: -4.388225078582764
    8. '==' → logprob: -4.763225078582764
    9. 'res' → logprob: -5.013225078582764
    10. '                 ' → logprob: -5.638225078582764

Token 1635: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4751059412956238
    2. '                   ' → logprob: -0.9751059412956238
    3. '           ' → logprob: -8.100106239318848
    4. '                       ' → logprob: -8.475106239318848
    5. 'res' → logprob: -9.100106239318848
    6. ':' → logprob: -9.100106239318848
    7. '```' → logprob: -9.225106239318848
    8. ':
' → logprob: -9.350106239318848
    9. '                           ' → logprob: -10.725106239318848
    10. '                ' → logprob: -11.225106239318848

Token 1636: ' less' (ID: 3760)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.09016215801239014
    2. '               ' → logprob: -2.5901622772216797
    3. ' res' → logprob: -5.09016227722168
    4. '```' → logprob: -5.96516227722168
    5. '                   ' → logprob: -6.21516227722168
    6. '           ' → logprob: -8.59016227722168
    7. '                ' → logprob: -8.96516227722168
    8. '                       ' → logprob: -9.59016227722168
    9. '              ' → logprob: -10.71516227722168
    10. '                           ' → logprob: -11.09016227722168

Token 1637: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -3.7146746763028204e-05
    2. 'flag' → logprob: -10.37503719329834
    3. '```' → logprob: -13.00003719329834
    4. '                   ' → logprob: -13.75003719329834
    5. '_FLAG' → logprob: -14.00003719329834
    6. 'Flag' → logprob: -14.25003719329834
    7. '               ' → logprob: -14.75003719329834
    8. '``' → logprob: -15.25003719329834
    9. '_flags' → logprob: -15.50003719329834
    10. '                  ' → logprob: -16.875036239624023

Token 1638: ' stays' (ID: 35239)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7390047907829285
    2. '==' → logprob: -1.4890048503875732
    3. '=False' → logprob: -2.2390048503875732
    4. '```' → logprob: -3.3640048503875732
    5. ' remains' → logprob: -3.4890048503875732
    6. '                           ' → logprob: -3.7390048503875732
    7. '                   ' → logprob: -3.9890048503875732
    8. ' =' → logprob: -4.364004611968994
    9. '+=' → logprob: -4.614004611968994
    10. '=True' → logprob: -4.739004611968994

Token 1639: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00042983482126146555
    2. ' False' → logprob: -7.875429630279541
    3. '=False' → logprob: -10.5004301071167
    4. '(False' → logprob: -11.0004301071167
    5. '                   ' → logprob: -13.0004301071167
    6. '                           ' → logprob: -13.3754301071167
    7. 'res' → logprob: -14.2504301071167
    8. '                       ' → logprob: -15.1254301071167
    9. '_false' → logprob: -15.2504301071167
    10. '               ' → logprob: -15.8754301071167

Token 1640: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06878941506147385
    2. '               ' → logprob: -2.818789482116699
    3. '                       ' → logprob: -5.943789482116699
    4. '```' → logprob: -6.068789482116699
    5. '                  ' → logprob: -7.943789482116699
    6. '                           ' → logprob: -7.943789482116699
    7. 'res' → logprob: -8.4437894821167
    8. '                ' → logprob: -8.8187894821167
    9. ' res' → logprob: -8.8187894821167
    10. ',' → logprob: -9.3187894821167

Token 1641: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31737571954727173
    2. '                   ' → logprob: -1.692375659942627
    3. '```' → logprob: -2.817375659942627
    4. '                       ' → logprob: -4.567375659942627
    5. '           ' → logprob: -5.567375659942627
    6. '              ' → logprob: -6.317375659942627
    7. '                  ' → logprob: -6.317375659942627
    8. '   ' → logprob: -6.442375659942627
    9. '                ' → logprob: -6.692375659942627
    10. ':
' → logprob: -6.692375659942627

Token 1642: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.010984626598656178
    2. '                   ' → logprob: -4.885984420776367
    3. '               ' → logprob: -6.135984420776367
    4. ' res' → logprob: -7.260984420776367
    5. '                       ' → logprob: -7.885984420776367
    6. '```' → logprob: -9.635984420776367
    7. 'return' → logprob: -11.135984420776367
    8. '                  ' → logprob: -11.385984420776367
    9. '           ' → logprob: -12.010984420776367
    10. '                           ' → logprob: -12.010984420776367

Token 1643: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47979623079299927
    2. ' +=' → logprob: -0.9797962307929993
    3. '                   ' → logprob: -5.854796409606934
    4. '               ' → logprob: -6.354796409606934
    5. '           ' → logprob: -7.979796409606934
    6. '          ' → logprob: -8.729796409606934
    7. '                  ' → logprob: -8.854796409606934
    8. '              ' → logprob: -9.604796409606934
    9. '                ' → logprob: -9.604796409606934
    10. '```' → logprob: -9.854796409606934

Token 1644: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -4.572941179503687e-05
    2. ' dfs' → logprob: -10.000045776367188
    3. 'dp' → logprob: -15.000045776367188
    4. '```' → logprob: -18.375045776367188
    5. '           ' → logprob: -18.875045776367188
    6. 'df' → logprob: -19.125045776367188
    7. '   ' → logprob: -19.875045776367188
    8. '               ' → logprob: -19.875045776367188
    9. '
' → logprob: -20.625045776367188
    10. 'DFS' → logprob: -20.750045776367188

Token 1645: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.005236717872321606
    2. '_eq' → logprob: -5.255236625671387
    3. 'sum' → logprob: -13.880236625671387
    4. '_equ' → logprob: -14.255236625671387
    5. 'Sum' → logprob: -15.005236625671387
    6. '_factor' → logprob: -15.255236625671387
    7. '_equal' → logprob: -15.255236625671387
    8. 'eq' → logprob: -15.380236625671387
    9. '=' → logprob: -17.005237579345703
    10. '```' → logprob: -17.505237579345703

Token 1646: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -3.054500666621607e-06
    2. 'eq' → logprob: -13.25000286102295
    3. '_equ' → logprob: -14.00000286102295
    4. '_sum' → logprob: -15.50000286102295
    5. 'Eq' → logprob: -15.87500286102295
    6. '_less' → logprob: -16.875003814697266
    7. '_prod' → logprob: -17.250003814697266
    8. '_equal' → logprob: -18.250003814697266
    9. '_equals' → logprob: -18.250003814697266
    10. '_pos' → logprob: -18.375003814697266

Token 1647: '_prod' (ID: 78031)
  Prédit: '_eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.21861276030540466
    2. '_prod' → logprob: -1.718612790107727
    3. '_less' → logprob: -4.5936126708984375
    4. '_sum' → logprob: -5.7186126708984375
    5. 'prod' → logprob: -5.9686126708984375
    6. 'eq' → logprob: -6.9686126708984375
    7. '_factor' → logprob: -10.468612670898438
    8. '_equ' → logprob: -10.593612670898438
    9. 'less' → logprob: -11.468612670898438
    10. '(prod' → logprob: -11.968612670898438

Token 1648: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -4.0722858102526516e-05
    2. '_sum' → logprob: -10.250041007995605
    3. '_eq' → logprob: -13.125041007995605
    4. 'less' → logprob: -13.750041007995605
    5. '_le' → logprob: -14.000041007995605
    6. '_loss' → logprob: -14.750041007995605
    7. 'Less' → logprob: -15.125041007995605
    8. '_else' → logprob: -15.750041007995605
    9. '_minus' → logprob: -16.12504005432129
    10. 'ess' → logprob: -16.50004005432129

Token 1649: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.4021237802808173e-05
    2. '```' → logprob: -11.750014305114746
    3. 'sum' → logprob: -12.375014305114746
    4. 'pos' → logprob: -14.000014305114746
    5. '(pos' → logprob: -14.750014305114746
    6. '_less' → logprob: -15.500014305114746
    7. '_pos' → logprob: -16.25001335144043
    8. '_s' → logprob: -16.75001335144043
    9. 's' → logprob: -17.25001335144043
    10. 'Sum' → logprob: -17.37501335144043

Token 1650: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -7.374227425316349e-05
    2. 'pos' → logprob: -9.875073432922363
    3. '```' → logprob: -10.875073432922363
    4. '[pos' → logprob: -13.125073432922363
    5. '(' → logprob: -14.625073432922363
    6. '(position' → logprob: -15.125073432922363
    7. ',pos' → logprob: -15.875073432922363
    8. ' pos' → logprob: -16.12507438659668
    9. '_pos' → logprob: -16.25007438659668
    10. '`' → logprob: -16.37507438659668

Token 1651: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011796683247666806
    2. '(pos' → logprob: -9.250118255615234
    3. 'pos' → logprob: -10.875118255615234
    4. ' +' → logprob: -13.500118255615234
    5. '[pos' → logprob: -13.875118255615234
    6. '```' → logprob: -15.000118255615234
    7. '(+' → logprob: -16.625118255615234
    8. '_pos' → logprob: -17.625118255615234
    9. '()+' → logprob: -18.375118255615234
    10. ',pos' → logprob: -18.375118255615234

Token 1652: '1' (ID: 16)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0022850260138511658
    2. '1' → logprob: -6.252285003662109
    3. '(pos' → logprob: -8.00228500366211
    4. '+' → logprob: -11.62728500366211
    5. ' pos' → logprob: -11.87728500366211
    6. 'dig' → logprob: -13.25228500366211
    7. '(' → logprob: -13.50228500366211
    8. '
' → logprob: -14.50228500366211
    9. '```' → logprob: -14.50228500366211
    10. '   ' → logprob: -14.75228500366211

Token 1653: ',' (ID: 11)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.13837918639183044
    2. ',pos' → logprob: -2.6383790969848633
    3. ',' → logprob: -2.8883790969848633
    4. '(pos' → logprob: -6.263379096984863
    5. ' pos' → logprob: -9.013379096984863
    6. '               ' → logprob: -11.138379096984863
    7. '```' → logprob: -11.138379096984863
    8. '[pos' → logprob: -11.138379096984863
    9. '_pos' → logprob: -12.013379096984863
    10. '+' → logprob: -12.263379096984863

Token 1654: ' sum' (ID: 4215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1271534115076065
    2. 'sum' → logprob: -2.1271533966064453
    3. ' pos' → logprob: -9.002153396606445
    4. ' sum' → logprob: -9.377153396606445
    5. 'pro' → logprob: -11.002153396606445
    6. '```' → logprob: -14.502153396606445
    7. '    ' → logprob: -16.502153396606445
    8. '   ' → logprob: -16.627153396606445
    9. ' ' → logprob: -16.627153396606445
    10. '  ' → logprob: -17.502153396606445

Token 1655: 'd' (ID: 67)
  Prédit: '_eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.017446253448724747
    2. 'pos' → logprob: -4.892446041107178
    3. 'prod' → logprob: -5.267446041107178
    4. 'eq' → logprob: -5.767446041107178
    5. '_prod' → logprob: -7.517446041107178
    6. '_factor' → logprob: -7.642446041107178
    7. 'Eq' → logprob: -8.892446517944336
    8. '_flag' → logprob: -9.142446517944336
    9. '_pos' → logprob: -9.392446517944336
    10. '==' → logprob: -10.392446517944336

Token 1656: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010422753170132637
    2. ',sum' → logprob: -5.510422706604004
    3. ',pos' → logprob: -5.635422706604004
    4. '-' → logprob: -7.010422706604004
    5. ' -' → logprob: -7.260422706604004
    6. 'pro' → logprob: -7.885422706604004
    7. '   ' → logprob: -9.010422706604004
    8. ' ,' → logprob: -9.510422706604004
    9. '```' → logprob: -9.510422706604004
    10. '-pro' → logprob: -9.635422706604004

Token 1657: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -1.2352385965641588e-05
    2. ' dig' → logprob: -11.375012397766113
    3. 'digit' → logprob: -15.375012397766113
    4. '   ' → logprob: -15.500012397766113
    5. '```' → logprob: -15.875012397766113
    6. '1' → logprob: -16.000011444091797
    7. ' ' → logprob: -16.625011444091797
    8. '0' → logprob: -17.375011444091797
    9. '  ' → logprob: -18.000011444091797
    10. '           ' → logprob: -18.125011444091797

Token 1658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001170132018160075
    2. '           ' → logprob: -10.000117301940918
    3. ' ,' → logprob: -10.625117301940918
    4. '               ' → logprob: -11.500117301940918
    5. '```' → logprob: -11.875117301940918
    6. ',new' → logprob: -12.000117301940918
    7. ',pos' → logprob: -12.000117301940918
    8. '(pro' → logprob: -12.625117301940918
    9. '          ' → logprob: -12.875117301940918
    10. '`,' → logprob: -13.000117301940918

Token 1659: ' new' (ID: 620)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.16189277172088623
    2. 'new' → logprob: -1.9118927717208862
    3. ' new' → logprob: -7.036892890930176
    4. ' pro' → logprob: -7.161892890930176
    5. '                ' → logprob: -13.411892890930176
    6. '            ' → logprob: -13.411892890930176
    7. '               ' → logprob: -13.661892890930176
    8. '```' → logprob: -13.786892890930176
    9. '         ' → logprob: -14.161892890930176
    10. '           ' → logprob: -14.286892890930176

Token 1660: 'f' (ID: 69)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.1272609978914261
    2. 'dig' → logprob: -2.75226092338562
    3. 'f' → logprob: -3.25226092338562
    4. 'pro' → logprob: -4.752261161804199
    5. '_pro' → logprob: -6.002261161804199
    6. 'factor' → logprob: -6.377261161804199
    7. '_prod' → logprob: -6.502261161804199
    8. '_factor' → logprob: -6.877261161804199
    9. '_f' → logprob: -7.252261161804199
    10. 'pf' → logprob: -8.7522611618042

Token 1661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3358446166384965e-05
    2. ' ,' → logprob: -10.500053405761719
    3. ',pos' → logprob: -11.625053405761719
    4. '           ' → logprob: -12.125053405761719
    5. '```' → logprob: -13.000053405761719
    6. ',false' → logprob: -13.125053405761719
    7. 'False' → logprob: -13.250053405761719
    8. '(False' → logprob: -13.625053405761719
    9. '               ' → logprob: -14.125053405761719
    10. ',None' → logprob: -14.625053405761719

Token 1662: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0035181138664484024
    2. ' False' → logprob: -5.753518104553223
    3. 'less' → logprob: -8.003518104553223
    4. ' less' → logprob: -12.128518104553223
    5. 'false' → logprob: -15.378518104553223
    6. '(False' → logprob: -16.00351905822754
    7. 'Less' → logprob: -16.62851905822754
    8. '                           ' → logprob: -17.50351905822754
    9. '   ' → logprob: -17.62851905822754
    10. '                       ' → logprob: -17.62851905822754

Token 1663: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6937339901924133
    2. ')
' → logprob: -0.6937339901924133
    3. '       ' → logprob: -7.693734169006348
    4. '           ' → logprob: -9.943734169006348
    5. '   ' → logprob: -10.568734169006348
    6. '               ' → logprob: -10.568734169006348
    7. ')return' → logprob: -10.818734169006348
    8. ')
' → logprob: -12.443734169006348
    9. '                   ' → logprob: -12.693734169006348
    10. '```' → logprob: -13.068734169006348

Token 1664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8954620957374573
    2. '```' → logprob: -1.3954620361328125
    3. '<|end|>' → logprob: -1.3954620361328125
    4. '       ' → logprob: -3.5204620361328125
    5. '	return' → logprob: -3.8954620361328125
    6. '<|end|>' → logprob: -4.1454620361328125
    7. ')' → logprob: -4.3954620361328125
    8. '\n' → logprob: -5.6454620361328125
    9. ' return' → logprob: -6.5204620361328125
    10. ':return' → logprob: -6.6454620361328125

Token 1665: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002714681322686374
    2. '	return' → logprob: -8.625271797180176
    3. ' return' → logprob: -10.250271797180176
    4. '       ' → logprob: -10.750271797180176
    5. 'return' (adapté à ' return') → logprob: -11.000271797180176
    6. '```' → logprob: -11.625271797180176
    7. ':return' → logprob: -12.250271797180176
    8. '
' → logprob: -13.250271797180176
    9. '{return' → logprob: -15.125271797180176
    10. '           ' → logprob: -15.125271797180176

Token 1666: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0009115827269852161
    2. ' res' → logprob: -7.000911712646484
    3. '0' → logprob: -16.750911712646484
    4. '(res' → logprob: -17.375911712646484
    5. '_res' → logprob: -19.875911712646484
    6. '$res' → logprob: -20.125911712646484
    7. '
' → logprob: -20.625911712646484
    8. '	res' → logprob: -21.250911712646484
    9. '```' → logprob: -21.625911712646484
    10. ',res' → logprob: -22.500911712646484

Token 1667: '

' (ID: 279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15609748661518097
    2. 'for' → logprob: -2.781097412109375
    3. '#' → logprob: -2.906097412109375
    4. '<|end|>' → logprob: -4.906097412109375
    5. ')' → logprob: -5.031097412109375
    6. '(ans' → logprob: -5.281097412109375
    7. '```' → logprob: -5.406097412109375
    8. '
' → logprob: -6.281097412109375
    9. 'print' → logprob: -7.906097412109375
    10. 'answer' → logprob: -8.031097412109375

Token 1668: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.015163770876824856
    2. '#' → logprob: -4.390163898468018
    3. 'for' → logprob: -6.015163898468018
    4. 'res' → logprob: -9.14016342163086
    5. '```' → logprob: -10.26516342163086
    6. '
' → logprob: -11.14016342163086
    7. '(ans' → logprob: -11.64016342163086
    8. 'total' → logprob: -11.76516342163086
    9. ' ans' → logprob: -12.14016342163086
    10. 'result' → logprob: -12.26516342163086

Token 1669: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43849289417266846
    2. '<|end|>' → logprob: -1.0634928941726685
    3. ')' → logprob: -5.313492774963379
    4. '<|end|>' → logprob: -6.563492774963379
    5. ' +' → logprob: -6.688492774963379
    6. '```' → logprob: -6.688492774963379
    7. '
' → logprob: -8.188492774963379
    8. '#' → logprob: -8.938492774963379
    9. '+=' → logprob: -9.188492774963379
    10. '0' → logprob: -9.688492774963379

Token 1670: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -6.2729995988775045e-06
    2. ' dfs' → logprob: -12.000006675720215
    3. '```' → logprob: -18.2500057220459
    4. 'df' → logprob: -18.3750057220459
    5. 'dp' → logprob: -18.5000057220459
    6. '
' → logprob: -20.6250057220459
    7. '0' → logprob: -20.7500057220459
    8. '`' → logprob: -21.7500057220459
    9. 'DFS' → logprob: -22.0000057220459
    10. '``' → logprob: -22.0000057220459

Token 1671: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.128163257315464e-07
    2. 'sum' → logprob: -15.375
    3. '_eq' → logprob: -18.0
    4. '_ans' → logprob: -19.5
    5. '_s' → logprob: -19.875
    6. '_' → logprob: -20.0
    7. '```' → logprob: -20.25
    8. ''_' → logprob: -20.875
    9. '\' → logprob: -21.0
    10. 'Sum' → logprob: -21.625

Token 1672: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -9.088346359931165e-07
    2. '_ans' → logprob: -14.750000953674316
    3. 'eq' → logprob: -15.750000953674316
    4. '_equ' → logprob: -16.5
    5. '_sum' → logprob: -16.75
    6. '_equals' → logprob: -17.125
    7. '_equal' → logprob: -17.75
    8. '=' → logprob: -19.125
    9. '```' → logprob: -19.625
    10. '_EQ' → logprob: -20.25

Token 1673: '_prod' (ID: 78031)
  Prédit: '_eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_eq' → logprob: -4.961759259458631e-06
    2. '_sum' → logprob: -13.125004768371582
    3. '_less' → logprob: -13.625004768371582
    4. '_equ' → logprob: -13.875004768371582
    5. '_ans' → logprob: -14.875004768371582
    6. 'eq' → logprob: -15.625004768371582
    7. '_equals' → logprob: -15.875004768371582
    8. '_equal' → logprob: -16.2500057220459
    9. '_EQ' → logprob: -19.0000057220459
    10. '```' → logprob: -19.1250057220459

Token 1674: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.003191501135006547
    2. '_eq' → logprob: -5.7531914710998535
    3. '_le' → logprob: -12.253191947937012
    4. 'less' → logprob: -12.503191947937012
    5. '_equals' → logprob: -13.378191947937012
    6. '_equal' → logprob: -13.378191947937012
    7. '_ans' → logprob: -14.003191947937012
    8. '_equ' → logprob: -14.753191947937012
    9. '_sum' → logprob: -14.878191947937012
    10. '```' → logprob: -15.628191947937012

Token 1675: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.20186847448349
    2. '_eq' → logprob: -1.7018685340881348
    3. '_equal' → logprob: -8.951868057250977
    4. '_less' → logprob: -8.951868057250977
    5. '(' → logprob: -9.826868057250977
    6. '```' → logprob: -10.076868057250977
    7. '_equals' → logprob: -10.076868057250977
    8. '_s' → logprob: -11.201868057250977
    9. '(n' → logprob: -11.576868057250977
    10. '_ans' → logprob: -11.826868057250977

Token 1676: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.0629870858974755e-05
    2. '(n' → logprob: -9.75006103515625
    3. '```' → logprob: -14.25006103515625
    4. '(None' → logprob: -14.37506103515625
    5. '(
' → logprob: -14.75006103515625
    6. '0' → logprob: -14.87506103515625
    7. '(s' → logprob: -15.62506103515625
    8. ' (' → logprob: -16.00006103515625
    9. 's' → logprob: -17.50006103515625
    10. '(start' → logprob: -18.50006103515625

Token 1677: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024799390230327845
    2. 'n' → logprob: -6.0024800300598145
    3. '(n' → logprob: -12.502479553222656
    4. '(' → logprob: -15.127479553222656
    5. '```' → logprob: -15.377479553222656
    6. ')n' → logprob: -16.752479553222656
    7. ' ' → logprob: -17.127479553222656
    8. ' n' → logprob: -17.252479553222656
    9. '_n' → logprob: -17.377479553222656
    10. ')' → logprob: -17.502479553222656

Token 1678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2418259084224701
    2. 'n' → logprob: -1.8668259382247925
    3. '(n' → logprob: -3.241825819015503
    4. ',n' → logprob: -4.491826057434082
    5. 's' → logprob: -4.741826057434082
    6. '```' → logprob: -7.866826057434082
    7. '(' → logprob: -8.491826057434082
    8. '(s' → logprob: -8.491826057434082
    9. ' ,' → logprob: -8.991826057434082
    10. ' n' → logprob: -9.116826057434082

Token 1679: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -7.226628895296017e-06
    2. ' sum' → logprob: -11.875007629394531
    3. 's' → logprob: -15.875007629394531
    4. 'ans' → logprob: -16.62500762939453
    5. 'n' → logprob: -16.87500762939453
    6. '```' → logprob: -17.62500762939453
    7. '(sum' → logprob: -19.50000762939453
    8. '   ' → logprob: -20.00000762939453
    9. '
' → logprob: -20.62500762939453
    10. '	sum' → logprob: -21.12500762939453

Token 1680: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.007284661289304495
    2. '_eq' → logprob: -5.257284641265869
    3. 's' → logprob: -6.632284641265869
    4. 'eq' → logprob: -8.132285118103027
    5. '_ans' → logprob: -8.132285118103027
    6. 'ans' → logprob: -9.632285118103027
    7. 'sum' → logprob: -10.382285118103027
    8. '_sum' → logprob: -10.757285118103027
    9. '==' → logprob: -10.882285118103027
    10. '_equal' → logprob: -13.007285118103027

Token 1681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013364320620894432
    2. ' ,' → logprob: -6.626336574554443
    3. ',s' → logprob: -12.501336097717285
    4. ',d' → logprob: -13.251336097717285
    5. '```' → logprob: -13.626336097717285
    6. '0' → logprob: -14.251336097717285
    7. '   ' → logprob: -14.501336097717285
    8. '(' → logprob: -14.626336097717285
    9. ',
' → logprob: -15.251336097717285
    10. ',(' → logprob: -15.251336097717285

Token 1682: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010423363419249654
    2. 'prod' → logprob: -7.001042366027832
    3. ' (' → logprob: -9.001042366027832
    4. '0' → logprob: -12.626042366027832
    5. '(prod' → logprob: -12.876042366027832
    6. ' prod' → logprob: -14.376042366027832
    7. '(None' → logprob: -15.626042366027832
    8. '```' → logprob: -15.876042366027832
    9. 'tuple' → logprob: -16.126041412353516
    10. '   ' → logprob: -16.126041412353516

Token 1683: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -20.625261306762695
    4. '[' → logprob: -21.375261306762695
    5. ' ' → logprob: -21.625261306762695
    6. '۰' → logprob: -22.625261306762695
    7. '```' → logprob: -23.125261306762695
    8. '000' → logprob: -23.375261306762695
    9. '
' → logprob: -24.125261306762695
    10. '{' → logprob: -24.375261306762695

Token 1684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009145628428086638
    2. '0' → logprob: -7.000914573669434
    3. ',
' → logprob: -13.375914573669434
    4. ' ,' → logprob: -13.750914573669434
    5. '(' → logprob: -15.375914573669434
    6. '000' → logprob: -16.125913619995117
    7. '<|end|>' → logprob: -16.750913619995117
    8. '```' → logprob: -17.125913619995117
    9. '
' → logprob: -17.250913619995117
    10. '[' → logprob: -17.750913619995117

Token 1685: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '   ' → logprob: -24.625
    4. '000' → logprob: -24.625
    5. '
' → logprob: -25.0
    6. '[' → logprob: -25.75
    7. '  ' → logprob: -25.875
    8. '(' → logprob: -26.125
    9. '00' → logprob: -26.375
    10. '```' → logprob: -26.875

Token 1686: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00091217877343297
    2. ',' → logprob: -7.000912189483643
    3. '(' → logprob: -15.250911712646484
    4. ' ' → logprob: -15.250911712646484
    5. '[' → logprob: -17.125911712646484
    6. ' ,' → logprob: -17.125911712646484
    7. '   ' → logprob: -18.125911712646484
    8. '000' → logprob: -18.250911712646484
    9. '```' → logprob: -18.250911712646484
    10. '  ' → logprob: -19.750911712646484

Token 1687: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -21.875
    3. ' ' → logprob: -22.75
    4. '[' → logprob: -23.875
    5. '000' → logprob: -23.875
    6. '
' → logprob: -24.25
    7. 'False' → logprob: -24.75
    8. '00' → logprob: -25.375
    9. '۰' → logprob: -25.375
    10. '   ' → logprob: -26.5

Token 1688: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026336227892898023
    2. ',' → logprob: -8.250263214111328
    3. ' ' → logprob: -13.500263214111328
    4. '(' → logprob: -15.250263214111328
    5. '
' → logprob: -15.250263214111328
    6. ' ,' → logprob: -16.625263214111328
    7. '),' → logprob: -17.750263214111328
    8. '[' → logprob: -18.875263214111328
    9. '  ' → logprob: -19.000263214111328
    10. ',
' → logprob: -19.125263214111328

Token 1689: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. 'False' → logprob: -14.250000953674316
    3. '(' → logprob: -19.625
    4. ' ' → logprob: -20.625
    5. '[' → logprob: -20.75
    6. '
' → logprob: -21.75
    7. '000' → logprob: -22.375
    8. '(False' → logprob: -22.375
    9. 'True' → logprob: -22.75
    10. '{' → logprob: -23.0

Token 1690: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9743012671824545e-05
    2. 'False' → logprob: -11.000020027160645
    3. ' ,' → logprob: -13.500020027160645
    4. '(False' → logprob: -14.875020027160645
    5. ',false' → logprob: -15.000020027160645
    6. 'True' → logprob: -15.125020027160645
    7. ')' → logprob: -16.000019073486328
    8. '   ' → logprob: -16.250019073486328
    9. ',F' → logprob: -16.750019073486328
    10. '```' → logprob: -16.750019073486328

Token 1691: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.1472419600977446e-06
    2. ' False' → logprob: -13.750000953674316
    3. '(False' → logprob: -18.750001907348633
    4. 'True' → logprob: -21.625001907348633
    5. '=False' → logprob: -22.375001907348633
    6. '0' → logprob: -22.750001907348633
    7. '_false' → logprob: -23.750001907348633
    8. 'false' → logprob: -24.375001907348633
    9. '.False' → logprob: -24.875001907348633
    10. 'FALSE' → logprob: -24.875001907348633

Token 1692: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -11.62501049041748
    3. ')`' → logprob: -14.37501049041748
    4. ')#' → logprob: -14.62501049041748
    5. ')**' → logprob: -16.250011444091797
    6. '```' → logprob: -16.375011444091797
    7. ')+' → logprob: -16.500011444091797
    8. '))' → logprob: -16.625011444091797
    9. '`)' → logprob: -16.750011444091797
    10. ')}' → logprob: -16.875011444091797

Token 1693: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9280147552490234
    2. 'int' → logprob: -0.9280147552490234
    3. 'def' → logprob: -2.6780147552490234
    4. 'ans' → logprob: -3.1780147552490234
    5. 'prod' → logprob: -3.3030147552490234
    6. 'pos' → logprob: -3.9280147552490234
    7. 'pro' → logprob: -4.053014755249023
    8. '+' → logprob: -5.428014755249023
    9. 'less' → logprob: -5.428014755249023
    10. '
' → logprob: -5.553014755249023

Token 1694: ' Now' (ID: 6549)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8202495574951172
    2. '#' → logprob: -1.3202495574951172
    3. 'from' → logprob: -2.070249557495117
    4. 'prod' → logprob: -2.445249557495117
    5. 'int' → logprob: -3.695249557495117
    6. 'less' → logprob: -3.945249557495117
    7. 'prefix' → logprob: -4.570249557495117
    8. 'bound' → logprob: -4.695249557495117
    9. '@' → logprob: -6.070249557495117
    10. 'cur' → logprob: -6.070249557495117

Token 1695: ' sequences' (ID: 45665)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4533727765083313
    2. 'int' → logprob: -1.4533727169036865
    3. 'less' → logprob: -2.8283727169036865
    4. 'def' → logprob: -3.2033727169036865
    5. '
' → logprob: -5.203372955322266
    6. 'prefix' → logprob: -5.328372955322266
    7. 'pos' → logprob: -5.453372955322266
    8. 'bound' → logprob: -5.578372955322266
    9. 's' → logprob: -6.078372955322266
    10. 'from' → logprob: -6.203372955322266

Token 1696: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.1090989038348198
    2. '#' → logprob: -3.2340989112854004
    3. ' with' → logprob: -3.8590989112854004
    4. '_less' → logprob: -4.3590989112854
    5. 'less' → logprob: -4.6090989112854
    6. '+=' → logprob: -4.7340989112854
    7. '_with' → logprob: -5.9840989112854
    8. '```' → logprob: -6.1090989112854
    9. '+' → logprob: -6.7340989112854
    10. ' +=' → logprob: -7.1090989112854

Token 1697: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0010554377222433686
    2. 'prod' → logprob: -7.2510552406311035
    3. ' sum' → logprob: -8.251055717468262
    4. '#' → logprob: -10.251055717468262
    5. 'product' → logprob: -10.626055717468262
    6. '
' → logprob: -11.751055717468262
    7. 'same' → logprob: -12.126055717468262
    8. 'equal' → logprob: -12.751055717468262
    9. 'ans' → logprob: -13.251055717468262
    10. 'int' → logprob: -13.376055717468262

Token 1698: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.167986199259758
    2. '_s' → logprob: -2.7929861545562744
    3. ' ==' → logprob: -3.0429861545562744
    4. '_eq' → logprob: -4.1679863929748535
    5. '_ans' → logprob: -4.2929863929748535
    6. 'ans' → logprob: -4.6679863929748535
    7. '_equal' → logprob: -6.5429863929748535
    8. '```' → logprob: -6.7929863929748535
    9. 's' → logprob: -7.1679863929748535
    10. '==
' → logprob: -7.1679863929748535

Token 1699: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.203409844194539e-05
    2. 'prod' → logprob: -10.250041961669922
    3. ' sum' → logprob: -12.500041961669922
    4. '
' → logprob: -13.625041961669922
    5. '```' → logprob: -13.625041961669922
    6. 'ans' → logprob: -15.000041961669922
    7. 's' → logprob: -16.625041961669922
    8. '=sum' → logprob: -17.000041961669922
    9. '(sum' → logprob: -17.125041961669922
    10. '``' → logprob: -18.000041961669922

Token 1700: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.038751836866140366
    2. '_eq' → logprob: -3.2887518405914307
    3. '_ans' → logprob: -8.038751602172852
    4. 's' → logprob: -8.163751602172852
    5. 'eq' → logprob: -10.163751602172852
    6. '_equal' → logprob: -11.038751602172852
    7. '_now' → logprob: -11.538751602172852
    8. '_e' → logprob: -11.788751602172852
    9. '_' → logprob: -11.788751602172852
    10. '```' → logprob: -11.913751602172852

Token 1701: ' and' (ID: 326)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -1.0673727989196777
    2. 'def' → logprob: -1.1923727989196777
    3. 'and' → logprob: -1.5673727989196777
    4. '#' → logprob: -2.5673727989196777
    5. 'from' → logprob: -3.6923727989196777
    6. ',' → logprob: -3.8173727989196777
    7. '
' → logprob: -5.192372798919678
    8. 'pos' → logprob: -5.567372798919678
    9. '_and' → logprob: -5.692372798919678
    10. 'prod' → logprob: -6.192372798919678

Token 1702: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.001194990472868085
    2. 'product' → logprob: -7.126194953918457
    3. ' prod' → logprob: -8.876194953918457
    4. 'pro' → logprob: -9.001194953918457
    5. '#' → logprob: -9.126194953918457
    6. '
' → logprob: -12.251194953918457
    7. '(prod' → logprob: -12.376194953918457
    8. 'def' → logprob: -13.501194953918457
    9. 'not' → logprob: -13.626194953918457
    10. 'prob' → logprob: -14.126194953918457

Token 1703: '==' (ID: 560)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.1008392870426178
    2. '==' → logprob: -3.350839376449585
    3. 'factor' → logprob: -3.350839376449585
    4. '_f' → logprob: -4.100839138031006
    5. '_s' → logprob: -5.350839138031006
    6. '_equal' → logprob: -5.975839138031006
    7. '==(' → logprob: -7.725839138031006
    8. '#' → logprob: -8.225839614868164
    9. 'f' → logprob: -8.600839614868164
    10. ' ==' → logprob: -8.850839614868164

Token 1704: 'prod' (ID: 36781)
  Prédit: 'prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.0005163363530300558
    2. '(' → logprob: -7.625516414642334
    3. '(prod' → logprob: -10.625515937805176
    4. ' prod' → logprob: -12.750515937805176
    5. '```' → logprob: -14.625515937805176
    6. '_prod' → logprob: -15.375515937805176
    7. 'tuple' → logprob: -15.875515937805176
    8. 'product' → logprob: -16.375516891479492
    9. '.prod' → logprob: -16.375516891479492
    10. 'proc' → logprob: -16.500516891479492

Token 1705: '_s' (ID: 1278)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.2940978705883026
    2. '_s' → logprob: -1.544097900390625
    3. '_f' → logprob: -3.294097900390625
    4. 'factor' → logprob: -5.544097900390625
    5. '```' → logprob: -8.294097900390625
    6. 's' → logprob: -11.669097900390625
    7. 'f' → logprob: -12.169097900390625
    8. '``' → logprob: -12.294097900390625
    9. '(' → logprob: -12.294097900390625
    10. '_fact' → logprob: -13.794097900390625

Token 1706: '_factor' (ID: 43757)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4677340090274811
    2. '_factor' → logprob: -1.2177339792251587
    3. '@' → logprob: -2.8427340984344482
    4. 'factor' → logprob: -5.092733860015869
    5. 'from' → logprob: -5.592733860015869
    6. '#' → logprob: -5.717733860015869
    7. '
' → logprob: -5.967733860015869
    8. '_f' → logprob: -6.217733860015869
    9. 'prod' → logprob: -6.967733860015869
    10. '```' → logprob: -8.467734336853027

Token 1707: ' and' (ID: 326)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.17422443628311157
    2. 'def' → logprob: -2.549224376678467
    3. 'from' → logprob: -3.549224376678467
    4. '
' → logprob: -4.049224376678467
    5. 'prod' → logprob: -4.049224376678467
    6. '#' → logprob: -4.174224376678467
    7. '```' → logprob: -6.799224376678467
    8. 'equal' → logprob: -8.549224853515625
    9. 'import' → logprob: -8.674224853515625
    10. 'factor' → logprob: -8.674224853515625

Token 1708: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8969916105270386
    2. 'def' → logprob: -1.1469916105270386
    3. '#' → logprob: -1.7719916105270386
    4. 'less' → logprob: -2.771991729736328
    5. ' less' → logprob: -4.521991729736328
    6. ' def' → logprob: -5.396991729736328
    7. '@' → logprob: -5.521991729736328
    8. ' int' → logprob: -5.646991729736328
    9. '
' → logprob: -5.896991729736328
    10. 'sum' → logprob: -6.146991729736328

Token 1709: ' <' (ID: 464)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.106010302901268
    2. '_less' → logprob: -3.3560101985931396
    3. 's' → logprob: -3.6060101985931396
    4. 'def' → logprob: -4.231010437011719
    5. '(' → logprob: -4.856010437011719
    6. '_eq' → logprob: -5.606010437011719
    7. '```' → logprob: -5.856010437011719
    8. '_' → logprob: -6.231010437011719
    9. '_equal' → logprob: -6.606010437011719
    10. '_ans' → logprob: -7.106010437011719

Token 1710: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07628904283046722
    2. '(' → logprob: -2.951288938522339
    3. 'ans' → logprob: -4.951289176940918
    4. 'prod' → logprob: -5.576289176940918
    5. 's' → logprob: -5.826289176940918
    6. ' int' → logprob: -5.951289176940918
    7. '(int' → logprob: -5.951289176940918
    8. ' (' → logprob: -6.701289176940918
    9. 'tuple' → logprob: -8.201289176940918
    10. '```' → logprob: -8.826289176940918

Token 1711: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.31367748975753784
    2. 'def' → logprob: -2.3136775493621826
    3. '(' → logprob: -2.4386775493621826
    4. 's' → logprob: -2.6886775493621826
    5. '0' → logprob: -4.6886773109436035
    6. '```' → logprob: -6.3136773109436035
    7. '
' → logprob: -7.1886773109436035
    8. '``' → logprob: -7.5636773109436035
    9. 'int' → logprob: -7.8136773109436035
    10. 'from' → logprob: -7.9386773109436035

Token 1712: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.033717282116413116
    2. 'def' → logprob: -4.033717155456543
    3. '
' → logprob: -4.658717155456543
    4. 'from' → logprob: -5.158717155456543
    5. '#' → logprob: -10.158717155456543
    6. 'import' → logprob: -10.408717155456543
    7. 'pos' → logprob: -10.533717155456543
    8. '```' → logprob: -10.533717155456543
    9. 'int' → logprob: -11.408717155456543
    10. 'current' → logprob: -11.533717155456543

Token 1713: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.13007895648479462
    2. 'from' → logprob: -2.2550790309906006
    3. 'def' → logprob: -4.3800787925720215
    4. '
' → logprob: -5.6300787925720215
    5. 'import' → logprob: -7.1300787925720215
    6. '```' → logprob: -9.50507926940918
    7. 'ans' → logprob: -10.75507926940918
    8. '#' → logprob: -11.25507926940918
    9. 'prefix' → logprob: -11.25507926940918
    10. 'int' → logprob: -11.25507926940918

Token 1714: ' To' (ID: 2514)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.032331980764865875
    2. 'from' → logprob: -3.532331943511963
    3. 'def' → logprob: -6.657331943511963
    4. '
' → logprob: -6.907331943511963
    5. 'import' → logprob: -8.782332420349121
    6. '#' → logprob: -10.657332420349121
    7. 'max' → logprob: -11.282332420349121
    8. '```' → logprob: -11.282332420349121
    9. 'memo' → logprob: -11.282332420349121
    10. 'int' → logprob: -11.407332420349121

Token 1715: ' count' (ID: 3605)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.2774624824523926
    2. 'continue' → logprob: -2.1524624824523926
    3. '@' → logprob: -3.2774624824523926
    4. 'count' → logprob: -3.4024624824523926
    5. 'def' → logprob: -3.9024624824523926
    6. 'do' → logprob: -4.027462482452393
    7. 'define' → logprob: -5.527462482452393
    8. '_complete' → logprob: -6.277462482452393
    9. 'com' → logprob: -6.402462482452393
    10. '
' → logprob: -6.527462482452393

Token 1716: ' that' (ID: 484)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.010999365709722042
    2. 'from' → logprob: -5.5109992027282715
    3. 'def' → logprob: -5.5109992027282715
    4. '
' → logprob: -5.8859992027282715
    5. 'import' → logprob: -10.63599967956543
    6. '#' → logprob: -10.88599967956543
    7. '```' → logprob: -11.01099967956543
    8. 's' → logprob: -12.88599967956543
    9. 'digits' → logprob: -13.38599967956543
    10. ' @' → logprob: -13.38599967956543

Token 1717: ',' (ID: 11)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.03367290273308754
    2. 'def' → logprob: -3.90867280960083
    3. 'from' → logprob: -5.03367280960083
    4. '
' → logprob: -5.15867280960083
    5. 'import' → logprob: -7.65867280960083
    6. '#' → logprob: -8.908673286437988
    7. 'We' → logprob: -10.033673286437988
    8. '```' → logprob: -10.158673286437988
    9. 'visited' → logprob: -11.283673286437988
    10. 'memo' → logprob: -11.408673286437988

Token 1718: ' we' (ID: 581)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.06054237112402916
    2. 'def' → logprob: -3.310542345046997
    3. 'from' → logprob: -4.185542583465576
    4. '#' → logprob: -5.685542583465576
    5. '
' → logprob: -5.810542583465576
    6. 'we' → logprob: -7.935542583465576
    7. 'import' → logprob: -8.560542106628418
    8. 'We' → logprob: -10.185542106628418
    9. 's' → logprob: -11.560542106628418
    10. '```' → logprob: -11.810542106628418

Token 1719: ' enumerate' (ID: 29671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3066460192203522
    2. '#' → logprob: -1.8066459894180298
    3. '@' → logprob: -2.5566461086273193
    4. 'from' → logprob: -4.30664587020874
    5. 'need' → logprob: -5.55664587020874
    6. '
' → logprob: -5.68164587020874
    7. 'import' → logprob: -7.30664587020874
    8. 'continue' → logprob: -8.431646347045898
    9. '```' → logprob: -8.681646347045898
    10. 'define' → logprob: -8.681646347045898

Token 1720: ' sequences' (ID: 45665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28911304473876953
    2. '@' → logprob: -1.5391130447387695
    3. '
' → logprob: -3.4141130447387695
    4. 'from' → logprob: -6.1641130447387695
    5. 'pos' → logprob: -7.2891130447387695
    6. '#' → logprob: -8.78911304473877
    7. 'import' → logprob: -8.91411304473877
    8. 's' → logprob: -9.16411304473877
    9. '@
' → logprob: -9.66411304473877
    10. 'dp' → logprob: -9.78911304473877

Token 1721: ' digit' (ID: 19181)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.02344788797199726
    2. '
' → logprob: -4.6484479904174805
    3. 'def' → logprob: -5.0234479904174805
    4. 'from' → logprob: -5.0234479904174805
    5. 'prod' → logprob: -9.27344799041748
    6. 'dp' → logprob: -9.64844799041748
    7. 'import' → logprob: -10.02344799041748
    8. 'digits' → logprob: -10.27344799041748
    9. '#' → logprob: -10.39844799041748
    10. 'int' → logprob: -10.52344799041748

Token 1722: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.07559296488761902
    2. ' by' → logprob: -3.4505929946899414
    3. 'def' → logprob: -3.7005929946899414
    4. '```' → logprob: -4.950592994689941
    5. 's' → logprob: -5.575592994689941
    6. 'pos' → logprob: -6.575592994689941
    7. '-by' → logprob: -6.575592994689941
    8. 'wise' → logprob: -6.950592994689941
    9. '=' → logprob: -7.700592994689941
    10. 'import' → logprob: -8.325592994689941

Token 1723: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.00041029640124179423
    2. 'position' → logprob: -8.625410079956055
    3. 'sequence' → logprob: -9.375410079956055
    4. 'def' → logprob: -9.750410079956055
    5. 'step' → logprob: -10.500410079956055
    6. 'pos' → logprob: -10.875410079956055
    7. '1' → logprob: -11.000410079956055
    8. 'digits' → logprob: -11.875410079956055
    9. '#' → logprob: -12.000410079956055
    10. '0' → logprob: -12.750410079956055

Token 1724: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09672906994819641
    2. 'from' → logprob: -3.596729040145874
    3. '
' → logprob: -4.096729278564453
    4. 'less' → logprob: -4.221729278564453
    5. 'prefix' → logprob: -4.471729278564453
    6. '@' → logprob: -5.096729278564453
    7. 'prod' → logprob: -5.846729278564453
    8. 'limit' → logprob: -6.346729278564453
    9. 'res' → logprob: -6.471729278564453
    10. 'prev' → logprob: -6.596729278564453

Token 1725: ' those' (ID: 2617)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.054797083139419556
    2. '@' → logprob: -3.1797971725463867
    3. 'pos' → logprob: -5.304797172546387
    4. 'dp' → logprob: -6.679797172546387
    5. 'less' → logprob: -6.804797172546387
    6. 'from' → logprob: -7.179797172546387
    7. 'limit' → logprob: -7.429797172546387
    8. 'leading' → logprob: -7.554797172546387
    9. '#' → logprob: -7.929797172546387
    10. 'tight' → logprob: -7.929797172546387

Token 1726: ' constraints' (ID: 31060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -1.0856709480285645
    2. '#' → logprob: -1.8356709480285645
    3. 'digits' → logprob: -2.2106709480285645
    4. 'equal' → logprob: -2.3356709480285645
    5. 'def' → logprob: -2.4606709480285645
    6. '```' → logprob: -3.0856709480285645
    7. 'prod' → logprob: -3.7106709480285645
    8. 'tokens' → logprob: -4.0856709480285645
    9. 'restr' → logprob: -4.4606709480285645
    10. 'pro' → logprob: -4.7106709480285645

Token 1727: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10087990760803223
    2. '
' → logprob: -3.3508799076080322
    3. '@' → logprob: -3.4758799076080322
    4. 'from' → logprob: -4.100879669189453
    5. 'less' → logprob: -5.225879669189453
    6. 'bound' → logprob: -5.850879669189453
    7. 'prefix' → logprob: -6.350879669189453
    8. 'limit' → logprob: -7.725879669189453
    9. 'import' → logprob: -7.850879669189453
    10. 'pos' → logprob: -7.975879669189453

Token 1728: '#' (ID: 2)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.06874967366456985
    2. 'def' → logprob: -2.9437496662139893
    3. 'from' → logprob: -4.443749904632568
    4. '
' → logprob: -6.318749904632568
    5. '```' → logprob: -9.44374942779541
    6. 'import' → logprob: -9.94374942779541
    7. 'prod' → logprob: -11.31874942779541
    8. 'visited' → logprob: -11.56874942779541
    9. 'dp' → logprob: -11.56874942779541
    10. 'prefix' → logprob: -12.06874942779541

Token 1729: ' We' (ID: 1416)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.06420452892780304
    2. 'def' → logprob: -3.439204454421997
    3. 'from' → logprob: -3.564204454421997
    4. '
' → logprob: -6.439204692840576
    5. 'import' → logprob: -9.189204216003418
    6. 'visited' → logprob: -11.064204216003418
    7. '```' → logprob: -11.189204216003418
    8. 'dp' → logprob: -11.939204216003418
    9. 'memo' → logprob: -12.064204216003418
    10. '#' → logprob: -12.314204216003418

Token 1730: ' basically' (ID: 21924)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29964619874954224
    2. '=' → logprob: -1.6746461391448975
    3. '@' → logprob: -4.299646377563477
    4. '#' → logprob: -4.549646377563477
    5. 'from' → logprob: -4.924646377563477
    6. ' =' → logprob: -5.049646377563477
    7. '
' → logprob: -5.049646377563477
    8. '=
' → logprob: -5.299646377563477
    9. 'need' → logprob: -5.299646377563477
    10. 'prod' → logprob: -5.549646377563477

Token 1731: ' count' (ID: 3605)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09571745991706848
    2. '@' → logprob: -2.470717430114746
    3. '
' → logprob: -5.595717430114746
    4. 'need' → logprob: -6.595717430114746
    5. 'from' → logprob: -7.095717430114746
    6. '#' → logprob: -8.345717430114746
    7. 'have' → logprob: -8.970717430114746
    8. 'continue' → logprob: -9.220717430114746
    9. 'use' → logprob: -9.345717430114746
    10. 'define' → logprob: -9.720717430114746

Token 1732: ' sequences' (ID: 45665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05837182700634003
    2. '
' → logprob: -3.3083717823028564
    3. 'from' → logprob: -5.0583720207214355
    4. 'se' → logprob: -5.8083720207214355
    5. 'digits' → logprob: -5.8083720207214355
    6. 'pos' → logprob: -5.9333720207214355
    7. ' sequences' → logprob: -7.0583720207214355
    8. 'less' → logprob: -7.5583720207214355
    9. 'import' → logprob: -7.5583720207214355
    10. ' def' → logprob: -7.8083720207214355

Token 1733: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27240121364593506
    2. 'with' → logprob: -2.1474013328552246
    3. 'pos' → logprob: -3.3974013328552246
    4. 'less' → logprob: -3.5224013328552246
    5. '=' → logprob: -3.6474013328552246
    6. 'that' → logprob: -5.022401332855225
    7. '#' → logprob: -5.147401332855225
    8. 'from' → logprob: -5.397401332855225
    9. '
' → logprob: -5.522401332855225
    10. '_less' → logprob: -5.647401332855225

Token 1734: ''' (ID: 6)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10223803669214249
    2. 'pos' → logprob: -3.8522379398345947
    3. '=' → logprob: -4.227238178253174
    4. 'from' → logprob: -4.227238178253174
    5. 'for' → logprob: -4.977238178253174
    6. '#' → logprob: -5.227238178253174
    7. 'length' → logprob: -5.477238178253174
    8. '
' → logprob: -5.602238178253174
    9. '0' → logprob: -5.727238178253174
    10. 'less' → logprob: -6.102238178253174

Token 1735: ' with' (ID: 483)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7933205366134644
    2. 'def' → logprob: -1.9183205366134644
    3. 'pos' → logprob: -1.9183205366134644
    4. 'less' → logprob: -2.043320655822754
    5. 'with' → logprob: -2.543320655822754
    6. '_less' → logprob: -2.668320655822754
    7. '#' → logprob: -3.043320655822754
    8. 't' → logprob: -3.168320655822754
    9. 'that' → logprob: -3.418320655822754
    10. ' =' → logprob: -3.793320655822754

Token 1736: ' same' (ID: 2684)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1199852228164673
    2. 'def' → logprob: -1.8699852228164673
    3. 'prefix' → logprob: -2.4949851036071777
    4. '#' → logprob: -2.6199851036071777
    5. 'same' → logprob: -2.6199851036071777
    6. 'length' → logprob: -2.7449851036071777
    7. 'digits' → logprob: -2.9949851036071777
    8. 'prod' → logprob: -3.1199851036071777
    9. 'int' → logprob: -3.4949851036071777
    10. '
' → logprob: -4.119985103607178

Token 1737: ' sum' (ID: 4215)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.02261330746114254
    2. 'sum' → logprob: -4.022613525390625
    3. 'len' → logprob: -5.897613525390625
    4. ' length' → logprob: -7.397613525390625
    5. '#' → logprob: -8.022613525390625
    6. 'def' → logprob: -8.772613525390625
    7. '```' → logprob: -8.897613525390625
    8. 'prefix' → logprob: -9.022613525390625
    9. 's' → logprob: -9.272613525390625
    10. 'digits' → logprob: -9.522613525390625

Token 1738: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1861516833305359
    2. '#' → logprob: -2.8111517429351807
    3. ',' → logprob: -3.9361517429351807
    4. 'prod' → logprob: -4.186151504516602
    5. '_prod' → logprob: -4.186151504516602
    6. '_s' → logprob: -4.311151504516602
    7. 'd' → logprob: -4.561151504516602
    8. 'and' → logprob: -4.811151504516602
    9. '_,' → logprob: -5.061151504516602
    10. '_eq' → logprob: -5.686151504516602

Token 1739: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.019717266783118248
    2. '#' → logprob: -5.019717216491699
    3. 'same' → logprob: -5.269717216491699
    4. ' prod' → logprob: -5.394717216491699
    5. 'product' → logprob: -6.019717216491699
    6. '
' → logprob: -8.0197172164917
    7. '```' → logprob: -8.3947172164917
    8. ' same' → logprob: -9.0197172164917
    9. ' product' → logprob: -10.1447172164917
    10. '``' → logprob: -10.2697172164917

Token 1740: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7406338453292847
    2. 'def' → logprob: -1.8656338453292847
    3. '_f' → logprob: -1.9906338453292847
    4. 'factor' → logprob: -1.9906338453292847
    5. ',' → logprob: -2.115633964538574
    6. '_factor' → logprob: -2.365633964538574
    7. '_s' → logprob: -2.490633964538574
    8. 'and' → logprob: -3.615633964538574
    9. '=' → logprob: -3.740633964538574
    10. 'f' → logprob: -3.740633964538574

Token 1741: ' s' (ID: 265)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.6890688538551331
    2. 'prefix' → logprob: -1.9390687942504883
    3. 'int' → logprob: -2.0640687942504883
    4. 'pos' → logprob: -2.3140687942504883
    5. 'less' → logprob: -3.3140687942504883
    6. '#' → logprob: -3.8140687942504883
    7. 'digits' → logprob: -3.9390687942504883
    8. 'length' → logprob: -4.189068794250488
    9. 'product' → logprob: -4.689068794250488
    10. 'same' → logprob: -4.689068794250488

Token 1742: ''' (ID: 6)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7746580243110657
    2. ''' → logprob: -2.399657964706421
    3. 'ize' → logprob: -3.274657964706421
    4. 'prefix' → logprob: -3.274657964706421
    5. '_prefix' → logprob: -3.524657964706421
    6. 'for' → logprob: -3.774657964706421
    7. '_len' → logprob: -3.774657964706421
    8. '=' → logprob: -3.774657964706421
    9. 's' → logprob: -3.774657964706421
    10. ' =' → logprob: -4.024658203125

Token 1743: ' <' (ID: 464)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1867921352386475
    2. '<' → logprob: -1.6867921352386475
    3. 'less' → logprob: -2.0617921352386475
    4. ' less' → logprob: -2.3117921352386475
    5. ' <' → logprob: -2.4367921352386475
    6. '_less' → logprob: -2.6867921352386475
    7. '<=' → logprob: -2.8117921352386475
    8. '[i' → logprob: -4.936792373657227
    9. ' <=' → logprob: -5.311792373657227
    10. 'tring' → logprob: -5.311792373657227

Token 1744: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0026560360565781593
    2. 'int' → logprob: -6.127655982971191
    3. ' s' → logprob: -7.752655982971191
    4. '```' → logprob: -10.877655982971191
    5. '=' → logprob: -12.502655982971191
    6. '``' → logprob: -12.877655982971191
    7. '`s' → logprob: -13.127655982971191
    8. '
' → logprob: -13.127655982971191
    9. ' int' → logprob: -13.502655982971191
    10. 'input' → logprob: -13.752655982971191

Token 1745: ' in' (ID: 306)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.10145016759634018
    2. 'from' → logprob: -2.476450204849243
    3. 'def' → logprob: -4.851449966430664
    4. '
' → logprob: -5.851449966430664
    5. 'import' → logprob: -6.476449966430664
    6. '```' → logprob: -10.101449966430664
    7. 'dp' → logprob: -10.226449966430664
    8. 'prefix' → logprob: -10.726449966430664
    9. 'sys' → logprob: -10.726449966430664
    10. 'ans' → logprob: -11.101449966430664

Token 1746: ' decimal' (ID: 26964)
  Prédit: 'lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lex' → logprob: -0.003447184106335044
    2. ' lex' → logprob: -6.12844705581665
    3. 'int' → logprob: -7.62844705581665
    4. 'digits' → logprob: -8.878447532653809
    5. 'digit' → logprob: -8.878447532653809
    6. 'value' → logprob: -9.378447532653809
    7. 'length' → logprob: -9.503447532653809
    8. '#' → logprob: -9.628447532653809
    9. 'prefix' → logprob: -9.753447532653809
    10. 'def' → logprob: -9.753447532653809

Token 1747: ' lex' (ID: 37772)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0763675719499588
    2. 'def' → logprob: -2.8263676166534424
    3. '
' → logprob: -4.701367378234863
    4. 'from' → logprob: -5.326367378234863
    5. '```' → logprob: -8.326367378234863
    6. 'import' → logprob: -10.451367378234863
    7. 'pos' → logprob: -10.951367378234863
    8. 'dp' → logprob: -11.576367378234863
    9. 's' → logprob: -11.701367378234863
    10. '``' → logprob: -12.201367378234863

Token 1748: ' order' (ID: 2569)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.01531557273119688
    2. 'def' → logprob: -4.515315532684326
    3. '
' → logprob: -5.765315532684326
    4. 'from' → logprob: -6.890315532684326
    5. '```' → logprob: -9.640316009521484
    6. 'import' → logprob: -11.765316009521484
    7. 's' → logprob: -12.515316009521484
    8. 'pos' → logprob: -12.515316009521484
    9. '#' → logprob: -12.640316009521484
    10. '``' → logprob: -12.890316009521484

Token 1749: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.041683875024318695
    2. 'from' → logprob: -4.041683673858643
    3. 'def' → logprob: -4.166683673858643
    4. '
' → logprob: -4.916683673858643
    5. 'import' → logprob: -8.2916841506958
    6. '```' → logprob: -9.2916841506958
    7. 'pos' → logprob: -11.2916841506958
    8. 'memo' → logprob: -11.4166841506958
    9. 'dp' → logprob: -11.5416841506958
    10. '#' → logprob: -11.7916841506958

Token 1750: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.3319217264652252
    2. 'def' → logprob: -1.5819216966629028
    3. '
' → logprob: -3.0819218158721924
    4. 'from' → logprob: -3.7069218158721924
    5. '```' → logprob: -5.206921577453613
    6. 'pos' → logprob: -7.831921577453613
    7. 'dp' → logprob: -8.581921577453613
    8. '``' → logprob: -9.206921577453613
    9. 'import' → logprob: -9.581921577453613
    10. 'prefix' → logprob: -10.081921577453613

Token 1751: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. '
' → logprob: -18.25
    3. 'cache' → logprob: -19.875
    4. ' l' → logprob: -20.375
    5. '```' → logprob: -21.625
    6. 'fun' → logprob: -22.625
    7. '_l' → logprob: -22.75
    8. '@' → logprob: -23.125
    9. '(l' → logprob: -24.125
    10. '``' → logprob: -24.125

Token 1752: 'ru' (ID: 1942)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0023297439329326153
    2. 'lu' → logprob: -6.2523298263549805
    3. '_l' → logprob: -8.37732982635498
    4. 'def' → logprob: -10.00232982635498
    5. 'lr' → logprob: -10.00232982635498
    6. '@' → logprob: -11.00232982635498
    7. 'cache' → logprob: -11.12732982635498
    8. '_' → logprob: -12.12732982635498
    9. 'll' → logprob: -12.12732982635498
    10. '```' → logprob: -12.12732982635498

Token 1753: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.018235746771097183
    2. '_cached' → logprob: -4.018235683441162
    3. 'def' → logprob: -9.64323616027832
    4. '_code' → logprob: -11.76823616027832
    5. '@' → logprob: -12.14323616027832
    6. 'cached' → logprob: -12.89323616027832
    7. '_safe' → logprob: -13.76823616027832
    8. 'cache' → logprob: -13.76823616027832
    9. '```' → logprob: -13.76823616027832
    10. '_l' → logprob: -14.64323616027832

Token 1754: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.03992912918329239
    2. 'def' → logprob: -3.289929151535034
    3. 'None' → logprob: -6.539928913116455
    4. '(False' → logprob: -7.789928913116455
    5. '(True' → logprob: -11.539929389953613
    6. '(max' → logprob: -12.164929389953613
    7. '(def' → logprob: -12.789929389953613
    8. '(' → logprob: -13.039929389953613
    9. ' def' → logprob: -13.414929389953613
    10. '_None' → logprob: -13.539929389953613

Token 1755: ')
' (ID: 446)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06292453408241272
    2. '
' → logprob: -2.81292462348938
    3. '(None' → logprob: -7.937924385070801
    4. '(' → logprob: -8.4379243850708
    5. '(False' → logprob: -9.0629243850708
    6. ')
' → logprob: -9.4379243850708
    7. ' def' → logprob: -9.5629243850708
    8. '(def' → logprob: -9.9379243850708
    9. '(True' → logprob: -10.4379243850708
    10. '(n' → logprob: -11.6879243850708

Token 1756: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.000001907348633
    3. ' def' → logprob: -17.000001907348633
    4. '```' → logprob: -20.625001907348633
    5. '    
' → logprob: -22.500001907348633
    6. 'Def' → logprob: -23.125001907348633
    7. '\' → logprob: -23.125001907348633
    8. '	def' → logprob: -23.250001907348633
    9. '``' → logprob: -23.375001907348633
    10. '(def' → logprob: -23.875001907348633

Token 1757: ' dfs' (ID: 51252)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03989888355135918
    2. 'dfs' → logprob: -3.2898988723754883
    3. 'def' → logprob: -6.664898872375488
    4. 'dp' → logprob: -8.039898872375488
    5. 'digit' → logprob: -9.289898872375488
    6. 'cnt' → logprob: -9.414898872375488
    7. ' count' → logprob: -10.039898872375488
    8. ' dfs' → logprob: -11.914898872375488
    9. 'compare' → logprob: -12.039898872375488
    10. 'seq' → logprob: -12.164898872375488

Token 1758: '_final' (ID: 46468)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5494621396064758
    2. 'def' → logprob: -1.924462080001831
    3. 'dfs' → logprob: -2.174462080001831
    4. 'pos' → logprob: -3.299462080001831
    5. '_less' → logprob: -3.674462080001831
    6. '_equal' → logprob: -3.799462080001831
    7. '(pos' → logprob: -4.42446231842041
    8. '_eq' → logprob: -4.67446231842041
    9. '_same' → logprob: -4.67446231842041
    10. 'count' → logprob: -5.42446231842041

Token 1759: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.017194010317325592
    2. '(' → logprob: -4.142193794250488
    3. 'def' → logprob: -7.267193794250488
    4. '_final' → logprob: -8.517193794250488
    5. '(position' → logprob: -9.767193794250488
    6. '```' → logprob: -10.392193794250488
    7. '(int' → logprob: -10.517193794250488
    8. '(len' → logprob: -10.767193794250488
    9. 'pos' → logprob: -10.892193794250488
    10. '(
' → logprob: -11.142193794250488

Token 1760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004568969365209341
    2. ',pos' → logprob: -5.754569053649902
    3. ' ,' → logprob: -6.754569053649902
    4. '<|end|>' → logprob: -10.379569053649902
    5. ',int' → logprob: -10.504569053649902
    6. '(pos' → logprob: -10.754569053649902
    7. '(' → logprob: -11.254569053649902
    8. ')(' → logprob: -11.504569053649902
    9. ',(' → logprob: -11.504569053649902
    10. ')(
' → logprob: -11.504569053649902

Token 1761: ' sum' (ID: 4215)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.5673418045043945
    2. 'sum' → logprob: -1.4423418045043945
    3. 'prod' → logprob: -1.6923418045043945
    4. 'int' → logprob: -5.1923418045043945
    5. 'less' → logprob: -5.6923418045043945
    6. 'equal' → logprob: -6.8173418045043945
    7. 's' → logprob: -7.4423418045043945
    8. ' pro' → logprob: -8.067341804504395
    9. ' prod' → logprob: -8.317341804504395
    10. '(pro' → logprob: -8.442341804504395

Token 1762: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006463001482188702
    2. ',' → logprob: -5.756463050842285
    3. 'pos' → logprob: -6.131463050842285
    4. '_,' → logprob: -8.381463050842285
    5. 's' → logprob: -8.631463050842285
    6. ')' → logprob: -9.256463050842285
    7. 'def' → logprob: -9.381463050842285
    8. '```' → logprob: -9.381463050842285
    9. '_eq' → logprob: -9.506463050842285
    10. 'eq' → logprob: -9.881463050842285

Token 1763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038609972689300776
    2. ',pos' → logprob: -6.003860950469971
    3. ',int' → logprob: -7.378860950469971
    4. ' ,' → logprob: -7.503860950469971
    5. ',d' → logprob: -9.378861427307129
    6. ',user' → logprob: -10.503861427307129
    7. ',p' → logprob: -11.003861427307129
    8. '   ' → logprob: -11.253861427307129
    9. ',s' → logprob: -11.628861427307129
    10. ',f' → logprob: -12.503861427307129

Token 1764: ' pro' (ID: 440)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.01483120582997799
    2. 'prod' → logprob: -4.264831066131592
    3. ' pro' → logprob: -7.389831066131592
    4. ' prod' → logprob: -10.51483154296875
    5. '(pro' → logprob: -12.38983154296875
    6. 'int' → logprob: -12.88983154296875
    7. '	pro' → logprob: -12.88983154296875
    8. 'product' → logprob: -13.01483154296875
    9. 'tuple' → logprob: -13.38983154296875
    10. 'pos' → logprob: -13.51483154296875

Token 1765: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.004124349914491177
    2. 'd' → logprob: -5.504124164581299
    3. 'dfs' → logprob: -11.004124641418457
    4. '_df' → logprob: -11.754124641418457
    5. 'xdf' → logprob: -12.129124641418457
    6. 'cdf' → logprob: -12.254124641418457
    7. 'dfa' → logprob: -12.629124641418457
    8. 'fd' → logprob: -13.629124641418457
    9. '	df' → logprob: -13.629124641418457
    10. '[df' → logprob: -13.629124641418457

Token 1766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002004410926019773
    2. ' ,' → logprob: -9.250200271606445
    3. ',d' → logprob: -9.750200271606445
    4. '   ' → logprob: -10.375200271606445
    5. ',p' → logprob: -13.250200271606445
    6. ',int' → logprob: -13.750200271606445
    7. '),' → logprob: -13.750200271606445
    8. ',user' → logprob: -13.875200271606445
    9. ',f' → logprob: -14.000200271606445
    10. ')' → logprob: -14.125200271606445

Token 1767: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.00841823685914278
    2. 'equal' → logprob: -5.258418083190918
    3. ' less' → logprob: -6.133418083190918
    4. 'int' → logprob: -7.383418083190918
    5. 'is' → logprob: -8.758418083190918
    6. 'tight' → logprob: -9.633418083190918
    7. ' equal' → logprob: -10.008418083190918
    8. 'False' → logprob: -10.508418083190918
    9. 'strict' → logprob: -10.508418083190918
    10. ' int' → logprob: -11.633418083190918

Token 1768: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0002964935847558081
    2. '_f' → logprob: -9.000296592712402
    3. '_' → logprob: -9.500296592712402
    4. '_flags' → logprob: -9.875296592712402
    5. '_FLAG' → logprob: -10.875296592712402
    6. 'Flag' → logprob: -11.500296592712402
    7. '_token' → logprob: -11.875296592712402
    8. ' _' → logprob: -12.750296592712402
    9. '```' → logprob: -13.375296592712402
    10. '\' → logprob: -13.750296592712402

Token 1769: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14857995510101318
    2. '):
' → logprob: -2.0235800743103027
    3. '):' → logprob: -5.398580074310303
    4. ',pos' → logprob: -7.023580074310303
    5. '```' → logprob: -8.773579597473145
    6. '   ' → logprob: -9.523579597473145
    7. ',p' → logprob: -10.148579597473145
    8. '):

' → logprob: -10.273579597473145
    9. '(pos' → logprob: -10.523579597473145
    10. ',
' → logprob: -11.273579597473145

Token 1770: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017397643998265266
    2. ' if' → logprob: -4.267397880554199
    3. '```' → logprob: -5.892397880554199
    4. '    ' → logprob: -8.6423978805542
    5. ':' → logprob: -9.5173978805542
    6. 'if' → logprob: -9.6423978805542
    7. ' for' → logprob: -10.5173978805542
    8. '	if' → logprob: -11.0173978805542
    9. '       ' → logprob: -11.0173978805542
    10. ' ' → logprob: -11.3923978805542

Token 1771: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6853451132774353
    2. 'if' (adapté à ' if') → logprob: -0.9353451132774353
    3. ' if' → logprob: -2.31034517288208
    4. '```' → logprob: -5.56034517288208
    5. 'for' → logprob: -9.185344696044922
    6. '       ' → logprob: -9.185344696044922
    7. '
' → logprob: -9.310344696044922
    8. '``' → logprob: -9.560344696044922
    9. '	if' → logprob: -10.060344696044922
    10. ' for' → logprob: -10.560344696044922

Token 1772: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07888989895582199
    2. ' pos' → logprob: -2.578889846801758
    3. '_pos' → logprob: -17.328889846801758
    4. '(pos' → logprob: -17.453889846801758
    5. '	pos' → logprob: -17.703889846801758
    6. '   ' → logprob: -18.828889846801758
    7. '[pos' → logprob: -19.328889846801758
    8. '.pos' → logprob: -19.953889846801758
    9. '```' → logprob: -20.453889846801758
    10. 'Pos' → logprob: -20.953889846801758

Token 1773: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0028500445187091827
    2. ' ==' → logprob: -5.87785005569458
    3. '<' → logprob: -11.002849578857422
    4. '==
' → logprob: -11.752849578857422
    5. '```' → logprob: -12.252849578857422
    6. '==(' → logprob: -12.627849578857422
    7. '()==' → logprob: -13.252849578857422
    8. '<len' → logprob: -13.377849578857422
    9. '==-' → logprob: -13.502849578857422
    10. '===' → logprob: -13.502849578857422

Token 1774: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.650518920039758e-06
    2. ' n' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.250003814697266
    4. '	n' → logprob: -17.875003814697266
    5. '_n' → logprob: -18.125003814697266
    6. '0' → logprob: -18.625003814697266
    7. '
' → logprob: -18.875003814697266
    8. 'pos' → logprob: -19.000003814697266
    9. '(n' → logprob: -19.125003814697266
    10. '```' → logprob: -19.125003814697266

Token 1775: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6410396695137024
    2. ':' → logprob: -0.7660396695137024
    3. ':return' → logprob: -5.141039848327637
    4. '   ' → logprob: -6.391039848327637
    5. '       ' → logprob: -7.516039848327637
    6. '<|end|>' → logprob: -9.016039848327637
    7. '```' → logprob: -10.016039848327637
    8. 'and' → logprob: -10.391039848327637
    9. ' and' → logprob: -10.516039848327637
    10. '():
' → logprob: -10.641039848327637

Token 1776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33569782972335815
    2. '   ' → logprob: -1.335697889328003
    3. '```' → logprob: -3.835697889328003
    4. '``' → logprob: -7.710697650909424
    5. '
' → logprob: -9.710698127746582
    6. ' if' → logprob: -10.835698127746582
    7. 'if' → logprob: -11.085698127746582
    8. 'return' → logprob: -11.210698127746582
    9. '`' → logprob: -11.585698127746582
    10. ' return' → logprob: -11.710698127746582

Token 1777: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0023871837183833122
    2. '       ' → logprob: -6.377387046813965
    3. '```' → logprob: -7.752387046813965
    4. '   ' → logprob: -8.877387046813965
    5. ' return' → logprob: -9.377387046813965
    6. 'if' → logprob: -11.002387046813965
    7. '
' → logprob: -11.502387046813965
    8. '	return' → logprob: -13.377387046813965
    9. '``' → logprob: -13.502387046813965
    10. '           ' → logprob: -15.002387046813965

Token 1778: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4418171455617994e-05
    2. '0' → logprob: -10.375044822692871
    3. ' ' → logprob: -11.500044822692871
    4. 'int' → logprob: -13.625044822692871
    5. '(' → logprob: -13.750044822692871
    6. '
' → logprob: -14.625044822692871
    7. '   ' → logprob: -15.875044822692871
    8. '```' → logprob: -17.000043869018555
    9. 'sum' → logprob: -17.500043869018555
    10. 'ans' → logprob: -17.625043869018555

Token 1779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.625000953674316
    4. 'int' → logprob: -16.000001907348633
    5. '
' → logprob: -17.625001907348633
    6. '(' → logprob: -17.750001907348633
    7. 'sum' → logprob: -19.125001907348633
    8. '```' → logprob: -19.500001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '`' → logprob: -20.125001907348633

Token 1780: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05561177432537079
    2. '<|end|>' → logprob: -3.3056118488311768
    3. '```' → logprob: -4.805611610412598
    4. '
' → logprob: -6.430611610412598
    5. '    
' → logprob: -6.430611610412598
    6. ' if' → logprob: -7.180611610412598
    7. '	' → logprob: -7.305611610412598
    8. ':' → logprob: -7.555611610412598
    9. ')' → logprob: -7.680611610412598
    10. '<|end|>' → logprob: -7.930611610412598

Token 1781: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0009176511666737497
    2. ' sum' → logprob: -7.000917434692383
    3. '(sum' → logprob: -12.000917434692383
    4. '
' → logprob: -18.500917434692383
    5. 's' → logprob: -19.250917434692383
    6. '   ' → logprob: -19.625917434692383
    7. '```' → logprob: -19.875917434692383
    8. ' ' → logprob: -20.125917434692383
    9. '	sum' → logprob: -20.250917434692383
    10. '(' → logprob: -20.500917434692383

Token 1782: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.016538791358470917
    2. '==' → logprob: -4.266538619995117
    3. ' ==' → logprob: -6.266538619995117
    4. '<' → logprob: -8.016538619995117
    5. ' <' → logprob: -10.266538619995117
    6. '```' → logprob: -10.266538619995117
    7. ' ' → logprob: -10.766538619995117
    8. '_d' → logprob: -11.266538619995117
    9. '   ' → logprob: -11.391538619995117
    10. '  ' → logprob: -12.141538619995117

Token 1783: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31327390670776367
    2. ' ==' → logprob: -1.3132739067077637
    3. '>' → logprob: -12.063274383544922
    4. '==
' → logprob: -12.813274383544922
    5. '==(' → logprob: -14.563274383544922
    6. '=' → logprob: -14.688274383544922
    7. ' >' → logprob: -14.813274383544922
    8. '!=' → logprob: -14.813274383544922
    9. '```' → logprob: -14.813274383544922
    10. ' !=' → logprob: -15.188274383544922

Token 1784: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -16.75
    4. '<|end|>' → logprob: -18.25
    5. '
' → logprob: -18.375
    6. '=' → logprob: -18.5
    7. '   ' → logprob: -19.0
    8. '==' → logprob: -19.375
    9. 's' → logprob: -19.625
    10. 'ans' → logprob: -20.0

Token 1785: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.875001907348633
    3. '
' → logprob: -14.250001907348633
    4. '==' → logprob: -15.875001907348633
    5. '```' → logprob: -15.875001907348633
    6. '=' → logprob: -16.250001907348633
    7. '(' → logprob: -17.000001907348633
    8. '``' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '`' → logprob: -18.187501907348633

Token 1786: ' else' (ID: 1203)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5091615319252014
    2. 'and' → logprob: -1.0091614723205566
    3. ' else' → logprob: -3.3841614723205566
    4. 'else' → logprob: -7.509161472320557
    5. '    ' → logprob: -11.634161949157715
    6. '```' → logprob: -12.509161949157715
    7. '        ' → logprob: -12.884161949157715
    8. ' ' → logprob: -13.259161949157715
    9. '<|end|>' → logprob: -13.259161949157715
    10. '   ' → logprob: -13.634161949157715

Token 1787: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.125018119812012
    3. 'False' → logprob: -13.375018119812012
    4. '   ' → logprob: -14.125018119812012
    5. 'True' → logprob: -14.750018119812012
    6. '1' → logprob: -15.500018119812012
    7. '(' → logprob: -16.375017166137695
    8. '  ' → logprob: -17.000017166137695
    9. 'int' → logprob: -17.250017166137695
    10. '```' → logprob: -17.562517166137695

Token 1788: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.625000953674316
    3. ' ' → logprob: -16.375
    4. 'int' → logprob: -17.375
    5. '(' → logprob: -19.0
    6. 's' → logprob: -19.75
    7. 'False' → logprob: -20.3125
    8. 'True' → logprob: -20.9375
    9. '[' → logprob: -21.0625
    10. '#' → logprob: -21.3125

Token 1789: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010580805974313989
    2. '```' → logprob: -10.250105857849121
    3. '
' → logprob: -10.625105857849121
    4. ' if' → logprob: -11.500105857849121
    5. '    
' → logprob: -11.500105857849121
    6. '	if' → logprob: -11.625105857849121
    7. '<|end|>' → logprob: -12.125105857849121
    8. '       ' → logprob: -13.500105857849121
    9. '	' → logprob: -14.125105857849121
    10. '‌' → logprob: -14.250105857849121

Token 1790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062145814299583435
    2. '```' → logprob: -2.812145709991455
    3. '``' → logprob: -10.187146186828613
    4. '
' → logprob: -10.437146186828613
    5. ' if' → logprob: -10.562146186828613
    6. ':' → logprob: -10.937146186828613
    7. ' for' → logprob: -11.187146186828613
    8. '    
' → logprob: -11.562146186828613
    9. '       ' → logprob: -11.687146186828613
    10. '    ' → logprob: -11.812146186828613

Token 1791: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.859714925289154
    2. 'for' → logprob: -0.984714925289154
    3. 'res' (adapté à ' res') → logprob: -2.734714984893799
    4. ' for' → logprob: -2.859714984893799
    5. '```' → logprob: -2.984714984893799
    6. ' res' → logprob: -3.609714984893799
    7. 'limit' → logprob: -6.859714984893799
    8. 'next' → logprob: -7.234714984893799
    9. '``' → logprob: -7.984714984893799
    10. 'digit' → logprob: -8.73471450805664

Token 1792: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13582658767700195
    2. ' =' → logprob: -3.010826587677002
    3. '   ' → logprob: -3.135826587677002
    4. ' +=' → logprob: -3.760826587677002
    5. '+=' → logprob: -4.635826587677002
    6. '```' → logprob: -6.760826587677002
    7. ',' → logprob: -9.760826110839844
    8. '	' → logprob: -10.760826110839844
    9. '=True' → logprob: -10.885826110839844
    10. '    ' → logprob: -11.260826110839844

Token 1793: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '	' → logprob: -22.125003814697266
    5. '۰' → logprob: -22.375003814697266
    6. ' ' → logprob: -22.500003814697266
    7. '(' → logprob: -22.500003814697266
    8. '
' → logprob: -22.625003814697266
    9. 'False' → logprob: -23.250003814697266
    10. '```' → logprob: -23.625003814697266

Token 1794: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'for' → logprob: -16.500003814697266
    4. '   ' → logprob: -17.125003814697266
    5. 'res' → logprob: -17.500003814697266
    6. 'ans' → logprob: -17.625003814697266
    7. 's' → logprob: -18.000003814697266
    8. '
' → logprob: -18.000003814697266
    9. 'range' → logprob: -18.000003814697266
    10. 'int' → logprob: -18.500003814697266

Token 1795: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02523273043334484
    2. '
' → logprob: -4.150232791900635
    3. ' for' → logprob: -5.025232791900635
    4. 'for' → logprob: -6.525232791900635
    5. '```' → logprob: -7.275232791900635
    6. '    
' → logprob: -8.525232315063477
    7. ' limit' → logprob: -10.025232315063477
    8. 'max' → logprob: -10.650232315063477
    9. ' next' → logprob: -10.650232315063477
    10. ',' → logprob: -10.900232315063477

Token 1796: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5943904519081116
    2. ' for' → logprob: -1.2193903923034668
    3. '```' → logprob: -1.9693903923034668
    4. 'for' → logprob: -4.344390392303467
    5. '``' → logprob: -9.344390869140625
    6. '
' → logprob: -10.844390869140625
    7. '	for' → logprob: -10.844390869140625
    8. ' ' → logprob: -11.594390869140625
    9. '`' → logprob: -11.594390869140625
    10. '  ' → logprob: -12.469390869140625

Token 1797: ' limit' (ID: 5967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07188477367162704
    2. 'limit' (adapté à ' limit') → logprob: -3.071884870529175
    3. 'max' → logprob: -3.821884870529175
    4. 'lim' → logprob: -7.446884632110596
    5. 'digit' → logprob: -8.446885108947754
    6. 'upper' → logprob: -8.571885108947754
    7. ' for' → logprob: -9.946885108947754
    8. 'bound' → logprob: -10.571885108947754
    9. 'dig' → logprob: -10.821885108947754
    10. '```' → logprob: -11.071885108947754

Token 1798: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.262083500623703
    2. ' if' → logprob: -2.1370835304260254
    3. ' =' → logprob: -2.6370835304260254
    4. 'if' → logprob: -3.2620835304260254
    5. '[pos' → logprob: -7.137083530426025
    6. '```' → logprob: -7.137083530426025
    7. '   ' → logprob: -7.262083530426025
    8. '-' → logprob: -8.637083053588867
    9. '+' → logprob: -10.262083053588867
    10. '(if' → logprob: -10.512083053588867

Token 1799: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.025614513084292412
    2. 's' → logprob: -3.9006145000457764
    3. 'int' → logprob: -5.5256147384643555
    4. '10' → logprob: -8.150614738464355
    5. ' digits' → logprob: -8.650614738464355
    6. '(' → logprob: -8.650614738464355
    7. '9' → logprob: -8.900614738464355
    8. '(int' → logprob: -9.275614738464355
    9. '0' → logprob: -9.775614738464355
    10. '(s' → logprob: -9.900614738464355

Token 1800: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: 0.0
    2. '[' → logprob: -17.125
    3. 'pos' → logprob: -17.625
    4. 'if' → logprob: -18.375
    5. '   ' → logprob: -19.5
    6. '[prop' → logprob: -20.375
    7. '[position' → logprob: -20.625
    8. '```' → logprob: -20.75
    9. '[len' → logprob: -20.875
    10. '[
' → logprob: -21.125

Token 1801: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3711537718772888
    2. ']' → logprob: -2.3711538314819336
    3. '+' → logprob: -2.4961538314819336
    4. 'if' → logprob: -2.9961538314819336
    5. ']+' → logprob: -3.2461538314819336
    6. '   ' → logprob: -3.6211538314819336
    7. ')' → logprob: -4.621153831481934
    8. ' +' → logprob: -5.621153831481934
    9. ')+' → logprob: -5.871153831481934
    10. '
' → logprob: -7.371153831481934

Token 1802: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49841025471687317
    2. ' +' → logprob: -0.9984102249145508
    3. '
' → logprob: -4.373410224914551
    4. '   ' → logprob: -4.623410224914551
    5. ' if' → logprob: -6.873410224914551
    6. 'if' → logprob: -8.49841022491455
    7. '+
' → logprob: -8.49841022491455
    8. '<|end|>' → logprob: -10.24841022491455
    9. 'for' → logprob: -10.62341022491455
    10. ' for' → logprob: -10.99841022491455

Token 1803: ' not' (ID: 625)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.38180312514305115
    2. 'not' → logprob: -1.2568031549453735
    3. ' not' → logprob: -3.506803035736084
    4. ' less' → logprob: -5.881803035736084
    5. '(not' → logprob: -11.506803512573242
    6. '   ' → logprob: -12.506803512573242
    7. 'else' → logprob: -12.881803512573242
    8. 'limit' → logprob: -13.131803512573242
    9. '	not' → logprob: -13.631803512573242
    10. '_less' → logprob: -14.506803512573242

Token 1804: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.0004306692280806601
    2. ' less' → logprob: -7.750430583953857
    3. '_less' → logprob: -19.500431060791016
    4. '
' → logprob: -20.625431060791016
    5. 'Less' → logprob: -21.375431060791016
    6. 'least' → logprob: -22.750431060791016
    7. '-less' → logprob: -22.875431060791016
    8. 'limit' → logprob: -23.250431060791016
    9. '```' → logprob: -23.500431060791016
    10. 'last' → logprob: -23.625431060791016

Token 1805: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.00031258241506293416
    2. '_limit' → logprob: -8.125312805175781
    3. '_f' → logprob: -11.875312805175781
    4. ' _' → logprob: -12.625312805175781
    5. '_flags' → logprob: -13.125312805175781
    6. '```' → logprob: -13.625312805175781
    7. '_' → logprob: -14.750312805175781
    8. '_factor' → logprob: -15.250312805175781
    9. '=_' → logprob: -15.250312805175781
    10. 'flag' → logprob: -15.250312805175781

Token 1806: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5767400860786438
    2. ' else' → logprob: -0.8267400860786438
    3. '   ' → logprob: -7.576740264892578
    4. '+' → logprob: -8.201740264892578
    5. ' +' → logprob: -11.951740264892578
    6. '```' → logprob: -12.451740264892578
    7. '	else' → logprob: -13.326740264892578
    8. '       ' → logprob: -14.576740264892578
    9. ' ' → logprob: -14.576740264892578
    10. '
' → logprob: -15.201740264892578

Token 1807: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '
' → logprob: -15.875000953674316
    5. '```' → logprob: -17.25
    6. '10' → logprob: -18.875
    7. '999' → logprob: -18.875
    8. '  ' → logprob: -19.875
    9. '۹' → logprob: -20.125
    10. '９' → logprob: -20.75

Token 1808: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '
' → logprob: -18.0
    4. '   ' → logprob: -18.25
    5. '```' → logprob: -19.5
    6. '９' → logprob: -20.75
    7. '999' → logprob: -20.875
    8. '۹' → logprob: -21.375
    9. '  ' → logprob: -21.5
    10. '09' → logprob: -22.125

Token 1809: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055734794586896896
    2. 'for' → logprob: -3.180734872817993
    3. ' for' → logprob: -4.555734634399414
    4. '```' → logprob: -6.180734634399414
    5. '	for' → logprob: -10.305734634399414
    6. '
' → logprob: -10.430734634399414
    7. '    
' → logprob: -11.930734634399414
    8. '``' → logprob: -12.680734634399414
    9. ' ' → logprob: -13.055734634399414
    10. '  ' → logprob: -13.180734634399414

Token 1810: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022181063890457153
    2. '```' → logprob: -4.022181034088135
    3. ' for' → logprob: -5.647181034088135
    4. 'for' → logprob: -7.897181034088135
    5. '	for' → logprob: -9.522181510925293
    6. '``' → logprob: -10.897181510925293
    7. '       ' → logprob: -11.897181510925293
    8. '
' → logprob: -12.022181510925293
    9. '[' → logprob: -12.272181510925293
    10. '	' → logprob: -12.522181510925293

Token 1811: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009194392478093505
    2. '   ' → logprob: -7.500919342041016
    3. '```' → logprob: -8.500919342041016
    4. ' for' → logprob: -8.750919342041016
    5. '	for' → logprob: -13.000919342041016
    6. '``' → logprob: -13.125919342041016
    7. '
' → logprob: -14.500919342041016
    8. '    
' → logprob: -17.500919342041016
    9. ' ' → logprob: -18.375919342041016
    10. '       ' → logprob: -18.500919342041016

Token 1812: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -0.005344517063349485
    2. 'd' → logprob: -5.255344390869141
    3. ' dig' → logprob: -9.75534439086914
    4. 'digit' → logprob: -9.88034439086914
    5. 'next' → logprob: -13.63034439086914
    6. 'cand' → logprob: -16.00534439086914
    7. ' d' → logprob: -16.63034439086914
    8. 'cur' → logprob: -16.88034439086914
    9. 'nd' → logprob: -17.63034439086914
    10. 'x' → logprob: -17.88034439086914

Token 1813: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014165391214191914
    2. 'in' → logprob: -4.26416540145874
    3. ' ' → logprob: -13.764164924621582
    4. '	in' → logprob: -15.764164924621582
    5. ' ' → logprob: -16.0141658782959
    6. 'if' → logprob: -16.2641658782959
    7. '```' → logprob: -16.6391658782959
    8. '_in' → logprob: -16.7641658782959
    9. ',' → logprob: -16.7641658782959
    10. '=' → logprob: -17.0141658782959

Token 1814: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05500369891524315
    2. ' range' → logprob: -3.0550036430358887
    3. '0' → logprob: -5.055003643035889
    4. ' ' → logprob: -12.055004119873047
    5. '```' → logprob: -12.180004119873047
    6. 'in' → logprob: -12.930004119873047
    7. ' in' → logprob: -13.180004119873047
    8. '
' → logprob: -13.805004119873047
    9. '(range' → logprob: -14.055004119873047
    10. 'limit' → logprob: -14.555004119873047

Token 1815: '(limit' (ID: 112473)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.02100297622382641
    2. '0' → logprob: -4.021002769470215
    3. ' limit' → logprob: -6.146002769470215
    4. '(limit' → logprob: -7.271002769470215
    5. ' ' → logprob: -11.771002769470215
    6. '(' → logprob: -13.396002769470215
    7. '   ' → logprob: -14.521002769470215
    8. 'dig' → logprob: -14.521002769470215
    9. 'digit' → logprob: -14.646002769470215
    10. 'lim' → logprob: -15.896002769470215

Token 1816: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055460553616285324
    2. ' +' → logprob: -2.9304604530334473
    3. '(limit' → logprob: -7.555460453033447
    4. ',' → logprob: -10.305460929870605
    5. 'limit' → logprob: -12.305460929870605
    6. 'if' → logprob: -12.805460929870605
    7. '```' → logprob: -13.055460929870605
    8. ' if' → logprob: -13.055460929870605
    9. '(' → logprob: -13.180460929870605
    10. '):
' → logprob: -13.180460929870605

Token 1817: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -15.750000953674316
    4. '):
' → logprob: -16.000001907348633
    5. '0' → logprob: -16.125001907348633
    6. '
' → logprob: -17.125001907348633
    7. ',' → logprob: -17.250001907348633
    8. ')' → logprob: -17.625001907348633
    9. '(' → logprob: -18.500001907348633
    10. '``' → logprob: -18.750001907348633

Token 1818: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03955094516277313
    2. ':' → logprob: -4.16455078125
    3. ':
' → logprob: -4.16455078125
    4. '):' → logprob: -5.78955078125
    5. '   ' → logprob: -6.16455078125
    6. '       ' → logprob: -6.53955078125
    7. '():
' → logprob: -7.66455078125
    8. '<|end|>' → logprob: -8.66455078125
    9. '```' → logprob: -8.66455078125
    10. '):
' → logprob: -10.03955078125

Token 1819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018899753922596574
    2. ' if' → logprob: -8.875188827514648
    3. 'if' → logprob: -10.375188827514648
    4. '```' → logprob: -12.000188827514648
    5. '   ' → logprob: -12.125188827514648
    6. '	' → logprob: -13.250188827514648
    7. '           ' → logprob: -13.625188827514648
    8. 'pf' → logprob: -13.875188827514648
    9. '	if' → logprob: -14.625188827514648
    10. '
' → logprob: -15.375188827514648

Token 1820: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04421810433268547
    2. 'pf' → logprob: -3.294218063354492
    3. ' if' → logprob: -5.169218063354492
    4. '           ' → logprob: -8.294218063354492
    5. '       ' → logprob: -8.794218063354492
    6. '```' → logprob: -10.044218063354492
    7. 'new' → logprob: -11.669218063354492
    8. ' pf' → logprob: -12.169218063354492
    9. '   ' → logprob: -12.419218063354492
    10. 'sum' → logprob: -13.044218063354492

Token 1821: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.029791807755827904
    2. ' sum' → logprob: -3.529791831970215
    3. 'dig' → logprob: -10.904791831970215
    4. '(sum' → logprob: -11.154791831970215
    5. ' ' → logprob: -12.529791831970215
    6. ' dig' → logprob: -13.279791831970215
    7. '   ' → logprob: -13.404791831970215
    8. '	sum' → logprob: -14.154791831970215
    9. '  ' → logprob: -14.779791831970215
    10. ' (' → logprob: -16.4047908782959

Token 1822: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.923874702304602e-05
    2. '-' → logprob: -9.625089645385742
    3. ' -' → logprob: -11.125089645385742
    4. '```' → logprob: -13.125089645385742
    5. '       ' → logprob: -13.750089645385742
    6. '_d' → logprob: -13.750089645385742
    7. 'dig' → logprob: -14.000089645385742
    8. '-d' → logprob: -14.125089645385742
    9. '==' → logprob: -14.250089645385742
    10. ' ==' → logprob: -14.375089645385742

Token 1823: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5760255455970764
    2. '-' → logprob: -0.8260255455970764
    3. '-d' → logprob: -9.57602596282959
    4. '==' → logprob: -11.45102596282959
    5. ' ==' → logprob: -13.07602596282959
    6. '   ' → logprob: -13.45102596282959
    7. '```' → logprob: -14.45102596282959
    8. '       ' → logprob: -14.70102596282959
    9. '           ' → logprob: -15.20102596282959
    10. '-ex' → logprob: -15.57602596282959

Token 1824: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -6.659005157416686e-05
    2. ' dig' → logprob: -9.625066757202148
    3. '```' → logprob: -15.500066757202148
    4. 'digit' → logprob: -15.625066757202148
    5. '   ' → logprob: -16.37506675720215
    6. 'digits' → logprob: -18.37506675720215
    7. '``' → logprob: -18.50006675720215
    8. ' ' → logprob: -18.75006675720215
    9. '  ' → logprob: -19.37506675720215
    10. 'd' → logprob: -20.00006675720215

Token 1825: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6931647062301636
    2. ' <' → logprob: -0.6931647062301636
    3. ' >=' → logprob: -11.318164825439453
    4. '>=' → logprob: -12.318164825439453
    5. '   ' → logprob: -15.193164825439453
    6. '       ' → logprob: -15.693164825439453
    7. ' ' → logprob: -15.693164825439453
    8. '```' → logprob: -16.568164825439453
    9. ' ' → logprob: -16.693164825439453
    10. '<int' → logprob: -16.943164825439453

Token 1826: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7252845029579476e-05
    2. 'dig' → logprob: -10.625027656555176
    3. ' ' → logprob: -12.750027656555176
    4. '```' → logprob: -17.50002670288086
    5. ' dig' → logprob: -17.62502670288086
    6. '
' → logprob: -20.50002670288086
    7. '۰' → logprob: -20.62502670288086
    8. '``' → logprob: -20.87502670288086
    9. 'digit' → logprob: -21.00002670288086
    10. '=' → logprob: -21.37502670288086

Token 1827: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2987624704837799
    2. ':
' → logprob: -1.6737624406814575
    3. ':' → logprob: -2.673762559890747
    4. '       ' → logprob: -6.548762321472168
    5. ' or' → logprob: -9.548762321472168
    6. '<|end|>' → logprob: -9.923762321472168
    7. ':return' → logprob: -10.423762321472168
    8. '          ' → logprob: -10.423762321472168
    9. '               ' → logprob: -10.548762321472168
    10. '		' → logprob: -10.673762321472168

Token 1828: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010481616482138634
    2. '       ' → logprob: -5.260481834411621
    3. 'continue' → logprob: -5.510481834411621
    4. ' continue' → logprob: -7.385481834411621
    5. '```' → logprob: -7.885481834411621
    6. '               ' → logprob: -8.885481834411621
    7. '   ' → logprob: -10.385481834411621
    8. '		' → logprob: -12.010481834411621
    9. '``' → logprob: -12.510481834411621
    10. '                   ' → logprob: -13.135481834411621

Token 1829: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5925038456916809
    2. 'break' (adapté à ' break') → logprob: -1.3425037860870361
    3. 'continue' → logprob: -1.8425037860870361
    4. ' continue' → logprob: -4.717504024505615
    5. '               ' → logprob: -4.842504024505615
    6. '```' → logprob: -5.092504024505615
    7. ' break' → logprob: -5.467504024505615
    8. 'return' → logprob: -9.217503547668457
    9. '       ' → logprob: -10.467503547668457
    10. '                   ' → logprob: -10.717503547668457

Token 1830: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018103641923516989
    2. '
' → logprob: -6.376810550689697
    3. '	' → logprob: -9.876810073852539
    4. '```' → logprob: -10.751810073852539
    5. '        
' → logprob: -11.501810073852539
    6. 'pf' → logprob: -11.626810073852539
    7. '           ' → logprob: -12.126810073852539
    8. ',' → logprob: -12.501810073852539
    9. '   ' → logprob: -13.251810073852539
    10. '
' → logprob: -14.501810073852539

Token 1831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0052619799971580505
    2. 'pf' → logprob: -5.8802618980407715
    3. '```' → logprob: -6.1302618980407715
    4. '           ' → logprob: -9.25526237487793
    5. '	' → logprob: -10.00526237487793
    6. 'if' → logprob: -10.25526237487793
    7. '``' → logprob: -10.75526237487793
    8. '   ' → logprob: -10.88026237487793
    9. ' if' → logprob: -11.00526237487793
    10. ' pf' → logprob: -11.25526237487793

Token 1832: ' pf' (ID: 27291)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' (adapté à ' pf') → logprob: -0.00012535012501757592
    2. ' pf' → logprob: -9.25012493133545
    3. '       ' → logprob: -10.50012493133545
    4. '           ' → logprob: -13.50012493133545
    5. '```' → logprob: -15.50012493133545
    6. '_pf' → logprob: -15.87512493133545
    7. '   ' → logprob: -19.250125885009766
    8. '               ' → logprob: -19.750125885009766
    9. '``' → logprob: -20.000125885009766
    10. 'Pf' → logprob: -20.000125885009766

Token 1833: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197183206677437
    2. '=' → logprob: -2.81197190284729
    3. '<|end|>' → logprob: -13.811971664428711
    4. '_' → logprob: -13.936971664428711
    5. 's' → logprob: -14.311971664428711
    6. '=
' → logprob: -14.936971664428711
    7. ' =
' → logprob: -14.936971664428711
    8. ')' → logprob: -15.561971664428711
    9. '_=' → logprob: -15.686971664428711
    10. '```' → logprob: -16.43697166442871

Token 1834: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.0007099286303855479
    2. ' prime' → logprob: -7.2507100105285645
    3. '_prime' → logprob: -18.750709533691406
    4. 'principal' → logprob: -19.250709533691406
    5. 'pr' → logprob: -20.000709533691406
    6. 'prim' → logprob: -20.875709533691406
    7. 'premium' → logprob: -21.000709533691406
    8. 'tuple' → logprob: -21.625709533691406
    9. 'primary' → logprob: -21.625709533691406
    10. 'lambda' → logprob: -21.875709533691406

Token 1835: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.1756367712223437e-05
    2. '```' → logprob: -11.750011444091797
    3. 'f' → logprob: -13.125011444091797
    4. '_factor' → logprob: -13.500011444091797
    5. '\' → logprob: -15.625011444091797
    6. 'Factors' → logprob: -15.875011444091797
    7. '`' → logprob: -16.625011444091797
    8. '``' → logprob: -17.000011444091797
    9. '(_' → logprob: -17.250011444091797
    10. ''_' → logprob: -17.375011444091797

Token 1836: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.1187383383512497
    2. 'actors' → logprob: -2.6187384128570557
    3. 'f' → logprob: -3.2437384128570557
    4. 'ctors' → logprob: -11.243738174438477
    5. 'acters' → logprob: -11.868738174438477
    6. 'actor' → logprob: -12.118738174438477
    7. 's' → logprob: -12.368738174438477
    8. '_' → logprob: -12.368738174438477
    9. '```' → logprob: -12.743738174438477
    10. 'a' → logprob: -13.493738174438477

Token 1837: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0004311460361350328
    2. 'dig' → logprob: -7.750431060791016
    3. 'd' → logprob: -14.750431060791016
    4. '(dic' → logprob: -16.875431060791016
    5. ' dig' → logprob: -18.625431060791016
    6. '```' → logprob: -19.000431060791016
    7. '(div' → logprob: -19.125431060791016
    8. '	d' → logprob: -19.125431060791016
    9. '(dialog' → logprob: -19.250431060791016
    10. '(di' → logprob: -19.500431060791016

Token 1838: 'ig' (ID: 343)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.1345224827528
    2. 'dig' → logprob: -2.1345224380493164
    3. 'd' → logprob: -4.884522438049316
    4. ' dig' → logprob: -14.009522438049316
    5. '```' → logprob: -14.259522438049316
    6. ' (' → logprob: -14.634522438049316
    7. '(' → logprob: -14.884522438049316
    8. '[d' → logprob: -15.384522438049316
    9. 'p' → logprob: -15.884522438049316
    10. 'digit' → logprob: -16.509523391723633

Token 1839: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010366239439463243
    2. ' +' → logprob: -9.500103950500488
    3. '()+' → logprob: -10.750103950500488
    4. '(' → logprob: -12.375103950500488
    5. '```' → logprob: -13.000103950500488
    6. '[' → logprob: -15.375103950500488
    7. '<|end|>' → logprob: -16.000102996826172
    8. ')+' → logprob: -16.250102996826172
    9. '+
' → logprob: -16.250102996826172
    10. '(+' → logprob: -16.375102996826172

Token 1840: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '+' → logprob: -15.250000953674316
    3. '```' → logprob: -16.0
    4. ' ' → logprob: -16.375
    5. '``' → logprob: -19.375
    6. ' +' → logprob: -19.75
    7. '`' → logprob: -20.0
    8. '   ' → logprob: -20.0
    9. ')' → logprob: -20.0
    10. '(' → logprob: -21.25

Token 1841: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31395360827445984
    2. ')
' → logprob: -1.3139536380767822
    3. '       ' → logprob: -7.438953399658203
    4. '   ' → logprob: -9.563953399658203
    5. '```' → logprob: -11.688953399658203
    6. ')
' → logprob: -11.813953399658203
    7. ')new' → logprob: -11.813953399658203
    8. '<|end|>' → logprob: -12.813953399658203
    9. ')add' → logprob: -13.563953399658203
    10. ')

' → logprob: -13.813953399658203

Token 1842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7230150699615479
    2. 'new' → logprob: -0.8480150699615479
    3. ' new' → logprob: -2.473015069961548
    4. '```' → logprob: -6.223014831542969
    5. '	new' → logprob: -10.098014831542969
    6. ')new' → logprob: -10.598014831542969
    7. '_new' → logprob: -11.098014831542969
    8. '[new' → logprob: -11.348014831542969
    9. '           ' → logprob: -11.723014831542969
    10. '(new' → logprob: -12.348014831542969

Token 1843: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -5.9795445849886164e-05
    2. ' new' → logprob: -9.875060081481934
    3. 'if' → logprob: -12.000060081481934
    4. '```' → logprob: -13.625060081481934
    5. '       ' → logprob: -14.375060081481934
    6. 'next' → logprob: -16.000059127807617
    7. 'pro' → logprob: -16.625059127807617
    8. '``' → logprob: -17.375059127807617
    9. '_new' → logprob: -17.625059127807617
    10. '	new' → logprob: -18.125059127807617

Token 1844: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.000953502138145268
    2. '_f' → logprob: -7.000953674316406
    3. 'pro' → logprob: -11.125953674316406
    4. 'res' → logprob: -11.375953674316406
    5. '=' → logprob: -11.875953674316406
    6. ' =' → logprob: -12.625953674316406
    7. '_factor' → logprob: -13.250953674316406
    8. 'def' → logprob: -13.750953674316406
    9. '_pro' → logprob: -14.250953674316406
    10. '```' → logprob: -14.250953674316406

Token 1845: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=
' → logprob: -19.413042068481445
    4. ')' → logprob: -20.788042068481445
    5. ',' → logprob: -21.038042068481445
    6. '=create' → logprob: -21.038042068481445
    7. '=

' → logprob: -21.413042068481445
    8. '=cut' → logprob: -21.413042068481445
    9. '＝' → logprob: -21.413042068481445
    10. ' =)' → logprob: -21.538042068481445

Token 1846: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.04858759790658951
    2. ' add' → logprob: -3.0485875606536865
    3. '(add' → logprob: -15.923587799072266
    4. '(' → logprob: -17.923587799072266
    5. '   ' → logprob: -18.673587799072266
    6. '	add' → logprob: -19.048587799072266
    7. '_add' → logprob: -20.048587799072266
    8. 'tuple' → logprob: -20.298587799072266
    9. ' (' → logprob: -20.673587799072266
    10. ')add' → logprob: -20.798587799072266

Token 1847: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -4.179569077678025e-05
    2. 'f' → logprob: -10.375041961669922
    3. 'add' → logprob: -12.000041961669922
    4. '(' → logprob: -13.875041961669922
    5. '_factor' → logprob: -14.000041961669922
    6. '_tokens' → logprob: -14.625041961669922
    7. 'tuple' → logprob: -14.625041961669922
    8. 'factor' → logprob: -15.125041961669922
    9. '_s' → logprob: -15.250041961669922
    10. '(add' → logprob: -15.250041961669922

Token 1848: 'actors' (ID: 37126)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0003874166286550462
    2. 'f' → logprob: -8.000387191772461
    3. '(x' → logprob: -11.000387191772461
    4. 'add' → logprob: -11.000387191772461
    5. '(' → logprob: -12.375387191772461
    6. 's' → logprob: -12.500387191772461
    7. 'Factors' → logprob: -12.625387191772461
    8. 'd' → logprob: -13.500387191772461
    9. '(add' → logprob: -13.625387191772461
    10. 'x' → logprob: -14.000387191772461

Token 1849: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.02975187823176384
    2. 'pro' → logprob: -3.529751777648926
    3. '_pro' → logprob: -14.029751777648926
    4. '	pro' → logprob: -15.529751777648926
    5. '```' → logprob: -15.529751777648926
    6. ' pro' → logprob: -15.904751777648926
    7. '(prod' → logprob: -17.029752731323242
    8. '   ' → logprob: -17.279752731323242
    9. 'prod' → logprob: -18.029752731323242
    10. 'Pro' → logprob: -18.154752731323242

Token 1850: 'df' (ID: 4750)
  Prédit: 'df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -0.015845606103539467
    2. 'f' → logprob: -4.515845775604248
    3. 'ctors' → logprob: -6.640845775604248
    4. 'ct' → logprob: -7.140845775604248
    5. '_f' → logprob: -7.265845775604248
    6. 'ctor' → logprob: -7.515845775604248
    7. 'pro' → logprob: -7.765845775604248
    8. '_df' → logprob: -7.890845775604248
    9. 'rof' → logprob: -8.26584529876709
    10. 'actors' → logprob: -9.51584529876709

Token 1851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06213562190532684
    2. ',p' → logprob: -2.812135696411133
    3. ',d' → logprob: -8.812135696411133
    4. ',
' → logprob: -11.937135696411133
    5. ',f' → logprob: -12.062135696411133
    6. ',new' → logprob: -13.437135696411133
    7. ',(' → logprob: -14.312135696411133
    8. ' ,' → logprob: -14.437135696411133
    9. '```' → logprob: -14.437135696411133
    10. '   ' → logprob: -14.687135696411133

Token 1852: ' pf' (ID: 27291)
  Prédit: 'pf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pf' → logprob: -2.339278580620885e-06
    2. ' pf' → logprob: -13.000001907348633
    3. '(p' → logprob: -17.125001907348633
    4. '_pf' → logprob: -17.625001907348633
    5. '(' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '           ' → logprob: -19.875001907348633
    8. 'py' → logprob: -21.000001907348633
    9. ' (' → logprob: -21.250001907348633
    10. '       ' → logprob: -21.375001907348633

Token 1853: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19979971647262573
    2. '       ' → logprob: -2.1997997760772705
    3. ')
' → logprob: -2.8247997760772705
    4. '<|end|>' → logprob: -4.824799537658691
    5. '```' → logprob: -6.949799537658691
    6. '):
' → logprob: -7.574799537658691
    7. '   ' → logprob: -8.324799537658691
    8. '),' → logprob: -8.449799537658691
    9. '           ' → logprob: -8.699799537658691
    10. ',' → logprob: -9.074799537658691

Token 1854: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046320082037709653
    2. '```' → logprob: -7.750463008880615
    3. 'if' → logprob: -10.875463485717773
    4. ' if' → logprob: -12.125463485717773
    5. '           ' → logprob: -12.625463485717773
    6. '``' → logprob: -13.250463485717773
    7. '#' → logprob: -13.625463485717773
    8. '               ' → logprob: -14.250463485717773
    9. '<|end|>' → logprob: -14.500463485717773
    10. '   ' → logprob: -16.250463485717773

Token 1855: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007228681817650795
    2. '       ' → logprob: -5.007228851318359
    3. '```' → logprob: -8.13222885131836
    4. 'for' → logprob: -9.13222885131836
    5. '#' → logprob: -9.25722885131836
    6. ' if' → logprob: -11.50722885131836
    7. '           ' → logprob: -12.63222885131836
    8. '``' → logprob: -13.13222885131836
    9. '               ' → logprob: -15.50722885131836
    10. '	if' → logprob: -17.00722885131836

Token 1856: ' new' (ID: 620)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4764198958873749
    2. 'new' → logprob: -1.1014199256896973
    3. 'not' → logprob: -4.601419925689697
    4. 'dig' → logprob: -4.601419925689697
    5. ' new' → logprob: -4.851419925689697
    6. '(sum' → logprob: -4.976419925689697
    7. ' sum' → logprob: -5.101419925689697
    8. 'less' → logprob: -6.601419925689697
    9. ' not' → logprob: -7.101419925689697
    10. '(new' → logprob: -7.101419925689697

Token 1857: 'f' (ID: 69)
  Prédit: '_flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.004754903260618448
    2. '_f' → logprob: -5.629755020141602
    3. '_factor' → logprob: -7.254755020141602
    4. 'Flag' → logprob: -8.754755020141602
    5. 'f' → logprob: -9.129755020141602
    6. '==' → logprob: -9.879755020141602
    7. '_flags' → logprob: -10.004755020141602
    8. 'flag' → logprob: -10.629755020141602
    9. ' ==' → logprob: -10.879755020141602
    10. '_FLAG' → logprob: -11.254755020141602

Token 1858: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7630289793014526
    2. '[i' → logprob: -0.7630289793014526
    3. ' ==' → logprob: -3.138029098510742
    4. '[' → logprob: -4.388029098510742
    5. '[pos' → logprob: -5.763029098510742
    6. '>' → logprob: -5.888029098510742
    7. '           ' → logprob: -5.888029098510742
    8. '```' → logprob: -7.013029098510742
    9. '       ' → logprob: -7.263029098510742
    10. '[len' → logprob: -7.638029098510742

Token 1859: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.000726252153981477
    2. ' prod' → logprob: -7.250726222991943
    3. '(prod' → logprob: -11.250726699829102
    4. '   ' → logprob: -13.875726699829102
    5. '           ' → logprob: -13.875726699829102
    6. '       ' → logprob: -14.500726699829102
    7. 'pro' → logprob: -15.250726699829102
    8. '(' → logprob: -15.500726699829102
    9. '_prod' → logprob: -15.500726699829102
    10. '.prod' → logprob: -16.7507266998291

Token 1860: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00013607845176011324
    2. 's' → logprob: -9.000136375427246
    3. '_f' → logprob: -11.500136375427246
    4. '```' → logprob: -14.125136375427246
    5. 'f' → logprob: -14.500136375427246
    6. ''_' → logprob: -15.375136375427246
    7. '`s' → logprob: -15.750136375427246
    8. '(_' → logprob: -15.875136375427246
    9. '_' → logprob: -16.00013542175293
    10. '(' → logprob: -16.12513542175293

Token 1861: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00012678056373260915
    2. 'factor' → logprob: -9.250126838684082
    3. '_f' → logprob: -10.500126838684082
    4. '```' → logprob: -13.500126838684082
    5. 'f' → logprob: -14.625126838684082
    6. 'Factor' → logprob: -14.875126838684082
    7. '_fact' → logprob: -15.125126838684082
    8. '
' → logprob: -15.875126838684082
    9. '``' → logprob: -16.000125885009766
    10. '_fac' → logprob: -16.250125885009766

Token 1862: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41518452763557434
    2. ':' → logprob: -1.540184497833252
    3. '           ' → logprob: -2.165184497833252
    4. '       ' → logprob: -5.165184497833252
    5. ' or' → logprob: -5.540184497833252
    6. 'or' → logprob: -8.41518497467041
    7. ':return' → logprob: -8.66518497467041
    8. '          ' → logprob: -9.04018497467041
    9. '   ' → logprob: -9.16518497467041
    10. '```' → logprob: -9.54018497467041

Token 1863: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02142254449427128
    2. ':
' → logprob: -4.521422386169434
    3. '               ' → logprob: -5.521422386169434
    4. '```' → logprob: -5.646422386169434
    5. ':' → logprob: -6.646422386169434
    6. ' and' → logprob: -8.021422386169434
    7. '                   ' → logprob: -8.521422386169434
    8. 'and' → logprob: -8.896422386169434
    9. '       ' → logprob: -8.896422386169434
    10. '                       ' → logprob: -9.021422386169434

Token 1864: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.002779916161671281
    2. '           ' → logprob: -6.502779960632324
    3. 'break' → logprob: -6.752779960632324
    4. '               ' → logprob: -10.002779960632324
    5. ' continue' → logprob: -10.252779960632324
    6. '```' → logprob: -10.502779960632324
    7. '       ' → logprob: -14.752779960632324
    8. '                   ' → logprob: -15.377779960632324
    9. '``' → logprob: -15.502779960632324
    10. '	continue' → logprob: -15.627779960632324

Token 1865: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007915709167718887
    2. '```' → logprob: -5.007915496826172
    3. '<|end|>' → logprob: -8.132915496826172
    4. '
' → logprob: -8.257915496826172
    5. '           ' → logprob: -8.882915496826172
    6. ' if' → logprob: -8.882915496826172
    7. '        
' → logprob: -9.007915496826172
    8. 'if' → logprob: -9.757915496826172
    9. '``' → logprob: -9.757915496826172
    10. '               ' → logprob: -10.007915496826172

Token 1866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007862794445827603
    2. '```' → logprob: -8.500785827636719
    3. 'if' → logprob: -8.875785827636719
    4. '           ' → logprob: -9.000785827636719
    5. ' if' → logprob: -9.250785827636719
    6. '               ' → logprob: -9.750785827636719
    7. 'continue' → logprob: -9.875785827636719
    8. ' continue' → logprob: -10.250785827636719
    9. '	' → logprob: -10.875785827636719
    10. '        
' → logprob: -11.250785827636719

Token 1867: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12759169936180115
    2. '       ' → logprob: -2.127591609954834
    3. '```' → logprob: -7.502591609954834
    4. 'res' → logprob: -10.252592086791992
    5. ' if' → logprob: -10.252592086791992
    6. '``' → logprob: -10.627592086791992
    7. 'next' → logprob: -12.002592086791992
    8. '           ' → logprob: -12.002592086791992
    9. '
' → logprob: -13.502592086791992
    10. 'new' → logprob: -13.877592086791992

Token 1868: ' new' (ID: 620)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.9913069605827332
    2. 'dig' → logprob: -1.616307020187378
    3. 'new' → logprob: -1.866307020187378
    4. ' not' → logprob: -2.241307020187378
    5. 'less' → logprob: -2.491307020187378
    6. ' new' → logprob: -3.241307020187378
    7. ' dig' → logprob: -3.491307020187378
    8. 'sum' → logprob: -5.241306781768799
    9. '(not' → logprob: -5.491306781768799
    10. ' less' → logprob: -5.616306781768799

Token 1869: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0006731167086400092
    2. '_f' → logprob: -7.500673294067383
    3. '_flag' → logprob: -9.500673294067383
    4. '```' → logprob: -12.000673294067383
    5. '_factor' → logprob: -12.000673294067383
    6. '``' → logprob: -12.250673294067383
    7. 'd' → logprob: -12.500673294067383
    8. 'flag' → logprob: -12.750673294067383
    9. 'w' → logprob: -12.875673294067383
    10. '_' → logprob: -12.875673294067383

Token 1870: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23255003988742828
    2. ' ==' → logprob: -1.857550024986267
    3. ' !=' → logprob: -3.7325501441955566
    4. '!=' → logprob: -4.107550144195557
    5. '[i' → logprob: -4.607550144195557
    6. '==(' → logprob: -7.732550144195557
    7. '           ' → logprob: -7.982550144195557
    8. '[' → logprob: -9.857549667358398
    9. '!=(' → logprob: -10.107549667358398
    10. '[:' → logprob: -10.232549667358398

Token 1871: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.06197810545563698
    2. ' prod' → logprob: -2.8119781017303467
    3. '(prod' → logprob: -11.811978340148926
    4. 'pro' → logprob: -13.811978340148926
    5. '(' → logprob: -13.936978340148926
    6. '_prod' → logprob: -14.936978340148926
    7. '.prod' → logprob: -15.811978340148926
    8. 'Prod' → logprob: -16.18697738647461
    9. 'product' → logprob: -16.18697738647461
    10. 'prot' → logprob: -16.56197738647461

Token 1872: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0006870561628602445
    2. '_f' → logprob: -8.000686645507812
    3. '_factor' → logprob: -8.500686645507812
    4. 's' → logprob: -9.000686645507812
    5. 'factor' → logprob: -11.750686645507812
    6. '```' → logprob: -11.875686645507812
    7. 'f' → logprob: -12.125686645507812
    8. '_prod' → logprob: -13.875686645507812
    9. ''_' → logprob: -14.125686645507812
    10. '``' → logprob: -14.250686645507812

Token 1873: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00011534435179783031
    2. 'factor' → logprob: -9.125115394592285
    3. '_f' → logprob: -12.750115394592285
    4. '_s' → logprob: -14.250115394592285
    5. '```' → logprob: -14.250115394592285
    6. '_fac' → logprob: -14.500115394592285
    7. 'Factor' → logprob: -14.750115394592285
    8. '_fact' → logprob: -14.750115394592285
    9. 'f' → logprob: -15.875115394592285
    10. '_FACTOR' → logprob: -16.25011444091797

Token 1874: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6303291916847229
    2. '           ' → logprob: -0.8803291916847229
    3. ':' → logprob: -3.630329132080078
    4. ' or' → logprob: -3.755329132080078
    5. 'or' → logprob: -6.755329132080078
    6. '               ' → logprob: -7.005329132080078
    7. '       ' → logprob: -7.755329132080078
    8. '          ' → logprob: -8.630329132080078
    9. 'continue' → logprob: -9.130329132080078
    10. ':return' → logprob: -9.880329132080078

Token 1875: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1121942326426506
    2. ':
' → logprob: -2.612194299697876
    3. '               ' → logprob: -3.862194299697876
    4. '```' → logprob: -5.362194061279297
    5. ':' → logprob: -5.737194061279297
    6. ' or' → logprob: -6.862194061279297
    7. '                       ' → logprob: -7.237194061279297
    8. '                   ' → logprob: -7.362194061279297
    9. 'continue' → logprob: -8.112194061279297
    10. '       ' → logprob: -8.237194061279297

Token 1876: ' continue' (ID: 4901)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0014046367723494768
    2. ' res' → logprob: -7.001404762268066
    3. '               ' → logprob: -8.751404762268066
    4. '                   ' → logprob: -9.126404762268066
    5. '           ' → logprob: -9.251404762268066
    6. '```' → logprob: -9.376404762268066
    7. '                       ' → logprob: -11.251404762268066
    8. '``' → logprob: -11.501404762268066
    9. '(res' → logprob: -12.126404762268066
    10. 'return' → logprob: -12.876404762268066

Token 1877: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03973621129989624
    2. '           ' → logprob: -3.539736270904541
    3. '
' → logprob: -5.414736270904541
    4. '```' → logprob: -5.789736270904541
    5. '               ' → logprob: -7.039736270904541
    6. 'continue' → logprob: -8.039735794067383
    7. '   ' → logprob: -8.789735794067383
    8. 'if' → logprob: -8.914735794067383
    9. '        
' → logprob: -9.039735794067383
    10. '\' → logprob: -9.164735794067383

Token 1878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08388768136501312
    2. '           ' → logprob: -2.7088875770568848
    3. '```' → logprob: -4.958887577056885
    4. '               ' → logprob: -5.208887577056885
    5. 'if' → logprob: -7.208887577056885
    6. '
' → logprob: -8.458888053894043
    7. 'continue' → logprob: -8.708888053894043
    8. ' if' → logprob: -9.458888053894043
    9. '``' → logprob: -9.708888053894043
    10. '                       ' → logprob: -10.458888053894043

Token 1879: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054880592972040176
    2. 'if' → logprob: -3.4298806190490723
    3. ' if' → logprob: -4.554880619049072
    4. '
' → logprob: -4.679880619049072
    5. '           ' → logprob: -7.179880619049072
    6. '```' → logprob: -8.054880142211914
    7. '        
' → logprob: -10.554880142211914
    8. '               ' → logprob: -10.679880142211914
    9. '``' → logprob: -10.929880142211914
    10. '   ' → logprob: -11.054880142211914

Token 1880: '_less' (ID: 154196)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08687715977430344
    2. '_flag' → logprob: -2.9618771076202393
    3. '_f' → logprob: -3.4618771076202393
    4. 'flag' → logprob: -9.83687686920166
    5. '_' → logprob: -11.08687686920166
    6. '```' → logprob: -11.21187686920166
    7. 'Flag' → logprob: -11.71187686920166
    8. '_factor' → logprob: -12.21187686920166
    9. '_flags' → logprob: -12.46187686920166
    10. 'F' → logprob: -12.58687686920166

Token 1881: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -6.659005157416686e-05
    2. '_' → logprob: -10.250066757202148
    3. '_f' → logprob: -11.000066757202148
    4. '_FLAG' → logprob: -12.375066757202148
    5. 'Flag' → logprob: -12.625066757202148
    6. '_flags' → logprob: -12.625066757202148
    7. '_factor' → logprob: -13.875066757202148
    8. ' _' → logprob: -14.500066757202148
    9. '```' → logprob: -14.625066757202148
    10. '\' → logprob: -15.375066757202148

Token 1882: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010718696285039186
    2. ' =' → logprob: -7.251071929931641
    3. '=True' → logprob: -8.25107192993164
    4. '|' → logprob: -10.12607192993164
    5. '=False' → logprob: -10.50107192993164
    6. '           ' → logprob: -11.00107192993164
    7. '       ' → logprob: -12.25107192993164
    8. ')' → logprob: -12.37607192993164
    9. '   ' → logprob: -13.37607192993164
    10. ' or' → logprob: -13.75107192993164

Token 1883: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.003334440989419818
    2. ' less' → logprob: -5.7533345222473145
    3. '   ' → logprob: -9.753334045410156
    4. 'True' → logprob: -10.003334045410156
    5. '           ' → logprob: -10.628334045410156
    6. '(' → logprob: -11.503334045410156
    7. '       ' → logprob: -12.378334045410156
    8. '         ' → logprob: -13.003334045410156
    9. 'pos' → logprob: -13.003334045410156
    10. '          ' → logprob: -13.628334045410156

Token 1884: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.00021807955636177212
    2. 'flag' → logprob: -9.250218391418457
    3. 'Flag' → logprob: -10.000218391418457
    4. '_FLAG' → logprob: -10.125218391418457
    5. '|' → logprob: -11.750218391418457
    6. 'or' → logprob: -12.250218391418457
    7. ' or' → logprob: -12.250218391418457
    8. 'if' → logprob: -12.375218391418457
    9. '_f' → logprob: -12.625218391418457
    10. '_flags' → logprob: -13.000218391418457

Token 1885: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.39207056164741516
    2. 'or' → logprob: -1.1420705318450928
    3. 'if' → logprob: -5.642070770263672
    4. ' if' → logprob: -6.642070770263672
    5. '       ' → logprob: -8.642070770263672
    6. '           ' → logprob: -9.392070770263672
    7. '
' → logprob: -10.517070770263672
    8. '        ' → logprob: -11.267070770263672
    9. '|' → logprob: -11.517070770263672
    10. '    ' → logprob: -12.017070770263672

Token 1886: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0907977744936943
    2. 'dig' → logprob: -2.4657976627349854
    3. ' dig' → logprob: -6.4657979011535645
    4. ' (' → logprob: -8.215797424316406
    5. 'digit' → logprob: -10.965797424316406
    6. 'd' → logprob: -11.840797424316406
    7. 'digits' → logprob: -12.715797424316406
    8. '(' → logprob: -13.840797424316406
    9. '	d' → logprob: -14.340797424316406
    10. '   ' → logprob: -15.340797424316406

Token 1887: 'dig' (ID: 33529)
  Prédit: 'dig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -4.127333340875339e-06
    2. ' dig' → logprob: -13.000003814697266
    3. 'digits' → logprob: -13.625003814697266
    4. 'digit' → logprob: -14.625003814697266
    5. 'd' → logprob: -16.375003814697266
    6. '```' → logprob: -17.250003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '(d' → logprob: -19.125003814697266
    9. '           ' → logprob: -20.000003814697266
    10. 'Dig' → logprob: -20.375003814697266

Token 1888: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04944423586130142
    2. ' <' → logprob: -3.0494441986083984
    3. '<int' → logprob: -7.799444198608398
    4. '<p' → logprob: -9.674444198608398
    5. '<s' → logprob: -9.674444198608398
    6. '<len' → logprob: -9.799444198608398
    7. '<size' → logprob: -10.174444198608398
    8. '<src' → logprob: -10.674444198608398
    9. '<num' → logprob: -10.924444198608398
    10. '<data' → logprob: -11.049444198608398

Token 1889: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -1.3902033970225602e-05
    2. ' digits' → logprob: -11.250014305114746
    3. 'limit' → logprob: -14.000014305114746
    4. 'digit' → logprob: -17.37501335144043
    5. '   ' → logprob: -20.37501335144043
    6. 'limits' → logprob: -20.50001335144043
    7. 'dig' → logprob: -20.50001335144043
    8. '           ' → logprob: -21.12501335144043
    9. '_digits' → logprob: -21.25001335144043
    10. 'Digits' → logprob: -21.25001335144043

Token 1890: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -7.3458322731312364e-06
    2. 'pos' → logprob: -11.875007629394531
    3. '```' → logprob: -16.25000762939453
    4. '[
' → logprob: -16.62500762939453
    5. '
' → logprob: -17.50000762939453
    6. '[' → logprob: -17.50000762939453
    7. ')' → logprob: -18.50000762939453
    8. '   ' → logprob: -18.75000762939453
    9. ' [' → logprob: -19.62500762939453
    10. '(pos' → logprob: -19.75000762939453

Token 1891: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02057785540819168
    2. ')
' → logprob: -3.895577907562256
    3. '       ' → logprob: -11.020577430725098
    4. '])' → logprob: -11.770577430725098
    5. ' )' → logprob: -13.020577430725098
    6. '   ' → logprob: -13.020577430725098
    7. ')#' → logprob: -13.645577430725098
    8. '})' → logprob: -14.145577430725098
    9. '```' → logprob: -14.270577430725098
    10. '))' → logprob: -14.520577430725098

Token 1892: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009075989946722984
    2. '```' → logprob: -4.759076118469238
    3. '           ' → logprob: -8.884076118469238
    4. '``' → logprob: -9.384076118469238
    5. '   ' → logprob: -9.759076118469238
    6. ')' → logprob: -10.509076118469238
    7. '               ' → logprob: -10.509076118469238
    8. '                       ' → logprob: -10.884076118469238
    9. '<|end|>' → logprob: -10.884076118469238
    10. ':
' → logprob: -11.134076118469238

Token 1893: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -3.8889261304575484e-06
    2. '       ' → logprob: -13.375003814697266
    3. ' res' → logprob: -13.875003814697266
    4. '```' → logprob: -13.875003814697266
    5. '           ' → logprob: -15.500003814697266
    6. 'return' → logprob: -16.875003814697266
    7. '``' → logprob: -17.250003814697266
    8. '               ' → logprob: -17.375003814697266
    9. '
' → logprob: -17.625003814697266
    10. '   ' → logprob: -18.125003814697266

Token 1894: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0029365792870521545
    2. ' +=' → logprob: -5.877936363220215
    3. '       ' → logprob: -9.877936363220215
    4. '```' → logprob: -10.627936363220215
    5. ']+=' → logprob: -11.002936363220215
    6. '           ' → logprob: -11.877936363220215
    7. '   ' → logprob: -11.877936363220215
    8. 'res' → logprob: -12.002936363220215
    9. '          ' → logprob: -12.627936363220215
    10. '                   ' → logprob: -13.127936363220215

Token 1895: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00020354038861114532
    2. ' dfs' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.75020408630371
    4. 'df' → logprob: -19.12520408630371
    5. '```' → logprob: -21.12520408630371
    6. 'dfa' → logprob: -21.25020408630371
    7. 'dp' → logprob: -21.25020408630371
    8. '  ' → logprob: -21.75020408630371
    9. 'DFS' → logprob: -22.00020408630371
    10. ' ' → logprob: -22.00020408630371

Token 1896: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -3.857719275401905e-05
    2. 'final' → logprob: -10.250038146972656
    3. '_sum' → logprob: -12.750038146972656
    4. '```' → logprob: -16.125038146972656
    5. 'Final' → logprob: -16.625038146972656
    6. '_finalize' → logprob: -17.625038146972656
    7. '(final' → logprob: -18.375038146972656
    8. '_FINAL' → logprob: -18.750038146972656
    9. '
' → logprob: -18.750038146972656
    10. '_fin' → logprob: -19.625038146972656

Token 1897: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.00010020548506872728
    2. '(' → logprob: -9.250100135803223
    3. '(
' → logprob: -12.875100135803223
    4. '(position' → logprob: -14.500100135803223
    5. '```' → logprob: -14.625100135803223
    6. 'pos' → logprob: -15.500100135803223
    7. ' (' → logprob: -16.12510108947754
    8. '[pos' → logprob: -16.12510108947754
    9. ',pos' → logprob: -16.75010108947754
    10. '(Pos' → logprob: -17.50010108947754

Token 1898: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002988776541315019
    2. ' +' → logprob: -8.125298500061035
    3. '(pos' → logprob: -13.500298500061035
    4. '()+' → logprob: -14.500298500061035
    5. '＋' → logprob: -15.375298500061035
    6. '(' → logprob: -15.500298500061035
    7. '+(' → logprob: -15.625298500061035
    8. '+
' → logprob: -15.875298500061035
    9. '(+' → logprob: -15.875298500061035
    10. '```' → logprob: -16.50029945373535

Token 1899: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '+' → logprob: -13.875000953674316
    3. 'pos' → logprob: -16.250001907348633
    4. '```' → logprob: -16.750001907348633
    5. '
' → logprob: -18.750001907348633
    6. ' ' → logprob: -19.875001907348633
    7. 'new' → logprob: -21.375001907348633
    8. '(' → logprob: -21.375001907348633
    9. '(pos' → logprob: -21.500001907348633
    10. '   ' → logprob: -21.500001907348633

Token 1900: ',' (ID: 11)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.34015434980392456
    2. ',' → logprob: -1.3401544094085693
    3. ',pos' → logprob: -3.7151544094085693
    4. '(sum' → logprob: -6.71515417098999
    5. '(' → logprob: -7.46515417098999
    6. ',sum' → logprob: -8.715154647827148
    7. 'pos' → logprob: -9.090154647827148
    8. '```' → logprob: -10.340154647827148
    9. '   ' → logprob: -10.465154647827148
    10. ' (' → logprob: -11.090154647827148

Token 1901: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0015023599844425917
    2. ' sum' → logprob: -6.501502513885498
    3. '(sum' → logprob: -17.876502990722656
    4. ' ' → logprob: -18.501502990722656
    5. '_sum' → logprob: -19.001502990722656
    6. '   ' → logprob: -19.876502990722656
    7. '	sum' → logprob: -20.126502990722656
    8. '    ' → logprob: -20.751502990722656
    9. '.sum' → logprob: -21.251502990722656
    10. '
' → logprob: -21.251502990722656

Token 1902: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3876500725746155
    2. 'sum' → logprob: -1.1376500129699707
    3. '```' → logprob: -8.137650489807129
    4. '(sum' → logprob: -8.387650489807129
    5. 's' → logprob: -9.262650489807129
    6. '_sum' → logprob: -9.762650489807129
    7. ' sum' → logprob: -10.137650489807129
    8. ' ' → logprob: -11.387650489807129
    9. '   ' → logprob: -11.637650489807129
    10. '+' → logprob: -11.637650489807129

Token 1903: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1359396129846573
    2. ',' → logprob: -2.260939598083496
    3. ' -' → logprob: -4.260939598083496
    4. '-d' → logprob: -6.010939598083496
    5. '+' → logprob: -6.635939598083496
    6. '```' → logprob: -7.010939598083496
    7. '          ' → logprob: -7.260939598083496
    8. '   ' → logprob: -7.510939598083496
    9. '           ' → logprob: -8.010939598083496
    10. ',d' → logprob: -8.135939598083496

Token 1904: ' dig' (ID: 3807)
  Prédit: 'dig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dig' → logprob: -5.512236498361744e-07
    2. ' dig' → logprob: -14.500000953674316
    3. '1' → logprob: -16.75
    4. 'digit' → logprob: -19.625
    5. 'digits' → logprob: -20.0
    6. '
' → logprob: -20.125
    7. '   ' → logprob: -20.125
    8. ' ' → logprob: -21.625
    9. '```' → logprob: -21.625
    10. '  ' → logprob: -21.75

Token 1905: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005426916293799877
    2. ',new' → logprob: -5.25542688369751
    3. ' ,' → logprob: -8.880427360534668
    4. 'new' → logprob: -10.005427360534668
    5. ' new' → logprob: -12.255427360534668
    6. '   ' → logprob: -12.755427360534668
    7. ' ' → logprob: -15.255427360534668
    8. '```' → logprob: -15.380427360534668
    9. '       ' → logprob: -15.505427360534668
    10. '           ' → logprob: -16.00542640686035

Token 1906: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -2.15310683415737e-05
    2. ' new' → logprob: -10.750021934509277
    3. '_new' → logprob: -18.75002098083496
    4. 'pro' → logprob: -19.00002098083496
    5. '```' → logprob: -19.50002098083496
    6. 'New' → logprob: -19.87502098083496
    7. 'tuple' → logprob: -20.37502098083496
    8. '         ' → logprob: -21.00002098083496
    9. 'prod' → logprob: -21.25002098083496
    10. '	new' → logprob: -21.37502098083496

Token 1907: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001200827769935131
    2. '_f' → logprob: -6.8762006759643555
    3. 'pro' → logprob: -8.876200675964355
    4. 'prod' → logprob: -11.751200675964355
    5. 'factor' → logprob: -11.876200675964355
    6. 'of' → logprob: -12.251200675964355
    7. 'fact' → logprob: -13.626200675964355
    8. '(pro' → logprob: -14.126200675964355
    9. 'd' → logprob: -14.126200675964355
    10. 'from' → logprob: -14.126200675964355

Token 1908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040576665196567774
    2. ',new' → logprob: -7.875405788421631
    3. '   ' → logprob: -11.500405311584473
    4. '```' → logprob: -12.250405311584473
    5. ' ,' → logprob: -12.875405311584473
    6. '	' → logprob: -13.000405311584473
    7. 'new' → logprob: -13.250405311584473
    8. '       ' → logprob: -13.625405311584473
    9. '           ' → logprob: -14.250405311584473
    10. ',
' → logprob: -14.750405311584473

Token 1909: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -4.56102097814437e-05
    2. ' new' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.750045776367188
    4. 'New' → logprob: -17.750045776367188
    5. 'True' → logprob: -18.250045776367188
    6. '	new' → logprob: -18.500045776367188
    7. 'False' → logprob: -19.500045776367188
    8. '_new' → logprob: -19.500045776367188
    9. '           ' → logprob: -19.750045776367188
    10. '    ' → logprob: -19.750045776367188

Token 1910: '_less' (ID: 154196)
  Prédit: '_flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.00032724079210311174
    2. 'False' → logprob: -8.625327110290527
    3. 'Flag' → logprob: -9.000327110290527
    4. 'True' → logprob: -11.625327110290527
    5. '_FLAG' → logprob: -12.500327110290527
    6. '_flags' → logprob: -12.625327110290527
    7. 'flag' → logprob: -12.625327110290527
    8. '_false' → logprob: -13.125327110290527
    9. '_f' → logprob: -13.875327110290527
    10. '_F' → logprob: -14.375327110290527

Token 1911: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0012088033836334944
    2. 'Flag' → logprob: -6.751208782196045
    3. '```' → logprob: -10.626209259033203
    4. '_f' → logprob: -12.001209259033203
    5. '_FLAG' → logprob: -12.376209259033203
    6. 'flag' → logprob: -13.876209259033203
    7. '_flags' → logprob: -14.251209259033203
    8. '=True' → logprob: -14.501209259033203
    9. ')' → logprob: -15.001209259033203
    10. '\' → logprob: -15.126209259033203

Token 1912: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32136839628219604
    2. ')
' → logprob: -1.3213684558868408
    3. '   ' → logprob: -4.821368217468262
    4. ')
' → logprob: -11.446368217468262
    5. ')return' → logprob: -12.321368217468262
    6. '```' → logprob: -13.946368217468262
    7. '       ' → logprob: -14.071368217468262
    8. ')

' → logprob: -15.446368217468262
    9. ' )
' → logprob: -15.821368217468262
    10. ')`
' → logprob: -15.946368217468262

Token 1913: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.05667150393128395
    2. '``' → logprob: -3.306671619415283
    3. '   ' → logprob: -4.306671619415283
    4. '\n' → logprob: -6.556671619415283
    5. ')' → logprob: -6.681671619415283
    6. '`' → logprob: -7.431671619415283
    7. ' return' → logprob: -7.931671619415283
    8. 'return' → logprob: -7.931671619415283
    9. '
' → logprob: -8.306671142578125
    10. '\' → logprob: -8.681671142578125

Token 1914: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33784231543540955
    2. '```' → logprob: -2.0878422260284424
    3. ' return' → logprob: -2.5878422260284424
    4. '   ' → logprob: -3.3378422260284424
    5. ')' → logprob: -3.7128422260284424
    6. '``' → logprob: -4.9628424644470215
    7. ':return' → logprob: -4.9628424644470215
    8. ')
' → logprob: -5.8378424644470215
    9. '
' → logprob: -6.2128424644470215
    10. '	return' → logprob: -6.2128424644470215

Token 1915: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.981667537620524e-06
    2. '0' → logprob: -13.875001907348633
    3. ' res' → logprob: -13.875001907348633
    4. '(res' → logprob: -16.875001907348633
    5. '```' → logprob: -18.250001907348633
    6. 'ans' → logprob: -20.000001907348633
    7. 'return' → logprob: -20.375001907348633
    8. '$res' → logprob: -20.625001907348633
    9. '_res' → logprob: -20.750001907348633
    10. 'dfs' → logprob: -20.750001907348633

Token 1916: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11010541021823883
    2. 'print' → logprob: -2.610105514526367
    3. '```' → logprob: -4.360105514526367
    4. '<|end|>' → logprob: -4.485105514526367
    5. 'ans' → logprob: -5.985105514526367
    6. '+' → logprob: -7.485105514526367
    7. ')return' → logprob: -7.610105514526367
    8. '#' → logprob: -7.860105514526367
    9. '
' → logprob: -7.860105514526367
    10. ')
' → logprob: -8.235105514526367

Token 1917: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005709059187211096
    2. 'ans' → logprob: -7.750570774078369
    3. ')' → logprob: -9.000571250915527
    4. 'return' → logprob: -12.125571250915527
    5. '```' → logprob: -12.375571250915527
    6. 'answer' → logprob: -12.875571250915527
    7. '#print' → logprob: -13.625571250915527
    8. 'result' → logprob: -13.875571250915527
    9. ' print' → logprob: -14.125571250915527
    10. '#' → logprob: -14.250571250915527

Token 1918: ' The' (ID: 623)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005647073267027736
    2. 'ans' → logprob: -7.5005645751953125
    3. 'result' → logprob: -12.250564575195312
    4. 'answer' → logprob: -13.000564575195312
    5. '
' → logprob: -13.625564575195312
    6. 'res' → logprob: -13.875564575195312
    7. '#' → logprob: -14.125564575195312
    8. '```' → logprob: -14.125564575195312
    9. 'final' → logprob: -15.125564575195312
    10. '#print' → logprob: -15.250564575195312

Token 1919: ' above' (ID: 5151)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25088274478912354
    2. 'print' → logprob: -2.250882625579834
    3. 'result' → logprob: -3.000882625579834
    4. 'res' → logprob: -3.375882625579834
    5. 'final' → logprob: -4.625882625579834
    6. 'answer' → logprob: -5.000882625579834
    7. 'return' → logprob: -5.250882625579834
    8. '```' → logprob: -5.750882625579834
    9. '
' → logprob: -5.875882625579834
    10. '#' → logprob: -6.250882625579834

Token 1920: ' counts' (ID: 28991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3006938695907593
    2. '<|end|>' → logprob: -1.8006938695907593
    3. '#' → logprob: -2.925693988800049
    4. 'ans' → logprob: -5.050693988800049
    5. '(ans' → logprob: -5.175693988800049
    6. '```' → logprob: -5.550693988800049
    7. '+' → logprob: -5.925693988800049
    8. '<|end|>' → logprob: -5.925693988800049
    9. '
' → logprob: -6.175693988800049
    10. 'return' → logprob: -6.175693988800049

Token 1921: ' sequences' (ID: 45665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7952703237533569
    2. 'ans' → logprob: -1.170270323753357
    3. '#' → logprob: -1.920270323753357
    4. '```' → logprob: -4.0452704429626465
    5. '(ans' → logprob: -4.0452704429626465
    6. '0' → logprob: -4.4202704429626465
    7. 'final' → logprob: -5.1702704429626465
    8. 'res' → logprob: -5.1702704429626465
    9. 's' → logprob: -5.4202704429626465
    10. 'dfs' → logprob: -5.7952704429626465

Token 1922: ' <=' (ID: 5017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7697436213493347
    2. '<|end|>' → logprob: -1.6447436809539795
    3. '-' → logprob: -2.1447436809539795
    4. '+' → logprob: -2.6447436809539795
    5. '#' → logprob: -2.7697436809539795
    6. '```' → logprob: -4.1447434425354
    7. '(' → logprob: -4.7697434425354
    8. '.' → logprob: -4.8947434425354
    9. 's' → logprob: -4.8947434425354
    10. '<|end|>' → logprob: -4.8947434425354

Token 1923: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15335571765899658
    2. '#' → logprob: -3.028355598449707
    3. '```' → logprob: -3.028355598449707
    4. 'final' → logprob: -4.028355598449707
    5. ' s' → logprob: -5.153355598449707
    6. '.' → logprob: -5.903355598449707
    7. '``' → logprob: -6.028355598449707
    8. '=' → logprob: -6.153355598449707
    9. 'digits' → logprob: -6.153355598449707
    10. '
' → logprob: -6.278355598449707

Token 1924: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.48461779952049255
    2. ')' → logprob: -1.234617829322815
    3. 'print' → logprob: -2.4846177101135254
    4. 'for' → logprob: -5.984617710113525
    5. ')
' → logprob: -6.734617710113525
    6. '#' → logprob: -6.734617710113525
    7. '```' → logprob: -6.859617710113525
    8. '(ans' → logprob: -6.984617710113525
    9. 'res' → logprob: -7.109617710113525
    10. '+' → logprob: -7.609617710113525

Token 1925: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07895874977111816
    2. ')' → logprob: -2.953958749771118
    3. '```' → logprob: -5.328958511352539
    4. '
' → logprob: -5.703958511352539
    5. '+' → logprob: -5.953958511352539
    6. ' but' → logprob: -6.078958511352539
    7. 'ans' → logprob: -6.328958511352539
    8. 'but' → logprob: -6.453958511352539
    9. 'if' → logprob: -6.828958511352539
    10. '-' → logprob: -6.953958511352539

Token 1926: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.002166317543014884
    2. 'we' → logprob: -7.127166271209717
    3. 'should' → logprob: -7.377166271209717
    4. '```' → logprob: -8.377166748046875
    5. 'needs' → logprob: -9.252166748046875
    6. 'the' → logprob: -9.502166748046875
    7. 'it' → logprob: -9.627166748046875
    8. ' #' → logprob: -10.502166748046875
    9. 'ans' → logprob: -10.627166748046875
    10. 'only' → logprob: -10.627166748046875

Token 1927: ' want' (ID: 1682)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.5945672392845154
    2. '#' → logprob: -0.9695672392845154
    3. ' need' → logprob: -4.09456729888916
    4. 'want' → logprob: -4.09456729888916
    5. 'should' → logprob: -4.71956729888916
    6. ' want' → logprob: -5.09456729888916
    7. '
' → logprob: -5.21956729888916
    8. 'return' → logprob: -5.71956729888916
    9. 'only' → logprob: -5.96956729888916
    10. '+' → logprob: -6.09456729888916

Token 1928: ' <' (ID: 464)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.016367707401514053
    2. 'se' → logprob: -5.0163679122924805
    3. 'only' → logprob: -5.0163679122924805
    4. 'to' → logprob: -7.1413679122924805
    5. '```' → logprob: -8.01636791229248
    6. ' sequences' → logprob: -8.51636791229248
    7. 'exclude' → logprob: -8.64136791229248
    8. 'strict' → logprob: -8.76636791229248
    9. ' only' → logprob: -8.76636791229248
    10. 'count' → logprob: -8.89136791229248

Token 1929: ' s' (ID: 265)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3197194039821625
    2. 'res' → logprob: -1.4447194337844849
    3. '#' → logprob: -4.319719314575195
    4. '```' → logprob: -4.694719314575195
    5. '
' → logprob: -5.569719314575195
    6. 'dfs' → logprob: -5.694719314575195
    7. '+' → logprob: -6.819719314575195
    8. 's' → logprob: -6.944719314575195
    9. '-' → logprob: -7.194719314575195
    10. 'dig' → logprob: -7.194719314575195

Token 1930: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6603807210922241
    2. '```' → logprob: -1.9103807210922241
    3. 'res' → logprob: -2.0353808403015137
    4. '-' → logprob: -2.4103808403015137
    5. ')' → logprob: -3.5353808403015137
    6. '+' → logprob: -4.035380840301514
    7. '#' → logprob: -4.160380840301514
    8. 'dfs' → logprob: -4.410380840301514
    9. '
' → logprob: -4.535380840301514
    10. '   ' → logprob: -5.160380840301514

Token 1931: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6891751885414124
    2. 'res' → logprob: -0.9391751885414124
    3. 'ans' → logprob: -2.8141751289367676
    4. '```' → logprob: -3.3141751289367676
    5. '
' → logprob: -6.064175128936768
    6. 'dfs' → logprob: -6.189175128936768
    7. '-' → logprob: -6.814175128936768
    8. '``' → logprob: -6.939175128936768
    9. 'return' → logprob: -7.564175128936768
    10. 'for' → logprob: -7.689175128936768

Token 1932: ' subtract' (ID: 71973)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05327261611819267
    2. 'res' → logprob: -3.1782727241516113
    3. 'return' → logprob: -5.428272724151611
    4. '#' → logprob: -5.678272724151611
    5. 'dfs' → logprob: -6.803272724151611
    6. '```' → logprob: -7.678272724151611
    7. '
' → logprob: -8.553272247314453
    8. 'continue' → logprob: -8.928272247314453
    9. 'result' → logprob: -9.053272247314453
    10. 'answer' → logprob: -9.178272247314453

Token 1933: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5480960011482239
    2. 'ans' → logprob: -0.9230960011482239
    3. '-' → logprob: -4.298096179962158
    4. '```' → logprob: -4.798096179962158
    5. 'res' → logprob: -6.798096179962158
    6. '`' → logprob: -7.173096179962158
    7. '``' → logprob: -8.548095703125
    8. '(ans' → logprob: -8.798095703125
    9. '
' → logprob: -8.923095703125
    10. ' ans' → logprob: -9.048095703125

Token 1934: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048191213863901794
    2. 'ans' → logprob: -7.875482082366943
    3. '```' → logprob: -9.375481605529785
    4. '`' → logprob: -11.500481605529785
    5. 'dfs' → logprob: -12.875481605529785
    6. '``' → logprob: -13.625481605529785
    7. '
' → logprob: -13.750481605529785
    8. '   ' → logprob: -14.125481605529785
    9. '+' → logprob: -14.875481605529785
    10. ' ' → logprob: -15.250481605529785

Token 1935: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.034885991364717484
    2. 'ans' → logprob: -3.409885883331299
    3. '
' → logprob: -7.034885883331299
    4. 'res' → logprob: -8.909886360168457
    5. 'result' → logprob: -9.284886360168457
    6. 'answer' → logprob: -10.159886360168457
    7. 'final' → logprob: -10.534886360168457
    8. '```' → logprob: -10.784886360168457
    9. '#' → logprob: -11.909886360168457
    10. 'output' → logprob: -12.034886360168457

Token 1936: ' applicable' (ID: 12781)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.23572784662246704
    2. 'less' → logprob: -2.1107277870178223
    3. 'new' → logprob: -2.4857277870178223
    4. 'ans' → logprob: -6.610727787017822
    5. 'sum' → logprob: -6.735727787017822
    6. 's' → logprob: -6.735727787017822
    7. 'pos' → logprob: -7.610727787017822
    8. 'dfs' → logprob: -8.11072826385498
    9. 'digits' → logprob: -8.48572826385498
    10. '(not' → logprob: -8.61072826385498

Token 1937: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15095899999141693
    2. 'ans' → logprob: -2.150959014892578
    3. 'print' → logprob: -5.150959014892578
    4. '
' → logprob: -5.275959014892578
    5. 'res' → logprob: -5.275959014892578
    6. '-' → logprob: -6.275959014892578
    7. 'result' → logprob: -6.400959014892578
    8. 'return' → logprob: -6.775959014892578
    9. '(ans' → logprob: -7.275959014892578
    10. '```' → logprob: -7.275959014892578

Token 1938: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3280865252017975
    2. 'if' → logprob: -1.828086495399475
    3. 'print' → logprob: -2.5780866146087646
    4. '
' → logprob: -3.9530866146087646
    5. 'result' → logprob: -4.5780863761901855
    6. 'res' → logprob: -4.7030863761901855
    7. '```' → logprob: -6.3280863761901855
    8. 'return' → logprob: -6.4530863761901855
    9. 'answer' → logprob: -8.078086853027344
    10. '-' → logprob: -8.578086853027344

Token 1939: ' but' (ID: 889)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12462923675775528
    2. 'if' → logprob: -2.749629259109497
    3. 'ans' → logprob: -2.999629259109497
    4. 'result' → logprob: -5.999629020690918
    5. 'res' → logprob: -8.374629020690918
    6. 'final' → logprob: -8.624629020690918
    7. '
' → logprob: -8.749629020690918
    8. '#' → logprob: -9.249629020690918
    9. '```' → logprob: -9.249629020690918
    10. 'answer' → logprob: -9.499629020690918

Token 1940: ' dfs' (ID: 51252)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.105413556098938
    2. 'new' → logprob: -1.480413556098938
    3. 's' → logprob: -1.855413556098938
    4. 'not' → logprob: -2.2304134368896484
    5. '#' → logprob: -2.4804134368896484
    6. 'dig' → logprob: -3.7304134368896484
    7. 'digits' → logprob: -4.230413436889648
    8. 'prod' → logprob: -4.355413436889648
    9. '(ans' → logprob: -4.605413436889648
    10. 'sum' → logprob: -4.980413436889648

Token 1941: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.0012157135643064976
    2. 'final' → logprob: -6.751215934753418
    3. '```' → logprob: -11.501215934753418
    4. 'def' → logprob: -11.626215934753418
    5. '_return' → logprob: -12.626215934753418
    6. '_sum' → logprob: -12.751215934753418
    7. '_result' → logprob: -12.876215934753418
    8. '_finalize' → logprob: -13.001215934753418
    9. 'Final' → logprob: -13.751215934753418
    10. '
' → logprob: -13.876215934753418

Token 1942: ' counts' (ID: 28991)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0910913273692131
    2. '(pos' → logprob: -3.4660913944244385
    3. 'pos' → logprob: -3.8410913944244385
    4. 'def' → logprob: -4.341091156005859
    5. '```' → logprob: -5.341091156005859
    6. '
' → logprob: -5.591091156005859
    7. '(
' → logprob: -5.966091156005859
    8. '   ' → logprob: -6.091091156005859
    9. 'return' → logprob: -7.091091156005859
    10. 'if' → logprob: -7.341091156005859

Token 1943: ' sequences' (ID: 45665)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1482611894607544
    2. 'if' → logprob: -2.398261070251465
    3. 'print' → logprob: -3.148261070251465
    4. 'res' → logprob: -6.523261070251465
    5. '-' → logprob: -6.898261070251465
    6. '
' → logprob: -7.398261070251465
    7. '#' → logprob: -8.148261070251465
    8. '```' → logprob: -8.648261070251465
    9. 'result' → logprob: -8.898261070251465
    10. 'final' → logprob: -10.023261070251465

Token 1944: ' with' (ID: 483)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18450511991977692
    2. ' -' → logprob: -3.0595052242279053
    3. ')' → logprob: -3.1845052242279053
    4. '<|end|>' → logprob: -4.184504985809326
    5. '+' → logprob: -4.309504985809326
    6. 'if' → logprob: -4.809504985809326
    7. '(ans' → logprob: -4.934504985809326
    8. '#' → logprob: -4.934504985809326
    9. '(' → logprob: -5.559504985809326
    10. '
' → logprob: -5.559504985809326

Token 1945: ' prod' (ID: 10207)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.765132486820221
    2. 'pos' → logprob: -1.0151324272155762
    3. '(pos' → logprob: -2.515132427215576
    4. 'same' → logprob: -3.265132427215576
    5. 'equal' → logprob: -4.390132427215576
    6. 'new' → logprob: -4.890132427215576
    7. 'exact' → logprob: -4.890132427215576
    8. 'pro' → logprob: -5.390132427215576
    9. '(pro' → logprob: -5.640132427215576
    10. 'prod' → logprob: -5.765132427215576

Token 1946: ' ==' (ID: 951)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.05348632484674454
    2. 's' → logprob: -4.428486347198486
    3. '_final' → logprob: -4.428486347198486
    4. '_factor' → logprob: -4.928486347198486
    5. '#' → logprob: -5.803486347198486
    6. ')' → logprob: -6.178486347198486
    7. 'final' → logprob: -6.428486347198486
    8. '==' → logprob: -6.428486347198486
    9. '_f' → logprob: -6.678486347198486
    10. '_' → logprob: -6.678486347198486

Token 1947: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -5.264322317088954e-05
    2. ' prod' → logprob: -10.000052452087402
    3. '```' → logprob: -12.500052452087402
    4. '(prod' → logprob: -13.000052452087402
    5. '(' → logprob: -14.375052452087402
    6. '
' → logprob: -15.500052452087402
    7. '``' → logprob: -15.875052452087402
    8. '.prod' → logprob: -16.87505340576172
    9. '_prod' → logprob: -16.87505340576172
    10. 'pro' → logprob: -17.62505340576172

Token 1948: '_s' (ID: 1278)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.3307696282863617
    2. '_s' → logprob: -1.330769658088684
    3. '_final' → logprob: -4.8307695388793945
    4. '_f' → logprob: -6.0807695388793945
    5. '```' → logprob: -6.0807695388793945
    6. 's' → logprob: -6.8307695388793945
    7. '_' → logprob: -7.5807695388793945
    8. 'factor' → logprob: -7.9557695388793945
    9. '
' → logprob: -7.9557695388793945
    10. '_equal' → logprob: -8.205769538879395

Token 1949: '_factor' (ID: 43757)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4637102782726288
    2. 'ans' → logprob: -1.4637103080749512
    3. 'if' → logprob: -2.588710308074951
    4. 'result' → logprob: -3.838710308074951
    5. 'res' → logprob: -3.963710308074951
    6. '
' → logprob: -3.963710308074951
    7. '#' → logprob: -6.588710308074951
    8. '-' → logprob: -6.838710308074951
    9. 'final' → logprob: -7.588710308074951
    10. 'return' → logprob: -7.713710308074951

Token 1950: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.27089181542396545
    2. 'print' → logprob: -1.645891785621643
    3. 'if' → logprob: -3.3958919048309326
    4. 'res' → logprob: -5.2708916664123535
    5. '
' → logprob: -6.0208916664123535
    6. '```' → logprob: -6.8958916664123535
    7. ')
' → logprob: -7.5208916664123535
    8. ')' → logprob: -7.5208916664123535
    9. '-' → logprob: -8.145892143249512
    10. 'result' → logprob: -8.395892143249512

Token 1951: ' sum' (ID: 4215)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7219551801681519
    2. '#' → logprob: -1.4719551801681519
    3. '
' → logprob: -2.3469552993774414
    4. ')' → logprob: -3.3469552993774414
    5. 'ans' → logprob: -3.5969552993774414
    6. '```' → logprob: -3.8469552993774414
    7. 'res' → logprob: -3.9719552993774414
    8. '0' → logprob: -4.221955299377441
    9. 'if' → logprob: -4.221955299377441
    10. 'and' → logprob: -4.596955299377441

Token 1952: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2336130142211914
    2. ' ==' → logprob: -1.9836130142211914
    3. 'and' → logprob: -1.9836130142211914
    4. ' -' → logprob: -2.1086130142211914
    5. 'd' → logprob: -2.3586130142211914
    6. ' >' → logprob: -2.9836130142211914
    7. '>' → logprob: -3.1086130142211914
    8. '-' → logprob: -3.6086130142211914
    9. ' !=' → logprob: -3.8586130142211914
    10. '_s' → logprob: -3.9836130142211914

Token 1953: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -5.157039049663581e-05
    2. ' sum' → logprob: -10.000051498413086
    3. 'prod' → logprob: -12.750051498413086
    4. '```' → logprob: -13.375051498413086
    5. 'ans' → logprob: -13.875051498413086
    6. '``' → logprob: -15.750051498413086
    7. 's' → logprob: -16.125051498413086
    8. '=sum' → logprob: -16.250051498413086
    9. '`' → logprob: -16.375051498413086
    10. '(sum' → logprob: -16.375051498413086

Token 1954: '_s' (ID: 1278)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8871305584907532
    2. '-' → logprob: -1.2621304988861084
    3. 'res' → logprob: -2.3871304988861084
    4. 'if' → logprob: -2.6371304988861084
    5. '
' → logprob: -3.1371304988861084
    6. '```' → logprob: -3.5121304988861084
    7. ')' → logprob: -4.3871307373046875
    8. ' -' → logprob: -4.5121307373046875
    9. '(ans' → logprob: -4.5121307373046875
    10. ')
' → logprob: -4.8871307373046875

Token 1955: '

' (ID: 279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7403960227966309
    2. 'print' → logprob: -0.7403960227966309
    3. 'if' → logprob: -3.865396022796631
    4. '
' → logprob: -4.365396022796631
    5. 'res' → logprob: -4.865396022796631
    6. 'result' → logprob: -5.865396022796631
    7. '-' → logprob: -8.240396499633789
    8. '```' → logprob: -8.240396499633789
    9. 'return' → logprob: -8.365396499633789
    10. ')' → logprob: -8.365396499633789

Token 1956: 'count' (ID: 5420)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23782409727573395
    2. 'ans' → logprob: -2.1128242015838623
    3. 'if' → logprob: -2.4878242015838623
    4. 'res' → logprob: -5.987823963165283
    5. '
' → logprob: -6.112823963165283
    6. 'result' → logprob: -6.112823963165283
    7. '```' → logprob: -8.487824440002441
    8. 'final' → logprob: -8.612824440002441
    9. 'answer' → logprob: -9.112824440002441
    10. 'subtract' → logprob: -9.862824440002441

Token 1957: '_eq' (ID: 28373)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43864014744758606
    2. ' =' → logprob: -1.0636401176452637
    3. '+=' → logprob: -5.938640117645264
    4. ' +=' → logprob: -5.938640117645264
    5. 'count' → logprob: -6.938640117645264
    6. '_count' → logprob: -7.063640117645264
    7. '_' → logprob: -7.313640117645264
    8. 's' → logprob: -7.438640117645264
    9. '_final' → logprob: -8.063640594482422
    10. '(count' → logprob: -8.438640594482422

Token 1958: '_prod' (ID: 78031)
  Prédit: '_eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.0009161015041172504
    2. '_equal' → logprob: -8.500916481018066
    3. '_count' → logprob: -9.000916481018066
    4. '_final' → logprob: -9.000916481018066
    5. ' =' → logprob: -9.125916481018066
    6. '=' → logprob: -9.250916481018066
    7. 'eq' → logprob: -9.500916481018066
    8. '_sequences' → logprob: -10.000916481018066
    9. '_equals' → logprob: -10.125916481018066
    10. '_' → logprob: -10.250916481018066

Token 1959: '_sum' (ID: 29859)
  Prédit: '_eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.2580905556678772
    2. '_factor' → logprob: -2.0080904960632324
    3. '_equal' → logprob: -2.6330904960632324
    4. '_final' → logprob: -4.758090496063232
    5. '_sum' → logprob: -5.508090496063232
    6. '_equals' → logprob: -5.758090496063232
    7. '_count' → logprob: -6.883090496063232
    8. 's' → logprob: -6.883090496063232
    9. ' =' → logprob: -7.008090496063232
    10. '=_' → logprob: -7.758090496063232

Token 1960: '_less' (ID: 154196)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9382124543190002
    2. '=' → logprob: -1.3132123947143555
    3. '_final' → logprob: -2.1882123947143555
    4. '_equal' → logprob: -2.8132123947143555
    5. '_factor' → logprob: -3.0632123947143555
    6. '_count' → logprob: -3.1882123947143555
    7. '_eq' → logprob: -3.3132123947143555
    8. 's' → logprob: -4.3132123947143555
    9. '_sum' → logprob: -4.4382123947143555
    10. '_' → logprob: -5.3132123947143555

Token 1961: '_int' (ID: 12285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15808433294296265
    2. ' =' → logprob: -2.4080843925476074
    3. '_than' → logprob: -3.9080843925476074
    4. '_flag' → logprob: -4.033084392547607
    5. '_sum' → logprob: -5.783084392547607
    6. '_s' → logprob: -5.783084392547607
    7. 's' → logprob: -6.033084392547607
    8. '_=' → logprob: -6.158084392547607
    9. '_equal' → logprob: -6.408084392547607
    10. '_final' → logprob: -6.408084392547607

Token 1962: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1657131165266037
    2. ' =' → logprob: -1.9157130718231201
    3. 's' → logprob: -6.165713310241699
    4. 'ences' → logprob: -6.665713310241699
    5. 'final' → logprob: -7.290713310241699
    6. '_final' → logprob: -7.790713310241699
    7. '_=' → logprob: -8.1657133102417
    8. '=(' → logprob: -8.7907133102417
    9. '_' → logprob: -8.9157133102417
    10. '_sequences' → logprob: -9.2907133102417

Token 1963: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0024792237672954798
    2. ' dfs' → logprob: -6.002479076385498
    3. '0' → logprob: -12.752479553222656
    4. 'dp' → logprob: -15.127479553222656
    5. 'df' → logprob: -15.752479553222656
    6. 'ans' → logprob: -16.127479553222656
    7. '
' → logprob: -17.002479553222656
    8. '   ' → logprob: -17.752479553222656
    9. '```' → logprob: -18.377479553222656
    10. 'd' → logprob: -18.502479553222656

Token 1964: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.00015860427811276168
    2. 'final' → logprob: -8.750158309936523
    3. 'Final' → logprob: -16.750158309936523
    4. '```' → logprob: -17.375158309936523
    5. '(final' → logprob: -18.500158309936523
    6. ' final' → logprob: -19.625158309936523
    7. '_finalize' → logprob: -19.750158309936523
    8. '_FINAL' → logprob: -20.125158309936523
    9. '_fin' → logprob: -20.125158309936523
    10. '	final' → logprob: -20.125158309936523

Token 1965: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00047940885997377336
    2. '(
' → logprob: -8.750479698181152
    3. '```' → logprob: -8.750479698181152
    4. '0' → logprob: -9.875479698181152
    5. '(final' → logprob: -11.000479698181152
    6. ' (' → logprob: -11.125479698181152
    7. '<|end|>' → logprob: -11.375479698181152
    8. '(n' → logprob: -11.375479698181152
    9. 'final' → logprob: -11.500479698181152
    10. '(None' → logprob: -11.625479698181152

Token 1966: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'n' → logprob: -17.625
    3. ' ' → logprob: -18.625
    4. '(' → logprob: -19.0
    5. ')' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. 's' → logprob: -21.75
    8. '   ' → logprob: -22.25
    9. '۰' → logprob: -22.25
    10. '+' → logprob: -22.75

Token 1967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007337473216466606
    2. ',s' → logprob: -7.500733852386475
    3. ',n' → logprob: -9.500733375549316
    4. ' ,' → logprob: -10.500733375549316
    5. ',len' → logprob: -11.000733375549316
    6. '+' → logprob: -11.375733375549316
    7. '```' → logprob: -11.750733375549316
    8. ',
' → logprob: -11.875733375549316
    9. 's' → logprob: -11.875733375549316
    10. '+,' → logprob: -12.000733375549316

Token 1968: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0007721052970737219
    2. ' sum' → logprob: -7.500771999359131
    3. 'n' → logprob: -8.750772476196289
    4. '0' → logprob: -10.250772476196289
    5. 's' → logprob: -10.625772476196289
    6. ' n' → logprob: -14.000772476196289
    7. ' ' → logprob: -15.750772476196289
    8. '```' → logprob: -17.75077247619629
    9. ' s' → logprob: -18.12577247619629
    10. '(sum' → logprob: -18.12577247619629

Token 1969: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.47410091757774353
    2. 's' → logprob: -0.9741009473800659
    3. 'sum' → logprob: -11.224101066589355
    4. '```' → logprob: -12.474101066589355
    5. 'n' → logprob: -12.599101066589355
    6. '0' → logprob: -12.974101066589355
    7. '_sum' → logprob: -14.974101066589355
    8. 'с' → logprob: -15.099101066589355
    9. 'd' → logprob: -16.22410011291504
    10. 'count' → logprob: -16.84910011291504

Token 1970: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000474521511932835
    2. ',(' → logprob: -8.25047492980957
    3. ' ,' → logprob: -8.50047492980957
    4. '(' → logprob: -12.00047492980957
    5. '```' → logprob: -13.37547492980957
    6. '   ' → logprob: -14.12547492980957
    7. ',
' → logprob: -14.75047492980957
    8. '0' → logprob: -15.00047492980957
    9. ')' → logprob: -15.87547492980957
    10. ' (' → logprob: -16.00047492980957

Token 1971: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.7755875129951164e-05
    2. ' (' → logprob: -10.00004768371582
    3. 'prod' → logprob: -13.25004768371582
    4. '0' → logprob: -14.75004768371582
    5. '   ' → logprob: -16.25004768371582
    6. ' ' → logprob: -17.50004768371582
    7. '(prod' → logprob: -17.62504768371582
    8. '     ' → logprob: -17.87504768371582
    9. '    ' → logprob: -18.25004768371582
    10. '  ' → logprob: -18.75004768371582

Token 1972: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. ' ' → logprob: -18.75
    4. '   ' → logprob: -19.25
    5. '۰' → logprob: -19.5
    6. 'prod' → logprob: -19.5
    7. '000' → logprob: -20.125
    8. ')' → logprob: -20.25
    9. '```' → logprob: -20.375
    10. '[' → logprob: -21.25

Token 1973: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002805821830406785
    2. '0' → logprob: -5.877805709838867
    3. ',
' → logprob: -14.752805709838867
    4. ' ,' → logprob: -15.002805709838867
    5. '```' → logprob: -15.377805709838867
    6. ' ' → logprob: -17.252805709838867
    7. '000' → logprob: -17.252805709838867
    8. '``' → logprob: -18.002805709838867
    9. '   ' → logprob: -18.252805709838867
    10. '(' → logprob: -18.377805709838867

Token 1974: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.75
    3. '۰' → logprob: -21.75
    4. '   ' → logprob: -22.375
    5. '000' → logprob: -22.5
    6. '00' → logprob: -23.375
    7. '```' → logprob: -23.5
    8. '０' → logprob: -23.625
    9. '
' → logprob: -23.625
    10. 'False' → logprob: -24.0

Token 1975: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ',' → logprob: -10.500027656555176
    3. ' ' → logprob: -16.87502670288086
    4. '   ' → logprob: -18.50002670288086
    5. '```' → logprob: -18.50002670288086
    6. '000' → logprob: -20.25002670288086
    7. '``' → logprob: -20.37502670288086
    8. '
' → logprob: -20.62502670288086
    9. '00' → logprob: -21.12502670288086
    10. ',
' → logprob: -21.50002670288086

Token 1976: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -18.125
    3. ' ' → logprob: -18.875
    4. '
' → logprob: -21.875
    5. 'prod' → logprob: -22.125
    6. '000' → logprob: -22.625
    7. '   ' → logprob: -23.125
    8. '```' → logprob: -23.25
    9. 'False' → logprob: -23.5
    10. '۰' → logprob: -23.5

Token 1977: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ',' → logprob: -10.750021934509277
    3. '(' → logprob: -16.87502098083496
    4. ' ' → logprob: -17.50002098083496
    5. '   ' → logprob: -17.62502098083496
    6. '00' → logprob: -20.00002098083496
    7. '     ' → logprob: -20.37502098083496
    8. '000' → logprob: -20.62502098083496
    9. '       ' → logprob: -21.25002098083496
    10. '  ' → logprob: -21.37502098083496

Token 1978: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'False' → logprob: -17.75
    3. ' ' → logprob: -18.5
    4. '   ' → logprob: -20.625
    5. '
' → logprob: -21.75
    6. '```' → logprob: -22.5
    7. 'false' → logprob: -22.75
    8. '(' → logprob: -22.875
    9. '4' → logprob: -23.125
    10. '     ' → logprob: -23.25

Token 1979: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.62500286102295
    3. 'True' → logprob: -14.62500286102295
    4. ',true' → logprob: -14.87500286102295
    5. '   ' → logprob: -15.00000286102295
    6. '```' → logprob: -16.125001907348633
    7. ',false' → logprob: -16.750001907348633
    8. 'False' → logprob: -17.125001907348633
    9. ')' → logprob: -17.250001907348633
    10. ',None' → logprob: -17.625001907348633

Token 1980: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.704273118884885e-07
    2. ' False' → logprob: -14.250000953674316
    3. '(False' → logprob: -19.875
    4. 'True' → logprob: -20.25
    5. '   ' → logprob: -21.625
    6. '0' → logprob: -23.375
    7. '
' → logprob: -24.25
    8. '=False' → logprob: -25.875
    9. 'false' → logprob: -26.0
    10. 'FALSE' → logprob: -26.625

Token 1981: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.837811088189483e-05
    2. ')+' → logprob: -9.875068664550781
    3. ')
' → logprob: -11.750068664550781
    4. '+' → logprob: -12.000068664550781
    5. '-' → logprob: -14.250068664550781
    6. ')`' → logprob: -14.250068664550781
    7. ')#' → logprob: -15.125068664550781
    8. ')-' → logprob: -15.125068664550781
    9. '-)' → logprob: -15.375068664550781
    10. '```' → logprob: -15.500068664550781

Token 1982: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4256397783756256
    2. '
' → logprob: -1.3006397485733032
    3. 'ans' → logprob: -2.8006398677825928
    4. '-' → logprob: -4.800639629364014
    5. 'print' → logprob: -6.300639629364014
    6. '```' → logprob: -6.550639629364014
    7. 'return' → logprob: -7.675639629364014
    8. 'count' → logprob: -8.175640106201172
    9. ' if' → logprob: -8.300640106201172
    10. 'answer' → logprob: -8.425640106201172

Token 1983: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004892880679108202
    2. '(' → logprob: -7.625489234924316
    3. '```' → logprob: -14.375489234924316
    4. ' (' → logprob: -15.250489234924316
    5. ' ' → logprob: -15.625489234924316
    6. 'int' → logprob: -16.250490188598633
    7. '(int' → logprob: -16.750490188598633
    8. '((' → logprob: -18.375490188598633
    9. '(True' → logprob: -18.750490188598633
    10. '(
' → logprob: -18.750490188598633

Token 1984: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019362468738108873
    2. '(' → logprob: -6.251936435699463
    3. 'int' → logprob: -12.501935958862305
    4. '(int' → logprob: -12.876935958862305
    5. ' (' → logprob: -13.751935958862305
    6. ' ' → logprob: -15.751935958862305
    7. '```' → logprob: -16.501935958862305
    8. '[int' → logprob: -17.501935958862305
    9. '[' → logprob: -17.626935958862305
    10. '
' → logprob: -17.751935958862305

Token 1985: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.750001907348633
    3. '
' → logprob: -14.625001907348633
    4. ' print' → logprob: -15.375001907348633
    5. '#print' → logprob: -15.375001907348633
    6. 'ans' → logprob: -15.750001907348633
    7. 'return' → logprob: -15.875001907348633
    8. '#' → logprob: -16.875001907348633
    9. ')' → logprob: -19.125001907348633
    10. '<|end|>' → logprob: -19.250001907348633

Token 1986: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.619311974034645e-05
    2. '```' → logprob: -10.250036239624023
    3. '
' → logprob: -14.875036239624023
    4. '``' → logprob: -15.875036239624023
    5. 'ans' → logprob: -16.375036239624023
    6. ' print' → logprob: -16.500036239624023
    7. '#print' → logprob: -17.375036239624023
    8. '#' → logprob: -20.125036239624023
    9. 'return' → logprob: -20.500036239624023
    10. '  
' → logprob: -22.000036239624023

Token 1987: ' +=' (ID: 2757)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1988: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: 0.0
    2. ' count' → logprob: -17.25
    3. '(count' → logprob: -22.5
    4. '$count' → logprob: -26.125
    5. '[count' → logprob: -26.25
    6. '	count' → logprob: -27.25
    7. 'max' → logprob: -28.125
    8. '
' → logprob: -28.25
    9. 'counts' → logprob: -28.375
    10. '.count' → logprob: -29.125

Token 1989: '_eq' (ID: 28373)
  Prédit: '_eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eq' → logprob: -0.0007185076246969402
    2. 'eq' → logprob: -8.375718116760254
    3. '=' → logprob: -8.500718116760254
    4. '_' → logprob: -8.500718116760254
    5. '_ans' → logprob: -10.125718116760254
    6. 's' → logprob: -11.500718116760254
    7. ' =' → logprob: -12.125718116760254
    8. '_=' → logprob: -12.375718116760254
    9. '_s' → logprob: -12.750718116760254
    10. '```' → logprob: -12.875718116760254

Token 1990: '_prod' (ID: 78031)
  Prédit: '_prod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prod' → logprob: -0.0005603004829026759
    2. 'prod' → logprob: -7.750560283660889
    3. '_sum' → logprob: -9.625560760498047
    4. '_eq' → logprob: -9.750560760498047
    5. '_final' → logprob: -12.625560760498047
    6. '_prob' → logprob: -13.875560760498047
    7. '```' → logprob: -15.375560760498047
    8. '_pro' → logprob: -16.000560760498047
    9. 'sum' → logprob: -16.000560760498047
    10. 'Prod' → logprob: -16.125560760498047

Token 1991: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.226628895296017e-06
    2. 'sum' → logprob: -11.875007629394531
    3. '_count' → logprob: -17.50000762939453
    4. '_prod' → logprob: -17.75000762939453
    5. '_s' → logprob: -18.00000762939453
    6. '```' → logprob: -18.12500762939453
    7. '_final' → logprob: -18.62500762939453
    8. 'int' → logprob: -18.87500762939453
    9. '
' → logprob: -19.12500762939453
    10. ' sum' → logprob: -19.25000762939453

Token 1992: '_less' (ID: 154196)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.007570892106741667
    2. '_eq' → logprob: -5.382570743560791
    3. '_factor' → logprob: -6.632570743560791
    4. 'sum' → logprob: -7.257570743560791
    5. '_equal' → logprob: -7.882570743560791
    6. '_s' → logprob: -8.88257122039795
    7. 'eq' → logprob: -9.50757122039795
    8. '
' → logprob: -9.63257122039795
    9. 's' → logprob: -9.88257122039795
    10. '_less' → logprob: -9.88257122039795

Token 1993: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.07615836709737778
    2. '_factor' → logprob: -3.201158285140991
    3. '_prod' → logprob: -4.07615852355957
    4. '_flag' → logprob: -4.95115852355957
    5. '_sum' → logprob: -5.07615852355957
    6. 'prod' → logprob: -7.82615852355957
    7. '_fact' → logprob: -7.95115852355957
    8. '_' → logprob: -8.32615852355957
    9. '_s' → logprob: -8.32615852355957
    10. '_f' → logprob: -8.70115852355957

Token 1994: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.828512363834307e-05
    2. '```' → logprob: -9.375088691711426
    3. '
' → logprob: -13.500088691711426
    4. '#print' → logprob: -14.500088691711426
    5. '<|end|>' → logprob: -14.500088691711426
    6. ' print' → logprob: -14.750088691711426
    7. '#' → logprob: -14.750088691711426
    8. '``' → logprob: -15.875088691711426
    9. 'return' → logprob: -17.37508773803711
    10. '\' → logprob: -18.12508773803711

Token 1995: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012439649435691535
    2. '```' → logprob: -9.000123977661133
    3. '``' → logprob: -14.625123977661133
    4. '
' → logprob: -15.125123977661133
    5. '#print' → logprob: -16.000123977661133
    6. ' print' → logprob: -16.125123977661133
    7. 'ans' → logprob: -16.875123977661133
    8. '#' → logprob: -17.250123977661133
    9. '<|end|>' → logprob: -18.375123977661133
    10. '\' → logprob: -20.125123977661133

Token 1996: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.7835754988482222e-05
    2. 'ans' → logprob: -11.000018119812012
    3. '(
' → logprob: -14.750018119812012
    4. '(' → logprob: -15.000018119812012
    5. '```' → logprob: -15.625018119812012
    6. '(f' → logprob: -16.500017166137695
    7. '(answer' → logprob: -16.875017166137695
    8. ' (' → logprob: -17.375017166137695
    9. '()' → logprob: -17.625017166137695
    10. '('' → logprob: -17.625017166137695

Token 1997: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028159678913652897
    2. ')
' → logprob: -8.75028133392334
    3. '```' → logprob: -10.12528133392334
    4. '()' → logprob: -10.50028133392334
    5. '#' → logprob: -11.50028133392334
    6. '())' → logprob: -11.75028133392334
    7. '(' → logprob: -12.00028133392334
    8. '')' → logprob: -12.00028133392334
    9. '[' → logprob: -12.25028133392334
    10. '**' → logprob: -12.62528133392334


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1995
Tokens correctement prédits (1ère position, stricte): 699
Tokens correctement prédits (1ère position, avec adaptation): 749
Tokens correctement prédits (top 10): 1472
Précision stricte (1ère position): 35.04%
Précision adaptée (1ère position): 37.54%
Précision (top 10): 73.78%
================================================================================
