================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def main():
    input = sys.stdin.readline
    while True:
        n = int(input())
        if n == 0:
            break
        groups = {}
        order = []
        for _ in range(n):
            line = input().strip()
            g, mems = line.split(':')
            mems = mems[:-1].split(',')  # remove trailing '.' and split
            groups[g] = mems
            order.append(g)
        memo = {}
        def get_members(g):
            if g in memo:
                return memo[g]
            res = set()
            for m in groups[g]:
                if m in groups:
                    res |= get_members(m)
                else:
                    res.add(m)
            memo[g] = res
            return res
        result = len(get_members(order[0]))
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4338620901107788
    2. '.' → logprob: -1.1838620901107788
    3. 'import' → logprob: -4.183862209320068
    4. '\' → logprob: -4.433862209320068
    5. 'newline' → logprob: -5.183862209320068
    6. '<|end|>' → logprob: -5.558862209320068
    7. '
' → logprob: -5.933862209320068
    8. '```' → logprob: -6.558862209320068
    9. '' → logprob: -7.058862209320068
    10. '<|end|>' → logprob: -7.183862209320068

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.4881879400927573e-05
    2. ' .' → logprob: -11.625035285949707
    3. '.import' → logprob: -12.250035285949707
    4. '[' → logprob: -12.750035285949707
    5. '.readline' → logprob: -13.125035285949707
    6. '.`' → logprob: -13.375035285949707
    7. '.user' → logprob: -13.375035285949707
    8. '.stdout' → logprob: -13.750035285949707
    9. '.exit' → logprob: -14.000035285949707
    10. '."""' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3509824872016907
    2. 't' → logprob: -2.600982427597046
    3. '_' → logprob: -2.725982427597046
    4. 'set' → logprob: -3.225982427597046
    5. '_trace' → logprob: -3.475982427597046
    6. 'x' → logprob: -3.850982427597046
    7. 's' → logprob: -4.475982666015625
    8. 'default' → logprob: -4.975982666015625
    9. 'sys' → logprob: -5.350982666015625
    10. 'ex' → logprob: -5.600982666015625

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0016172155737876892
    2. 'ursive' → logprob: -6.751617431640625
    3. 'ision' → logprob: -9.501617431640625
    4. 'set' → logprob: -9.626617431640625
    5. 'urs' → logprob: -9.626617431640625
    6. 'alc' → logprob: -10.376617431640625
    7. 'ursor' → logprob: -10.376617431640625
    8. '_limit' → logprob: -10.876617431640625
    9. 'sys' → logprob: -11.001617431640625
    10. 'ursively' → logprob: -11.001617431640625

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.28154218196868896
    2. '_limit' → logprob: -1.531542181968689
    3. '_depth' → logprob: -3.7815423011779785
    4. 'depth' → logprob: -5.1565423011779785
    5. 'error' → logprob: -9.53154182434082
    6. '('_' → logprob: -9.53154182434082
    7. '_' → logprob: -9.65654182434082
    8. ' limit' → logprob: -9.78154182434082
    9. '(' → logprob: -10.03154182434082
    10. '_limits' → logprob: -10.15654182434082

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6965333223342896
    2. '100' → logprob: -0.6965333223342896
    3. ' ' → logprob: -5.821533203125
    4. '300' → logprob: -8.696533203125
    5. '500' → logprob: -8.696533203125
    6. '1' → logprob: -10.571533203125
    7. '250' → logprob: -10.696533203125
    8. '999' → logprob: -11.196533203125
    9. '  ' → logprob: -12.196533203125
    10. '200' → logprob: -12.321533203125

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007129970006644726
    2. '00' → logprob: -5.757130146026611
    3. '000' → logprob: -5.757130146026611
    4. '4' → logprob: -7.382130146026611
    5. '6' → logprob: -9.007129669189453
    6. '5' → logprob: -11.507129669189453
    7. '```' → logprob: -12.007129669189453
    8. ')' → logprob: -12.257129669189453
    9. '3' → logprob: -12.382129669189453
    10. '**' → logprob: -12.382129669189453

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.87501335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00548038724809885
    2. '
' → logprob: -5.8804802894592285
    3. '```' → logprob: -6.7554802894592285
    4. '\' → logprob: -7.3804802894592285
    5. '

' → logprob: -7.8804802894592285
    6. '
' → logprob: -8.630480766296387
    7. '\n' → logprob: -9.255480766296387
    8. 'import' → logprob: -10.380480766296387
    9. '`' → logprob: -10.505480766296387
    10. 'class' → logprob: -10.505480766296387

Token 14: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16084302961826324
    2. ' factorial' → logprob: -2.1608431339263916
    3. ' dfs' → logprob: -3.7858431339263916
    4. ' fibonacci' → logprob: -5.6608428955078125
    5. ' space' → logprob: -6.6608428955078125
    6. ' factor' → logprob: -6.7858428955078125
    7. ' recursive' → logprob: -7.5358428955078125
    8. ' fib' → logprob: -7.6608428955078125
    9. ' main' → logprob: -7.7858428955078125
    10. '_' → logprob: -7.9108428955078125

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004128030501306057
    2. '():' → logprob: -5.8791279792785645
    3. '(:' → logprob: -7.0041279792785645
    4. '_' → logprob: -9.379128456115723
    5. ':' → logprob: -9.629128456115723
    6. '):' → logprob: -10.004128456115723
    7. '(**' → logprob: -10.129128456115723
    8. '("("' → logprob: -10.379128456115723
    9. '(":' → logprob: -10.629128456115723
    10. ' (' → logprob: -11.129128456115723

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004869518801569939
    2. '    
' → logprob: -6.50486946105957
    3. '\n' → logprob: -6.87986946105957
    4. '    ' → logprob: -7.37986946105957
    5. '```' → logprob: -7.50486946105957
    6. ' ' → logprob: -8.00486946105957
    7. '\' → logprob: -8.50486946105957
    8. 'n' → logprob: -9.12986946105957
    9. '(n' → logprob: -9.25486946105957
    10. '(' → logprob: -9.62986946105957

Token 17: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6033944487571716
    2. '   ' → logprob: -1.1033945083618164
    3. ' n' → logprob: -2.8533945083618164
    4. 'a' → logprob: -3.7283945083618164
    5. '    ' → logprob: -4.853394508361816
    6. 'x' → logprob: -5.228394508361816
    7. 'pass' → logprob: -5.353394508361816
    8. 'i' → logprob: -5.603394508361816
    9. ' ' → logprob: -5.603394508361816
    10. ' pass' → logprob: -5.853394508361816

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3556941747665405
    2. '_data' → logprob: -1.3556941747665405
    3. '_str' → logprob: -4.35569429397583
    4. '(' → logprob: -4.98069429397583
    5. 'data' → logprob: -4.98069429397583
    6. '_line' → logprob: -5.10569429397583
    7. '().' → logprob: -5.98069429397583
    8. '_text' → logprob: -6.73069429397583
    9. '_string' → logprob: -6.85569429397583
    10. '_' → logprob: -7.10569429397583

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12316076457500458
    2. ' input' → logprob: -2.3731608390808105
    3. 'input' → logprob: -4.4981608390808105
    4. 'sys' → logprob: -4.6231608390808105
    5. ' ' → logprob: -6.4981608390808105
    6. ' lambda' → logprob: -8.873160362243652
    7. ' open' → logprob: -10.873160362243652
    8. ' raw' → logprob: -10.998160362243652
    9. '	sys' → logprob: -11.123160362243652
    10. 'lambda' → logprob: -11.373160362243652

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00504779489710927
    2. '.' → logprob: -5.630047798156738
    3. '.readline' → logprob: -6.880047798156738
    4. ' .' → logprob: -8.505047798156738
    5. '.stdout' → logprob: -9.005047798156738
    6. '.std' → logprob: -10.255047798156738
    7. '.argv' → logprob: -10.755047798156738
    8. '.read' → logprob: -11.255047798156738
    9. '.input' → logprob: -12.255047798156738
    10. 'stdin' → logprob: -12.505047798156738

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004686799366027117
    2. '.read' → logprob: -5.3796868324279785
    3. '.' → logprob: -9.87968635559082
    4. 'read' → logprob: -11.37968635559082
    5. '.buffer' → logprob: -13.25468635559082
    6. '.readlines' → logprob: -13.37968635559082
    7. '.Read' → logprob: -15.12968635559082
    8. ' readline' → logprob: -16.00468635559082
    9. 'buffer' → logprob: -16.25468635559082
    10. '<|end|>' → logprob: -17.12968635559082

Token 22: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003484962275251746
    2. '()
' → logprob: -5.878484725952148
    3. '()\' → logprob: -8.128484725952148
    4. '(' → logprob: -8.503484725952148
    5. '   ' → logprob: -9.753484725952148
    6. '(
' → logprob: -10.253484725952148
    7. '().' → logprob: -11.003484725952148
    8. ' ()' → logprob: -11.253484725952148
    9. '
' → logprob: -11.378484725952148
    10. '()

' → logprob: -11.628484725952148

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039827749133110046
    2. '()' → logprob: -3.664827823638916
    3. '    
' → logprob: -4.914827823638916
    4. '(' → logprob: -5.789827823638916
    5. '(n' → logprob: -6.289827823638916
    6. 'n' → logprob: -8.164827346801758
    7. ')' → logprob: -8.289827346801758
    8. '()
' → logprob: -9.039827346801758
    9. '    ' → logprob: -9.539827346801758
    10. 'def' → logprob: -9.664827346801758

Token 24: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.581093966960907
    2. '()' → logprob: -1.2060940265655518
    3. '   ' → logprob: -2.5810940265655518
    4. '(' → logprob: -3.8310940265655518
    5. 'data' → logprob: -4.081093788146973
    6. '(n' → logprob: -4.581093788146973
    7. 'count' → logprob: -5.956093788146973
    8. 'a' → logprob: -6.206093788146973
    9. '    
' → logprob: -6.706093788146973
    10. 'x' → logprob: -6.831093788146973

Token 25: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011847454123198986
    2. 'True' → logprob: -4.511847496032715
    3. '(True' → logprob: -7.136847496032715
    4. ' ' → logprob: -13.136847496032715
    5. '()' → logprob: -13.886847496032715
    6. '  ' → logprob: -15.386847496032715
    7. ' Tru' → logprob: -15.886847496032715
    8. '=True' → logprob: -16.0118465423584
    9. ':' → logprob: -16.0118465423584
    10. '   ' → logprob: -16.1368465423584

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01440101396292448
    2. '():' → logprob: -4.264400959014893
    3. '):' → logprob: -9.76440143585205
    4. ':**' → logprob: -9.76440143585205
    5. ' :' → logprob: -10.26440143585205
    6. ':
' → logprob: -10.88940143585205
    7. '(' → logprob: -10.88940143585205
    8. '   ' → logprob: -11.13940143585205
    9. ',' → logprob: -11.26440143585205
    10. '       ' → logprob: -12.01440143585205

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006331044249236584
    2. '        
' → logprob: -6.006330966949463
    3. '    ' → logprob: -6.131330966949463
    4. ' ' → logprob: -7.381330966949463
    5. '   ' → logprob: -7.381330966949463
    6. '        ' → logprob: -9.506331443786621
    7. '      ' → logprob: -10.006331443786621
    8. '     ' → logprob: -10.256331443786621
    9. '<|end|>' → logprob: -10.506331443786621
    10. '        
        
' → logprob: -10.756331443786621

Token 28: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.13068698346614838
    2. 'line' → logprob: -2.7556869983673096
    3. ' s' → logprob: -4.1306867599487305
    4. '   ' → logprob: -4.1306867599487305
    5. 'data' → logprob: -4.7556867599487305
    6. ' data' → logprob: -4.8806867599487305
    7. 's' → logprob: -5.2556867599487305
    8. '       ' → logprob: -6.6306867599487305
    9. 'n' (adapté à ' n') → logprob: -6.8806867599487305
    10. ' n' → logprob: -7.1306867599487305

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005377475637942553
    2. '=' → logprob: -5.255377292633057
    3. ' ==' → logprob: -9.380377769470215
    4. ' ' → logprob: -10.130377769470215
    5. ' :=' → logprob: -11.880377769470215
    6. ' >' → logprob: -12.130377769470215
    7. '=int' → logprob: -12.505377769470215
    8. '>' → logprob: -14.380377769470215
    9. ' ,' → logprob: -14.505377769470215
    10. ' =)' → logprob: -14.630377769470215

Token 30: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7621489763259888
    2. 'int' → logprob: -1.2621489763259888
    3. ' input' → logprob: -1.6371489763259888
    4. 'input' → logprob: -2.887148857116699
    5. ' ' → logprob: -11.2621488571167
    6. '=int' → logprob: -13.3871488571167
    7. '   ' → logprob: -13.6371488571167
    8. ' in' → logprob: -13.7621488571167
    9. 'in' → logprob: -14.1371488571167
    10. '(int' → logprob: -14.3246488571167

Token 31: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0010412635747343302
    2. '(' → logprob: -6.876041412353516
    3. 'input' → logprob: -11.876041412353516
    4. '(in' → logprob: -14.376041412353516
    5. ' (' → logprob: -14.626041412353516
    6. '(
' → logprob: -16.251041412353516
    7. ',input' → logprob: -16.376041412353516
    8. '((' → logprob: -16.751041412353516
    9. '(i' → logprob: -16.751041412353516
    10. '=input' → logprob: -16.876041412353516

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003041055053472519
    2. '().' → logprob: -6.3780412673950195
    3. '()' → logprob: -6.7530412673950195
    4. '()))' → logprob: -8.87804126739502
    5. '())
' → logprob: -11.37804126739502
    6. ' ())' → logprob: -11.62804126739502
    7. ')' → logprob: -11.87804126739502
    8. '(' → logprob: -13.37804126739502
    9. '();)' → logprob: -14.87804126739502
    10. '()
' → logprob: -15.00304126739502

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7777618765830994
    2. '<|end|>' → logprob: -1.4027619361877441
    3. ')' → logprob: -2.027761936187744
    4. ' if' → logprob: -2.777761936187744
    5. '   ' → logprob: -3.402761936187744
    6. '<|end|>' → logprob: -3.527761936187744
    7. '        ' → logprob: -4.277761936187744
    8. ' ' → logprob: -4.652761936187744
    9. '    ' → logprob: -5.027761936187744
    10. '
' → logprob: -6.777761936187744

Token 34: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23277343809604645
    2. ' if' → logprob: -1.8577734231948853
    3. '<|end|>' → logprob: -3.357773542404175
    4. ' ' → logprob: -5.107773303985596
    5. '        ' → logprob: -5.357773303985596
    6. 'if' (adapté à ' if') → logprob: -5.482773303985596
    7. '<|end|>' → logprob: -7.232773303985596
    8. '    ' → logprob: -7.857773303985596
    9. '   ' → logprob: -7.857773303985596
    10. '      ' → logprob: -9.232773780822754

Token 35: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007089134305715561
    2. ' not' → logprob: -5.382089138031006
    3. 'n' → logprob: -6.007089138031006
    4. 'not' → logprob: -12.632088661193848
    5. '	n' → logprob: -14.132088661193848
    6. ' ' → logprob: -15.507088661193848
    7. ' ' → logprob: -15.632088661193848
    8. 'n't' → logprob: -15.757088661193848
    9. ' н' → logprob: -17.132089614868164
    10. ')n' → logprob: -17.632089614868164

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07006370276212692
    2. '==' → logprob: -2.695063591003418
    3. ' <=' → logprob: -9.445063591003418
    4. ' ' → logprob: -11.070063591003418
    5. ' <' → logprob: -11.195063591003418
    6. '<=' → logprob: -11.695063591003418
    7. '=' → logprob: -12.945063591003418
    8. ')' → logprob: -13.320063591003418
    9. '()==' → logprob: -13.695063591003418
    10. '<' → logprob: -13.820063591003418

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.054883409291505814
    2. '0' → logprob: -2.9298834800720215
    3. ' ' → logprob: -14.179883003234863
    4. '  ' → logprob: -15.179883003234863
    5. ' -' → logprob: -16.67988395690918
    6. '_' → logprob: -16.86738395690918
    7. '=' → logprob: -17.24238395690918
    8. '    ' → logprob: -17.30488395690918
    9. '   ' → logprob: -17.67988395690918
    10. '-' → logprob: -17.86738395690918

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0232466422021389
    2. ' ' → logprob: -3.7732465267181396
    3. '-' → logprob: -14.773246765136719
    4. '    ' → logprob: -15.148246765136719
    5. '  ' → logprob: -15.773246765136719
    6. ' -' → logprob: -16.14824676513672
    7. '   ' → logprob: -16.64824676513672
    8. ')' → logprob: -17.14824676513672
    9. '```' → logprob: -17.14824676513672
    10. '=' → logprob: -18.02324676513672

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022571911104023457
    2. ':
' → logprob: -6.127257347106934
    3. ':return' → logprob: -10.002257347106934
    4. '       ' → logprob: -10.877257347106934
    5. '   ' → logprob: -13.002257347106934
    6. ' :' → logprob: -13.252257347106934
    7. '):' → logprob: -13.627257347106934
    8. '           ' → logprob: -14.127257347106934
    9. '<|end|>' → logprob: -15.377257347106934
    10. ' break' → logprob: -15.377257347106934

Token 40: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20369702577590942
    2. '       ' → logprob: -1.7036969661712646
    3. ':' → logprob: -7.203697204589844
    4. '   ' → logprob: -7.828697204589844
    5. '\n' → logprob: -8.203697204589844
    6. ' break' → logprob: -8.203697204589844
    7. '<|end|>' → logprob: -9.203697204589844
    8. '
' → logprob: -9.953697204589844
    9. '	       ' → logprob: -9.953697204589844
    10. '<|end|>' → logprob: -10.203697204589844

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.18590722978115082
    2. '       ' → logprob: -2.0609071254730225
    3. 'break' (adapté à ' break') → logprob: -3.4359071254730225
    4. '           ' → logprob: -4.685907363891602
    5. '	break' → logprob: -8.060907363891602
    6. '   ' → logprob: -8.310907363891602
    7. ' return' → logprob: -9.185907363891602
    8. 'return' → logprob: -9.810907363891602
    9. '        
' → logprob: -10.060907363891602
    10. '```' → logprob: -10.685907363891602

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49317657947540283
    2. '
' → logprob: -1.1181765794754028
    3. '<|end|>' → logprob: -3.7431764602661133
    4. '        
' → logprob: -4.493176460266113
    5. '\n' → logprob: -4.743176460266113
    6. '   ' → logprob: -5.118176460266113
    7. '    
' → logprob: -5.368176460266113
    8. '\' → logprob: -5.993176460266113
    9. '```' → logprob: -6.118176460266113
    10. '  
' → logprob: -7.493176460266113

Token 44: ' groups' (ID: 8896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08395465463399887
    2. ' ' → logprob: -4.083954811096191
    3. '        ' → logprob: -4.208954811096191
    4. '<|end|>' → logprob: -4.208954811096191
    5. '    ' → logprob: -4.708954811096191
    6. '   ' → logprob: -4.958954811096191
    7. '<|end|>' → logprob: -5.458954811096191
    8. '        
' → logprob: -5.708954811096191
    9. 's' → logprob: -6.708954811096191
    10. ')' → logprob: -6.708954811096191

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008515877649188042
    2. '=' → logprob: -5.63351583480835
    3. '[' → logprob: -6.38351583480835
    4. '_' → logprob: -6.63351583480835
    5. '.append' → logprob: -7.88351583480835
    6. '_count' → logprob: -8.258516311645508
    7. ' ' → logprob: -8.258516311645508
    8. ')' → logprob: -8.508516311645508
    9. '   ' → logprob: -8.633516311645508
    10. '_size' → logprob: -8.883516311645508

Token 46: ' {}
' (ID: 11421)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.14263255894184113
    2. '[]' → logprob: -2.142632484436035
    3. ' {}' → logprob: -5.392632484436035
    4. '[' → logprob: -5.642632484436035
    5. ' [' → logprob: -5.767632484436035
    6. ' [[]' → logprob: -5.892632484436035
    7. '{}' → logprob: -6.642632484436035
    8. ' ' → logprob: -9.892632484436035
    9. ' defaultdict' → logprob: -10.017632484436035
    10. '   ' → logprob: -10.392632484436035

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03119497187435627
    2. '   ' → logprob: -4.656195163726807
    3. '
' → logprob: -5.531195163726807
    4. '\' → logprob: -5.656195163726807
    5. '        
' → logprob: -5.906195163726807
    6. '<|end|>' → logprob: -5.906195163726807
    7. '    ' → logprob: -6.281195163726807
    8. ' ' → logprob: -6.406195163726807
    9. '        ' → logprob: -6.656195163726807
    10. '' → logprob: -7.406195163726807

Token 48: ' order' (ID: 2569)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47207167744636536
    2. 'for' → logprob: -1.222071647644043
    3. '       ' → logprob: -2.722071647644043
    4. ' ' → logprob: -4.722071647644043
    5. '   ' → logprob: -5.597071647644043
    6. '    ' → logprob: -6.847071647644043
    7. '        ' → logprob: -6.972071647644043
    8. '	for' → logprob: -7.722071647644043
    9. ' ' → logprob: -8.222071647644043
    10. '	' → logprob: -9.597071647644043

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006620992906391621
    2. '=' → logprob: -5.13162088394165
    3. '=[]' → logprob: -9.006621360778809
    4. 'ed' → logprob: -9.131621360778809
    5. '[' → logprob: -9.381621360778809
    6. '[]' → logprob: -9.506621360778809
    7. '_' → logprob: -9.631621360778809
    8. '_count' → logprob: -9.756621360778809
    9. 's' → logprob: -10.381621360778809
    10. '_counter' → logprob: -10.756621360778809

Token 50: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3868875801563263
    2. '[]' → logprob: -1.136887550354004
    3. ' ' → logprob: -12.386887550354004
    4. '[' → logprob: -12.386887550354004
    5. '0' → logprob: -13.261887550354004
    6. '[]}' → logprob: -13.386887550354004
    7. ' []
' → logprob: -13.636887550354004
    8. '[]>' → logprob: -13.761887550354004
    9. '[]
' → logprob: -14.011887550354004
    10. ' [' → logprob: -14.261887550354004

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048114750534296036
    2. '<|end|>' → logprob: -3.298114776611328
    3. ' for' → logprob: -5.548114776611328
    4. 'for' → logprob: -6.548114776611328
    5. '<|end|>' → logprob: -6.923114776611328
    6. '   ' → logprob: -7.048114776611328
    7. ' ' → logprob: -7.298114776611328
    8. '
' → logprob: -7.423114776611328
    9. '        
' → logprob: -7.548114776611328
    10. '    ' → logprob: -8.548114776611328

Token 52: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4366879165172577
    2. 'for' (adapté à ' for') → logprob: -1.06168794631958
    3. '       ' → logprob: -4.93668794631958
    4. '   ' → logprob: -7.68668794631958
    5. '	for' → logprob: -9.311687469482422
    6. '        ' → logprob: -9.561687469482422
    7. ' ' → logprob: -9.811687469482422
    8. '    ' → logprob: -9.811687469482422
    9. ' ' → logprob: -11.186687469482422
    10. '```' → logprob: -11.686687469482422

Token 53: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.06366205215454102
    2. ' i' → logprob: -2.813662052154541
    3. ' ' → logprob: -6.813662052154541
    4. '_' → logprob: -7.438662052154541
    5. 'i' → logprob: -12.313661575317383
    6. ' ‌' → logprob: -14.563661575317383
    7. '_i' → logprob: -14.813661575317383
    8. ' range' → logprob: -15.188661575317383
    9. '  ' → logprob: -15.813661575317383
    10. ' ' → logprob: -15.813661575317383

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00011188744247192517
    2. 'i' → logprob: -10.37511157989502
    3. 'n' → logprob: -10.50011157989502
    4. 'in' → logprob: -10.62511157989502
    5. 'range' → logprob: -11.37511157989502
    6. ' ' → logprob: -11.87511157989502
    7. ' i' → logprob: -12.50011157989502
    8. ' _' → logprob: -12.75011157989502
    9. 'group' → logprob: -13.62511157989502
    10. 'g' → logprob: -14.12511157989502

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00524667976424098
    2. ' range' → logprob: -5.255246639251709
    3. '	range' → logprob: -12.505247116088867
    4. '(range' → logprob: -13.005247116088867
    5. 'rang' → logprob: -14.005247116088867
    6. ')' → logprob: -14.005247116088867
    7. '[' → logprob: -14.380247116088867
    8. 'ran' → logprob: -14.380247116088867
    9. ' ' → logprob: -14.630247116088867
    10. 'group' → logprob: -14.630247116088867

Token 56: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0096139432862401
    2. ' (' → logprob: -5.509613990783691
    3. ' n' → logprob: -5.634613990783691
    4. '(' → logprob: -6.259613990783691
    5. 'n' → logprob: -10.259613990783691
    6. ' ' → logprob: -15.259613990783691
    7. '(range' → logprob: -15.509613990783691
    8. '(s' → logprob: -16.009613037109375
    9. ' range' → logprob: -16.134613037109375
    10. '	n' → logprob: -16.259613037109375

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017878713551908731
    2. ' ):' → logprob: -7.0017876625061035
    3. '):
' → logprob: -7.6267876625061035
    4. ')' → logprob: -8.251788139343262
    5. '   ' → logprob: -9.751788139343262
    6. ':' → logprob: -9.876788139343262
    7. '       ' → logprob: -12.501788139343262
    8. '():' → logprob: -12.876788139343262
    9. ' )' → logprob: -13.376788139343262
    10. '):
' → logprob: -13.376788139343262

Token 58: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5366470813751221
    2. '   ' → logprob: -1.161647081375122
    3. '           ' → logprob: -3.411647081375122
    4. '    ' → logprob: -3.536647081375122
    5. '<|end|>' → logprob: -4.036646842956543
    6. ' ' → logprob: -4.911646842956543
    7. '<|end|>' → logprob: -5.411646842956543
    8. '	   ' → logprob: -6.036646842956543
    9. ':' → logprob: -6.286646842956543
    10. '    
' → logprob: -6.911646842956543

Token 59: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.029839228838682175
    2. ' name' → logprob: -4.404839038848877
    3. ' ' → logprob: -5.529839038848877
    4. ' s' → logprob: -5.779839038848877
    5. ' parts' → logprob: -5.904839038848877
    6. 'line' (adapté à ' line') → logprob: -6.029839038848877
    7. ' data' → logprob: -6.154839038848877
    8. ' group' → logprob: -7.529839038848877
    9. ' tokens' → logprob: -8.154839515686035
    10. ' code' → logprob: -8.404839515686035

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017058902885764837
    2. '=' → logprob: -6.376706123352051
    3. '=line' → logprob: -13.12670612335205
    4. ' ' → logprob: -14.25170612335205
    5. 's' → logprob: -15.00170612335205
    6. '    ' → logprob: -15.25170612335205
    7. '   ' → logprob: -15.75170612335205
    8. ',' → logprob: -16.251705169677734
    9. ' =
' → logprob: -16.376705169677734
    10. '_' → logprob: -16.376705169677734

Token 61: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.033664021641016006
    2. 'input' → logprob: -3.4086639881134033
    3. ' sys' → logprob: -11.283663749694824
    4. ' list' → logprob: -13.408663749694824
    5. 'sys' → logprob: -13.783663749694824
    6. 'list' → logprob: -14.033663749694824
    7. '	input' → logprob: -14.658663749694824
    8. '=input' → logprob: -15.033663749694824
    9. ' ' → logprob: -15.408663749694824
    10. '<input' → logprob: -15.533663749694824

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12695761024951935
    2. '()' → logprob: -2.126957654953003
    3. '())' → logprob: -10.751957893371582
    4. '()
' → logprob: -13.001957893371582
    5. '(' → logprob: -13.126957893371582
    6. '()).' → logprob: -13.626957893371582
    7. ')' → logprob: -14.626957893371582
    8. '()

' → logprob: -15.376957893371582
    9. '()]' → logprob: -15.751957893371582
    10. '()>' → logprob: -15.751957893371582

Token 63: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3490174114704132
    2. 'rstrip' → logprob: -1.3490173816680908
    3. 'split' → logprob: -3.349017381668091
    4. 'rs' → logprob: -12.349017143249512
    5. 'decode' → logprob: -14.849017143249512
    6. 'str' → logprob: -15.349017143249512
    7. '```' → logprob: -16.474018096923828
    8. '.rstrip' → logprob: -16.599018096923828
    9. 'rst' → logprob: -17.099018096923828
    10. 'r' → logprob: -17.224018096923828

Token 64: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2519650459289551
    2. '()' → logprob: -1.501965045928955
    3. '()
' → logprob: -11.251964569091797
    4. 'split' → logprob: -11.501964569091797
    5. '(' → logprob: -12.376964569091797
    6. '())' → logprob: -13.126964569091797
    7. '.split' → logprob: -13.251964569091797
    8. '()

' → logprob: -13.501964569091797
    9. '(),' → logprob: -14.626964569091797
    10. '()\' → logprob: -14.751964569091797

Token 65: '           ' (ID: 352)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6442314386367798
    2. '<|end|>' → logprob: -1.0192314386367798
    3. '()' → logprob: -3.1442313194274902
    4. '<|end|>' → logprob: -3.8942313194274902
    5. ')' → logprob: -4.51923131942749
    6. '       ' → logprob: -5.01923131942749
    7. 'split' → logprob: -5.14423131942749
    8. '().' → logprob: -5.26923131942749
    9. ' ' → logprob: -5.51923131942749
    10. ' split' → logprob: -5.64423131942749

Token 66: ' g' (ID: 329)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5984076857566833
    2. ' parts' → logprob: -1.7234077453613281
    3. 'if' → logprob: -2.598407745361328
    4. ' tokens' → logprob: -3.348407745361328
    5. ' name' → logprob: -3.598407745361328
    6. ' items' → logprob: -3.848407745361328
    7. 'parts' → logprob: -3.973407745361328
    8. 'name' → logprob: -4.223407745361328
    9. 'tokens' → logprob: -4.348407745361328
    10. ' words' → logprob: -4.348407745361328

Token 67: ',' (ID: 11)
  Prédit: 'roup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roup' → logprob: -0.3474184274673462
    2. 'roups' → logprob: -1.4724184274673462
    3. ' =' → logprob: -3.8474183082580566
    4. ',' → logprob: -4.097418308258057
    5. 'name' → logprob: -4.347418308258057
    6. '_name' → logprob: -5.222418308258057
    7. 'r' → logprob: -5.722418308258057
    8. 'id' → logprob: -6.597418308258057
    9. '_id' → logprob: -7.097418308258057
    10. 's' → logprob: -7.097418308258057

Token 68: ' mem' (ID: 3225)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.612231731414795
    2. ' s' → logprob: -1.612231731414795
    3. ' m' → logprob: -2.112231731414795
    4. ' p' → logprob: -2.237231731414795
    5. 's' → logprob: -2.362231731414795
    6. 'p' → logprob: -3.112231731414795
    7. 'u' → logprob: -3.987231731414795
    8. ' rest' → logprob: -4.237231731414795
    9. ' u' → logprob: -4.237231731414795
    10. 'c' → logprob: -4.362231731414795

Token 69: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11617814749479294
    2. 'bers' → logprob: -2.991178035736084
    3. 'ber' → logprob: -3.491178035736084
    4. '=' → logprob: -4.241178035736084
    5. 'b' → logprob: -5.241178035736084
    6. ',' → logprob: -5.241178035736084
    7. ' =' → logprob: -5.616178035736084
    8. 'bs' → logprob: -8.491178512573242
    9. 'embers' → logprob: -9.491178512573242
    10. '```' → logprob: -10.616178512573242

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08202002197504044
    2. ' =' → logprob: -2.5820200443267822
    3. 's' → logprob: -5.832019805908203
    4. 'embers' → logprob: -8.957019805908203
    5. ',' → logprob: -10.832019805908203
    6. ' ' → logprob: -11.707019805908203
    7. 'ems' → logprob: -11.957019805908203
    8. 'bers' → logprob: -11.957019805908203
    9. 'ber' → logprob: -12.582019805908203
    10. '```' → logprob: -12.707019805908203

Token 71: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07892460376024246
    2. 'line' → logprob: -2.5789246559143066
    3. '=line' → logprob: -10.953924179077148
    4. '(line' → logprob: -12.453924179077148
    5. ' =' → logprob: -12.828924179077148
    6. '[line' → logprob: -12.953924179077148
    7. ',line' → logprob: -13.328924179077148
    8. '	line' → logprob: -13.578924179077148
    9. '    ' → logprob: -13.703924179077148
    10. ' ' → logprob: -13.703924179077148

Token 72: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3141767084598541
    2. ' =' → logprob: -1.3141766786575317
    3. '.split' → logprob: -8.189176559448242
    4. 's' → logprob: -8.189176559448242
    5. 'split' → logprob: -8.439176559448242
    6. ',' → logprob: -9.189176559448242
    7. '.' → logprob: -10.939176559448242
    8. '[' → logprob: -12.814176559448242
    9. '=line' → logprob: -12.814176559448242
    10. 'spl' → logprob: -12.939176559448242

Token 73: '(':' (ID: 36524)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.027319274842739105
    2. '(max' → logprob: -4.527319431304932
    3. '(None' → logprob: -5.027319431304932
    4. '("' → logprob: -5.652319431304932
    5. '(' → logprob: -5.902319431304932
    6. '()' → logprob: -6.277319431304932
    7. '(':' → logprob: -7.527319431304932
    8. '(',',' → logprob: -8.277318954467773
    9. '(',' → logprob: -8.402318954467773
    10. 'max' → logprob: -8.527318954467773

Token 74: '')
' (ID: 2515)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.09348881244659424
    2. ' ' → logprob: -2.7184886932373047
    3. ')' → logprob: -3.9684886932373047
    4. ' ')' → logprob: -6.593488693237305
    5. ' ")' → logprob: -6.968488693237305
    6. '<|end|>' → logprob: -6.968488693237305
    7. ' ,' → logprob: -7.968488693237305
    8. '[' → logprob: -8.968488693237305
    9. ' ' → logprob: -9.218488693237305
    10. '<|end|>' → logprob: -9.718488693237305

Token 75: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13068321347236633
    2. '<|end|>' → logprob: -2.130683183670044
    3. '<|end|>' → logprob: -7.005683422088623
    4. ' g' → logprob: -7.630683422088623
    5. ' ' → logprob: -7.630683422088623
    6. '[' → logprob: -8.130682945251465
    7. ' 
' → logprob: -8.505682945251465
    8. ' )' → logprob: -8.630682945251465
    9. ' [' → logprob: -9.255682945251465
    10. ' `' → logprob: -9.380682945251465

Token 76: ' mem' (ID: 3225)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02397119626402855
    2. '<|end|>' → logprob: -3.8989710807800293
    3. ' g' → logprob: -7.148971080780029
    4. '[' → logprob: -7.398971080780029
    5. '<|end|>' → logprob: -8.148971557617188
    6. 's' → logprob: -8.398971557617188
    7. ' [' → logprob: -8.398971557617188
    8. ' )' → logprob: -9.023971557617188
    9. ' `' → logprob: -9.148971557617188
    10. ' ' → logprob: -9.273971557617188

Token 77: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015577126760035753
    2. 'embers' → logprob: -7.75155782699585
    3. 'bers' → logprob: -8.126557350158691
    4. 'bs' → logprob: -8.251557350158691
    5. ',' → logprob: -8.876557350158691
    6. 'ber' → logprob: -9.376557350158691
    7. ' =' → logprob: -9.876557350158691
    8. ' s' → logprob: -10.251557350158691
    9. '=' → logprob: -10.376557350158691
    10. '           ' → logprob: -10.376557350158691

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02635684423148632
    2. '=' → logprob: -3.6513569355010986
    3. ' ' → logprob: -9.90135669708252
    4. '.strip' → logprob: -13.40135669708252
    5. 'split' → logprob: -14.02635669708252
    6. '.split' → logprob: -14.40135669708252
    7. '<|end|>' → logprob: -14.52635669708252
    8. '.' → logprob: -14.65135669708252
    9. '<|end|>' → logprob: -15.02635669708252
    10. ' ='' → logprob: -15.40135669708252

Token 79: ' mem' (ID: 3225)
  Prédit: 'mem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mem' → logprob: -0.4839940369129181
    2. ' mem' → logprob: -0.9839940071105957
    3. '[mem' → logprob: -5.483994007110596
    4. '[' → logprob: -5.858994007110596
    5. ' [' → logprob: -6.983994007110596
    6. ' list' → logprob: -7.608994007110596
    7. 'list' → logprob: -7.608994007110596
    8. 'm' → logprob: -8.483994483947754
    9. '	mem' → logprob: -9.046494483947754
    10. '[]' → logprob: -9.546494483947754

Token 80: 's' (ID: 82)
  Prédit: 'bers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bers' → logprob: -0.13095012307167053
    2. 's' → logprob: -2.1309502124786377
    3. 'ber' → logprob: -6.005949974060059
    4. 'bs' → logprob: -7.630949974060059
    5. 'b' → logprob: -8.005949974060059
    6. 'ers' → logprob: -8.380949974060059
    7. 'rs' → logprob: -9.755949974060059
    8. '[' → logprob: -9.755949974060059
    9. 'mb' → logprob: -9.755949974060059
    10. '```' → logprob: -9.880949974060059

Token 81: '[:-' (ID: 63556)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.5050634741783142
    2. '.strip' → logprob: -1.380063533782959
    3. '.' → logprob: -2.005063533782959
    4. ' .' → logprob: -5.380063533782959
    5. '.replace' → logprob: -5.630063533782959
    6. '.l' → logprob: -6.630063533782959
    7. '.rstrip' → logprob: -7.880063533782959
    8. '[' → logprob: -8.1300630569458
    9. 'split' → logprob: -9.3800630569458
    10. '[:-' → logprob: -11.2550630569458

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005265888292342424
    2. '2' → logprob: -5.255265712738037
    3. '3' → logprob: -10.630266189575195
    4. '4' → logprob: -13.005266189575195
    5. ' ' → logprob: -13.692766189575195
    6. '5' → logprob: -14.192766189575195
    7. '6' → logprob: -14.505266189575195
    8. '１' → logprob: -15.005266189575195
    9. '\n' → logprob: -15.067766189575195
    10. '7' → logprob: -15.317766189575195

Token 83: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45707276463508606
    2. '].' → logprob: -1.0820727348327637
    3. '.split' → logprob: -4.707072734832764
    4. '}' → logprob: -5.457072734832764
    5. ''].' → logprob: -6.082072734832764
    6. ',' → logprob: -6.457072734832764
    7. '1' → logprob: -6.582072734832764
    8. '']' → logprob: -6.582072734832764
    9. ':].' → logprob: -6.707072734832764
    10. ' ].' → logprob: -7.082072734832764

Token 84: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.47495681833243e-05
    2. 'strip' → logprob: -11.250024795532227
    3. 'rstrip' → logprob: -11.500024795532227
    4. 'spl' → logprob: -13.625024795532227
    5. 'replace' → logprob: -15.875024795532227
    6. 's' → logprob: -16.750024795532227
    7. 'rs' → logprob: -16.750024795532227
    8. ' split' → logprob: -17.375024795532227
    9. '(split' → logprob: -17.750024795532227
    10. 'sp' → logprob: -17.750024795532227

Token 85: '(',' (ID: 30548)
  Prédit: '(','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(',' → logprob: -0.40258318185806274
    2. '()' → logprob: -1.152583122253418
    3. '('' → logprob: -5.152583122253418
    4. '(','' → logprob: -5.402583122253418
    5. '(' → logprob: -6.027583122253418
    6. '(),' → logprob: -6.277583122253418
    7. '(",' → logprob: -7.277583122253418
    8. '(';' → logprob: -8.902583122253418
    9. '(),'' → logprob: -9.777583122253418
    10. '()',' → logprob: -10.527583122253418

Token 86: '')' (ID: 1542)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.052688103169202805
    2. ')' → logprob: -3.0526881217956543
    3. ' ' → logprob: -5.677688121795654
    4. '<|end|>' → logprob: -7.552688121795654
    5. 'space' → logprob: -10.427687644958496
    6. ' ')' → logprob: -10.802687644958496
    7. ' )
' → logprob: -11.177687644958496
    8. '')' → logprob: -11.177687644958496
    9. ' ),' → logprob: -11.302687644958496
    10. ' ")' → logprob: -12.052687644958496

Token 87: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1498357206583023
    2. ')' → logprob: -3.0248358249664307
    3. '<|end|>' → logprob: -3.2748358249664307
    4. '[' → logprob: -4.649835586547852
    5. ',' → logprob: -4.774835586547852
    6. ']' → logprob: -5.524835586547852
    7. ' 
' → logprob: -5.524835586547852
    8. ' ' → logprob: -5.649835586547852
    9. '           ' → logprob: -5.774835586547852
    10. ' )' → logprob: -5.899835586547852

Token 88: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6045058965682983
    2. '<|end|>' → logprob: -0.9795058965682983
    3. ',' → logprob: -2.979506015777588
    4. ')' → logprob: -4.229506015777588
    5. ' 
' → logprob: -5.854506015777588
    6. '<|end|>' → logprob: -6.479506015777588
    7. '           ' → logprob: -6.854506015777588
    8. ']' → logprob: -7.104506015777588
    9. ' ,' → logprob: -7.229506015777588
    10. ' ' → logprob: -7.229506015777588

Token 89: ' remove' (ID: 6234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23106539249420166
    2. '<|end|>' → logprob: -1.6060653924942017
    3. ''' → logprob: -6.731065273284912
    4. 'split' → logprob: -7.231065273284912
    5. 'rstrip' → logprob: -7.231065273284912
    6. '<|end|>' → logprob: -7.231065273284912
    7. ')' → logprob: -7.856065273284912
    8. '  ' → logprob: -8.23106575012207
    9. '[:-' → logprob: -8.35606575012207
    10. 'space' → logprob: -8.48106575012207

Token 90: ' trailing' (ID: 57985)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1795307397842407
    2. ''' → logprob: -1.9295307397842407
    3. '.' → logprob: -2.054530620574951
    4. ';' → logprob: -2.054530620574951
    5. '\n' → logprob: -3.054530620574951
    6. 'the' → logprob: -3.179530620574951
    7. 'newline' → logprob: -3.804530620574951
    8. ')' → logprob: -4.054530620574951
    9. '<|end|>' → logprob: -4.054530620574951
    10. ' ' → logprob: -4.429530620574951

Token 91: ' '.'' (ID: 64762)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';' → logprob: -0.07284869998693466
    2. ',' → logprob: -3.4478487968444824
    3. ''' → logprob: -4.572848796844482
    4. ')' → logprob: -4.822848796844482
    5. '.' → logprob: -5.072848796844482
    6. '}' → logprob: -6.322848796844482
    7. '';' → logprob: -6.322848796844482
    8. '\n' → logprob: -6.697848796844482
    9. ']' → logprob: -6.822848796844482
    10. ' ' → logprob: -7.072848796844482

Token 92: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -1.0392190217971802
    2. 'split' → logprob: -1.2892190217971802
    3. 'strip' → logprob: -1.5392190217971802
    4. ' strip' → logprob: -2.0392189025878906
    5. ' [' → logprob: -5.164218902587891
    6. '[' → logprob: -5.289218902587891
    7. ' ' → logprob: -6.039218902587891
    8. 'space' → logprob: -6.164218902587891
    9. ' space' → logprob: -6.539218902587891
    10. ' ['' → logprob: -6.539218902587891

Token 94: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1890549510717392
    2. '<|end|>' → logprob: -1.8140549659729004
    3. '<|end|>' → logprob: -5.5640549659729
    4. ' ' → logprob: -6.9390549659729
    5. ')' → logprob: -7.3140549659729
    6. ',' → logprob: -7.4390549659729
    7. '[' → logprob: -7.9390549659729
    8. '[]' → logprob: -8.064054489135742
    9. ' 
' → logprob: -8.314054489135742
    10. '  ' → logprob: -8.314054489135742

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49061328172683716
    2. ' ' → logprob: -1.3656132221221924
    3. '<|end|>' → logprob: -2.2406132221221924
    4. '       ' → logprob: -4.7406134605407715
    5. ')' → logprob: -5.7406134605407715
    6. '<|end|>' → logprob: -5.8656134605407715
    7. '            ' → logprob: -6.3656134605407715
    8. ' 
' → logprob: -6.4906134605407715
    9. '        ' → logprob: -6.6156134605407715
    10. '            
' → logprob: -7.1156134605407715

Token 96: ' groups' (ID: 8896)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21012867987155914
    2. ' ' → logprob: -2.4601287841796875
    3. 'for' → logprob: -3.2101287841796875
    4. '       ' → logprob: -3.8351287841796875
    5. '           ' → logprob: -4.4601287841796875
    6. '<|end|>' → logprob: -4.4601287841796875
    7. '        ' → logprob: -5.2101287841796875
    8. 'mem' → logprob: -5.9601287841796875
    9. '<|end|>' → logprob: -5.9601287841796875
    10. '    ' → logprob: -6.5851287841796875

Token 97: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.00011021859245374799
    2. '[' → logprob: -9.500110626220703
    3. '[G' → logprob: -10.625110626220703
    4. '.setdefault' → logprob: -12.375110626220703
    5. ' [' → logprob: -13.375110626220703
    6. 'g' → logprob: -14.250110626220703
    7. '][' → logprob: -14.500110626220703
    8. '[c' → logprob: -14.750110626220703
    9. '[group' → logprob: -14.875110626220703
    10. '\[' → logprob: -14.875110626220703

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001565449871122837
    2. ']=' → logprob: -6.626565456390381
    3. ' ]' → logprob: -9.251564979553223
    4. '].' → logprob: -9.751564979553223
    5. '.strip' → logprob: -9.751564979553223
    6. ')' → logprob: -11.251564979553223
    7. '.trim' → logprob: -12.251564979553223
    8. ')]' → logprob: -13.376564979553223
    9. '])' → logprob: -13.501564979553223
    10. ']+=' → logprob: -13.751564979553223

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5844127535820007
    2. '=' → logprob: -0.8344127535820007
    3. '.extend' → logprob: -4.834412574768066
    4. '.append' → logprob: -8.709412574768066
    5. '.' → logprob: -9.709412574768066
    6. '=[]' → logprob: -9.834412574768066
    7. '[' → logprob: -9.834412574768066
    8. '=set' → logprob: -10.084412574768066
    9. ']' → logprob: -10.209412574768066
    10. ')' → logprob: -10.834412574768066

Token 100: ' mem' (ID: 3225)
  Prédit: 'mem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mem' → logprob: -0.4456731081008911
    2. ' mem' → logprob: -1.3206731081008911
    3. ' set' → logprob: -2.8206729888916016
    4. 'set' → logprob: -3.6956729888916016
    5. '[' → logprob: -5.820672988891602
    6. ' [' → logprob: -6.070672988891602
    7. '[mem' → logprob: -6.320672988891602
    8. ' list' → logprob: -7.820672988891602
    9. 'list' → logprob: -8.195672988891602
    10. ' ' → logprob: -9.445672988891602

Token 101: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.088346359931165e-07
    2. ' s' → logprob: -14.750000953674316
    3. '```' → logprob: -16.375
    4. '   ' → logprob: -16.625
    5. 'ms' → logprob: -16.75
    6. '[' → logprob: -16.75
    7. ' ' → logprob: -17.125
    8. '`s' → logprob: -17.25
    9. '``' → logprob: -17.5
    10. '[s' → logprob: -17.625

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8100516200065613
    2. '           ' → logprob: -1.435051679611206
    3. 'order' (adapté à ' order') → logprob: -1.810051679611206
    4. ' order' → logprob: -1.935051679611206
    5. '   ' → logprob: -4.810051441192627
    6. ' for' → logprob: -8.310051918029785
    7. '	order' → logprob: -8.560051918029785
    8. ' ' → logprob: -9.185051918029785
    9. '	       ' → logprob: -9.435051918029785
    10. 'for' → logprob: -9.685051918029785

Token 105: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16029927134513855
    2. '.' → logprob: -1.910299301147461
    3. '.app' → logprob: -10.535299301147461
    4. ' .' → logprob: -10.785299301147461
    5. '.extend' → logprob: -11.035299301147461
    6. '.ap' → logprob: -11.910299301147461
    7. 'append' → logprob: -13.535299301147461
    8. '.Append' → logprob: -13.910299301147461
    9. '.add' → logprob: -14.035299301147461
    10. '​.' → logprob: -14.035299301147461

Token 106: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'g' → logprob: -18.750001907348633
    4. '(group' → logprob: -19.125001907348633
    5. '(groups' → logprob: -19.375001907348633
    6. '((' → logprob: -19.750001907348633
    7. '(G' → logprob: -20.500001907348633
    8. '(s' → logprob: -20.625001907348633
    9. '(q' → logprob: -21.500001907348633
    10. '(
' → logprob: -21.500001907348633

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -15.750008583068848
    4. '<|end|>' → logprob: -17.25000762939453
    5. ')return' → logprob: -18.50000762939453
    6. '   ' → logprob: -18.50000762939453
    7. ')

' → logprob: -18.62500762939453
    8. '),' → logprob: -19.12500762939453
    9. '       ' → logprob: -19.25000762939453
    10. '))' → logprob: -19.37500762939453

Token 108: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1585533171892166
    2. '       ' → logprob: -2.7835533618927
    3. '   ' → logprob: -3.0335533618927
    4. '<|end|>' → logprob: -3.5335533618927
    5. ' for' → logprob: -5.658553123474121
    6. '    
' → logprob: -6.658553123474121
    7. '<|end|>' → logprob: -6.658553123474121
    8. '        
' → logprob: -7.408553123474121
    9. 'for' → logprob: -8.408553123474121
    10. '  
' → logprob: -9.158553123474121

Token 109: ' memo' (ID: 46393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28495657444000244
    2. '   ' → logprob: -1.6599565744400024
    3. ' for' → logprob: -3.909956455230713
    4. 'for' → logprob: -4.909956455230713
    5. 'count' → logprob: -5.284956455230713
    6. '        
' → logprob: -5.784956455230713
    7. 'counts' → logprob: -6.284956455230713
    8. '
' → logprob: -6.284956455230713
    9. '#' → logprob: -6.409956455230713
    10. 'next' → logprob: -6.409956455230713

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03838169202208519
    2. '=' → logprob: -3.288381576538086
    3. 'ize' → logprob: -8.913381576538086
    4. 'ization' → logprob: -10.163381576538086
    5. ':' → logprob: -10.538381576538086
    6. 'def' → logprob: -10.663381576538086
    7. ' ' → logprob: -10.663381576538086
    8. '_' → logprob: -11.038381576538086
    9. '=[]' → logprob: -11.413381576538086
    10. '={}' → logprob: -11.413381576538086

Token 111: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -5.5577775128767826e-06
    2. '{' → logprob: -13.000005722045898
    3. ' {}' → logprob: -13.375005722045898
    4. '{}
' → logprob: -14.375005722045898
    5. '[]' → logprob: -14.750005722045898
    6. 'set' → logprob: -15.250005722045898
    7. '{}\' → logprob: -15.625005722045898
    8. '{}

' → logprob: -16.0000057220459
    9. 'dict' → logprob: -16.6250057220459
    10. '{})' → logprob: -16.6250057220459

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2326572686433792
    2. '
' → logprob: -2.8576571941375732
    3. 'def' → logprob: -2.8576571941375732
    4. '<|end|>' → logprob: -3.1076571941375732
    5. '   ' → logprob: -3.4826571941375732
    6. '        
' → logprob: -4.357657432556152
    7. '    
' → logprob: -6.357657432556152
    8. '<|end|>' → logprob: -6.982657432556152
    9. ' def' → logprob: -7.107657432556152
    10. '        ' → logprob: -8.482657432556152

Token 113: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0049053276889026165
    2. '       ' → logprob: -5.6299052238464355
    3. '   ' → logprob: -6.7549052238464355
    4. ' def' → logprob: -9.879905700683594
    5. '
' → logprob: -10.129905700683594
    6. '        
' → logprob: -10.379905700683594
    7. '```' → logprob: -12.254905700683594
    8. 'for' → logprob: -12.629905700683594
    9. '<|end|>' → logprob: -13.004905700683594
    10. '    
' → logprob: -13.004905700683594

Token 114: ' get' (ID: 717)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2577877342700958
    2. ' count' → logprob: -2.2577877044677734
    3. ' solve' → logprob: -3.3827877044677734
    4. ' can' → logprob: -3.6327877044677734
    5. ' is' → logprob: -4.507787704467773
    6. 'dfs' → logprob: -4.632787704467773
    7. ' find' → logprob: -4.882787704467773
    8. ' calc' → logprob: -5.007787704467773
    9. ' get' → logprob: -5.632787704467773
    10. 'count' → logprob: -5.632787704467773

Token 115: '_members' (ID: 75388)
  Prédit: '_members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_members' → logprob: -1.016726016998291
    2. '_size' → logprob: -1.391726016998291
    3. '_group' → logprob: -2.266726016998291
    4. '_depth' → logprob: -2.391726016998291
    5. '_score' → logprob: -2.516726016998291
    6. '_groups' → logprob: -3.266726016998291
    7. '_count' → logprob: -3.641726016998291
    8. '_all' → logprob: -4.891726016998291
    9. '_in' → logprob: -5.016726016998291
    10. '_cost' → logprob: -5.266726016998291

Token 116: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.1698300987482071
    2. '(group' → logprob: -1.919830083847046
    3. '(' → logprob: -4.669830322265625
    4. '(groups' → logprob: -9.669830322265625
    5. '(gr' → logprob: -9.669830322265625
    6. '(parent' → logprob: -10.919830322265625
    7. ' (' → logprob: -11.044830322265625
    8. '(s' → logprob: -12.169830322265625
    9. '(
' → logprob: -12.544830322265625
    10. '(token' → logprob: -13.169830322265625

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006365281995385885
    2. '):
' → logprob: -5.1313652992248535
    3. ')' → logprob: -8.506364822387695
    4. ',' → logprob: -8.506364822387695
    5. '   ' → logprob: -11.756364822387695
    6. '):
' → logprob: -12.006364822387695
    7. ' ):' → logprob: -12.131364822387695
    8. ' ' → logprob: -13.131364822387695
    9. '):

' → logprob: -13.256364822387695
    10. ':' → logprob: -13.381364822387695

Token 118: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.519538402557373
    2. '<|end|>' → logprob: -1.519538402557373
    3. '       ' → logprob: -1.894538402557373
    4. ':' → logprob: -2.019538402557373
    5. ' if' → logprob: -3.019538402557373
    6. ' (' → logprob: -3.019538402557373
    7. '           ' → logprob: -3.269538402557373
    8. '        ' → logprob: -3.269538402557373
    9. ' ' → logprob: -3.769538402557373
    10. '(
' → logprob: -4.519538402557373

Token 119: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.237338587641716
    2. ' if' → logprob: -1.6123385429382324
    3. 'members' → logprob: -4.862338542938232
    4. '       ' → logprob: -6.112338542938232
    5. ' members' → logprob: -7.362338542938232
    6. 'tokens' → logprob: -7.612338542938232
    7. '   ' → logprob: -8.11233901977539
    8. 'result' → logprob: -8.48733901977539
    9. '           ' → logprob: -8.98733901977539
    10. ' result' → logprob: -10.36233901977539

Token 120: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6931476593017578
    2. ' g' → logprob: -0.6931476593017578
    3. ' isinstance' → logprob: -16.068147659301758
    4. ' not' → logprob: -16.568147659301758
    5. ' ' → logprob: -16.943147659301758
    6. ' ' → logprob: -17.068147659301758
    7. '	g' → logprob: -17.068147659301758
    8. 'not' → logprob: -17.568147659301758
    9. '_g' → logprob: -17.818147659301758
    10. '   ' → logprob: -18.193147659301758

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018453562632203102
    2. 'in' → logprob: -4.018453598022461
    3. ' not' → logprob: -8.643453598022461
    4. 'not' → logprob: -10.268453598022461
    5. ' ' → logprob: -10.393453598022461
    6. '   ' → logprob: -10.643453598022461
    7. ')' → logprob: -10.893453598022461
    8. '  ' → logprob: -12.018453598022461
    9. '    ' → logprob: -13.143453598022461
    10. 'g' → logprob: -13.268453598022461

Token 122: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.04859168455004692
    2. ' memo' → logprob: -3.0485916137695312
    3. 'mem' → logprob: -12.673591613769531
    4. 'm' → logprob: -14.798591613769531
    5. 'groups' → logprob: -14.923591613769531
    6. '.memo' → logprob: -15.923591613769531
    7. ' meme' → logprob: -16.42359161376953
    8. 'memory' → logprob: -16.67359161376953
    9. 'Memo' → logprob: -17.54859161376953
    10. ' groups' → logprob: -17.54859161376953

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002495633438229561
    2. ':
' → logprob: -6.252495765686035
    3. ':return' → logprob: -7.502495765686035
    4. '):' → logprob: -11.377495765686035
    5. ' :' → logprob: -14.252495765686035
    6. '   ' → logprob: -14.252495765686035
    7. '       ' → logprob: -14.502495765686035
    8. '<|end|>' → logprob: -15.002495765686035
    9. '():' → logprob: -15.377495765686035
    10. '):
' → logprob: -15.377495765686035

Token 124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1372460275888443
    2. '           ' → logprob: -2.7622461318969727
    3. '       ' → logprob: -3.7622461318969727
    4. 'return' → logprob: -4.137246131896973
    5. ' return' → logprob: -4.137246131896973
    6. ':return' → logprob: -5.762246131896973
    7. '<|end|>' → logprob: -5.887246131896973
    8. ':' → logprob: -6.387246131896973
    9. '	       ' → logprob: -6.762246131896973
    10. ':
' → logprob: -8.012246131896973

Token 125: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1970776468515396
    2. 'return' (adapté à ' return') → logprob: -2.072077751159668
    3. '           ' → logprob: -2.947077751159668
    4. '   ' → logprob: -8.822077751159668
    5. '       ' → logprob: -8.947077751159668
    6. '               ' → logprob: -9.322077751159668
    7. ' ' → logprob: -10.572077751159668
    8. ':return' → logprob: -10.572077751159668
    9. '	return' → logprob: -10.947077751159668
    10. '                   ' → logprob: -12.072077751159668

Token 126: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.06198437884449959
    2. ' memo' → logprob: -2.8119843006134033
    3. 'set' → logprob: -11.186984062194824
    4. ' set' → logprob: -13.436984062194824
    5. 'm' → logprob: -13.936984062194824
    6. ' meme' → logprob: -16.06198501586914
    7. '.memo' → logprob: -16.43698501586914
    8. 'mem' → logprob: -16.56198501586914
    9. ' ' → logprob: -16.56198501586914
    10. '
' → logprob: -17.68698501586914

Token 127: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.00018077615823131055
    2. '       ' → logprob: -9.500181198120117
    3. 'g' → logprob: -10.000181198120117
    4. '           ' → logprob: -10.125181198120117
    5. '
' → logprob: -11.625181198120117
    6. '               ' → logprob: -12.375181198120117
    7. '   ' → logprob: -13.000181198120117
    8. '[' → logprob: -14.125181198120117
    9. '```' → logprob: -14.125181198120117
    10. '[
' → logprob: -14.375181198120117

Token 128: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3134816288948059
    2. ']
' → logprob: -1.3134815692901611
    3. '           ' → logprob: -8.938481330871582
    4. ')' → logprob: -10.438481330871582
    5. ']
' → logprob: -10.938481330871582
    6. '       ' → logprob: -11.313481330871582
    7. ']

' → logprob: -11.938481330871582
    8. ']()
' → logprob: -11.938481330871582
    9. '])' → logprob: -12.563481330871582
    10. ')]' → logprob: -12.688481330871582

Token 129: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5163723826408386
    2. '
' → logprob: -2.1413724422454834
    3. '           ' → logprob: -2.5163724422454834
    4. '<|end|>' → logprob: -2.5163724422454834
    5. '    
' → logprob: -3.0163724422454834
    6. '        
' → logprob: -3.0163724422454834
    7. '            
' → logprob: -4.266372203826904
    8. '  
' → logprob: -5.516372203826904
    9. '   ' → logprob: -6.141372203826904
    10. ' 
' → logprob: -6.516372203826904

Token 130: ' res' (ID: 694)
  Prédit: 'members'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'members' → logprob: -0.7049283385276794
    2. ' members' → logprob: -1.4549283981323242
    3. '           ' → logprob: -1.9549283981323242
    4. 'result' → logprob: -3.454928398132324
    5. ' result' → logprob: -3.829928398132324
    6. 'all' → logprob: -3.954928398132324
    7. ' all' → logprob: -4.579928398132324
    8. 'res' (adapté à ' res') → logprob: -4.579928398132324
    9. ' res' → logprob: -4.579928398132324
    10. '   ' → logprob: -4.704928398132324

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891380041837692
    2. '=' → logprob: -2.578913688659668
    3. '=set' → logprob: -11.328913688659668
    4. '=[]' → logprob: -12.453913688659668
    5. ' ' → logprob: -12.578913688659668
    6. 's' → logprob: -12.828913688659668
    7. 'ult' → logprob: -14.828913688659668
    8. '={}' → logprob: -15.203913688659668
    9. '=[]
' → logprob: -15.578913688659668
    10. '   ' → logprob: -15.953913688659668

Token 132: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2185874581336975
    2. '[]' → logprob: -1.7185873985290527
    3. ' set' → logprob: -4.218587398529053
    4. '[]
' → logprob: -6.718587398529053
    5. ' []' → logprob: -6.843587398529053
    6. '[' → logprob: -10.968587875366211
    7. ' []
' → logprob: -12.343587875366211
    8. ' ' → logprob: -12.843587875366211
    9. '[]

' → logprob: -13.343587875366211
    10. '{}' → logprob: -13.593587875366211

Token 133: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038073163479566574
    2. '()
' → logprob: -3.2880730628967285
    3. '()

' → logprob: -10.788073539733887
    4. '(groups' → logprob: -12.038073539733887
    5. '()
' → logprob: -13.663073539733887
    6. '()\' → logprob: -13.913073539733887
    7. '(m' → logprob: -14.038073539733887
    8. '(g' → logprob: -14.663073539733887
    9. '(' → logprob: -15.038073539733887
    10. '()`' → logprob: -15.163073539733887

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04290818050503731
    2. '<|end|>' → logprob: -3.417908191680908
    3. '<|end|>' → logprob: -5.667908191680908
    4. '   ' → logprob: -6.542908191680908
    5. ' for' → logprob: -6.542908191680908
    6. '       ' → logprob: -6.917908191680908
    7. '
' → logprob: -7.042908191680908
    8. '            
' → logprob: -8.66790771484375
    9. '    
' → logprob: -8.66790771484375
    10. ' 
' → logprob: -8.91790771484375

Token 135: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14366255700588226
    2. '           ' → logprob: -2.143662452697754
    3. ' for' → logprob: -4.143662452697754
    4. '       ' → logprob: -7.268662452697754
    5. '   ' → logprob: -10.393662452697754
    6. '	for' → logprob: -13.268662452697754
    7. ' ' → logprob: -15.268662452697754
    8. 'if' → logprob: -15.518662452697754
    9. '```' → logprob: -15.643662452697754
    10. '         ' → logprob: -16.14366340637207

Token 136: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22785131633281708
    2. 'mem' → logprob: -2.227851390838623
    3. 'member' → logprob: -2.602851390838623
    4. ' m' → logprob: -4.727851390838623
    5. ' member' → logprob: -4.852851390838623
    6. ' mem' → logprob: -5.352851390838623
    7. 'x' → logprob: -8.227850914001465
    8. 'item' → logprob: -9.352850914001465
    9. ' memb' → logprob: -10.227850914001465
    10. 'sub' → logprob: -10.477850914001465

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02631469815969467
    2. 'in' → logprob: -3.6513147354125977
    3. ' ' → logprob: -11.526314735412598
    4. 's' → logprob: -13.151314735412598
    5. '	in' → logprob: -14.276314735412598
    6. 'n' → logprob: -14.526314735412598
    7. '<|end|>' → logprob: -15.026314735412598
    8. '_in' → logprob: -15.401314735412598
    9. ',' → logprob: -15.776314735412598
    10. 'g' → logprob: -15.901314735412598

Token 138: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.0021979559678584337
    2. ' groups' → logprob: -6.127197742462158
    3. '(groups' → logprob: -11.627198219299316
    4. '.groups' → logprob: -13.252198219299316
    5. 'g' → logprob: -14.002198219299316
    6. '   ' → logprob: -14.627198219299316
    7. 'members' → logprob: -14.877198219299316
    8. 'roups' → logprob: -15.127198219299316
    9. 'group' → logprob: -15.752198219299316
    10. '_groups' → logprob: -17.127197265625

Token 139: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -1.259079363080673e-05
    2. 'g' → logprob: -11.500012397766113
    3. '[m' → logprob: -13.750012397766113
    4. '```' → logprob: -15.500012397766113
    5. '[' → logprob: -15.625012397766113
    6. '][' → logprob: -15.750012397766113
    7. '[
' → logprob: -15.875012397766113
    8. '.get' → logprob: -16.50001335144043
    9. '[s' → logprob: -16.62501335144043
    10. ' [' → logprob: -16.62501335144043

Token 140: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.4116777777671814
    2. ']:' → logprob: -1.1616778373718262
    3. '):
' → logprob: -4.036677837371826
    4. '):' → logprob: -6.286677837371826
    5. ']):
' → logprob: -6.536677837371826
    6. ']' → logprob: -6.786677837371826
    7. ':' → logprob: -7.786677837371826
    8. ']):' → logprob: -7.786677837371826
    9. '           ' → logprob: -7.911677837371826
    10. ']:
' → logprob: -7.911677837371826

Token 141: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07926076650619507
    2. ':
' → logprob: -3.07926082611084
    3. ':' → logprob: -3.95426082611084
    4. ' if' → logprob: -5.20426082611084
    5. '           ' → logprob: -5.57926082611084
    6. 'if' → logprob: -7.32926082611084
    7. '                
' → logprob: -8.45426082611084
    8. '       ' → logprob: -8.82926082611084
    9. '):
' → logprob: -9.07926082611084
    10. '
' → logprob: -9.20426082611084

Token 142: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4010278582572937
    2. 'if' (adapté à ' if') → logprob: -1.1510279178619385
    3. '               ' → logprob: -4.276027679443359
    4. '                   ' → logprob: -8.90102767944336
    5. '           ' → logprob: -11.27602767944336
    6. 'try' → logprob: -12.15102767944336
    7. ' try' → logprob: -13.27602767944336
    8. '   ' → logprob: -13.90102767944336
    9. '                ' → logprob: -14.65102767944336
    10. '	if' → logprob: -14.90102767944336

Token 143: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.009764587506651878
    2. ' m' → logprob: -4.634764671325684
    3. ' isinstance' → logprob: -12.509764671325684
    4. ',' → logprob: -13.509764671325684
    5. '   ' → logprob: -14.697264671325684
    6. 'is' → logprob: -14.697264671325684
    7. ' ' → logprob: -14.822264671325684
    8. 'isdigit' → logprob: -15.384764671325684
    9. '	m' → logprob: -15.634764671325684
    10. 'type' → logprob: -15.697264671325684

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862790182232857
    2. 'in' → logprob: -3.0486278533935547
    3. ' ' → logprob: -10.548627853393555
    4. '.startswith' → logprob: -12.548627853393555
    5. 'is' → logprob: -12.798627853393555
    6. '.is' → logprob: -13.298627853393555
    7. '.' → logprob: -13.923627853393555
    8. '[' → logprob: -14.423627853393555
    9. ' not' → logprob: -14.673627853393555
    10. ' .' → logprob: -14.673627853393555

Token 145: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -4.024604277219623e-05
    2. ' groups' → logprob: -10.125040054321289
    3. '.groups' → logprob: -16.75004005432129
    4. '(groups' → logprob: -17.50004005432129
    5. 'group' → logprob: -18.25004005432129
    6. '   ' → logprob: -19.50004005432129
    7. 'roups' → logprob: -20.12504005432129
    8. 'g' → logprob: -20.62504005432129
    9. 'members' → logprob: -21.12504005432129
    10. '_groups' → logprob: -21.12504005432129

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34863144159317017
    2. ':
' → logprob: -1.2236313819885254
    3. '):' → logprob: -9.723631858825684
    4. ' :' → logprob: -10.098631858825684
    5. '):
' → logprob: -10.223631858825684
    6. '                   ' → logprob: -11.098631858825684
    7. ' :
' → logprob: -11.598631858825684
    8. ':

' → logprob: -11.848631858825684
    9. '               ' → logprob: -12.348631858825684
    10. ':
' → logprob: -12.348631858825684

Token 147: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.28346583247184753
    2. ':
' → logprob: -2.03346586227417
    3. 'res' → logprob: -2.28346586227417
    4. ':' → logprob: -4.40846586227417
    5. '               ' → logprob: -7.40846586227417
    6. '):
' → logprob: -7.78346586227417
    7. ' res' → logprob: -8.033465385437012
    8. ',' → logprob: -9.283465385437012
    9. '                       ' → logprob: -9.658465385437012
    10. ' :
' → logprob: -9.658465385437012

Token 148: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.005517377518117428
    2. ' res' → logprob: -5.255517482757568
    3. '                   ' → logprob: -8.75551700592041
    4. '
' → logprob: -9.13051700592041
    5. '               ' → logprob: -11.50551700592041
    6. '           ' → logprob: -13.00551700592041
    7. '	res' → logprob: -13.63051700592041
    8. '                       ' → logprob: -13.88051700592041
    9. ',res' → logprob: -14.50551700592041
    10. '
' → logprob: -14.88051700592041

Token 149: ' |=' (ID: 19917)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.004950881935656071
    2. '|' → logprob: -6.379951000213623
    3. '.' → logprob: -6.629951000213623
    4. '.union' → logprob: -6.879951000213623
    5. ' |=' → logprob: -7.629951000213623
    6. 'update' → logprob: -8.754950523376465
    7. 'res' → logprob: -9.379950523376465
    8. 'union' → logprob: -10.504950523376465
    9. 'olve' → logprob: -10.754950523376465
    10. '.add' → logprob: -10.754950523376465

Token 150: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.014163747429847717
    2. ' get' → logprob: -4.264163970947266
    3. '(get' → logprob: -15.389163970947266
    4. '=get' → logprob: -17.514163970947266
    5. '	get' → logprob: -18.014163970947266
    6. 'set' → logprob: -18.264163970947266
    7. '[get' → logprob: -18.889163970947266
    8. ',get' → logprob: -19.264163970947266
    9. ')get' → logprob: -19.389163970947266
    10. '.get' → logprob: -19.389163970947266

Token 151: '_members' (ID: 75388)
  Prédit: '_members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_members' → logprob: -5.5577775128767826e-06
    2. '_m' → logprob: -12.625005722045898
    3. '(m' → logprob: -13.875005722045898
    4. 'members' → logprob: -14.500005722045898
    5. '_groups' → logprob: -14.875005722045898
    6. '_' → logprob: -16.0000057220459
    7. 'm' → logprob: -16.1250057220459
    8. '(_' → logprob: -16.2500057220459
    9. '_mem' → logprob: -17.1250057220459
    10. '_tokens' → logprob: -17.5000057220459

Token 152: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -16.2500057220459
    4. '(
' → logprob: -16.3750057220459
    5. '((' → logprob: -16.8750057220459
    6. '(M' → logprob: -19.8750057220459
    7. '(g' → logprob: -20.1250057220459
    8. '(

' → logprob: -20.5000057220459
    9. '("("' → logprob: -20.7500057220459
    10. ')' → logprob: -21.0000057220459

Token 153: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4015620946884155
    2. ')' → logprob: -1.1515620946884155
    3. '())
' → logprob: -4.401562213897705
    4. '())' → logprob: -6.151562213897705
    5. '()' → logprob: -9.276561737060547
    6. ')
' → logprob: -10.401561737060547
    7. '()
' → logprob: -10.526561737060547
    8. ' )
' → logprob: -10.651561737060547
    9. ' )' → logprob: -12.026561737060547
    10. ')

' → logprob: -12.151561737060547

Token 154: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0077951829880476
    2. 'else' → logprob: -5.382795333862305
    3. ' else' → logprob: -5.757795333862305
    4. '```' → logprob: -11.882795333862305
    5. '           ' → logprob: -13.132795333862305
    6. '			' → logprob: -14.757795333862305
    7. '                
' → logprob: -15.007795333862305
    8. '              ' → logprob: -15.132795333862305
    9. '                   ' → logprob: -15.257795333862305
    10. '       ' → logprob: -15.882795333862305

Token 155: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5549842119216919
    2. 'else' (adapté à ' else') → logprob: -1.054984211921692
    3. '               ' → logprob: -2.5549840927124023
    4. '           ' → logprob: -10.679984092712402
    5. '	else' → logprob: -13.554984092712402
    6. '       ' → logprob: -14.429984092712402
    7. '```' → logprob: -14.554984092712402
    8. '              ' → logprob: -14.679984092712402
    9. '                   ' → logprob: -14.929984092712402
    10. '                ' → logprob: -15.679984092712402

Token 156: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2145709991455078
    2. 'res' → logprob: -1.9645709991455078
    3. ' res' → logprob: -3.339570999145508
    4. '               ' → logprob: -4.339570999145508
    5. '                  ' → logprob: -6.964570999145508
    6. '{' → logprob: -7.214570999145508
    7. '                       ' → logprob: -7.339570999145508
    8. '           ' → logprob: -7.339570999145508
    9. ' {' → logprob: -7.589570999145508
    10. '                ' → logprob: -8.964570999145508

Token 157: '                   ' (ID: 699)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2858682870864868
    2. '                   ' → logprob: -1.4108682870864868
    3. '               ' → logprob: -6.035868167877197
    4. ' res' → logprob: -6.285868167877197
    5. '                       ' → logprob: -8.285868644714355
    6. '           ' → logprob: -9.410868644714355
    7. '   ' → logprob: -9.785868644714355
    8. '```' → logprob: -11.410868644714355
    9. '                  ' → logprob: -11.660868644714355
    10. '       ' → logprob: -11.785868644714355

Token 158: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.00043460296001285315
    2. ' res' → logprob: -7.750434398651123
    3. '                   ' → logprob: -12.750434875488281
    4. '
' → logprob: -14.125434875488281
    5. '               ' → logprob: -15.500434875488281
    6. '                       ' → logprob: -16.87543487548828
    7. '{' → logprob: -17.75043487548828
    8. '           ' → logprob: -18.25043487548828
    9. '	res' → logprob: -19.37543487548828
    10. '                  ' → logprob: -19.75043487548828

Token 159: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.008666455745697021
    2. '.' → logprob: -4.758666515350342
    3. ' .' → logprob: -9.883666038513184
    4. 'add' → logprob: -15.133666038513184
    5. '.append' → logprob: -15.758666038513184
    6. '{' → logprob: -16.0086669921875
    7. ' add' → logprob: -16.6336669921875
    8. ').' → logprob: -16.8836669921875
    9. '.Add' → logprob: -16.8836669921875
    10. '.update' → logprob: -17.5086669921875

Token 160: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3135579824447632
    2. 'm' → logprob: -1.3135579824447632
    3. ' m' → logprob: -8.188557624816895
    4. '(' → logprob: -10.938557624816895
    5. '	m' → logprob: -15.063557624816895
    6. ' (' → logprob: -15.188557624816895
    7. '(
' → logprob: -16.56355857849121
    8. ')m' → logprob: -18.56355857849121
    9. 'mem' → logprob: -18.81355857849121
    10. '((' → logprob: -18.93855857849121

Token 161: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.407366916188039e-05
    2. ')
' → logprob: -10.000054359436035
    3. '           ' → logprob: -12.500054359436035
    4. '               ' → logprob: -13.000054359436035
    5. '       ' → logprob: -14.000054359436035
    6. ')return' → logprob: -14.000054359436035
    7. ' )' → logprob: -14.125054359436035
    8. '')' → logprob: -17.37505340576172
    9. '   ' → logprob: -17.37505340576172
    10. '))' → logprob: -18.12505340576172

Token 162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008672756957821548
    2. '
' → logprob: -7.1258673667907715
    3. '       ' → logprob: -10.500866889953613
    4. '            
' → logprob: -11.125866889953613
    5. '               ' → logprob: -12.375866889953613
    6. '          ' → logprob: -12.625866889953613
    7. '```' → logprob: -13.000866889953613
    8. '<|end|>' → logprob: -13.125866889953613
    9. 'memo' → logprob: -13.250866889953613
    10. '
' → logprob: -13.625866889953613

Token 163: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.5961331129074097
    2. 'memo' (adapté à ' memo') → logprob: -1.3461331129074097
    3. '           ' → logprob: -2.346133232116699
    4. '       ' → logprob: -2.846133232116699
    5. '   ' → logprob: -3.471133232116699
    6. '
' → logprob: -5.596133232116699
    7. '               ' → logprob: -10.3461332321167
    8. '    ' → logprob: -10.4711332321167
    9. '```' → logprob: -10.5961332321167
    10. '     ' → logprob: -10.8461332321167

Token 164: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.375000953674316
    3. '=g' → logprob: -15.750000953674316
    4. 'g' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. '\[' → logprob: -16.375001907348633
    7. '][' → logprob: -17.000001907348633
    8. '[G' → logprob: -17.000001907348633
    9. ')[' → logprob: -17.125001907348633
    10. '[
' → logprob: -17.625001907348633

Token 165: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011427151912357658
    2. ']=' → logprob: -9.125114440917969
    3. ')' → logprob: -12.375114440917969
    4. '=' → logprob: -14.000114440917969
    5. ' ]' → logprob: -16.00011444091797
    6. ']
' → logprob: -16.50011444091797
    7. '])' → logprob: -16.75011444091797
    8. ')]' → logprob: -17.50011444091797
    9. '}' → logprob: -17.62511444091797
    10. ']=(' → logprob: -18.25011444091797

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. '=
' → logprob: -16.004077911376953
    4. '=

' → logprob: -18.629077911376953
    5. '=m' → logprob: -18.754077911376953
    6. '=}' → logprob: -19.754077911376953
    7. '=set' → logprob: -19.754077911376953
    8. '=s' → logprob: -20.004077911376953
    9. ')' → logprob: -20.004077911376953
    10. ']=' → logprob: -20.129077911376953

Token 167: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02324547804892063
    2. ' res' → logprob: -3.7732455730438232
    3. '	res' → logprob: -18.398244857788086
    4. '(res' → logprob: -19.273244857788086
    5. '_res' → logprob: -19.398244857788086
    6. 'r' → logprob: -20.148244857788086
    7. 're' → logprob: -20.148244857788086
    8. '$res' → logprob: -20.148244857788086
    9. 'set' → logprob: -20.648244857788086
    10. ' ' → logprob: -20.773244857788086

Token 168: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010866894444916397
    2. 'return' → logprob: -9.62510871887207
    3. '       ' → logprob: -10.75010871887207
    4. '   ' → logprob: -11.75010871887207
    5. ' return' → logprob: -12.12510871887207
    6. '<|end|>' → logprob: -12.87510871887207
    7. '               ' → logprob: -13.25010871887207
    8. '		' → logprob: -13.25010871887207
    9. '	       ' → logprob: -14.87510871887207
    10. '<|end|>' → logprob: -15.50010871887207

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012308525037951767
    2. '       ' → logprob: -9.750123023986816
    3. '   ' → logprob: -10.375123023986816
    4. 'return' → logprob: -10.625123023986816
    5. ' return' → logprob: -12.750123023986816
    6. '               ' → logprob: -13.250123023986816
    7. '<|end|>' → logprob: -13.500123023986816
    8. '		' → logprob: -14.000123023986816
    9. '	       ' → logprob: -14.625123023986816
    10. '```' → logprob: -15.000123023986816

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1374533474445343
    2. '           ' → logprob: -2.137453317642212
    3. ' return' → logprob: -4.637453556060791
    4. '       ' → logprob: -7.637453556060791
    5. '   ' → logprob: -8.137453079223633
    6. '	return' → logprob: -12.637453079223633
    7. '               ' → logprob: -12.762453079223633
    8. ' ' → logprob: -13.137453079223633
    9. '          ' → logprob: -13.387453079223633
    10. '  ' → logprob: -13.637453079223633

Token 171: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.052387796342372894
    2. 'memo' → logprob: -3.0523877143859863
    3. ' res' → logprob: -5.927387714385986
    4. ' memo' → logprob: -6.802387714385986
    5. 'mem' → logprob: -11.302388191223145
    6. ' ' → logprob: -13.427388191223145
    7. 'm' → logprob: -13.552388191223145
    8. '   ' → logprob: -15.052388191223145
    9. '	res' → logprob: -15.052388191223145
    10. '(res' → logprob: -15.802388191223145

Token 172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2831214368343353
    2. '<|end|>' → logprob: -1.9081214666366577
    3. '
' → logprob: -2.408121347427368
    4. ' for' → logprob: -5.908121585845947
    5. '        
' → logprob: -6.158121585845947
    6. '   ' → logprob: -6.658121585845947
    7. 'for' → logprob: -7.408121585845947
    8. '<|end|>' → logprob: -7.658121585845947
    9. '    
' → logprob: -8.783121109008789
    10. '  
' → logprob: -9.033121109008789

Token 173: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24077549576759338
    2. '       ' → logprob: -1.990775465965271
    3. '<|end|>' → logprob: -2.6157755851745605
    4. '   ' → logprob: -6.7407755851745605
    5. '        
' → logprob: -6.7407755851745605
    6. '<|end|>' → logprob: -6.8657755851745605
    7. '    
' → logprob: -7.9907755851745605
    8. ' for' → logprob: -8.490775108337402
    9. '
' → logprob: -9.865775108337402
    10. 'for' → logprob: -9.990775108337402

Token 174: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1964033991098404
    2. '
' → logprob: -2.0714035034179688
    3. 'for' → logprob: -4.071403503417969
    4. ' for' → logprob: -4.446403503417969
    5. '<|end|>' → logprob: -4.571403503417969
    6. '        
' → logprob: -4.821403503417969
    7. '   ' → logprob: -6.446403503417969
    8. '  
' → logprob: -6.946403503417969
    9. '    
' → logprob: -7.696403503417969
    10. ' 
' → logprob: -8.446403503417969

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05530558526515961
    2. '=' → logprob: -2.9303054809570312
    3. '[' → logprob: -7.930305480957031
    4. 's' → logprob: -10.680305480957031
    5. ',' → logprob: -11.680305480957031
    6. '.' → logprob: -12.055305480957031
    7. ' ' → logprob: -12.055305480957031
    8. ' =[' → logprob: -12.680305480957031
    9. ':' → logprob: -12.930305480957031
    10. ']' → logprob: -13.055305480957031

Token 176: ' len' (ID: 4631)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.6669764518737793
    2. '[]' → logprob: -1.6669764518737793
    3. 'set' → logprob: -2.0419764518737793
    4. '[get' → logprob: -2.0419764518737793
    5. '{}' → logprob: -2.6669764518737793
    6. 'sorted' → logprob: -2.7919764518737793
    7. '{' → logprob: -2.9169764518737793
    8. '[' → logprob: -3.2919764518737793
    9. '0' → logprob: -3.5419764518737793
    10. 'sum' → logprob: -3.6669764518737793

Token 177: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.00899659562855959
    2. '(order' → logprob: -4.758996486663818
    3. '(groups' → logprob: -8.758996963500977
    4. '(result' → logprob: -8.883996963500977
    5. '(' → logprob: -10.008996963500977
    6. '(set' → logprob: -10.508996963500977
    7. 'get' → logprob: -12.008996963500977
    8. '(group' → logprob: -13.383996963500977
    9. '(m' → logprob: -13.758996963500977
    10. 'order' → logprob: -14.133996963500977

Token 178: '_members' (ID: 75388)
  Prédit: '_members'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_members' → logprob: -2.2007883671903983e-05
    2. '_groups' → logprob: -11.000021934509277
    3. 'members' → logprob: -12.375021934509277
    4. '_' → logprob: -14.875021934509277
    5. 'Members' → logprob: -15.625021934509277
    6. '_m' → logprob: -16.500022888183594
    7. ')' → logprob: -16.625022888183594
    8. '(_' → logprob: -16.875022888183594
    9. '_member' → logprob: -17.125022888183594
    10. '_mem' → logprob: -17.125022888183594

Token 179: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.00025526012177579105
    2. ')' → logprob: -9.250255584716797
    3. 'order' → logprob: -9.750255584716797
    4. ' (' → logprob: -10.000255584716797
    5. '('' → logprob: -10.000255584716797
    6. ' order' → logprob: -12.375255584716797
    7. '(' → logprob: -12.875255584716797
    8. ')(' → logprob: -13.375255584716797
    9. '(group' → logprob: -14.500255584716797
    10. '(groups' → logprob: -14.500255584716797

Token 180: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00047809764510020614
    2. '[-' → logprob: -7.750478267669678
    3. '0' → logprob: -10.00047779083252
    4. '```' → logprob: -14.75047779083252
    5. '   ' → logprob: -14.87547779083252
    6. ')' → logprob: -15.00047779083252
    7. ' [' → logprob: -15.25047779083252
    8. '(' → logprob: -15.37547779083252
    9. ' ' → logprob: -15.62547779083252
    10. '-' → logprob: -16.125478744506836

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005128794582560658
    2. '-' → logprob: -7.625513076782227
    3. ' ' → logprob: -11.000513076782227
    4. '[' → logprob: -13.250513076782227
    5. '   ' → logprob: -13.625513076782227
    6. ' -' → logprob: -13.875513076782227
    7. '1' → logprob: -14.125513076782227
    8. '```' → logprob: -14.125513076782227
    9. '(' → logprob: -14.813013076782227
    10. '
' → logprob: -15.000513076782227

Token 182: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0063645667396485806
    2. '])' → logprob: -5.131364345550537
    3. ']' → logprob: -9.256364822387695
    4. '[' → logprob: -9.256364822387695
    5. ']))
' → logprob: -9.381364822387695
    6. '))' → logprob: -9.506364822387695
    7. '])))' → logprob: -10.381364822387695
    8. ')])' → logprob: -11.131364822387695
    9. ')))' → logprob: -12.006364822387695
    10. ')]' → logprob: -12.131364822387695

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024409317411482334
    2. 'print' → logprob: -6.252440929412842
    3. '
' → logprob: -8.00244140625
    4. '<|end|>' → logprob: -9.50244140625
    5. '```' → logprob: -10.00244140625
    6. ' print' → logprob: -10.87744140625
    7. '   ' → logprob: -11.00244140625
    8. '        
' → logprob: -11.37744140625
    9. '[' → logprob: -13.62744140625
    10. ',' → logprob: -13.62744140625

Token 184: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25221148133277893
    2. '       ' → logprob: -1.5022114515304565
    3. ' print' → logprob: -8.252211570739746
    4. '   ' → logprob: -11.377211570739746
    5. '```' → logprob: -11.752211570739746
    6. '        
' → logprob: -13.877211570739746
    7. '
' → logprob: -14.127211570739746
    8. '	print' → logprob: -14.877211570739746
    9. ' ' → logprob: -16.37721061706543
    10. '#print' → logprob: -16.62721061706543

Token 185: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5770624279975891
    2. '(result' → logprob: -0.8270624279975891
    3. '()' → logprob: -6.952062606811523
    4. '('' → logprob: -9.077062606811523
    5. '(order' → logprob: -10.702062606811523
    6. 'result' → logprob: -12.077062606811523
    7. ' (' → logprob: -12.077062606811523
    8. '("("' → logprob: -12.202062606811523
    9. '(len' → logprob: -13.077062606811523
    10. '(f' → logprob: -13.077062606811523

Token 186: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -15.125000953674316
    3. ')`' → logprob: -15.125000953674316
    4. ')
' → logprob: -15.250000953674316
    5. '))' → logprob: -15.500000953674316
    6. '()' → logprob: -15.750000953674316
    7. '())' → logprob: -15.875000953674316
    8. '   ' → logprob: -16.625001907348633
    9. '`)' → logprob: -17.500001907348633
    10. ')}' → logprob: -18.000001907348633

Token 187: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16029734909534454
    2. '__' → logprob: -1.9102973937988281
    3. '_' → logprob: -10.285297393798828
    4. ' ' → logprob: -10.910297393798828
    5. '_name' → logprob: -11.410297393798828
    6. 'name' → logprob: -11.910297393798828
    7. ' ' → logprob: -13.785297393798828
    8. '___' → logprob: -14.535297393798828
    9. ' name' → logprob: -15.160297393798828
    10. '  ' → logprob: -15.160297393798828

Token 189: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5571301579475403
    2. ' ==' → logprob: -0.9321301579475403
    3. '==' → logprob: -3.4321300983428955
    4. ' __' → logprob: -7.307130336761475
    5. '=="' → logprob: -8.557129859924316
    6. '__.__' → logprob: -9.307129859924316
    7. '=='' → logprob: -9.807129859924316
    8. '.__' → logprob: -10.682129859924316
    9. ' =="' → logprob: -11.432129859924316
    10. '__.' → logprob: -11.807129859924316

Token 190: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.3557529857498594e-05
    2. '__.__' → logprob: -10.75002384185791
    3. '___' → logprob: -14.50002384185791
    4. '==' → logprob: -14.50002384185791
    5. '____' → logprob: -15.25002384185791
    6. '__.' → logprob: -15.25002384185791
    7. '__
' → logprob: -15.62502384185791
    8. '_' → logprob: -16.250022888183594
    9. ' ==' → logprob: -16.250022888183594
    10. '__["' → logprob: -16.500022888183594

Token 191: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09230872243642807
    2. '__' → logprob: -2.717308759689331
    3. '==' → logprob: -3.842308759689331
    4. '=="' → logprob: -7.592308521270752
    5. '=='' → logprob: -8.96730899810791
    6. '__.__' → logprob: -10.96730899810791
    7. ' =="' → logprob: -11.84230899810791
    8. '__":
' → logprob: -12.84230899810791
    9. '.__' → logprob: -12.84230899810791
    10. ' =='' → logprob: -13.34230899810791

Token 192: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16027845442295074
    2. ''' → logprob: -1.9102784395217896
    3. '__' → logprob: -10.2852783203125
    4. ' "__' → logprob: -10.9102783203125
    5. ' '__' → logprob: -13.7852783203125
    6. ''"' → logprob: -15.7852783203125
    7. '   ' → logprob: -15.9102783203125
    8. '"user' → logprob: -16.0352783203125
    9. '("__' → logprob: -16.9102783203125
    10. '"'' → logprob: -17.0352783203125

Token 193: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.018127236515283585
    2. '"' → logprob: -4.64312744140625
    3. '__' → logprob: -5.01812744140625
    4. ''' → logprob: -6.39312744140625
    5. ' main' → logprob: -11.26812744140625
    6. '_main' → logprob: -11.39312744140625
    7. 'name' → logprob: -11.64312744140625
    8. 'Main' → logprob: -12.26812744140625
    9. 'MAIN' → logprob: -13.14312744140625
    10. '```' → logprob: -13.76812744140625

Token 194: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04406651854515076
    2. '__' → logprob: -3.1690664291381836
    3. '__':
' → logprob: -7.044066429138184
    4. '__.' → logprob: -9.419066429138184
    5. '.' → logprob: -10.044066429138184
    6. '__:' → logprob: -10.169066429138184
    7. '__.__' → logprob: -11.544066429138184
    8. '.__' → logprob: -12.169066429138184
    9. '__["' → logprob: -12.294066429138184
    10. '():
' → logprob: -12.669066429138184

Token 195: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4890502095222473
    2. 'main' → logprob: -0.9890502095222473
    3. '   ' → logprob: -4.739050388336182
    4. '	main' → logprob: -5.114050388336182
    5. '_main' → logprob: -9.614049911499023
    6. '    
' → logprob: -11.489049911499023
    7. ' ' → logprob: -11.614049911499023
    8. '(main' → logprob: -12.114049911499023
    9. '  ' → logprob: -12.864049911499023
    10. ' ' → logprob: -13.239049911499023

Token 196: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.1472419600977446e-06
    2. ' main' → logprob: -13.750000953674316
    3. '	main' → logprob: -19.000001907348633
    4. '   ' → logprob: -21.875001907348633
    5. '_main' → logprob: -24.125001907348633
    6. '.main' → logprob: -24.375001907348633
    7. '(main' → logprob: -24.625001907348633
    8. ' ' → logprob: -25.875001907348633
    9. '  ' → logprob: -26.375001907348633
    10. 'Main' → logprob: -26.375001907348633

Token 197: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 195
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 158
Précision stricte (1ère position): 48.21%
Précision adaptée (1ère position): 52.31%
Précision (top 10): 81.03%
================================================================================
