================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
shapes = {
    'A': ["00001111",
          "00000000",
          "00000000",
          "00000000",
          "00000000",
          "00000000",
          "00000000",
          "00000000"],
    'B': ["00000001",
          "00000001",
          "00000001",
          "00000001",
          "00000000",
          "00000000",
          "00000000",
          "00000000"],
    'C': ["00000000",
          "00000000",
          "00011000",
          "00011000",
          "00000000",
          "00000000",
          "00000000",
          "00000000"],
    'D': ["00000000",
          "00000000",
          "01100000",
          "00110000",
          "00000000",
          "00000000",
          "00000000",
          "00000000"],
    'E': ["00000000",
          "00000000",
          "00110000",
          "00110000",
          "00000000",
          "00000000",
          "00000000",
          "00000000"],
    'F': ["00000000",
          "00000000",
          "00111100",
          "00000000",
          "00000000",
          "00000000",
          "00000000",
          "00000000"],
    'G': ["00000000",
          "00000000",
          "00000011",
          "00000011",
          "00000000",
          "00000000",
          "00000000",
          "00000000"]
}

def normalize(shape):
    # shape is list of 8 strings of '0' and '1'
    # shift shape to top-left so no leading zeros in rows and in columns
    rows = [list(row) for row in shape]
    # find min row index that has 1
    min_r = 8
    min_c = 8
    for r in range(8):
        for c in range(8):
            if rows[r][c] == '1':
                if r < min_r:
                    min_r = r
                if c < min_c:
                    min_c = c
    if min_r == 8: # no ones found
        return ["00000000"] * 8
    # build new shape
    new_shape = []
    for r in range(min_r, min_r + 8):
        if r >=8:
            new_shape.append("00000000")
        else:
            row = rows[r]
            row_norm = row[min_c:min_c + 8]
            while len(row_norm) < 8:
                row_norm.append('0')
            new_shape.append("".join(row_norm))
    # pad on bottom if less than 8 rows
    while len(new_shape) < 8:
        new_shape.append("00000000")
    # finally truncate to 8 rows
    return new_shape[:8]

def shapes_equal(s1, s2):
    for i in range(8):
        if s1[i] != s2[i]:
            return False
    return True

import sys

lines = []
for line in sys.stdin:
    line = line.rstrip('\n')
    if line == '' and lines:
        # process lines
        shape_input = lines
        shape_norm = normalize(shape_input)
        found = False
        for k, v in shapes.items():
            if normalize(v) == shape_norm:
                print(k)
                found = True
                break
        if not found:
            print("?")
        lines = []
    elif line != '':
        lines.append(line)
# last dataset
if lines:
    shape_input = lines
    shape_norm = normalize(shape_input)
    found = False
    for k, v in shapes.items():
        if normalize(v) == shape_norm:
            print(k)
            found = True
            break
    if not found:
        print("?")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'sh' (ID: 1116)
  → Token d'amorce (pas de prédiction)

Token 1: 'apes' (ID: 11864)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' {
' (ID: 405)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.83348149061203
    2. '[' → logprob: -1.0834815502166748
    3. ' []' → logprob: -1.7084815502166748
    4. '{}' → logprob: -3.458481550216675
    5. ' [' → logprob: -5.208481311798096
    6. ' {}' → logprob: -5.583481311798096
    7. '{' → logprob: -6.208481311798096
    8. ' ' → logprob: -6.958481311798096
    9. '```' → logprob: -7.708481311798096
    10. '['' → logprob: -8.458481788635254

Token 4: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.020287150517106056
    2. '"' → logprob: -4.520287036895752
    3. ''s' → logprob: -5.520287036895752
    4. ''\' → logprob: -5.770287036895752
    5. '   ' → logprob: -6.520287036895752
    6. ''S' → logprob: -9.14528751373291
    7. ' ' → logprob: -10.02028751373291
    8. '"\' → logprob: -10.02028751373291
    9. '`' → logprob: -10.77028751373291
    10. ''t' → logprob: -10.77028751373291

Token 5: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.10603302717208862
    2. ''s' → logprob: -2.6060330867767334
    3. '"' → logprob: -3.7310330867767334
    4. '"s' → logprob: -7.481032848358154
    5. ''S' → logprob: -7.731032848358154
    6. '   ' → logprob: -7.981032848358154
    7. ''b' → logprob: -8.981033325195312
    8. ''d' → logprob: -8.981033325195312
    9. ''t' → logprob: -9.106033325195312
    10. ''class' → logprob: -9.231033325195312

Token 6: 'A' (ID: 32)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.09106412529945374
    2. 'square' → logprob: -3.091064214706421
    3. 'rectangle' → logprob: -4.216063976287842
    4. 'triangle' → logprob: -4.591063976287842
    5. 'cube' → logprob: -4.716063976287842
    6. ''' → logprob: -5.341063976287842
    7. 'c' → logprob: -6.841063976287842
    8. 'circ' → logprob: -7.716063976287842
    9. 'rect' → logprob: -7.966063976287842
    10. 'r' → logprob: -8.216064453125

Token 7: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.010260997340083122
    2. ''}' → logprob: -5.135261058807373
    3. ''' → logprob: -5.510261058807373
    4. '':'' → logprob: -9.010260581970215
    5. ''},' → logprob: -10.260260581970215
    6. ' ':' → logprob: -10.760260581970215
    7. 'r' → logprob: -11.135260581970215
    8. 'p' → logprob: -11.260260581970215
    9. ''):' → logprob: -11.885260581970215
    10. '',' → logprob: -12.260260581970215

Token 8: ' ["' (ID: 9129)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18513306975364685
    2. ' [' → logprob: -3.0601329803466797
    3. '[(' → logprob: -3.1851329803466797
    4. '[
' → logprob: -3.3101329803466797
    5. '{' → logprob: -3.9351329803466797
    6. '[[' → logprob: -5.31013298034668
    7. ''' → logprob: -5.56013298034668
    8. '(' → logprob: -5.93513298034668
    9. ' [(' → logprob: -5.93513298034668
    10. '   ' → logprob: -6.06013298034668

Token 9: '000' (ID: 1302)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0097222328186035
    2. ' ' → logprob: -1.1347222328186035
    3. '(' → logprob: -2.1347222328186035
    4. '"' → logprob: -3.3847222328186035
    5. '0' → logprob: -3.6347222328186035
    6. '   ' → logprob: -3.6347222328186035
    7. '####' → logprob: -4.6347222328186035
    8. ' (' → logprob: -4.8847222328186035
    9. '[[' → logprob: -4.8847222328186035
    10. '    ' → logprob: -5.2597222328186035

Token 10: '011' (ID: 17342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1372380256652832
    2. '111' → logprob: -1.5122380256652832
    3. '00' → logprob: -1.6372380256652832
    4. '11' → logprob: -2.137238025665283
    5. ' ' → logprob: -2.762238025665283
    6. '1' → logprob: -3.512238025665283
    7. '011' → logprob: -3.887238025665283
    8. '110' → logprob: -4.637238025665283
    9. '000' → logprob: -5.262238025665283
    10. '##' → logprob: -5.762238025665283

Token 11: '11' (ID: 994)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.46510425209999084
    2. '11' → logprob: -1.4651042222976685
    3. '000' → logprob: -2.840104341506958
    4. '0' → logprob: -3.215104341506958
    5. ' ' → logprob: -4.465104103088379
    6. '111' → logprob: -4.965104103088379
    7. '1' → logprob: -5.465104103088379
    8. '"],' → logprob: -5.590104103088379
    9. '   ' → logprob: -5.715104103088379
    10. '110' → logprob: -5.840104103088379

Token 12: '",
' (ID: 1150)
  Prédit: '"],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"],' → logprob: -1.3972690105438232
    2. '000' → logprob: -1.5222690105438232
    3. '"]' → logprob: -1.7722690105438232
    4. '0' → logprob: -2.3972690105438232
    5. '00' → logprob: -2.3972690105438232
    6. '",' → logprob: -2.3972690105438232
    7. '"],
' → logprob: -3.0222690105438232
    8. '","' → logprob: -4.272269248962402
    9. '",
' → logprob: -4.772269248962402
    10. '"' → logprob: -5.147269248962402

Token 13: '         ' (ID: 983)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2652023434638977
    2. ''' → logprob: -1.640202283859253
    3. '   ' → logprob: -3.390202283859253
    4. '000' → logprob: -6.640202522277832
    5. ' "' → logprob: -6.765202522277832
    6. '",' → logprob: -7.390202522277832
    7. ' '' → logprob: -7.890202522277832
    8. '","' → logprob: -8.265202522277832
    9. '       ' → logprob: -8.390202522277832
    10. '    ' → logprob: -8.640202522277832

Token 14: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00319042825140059
    2. ''' → logprob: -6.253190517425537
    3. ' "' → logprob: -6.878190517425537
    4. '   ' → logprob: -9.128190040588379
    5. '         ' → logprob: -9.878190040588379
    6. ' ' → logprob: -10.253190040588379
    7. '000' → logprob: -12.003190040588379
    8. '     ' → logprob: -12.003190040588379
    9. '`' → logprob: -12.628190040588379
    10. '  ' → logprob: -12.753190040588379

Token 15: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.29338353872299194
    2. '111' → logprob: -1.5433835983276367
    3. '001' → logprob: -3.9183835983276367
    4. '"' → logprob: -4.668383598327637
    5. ' ' → logprob: -5.043383598327637
    6. '011' → logprob: -5.793383598327637
    7. ''' → logprob: -7.043383598327637
    8. '110' → logprob: -7.668383598327637
    9. '   ' → logprob: -8.793383598327637
    10. '100' → logprob: -9.043383598327637

Token 16: '000' (ID: 1302)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.5610425472259521
    2. '111' → logprob: -1.0610425472259521
    3. '000' → logprob: -3.311042547225952
    4. '0' → logprob: -3.436042547225952
    5. '001' → logprob: -4.811042785644531
    6. '11' → logprob: -6.186042785644531
    7. '00' → logprob: -6.686042785644531
    8. '110' → logprob: -6.811042785644531
    9. '1' → logprob: -7.061042785644531
    10. '100' → logprob: -7.186042785644531

Token 17: '00' (ID: 504)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.1649589240550995
    2. '00' → logprob: -1.9149589538574219
    3. '111' → logprob: -5.539958953857422
    4. '01' → logprob: -7.414958953857422
    5. '000' → logprob: -9.914958953857422
    6. '0' → logprob: -10.227458953857422
    7. '10' → logprob: -10.664958953857422
    8. '```' → logprob: -11.102458953857422
    9. '011' → logprob: -11.227458953857422
    10. '001' → logprob: -11.352458953857422

Token 18: '",
' (ID: 1150)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.2273283004760742
    2. '",' → logprob: -1.4773283004760742
    3. '"]' → logprob: -1.6023283004760742
    4. '"],' → logprob: -1.8523283004760742
    5. '111' → logprob: -3.352328300476074
    6. '00' → logprob: -3.727328300476074
    7. '",
' → logprob: -3.977328300476074
    8. '","' → logprob: -4.477328300476074
    9. '"],
' → logprob: -4.602328300476074
    10. '"' → logprob: -5.102328300476074

Token 19: '         ' (ID: 983)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05243813246488571
    2. '         ' → logprob: -3.1774380207061768
    3. ''' → logprob: -4.802438259124756
    4. '        ' → logprob: -7.927438259124756
    5. '     ' → logprob: -8.677437782287598
    6. '   ' → logprob: -8.927437782287598
    7. '       ' → logprob: -9.177437782287598
    8. '          ' → logprob: -9.177437782287598
    9. ' ' → logprob: -9.427437782287598
    10. '    ' → logprob: -10.052437782287598

Token 20: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.006327602546662092
    2. '         ' → logprob: -5.1313276290893555
    3. ''' → logprob: -8.131327629089355
    4. ' "' → logprob: -10.506327629089355
    5. ' ' → logprob: -10.756327629089355
    6. '          ' → logprob: -11.381327629089355
    7. '   ' → logprob: -11.506327629089355
    8. '000' → logprob: -11.506327629089355
    9. '        ' → logprob: -12.381327629089355
    10. '     ' → logprob: -12.506327629089355

Token 21: '000' (ID: 1302)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.4080844521522522
    2. '000' → logprob: -1.1580843925476074
    3. '"' → logprob: -4.158084392547607
    4. '001' → logprob: -6.033084392547607
    5. '011' → logprob: -6.908084392547607
    6. '110' → logprob: -7.158084392547607
    7. ''' → logprob: -7.283084392547607
    8. ' ' → logprob: -9.158084869384766
    9. '100' → logprob: -9.283084869384766
    10. '```' → logprob: -9.783084869384766

Token 22: '000' (ID: 1302)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.137193962931633
    2. '111' → logprob: -2.8871939182281494
    3. '0' → logprob: -3.2621939182281494
    4. '000' → logprob: -3.6371939182281494
    5. '001' → logprob: -5.5121941566467285
    6. '00' → logprob: -6.7621941566467285
    7. '11' → logprob: -7.1371941566467285
    8. '1' → logprob: -7.2621941566467285
    9. '100' → logprob: -8.01219367980957
    10. '01' → logprob: -8.19969367980957

Token 23: '00' (ID: 504)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.5767839550971985
    2. '00' → logprob: -0.8267839550971985
    3. '01' → logprob: -7.451784133911133
    4. '111' → logprob: -8.576784133911133
    5. '0' → logprob: -11.076784133911133
    6. '000' → logprob: -11.201784133911133
    7. '"' → logprob: -11.389284133911133
    8. '10' → logprob: -11.826784133911133
    9. '```' → logprob: -11.826784133911133
    10. ''' → logprob: -12.764284133911133

Token 24: '",
' (ID: 1150)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.2967970371246338
    2. '"],' → logprob: -1.7967970371246338
    3. '",' → logprob: -2.546797037124634
    4. '"' → logprob: -5.171796798706055
    5. '",
' → logprob: -5.921796798706055
    6. '"],
' → logprob: -6.046796798706055
    7. '000' → logprob: -7.296796798706055
    8. '0' → logprob: -7.546796798706055
    9. '"}' → logprob: -9.671796798706055
    10. '011' → logprob: -9.671796798706055

Token 25: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.21225786209106445
    2. '"' → logprob: -2.0872578620910645
    3. ''' → logprob: -2.8372578620910645
    4. '        ' → logprob: -5.4622578620910645
    5. '       ' → logprob: -6.7122578620910645
    6. '     ' → logprob: -6.9622578620910645
    7. '`' → logprob: -7.7122578620910645
    8. '   ' → logprob: -7.8372578620910645
    9. '```' → logprob: -7.8372578620910645
    10. '          ' → logprob: -7.9622578620910645

Token 26: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.024603556841611862
    2. '         ' → logprob: -3.7746036052703857
    3. ''' → logprob: -7.024603366851807
    4. ' "' → logprob: -9.149603843688965
    5. '   ' → logprob: -9.524603843688965
    6. ' ' → logprob: -9.649603843688965
    7. '          ' → logprob: -9.899603843688965
    8. '     ' → logprob: -10.149603843688965
    9. '        ' → logprob: -10.649603843688965
    10. '       ' → logprob: -11.149603843688965

Token 27: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.31572777032852173
    2. '111' → logprob: -1.315727710723877
    3. '001' → logprob: -6.815727710723877
    4. '011' → logprob: -7.190727710723877
    5. '110' → logprob: -8.190728187561035
    6. '100' → logprob: -9.065728187561035
    7. '00' → logprob: -9.440728187561035
    8. '11' → logprob: -10.690728187561035
    9. '```' → logprob: -10.690728187561035
    10. '0' → logprob: -11.065728187561035

Token 28: '000' (ID: 1302)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.2176215797662735
    2. '000' → logprob: -2.2176215648651123
    3. '111' → logprob: -2.7176215648651123
    4. '0' → logprob: -4.467621803283691
    5. '001' → logprob: -4.967621803283691
    6. '00' → logprob: -7.092621803283691
    7. '100' → logprob: -7.967621803283691
    8. '110' → logprob: -8.092621803283691
    9. '010' → logprob: -8.467621803283691
    10. '11' → logprob: -8.467621803283691

Token 29: '00' (ID: 504)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.5257968902587891
    2. '00' → logprob: -0.9007968902587891
    3. '111' → logprob: -6.650796890258789
    4. '01' → logprob: -6.775796890258789
    5. '000' → logprob: -9.963296890258789
    6. '0' → logprob: -9.963296890258789
    7. 'ff' → logprob: -10.525796890258789
    8. '```' → logprob: -10.838296890258789
    9. '10' → logprob: -10.900796890258789
    10. '011' → logprob: -11.650796890258789

Token 30: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.6410594582557678
    2. '"],' → logprob: -1.391059398651123
    3. '"]' → logprob: -1.516059398651123
    4. '",
' → logprob: -5.766059398651123
    5. '"' → logprob: -7.016059398651123
    6. '"],
' → logprob: -7.891059398651123
    7. '000' → logprob: -8.391059875488281
    8. '","' → logprob: -10.266059875488281
    9. '0' → logprob: -10.891059875488281
    10. '   ' → logprob: -11.016059875488281

Token 31: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.7952730655670166
    2. ''' → logprob: -0.9202730655670166
    3. '   ' → logprob: -2.0452730655670166
    4. '     ' → logprob: -4.1702728271484375
    5. '"' → logprob: -6.4202728271484375
    6. '        ' → logprob: -6.9202728271484375
    7. '    ' → logprob: -6.9202728271484375
    8. '       ' → logprob: -7.2952728271484375
    9. ' ' → logprob: -7.5452728271484375
    10. '`' → logprob: -8.420272827148438

Token 32: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0676068663597107
    2. ''' → logprob: -2.8176069259643555
    3. '         ' → logprob: -5.3176069259643555
    4. '   ' → logprob: -7.8176069259643555
    5. '`' → logprob: -8.692606925964355
    6. '     ' → logprob: -9.942606925964355
    7. '       ' → logprob: -10.692606925964355
    8. '```' → logprob: -11.067606925964355
    9. '        ' → logprob: -11.317606925964355
    10. '             ' → logprob: -11.567606925964355

Token 33: '000' (ID: 1302)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.5780087113380432
    2. '000' → logprob: -0.8280087113380432
    3. '"' → logprob: -6.953008651733398
    4. '011' → logprob: -7.578008651733398
    5. '001' → logprob: -8.328008651733398
    6. ''' → logprob: -8.578008651733398
    7. '110' → logprob: -9.703008651733398
    8. '100' → logprob: -10.453008651733398
    9. '00' → logprob: -10.953008651733398
    10. '"""' → logprob: -11.328008651733398

Token 34: '000' (ID: 1302)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.2616666257381439
    2. '111' → logprob: -1.8866666555404663
    3. '000' → logprob: -3.0116665363311768
    4. '0' → logprob: -4.261666774749756
    5. '001' → logprob: -5.511666774749756
    6. '00' → logprob: -5.636666774749756
    7. '100' → logprob: -5.886666774749756
    8. '11' → logprob: -6.011666774749756
    9. '110' → logprob: -7.136666774749756
    10. '01' → logprob: -7.261666774749756

Token 35: '00' (ID: 504)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.11950499564409256
    2. '00' → logprob: -2.244504928588867
    3. '111' → logprob: -5.619504928588867
    4. '01' → logprob: -5.994504928588867
    5. '0' → logprob: -8.244504928588867
    6. '"' → logprob: -9.869504928588867
    7. '10' → logprob: -9.994504928588867
    8. 'ff' → logprob: -10.057004928588867
    9. '000' → logprob: -10.619504928588867
    10. ''' → logprob: -10.744504928588867

Token 36: '",
' (ID: 1150)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.3099896311759949
    2. '",' → logprob: -1.4349896907806396
    3. '"],' → logprob: -3.9349896907806396
    4. '"' → logprob: -4.8099894523620605
    5. '"}' → logprob: -8.434989929199219
    6. '",
' → logprob: -8.434989929199219
    7. ']' → logprob: -9.434989929199219
    8. '   ' → logprob: -9.934989929199219
    9. '000' → logprob: -10.559989929199219
    10. '","' → logprob: -10.559989929199219

Token 37: '         ' (ID: 983)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12039199471473694
    2. '         ' → logprob: -2.495392084121704
    3. '   ' → logprob: -3.995392084121704
    4. '     ' → logprob: -5.370391845703125
    5. '"' → logprob: -5.995391845703125
    6. '       ' → logprob: -6.120391845703125
    7. '        ' → logprob: -6.495391845703125
    8. '    ' → logprob: -6.745391845703125
    9. ' ' → logprob: -8.620391845703125
    10. '`' → logprob: -9.245391845703125

Token 38: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.022566694766283035
    2. ''' → logprob: -4.022566795349121
    3. '         ' → logprob: -5.522566795349121
    4. '   ' → logprob: -8.147566795349121
    5. '     ' → logprob: -10.647566795349121
    6. '        ' → logprob: -10.647566795349121
    7. '`' → logprob: -10.647566795349121
    8. '       ' → logprob: -11.022566795349121
    9. '    ' → logprob: -11.522566795349121
    10. ' ' → logprob: -12.147566795349121

Token 39: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.588951051235199
    2. '"' → logprob: -0.963951051235199
    3. '111' → logprob: -3.4639511108398438
    4. ''' → logprob: -3.4639511108398438
    5. '00' → logprob: -8.213951110839844
    6. '001' → logprob: -8.213951110839844
    7. '"""' → logprob: -9.338951110839844
    8. '011' → logprob: -9.588951110839844
    9. '""' → logprob: -9.713951110839844
    10. '0' → logprob: -9.963951110839844

Token 40: '000' (ID: 1302)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.1779833734035492
    2. '000' → logprob: -2.677983283996582
    3. '0' → logprob: -3.177983283996582
    4. '111' → logprob: -3.552983283996582
    5. '00' → logprob: -4.552983283996582
    6. '001' → logprob: -5.302983283996582
    7. '11' → logprob: -5.677983283996582
    8. '01' → logprob: -6.302983283996582
    9. '110' → logprob: -6.802983283996582
    10. '1' → logprob: -6.927983283996582

Token 41: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.5825330018997192
    2. '11' → logprob: -0.8325330018997192
    3. '01' → logprob: -5.20753288269043
    4. '"' → logprob: -7.58253288269043
    5. ''' → logprob: -8.45753288269043
    6. '111' → logprob: -8.83253288269043
    7. '000' → logprob: -9.95753288269043
    8. '0' → logprob: -10.14503288269043
    9. '```' → logprob: -10.27003288269043
    10. '"""' → logprob: -11.02003288269043

Token 42: '",
' (ID: 1150)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.34092268347740173
    2. '",' → logprob: -1.8409227132797241
    3. '"],' → logprob: -2.0909225940704346
    4. '"' → logprob: -5.340922832489014
    5. '",
' → logprob: -6.715922832489014
    6. '"}' → logprob: -8.840922355651855
    7. '"],
' → logprob: -8.965922355651855
    8. '   ' → logprob: -9.340922355651855
    9. ']' → logprob: -9.340922355651855
    10. '']' → logprob: -10.340922355651855

Token 43: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.18000923097133636
    2. ''' → logprob: -2.555009126663208
    3. '"' → logprob: -2.680009126663208
    4. '        ' → logprob: -4.680009365081787
    5. '       ' → logprob: -5.680009365081787
    6. '     ' → logprob: -5.805009365081787
    7. '   ' → logprob: -6.180009365081787
    8. '    ' → logprob: -8.055008888244629
    9. '             ' → logprob: -9.180008888244629
    10. '`' → logprob: -9.805008888244629

Token 44: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.034320008009672165
    2. '         ' → logprob: -3.409320116043091
    3. ''' → logprob: -7.784319877624512
    4. '   ' → logprob: -9.159319877624512
    5. '     ' → logprob: -9.534319877624512
    6. '       ' → logprob: -10.784319877624512
    7. ' ' → logprob: -11.034319877624512
    8. '        ' → logprob: -11.159319877624512
    9. ' "' → logprob: -11.909319877624512
    10. '             ' → logprob: -12.159319877624512

Token 45: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.39233559370040894
    2. '111' → logprob: -1.1423356533050537
    3. '011' → logprob: -6.267335414886475
    4. '001' → logprob: -6.392335414886475
    5. '"' → logprob: -7.142335414886475
    6. ''' → logprob: -7.767335414886475
    7. '00' → logprob: -8.017335891723633
    8. '110' → logprob: -8.767335891723633
    9. '```' → logprob: -10.642335891723633
    10. '11' → logprob: -10.767335891723633

Token 46: '000' (ID: 1302)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.12110777199268341
    2. '0' → logprob: -3.371107816696167
    3. '111' → logprob: -3.496107816696167
    4. '000' → logprob: -3.621107816696167
    5. '001' → logprob: -4.871107578277588
    6. '00' → logprob: -5.121107578277588
    7. '01' → logprob: -5.496107578277588
    8. '11' → logprob: -5.746107578277588
    9. '1' → logprob: -6.996107578277588
    10. '100' → logprob: -8.183608055114746

Token 47: '00' (ID: 504)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.3166659474372864
    2. '00' → logprob: -1.3166658878326416
    3. '01' → logprob: -5.941666126251221
    4. '"' → logprob: -7.941666126251221
    5. ''' → logprob: -8.941665649414062
    6. '111' → logprob: -9.066665649414062
    7. '0' → logprob: -9.316665649414062
    8. '10' → logprob: -10.941665649414062
    9. '1' → logprob: -11.316665649414062
    10. '000' → logprob: -11.566665649414062

Token 48: '",
' (ID: 1150)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.13199374079704285
    2. '",' → logprob: -2.2569937705993652
    3. '"],' → logprob: -4.131993770599365
    4. '"' → logprob: -6.256993770599365
    5. '",
' → logprob: -7.506993770599365
    6. '0' → logprob: -8.506993293762207
    7. '"}' → logprob: -9.131993293762207
    8. ']' → logprob: -9.756993293762207
    9. '']' → logprob: -10.631993293762207
    10. '","' → logprob: -11.131993293762207

Token 49: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.13260550796985626
    2. ''' → logprob: -2.38260555267334
    3. '"' → logprob: -4.63260555267334
    4. '        ' → logprob: -4.88260555267334
    5. '       ' → logprob: -5.38260555267334
    6. '     ' → logprob: -5.38260555267334
    7. '   ' → logprob: -5.63260555267334
    8. '             ' → logprob: -6.75760555267334
    9. '    ' → logprob: -8.13260555267334
    10. '          ' → logprob: -9.13260555267334

Token 50: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.002890705829486251
    2. ''' → logprob: -5.877890586853027
    3. '   ' → logprob: -11.127890586853027
    4. '         ' → logprob: -11.127890586853027
    5. ' "' → logprob: -11.377890586853027
    6. '`' → logprob: -11.502890586853027
    7. ']' → logprob: -11.627890586853027
    8. ''"' → logprob: -12.127890586853027
    9. '"}' → logprob: -12.252890586853027
    10. '"""' → logprob: -12.627890586853027

Token 51: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5011737942695618
    2. '111' → logprob: -1.626173734664917
    3. '00' → logprob: -1.751173734664917
    4. '"' → logprob: -4.501173973083496
    5. ''' → logprob: -5.001173973083496
    6. '11' → logprob: -5.751173973083496
    7. '011' → logprob: -6.751173973083496
    8. '001' → logprob: -7.501173973083496
    9. '0' → logprob: -8.126173973083496
    10. '"""' → logprob: -8.501173973083496

Token 52: '000' (ID: 1302)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.39792904257774353
    2. '000' → logprob: -1.272929072380066
    3. '001' → logprob: -3.8979289531707764
    4. '0' → logprob: -4.0229291915893555
    5. '111' → logprob: -5.5229291915893555
    6. '00' → logprob: -5.6479291915893555
    7. '010' → logprob: -6.8979291915893555
    8. '01' → logprob: -7.0229291915893555
    9. '100' → logprob: -8.022929191589355
    10. '110' → logprob: -9.272929191589355

Token 53: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.14957265555858612
    2. '11' → logprob: -2.0245726108551025
    3. '"' → logprob: -5.524572849273682
    4. '01' → logprob: -6.524572849273682
    5. ''' → logprob: -7.024572849273682
    6. '0' → logprob: -8.399572372436523
    7. '""' → logprob: -9.649572372436523
    8. '"""' → logprob: -9.899572372436523
    9. '111' → logprob: -10.024572372436523
    10. 'A' → logprob: -10.712072372436523

Token 54: '"],
' (ID: 15666)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.31497061252593994
    2. '"],' → logprob: -1.31497061252594
    3. '"' → logprob: -7.43997049331665
    4. '",' → logprob: -7.81497049331665
    5. '"}' → logprob: -7.93997049331665
    6. '"},' → logprob: -9.189970970153809
    7. '   ' → logprob: -9.439970970153809
    8. ']' → logprob: -9.564970970153809
    9. '}' → logprob: -10.314970970153809
    10. '"],
' → logprob: -10.814970970153809

Token 55: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026487117633223534
    2. '   ' → logprob: -3.651487112045288
    3. '`' → logprob: -9.276487350463867
    4. ' ' → logprob: -10.151487350463867
    5. '       ' → logprob: -10.901487350463867
    6. '}' → logprob: -11.526487350463867
    7. ''A' → logprob: -11.776487350463867
    8. '    ' → logprob: -12.276487350463867
    9. '  ' → logprob: -12.776487350463867
    10. '```' → logprob: -13.276487350463867

Token 56: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.005263288039714098
    2. '   ' → logprob: -5.255263328552246
    3. '}' → logprob: -10.880263328552246
    4. ''A' → logprob: -12.505263328552246
    5. ' ' → logprob: -13.255263328552246
    6. '       ' → logprob: -13.755263328552246
    7. ''}' → logprob: -13.880263328552246
    8. ' '' → logprob: -14.380263328552246
    9. '"' → logprob: -14.380263328552246
    10. '`' → logprob: -14.505263328552246

Token 57: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005517214885912836
    2. 'C' → logprob: -8.6255521774292
    3. 'S' → logprob: -9.6255521774292
    4. ''' → logprob: -9.7505521774292
    5. 'A' → logprob: -9.7505521774292
    6. 'L' → logprob: -10.3755521774292
    7. 'T' → logprob: -10.8755521774292
    8. 'E' → logprob: -11.0005521774292
    9. 'I' → logprob: -11.0005521774292
    10. 'H' → logprob: -11.5005521774292

Token 58: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0003951648832298815
    2. ''' → logprob: -7.87539529800415
    3. ':' → logprob: -11.500394821166992
    4. '":' → logprob: -12.875394821166992
    5. ' ':' → logprob: -13.500394821166992
    6. '':[' → logprob: -15.125394821166992
    7. ''):' → logprob: -15.750394821166992
    8. '']:' → logprob: -16.250394821166992
    9. '```' → logprob: -16.250394821166992
    10. '':['' → logprob: -16.250394821166992

Token 59: ' ["' (ID: 9129)
  Prédit: ' ["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ["' → logprob: -0.6010617017745972
    2. '["' → logprob: -0.8510617017745972
    3. '[' → logprob: -3.8510618209838867
    4. ' [' → logprob: -5.726061820983887
    5. '[
' → logprob: -8.851061820983887
    6. ' [
' → logprob: -9.101061820983887
    7. ' ' → logprob: -11.351061820983887
    8. '['' → logprob: -11.851061820983887
    9. ' ['' → logprob: -11.851061820983887
    10. '[]' → logprob: -13.226061820983887

Token 60: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0710182934999466
    2. '000' → logprob: -3.3210182189941406
    3. '111' → logprob: -3.4460182189941406
    4. '001' → logprob: -8.19601821899414
    5. ''' → logprob: -8.32101821899414
    6. '011' → logprob: -10.57101821899414
    7. '110' → logprob: -11.57101821899414
    8. '010' → logprob: -12.82101821899414
    9. ' "' → logprob: -13.19601821899414
    10. '""' → logprob: -13.57101821899414

Token 61: '000' (ID: 1302)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.0830976814031601
    2. '000' → logprob: -2.9580976963043213
    3. '111' → logprob: -4.083097457885742
    4. '001' → logprob: -4.833097457885742
    5. '0' → logprob: -6.458097457885742
    6. '100' → logprob: -6.958097457885742
    7. '010' → logprob: -7.958097457885742
    8. '110' → logprob: -9.458097457885742
    9. '101' → logprob: -11.083097457885742
    10. '00' → logprob: -11.458097457885742

Token 62: '01' (ID: 2290)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.02616199478507042
    2. '111' → logprob: -4.276162147521973
    3. '00' → logprob: -4.526162147521973
    4. '01' → logprob: -7.151162147521973
    5. '011' → logprob: -8.901162147521973
    6. '110' → logprob: -9.526162147521973
    7. '000' → logprob: -9.776162147521973
    8. '001' → logprob: -10.776162147521973
    9. '10' → logprob: -11.026162147521973
    10. '0' → logprob: -12.026162147521973

Token 63: '",
' (ID: 1150)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0487009286880493
    2. '"]' → logprob: -1.0487009286880493
    3. '0' → logprob: -1.9237009286880493
    4. '"' → logprob: -2.6737008094787598
    5. '000' → logprob: -3.2987008094787598
    6. '111' → logprob: -3.6737008094787598
    7. '",' → logprob: -4.54870080947876
    8. '100' → logprob: -6.04870080947876
    9. '"],' → logprob: -6.04870080947876
    10. '",
' → logprob: -6.04870080947876

Token 64: '         ' (ID: 983)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6347261071205139
    2. '         ' → logprob: -0.7597261071205139
    3. '     ' → logprob: -7.134726047515869
    4. '000' → logprob: -8.009726524353027
    5. '          ' → logprob: -8.009726524353027
    6. '        ' → logprob: -8.634726524353027
    7. ' ' → logprob: -9.259726524353027
    8. '       ' → logprob: -9.509726524353027
    9. ''' → logprob: -9.759726524353027
    10. '             ' → logprob: -9.759726524353027

Token 65: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00011808603449026123
    2. '000' → logprob: -9.875118255615234
    3. '         ' → logprob: -10.000118255615234
    4. ' "' → logprob: -11.625118255615234
    5. ''' → logprob: -11.875118255615234
    6. ' ' → logprob: -12.500118255615234
    7. '`' → logprob: -14.750118255615234
    8. '   ' → logprob: -14.750118255615234
    9. '```' → logprob: -16.000118255615234
    10. '     ' → logprob: -16.125118255615234

Token 66: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16302001476287842
    2. '111' → logprob: -1.9130200147628784
    3. '"' → logprob: -6.663020133972168
    4. '001' → logprob: -6.788020133972168
    5. '100' → logprob: -9.163020133972168
    6. '011' → logprob: -9.413020133972168
    7. '110' → logprob: -9.663020133972168
    8. ''' → logprob: -9.788020133972168
    9. '0' → logprob: -10.663020133972168
    10. '010' → logprob: -11.288020133972168

Token 67: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.04274052008986473
    2. '001' → logprob: -3.9177405834198
    3. '0' → logprob: -4.167740345001221
    4. '011' → logprob: -5.292740345001221
    5. '00' → logprob: -7.167740345001221
    6. '010' → logprob: -8.542740821838379
    7. '100' → logprob: -8.917740821838379
    8. '01' → logprob: -8.917740821838379
    9. '1' → logprob: -9.042740821838379
    10. '111' → logprob: -9.542740821838379

Token 68: '01' (ID: 2290)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.06178133189678192
    2. '10' → logprob: -3.311781406402588
    3. '00' → logprob: -4.311781406402588
    4. '1' → logprob: -4.811781406402588
    5. '01' → logprob: -6.561781406402588
    6. '111' → logprob: -7.936781406402588
    7. '0' → logprob: -9.06178092956543
    8. '```' → logprob: -11.81178092956543
    9. '000' → logprob: -12.93678092956543
    10. '110' → logprob: -13.18678092956543

Token 69: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.3426722586154938
    2. '"]' → logprob: -1.9676722288131714
    3. '",
' → logprob: -2.092672348022461
    4. '"' → logprob: -4.467672348022461
    5. '"],' → logprob: -4.717672348022461
    6. '00' → logprob: -5.717672348022461
    7. '000' → logprob: -6.592672348022461
    8. '0' → logprob: -7.092672348022461
    9. '","' → logprob: -7.592672348022461
    10. ']' → logprob: -8.842672348022461

Token 70: '         ' (ID: 983)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5792733430862427
    2. '         ' → logprob: -0.8292733430862427
    3. ''' → logprob: -6.454273223876953
    4. '`' → logprob: -8.079273223876953
    5. '          ' → logprob: -8.079273223876953
    6. '```' → logprob: -8.579273223876953
    7. '<|end|>' → logprob: -8.704273223876953
    8. '        ' → logprob: -8.829273223876953
    9. '0' → logprob: -8.829273223876953
    10. ' ' → logprob: -9.079273223876953

Token 71: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.010556884109973907
    2. ''' → logprob: -4.760556697845459
    3. '         ' → logprob: -6.635556697845459
    4. '`' → logprob: -8.635557174682617
    5. '          ' → logprob: -8.760557174682617
    6. ' "' → logprob: -8.885557174682617
    7. ' ' → logprob: -9.510557174682617
    8. '```' → logprob: -10.635557174682617
    9. '0' → logprob: -10.760557174682617
    10. '<|end|>' → logprob: -11.510557174682617

Token 72: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09440819174051285
    2. '000' → logprob: -2.7194082736968994
    3. ''' → logprob: -3.8444082736968994
    4. '0' → logprob: -5.96940803527832
    5. '001' → logprob: -9.09440803527832
    6. '00' → logprob: -10.84440803527832
    7. ' ' → logprob: -10.96940803527832
    8. '1' → logprob: -11.59440803527832
    9. '100' → logprob: -11.84440803527832
    10. '010' → logprob: -11.84440803527832

Token 73: '000' (ID: 1302)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.45107370615005493
    2. '00' → logprob: -1.4510736465454102
    3. '001' → logprob: -2.82607364654541
    4. '000' → logprob: -3.07607364654541
    5. '11' → logprob: -4.57607364654541
    6. '0' → logprob: -5.57607364654541
    7. '1' → logprob: -6.07607364654541
    8. '<|end|>' → logprob: -6.07607364654541
    9. '011' → logprob: -6.20107364654541
    10. '111' → logprob: -6.70107364654541

Token 74: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.46540960669517517
    2. '11' → logprob: -1.7154096364974976
    3. '00' → logprob: -1.8404096364974976
    4. '10' → logprob: -4.090409755706787
    5. '1' → logprob: -4.340409755706787
    6. '0' → logprob: -5.965409755706787
    7. '<|end|>' → logprob: -7.215409755706787
    8. '001' → logprob: -9.215409278869629
    9. '111' → logprob: -9.277909278869629
    10. ' ' → logprob: -10.277909278869629

Token 75: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.14571236073970795
    2. '",
' → logprob: -2.145712375640869
    3. '"' → logprob: -4.020712375640869
    4. '"]' → logprob: -8.020711898803711
    5. '","' → logprob: -9.020711898803711
    6. '<|end|>' → logprob: -9.895711898803711
    7. '",
' → logprob: -10.270711898803711
    8. '",

' → logprob: -10.520711898803711
    9. ',
' → logprob: -11.395711898803711
    10. '',' → logprob: -11.520711898803711

Token 76: '         ' (ID: 983)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5288445949554443
    2. '         ' → logprob: -1.0288445949554443
    3. ''' → logprob: -3.2788445949554443
    4. '<|end|>' → logprob: -4.778844833374023
    5. '`' → logprob: -6.403844833374023
    6. ' ' → logprob: -6.653844833374023
    7. '0' → logprob: -6.903844833374023
    8. '        ' → logprob: -7.028844833374023
    9. '          ' → logprob: -7.528844833374023
    10. '```' → logprob: -7.903844833374023

Token 77: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.051016561686992645
    2. ''' → logprob: -3.0510165691375732
    3. '<|end|>' → logprob: -6.426016330718994
    4. '`' → logprob: -7.676016330718994
    5. ' ' → logprob: -8.301016807556152
    6. '```' → logprob: -10.551016807556152
    7. '0' → logprob: -10.801016807556152
    8. '...' → logprob: -11.801016807556152
    9. ' "' → logprob: -12.176016807556152
    10. '"""' → logprob: -12.426016807556152

Token 78: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26189279556274414
    2. '"' → logprob: -1.5118927955627441
    3. ''' → logprob: -4.761892795562744
    4. '000' → logprob: -7.011892795562744
    5. '1' → logprob: -8.386892318725586
    6. ' ' → logprob: -8.761892318725586
    7. ' "' → logprob: -10.761892318725586
    8. '"""' → logprob: -10.886892318725586
    9. '""' → logprob: -11.886892318725586
    10. '`' → logprob: -12.136892318725586

Token 79: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4984756410121918
    2. '01' → logprob: -1.6234756708145142
    3. '00' → logprob: -1.7484756708145142
    4. '000' → logprob: -3.9984755516052246
    5. '001' → logprob: -6.248475551605225
    6. '011' → logprob: -7.373475551605225
    7. '1' → logprob: -8.998476028442383
    8. ''' → logprob: -9.685976028442383
    9. ' ' → logprob: -10.060976028442383
    10. '010' → logprob: -10.623476028442383

Token 80: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.06624753028154373
    2. '00' → logprob: -3.1912474632263184
    3. '11' → logprob: -4.191247463226318
    4. '1' → logprob: -5.191247463226318
    5. '10' → logprob: -6.691247463226318
    6. '"' → logprob: -7.691247463226318
    7. '0' → logprob: -7.816247463226318
    8. ''' → logprob: -9.566247940063477
    9. '111' → logprob: -10.566247940063477
    10. '001' → logprob: -10.691247940063477

Token 81: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.07570724189281464
    2. '"' → logprob: -2.825707197189331
    3. '",
' → logprob: -4.32570743560791
    4. '"]' → logprob: -8.57570743560791
    5. '","' → logprob: -9.20070743560791
    6. '"}' → logprob: -10.70070743560791
    7. '",
' → logprob: -10.95070743560791
    8. '',' → logprob: -11.32570743560791
    9. '"],' → logprob: -11.32570743560791
    10. '"
' → logprob: -11.70070743560791

Token 82: '         ' (ID: 983)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18720783293247223
    2. '         ' → logprob: -1.937207818031311
    3. ''' → logprob: -3.6872079372406006
    4. '`' → logprob: -7.6872076988220215
    5. ' ' → logprob: -7.8122076988220215
    6. '          ' → logprob: -8.43720817565918
    7. '        ' → logprob: -8.93720817565918
    8. '0' → logprob: -9.56220817565918
    9. '     ' → logprob: -9.56220817565918
    10. '```' → logprob: -9.81220817565918

Token 83: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0028752496000379324
    2. ''' → logprob: -5.877875328063965
    3. '`' → logprob: -9.877875328063965
    4. ' ' → logprob: -12.002875328063965
    5. ' "' → logprob: -12.752875328063965
    6. '```' → logprob: -13.002875328063965
    7. '         ' → logprob: -13.127875328063965
    8. '0' → logprob: -13.252875328063965
    9. '"""' → logprob: -13.877875328063965
    10. ''"' → logprob: -14.627875328063965

Token 84: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20248174667358398
    2. '0' → logprob: -1.827481746673584
    3. ''' → logprob: -3.827481746673584
    4. '000' → logprob: -7.327481746673584
    5. '1' → logprob: -10.702482223510742
    6. ' ' → logprob: -11.577482223510742
    7. ' "' → logprob: -11.952482223510742
    8. '"""' → logprob: -11.952482223510742
    9. '`' → logprob: -12.327482223510742
    10. '""' → logprob: -13.202482223510742

Token 85: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.19691652059555054
    2. '0' → logprob: -1.8219165802001953
    3. '00' → logprob: -4.196916580200195
    4. '001' → logprob: -6.446916580200195
    5. '011' → logprob: -8.946916580200195
    6. '1' → logprob: -9.071916580200195
    7. '01' → logprob: -9.446916580200195
    8. ' ' → logprob: -11.196916580200195
    9. '100' → logprob: -11.696916580200195
    10. ''' → logprob: -11.759416580200195

Token 86: '00' (ID: 504)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.14156299829483032
    2. '00' → logprob: -2.3915629386901855
    3. '1' → logprob: -3.7665629386901855
    4. '0' → logprob: -4.5165629386901855
    5. '11' → logprob: -6.2665629386901855
    6. ''' → logprob: -6.6415629386901855
    7. '10' → logprob: -6.7665629386901855
    8. '"' → logprob: -6.8915629386901855
    9. '000' → logprob: -7.2665629386901855
    10. '001' → logprob: -9.266563415527344

Token 87: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.07870271056890488
    2. '"]' → logprob: -3.203702688217163
    3. '"' → logprob: -3.453702688217163
    4. '",
' → logprob: -6.453702926635742
    5. '","' → logprob: -7.203702926635742
    6. '"],' → logprob: -7.328702926635742
    7. ']' → logprob: -8.578702926635742
    8. '0' → logprob: -8.953702926635742
    9. '"}' → logprob: -10.078702926635742
    10. '1' → logprob: -11.078702926635742

Token 88: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.13559991121292114
    2. '"' → logprob: -2.6355998516082764
    3. ''' → logprob: -3.2605998516082764
    4. '        ' → logprob: -4.2606000900268555
    5. '       ' → logprob: -7.6356000900268555
    6. '             ' → logprob: -7.8856000900268555
    7. '          ' → logprob: -8.010600090026855
    8. ']' → logprob: -8.260600090026855
    9. '   ' → logprob: -8.385600090026855
    10. '     ' → logprob: -8.510600090026855

Token 89: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0023520994000136852
    2. ''' → logprob: -6.127352237701416
    3. '         ' → logprob: -9.502351760864258
    4. '`' → logprob: -10.002351760864258
    5. ' "' → logprob: -10.627351760864258
    6. ' ' → logprob: -11.877351760864258
    7. '```' → logprob: -12.627351760864258
    8. '   ' → logprob: -13.377351760864258
    9. '          ' → logprob: -13.502351760864258
    10. '        ' → logprob: -13.502351760864258

Token 90: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37101414799690247
    2. '"' → logprob: -1.74601411819458
    3. '000' → logprob: -2.12101411819458
    4. ''' → logprob: -4.37101411819458
    5. '00' → logprob: -6.12101411819458
    6. '1' → logprob: -7.62101411819458
    7. '001' → logprob: -9.496014595031738
    8. '`' → logprob: -9.746014595031738
    9. ' ' → logprob: -10.246014595031738
    10. '""' → logprob: -11.121014595031738

Token 91: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2889561653137207
    2. '0' → logprob: -1.4139561653137207
    3. '00' → logprob: -5.288956165313721
    4. '001' → logprob: -6.538956165313721
    5. '011' → logprob: -7.038956165313721
    6. '<|end|>' → logprob: -9.038955688476562
    7. '1' → logprob: -9.538955688476562
    8. '010' → logprob: -9.663955688476562
    9. '01' → logprob: -9.913955688476562
    10. ' ' → logprob: -10.163955688476562

Token 92: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.2906273305416107
    2. '01' → logprob: -1.415627360343933
    3. '0' → logprob: -5.290627479553223
    4. '10' → logprob: -6.165627479553223
    5. '11' → logprob: -6.415627479553223
    6. '1' → logprob: -7.415627479553223
    7. '000' → logprob: -11.290627479553223
    8. '<|end|>' → logprob: -11.290627479553223
    9. '"' → logprob: -11.540627479553223
    10. ''' → logprob: -12.165627479553223

Token 93: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.058277811855077744
    2. '"]' → logprob: -3.9332778453826904
    3. '",
' → logprob: -4.558277606964111
    4. '"' → logprob: -4.683277606964111
    5. '","' → logprob: -5.183277606964111
    6. ',' → logprob: -5.433277606964111
    7. ']' → logprob: -5.558277606964111
    8. ',
' → logprob: -6.558277606964111
    9. '',' → logprob: -7.933277606964111
    10. '"],' → logprob: -7.933277606964111

Token 94: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.015543542802333832
    2. ''' → logprob: -4.390543460845947
    3. '"' → logprob: -6.640543460845947
    4. '        ' → logprob: -6.890543460845947
    5. '       ' → logprob: -8.265543937683105
    6. '     ' → logprob: -8.515543937683105
    7. '   ' → logprob: -9.640543937683105
    8. '`' → logprob: -9.640543937683105
    9. '             ' → logprob: -9.765543937683105
    10. ' ' → logprob: -11.265543937683105

Token 95: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.005292815156280994
    2. ''' → logprob: -5.380292892456055
    3. '         ' → logprob: -7.630292892456055
    4. '`' → logprob: -9.630292892456055
    5. ' ' → logprob: -10.130292892456055
    6. ' "' → logprob: -10.630292892456055
    7. '   ' → logprob: -10.880292892456055
    8. '```' → logprob: -11.380292892456055
    9. '       ' → logprob: -11.755292892456055
    10. '        ' → logprob: -12.755292892456055

Token 96: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2355678379535675
    2. '0' → logprob: -1.6105678081512451
    3. ''' → logprob: -4.610568046569824
    4. '000' → logprob: -9.610568046569824
    5. ' ' → logprob: -10.735568046569824
    6. '1' → logprob: -11.110568046569824
    7. '00' → logprob: -11.235568046569824
    8. ' "' → logprob: -11.485568046569824
    9. '""' → logprob: -11.485568046569824
    10. '`' → logprob: -11.735568046569824

Token 97: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.5996398329734802
    2. '0' → logprob: -1.099639892578125
    3. '000' → logprob: -2.599639892578125
    4. '01' → logprob: -3.224639892578125
    5. '001' → logprob: -5.849639892578125
    6. '1' → logprob: -7.724639892578125
    7. '011' → logprob: -7.849639892578125
    8. '010' → logprob: -9.099639892578125
    9. ''' → logprob: -10.224639892578125
    10. '11' → logprob: -11.349639892578125

Token 98: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.7981252670288086
    2. '01' → logprob: -0.7981252670288086
    3. '0' → logprob: -2.4231252670288086
    4. '1' → logprob: -5.423125267028809
    5. '"' → logprob: -5.548125267028809
    6. ''' → logprob: -6.798125267028809
    7. '11' → logprob: -7.173125267028809
    8. '10' → logprob: -7.423125267028809
    9. ' ' → logprob: -9.673125267028809
    10. '"""' → logprob: -10.735625267028809

Token 99: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.03363786265254021
    2. '"]' → logprob: -4.033638000488281
    3. '"' → logprob: -4.533638000488281
    4. '"],' → logprob: -6.158638000488281
    5. '",
' → logprob: -6.283638000488281
    6. ']' → logprob: -8.408638000488281
    7. '',' → logprob: -8.658638000488281
    8. '"}' → logprob: -9.533638000488281
    9. '],' → logprob: -10.533638000488281
    10. '","' → logprob: -10.658638000488281

Token 100: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.042061250656843185
    2. ''' → logprob: -3.6670613288879395
    3. '        ' → logprob: -4.6670613288879395
    4. '       ' → logprob: -5.9170613288879395
    5. '"' → logprob: -6.9170613288879395
    6. '   ' → logprob: -7.2920613288879395
    7. '     ' → logprob: -7.5420613288879395
    8. ']' → logprob: -8.292060852050781
    9. '             ' → logprob: -8.292060852050781
    10. '          ' → logprob: -8.792060852050781

Token 101: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.009781945496797562
    2. ''' → logprob: -4.759781837463379
    3. ' "' → logprob: -7.509781837463379
    4. ']' → logprob: -8.759781837463379
    5. '"]' → logprob: -8.759781837463379
    6. '         ' → logprob: -9.009781837463379
    7. '`' → logprob: -10.259781837463379
    8. ' ' → logprob: -10.384781837463379
    9. '   ' → logprob: -11.134781837463379
    10. '       ' → logprob: -11.384781837463379

Token 102: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03704831004142761
    2. '00' → logprob: -3.53704833984375
    3. ''' → logprob: -5.41204833984375
    4. '000' → logprob: -6.03704833984375
    5. '0' → logprob: -7.78704833984375
    6. '""' → logprob: -13.28704833984375
    7. '01' → logprob: -14.41204833984375
    8. '001' → logprob: -14.66204833984375
    9. ' "' → logprob: -14.91204833984375
    10. '```' → logprob: -15.03704833984375

Token 103: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.10637328773736954
    2. '0' → logprob: -2.3563733100891113
    3. '00' → logprob: -5.231373310089111
    4. '011' → logprob: -7.856373310089111
    5. '001' → logprob: -7.981373310089111
    6. '01' → logprob: -10.731372833251953
    7. '010' → logprob: -11.106372833251953
    8. '   ' → logprob: -11.981372833251953
    9. ''' → logprob: -12.231372833251953
    10. '1' → logprob: -12.231372833251953

Token 104: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.12574879825115204
    2. '01' → logprob: -2.250748872756958
    3. '"' → logprob: -4.375748634338379
    4. '0' → logprob: -9.750748634338379
    5. ''' → logprob: -10.000748634338379
    6. '""' → logprob: -10.250748634338379
    7. '11' → logprob: -10.500748634338379
    8. '"]' → logprob: -10.500748634338379
    9. '"""' → logprob: -11.000748634338379
    10. '"}' → logprob: -11.500748634338379

Token 105: '"],
' (ID: 15666)
  Prédit: '"],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"],' → logprob: -0.47927325963974
    2. '"]' → logprob: -0.97927325963974
    3. ']' → logprob: -5.854273319244385
    4. '],' → logprob: -6.479273319244385
    5. '   ' → logprob: -8.104272842407227
    6. '}' → logprob: -8.979272842407227
    7. '"}' → logprob: -9.479272842407227
    8. ''],' → logprob: -9.604272842407227
    9. '"],
' → logprob: -9.854272842407227
    10. '']' → logprob: -9.854272842407227

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4167100787162781
    2. '}' → logprob: -1.1667101383209229
    3. ''' → logprob: -3.541710138320923
    4. ''}' → logprob: -8.166709899902344
    5. ' ' → logprob: -9.166709899902344
    6. '`' → logprob: -11.541709899902344
    7. '	' → logprob: -11.791709899902344
    8. '       ' → logprob: -11.916709899902344
    9. '"' → logprob: -12.416709899902344
    10. ''C' → logprob: -12.791709899902344

Token 107: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.5116754770278931
    2. '}' → logprob: -1.261675477027893
    3. ''' (adapté à ' '') → logprob: -2.2616753578186035
    4. ''}' → logprob: -4.6366753578186035
    5. '   ' → logprob: -5.7616753578186035
    6. ''D' → logprob: -8.886675834655762
    7. ' ' → logprob: -9.636675834655762
    8. ''T' → logprob: -10.136675834655762
    9. ''A' → logprob: -10.511675834655762
    10. ' '' → logprob: -11.386675834655762

Token 108: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.034186381846666336
    2. ''C' → logprob: -3.409186363220215
    3. ''' → logprob: -7.659186363220215
    4. 'A' → logprob: -10.784186363220215
    5. ''A' → logprob: -11.159186363220215
    6. 'B' → logprob: -12.034186363220215
    7. ' C' → logprob: -12.034186363220215
    8. 'D' → logprob: -13.221686363220215
    9. '')' → logprob: -13.284186363220215
    10. ''S' → logprob: -13.346686363220215

Token 109: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02325829118490219
    2. ''' → logprob: -3.7732582092285156
    3. ''>' → logprob: -11.898258209228516
    4. ' ':' → logprob: -12.773258209228516
    5. ':' → logprob: -14.023258209228516
    6. '':'' → logprob: -14.398258209228516
    7. ''):' → logprob: -14.773258209228516
    8. '']:' → logprob: -14.898258209228516
    9. '']' → logprob: -15.273258209228516
    10. '":' → logprob: -15.398258209228516

Token 110: ' ["' (ID: 9129)
  Prédit: ' ["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ["' → logprob: -0.7244589924812317
    2. '["' → logprob: -0.8494589924812317
    3. '[' → logprob: -2.599458932876587
    4. ' [' → logprob: -4.599459171295166
    5. '[
' → logprob: -5.974459171295166
    6. ' [
' → logprob: -7.224459171295166
    7. '   ' → logprob: -9.974458694458008
    8. ' ' → logprob: -9.974458694458008
    9. ' ['' → logprob: -11.599458694458008
    10. '['' → logprob: -11.724458694458008

Token 111: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007156503852456808
    2. '000' → logprob: -7.250715732574463
    3. ''' → logprob: -12.750715255737305
    4. '0' → logprob: -13.125715255737305
    5. ' "' → logprob: -15.500715255737305
    6. '00' → logprob: -16.500715255737305
    7. '   ' → logprob: -16.625715255737305
    8. '"""' → logprob: -16.625715255737305
    9. '""' → logprob: -16.750715255737305
    10. '"
' → logprob: -17.000715255737305

Token 112: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2062656432390213
    2. '011' → logprob: -1.9562656879425049
    3. '001' → logprob: -3.206265687942505
    4. '111' → logprob: -6.206265449523926
    5. '010' → logprob: -6.581265449523926
    6. '0' → logprob: -7.581265449523926
    7. '100' → logprob: -7.956265449523926
    8. '110' → logprob: -8.706265449523926
    9. '00' → logprob: -10.081265449523926
    10. '101' → logprob: -12.393765449523926

Token 113: '00' (ID: 504)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.6788923144340515
    2. '01' → logprob: -1.3038923740386963
    3. '00' → logprob: -1.5538923740386963
    4. '10' → logprob: -4.678892135620117
    5. '111' → logprob: -7.928892135620117
    6. '001' → logprob: -9.678892135620117
    7. '011' → logprob: -9.866392135620117
    8. '0' → logprob: -10.366392135620117
    9. '000' → logprob: -10.553892135620117
    10. '"' → logprob: -10.616392135620117

Token 114: '",
' (ID: 1150)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0018361835973337293
    2. '0' → logprob: -7.12683629989624
    3. '",' → logprob: -7.75183629989624
    4. '",
' → logprob: -8.001835823059082
    5. '000' → logprob: -9.376835823059082
    6. '"
' → logprob: -9.376835823059082
    7. '00' → logprob: -9.626835823059082
    8. '","' → logprob: -11.501835823059082
    9. ''' → logprob: -12.126835823059082
    10. '[' → logprob: -13.001835823059082

Token 115: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.22606104612350464
    2. '"' → logprob: -1.6010611057281494
    3. '     ' → logprob: -7.72606086730957
    4. ' ' → logprob: -9.60106086730957
    5. '   ' → logprob: -9.85106086730957
    6. ''' → logprob: -10.72606086730957
    7. '       ' → logprob: -10.72606086730957
    8. '             ' → logprob: -11.35106086730957
    9. '        ' → logprob: -11.47606086730957
    10. ' "' → logprob: -12.35106086730957

Token 116: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -3.7697225252486533e-06
    2. ''' → logprob: -13.250003814697266
    3. ' "' → logprob: -14.250003814697266
    4. '000' → logprob: -14.875003814697266
    5. '         ' → logprob: -15.125003814697266
    6. ' ' → logprob: -15.125003814697266
    7. '```' → logprob: -15.625003814697266
    8. '`' → logprob: -15.750003814697266
    9. '"""' → logprob: -16.250003814697266
    10. '0' → logprob: -16.750003814697266

Token 117: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.013145051896572113
    2. '"' → logprob: -5.1381449699401855
    3. '0' → logprob: -5.7631449699401855
    4. '001' → logprob: -6.3881449699401855
    5. '00' → logprob: -6.7631449699401855
    6. '111' → logprob: -6.8881449699401855
    7. ''' → logprob: -9.388145446777344
    8. '011' → logprob: -9.638145446777344
    9. '010' → logprob: -11.888145446777344
    10. ' ' → logprob: -12.013145446777344

Token 118: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.007130565587431192
    2. '011' → logprob: -5.6321306228637695
    3. '0' → logprob: -6.2571306228637695
    4. '001' → logprob: -6.7571306228637695
    5. '00' → logprob: -7.8821306228637695
    6. '111' → logprob: -10.38213062286377
    7. '010' → logprob: -10.88213062286377
    8. ' ' → logprob: -12.13213062286377
    9. '100' → logprob: -12.38213062286377
    10. '1' → logprob: -12.88213062286377

Token 119: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.7311438918113708
    2. '11' → logprob: -1.3561439514160156
    3. '01' → logprob: -1.3561439514160156
    4. '10' → logprob: -6.356143951416016
    5. '1' → logprob: -7.356143951416016
    6. '111' → logprob: -7.981143951416016
    7. '0' → logprob: -8.106143951416016
    8. '001' → logprob: -8.856143951416016
    9. '000' → logprob: -9.231143951416016
    10. '011' → logprob: -10.106143951416016

Token 120: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.6140621304512024
    2. '",' → logprob: -0.9890621304512024
    3. '"' → logprob: -2.4890620708465576
    4. '","' → logprob: -5.864062309265137
    5. '"]' → logprob: -7.864062309265137
    6. '<|end|>' → logprob: -8.489062309265137
    7. '",
' → logprob: -8.864062309265137
    8. '"
' → logprob: -9.239062309265137
    9. '         ' → logprob: -9.864062309265137
    10. ',
' → logprob: -10.364062309265137

Token 121: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.12741896510124207
    2. '"' → logprob: -2.1274189949035645
    3. ''' → logprob: -8.127418518066406
    4. '     ' → logprob: -9.252418518066406
    5. '   ' → logprob: -10.877418518066406
    6. '             ' → logprob: -11.127418518066406
    7. '       ' → logprob: -11.127418518066406
    8. ' ' → logprob: -11.127418518066406
    9. '        ' → logprob: -11.252418518066406
    10. '`' → logprob: -11.502418518066406

Token 122: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -2.069664333248511e-05
    2. '         ' → logprob: -11.125020980834961
    3. ''' → logprob: -12.375020980834961
    4. ' ' → logprob: -14.750020980834961
    5. ' "' → logprob: -15.000020980834961
    6. '```' → logprob: -15.250020980834961
    7. '000' → logprob: -15.375020980834961
    8. '"""' → logprob: -15.375020980834961
    9. '`' → logprob: -15.500020980834961
    10. '   ' → logprob: -16.50002098083496

Token 123: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3163773715496063
    2. '"' → logprob: -1.3163774013519287
    3. '111' → logprob: -6.94137716293335
    4. '001' → logprob: -7.06637716293335
    5. ''' → logprob: -7.31637716293335
    6. '0' → logprob: -8.316377639770508
    7. '00' → logprob: -9.066377639770508
    8. '010' → logprob: -9.691377639770508
    9. '100' → logprob: -9.816377639770508
    10. '011' → logprob: -10.066377639770508

Token 124: '110' (ID: 7920)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03666996583342552
    2. '011' → logprob: -3.661669969558716
    3. '001' → logprob: -4.911669731140137
    4. '00' → logprob: -6.411669731140137
    5. '0' → logprob: -7.411669731140137
    6. '111' → logprob: -7.536669731140137
    7. '010' → logprob: -9.661669731140137
    8. '100' → logprob: -9.911669731140137
    9. '01' → logprob: -10.661669731140137
    10. '1' → logprob: -11.411669731140137

Token 125: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.004364609718322754
    2. '11' → logprob: -5.504364490509033
    3. '000' → logprob: -9.004364967346191
    4. '0' → logprob: -9.379364967346191
    5. '01' → logprob: -9.504364967346191
    6. '011' → logprob: -13.254364967346191
    7. '001' → logprob: -14.191864967346191
    8. '10' → logprob: -14.441864967346191
    9. '<|end|>' → logprob: -15.254364967346191
    10. '```' → logprob: -15.754364967346191

Token 126: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.6124165654182434
    2. '",
' → logprob: -0.8624165654182434
    3. '"' → logprob: -3.3624165058135986
    4. '"]' → logprob: -7.362416744232178
    5. '","' → logprob: -7.862416744232178
    6. '",
' → logprob: -10.23741626739502
    7. '<|end|>' → logprob: -10.48741626739502
    8. '"
' → logprob: -10.73741626739502
    9. '",

' → logprob: -11.48741626739502
    10. '"}' → logprob: -11.73741626739502

Token 127: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.6396570205688477
    2. '"' → logprob: -0.7646570205688477
    3. '<|end|>' → logprob: -6.014657020568848
    4. ''' → logprob: -6.139657020568848
    5. '        ' → logprob: -7.014657020568848
    6. '          ' → logprob: -7.639657020568848
    7. '       ' → logprob: -8.139657020568848
    8. ' ' → logprob: -8.514657020568848
    9. '     ' → logprob: -8.889657020568848
    10. ' "' → logprob: -9.014657020568848

Token 128: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.06242853403091431
    2. '         ' → logprob: -2.8124284744262695
    3. ' ' → logprob: -8.31242847442627
    4. ' "' → logprob: -9.68742847442627
    5. '          ' → logprob: -9.81242847442627
    6. '     ' → logprob: -10.43742847442627
    7. '   ' → logprob: -11.31242847442627
    8. '        ' → logprob: -11.56242847442627
    9. '             ' → logprob: -11.56242847442627
    10. ''' → logprob: -11.81242847442627

Token 129: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.32061776518821716
    2. '"' → logprob: -1.3206177949905396
    3. '001' → logprob: -5.82061767578125
    4. '         ' → logprob: -6.32061767578125
    5. ' ' → logprob: -6.44561767578125
    6. ''' → logprob: -8.32061767578125
    7. ' "' → logprob: -8.69561767578125
    8. '010' → logprob: -8.69561767578125
    9. '0' → logprob: -9.57061767578125
    10. '011' → logprob: -9.94561767578125

Token 130: '110' (ID: 7920)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.6024162769317627
    2. '110' → logprob: -0.8524162769317627
    3. '001' → logprob: -4.352416038513184
    4. '011' → logprob: -4.602416038513184
    5. '111' → logprob: -5.852416038513184
    6. '010' → logprob: -9.039916038513184
    7. '00' → logprob: -9.227416038513184
    8. '100' → logprob: -10.039916038513184
    9. '0' → logprob: -10.664916038513184
    10. '11' → logprob: -11.289916038513184

Token 131: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -5.514650183613412e-05
    2. '11' → logprob: -10.250055313110352
    3. '0' → logprob: -12.000055313110352
    4. '"' → logprob: -12.125055313110352
    5. ' ' → logprob: -12.875055313110352
    6. '01' → logprob: -12.875055313110352
    7. '000' → logprob: -13.625055313110352
    8. '<|end|>' → logprob: -14.000055313110352
    9. ''' → logprob: -15.000055313110352
    10. '```' → logprob: -16.00005531311035

Token 132: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.22975721955299377
    2. '",
' → logprob: -1.7297571897506714
    3. '"' → logprob: -4.229757308959961
    4. '"]' → logprob: -4.354757308959961
    5. '","' → logprob: -8.479757308959961
    6. '<|end|>' → logprob: -9.229757308959961
    7. ']' → logprob: -9.979757308959961
    8. '"],' → logprob: -10.229757308959961
    9. ',
' → logprob: -10.354757308959961
    10. '"
' → logprob: -10.854757308959961

Token 133: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.016467850655317307
    2. '"' → logprob: -4.141468048095703
    3. ''' → logprob: -8.766468048095703
    4. '        ' → logprob: -9.516468048095703
    5. '          ' → logprob: -9.766468048095703
    6. '<|end|>' → logprob: -10.016468048095703
    7. '       ' → logprob: -10.516468048095703
    8. '     ' → logprob: -10.891468048095703
    9. '             ' → logprob: -11.016468048095703
    10. '   ' → logprob: -11.516468048095703

Token 134: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.000978743890300393
    2. ''' → logprob: -7.000978946685791
    3. '         ' → logprob: -10.750978469848633
    4. ' "' → logprob: -11.000978469848633
    5. ' ' → logprob: -11.875978469848633
    6. '<|end|>' → logprob: -12.250978469848633
    7. ''"' → logprob: -13.125978469848633
    8. '"""' → logprob: -13.125978469848633
    9. '```' → logprob: -13.125978469848633
    10. '          ' → logprob: -13.375978469848633

Token 135: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00038574778591282666
    2. '000' → logprob: -8.125385284423828
    3. ''' → logprob: -10.125385284423828
    4. ' ' → logprob: -10.625385284423828
    5. ' "' → logprob: -11.125385284423828
    6. '0' → logprob: -12.625385284423828
    7. '         ' → logprob: -14.000385284423828
    8. '```' → logprob: -14.125385284423828
    9. '"
' → logprob: -14.625385284423828
    10. '"""' → logprob: -14.625385284423828

Token 136: '000' (ID: 1302)
  Prédit: '110'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '110' → logprob: -0.4857107102870941
    2. '000' → logprob: -0.9857107400894165
    3. '001' → logprob: -5.360710620880127
    4. '111' → logprob: -5.610710620880127
    5. '011' → logprob: -5.860710620880127
    6. '00' → logprob: -8.235711097717285
    7. '010' → logprob: -10.298211097717285
    8. '11' → logprob: -10.923211097717285
    9. '100' → logprob: -11.798211097717285
    10. '```' → logprob: -12.235711097717285

Token 137: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0003291480534244329
    2. '11' → logprob: -8.12532901763916
    3. '01' → logprob: -11.00032901763916
    4. '"' → logprob: -11.75032901763916
    5. '000' → logprob: -12.50032901763916
    6. ' ' → logprob: -13.62532901763916
    7. '0' → logprob: -14.00032901763916
    8. '10' → logprob: -14.37532901763916
    9. '<|end|>' → logprob: -14.43782901763916
    10. '001' → logprob: -15.12532901763916

Token 138: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.37285980582237244
    2. '"' → logprob: -1.2478598356246948
    3. '",
' → logprob: -3.7478597164154053
    4. '","' → logprob: -8.372859954833984
    5. '"
' → logprob: -8.872859954833984
    6. '"]' → logprob: -9.247859954833984
    7. '"}' → logprob: -10.872859954833984
    8. '",

' → logprob: -11.622859954833984
    9. '<|end|>' → logprob: -11.747859954833984
    10. ' "' → logprob: -11.872859954833984

Token 139: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.07956069707870483
    2. '"' → logprob: -2.5795607566833496
    3. '        ' → logprob: -8.454560279846191
    4. ''' → logprob: -8.704560279846191
    5. '     ' → logprob: -9.204560279846191
    6. '       ' → logprob: -9.454560279846191
    7. '          ' → logprob: -10.454560279846191
    8. '   ' → logprob: -11.079560279846191
    9. ' ' → logprob: -11.079560279846191
    10. '             ' → logprob: -11.079560279846191

Token 140: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.10051655024290085
    2. '         ' → logprob: -2.3505165576934814
    3. ' ' → logprob: -9.725516319274902
    4. ' "' → logprob: -9.975516319274902
    5. '     ' → logprob: -10.100516319274902
    6. '       ' → logprob: -10.100516319274902
    7. '        ' → logprob: -10.475516319274902
    8. '   ' → logprob: -10.600516319274902
    9. '          ' → logprob: -10.600516319274902
    10. ''' → logprob: -10.975516319274902

Token 141: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05511290580034256
    2. '000' → logprob: -2.930112838745117
    3. ''' → logprob: -8.555112838745117
    4. '0' → logprob: -11.055112838745117
    5. ' ' → logprob: -11.180112838745117
    6. ' "' → logprob: -13.055112838745117
    7. '00' → logprob: -13.305112838745117
    8. '   ' → logprob: -14.180112838745117
    9. '`' → logprob: -14.305112838745117
    10. '001' → logprob: -14.430112838745117

Token 142: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.038601815700531006
    2. '110' → logprob: -3.413601875305176
    3. '00' → logprob: -6.538601875305176
    4. '001' → logprob: -6.538601875305176
    5. '111' → logprob: -6.788601875305176
    6. '011' → logprob: -7.163601875305176
    7. '010' → logprob: -9.413601875305176
    8. '100' → logprob: -10.601101875305176
    9. '0' → logprob: -11.163601875305176
    10. '11' → logprob: -11.413601875305176

Token 143: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0002406090497970581
    2. '01' → logprob: -8.750240325927734
    3. '"' → logprob: -9.875240325927734
    4. '11' → logprob: -10.875240325927734
    5. '0' → logprob: -12.375240325927734
    6. ' ' → logprob: -12.625240325927734
    7. ''' → logprob: -13.500240325927734
    8. '10' → logprob: -13.875240325927734
    9. '000' → logprob: -14.500240325927734
    10. '<|end|>' → logprob: -14.750240325927734

Token 144: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.04280630126595497
    2. '",
' → logprob: -3.292806386947632
    3. '"' → logprob: -5.417806148529053
    4. '"]' → logprob: -8.792806625366211
    5. ',' → logprob: -9.917806625366211
    6. '","' → logprob: -10.417806625366211
    7. '",
' → logprob: -10.542806625366211
    8. '',' → logprob: -11.417806625366211
    9. ',
' → logprob: -11.542806625366211
    10. '         ' → logprob: -11.542806625366211

Token 145: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.5823394060134888
    2. '"' → logprob: -0.8323394060134888
    3. ''' → logprob: -5.207339286804199
    4. '       ' → logprob: -8.3323392868042
    5. '        ' → logprob: -8.4573392868042
    6. '          ' → logprob: -8.8323392868042
    7. '   ' → logprob: -9.8323392868042
    8. ' "' → logprob: -9.8323392868042
    9. '     ' → logprob: -9.9573392868042
    10. '             ' → logprob: -10.3323392868042

Token 146: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0023045314010232687
    2. '         ' → logprob: -6.377304553985596
    3. ' "' → logprob: -7.877304553985596
    4. ' ' → logprob: -9.252304077148438
    5. '   ' → logprob: -10.002304077148438
    6. ''' → logprob: -10.502304077148438
    7. '       ' → logprob: -10.627304077148438
    8. '     ' → logprob: -11.377304077148438
    9. '           ' → logprob: -12.252304077148438
    10. '          ' → logprob: -12.877304077148438

Token 147: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08138272911310196
    2. '000' → logprob: -2.5813827514648438
    3. ''' → logprob: -6.081382751464844
    4. '0' → logprob: -9.456382751464844
    5. '00' → logprob: -10.081382751464844
    6. ' ' → logprob: -10.081382751464844
    7. ' "' → logprob: -10.581382751464844
    8. '         ' → logprob: -12.456382751464844
    9. '   ' → logprob: -12.706382751464844
    10. '""' → logprob: -12.831382751464844

Token 148: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.05813857913017273
    2. '110' → logprob: -2.933138608932495
    3. '001' → logprob: -6.808138370513916
    4. '011' → logprob: -6.808138370513916
    5. '111' → logprob: -7.683138370513916
    6. '00' → logprob: -8.558138847351074
    7. '100' → logprob: -8.683138847351074
    8. '010' → logprob: -8.808138847351074
    9. '0' → logprob: -10.058138847351074
    10. '```' → logprob: -12.495638847351074

Token 149: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00035488870344124734
    2. '11' → logprob: -8.125354766845703
    3. '01' → logprob: -10.375354766845703
    4. '"' → logprob: -11.250354766845703
    5. '000' → logprob: -12.250354766845703
    6. '0' → logprob: -13.000354766845703
    7. '10' → logprob: -13.125354766845703
    8. '<|end|>' → logprob: -13.437854766845703
    9. '""' → logprob: -14.375354766845703
    10. '```' → logprob: -14.437854766845703

Token 150: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.17187611758708954
    2. '",
' → logprob: -2.2968761920928955
    3. '"' → logprob: -2.9218761920928955
    4. '"]' → logprob: -5.921875953674316
    5. '"
' → logprob: -8.296875953674316
    6. '","' → logprob: -8.796875953674316
    7. ']' → logprob: -9.421875953674316
    8. '",
' → logprob: -9.546875953674316
    9. ',
' → logprob: -10.046875953674316
    10. '<|end|>' → logprob: -10.046875953674316

Token 151: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.029866540804505348
    2. ''' → logprob: -4.029866695404053
    3. '"' → logprob: -4.904866695404053
    4. '       ' → logprob: -6.404866695404053
    5. '   ' → logprob: -7.279866695404053
    6. '        ' → logprob: -7.279866695404053
    7. '          ' → logprob: -8.029866218566895
    8. '     ' → logprob: -8.154866218566895
    9. '             ' → logprob: -8.279866218566895
    10. '`' → logprob: -9.529866218566895

Token 152: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0026352303102612495
    2. ' "' → logprob: -6.0026350021362305
    3. ''' → logprob: -9.62763500213623
    4. '         ' → logprob: -10.12763500213623
    5. '   ' → logprob: -11.37763500213623
    6. ' ' → logprob: -11.75263500213623
    7. '       ' → logprob: -11.87763500213623
    8. ']' → logprob: -12.00263500213623
    9. '"]' → logprob: -12.50263500213623
    10. ')' → logprob: -13.12763500213623

Token 153: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0640970841050148
    2. '000' → logprob: -2.8140971660614014
    3. ''' → logprob: -6.189096927642822
    4. '0' → logprob: -10.93909740447998
    5. '"""' → logprob: -11.06409740447998
    6. '00' → logprob: -11.56409740447998
    7. '""' → logprob: -12.06409740447998
    8. '"}' → logprob: -12.06409740447998
    9. '"]' → logprob: -12.31409740447998
    10. ' "' → logprob: -12.56409740447998

Token 154: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0009816011879593134
    2. '110' → logprob: -7.37598180770874
    3. '00' → logprob: -9.125981330871582
    4. '001' → logprob: -9.125981330871582
    5. '111' → logprob: -9.875981330871582
    6. '100' → logprob: -10.500981330871582
    7. '011' → logprob: -10.625981330871582
    8. '010' → logprob: -10.875981330871582
    9. '0' → logprob: -12.875981330871582
    10. '<|end|>' → logprob: -13.188481330871582

Token 155: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00016110755677800626
    2. '01' → logprob: -9.500161170959473
    3. '"' → logprob: -10.125161170959473
    4. '11' → logprob: -10.500161170959473
    5. ' ' → logprob: -11.750161170959473
    6. '000' → logprob: -12.875161170959473
    7. '10' → logprob: -13.437661170959473
    8. ''' → logprob: -13.625161170959473
    9. '```' → logprob: -13.812661170959473
    10. '001' → logprob: -14.000161170959473

Token 156: '"],
' (ID: 15666)
  Prédit: '"],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"],' → logprob: -0.3872968256473541
    2. '"]' → logprob: -1.1372967958450317
    3. '],' → logprob: -9.012296676635742
    4. ']' → logprob: -9.137296676635742
    5. '"],
' → logprob: -9.262296676635742
    6. '"' → logprob: -9.762296676635742
    7. ''],' → logprob: -11.012296676635742
    8. '",' → logprob: -11.512296676635742
    9. '']' → logprob: -12.012296676635742
    10. '   ' → logprob: -12.012296676635742

Token 157: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.13118956983089447
    2. '   ' → logprob: -2.5061895847320557
    3. ''' → logprob: -3.3811895847320557
    4. ''D' → logprob: -5.631189346313477
    5. ''}' → logprob: -5.756189346313477
    6. ' ' → logprob: -8.381189346313477
    7. ''C' → logprob: -9.256189346313477
    8. ''A' → logprob: -9.506189346313477
    9. ' }' → logprob: -9.506189346313477
    10. ''s' → logprob: -10.756189346313477

Token 158: ' '' (ID: 461)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.07496585696935654
    2. ''D' → logprob: -2.9499659538269043
    3. '   ' → logprob: -4.699965953826904
    4. ''' (adapté à ' '') → logprob: -4.824965953826904
    5. ''}' → logprob: -5.949965953826904
    6. ''C' → logprob: -10.199965476989746
    7. ' ' → logprob: -10.699965476989746
    8. ''A' → logprob: -10.824965476989746
    9. ''T' → logprob: -11.199965476989746
    10. ' }' → logprob: -11.449965476989746

Token 159: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.005412096157670021
    2. ''D' → logprob: -5.6304121017456055
    3. ''' → logprob: -6.3804121017456055
    4. ' D' → logprob: -10.630412101745605
    5. 'E' → logprob: -11.005412101745605
    6. ' '' → logprob: -11.505412101745605
    7. '}' → logprob: -11.755412101745605
    8. ' ' → logprob: -12.380412101745605
    9. '`' → logprob: -12.442912101745605
    10. 'S' → logprob: -12.505412101745605

Token 160: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00023226479243021458
    2. ''' → logprob: -8.625232696533203
    3. ':' → logprob: -10.125232696533203
    4. ' ':' → logprob: -12.000232696533203
    5. '":' → logprob: -12.125232696533203
    6. ''):' → logprob: -15.125232696533203
    7. '':[' → logprob: -15.875232696533203
    8. ''>' → logprob: -16.125232696533203
    9. '’:' → logprob: -16.250232696533203
    10. '```' → logprob: -16.625232696533203

Token 161: ' ["' (ID: 9129)
  Prédit: ' ["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ["' → logprob: -0.07879845798015594
    2. ' [' → logprob: -2.828798532485962
    3. '["' → logprob: -4.953798294067383
    4. ' [
' → logprob: -5.203798294067383
    5. '[' → logprob: -5.578798294067383
    6. ' ['' → logprob: -8.703798294067383
    7. ' ' → logprob: -9.453798294067383
    8. '[
' → logprob: -9.578798294067383
    9. ' "' → logprob: -11.078798294067383
    10. ' [

' → logprob: -11.203798294067383

Token 162: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02636590786278248
    2. '000' → logprob: -3.6513659954071045
    3. ''' → logprob: -10.401366233825684
    4. ' "' → logprob: -11.526366233825684
    5. '0' → logprob: -11.776366233825684
    6. '001' → logprob: -12.651366233825684
    7. '["' → logprob: -12.901366233825684
    8. '""' → logprob: -13.151366233825684
    9. '00' → logprob: -13.276366233825684
    10. '   ' → logprob: -13.526366233825684

Token 163: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03297867625951767
    2. '011' → logprob: -4.032978534698486
    3. '001' → logprob: -4.782978534698486
    4. '111' → logprob: -5.282978534698486
    5. '110' → logprob: -7.032978534698486
    6. '010' → logprob: -8.657979011535645
    7. '100' → logprob: -9.282979011535645
    8. '0' → logprob: -9.407979011535645
    9. '00' → logprob: -10.282979011535645
    10. '1' → logprob: -13.032979011535645

Token 164: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.6825806498527527
    2. '11' → logprob: -1.1825807094573975
    3. '01' → logprob: -1.6825807094573975
    4. '10' → logprob: -6.182580471038818
    5. '0' → logprob: -9.432580947875977
    6. '111' → logprob: -10.057580947875977
    7. '000' → logprob: -10.057580947875977
    8. '1' → logprob: -10.432580947875977
    9. '001' → logprob: -10.995080947875977
    10. '011' → logprob: -11.370080947875977

Token 165: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.23163414001464844
    2. '",
' → logprob: -1.7316341400146484
    3. '"' → logprob: -3.6066341400146484
    4. '","' → logprob: -7.356634140014648
    5. ',
' → logprob: -7.481634140014648
    6. ',' → logprob: -7.981634140014648
    7. '',' → logprob: -8.106634140014648
    8. '',
' → logprob: -8.481634140014648
    9. '",
' → logprob: -8.731634140014648
    10. '",[' → logprob: -9.356634140014648

Token 166: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.1296190470457077
    2. '"' → logprob: -2.1296191215515137
    3. '     ' → logprob: -6.504619121551514
    4. '   ' → logprob: -7.754619121551514
    5. ' ' → logprob: -8.504618644714355
    6. '       ' → logprob: -8.629618644714355
    7. ''' → logprob: -8.879618644714355
    8. ' "' → logprob: -9.504618644714355
    9. '        ' → logprob: -9.629618644714355
    10. '             ' → logprob: -10.504618644714355

Token 167: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -6.313314952421933e-05
    2. ' "' → logprob: -10.125062942504883
    3. ''' → logprob: -11.500062942504883
    4. '         ' → logprob: -11.875062942504883
    5. ' ' → logprob: -13.125062942504883
    6. '000' → logprob: -13.875062942504883
    7. '   ' → logprob: -14.250062942504883
    8. '```' → logprob: -15.125062942504883
    9. '0' → logprob: -15.250062942504883
    10. '`' → logprob: -15.375062942504883

Token 168: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.012044632807374
    2. '001' → logprob: -4.637044429779053
    3. '111' → logprob: -6.512044429779053
    4. '011' → logprob: -8.137044906616211
    5. '"' → logprob: -9.012044906616211
    6. '110' → logprob: -9.512044906616211
    7. '100' → logprob: -9.637044906616211
    8. '00' → logprob: -9.762044906616211
    9. '010' → logprob: -9.887044906616211
    10. '0' → logprob: -10.137044906616211

Token 169: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03435789793729782
    2. '011' → logprob: -4.159358024597168
    3. '001' → logprob: -4.659358024597168
    4. '110' → logprob: -5.409358024597168
    5. '111' → logprob: -5.534358024597168
    6. '010' → logprob: -9.284358024597168
    7. '100' → logprob: -9.409358024597168
    8. '00' → logprob: -10.034358024597168
    9. '0' → logprob: -10.284358024597168
    10. '11' → logprob: -13.471858024597168

Token 170: '00' (ID: 504)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.8347479104995728
    2. '01' → logprob: -1.2097479104995728
    3. '00' → logprob: -1.3347479104995728
    4. '10' → logprob: -5.834747791290283
    5. '1' → logprob: -7.334747791290283
    6. '111' → logprob: -8.084748268127441
    7. '0' → logprob: -8.584748268127441
    8. '001' → logprob: -8.959748268127441
    9. '011' → logprob: -8.959748268127441
    10. '000' → logprob: -9.084748268127441

Token 171: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.7747681736946106
    2. '",
' → logprob: -1.0247681140899658
    3. '"' → logprob: -2.024768114089966
    4. '","' → logprob: -4.149768352508545
    5. ',' → logprob: -4.524768352508545
    6. '         ' → logprob: -5.024768352508545
    7. ',
' → logprob: -5.024768352508545
    8. '       ' → logprob: -6.149768352508545
    9. ',"' → logprob: -6.649768352508545
    10. '<|end|>' → logprob: -7.024768352508545

Token 172: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.4758071303367615
    2. '"' → logprob: -0.9758071303367615
    3. ''' → logprob: -7.225807189941406
    4. '   ' → logprob: -7.725807189941406
    5. '     ' → logprob: -8.350807189941406
    6. ' ' → logprob: -8.725807189941406
    7. '       ' → logprob: -9.725807189941406
    8. '             ' → logprob: -10.600807189941406
    9. '        ' → logprob: -11.100807189941406
    10. '`' → logprob: -11.225807189941406

Token 173: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.00012761499965563416
    2. ' "' → logprob: -9.625127792358398
    3. ''' → logprob: -10.000127792358398
    4. '         ' → logprob: -11.750127792358398
    5. ' ' → logprob: -12.500127792358398
    6. '   ' → logprob: -14.250127792358398
    7. '```' → logprob: -14.375127792358398
    8. '000' → logprob: -14.500127792358398
    9. '0' → logprob: -14.625127792358398
    10. '`' → logprob: -15.125127792358398

Token 174: '011' (ID: 17342)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.10914914309978485
    2. '001' → logprob: -2.859149217605591
    3. '"' → logprob: -3.109149217605591
    4. '111' → logprob: -7.359148979187012
    5. '011' → logprob: -7.609148979187012
    6. '010' → logprob: -9.734148979187012
    7. '110' → logprob: -9.859148979187012
    8. '00' → logprob: -9.984148979187012
    9. ''' → logprob: -9.984148979187012
    10. '100' → logprob: -10.109148979187012

Token 175: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.34515008330345154
    2. '111' → logprob: -1.845150113105774
    3. '001' → logprob: -2.9701499938964844
    4. '110' → logprob: -3.0951499938964844
    5. '100' → logprob: -3.8451499938964844
    6. '011' → logprob: -4.220149993896484
    7. '101' → logprob: -7.095149993896484
    8. '010' → logprob: -8.470149993896484
    9. '0' → logprob: -9.782649993896484
    10. '00' → logprob: -10.095149993896484

Token 176: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.020684130489826202
    2. '11' → logprob: -3.895684242248535
    3. '01' → logprob: -9.145684242248535
    4. '000' → logprob: -11.520684242248535
    5. '0' → logprob: -11.645684242248535
    6. '110' → logprob: -11.770684242248535
    7. ' ' → logprob: -12.520684242248535
    8. '011' → logprob: -13.333184242248535
    9. '001' → logprob: -13.833184242248535
    10. '10' → logprob: -14.145684242248535

Token 177: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.1635727435350418
    2. '",' → logprob: -1.9135727882385254
    3. '"' → logprob: -5.913572788238525
    4. '","' → logprob: -8.288572311401367
    5. '",
' → logprob: -8.663572311401367
    6. '00' → logprob: -9.913572311401367
    7. ',
' → logprob: -10.163572311401367
    8. '011' → logprob: -10.413572311401367
    9. '0' → logprob: -10.788572311401367
    10. '',
' → logprob: -11.288572311401367

Token 178: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.5869324803352356
    2. '"' → logprob: -0.8369324803352356
    3. '<|end|>' → logprob: -5.46193265914917
    4. ' "' → logprob: -6.21193265914917
    5. '          ' → logprob: -6.71193265914917
    6. ' ' → logprob: -6.83693265914917
    7. '        ' → logprob: -6.96193265914917
    8. '     ' → logprob: -7.96193265914917
    9. '       ' → logprob: -8.586932182312012
    10. '   ' → logprob: -8.711932182312012

Token 179: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0009983942145481706
    2. ' "' → logprob: -7.250998497009277
    3. '         ' → logprob: -9.500998497009277
    4. ' ' → logprob: -9.500998497009277
    5. '<|end|>' → logprob: -10.250998497009277
    6. ''' → logprob: -10.375998497009277
    7. '011' → logprob: -10.875998497009277
    8. '"
' → logprob: -11.750998497009277
    9. '0' → logprob: -11.750998497009277
    10. '010' → logprob: -12.250998497009277

Token 180: '001' (ID: 7659)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.03878096491098404
    2. '110' → logprob: -3.788780927658081
    3. '001' → logprob: -4.66378116607666
    4. '"' → logprob: -5.78878116607666
    5. '010' → logprob: -6.78878116607666
    6. '000' → logprob: -6.78878116607666
    7. '111' → logprob: -7.91378116607666
    8. ' ' → logprob: -9.16378116607666
    9. '100' → logprob: -9.28878116607666
    10. '101' → logprob: -10.03878116607666

Token 181: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.001685293740592897
    2. '000' → logprob: -6.62668514251709
    3. '110' → logprob: -8.37668514251709
    4. '101' → logprob: -10.25168514251709
    5. '001' → logprob: -10.25168514251709
    6. '111' → logprob: -10.75168514251709
    7. '10' → logprob: -11.00168514251709
    8. '010' → logprob: -11.93918514251709
    9. '1' → logprob: -12.68918514251709
    10. '800' → logprob: -12.81418514251709

Token 182: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -5.44312788406387e-05
    2. '0' → logprob: -10.125054359436035
    3. ' ' → logprob: -11.500054359436035
    4. '<|end|>' → logprob: -12.500054359436035
    5. '"' → logprob: -16.25005531311035
    6. '000' → logprob: -16.25005531311035
    7. '
' → logprob: -16.37505531311035
    8. '```' → logprob: -17.12505531311035
    9. ' 
' → logprob: -17.25005531311035
    10. ''' → logprob: -17.37505531311035

Token 183: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.28696873784065247
    2. '",
' → logprob: -1.41196870803833
    3. '"' → logprob: -5.28696870803833
    4. '","' → logprob: -8.036969184875488
    5. '<|end|>' → logprob: -8.536969184875488
    6. '",
' → logprob: -9.661969184875488
    7. ',
' → logprob: -10.161969184875488
    8. '"]' → logprob: -10.411969184875488
    9. ',' → logprob: -10.911969184875488
    10. '",

' → logprob: -11.036969184875488

Token 184: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.13624373078346252
    2. '"' → logprob: -2.1362438201904297
    3. '<|end|>' → logprob: -6.01124382019043
    4. '          ' → logprob: -6.38624382019043
    5. ''' → logprob: -6.76124382019043
    6. ' ' → logprob: -7.13624382019043
    7. ' "' → logprob: -7.26124382019043
    8. '       ' → logprob: -7.63624382019043
    9. '             ' → logprob: -7.63624382019043
    10. '        ' → logprob: -7.88624382019043

Token 185: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.02901393733918667
    2. '<|end|>' → logprob: -3.6540138721466064
    3. ' "' → logprob: -6.9040141105651855
    4. ''' → logprob: -7.4040141105651855
    5. ' ' → logprob: -7.6540141105651855
    6. '0' → logprob: -8.279013633728027
    7. '         ' → logprob: -9.904013633728027
    8. '   ' → logprob: -9.904013633728027
    9. '000' → logprob: -10.154013633728027
    10. '`' → logprob: -10.404013633728027

Token 186: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.06987451761960983
    2. '"' → logprob: -3.3198745250701904
    3. '001' → logprob: -3.5698745250701904
    4. '010' → logprob: -6.569874286651611
    5. '011' → logprob: -6.944874286651611
    6. ' ' → logprob: -7.694874286651611
    7. '00' → logprob: -9.31987476348877
    8. ''' → logprob: -9.81987476348877
    9. ' "' → logprob: -9.94487476348877
    10. '0' → logprob: -10.06987476348877

Token 187: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.37831351161003113
    2. '110' → logprob: -1.5033135414123535
    3. '011' → logprob: -3.0033135414123535
    4. '001' → logprob: -4.0033135414123535
    5. '100' → logprob: -4.1283135414123535
    6. '010' → logprob: -5.2533135414123535
    7. '111' → logprob: -5.7533135414123535
    8. '0' → logprob: -9.128313064575195
    9. '```' → logprob: -10.190813064575195
    10. '00' → logprob: -11.190813064575195

Token 188: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0006857485859654844
    2. '"' → logprob: -7.875685691833496
    3. '0' → logprob: -8.500685691833496
    4. '01' → logprob: -9.500685691833496
    5. '11' → logprob: -11.500685691833496
    6. ''' → logprob: -11.500685691833496
    7. ' ' → logprob: -12.500685691833496
    8. '10' → logprob: -13.625685691833496
    9. '000' → logprob: -14.000685691833496
    10. '""' → logprob: -15.375685691833496

Token 189: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.054359566420316696
    2. '",
' → logprob: -3.0543596744537354
    3. '"' → logprob: -5.679359436035156
    4. '',' → logprob: -7.179359436035156
    5. ',' → logprob: -7.429359436035156
    6. '","' → logprob: -7.804359436035156
    7. ',
' → logprob: -8.554359436035156
    8. '',
' → logprob: -8.929359436035156
    9. '<|end|>' → logprob: -9.679359436035156
    10. '",'' → logprob: -9.804359436035156

Token 190: '         ' (ID: 983)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.27135783433914185
    2. '<|end|>' → logprob: -2.021357774734497
    3. '"' → logprob: -2.521357774734497
    4. '   ' → logprob: -5.146358013153076
    5. '       ' → logprob: -5.396358013153076
    6. '         ' → logprob: -5.396358013153076
    7. ' ' → logprob: -5.521358013153076
    8. ']' → logprob: -6.396358013153076
    9. '']' → logprob: -7.271358013153076
    10. '     ' → logprob: -7.646358013153076

Token 191: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.013085288926959038
    2. ''' → logprob: -4.88808536529541
    3. '         ' → logprob: -5.88808536529541
    4. ' "' → logprob: -6.63808536529541
    5. '<|end|>' → logprob: -7.38808536529541
    6. '   ' → logprob: -8.26308536529541
    7. ' ' → logprob: -8.63808536529541
    8. '     ' → logprob: -9.63808536529541
    9. '          ' → logprob: -10.13808536529541
    10. '       ' → logprob: -10.38808536529541

Token 192: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03249378502368927
    2. '"' → logprob: -3.532493829727173
    3. '0' → logprob: -6.532493591308594
    4. ''' → logprob: -7.032493591308594
    5. ' ' → logprob: -8.657493591308594
    6. '00' → logprob: -9.032493591308594
    7. '   ' → logprob: -9.907493591308594
    8. '         ' → logprob: -11.282493591308594
    9. '     ' → logprob: -11.657493591308594
    10. '001' → logprob: -11.782493591308594

Token 193: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00026300468016415834
    2. '0' → logprob: -8.750263214111328
    3. '00' → logprob: -10.000263214111328
    4. '<|end|>' → logprob: -10.125263214111328
    5. '001' → logprob: -11.250263214111328
    6. ' ' → logprob: -13.500263214111328
    7. '100' → logprob: -13.750263214111328
    8. '<|end|>' → logprob: -13.875263214111328
    9. '010' → logprob: -14.750263214111328
    10. '011' → logprob: -15.000263214111328

Token 194: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0023676820565015078
    2. '0' → logprob: -6.2523674964904785
    3. '"' → logprob: -7.8773674964904785
    4. ''' → logprob: -10.877367973327637
    5. ' ' → logprob: -11.252367973327637
    6. '01' → logprob: -11.627367973327637
    7. '""' → logprob: -12.252367973327637
    8. '"""' → logprob: -12.627367973327637
    9. '000' → logprob: -13.002367973327637
    10. '"""
' → logprob: -13.689867973327637

Token 195: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.4373105466365814
    2. ',' → logprob: -1.5623105764389038
    3. ',
' → logprob: -2.6873104572296143
    4. '",
' → logprob: -2.9373104572296143
    5. '"' → logprob: -4.312310695648193
    6. '   ' → logprob: -6.062310695648193
    7. '       ' → logprob: -6.437310695648193
    8. '"]' → logprob: -6.687310695648193
    9. '","' → logprob: -6.937310695648193
    10. '',' → logprob: -7.187310695648193

Token 196: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.015680620446801186
    2. ''' → logprob: -4.76568078994751
    3. '     ' → logprob: -6.01568078994751
    4. '"' → logprob: -6.26568078994751
    5. '       ' → logprob: -6.51568078994751
    6. '   ' → logprob: -7.64068078994751
    7. '        ' → logprob: -7.76568078994751
    8. '             ' → logprob: -9.140680313110352
    9. ' ' → logprob: -9.390680313110352
    10. '0' → logprob: -10.390680313110352

Token 197: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0005618501454591751
    2. ' "' → logprob: -8.000561714172363
    3. ''' → logprob: -9.000561714172363
    4. '         ' → logprob: -9.500561714172363
    5. '   ' → logprob: -11.250561714172363
    6. ' ' → logprob: -12.375561714172363
    7. '     ' → logprob: -12.875561714172363
    8. '       ' → logprob: -13.000561714172363
    9. '0' → logprob: -13.125561714172363
    10. '`' → logprob: -14.250561714172363

Token 198: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00025204161647707224
    2. ''' → logprob: -8.625251770019531
    3. '000' → logprob: -10.125251770019531
    4. '0' → logprob: -11.250251770019531
    5. ' "' → logprob: -11.375251770019531
    6. ' ' → logprob: -12.125251770019531
    7. '   ' → logprob: -13.750251770019531
    8. '00' → logprob: -15.125251770019531
    9. '""' → logprob: -15.375251770019531
    10. '         ' → logprob: -15.375251770019531

Token 199: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.002113977912813425
    2. '0' → logprob: -6.2521138191223145
    3. '00' → logprob: -8.627114295959473
    4. '001' → logprob: -12.752114295959473
    5. '011' → logprob: -13.627114295959473
    6. ''' → logprob: -14.252114295959473
    7. ' ' → logprob: -14.502114295959473
    8. ''s' → logprob: -15.752114295959473
    9. '۰۰' → logprob: -15.752114295959473
    10. '100' → logprob: -15.877114295959473

Token 200: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0009424308082088828
    2. '"' → logprob: -7.125942230224609
    3. '0' → logprob: -9.00094223022461
    4. ''' → logprob: -11.75094223022461
    5. '01' → logprob: -12.62594223022461
    6. '000' → logprob: -13.75094223022461
    7. '""' → logprob: -14.25094223022461
    8. '11' → logprob: -14.87594223022461
    9. '"""' → logprob: -15.00094223022461
    10. '["' → logprob: -15.37594223022461

Token 201: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.1052870824933052
    2. '",
' → logprob: -2.6052870750427246
    3. '"' → logprob: -4.105287075042725
    4. '"]' → logprob: -5.480287075042725
    5. '       ' → logprob: -5.980287075042725
    6. '         ' → logprob: -7.105287075042725
    7. '   ' → logprob: -7.480287075042725
    8. ',' → logprob: -7.855287075042725
    9. ',
' → logprob: -8.230287551879883
    10. ']' → logprob: -8.480287551879883

Token 202: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.026998020708560944
    2. '"' → logprob: -3.7769980430603027
    3. '       ' → logprob: -6.276998043060303
    4. '     ' → logprob: -7.401998043060303
    5. ''' → logprob: -7.776998043060303
    6. '        ' → logprob: -8.151997566223145
    7. '   ' → logprob: -8.276997566223145
    8. '             ' → logprob: -9.401997566223145
    9. '          ' → logprob: -9.526997566223145
    10. ' "' → logprob: -10.151997566223145

Token 203: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0011524823494255543
    2. ' "' → logprob: -7.626152515411377
    3. '         ' → logprob: -7.876152515411377
    4. '   ' → logprob: -9.251152038574219
    5. '       ' → logprob: -9.626152038574219
    6. ''' → logprob: -9.876152038574219
    7. ']' → logprob: -10.751152038574219
    8. ' ' → logprob: -11.001152038574219
    9. '     ' → logprob: -11.001152038574219
    10. '           ' → logprob: -12.751152038574219

Token 204: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1294308602809906
    2. '000' → logprob: -2.1294307708740234
    3. ''' → logprob: -6.004430770874023
    4. '0' → logprob: -10.879430770874023
    5. ' ' → logprob: -11.879430770874023
    6. '00' → logprob: -12.629430770874023
    7. ' "' → logprob: -13.754430770874023
    8. '   ' → logprob: -14.754430770874023
    9. '""' → logprob: -15.129430770874023
    10. '  ' → logprob: -15.629430770874023

Token 205: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -4.961759259458631e-06
    2. '0' → logprob: -13.125004768371582
    3. '00' → logprob: -13.125004768371582
    4. '001' → logprob: -14.625004768371582
    5. '100' → logprob: -16.3750057220459
    6. ' ' → logprob: -16.6250057220459
    7. '010' → logprob: -16.8750057220459
    8. '011' → logprob: -17.3750057220459
    9. '   ' → logprob: -17.8750057220459
    10. '"' → logprob: -17.8750057220459

Token 206: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -3.523948907968588e-05
    2. '"' → logprob: -10.375035285949707
    3. '0' → logprob: -13.250035285949707
    4. '01' → logprob: -14.250035285949707
    5. '""' → logprob: -14.625035285949707
    6. ''' → logprob: -15.500035285949707
    7. '000' → logprob: -15.500035285949707
    8. ' ' → logprob: -15.750035285949707
    9. '"""' → logprob: -15.750035285949707
    10. '```' → logprob: -15.875035285949707

Token 207: '"],
' (ID: 15666)
  Prédit: '"],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"],' → logprob: -0.16055068373680115
    2. '"]' → logprob: -1.9105507135391235
    3. '"],
' → logprob: -8.660551071166992
    4. '],' → logprob: -9.785551071166992
    5. ']' → logprob: -10.160551071166992
    6. '   ' → logprob: -10.660551071166992
    7. ''],' → logprob: -11.160551071166992
    8. '"' → logprob: -11.285551071166992
    9. '']' → logprob: -12.660551071166992
    10. '",' → logprob: -13.535551071166992

Token 208: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.12807267904281616
    2. '   ' → logprob: -2.128072738647461
    3. ''' → logprob: -7.503072738647461
    4. ' ' → logprob: -8.253072738647461
    5. ' }' → logprob: -8.753072738647461
    6. ''}' → logprob: -9.378072738647461
    7. ''D' → logprob: -9.753072738647461
    8. '       ' → logprob: -11.753072738647461
    9. '	' → logprob: -12.003072738647461
    10. '  ' → logprob: -13.003072738647461

Token 209: ' '' (ID: 461)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.030267249792814255
    2. ''' (adapté à ' '') → logprob: -4.530267238616943
    3. '   ' → logprob: -4.530267238616943
    4. ''}' → logprob: -5.030267238616943
    5. ''E' → logprob: -6.530267238616943
    6. ''D' → logprob: -8.905267715454102
    7. 'E' → logprob: -10.780267715454102
    8. ' ' → logprob: -10.905267715454102
    9. ''T' → logprob: -11.030267715454102
    10. ' }' → logprob: -11.155267715454102

Token 210: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.004178717732429504
    2. ''E' → logprob: -5.504178524017334
    3. ''' → logprob: -9.379179000854492
    4. ' E' → logprob: -11.754179000854492
    5. '"E' → logprob: -13.254179000854492
    6. 'F' → logprob: -13.379179000854492
    7. ' '' → logprob: -13.754179000854492
    8. ''S' → logprob: -14.379179000854492
    9. '’E' → logprob: -14.504179000854492
    10. '}' → logprob: -15.004179000854492

Token 211: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004084808751940727
    2. ''' → logprob: -5.504084587097168
    3. ' ':' → logprob: -12.254084587097168
    4. '":' → logprob: -14.629084587097168
    5. ':' → logprob: -14.754084587097168
    6. ''>' → logprob: -15.129084587097168
    7. '':[' → logprob: -16.379085540771484
    8. '']:' → logprob: -16.504085540771484
    9. ''):' → logprob: -16.504085540771484
    10. ' '' → logprob: -16.504085540771484

Token 212: ' ["' (ID: 9129)
  Prédit: ' ["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ["' → logprob: -0.027086442336440086
    2. '["' → logprob: -4.02708625793457
    3. ' [' → logprob: -5.02708625793457
    4. '[' → logprob: -6.27708625793457
    5. ' [
' → logprob: -8.02708625793457
    6. ' ['' → logprob: -9.90208625793457
    7. ' ' → logprob: -10.27708625793457
    8. ' "' → logprob: -10.90208625793457
    9. '[
' → logprob: -11.15208625793457
    10. '   ' → logprob: -11.77708625793457

Token 213: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008718342520296574
    2. '000' → logprob: -4.758718490600586
    3. '   ' → logprob: -10.133718490600586
    4. '0' → logprob: -10.508718490600586
    5. '["' → logprob: -11.258718490600586
    6. ''' → logprob: -11.258718490600586
    7. ' "' → logprob: -12.758718490600586
    8. '00' → logprob: -13.008718490600586
    9. '[
' → logprob: -13.133718490600586
    10. ' ' → logprob: -13.258718490600586

Token 214: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00405940180644393
    2. '011' → logprob: -6.379059314727783
    3. '001' → logprob: -6.504059314727783
    4. '111' → logprob: -7.629059314727783
    5. '0' → logprob: -8.379059791564941
    6. '110' → logprob: -9.879059791564941
    7. '010' → logprob: -10.254059791564941
    8. '00' → logprob: -10.379059791564941
    9. '100' → logprob: -10.754059791564941
    10. '1' → logprob: -14.004059791564941

Token 215: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.6113100647926331
    2. '11' → logprob: -1.4863100051879883
    3. '01' → logprob: -1.4863100051879883
    4. '"' → logprob: -6.111310005187988
    5. '10' → logprob: -6.236310005187988
    6. '0' → logprob: -7.861310005187988
    7. '1' → logprob: -9.361310005187988
    8. '111' → logprob: -9.486310005187988
    9. '000' → logprob: -9.611310005187988
    10. ''' → logprob: -9.736310005187988

Token 216: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.5093787908554077
    2. '",' → logprob: -1.0093787908554077
    3. '"' → logprob: -3.5093789100646973
    4. '",
' → logprob: -6.509378910064697
    5. ',
' → logprob: -6.759378910064697
    6. '   ' → logprob: -7.259378910064697
    7. ',' → logprob: -7.759378910064697
    8. '       ' → logprob: -8.384378433227539
    9. '[' → logprob: -9.009378433227539
    10. '',
' → logprob: -9.134378433227539

Token 217: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.01955280266702175
    2. '"' → logprob: -4.019552707672119
    3. '     ' → logprob: -7.769552707672119
    4. ''' → logprob: -7.769552707672119
    5. '   ' → logprob: -8.644553184509277
    6. '        ' → logprob: -9.144553184509277
    7. ' ' → logprob: -9.144553184509277
    8. '       ' → logprob: -9.519553184509277
    9. '             ' → logprob: -10.144553184509277
    10. '          ' → logprob: -11.144553184509277

Token 218: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0026294002309441566
    2. '         ' → logprob: -6.002629280090332
    3. ' ' → logprob: -9.752629280090332
    4. '   ' → logprob: -10.127629280090332
    5. '     ' → logprob: -10.377629280090332
    6. ''' → logprob: -11.377629280090332
    7. ' "' → logprob: -12.002629280090332
    8. '       ' → logprob: -13.377629280090332
    9. '`' → logprob: -14.127629280090332
    10. '[' → logprob: -14.377629280090332

Token 219: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16185890138149261
    2. '"' → logprob: -1.9118589162826538
    3. ''' → logprob: -7.161859035491943
    4. '001' → logprob: -7.536859035491943
    5. '011' → logprob: -9.286858558654785
    6. '00' → logprob: -9.786858558654785
    7. '0' → logprob: -10.036858558654785
    8. '010' → logprob: -10.536858558654785
    9. '111' → logprob: -10.661858558654785
    10. ' ' → logprob: -10.786858558654785

Token 220: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.04432450234889984
    2. '011' → logprob: -3.4193243980407715
    3. '001' → logprob: -4.9193243980407715
    4. '110' → logprob: -6.5443243980407715
    5. '111' → logprob: -6.5443243980407715
    6. '010' → logprob: -8.79432487487793
    7. '0' → logprob: -9.04432487487793
    8. '00' → logprob: -9.29432487487793
    9. '100' → logprob: -9.66932487487793
    10. '"' → logprob: -12.16932487487793

Token 221: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.20755848288536072
    2. '11' → logprob: -2.2075583934783936
    3. '01' → logprob: -2.5825583934783936
    4. '10' → logprob: -7.207558631896973
    5. '"' → logprob: -7.457558631896973
    6. '000' → logprob: -8.832558631896973
    7. '111' → logprob: -8.957558631896973
    8. '001' → logprob: -9.457558631896973
    9. '0' → logprob: -9.582558631896973
    10. '011' → logprob: -9.707558631896973

Token 222: '",
' (ID: 1150)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5136033892631531
    2. '         ' → logprob: -1.7636034488677979
    3. '"' → logprob: -2.138603448867798
    4. ''' → logprob: -3.138603448867798
    5. ',
' → logprob: -3.888603448867798
    6. '   ' → logprob: -4.013603210449219
    7. '",' → logprob: -4.513603210449219
    8. '       ' → logprob: -5.263603210449219
    9. '     ' → logprob: -6.013603210449219
    10. '[' → logprob: -6.013603210449219

Token 223: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.04411795735359192
    2. '"' → logprob: -3.1691179275512695
    3. '     ' → logprob: -7.2941179275512695
    4. ''' → logprob: -8.66911792755127
    5. ' ' → logprob: -9.41911792755127
    6. '             ' → logprob: -9.66911792755127
    7. '   ' → logprob: -9.91911792755127
    8. '       ' → logprob: -10.66911792755127
    9. '        ' → logprob: -10.91911792755127
    10. '          ' → logprob: -11.79411792755127

Token 224: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -3.4881879400927573e-05
    2. '         ' → logprob: -11.250035285949707
    3. ' "' → logprob: -11.500035285949707
    4. ''' → logprob: -12.500035285949707
    5. ' ' → logprob: -12.625035285949707
    6. '   ' → logprob: -13.125035285949707
    7. '0' → logprob: -14.375035285949707
    8. '000' → logprob: -14.750035285949707
    9. '     ' → logprob: -15.500035285949707
    10. '```' → logprob: -15.500035285949707

Token 225: '001' (ID: 7659)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1833253651857376
    2. '001' → logprob: -2.3083252906799316
    3. '011' → logprob: -3.1833252906799316
    4. '110' → logprob: -4.433325290679932
    5. '"' → logprob: -4.433325290679932
    6. '111' → logprob: -6.183325290679932
    7. '100' → logprob: -8.18332576751709
    8. '010' → logprob: -8.43332576751709
    9. ''' → logprob: -8.80832576751709
    10. '```' → logprob: -10.18332576751709

Token 226: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1100805252790451
    2. '111' → logprob: -2.3600804805755615
    3. '110' → logprob: -4.860080718994141
    4. '000' → logprob: -6.735080718994141
    5. '101' → logprob: -7.735080718994141
    6. '001' → logprob: -7.985080718994141
    7. '011' → logprob: -9.86008071899414
    8. '1' → logprob: -10.23508071899414
    9. '010' → logprob: -11.11008071899414
    10. '10' → logprob: -13.11008071899414

Token 227: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -7.76759916334413e-05
    2. '11' → logprob: -9.500077247619629
    3. '000' → logprob: -13.375077247619629
    4. '"' → logprob: -14.250077247619629
    5. '01' → logprob: -15.125077247619629
    6. ' ' → logprob: -15.875077247619629
    7. ''' → logprob: -16.375078201293945
    8. '0' → logprob: -16.625078201293945
    9. '001' → logprob: -17.250078201293945
    10. '۰۰' → logprob: -18.000078201293945

Token 228: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.11729837208986282
    2. '",
' → logprob: -2.2422983646392822
    3. '"' → logprob: -5.492298603057861
    4. '","' → logprob: -8.867298126220703
    5. '"]' → logprob: -9.492298126220703
    6. '",
' → logprob: -9.742298126220703
    7. '",

' → logprob: -11.492298126220703
    8. '",[' → logprob: -11.617298126220703
    9. '         ' → logprob: -11.867298126220703
    10. '   ' → logprob: -11.992298126220703

Token 229: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.11649850755929947
    2. '"' → logprob: -2.2414984703063965
    3. '        ' → logprob: -7.2414984703063965
    4. '          ' → logprob: -7.6164984703063965
    5. '     ' → logprob: -7.7414984703063965
    6. ''' → logprob: -7.7414984703063965
    7. ' ' → logprob: -7.9914984703063965
    8. '   ' → logprob: -8.116498947143555
    9. '       ' → logprob: -8.241498947143555
    10. '             ' → logprob: -8.741498947143555

Token 230: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.000937547127250582
    2. ' "' → logprob: -7.250937461853027
    3. ' ' → logprob: -9.500937461853027
    4. '   ' → logprob: -10.000937461853027
    5. '001' → logprob: -10.125937461853027
    6. '         ' → logprob: -10.625937461853027
    7. ''' → logprob: -10.875937461853027
    8. '000' → logprob: -11.875937461853027
    9. '	' → logprob: -12.625937461853027
    10. '  ' → logprob: -13.375937461853027

Token 231: '001' (ID: 7659)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.239596888422966
    2. '001' → logprob: -1.6145968437194824
    3. '000' → logprob: -4.364596843719482
    4. '011' → logprob: -6.989596843719482
    5. ''' → logprob: -8.73959732055664
    6. ' ' → logprob: -9.36459732055664
    7. '010' → logprob: -9.61459732055664
    8. '   ' → logprob: -10.73959732055664
    9. '111' → logprob: -10.86459732055664
    10. ' "' → logprob: -11.55209732055664

Token 232: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0004813161212950945
    2. '000' → logprob: -8.625481605529785
    3. '001' → logprob: -9.125481605529785
    4. '110' → logprob: -9.500481605529785
    5. '1' → logprob: -10.125481605529785
    6. '101' → logprob: -10.625481605529785
    7. '10' → logprob: -10.875481605529785
    8. '111' → logprob: -11.125481605529785
    9. '```' → logprob: -12.125481605529785
    10. '010' → logprob: -12.187981605529785

Token 233: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -1.9146995327901095e-05
    2. '"' → logprob: -11.625019073486328
    3. '11' → logprob: -12.375019073486328
    4. '01' → logprob: -13.000019073486328
    5. '000' → logprob: -13.250019073486328
    6. '0' → logprob: -14.125019073486328
    7. ' ' → logprob: -14.375019073486328
    8. '""' → logprob: -16.000019073486328
    9. '<|end|>' → logprob: -16.250019073486328
    10. '10' → logprob: -16.500019073486328

Token 234: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.09511463344097137
    2. '",
' → logprob: -2.4701147079467773
    3. '"' → logprob: -5.220114707946777
    4. '"]' → logprob: -7.470114707946777
    5. '","' → logprob: -9.720114707946777
    6. '",
' → logprob: -10.345114707946777
    7. ']' → logprob: -11.470114707946777
    8. ',' → logprob: -11.470114707946777
    9. ',
' → logprob: -11.470114707946777
    10. '"],' → logprob: -11.845114707946777

Token 235: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.02745462954044342
    2. '"' → logprob: -3.6524546146392822
    3. '        ' → logprob: -8.402454376220703
    4. '             ' → logprob: -8.527454376220703
    5. '   ' → logprob: -8.777454376220703
    6. ''' → logprob: -8.777454376220703
    7. '       ' → logprob: -8.902454376220703
    8. '          ' → logprob: -8.902454376220703
    9. '     ' → logprob: -9.402454376220703
    10. ' ' → logprob: -11.027454376220703

Token 236: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.004570154007524252
    2. ' "' → logprob: -5.754570007324219
    3. '         ' → logprob: -7.129570007324219
    4. '   ' → logprob: -8.379570007324219
    5. ''' → logprob: -8.504570007324219
    6. ' ' → logprob: -9.379570007324219
    7. '0' → logprob: -10.379570007324219
    8. '          ' → logprob: -12.129570007324219
    9. '000' → logprob: -12.129570007324219
    10. '       ' → logprob: -12.254570007324219

Token 237: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.15943603217601776
    2. '000' → logprob: -2.034435987472534
    3. '001' → logprob: -4.409436225891113
    4. ''' → logprob: -5.534436225891113
    5. '011' → logprob: -8.284436225891113
    6. ' ' → logprob: -9.534436225891113
    7. '111' → logprob: -10.034436225891113
    8. ' "' → logprob: -10.659436225891113
    9. '010' → logprob: -10.784436225891113
    10. '0' → logprob: -10.784436225891113

Token 238: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0020767441019415855
    2. '110' → logprob: -7.377076625823975
    3. '001' → logprob: -7.502076625823975
    4. '00' → logprob: -7.752076625823975
    5. '011' → logprob: -8.127077102661133
    6. '111' → logprob: -9.127077102661133
    7. '0' → logprob: -10.377077102661133
    8. '100' → logprob: -11.002077102661133
    9. '010' → logprob: -11.627077102661133
    10. '"' → logprob: -13.252077102661133

Token 239: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0012398716062307358
    2. '"' → logprob: -7.876239776611328
    3. '11' → logprob: -7.876239776611328
    4. '01' → logprob: -7.876239776611328
    5. '0' → logprob: -9.376239776611328
    6. '10' → logprob: -11.876239776611328
    7. ''' → logprob: -12.626239776611328
    8. ' ' → logprob: -13.626239776611328
    9. '000' → logprob: -13.626239776611328
    10. '1' → logprob: -13.876239776611328

Token 240: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.01128678023815155
    2. '",
' → logprob: -5.011286735534668
    3. '"' → logprob: -5.511286735534668
    4. '","' → logprob: -8.386286735534668
    5. ',' → logprob: -9.261286735534668
    6. '"]' → logprob: -9.511286735534668
    7. '         ' → logprob: -10.386286735534668
    8. '",
' → logprob: -11.386286735534668
    9. '"],' → logprob: -11.386286735534668
    10. '',' → logprob: -11.636286735534668

Token 241: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.003657791530713439
    2. ''' → logprob: -6.253657817840576
    3. '"' → logprob: -7.628657817840576
    4. '        ' → logprob: -8.128657341003418
    5. '   ' → logprob: -8.503657341003418
    6. '             ' → logprob: -8.628657341003418
    7. '       ' → logprob: -8.628657341003418
    8. '     ' → logprob: -8.753657341003418
    9. '          ' → logprob: -9.753657341003418
    10. ' ' → logprob: -10.003657341003418

Token 242: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.07984524965286255
    2. '         ' → logprob: -2.5798451900482178
    3. ''' → logprob: -7.954845428466797
    4. '   ' → logprob: -8.579845428466797
    5. ' "' → logprob: -9.079845428466797
    6. '     ' → logprob: -9.579845428466797
    7. ' ' → logprob: -9.579845428466797
    8. '          ' → logprob: -10.079845428466797
    9. '       ' → logprob: -10.329845428466797
    10. '        ' → logprob: -10.329845428466797

Token 243: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20613926649093628
    2. '000' → logprob: -1.706139326095581
    3. ''' → logprob: -5.581139087677002
    4. '         ' → logprob: -7.331139087677002
    5. ' ' → logprob: -8.95613956451416
    6. '0' → logprob: -10.20613956451416
    7. ' "' → logprob: -10.45613956451416
    8. '   ' → logprob: -10.70613956451416
    9. '     ' → logprob: -11.20613956451416
    10. '`' → logprob: -11.45613956451416

Token 244: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -5.526570384972729e-05
    2. '001' → logprob: -10.125055313110352
    3. '011' → logprob: -12.625055313110352
    4. '0' → logprob: -12.625055313110352
    5. '111' → logprob: -12.875055313110352
    6. '100' → logprob: -13.000055313110352
    7. '00' → logprob: -13.125055313110352
    8. '110' → logprob: -14.250055313110352
    9. '010' → logprob: -14.750055313110352
    10. ' ' → logprob: -14.750055313110352

Token 245: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -3.750436007976532e-05
    2. '01' → logprob: -11.37503719329834
    3. ' ' → logprob: -11.62503719329834
    4. '0' → logprob: -12.25003719329834
    5. '000' → logprob: -12.25003719329834
    6. '"' → logprob: -13.12503719329834
    7. ''' → logprob: -13.25003719329834
    8. '11' → logprob: -13.50003719329834
    9. '```' → logprob: -14.25003719329834
    10. '001' → logprob: -14.62503719329834

Token 246: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.5619804859161377
    2. ',' → logprob: -2.1869804859161377
    3. '         ' → logprob: -2.1869804859161377
    4. '",
' → logprob: -2.6869804859161377
    5. ',
' → logprob: -2.9369804859161377
    6. '"' → logprob: -3.4369804859161377
    7. '       ' → logprob: -3.9369804859161377
    8. '   ' → logprob: -4.561980247497559
    9. '","' → logprob: -5.311980247497559
    10. '',' → logprob: -5.561980247497559

Token 247: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.029748180881142616
    2. '"' → logprob: -3.6547482013702393
    3. ''' → logprob: -6.40474796295166
    4. '       ' → logprob: -7.27974796295166
    5. '   ' → logprob: -7.40474796295166
    6. '     ' → logprob: -8.40474796295166
    7. '        ' → logprob: -9.27974796295166
    8. '             ' → logprob: -9.65474796295166
    9. ' ' → logprob: -10.77974796295166
    10. '           ' → logprob: -10.90474796295166

Token 248: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.055274784564971924
    2. ''' → logprob: -3.055274724960327
    3. '         ' → logprob: -5.680274963378906
    4. ' "' → logprob: -6.055274963378906
    5. '       ' → logprob: -7.805274963378906
    6. ' '' → logprob: -9.180274963378906
    7. '[' → logprob: -9.680274963378906
    8. '   ' → logprob: -9.680274963378906
    9. '           ' → logprob: -9.805274963378906
    10. '          ' → logprob: -10.180274963378906

Token 249: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0010224477155134082
    2. ''' → logprob: -7.6260223388671875
    3. '000' → logprob: -7.7510223388671875
    4. ' "' → logprob: -9.501022338867188
    5. ' ' → logprob: -11.376022338867188
    6. '         ' → logprob: -12.501022338867188
    7. '0' → logprob: -12.626022338867188
    8. '   ' → logprob: -12.626022338867188
    9. '`' → logprob: -13.126022338867188
    10. '```' → logprob: -14.251022338867188

Token 250: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0003896815178450197
    2. '00' → logprob: -8.62539005279541
    3. '011' → logprob: -9.50039005279541
    4. '001' → logprob: -9.75039005279541
    5. '0' → logprob: -9.87539005279541
    6. '111' → logprob: -11.37539005279541
    7. '110' → logprob: -12.00039005279541
    8. '100' → logprob: -12.62539005279541
    9. ' ' → logprob: -13.37539005279541
    10. '010' → logprob: -13.87539005279541

Token 251: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0017308680107817054
    2. '"' → logprob: -6.376730918884277
    3. ''' → logprob: -11.251730918884277
    4. '0' → logprob: -11.501730918884277
    5. '000' → logprob: -13.501730918884277
    6. ' ' → logprob: -13.751730918884277
    7. '01' → logprob: -14.126730918884277
    8. '""' → logprob: -14.376730918884277
    9. '"""' → logprob: -14.626730918884277
    10. '["' → logprob: -14.751730918884277

Token 252: '",
' (ID: 1150)
  Prédit: '         '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -1.0067548751831055
    2. '",' → logprob: -1.7567548751831055
    3. '"' → logprob: -1.8817548751831055
    4. '       ' → logprob: -2.3817548751831055
    5. '",
' → logprob: -3.0067548751831055
    6. ']' → logprob: -3.1317548751831055
    7. ',' → logprob: -3.2567548751831055
    8. '"]' → logprob: -3.7567548751831055
    9. '   ' → logprob: -3.8817548751831055
    10. ',
' → logprob: -4.2567548751831055

Token 253: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.006133433897048235
    2. '       ' → logprob: -6.006133556365967
    3. ''' → logprob: -6.881133556365967
    4. '        ' → logprob: -7.006133556365967
    5. '   ' → logprob: -7.006133556365967
    6. '     ' → logprob: -8.131133079528809
    7. '"' → logprob: -8.631133079528809
    8. '          ' → logprob: -9.881133079528809
    9. ']' → logprob: -10.006133079528809
    10. '}' → logprob: -10.131133079528809

Token 254: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.001685412833467126
    2. ' "' → logprob: -6.751685619354248
    3. '         ' → logprob: -8.00168514251709
    4. '       ' → logprob: -9.25168514251709
    5. ''' → logprob: -10.37668514251709
    6. '   ' → logprob: -10.62668514251709
    7. '     ' → logprob: -12.00168514251709
    8. ' ' → logprob: -12.12668514251709
    9. '           ' → logprob: -12.50168514251709
    10. '        ' → logprob: -12.75168514251709

Token 255: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.20657238364219666
    2. '"' → logprob: -1.706572413444519
    3. ''' → logprob: -5.331572532653809
    4. '0' → logprob: -8.581572532653809
    5. ' ' → logprob: -9.456572532653809
    6. '00' → logprob: -10.581572532653809
    7. '   ' → logprob: -11.706572532653809
    8. ' "' → logprob: -12.456572532653809
    9. '`' → logprob: -13.706572532653809
    10. '```' → logprob: -14.456572532653809

Token 256: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0017083751736208797
    2. '00' → logprob: -6.501708507537842
    3. '001' → logprob: -9.251708030700684
    4. ''' → logprob: -10.001708030700684
    5. '0' → logprob: -10.876708030700684
    6. '"' → logprob: -11.126708030700684
    7. ' ' → logprob: -11.376708030700684
    8. '111' → logprob: -12.001708030700684
    9. '011' → logprob: -12.376708030700684
    10. '100' → logprob: -13.001708030700684

Token 257: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.005620396696031094
    2. '"' → logprob: -5.25562047958374
    3. ''' → logprob: -7.88062047958374
    4. '000' → logprob: -12.505620002746582
    5. ' ' → logprob: -13.005620002746582
    6. '0' → logprob: -13.880620002746582
    7. '01' → logprob: -14.630620002746582
    8. '001' → logprob: -15.505620002746582
    9. '"""' → logprob: -15.755620002746582
    10. '```' → logprob: -15.755620002746582

Token 258: '"],
' (ID: 15666)
  Prédit: '"],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"],' → logprob: -0.12452598661184311
    2. '"]' → logprob: -2.249526023864746
    3. '   ' → logprob: -4.749526023864746
    4. '],' → logprob: -6.624526023864746
    5. '",' → logprob: -7.249526023864746
    6. '"],
' → logprob: -7.624526023864746
    7. ']' → logprob: -8.499526023864746
    8. '       ' → logprob: -9.249526023864746
    9. '"' → logprob: -9.374526023864746
    10. ''],' → logprob: -10.749526023864746

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28391915559768677
    2. '}' → logprob: -1.408919095993042
    3. ''' → logprob: -6.033919334411621
    4. ''}' → logprob: -9.033919334411621
    5. ''D' → logprob: -9.033919334411621
    6. ' ' → logprob: -10.283919334411621
    7. '       ' → logprob: -10.533919334411621
    8. ' }' → logprob: -10.908919334411621
    9. '  ' → logprob: -12.158919334411621
    10. ''s' → logprob: -12.283919334411621

Token 260: ' '' (ID: 461)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.09565462172031403
    2. '   ' → logprob: -3.0956547260284424
    3. ''' (adapté à ' '') → logprob: -3.2206547260284424
    4. ''}' → logprob: -5.595654487609863
    5. ''D' → logprob: -6.345654487609863
    6. ''E' → logprob: -8.595654487609863
    7. ''A' → logprob: -9.470654487609863
    8. ' ' → logprob: -9.720654487609863
    9. ''C' → logprob: -10.095654487609863
    10. '       ' → logprob: -10.345654487609863

Token 261: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.04862211272120476
    2. ''' → logprob: -3.0486221313476562
    3. ' F' → logprob: -10.798622131347656
    4. ' '' → logprob: -12.298622131347656
    5. ''E' → logprob: -13.673622131347656
    6. ''f' → logprob: -13.923622131347656
    7. ''S' → logprob: -14.173622131347656
    8. ' ' → logprob: -14.423622131347656
    9. '"' → logprob: -14.423622131347656
    10. 'E' → logprob: -14.548622131347656

Token 262: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.011057252995669842
    2. ''' → logprob: -4.511057376861572
    3. '":' → logprob: -12.136056900024414
    4. ' ':' → logprob: -12.636056900024414
    5. '']' → logprob: -15.386056900024414
    6. '"' → logprob: -15.386056900024414
    7. ' '' → logprob: -16.511056900024414
    8. ''>' → logprob: -16.636056900024414
    9. '']:' → logprob: -16.636056900024414
    10. ':' → logprob: -17.011056900024414

Token 263: ' ["' (ID: 9129)
  Prédit: ' ["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ["' → logprob: -0.09011378884315491
    2. '["' → logprob: -2.465113878250122
    3. '[' → logprob: -7.840113639831543
    4. ' [
' → logprob: -7.965113639831543
    5. ' [' → logprob: -8.090113639831543
    6. '[
' → logprob: -9.590113639831543
    7. ' "' → logprob: -10.715113639831543
    8. ' ['' → logprob: -11.215113639831543
    9. ' ' → logprob: -11.340113639831543
    10. '"' → logprob: -12.340113639831543

Token 264: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.026415714994072914
    2. '000' → logprob: -3.6514158248901367
    3. ''' → logprob: -10.276415824890137
    4. '0' → logprob: -10.776415824890137
    5. '   ' → logprob: -11.026415824890137
    6. '["' → logprob: -11.276415824890137
    7. '001' → logprob: -11.901415824890137
    8. ' "' → logprob: -12.026415824890137
    9. '00' → logprob: -12.151415824890137
    10. ' ' → logprob: -12.276415824890137

Token 265: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.005620635114610195
    2. '011' → logprob: -5.75562047958374
    3. '001' → logprob: -6.63062047958374
    4. '0' → logprob: -7.13062047958374
    5. '00' → logprob: -9.005620956420898
    6. '111' → logprob: -9.505620956420898
    7. '010' → logprob: -9.880620956420898
    8. '110' → logprob: -10.005620956420898
    9. '100' → logprob: -10.755620956420898
    10. '1' → logprob: -13.005620956420898

Token 266: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.06937047839164734
    2. '11' → logprob: -2.8193705081939697
    3. '01' → logprob: -4.944370269775391
    4. '000' → logprob: -9.44437026977539
    5. '10' → logprob: -9.56937026977539
    6. '001' → logprob: -10.44437026977539
    7. '0' → logprob: -10.56937026977539
    8. '110' → logprob: -11.19437026977539
    9. '111' → logprob: -11.50687026977539
    10. '011' → logprob: -11.56937026977539

Token 267: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.49759265780448914
    2. '",
' → logprob: -1.1225926876068115
    3. '","' → logprob: -3.4975926876068115
    4. '"' → logprob: -4.122592449188232
    5. ',
' → logprob: -4.622592449188232
    6. ',' → logprob: -5.122592449188232
    7. ',"' → logprob: -6.747592449188232
    8. '   ' → logprob: -6.872592449188232
    9. '",
' → logprob: -7.497592449188232
    10. '<|end|>' → logprob: -7.997592449188232

Token 268: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.035699352622032166
    2. '"' → logprob: -3.5356993675231934
    3. '   ' → logprob: -6.160699367523193
    4. '       ' → logprob: -6.785699367523193
    5. ' ' → logprob: -7.285699367523193
    6. ''' → logprob: -7.660699367523193
    7. '        ' → logprob: -7.910699367523193
    8. '             ' → logprob: -7.910699367523193
    9. '     ' → logprob: -8.035698890686035
    10. '          ' → logprob: -9.035698890686035

Token 269: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0022496995516121387
    2. '         ' → logprob: -6.377249717712402
    3. ' "' → logprob: -7.752249717712402
    4. ' ' → logprob: -10.002249717712402
    5. '   ' → logprob: -10.252249717712402
    6. ''' → logprob: -11.502249717712402
    7. '     ' → logprob: -11.627249717712402
    8. '000' → logprob: -11.877249717712402
    9. '0' → logprob: -12.752249717712402
    10. '       ' → logprob: -13.377249717712402

Token 270: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.002961300313472748
    2. '"' → logprob: -5.877961158752441
    3. '001' → logprob: -9.002961158752441
    4. ''' → logprob: -11.252961158752441
    5. '00' → logprob: -11.502961158752441
    6. ' ' → logprob: -12.752961158752441
    7. '0' → logprob: -12.877961158752441
    8. '010' → logprob: -13.877961158752441
    9. '""' → logprob: -14.002961158752441
    10. '```' → logprob: -14.252961158752441

Token 271: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.01707295887172222
    2. '011' → logprob: -4.392073154449463
    3. '001' → logprob: -5.892073154449463
    4. '00' → logprob: -7.267073154449463
    5. '111' → logprob: -7.892073154449463
    6. '110' → logprob: -7.892073154449463
    7. '0' → logprob: -8.392072677612305
    8. '010' → logprob: -9.642072677612305
    9. '100' → logprob: -10.017072677612305
    10. '11' → logprob: -12.517072677612305

Token 272: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.010619163513183594
    2. '11' → logprob: -4.635619163513184
    3. '01' → logprob: -7.260619163513184
    4. '"' → logprob: -8.885619163513184
    5. '000' → logprob: -11.635619163513184
    6. '0' → logprob: -12.135619163513184
    7. '10' → logprob: -13.385619163513184
    8. '111' → logprob: -13.885619163513184
    9. '""' → logprob: -13.885619163513184
    10. ''' → logprob: -14.010619163513184

Token 273: '",
' (ID: 1150)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19297635555267334
    2. '",' → logprob: -2.067976474761963
    3. '",
' → logprob: -3.317976474761963
    4. '   ' → logprob: -5.817976474761963
    5. '         ' → logprob: -5.942976474761963
    6. '       ' → logprob: -6.192976474761963
    7. ',' → logprob: -6.817976474761963
    8. '[' → logprob: -7.192976474761963
    9. '","' → logprob: -7.317976474761963
    10. '[
' → logprob: -7.692976474761963

Token 274: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.09138480573892593
    2. '"' → logprob: -2.4663848876953125
    3. '   ' → logprob: -7.4663848876953125
    4. '       ' → logprob: -7.7163848876953125
    5. '             ' → logprob: -7.9663848876953125
    6. ''' → logprob: -8.091384887695312
    7. ' ' → logprob: -8.341384887695312
    8. '     ' → logprob: -8.591384887695312
    9. ' "' → logprob: -8.966384887695312
    10. '        ' → logprob: -9.841384887695312

Token 275: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0004815545107703656
    2. '000' → logprob: -8.250481605529785
    3. '001' → logprob: -8.875481605529785
    4. ' ' → logprob: -10.750481605529785
    5. ' "' → logprob: -11.375481605529785
    6. '         ' → logprob: -11.375481605529785
    7. '   ' → logprob: -11.375481605529785
    8. ''' → logprob: -11.875481605529785
    9. '010' → logprob: -12.125481605529785
    10. '011' → logprob: -13.125481605529785

Token 276: '001' (ID: 7659)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5983254313468933
    2. '001' → logprob: -1.473325490951538
    3. '011' → logprob: -2.098325490951538
    4. '110' → logprob: -2.473325490951538
    5. '111' → logprob: -4.348325252532959
    6. '"' → logprob: -7.723325252532959
    7. '010' → logprob: -7.723325252532959
    8. '``' → logprob: -9.098325729370117
    9. '100' → logprob: -9.723325729370117
    10. '```' → logprob: -9.973325729370117

Token 277: '111' (ID: 8780)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0009046725463122129
    2. '000' → logprob: -7.500904560089111
    3. '1' → logprob: -9.00090503692627
    4. '001' → logprob: -9.25090503692627
    5. '110' → logprob: -10.00090503692627
    6. '111' → logprob: -10.12590503692627
    7. '101' → logprob: -10.50090503692627
    8. '10' → logprob: -11.25090503692627
    9. '011' → logprob: -13.56340503692627
    10. '```' → logprob: -13.56340503692627

Token 278: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.1614769846200943
    2. '11' → logprob: -1.911476969718933
    3. '000' → logprob: -6.786477088928223
    4. '10' → logprob: -9.911477088928223
    5. '110' → logprob: -10.411477088928223
    6. '111' → logprob: -10.786477088928223
    7. '<|end|>' → logprob: -12.411477088928223
    8. ' ' → logprob: -12.536477088928223
    9. '"' → logprob: -12.723977088928223
    10. '```' → logprob: -12.973977088928223

Token 279: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.06364046037197113
    2. '"' → logprob: -3.4386403560638428
    3. '",
' → logprob: -3.5636403560638428
    4. '"]' → logprob: -6.938640594482422
    5. '<|end|>' → logprob: -9.438640594482422
    6. '","' → logprob: -9.563640594482422
    7. '",

' → logprob: -10.563640594482422
    8. '"
' → logprob: -11.438640594482422
    9. '",
' → logprob: -11.813640594482422
    10. '",[' → logprob: -11.938640594482422

Token 280: '         ' (ID: 983)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.3938843607902527
    2. '<|end|>' → logprob: -1.3938844203948975
    3. '         ' → logprob: -2.7688844203948975
    4. ' ' → logprob: -5.393884181976318
    5. ''' → logprob: -5.768884181976318
    6. '0' → logprob: -6.268884181976318
    7. '<|end|>' → logprob: -6.393884181976318
    8. ' "' → logprob: -7.268884181976318
    9. '001' → logprob: -7.643884181976318
    10. '   ' → logprob: -8.018884658813477

Token 282: '000' (ID: 1302)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.013062936253845692
    2. '000' → logprob: -4.763062953948975
    3. '"' → logprob: -5.513062953948975
    4. ' ' → logprob: -8.138062477111816
    5. ''' → logprob: -10.263062477111816
    6. '011' → logprob: -10.888062477111816
    7. '00' → logprob: -11.013062477111816
    8. '<|end|>' → logprob: -11.638062477111816
    9. '   ' → logprob: -12.013062477111816
    10. ' "' → logprob: -12.013062477111816

Token 283: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.15996287763118744
    2. '111' → logprob: -2.1599628925323486
    3. '001' → logprob: -4.0349626541137695
    4. '011' → logprob: -5.0349626541137695
    5. '0' → logprob: -5.5349626541137695
    6. '00' → logprob: -6.0349626541137695
    7. '110' → logprob: -6.4099626541137695
    8. '100' → logprob: -9.03496265411377
    9. '010' → logprob: -9.65996265411377
    10. '<|end|>' → logprob: -10.47246265411377

Token 284: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0007001649355515838
    2. '11' → logprob: -7.375699996948242
    3. '000' → logprob: -10.000699996948242
    4. '"' → logprob: -11.875699996948242
    5. '01' → logprob: -12.250699996948242
    6. '10' → logprob: -12.500699996948242
    7. '111' → logprob: -12.625699996948242
    8. '0' → logprob: -12.938199996948242
    9. '001' → logprob: -13.250699996948242
    10. ' ' → logprob: -13.938199996948242

Token 285: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.048251982778310776
    2. '",
' → logprob: -3.2982518672943115
    3. '"]' → logprob: -4.923252105712891
    4. '"' → logprob: -6.048252105712891
    5. ',
' → logprob: -9.04825210571289
    6. '   ' → logprob: -9.04825210571289
    7. ',' → logprob: -9.42325210571289
    8. '","' → logprob: -9.67325210571289
    9. '         ' → logprob: -10.67325210571289
    10. '       ' → logprob: -10.79825210571289

Token 286: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.07519519329071045
    2. '"' → logprob: -3.2001953125
    3. '   ' → logprob: -4.3251953125
    4. ']' → logprob: -4.8251953125
    5. '       ' → logprob: -5.4501953125
    6. ''' → logprob: -6.4501953125
    7. ' ' → logprob: -6.8251953125
    8. '     ' → logprob: -6.9501953125
    9. '        ' → logprob: -7.0751953125
    10. '             ' → logprob: -8.0751953125

Token 287: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.02549726329743862
    2. '         ' → logprob: -3.7754971981048584
    3. '   ' → logprob: -7.0254974365234375
    4. ''' → logprob: -7.5254974365234375
    5. '       ' → logprob: -7.7754974365234375
    6. ' ' → logprob: -9.525497436523438
    7. ' "' → logprob: -9.650497436523438
    8. '           ' → logprob: -9.775497436523438
    9. '     ' → logprob: -10.150497436523438
    10. '0' → logprob: -10.275497436523438

Token 288: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04945716634392738
    2. '000' → logprob: -3.04945707321167
    3. '         ' → logprob: -7.67445707321167
    4. ''' → logprob: -8.674457550048828
    5. '0' → logprob: -9.299457550048828
    6. '""' → logprob: -10.799457550048828
    7. '   ' → logprob: -10.799457550048828
    8. ' ' → logprob: -10.924457550048828
    9. '00' → logprob: -11.174457550048828
    10. '<|end|>' → logprob: -11.299457550048828

Token 289: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0019875173456966877
    2. '00' → logprob: -7.126987457275391
    3. '111' → logprob: -7.501987457275391
    4. '001' → logprob: -8.12698745727539
    5. '0' → logprob: -8.50198745727539
    6. '011' → logprob: -9.75198745727539
    7. '<|end|>' → logprob: -10.87698745727539
    8. ' ' → logprob: -11.00198745727539
    9. '100' → logprob: -11.62698745727539
    10. '010' → logprob: -12.00198745727539

Token 290: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -3.8889261304575484e-06
    2. '000' → logprob: -13.500003814697266
    3. '0' → logprob: -13.750003814697266
    4. ' ' → logprob: -14.375003814697266
    5. '"' → logprob: -14.875003814697266
    6. '<|end|>' → logprob: -16.125003814697266
    7. '```' → logprob: -16.375003814697266
    8. '01' → logprob: -16.625003814697266
    9. '...' → logprob: -17.125003814697266
    10. '11' → logprob: -17.375003814697266

Token 291: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.056758347898721695
    2. '",
' → logprob: -3.181758403778076
    3. ',' → logprob: -5.306758403778076
    4. ',
' → logprob: -5.806758403778076
    5. '"]' → logprob: -5.931758403778076
    6. '"' → logprob: -6.681758403778076
    7. '   ' → logprob: -7.556758403778076
    8. '       ' → logprob: -8.181757926940918
    9. '","' → logprob: -8.306757926940918
    10. '         ' → logprob: -8.306757926940918

Token 292: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.029774675145745277
    2. '"' → logprob: -4.1547746658325195
    3. '   ' → logprob: -5.5297746658325195
    4. ''' → logprob: -6.0297746658325195
    5. '       ' → logprob: -6.1547746658325195
    6. '}' → logprob: -6.1547746658325195
    7. ']' → logprob: -6.4047746658325195
    8. '     ' → logprob: -7.5297746658325195
    9. '        ' → logprob: -8.40477466583252
    10. ' ' → logprob: -8.40477466583252

Token 293: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.013282928615808487
    2. '         ' → logprob: -4.513282775878906
    3. '   ' → logprob: -6.888282775878906
    4. ''' → logprob: -7.763282775878906
    5. ' "' → logprob: -8.013282775878906
    6. '       ' → logprob: -8.763282775878906
    7. ' ' → logprob: -9.013282775878906
    8. '     ' → logprob: -9.388282775878906
    9. '        ' → logprob: -10.763282775878906
    10. '           ' → logprob: -11.513282775878906

Token 294: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0031260251998901367
    2. '"' → logprob: -5.87812614440918
    3. ''' → logprob: -8.75312614440918
    4. ' ' → logprob: -9.87812614440918
    5. '         ' → logprob: -10.12812614440918
    6. '0' → logprob: -10.12812614440918
    7. '   ' → logprob: -11.37812614440918
    8. '00' → logprob: -11.62812614440918
    9. '     ' → logprob: -12.37812614440918
    10. '       ' → logprob: -13.50312614440918

Token 295: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -2.641841820150148e-05
    2. '00' → logprob: -11.12502670288086
    3. '0' → logprob: -11.87502670288086
    4. '001' → logprob: -12.62502670288086
    5. '011' → logprob: -14.62502670288086
    6. ' ' → logprob: -15.12502670288086
    7. '   ' → logprob: -15.87502670288086
    8. '111' → logprob: -15.87502670288086
    9. '۰۰' → logprob: -16.50002670288086
    10. '```' → logprob: -16.87502670288086

Token 296: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -2.856408536899835e-05
    2. '000' → logprob: -11.250028610229492
    3. '0' → logprob: -12.500028610229492
    4. ' ' → logprob: -12.750028610229492
    5. '01' → logprob: -13.000028610229492
    6. '"' → logprob: -13.500028610229492
    7. '11' → logprob: -13.625028610229492
    8. '```' → logprob: -13.937528610229492
    9. '<|end|>' → logprob: -14.062528610229492
    10. '001' → logprob: -14.250028610229492

Token 297: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.8494728803634644
    2. '         ' → logprob: -1.7244728803634644
    3. '"]' → logprob: -2.224472999572754
    4. '       ' → logprob: -2.599472999572754
    5. '",
' → logprob: -2.849472999572754
    6. ',' → logprob: -3.099472999572754
    7. ']' → logprob: -3.224472999572754
    8. ',
' → logprob: -3.474472999572754
    9. '"' → logprob: -3.849472999572754
    10. '   ' → logprob: -5.099472999572754

Token 298: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.028963912278413773
    2. '"' → logprob: -3.903963804244995
    3. ''' → logprob: -5.778964042663574
    4. '       ' → logprob: -6.153964042663574
    5. '}' → logprob: -6.903964042663574
    6. ']' → logprob: -7.403964042663574
    7. '   ' → logprob: -7.653964042663574
    8. '     ' → logprob: -7.778964042663574
    9. '        ' → logprob: -7.903964042663574
    10. '0' → logprob: -9.278964042663574

Token 299: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.05261911824345589
    2. '         ' → logprob: -3.052619218826294
    3. '       ' → logprob: -6.677618980407715
    4. ''' → logprob: -6.802618980407715
    5. '   ' → logprob: -7.052618980407715
    6. '     ' → logprob: -8.302618980407715
    7. ' ' → logprob: -9.177618980407715
    8. ' "' → logprob: -9.177618980407715
    9. '000' → logprob: -9.427618980407715
    10. '           ' → logprob: -9.677618980407715

Token 300: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20471888780593872
    2. '000' → logprob: -1.704718828201294
    3. ''' → logprob: -5.954719066619873
    4. '         ' → logprob: -7.954719066619873
    5. '0' → logprob: -8.704718589782715
    6. '   ' → logprob: -9.579718589782715
    7. ' ' → logprob: -10.329718589782715
    8. '       ' → logprob: -10.829718589782715
    9. '     ' → logprob: -10.954718589782715
    10. '00' → logprob: -11.079718589782715

Token 301: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0006993304705247283
    2. '0' → logprob: -8.000699043273926
    3. '00' → logprob: -8.000699043273926
    4. '011' → logprob: -11.250699043273926
    5. '001' → logprob: -11.250699043273926
    6. ' ' → logprob: -14.375699043273926
    7. '010' → logprob: -14.500699043273926
    8. '111' → logprob: -14.750699043273926
    9. '100' → logprob: -15.125699043273926
    10. '۰۰' → logprob: -15.500699043273926

Token 302: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0005835341871716082
    2. '"' → logprob: -7.625583648681641
    3. '0' → logprob: -9.50058364868164
    4. ''' → logprob: -11.87558364868164
    5. '01' → logprob: -12.50058364868164
    6. '000' → logprob: -12.62558364868164
    7. ' ' → logprob: -12.62558364868164
    8. '""' → logprob: -14.12558364868164
    9. '```' → logprob: -14.56308364868164
    10. '"""' → logprob: -14.87558364868164

Token 303: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.2040901929140091
    2. '"]' → logprob: -2.579090118408203
    3. '",
' → logprob: -2.579090118408203
    4. '"' → logprob: -3.954090118408203
    5. '         ' → logprob: -5.704090118408203
    6. ']' → logprob: -5.704090118408203
    7. ',' → logprob: -6.204090118408203
    8. ',
' → logprob: -6.204090118408203
    9. '       ' → logprob: -6.704090118408203
    10. '   ' → logprob: -7.329090118408203

Token 304: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.009781472384929657
    2. '"' → logprob: -5.009781360626221
    3. '       ' → logprob: -6.634781360626221
    4. '   ' → logprob: -7.634781360626221
    5. '     ' → logprob: -7.634781360626221
    6. '        ' → logprob: -8.009781837463379
    7. ''' → logprob: -8.259781837463379
    8. '             ' → logprob: -9.509781837463379
    9. '0' → logprob: -10.759781837463379
    10. '	     ' → logprob: -11.259781837463379

Token 305: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0007454255828633904
    2. ' "' → logprob: -7.7507452964782715
    3. '         ' → logprob: -8.37574577331543
    4. '   ' → logprob: -10.50074577331543
    5. ''' → logprob: -11.25074577331543
    6. '000' → logprob: -11.37574577331543
    7. '       ' → logprob: -11.37574577331543
    8. ' ' → logprob: -11.62574577331543
    9. '     ' → logprob: -12.75074577331543
    10. '0' → logprob: -13.25074577331543

Token 306: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18031923472881317
    2. '000' → logprob: -1.8053191900253296
    3. ''' → logprob: -7.555319309234619
    4. '0' → logprob: -10.930318832397461
    5. '00' → logprob: -10.930318832397461
    6. ' "' → logprob: -12.555318832397461
    7. '   ' → logprob: -12.805318832397461
    8. ' ' → logprob: -13.180318832397461
    9. '""' → logprob: -13.680318832397461
    10. '         ' → logprob: -13.805318832397461

Token 307: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -8.065608562901616e-05
    2. '00' → logprob: -9.625081062316895
    3. '001' → logprob: -12.625081062316895
    4. ' ' → logprob: -12.625081062316895
    5. ''' → logprob: -12.750081062316895
    6. '"' → logprob: -13.000081062316895
    7. '0' → logprob: -13.375081062316895
    8. '   ' → logprob: -15.125081062316895
    9. '011' → logprob: -15.625081062316895
    10. '"""' → logprob: -15.625081062316895

Token 308: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -3.416665640543215e-05
    2. '"' → logprob: -10.37503433227539
    3. '""' → logprob: -13.62503433227539
    4. '000' → logprob: -14.62503433227539
    5. '0' → logprob: -15.12503433227539
    6. ' ' → logprob: -15.25003433227539
    7. '"""' → logprob: -15.75003433227539
    8. '01' → logprob: -15.75003433227539
    9. '```' → logprob: -15.75003433227539
    10. ''' → logprob: -15.87503433227539

Token 309: '"],
' (ID: 15666)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.3245587646961212
    2. '"],' → logprob: -1.3245587348937988
    3. '   ' → logprob: -5.449558734893799
    4. ']' → logprob: -5.449558734893799
    5. '],' → logprob: -6.199558734893799
    6. '",' → logprob: -8.074559211730957
    7. '"' → logprob: -8.824559211730957
    8. '"],
' → logprob: -9.949559211730957
    9. '       ' → logprob: -10.199559211730957
    10. '']' → logprob: -11.324559211730957

Token 310: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.011085547506809235
    2. '   ' → logprob: -4.511085510253906
    3. ''' → logprob: -10.886085510253906
    4. ''}' → logprob: -11.511085510253906
    5. ' }' → logprob: -12.511085510253906
    6. '	' → logprob: -13.261085510253906
    7. '       ' → logprob: -14.136085510253906
    8. ''A' → logprob: -14.136085510253906
    9. '#' → logprob: -14.886085510253906
    10. '...' → logprob: -15.136085510253906

Token 311: ' '' (ID: 461)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0048812502063810825
    2. ''' (adapté à ' '') → logprob: -5.629881381988525
    3. ''}' → logprob: -7.129881381988525
    4. '   ' → logprob: -8.129880905151367
    5. ''g' → logprob: -9.629880905151367
    6. ''T' → logprob: -10.379880905151367
    7. ''A' → logprob: -10.504880905151367
    8. ''D' → logprob: -11.004880905151367
    9. ' }' → logprob: -11.129880905151367
    10. ''H' → logprob: -12.504880905151367

Token 312: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.004147849511355162
    2. ''' → logprob: -5.504148006439209
    3. 'H' → logprob: -10.50414752960205
    4. ' G' → logprob: -11.87914752960205
    5. 'E' → logprob: -12.37914752960205
    6. 'A' → logprob: -12.50414752960205
    7. 'F' → logprob: -12.50414752960205
    8. 'I' → logprob: -12.62914752960205
    9. ' '' → logprob: -12.75414752960205
    10. '':' → logprob: -13.81664752960205

Token 313: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0019416073337197304
    2. ''' → logprob: -6.251941680908203
    3. ' ':' → logprob: -11.751941680908203
    4. '":' → logprob: -12.501941680908203
    5. ':' → logprob: -14.001941680908203
    6. ''>' → logprob: -15.001941680908203
    7. ' '' → logprob: -16.501941680908203
    8. '']' → logprob: -17.251941680908203
    9. '']:' → logprob: -17.376941680908203
    10. '':[' → logprob: -17.376941680908203

Token 314: ' ["' (ID: 9129)
  Prédit: ' ["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ["' → logprob: -0.03554622828960419
    2. '["' → logprob: -4.03554630279541
    3. ' [' → logprob: -4.41054630279541
    4. '[' → logprob: -5.41054630279541
    5. ' [
' → logprob: -7.66054630279541
    6. ' ' → logprob: -9.66054630279541
    7. ' ['' → logprob: -10.03554630279541
    8. '[
' → logprob: -10.53554630279541
    9. ' "' → logprob: -11.53554630279541
    10. '   ' → logprob: -11.91054630279541

Token 315: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0011833232128992677
    2. '000' → logprob: -6.75118350982666
    3. ''' → logprob: -11.75118350982666
    4. '0' → logprob: -12.50118350982666
    5. ' "' → logprob: -14.00118350982666
    6. '00' → logprob: -15.12618350982666
    7. '   ' → logprob: -15.75118350982666
    8. '["' → logprob: -16.751182556152344
    9. '001' → logprob: -16.876182556152344
    10. ' ' → logprob: -17.376182556152344

Token 316: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -3.190178904333152e-05
    2. '001' → logprob: -10.750031471252441
    3. '0' → logprob: -12.125031471252441
    4. '011' → logprob: -12.875031471252441
    5. '111' → logprob: -13.625031471252441
    6. '00' → logprob: -13.750031471252441
    7. '110' → logprob: -16.625032424926758
    8. '100' → logprob: -16.750032424926758
    9. '010' → logprob: -17.375032424926758
    10. '  ' → logprob: -19.250032424926758

Token 317: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.009946618229150772
    2. '11' → logprob: -5.009946823120117
    3. '01' → logprob: -5.759946823120117
    4. '"' → logprob: -10.134946823120117
    5. '10' → logprob: -11.259946823120117
    6. '000' → logprob: -11.634946823120117
    7. '0' → logprob: -12.009946823120117
    8. '001' → logprob: -13.134946823120117
    9. ''' → logprob: -13.759946823120117
    10. '111' → logprob: -13.759946823120117

Token 318: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.21436944603919983
    2. '",
' → logprob: -1.8393694162368774
    3. '"' → logprob: -3.714369535446167
    4. ',' → logprob: -5.964369297027588
    5. '","' → logprob: -6.214369297027588
    6. '   ' → logprob: -6.589369297027588
    7. ',
' → logprob: -6.714369297027588
    8. '       ' → logprob: -7.714369297027588
    9. '",
' → logprob: -7.714369297027588
    10. '',' → logprob: -8.089369773864746

Token 319: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.031522832810878754
    2. '"' → logprob: -3.656522750854492
    3. '     ' → logprob: -5.656522750854492
    4. ' "' → logprob: -7.281522750854492
    5. ' ' → logprob: -7.531522750854492
    6. '       ' → logprob: -8.906522750854492
    7. '   ' → logprob: -9.031522750854492
    8. '        ' → logprob: -9.656522750854492
    9. '             ' → logprob: -9.656522750854492
    10. '          ' → logprob: -11.156522750854492

Token 320: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.0004722603189293295
    2. ' "' → logprob: -7.750472068786621
    3. '         ' → logprob: -10.750472068786621
    4. ''' → logprob: -11.125472068786621
    5. ' ' → logprob: -12.750472068786621
    6. '000' → logprob: -14.250472068786621
    7. '0' → logprob: -14.625472068786621
    8. '`' → logprob: -15.250472068786621
    9. '     ' → logprob: -15.250472068786621
    10. '   ' → logprob: -15.375472068786621

Token 321: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.01427562814205885
    2. '"' → logprob: -4.264275550842285
    3. ''' → logprob: -9.389275550842285
    4. '0' → logprob: -11.514275550842285
    5. '001' → logprob: -11.639275550842285
    6. '00' → logprob: -12.014275550842285
    7. ' ' → logprob: -13.264275550842285
    8. '""' → logprob: -14.389275550842285
    9. '010' → logprob: -14.889275550842285
    10. '   ' → logprob: -15.514275550842285

Token 322: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0009078874718397856
    2. '0' → logprob: -7.250907897949219
    3. '001' → logprob: -9.375907897949219
    4. '00' → logprob: -9.625907897949219
    5. '011' → logprob: -10.000907897949219
    6. '111' → logprob: -14.375907897949219
    7. '010' → logprob: -14.625907897949219
    8. '110' → logprob: -15.375907897949219
    9. '100' → logprob: -15.500907897949219
    10. '1' → logprob: -15.875907897949219

Token 323: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.05067087709903717
    2. '11' → logprob: -3.050670862197876
    3. '01' → logprob: -6.300671100616455
    4. '"' → logprob: -8.800670623779297
    5. '000' → logprob: -10.550670623779297
    6. '0' → logprob: -10.800670623779297
    7. '111' → logprob: -11.050670623779297
    8. '10' → logprob: -11.175670623779297
    9. '001' → logprob: -12.550670623779297
    10. ''' → logprob: -12.550670623779297

Token 324: '",
' (ID: 1150)
  Prédit: '",
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",
' → logprob: -0.6535537838935852
    2. '",' → logprob: -1.1535537242889404
    3. '"' → logprob: -2.5285537242889404
    4. ',
' → logprob: -3.6535537242889404
    5. '         ' → logprob: -3.6535537242889404
    6. ',' → logprob: -3.7785537242889404
    7. '       ' → logprob: -5.9035539627075195
    8. '","' → logprob: -5.9035539627075195
    9. '',
' → logprob: -6.7785539627075195
    10. '   ' → logprob: -6.9035539627075195

Token 325: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.18025073409080505
    2. '"' → logprob: -1.8052507638931274
    3. '     ' → logprob: -8.305251121520996
    4. '             ' → logprob: -9.430251121520996
    5. ' ' → logprob: -9.805251121520996
    6. ' "' → logprob: -10.430251121520996
    7. '   ' → logprob: -10.430251121520996
    8. '       ' → logprob: -10.805251121520996
    9. '		 ' → logprob: -11.180251121520996
    10. ''' → logprob: -11.555251121520996

Token 326: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -3.881560041918419e-05
    2. '000' → logprob: -10.875039100646973
    3. '001' → logprob: -11.875039100646973
    4. ' ' → logprob: -12.250039100646973
    5. ' "' → logprob: -12.500039100646973
    6. ''' → logprob: -13.125039100646973
    7. '   ' → logprob: -13.875039100646973
    8. '0' → logprob: -15.375039100646973
    9. '00' → logprob: -15.875039100646973
    10. '010' → logprob: -16.125038146972656

Token 327: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3297593295574188
    2. '001' → logprob: -1.3297593593597412
    3. '011' → logprob: -4.454759120941162
    4. '"' → logprob: -6.079759120941162
    5. '111' → logprob: -6.079759120941162
    6. '110' → logprob: -9.45475959777832
    7. '010' → logprob: -10.57975959777832
    8. ''' → logprob: -10.70475959777832
    9. '00' → logprob: -11.20475959777832
    10. '``' → logprob: -12.32975959777832

Token 328: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.5735800862312317
    2. '111' → logprob: -1.573580026626587
    3. '011' → logprob: -1.698580026626587
    4. '001' → logprob: -3.448580026626587
    5. '110' → logprob: -4.323580265045166
    6. '100' → logprob: -7.448580265045166
    7. '010' → logprob: -7.698580265045166
    8. '0' → logprob: -9.073579788208008
    9. '00' → logprob: -10.448579788208008
    10. '1' → logprob: -11.261079788208008

Token 329: '11' (ID: 994)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.2443251609802246
    2. '11' → logprob: -1.6193251609802246
    3. '01' → logprob: -4.244325160980225
    4. '"' → logprob: -5.619325160980225
    5. '10' → logprob: -7.369325160980225
    6. '111' → logprob: -10.369325637817383
    7. ''' → logprob: -10.494325637817383
    8. '110' → logprob: -10.494325637817383
    9. '000' → logprob: -11.244325637817383
    10. '011' → logprob: -11.869325637817383

Token 330: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.38354063034057617
    2. '",
' → logprob: -1.2585406303405762
    3. '"' → logprob: -3.383540630340576
    4. '","' → logprob: -8.258541107177734
    5. '0' → logprob: -9.508541107177734
    6. '",
' → logprob: -9.633541107177734
    7. '000' → logprob: -10.133541107177734
    8. '",

' → logprob: -10.133541107177734
    9. '00' → logprob: -10.258541107177734
    10. '"
' → logprob: -11.508541107177734

Token 331: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.01680069789290428
    2. '"' → logprob: -4.141800880432129
    3. '          ' → logprob: -7.766800880432129
    4. '             ' → logprob: -8.516800880432129
    5. ''' → logprob: -10.141800880432129
    6. '     ' → logprob: -10.766800880432129
    7. '        ' → logprob: -11.141800880432129
    8. '		 ' → logprob: -11.391800880432129
    9. ' "' → logprob: -11.766800880432129
    10. ' ' → logprob: -11.766800880432129

Token 332: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.6338962316513062
    2. '         ' → logprob: -0.7588962316513062
    3. ' "' → logprob: -8.008895874023438
    4. ''' → logprob: -8.633895874023438
    5. '		 ' → logprob: -8.883895874023438
    6. ' ' → logprob: -9.008895874023438
    7. '          ' → logprob: -9.133895874023438
    8. '     ' → logprob: -9.133895874023438
    9. '             ' → logprob: -9.508895874023438
    10. '0' → logprob: -9.883895874023438

Token 333: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.02207029238343239
    2. '001' → logprob: -3.8970704078674316
    3. '111' → logprob: -7.147070407867432
    4. '"' → logprob: -8.272069931030273
    5. '110' → logprob: -8.397069931030273
    6. '011' → logprob: -8.397069931030273
    7. '100' → logprob: -11.147069931030273
    8. ''' → logprob: -11.897069931030273
    9. ' ' → logprob: -12.272069931030273
    10. '010' → logprob: -12.522069931030273

Token 334: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.016128798946738243
    2. '001' → logprob: -4.641129016876221
    3. '111' → logprob: -5.641129016876221
    4. '011' → logprob: -6.516129016876221
    5. '110' → logprob: -6.641129016876221
    6. '100' → logprob: -12.141128540039062
    7. '00' → logprob: -12.266128540039062
    8. '010' → logprob: -12.391128540039062
    9. '0' → logprob: -13.266128540039062
    10. '11' → logprob: -13.578628540039062

Token 335: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.12744687497615814
    2. '00' → logprob: -2.1274468898773193
    3. '10' → logprob: -8.002447128295898
    4. '01' → logprob: -8.752447128295898
    5. '110' → logprob: -11.877447128295898
    6. '001' → logprob: -12.002447128295898
    7. '111' → logprob: -12.127447128295898
    8. '000' → logprob: -12.502447128295898
    9. '...' → logprob: -14.439947128295898
    10. '"' → logprob: -14.689947128295898

Token 336: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.0632341131567955
    2. '",
' → logprob: -2.9382340908050537
    3. '"' → logprob: -4.813234329223633
    4. '"]' → logprob: -8.938234329223633
    5. '"],' → logprob: -11.063234329223633
    6. '","' → logprob: -11.188234329223633
    7. '",
' → logprob: -11.438234329223633
    8. '         ' → logprob: -11.813234329223633
    9. '",

' → logprob: -12.438234329223633
    10. '       ' → logprob: -13.438234329223633

Token 337: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.004038387443870306
    2. '"' → logprob: -5.879038333892822
    3. ''' → logprob: -7.504038333892822
    4. '       ' → logprob: -7.754038333892822
    5. '     ' → logprob: -9.50403881072998
    6. '             ' → logprob: -10.00403881072998
    7. '        ' → logprob: -10.12903881072998
    8. '   ' → logprob: -10.25403881072998
    9. '          ' → logprob: -10.75403881072998
    10. ' ' → logprob: -11.37903881072998

Token 338: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.026607265695929527
    2. '         ' → logprob: -3.6516072750091553
    3. ''' → logprob: -8.776607513427734
    4. ' "' → logprob: -9.776607513427734
    5. '   ' → logprob: -10.776607513427734
    6. '       ' → logprob: -10.901607513427734
    7. ' ' → logprob: -11.526607513427734
    8. '        ' → logprob: -11.526607513427734
    9. '          ' → logprob: -11.526607513427734
    10. '     ' → logprob: -11.901607513427734

Token 339: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.049685750156641006
    2. '000' → logprob: -3.0496857166290283
    3. ''' → logprob: -7.299685955047607
    4. '         ' → logprob: -7.924685955047607
    5. '0' → logprob: -10.29968547821045
    6. ' "' → logprob: -12.29968547821045
    7. '00' → logprob: -12.29968547821045
    8. ' ' → logprob: -12.79968547821045
    9. '`' → logprob: -13.17468547821045
    10. '"""' → logprob: -13.17468547821045

Token 340: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0022745581809431314
    2. '001' → logprob: -6.377274513244629
    3. '011' → logprob: -8.127274513244629
    4. '111' → logprob: -8.752274513244629
    5. '110' → logprob: -9.377274513244629
    6. '010' → logprob: -11.127274513244629
    7. '100' → logprob: -11.752274513244629
    8. '00' → logprob: -11.877274513244629
    9. '0' → logprob: -12.752274513244629
    10. '```' → logprob: -14.127274513244629

Token 341: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.018230482935905457
    2. '11' → logprob: -4.018230438232422
    3. '01' → logprob: -10.018230438232422
    4. '10' → logprob: -10.768230438232422
    5. '000' → logprob: -12.518230438232422
    6. '"' → logprob: -12.518230438232422
    7. ' ' → logprob: -12.893230438232422
    8. '0' → logprob: -13.518230438232422
    9. '<|end|>' → logprob: -13.830730438232422
    10. ''' → logprob: -14.268230438232422

Token 342: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.11618632823228836
    2. '",
' → logprob: -2.2411863803863525
    3. '"' → logprob: -5.866186141967773
    4. ',' → logprob: -8.866186141967773
    5. '",
' → logprob: -8.866186141967773
    6. '"]' → logprob: -9.491186141967773
    7. '         ' → logprob: -10.116186141967773
    8. '","' → logprob: -10.366186141967773
    9. ',
' → logprob: -10.491186141967773
    10. '   ' → logprob: -11.116186141967773

Token 343: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.006179528776556253
    2. '"' → logprob: -5.256179332733154
    3. ''' → logprob: -7.506179332733154
    4. '       ' → logprob: -8.631179809570312
    5. '        ' → logprob: -9.631179809570312
    6. '     ' → logprob: -9.881179809570312
    7. '             ' → logprob: -9.881179809570312
    8. '   ' → logprob: -10.506179809570312
    9. '          ' → logprob: -12.506179809570312
    10. '           ' → logprob: -13.381179809570312

Token 344: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.006122417747974396
    2. '         ' → logprob: -5.256122589111328
    3. ' "' → logprob: -7.381122589111328
    4. ''' → logprob: -8.381122589111328
    5. '       ' → logprob: -11.631122589111328
    6. ' ' → logprob: -12.006122589111328
    7. '        ' → logprob: -12.256122589111328
    8. '          ' → logprob: -12.881122589111328
    9. '           ' → logprob: -13.131122589111328
    10. '             ' → logprob: -13.381122589111328

Token 345: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.39156994223594666
    2. '000' → logprob: -1.141569972038269
    3. ''' → logprob: -5.391570091247559
    4. '0' → logprob: -9.766570091247559
    5. '         ' → logprob: -10.516570091247559
    6. ' ' → logprob: -10.641570091247559
    7. '00' → logprob: -11.266570091247559
    8. ' "' → logprob: -12.516570091247559
    9. '   ' → logprob: -13.391570091247559
    10. '     ' → logprob: -13.516570091247559

Token 346: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0003362966235727072
    2. '00' → logprob: -8.125336647033691
    3. '001' → logprob: -11.125336647033691
    4. '0' → logprob: -11.125336647033691
    5. ' ' → logprob: -12.875336647033691
    6. '011' → logprob: -13.000336647033691
    7. ''' → logprob: -13.000336647033691
    8. '"' → logprob: -13.375336647033691
    9. '010' → logprob: -14.875336647033691
    10. '111' → logprob: -14.875336647033691

Token 347: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -4.961759259458631e-06
    2. '11' → logprob: -12.625004768371582
    3. '"' → logprob: -13.625004768371582
    4. ' ' → logprob: -15.875004768371582
    5. ''' → logprob: -16.2500057220459
    6. '01' → logprob: -16.3750057220459
    7. '000' → logprob: -17.6250057220459
    8. '0' → logprob: -17.7500057220459
    9. '[' → logprob: -18.6250057220459
    10. '```' → logprob: -18.6250057220459

Token 348: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.2051815688610077
    2. '",
' → logprob: -1.70518159866333
    3. '"' → logprob: -6.08018159866333
    4. ',' → logprob: -7.83018159866333
    5. ',
' → logprob: -8.330181121826172
    6. '         ' → logprob: -8.455181121826172
    7. '"]' → logprob: -8.580181121826172
    8. '",
' → logprob: -8.705181121826172
    9. '       ' → logprob: -9.205181121826172
    10. '","' → logprob: -9.705181121826172

Token 349: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.002028923248872161
    2. ''' → logprob: -6.377028942108154
    3. '"' → logprob: -8.627028465270996
    4. '       ' → logprob: -9.752028465270996
    5. '     ' → logprob: -10.127028465270996
    6. '             ' → logprob: -10.377028465270996
    7. '        ' → logprob: -11.752028465270996
    8. '   ' → logprob: -12.502028465270996
    9. '           ' → logprob: -13.127028465270996
    10. '          ' → logprob: -13.752028465270996

Token 350: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -0.007287146989256144
    2. ' "' → logprob: -5.25728702545166
    3. ''' → logprob: -6.25728702545166
    4. '         ' → logprob: -9.13228702545166
    5. ' '' → logprob: -11.25728702545166
    6. ' ' → logprob: -12.75728702545166
    7. '`' → logprob: -12.88228702545166
    8. '       ' → logprob: -13.25728702545166
    9. '```' → logprob: -14.13228702545166
    10. '   ' → logprob: -14.75728702545166

Token 351: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00012284684635233134
    2. ''' → logprob: -9.750123023986816
    3. '000' → logprob: -10.250123023986816
    4. ' "' → logprob: -10.500123023986816
    5. '         ' → logprob: -14.625123023986816
    6. '0' → logprob: -15.000123023986816
    7. ' ' → logprob: -15.500123023986816
    8. '`' → logprob: -16.1251220703125
    9. '   ' → logprob: -16.2501220703125
    10. '       ' → logprob: -16.7501220703125

Token 352: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.5332478142227046e-05
    2. '0' → logprob: -12.375015258789062
    3. '001' → logprob: -12.375015258789062
    4. '00' → logprob: -12.750015258789062
    5. ''' → logprob: -13.250015258789062
    6. ' ' → logprob: -14.625015258789062
    7. '011' → logprob: -14.875015258789062
    8. '111' → logprob: -15.000015258789062
    9. '100' → logprob: -15.375015258789062
    10. '010' → logprob: -15.375015258789062

Token 353: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0036035135854035616
    2. '11' → logprob: -5.628603458404541
    3. '01' → logprob: -13.1286039352417
    4. '"' → logprob: -13.8786039352417
    5. ''' → logprob: -15.6286039352417
    6. '0' → logprob: -15.7536039352417
    7. '000' → logprob: -16.378602981567383
    8. '```' → logprob: -17.628602981567383
    9. '[' → logprob: -18.128602981567383
    10. '""' → logprob: -18.378602981567383

Token 354: '",
' (ID: 1150)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.511677622795105
    2. '",
' → logprob: -1.886677622795105
    3. '"' → logprob: -2.0116777420043945
    4. '"]' → logprob: -2.6366777420043945
    5. '         ' → logprob: -3.7616777420043945
    6. '       ' → logprob: -4.7616777420043945
    7. ']' → logprob: -5.2616777420043945
    8. '   ' → logprob: -6.7616777420043945
    9. ',' → logprob: -6.8866777420043945
    10. ',
' → logprob: -7.2616777420043945

Token 355: '         ' (ID: 983)
  Prédit: '         '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '         ' → logprob: -0.009592937305569649
    2. '"' → logprob: -4.8845930099487305
    3. ''' → logprob: -6.6345930099487305
    4. '       ' → logprob: -8.25959300994873
    5. '        ' → logprob: -8.38459300994873
    6. '     ' → logprob: -10.00959300994873
    7. '             ' → logprob: -10.25959300994873
    8. '   ' → logprob: -10.38459300994873
    9. '          ' → logprob: -11.13459300994873
    10. '           ' → logprob: -11.50959300994873

Token 356: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' (adapté à ' "') → logprob: -4.3226136767771095e-05
    2. ' "' → logprob: -10.125042915344238
    3. '         ' → logprob: -13.625042915344238
    4. ''' → logprob: -14.125042915344238
    5. '000' → logprob: -14.375042915344238
    6. ' ' → logprob: -15.500042915344238
    7. '   ' → logprob: -15.875042915344238
    8. '       ' → logprob: -16.500043869018555
    9. '0' → logprob: -16.625043869018555
    10. '     ' → logprob: -17.250043869018555

Token 357: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0017873981269076467
    2. '000' → logprob: -6.376787185668945
    3. ' "' → logprob: -9.751787185668945
    4. ''' → logprob: -10.626787185668945
    5. ' ' → logprob: -13.751787185668945
    6. '0' → logprob: -14.126787185668945
    7. '   ' → logprob: -15.501787185668945
    8. '00' → logprob: -15.626787185668945
    9. '`' → logprob: -16.001787185668945
    10. '         ' → logprob: -16.251787185668945

Token 358: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -7.107425062713446e-06
    2. ''' → logprob: -13.000006675720215
    3. '001' → logprob: -13.125006675720215
    4. '0' → logprob: -14.125006675720215
    5. '"' → logprob: -14.750006675720215
    6. '00' → logprob: -14.875006675720215
    7. '011' → logprob: -14.875006675720215
    8. '111' → logprob: -15.375006675720215
    9. '100' → logprob: -15.500006675720215
    10. '010' → logprob: -15.625006675720215

Token 359: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -1.282920129597187e-05
    2. '"' → logprob: -11.375012397766113
    3. '11' → logprob: -14.625012397766113
    4. '01' → logprob: -15.000012397766113
    5. ''' → logprob: -15.250012397766113
    6. '000' → logprob: -16.50001335144043
    7. '0' → logprob: -16.75001335144043
    8. ' ' → logprob: -17.50001335144043
    9. '""' → logprob: -17.50001335144043
    10. '```' → logprob: -17.75001335144043

Token 360: '"]
' (ID: 14510)
  Prédit: '"],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"],' → logprob: -0.039598267525434494
    2. '"]' → logprob: -3.289598226547241
    3. '"],
' → logprob: -6.53959846496582
    4. ''],' → logprob: -10.41459846496582
    5. '],' → logprob: -10.53959846496582
    6. '   ' → logprob: -10.66459846496582
    7. '"' → logprob: -11.03959846496582
    8. ']' → logprob: -11.91459846496582
    9. '"],
' → logprob: -12.66459846496582
    10. '']' → logprob: -13.41459846496582

Token 361: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.01605748012661934
    2. ',' → logprob: -4.14105749130249
    3. ',
' → logprob: -11.266057014465332
    4. ' }' → logprob: -11.766057014465332
    5. '<|end|>' → logprob: -14.266057014465332
    6. '}
' → logprob: -14.516057014465332
    7. '},' → logprob: -14.641057014465332
    8. '   ' → logprob: -14.766057014465332
    9. ']' → logprob: -15.141057014465332
    10. '```' → logprob: -16.01605796813965

Token 362: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05131671577692032
    2. '}' → logprob: -3.551316738128662
    3. ',
' → logprob: -4.426316738128662
    4. ']' → logprob: -6.051316738128662
    5. ''' → logprob: -6.676316738128662
    6. '{' → logprob: -7.051316738128662
    7. '\n' → logprob: -7.176316738128662
    8. ';' → logprob: -7.551316738128662
    9. '
' → logprob: -7.676316738128662
    10. '<|end|>' → logprob: -7.676316738128662

Token 363: ' normalize' (ID: 44464)
  Prédit: ' render'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' render' → logprob: -0.6312282085418701
    2. ' draw' → logprob: -1.6312282085418701
    3. ' get' → logprob: -2.25622820854187
    4. ' print' → logprob: -2.63122820854187
    5. ' display' → logprob: -3.00622820854187
    6. ' decode' → logprob: -4.381228446960449
    7. ' shape' → logprob: -4.631228446960449
    8. ' generate' → logprob: -4.756228446960449
    9. ' shapes' → logprob: -5.006228446960449
    10. 'render' → logprob: -6.881228446960449

Token 364: '(shape' (ID: 58011)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5811656713485718
    2. '_shape' → logprob: -1.4561656713485718
    3. '_shapes' → logprob: -2.7061657905578613
    4. '_text' → logprob: -3.0811657905578613
    5. '(' → logprob: -3.4561657905578613
    6. '_char' → logprob: -4.331165790557861
    7. '_code' → logprob: -4.831165790557861
    8. '_string' → logprob: -4.831165790557861
    9. '_character' → logprob: -4.956165790557861
    10. '_line' → logprob: -5.331165790557861

Token 365: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013916619354858994
    2. '):
' → logprob: -7.376391887664795
    3. ')' → logprob: -8.251391410827637
    4. ',' → logprob: -8.876391410827637
    5. '_' → logprob: -9.251391410827637
    6. 's' → logprob: -9.626391410827637
    7. ':' → logprob: -9.876391410827637
    8. ' ):' → logprob: -10.001391410827637
    9. '_shape' → logprob: -10.751391410827637
    10. '[' → logprob: -10.751391410827637

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023148927837610245
    2. ' normalized' → logprob: -4.148149013519287
    3. ' result' → logprob: -6.273149013519287
    4. '    ' → logprob: -6.398149013519287
    5. ' return' → logprob: -6.648149013519287
    6. 'normalized' → logprob: -7.273149013519287
    7. 'result' → logprob: -8.023148536682129
    8. ':' → logprob: -8.148148536682129
    9. ' new' → logprob: -8.523148536682129
    10. ' for' → logprob: -8.773148536682129

Token 367: ' #' (ID: 1069)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.5107425451278687
    2. 'top' → logprob: -2.385742664337158
    3. ' rows' → logprob: -3.010742664337158
    4. '#' (adapté à ' #') → logprob: -3.260742664337158
    5. 'while' → logprob: -3.385742664337158
    6. ' top' → logprob: -3.385742664337158
    7. 'min' → logprob: -4.010742664337158
    8. '   ' → logprob: -4.010742664337158
    9. ' while' → logprob: -4.010742664337158
    10. 'height' → logprob: -4.385742664337158

Token 368: ' shape' (ID: 9591)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5097877979278564
    2. 'lines' → logprob: -2.2597877979278564
    3. 'rows' → logprob: -2.7597877979278564
    4. '   ' → logprob: -2.7597877979278564
    5. ' #' → logprob: -2.8847877979278564
    6. 'def' → logprob: -2.8847877979278564
    7. 'first' → logprob: -3.0097877979278564
    8. 'strip' → logprob: -3.0097877979278564
    9. ' lines' → logprob: -3.2597877979278564
    10. 'for' → logprob: -3.2597877979278564

Token 369: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037067268043756485
    2. '=' → logprob: -3.412067174911499
    3. '[' → logprob: -7.162067413330078
    4. ':' → logprob: -7.662067413330078
    5. '   ' → logprob: -7.662067413330078
    6. '_' → logprob: -7.787067413330078
    7. '[:]' → logprob: -7.912067413330078
    8. '_lines' → logprob: -8.037067413330078
    9. '):' → logprob: -9.287067413330078
    10. ' ' → logprob: -9.287067413330078

Token 370: ' list' (ID: 1562)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12030480057001114
    2. '[' → logprob: -3.245304822921753
    3. ' [' → logprob: -3.745304822921753
    4. 'a' → logprob: -3.870304822921753
    5. ' [
' → logprob: -4.870304584503174
    6. '[
' → logprob: -4.995304584503174
    7. ' shape' → logprob: -5.370304584503174
    8. ' an' → logprob: -5.870304584503174
    9. '["' → logprob: -6.120304584503174
    10. ' ['' → logprob: -6.370304584503174

Token 371: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.256526917219162
    2. ' of' → logprob: -1.8815269470214844
    3. '   ' → logprob: -3.1315269470214844
    4. '[
' → logprob: -4.631526947021484
    5. 'def' → logprob: -5.006526947021484
    6. '[str' → logprob: -5.381526947021484
    7. '<|end|>' → logprob: -5.881526947021484
    8. 'of' → logprob: -6.131526947021484
    9. '[int' → logprob: -6.631526947021484
    10. '<|end|>' → logprob: -7.506526947021484

Token 372: ' ' (ID: 220)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6270136833190918
    2. 'strings' → logprob: -0.8770136833190918
    3. ' strings' → logprob: -3.127013683319092
    4. ' str' → logprob: -5.377013683319092
    5. '8' → logprob: -6.877013683319092
    6. 'string' → logprob: -8.75201416015625
    7. ' ' → logprob: -9.62701416015625
    8. '[str' → logprob: -10.12701416015625
    9. '"' → logprob: -11.25201416015625
    10. 'eight' → logprob: -12.50201416015625

Token 373: '8' (ID: 23)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16085927188396454
    2. 'strings' → logprob: -1.910859227180481
    3. 'string' → logprob: -8.160859107971191
    4. '8' → logprob: -8.285859107971191
    5. '[str' → logprob: -9.535859107971191
    6. ' strings' → logprob: -10.910859107971191
    7. ' str' → logprob: -12.160859107971191
    8. ' ' → logprob: -15.285859107971191
    9. 'stri' → logprob: -15.910859107971191
    10. '	str' → logprob: -16.035860061645508

Token 374: ' strings' (ID: 18279)
  Prédit: ' strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.526562511920929
    2. 'strings' → logprob: -0.901562511920929
    3. ' lines' → logprob: -6.026562690734863
    4. '   ' → logprob: -7.276562690734863
    5. ' ' → logprob: -9.401562690734863
    6. '[' → logprob: -9.651562690734863
    7. 'lines' → logprob: -10.276562690734863
    8. '[str' → logprob: -10.776562690734863
    9. 'string' → logprob: -10.901562690734863
    10. 'str' → logprob: -10.901562690734863

Token 375: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08311743289232254
    2. ',' → logprob: -3.7081174850463867
    3. ':' → logprob: -3.7081174850463867
    4. '
' → logprob: -4.333117485046387
    5. '    
' → logprob: -5.458117485046387
    6. 'def' → logprob: -5.583117485046387
    7. ',
' → logprob: -5.833117485046387
    8. ':
' → logprob: -6.208117485046387
    9. ' for' → logprob: -6.958117485046387
    10. '[' → logprob: -7.583117485046387

Token 376: ' '' (ID: 461)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.0327874422073364
    2. ' length' → logprob: -1.4077874422073364
    3. ''' → logprob: -1.5327874422073364
    4. '8' → logprob: -2.282787322998047
    5. '"' → logprob: -3.157787322998047
    6. ' ' → logprob: -3.907787322998047
    7. ' '' → logprob: -4.157787322998047
    8. ' "' → logprob: -6.907787322998047
    9. '0' → logprob: -7.157787322998047
    10. 'eight' → logprob: -8.407787322998047

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10027157515287399
    2. '01' → logprob: -2.350271463394165
    3. '010' → logprob: -10.475271224975586
    4. '012' → logprob: -10.475271224975586
    5. '1' → logprob: -12.350271224975586
    6. ''' → logprob: -13.350271224975586
    7. '8' → logprob: -14.225271224975586
    8. '011' → logprob: -14.475271224975586
    9. '10' → logprob: -14.725271224975586
    10. '000' → logprob: -15.475271224975586

Token 378: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015494986437261105
    2. '1' → logprob: -7.00154972076416
    3. ''s' → logprob: -7.37654972076416
    4. ''or' → logprob: -11.87654972076416
    5. '0' → logprob: -13.25154972076416
    6. 's' → logprob: -13.87654972076416
    7. '"' → logprob: -13.87654972076416
    8. '',' → logprob: -15.25154972076416
    9. '111' → logprob: -15.25154972076416
    10. '012' → logprob: -15.50154972076416

Token 379: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08699890226125717
    2. ''' → logprob: -2.96199893951416
    3. 'and' → logprob: -3.71199893951416
    4. ''s' → logprob: -5.46199893951416
    5. '"' → logprob: -7.08699893951416
    6. ' and' → logprob: -7.08699893951416
    7. '1' → logprob: -7.33699893951416
    8. ' or' → logprob: -7.96199893951416
    9. 'or' → logprob: -9.58699893951416
    10. '"s' → logprob: -10.33699893951416

Token 380: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001562000485137105
    2. '1' → logprob: -6.501562118530273
    3. ' '' → logprob: -9.751562118530273
    4. '"' → logprob: -14.001562118530273
    5. '   ' → logprob: -15.001562118530273
    6. '`' → logprob: -15.876562118530273
    7. 's' → logprob: -16.126562118530273
    8. ''s' → logprob: -17.001562118530273
    9. ' ' → logprob: -17.126562118530273
    10. '('' → logprob: -18.251562118530273

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ''' → logprob: -15.25
    3. ' ' → logprob: -17.875
    4. ''s' → logprob: -18.625
    5. '')' → logprob: -18.875
    6. '0' → logprob: -19.25
    7. ''''' → logprob: -20.5
    8. '```' → logprob: -21.125
    9. '

' → logprob: -21.25
    10. '
' → logprob: -21.375

Token 382: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2330571562051773
    2. '"' → logprob: -2.3580572605133057
    3. ''
' → logprob: -2.4830572605133057
    4. 's' → logprob: -5.233057022094727
    5. '']' → logprob: -5.233057022094727
    6. '"
' → logprob: -5.608057022094727
    7. '"'' → logprob: -5.608057022094727
    8. ''s' → logprob: -5.733057022094727
    9. ''"
' → logprob: -6.108057022094727
    10. '']
' → logprob: -6.233057022094727

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10085900127887726
    2. '
' → logprob: -3.1008589267730713
    3. ':' → logprob: -3.8508589267730713
    4. '    
' → logprob: -4.60085916519165
    5. ' 
' → logprob: -5.60085916519165
    6. ',' → logprob: -5.85085916519165
    7. 'def' → logprob: -6.60085916519165
    8. ')' → logprob: -6.72585916519165
    9. '    ' → logprob: -6.72585916519165
    10. '  
' → logprob: -6.72585916519165

Token 384: ' #' (ID: 1069)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -1.8424419164657593
    2. 'top' → logprob: -1.9674419164657593
    3. '   ' → logprob: -2.217442035675049
    4. 'def' → logprob: -2.592442035675049
    5. ' top' → logprob: -2.592442035675049
    6. ' rows' → logprob: -2.717442035675049
    7. '#' (adapté à ' #') → logprob: -2.842442035675049
    8. 'min' → logprob: -3.342442035675049
    9. ' lines' → logprob: -3.467442035675049
    10. ' min' → logprob: -3.467442035675049

Token 385: ' shift' (ID: 12847)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7864647507667542
    2. 'rows' → logprob: -2.2864646911621094
    3. 'first' → logprob: -2.6614646911621094
    4. 'for' → logprob: -2.9114646911621094
    5. 'def' → logprob: -2.9114646911621094
    6. '   ' → logprob: -3.4114646911621094
    7. 'shift' → logprob: -3.6614646911621094
    8. 'top' → logprob: -3.7864646911621094
    9. 'while' → logprob: -3.9114646911621094
    10. 'lines' → logprob: -4.036464691162109

Token 386: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.5979930758476257
    2. 'left' → logprob: -1.4729931354522705
    3. ' left' → logprob: -2.3479931354522705
    4. ' shape' → logprob: -2.8479931354522705
    5. ' all' → logprob: -4.222992897033691
    6. 'rows' → logprob: -4.597992897033691
    7. 'all' → logprob: -4.847992897033691
    8. 'up' → logprob: -4.972992897033691
    9. ' up' → logprob: -5.347992897033691
    10. '(shape' → logprob: -5.597992897033691

Token 387: ' to' (ID: 316)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.3946973383426666
    2. 'left' → logprob: -2.394697427749634
    3. 'down' → logprob: -2.769697427749634
    4. '_up' → logprob: -3.394697427749634
    5. '   ' → logprob: -3.644697427749634
    6. '[' → logprob: -4.019697189331055
    7. ' up' → logprob: -4.144697189331055
    8. '
' → logprob: -4.394697189331055
    9. '_left' → logprob: -4.519697189331055
    10. 'shape' → logprob: -4.769697189331055

Token 388: ' top' (ID: 2344)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2082214057445526
    2. ' the' → logprob: -1.833221435546875
    3. 'left' → logprob: -3.708221435546875
    4. 'top' → logprob: -5.958221435546875
    5. 'remove' → logprob: -8.083221435546875
    6. ' left' → logprob: -8.583221435546875
    7. ' top' → logprob: -8.708221435546875
    8. 'def' → logprob: -9.333221435546875
    9. 'right' → logprob: -9.333221435546875
    10. 't' → logprob: -10.833221435546875

Token 389: '-left' (ID: 17007)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.931940495967865
    2. 'def' → logprob: -1.5569405555725098
    3. '_' → logprob: -1.9319405555725098
    4. '[' → logprob: -2.8069405555725098
    5. '
' → logprob: -3.0569405555725098
    6. 'for' → logprob: -3.5569405555725098
    7. ' for' → logprob: -3.6819405555725098
    8. '_left' → logprob: -4.05694055557251
    9. '    ' → logprob: -4.18194055557251
    10. ',' → logprob: -4.30694055557251

Token 390: ' so' (ID: 813)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7071923017501831
    2. ':' → logprob: -1.207192301750183
    3. '   ' → logprob: -2.0821924209594727
    4. ':
' → logprob: -3.2071924209594727
    5. 'def' → logprob: -4.457192420959473
    6. '  
' → logprob: -4.582192420959473
    7. '    
' → logprob: -4.832192420959473
    8. '\n' → logprob: -5.707192420959473
    9. ' 
' → logprob: -6.207192420959473
    10. '   
' → logprob: -6.707192420959473

Token 391: ' no' (ID: 860)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.19986286759376526
    2. 'that' → logprob: -1.9498628377914429
    3. ' all' → logprob: -3.8248629570007324
    4. '   ' → logprob: -5.074862957000732
    5. 'all' → logprob: -5.199862957000732
    6. ' it' → logprob: -6.324862957000732
    7. ' the' → logprob: -6.949862957000732
    8. 'it' → logprob: -7.824862957000732
    9. ' there' → logprob: -8.074862480163574
    10. 'def' → logprob: -8.074862480163574

Token 392: ' leading' (ID: 8117)
  Prédit: ' leading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -1.058226466178894
    2. ' rows' → logprob: -1.183226466178894
    3. ' row' → logprob: -1.433226466178894
    4. 'row' → logprob: -3.1832265853881836
    5. 'rows' → logprob: -3.9332265853881836
    6. ' ' → logprob: -4.308226585388184
    7. 'leading' → logprob: -4.683226585388184
    8. ' lines' → logprob: -5.183226585388184
    9. ' line' → logprob: -5.308226585388184
    10. 'def' → logprob: -5.558226585388184

Token 393: ' zeros' (ID: 42274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6282925009727478
    2. '000' → logprob: -0.8782925009727478
    3. 'zeros' → logprob: -4.503292560577393
    4. ' ' → logprob: -4.503292560577393
    5. 'rows' → logprob: -4.628292560577393
    6. ' zeros' → logprob: -4.878292560577393
    7. ''' → logprob: -5.503292560577393
    8. ' rows' → logprob: -6.003292560577393
    9. 'zero' → logprob: -7.128292560577393
    10. '00' → logprob: -7.128292560577393

Token 394: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7663557529449463
    2. '   ' → logprob: -1.0163557529449463
    3. ':' → logprob: -2.5163557529449463
    4. 'def' → logprob: -2.6413557529449463
    5. ':
' → logprob: -4.391355514526367
    6. '    
' → logprob: -6.266355514526367
    7. '\n' → logprob: -6.766355514526367
    8. '  
' → logprob: -6.766355514526367
    9. ' for' → logprob: -7.141355514526367
    10. ' 
' → logprob: -7.766355514526367

Token 395: ' rows' (ID: 13585)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6258399486541748
    2. 'rows' → logprob: -1.1258399486541748
    3. 'row' → logprob: -2.750839948654175
    4. 'shape' → logprob: -3.750839948654175
    5. ' any' → logprob: -4.125840187072754
    6. 'each' → logprob: -4.375840187072754
    7. 'all' → logprob: -4.625840187072754
    8. 'def' → logprob: -5.500840187072754
    9. 'the' → logprob: -5.500840187072754
    10. ' rows' → logprob: -6.375840187072754

Token 396: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06050702929496765
    2. ':' → logprob: -3.31050705909729
    3. 'def' → logprob: -4.685506820678711
    4. '
' → logprob: -4.935506820678711
    5. ':
' → logprob: -6.060506820678711
    6. ',' → logprob: -6.935506820678711
    7. '    
' → logprob: -7.185506820678711
    8. '  
' → logprob: -7.810506820678711
    9. ',
' → logprob: -8.685506820678711
    10. ' and' → logprob: -8.685506820678711

Token 397: ' in' (ID: 306)
  Prédit: 'columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'columns' → logprob: -0.03342067450284958
    2. 'cols' → logprob: -3.9084205627441406
    3. ' columns' → logprob: -4.408420562744141
    4. '   ' → logprob: -7.783420562744141
    5. 'def' → logprob: -9.28342056274414
    6. ' cols' → logprob: -9.53342056274414
    7. ' ' → logprob: -11.90842056274414
    8. '       ' → logprob: -12.03342056274414
    9. 'col' → logprob: -12.03342056274414
    10. 'column' → logprob: -12.53342056274414

Token 398: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.1631922721862793
    2. 'columns' → logprob: -1.9131922721862793
    3. ' any' → logprob: -6.288192272186279
    4. 'cols' → logprob: -7.288192272186279
    5. 'any' → logprob: -8.413192749023438
    6. ' cols' → logprob: -9.788192749023438
    7. ' the' → logprob: -10.163192749023438
    8. ' each' → logprob: -10.288192749023438
    9. ' all' → logprob: -10.538192749023438
    10. 'def' → logprob: -11.288192749023438

Token 399: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5116891860961914
    2. ':' → logprob: -1.7616891860961914
    3. '
' → logprob: -1.7616891860961914
    4. ':
' → logprob: -3.3866891860961914
    5. '    
' → logprob: -4.386689186096191
    6. 'def' → logprob: -5.886689186096191
    7. '  
' → logprob: -6.136689186096191
    8. ' 
' → logprob: -6.636689186096191
    9. '\n' → logprob: -7.261689186096191
    10. '):
' → logprob: -7.511689186096191

Token 400: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2967967987060547
    2. '   ' → logprob: -1.4217967987060547
    3. ':
' → logprob: -5.171796798706055
    4. 'def' → logprob: -6.046796798706055
    5. '
' → logprob: -6.171796798706055
    6. '(' → logprob: -6.296796798706055
    7. '):' → logprob: -7.546796798706055
    8. '    
' → logprob: -8.046796798706055
    9. '  
' → logprob: -8.171796798706055
    10. '[' → logprob: -8.421796798706055

Token 401: ' rows' (ID: 13585)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38226571679115295
    2. 'min' → logprob: -1.6322656869888306
    3. ' min' → logprob: -2.38226580619812
    4. 'def' → logprob: -4.632265567779541
    5. 'top' → logprob: -5.507265567779541
    6. 'rows' (adapté à ' rows') → logprob: -5.757265567779541
    7. '#' → logprob: -5.882265567779541
    8. '
' → logprob: -6.007265567779541
    9. '    
' → logprob: -6.507265567779541
    10. ' top' → logprob: -6.882265567779541

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16038954257965088
    2. '=' → logprob: -1.9103895425796509
    3. ',' → logprob: -9.78538990020752
    4. '_' → logprob: -10.41038990020752
    5. ' =
' → logprob: -11.03538990020752
    6. '_shift' → logprob: -11.03538990020752
    7. '   ' → logprob: -11.16038990020752
    8. '=[]' → logprob: -11.41038990020752
    9. ' ' → logprob: -12.16038990020752
    10. '_min' → logprob: -13.03538990020752

Token 403: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2811211049556732
    2. 'shape' → logprob: -1.7811211347579956
    3. 'len' → logprob: -3.281121015548706
    4. '[len' → logprob: -3.656121015548706
    5. ' [' → logprob: -4.906121253967285
    6. ' shape' → logprob: -6.156121253967285
    7. ' len' → logprob: -7.281121253967285
    8. '8' → logprob: -7.281121253967285
    9. 'list' → logprob: -7.656121253967285
    10. '[int' → logprob: -7.906121253967285

Token 404: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.016291949898004532
    2. 'row' → logprob: -4.266292095184326
    3. 'list' → logprob: -7.141292095184326
    4. '[int' → logprob: -7.516292095184326
    5. 'shape' → logprob: -8.266291618347168
    6. '[' → logprob: -8.891291618347168
    7. 's' → logprob: -8.891291618347168
    8. ' int' → logprob: -9.141291618347168
    9. 'any' → logprob: -11.016291618347168
    10. 'line' → logprob: -11.016291618347168

Token 405: '(row' (ID: 15945)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5786209106445312
    2. '(row' → logprob: -0.8286209106445312
    3. 'map' → logprob: -7.078620910644531
    4. '(r' → logprob: -7.453620910644531
    5. '(line' → logprob: -7.578620910644531
    6. 'row' → logprob: -7.953620910644531
    7. '(s' → logprob: -8.078620910644531
    8. '(' → logprob: -10.203620910644531
    9. '(shape' → logprob: -10.328620910644531
    10. '(x' → logprob: -12.328620910644531

Token 406: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07587775588035583
    2. '(map' → logprob: -3.3258776664733887
    3. '(shape' → logprob: -3.8258776664733887
    4. '(row' → logprob: -4.575877666473389
    5. '('' → logprob: -5.700877666473389
    6. '(' → logprob: -6.950877666473389
    7. '(strip' → logprob: -8.575878143310547
    8. '(s' → logprob: -8.575878143310547
    9. ')]' → logprob: -9.200878143310547
    10. '(sh' → logprob: -10.325878143310547

Token 407: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4273158609867096
    2. '(shape' → logprob: -1.4273158311843872
    3. '(row' → logprob: -3.3023159503936768
    4. 'for' → logprob: -3.4273159503936768
    5. '(' → logprob: -3.6773159503936768
    6. ')' → logprob: -4.677315711975098
    7. '[:]' → logprob: -6.552315711975098
    8. '()' → logprob: -7.052315711975098
    9. ']' → logprob: -8.052315711975098
    10. '('' → logprob: -8.177315711975098

Token 408: ' row' (ID: 5225)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.19126905500888824
    2. ' shape' → logprob: -2.0662691593170166
    3. 'row' → logprob: -3.1912691593170166
    4. ' row' → logprob: -5.0662689208984375
    5. '(shape' → logprob: -12.691268920898438
    6. ' ' → logprob: -14.441268920898438
    7. '.shape' → logprob: -14.441268920898438
    8. 'sh' → logprob: -14.566268920898438
    9. 's' → logprob: -14.816268920898438
    10. 'rows' → logprob: -14.941268920898438

Token 409: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043025340884923935
    2. 'in' → logprob: -3.168025255203247
    3. 'shape' → logprob: -11.293025016784668
    4. ' ' → logprob: -12.293025016784668
    5. 'rows' → logprob: -12.418025016784668
    6. 'row' → logprob: -13.168025016784668
    7. ']' → logprob: -14.293025016784668
    8. 's' → logprob: -14.793025016784668
    9. ' shapes' → logprob: -14.793025016784668
    10. '	in' → logprob: -15.168025016784668

Token 410: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.023255497217178345
    2. ' shape' → logprob: -3.7732555866241455
    3. '(shape' → logprob: -12.523255348205566
    4. 'sh' → logprob: -12.898255348205566
    5. '.shape' → logprob: -13.523255348205566
    6. '   ' → logprob: -13.773255348205566
    7. ' shapes' → logprob: -14.398255348205566
    8. '
' → logprob: -15.148255348205566
    9. ' ' → logprob: -15.398255348205566
    10. ')' → logprob: -16.148256301879883

Token 411: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005250345566309988
    2. ']
' → logprob: -7.625524997711182
    3. ']

' → logprob: -10.87552547454834
    4. ' ]' → logprob: -11.25052547454834
    5. '   ' → logprob: -12.87552547454834
    6. ']
' → logprob: -13.62552547454834
    7. '
' → logprob: -13.75052547454834
    8. ']

' → logprob: -16.625524520874023
    9. ')' → logprob: -16.750524520874023
    10. ')]' → logprob: -17.375524520874023

Token 412: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5575172901153564
    2. '   ' → logprob: -1.6825172901153564
    3. 'min' → logprob: -1.9325172901153564
    4. 'n' → logprob: -4.182517051696777
    5. '    
' → logprob: -4.182517051696777
    6. '#' → logprob: -4.432517051696777
    7. ' min' → logprob: -4.932517051696777
    8. 'm' → logprob: -5.182517051696777
    9. 'def' → logprob: -5.182517051696777
    10. ' 
' → logprob: -5.557517051696777

Token 413: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12321220338344574
    2. ' min' → logprob: -2.8732120990753174
    3. 'top' → logprob: -3.6232120990753174
    4. 'col' → logprob: -4.3732123374938965
    5. ' top' → logprob: -4.8732123374938965
    6. ' col' → logprob: -5.8732123374938965
    7. 'cols' → logprob: -5.9982123374938965
    8. 'row' → logprob: -6.3732123374938965
    9. 'def' → logprob: -6.4982123374938965
    10. '#' (adapté à ' #') → logprob: -6.8732123374938965

Token 414: ' find' (ID: 1646)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023218920454382896
    2. '#' → logprob: -4.898219108581543
    3. 'col' → logprob: -4.898219108581543
    4. 'row' → logprob: -6.023219108581543
    5. 'cols' → logprob: -6.023219108581543
    6. 'top' → logprob: -6.273219108581543
    7. 'def' → logprob: -7.023219108581543
    8. 'first' → logprob: -9.148219108581543
    9. ' min' → logprob: -9.398219108581543
    10. 'rows' → logprob: -9.898219108581543

Token 415: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09903405606746674
    2. ' min' → logprob: -3.349034070968628
    3. 'top' → logprob: -3.349034070968628
    4. ' top' → logprob: -3.849034070968628
    5. 'left' → logprob: -6.724033832550049
    6. 'first' → logprob: -7.224033832550049
    7. ' leading' → logprob: -8.474034309387207
    8. ' first' → logprob: -8.724034309387207
    9. 'leading' → logprob: -8.724034309387207
    10. ' left' → logprob: -8.849034309387207

Token 416: ' row' (ID: 5225)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.007036454975605011
    2. '_col' → logprob: -5.1320366859436035
    3. '_x' → logprob: -7.2570366859436035
    4. '_' → logprob: -8.507036209106445
    5. '_r' → logprob: -8.632036209106445
    6. '_le' → logprob: -12.382036209106445
    7. '_left' → logprob: -12.632036209106445
    8. '_column' → logprob: -12.882036209106445
    9. ' _' → logprob: -13.632036209106445
    10. '(row' → logprob: -13.632036209106445

Token 417: ' index' (ID: 3472)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48218393325805664
    2. '_' → logprob: -1.7321839332580566
    3. '_index' → logprob: -2.2321839332580566
    4. ' index' → logprob: -2.6071839332580566
    5. '_idx' → logprob: -4.232183933258057
    6. 'index' → logprob: -5.857183933258057
    7. '_indent' → logprob: -6.857183933258057
    8. ' with' → logprob: -7.107183933258057
    9. 'shift' → logprob: -7.357183933258057
    10. '_shift' → logprob: -7.607183933258057

Token 418: ' that' (ID: 484)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.3834071457386017
    2. 'with' → logprob: -1.6334071159362793
    3. 's' → logprob: -2.3834071159362793
    4. ' for' → logprob: -4.008407115936279
    5. ' s' → logprob: -5.883407115936279
    6. 'for' → logprob: -6.008407115936279
    7. ' of' → logprob: -6.508407115936279
    8. ' i' → logprob: -6.758407115936279
    9. ' where' → logprob: -7.258407115936279
    10. 'w' → logprob: -7.258407115936279

Token 419: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.7597872614860535
    2. ' has' → logprob: -1.1347873210906982
    3. ' contains' → logprob: -1.8847873210906982
    4. 'contains' → logprob: -2.8847873210906982
    5. 'any' → logprob: -6.509787082672119
    6. ' any' → logprob: -7.259787082672119
    7. ' ' → logprob: -8.509787559509277
    8. '1' → logprob: -9.009787559509277
    9. '
' → logprob: -9.384787559509277
    10. 'contain' → logprob: -9.884787559509277

Token 420: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002530714264139533
    2. '1' → logprob: -6.502530574798584
    3. '"' → logprob: -7.252530574798584
    4. ' '' → logprob: -8.877531051635742
    5. 'any' → logprob: -8.877531051635742
    6. ' any' → logprob: -11.752531051635742
    7. ''any' → logprob: -11.752531051635742
    8. ''a' → logprob: -12.002531051635742
    9. 'one' → logprob: -12.252531051635742
    10. ''#' → logprob: -12.752531051635742

Token 421: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00355968507938087
    2. '"' → logprob: -6.128559589385986
    3. '1' → logprob: -6.628559589385986
    4. ' '' → logprob: -10.378560066223145
    5. 'any' → logprob: -11.628560066223145
    6. '['' → logprob: -12.378560066223145
    7. 'one' → logprob: -13.003560066223145
    8. '`' → logprob: -13.003560066223145
    9. '
' → logprob: -14.128560066223145
    10. '('' → logprob: -15.253560066223145

Token 422: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5111143589019775
    2. 's' → logprob: -1.8861143589019775
    3. '
' → logprob: -1.8861143589019775
    4. 'for' → logprob: -3.5111143589019775
    5. ' =' → logprob: -4.136114120483398
    6. ' for' → logprob: -4.136114120483398
    7. 'first' → logprob: -5.261114120483398
    8. '_min' → logprob: -5.386114120483398
    9. ' in' → logprob: -5.636114120483398
    10. ':' → logprob: -5.761114120483398

Token 423: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.028225958347320557
    2. 'row' → logprob: -4.653225898742676
    3. '
' → logprob: -5.153225898742676
    4. 'top' → logprob: -5.778225898742676
    5. 'first' → logprob: -5.903225898742676
    6. ' min' → logprob: -5.903225898742676
    7. 'for' → logprob: -7.278225898742676
    8. 'r' → logprob: -7.403225898742676
    9. ' for' → logprob: -7.653225898742676
    10. ' first' → logprob: -7.778225898742676

Token 424: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.004886346403509378
    2. 'top' → logprob: -5.629886150360107
    3. 'row' → logprob: -7.004886150360107
    4. 'first' → logprob: -8.129886627197266
    5. ' min' → logprob: -10.379886627197266
    6. 'r' → logprob: -10.879886627197266
    7. 'for' → logprob: -11.129886627197266
    8. 'rows' → logprob: -12.004886627197266
    9. 'm' → logprob: -12.879886627197266
    10. 'non' → logprob: -12.879886627197266

Token 425: '_r' (ID: 3442)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0016668500611558557
    2. '_r' → logprob: -6.626667022705078
    3. '_' → logprob: -8.001667022705078
    4. '_i' → logprob: -13.376667022705078
    5. '_x' → logprob: -13.751667022705078
    6. 'r' → logprob: -13.876667022705078
    7. '_col' → logprob: -14.751667022705078
    8. '_rows' → logprob: -14.876667022705078
    9. ' _' → logprob: -15.251667022705078
    10. '\' → logprob: -15.501667022705078

Token 426: ' =' (ID: 314)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.0020661605522036552
    2. ' =' → logprob: -6.627066135406494
    3. '=' → logprob: -7.752066135406494
    4. 'o' → logprob: -8.627066612243652
    5. 'ows' → logprob: -9.127066612243652
    6. ',' → logprob: -11.502066612243652
    7. '
' → logprob: -12.627066612243652
    8. ')' → logprob: -14.127066612243652
    9. '_' → logprob: -14.127066612243652
    10. 'e' → logprob: -14.252066612243652

Token 427: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0010203057900071144
    2. 'next' → logprob: -7.501020431518555
    3. 'None' → logprob: -8.376020431518555
    4. '0' → logprob: -8.751020431518555
    5. 'min' → logprob: -10.376020431518555
    6. 'len' → logprob: -10.501020431518555
    7. '7' → logprob: -11.751020431518555
    8. 'float' → logprob: -12.376020431518555
    9. '9' → logprob: -12.751020431518555
    10. ' ' → logprob: -13.126020431518555

Token 428: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0007098094210959971
    2. 'next' → logprob: -7.6257100105285645
    3. 'min' → logprob: -9.125709533691406
    4. 'None' → logprob: -9.875709533691406
    5. 'len' → logprob: -10.000709533691406
    6. '0' → logprob: -11.250709533691406
    7. '7' → logprob: -13.750709533691406
    8. 'float' → logprob: -14.000709533691406
    9. '9' → logprob: -14.625709533691406
    10. 'eight' → logprob: -15.625709533691406

Token 429: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0004800048773176968
    2. 'for' → logprob: -8.125479698181152
    3. '<|end|>' → logprob: -8.875479698181152
    4. '
' → logprob: -10.375479698181152
    5. ' for' → logprob: -12.250479698181152
    6. '  
' → logprob: -13.625479698181152
    7. '0' → logprob: -13.875479698181152
    8. 'while' → logprob: -13.875479698181152
    9. '<|end|>' → logprob: -13.875479698181152
    10. '#' → logprob: -14.125479698181152

Token 430: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06712096184492111
    2. 'for' → logprob: -2.9421210289001465
    3. 'min' → logprob: -4.8171210289001465
    4. ' for' → logprob: -5.5671210289001465
    5. '<|end|>' → logprob: -8.817120552062988
    6. ' min' → logprob: -10.817120552062988
    7. '
' → logprob: -10.942120552062988
    8. '  
' → logprob: -10.942120552062988
    9. 'rows' → logprob: -11.942120552062988
    10. ',' → logprob: -11.942120552062988

Token 431: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.12813392281532288
    2. 'for' → logprob: -2.12813401222229
    3. ' for' → logprob: -7.378133773803711
    4. ' min' → logprob: -7.753133773803711
    5. '
' → logprob: -8.878133773803711
    6. 'max' → logprob: -12.378133773803711
    7. '#' → logprob: -12.878133773803711
    8. '   ' → logprob: -13.378133773803711
    9. '	min' → logprob: -14.378133773803711
    10. 'm' → logprob: -14.753133773803711

Token 432: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0006402421277016401
    2. '_' → logprob: -7.375640392303467
    3. '_r' → logprob: -11.875639915466309
    4. ' _' → logprob: -12.500639915466309
    5. '_
' → logprob: -14.250639915466309
    6. '_col' → logprob: -14.750639915466309
    7. 'c' → logprob: -14.875639915466309
    8. '_j' → logprob: -15.000639915466309
    9. '_x' → logprob: -15.375639915466309
    10. '
' → logprob: -15.625639915466309

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.063261985778809
    4. ' =
' → logprob: -18.063262939453125
    5. ',' → logprob: -18.188262939453125
    6. ':' → logprob: -18.438262939453125
    7. 's' → logprob: -18.438262939453125
    8. '=}' → logprob: -18.438262939453125
    9. '   ' → logprob: -18.688262939453125
    10. '=
' → logprob: -18.688262939453125

Token 434: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.375059127807617
    4. '۸' → logprob: -18.125059127807617
    5. 'eight' → logprob: -18.687559127807617
    6. '
' → logprob: -18.750059127807617
    7. '８' → logprob: -19.062559127807617
    8. '८' → logprob: -19.312559127807617
    9. '  ' → logprob: -19.375059127807617
    10. '৮' → logprob: -19.625059127807617

Token 435: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.7500057220459
    4. '۸' → logprob: -18.3750057220459
    5. 'eight' → logprob: -18.7500057220459
    6. '0' → logprob: -19.0000057220459
    7. '८' → logprob: -19.0625057220459
    8. '８' → logprob: -19.5625057220459
    9. '৮' → logprob: -19.6875057220459
    10. 'len' → logprob: -19.7500057220459

Token 436: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.042564939707517624
    2. 'for' → logprob: -3.417564868927002
    3. ' for' → logprob: -5.417564868927002
    4. '<|end|>' → logprob: -5.542564868927002
    5. '<|end|>' → logprob: -8.41756534576416
    6. '  
' → logprob: -9.54256534576416
    7. ',' → logprob: -10.29256534576416
    8. '

' → logprob: -10.66756534576416
    9. ',
' → logprob: -10.66756534576416
    10. '\n' → logprob: -10.66756534576416

Token 437: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1471046358346939
    2. '
' → logprob: -2.2721047401428223
    3. ' for' → logprob: -3.3971047401428223
    4. '   ' → logprob: -8.647104263305664
    5. '<|end|>' → logprob: -10.647104263305664
    6. '  
' → logprob: -11.397104263305664
    7. '    
' → logprob: -11.897104263305664
    8. '	for' → logprob: -12.397104263305664
    9. '

' → logprob: -13.272104263305664
    10. '
' → logprob: -13.522104263305664

Token 438: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001640876434976235
    2. ' for' → logprob: -9.000164031982422
    3. '
' → logprob: -10.125164031982422
    4. '	for' → logprob: -15.875164031982422
    5. 'r' → logprob: -16.000164031982422
    6. 'f' → logprob: -16.000164031982422
    7. '   ' → logprob: -16.250164031982422
    8. '0' → logprob: -17.500164031982422
    9. '```' → logprob: -18.000164031982422
    10. 'n' → logprob: -18.625164031982422

Token 439: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.030603157356381416
    2. ' r' → logprob: -3.5306031703948975
    3. 'i' → logprob: -7.155602931976318
    4. ' i' → logprob: -9.655603408813477
    5. 'row' → logprob: -12.030603408813477
    6. ' row' → logprob: -13.655603408813477
    7. '	r' → logprob: -15.280603408813477
    8. '   ' → logprob: -16.155603408813477
    9. ' ' → logprob: -16.280603408813477
    10. '_r' → logprob: -16.280603408813477

Token 440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076343161053955555
    2. 'in' → logprob: -4.882634162902832
    3. ' ' → logprob: -11.132634162902832
    4. ',' → logprob: -11.382634162902832
    5. '	in' → logprob: -14.132634162902832
    6. ' i' → logprob: -15.007634162902832
    7. 'range' → logprob: -15.007634162902832
    8. ' ,' → logprob: -15.757634162902832
    9. 'n' → logprob: -15.757634162902832
    10. ')' → logprob: -16.50763511657715

Token 441: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061968132853507996
    2. ' range' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.686967849731445
    4. '	range' → logprob: -16.436967849731445
    5. 'shape' → logprob: -16.936967849731445
    6. 'rang' → logprob: -16.936967849731445
    7. '(range' → logprob: -17.186967849731445
    8. '   ' → logprob: -17.186967849731445
    9. ' xrange' → logprob: -17.936967849731445
    10. 'r' → logprob: -18.186967849731445

Token 442: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0488455593585968
    2. '8' → logprob: -3.0488455295562744
    3. '(len' → logprob: -8.298845291137695
    4. '(
' → logprob: -11.798845291137695
    5. 'len' → logprob: -13.673845291137695
    6. '   ' → logprob: -15.298845291137695
    7. ' (' → logprob: -15.548845291137695
    8. ' ' → logprob: -15.798845291137695
    9. 'eight' → logprob: -16.923845291137695
    10. '
' → logprob: -17.673845291137695

Token 443: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. 'len' → logprob: -16.25
    4. 'eight' → logprob: -19.125
    5. '7' → logprob: -19.75
    6. '   ' → logprob: -20.25
    7. '0' → logprob: -20.25
    8. '８' → logprob: -21.25
    9. '
' → logprob: -21.75
    10. '۸' → logprob: -22.0

Token 444: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12696044147014618
    2. '):
' → logprob: -2.126960515975952
    3. '):
' → logprob: -11.501960754394531
    4. ':' → logprob: -12.001960754394531
    5. ')' → logprob: -12.126960754394531
    6. ' ):' → logprob: -12.251960754394531
    7. '   ' → logprob: -12.876960754394531
    8. '):

' → logprob: -13.376960754394531
    9. ' ):
' → logprob: -14.251960754394531
    10. ' ' → logprob: -14.876960754394531

Token 445: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5678975582122803
    2. ' for' → logprob: -0.9428975582122803
    3. '       ' → logprob: -3.1928975582122803
    4. 'for' → logprob: -5.942897796630859
    5. '	for' → logprob: -10.44289779663086
    6. '   ' → logprob: -10.44289779663086
    7. ' ' → logprob: -10.56789779663086
    8. ' if' → logprob: -11.06789779663086
    9. '	   ' → logprob: -12.94289779663086
    10. '     ' → logprob: -13.31789779663086

Token 446: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12006484717130661
    2. ' for' → logprob: -2.4950647354125977
    3. '   ' → logprob: -3.4950647354125977
    4. '       ' → logprob: -8.370064735412598
    5. 'if' → logprob: -10.120064735412598
    6. ' ' → logprob: -11.245064735412598
    7. '	for' → logprob: -12.120064735412598
    8. ' if' → logprob: -12.745064735412598
    9. '  ' → logprob: -12.995064735412598
    10. '           ' → logprob: -13.245064735412598

Token 447: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011048528365790844
    2. ' c' → logprob: -4.511048316955566
    3. '8' → logprob: -14.261048316955566
    4. ' ' → logprob: -16.511049270629883
    5. '   ' → logprob: -17.136049270629883
    6. '	c' → logprob: -17.761049270629883
    7. '
' → logprob: -19.886049270629883
    8. '7' → logprob: -20.636049270629883
    9. '    ' → logprob: -21.386049270629883
    10. '  ' → logprob: -21.761049270629883

Token 448: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10092614591121674
    2. 'in' → logprob: -2.350926160812378
    3. ' ' → logprob: -7.850925922393799
    4. '8' → logprob: -8.600926399230957
    5. '<|end|>' → logprob: -9.850926399230957
    6. ')' → logprob: -9.975926399230957
    7. '0' → logprob: -10.600926399230957
    8. '1' → logprob: -12.225926399230957
    9. '=' → logprob: -12.350926399230957
    10. '7' → logprob: -13.600926399230957

Token 449: ' range' (ID: 3352)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00045438710367307067
    2. 'range' → logprob: -7.875454425811768
    3. ' ' → logprob: -9.87545394897461
    4. ' range' → logprob: -10.75045394897461
    5. '(' → logprob: -13.62545394897461
    6. '   ' → logprob: -16.62545394897461
    7. '7' → logprob: -16.75045394897461
    8. '0' → logprob: -17.00045394897461
    9. 'len' → logprob: -17.12545394897461
    10. '
' → logprob: -17.62545394897461

Token 450: '(' (ID: 7)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.03366021811962128
    2. '(' → logprob: -3.4086601734161377
    3. '(
' → logprob: -12.033659934997559
    4. '0' → logprob: -13.033659934997559
    5. ' ' → logprob: -13.158659934997559
    6. '   ' → logprob: -13.658659934997559
    7. '
' → logprob: -13.908659934997559
    8. '7' → logprob: -14.533659934997559
    9. ' (' → logprob: -14.658659934997559
    10. ')' → logprob: -14.908659934997559

Token 451: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -3.440506407059729e-05
    2. ' ' → logprob: -10.37503433227539
    3. 'len' → logprob: -13.25003433227539
    4. '   ' → logprob: -14.25003433227539
    5. '0' → logprob: -15.25003433227539
    6. '7' → logprob: -16.12503433227539
    7. '       ' → logprob: -16.93753433227539
    8. ')' → logprob: -16.93753433227539
    9. '4' → logprob: -17.00003433227539
    10. '           ' → logprob: -17.06253433227539

Token 452: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869308829307556
    2. '):' → logprob: -1.1369309425354004
    3. ')' → logprob: -11.011930465698242
    4. '   ' → logprob: -11.386930465698242
    5. ':' → logprob: -11.761930465698242
    6. '):

' → logprob: -11.886930465698242
    7. '       ' → logprob: -12.136930465698242
    8. ' ):
' → logprob: -12.636930465698242
    9. '):
' → logprob: -12.761930465698242
    10. ' ):' → logprob: -13.136930465698242

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000552555953618139
    2. ' if' → logprob: -7.875552654266357
    3. 'if' → logprob: -8.8755521774292
    4. ',' → logprob: -11.7505521774292
    5. ':' → logprob: -12.1255521774292
    6. '         ' → logprob: -12.1255521774292
    7. '          ' → logprob: -12.6255521774292
    8. '               ' → logprob: -13.1255521774292
    9. '            
' → logprob: -13.5005521774292
    10. '	       ' → logprob: -13.6255521774292

Token 454: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5337011814117432
    2. 'if' (adapté à ' if') → logprob: -1.4087011814117432
    3. '           ' → logprob: -1.7837011814117432
    4. '               ' → logprob: -7.158700942993164
    5. '            ' → logprob: -8.408700942993164
    6. '       ' → logprob: -11.033700942993164
    7. '1' → logprob: -11.283700942993164
    8. '            
' → logprob: -11.408700942993164
    9. 'If' → logprob: -11.658700942993164
    10. '          ' → logprob: -11.908700942993164

Token 455: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.38691580295562744
    2. ' rows' → logprob: -1.1369158029556274
    3. '(rows' → logprob: -10.511916160583496
    4. '	rows' → logprob: -11.136916160583496
    5. 'shape' → logprob: -14.136916160583496
    6. ' shapes' → logprob: -14.261916160583496
    7. 'r' → logprob: -14.511916160583496
    8. 'sh' → logprob: -15.386916160583496
    9. 'row' → logprob: -15.511916160583496
    10. ' shape' → logprob: -15.511916160583496

Token 456: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -8.537868779967539e-06
    2. '][' → logprob: -12.125008583068848
    3. ' [' → logprob: -14.000008583068848
    4. '[' → logprob: -14.000008583068848
    5. '[c' → logprob: -14.375008583068848
    6. 'r' → logprob: -15.000008583068848
    7. '[
' → logprob: -16.25000762939453
    8. ')[' → logprob: -16.37500762939453
    9. '   ' → logprob: -16.62500762939453
    10. '[t' → logprob: -16.62500762939453

Token 457: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2520734369754791
    2. '[c' → logprob: -1.5020734071731567
    3. ']' → logprob: -9.502073287963867
    4. '[' → logprob: -10.877073287963867
    5. ''][' → logprob: -10.877073287963867
    6. '"][' → logprob: -11.502073287963867
    7. ' ][' → logprob: -11.627073287963867
    8. '[
' → logprob: -12.627073287963867
    9. ']==' → logprob: -12.752073287963867
    10. '==' → logprob: -13.377073287963867

Token 458: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5048530030981055e-06
    2. ' c' → logprob: -13.875001907348633
    3. ''' → logprob: -14.875001907348633
    4. ']' → logprob: -16.625001907348633
    5. '1' → logprob: -17.625001907348633
    6. ')c' → logprob: -17.875001907348633
    7. '	c' → logprob: -18.000001907348633
    8. '[c' → logprob: -18.500001907348633
    9. '0' → logprob: -18.625001907348633
    10. '"' → logprob: -19.500001907348633

Token 459: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6511629819869995
    2. '==' → logprob: -0.9011629819869995
    3. ' ==' → logprob: -3.526163101196289
    4. ']==' → logprob: -3.776163101196289
    5. '=='' → logprob: -4.276163101196289
    6. '']' → logprob: -6.401163101196289
    7. ']=='' → logprob: -6.401163101196289
    8. ''' → logprob: -6.776163101196289
    9. '=' → logprob: -6.776163101196289
    10. '']=='' → logprob: -8.401163101196289

Token 460: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.025361288338899612
    2. '=='' → logprob: -4.275361061096191
    3. ' ==' → logprob: -4.650361061096191
    4. '=' → logprob: -7.025361061096191
    5. '==
' → logprob: -7.775361061096191
    6. ''' → logprob: -8.775361061096191
    7. ']==' → logprob: -10.025361061096191
    8. '=="' → logprob: -10.275361061096191
    9. ']' → logprob: -10.650361061096191
    10. ']=='' → logprob: -12.650361061096191

Token 461: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00011558275582501665
    2. ' '' → logprob: -9.125115394592285
    3. '"' → logprob: -12.375115394592285
    4. '1' → logprob: -13.000115394592285
    5. ' ' → logprob: -17.3751163482666
    6. '`' → logprob: -18.7501163482666
    7. '‘' → logprob: -19.6251163482666
    8. ' ' → logprob: -20.3751163482666
    9. '’' → logprob: -20.5001163482666
    10. '')' → logprob: -21.0001163482666

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ''' → logprob: -16.25
    3. ' ' → logprob: -18.625
    4. '0' → logprob: -20.875
    5. '"' → logprob: -21.25
    6. '```' → logprob: -21.75
    7. ''''' → logprob: -21.875
    8. '`' → logprob: -22.125
    9. '')' → logprob: -22.375
    10. '' → logprob: -22.75

Token 463: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.009104345925152302
    2. '':
' → logprob: -5.009104251861572
    3. ''' → logprob: -6.509104251861572
    4. ':' → logprob: -7.134104251861572
    5. ''):' → logprob: -10.88410472869873
    6. '":' → logprob: -11.13410472869873
    7. ']:' → logprob: -11.25910472869873
    8. '':
' → logprob: -11.63410472869873
    9. ':
' → logprob: -11.75910472869873
    10. ' ':' → logprob: -12.13410472869873

Token 464: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005561320576816797
    2. ' and' → logprob: -8.625555992126465
    3. ' if' → logprob: -8.750555992126465
    4. '                
' → logprob: -9.625555992126465
    5. '                ' → logprob: -10.125555992126465
    6. '           ' → logprob: -10.250555992126465
    7. '              ' → logprob: -11.000555992126465
    8. 'if' → logprob: -11.625555992126465
    9. '                   ' → logprob: -11.750555992126465
    10. '            ' → logprob: -11.750555992126465

Token 465: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5311437845230103
    2. 'if' (adapté à ' if') → logprob: -1.1561437845230103
    3. '
' → logprob: -2.5311436653137207
    4. '                   ' → logprob: -4.656143665313721
    5. 'min' → logprob: -5.656143665313721
    6. '               ' → logprob: -6.031143665313721
    7. ' min' → logprob: -6.156143665313721
    8. '                       ' → logprob: -9.406144142150879
    9. ' 
' → logprob: -10.406144142150879
    10. ' ' → logprob: -10.406144142150879

Token 466: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06197093799710274
    2. ' r' → logprob: -2.8119709491729736
    3. 'min' → logprob: -12.936970710754395
    4. ' min' → logprob: -15.061970710754395
    5. '	r' → logprob: -15.061970710754395
    6. '   ' → logprob: -16.06197166442871
    7. '_r' → logprob: -16.43697166442871
    8. '(r' → logprob: -17.06197166442871
    9. 'c' → logprob: -17.31197166442871
    10. ' ' → logprob: -17.43697166442871

Token 467: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12694522738456726
    2. ' <' → logprob: -2.1269452571868896
    3. ' ' → logprob: -11.501945495605469
    4. '<m' → logprob: -12.751945495605469
    5. '<len' → logprob: -14.376945495605469
    6. '<int' → logprob: -14.501945495605469
    7. 'min' → logprob: -14.626945495605469
    8. '<
' → logprob: -14.876945495605469
    9. '<num' → logprob: -15.001945495605469
    10. '<size' → logprob: -15.251945495605469

Token 468: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001584850688232109
    2. ' min' → logprob: -8.750158309936523
    3. '
' → logprob: -19.875158309936523
    4. '	min' → logprob: -20.250158309936523
    5. '=min' → logprob: -21.750158309936523
    6. '_min' → logprob: -22.250158309936523
    7. ':min' → logprob: -22.250158309936523
    8. '(min' → logprob: -22.250158309936523
    9. '[min' → logprob: -22.375158309936523
    10. '```' → logprob: -22.750158309936523

Token 469: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: 0.0
    2. 'r' → logprob: -17.25
    3. '_' → logprob: -18.5
    4. '_c' → logprob: -20.0
    5. ' _' → logprob: -21.0
    6. '_m' → logprob: -21.625
    7. '_s' → logprob: -21.625
    8. '_rows' → logprob: -22.25
    9. '```' → logprob: -23.0
    10. '_row' → logprob: -23.125

Token 470: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760902166366577
    2. ':' → logprob: -0.8260902166366577
    3. '                   ' → logprob: -9.576089859008789
    4. '):
' → logprob: -10.326089859008789
    5. '               ' → logprob: -10.826089859008789
    6. '                       ' → logprob: -11.451089859008789
    7. ':
' → logprob: -12.701089859008789
    8. ' :
' → logprob: -12.826089859008789
    9. ':min' → logprob: -12.951089859008789
    10. '():
' → logprob: -13.326089859008789

Token 471: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1234574168920517
    2. ' min' → logprob: -2.498457431793213
    3. 'min' → logprob: -3.498457431793213
    4. '                       ' → logprob: -5.873457431793213
    5. '               ' → logprob: -7.873457431793213
    6. ' =' → logprob: -9.623456954956055
    7. '=min' → logprob: -9.748456954956055
    8. '
' → logprob: -9.998456954956055
    9. ':' → logprob: -9.998456954956055
    10. '(min' → logprob: -10.123456954956055

Token 472: ' min' (ID: 1349)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.478405237197876
    2. ' r' → logprob: -0.978405237197876
    3. '                   ' → logprob: -5.978404998779297
    4. ' min' → logprob: -6.853404998779297
    5. '                       ' → logprob: -7.853404998779297
    6. 'min' (adapté à ' min') → logprob: -8.353404998779297
    7. 'c' → logprob: -9.978404998779297
    8. '                    ' → logprob: -11.103404998779297
    9. '               ' → logprob: -11.603404998779297
    10. '                           ' → logprob: -11.853404998779297

Token 473: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.625005722045898
    3. 'r' → logprob: -13.250005722045898
    4. ' _' → logprob: -16.1250057220459
    5. '_c' → logprob: -16.1250057220459
    6. '_s' → logprob: -18.1250057220459
    7. '_
' → logprob: -19.2500057220459
    8. '\' → logprob: -19.3750057220459
    9. '‌' → logprob: -19.6250057220459
    10. '```' → logprob: -19.6250057220459

Token 474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002374067902565
    2. ' =' → logprob: -2.3502373695373535
    3. '=r' → logprob: -10.850237846374512
    4. '=
' → logprob: -11.725237846374512
    5. ' =
' → logprob: -13.350237846374512
    6. '=

' → logprob: -14.475237846374512
    7. '=c' → logprob: -14.975237846374512
    8. ' ' → logprob: -15.100237846374512
    9. ' r' → logprob: -16.225236892700195
    10. 'r' → logprob: -16.725236892700195

Token 475: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001234428636962548
    2. ' r' → logprob: -9.000123023986816
    3. '_r' → logprob: -18.750123977661133
    4. '	r' → logprob: -19.375123977661133
    5. 'c' → logprob: -19.625123977661133
    6. '   ' → logprob: -20.750123977661133
    7. ' ' → logprob: -22.500123977661133
    8. '
' → logprob: -23.125123977661133
    9. '[r' → logprob: -23.250123977661133
    10. '                   ' → logprob: -23.250123977661133

Token 476: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00478954566642642
    2. '<|end|>' → logprob: -5.879789352416992
    3. '                ' → logprob: -6.879789352416992
    4. ',' → logprob: -8.129789352416992
    5. '
' → logprob: -8.254789352416992
    6. '                
' → logprob: -8.754789352416992
    7. '              ' → logprob: -9.879789352416992
    8. '			' → logprob: -10.379789352416992
    9. '                   ' → logprob: -11.129789352416992
    10. '            ' → logprob: -11.129789352416992

Token 477: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001082471339032054
    2. '<|end|>' → logprob: -7.001082420349121
    3. '                ' → logprob: -9.626082420349121
    4. '                
' → logprob: -10.626082420349121
    5. ',' → logprob: -11.126082420349121
    6. ' ' → logprob: -11.376082420349121
    7. '              ' → logprob: -11.751082420349121
    8. '<|end|>' → logprob: -11.876082420349121
    9. ' if' → logprob: -12.251082420349121
    10. '
' → logprob: -12.501082420349121

Token 478: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000181372175575234
    2. '                ' → logprob: -9.250181198120117
    3. ' if' → logprob: -10.250181198120117
    4. 'if' (adapté à ' if') → logprob: -11.375181198120117
    5. '<|end|>' → logprob: -12.125181198120117
    6. '              ' → logprob: -12.250181198120117
    7. '            ' → logprob: -12.250181198120117
    8. '                   ' → logprob: -12.250181198120117
    9. '                
' → logprob: -12.375181198120117
    10. '```' → logprob: -12.375181198120117

Token 479: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2519306540489197
    2. ' c' → logprob: -1.5019307136535645
    3. '   ' → logprob: -13.876930236816406
    4. '	c' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.751930236816406
    6. '    ' → logprob: -16.876930236816406
    7. '           ' → logprob: -17.251930236816406
    8. '  ' → logprob: -17.501930236816406
    9. '               ' → logprob: -17.501930236816406
    10. '(c' → logprob: -17.876930236816406

Token 480: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10020710527896881
    2. '<' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.850207328796387
    4. '<int' → logprob: -16.60020637512207
    5. '<|end|>' → logprob: -17.47520637512207
    6. ' <
' → logprob: -17.60020637512207
    7. '<class' → logprob: -17.72520637512207
    8. '<
' → logprob: -18.22520637512207
    9. '<c' → logprob: -18.35020637512207
    10. ')' → logprob: -18.60020637512207

Token 481: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01416350994259119
    2. ' min' → logprob: -4.264163494110107
    3. 'c' → logprob: -17.014163970947266
    4. 'm' → logprob: -18.389163970947266
    5. 'mini' → logprob: -19.389163970947266
    6. '	min' → logprob: -20.139163970947266
    7. ' c' → logprob: -20.389163970947266
    8. '_min' → logprob: -20.514163970947266
    9. ' ' → logprob: -21.014163970947266
    10. '(min' → logprob: -21.264163970947266

Token 482: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005567280459217727
    2. 'c' → logprob: -7.500556945800781
    3. '_' → logprob: -13.125556945800781
    4. '   ' → logprob: -14.750556945800781
    5. 'min' → logprob: -14.875556945800781
    6. ' c' → logprob: -15.500556945800781
    7. ' ' → logprob: -15.750556945800781
    8. '	c' → logprob: -15.875556945800781
    9. '
' → logprob: -16.12555694580078
    10. '_r' → logprob: -16.75055694580078

Token 483: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7600189447402954
    2. '=' → logprob: -0.8850189447402954
    3. ':' → logprob: -2.760018825531006
    4. ' =' → logprob: -3.010018825531006
    5. ':
' → logprob: -6.135018825531006
    6. ' c' → logprob: -6.510018825531006
    7. '               ' → logprob: -6.635018825531006
    8. '=c' → logprob: -7.135018825531006
    9. '                       ' → logprob: -7.760018825531006
    10. ':c' → logprob: -8.010019302368164

Token 484: '                   ' (ID: 699)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.565540611743927
    2. ' c' → logprob: -1.3155405521392822
    3. '                   ' → logprob: -1.8155405521392822
    4. '                       ' → logprob: -7.690540790557861
    5. '               ' → logprob: -8.065540313720703
    6. '                    ' → logprob: -10.315540313720703
    7. '                ' → logprob: -11.190540313720703
    8. '           ' → logprob: -11.315540313720703
    9. '                  ' → logprob: -11.815540313720703
    10. '   ' → logprob: -11.940540313720703

Token 485: ' min' (ID: 1349)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00317783304490149
    2. ' c' → logprob: -5.753177642822266
    3. '                   ' → logprob: -16.378177642822266
    4. '   ' → logprob: -18.378177642822266
    5. '               ' → logprob: -18.378177642822266
    6. '	c' → logprob: -19.628177642822266
    7. '                       ' → logprob: -20.753177642822266
    8. '           ' → logprob: -21.378177642822266
    9. ')c' → logprob: -22.128177642822266
    10. ' ' → logprob: -22.253177642822266

Token 486: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.107425062713446e-06
    2. 'c' → logprob: -11.875006675720215
    3. '_' → logprob: -16.37500762939453
    4. '_r' → logprob: -17.75000762939453
    5. ' c' → logprob: -18.75000762939453
    6. 'r' → logprob: -19.75000762939453
    7. '   ' → logprob: -20.12500762939453
    8. '               ' → logprob: -20.50000762939453
    9. '           ' → logprob: -20.75000762939453
    10. '                   ' → logprob: -20.87500762939453

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380435548722744
    2. ' =' → logprob: -3.28804349899292
    3. '=c' → logprob: -13.413043975830078
    4. '                   ' → logprob: -14.788043975830078
    5. '=
' → logprob: -15.913043975830078
    6. '                       ' → logprob: -17.663043975830078
    7. 'c' → logprob: -17.788043975830078
    8. ' =
' → logprob: -18.038043975830078
    9. '=

' → logprob: -18.163043975830078
    10. '                    ' → logprob: -18.413043975830078

Token 488: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861456897109747
    2. ' c' → logprob: -4.758614540100098
    3. '	c' → logprob: -19.008615493774414
    4. '   ' → logprob: -21.383615493774414
    5. ')c' → logprob: -21.883615493774414
    6. ' ' → logprob: -22.508615493774414
    7. ' ' → logprob: -23.258615493774414
    8. '0' → logprob: -23.258615493774414
    9. '_c' → logprob: -23.383615493774414
    10. '(c' → logprob: -23.383615493774414

Token 489: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30107319355010986
    2. '   ' → logprob: -2.0510730743408203
    3. 'for' → logprob: -3.1760730743408203
    4. '    
' → logprob: -3.4260730743408203
    5. ' for' → logprob: -3.5510730743408203
    6. '  
' → logprob: -3.8010730743408203
    7. ' 
' → logprob: -6.80107307434082
    8. '       ' → logprob: -7.55107307434082
    9. '                    
' → logprob: -7.55107307434082
    10. 'def' → logprob: -7.67607307434082

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10096202045679092
    2. ' for' → logprob: -2.725961923599243
    3. '
' → logprob: -4.350962162017822
    4. '    
' → logprob: -4.850962162017822
    5. 'for' → logprob: -4.975962162017822
    6. '  
' → logprob: -6.975962162017822
    7. '	for' → logprob: -7.975962162017822
    8. 'def' → logprob: -8.100961685180664
    9. ' 
' → logprob: -8.225961685180664
    10. '       ' → logprob: -8.350961685180664

Token 491: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22566740214824677
    2. ' for' → logprob: -2.9756674766540527
    3. ' new' → logprob: -3.2256674766540527
    4. 'shift' → logprob: -3.8506674766540527
    5. 'new' → logprob: -4.350667476654053
    6. 'for' → logprob: -4.350667476654053
    7. '
' → logprob: -4.475667476654053
    8. ' if' → logprob: -4.600667476654053
    9. 'normalized' → logprob: -4.975667476654053
    10. ' shifted' → logprob: -5.225667476654053

Token 492: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.02324768900871277
    2. 'min' → logprob: -3.773247718811035
    3. ' max' → logprob: -14.398247718811035
    4. 'm' → logprob: -14.898247718811035
    5. ' m' → logprob: -15.273247718811035
    6. ' ' → logprob: -15.523247718811035
    7. '(min' → logprob: -15.523247718811035
    8. ' not' → logprob: -15.773247718811035
    9. '	min' → logprob: -15.773247718811035
    10. 'max' → logprob: -16.14824676513672

Token 493: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -2.1888679839321412e-05
    2. '_' → logprob: -10.750021934509277
    3. '_c' → logprob: -15.375021934509277
    4. '_
' → logprob: -16.87502098083496
    5. '_a' → logprob: -17.00002098083496
    6. ' _' → logprob: -17.37502098083496
    7. '_

' → logprob: -18.62502098083496
    8. '_b' → logprob: -18.75002098083496
    9. '_=' → logprob: -18.75002098083496
    10. 'r' → logprob: -19.12502098083496

Token 494: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6473519802093506
    2. '==' → logprob: -0.7723519802093506
    3. '>' → logprob: -4.52235221862793
    4. ' >' → logprob: -5.77235221862793
    5. '<' → logprob: -7.89735221862793
    6. ' <' → logprob: -9.02235221862793
    7. '>=' → logprob: -9.89735221862793
    8. '=' → logprob: -10.02235221862793
    9. ' >=' → logprob: -10.89735221862793
    10. ' ' → logprob: -11.52235221862793

Token 495: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '
' → logprob: -20.375001907348633
    5. 'eight' → logprob: -21.500001907348633
    6. '۸' → logprob: -22.250001907348633
    7. '  ' → logprob: -22.375001907348633
    8. '```' → logprob: -22.500001907348633
    9. '８' → logprob: -23.125001907348633
    10. '८' → logprob: -23.500001907348633

Token 496: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.625001907348633
    4. '
' → logprob: -19.500001907348633
    5. 'eight' → logprob: -21.250001907348633
    6. '

' → logprob: -21.875001907348633
    7. '' → logprob: -21.875001907348633
    8. '۸' → logprob: -22.125001907348633
    9. '８' → logprob: -22.125001907348633
    10. '  ' → logprob: -22.250001907348633

Token 497: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04559531807899475
    2. ' or' → logprob: -3.420595407485962
    3. ':
' → logprob: -5.295595169067383
    4. ' and' → logprob: -5.420595169067383
    5. ':return' → logprob: -6.170595169067383
    6. '   ' → logprob: -8.295595169067383
    7. 'and' → logprob: -9.920595169067383
    8. 'or' → logprob: -10.295595169067383
    9. '       ' → logprob: -12.170595169067383
    10. '):' → logprob: -12.545595169067383

Token 498: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026670293882489204
    2. ' return' → logprob: -4.026670455932617
    3. 'return' → logprob: -4.776670455932617
    4. '   ' → logprob: -10.526670455932617
    5. '
' → logprob: -10.651670455932617
    6. '	return' → logprob: -13.151670455932617
    7. '{return' → logprob: -13.526670455932617
    8. '        
' → logprob: -13.901670455932617
    9. '    ' → logprob: -13.901670455932617
    10. '	   ' → logprob: -14.151670455932617

Token 499: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15269160270690918
    2. '#' → logprob: -2.402691602706909
    3. ' return' → logprob: -3.152691602706909
    4. '   ' → logprob: -4.902691841125488
    5. ' #' → logprob: -7.152691841125488
    6. '
' → logprob: -8.902691841125488
    7. ' ' → logprob: -10.902691841125488
    8. 'shape' → logprob: -12.277691841125488
    9. '    
' → logprob: -12.527691841125488
    10. '  ' → logprob: -12.652691841125488

Token 500: ' ones' (ID: 8104)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7815324068069458
    2. ''' → logprob: -1.0315324068069458
    3. ' '' → logprob: -2.0315322875976562
    4. 'ones' → logprob: -3.2815322875976562
    5. ' ones' → logprob: -4.781532287597656
    6. ''s' → logprob: -5.406532287597656
    7. ' ' → logprob: -6.156532287597656
    8. 'one' → logprob: -6.406532287597656
    9. ' one' → logprob: -8.656532287597656
    10. '`' → logprob: -8.781532287597656

Token 501: ' found' (ID: 2491)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8292355537414551
    2. ':
' → logprob: -1.204235553741455
    3. '   ' → logprob: -1.829235553741455
    4. ':return' → logprob: -2.454235553741455
    5. ' return' → logprob: -4.704235553741455
    6. '       ' → logprob: -5.704235553741455
    7. 'return' → logprob: -5.954235553741455
    8. ',' → logprob: -6.454235553741455
    9. '
' → logprob: -8.454235076904297
    10. '    ' → logprob: -8.954235076904297

Token 502: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007846282795071602
    2. 'return' → logprob: -6.507846355438232
    3. ' return' → logprob: -6.507846355438232
    4. '   ' → logprob: -6.632846355438232
    5. ':' → logprob: -6.757846355438232
    6. ':
' → logprob: -6.882846355438232
    7. ':return' → logprob: -6.882846355438232
    8. '
' → logprob: -9.257845878601074
    9. '	return' → logprob: -9.632845878601074
    10. ',' → logprob: -9.757845878601074

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033250495325773954
    2. ' return' → logprob: -6.50332498550415
    3. 'return' → logprob: -6.75332498550415
    4. '   ' → logprob: -7.50332498550415
    5. '
' → logprob: -10.878325462341309
    6. '        
' → logprob: -10.878325462341309
    7. '	return' → logprob: -11.128325462341309
    8. '	   ' → logprob: -11.503325462341309
    9. '    
' → logprob: -12.003325462341309
    10. ',' → logprob: -12.128325462341309

Token 504: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1137518584728241
    2. '       ' → logprob: -2.8637518882751465
    3. ' return' → logprob: -3.1137518882751465
    4. '   ' → logprob: -5.1137518882751465
    5. '
' → logprob: -11.738751411437988
    6. '	return' → logprob: -12.613751411437988
    7. '    ' → logprob: -12.613751411437988
    8. '     ' → logprob: -13.863751411437988
    9. '        
' → logprob: -13.988751411437988
    10. '  ' → logprob: -14.613751411437988

Token 505: ' ["' (ID: 9129)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -1.0111432075500488
    2. '['' → logprob: -1.2611432075500488
    3. 'shape' → logprob: -1.3861432075500488
    4. ' shape' → logprob: -3.011143207550049
    5. ' ['' → logprob: -3.386143207550049
    6. ' ["' → logprob: -4.136143207550049
    7. '[' → logprob: -6.386143207550049
    8. '[
' → logprob: -7.511143207550049
    9. ' [' → logprob: -7.636143207550049
    10. '[['' → logprob: -8.01114273071289

Token 506: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00024001303245313466
    2. '"' → logprob: -8.375240325927734
    3. '0' → logprob: -12.250240325927734
    4. ''' → logprob: -12.375240325927734
    5. '""' → logprob: -15.625240325927734
    6. '00' → logprob: -16.125240325927734
    7. '{"' → logprob: -16.500240325927734
    8. '       ' → logprob: -16.750240325927734
    9. '########' → logprob: -17.500240325927734
    10. '"+' → logprob: -17.500240325927734

Token 507: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.0280383548888494e-06
    2. '"' → logprob: -14.375000953674316
    3. '00' → logprob: -16.000001907348633
    4. '0' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '  ' → logprob: -18.000001907348633
    8. '[' → logprob: -18.500001907348633
    9. '"""' → logprob: -18.625001907348633
    10. '001' → logprob: -18.875001907348633

Token 508: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -6.749814019713085e-06
    2. '000' → logprob: -12.250006675720215
    3. '"' → logprob: -13.625006675720215
    4. '0' → logprob: -14.875006675720215
    5. ' ' → logprob: -16.12500762939453
    6. '```' → logprob: -16.62500762939453
    7. ''' → logprob: -16.87500762939453
    8. '
' → logprob: -17.62500762939453
    9. '""' → logprob: -17.62500762939453
    10. '01' → logprob: -17.93750762939453

Token 509: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.2522004544734955
    2. '"' → logprob: -1.5022004842758179
    3. '000' → logprob: -8.62720012664795
    4. '",
' → logprob: -10.25220012664795
    5. '\n' → logprob: -11.25220012664795
    6. '"
' → logprob: -11.37720012664795
    7. '",' → logprob: -11.75220012664795
    8. '"*' → logprob: -12.12720012664795
    9. '       ' → logprob: -12.75220012664795
    10. '   ' → logprob: -12.87720012664795

Token 510: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.558031439781189
    2. 'for' → logprob: -1.433031439781189
    3. '   ' → logprob: -2.5580315589904785
    4. '[' → logprob: -2.8080315589904785
    5. '*' → logprob: -3.8080315589904785
    6. '[
' → logprob: -4.5580315589904785
    7. '
' → logprob: -4.9330315589904785
    8. '["' → logprob: -5.4330315589904785
    9. ' *' → logprob: -6.5580315589904785
    10. '['' → logprob: -6.8080315589904785

Token 511: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۸' → logprob: -20.25
    4. '   ' → logprob: -20.5
    5. '８' → logprob: -20.5
    6. 'eight' → logprob: -21.375
    7. '٨' → logprob: -21.75
    8. '' → logprob: -21.875
    9. '(' → logprob: -22.0
    10. '```' → logprob: -22.5

Token 512: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '۸' → logprob: -20.25
    4. 'eight' → logprob: -20.5
    5. '８' → logprob: -20.75
    6. '٨' → logprob: -22.125
    7. '   ' → logprob: -22.25
    8. 'len' → logprob: -22.75
    9. '৮' → logprob: -22.75
    10. '८' → logprob: -22.75

Token 513: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7880010008811951
    2. '   ' → logprob: -1.0380010604858398
    3. '    
' → logprob: -1.6630010604858398
    4. '  
' → logprob: -7.66300106048584
    5. ' 
' → logprob: -7.66300106048584
    6. '   
' → logprob: -8.78800106048584
    7. '	
' → logprob: -9.16300106048584
    8. '        
' → logprob: -9.66300106048584
    9. 'rows' → logprob: -9.91300106048584
    10. '

' → logprob: -10.03800106048584

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2975699007511139
    2. '
' → logprob: -1.7975698709487915
    3. '    
' → logprob: -2.422569990158081
    4. '  
' → logprob: -6.672569751739502
    5. ' 
' → logprob: -7.172569751739502
    6. '

' → logprob: -8.17257022857666
    7. '        
' → logprob: -8.92257022857666
    8. '   
' → logprob: -8.92257022857666
    9. '
    
' → logprob: -9.54757022857666
    10. ' rows' → logprob: -9.67257022857666

Token 515: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3230077028274536
    2. 'normalized' → logprob: -2.323007583618164
    3. 'shift' → logprob: -2.698007583618164
    4. 'new' → logprob: -3.198007583618164
    5. ' shifted' → logprob: -3.573007583618164
    6. ' new' → logprob: -4.073007583618164
    7. ' normalized' → logprob: -4.198007583618164
    8. 'result' → logprob: -4.823007583618164
    9. ' result' → logprob: -7.073007583618164
    10. '    
' → logprob: -8.323007583618164

Token 516: ' build' (ID: 3024)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.11210279911756516
    2. 'new' → logprob: -2.612102746963501
    3. ' shifted' → logprob: -4.23710298538208
    4. 'normalized' → logprob: -4.61210298538208
    5. 'result' → logprob: -5.36210298538208
    6. ' new' → logprob: -6.48710298538208
    7. '   ' → logprob: -7.23710298538208
    8. 'for' → logprob: -7.86210298538208
    9. 'rows' → logprob: -8.237102508544922
    10. 'sh' → logprob: -8.362102508544922

Token 517: ' new' (ID: 620)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.5752707719802856
    2. 'result' → logprob: -1.9502707719802856
    3. 'new' → logprob: -2.200270652770996
    4. 'shift' → logprob: -2.700270652770996
    5. '[
' → logprob: -3.325270652770996
    6. '[' → logprob: -3.700270652770996
    7. ' normalized' → logprob: -3.950270652770996
    8. ' shifted' → logprob: -4.075270652770996
    9. ' new' → logprob: -4.325270652770996
    10. ' result' → logprob: -6.075270652770996

Token 518: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.0472332164645195
    2. ' shape' → logprob: -3.5472331047058105
    3. '_shape' → logprob: -4.6722331047058105
    4. 'rows' → logprob: -5.2972331047058105
    5. '_rows' → logprob: -6.9222331047058105
    6. '[
' → logprob: -7.2972331047058105
    7. 'shift' → logprob: -7.6722331047058105
    8. '[' → logprob: -8.047233581542969
    9. 'result' → logprob: -8.297233581542969
    10. 'normalized' → logprob: -9.047233581542969

Token 519: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016622049733996391
    2. '[' → logprob: -7.626662254333496
    3. 'new' → logprob: -7.876662254333496
    4. ' new' → logprob: -8.751662254333496
    5. ' =' → logprob: -8.751662254333496
    6. 'result' → logprob: -8.876662254333496
    7. '[new' → logprob: -9.626662254333496
    8. '[
' → logprob: -9.751662254333496
    9. '
' → logprob: -10.376662254333496
    10. ',' → logprob: -10.501662254333496

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01594509556889534
    2. '[' → logprob: -4.390944957733154
    3. '[
' → logprob: -6.140944957733154
    4. 'result' → logprob: -7.765944957733154
    5. 'new' → logprob: -8.015945434570312
    6. '[n' → logprob: -9.390945434570312
    7. '[new' → logprob: -9.515945434570312
    8. 'shape' → logprob: -10.015945434570312
    9. ' new' → logprob: -10.265945434570312
    10. '    
' → logprob: -10.390945434570312

Token 521: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.12198691815137863
    2. ' new' → logprob: -3.2469868659973145
    3. '   ' → logprob: -3.4969868659973145
    4. 'normalized' → logprob: -3.8719868659973145
    5. 'result' → logprob: -3.9969868659973145
    6. '[
' → logprob: -5.8719868659973145
    7. 'shift' → logprob: -6.4969868659973145
    8. '[' → logprob: -6.9969868659973145
    9. ' normalized' → logprob: -7.7469868659973145
    10. ' result' → logprob: -7.9969868659973145

Token 522: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -0.013171408325433731
    2. 'shape' → logprob: -4.638171195983887
    3. '_' → logprob: -6.013171195983887
    4. '_rows' → logprob: -7.013171195983887
    5. ' shape' → logprob: -10.763171195983887
    6. ' =' → logprob: -11.013171195983887
    7. 'rows' → logprob: -11.513171195983887
    8. '   ' → logprob: -12.263171195983887
    9. '_
' → logprob: -12.888171195983887
    10. 'Shape' → logprob: -13.263171195983887

Token 523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519362270832062
    2. ' =' → logprob: -1.5019361972808838
    3. '=[]' → logprob: -12.376935958862305
    4. '=[]
' → logprob: -13.876935958862305
    5. ']' → logprob: -14.751935958862305
    6. ' =
' → logprob: -15.126935958862305
    7. '[' → logprob: -15.251935958862305
    8. ')' → logprob: -15.751935958862305
    9. '   ' → logprob: -15.876935958862305
    10. '=
' → logprob: -15.876935958862305

Token 524: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09345298260450363
    2. '["' → logprob: -3.0934529304504395
    3. '[]
' → logprob: -3.3434529304504395
    4. '['' → logprob: -4.8434529304504395
    5. '[' → logprob: -7.5934529304504395
    6. '[['' → logprob: -8.843453407287598
    7. '[]

' → logprob: -11.093453407287598
    8. '[
' → logprob: -11.968453407287598
    9. ' []' → logprob: -12.093453407287598
    10. '[[' → logprob: -13.468453407287598

Token 525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006380964769050479
    2. 'for' → logprob: -8.000638008117676
    3. ' for' → logprob: -8.125638008117676
    4. '	for' → logprob: -12.000638008117676
    5. '    
' → logprob: -15.250638008117676
    6. '   ' → logprob: -15.625638008117676
    7. ')' → logprob: -17.375638961791992
    8. '[' → logprob: -17.375638961791992
    9. '       ' → logprob: -17.500638961791992
    10. ',' → logprob: -17.750638961791992

Token 526: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24137969315052032
    2. '   ' → logprob: -1.741379737854004
    3. ' for' → logprob: -3.241379737854004
    4. '	for' → logprob: -9.616379737854004
    5. '    
' → logprob: -14.241379737854004
    6. ' ' → logprob: -14.866379737854004
    7. '   ' → logprob: -15.241379737854004
    8. '    ' → logprob: -15.366379737854004
    9. '  ' → logprob: -16.366378784179688
    10. '
' → logprob: -17.116378784179688

Token 527: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.032399844378232956
    2. ' r' → logprob: -3.532399892807007
    3. 'i' → logprob: -6.282399654388428
    4. ' i' → logprob: -7.282399654388428
    5. 'row' → logprob: -10.532400131225586
    6. ' row' → logprob: -10.657400131225586
    7. '   ' → logprob: -11.282400131225586
    8. '_r' → logprob: -11.532400131225586
    9. ' ' → logprob: -12.157400131225586
    10. '_' → logprob: -12.282400131225586

Token 528: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05489988625049591
    2. 'in' → logprob: -2.9298999309539795
    3. '   ' → logprob: -11.679900169372559
    4. 'range' → logprob: -11.929900169372559
    5. ' ' → logprob: -14.429900169372559
    6. '	in' → logprob: -14.929900169372559
    7. '    ' → logprob: -15.429900169372559
    8. ',' → logprob: -15.429900169372559
    9. '_' → logprob: -15.429900169372559
    10. ' range' → logprob: -15.429900169372559

Token 529: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010337610729038715
    2. ' range' → logprob: -6.876033782958984
    3. 'shape' → logprob: -15.376033782958984
    4. 'rows' → logprob: -15.376033782958984
    5. ' ' → logprob: -15.876033782958984
    6. '   ' → logprob: -16.376033782958984
    7. 'row' → logprob: -16.501033782958984
    8. 'rang' → logprob: -16.626033782958984
    9. 'r' → logprob: -17.001033782958984
    10. '  ' → logprob: -17.501033782958984

Token 530: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009945433586835861
    2. '8' → logprob: -4.634945392608643
    3. '(min' → logprob: -8.6349458694458
    4. '4' → logprob: -11.7599458694458
    5. '(max' → logprob: -14.1349458694458
    6. ' (' → logprob: -14.1349458694458
    7. '(
' → logprob: -14.6349458694458
    8. '7' → logprob: -14.8849458694458
    9. 'min' → logprob: -15.2599458694458
    10. '(m' → logprob: -15.2599458694458

Token 531: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -9.372294698550832e-06
    2. 'r' → logprob: -11.625009536743164
    3. '8' → logprob: -15.375009536743164
    4. '_' → logprob: -16.000009536743164
    5. ' ' → logprob: -16.750009536743164
    6. '   ' → logprob: -17.750009536743164
    7. '	r' → logprob: -19.250009536743164
    8. ' r' → logprob: -19.875009536743164
    9. '7' → logprob: -20.125009536743164
    10. '_c' → logprob: -20.125009536743164

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004473796579986811
    2. ' ,' → logprob: -5.504473686218262
    3. '8' → logprob: -8.254473686218262
    4. ',
' → logprob: -9.004473686218262
    5. '+' → logprob: -12.504473686218262
    6. ' +' → logprob: -12.879473686218262
    7. ' ' → logprob: -13.504473686218262
    8. '   ' → logprob: -13.754473686218262
    9. ',

' → logprob: -14.254473686218262
    10. ',len' → logprob: -14.504473686218262

Token 533: ' min' (ID: 1349)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00015633940347470343
    2. 'min' → logprob: -9.12515640258789
    3. ' ' → logprob: -10.00015640258789
    4. ' min' → logprob: -13.50015640258789
    5. 'eight' → logprob: -15.50015640258789
    6. 'max' → logprob: -16.06265640258789
    7. '   ' → logprob: -16.31265640258789
    8. '7' → logprob: -16.93765640258789
    9. 'len' → logprob: -17.12515640258789
    10. '
' → logprob: -17.37515640258789

Token 534: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0001720742875477299
    2. 'r' → logprob: -8.875171661376953
    3. ')' → logprob: -11.500171661376953
    4. '(' → logprob: -12.125171661376953
    5. '_c' → logprob: -12.625171661376953
    6. '8' → logprob: -12.875171661376953
    7. '(min' → logprob: -12.875171661376953
    8. '=' → logprob: -13.375171661376953
    9. 'min' → logprob: -13.375171661376953
    10. ' ' → logprob: -14.500171661376953

Token 535: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09032280743122101
    2. ' +' → logprob: -2.465322732925415
    3. '8' → logprob: -6.590322971343994
    4. '   ' → logprob: -12.340322494506836
    5. ' ' → logprob: -12.590322494506836
    6. '+
' → logprob: -15.465322494506836
    7. '
' → logprob: -15.965322494506836
    8. ' +
' → logprob: -16.215322494506836
    9. '```' → logprob: -16.340322494506836
    10. ')' → logprob: -16.465322494506836

Token 536: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. 'eight' → logprob: -18.25
    4. ' ' → logprob: -18.625
    5. 'len' → logprob: -19.75
    6. '８' → logprob: -20.375
    7. '۸' → logprob: -20.75
    8. '
' → logprob: -20.875
    9. 'min' → logprob: -21.25
    10. 'max' → logprob: -21.625

Token 537: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. 'eight' → logprob: -19.0
    4. '(' → logprob: -19.25
    5. 'len' → logprob: -20.25
    6. '８' → logprob: -20.875
    7. '۸' → logprob: -21.25
    8. 'min' → logprob: -21.25
    9. '
' → logprob: -21.375
    10. 'max' → logprob: -21.5

Token 538: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2519928514957428
    2. '):' → logprob: -1.5019928216934204
    3. '):
' → logprob: -10.501993179321289
    4. ' ):
' → logprob: -11.251993179321289
    5. ' -' → logprob: -12.001993179321289
    6. '):

' → logprob: -12.251993179321289
    7. ' ):' → logprob: -12.251993179321289
    8. ')' → logprob: -12.751993179321289
    9. '-' → logprob: -13.251993179321289
    10. ':' → logprob: -14.251993179321289

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4965543746948242
    2. '   ' → logprob: -1.2465543746948242
    3. ' new' → logprob: -2.871554374694824
    4. '	new' → logprob: -3.746554374694824
    5. 'new' → logprob: -5.371554374694824
    6. '    ' → logprob: -5.371554374694824
    7. '	   ' → logprob: -5.746554374694824
    8. '	' → logprob: -6.246554374694824
    9. ' ' → logprob: -6.746554374694824
    10. '\' → logprob: -6.871554374694824

Token 540: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8161467909812927
    2. '       ' → logprob: -1.0661468505859375
    3. 'row' → logprob: -1.6911468505859375
    4. 'if' (adapté à ' if') → logprob: -4.8161468505859375
    5. 'line' → logprob: -4.8161468505859375
    6. 'new' → logprob: -5.3161468505859375
    7. ' row' → logprob: -5.3161468505859375
    8. ' if' → logprob: -6.1911468505859375
    9. ' new' → logprob: -7.3161468505859375
    10. ' line' → logprob: -8.691146850585938

Token 541: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12696537375450134
    2. ' r' → logprob: -2.126965284347534
    3. '   ' → logprob: -11.376965522766113
    4. '       ' → logprob: -11.626965522766113
    5. ' ' → logprob: -12.501965522766113
    6. '_r' → logprob: -12.751965522766113
    7. '           ' → logprob: -13.376965522766113
    8. '    ' → logprob: -13.501965522766113
    9. '(r' → logprob: -13.751965522766113
    10. 'new' → logprob: -13.876965522766113

Token 542: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2607612609863281
    2. '<' → logprob: -1.7607612609863281
    3. ' >=' → logprob: -3.010761260986328
    4. '>=' → logprob: -5.135761260986328
    5. '<len' → logprob: -6.635761260986328
    6. '<|end|>' → logprob: -7.510761260986328
    7. '<size' → logprob: -8.635761260986328
    8. '<n' → logprob: -9.135761260986328
    9. ' ' → logprob: -9.760761260986328
    10. '[' → logprob: -10.635761260986328

Token 543: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.625004768371582
    3. 'len' → logprob: -13.375004768371582
    4. '   ' → logprob: -17.5000057220459
    5. ' len' → logprob: -17.8750057220459
    6. 'eight' → logprob: -19.2500057220459
    7. '08' → logprob: -21.1250057220459
    8. '  ' → logprob: -21.6250057220459
    9. '۸' → logprob: -21.6250057220459
    10. '0' → logprob: -21.8125057220459

Token 544: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07179968059062958
    2. ':
' → logprob: -2.6967997550964355
    3. ' or' → logprob: -7.0717997550964355
    4. '       ' → logprob: -8.196799278259277
    5. '           ' → logprob: -8.196799278259277
    6. ':return' → logprob: -8.446799278259277
    7. 'or' → logprob: -8.571799278259277
    8. '   ' → logprob: -11.196799278259277
    9. 'new' → logprob: -11.946799278259277
    10. ':

' → logprob: -12.446799278259277

Token 545: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7877800464630127
    2. '           ' → logprob: -0.9127800464630127
    3. ' new' → logprob: -2.2877800464630127
    4. 'new' → logprob: -3.2877800464630127
    5. '   ' → logprob: -6.287779808044434
    6. '	   ' → logprob: -7.537779808044434
    7. '000' → logprob: -7.537779808044434
    8. 'break' → logprob: -8.037779808044434
    9. '	       ' → logprob: -8.162779808044434
    10. ' break' → logprob: -8.287779808044434

Token 546: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.20538195967674255
    2. '       ' → logprob: -2.0803818702697754
    3. '"' → logprob: -3.8303818702697754
    4. '000' → logprob: -4.205381870269775
    5. ' new' → logprob: -4.205381870269775
    6. '   ' → logprob: -5.205381870269775
    7. '           ' → logprob: -6.080381870269775
    8. '0' → logprob: -7.830381870269775
    9. ' ' → logprob: -7.830381870269775
    10. 'row' → logprob: -8.705382347106934

Token 547: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -0.0011766550596803427
    2. 'shape' → logprob: -6.876176834106445
    3. 'new' → logprob: -9.001176834106445
    4. '_' → logprob: -11.751176834106445
    5. '000' → logprob: -12.376176834106445
    6. ' shape' → logprob: -13.001176834106445
    7. '_sh' → logprob: -13.376176834106445
    8. '"' → logprob: -13.376176834106445
    9. 'Shape' → logprob: -14.126176834106445
    10. '"_' → logprob: -14.501176834106445

Token 548: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043817906407639384
    2. '.' → logprob: -8.25043773651123
    3. '+=' → logprob: -9.12543773651123
    4. 'append' → logprob: -10.62543773651123
    5. '.extend' → logprob: -10.75043773651123
    6. ' +=' → logprob: -11.37543773651123
    7. '=' → logprob: -11.62543773651123
    8. '+' → logprob: -14.25043773651123
    9. ' .' → logprob: -14.37543773651123
    10. '.=' → logprob: -15.62543773651123

Token 549: '("' (ID: 568)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.026698501780629158
    2. '("' → logprob: -3.651698589324951
    3. ''' → logprob: -8.401698112487793
    4. ' "' → logprob: -9.276698112487793
    5. '('' → logprob: -10.026698112487793
    6. '   ' → logprob: -10.401698112487793
    7. '(' → logprob: -12.901698112487793
    8. ' ' → logprob: -14.151698112487793
    9. ' ("' → logprob: -14.401698112487793
    10. '  ' → logprob: -14.776698112487793

Token 550: '000' (ID: 1302)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10070919245481491
    2. '000' → logprob: -2.3507091999053955
    3. ''' → logprob: -7.600708961486816
    4. '0' → logprob: -13.225708961486816
    5. '       ' → logprob: -15.100708961486816
    6. '00' → logprob: -16.100709915161133
    7. '`' → logprob: -16.600709915161133
    8. '8' → logprob: -17.850709915161133
    9. '100' → logprob: -18.350709915161133
    10. '"+' → logprob: -18.725709915161133

Token 551: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.8624639324116288e-06
    2. '00' → logprob: -13.500001907348633
    3. '0' → logprob: -14.750001907348633
    4. '001' → logprob: -17.000001907348633
    5. '"' → logprob: -18.125001907348633
    6. '111' → logprob: -19.875001907348633
    7. '   ' → logprob: -19.875001907348633
    8. '100' → logprob: -20.125001907348633
    9. '...' → logprob: -20.375001907348633
    10. '011' → logprob: -20.500001907348633

Token 552: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -1.9504606825648807e-05
    2. '0' → logprob: -11.125019073486328
    3. '000' → logprob: -12.750019073486328
    4. '"' → logprob: -13.250019073486328
    5. '01' → logprob: -17.875019073486328
    6. '""' → logprob: -18.000019073486328
    7. '
' → logprob: -18.125019073486328
    8. ''' → logprob: -18.250019073486328
    9. '```' → logprob: -18.250019073486328
    10. ' ' → logprob: -18.875019073486328

Token 553: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.16052722930908203
    2. '")
' → logprob: -1.910527229309082
    3. '"' → logprob: -8.785527229309082
    4. '")
' → logprob: -9.160527229309082
    5. ')' → logprob: -10.660527229309082
    6. '       ' → logprob: -11.660527229309082
    7. ')
' → logprob: -12.410527229309082
    8. '")

' → logprob: -12.535527229309082
    9. '");' → logprob: -13.535527229309082
    10. '```' → logprob: -14.285527229309082

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016855321591719985
    2. 'else' → logprob: -6.751685619354248
    3. '           ' → logprob: -8.12668514251709
    4. ' else' → logprob: -8.75168514251709
    5. '   ' → logprob: -9.87668514251709
    6. 'continue' → logprob: -12.75168514251709
    7. '	' → logprob: -13.12668514251709
    8. 'elif' → logprob: -14.75168514251709
    9. '               ' → logprob: -14.87668514251709
    10. ' continue' → logprob: -15.00168514251709

Token 555: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.52613765001297
    2. 'else' (adapté à ' else') → logprob: -1.0261375904083252
    3. ' else' → logprob: -3.026137590408325
    4. '   ' → logprob: -6.151137828826904
    5. '	else' → logprob: -9.526137351989746
    6. '	' → logprob: -12.526137351989746
    7. '     ' → logprob: -12.526137351989746
    8. '    ' → logprob: -12.901137351989746
    9. ' ' → logprob: -12.901137351989746
    10. '           ' → logprob: -13.276137351989746

Token 556: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7187405228614807
    2. ' new' → logprob: -1.093740463256836
    3. ':' → logprob: -2.718740463256836
    4. ':
' → logprob: -2.968740463256836
    5. 'new' → logprob: -3.843740463256836
    6. '       ' → logprob: -3.968740463256836
    7. ':new' → logprob: -4.468740463256836
    8. '[new' → logprob: -5.718740463256836
    9. ',new' → logprob: -6.093740463256836
    10. '(new' → logprob: -6.968740463256836

Token 557: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2938205599784851
    2. ' new' → logprob: -1.9188206195831299
    3. 'new' → logprob: -2.41882061958313
    4. ' row' → logprob: -4.793820381164551
    5. 'row' → logprob: -5.668820381164551
    6. '           ' → logprob: -5.793820381164551
    7. '   ' → logprob: -5.793820381164551
    8. ' line' → logprob: -8.16882038116455
    9. ' s' → logprob: -8.91882038116455
    10. 'line' → logprob: -9.04382038116455

Token 558: ' row' (ID: 5225)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2524610161781311
    2. 'row' (adapté à ' row') → logprob: -1.6274609565734863
    3. 'line' → logprob: -4.502460956573486
    4. ' new' → logprob: -5.502460956573486
    5. 'shift' → logprob: -5.502460956573486
    6. '   ' → logprob: -5.627460956573486
    7. ' row' → logprob: -5.877460956573486
    8. 's' → logprob: -7.752460956573486
    9. '       ' → logprob: -8.127461433410645
    10. ' shifted' → logprob: -9.377461433410645

Token 559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016099359840154648
    2. ' =' → logprob: -4.141099452972412
    3. 'new' → logprob: -10.141098976135254
    4. '   ' → logprob: -11.516098976135254
    5. ' ' → logprob: -13.016098976135254
    6. '=
' → logprob: -13.391098976135254
    7. 's' → logprob: -13.516098976135254
    8. '    ' → logprob: -13.516098976135254
    9. '=new' → logprob: -13.516098976135254
    10. ' new' → logprob: -13.641098976135254

Token 560: ' rows' (ID: 13585)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1373574286699295
    2. '''.' → logprob: -2.137357473373413
    3. 'rows' → logprob: -4.762357234954834
    4. ' "".' → logprob: -6.762357234954834
    5. '""' → logprob: -8.012357711791992
    6. ' ''.' → logprob: -8.762357711791992
    7. ''' → logprob: -9.762357711791992
    8. '''' → logprob: -9.887357711791992
    9. '   ' → logprob: -10.637357711791992
    10. ' rows' → logprob: -10.887357711791992

Token 561: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0009273029863834381
    2. 'r' → logprob: -7.000927448272705
    3. '[' → logprob: -11.375926971435547
    4. '       ' → logprob: -13.125926971435547
    5. '   ' → logprob: -14.125926971435547
    6. ' [' → logprob: -14.375926971435547
    7. ' r' → logprob: -14.625926971435547
    8. '           ' → logprob: -15.500926971435547
    9. '	r' → logprob: -16.125926971435547
    10. '][' → logprob: -16.375926971435547

Token 562: ']
' (ID: 1592)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.09058798104524612
    2. '][' → logprob: -2.465588092803955
    3. '[' → logprob: -6.465588092803955
    4. ']' → logprob: -10.465587615966797
    5. '[max' → logprob: -10.715587615966797
    6. 'min' → logprob: -11.215587615966797
    7. '[m' → logprob: -11.590587615966797
    8. ']
' → logprob: -12.465587615966797
    9. ')[' → logprob: -12.965587615966797
    10. '[
' → logprob: -12.965587615966797

Token 563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12557974457740784
    2. 'new' → logprob: -2.750579833984375
    3. '       ' → logprob: -3.375579833984375
    4. ' new' → logprob: -4.250579833984375
    5. ' shifted' → logprob: -6.000579833984375
    6. 'shift' → logprob: -6.250579833984375
    7. '   ' → logprob: -7.500579833984375
    8. '[new' → logprob: -7.625579833984375
    9. '               ' → logprob: -10.625579833984375
    10. 's' → logprob: -11.000579833984375

Token 564: ' row' (ID: 5225)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04535327106714249
    2. 'shift' → logprob: -3.5453531742095947
    3. '"' → logprob: -5.045353412628174
    4. ' new' → logprob: -5.545353412628174
    5. 'row' (adapté à ' row') → logprob: -6.170353412628174
    6. '       ' → logprob: -6.670353412628174
    7. '           ' → logprob: -7.170353412628174
    8. '   ' → logprob: -8.045352935791016
    9. ' shifted' → logprob: -8.670352935791016
    10. 'line' → logprob: -9.045352935791016

Token 565: '_norm' (ID: 46119)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.20268462598323822
    2. '=' → logprob: -1.9526846408843994
    3. 'new' → logprob: -4.32768440246582
    4. '=min' → logprob: -5.32768440246582
    5. 'min' → logprob: -5.57768440246582
    6. ' =' → logprob: -5.70268440246582
    7. '_new' → logprob: -5.70268440246582
    8. '_row' → logprob: -6.32768440246582
    9. '_shift' → logprob: -6.32768440246582
    10. '_str' → logprob: -6.82768440246582

Token 566: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014102623797953129
    2. ' =' → logprob: -4.389102458953857
    3. 'd' → logprob: -6.514102458953857
    4. 'ed' → logprob: -9.639102935791016
    5. 'ated' → logprob: -11.264102935791016
    6. 'w' → logprob: -11.764102935791016
    7. '=row' → logprob: -12.514102935791016
    8. '   ' → logprob: -12.639102935791016
    9. '=d' → logprob: -12.639102935791016
    10. '=
' → logprob: -13.264102935791016

Token 567: ' row' (ID: 5225)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.989319384098053
    2. 'row' → logprob: -1.1143193244934082
    3. '''.' → logprob: -1.2393193244934082
    4. ' "".' → logprob: -5.489319324493408
    5. ' row' → logprob: -6.114319324493408
    6. ' ''.' → logprob: -6.239319324493408
    7. '['' → logprob: -6.864319324493408
    8. '["' → logprob: -7.489319324493408
    9. ''' → logprob: -8.364319801330566
    10. '""' → logprob: -9.239319801330566

Token 568: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -3.292907877039397e-06
    2. 'min' → logprob: -12.75000286102295
    3. '[' → logprob: -15.50000286102295
    4. ' [' → logprob: -16.625003814697266
    5. '[max' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.750003814697266
    7. '[m' → logprob: -18.250003814697266
    8. ' min' → logprob: -18.500003814697266
    9. '[
' → logprob: -19.000003814697266
    10. 'for' → logprob: -19.250003814697266

Token 569: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9361264946837764e-07
    2. 'c' → logprob: -16.5
    3. '_' → logprob: -17.875
    4. '_r' → logprob: -21.25
    5. '_
' → logprob: -21.75
    6. '_:' → logprob: -22.75
    7. '_]' → logprob: -22.875
    8. '_
' → logprob: -23.5
    9. '	c' → logprob: -23.75
    10. '_=' → logprob: -24.0

Token 570: ':min' (ID: 176301)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.6174540519714355
    2. ':' → logprob: -0.8674540519714355
    3. ':min' → logprob: -3.2424540519714355
    4. '8' → logprob: -6.9924540519714355
    5. 'min' → logprob: -7.6174540519714355
    6. ':r' → logprob: -9.492454528808594
    7. ':].' → logprob: -9.992454528808594
    8. ':]
' → logprob: -10.992454528808594
    9. 'r' → logprob: -11.492454528808594
    10. ':max' → logprob: -12.117454528808594

Token 571: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.03373214229941368
    2. 'c' → logprob: -3.4087321758270264
    3. '8' → logprob: -9.783732414245605
    4. 'min' → logprob: -10.658732414245605
    5. 'r' → logprob: -13.408732414245605
    6. '_r' → logprob: -13.783732414245605
    7. '6' → logprob: -14.033732414245605
    8. '_' → logprob: -14.283732414245605
    9. '+' → logprob: -14.533732414245605
    10. '9' → logprob: -14.908732414245605

Token 572: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00045498309191316366
    2. ' +' → logprob: -7.875454902648926
    3. '8' → logprob: -9.500454902648926
    4. '＋' → logprob: -18.000455856323242
    5. '   ' → logprob: -18.500455856323242
    6. '+
' → logprob: -18.875455856323242
    7. ']+' → logprob: -19.250455856323242
    8. ' ' → logprob: -19.375455856323242
    9. '+c' → logprob: -19.500455856323242
    10. '```' → logprob: -20.250455856323242

Token 573: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. ' ' → logprob: -17.0
    4. 'eight' → logprob: -17.625
    5. '８' → logprob: -18.875
    6. '۸' → logprob: -20.25
    7. '   ' → logprob: -20.75
    8. ' (' → logprob: -21.5
    9. '
' → logprob: -21.625
    10. '٨' → logprob: -22.0625

Token 574: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. ' ' → logprob: -18.625
    4. '８' → logprob: -19.0
    5. 'eight' → logprob: -19.125
    6. '۸' → logprob: -19.75
    7. '
' → logprob: -21.375
    8. ' (' → logprob: -21.75
    9. '٨' → logprob: -21.75
    10. '08' → logprob: -21.75

Token 575: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20161360502243042
    2. ']
' → logprob: -1.7016136646270752
    3. ']
' → logprob: -9.326613426208496
    4. '].' → logprob: -9.826613426208496
    5. ']

' → logprob: -10.451613426208496
    6. ' ]' → logprob: -11.076613426208496
    7. ']+' → logprob: -12.076613426208496
    8. ' ]
' → logprob: -12.326613426208496
    9. '];' → logprob: -14.701613426208496
    10. ']"' → logprob: -14.951613426208496

Token 576: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007218453683890402
    2. '"' → logprob: -8.00072193145752
    3. '000' → logprob: -9.12572193145752
    4. '          ' → logprob: -9.62572193145752
    5. '       ' → logprob: -10.12572193145752
    6. '+' → logprob: -10.62572193145752
    7. '            ' → logprob: -10.62572193145752
    8. '.' → logprob: -11.00072193145752
    9. '               ' → logprob: -11.12572193145752
    10. '	       ' → logprob: -11.12572193145752

Token 577: ' while' (ID: 2049)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6838666796684265
    2. 'row' → logprob: -0.8088666796684265
    3. 'while' (adapté à ' while') → logprob: -4.183866500854492
    4. ' row' → logprob: -4.308866500854492
    5. ' new' → logprob: -4.433866500854492
    6. '           ' → logprob: -5.683866500854492
    7. ' while' → logprob: -5.933866500854492
    8. 'if' → logprob: -6.058866500854492
    9. ' if' → logprob: -7.433866500854492
    10. '"' → logprob: -8.058866500854492

Token 578: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.931863051955588e-05
    2. ' len' → logprob: -9.750059127807617
    3. ''' → logprob: -14.250059127807617
    4. '(len' → logprob: -15.875059127807617
    5. 'row' → logprob: -16.000059127807617
    6. '"' → logprob: -18.750059127807617
    7. 'l' → logprob: -18.750059127807617
    8. '	len' → logprob: -19.250059127807617
    9. ' ' → logprob: -19.750059127807617
    10. 'length' → logprob: -20.625059127807617

Token 579: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00016659092216286808
    2. 'row' → logprob: -8.750166893005371
    3. '(' → logprob: -11.875166893005371
    4. ' row' → logprob: -13.875166893005371
    5. '[row' → logprob: -16.250165939331055
    6. ' (' → logprob: -16.625165939331055
    7. '(
' → logprob: -17.625165939331055
    8. '	row' → logprob: -17.625165939331055
    9. '=row' → logprob: -18.000165939331055
    10. '(ro' → logprob: -18.375165939331055

Token 580: '_norm' (ID: 46119)
  Prédit: '_norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_norm' → logprob: -1.0325924449716695e-05
    2. 'norm' → logprob: -11.50001049041748
    3. 'row' → logprob: -16.625009536743164
    4. '(norm' → logprob: -17.125009536743164
    5. ')' → logprob: -17.750009536743164
    6. '[' → logprob: -18.000009536743164
    7. '[row' → logprob: -18.000009536743164
    8. 'Norm' → logprob: -18.125009536743164
    9. ' norm' → logprob: -18.875009536743164
    10. '```' → logprob: -19.125009536743164

Token 581: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06189059093594551
    2. ' <' → logprob: -3.3118906021118164
    3. ')' → logprob: -3.8118906021118164
    4. ')<' → logprob: -6.561890602111816
    5. ' ' → logprob: -11.436890602111816
    6. '[' → logprob: -12.186890602111816
    7. '<|end|>' → logprob: -12.186890602111816
    8. '>' → logprob: -12.311890602111816
    9. '()<' → logprob: -12.311890602111816
    10. '<len' → logprob: -12.811890602111816

Token 582: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0015029559144750237
    2. ' <' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.626502990722656
    4. '<len' → logprob: -16.126502990722656
    5. '<class' → logprob: -16.501502990722656
    6. '<int' → logprob: -17.001502990722656
    7. '<List' → logprob: -17.626502990722656
    8. '<size' → logprob: -17.751502990722656
    9. ')' → logprob: -18.001502990722656
    10. '>' → logprob: -18.251502990722656

Token 583: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. 'eight' → logprob: -17.12500762939453
    4. '   ' → logprob: -17.87500762939453
    5. '８' → logprob: -18.37500762939453
    6. '۸' → logprob: -19.12500762939453
    7. ' eight' → logprob: -19.68750762939453
    8. '  ' → logprob: -20.31250762939453
    9. '```' → logprob: -20.56250762939453
    10. '08' → logprob: -20.68750762939453

Token 584: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'eight' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '８' → logprob: -18.750001907348633
    6. '۸' → logprob: -19.125001907348633
    7. '```' → logprob: -20.500001907348633
    8. '  ' → logprob: -20.625001907348633
    9. '08' → logprob: -20.750001907348633
    10. '৮' → logprob: -20.812501907348633

Token 585: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5314741134643555
    2. ':
' → logprob: -0.9064741134643555
    3. ' and' → logprob: -5.9064741134643555
    4. '           ' → logprob: -5.9064741134643555
    5. 'row' → logprob: -6.7814741134643555
    6. ' row' → logprob: -8.031474113464355
    7. '0' → logprob: -8.281474113464355
    8. '               ' → logprob: -8.281474113464355
    9. '   ' → logprob: -8.531474113464355
    10. ',' → logprob: -8.781474113464355

Token 586: '               ' (ID: 506)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6529841423034668
    2. ' row' → logprob: -0.7779841423034668
    3. '               ' → logprob: -4.402984142303467
    4. '           ' → logprob: -5.027984142303467
    5. '0' → logprob: -7.152984142303467
    6. '	row' → logprob: -8.402984619140625
    7. ' ' → logprob: -9.527984619140625
    8. ' ['' → logprob: -9.902984619140625
    9. '['' → logprob: -10.027984619140625
    10. '                ' → logprob: -10.152984619140625

Token 587: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.03094594180583954
    2. ' row' → logprob: -3.5309460163116455
    3. '0' → logprob: -6.905945777893066
    4. ''' → logprob: -8.655945777893066
    5. '['' → logprob: -11.780945777893066
    6. ' ' → logprob: -12.405945777893066
    7. '000' → logprob: -12.780945777893066
    8. '	row' → logprob: -14.030945777893066
    9. 'rows' → logprob: -14.530945777893066
    10. ' ['' → logprob: -14.655945777893066

Token 588: '_norm' (ID: 46119)
  Prédit: '_norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_norm' → logprob: -0.000204851632588543
    2. 'norm' → logprob: -8.500205039978027
    3. '.append' → logprob: -13.750205039978027
    4. '_normal' → logprob: -16.75020408630371
    5. 'append' → logprob: -16.87520408630371
    6. '
' → logprob: -17.00020408630371
    7. '.norm' → logprob: -17.87520408630371
    8. '(norm' → logprob: -17.87520408630371
    9. '[' → logprob: -18.37520408630371
    10. '.extend' → logprob: -18.62520408630371

Token 589: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005343805067241192
    2. '.' → logprob: -5.255343914031982
    3. '+=' → logprob: -9.880343437194824
    4. 'append' → logprob: -10.130343437194824
    5. '.extend' → logprob: -11.005343437194824
    6. '.insert' → logprob: -13.255343437194824
    7. ' append' → logprob: -15.630343437194824
    8. '+="' → logprob: -16.13034439086914
    9. '+' → logprob: -16.63034439086914
    10. ' +=' → logprob: -16.63034439086914

Token 590: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5759628415107727
    2. ''' → logprob: -0.8259628415107727
    3. '"' → logprob: -11.075963020324707
    4. '("' → logprob: -12.450963020324707
    5. ' '' → logprob: -12.700963020324707
    6. '0' → logprob: -14.700963020324707
    7. '(' → logprob: -15.075963020324707
    8. '`' → logprob: -16.82596206665039
    9. ''a' → logprob: -16.82596206665039
    10. '['' → logprob: -17.57596206665039

Token 591: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ''' → logprob: -18.875
    3. ' ' → logprob: -19.25
    4. '')' → logprob: -22.125
    5. '000' → logprob: -22.125
    6. '00' → logprob: -22.75
    7. '۰' → logprob: -23.625
    8. '"' → logprob: -24.625
    9. ' '' → logprob: -24.75
    10. '٠' → logprob: -25.5

Token 592: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04112516716122627
    2. '')
' → logprob: -3.2911250591278076
    3. ')' → logprob: -5.791125297546387
    4. ')
' → logprob: -11.291125297546387
    5. '')
' → logprob: -12.416125297546387
    6. ' ')' → logprob: -12.916125297546387
    7. '')

' → logprob: -13.166125297546387
    8. ''' → logprob: -13.541125297546387
    9. '")' → logprob: -13.916125297546387
    10. ' ')
' → logprob: -14.291125297546387

Token 593: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09950394183397293
    2. ' new' → logprob: -3.099503993988037
    3. '           ' → logprob: -3.349503993988037
    4. 'new' → logprob: -4.599503993988037
    5. '   ' → logprob: -6.349503993988037
    6. '
' → logprob: -6.349503993988037
    7. 'newline' → logprob: -9.224503517150879
    8. '<|end|>' → logprob: -9.349503517150879
    9. '        
' → logprob: -9.474503517150879
    10. ')new' → logprob: -9.849503517150879

Token 594: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.3241897225379944
    2. ' new' → logprob: -1.3241896629333496
    3. '   ' → logprob: -4.57418966293335
    4. '       ' → logprob: -8.324190139770508
    5. '
' → logprob: -9.199190139770508
    6. ')new' → logprob: -9.824190139770508
    7. '	new' → logprob: -9.949190139770508
    8. ')' → logprob: -10.949190139770508
    9. 'newline' → logprob: -10.949190139770508
    10. '           ' → logprob: -11.324190139770508

Token 595: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -4.274932143744081e-05
    2. 'shape' → logprob: -10.250042915344238
    3. '_' → logprob: -12.375042915344238
    4. 'new' → logprob: -14.500042915344238
    5. ' shape' → logprob: -14.625042915344238
    6. 'Shape' → logprob: -14.625042915344238
    7. '_sh' → logprob: -15.000042915344238
    8. '_shapes' → logprob: -15.000042915344238
    9. '_s' → logprob: -15.375042915344238
    10. '.shape' → logprob: -15.375042915344238

Token 596: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009125363430939615
    2. '.' → logprob: -7.000912666320801
    3. ' .' → logprob: -14.5009126663208
    4. '.extend' → logprob: -15.3759126663208
    5. '.app' → logprob: -15.6259126663208
    6. '.ap' → logprob: -15.8759126663208
    7. 'append' → logprob: -17.750911712646484
    8. '.=' → logprob: -18.375911712646484
    9. '.push' → logprob: -18.750911712646484
    10. '=' → logprob: -19.000911712646484

Token 597: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005273838527500629
    2. '('' → logprob: -5.255273818969727
    3. '(' → logprob: -10.255273818969727
    4. '"' → logprob: -12.380273818969727
    5. '(
' → logprob: -14.880273818969727
    6. '(""' → logprob: -15.880273818969727
    7. ' ("' → logprob: -16.255273818969727
    8. '(("' → logprob: -16.505273818969727
    9. '   ' → logprob: -17.505273818969727
    10. '''.' → logprob: -18.630273818969727

Token 598: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018170781433582306
    2. '''.' → logprob: -4.0181708335876465
    3. '""' → logprob: -11.018170356750488
    4. ' "".' → logprob: -12.893170356750488
    5. '".' → logprob: -13.893170356750488
    6. '''' → logprob: -14.268170356750488
    7. ' ''.' → logprob: -15.518170356750488
    8. ''' → logprob: -16.393171310424805
    9. '"",' → logprob: -16.893171310424805
    10. '``' → logprob: -17.893171310424805

Token 599: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.2664456789934775e-06
    2. ' join' → logprob: -14.500000953674316
    3. 'j' → logprob: -14.750000953674316
    4. '''.' → logprob: -15.500000953674316
    5. '"' → logprob: -16.125001907348633
    6. 'jo' → logprob: -17.625001907348633
    7. '.join' → logprob: -18.625001907348633
    8. '".' → logprob: -19.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. '.' → logprob: -19.500001907348633

Token 600: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -1.0206720617134124e-05
    2. 'row' → logprob: -11.50001049041748
    3. '(' → logprob: -17.000009536743164
    4. '[row' → logprob: -18.000009536743164
    5. ',row' → logprob: -20.875009536743164
    6. ' row' → logprob: -21.000009536743164
    7. '(
' → logprob: -21.250009536743164
    8. '=row' → logprob: -22.250009536743164
    9. '(line' → logprob: -22.625009536743164
    10. '	row' → logprob: -22.625009536743164

Token 601: '_norm' (ID: 46119)
  Prédit: '_norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_norm' → logprob: -1.4378848391061183e-05
    2. 'norm' → logprob: -11.375014305114746
    3. 'orm' → logprob: -12.750014305114746
    4. '.norm' → logprob: -19.000015258789062
    5. '_n' → logprob: -19.250015258789062
    6. 'Norm' → logprob: -19.500015258789062
    7. '(norm' → logprob: -19.625015258789062
    8. '[' → logprob: -19.875015258789062
    9. '_' → logprob: -20.250015258789062
    10. ')' → logprob: -20.375015258789062

Token 602: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011767742689698935
    2. '))' → logprob: -6.751176834106445
    3. ')
' → logprob: -12.626176834106445
    4. ' )' → logprob: -13.126176834106445
    5. '   ' → logprob: -14.751176834106445
    6. ')))' → logprob: -15.126176834106445
    7. '")' → logprob: -15.501176834106445
    8. ')")' → logprob: -16.126176834106445
    9. '])' → logprob: -16.376176834106445
    10. ')`' → logprob: -17.501176834106445

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017382439691573381
    2. 'return' → logprob: -6.75173807144165
    3. ' return' → logprob: -7.50173807144165
    4. '	return' → logprob: -11.626738548278809
    5. '    
' → logprob: -13.126738548278809
    6. '
' → logprob: -14.376738548278809
    7. ' for' → logprob: -14.501738548278809
    8. '```' → logprob: -14.751738548278809
    9. ':return' → logprob: -14.876738548278809
    10. '<|end|>' → logprob: -15.126738548278809

Token 604: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08715242892503738
    2. 'return' → logprob: -2.5871524810791016
    3. ' return' → logprob: -4.837152481079102
    4. '	return' → logprob: -8.337152481079102
    5. ':return' → logprob: -10.962152481079102
    6. '```' → logprob: -11.587152481079102
    7. '    
' → logprob: -11.962152481079102
    8. '{return' → logprob: -12.462152481079102
    9. '[' → logprob: -12.712152481079102
    10. '<|end|>' → logprob: -12.837152481079102

Token 605: ' pad' (ID: 11280)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0016463837819173932
    2. 'while' → logprob: -7.126646518707275
    3. '   ' → logprob: -7.501646518707275
    4. ' return' → logprob: -8.626646041870117
    5. 'for' → logprob: -9.126646041870117
    6. ' while' → logprob: -14.001646041870117
    7. '    
' → logprob: -15.751646041870117
    8. '	return' → logprob: -16.001646041870117
    9. 'new' → logprob: -16.376646041870117
    10. '```' → logprob: -16.376646041870117

Token 606: ' on' (ID: 402)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11301960796117783
    2. ' while' → logprob: -2.3630197048187256
    3. 'for' → logprob: -4.4880194664001465
    4. ' for' → logprob: -6.9880194664001465
    5. '   ' → logprob: -7.6130194664001465
    6. '	while' → logprob: -9.613019943237305
    7. 'While' → logprob: -14.238019943237305
    8. 'new' → logprob: -14.363019943237305
    9. 'with' → logprob: -14.363019943237305
    10. '	for' → logprob: -14.738019943237305

Token 607: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.09713447093963623
    2. 'bottom' → logprob: -3.347134590148926
    3. 'the' → logprob: -3.347134590148926
    4. 'right' → logprob: -3.972134590148926
    5. ' top' → logprob: -5.847134590148926
    6. ' the' → logprob: -8.472134590148926
    7. 'left' → logprob: -8.847134590148926
    8. ' bottom' → logprob: -9.722134590148926
    9. 'new' → logprob: -10.972134590148926
    10. ' right' → logprob: -11.097134590148926

Token 608: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4676556885242462
    2. ' while' → logprob: -1.4676556587219238
    3. '   ' → logprob: -1.9676556587219238
    4. ' for' → logprob: -6.592655658721924
    5. 'for' → logprob: -6.717655658721924
    6. '
' → logprob: -7.967655658721924
    7. '	while' → logprob: -8.467656135559082
    8. '    
' → logprob: -9.467656135559082
    9. ',' → logprob: -11.092656135559082
    10. '000' → logprob: -11.467656135559082

Token 609: ' less' (ID: 3760)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12697377800941467
    2. ' len' → logprob: -2.126973867416382
    3. 'min' → logprob: -10.751974105834961
    4. ' min' → logprob: -11.626974105834961
    5. 'new' → logprob: -11.876974105834961
    6. ' new' → logprob: -12.251974105834961
    7. '(len' → logprob: -13.501974105834961
    8. ' ' → logprob: -14.251974105834961
    9. '   ' → logprob: -14.376974105834961
    10. '  ' → logprob: -14.751974105834961

Token 610: ' than' (ID: 1572)
  Prédit: ' than'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.61181640625
    2. '   ' → logprob: -0.98681640625
    3. ' for' → logprob: -2.73681640625
    4. 'for' → logprob: -4.36181640625
    5. 'than' → logprob: -5.73681640625
    6. 'rows' → logprob: -6.73681640625
    7. '=' → logprob: -7.23681640625
    8. ' rows' → logprob: -8.36181640625
    9. ' ' → logprob: -8.48681640625
    10. ' =' → logprob: -8.61181640625

Token 611: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.006721995305269957
    2. ' ' → logprob: -5.0067219734191895
    3. '   ' → logprob: -12.756722450256348
    4. 'len' → logprob: -13.506722450256348
    5. 'eight' → logprob: -13.756722450256348
    6. ' eight' → logprob: -14.006722450256348
    7. ' len' → logprob: -15.506722450256348
    8. '    ' → logprob: -16.25672149658203
    9. '  ' → logprob: -16.63172149658203
    10. '```' → logprob: -17.00672149658203

Token 612: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -10.875020980834961
    3. 'eight' → logprob: -13.250020980834961
    4. ' eight' → logprob: -15.625020980834961
    5. '   ' → logprob: -16.25002098083496
    6. 'len' → logprob: -17.12502098083496
    7. 'new' → logprob: -17.37502098083496
    8. '```' → logprob: -18.50002098083496
    9. 'length' → logprob: -19.50002098083496
    10. ' acht' → logprob: -19.50002098083496

Token 613: ' rows' (ID: 13585)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15095233917236328
    2. ' while' → logprob: -2.5259523391723633
    3. 'while' → logprob: -3.6509523391723633
    4. '
' → logprob: -4.025952339172363
    5. ' for' → logprob: -4.275952339172363
    6. 'for' → logprob: -6.150952339172363
    7. '    
' → logprob: -9.900952339172363
    8. ',' → logprob: -10.025952339172363
    9. '	while' → logprob: -10.150952339172363
    10. '       ' → logprob: -10.275952339172363

Token 614: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02807331643998623
    2. 'while' → logprob: -4.028073310852051
    3. ' while' → logprob: -4.903073310852051
    4. '
' → logprob: -6.278073310852051
    5. 'for' → logprob: -8.02807331085205
    6. ' for' → logprob: -8.40307331085205
    7. ',' → logprob: -12.15307331085205
    8. '	while' → logprob: -12.40307331085205
    9. ',
' → logprob: -12.52807331085205
    10. '    
' → logprob: -13.15307331085205

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07141417264938354
    2. 'while' → logprob: -3.3214142322540283
    3. ' while' → logprob: -3.4464142322540283
    4. 'for' → logprob: -7.446413993835449
    5. ' for' → logprob: -8.07141399383545
    6. '
' → logprob: -9.94641399383545
    7. '	while' → logprob: -11.82141399383545
    8. '    ' → logprob: -12.19641399383545
    9. '+' → logprob: -13.19641399383545
    10. '    
' → logprob: -13.69641399383545

Token 616: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.8155263066291809
    2. '   ' → logprob: -1.1905262470245361
    3. ' while' → logprob: -1.6905262470245361
    4. 'for' → logprob: -2.815526247024536
    5. ' for' → logprob: -4.690526485443115
    6. '	while' → logprob: -10.940526008605957
    7. '
' → logprob: -11.065526008605957
    8. '    ' → logprob: -12.315526008605957
    9. '+' → logprob: -12.565526008605957
    10. '  ' → logprob: -13.065526008605957

Token 617: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0206720617134124e-05
    2. ' len' → logprob: -11.50001049041748
    3. '(len' → logprob: -18.250009536743164
    4. 'length' → logprob: -20.875009536743164
    5. '   ' → logprob: -22.250009536743164
    6. ' ' → logprob: -23.500009536743164
    7. '	len' → logprob: -23.625009536743164
    8. 'l' → logprob: -24.750009536743164
    9. '  ' → logprob: -25.500009536743164
    10. 'new' → logprob: -26.000009536743164

Token 618: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -5.512236498361744e-07
    2. 'new' → logprob: -15.000000953674316
    3. '(' → logprob: -15.875000953674316
    4. ' new' → logprob: -21.75
    5. '[new' → logprob: -22.0
    6. ')new' → logprob: -22.5
    7. '(
' → logprob: -22.875
    8. '=new' → logprob: -23.75
    9. '(n' → logprob: -24.0
    10. '	new' → logprob: -24.0

Token 619: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -1.1472419600977446e-06
    2. 'new' → logprob: -14.375000953674316
    3. 'shape' → logprob: -14.875000953674316
    4. '_new' → logprob: -16.000001907348633
    5. '(new' → logprob: -16.625001907348633
    6. '_shapes' → logprob: -18.625001907348633
    7. '_' → logprob: -19.000001907348633
    8. '[new' → logprob: -19.750001907348633
    9. ' new' → logprob: -19.875001907348633
    10. '.shape' → logprob: -20.000001907348633

Token 620: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04349841922521591
    2. ' <' → logprob: -3.7934985160827637
    3. ')' → logprob: -3.9184985160827637
    4. ')<' → logprob: -9.043498039245605
    5. ' ' → logprob: -10.793498039245605
    6. '()<' → logprob: -10.918498039245605
    7. '()' → logprob: -11.418498039245605
    8. '[' → logprob: -12.668498039245605
    9. '<|end|>' → logprob: -13.168498039245605
    10. '   ' → logprob: -13.543498039245605

Token 621: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0021859495900571346
    2. ' <' → logprob: -6.127185821533203
    3. '()<' → logprob: -15.127185821533203
    4. ' ' → logprob: -15.377185821533203
    5. '[' → logprob: -16.127185821533203
    6. ')' → logprob: -16.502185821533203
    7. '<len' → logprob: -16.502185821533203
    8. ')<' → logprob: -17.502185821533203
    9. '<class' → logprob: -17.502185821533203
    10. '<size' → logprob: -17.877185821533203

Token 622: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.001702675479464233
    2. ' ' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.126702308654785
    4. 'eight' → logprob: -16.3767032623291
    5. '08' → logprob: -17.5017032623291
    6. '  ' → logprob: -18.2517032623291
    7. ' ' → logprob: -18.6267032623291
    8. '7' → logprob: -18.6267032623291
    9. '```' → logprob: -18.6267032623291
    10. ' eight' → logprob: -18.8767032623291

Token 623: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. 'eight' → logprob: -17.375009536743164
    4. '   ' → logprob: -17.625009536743164
    5. '08' → logprob: -18.687509536743164
    6. '7' → logprob: -18.937509536743164
    7. '۸' → logprob: -19.312509536743164
    8. '```' → logprob: -19.437509536743164
    9. '８' → logprob: -19.500009536743164
    10. '=' → logprob: -19.625009536743164

Token 624: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.508897066116333
    2. ':
' → logprob: -1.133897066116333
    3. 'new' → logprob: -3.133897066116333
    4. ' new' → logprob: -4.258896827697754
    5. '   ' → logprob: -4.383896827697754
    6. ':new' → logprob: -5.883896827697754
    7. '[new' → logprob: -6.258896827697754
    8. '{' → logprob: -7.508896827697754
    9. ',' → logprob: -7.508896827697754
    10. ',new' → logprob: -8.383896827697754

Token 625: '       ' (ID: 309)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.728290855884552
    2. ' new' → logprob: -1.6032907962799072
    3. '   ' → logprob: -1.7282907962799072
    4. '       ' → logprob: -1.9782907962799072
    5. '	new' → logprob: -9.728290557861328
    6. '    ' → logprob: -11.103290557861328
    7. '(new' → logprob: -11.228290557861328
    8. ',new' → logprob: -11.853290557861328
    9. 'newline' → logprob: -11.853290557861328
    10. '[new' → logprob: -12.228290557861328

Token 626: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.01420135423541069
    2. ' new' → logprob: -4.2642011642456055
    3. '   ' → logprob: -10.264201164245605
    4. '       ' → logprob: -13.514201164245605
    5. '	new' → logprob: -13.514201164245605
    6. '[new' → logprob: -16.264202117919922
    7. 'newline' → logprob: -16.514202117919922
    8. '_new' → logprob: -16.639202117919922
    9. '.new' → logprob: -17.889202117919922
    10. 'n' → logprob: -18.014202117919922

Token 627: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -2.935296834039036e-06
    2. 'shape' → logprob: -12.87500286102295
    3. 'new' → logprob: -15.12500286102295
    4. '_' → logprob: -17.750003814697266
    5. 'hape' → logprob: -18.500003814697266
    6. 'Shape' → logprob: -18.750003814697266
    7. ' shape' → logprob: -19.375003814697266
    8. 'append' → logprob: -20.375003814697266
    9. '_shapes' → logprob: -20.625003814697266
    10. '.shape' → logprob: -21.125003814697266

Token 628: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005533903022296727
    2. '.' → logprob: -7.500553607940674
    3. 'append' → logprob: -14.875553131103516
    4. '.app' → logprob: -17.125553131103516
    5. '.extend' → logprob: -17.250553131103516
    6. '.Append' → logprob: -18.000553131103516
    7. '.ap' → logprob: -19.500553131103516
    8. '.add' → logprob: -19.500553131103516
    9. ' append' → logprob: -19.500553131103516
    10. '.insert' → logprob: -20.125553131103516

Token 629: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.816093228830141e-06
    2. '"' → logprob: -13.12500286102295
    3. '('' → logprob: -14.62500286102295
    4. '(' → logprob: -15.12500286102295
    5. ' ("' → logprob: -19.375001907348633
    6. '("")' → logprob: -20.250001907348633
    7. '(
' → logprob: -20.750001907348633
    8. '()' → logprob: -21.875001907348633
    9. '(("' → logprob: -22.000001907348633
    10. ' "' → logprob: -22.000001907348633

Token 630: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -9.758300438988954e-05
    2. '"' → logprob: -9.250097274780273
    3. ''' → logprob: -13.500097274780273
    4. ' ' → logprob: -21.500097274780273
    5. '   ' → logprob: -22.000097274780273
    6. '`' → logprob: -22.250097274780273
    7. '"+"' → logprob: -22.625097274780273
    8. '""' → logprob: -22.750097274780273
    9. '       ' → logprob: -22.875097274780273
    10. '["' → logprob: -23.375097274780273

Token 631: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: 0.0
    2. '00' → logprob: -18.75
    3. '0' → logprob: -19.125
    4. '001' → logprob: -20.75
    5. '111' → logprob: -21.625
    6. '100' → logprob: -23.25
    7. ' ' → logprob: -23.75
    8. '011' → logprob: -23.75
    9. '```' → logprob: -23.875
    10. '   ' → logprob: -24.0

Token 632: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -2.1008713702030946e-06
    2. '000' → logprob: -13.875001907348633
    3. '"' → logprob: -14.125001907348633
    4. '0' → logprob: -15.250001907348633
    5. ''' → logprob: -16.750001907348633
    6. ' ' → logprob: -19.250001907348633
    7. '001' → logprob: -19.375001907348633
    8. '```' → logprob: -19.875001907348633
    9. '01' → logprob: -20.000001907348633
    10. '[' → logprob: -20.125001907348633

Token 633: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0004123192047700286
    2. ')' → logprob: -8.250411987304688
    3. '")
' → logprob: -8.875411987304688
    4. ')")' → logprob: -12.500411987304688
    5. '"' → logprob: -12.625411987304688
    6. '   ' → logprob: -13.000411987304688
    7. '')' → logprob: -14.250411987304688
    8. '}")' → logprob: -15.000411987304688
    9. ' ")' → logprob: -15.625411987304688
    10. ']' → logprob: -15.750411987304688

Token 634: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028319843113422394
    2. ' return' → logprob: -6.502831935882568
    3. 'return' → logprob: -6.877831935882568
    4. '
' → logprob: -8.627832412719727
    5. '    
' → logprob: -9.377832412719727
    6. '	return' → logprob: -10.877832412719727
    7. '<|end|>' → logprob: -12.877832412719727
    8. ':return' → logprob: -13.377832412719727
    9. ' 
' → logprob: -13.502832412719727
    10. ')' → logprob: -13.627832412719727

Token 635: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004476047120988369
    2. 'return' → logprob: -5.754476070404053
    3. ' return' → logprob: -6.754476070404053
    4. '	return' → logprob: -9.754475593566895
    5. '    
' → logprob: -11.254475593566895
    6. ')' → logprob: -11.254475593566895
    7. '<|end|>' → logprob: -11.254475593566895
    8. '
' → logprob: -11.379475593566895
    9. '```' → logprob: -11.879475593566895
    10. ':return' → logprob: -12.379475593566895

Token 636: ' finally' (ID: 8486)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -8.537868779967539e-06
    2. ' return' → logprob: -12.000008583068848
    3. '   ' → logprob: -13.000008583068848
    4. '
' → logprob: -19.37500762939453
    5. '	return' → logprob: -19.37500762939453
    6. '    
' → logprob: -21.62500762939453
    7. ' ' → logprob: -21.87500762939453
    8. '  ' → logprob: -22.25000762939453
    9. 'for' → logprob: -22.37500762939453
    10. '       ' → logprob: -22.75000762939453

Token 637: ' truncate' (ID: 126309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4979267418384552
    2. ' return' → logprob: -0.9979267120361328
    3. '   ' → logprob: -3.747926712036133
    4. ' ' → logprob: -14.622926712036133
    5. '  ' → logprob: -15.247926712036133
    6. '    ' → logprob: -15.997926712036133
    7. '
' → logprob: -16.497926712036133
    8. '	return' → logprob: -16.622926712036133
    9. 'normalize' → logprob: -17.122926712036133
    10. ':return' → logprob: -17.497926712036133

Token 638: ' to' (ID: 316)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06633533537387848
    2. '(new' → logprob: -2.816335439682007
    3. ' new' → logprob: -5.566335201263428
    4. '[new' → logprob: -8.566335678100586
    5. 'return' → logprob: -8.816335678100586
    6. '   ' → logprob: -9.066335678100586
    7. '(' → logprob: -10.691335678100586
    8. '[' → logprob: -11.066335678100586
    9. '
' → logprob: -11.066335678100586
    10. 'for' → logprob: -11.691335678100586

Token 639: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0005719788023270667
    2. 'new' → logprob: -7.500572204589844
    3. 'eight' → logprob: -11.125572204589844
    4. ' ' → logprob: -13.125572204589844
    5. ' new' → logprob: -13.750572204589844
    6. '[new' → logprob: -14.625572204589844
    7. '[' → logprob: -14.750572204589844
    8. ' eight' → logprob: -16.000572204589844
    9. '[:' → logprob: -17.000572204589844
    10. '```' → logprob: -17.125572204589844

Token 640: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -8.113290095934644e-05
    2. 'new' → logprob: -9.500081062316895
    3. 'eight' → logprob: -12.625081062316895
    4. '[' → logprob: -13.125081062316895
    5. '[new' → logprob: -15.000081062316895
    6. ' ' → logprob: -15.000081062316895
    7. '[
' → logprob: -16.75008201599121
    8. ' new' → logprob: -16.87508201599121
    9. '```' → logprob: -17.37508201599121
    10. '(' → logprob: -17.50008201599121

Token 641: ' rows' (ID: 13585)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.002248507458716631
    2. ' new' → logprob: -6.752248287200928
    3. '[new' → logprob: -7.377248287200928
    4. 'return' → logprob: -8.752248764038086
    5. '(new' → logprob: -9.002248764038086
    6. '   ' → logprob: -9.127248764038086
    7. 'rows' → logprob: -10.627248764038086
    8. 'lines' → logprob: -11.627248764038086
    9. '[' → logprob: -12.002248764038086
    10. '```' → logprob: -12.127248764038086

Token 642: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07993032038211823
    2. 'new' → logprob: -3.204930305480957
    3. 'return' → logprob: -3.454930305480957
    4. ' return' → logprob: -6.579930305480957
    5. ' new' → logprob: -7.079930305480957
    6. '
' → logprob: -7.204930305480957
    7. '[new' → logprob: -7.454930305480957
    8. ',' → logprob: -7.454930305480957
    9. '    
' → logprob: -8.329930305480957
    10. ':return' → logprob: -9.829930305480957

Token 643: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020849506836384535
    2. 'return' → logprob: -6.502084732055664
    3. ' return' → logprob: -7.502084732055664
    4. '    
' → logprob: -11.377084732055664
    5. '	return' → logprob: -12.002084732055664
    6. 'new' → logprob: -12.752084732055664
    7. ',' → logprob: -13.252084732055664
    8. ':return' → logprob: -13.377084732055664
    9. ' new' → logprob: -13.502084732055664
    10. '[' → logprob: -13.627084732055664

Token 644: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0429840087890625
    2. '   ' → logprob: -4.0429840087890625
    3. ' return' → logprob: -4.2929840087890625
    4. 'new' → logprob: -4.5429840087890625
    5. ' new' → logprob: -8.417984008789062
    6. '```' → logprob: -14.417984008789062
    7. '	return' → logprob: -14.917984008789062
    8. '
' → logprob: -15.542984008789062
    9. '    
' → logprob: -15.667984008789062
    10. '`' → logprob: -16.417984008789062

Token 645: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.20141597092151642
    2. ' new' → logprob: -1.701416015625
    3. '(new' → logprob: -13.951416015625
    4. '   ' → logprob: -14.076416015625
    5. '[new' → logprob: -14.326416015625
    6. '	new' → logprob: -15.326416015625
    7. ' ' → logprob: -16.701416015625
    8. '[' → logprob: -16.701416015625
    9. ' ' → logprob: -17.701416015625
    10. 'New' → logprob: -18.263916015625

Token 646: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -9.088346359931165e-07
    2. 'shape' → logprob: -14.125000953674316
    3. 'new' → logprob: -16.625
    4. '_' → logprob: -19.875
    5. ' shape' → logprob: -20.0
    6. '_sh' → logprob: -20.25
    7. '_shapes' → logprob: -20.25
    8. 'Shape' → logprob: -20.875
    9. '_s' → logprob: -21.875
    10. 's' → logprob: -22.0

Token 647: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 648: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -20.625
    4. 'eight' → logprob: -21.375
    5. '```' → logprob: -21.5
    6. '８' → logprob: -22.125
    7. '۸' → logprob: -22.25
    8. '08' → logprob: -22.5
    9. '(' → logprob: -23.125
    10. '८' → logprob: -23.125

Token 649: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003132976416964084
    2. ']' → logprob: -8.125313758850098
    3. '}' → logprob: -11.125313758850098
    4. ')
' → logprob: -13.125313758850098
    5. '<|end|>' → logprob: -15.500313758850098
    6. '   ' → logprob: -16.50031280517578
    7. ' )' → logprob: -17.37531280517578
    8. '])' → logprob: -17.37531280517578
    9. '）' → logprob: -17.75031280517578
    10. '#' → logprob: -18.00031280517578

Token 650: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16056591272354126
    2. '<|end|>' → logprob: -2.2855658531188965
    3. '
' → logprob: -3.5355658531188965
    4. '#' → logprob: -5.5355658531188965
    5. '<|end|>' → logprob: -5.9105658531188965
    6. 'A' → logprob: -6.2855658531188965
    7. '(' → logprob: -6.6605658531188965
    8. '```' → logprob: -6.7855658531188965
    9. '\' → logprob: -7.0355658531188965
    10. ')' → logprob: -7.2855658531188965

Token 651: ' shapes' (ID: 29447)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.7214065790176392
    2. ' shapes' → logprob: -1.9714065790176392
    3. 'match' → logprob: -2.0964064598083496
    4. ' compare' → logprob: -2.5964064598083496
    5. ' recognize' → logprob: -3.5964064598083496
    6. ' shape' → logprob: -3.7214064598083496
    7. ' find' → logprob: -3.7214064598083496
    8. ' get' → logprob: -3.8464064598083496
    9. 'compare' → logprob: -3.9714064598083496
    10. ' identify' → logprob: -4.47140645980835

Token 652: '_equal' (ID: 27882)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8301728367805481
    2. '.' → logprob: -1.9551727771759033
    3. '.keys' → logprob: -2.4551727771759033
    4. '_to' → logprob: -2.5801727771759033
    5. '_keys' → logprob: -2.7051727771759033
    6. '_for' → logprob: -3.5801727771759033
    7. '_at' → logprob: -4.080173015594482
    8. '._' → logprob: -4.330173015594482
    9. '_get' → logprob: -4.455173015594482
    10. '_names' → logprob: -4.830173015594482

Token 653: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13191036880016327
    2. '(shape' → logprob: -2.1319103240966797
    3. '(sh' → logprob: -5.63191032409668
    4. '(a' → logprob: -7.13191032409668
    5. ' (' → logprob: -8.00691032409668
    6. '(s' → logprob: -8.38191032409668
    7. '(lhs' → logprob: -11.50691032409668
    8. '(ship' → logprob: -12.88191032409668
    9. '(
' → logprob: -13.25691032409668
    10. '(left' → logprob: -13.63191032409668

Token 654: '1' (ID: 16)
  Prédit: 'hape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hape' → logprob: -0.38841521739959717
    2. 'h' → logprob: -1.3884152173995972
    3. '1' → logprob: -2.6384153366088867
    4. '(a' → logprob: -7.763415336608887
    5. '_h' → logprob: -9.263415336608887
    6. '(' → logprob: -9.513415336608887
    7. '(h' → logprob: -9.513415336608887
    8. '_' → logprob: -9.638415336608887
    9. 'ha' → logprob: -10.013415336608887
    10. 'hift' → logprob: -10.513415336608887

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003341452218592167
    2. 's' → logprob: -6.2533416748046875
    3. ',s' → logprob: -6.6283416748046875
    4. ' ,' → logprob: -10.753341674804688
    5. '):' → logprob: -11.003341674804688
    6. '1' → logprob: -11.003341674804688
    7. '[' → logprob: -11.253341674804688
    8. ',
' → logprob: -11.753341674804688
    9. ')' → logprob: -12.878341674804688
    10. '(s' → logprob: -13.128341674804688

Token 656: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014163863845169544
    2. ' s' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.764163970947266
    4. ')' → logprob: -16.764163970947266
    5. '	s' → logprob: -17.264163970947266
    6. ' ' → logprob: -18.139163970947266
    7. '    ' → logprob: -18.139163970947266
    8. '     ' → logprob: -18.764163970947266
    9. '  ' → logprob: -18.889163970947266
    10. '       ' → logprob: -18.889163970947266

Token 657: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015725912526249886
    2. ',' → logprob: -7.501572608947754
    3. '2' → logprob: -7.626572608947754
    4. '_' → logprob: -8.626572608947754
    5. 's' → logprob: -9.501572608947754
    6. 'hape' → logprob: -9.501572608947754
    7. '):' → logprob: -9.876572608947754
    8. ')' → logprob: -10.626572608947754
    9. '):
' → logprob: -10.626572608947754
    10. 'e' → logprob: -10.751572608947754

Token 658: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00046332005877047777
    2. '):
' → logprob: -7.750463485717773
    3. ')' → logprob: -10.500463485717773
    4. ' ):' → logprob: -12.750463485717773
    5. '):
' → logprob: -13.625463485717773
    6. ':' → logprob: -14.375463485717773
    7. '):

' → logprob: -16.250463485717773
    8. '[]):' → logprob: -16.625463485717773
    9. ']:' → logprob: -16.750463485717773
    10. '）：' → logprob: -16.875463485717773

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015953186666592956
    2. ':' → logprob: -6.876595497131348
    3. '[' → logprob: -9.001595497131348
    4. '(' → logprob: -9.251595497131348
    5. ':
' → logprob: -9.376595497131348
    6. 'def' → logprob: -9.376595497131348
    7. '{' → logprob: -10.376595497131348
    8. ' for' → logprob: -10.751595497131348
    9. '    
' → logprob: -11.001595497131348
    10. '(s' → logprob: -11.626595497131348

Token 660: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22086544334888458
    2. ' for' → logprob: -1.8458654880523682
    3. 'for' (adapté à ' for') → logprob: -4.095865249633789
    4. ' s' → logprob: -5.095865249633789
    5. ' return' → logprob: -5.095865249633789
    6. 'return' → logprob: -5.220865249633789
    7. 's' → logprob: -6.095865249633789
    8. ' normalized' → logprob: -6.470865249633789
    9. '
' → logprob: -6.720865249633789
    10. 'normalized' → logprob: -8.095865249633789

Token 661: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10206110030412674
    2. 'i' → logprob: -2.3520610332489014
    3. ' i' → logprob: -6.8520612716674805
    4. ' r' → logprob: -7.6020612716674805
    5. 'row' → logprob: -8.22706127166748
    6. ' row' → logprob: -11.10206127166748
    7. '_' → logprob: -12.47706127166748
    8. 'line' → logprob: -12.72706127166748
    9. '_r' → logprob: -12.72706127166748
    10. 'a' → logprob: -13.35206127166748

Token 662: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11291516572237015
    2. 'in' → logprob: -2.237915277481079
    3. ' ' → logprob: -9.6129150390625
    4. ',' → logprob: -11.9879150390625
    5. '	in' → logprob: -12.2379150390625
    6. '  ' → logprob: -12.6129150390625
    7. '0' → logprob: -13.4879150390625
    8. ' i' → logprob: -13.4879150390625
    9. 'import' → logprob: -13.8629150390625
    10. 'n' → logprob: -13.9879150390625

Token 663: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.306760805164231e-05
    2. ' range' → logprob: -11.25001335144043
    3. '   ' → logprob: -21.00001335144043
    4. '	range' → logprob: -22.00001335144043
    5. ' ' → logprob: -22.62501335144043
    6. '(range' → logprob: -22.75001335144043
    7. '8' → logprob: -23.12501335144043
    8. 'r' → logprob: -23.75001335144043
    9. '  ' → logprob: -23.75001335144043
    10. '```' → logprob: -24.00001335144043

Token 664: '(' (ID: 7)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -11.125021934509277
    3. ' ' → logprob: -11.875021934509277
    4. '   ' → logprob: -17.50002098083496
    5. 'len' → logprob: -19.00002098083496
    6. '(len' → logprob: -19.37502098083496
    7. ' (' → logprob: -20.87502098083496
    8. '(
' → logprob: -21.12502098083496
    9. ' len' → logprob: -21.25002098083496
    10. 'eight' → logprob: -21.25002098083496

Token 665: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. 'len' → logprob: -18.875
    4. '   ' → logprob: -20.5
    5. 'eight' → logprob: -21.75
    6. '7' → logprob: -22.25
    7. '８' → logprob: -23.0
    8. '9' → logprob: -23.25
    9. '0' → logprob: -23.25
    10. '۸' → logprob: -23.375

Token 666: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47413474321365356
    2. '):' → logprob: -0.9741347432136536
    3. ')' → logprob: -10.59913444519043
    4. '   ' → logprob: -10.84913444519043
    5. '):
' → logprob: -12.22413444519043
    6. ':' → logprob: -12.34913444519043
    7. '):

' → logprob: -13.34913444519043
    8. ':
' → logprob: -14.47413444519043
    9. ' ):
' → logprob: -14.47413444519043
    10. ' ):' → logprob: -14.72413444519043

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07191728055477142
    2. '   ' → logprob: -2.6969172954559326
    3. ' if' → logprob: -6.5719170570373535
    4. ' ' → logprob: -9.071917533874512
    5. '	   ' → logprob: -9.446917533874512
    6. 'if' → logprob: -9.946917533874512
    7. '        
' → logprob: -9.946917533874512
    8. '	' → logprob: -9.946917533874512
    9. '	if' → logprob: -10.196917533874512
    10. '<|end|>' → logprob: -10.196917533874512

Token 668: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04367793723940849
    2. ' if' → logprob: -3.543678045272827
    3. '   ' → logprob: -4.293677806854248
    4. '       ' → logprob: -8.668678283691406
    5. ' ' → logprob: -13.168678283691406
    6. '	if' → logprob: -13.293678283691406
    7. '  ' → logprob: -14.543678283691406
    8. '    ' → logprob: -15.043678283691406
    9. 'If' → logprob: -16.918678283691406
    10. '     ' → logprob: -17.043678283691406

Token 669: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04858759790658951
    2. ' s' → logprob: -3.0485875606536865
    3. '   ' → logprob: -15.548587799072266
    4. '(s' → logprob: -18.298587799072266
    5. '	s' → logprob: -18.673587799072266
    6. 'sh' → logprob: -19.548587799072266
    7. '    ' → logprob: -19.923587799072266
    8. '{s' → logprob: -20.673587799072266
    9. '_s' → logprob: -20.923587799072266
    10. ' ' → logprob: -21.173587799072266

Token 670: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '[i' → logprob: -12.75000286102295
    3. '[' → logprob: -15.12500286102295
    4. '```' → logprob: -17.625003814697266
    5. '_' → logprob: -18.625003814697266
    6. '   ' → logprob: -19.250003814697266
    7. '
' → logprob: -19.750003814697266
    8. 's' → logprob: -19.875003814697266
    9. '[int' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.750003814697266

Token 671: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -14.250001907348633
    3. '[' → logprob: -14.375001907348633
    4. '[I' → logprob: -15.375001907348633
    5. '][' → logprob: -16.125001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '[
' → logprob: -17.375001907348633
    8. '[s' → logprob: -17.500001907348633
    9. ')[' → logprob: -17.500001907348633
    10. '"[' → logprob: -17.750001907348633

Token 672: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.22172245383262634
    2. ']!=' → logprob: -1.9717224836349487
    3. ']' → logprob: -2.846722364425659
    4. ' !=' → logprob: -6.596722602844238
    5. '()!=' → logprob: -8.971722602844238
    6. ')!=' → logprob: -9.221722602844238
    7. '!==' → logprob: -11.221722602844238
    8. ' ]' → logprob: -13.471722602844238
    9. '!=(' → logprob: -13.596722602844238
    10. '']' → logprob: -13.846722602844238

Token 673: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02326807752251625
    2. ' !=' → logprob: -3.773267984390259
    3. ']!=' → logprob: -11.77326774597168
    4. ')!=' → logprob: -11.89826774597168
    5. '()!=' → logprob: -12.27326774597168
    6. '!==' → logprob: -12.89826774597168
    7. '!=(' → logprob: -15.27326774597168
    8. '!='' → logprob: -15.52326774597168
    9. '!="' → logprob: -16.14826774597168
    10. '==' → logprob: -16.52326774597168

Token 674: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009115827269852161
    2. ' s' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.875911712646484
    4. ' ' → logprob: -19.500911712646484
    5. '       ' → logprob: -20.375911712646484
    6. '	s' → logprob: -20.500911712646484
    7. '    ' → logprob: -20.875911712646484
    8. '  ' → logprob: -21.250911712646484
    9. '     ' → logprob: -21.375911712646484
    10. '(s' → logprob: -21.750911712646484

Token 675: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '[i' → logprob: -14.375000953674316
    3. 's' → logprob: -14.375000953674316
    4. '[' → logprob: -16.375001907348633
    5. '1' → logprob: -18.250001907348633
    6. '[s' → logprob: -18.500001907348633
    7. '```' → logprob: -19.250001907348633
    8. 'i' → logprob: -19.750001907348633
    9. '₂' → logprob: -19.875001907348633
    10. ' ' → logprob: -20.250001907348633

Token 676: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.282920129597187e-05
    2. '[' → logprob: -11.500012397766113
    3. 'i' → logprob: -13.125012397766113
    4. '   ' → logprob: -15.625012397766113
    5. '][' → logprob: -15.625012397766113
    6. '[
' → logprob: -16.00001335144043
    7. '```' → logprob: -16.37501335144043
    8. '[I' → logprob: -17.62501335144043
    9. '(i' → logprob: -17.62501335144043
    10. ' i' → logprob: -18.25001335144043

Token 677: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.25513413548469543
    2. ']' → logprob: -1.880134105682373
    3. ':' → logprob: -3.255134105682373
    4. ']:
' → logprob: -3.505134105682373
    5. '):' → logprob: -6.505134105682373
    6. ':
' → logprob: -7.005134105682373
    7. '       ' → logprob: -7.630134105682373
    8. '<|end|>' → logprob: -8.380134582519531
    9. '):
' → logprob: -8.505134582519531
    10. '   ' → logprob: -8.630134582519531

Token 678: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008419890888035297
    2. '           ' → logprob: -5.633419990539551
    3. 'return' → logprob: -5.758419990539551
    4. ' return' → logprob: -7.133419990539551
    5. ':return' → logprob: -7.758419990539551
    6. '   ' → logprob: -8.50841999053955
    7. ':' → logprob: -10.25841999053955
    8. ':
' → logprob: -10.50841999053955
    9. '	' → logprob: -10.75841999053955
    10. '
' → logprob: -10.88341999053955

Token 679: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005322466138750315
    2. ' return' → logprob: -5.255322456359863
    3. '       ' → logprob: -9.755322456359863
    4. '           ' → logprob: -10.505322456359863
    5. '               ' → logprob: -13.505322456359863
    6. '   ' → logprob: -13.630322456359863
    7. '	return' → logprob: -14.630322456359863
    8. '
' → logprob: -16.13032341003418
    9. ':return' → logprob: -16.38032341003418
    10. '{return' → logprob: -17.38032341003418

Token 680: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0206720617134124e-05
    2. ' False' → logprob: -11.50001049041748
    3. 'false' → logprob: -22.375009536743164
    4. '(False' → logprob: -23.500009536743164
    5. 'F' → logprob: -24.875009536743164
    6. 'True' → logprob: -24.875009536743164
    7. '_false' → logprob: -25.500009536743164
    8. '=False' → logprob: -25.875009536743164
    9. '   ' → logprob: -26.250009536743164
    10. 'FALSE' → logprob: -26.500009536743164

Token 681: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037811484187841415
    2. ' return' → logprob: -3.537811517715454
    3. '	return' → logprob: -5.287811279296875
    4. 'return' → logprob: -6.162811279296875
    5. '
' → logprob: -8.287811279296875
    6. '    
' → logprob: -8.787811279296875
    7. '       ' → logprob: -9.787811279296875
    8. ' 
' → logprob: -9.912811279296875
    9. ':return' → logprob: -10.037811279296875
    10. '  
' → logprob: -10.162811279296875

Token 683: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.501375675201416
    2. ' return' → logprob: -1.251375675201416
    3. '   ' → logprob: -2.251375675201416
    4. '
' → logprob: -6.501375675201416
    5. '	return' → logprob: -6.626375675201416
    6. ':return' → logprob: -10.751375198364258
    7. ' ' → logprob: -11.001375198364258
    8. 'eturn' → logprob: -11.251375198364258
    9. 'True' → logprob: -11.251375198364258
    10. 'Return' → logprob: -11.876375198364258

Token 684: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.836499985889532e-05
    2. ' True' → logprob: -9.7500581741333
    3. '(True' → logprob: -23.125059127807617
    4. 'true' → logprob: -23.625059127807617
    5. '=True' → logprob: -24.625059127807617
    6. '   ' → logprob: -25.000059127807617
    7. 'False' → logprob: -25.000059127807617
    8. 'Tr' → logprob: -26.000059127807617
    9. 'TRUE' → logprob: -27.250059127807617
    10. '
' → logprob: -27.375059127807617

Token 685: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4001430571079254
    2. 'def' → logprob: -1.150143027305603
    3. '

' → logprob: -4.400143146514893
    4. '<|end|>' → logprob: -7.150143146514893
    5. 'newline' → logprob: -10.775142669677734
    6. ' def' → logprob: -10.775142669677734
    7. '  
' → logprob: -11.150142669677734
    8. '\' → logprob: -11.400142669677734
    9. '\n' → logprob: -11.650142669677734
    10. ' 
' → logprob: -11.650142669677734

Token 686: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.706686690449715e-05
    2. '
' → logprob: -9.750066757202148
    3. '```' → logprob: -13.000066757202148
    4. ' def' → logprob: -13.250066757202148
    5. '\' → logprob: -13.625066757202148
    6. '  
' → logprob: -13.875066757202148
    7. '#' → logprob: -14.250066757202148
    8. '<|end|>' → logprob: -14.250066757202148
    9. 'import' → logprob: -15.625066757202148
    10. 'A' → logprob: -15.875066757202148

Token 687: ' sys' (ID: 12228)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.005784923676401377
    2. ' copy' → logprob: -5.75578498840332
    3. 'math' → logprob: -6.50578498840332
    4. 'sys' → logprob: -7.25578498840332
    5. 'collections' → logprob: -7.88078498840332
    6. 're' → logprob: -11.38078498840332
    7. ' sys' → logprob: -12.75578498840332
    8. 'random' → logprob: -12.75578498840332
    9. ' itertools' → logprob: -13.00578498840332
    10. 'json' → logprob: -13.38078498840332

Token 688: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08793538063764572
    2. 'def' → logprob: -2.587935447692871
    3. '

' → logprob: -5.462935447692871
    4. 'input' → logprob: -6.212935447692871
    5. 'for' → logprob: -6.212935447692871
    6. 'data' → logprob: -8.212935447692871
    7. '\n' → logprob: -8.462935447692871
    8. 'text' → logprob: -9.587935447692871
    9. 's' → logprob: -9.712935447692871
    10. 'shape' → logprob: -10.712935447692871

Token 689: 'lines' (ID: 10105)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023478278890252113
    2. 'for' → logprob: -4.2734785079956055
    3. 'input' → logprob: -4.7734785079956055
    4. 'query' → logprob: -7.7734785079956055
    5. 'data' → logprob: -8.898478507995605
    6. 'line' → logprob: -9.148478507995605
    7. 'lines' → logprob: -9.648478507995605
    8. 'text' → logprob: -11.023478507995605
    9. 'code' → logprob: -11.023478507995605
    10. 'shape' → logprob: -11.273478507995605

Token 690: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20313295722007751
    2. '=' → logprob: -1.7031329870224
    3. '.' → logprob: -7.2031331062316895
    4. '_' → logprob: -7.9531331062316895
    5. '[' → logprob: -8.578132629394531
    6. '   ' → logprob: -8.953132629394531
    7. ' ' → logprob: -9.203132629394531
    8. '=[]' → logprob: -10.328132629394531
    9. '.readline' → logprob: -10.703132629394531
    10. '[]' → logprob: -10.703132629394531

Token 691: ' []
' (ID: 8911)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.05877160653471947
    2. ' sys' → logprob: -2.9337716102600098
    3. '[]' → logprob: -6.05877161026001
    4. '[' → logprob: -6.93377161026001
    5. ' []' → logprob: -7.80877161026001
    6. ' [' → logprob: -9.183771133422852
    7. 'list' → logprob: -10.558771133422852
    8. '(sys' → logprob: -10.933771133422852
    9. '=sys' → logprob: -12.183771133422852
    10. '	sys' → logprob: -12.433771133422852

Token 692: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.15310683415737e-05
    2. 'while' → logprob: -11.375021934509277
    3. ' for' → logprob: -11.750021934509277
    4. '
' → logprob: -13.250021934509277
    5. 'try' → logprob: -15.000021934509277
    6. 'line' → logprob: -17.00002098083496
    7. '   ' → logprob: -19.75002098083496
    8. '
' → logprob: -20.00002098083496
    9. '	for' → logprob: -20.12502098083496
    10. ' 
' → logprob: -20.12502098083496

Token 693: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011050998233258724
    2. ' line' → logprob: -4.511051177978516
    3. '_line' → logprob: -12.761051177978516
    4. 'l' → logprob: -15.511051177978516
    5. '_' → logprob: -15.761051177978516
    6. '	line' → logprob: -17.011051177978516
    7. 'lin' → logprob: -17.886051177978516
    8. 'li' → logprob: -19.761051177978516
    9. ' l' → logprob: -20.636051177978516
    10. '=line' → logprob: -20.636051177978516

Token 694: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01614486798644066
    2. 'in' → logprob: -4.141144752502441
    3. ' ' → logprob: -9.391144752502441
    4. 's' → logprob: -11.766144752502441
    5. 'import' → logprob: -12.141144752502441
    6. '	in' → logprob: -12.266144752502441
    7. '_' → logprob: -12.641144752502441
    8. '_in' → logprob: -14.266144752502441
    9. ' ' → logprob: -14.516144752502441
    10. 'line' → logprob: -14.766144752502441

Token 695: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004079470410943031
    2. ' sys' → logprob: -5.504079341888428
    3. '	sys' → logprob: -14.629079818725586
    4. '=sys' → logprob: -14.879079818725586
    5. '(sys' → logprob: -16.504079818725586
    6. 'stdin' → logprob: -17.754079818725586
    7. '```' → logprob: -18.504079818725586
    8. ' ' → logprob: -19.254079818725586
    9. '   ' → logprob: -19.504079818725586
    10. 'system' → logprob: -19.879079818725586

Token 696: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004630076698958874
    2. 'stdin' → logprob: -5.379630088806152
    3. '.readline' → logprob: -12.879630088806152
    4. '(stdin' → logprob: -12.879630088806152
    5. '.' → logprob: -13.004630088806152
    6. ' stdin' → logprob: -14.254630088806152
    7. 'import' → logprob: -14.504630088806152
    8. 'in' → logprob: -14.754630088806152
    9. 'input' → logprob: -15.504630088806152
    10. 'lines' → logprob: -15.504630088806152

Token 697: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.018830563873052597
    2. '.readlines' → logprob: -4.8938307762146
    3. ' in' → logprob: -5.5188307762146
    4. 'read' → logprob: -5.7688307762146
    5. '.' → logprob: -6.6438307762146
    6. ':' → logprob: -6.8938307762146
    7. ' readline' → logprob: -7.1438307762146
    8. 'rstrip' → logprob: -7.2688307762146
    9. 'strip' → logprob: -9.643830299377441
    10. 'in' → logprob: -10.143830299377441

Token 698: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18328696489334106
    2. ' lines' → logprob: -1.8082869052886963
    3. ' line' → logprob: -5.683287143707275
    4. '	lines' → logprob: -9.683286666870117
    5. ' if' → logprob: -10.933286666870117
    6. '(lines' → logprob: -11.183286666870117
    7. ' readline' → logprob: -11.308286666870117
    8. ' stripped' → logprob: -12.183286666870117
    9. '   ' → logprob: -12.183286666870117
    10. '.rstrip' → logprob: -12.183286666870117

Token 699: ' line' (ID: 2543)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.29926255345344543
    2. ' lines' → logprob: -1.924262523651123
    3. 'line' (adapté à ' line') → logprob: -2.299262523651123
    4. ' line' → logprob: -4.424262523651123
    5. 'l' → logprob: -8.674263000488281
    6. 'if' → logprob: -9.799263000488281
    7. ' if' → logprob: -10.049263000488281
    8. '   ' → logprob: -10.799263000488281
    9. ' l' → logprob: -10.924263000488281
    10. '	lines' → logprob: -11.924263000488281

Token 700: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019363632425665855
    2. '=line' → logprob: -4.1443634033203125
    3. 'rstrip' → logprob: -6.6443634033203125
    4. ' =' → logprob: -6.8943634033203125
    5. '.rstrip' → logprob: -7.3943634033203125
    6. '.strip' → logprob: -8.769363403320312
    7. 'strip' → logprob: -9.394363403320312
    8. 's' → logprob: -9.519363403320312
    9. '_strip' → logprob: -10.394363403320312
    10. '.' → logprob: -10.394363403320312

Token 701: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.128163257315464e-07
    2. ' line' → logprob: -15.5
    3. 'lines' → logprob: -24.125
    4. '=line' → logprob: -24.75
    5. '(line' → logprob: -25.125
    6. 'Line' → logprob: -25.625
    7. '	line' → logprob: -25.875
    8. '#line' → logprob: -26.0
    9. '[line' → logprob: -26.75
    10. 'lin' → logprob: -26.875

Token 702: '.rstrip' (ID: 161629)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.38820916414260864
    2. '.rstrip' → logprob: -1.1382091045379639
    3. '.' → logprob: -6.888209342956543
    4. 'rstrip' → logprob: -8.388209342956543
    5. 'strip' → logprob: -9.388209342956543
    6. ' .' → logprob: -12.888209342956543
    7. '[:-' → logprob: -13.763209342956543
    8. '_strip' → logprob: -13.888209342956543
    9. '().' → logprob: -14.763209342956543
    10. '(strip' → logprob: -14.888209342956543

Token 703: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006998331751674414
    2. '()
' → logprob: -5.506998538970947
    3. '('\' → logprob: -6.006998538970947
    4. '()\' → logprob: -7.881998538970947
    5. '(' → logprob: -10.006998062133789
    6. '("\' → logprob: -10.881998062133789
    7. '()

' → logprob: -12.506998062133789
    8. '();' → logprob: -13.256998062133789
    9. '<|end|>' → logprob: -13.506998062133789
    10. '()
' → logprob: -13.631998062133789

Token 704: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006717267446219921
    2. '\n' → logprob: -5.006717205047607
    3. 'r' → logprob: -13.256717681884766
    4. 'newline' → logprob: -15.881717681884766
    5. ''\' → logprob: -17.881717681884766
    6. ')' → logprob: -18.256717681884766
    7. '\r' → logprob: -18.381717681884766
    8. '')' → logprob: -18.631717681884766
    9. '\u' → logprob: -19.006717681884766
    10. '
' → logprob: -19.256717681884766

Token 705: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03943164646625519
    2. '')
' → logprob: -3.539431571960449
    3. ')' → logprob: -4.664431571960449
    4. ')
' → logprob: -9.16443157196045
    5. '")' → logprob: -9.41443157196045
    6. '')
' → logprob: -11.28943157196045
    7. '');' → logprob: -12.91443157196045
    8. ' )' → logprob: -13.41443157196045
    9. ' ')' → logprob: -13.41443157196045
    10. '")
' → logprob: -13.78943157196045

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007138486485928297
    2. ' lines' → logprob: -5.132138252258301
    3. 'lines' → logprob: -6.882138252258301
    4. ' if' → logprob: -9.1321382522583
    5. 'if' → logprob: -10.1321382522583
    6. '(lines' → logprob: -11.0071382522583
    7. '	lines' → logprob: -11.5071382522583
    8. '<|end|>' → logprob: -12.1321382522583
    9. '_lines' → logprob: -14.5071382522583
    10. '[' → logprob: -14.6321382522583

Token 707: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.225947305560112
    2. 'lines' → logprob: -1.6009472608566284
    3. '   ' → logprob: -7.975947380065918
    4. ' if' → logprob: -9.100947380065918
    5. ' lines' → logprob: -9.600947380065918
    6. 'line' → logprob: -12.100947380065918
    7. '(lines' → logprob: -13.100947380065918
    8. '	lines' → logprob: -13.475947380065918
    9. '	if' → logprob: -14.600947380065918
    10. 'Lines' → logprob: -14.975947380065918

Token 708: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5004613995552063
    2. 'line' → logprob: -1.2504613399505615
    3. ' not' → logprob: -2.3754613399505615
    4. 'not' → logprob: -4.250461578369141
    5. 'len' → logprob: -10.00046157836914
    6. ' ' → logprob: -10.62546157836914
    7. ' len' → logprob: -10.62546157836914
    8. '	line' → logprob: -11.25046157836914
    9. '#line' → logprob: -11.50046157836914
    10. '(line' → logprob: -11.62546157836914

Token 709: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12696978449821472
    2. ' ==' → logprob: -2.126969814300537
    3. '=' → logprob: -11.626969337463379
    4. '.startswith' → logprob: -11.626969337463379
    5. '==
' → logprob: -11.626969337463379
    6. '()==' → logprob: -12.251969337463379
    7. ')==' → logprob: -12.876969337463379
    8. '.strip' → logprob: -13.251969337463379
    9. '===' → logprob: -13.251969337463379
    10. '=='' → logprob: -13.626969337463379

Token 710: ' ''' (ID: 8686)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.3029131591320038
    2. '""' → logprob: -1.6779131889343262
    3. '"' → logprob: -3.177913188934326
    4. ''' → logprob: -3.552913188934326
    5. '"":' → logprob: -5.802913188934326
    6. ' ''' → logprob: -8.302912712097168
    7. ' ""' → logprob: -8.427912712097168
    8. ''#' → logprob: -8.427912712097168
    9. ''end' → logprob: -9.177912712097168
    10. '"#' → logprob: -9.427912712097168

Token 711: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5325030088424683
    2. ':' → logprob: -1.0325030088424683
    3. '   ' → logprob: -2.907503128051758
    4. '       ' → logprob: -6.282503128051758
    5. ' or' → logprob: -9.532503128051758
    6. '	break' → logprob: -10.157503128051758
    7. '<|end|>' → logprob: -10.157503128051758
    8. ':
' → logprob: -10.282503128051758
    9. ' ' → logprob: -11.157503128051758
    10. ':

' → logprob: -11.532503128051758

Token 712: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2578376531600952
    2. 'len' → logprob: -1.5078376531600952
    3. ' lines' → logprob: -5.632837772369385
    4. ' len' → logprob: -7.132837772369385
    5. 'not' → logprob: -7.257837772369385
    6. ' not' → logprob: -7.757837772369385
    7. 'break' → logprob: -8.382837295532227
    8. 'False' → logprob: -9.382837295532227
    9. '(lines' → logprob: -11.007837295532227
    10. '   ' → logprob: -11.007837295532227

Token 713: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40983274579048157
    2. '==' → logprob: -1.4098327159881592
    3. '!=' → logprob: -3.034832715988159
    4. ':
' → logprob: -3.534832715988159
    5. '<|end|>' → logprob: -5.659832954406738
    6. ' ==' → logprob: -6.159832954406738
    7. ' !=' → logprob: -6.409832954406738
    8. '   ' → logprob: -6.784832954406738
    9. '>=' → logprob: -6.909832954406738
    10. '):' → logprob: -6.909832954406738

Token 714: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07542119175195694
    2. '       ' → logprob: -2.825421094894409
    3. ':' → logprob: -4.450421333312988
    4. ':
' → logprob: -6.450421333312988
    5. '	break' → logprob: -10.200421333312988
    6. ' ' → logprob: -11.325421333312988
    7. '     ' → logprob: -11.575421333312988
    8. ' break' → logprob: -11.575421333312988
    9. '    ' → logprob: -11.825421333312988
    10. '```' → logprob: -11.950421333312988

Token 715: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17267224192619324
    2. ' break' → logprob: -2.5476722717285156
    3. '       ' → logprob: -2.6726722717285156
    4. 'break' → logprob: -4.547672271728516
    5. ' shape' → logprob: -8.672672271728516
    6. ' shapes' → logprob: -9.297672271728516
    7. 'input' → logprob: -9.422672271728516
    8. '	break' → logprob: -9.547672271728516
    9. ' input' → logprob: -10.172672271728516
    10. '#' (adapté à ' #') → logprob: -10.297672271728516

Token 716: ' process' (ID: 2273)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24224254488945007
    2. 'shape' → logprob: -1.7422425746917725
    3. 'break' → logprob: -3.8672425746917725
    4. '   ' → logprob: -5.242242336273193
    5. '       ' → logprob: -5.867242336273193
    6. ' input' → logprob: -5.992242336273193
    7. ' shape' → logprob: -6.492242336273193
    8. 'block' → logprob: -6.742242336273193
    9. '#' → logprob: -6.867242336273193
    10. ' break' → logprob: -7.117242336273193

Token 717: ' lines' (ID: 8698)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.8855723738670349
    2. '       ' → logprob: -1.3855724334716797
    3. ' shape' → logprob: -2.6355724334716797
    4. 'tokens' → logprob: -2.7605724334716797
    5. 'input' → logprob: -2.8855724334716797
    6. 'token' → logprob: -3.0105724334716797
    7. '<|end|>' → logprob: -3.2605724334716797
    8. '   ' → logprob: -4.76057243347168
    9. 'lines' → logprob: -5.01057243347168
    10. 'def' → logprob: -5.01057243347168

Token 718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09733836352825165
    2. '   ' → logprob: -2.4723384380340576
    3. '<|end|>' → logprob: -6.2223381996154785
    4. ' shape' → logprob: -6.3473381996154785
    5. '        
' → logprob: -6.7223381996154785
    6. '
' → logprob: -6.7223381996154785
    7. ',' → logprob: -7.5973381996154785
    8. '    
' → logprob: -7.9723381996154785
    9. '<|end|>' → logprob: -8.222338676452637
    10. 'shape' → logprob: -8.597338676452637

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036595722194761038
    2. '<|end|>' → logprob: -6.378659725189209
    3. '   ' → logprob: -6.503659725189209
    4. ',' → logprob: -8.62865924835205
    5. '        
' → logprob: -9.50365924835205
    6. '<|end|>' → logprob: -10.25365924835205
    7. ' shape' → logprob: -10.62865924835205
    8. '#' → logprob: -11.00365924835205
    9. '
' → logprob: -11.00365924835205
    10. 'tokens' → logprob: -11.25365924835205

Token 720: ' shape' (ID: 9591)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.527167558670044
    2. 'shape' (adapté à ' shape') → logprob: -1.652167558670044
    3. 'char' → logprob: -2.527167558670044
    4. '   ' → logprob: -3.777167558670044
    5. 'letter' → logprob: -4.027167320251465
    6. 'word' → logprob: -4.277167320251465
    7. 'block' → logprob: -4.527167320251465
    8. 'text' → logprob: -4.902167320251465
    9. 'if' → logprob: -5.027167320251465
    10. 'ch' → logprob: -5.027167320251465

Token 721: '_input' (ID: 12507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11001496762037277
    2. '=' → logprob: -2.3600149154663086
    3. '_input' → logprob: -5.360014915466309
    4. '_lines' → logprob: -5.860014915466309
    5. '_' → logprob: -7.610014915466309
    6. '_normal' → logprob: -7.735014915466309
    7. '_raw' → logprob: -7.985014915466309
    8. 's' → logprob: -8.485014915466309
    9. '_data' → logprob: -8.610014915466309
    10. '_norm' → logprob: -9.235014915466309

Token 722: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269734650850296
    2. '=' → logprob: -2.1269733905792236
    3. '_normal' → logprob: -10.876973152160645
    4. 's' → logprob: -12.376973152160645
    5. '_' → logprob: -12.376973152160645
    6. ' =
' → logprob: -12.876973152160645
    7. '_norm' → logprob: -12.876973152160645
    8. 'normalized' → logprob: -13.001973152160645
    9. '_shape' → logprob: -13.126973152160645
    10. ' ' → logprob: -13.126973152160645

Token 723: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6181203126907349
    2. '[' → logprob: -1.3681203126907349
    3. 'normalize' → logprob: -1.7431203126907349
    4. '[line' → logprob: -3.9931201934814453
    5. '[]
' → logprob: -5.243120193481445
    6. '[n' → logprob: -5.993120193481445
    7. '[s' → logprob: -6.993120193481445
    8. ' [' → logprob: -7.118120193481445
    9. '[]' → logprob: -7.243120193481445
    10. ' lines' → logprob: -7.368120193481445

Token 724: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6780862212181091
    2. '
' → logprob: -1.803086280822754
    3. 'normalized' → logprob: -2.053086280822754
    4. '=' → logprob: -2.428086280822754
    5. '   ' → logprob: -2.928086280822754
    6. '_normal' → logprob: -3.053086280822754
    7. ' normalized' → logprob: -6.053086280822754
    8. '[' → logprob: -6.803086280822754
    9. '    
' → logprob: -7.053086280822754
    10. 'shape' → logprob: -7.178086280822754

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034526627510786057
    2. '<|end|>' → logprob: -4.034526824951172
    3. '
' → logprob: -4.784526824951172
    4. '   ' → logprob: -5.409526824951172
    5. 'shape' → logprob: -6.909526824951172
    6. ' lines' → logprob: -7.159526824951172
    7. '<|end|>' → logprob: -7.534526824951172
    8. '        
' → logprob: -7.784526824951172
    9. ' shape' → logprob: -8.784526824951172
    10. 'tokens' → logprob: -9.534526824951172

Token 726: ' shape' (ID: 9591)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.9922405481338501
    2. 'shape' (adapté à ' shape') → logprob: -1.11724054813385
    3. 'norm' → logprob: -1.61724054813385
    4. 'lines' → logprob: -2.6172404289245605
    5. ' normalized' → logprob: -4.4922404289245605
    6. ' shape' → logprob: -4.8672404289245605
    7. ' lines' → logprob: -5.4922404289245605
    8. '   ' → logprob: -5.4922404289245605
    9. ' norm' → logprob: -6.6172404289245605
    10. 'n' → logprob: -7.2422404289245605

Token 727: '_norm' (ID: 46119)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.15103505551815033
    2. '=' → logprob: -2.7760350704193115
    3. ' =' → logprob: -3.1510350704193115
    4. '_normal' → logprob: -3.5260350704193115
    5. '_norm' → logprob: -6.026034832000732
    6. '_' → logprob: -6.151034832000732
    7. '_lines' → logprob: -8.27603530883789
    8. '=input' → logprob: -8.27603530883789
    9. 'input' → logprob: -8.52603530883789
    10. '_inputs' → logprob: -9.65103530883789

Token 728: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858953505754471
    2. ' =' → logprob: -3.0485894680023193
    3. '=input' → logprob: -14.173589706420898
    4. 'd' → logprob: -14.548589706420898
    5. 'ed' → logprob: -15.298589706420898
    6. '=[]' → logprob: -15.548589706420898
    7. '＝' → logprob: -15.673589706420898
    8. '=
' → logprob: -16.7985897064209
    9. '=_' → logprob: -16.7985897064209
    10. '=

' → logprob: -17.0485897064209

Token 729: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.02324652671813965
    2. ' normalize' → logprob: -3.7732465267181396
    3. 'normal' → logprob: -14.273246765136719
    4. 'normalized' → logprob: -15.898246765136719
    5. '(normal' → logprob: -16.14824676513672
    6. '   ' → logprob: -16.52324676513672
    7. ' normal' → logprob: -18.52324676513672
    8. 'norm' → logprob: -18.77324676513672
    9. ' normalized' → logprob: -18.77324676513672
    10. '.normalize' → logprob: -19.02324676513672

Token 730: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'shape' → logprob: -15.625000953674316
    4. '(sh' → logprob: -16.875
    5. '(ship' → logprob: -19.25
    6. '(
' → logprob: -19.75
    7. ' shape' → logprob: -19.875
    8. '.shape' → logprob: -20.75
    9. ' (' → logprob: -21.0
    10. '((' → logprob: -21.125

Token 731: '_input' (ID: 12507)
  Prédit: '(shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -0.6338726282119751
    2. '_input' → logprob: -0.7588726282119751
    3. 'shape' → logprob: -7.3838725090026855
    4. 'input' → logprob: -8.133872985839844
    5. ')' → logprob: -8.258872985839844
    6. 'Input' → logprob: -10.508872985839844
    7. '(' → logprob: -11.008872985839844
    8. ')
' → logprob: -11.508872985839844
    9. '```' → logprob: -11.758872985839844
    10. ' shape' → logprob: -11.883872985839844

Token 732: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25208666920661926
    2. ')
' → logprob: -1.5020866394042969
    3. '   ' → logprob: -9.502086639404297
    4. '       ' → logprob: -10.002086639404297
    5. ')
' → logprob: -10.502086639404297
    6. ')

' → logprob: -11.752086639404297
    7. ' )' → logprob: -14.752086639404297
    8. ' )
' → logprob: -15.127086639404297
    9. ' ' → logprob: -15.502086639404297
    10. '<|end|>' → logprob: -15.752086639404297

Token 733: '       ' (ID: 309)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.0754048302769661
    2. 'matched' → logprob: -2.8254048824310303
    3. 'match' → logprob: -5.575404644012451
    4. 'for' → logprob: -5.575404644012451
    5. '       ' → logprob: -5.825404644012451
    6. 'matches' → logprob: -6.575404644012451
    7. 'result' → logprob: -7.700404644012451
    8. 'best' → logprob: -7.825404644012451
    9. '   ' → logprob: -8.95040512084961
    10. ' found' → logprob: -9.20040512084961

Token 734: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.042707961052656174
    2. 'matched' → logprob: -3.292707920074463
    3. 'for' → logprob: -5.417707920074463
    4. 'match' → logprob: -8.667708396911621
    5. 'matches' → logprob: -11.167708396911621
    6. 'output' → logprob: -11.542708396911621
    7. 'result' → logprob: -11.917708396911621
    8. 'recognized' → logprob: -12.542708396911621
    9. 'shape' → logprob: -12.792708396911621
    10. ' found' → logprob: -13.167708396911621

Token 735: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16034375131130219
    2. ' =' → logprob: -1.9103437662124634
    3. '=False' → logprob: -9.160344123840332
    4. '_' → logprob: -11.910344123840332
    5. '_shape' → logprob: -13.410344123840332
    6. '=
' → logprob: -13.535344123840332
    7. '_=' → logprob: -14.035344123840332
    8. ':' → logprob: -14.160344123840332
    9. '_for' → logprob: -14.285344123840332
    10. '=None' → logprob: -14.410344123840332

Token 736: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007101670489646494
    2. ' False' → logprob: -7.2507100105285645
    3. 'None' → logprob: -15.125710487365723
    4. '(False' → logprob: -19.250709533691406
    5. '   ' → logprob: -19.375709533691406
    6. 'F' → logprob: -19.750709533691406
    7. '=False' → logprob: -20.625709533691406
    8. 'false' → logprob: -20.875709533691406
    9. 'True' → logprob: -21.125709533691406
    10. 'Fal' → logprob: -21.875709533691406

Token 737: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022717837244272232
    2. ' for' → logprob: -4.5227179527282715
    3. 'for' → logprob: -4.6477179527282715
    4. '<|end|>' → logprob: -6.5227179527282715
    5. '
' → logprob: -7.8977179527282715
    6. '   ' → logprob: -9.022717475891113
    7. '<|end|>' → logprob: -10.772717475891113
    8. ',' → logprob: -11.022717475891113
    9. '        
' → logprob: -12.147717475891113
    10. '	for' → logprob: -12.647717475891113

Token 738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0607280433177948
    2. ' for' → logprob: -3.435728073120117
    3. 'for' → logprob: -3.685728073120117
    4. '   ' → logprob: -6.435728073120117
    5. '<|end|>' → logprob: -10.685728073120117
    6. ' ' → logprob: -12.560728073120117
    7. '        
' → logprob: -12.810728073120117
    8. '	for' → logprob: -12.810728073120117
    9. '
' → logprob: -13.310728073120117
    10. '           ' → logprob: -14.435728073120117

Token 739: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.7697225252486533e-06
    2. ' for' → logprob: -13.000003814697266
    3. '       ' → logprob: -13.500003814697266
    4. '   ' → logprob: -17.000003814697266
    5. '	for' → logprob: -19.875003814697266
    6. '        
' → logprob: -20.125003814697266
    7. '
' → logprob: -20.750003814697266
    8. 'found' → logprob: -21.375003814697266
    9. '```' → logprob: -22.125003814697266
    10. 'best' → logprob: -22.875003814697266

Token 740: ' k' (ID: 372)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.584510326385498
    2. ' key' → logprob: -1.209510326385498
    3. 'k' → logprob: -2.834510326385498
    4. 'ch' → logprob: -2.834510326385498
    5. ' ch' → logprob: -4.209510326385498
    6. 'char' → logprob: -5.834510326385498
    7. ' k' → logprob: -5.959510326385498
    8. ' letter' → logprob: -5.959510326385498
    9. 'c' → logprob: -6.584510326385498
    10. 'letter' → logprob: -6.709510326385498

Token 741: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04294221103191376
    2. 'in' → logprob: -3.2929422855377197
    3. ',' → logprob: -5.667942047119141
    4. ' ' → logprob: -6.917942047119141
    5. '<|end|>' → logprob: -8.66794204711914
    6. ' ,' → logprob: -9.04294204711914
    7. '	in' → logprob: -9.66794204711914
    8. ' i' → logprob: -10.91794204711914
    9. ' shapes' → logprob: -11.16794204711914
    10. 'i' → logprob: -11.66794204711914

Token 742: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0028998551424592733
    2. ' v' → logprob: -6.377899646759033
    3. 'shape' → logprob: -6.752899646759033
    4. ' shape' → logprob: -10.752900123596191
    5. 's' → logprob: -12.377900123596191
    6. 'sh' → logprob: -13.627900123596191
    7. 'value' → logprob: -13.752900123596191
    8. 'val' → logprob: -14.502900123596191
    9. '```' → logprob: -15.127900123596191
    10. ' s' → logprob: -15.752900123596191

Token 743: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231354832649231
    2. ' in' → logprob: -0.8981354832649231
    3. ' ' → logprob: -13.0231351852417
    4. 'import' → logprob: -13.0231351852417
    5. '```' → logprob: -13.5231351852417
    6. '<|end|>' → logprob: -13.6481351852417
    7. '	in' → logprob: -13.8981351852417
    8. ',' → logprob: -14.0231351852417
    9. ')' → logprob: -14.1481351852417
    10. '   ' → logprob: -14.2731351852417

Token 744: ' shapes' (ID: 29447)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.5261902213096619
    2. ' in' → logprob: -1.7761902809143066
    3. ' shapes' → logprob: -1.7761902809143066
    4. 'in' → logprob: -2.6511902809143066
    5. '_shapes' → logprob: -11.651189804077148
    6. ' sh' → logprob: -12.526189804077148
    7. 'shape' → logprob: -13.526189804077148
    8. '	sh' → logprob: -13.776189804077148
    9. 's' → logprob: -14.026189804077148
    10. '```' → logprob: -14.776189804077148

Token 745: '.items' (ID: 19607)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3697180449962616
    2. '.items' → logprob: -1.494718074798584
    3. 'items' → logprob: -3.119718074798584
    4. ' in' → logprob: -3.369718074798584
    5. '.' → logprob: -5.619718074798584
    6. '_items' → logprob: -6.869718074798584
    7. '.iteritems' → logprob: -6.869718074798584
    8. ':' → logprob: -8.494717597961426
    9. '```' → logprob: -9.994717597961426
    10. ' items' → logprob: -10.244717597961426

Token 746: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007912860601209104
    2. '()' → logprob: -7.250791072845459
    3. '():
' → logprob: -9.500791549682617
    4. '()>' → logprob: -13.500791549682617
    5. '()">' → logprob: -13.750791549682617
    6. ' ():' → logprob: -14.250791549682617
    7. '();' → logprob: -14.375791549682617
    8. '():

' → logprob: -14.375791549682617
    9. '()`' → logprob: -15.125791549682617
    10. '().' → logprob: -15.500791549682617

Token 747: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26530200242996216
    2. '       ' → logprob: -2.1403019428253174
    3. '<|end|>' → logprob: -2.8903019428253174
    4. ':' → logprob: -3.3903019428253174
    5. '<|end|>' → logprob: -5.0153021812438965
    6. ' if' → logprob: -5.0153021812438965
    7. '   ' → logprob: -5.7653021812438965
    8. ':
' → logprob: -6.0153021812438965
    9. '          ' → logprob: -6.7653021812438965
    10. ',' → logprob: -7.1403021812438965

Token 748: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7181338667869568
    2. '<|end|>' → logprob: -0.8431338667869568
    3. 'if' (adapté à ' if') → logprob: -3.7181339263916016
    4. '<|end|>' → logprob: -3.9681339263916016
    5. '       ' → logprob: -4.218133926391602
    6. '           ' → logprob: -4.593133926391602
    7. ' ' → logprob: -5.718133926391602
    8. '   ' → logprob: -5.968133926391602
    9. ':' → logprob: -6.343133926391602
    10. '               ' → logprob: -6.843133926391602

Token 749: ' normalize' (ID: 44464)
  Prédit: ' shapes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shapes' → logprob: -0.17981572449207306
    2. 'sh' → logprob: -1.8048157691955566
    3. 'shape' → logprob: -10.554815292358398
    4. 'normalize' → logprob: -11.179815292358398
    5. ' shape' → logprob: -11.679815292358398
    6. ' normalize' → logprob: -12.054815292358398
    7. ' sh' → logprob: -12.429815292358398
    8. 's' → logprob: -12.804815292358398
    9. '   ' → logprob: -13.054815292358398
    10. '(sh' → logprob: -13.554815292358398

Token 750: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.000018119812012
    3. '(k' → logprob: -14.375018119812012
    4. '(
' → logprob: -15.250018119812012
    5. ' (' → logprob: -15.250018119812012
    6. '(shape' → logprob: -15.375018119812012
    7. ')' → logprob: -15.500018119812012
    8. '((' → logprob: -16.500019073486328
    9. ')(' → logprob: -16.500019073486328
    10. ')v' → logprob: -16.875019073486328

Token 751: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00868749525398016
    2. ')==' → logprob: -4.758687496185303
    3. ' )' → logprob: -10.133687019348145
    4. '==' → logprob: -10.883687019348145
    5. '))' → logprob: -12.883687019348145
    6. ')
' → logprob: -13.383687019348145
    7. 'shape' → logprob: -13.508687019348145
    8. '")' → logprob: -13.633687019348145
    9. '(s' → logprob: -14.008687019348145
    10. '')' → logprob: -14.133687019348145

Token 752: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6178164482116699
    2. '==' → logprob: -0.8678164482116699
    3. ')' → logprob: -3.74281644821167
    4. ')==' → logprob: -4.11781644821167
    5. '()==' → logprob: -7.61781644821167
    6. '()' → logprob: -9.117816925048828
    7. ' shapes' → logprob: -9.242816925048828
    8. ' )' → logprob: -9.742816925048828
    9. '[' → logprob: -9.742816925048828
    10. '==
' → logprob: -9.867816925048828

Token 753: ' shape' (ID: 9591)
  Prédit: ' shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shape' → logprob: -0.20141607522964478
    2. 'shape' → logprob: -1.701416015625
    3. '(shape' → logprob: -12.951416015625
    4. '.shape' → logprob: -14.701416015625
    5. '_shape' → logprob: -18.076416015625
    6. 'hape' → logprob: -18.451416015625
    7. ' ' → logprob: -19.701416015625
    8. ')' → logprob: -19.951416015625
    9. '```' → logprob: -19.951416015625
    10. '
' → logprob: -20.076416015625

Token 754: '_norm' (ID: 46119)
  Prédit: '_norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_norm' → logprob: 0.0
    2. 'norm' → logprob: -18.125
    3. '```' → logprob: -21.625
    4. ' norm' → logprob: -22.25
    5. '_input' → logprob: -22.25
    6. '(norm' → logprob: -22.25
    7. '_' → logprob: -22.375
    8. '_normal' → logprob: -22.875
    9. 'Norm' → logprob: -23.0
    10. '_shape' → logprob: -23.25

Token 755: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2135438472032547
    2. ':
' → logprob: -1.7135438919067383
    3. '           ' → logprob: -4.963543891906738
    4. '               ' → logprob: -5.463543891906738
    5. ' and' → logprob: -7.463543891906738
    6. '<|end|>' → logprob: -9.713543891906738
    7. '):
' → logprob: -10.338543891906738
    8. '          ' → logprob: -10.588543891906738
    9. '              ' → logprob: -10.838543891906738
    10. '                       ' → logprob: -11.088543891906738

Token 756: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004017137107439339
    2. '           ' → logprob: -8.375401496887207
    3. ' found' → logprob: -9.500401496887207
    4. 'found' → logprob: -10.625401496887207
    5. '
' → logprob: -11.375401496887207
    6. '<|end|>' → logprob: -11.375401496887207
    7. '(found' → logprob: -11.750401496887207
    8. '                   ' → logprob: -11.875401496887207
    9. '	           ' → logprob: -12.625401496887207
    10. '                       ' → logprob: -12.625401496887207

Token 757: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05455249920487404
    2. ' print' → logprob: -3.0545525550842285
    3. '               ' → logprob: -5.5545525550842285
    4. '           ' → logprob: -6.3045525550842285
    5. '       ' → logprob: -9.30455207824707
    6. '	print' → logprob: -9.30455207824707
    7. '	       ' → logprob: -10.42955207824707
    8. '   ' → logprob: -11.05455207824707
    9. '
' → logprob: -12.17955207824707
    10. '		       ' → logprob: -12.55455207824707

Token 758: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.547789674485102e-05
    2. '(k' → logprob: -10.250035285949707
    3. '{k' → logprob: -17.875036239624023
    4. ' k' → logprob: -19.625036239624023
    5. '[k' → logprob: -21.375036239624023
    6. '"k' → logprob: -22.750036239624023
    7. '	k' → logprob: -22.875036239624023
    8. ',k' → logprob: -23.125036239624023
    9. '?k' → logprob: -23.500036239624023
    10. '+k' → logprob: -23.625036239624023

Token 759: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02326434850692749
    2. ')' → logprob: -3.7732644081115723
    3. ')
' → logprob: -10.898263931274414
    4. ')

' → logprob: -15.648263931274414
    5. ')return' → logprob: -16.648263931274414
    6. '")
' → logprob: -16.898263931274414
    7. ')`
' → logprob: -17.023263931274414
    8. '               ' → logprob: -17.523263931274414
    9. '```' → logprob: -17.648263931274414
    10. ' )
' → logprob: -17.773263931274414

Token 760: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.578184497309849e-05
    2. '
' → logprob: -10.500085830688477
    3. '       ' → logprob: -10.750085830688477
    4. '                
' → logprob: -11.250085830688477
    5. '           ' → logprob: -12.125085830688477
    6. '                ' → logprob: -12.250085830688477
    7. '<|end|>' → logprob: -12.500085830688477
    8. '                   ' → logprob: -12.625085830688477
    9. '              ' → logprob: -12.875085830688477
    10. '			' → logprob: -14.375085830688477

Token 761: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.0004183986166026443
    2. ' found' → logprob: -8.000418663024902
    3. '               ' → logprob: -9.500418663024902
    4. '
' → logprob: -11.875418663024902
    5. '	found' → logprob: -14.375418663024902
    6. '       ' → logprob: -14.625418663024902
    7. '                
' → logprob: -15.875418663024902
    8. '(found' → logprob: -16.750417709350586
    9. '           ' → logprob: -17.125417709350586
    10. 'Found' → logprob: -17.250417709350586

Token 762: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002189756603911519
    2. ' =' → logprob: -6.252189636230469
    3. '=True' → logprob: -8.252189636230469
    4. '=true' → logprob: -15.127189636230469
    5. '=
' → logprob: -16.37718963623047
    6. '=False' → logprob: -17.12718963623047
    7. 'True' → logprob: -17.37718963623047
    8. '
' → logprob: -18.50218963623047
    9. '	' → logprob: -19.12718963623047
    10. 'true' → logprob: -19.50218963623047

Token 763: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '   ' → logprob: -21.000158309936523
    4. '(True' → logprob: -21.125158309936523
    5. '=True' → logprob: -21.375158309936523
    6. 'true' → logprob: -22.500158309936523
    7. 'Tr' → logprob: -23.500158309936523
    8. ' ' → logprob: -24.500158309936523
    9. 'TRUE' → logprob: -24.875158309936523
    10. '.True' → logprob: -25.000158309936523

Token 764: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018804390856530517
    2. '       ' → logprob: -9.500187873840332
    3. '		       ' → logprob: -10.375187873840332
    4. '			' → logprob: -10.625187873840332
    5. '           ' → logprob: -11.625187873840332
    6. '                   ' → logprob: -11.750187873840332
    7. '	break' → logprob: -12.125187873840332
    8. '                
' → logprob: -12.125187873840332
    9. '	           ' → logprob: -12.500187873840332
    10. '              ' → logprob: -12.625187873840332

Token 765: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008350008283741772
    2. '       ' → logprob: -7.750834941864014
    3. '		       ' → logprob: -8.375835418701172
    4. '			' → logprob: -9.125835418701172
    5. '	' → logprob: -10.500835418701172
    6. '	           ' → logprob: -11.875835418701172
    7. '	       ' → logprob: -12.250835418701172
    8. '	break' → logprob: -12.375835418701172
    9. '	               ' → logprob: -12.625835418701172
    10. '                
' → logprob: -13.000835418701172

Token 766: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -5.1689596148207784e-05
    2. ' break' → logprob: -10.000051498413086
    3. '	break' → logprob: -12.250051498413086
    4. '       ' → logprob: -13.875051498413086
    5. '               ' → logprob: -14.875051498413086
    6. '
' → logprob: -16.000051498413086
    7. '   ' → logprob: -16.875051498413086
    8. '           ' → logprob: -17.875051498413086
    9. 'br' → logprob: -18.750051498413086
    10. 'b' → logprob: -19.125051498413086

Token 767: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039623770862817764
    2. '
' → logprob: -7.875396251678467
    3. 'if' → logprob: -11.875395774841309
    4. '   ' → logprob: -12.625395774841309
    5. '        
' → logprob: -12.750395774841309
    6. '<|end|>' → logprob: -14.375395774841309
    7. '           ' → logprob: -14.500395774841309
    8. ' if' → logprob: -15.000395774841309
    9. 'else' → logprob: -15.125395774841309
    10. 'import' → logprob: -16.125396728515625

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012624423019587994
    2. 'lines' → logprob: -4.637624263763428
    3. '   ' → logprob: -6.387624263763428
    4. ' lines' → logprob: -7.512624263763428
    5. 'else' → logprob: -7.512624263763428
    6. 'if' → logprob: -9.762624740600586
    7. '	lines' → logprob: -11.387624740600586
    8. '           ' → logprob: -12.137624740600586
    9. '<|end|>' → logprob: -12.137624740600586
    10. '(lines' → logprob: -12.512624740600586

Token 769: ' if' (ID: 538)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.05234220623970032
    2. '   ' → logprob: -3.802342176437378
    3. 'if' (adapté à ' if') → logprob: -3.802342176437378
    4. '       ' → logprob: -5.177342414855957
    5. ' lines' → logprob: -7.802342414855957
    6. 'else' → logprob: -8.177342414855957
    7. ' if' → logprob: -10.802342414855957
    8. '(lines' → logprob: -13.052342414855957
    9. '	lines' → logprob: -13.177342414855957
    10. 'elif' → logprob: -14.927342414855957

Token 770: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.08018451929092407
    2. ' not' → logprob: -2.5801844596862793
    3. 'found' → logprob: -6.705184459686279
    4. ' found' → logprob: -10.205184936523438
    5. '   ' → logprob: -11.205184936523438
    6. '
' → logprob: -11.330184936523438
    7. 'True' → logprob: -12.455184936523438
    8. '	not' → logprob: -13.955184936523438
    9. '!' → logprob: -14.580184936523438
    10. 'n' → logprob: -15.205184936523438

Token 771: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.474078506231308
    2. 'found' → logprob: -0.9740785360336304
    3. '	found' → logprob: -13.599078178405762
    4. '_found' → logprob: -16.099079132080078
    5. '(found' → logprob: -16.599079132080078
    6. 'Found' → logprob: -17.599079132080078
    7. ' ' → logprob: -18.849079132080078
    8. '   ' → logprob: -20.099079132080078
    9. ' ' → logprob: -20.224079132080078
    10. '
' → logprob: -20.599079132080078

Token 772: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1313115805387497
    2. ':
' → logprob: -2.1313116550445557
    3. 'print' → logprob: -5.881311416625977
    4. '           ' → logprob: -7.131311416625977
    5. '       ' → logprob: -8.381311416625977
    6. '<|end|>' → logprob: -9.006311416625977
    7. ' print' → logprob: -9.381311416625977
    8. '(print' → logprob: -9.631311416625977
    9. '():
' → logprob: -9.881311416625977
    10. '   ' → logprob: -10.381311416625977

Token 773: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6678850650787354
    2. '       ' → logprob: -1.4178850650787354
    3. '           ' → logprob: -1.4178850650787354
    4. ' print' → logprob: -6.042884826660156
    5. '   ' → logprob: -7.917884826660156
    6. '```' → logprob: -11.542884826660156
    7. '               ' → logprob: -12.667884826660156
    8. '	print' → logprob: -13.042884826660156
    9. '	       ' → logprob: -13.292884826660156
    10. ' ' → logprob: -15.292884826660156

Token 774: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7729658540920354e-05
    2. ' print' → logprob: -10.500027656555176
    3. '	print' → logprob: -16.875028610229492
    4. '       ' → logprob: -16.875028610229492
    5. '           ' → logprob: -18.750028610229492
    6. '   ' → logprob: -19.125028610229492
    7. '```' → logprob: -20.500028610229492
    8. '               ' → logprob: -21.375028610229492
    9. '.print' → logprob: -21.625028610229492
    10. '
' → logprob: -21.875028610229492

Token 775: '("?' (ID: 156664)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.010460618883371353
    2. '"' → logprob: -5.13546085357666
    3. ''' → logprob: -6.38546085357666
    4. 'UNKNOWN' → logprob: -6.63546085357666
    5. ''?' → logprob: -7.76046085357666
    6. '"?' → logprob: -8.26046085357666
    7. '?"' → logprob: -8.38546085357666
    8. '0' → logprob: -9.63546085357666
    9. '?'' → logprob: -9.88546085357666
    10. 'QUESTION' → logprob: -10.01046085357666

Token 776: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.002499794587492943
    2. ')' → logprob: -6.002499580383301
    3. '")
' → logprob: -11.3774995803833
    4. '<|end|>' → logprob: -11.8774995803833
    5. '')' → logprob: -13.2524995803833
    6. '?' → logprob: -13.5024995803833
    7. ')")' → logprob: -14.2524995803833
    8. '"' → logprob: -14.6274995803833
    9. '```' → logprob: -14.6274995803833
    10. '");' → logprob: -14.7524995803833

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05655525624752045
    2. '   ' → logprob: -2.9315552711486816
    3. 'lines' → logprob: -6.806555271148682
    4. '<|end|>' → logprob: -8.056554794311523
    5. '
' → logprob: -9.181554794311523
    6. ' lines' → logprob: -9.431554794311523
    7. 'else' → logprob: -11.306554794311523
    8. '```' → logprob: -11.431554794311523
    9. '<|end|>' → logprob: -11.806554794311523
    10. '        
' → logprob: -12.181554794311523

Token 778: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.049704473465681076
    2. ' lines' → logprob: -3.0497045516967773
    3. '   ' → logprob: -6.799704551696777
    4. '	lines' → logprob: -13.549704551696777
    5. '       ' → logprob: -14.674704551696777
    6. '(lines' → logprob: -14.924704551696777
    7. 'break' → logprob: -15.424704551696777
    8. '
' → logprob: -16.79970359802246
    9. '    
' → logprob: -17.04970359802246
    10. '.lines' → logprob: -18.04970359802246

Token 779: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5928495486150496e-05
    2. '=[]' → logprob: -11.750016212463379
    3. '.clear' → logprob: -12.375016212463379
    4. ' =' → logprob: -12.500016212463379
    5. '[:]' → logprob: -17.250015258789062
    6. '=}' → logprob: -18.250015258789062
    7. '.=' → logprob: -18.375015258789062
    8. '＝' → logprob: -19.375015258789062
    9. '=[]
' → logprob: -20.250015258789062
    10. '==' → logprob: -20.250015258789062

Token 780: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -6.051066520740278e-05
    2. '[]
' → logprob: -10.250060081481934
    3. '[]>' → logprob: -11.375060081481934
    4. '[]}' → logprob: -11.875060081481934
    5. '=[]' → logprob: -13.125060081481934
    6. ' []' → logprob: -13.500060081481934
    7. '[])' → logprob: -13.625060081481934
    8. '```' → logprob: -14.750060081481934
    9. '[]"' → logprob: -15.250060081481934
    10. '[]

' → logprob: -15.375060081481934

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016444168984889984
    2. 'else' → logprob: -4.141444206237793
    3. 'elif' → logprob: -8.141444206237793
    4. ' else' → logprob: -10.141444206237793
    5. '```' → logprob: -10.766444206237793
    6. 'line' → logprob: -11.016444206237793
    7. '<|end|>' → logprob: -11.141444206237793
    8. 'lines' → logprob: -11.266444206237793
    9. 'if' → logprob: -12.891444206237793
    10. ' lines' → logprob: -13.391444206237793

Token 782: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.34360766410827637
    2. '   ' → logprob: -1.3436076641082764
    3. 'elif' (adapté à ' elif') → logprob: -4.0936079025268555
    4. 'lines' → logprob: -4.5936079025268555
    5. 'if' → logprob: -6.9686079025268555
    6. '```' → logprob: -7.0936079025268555
    7. '<|end|>' → logprob: -7.4686079025268555
    8. ' else' → logprob: -8.718607902526855
    9. '...' → logprob: -8.968607902526855
    10. 'shape' → logprob: -9.968607902526855

Token 783: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.18839676678180695
    2. 'len' → logprob: -1.8133968114852905
    3. ' line' → logprob: -4.93839693069458
    4. ' len' → logprob: -6.56339693069458
    5. 'set' → logprob: -11.563396453857422
    6. 'all' → logprob: -11.688396453857422
    7. ' ' → logprob: -12.188396453857422
    8. '(line' → logprob: -12.438396453857422
    9. '	line' → logprob: -13.563396453857422
    10. 'lines' → logprob: -13.563396453857422

Token 784: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10466812551021576
    2. ' !=' → logprob: -2.729668140411377
    3. '!='' → logprob: -3.854668140411377
    4. '.startswith' → logprob: -5.479668140411377
    5. ':' → logprob: -5.854668140411377
    6. '!="' → logprob: -6.354668140411377
    7. '==' → logprob: -7.229668140411377
    8. '.is' → logprob: -7.354668140411377
    9. '!==' → logprob: -7.604668140411377
    10. '   ' → logprob: -7.854668140411377

Token 785: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.38735365867614746
    2. ''' → logprob: -1.1373536586761475
    3. '""' → logprob: -8.012353897094727
    4. '"' → logprob: -8.887353897094727
    5. ''all' → logprob: -13.262353897094727
    6. ' ''' → logprob: -13.387353897094727
    7. ''\' → logprob: -13.387353897094727
    8. '"":' → logprob: -13.512353897094727
    9. '''
' → logprob: -13.637353897094727
    10. ' '':
' → logprob: -14.012353897094727

Token 786: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5013250708580017
    2. '       ' → logprob: -1.0013251304626465
    3. ' lines' → logprob: -3.7513251304626465
    4. ':
' → logprob: -6.7513251304626465
    5. 'lines' → logprob: -7.0013251304626465
    6. '	lines' → logprob: -7.1263251304626465
    7. '(lines' → logprob: -7.7513251304626465
    8. ':' → logprob: -9.751324653625488
    9. ' and' → logprob: -11.751324653625488
    10. '.lines' → logprob: -12.751324653625488

Token 787: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -9.088346359931165e-07
    2. ' lines' → logprob: -14.000000953674316
    3. '	lines' → logprob: -18.625
    4. '   ' → logprob: -20.375
    5. '(lines' → logprob: -21.25
    6. 'line' → logprob: -22.0
    7. '
' → logprob: -23.875
    8. '.lines' → logprob: -24.0
    9. 'layers' → logprob: -24.875
    10. 'Lines' → logprob: -25.125

Token 788: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003863438032567501
    2. '.' → logprob: -7.8753862380981445
    3. 'append' → logprob: -12.375386238098145
    4. '.extend' → logprob: -14.000386238098145
    5. '.app' → logprob: -14.375386238098145
    6. '.Append' → logprob: -15.375386238098145
    7. '+=' → logprob: -16.12538719177246
    8. ' .' → logprob: -16.37538719177246
    9. '.ap' → logprob: -16.87538719177246
    10. '.setdefault' → logprob: -17.00038719177246

Token 789: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -5.080963092041202e-06
    2. '(line' → logprob: -12.250004768371582
    3. ' line' → logprob: -15.500004768371582
    4. '[line' → logprob: -20.1250057220459
    5. '#line' → logprob: -22.8750057220459
    6. '	line' → logprob: -23.0000057220459
    7. '=line' → logprob: -23.1250057220459
    8. 'list' → logprob: -23.6250057220459
    9. 'Line' → logprob: -25.2500057220459
    10. '_line' → logprob: -26.1250057220459

Token 790: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2522648274898529
    2. '<|end|>' → logprob: -1.5022648572921753
    3. '<|end|>' → logprob: -8.252264976501465
    4. '")' → logprob: -10.752264976501465
    5. '
' → logprob: -11.252264976501465
    6. '```' → logprob: -11.502264976501465
    7. '')' → logprob: -11.502264976501465
    8. ')
' → logprob: -12.252264976501465
    9. '}' → logprob: -12.377264976501465
    10. ')return' → logprob: -13.127264976501465

Token 791: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2526978850364685
    2. '#' → logprob: -1.5026979446411133
    3. 'for' → logprob: -8.002697944641113
    4. '<|end|>' → logprob: -8.252697944641113
    5. '```' → logprob: -9.502697944641113
    6. '
' → logprob: -9.502697944641113
    7. '[' → logprob: -11.627697944641113
    8. ' if' → logprob: -12.252697944641113
    9. 'If' → logprob: -12.502697944641113
    10. 'import' → logprob: -13.877697944641113

Token 792: ' last' (ID: 2174)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030639342963695526
    2. '<|end|>' → logprob: -3.905639410018921
    3. '#' → logprob: -5.030639171600342
    4. '```' → logprob: -6.280639171600342
    5. ' if' → logprob: -7.405639171600342
    6. 'for' → logprob: -7.530639171600342
    7. '
' → logprob: -9.0306396484375
    8. '...' → logprob: -9.2806396484375
    9. 'while' → logprob: -10.0306396484375
    10. '[' → logprob: -10.0306396484375

Token 793: ' dataset' (ID: 20830)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5768025517463684
    2. ' if' → logprob: -0.8268025517463684
    3. '```' → logprob: -7.951802730560303
    4. '
' → logprob: -9.201802253723145
    5. '<|end|>' → logprob: -9.326802253723145
    6. ' ' → logprob: -9.576802253723145
    7. ' lines' → logprob: -9.576802253723145
    8. '   ' → logprob: -10.201802253723145
    9. ' 
' → logprob: -10.576802253723145
    10. '#' → logprob: -11.326802253723145

Token 794: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008768046391196549
    2. ' if' → logprob: -7.6258769035339355
    3. '
' → logprob: -8.625876426696777
    4. '<|end|>' → logprob: -9.000876426696777
    5. '```' → logprob: -10.250876426696777
    6. ';if' → logprob: -11.125876426696777
    7. '#' → logprob: -11.500876426696777
    8. 'shape' → logprob: -12.000876426696777
    9. ',' → logprob: -12.375876426696777
    10. '[' → logprob: -13.375876426696777

Token 795: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3306015716807451e-05
    2. 'shape' → logprob: -11.25001335144043
    3. ' if' → logprob: -16.00001335144043
    4. '```' → logprob: -16.00001335144043
    5. 'line' → logprob: -17.50001335144043
    6. 'lines' → logprob: -19.00001335144043
    7. 'elif' → logprob: -19.50001335144043
    8. '{
' → logprob: -20.25001335144043
    9. '
' → logprob: -20.87501335144043
    10. '   ' → logprob: -21.12501335144043

Token 796: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0067182136699557304
    2. ' lines' → logprob: -5.006718158721924
    3. 'len' → logprob: -12.881718635559082
    4. '(lines' → logprob: -16.131717681884766
    5. '	lines' → logprob: -16.131717681884766
    6. ' len' → logprob: -17.631717681884766
    7. 'line' → logprob: -18.006717681884766
    8. '   ' → logprob: -19.756717681884766
    9. 'lin' → logprob: -20.256717681884766
    10. ' ' → logprob: -21.131717681884766

Token 797: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37666139006614685
    2. ':
' → logprob: -1.6266614198684692
    3. '!=' → logprob: -2.2516613006591797
    4. ' !=' → logprob: -4.62666130065918
    5. '==' → logprob: -6.62666130065918
    6. '>' → logprob: -7.87666130065918
    7. '   ' → logprob: -8.75166130065918
    8. '=' → logprob: -8.87666130065918
    9. '):
' → logprob: -10.12666130065918
    10. ')' → logprob: -10.25166130065918

Token 798: '   ' (ID: 271)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.20560792088508606
    2. '   ' → logprob: -1.7056078910827637
    3. ' shape' → logprob: -5.705607891082764
    4. '.shape' → logprob: -8.455608367919922
    5. '```' → logprob: -8.705608367919922
    6. 'line' → logprob: -8.830608367919922
    7. '(shape' → logprob: -9.080608367919922
    8. '{
' → logprob: -9.205608367919922
    9. '
' → logprob: -10.455608367919922
    10. '_shape' → logprob: -10.955608367919922

Token 799: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' (adapté à ' shape') → logprob: -2.3319124011322856e-05
    2. 'line' → logprob: -11.000022888183594
    3. ' shape' → logprob: -12.750022888183594
    4. '   ' → logprob: -13.375022888183594
    5. 'lines' → logprob: -13.750022888183594
    6. '.shape' → logprob: -14.875022888183594
    7. '
' → logprob: -14.875022888183594
    8. '{
' → logprob: -15.375022888183594
    9. '```' → logprob: -16.250022888183594
    10. '(shape' → logprob: -16.875022888183594

Token 800: '_input' (ID: 12507)
  Prédit: '_norm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_norm' → logprob: -0.3132815659046173
    2. '_input' → logprob: -1.313281536102295
    3. '=' → logprob: -11.813282012939453
    4. ' =' → logprob: -12.938282012939453
    5. '_normal' → logprob: -13.063282012939453
    6. '_' → logprob: -13.313282012939453
    7. 'input' → logprob: -13.563282012939453
    8. '=input' → logprob: -13.563282012939453
    9. 'norm' → logprob: -13.688282012939453
    10. '_in' → logprob: -14.063282012939453

Token 801: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193095207214355
    2. '=' → logprob: -1.5019309520721436
    3. '_norm' → logprob: -13.626931190490723
    4. 'shape' → logprob: -15.376931190490723
    5. '_shape' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.751930236816406
    7. '_normal' → logprob: -16.876930236816406
    8. 'norm' → logprob: -16.876930236816406
    9. '    ' → logprob: -17.001930236816406
    10. '=
' → logprob: -17.126930236816406

Token 802: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0015024791937321424
    2. ' lines' → logprob: -6.501502513885498
    3. 'normalize' → logprob: -17.001502990722656
    4. 'line' → logprob: -17.251502990722656
    5. '(lines' → logprob: -17.501502990722656
    6. '	lines' → logprob: -18.876502990722656
    7. '   ' → logprob: -19.376502990722656
    8. 'layers' → logprob: -20.001502990722656
    9. 'Lines' → logprob: -20.251502990722656
    10. 'list' → logprob: -20.751502990722656

Token 803: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04637925326824188
    2. 'shape' → logprob: -3.171379327774048
    3. '   ' → logprob: -5.796379089355469
    4. ' shape' → logprob: -8.796379089355469
    5. '.shape' → logprob: -9.171379089355469
    6. '
' → logprob: -9.921379089355469
    7. '(shape' → logprob: -11.796379089355469
    8. '    
' → logprob: -12.171379089355469
    9. '_shape' → logprob: -12.296379089355469
    10. '<|end|>' → logprob: -12.921379089355469

Token 804: '   ' (ID: 271)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.008787699043750763
    2. ' shape' → logprob: -5.008787631988525
    3. '   ' → logprob: -6.258787631988525
    4. '
' → logprob: -8.883788108825684
    5. '```' → logprob: -11.383788108825684
    6. '.shape' → logprob: -12.133788108825684
    7. '(shape' → logprob: -14.258788108825684
    8. '_shape' → logprob: -15.258788108825684
    9. '``' → logprob: -15.883788108825684
    10. '{
' → logprob: -17.008787155151367

Token 805: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' (adapté à ' shape') → logprob: -0.0005537479883059859
    2. ' shape' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.375554084777832
    4. '.shape' → logprob: -16.375553131103516
    5. '
' → logprob: -16.500553131103516
    6. '```' → logprob: -18.625553131103516
    7. '_shape' → logprob: -19.375553131103516
    8. '(shape' → logprob: -19.625553131103516
    9. 's' → logprob: -21.375553131103516
    10. 'sh' → logprob: -21.500553131103516

Token 806: '_norm' (ID: 46119)
  Prédit: '_norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_norm' → logprob: -1.0280383548888494e-06
    2. '_input' → logprob: -14.125000953674316
    3. 'norm' → logprob: -16.500001907348633
    4. '_' → logprob: -16.875001907348633
    5. ' =' → logprob: -17.250001907348633
    6. '_normal' → logprob: -17.500001907348633
    7. '=' → logprob: -17.625001907348633
    8. '_shape' → logprob: -18.000001907348633
    9. '=_' → logprob: -18.000001907348633
    10. '_nom' → logprob: -18.000001907348633

Token 807: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. '=
' → logprob: -18.126928329467773
    4. '＝' → logprob: -19.626928329467773
    5. '=

' → logprob: -20.126928329467773
    6. '=n' → logprob: -20.501928329467773
    7. '_' → logprob: -21.001928329467773
    8. ' =
' → logprob: -21.001928329467773
    9. ')' → logprob: -21.001928329467773
    10. '=_' → logprob: -21.376928329467773

Token 808: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.00033546582562848926
    2. ' normalize' → logprob: -8.000335693359375
    3. '(normal' → logprob: -17.750335693359375
    4. 'normal' → logprob: -18.000335693359375
    5. 'normalized' → logprob: -20.125335693359375
    6. '.normalize' → logprob: -21.750335693359375
    7. 'norm' → logprob: -23.000335693359375
    8. 'Normalize' → logprob: -24.000335693359375
    9. '   ' → logprob: -24.375335693359375
    10. '```' → logprob: -25.000335693359375

Token 809: '(shape' (ID: 58011)
  Prédit: '(shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shape' → logprob: -1.0206720617134124e-05
    2. 'shape' → logprob: -11.50001049041748
    3. '.shape' → logprob: -19.500009536743164
    4. '(normal' → logprob: -19.625009536743164
    5. '(sh' → logprob: -19.750009536743164
    6. ' shape' → logprob: -20.000009536743164
    7. '(' → logprob: -20.750009536743164
    8. '(
' → logprob: -21.750009536743164
    9. '```' → logprob: -22.000009536743164
    10. '   ' → logprob: -23.250009536743164

Token 810: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.055772341787815094
    2. '(shape' → logprob: -3.180772304534912
    3. 'shape' → logprob: -4.555772304534912
    4. 'input' → logprob: -6.180772304534912
    5. ')' → logprob: -9.93077278137207
    6. '_shape' → logprob: -10.80577278137207
    7. 'Input' → logprob: -11.05577278137207
    8. '```' → logprob: -11.93077278137207
    9. '(input' → logprob: -12.18077278137207
    10. '.shape' → logprob: -12.43077278137207

Token 811: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48295876383781433
    2. ')
' → logprob: -0.9829587936401367
    3. '   ' → logprob: -4.732958793640137
    4. 'for' → logprob: -10.482958793640137
    5. '
' → logprob: -12.357958793640137
    6. '<|end|>' → logprob: -13.357958793640137
    7. ' for' → logprob: -13.482958793640137
    8. ')
' → logprob: -13.857958793640137
    9. ' ' → logprob: -14.232958793640137
    10. ')

' → logprob: -14.357958793640137

Token 812: '   ' (ID: 271)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.0
    3. ' found' → logprob: -17.5
    4. 'for' → logprob: -18.5
    5. '   ' → logprob: -18.625
    6. '	found' → logprob: -19.25
    7. 'Found' → logprob: -19.875
    8. '(found' → logprob: -20.125
    9. '
' → logprob: -20.75
    10. '_found' → logprob: -21.0

Token 813: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: 0.0
    2. ' found' → logprob: -18.25
    3. '   ' → logprob: -20.75
    4. '
' → logprob: -21.375
    5. '	found' → logprob: -21.5
    6. '```' → logprob: -21.875
    7. 'for' → logprob: -22.25
    8. '(found' → logprob: -22.625
    9. 'Found' → logprob: -22.75
    10. '_found' → logprob: -24.0

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519453167915344
    2. '=' → logprob: -1.5019452571868896
    3. '=False' → logprob: -11.251945495605469
    4. '   ' → logprob: -13.126945495605469
    5. '=True' → logprob: -13.876945495605469
    6. ' ' → logprob: -16.12694549560547
    7. '=false' → logprob: -17.12694549560547
    8. '=
' → logprob: -17.37694549560547
    9. '    ' → logprob: -17.87694549560547
    10. ' =
' → logprob: -18.00194549560547

Token 815: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.7610454708337784e-05
    2. ' False' → logprob: -10.500027656555176
    3. '(False' → logprob: -20.50002670288086
    4. '   ' → logprob: -21.62502670288086
    5. '=False' → logprob: -22.12502670288086
    6. 'false' → logprob: -22.75002670288086
    7. 'True' → logprob: -23.00002670288086
    8. '.False' → logprob: -23.75002670288086
    9. '_false' → logprob: -23.87502670288086
    10. 'F' → logprob: -24.00002670288086

Token 816: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45608624815940857
    2. '   ' → logprob: -1.206086277961731
    3. ' for' → logprob: -2.7060861587524414
    4. '<|end|>' → logprob: -9.706086158752441
    5. '```' → logprob: -12.081086158752441
    6. '	for' → logprob: -12.456086158752441
    7. '
' → logprob: -12.956086158752441
    8. ' ' → logprob: -13.206086158752441
    9. '<|end|>' → logprob: -14.331086158752441
    10. '       ' → logprob: -14.831086158752441

Token 817: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026765360962599516
    2. '   ' → logprob: -8.75026798248291
    3. ' for' → logprob: -9.12526798248291
    4. '```' → logprob: -15.37526798248291
    5. '	for' → logprob: -17.250267028808594
    6. '<|end|>' → logprob: -19.250267028808594
    7. 'For' → logprob: -19.500267028808594
    8. '
' → logprob: -19.750267028808594
    9. ' ' → logprob: -19.750267028808594
    10. '       ' → logprob: -20.625267028808594

Token 818: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: 0.0
    2. ' for' → logprob: -18.0
    3. '   ' → logprob: -18.875
    4. '	for' → logprob: -23.125
    5. '```' → logprob: -24.125
    6. '
' → logprob: -25.0
    7. '       ' → logprob: -26.25
    8. 'from' → logprob: -26.5
    9. 'For' → logprob: -26.5
    10. '    
' → logprob: -27.25

Token 819: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011706985533237457
    2. ' k' → logprob: -6.751170635223389
    3. '	k' → logprob: -15.251171112060547
    4. '   ' → logprob: -15.501171112060547
    5. '(k' → logprob: -17.126171112060547
    6. '_k' → logprob: -18.251171112060547
    7. ',k' → logprob: -18.626171112060547
    8. '{k' → logprob: -19.251171112060547
    9. ' к' → logprob: -19.751171112060547
    10. '"k' → logprob: -20.251171112060547

Token 820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001370320824207738
    2. ',v' → logprob: -9.000137329101562
    3. ' ,' → logprob: -11.750137329101562
    4. ',k' → logprob: -12.750137329101562
    5. ',
' → logprob: -13.375137329101562
    6. ',value' → logprob: -14.625137329101562
    7. '<|end|>' → logprob: -15.625137329101562
    8. '‌,' → logprob: -16.250137329101562
    9. ',val' → logprob: -16.625137329101562
    10. ',s' → logprob: -16.625137329101562

Token 821: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006716079078614712
    2. ' v' → logprob: -5.006716251373291
    3. ',v' → logprob: -14.256715774536133
    4. '	v' → logprob: -16.506715774536133
    5. ',' → logprob: -18.381715774536133
    6. '_v' → logprob: -19.131715774536133
    7. '<|end|>' → logprob: -19.381715774536133
    8. 'k' → logprob: -19.506715774536133
    9. ')v' → logprob: -20.006715774536133
    10. '   ' → logprob: -20.256715774536133

Token 822: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2365209460258484
    2. ',' → logprob: -1.9865210056304932
    3. ' in' → logprob: -2.611521005630493
    4. ' ,' → logprob: -11.361520767211914
    5. '   ' → logprob: -12.236520767211914
    6. ',in' → logprob: -12.361520767211914
    7. 'i' → logprob: -12.611520767211914
    8. ' ' → logprob: -12.861520767211914
    9. '	in' → logprob: -12.861520767211914
    10. 's' → logprob: -13.236520767211914

Token 823: ' shapes' (ID: 29447)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.12693314254283905
    2. ' shapes' → logprob: -2.1269330978393555
    3. 'shape' → logprob: -13.251933097839355
    4. '_shapes' → logprob: -13.626933097839355
    5. '(sh' → logprob: -13.751933097839355
    6. '	sh' → logprob: -14.876933097839355
    7. 's' → logprob: -15.126933097839355
    8. '.sh' → logprob: -15.751933097839355
    9. 'in' → logprob: -15.876933097839355
    10. ' in' → logprob: -16.876934051513672

Token 824: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.021749090403318405
    2. 'items' → logprob: -4.396749019622803
    3. 'in' → logprob: -5.146749019622803
    4. ' in' → logprob: -5.896749019622803
    5. '   ' → logprob: -7.896749019622803
    6. '.' → logprob: -8.771749496459961
    7. '.iteritems' → logprob: -10.146749496459961
    8. ' items' → logprob: -10.771749496459961
    9. '_items' → logprob: -11.896749496459961
    10. '	items' → logprob: -12.271749496459961

Token 825: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06020694971084595
    2. '():
' → logprob: -3.060206890106201
    3. '()' → logprob: -4.935206890106201
    4. 'items' → logprob: -5.810206890106201
    5. '().' → logprob: -7.060206890106201
    6. '():

' → logprob: -8.56020736694336
    7. '.items' → logprob: -8.68520736694336
    8. '():
' → logprob: -10.56020736694336
    9. '   ' → logprob: -10.68520736694336
    10. '()):
' → logprob: -10.81020736694336

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013657122617587447
    2. '   ' → logprob: -6.626365661621094
    3. '<|end|>' → logprob: -10.751365661621094
    4. '```' → logprob: -12.001365661621094
    5. 'if' → logprob: -12.501365661621094
    6. '           ' → logprob: -12.751365661621094
    7. '<|end|>' → logprob: -13.126365661621094
    8. ' if' → logprob: -13.751365661621094
    9. '	   ' → logprob: -14.251365661621094
    10. '     ' → logprob: -15.126365661621094

Token 827: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023719988763332367
    2. '       ' → logprob: -3.8987200260162354
    3. ' if' → logprob: -6.148719787597656
    4. '           ' → logprob: -7.398719787597656
    5. '   ' → logprob: -7.773719787597656
    6. '	if' → logprob: -14.648719787597656
    7. 'If' → logprob: -14.773719787597656
    8. ' ' → logprob: -14.898719787597656
    9. '```' → logprob: -14.898719787597656
    10. '        ' → logprob: -15.148719787597656

Token 828: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.014165629632771015
    2. ' normalize' → logprob: -4.26416540145874
    3. '(normal' → logprob: -13.514165878295898
    4. '   ' → logprob: -14.764165878295898
    5. 'normal' → logprob: -15.764165878295898
    6. 'shape' → logprob: -16.7641658782959
    7. '    ' → logprob: -16.8891658782959
    8. 'normalized' → logprob: -17.3891658782959
    9. 'norm' → logprob: -17.5141658782959
    10. '.normalize' → logprob: -17.7641658782959

Token 829: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.000000953674316
    3. ' (' → logprob: -15.375000953674316
    4. ')' → logprob: -17.5
    5. 'v' → logprob: -18.0
    6. '[v' → logprob: -18.125
    7. '(
' → logprob: -18.375
    8. '<|end|>' → logprob: -19.125
    9. ')(' → logprob: -19.625
    10. ')v' → logprob: -19.875

Token 830: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02866463176906109
    2. '(v' → logprob: -3.9036645889282227
    3. '==' → logprob: -5.278664588928223
    4. ')==' → logprob: -5.903664588928223
    5. '[v' → logprob: -8.903664588928223
    6. ' ==' → logprob: -9.403664588928223
    7. ']' → logprob: -11.778664588928223
    8. ']==' → logprob: -11.903664588928223
    9. ')v' → logprob: -12.153664588928223
    10. 'v' → logprob: -12.278664588928223

Token 831: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02977595292031765
    2. ' ==' → logprob: -3.529775857925415
    3. ')==' → logprob: -11.654775619506836
    4. ')' → logprob: -11.904775619506836
    5. '(v' → logprob: -12.029775619506836
    6. ']==' → logprob: -13.904775619506836
    7. '==
' → logprob: -14.029775619506836
    8. '==(' → logprob: -14.404775619506836
    9. '===' → logprob: -14.779775619506836
    10. '()==' → logprob: -15.029775619506836

Token 832: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.0002613358374219388
    2. ' shape' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.750261306762695
    4. '(shape' → logprob: -19.125261306762695
    5. '.shape' → logprob: -19.625261306762695
    6. '       ' → logprob: -20.750261306762695
    7. '    ' → logprob: -21.000261306762695
    8. 'v' → logprob: -21.625261306762695
    9. 'sh' → logprob: -21.625261306762695
    10. '     ' → logprob: -21.750261306762695

Token 833: '_norm' (ID: 46119)
  Prédit: '_norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_norm' → logprob: -0.00010115911572938785
    2. 'shape' → logprob: -9.750101089477539
    3. 'v' → logprob: -10.875101089477539
    4. 'norm' → logprob: -11.250101089477539
    5. '_shape' → logprob: -12.625101089477539
    6. '(v' → logprob: -12.625101089477539
    7. 'input' → logprob: -13.000101089477539
    8. '_input' → logprob: -14.250101089477539
    9. '[v' → logprob: -15.000101089477539
    10. 'orm' → logprob: -15.375101089477539

Token 834: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48593437671661377
    2. ':
' → logprob: -0.9859343767166138
    3. '           ' → logprob: -4.735934257507324
    4. '       ' → logprob: -5.860934257507324
    5. '               ' → logprob: -10.235934257507324
    6. '):
' → logprob: -10.485934257507324
    7. '          ' → logprob: -11.110934257507324
    8. '==' → logprob: -11.235934257507324
    9. '[' → logprob: -11.360934257507324
    10. '():
' → logprob: -11.860934257507324

Token 835: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027734916657209396
    2. '               ' → logprob: -3.6527349948883057
    3. 'print' → logprob: -6.652734756469727
    4. '       ' → logprob: -9.152734756469727
    5. ' print' → logprob: -10.777734756469727
    6. '	       ' → logprob: -11.527734756469727
    7. '   ' → logprob: -13.902734756469727
    8. '		' → logprob: -14.027734756469727
    9. '{
' → logprob: -14.152734756469727
    10. '          ' → logprob: -14.277734756469727

Token 836: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010025626979768276
    2. ' print' → logprob: -7.001002788543701
    3. '           ' → logprob: -9.376002311706543
    4. '               ' → logprob: -12.126002311706543
    5. '       ' → logprob: -14.501002311706543
    6. '	print' → logprob: -15.376002311706543
    7. '   ' → logprob: -15.626002311706543
    8. '```' → logprob: -16.25100326538086
    9. '.print' → logprob: -18.12600326538086
    10. '(print' → logprob: -19.62600326538086

Token 837: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.306760805164231e-05
    2. 'k' → logprob: -11.25001335144043
    3. '(' → logprob: -17.62501335144043
    4. ' k' → logprob: -21.87501335144043
    5. '	k' → logprob: -22.87501335144043
    6. '(
' → logprob: -23.00001335144043
    7. '{k' → logprob: -23.12501335144043
    8. ' (' → logprob: -24.62501335144043
    9. '[k' → logprob: -25.12501335144043
    10. '((' → logprob: -25.50001335144043

Token 838: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2075631320476532
    2. ')
' → logprob: -1.8325631618499756
    3. '           ' → logprob: -3.9575631618499756
    4. '               ' → logprob: -4.8325629234313965
    5. ')return' → logprob: -9.207563400268555
    6. ')v' → logprob: -9.582563400268555
    7. '<|end|>' → logprob: -9.957563400268555
    8. '       ' → logprob: -10.332563400268555
    9. '()' → logprob: -10.832563400268555
    10. '```' → logprob: -11.082563400268555

Token 839: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008728709071874619
    2. '               ' → logprob: -7.37587308883667
    3. '       ' → logprob: -9.000872611999512
    4. 'found' → logprob: -10.125872611999512
    5. 'Found' → logprob: -10.875872611999512
    6. ' found' → logprob: -10.875872611999512
    7. '(found' → logprob: -11.125872611999512
    8. '	       ' → logprob: -11.875872611999512
    9. '		' → logprob: -12.125872611999512
    10. '   ' → logprob: -12.125872611999512

Token 840: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -3.333223139634356e-05
    2. ' found' → logprob: -11.000033378601074
    3. 'break' → logprob: -11.625033378601074
    4. 'Found' → logprob: -11.875033378601074
    5. '(found' → logprob: -15.000033378601074
    6. '           ' → logprob: -15.375033378601074
    7. 'True' → logprob: -15.750033378601074
    8. '	found' → logprob: -16.125032424926758
    9. '
' → logprob: -17.750032424926758
    10. '_found' → logprob: -18.375032424926758

Token 841: ' =' (ID: 314)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.34699830412864685
    2. '=' → logprob: -1.5969983339309692
    3. 'True' → logprob: -3.3469982147216797
    4. ' =' → logprob: -3.7219982147216797
    5. '=False' → logprob: -3.7219982147216797
    6. ' True' → logprob: -5.97199821472168
    7. '           ' → logprob: -6.59699821472168
    8. 'False' → logprob: -6.72199821472168
    9. 'ed' → logprob: -6.97199821472168
    10. '(True' → logprob: -8.09699821472168

Token 842: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. 'False' → logprob: -20.000158309936523
    4. '(True' → logprob: -20.875158309936523
    5. '=True' → logprob: -21.750158309936523
    6. 'Tr' → logprob: -22.750158309936523
    7. '   ' → logprob: -23.250158309936523
    8. 'true' → logprob: -25.625158309936523
    9. '.True' → logprob: -25.750158309936523
    10. 'T' → logprob: -25.875158309936523

Token 843: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018244501552544534
    2. '       ' → logprob: -9.250182151794434
    3. '		' → logprob: -10.125182151794434
    4. '               ' → logprob: -10.750182151794434
    5. '	       ' → logprob: -11.375182151794434
    6. '   ' → logprob: -11.625182151794434
    7. '	   ' → logprob: -13.125182151794434
    8. '                   ' → logprob: -14.250182151794434
    9. '		   ' → logprob: -14.625182151794434
    10. '<|end|>' → logprob: -14.875182151794434

Token 844: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008329743286594748
    2. '       ' → logprob: -7.500833034515381
    3. '   ' → logprob: -9.125832557678223
    4. '		' → logprob: -9.625832557678223
    5. 'if' → logprob: -10.125832557678223
    6. '               ' → logprob: -10.250832557678223
    7. 'break' → logprob: -10.875832557678223
    8. '	       ' → logprob: -12.125832557678223
    9. '	   ' → logprob: -13.500832557678223
    10. '```' → logprob: -13.500832557678223

Token 845: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.006440857425332069
    2. '           ' → logprob: -5.75644063949585
    3. ' break' → logprob: -5.75644063949585
    4. '       ' → logprob: -9.881441116333008
    5. 'if' → logprob: -10.631441116333008
    6. '   ' → logprob: -11.506441116333008
    7. '	break' → logprob: -12.006441116333008
    8. '               ' → logprob: -12.881441116333008
    9. '```' → logprob: -14.256441116333008
    10. '		' → logprob: -15.131441116333008

Token 846: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20159178972244263
    2. '   ' → logprob: -1.7015917301177979
    3. ' if' → logprob: -8.701591491699219
    4. '       ' → logprob: -12.701591491699219
    5. 'If' → logprob: -13.326591491699219
    6. '```' → logprob: -13.326591491699219
    7. '	if' → logprob: -13.451591491699219
    8. 'else' → logprob: -13.701591491699219
    9. '<|end|>' → logprob: -13.826591491699219
    10. '
' → logprob: -13.951591491699219

Token 847: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008731103502213955
    2. '   ' → logprob: -4.758730888366699
    3. ' if' → logprob: -9.3837308883667
    4. 'else' → logprob: -11.2587308883667
    5. 'If' → logprob: -11.8837308883667
    6. '       ' → logprob: -12.0087308883667
    7. '<|end|>' → logprob: -12.8837308883667
    8. '```' → logprob: -13.3837308883667
    9. '	if' → logprob: -14.0087308883667
    10. '    
' → logprob: -14.7587308883667

Token 848: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.3319124011322856e-05
    2. '   ' → logprob: -11.250022888183594
    3. ' if' → logprob: -11.500022888183594
    4. 'else' → logprob: -16.125022888183594
    5. '
' → logprob: -17.625022888183594
    6. 'If' → logprob: -17.875022888183594
    7. '    
' → logprob: -18.000022888183594
    8. 'not' → logprob: -18.125022888183594
    9. '```' → logprob: -18.375022888183594
    10. '       ' → logprob: -20.250022888183594

Token 849: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01416350994259119
    2. ' not' → logprob: -4.264163494110107
    3. '!' → logprob: -17.139163970947266
    4. '   ' → logprob: -17.264163970947266
    5. '(not' → logprob: -19.014163970947266
    6. 'n' → logprob: -19.389163970947266
    7. '	not' → logprob: -19.639163970947266
    8. '
' → logprob: -20.764163970947266
    9. 'no' → logprob: -21.139163970947266
    10. '_not' → logprob: -22.264163970947266

Token 850: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.0019286326132714748
    2. ' found' → logprob: -6.251928806304932
    3. '	found' → logprob: -18.626928329467773
    4. '_found' → logprob: -20.251928329467773
    5. '(found' → logprob: -20.251928329467773
    6. 'Found' → logprob: -22.376928329467773
    7. '   ' → logprob: -22.501928329467773
    8. 'f' → logprob: -22.751928329467773
    9. ' ' → logprob: -23.376928329467773
    10. 'find' → logprob: -23.626928329467773

Token 851: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.545156717300415
    2. '       ' → logprob: -1.420156717300415
    3. ':
' → logprob: -1.795156717300415
    4. '   ' → logprob: -4.795156478881836
    5. 'print' → logprob: -5.545156478881836
    6. ' print' → logprob: -9.420156478881836
    7. '           ' → logprob: -9.670156478881836
    8. '(print' → logprob: -10.420156478881836
    9. '():
' → logprob: -10.420156478881836
    10. '(' → logprob: -11.170156478881836

Token 852: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010445753112435341
    2. '   ' → logprob: -4.760445594787598
    3. '       ' → logprob: -6.635445594787598
    4. ' print' → logprob: -7.635445594787598
    5. '	print' → logprob: -11.260445594787598
    6. '<|end|>' → logprob: -11.385445594787598
    7. '?' → logprob: -12.385445594787598
    8. '           ' → logprob: -13.510445594787598
    9. ' ' → logprob: -13.760445594787598
    10. '```' → logprob: -13.885445594787598

Token 853: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.500001907348633
    3. '	print' → logprob: -20.875001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '```' → logprob: -21.000001907348633
    6. '.print' → logprob: -22.875001907348633
    7. '(print' → logprob: -23.000001907348633
    8. '       ' → logprob: -24.000001907348633
    9. '#print' → logprob: -24.125001907348633
    10. 'Print' → logprob: -24.125001907348633

Token 854: '("?' (ID: 156664)
  Prédit: '("?'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("?' → logprob: -7.302704761968926e-05
    2. '('?' → logprob: -9.875073432922363
    3. '"?' → logprob: -11.000073432922363
    4. '("' → logprob: -12.625073432922363
    5. '(?)' → logprob: -14.125073432922363
    6. '?' → logprob: -14.250073432922363
    7. '(' → logprob: -16.250072479248047
    8. '"' → logprob: -16.250072479248047
    9. ''?' → logprob: -18.750072479248047
    10. '="?' → logprob: -19.000072479248047

Token 855: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16026727855205536
    2. '")' → logprob: -1.9102672338485718
    3. '')' → logprob: -11.285266876220703
    4. '<|end|>' → logprob: -11.410266876220703
    5. ')
' → logprob: -12.160266876220703
    6. ')")' → logprob: -12.285266876220703
    7. '()' → logprob: -12.785266876220703
    8. '`)' → logprob: -13.410266876220703
    9. '#' → logprob: -13.660266876220703
    10. '```' → logprob: -13.910266876220703


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 853
Tokens correctement prédits (1ère position, stricte): 337
Tokens correctement prédits (1ère position, avec adaptation): 423
Tokens correctement prédits (top 10): 788
Précision stricte (1ère position): 39.51%
Précision adaptée (1ère position): 49.59%
Précision (top 10): 92.38%
================================================================================
