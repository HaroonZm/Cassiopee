================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
fact = 1
for i in range(1, n+1):
    fact = fact * i
print(fact)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.7530574849806726e-05
    2. ''' → logprob: -10.750057220458984
    3. '('' → logprob: -11.125057220458984
    4. '(
' → logprob: -11.750057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '("("' → logprob: -13.125057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.500057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'fact' (ID: 53534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6519833207130432
    2. 'o' → logprob: -1.1519832611083984
    3. '_' → logprob: -2.1519832611083984
    4. 'or' → logprob: -3.5269832611083984
    5. 'orial' → logprob: -5.401983261108398
    6. '_or' → logprob: -5.526983261108398
    7. '(n' → logprob: -6.276983261108398
    8. '()' → logprob: -6.526983261108398
    9. '[' → logprob: -6.651983261108398
    10. '_o' → logprob: -6.901983261108398

Token 7: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12694071233272552
    2. ' ' → logprob: -2.1269407272338867
    3. 'n' → logprob: -12.376940727233887
    4. 'factor' → logprob: -12.751940727233887
    5. 'fact' → logprob: -13.251940727233887
    6. ' factorial' → logprob: -13.376940727233887
    7. ' n' → logprob: -14.001940727233887
    8. ')' → logprob: -15.251940727233887
    9. ' ' → logprob: -15.251940727233887
    10. '```' → logprob: -15.626940727233887

Token 8: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'fact' → logprob: -15.250003814697266
    4. '"' → logprob: -16.500003814697266
    5. 'n' → logprob: -16.500003814697266
    6. '```' → logprob: -16.750003814697266
    7. '`' → logprob: -18.125003814697266
    8. 'factor' → logprob: -18.500003814697266
    9. 'math' → logprob: -19.625003814697266
    10. ')' → logprob: -19.750003814697266

Token 9: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07277654111385345
    2. ' for' → logprob: -2.8227765560150146
    3. '
' → logprob: -4.8227763175964355
    4. '\n' → logprob: -6.5727763175964355
    5. '```' → logprob: -7.5727763175964355
    6. '' → logprob: -8.947776794433594
    7. '\' → logprob: -9.072776794433594
    8. ' 
' → logprob: -9.197776794433594
    9. '*' → logprob: -9.322776794433594
    10. 'n' → logprob: -9.572776794433594

Token 10: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02851194143295288
    2. ' for' → logprob: -3.9035120010375977
    3. '```' → logprob: -5.653512001037598
    4. '
' → logprob: -5.778512001037598
    5. '\n' → logprob: -8.278512001037598
    6. '*' → logprob: -8.653512001037598
    7. ' 
' → logprob: -8.653512001037598
    8. '\' → logprob: -9.028512001037598
    9. 'n' → logprob: -9.153512001037598
    10. '' → logprob: -9.278512001037598

Token 11: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.113369420170784
    2. ' i' → logprob: -2.2383694648742676
    3. '  ' → logprob: -8.48836898803711
    4. ' n' → logprob: -8.61336898803711
    5. ' _' → logprob: -9.86336898803711
    6. 'i' → logprob: -9.86336898803711
    7. '_' → logprob: -10.36336898803711
    8. ' ‌' → logprob: -11.36336898803711
    9. ' ' → logprob: -12.98836898803711
    10. ' )' → logprob: -13.23836898803711

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009611000306904316
    2. 'in' → logprob: -5.009611129760742
    3. ' ' → logprob: -5.884611129760742
    4. 'n' → logprob: -10.509611129760742
    5. ' i' → logprob: -10.509611129760742
    6. '<|end|>' → logprob: -11.384611129760742
    7. ' n' → logprob: -11.509611129760742
    8. '  ' → logprob: -12.259611129760742
    9. ')' → logprob: -12.384611129760742
    10. '_' → logprob: -12.384611129760742

Token 13: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007855507545173168
    2. 'range' → logprob: -5.007855415344238
    3. ' ' → logprob: -6.882855415344238
    4. ' in' → logprob: -9.132855415344238
    5. ' n' → logprob: -13.007855415344238
    6. '(range' → logprob: -13.507855415344238
    7. '	range' → logprob: -14.132855415344238
    8. '1' → logprob: -14.632855415344238
    9. ' i' → logprob: -15.382855415344238
    10. ' xrange' → logprob: -15.507855415344238

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001266613689949736
    2. '(n' → logprob: -9.125126838684082
    3. ' (' → logprob: -11.375126838684082
    4. '(i' → logprob: -12.625126838684082
    5. '(
' → logprob: -13.375126838684082
    6. '(range' → logprob: -14.625126838684082
    7. '(len' → logprob: -15.000126838684082
    8. '(

' → logprob: -16.000125885009766
    9. '1' → logprob: -16.125125885009766
    10. '(start' → logprob: -16.375125885009766

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0039363945834338665
    2. '2' → logprob: -6.128936290740967
    3. 'n' → logprob: -6.378936290740967
    4. '0' → logprob: -10.628936767578125
    5. ' ' → logprob: -10.753936767578125
    6. ' n' → logprob: -13.003936767578125
    7. 'i' → logprob: -13.503936767578125
    8. ')' → logprob: -13.628936767578125
    9. '   ' → logprob: -14.128936767578125
    10. '(' → logprob: -14.378936767578125

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018858060240745544
    2. ')' → logprob: -4.393857955932617
    3. '):' → logprob: -5.393857955932617
    4. ' ,' → logprob: -7.268857955932617
    5. ',n' → logprob: -7.643857955932617
    6. '+' → logprob: -8.768857955932617
    7. ' ' → logprob: -9.643857955932617
    8. '(n' → logprob: -9.643857955932617
    9. ',i' → logprob: -9.768857955932617
    10. '<|end|>' → logprob: -9.893857955932617

Token 17: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931490898132324
    2. ' n' → logprob: -0.6931490898132324
    3. ')n' → logprob: -13.44314956665039
    4. '(n' → logprob: -15.69314956665039
    5. '	n' → logprob: -15.69314956665039
    6. ')' → logprob: -16.44314956665039
    7. '_n' → logprob: -18.06814956665039
    8. ',n' → logprob: -18.44314956665039
    9. ' ' → logprob: -18.44314956665039
    10. ' ' → logprob: -18.56814956665039

Token 18: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0788901224732399
    2. ' +' → logprob: -2.578890085220337
    3. '+n' → logprob: -16.578889846801758
    4. '+
' → logprob: -16.703889846801758
    5. ' +
' → logprob: -17.203889846801758
    6. '＋' → logprob: -17.328889846801758
    7. '```' → logprob: -17.328889846801758
    8. ' plus' → logprob: -17.703889846801758
    9. '+i' → logprob: -17.828889846801758
    10. '+,' → logprob: -18.078889846801758

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.380904672667384e-05
    2. ' ' → logprob: -10.625033378601074
    3. ')' → logprob: -11.625033378601074
    4. '):' → logprob: -15.125033378601074
    5. '2' → logprob: -15.875033378601074
    6. '```' → logprob: -16.50003433227539
    7. '+' → logprob: -17.50003433227539
    8. '۱' → logprob: -19.37503433227539
    9. '):
' → logprob: -19.50003433227539
    10. '),' → logprob: -19.62503433227539

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03860078379511833
    2. ')' → logprob: -3.2886006832122803
    3. ':' → logprob: -7.663600921630859
    4. '):
' → logprob: -9.91360092163086
    5. ' ):' → logprob: -10.41360092163086
    6. ' ' → logprob: -13.41360092163086
    7. ' )' → logprob: -13.41360092163086
    8. ':)' → logprob: -13.53860092163086
    9. '**' → logprob: -14.16360092163086
    10. ')：' → logprob: -14.28860092163086

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2966361343860626
    2. 'fact' → logprob: -2.2966361045837402
    3. ' ' → logprob: -2.5466361045837402
    4. ' fact' → logprob: -3.2966361045837402
    5. '    ' → logprob: -3.6716361045837402
    6. '    
' → logprob: -4.92163610458374
    7. ' 
' → logprob: -6.29663610458374
    8. '```' → logprob: -6.42163610458374
    9. '_fact' → logprob: -7.29663610458374
    10. '     
' → logprob: -7.42163610458374

Token 22: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.006436114199459553
    2. ' fact' → logprob: -5.256436347961426
    3. '_fact' → logprob: -7.381436347961426
    4. 'factor' → logprob: -8.256436347961426
    5. '    ' → logprob: -8.881436347961426
    6. '   ' → logprob: -9.756436347961426
    7. '.fact' → logprob: -10.381436347961426
    8. ' factorial' → logprob: -10.506436347961426
    9. 'Fact' → logprob: -10.756436347961426
    10. ' ' → logprob: -10.881436347961426

Token 23: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.010143820196390152
    2. ' =' → logprob: -5.510143756866455
    3. '=' → logprob: -5.885143756866455
    4. '*=' → logprob: -6.385143756866455
    5. '*' → logprob: -7.010143756866455
    6. ' *' → logprob: -8.135144233703613
    7. ' ' → logprob: -8.635144233703613
    8. '   ' → logprob: -9.760144233703613
    9. '    ' → logprob: -9.885144233703613
    10. '```' → logprob: -10.385144233703613

Token 24: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.386939138174057
    2. 'fact' → logprob: -1.1369391679763794
    3. ' i' → logprob: -9.76193904876709
    4. 'i' → logprob: -12.26193904876709
    5. '_fact' → logprob: -12.76193904876709
    6. '.fact' → logprob: -14.13693904876709
    7. ' fakt' → logprob: -14.51193904876709
    8. ' ' → logprob: -14.76193904876709
    9. ' factorial' → logprob: -15.01193904876709
    10. '```' → logprob: -15.51193904876709

Token 25: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03390742838382721
    2. ' *' → logprob: -3.408907413482666
    3. '*i' → logprob: -8.283907890319824
    4. '**' → logprob: -12.283907890319824
    5. '`' → logprob: -13.783907890319824
    6. '*object' → logprob: -14.158907890319824
    7. ' ' → logprob: -14.533907890319824
    8. '***' → logprob: -15.033907890319824
    9. '"' → logprob: -15.033907890319824
    10. ' ' → logprob: -15.533907890319824

Token 26: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029750952497124672
    2. ' i' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.52975082397461
    4. '   ' → logprob: -15.77975082397461
    5. '	i' → logprob: -17.65475082397461
    6. '`' → logprob: -18.15475082397461
    7. '```' → logprob: -18.15475082397461
    8. '(i' → logprob: -18.65475082397461
    9. '    ' → logprob: -19.15475082397461
    10. '  ' → logprob: -19.40475082397461

Token 27: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6323668360710144
    2. 'print' → logprob: -1.0073668956756592
    3. '
' → logprob: -3.382366895675659
    4. '```' → logprob: -3.757366895675659
    5. '\' → logprob: -4.25736665725708
    6. 'fact' → logprob: -4.75736665725708
    7. ' ' → logprob: -5.00736665725708
    8. 'n' → logprob: -5.00736665725708
    9. ')' → logprob: -6.38236665725708
    10. '<|end|>' → logprob: -6.50736665725708

Token 28: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2825547456741333
    2. '\n' → logprob: -2.2825546264648438
    3. '
' → logprob: -2.4075546264648438
    4. '```' → logprob: -4.032554626464844
    5. 'n' → logprob: -4.407554626464844
    6. '\' → logprob: -4.532554626464844
    7. ')' → logprob: -5.657554626464844
    8. '#' → logprob: -5.907554626464844
    9. '<|end|>' → logprob: -6.782554626464844
    10. ' ' → logprob: -6.782554626464844

Token 29: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00409775460138917
    2. '(f' → logprob: -5.504097938537598
    3. '("("' → logprob: -11.754097938537598
    4. '('' → logprob: -12.254097938537598
    5. '()' → logprob: -12.379097938537598
    6. ' (' → logprob: -14.379097938537598
    7. '(`' → logprob: -14.629097938537598
    8. '((' → logprob: -14.754097938537598
    9. '(

' → logprob: -15.254097938537598
    10. '(
' → logprob: -15.629097938537598

Token 30: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -5.676981345459353e-06
    2. 'a' → logprob: -12.250005722045898
    3. ')' → logprob: -14.750005722045898
    4. 'ac' → logprob: -15.625005722045898
    5. '(act' → logprob: -16.1250057220459
    6. ' act' → logprob: -18.0000057220459
    7. ''act' → logprob: -18.7500057220459
    8. 'fact' → logprob: -18.8750057220459
    9. '_act' → logprob: -19.1250057220459
    10. 'acti' → logprob: -19.3750057220459

Token 31: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. '))' → logprob: -15.750000953674316
    4. '`)' → logprob: -17.25
    5. '')' → logprob: -17.375
    6. ')`' → logprob: -17.375
    7. ')
' → logprob: -18.25
    8. '")' → logprob: -19.375
    9. '）' → logprob: -20.0
    10. '}' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 29
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 48.28%
Précision adaptée (1ère position): 51.72%
Précision (top 10): 86.21%
================================================================================
