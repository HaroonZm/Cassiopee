================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Dict
from collections import defaultdict
import sys

class PurchaseRecord:
    def __init__(self, items: List[str]):
        self.items = items

    @classmethod
    def from_input_line(cls, line: str) -> 'PurchaseRecord':
        parts = line.strip().split()
        m = int(parts[0])
        items = parts[1:]
        if len(items) != m:
            raise ValueError("Mismatch between declared count and items count")
        return cls(items)

class PairFrequencyCounter:
    def __init__(self):
        self.frequency_map: Dict[Tuple[str, str], int] = defaultdict(int)

    def add_purchase_record(self, record: PurchaseRecord):
        sorted_items = sorted(record.items)
        n = len(sorted_items)
        for i in range(n):
            for j in range(i+1, n):
                pair = (sorted_items[i], sorted_items[j])
                self.frequency_map[pair] += 1

    def get_frequent_pairs(self, threshold: int) -> List[Tuple[str,str]]:
        result = [pair for pair, count in self.frequency_map.items() if count >= threshold]
        # sort primarily by first item, secondarily by second item lexicographically
        result.sort()
        return result

class RelatedProductsAnalyzer:
    def __init__(self, threshold: int):
        self.threshold = threshold
        self.counter = PairFrequencyCounter()

    def analyze(self, purchase_records: List[PurchaseRecord]) -> List[Tuple[str,str]]:
        for record in purchase_records:
            self.counter.add_purchase_record(record)
        return self.counter.get_frequent_pairs(self.threshold)

class InputOutputHandler:
    def __init__(self):
        self.purchase_records: List[PurchaseRecord] = []
        self.threshold = 0

    def read_input(self):
        first_line = sys.stdin.readline()
        if not first_line:
            raise EOFError("No input provided")
        parts = first_line.strip().split()
        if len(parts) != 2:
            raise ValueError("First line must contain two integers")
        N, F = map(int, parts)
        self.threshold = F
        for _ in range(N):
            line = sys.stdin.readline()
            if not line:
                raise EOFError("Not enough purchase records")
            record = PurchaseRecord.from_input_line(line)
            self.purchase_records.append(record)

    def output_results(self, pairs: List[Tuple[str,str]]):
        print(len(pairs))
        for a, b in pairs:
            print(a, b)

def main():
    ioh = InputOutputHandler()
    ioh.read_input()
    analyzer = RelatedProductsAnalyzer(ioh.threshold)
    result = analyzer.analyze(ioh.purchase_records)
    ioh.output_results(result)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.10354583710432053
    2. ' Any' → logprob: -2.478545904159546
    3. ' Optional' → logprob: -4.603545665740967
    4. 'Any' → logprob: -6.478545665740967
    5. ' Union' → logprob: -6.603545665740967
    6. 'List' → logprob: -6.978545665740967
    7. ' Generator' → logprob: -8.103546142578125
    8. ' ' → logprob: -8.978546142578125
    9. ' Tuple' → logprob: -9.853546142578125
    10. 'Optional' → logprob: -9.853546142578125

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2933938503265381
    2. '[' → logprob: -2.168393850326538
    3. 'def' → logprob: -2.918393850326538
    4. ',' → logprob: -3.293393850326538
    5. '\n' → logprob: -4.918394088745117
    6. 'import' → logprob: -4.918394088745117
    7. '\' → logprob: -4.918394088745117
    8. '\[' → logprob: -5.043394088745117
    9. '<|end|>' → logprob: -5.543394088745117
    10. ':' → logprob: -5.668394088745117

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.36859413981437683
    2. 'Optional' → logprob: -1.2435941696166992
    3. ' Dict' → logprob: -4.868594169616699
    4. 'Dict' → logprob: -4.993594169616699
    5. 'Tuple' → logprob: -5.618594169616699
    6. ' Tuple' → logprob: -6.743594169616699
    7. ' Union' → logprob: -7.868594169616699
    8. 'Union' → logprob: -9.3685941696167
    9. 'Any' → logprob: -9.8685941696167
    10. ' Any' → logprob: -10.2435941696167

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18865880370140076
    2. '```' → logprob: -2.6886587142944336
    3. ',' → logprob: -3.1886587142944336
    4. ':' → logprob: -4.313658714294434
    5. '\n' → logprob: -4.438658714294434
    6. 'import' → logprob: -4.563658714294434
    7. '\' → logprob: -4.938658714294434
    8. '[' → logprob: -5.313658714294434
    9. '(' → logprob: -5.438658714294434
    10. 'a' → logprob: -6.063658714294434

Token 7: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.5494306087493896
    2. 'Dict' → logprob: -0.9244306087493896
    3. ' Union' → logprob: -4.799430847167969
    4. 'Optional' → logprob: -5.174430847167969
    5. 'Union' → logprob: -5.549430847167969
    6. ' Optional' → logprob: -5.549430847167969
    7. 'Iterable' → logprob: -6.549430847167969
    8. 'Set' → logprob: -7.299430847167969
    9. ' Callable' → logprob: -7.299430847167969
    10. 'dict' → logprob: -7.924430847167969

Token 8: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6060981154441833
    2. 'def' → logprob: -1.6060981750488281
    3. '(' → logprob: -2.481098175048828
    4. ':' → logprob: -2.731098175048828
    5. 'import' → logprob: -3.856098175048828
    6. '<|end|>' → logprob: -3.856098175048828
    7. '[' → logprob: -4.231098175048828
    8. '```' → logprob: -4.481098175048828
    9. 'a' → logprob: -4.856098175048828
    10. '.' → logprob: -5.356098175048828

Token 9: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2357064485549927
    2. ',' → logprob: -1.4857064485549927
    3. '```' → logprob: -1.4857064485549927
    4. 'import' → logprob: -2.110706329345703
    5. 'a' → logprob: -3.610706329345703
    6. '\n' → logprob: -3.735706329345703
    7. '<|end|>' → logprob: -4.110706329345703
    8. '`' → logprob: -4.485706329345703
    9. ':' → logprob: -4.485706329345703
    10. '\' → logprob: -4.735706329345703

Token 10: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.3215799033641815
    2. ' typing' → logprob: -1.446579933166504
    3. 'collections' → logprob: -3.321579933166504
    4. ' dat' → logprob: -6.571579933166504
    5. 'typing' → logprob: -6.946579933166504
    6. ' fast' → logprob: -8.196579933166504
    7. ' datetime' → logprob: -8.321579933166504
    8. ' sys' → logprob: -8.821579933166504
    9. ' math' → logprob: -9.321579933166504
    10. ' numpy' → logprob: -9.946579933166504

Token 11: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.002737708855420351
    2. ' import' → logprob: -6.002737522125244
    3. '```' → logprob: -9.502737998962402
    4. '.' → logprob: -9.627737998962402
    5. '.Counter' → logprob: -10.752737998962402
    6. '.import' → logprob: -11.002737998962402
    7. 'abc' → logprob: -11.002737998962402
    8. 'Counter' → logprob: -11.377737998962402
    9. ' defaultdict' → logprob: -11.627737998962402
    10. '	import' → logprob: -11.627737998962402

Token 12: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.01582612469792366
    2. 'default' → logprob: -4.890826225280762
    3. ' abc' → logprob: -5.640826225280762
    4. 'abc' → logprob: -6.390826225280762
    5. ' named' → logprob: -6.640826225280762
    6. 'named' → logprob: -7.390826225280762
    7. 'deque' → logprob: -7.640826225280762
    8. ' deque' → logprob: -8.390826225280762
    9. 'import' → logprob: -9.265826225280762
    10. ' import' → logprob: -9.515826225280762

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4136612117290497
    2. '```' → logprob: -2.038661241531372
    3. '

' → logprob: -2.288661241531372
    4. 'def' → logprob: -3.663661241531372
    5. '\n' → logprob: -3.788661241531372
    6. '\' → logprob: -5.038661003112793
    7. 'class' → logprob: -5.163661003112793
    8. '(
' → logprob: -5.163661003112793
    9. '``' → logprob: -5.413661003112793
    10. ' 

' → logprob: -5.413661003112793

Token 14: 'import' (ID: 561)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0813112258911133
    2. 'def' → logprob: -1.7063112258911133
    3. '
' → logprob: -1.8313112258911133
    4. '```' → logprob: -1.8313112258911133
    5. 'import' → logprob: -3.2063112258911133
    6. '\n' → logprob: -3.9563112258911133
    7. '

' → logprob: -4.206311225891113
    8. '\' → logprob: -4.456311225891113
    9. '``' → logprob: -4.581311225891113
    10. 'd' → logprob: -4.706311225891113

Token 15: ' sys' (ID: 12228)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6999117136001587
    2. ' os' → logprob: -0.9499117136001587
    3. ' ' → logprob: -3.324911594390869
    4. ' json' → logprob: -3.574911594390869
    5. ' sys' → logprob: -4.074911594390869
    6. ' re' → logprob: -4.449911594390869
    7. ' pandas' → logprob: -4.824911594390869
    8. ' itertools' → logprob: -5.074911594390869
    9. ' ' → logprob: -5.824911594390869
    10. ' defaultdict' → logprob: -5.949911594390869

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.707410454750061
    2. '

' → logprob: -1.207410454750061
    3. '\n' → logprob: -2.0824103355407715
    4. '```' → logprob: -2.8324103355407715
    5. '\' → logprob: -4.5824103355407715
    6. 'import' → logprob: -5.5824103355407715
    7. 'def' → logprob: -5.7074103355407715
    8. '``' → logprob: -6.7074103355407715
    9. '' → logprob: -7.0824103355407715
    10. '
' → logprob: -7.0824103355407715

Token 17: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20771916210651398
    2. 'class' → logprob: -2.832719087600708
    3. 'data' → logprob: -2.832719087600708
    4. 'd' → logprob: -3.707719087600708
    5. '```' → logprob: -4.082719326019287
    6. 'import' → logprob: -5.582719326019287
    7. '\n' → logprob: -5.582719326019287
    8. 'default' → logprob: -5.707719326019287
    9. 'a' → logprob: -5.832719326019287
    10. '
' → logprob: -5.832719326019287

Token 18: ' Purchase' (ID: 37646)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20667332410812378
    2. ' Data' → logprob: -2.3316733837127686
    3. ' My' → logprob: -2.8316733837127686
    4. ' Space' → logprob: -5.4566731452941895
    5. ' Parser' → logprob: -5.5816731452941895
    6. ' Mult' → logprob: -6.0816731452941895
    7. ' Task' → logprob: -6.3316731452941895
    8. ' Dynamic' → logprob: -6.4566731452941895
    9. ' Basic' → logprob: -6.4566731452941895
    10. ' Token' → logprob: -6.5816731452941895

Token 19: 'Record' (ID: 6721)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10613510012626648
    2. '(' → logprob: -2.356135129928589
    3. '):' → logprob: -7.35613489151001
    4. 'Details' → logprob: -7.35613489151001
    5. '():' → logprob: -7.60613489151001
    6. 'Purchase' → logprob: -7.73113489151001
    7. 'Form' → logprob: -7.85613489151001
    8. 'Processor' → logprob: -8.106135368347168
    9. '(P' → logprob: -8.231135368347168
    10. 'Transaction' → logprob: -8.356135368347168

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01620774157345295
    2. '(' → logprob: -4.141207695007324
    3. '():' → logprob: -9.391207695007324
    4. '(:' → logprob: -10.266207695007324
    5. ' :' → logprob: -11.391207695007324
    6. ':**' → logprob: -11.391207695007324
    7. '):' → logprob: -11.391207695007324
    8. '```' → logprob: -12.141207695007324
    9. '(":' → logprob: -12.891207695007324
    10. '(P' → logprob: -12.891207695007324

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007431607809849083
    2. '<|end|>' → logprob: -8.62574291229248
    3. ':' → logprob: -8.87574291229248
    4. '    
' → logprob: -9.00074291229248
    5. '    ' → logprob: -9.25074291229248
    6. '```' → logprob: -9.62574291229248
    7. ' def' → logprob: -10.37574291229248
    8. '(' → logprob: -10.37574291229248
    9. 'def' → logprob: -10.75074291229248
    10. '<|end|>' → logprob: -11.50074291229248

Token 22: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13709357380867004
    2. ' def' → logprob: -2.2620935440063477
    3. 'def' (adapté à ' def') → logprob: -4.262093544006348
    4. '    ' → logprob: -5.262093544006348
    5. ' pass' → logprob: -6.762093544006348
    6. '    
' → logprob: -6.762093544006348
    7. 'class' → logprob: -7.262093544006348
    8. ' ' → logprob: -7.887093544006348
    9. '```' → logprob: -7.887093544006348
    10. '<|end|>' → logprob: -7.887093544006348

Token 23: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04468296840786934
    2. 'itialize' → logprob: -3.2946829795837402
    3. '__' → logprob: -5.79468297958374
    4. 'init' → logprob: -7.04468297958374
    5. '_init' → logprob: -7.16968297958374
    6. 'itial' → logprob: -7.91968297958374
    7. ' init' → logprob: -7.91968297958374
    8. ' _' → logprob: -8.544682502746582
    9. 'ialize' → logprob: -8.544682502746582
    10. 'ine' → logprob: -8.919682502746582

Token 24: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.125
    3. 'inite' → logprob: -17.0
    4. ' init' → logprob: -18.125
    5. 'innit' → logprob: -18.75
    6. '	init' → logprob: -19.25
    7. 'int' → logprob: -19.5
    8. 'in' → logprob: -19.625
    9. 'inti' → logprob: -19.875
    10. '_init' → logprob: -19.875

Token 25: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8525005578994751
    2. '__(' → logprob: -0.8525005578994751
    3. ' (' → logprob: -2.4775004386901855
    4. '(self' → logprob: -3.1025004386901855
    5. '__' → logprob: -4.7275004386901855
    6. '__(
' → logprob: -5.4775004386901855
    7. '<|end|>' → logprob: -5.9775004386901855
    8. '__((' → logprob: -8.102500915527344
    9. '```' → logprob: -8.102500915527344
    10. '<|end|>' → logprob: -8.227500915527344

Token 26: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006268949946388602
    2. ' self' → logprob: -7.375627040863037
    3. '(self' → logprob: -16.000627517700195
    4. ')' → logprob: -16.125627517700195
    5. ' ' → logprob: -17.750627517700195
    6. '	self' → logprob: -18.000627517700195
    7. '_self' → logprob: -18.000627517700195
    8. ',self' → logprob: -18.125627517700195
    9. 's' → logprob: -19.125627517700195
    10. 'seller' → logprob: -19.125627517700195

Token 27: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.36698317527771
    2. 'self' → logprob: -1.49198317527771
    3. ',' → logprob: -1.61698317527771
    4. '(' → logprob: -2.11698317527771
    5. ' )' → logprob: -2.86698317527771
    6. ' (' → logprob: -2.86698317527771
    7. ' ' → logprob: -3.86698317527771
    8. '(self' → logprob: -3.86698317527771
    9. '_' → logprob: -4.116983413696289
    10. ' self' → logprob: -4.366983413696289

Token 28: ' items' (ID: 4732)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -1.078024983406067
    2. ' customer' → logprob: -1.828024983406067
    3. 'self' → logprob: -1.953024983406067
    4. 'user' → logprob: -2.0780248641967773
    5. ' self' → logprob: -2.3280248641967773
    6. ' product' → logprob: -2.9530248641967773
    7. 'customer' → logprob: -3.7030248641967773
    8. ' purchase' → logprob: -3.7030248641967773
    9. 'product' → logprob: -4.203024864196777
    10. ' purchaser' → logprob: -5.078024864196777

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011418669484555721
    2. '):' → logprob: -4.51141881942749
    3. ')' → logprob: -8.386418342590332
    4. ' :' → logprob: -9.886418342590332
    5. ' ):' → logprob: -9.886418342590332
    6. ',' → logprob: -10.761418342590332
    7. ':list' → logprob: -11.636418342590332
    8. ' )' → logprob: -12.636418342590332
    9. '=' → logprob: -13.011418342590332
    10. '_:' → logprob: -13.761418342590332

Token 30: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.3871106803417206
    2. ' List' → logprob: -1.137110710144043
    3. 'Dict' → logprob: -8.512110710144043
    4. '[List' → logprob: -10.887110710144043
    5. ')' → logprob: -11.637110710144043
    6. ' Dict' → logprob: -12.012110710144043
    7. '	List' → logprob: -12.637110710144043
    8. ' list' → logprob: -14.887110710144043
    9. ' )' → logprob: -15.012110710144043
    10. 'list' → logprob: -15.012110710144043

Token 31: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0014341588830575347
    2. '[int' → logprob: -6.751434326171875
    3. '[' → logprob: -8.251434326171875
    4. '[List' → logprob: -13.501434326171875
    5. ')' → logprob: -13.751434326171875
    6. '[String' → logprob: -15.751434326171875
    7. 'str' → logprob: -16.126434326171875
    8. '):' → logprob: -16.251434326171875
    9. ' [' → logprob: -17.001434326171875
    10. '<|end|>' → logprob: -17.001434326171875

Token 32: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.5448117852210999
    2. '],' → logprob: -1.169811725616455
    3. '])' → logprob: -2.419811725616455
    4. ']' → logprob: -4.044811725616455
    5. ']:' → logprob: -6.169811725616455
    6. ']):
' → logprob: -7.669811725616455
    7. '):' → logprob: -8.044812202453613
    8. ')' → logprob: -9.294812202453613
    9. ',' → logprob: -9.294812202453613
    10. ']>' → logprob: -11.169812202453613

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002864900976419449
    2. 'self' → logprob: -5.877864837646484
    3. ' self' → logprob: -10.377864837646484
    4. '      ' → logprob: -11.627864837646484
    5. '   ' → logprob: -12.002864837646484
    6. '```' → logprob: -12.252864837646484
    7. '        ' → logprob: -13.377864837646484
    8. '     ' → logprob: -13.752864837646484
    9. ',' → logprob: -14.002864837646484
    10. '    ' → logprob: -14.252864837646484

Token 34: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6104565858840942
    2. '       ' → logprob: -1.3604565858840942
    3. ' self' → logprob: -1.6104565858840942
    4. '        ' → logprob: -7.860456466674805
    5. ' ' → logprob: -9.735456466674805
    6. '   ' → logprob: -10.485456466674805
    7. '           ' → logprob: -10.735456466674805
    8. '      ' → logprob: -11.485456466674805
    9. '     ' → logprob: -11.735456466674805
    10. '	self' → logprob: -11.860456466674805

Token 35: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.38698697090148926
    2. '.' → logprob: -1.1369869709014893
    3. ' .' → logprob: -9.26198673248291
    4. 'items' → logprob: -11.88698673248291
    5. '._' → logprob: -12.63698673248291
    6. '.tokens' → logprob: -13.13698673248291
    7. '.data' → logprob: -13.51198673248291
    8. '.p' → logprob: -14.38698673248291
    9. '.selected' → logprob: -14.51198673248291
    10. '.s' → logprob: -14.63698673248291

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.65390944480896
    2. ' =' → logprob: -0.90390944480896
    3. ')' → logprob: -2.90390944480896
    4. '.append' → logprob: -4.403909683227539
    5. '.' → logprob: -5.778909683227539
    6. '.extend' → logprob: -6.278909683227539
    7. ' ' → logprob: -7.403909683227539
    8. ' )' → logprob: -7.528909683227539
    9. '[:]' → logprob: -7.528909683227539
    10. ':' → logprob: -8.153909683227539

Token 37: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.3869069814682007
    2. 'items' → logprob: -1.1369069814682007
    3. '[]' → logprob: -11.011906623840332
    4. ' []' → logprob: -12.136906623840332
    5. '	items' → logprob: -12.511906623840332
    6. '.items' → logprob: -12.886906623840332
    7. ' ' → logprob: -13.011906623840332
    8. '(items' → logprob: -13.386906623840332
    9. '[' → logprob: -13.511906623840332
    10. ' [' → logprob: -13.886906623840332

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.304172545671463
    2. '<|end|>' → logprob: -1.5541725158691406
    3. '   ' → logprob: -3.8041725158691406
    4. 'def' → logprob: -4.679172515869141
    5. '\n' → logprob: -5.179172515869141
    6. '    
' → logprob: -5.429172515869141
    7. '<|end|>' → logprob: -5.429172515869141
    8. '.' → logprob: -6.804172515869141
    9. ' def' → logprob: -7.304172515869141
    10. '\' → logprob: -7.429172515869141

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04620033875107765
    2. 'def' → logprob: -3.6712002754211426
    3. '   ' → logprob: -4.171200275421143
    4. '    
' → logprob: -6.296200275421143
    5. ' def' → logprob: -6.921200275421143
    6. '<|end|>' → logprob: -7.671200275421143
    7. '

' → logprob: -7.796200275421143
    8. '\n' → logprob: -8.6712007522583
    9. '<|end|>' → logprob: -9.4212007522583
    10. ' 
' → logprob: -10.0462007522583

Token 40: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003020961594302207
    2. ' def' → logprob: -8.1253023147583
    3. '   ' → logprob: -12.2503023147583
    4. ' ' → logprob: -14.1253023147583
    5. 'de' → logprob: -15.7503023147583
    6. 'class' → logprob: -16.375301361083984
    7. 'from' → logprob: -16.875301361083984
    8. '@' (adapté à ' @') → logprob: -17.000301361083984
    9. '    ' → logprob: -17.250301361083984
    10. '       ' → logprob: -17.375301361083984

Token 41: 'classmethod' (ID: 64680)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.011903404258191586
    2. 'staticmethod' → logprob: -4.761903285980225
    3. 'classmethod' → logprob: -5.761903285980225
    4. 'dat' → logprob: -8.886903762817383
    5. ' property' → logprob: -16.386903762817383
    6. '@property' → logprob: -18.011903762817383
    7. 'init' → logprob: -18.011903762817383
    8. 'pro' → logprob: -18.386903762817383
    9. 'prop' → logprob: -18.386903762817383
    10. 'proper' → logprob: -18.511903762817383

Token 42: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14741626381874084
    2. '
' → logprob: -2.522416353225708
    3. ' def' → logprob: -2.897416353225708
    4. '<|end|>' → logprob: -7.272416114807129
    5. '   ' → logprob: -7.647416114807129
    6. '    
' → logprob: -8.647416114807129
    7. '<|end|>' → logprob: -9.897416114807129
    8. '
' → logprob: -10.397416114807129
    9. '\' → logprob: -10.522416114807129
    10. '(' → logprob: -10.522416114807129

Token 43: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.291998952627182
    2. ' def' → logprob: -1.4169989824295044
    3. '
' → logprob: -4.541998863220215
    4. '<|end|>' → logprob: -9.791998863220215
    5. '    
' → logprob: -10.541998863220215
    6. '  
' → logprob: -11.416998863220215
    7. '
' → logprob: -11.666998863220215
    8. '\' → logprob: -11.791998863220215
    9. '```' → logprob: -12.541998863220215
    10. ' ' → logprob: -12.666998863220215

Token 44: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014261527918279171
    2. ' def' → logprob: -4.389261722564697
    3. 'from' → logprob: -6.389261722564697
    4. '
' → logprob: -9.764261245727539
    5. ' from' → logprob: -11.764261245727539
    6. 'From' → logprob: -13.389261245727539
    7. ' 
' → logprob: -13.764261245727539
    8. '```' → logprob: -14.264261245727539
    9. '  
' → logprob: -14.639261245727539
    10. '    
' → logprob: -14.889261245727539

Token 45: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.20149646699428558
    2. 'from' → logprob: -1.7014964818954468
    3. ' parse' → logprob: -10.076496124267578
    4. 'parse' → logprob: -11.326496124267578
    5. ' create' → logprob: -12.201496124267578
    6. '.from' → logprob: -12.326496124267578
    7. ' def' → logprob: -12.701496124267578
    8. 'def' → logprob: -12.951496124267578
    9. 'classmethod' → logprob: -13.326496124267578
    10. ' fro' → logprob: -13.326496124267578

Token 46: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0053198337554932
    2. '_list' → logprob: -1.0053198337554932
    3. '_string' → logprob: -1.8803198337554932
    4. '_csv' → logprob: -2.880319833755493
    5. '_lines' → logprob: -4.005319595336914
    6. '_line' → logprob: -4.130319595336914
    7. '_file' → logprob: -4.755319595336914
    8. '_text' → logprob: -4.880319595336914
    9. '_strings' → logprob: -5.630319595336914
    10. '_tokens' → logprob: -7.130319595336914

Token 47: '_line' (ID: 14418)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.043817490339279175
    2. '(' → logprob: -3.5438175201416016
    3. '_line' → logprob: -4.293817520141602
    4. '_string' → logprob: -8.793817520141602
    5. 'line' → logprob: -9.793817520141602
    6. '_lines' → logprob: -10.293817520141602
    7. '(line' → logprob: -10.793817520141602
    8. 'cls' → logprob: -11.418817520141602
    9. '(
' → logprob: -11.543817520141602
    10. '_data' → logprob: -12.418817520141602

Token 48: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.009784658439457417
    2. '(' → logprob: -4.634784698486328
    3. '(line' → logprob: -11.884784698486328
    4. 'cls' → logprob: -11.884784698486328
    5. ' (' → logprob: -12.009784698486328
    6. '(
' → logprob: -12.509784698486328
    7. '(cl' → logprob: -13.134784698486328
    8. ' cls' → logprob: -14.134784698486328
    9. '(clazz' → logprob: -14.634784698486328
    10. '(self' → logprob: -15.384784698486328

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004116750322282314
    2. ' ,' → logprob: -6.254116535186768
    3. ',line' → logprob: -6.379116535186768
    4. '(cls' → logprob: -8.379117012023926
    5. '(line' → logprob: -9.004117012023926
    6. ' line' → logprob: -9.754117012023926
    7. 'line' → logprob: -10.879117012023926
    8. ')' → logprob: -10.879117012023926
    9. '   ' → logprob: -11.254117012023926
    10. '(' → logprob: -11.754117012023926

Token 50: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.21318066120147705
    2. 'line' → logprob: -1.713180661201477
    3. ' input' → logprob: -4.8381805419921875
    4. 'input' → logprob: -5.5881805419921875
    5. ' cls' → logprob: -11.463180541992188
    6. '	line' → logprob: -11.713180541992188
    7. 'cls' → logprob: -12.338180541992188
    8. '_line' → logprob: -12.963180541992188
    9. '(line' → logprob: -13.838180541992188
    10. '#line' → logprob: -13.963180541992188

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012356008403003216
    2. '):' → logprob: -4.512355804443359
    3. ':str' → logprob: -6.762355804443359
    4. ')' → logprob: -9.76235580444336
    5. ' :' → logprob: -10.38735580444336
    6. ' ):' → logprob: -10.51235580444336
    7. 's' → logprob: -11.88735580444336
    8. '):
' → logprob: -11.88735580444336
    9. '<|end|>' → logprob: -12.01235580444336
    10. '=' → logprob: -12.26235580444336

Token 52: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.349335640668869
    2. 'str' → logprob: -1.2243356704711914
    3. ')' → logprob: -7.099335670471191
    4. ' )' → logprob: -10.724335670471191
    5. '[str' → logprob: -10.849335670471191
    6. '   ' → logprob: -11.974335670471191
    7. ' ' → logprob: -12.349335670471191
    8. '	str' → logprob: -12.474335670471191
    9. ':str' → logprob: -12.599335670471191
    10. '(str' → logprob: -13.224335670471191

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002098752884194255
    2. '):' → logprob: -6.252098560333252
    3. ')->' → logprob: -9.12709903717041
    4. ' )' → logprob: -9.87709903717041
    5. '   ' → logprob: -12.37709903717041
    6. '):
' → logprob: -12.87709903717041
    7. ' ):' → logprob: -14.00209903717041
    8. ' )->' → logprob: -14.25209903717041
    9. ':' → logprob: -14.50209903717041
    10. ',' → logprob: -14.62709903717041

Token 54: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38942751288414
    2. '):' → logprob: -1.2644275426864624
    3. ')' → logprob: -3.514427423477173
    4. ')->' → logprob: -5.389427661895752
    5. ' ->' → logprob: -5.764427661895752
    6. '->' → logprob: -6.514427661895752
    7. '   ' → logprob: -7.764427661895752
    8. ':return' → logprob: -8.389427185058594
    9. ',' → logprob: -8.514427185058594
    10. '       ' → logprob: -9.014427185058594

Token 55: ' '' (ID: 461)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.6000910401344299
    2. ' List' → logprob: -1.3500909805297852
    3. ' '' → logprob: -2.600090980529785
    4. ''' → logprob: -2.725090980529785
    5. '"' → logprob: -3.475090980529785
    6. ' "' → logprob: -3.975090980529785
    7. 'Purchase' → logprob: -7.100090980529785
    8. ''T' → logprob: -8.100090980529785
    9. '"class' → logprob: -8.475090980529785
    10. ' Purchase' → logprob: -9.100090980529785

Token 56: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -1.8624639324116288e-06
    2. ' Purchase' → logprob: -13.500001907348633
    3. 'Purch' → logprob: -15.250001907348633
    4. 'purchase' → logprob: -15.500001907348633
    5. '_purchase' → logprob: -17.625001907348633
    6. 'Purchased' → logprob: -17.750001907348633
    7. 'urchase' → logprob: -18.625001907348633
    8. ' purchase' → logprob: -20.000001907348633
    9. 'List' → logprob: -20.500001907348633
    10. 'Pur' → logprob: -20.875001907348633

Token 57: 'Record' (ID: 6721)
  Prédit: 'Record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Record' → logprob: -1.1472419600977446e-06
    2. 'record' → logprob: -14.500000953674316
    3. '<Record' → logprob: -15.875000953674316
    4. ' Record' → logprob: -16.125001907348633
    5. 'Rec' → logprob: -16.125001907348633
    6. '_Record' → logprob: -16.750001907348633
    7. 'Purchase' → logprob: -17.125001907348633
    8. '_record' → logprob: -17.500001907348633
    9. 'Re' → logprob: -17.625001907348633
    10. 'Records' → logprob: -17.875001907348633

Token 58: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.029179513454437256
    2. ''):' → logprob: -3.904179573059082
    3. '):' → logprob: -4.779179573059082
    4. ''' → logprob: -9.779179573059082
    5. ':' → logprob: -10.279179573059082
    6. ''):
' → logprob: -10.654179573059082
    7. '':
' → logprob: -11.154179573059082
    8. '':
' → logprob: -11.154179573059082
    9. '':'' → logprob: -11.404179573059082
    10. ''):
' → logprob: -11.779179573059082

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047190272016450763
    2. '        ' → logprob: -7.875472068786621
    3. 'tokens' → logprob: -10.125472068786621
    4. 'return' → logprob: -11.750472068786621
    5. ' tokens' → logprob: -11.875472068786621
    6. '    ' → logprob: -12.250472068786621
    7. ',' → logprob: -12.375472068786621
    8. '        
' → logprob: -12.375472068786621
    9. ')' → logprob: -12.625472068786621
    10. '      ' → logprob: -12.750472068786621

Token 60: ' parts' (ID: 7881)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.9878284931182861
    2. 'items' → logprob: -1.3628284931182861
    3. '       ' → logprob: -1.9878284931182861
    4. ' return' → logprob: -1.9878284931182861
    5. 'return' → logprob: -2.362828493118286
    6. ' tokens' → logprob: -6.737828254699707
    7. 'tokens' → logprob: -6.987828254699707
    8. ' parts' → logprob: -7.112828254699707
    9. 'parts' (adapté à ' parts') → logprob: -7.987828254699707
    10. '        ' → logprob: -8.862828254699707

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024780353996902704
    2. '=' → logprob: -6.002478122711182
    3. '   ' → logprob: -13.752477645874023
    4. ')' → logprob: -14.627477645874023
    5. '=line' → logprob: -14.752477645874023
    6. ' ' → logprob: -16.627477645874023
    7. '.' → logprob: -16.752477645874023
    8. '<|end|>' → logprob: -17.127477645874023
    9. '_tokens' → logprob: -17.252477645874023
    10. ' =)' → logprob: -17.252477645874023

Token 62: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07890355587005615
    2. 'line' → logprob: -2.5789036750793457
    3. '	line' → logprob: -11.828903198242188
    4. '[line' → logprob: -12.078903198242188
    5. '=line' → logprob: -14.703903198242188
    6. '(line' → logprob: -15.328903198242188
    7. '#line' → logprob: -15.953903198242188
    8. '   ' → logprob: -17.578903198242188
    9. '_line' → logprob: -17.953903198242188
    10. '.line' → logprob: -18.453903198242188

Token 63: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.11512783914804459
    2. '.' → logprob: -2.6151278018951416
    3. '.split' → logprob: -3.3651278018951416
    4. '.rstrip' → logprob: -6.990128040313721
    5. ' .' → logprob: -9.240127563476562
    6. '.trim' → logprob: -11.865127563476562
    7. '   ' → logprob: -13.240127563476562
    8. '.replace' → logprob: -13.865127563476562
    9. '       ' → logprob: -14.115127563476562
    10. 'split' → logprob: -14.365127563476562

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011053244583308697
    2. '()' → logprob: -4.511053085327148
    3. '(' → logprob: -12.636053085327148
    4. '().'' → logprob: -13.386053085327148
    5. '()
' → logprob: -15.761053085327148
    6. '('' → logprob: -15.761053085327148
    7. ' ().' → logprob: -16.26105308532715
    8. '()`' → logprob: -17.13605308532715
    9. '()

' → logprob: -17.26105308532715
    10. '().__' → logprob: -17.51105308532715

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -17.125
    3. 'spl' → logprob: -17.125
    4. '(split' → logprob: -18.375
    5. 'sp' → logprob: -18.875
    6. 'rstrip' → logprob: -18.875
    7. 'strip' → logprob: -20.25
    8. '.split' → logprob: -20.5
    9. 'plit' → logprob: -20.625
    10. '```' → logprob: -21.25

Token 66: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23951640725135803
    2. '(',' → logprob: -2.114516496658325
    3. '('' → logprob: -2.489516496658325
    4. '(' → logprob: -4.864516258239746
    5. '(",' → logprob: -7.114516258239746
    6. '(','' → logprob: -7.239516258239746
    7. '("' → logprob: -9.864516258239746
    8. '(),' → logprob: -11.239516258239746
    9. '('\' → logprob: -11.489516258239746
    10. '(';' → logprob: -12.489516258239746

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008907750248908997
    2. '[' → logprob: -5.008907794952393
    3. 'return' → logprob: -6.758907794952393
    4. 'items' → logprob: -7.383907794952393
    5. ' items' → logprob: -9.258907318115234
    6. ',' → logprob: -9.633907318115234
    7. ' return' → logprob: -10.133907318115234
    8. ' if' → logprob: -10.258907318115234
    9. '.items' → logprob: -10.258907318115234
    10. '(items' → logprob: -10.383907318115234

Token 68: ' m' (ID: 284)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010901735164225101
    2. 'items' → logprob: -5.010901927947998
    3. ' return' → logprob: -5.885901927947998
    4. '       ' → logprob: -6.760901927947998
    5. 'if' → logprob: -9.26090145111084
    6. 'n' → logprob: -9.76090145111084
    7. 'num' → logprob: -10.38590145111084
    8. ' items' → logprob: -10.51090145111084
    9. 'count' → logprob: -11.88590145111084
    10. '```' → logprob: -12.51090145111084

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1107478141784668
    2. '=' → logprob: -2.735747814178467
    3. '=int' → logprob: -4.110747814178467
    4. 'ap' → logprob: -4.985747814178467
    5. '_items' → logprob: -5.235747814178467
    6. '=len' → logprob: -5.485747814178467
    7. 'ax' → logprob: -6.485747814178467
    8. 'r' → logprob: -7.110747814178467
    9. 'p' → logprob: -7.235747814178467
    10. 's' → logprob: -7.610747814178467

Token 70: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1603182554244995
    2. ' int' → logprob: -1.9103182554244995
    3. 'len' → logprob: -10.035318374633789
    4. ' len' → logprob: -10.160318374633789
    5. '[int' → logprob: -11.785318374633789
    6. ' ' → logprob: -13.660318374633789
    7. ' parts' → logprob: -14.160318374633789
    8. 'parts' → logprob: -14.785318374633789
    9. 'in' → logprob: -14.785318374633789
    10. '  ' → logprob: -14.910318374633789

Token 71: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.000045776367188
    3. 'parts' → logprob: -15.750045776367188
    4. ' parts' → logprob: -18.125045776367188
    5. '(
' → logprob: -18.500045776367188
    6. ' (' → logprob: -19.000045776367188
    7. '(part' → logprob: -19.500045776367188
    8. '(m' → logprob: -20.625045776367188
    9. '(points' → logprob: -20.875045776367188
    10. '(p' → logprob: -21.500045776367188

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. ' [' → logprob: -17.3750057220459
    4. ')' → logprob: -17.5000057220459
    5. '[
' → logprob: -17.6250057220459
    6. '```' → logprob: -18.0000057220459
    7. '1' → logprob: -18.6250057220459
    8. '([' → logprob: -18.7500057220459
    9. '[-' → logprob: -18.8750057220459
    10. '()[' → logprob: -19.0000057220459

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -12.500004768371582
    3. '[' → logprob: -14.500004768371582
    4. ' ' → logprob: -15.750004768371582
    5. '
' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '```' → logprob: -18.625003814697266
    8. '-' → logprob: -19.375003814697266
    9. ')' → logprob: -19.375003814697266
    10. '00' → logprob: -19.750003814697266

Token 74: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009937642142176628
    2. ')' → logprob: -4.634937763214111
    3. '])
' → logprob: -9.259937286376953
    4. ']' → logprob: -9.634937286376953
    5. ' ])' → logprob: -11.884937286376953
    6. ''])' → logprob: -12.134937286376953
    7. ')
' → logprob: -12.634937286376953
    8. '))' → logprob: -13.884937286376953
    9. ')])' → logprob: -13.884937286376953
    10. ' )' → logprob: -14.509937286376953

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17130355536937714
    2. 'items' → logprob: -2.5463035106658936
    3. ' items' → logprob: -3.2963035106658936
    4. '
' → logprob: -4.421303749084473
    5. '        ' → logprob: -4.546303749084473
    6. ')' → logprob: -5.171303749084473
    7. '<|end|>' → logprob: -5.296303749084473
    8. '        
' → logprob: -5.921303749084473
    9. 'tokens' → logprob: -6.671303749084473
    10. '<|end|>' → logprob: -7.296303749084473

Token 76: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.13883717358112335
    2. 'items' (adapté à ' items') → logprob: -2.1388370990753174
    3. ' return' → logprob: -5.1388373374938965
    4. '       ' → logprob: -5.6388373374938965
    5. 'return' → logprob: -6.2638373374938965
    6. '_items' → logprob: -8.388836860656738
    7. '	items' → logprob: -9.638836860656738
    8. '        ' → logprob: -9.763836860656738
    9. '.items' → logprob: -10.263836860656738
    10. '(items' → logprob: -10.638836860656738

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693829834461212
    2. '=' → logprob: -2.1269383430480957
    3. '<|end|>' → logprob: -13.126937866210938
    4. ')' → logprob: -13.251937866210938
    5. '<|end|>' → logprob: -13.251937866210938
    6. '.' → logprob: -14.376937866210938
    7. '[:]' → logprob: -14.376937866210938
    8. ' =
' → logprob: -14.626937866210938
    9. ',' → logprob: -14.876937866210938
    10. ' ' → logprob: -14.876937866210938

Token 78: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.011097811162471771
    2. 'parts' → logprob: -4.5110979080200195
    3. '(parts' → logprob: -10.01109790802002
    4. '[' → logprob: -12.88609790802002
    5. ' ' → logprob: -14.13609790802002
    6. ' [' → logprob: -14.76109790802002
    7. ' partes' → logprob: -14.76109790802002
    8. '_parts' → logprob: -14.88609790802002
    9. '.parts' → logprob: -15.13609790802002
    10. '[]' → logprob: -15.76109790802002

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005265425890684128
    2. '1' → logprob: -5.255265235900879
    3. '```' → logprob: -10.755265235900879
    4. '   ' → logprob: -12.630265235900879
    5. ' [' → logprob: -13.255265235900879
    6. '[
' → logprob: -13.380265235900879
    7. ' ' → logprob: -13.505265235900879
    8. ':' → logprob: -14.630265235900879
    9. '       ' → logprob: -14.755265235900879
    10. '2' → logprob: -14.880265235900879

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0100624169572257e-05
    2. ':]' → logprob: -11.500020027160645
    3. ':' → logprob: -11.750020027160645
    4. ' ' → logprob: -14.125020027160645
    5. ']' → logprob: -15.250020027160645
    6. '```' → logprob: -15.250020027160645
    7. 'm' → logprob: -15.500020027160645
    8. ':]
' → logprob: -16.25002098083496
    9. '[' → logprob: -16.50002098083496
    10. '   ' → logprob: -17.00002098083496

Token 81: ':]
' (ID: 61598)
  Prédit: ':m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':m' → logprob: -0.3522792160511017
    2. ':]' → logprob: -1.6022791862487793
    3. ':' → logprob: -2.3522791862487793
    4. ' :' → logprob: -8.102279663085938
    5. ' :]' → logprob: -11.727279663085938
    6. 'm' → logprob: -12.727279663085938
    7. ':]
' → logprob: -12.852279663085938
    8. '：' → logprob: -13.102279663085938
    9. ':],' → logprob: -13.102279663085938
    10. ':mm' → logprob: -13.477279663085938

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02156768925487995
    2. '
' → logprob: -5.3965678215026855
    3. 'return' → logprob: -5.5215678215026855
    4. ')' → logprob: -6.0215678215026855
    5. '   ' → logprob: -6.1465678215026855
    6. '        ' → logprob: -6.2715678215026855
    7. '        
' → logprob: -6.3965678215026855
    8. ' ' → logprob: -6.6465678215026855
    9. '<|end|>' → logprob: -6.7715678215026855
    10. ' return' → logprob: -7.8965678215026855

Token 83: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12939117848873138
    2. 'return' → logprob: -3.0043911933898926
    3. ' ' → logprob: -3.2543911933898926
    4. '        ' → logprob: -4.129391193389893
    5. ' return' → logprob: -4.754391193389893
    6. ' 
' → logprob: -6.129391193389893
    7. '   ' → logprob: -6.379391193389893
    8. '        
' → logprob: -7.129391193389893
    9. ' if' → logprob: -7.629391193389893
    10. ')' → logprob: -7.754391193389893

Token 84: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.39266616106033325
    2. ' m' → logprob: -1.1426661014556885
    3. 'm' → logprob: -5.267666339874268
    4. 'len' → logprob: -7.517666339874268
    5. ' ' → logprob: -9.64266586303711
    6. ' not' → logprob: -11.64266586303711
    7. '	len' → logprob: -13.14266586303711
    8. '(len' → logprob: -13.51766586303711
    9. ' ' → logprob: -14.26766586303711
    10. ' l' → logprob: -15.14266586303711

Token 85: '(items' (ID: 50514)
  Prédit: '(items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(items' → logprob: -0.02345755137503147
    2. '(' → logprob: -3.7734575271606445
    3. ' (' → logprob: -8.648457527160645
    4. ' ' → logprob: -11.398457527160645
    5. ' items' → logprob: -11.398457527160645
    6. 'items' → logprob: -12.023457527160645
    7. '(parts' → logprob: -12.148457527160645
    8. '	items' → logprob: -13.648457527160645
    9. '(
' → logprob: -14.648457527160645
    10. '(item' → logprob: -15.398457527160645

Token 86: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11149974912405014
    2. '<|end|>' → logprob: -2.861499786376953
    3. ' <' → logprob: -4.236499786376953
    4. ')' → logprob: -4.486499786376953
    5. ' ' → logprob: -4.486499786376953
    6. '!=' → logprob: -4.611499786376953
    7. ' )' → logprob: -7.986499786376953
    8. '<' → logprob: -8.361499786376953
    9. ' ==' → logprob: -8.361499786376953
    10. ' <=' → logprob: -8.861499786376953

Token 87: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.22210295498371124
    2. ' <' → logprob: -2.4721028804779053
    3. '<|end|>' → logprob: -2.5971028804779053
    4. '!=' → logprob: -3.8471028804779053
    5. ' ' → logprob: -4.472103118896484
    6. '<' → logprob: -5.097103118896484
    7. ' <=' → logprob: -7.847103118896484
    8. ' ==' → logprob: -8.222103118896484
    9. '  ' → logprob: -8.847103118896484
    10. ')' → logprob: -9.222103118896484

Token 88: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.04881059750914574
    2. 'm' → logprob: -3.0488104820251465
    3. ' ' → logprob: -8.423810958862305
    4. ' ' → logprob: -12.798810958862305
    5. '	m' → logprob: -14.423810958862305
    6. '<|end|>' → logprob: -16.423810958862305
    7. ' 
' → logprob: -16.548810958862305
    8. ' м' → logprob: -16.798810958862305
    9. ' ‌' → logprob: -18.423810958862305
    10. '‌' → logprob: -18.548810958862305

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004098195640835911
    2. ':
' → logprob: -8.125410079956055
    3. ':return' → logprob: -9.625410079956055
    4. '):' → logprob: -10.250410079956055
    5. ' :' → logprob: -11.875410079956055
    6. ')' → logprob: -13.250410079956055
    7. ':**' → logprob: -13.875410079956055
    8. ' or' → logprob: -14.250410079956055
    9. '<|end|>' → logprob: -14.500410079956055
    10. ',' → logprob: -15.125410079956055

Token 90: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005441262852400541
    2. ':return' → logprob: -5.630441188812256
    3. ':
' → logprob: -7.130441188812256
    4. ' :' → logprob: -7.755441188812256
    5. '):' → logprob: -8.380441665649414
    6. '       ' → logprob: -8.630441665649414
    7. '   ' → logprob: -10.255441665649414
    8. ')' → logprob: -10.380441665649414
    9. '           ' → logprob: -10.380441665649414
    10. ' ' → logprob: -10.630441665649414

Token 91: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.03890136629343033
    2. 'raise' (adapté à ' raise') → logprob: -3.2889013290405273
    3. ' ' → logprob: -8.038901329040527
    4. '    ' → logprob: -8.788901329040527
    5. ' 
' → logprob: -8.788901329040527
    6. '	raise' → logprob: -9.538901329040527
    7. '       ' → logprob: -10.038901329040527
    8. ' ' → logprob: -11.038901329040527
    9. '        ' → logprob: -11.163901329040527
    10. '_raise' → logprob: -11.163901329040527

Token 92: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.023282986134290695
    2. ' ' → logprob: -3.773283004760742
    3. 'Value' → logprob: -10.773283004760742
    4. ' Val' → logprob: -11.398283004760742
    5. '	Value' → logprob: -13.273283004760742
    6. '  ' → logprob: -13.398283004760742
    7. ' Va' → logprob: -14.523283004760742
    8. '<|end|>' → logprob: -14.648283004760742
    9. ' ' → logprob: -14.773283004760742
    10. '(Value' → logprob: -15.648283004760742

Token 93: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.12794241309165955
    2. 'rror' → logprob: -2.1279423236846924
    3. 'r' → logprob: -7.3779425621032715
    4. 'ror' → logprob: -7.8779425621032715
    5. 'rr' → logprob: -12.502942085266113
    6. 'Value' → logprob: -12.752942085266113
    7. 'n' → logprob: -13.502942085266113
    8. 'f' → logprob: -14.252942085266113
    9. '       ' → logprob: -15.877942085266113
    10. '   ' → logprob: -16.25294303894043

Token 94: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20306982100009918
    2. '("' → logprob: -1.703069806098938
    3. '('' → logprob: -7.078069686889648
    4. '(
' → logprob: -7.203069686889648
    5. '()' → logprob: -10.578069686889648
    6. '(f' → logprob: -10.578069686889648
    7. '(

' → logprob: -11.828069686889648
    8. '("")' → logprob: -12.578069686889648
    9. '("("' → logprob: -12.578069686889648
    10. '(
' → logprob: -14.578069686889648

Token 95: 'Mismatch' (ID: 106542)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.3473551869392395
    2. ' Invalid' → logprob: -2.3473551273345947
    3. 'Number' → logprob: -2.7223551273345947
    4. 'Input' → logprob: -2.8473551273345947
    5. ' Number' → logprob: -3.4723551273345947
    6. 'Mismatch' → logprob: -3.9723551273345947
    7. ' M' → logprob: -5.222355365753174
    8. 'Item' → logprob: -5.222355365753174
    9. ' Input' → logprob: -5.472355365753174
    10. ' items' → logprob: -6.097355365753174

Token 96: ' between' (ID: 2870)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10647477954626083
    2. ' ' → logprob: -2.9814748764038086
    3. ' between' → logprob: -3.1064748764038086
    4. '<|end|>' → logprob: -5.856474876403809
    5. ' )' → logprob: -7.231474876403809
    6. ' items' → logprob: -7.856474876403809
    7. ':' → logprob: -7.981474876403809
    8. ' number' → logprob: -8.231474876403809
    9. '<|end|>' → logprob: -8.231474876403809
    10. ' of' → logprob: -8.606474876403809

Token 97: ' declared' (ID: 29486)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4384925067424774
    2. ' m' → logprob: -1.3134925365447998
    3. ' number' → logprob: -2.8134925365448
    4. ' items' → logprob: -4.188492298126221
    5. ' the' → logprob: -5.313492298126221
    6. 'number' → logprob: -6.188492298126221
    7. 'items' → logprob: -6.313492298126221
    8. ' item' → logprob: -6.563492298126221
    9. 'item' → logprob: -8.313492774963379
    10. 'the' → logprob: -8.938492774963379

Token 98: ' count' (ID: 3605)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.22319698333740234
    2. ' item' → logprob: -1.9731969833374023
    3. ' and' → logprob: -3.5981969833374023
    4. ' count' → logprob: -4.348196983337402
    5. ' items' → logprob: -4.348196983337402
    6. ' ' → logprob: -5.223196983337402
    7. 'number' → logprob: -6.848196983337402
    8. 'count' → logprob: -7.723196983337402
    9. 'item' → logprob: -7.848196983337402
    10. ' length' → logprob: -9.348196983337402

Token 99: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0003124632057733834
    2. ' ' → logprob: -8.875312805175781
    3. 'and' → logprob: -9.250312805175781
    4. ' of' → logprob: -9.500312805175781
    5. 's' → logprob: -14.750312805175781
    6. ' an' → logprob: -14.875312805175781
    7. '  ' → logprob: -15.000312805175781
    8. ' a' → logprob: -15.375312805175781
    9. 'm' → logprob: -16.50031280517578
    10. ' и' → logprob: -17.25031280517578

Token 100: ' items' (ID: 4732)
  Prédit: ' actual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' actual' → logprob: -0.35540637373924255
    2. ' items' → logprob: -1.230406403541565
    3. ' number' → logprob: -5.355406284332275
    4. ' item' → logprob: -6.480406284332275
    5. ' the' → logprob: -8.355406761169434
    6. 'actual' → logprob: -8.605406761169434
    7. 'items' → logprob: -9.355406761169434
    8. ' provided' → logprob: -9.605406761169434
    9. ' ' → logprob: -10.230406761169434
    10. ' list' → logprob: -10.730406761169434

Token 101: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.14632001519203186
    2. '")' → logprob: -2.396320104598999
    3. ' length' → logprob: -3.646320104598999
    4. 'count' → logprob: -4.64631986618042
    5. ' provided' → logprob: -5.14631986618042
    6. '_count' → logprob: -7.14631986618042
    7. '")
' → logprob: -7.27131986618042
    8. ' ")' → logprob: -7.39631986618042
    9. 'length' → logprob: -7.52131986618042
    10. ' number' → logprob: -8.021320343017578

Token 102: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.47596222162246704
    2. '")
' → logprob: -0.975962221622467
    3. '.")
' → logprob: -7.100962162017822
    4. '.")' → logprob: -7.100962162017822
    5. ')' → logprob: -9.47596263885498
    6. '")
' → logprob: -9.97596263885498
    7. ' ")' → logprob: -10.35096263885498
    8. ' ")
' → logprob: -10.97596263885498
    9. '"' → logprob: -11.10096263885498
    10. ':' → logprob: -11.10096263885498

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014124969020485878
    2. '        
' → logprob: -6.876412391662598
    3. ' return' → logprob: -9.251412391662598
    4. '   ' → logprob: -9.376412391662598
    5. '
' → logprob: -9.626412391662598
    6. 'return' → logprob: -10.126412391662598
    7. ' 
' → logprob: -11.126412391662598
    8. '<|end|>' → logprob: -11.501412391662598
    9. ')' → logprob: -11.751412391662598
    10. '    
' → logprob: -11.751412391662598

Token 104: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011720683425664902
    2. 'return' (adapté à ' return') → logprob: -4.636720657348633
    3. ' return' → logprob: -6.511720657348633
    4. '
' → logprob: -8.761720657348633
    5. '   ' → logprob: -8.886720657348633
    6. '        
' → logprob: -9.261720657348633
    7. '	' → logprob: -11.261720657348633
    8. '    ' → logprob: -11.761720657348633
    9. ' 
' → logprob: -11.761720657348633
    10. '      ' → logprob: -11.761720657348633

Token 105: ' cls' (ID: 26133)
  Prédit: ' cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cls' → logprob: -0.38687291741371155
    2. 'cls' → logprob: -1.1368728876113892
    3. 'Purchase' → logprob: -13.636873245239258
    4. ' Purchase' → logprob: -14.636873245239258
    5. '(cls' → logprob: -16.136873245239258
    6. 'cl' → logprob: -16.761873245239258
    7. '.cls' → logprob: -17.636873245239258
    8. 'Cls' → logprob: -18.011873245239258
    9. 'classmethod' → logprob: -18.511873245239258
    10. 'purchase' → logprob: -19.261873245239258

Token 106: '(items' (ID: 50514)
  Prédit: '(items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(items' → logprob: -0.1288096010684967
    2. '(' → logprob: -2.128809690475464
    3. '(line' → logprob: -7.128809452056885
    4. '(parts' → logprob: -7.128809452056885
    5. '(
' → logprob: -8.753809928894043
    6. ' (' → logprob: -9.878809928894043
    7. '(lines' → logprob: -11.253809928894043
    8. '(Line' → logprob: -11.628809928894043
    9. 'items' → logprob: -12.128809928894043
    10. '([' → logprob: -12.378809928894043

Token 107: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ')
' → logprob: -11.375014305114746
    3. ' )' → logprob: -13.750014305114746
    4. '<|end|>' → logprob: -13.750014305114746
    5. ')return' → logprob: -15.000014305114746
    6. '   ' → logprob: -16.125015258789062
    7. ')

' → logprob: -16.875015258789062
    8. ')#' → logprob: -17.125015258789062
    9. ')`' → logprob: -17.125015258789062
    10. '),' → logprob: -17.250015258789062

Token 108: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47119539976119995
    2. '   ' → logprob: -1.7211954593658447
    3. 'def' → logprob: -1.8461954593658447
    4. '    
' → logprob: -3.9711954593658447
    5. '\n' → logprob: -5.221195220947266
    6. ':' → logprob: -6.221195220947266
    7. '<|end|>' → logprob: -6.471195220947266
    8. ')' → logprob: -6.596195220947266
    9. '```' → logprob: -6.596195220947266
    10. ' 
' → logprob: -6.721195220947266

Token 109: ' Pair' (ID: 41250)
  Prédit: ' Basket'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Basket' → logprob: -1.029920220375061
    2. ' Market' → logprob: -1.529920220375061
    3. ' Purchase' → logprob: -2.0299201011657715
    4. ' Apr' → logprob: -2.2799201011657715
    5. ' Association' → logprob: -2.4049201011657715
    6. ' Frequent' → logprob: -3.6549201011657715
    7. ' Item' → logprob: -3.7799201011657715
    8. ' ' → logprob: -4.6549201011657715
    9. ' Product' → logprob: -4.6549201011657715
    10. ' Transaction' → logprob: -5.1549201011657715

Token 110: 'Frequency' (ID: 45815)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8716508746147156
    2. 'Frequency' → logprob: -1.3716509342193604
    3. 'Counter' → logprob: -2.6216509342193604
    4. 'wise' → logprob: -2.7466509342193604
    5. 'Count' → logprob: -3.2466509342193604
    6. 'Association' → logprob: -3.4966509342193604
    7. 'Finder' → logprob: -3.8716509342193604
    8. 'Fre' → logprob: -3.9966509342193604
    9. 'Analyzer' → logprob: -3.9966509342193604
    10. '[' → logprob: -4.871650695800781

Token 111: 'Counter' (ID: 16263)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006721630343236029
    2. '(' → logprob: -7.500672340393066
    3. ':
' → logprob: -9.875672340393066
    4. ' :' → logprob: -11.000672340393066
    5. '():' → logprob: -11.500672340393066
    6. '):' → logprob: -11.750672340393066
    7. '{' → logprob: -12.125672340393066
    8. ':**' → logprob: -12.375672340393066
    9. '>:' → logprob: -13.250672340393066
    10. ':

' → logprob: -13.250672340393066

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013202552509028465
    2. ':
' → logprob: -9.750131607055664
    3. ' :' → logprob: -10.125131607055664
    4. '(' → logprob: -11.500131607055664
    5. '<|end|>' → logprob: -11.625131607055664
    6. '():' → logprob: -12.000131607055664
    7. '):' → logprob: -12.750131607055664
    8. ':def' → logprob: -13.500131607055664
    9. ':**' → logprob: -13.750131607055664
    10. ':

' → logprob: -14.250131607055664

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003270023735240102
    2. ' def' → logprob: -8.375327110290527
    3. 'def' → logprob: -9.875327110290527
    4. '    
' → logprob: -10.125327110290527
    5. '
' → logprob: -13.250327110290527
    6. '```' → logprob: -14.125327110290527
    7. '	def' → logprob: -14.500327110290527
    8. '4' → logprob: -15.375327110290527
    9. ')' → logprob: -15.500327110290527
    10. ' ' → logprob: -15.625327110290527

Token 114: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.26638513803482056
    2. '   ' → logprob: -1.7663850784301758
    3. 'def' (adapté à ' def') → logprob: -2.766385078430176
    4. ' ' → logprob: -11.891385078430176
    5. '	def' → logprob: -12.266385078430176
    6. '    
' → logprob: -13.141385078430176
    7. '
' → logprob: -14.266385078430176
    8. ':' → logprob: -14.266385078430176
    9. '    ' → logprob: -14.516385078430176
    10. '  ' → logprob: -14.766385078430176

Token 115: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.13956062495708466
    2. ' init' → logprob: -2.6395606994628906
    3. ' ' → logprob: -3.1395606994628906
    4. ' _' → logprob: -4.639560699462891
    5. 'init' → logprob: -6.014560699462891
    6. ' ' → logprob: -6.639560699462891
    7. '_init' → logprob: -7.014560699462891
    8. ' def' → logprob: -7.889560699462891
    9. '__' → logprob: -8.38956069946289
    10. ' calculate' → logprob: -9.13956069946289

Token 116: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.875000953674316
    3. ' init' → logprob: -15.250000953674316
    4. 'nit' → logprob: -16.125001907348633
    5. 'in' → logprob: -16.375001907348633
    6. 'i' → logprob: -16.875001907348633
    7. 'int' → logprob: -17.125001907348633
    8. 'ini' → logprob: -17.375001907348633
    9. 'def' → logprob: -17.500001907348633
    10. 'it' → logprob: -18.000001907348633

Token 117: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008717277087271214
    2. '(self' → logprob: -5.008717060089111
    3. ' (' → logprob: -6.758717060089111
    4. '(' → logprob: -8.13371753692627
    5. '__' → logprob: -8.13371753692627
    6. '__(
' → logprob: -8.38371753692627
    7. ' ' → logprob: -12.25871753692627
    8. ')(' → logprob: -12.25871753692627
    9. '_(' → logprob: -12.50871753692627
    10. '__((' → logprob: -12.63371753692627

Token 118: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002554615493863821
    2. ')' → logprob: -6.127554416656494
    3. '):
' → logprob: -8.002554893493652
    4. '):' → logprob: -11.252554893493652
    5. ' self' → logprob: -11.877554893493652
    6. '):

' → logprob: -11.877554893493652
    7. '
' → logprob: -12.502554893493652
    8. '   ' → logprob: -13.877554893493652
    9. '	self' → logprob: -13.877554893493652
    10. '       ' → logprob: -14.502554893493652

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21911126375198364
    2. ',' → logprob: -2.219111204147339
    3. ')' → logprob: -2.844111204147339
    4. ' ):' → logprob: -3.969111204147339
    5. '):
' → logprob: -4.719111442565918
    6. ' )' → logprob: -6.844111442565918
    7. ' ,' → logprob: -7.594111442565918
    8. ':' → logprob: -8.844111442565918
    9. 'self' → logprob: -9.719111442565918
    10. ' ' → logprob: -9.844111442565918

Token 120: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5096466541290283
    2. '       ' → logprob: -1.1346466541290283
    3. '):
' → logprob: -3.6346466541290283
    4. '   ' → logprob: -4.009646415710449
    5. ' self' → logprob: -4.009646415710449
    6. ')' → logprob: -4.884646415710449
    7. '):' → logprob: -5.509646415710449
    8. '[]' → logprob: -7.259646415710449
    9. 'default' → logprob: -7.384646415710449
    10. ' defaultdict' → logprob: -7.384646415710449

Token 121: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5880454778671265
    2. ' self' → logprob: -0.8380454778671265
    3. '       ' → logprob: -4.963045597076416
    4. ' defaultdict' → logprob: -5.463045597076416
    5. '   ' → logprob: -7.588045597076416
    6. 'default' → logprob: -8.463045120239258
    7. ' ' → logprob: -10.338045120239258
    8. '	self' → logprob: -10.463045120239258
    9. '           ' → logprob: -12.588045120239258
    10. ' default' → logprob: -12.713045120239258

Token 122: '.frequency' (ID: 182193)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.15292847156524658
    2. '.freq' → logprob: -2.527928352355957
    3. '.frequency' → logprob: -3.652928352355957
    4. ' .' → logprob: -4.527928352355957
    5. '.f' → logprob: -4.652928352355957
    6. '.' → logprob: -4.777928352355957
    7. '.count' → logprob: -6.402928352355957
    8. '.counter' → logprob: -6.527928352355957
    9. '.data' → logprob: -6.777928352355957
    10. '.fre' → logprob: -6.777928352355957

Token 123: '_map' (ID: 11824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2186342030763626
    2. '=' → logprob: -2.0936341285705566
    3. 's' → logprob: -2.7186341285705566
    4. ':' → logprob: -4.968634128570557
    5. ' ' → logprob: -8.843634605407715
    6. '_map' → logprob: -10.718634605407715
    7. '_pairs' → logprob: -11.468634605407715
    8. '_' → logprob: -11.843634605407715
    9. '_dict' → logprob: -11.843634605407715
    10. '_counts' → logprob: -11.843634605407715

Token 124: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04914397373795509
    2. '=' → logprob: -3.0491440296173096
    3. ':' → logprob: -7.5491437911987305
    4. ' ' → logprob: -10.67414379119873
    5. ' :' → logprob: -12.04914379119873
    6. '  ' → logprob: -14.92414379119873
    7. ' defaultdict' → logprob: -15.04914379119873
    8. '   ' → logprob: -16.049144744873047
    9. '[' → logprob: -16.174144744873047
    10. 's' → logprob: -18.174144744873047

Token 125: ' Dict' (ID: 55179)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.28543975949287415
    2. 'Dict' → logprob: -1.9104397296905518
    3. 'Default' → logprob: -2.6604397296905518
    4. ' defaultdict' → logprob: -3.7854397296905518
    5. ' Dict' → logprob: -5.035439968109131
    6. ' default' → logprob: -7.535439968109131
    7. ' Default' → logprob: -7.535439968109131
    8. '"default' → logprob: -9.785439491271973
    9. ' ' → logprob: -10.910439491271973
    10. '   ' → logprob: -11.410439491271973

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007199380779638886
    2. '[str' → logprob: -7.250720024108887
    3. '[
' → logprob: -11.875720024108887
    4. ' ' → logprob: -14.000720024108887
    5. '[(' → logprob: -14.250720024108887
    6. '[T' → logprob: -14.250720024108887
    7. '<Tuple' → logprob: -15.000720024108887
    8. '[List' → logprob: -15.125720024108887
    9. '   ' → logprob: -15.500720024108887
    10. ' [' → logprob: -15.875720024108887

Token 127: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0022764618042856455
    2. ' Tuple' → logprob: -6.127276420593262
    3. 'str' → logprob: -9.627276420593262
    4. 'Tu' → logprob: -11.377276420593262
    5. 'tuple' → logprob: -12.377276420593262
    6. 'fro' → logprob: -12.627276420593262
    7. ' ' → logprob: -12.752276420593262
    8. ' str' → logprob: -13.752276420593262
    9. '   ' → logprob: -14.127276420593262
    10. '[' → logprob: -15.127276420593262

Token 128: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.6240566083070007e-06
    2. '[int' → logprob: -13.625001907348633
    3. 'str' → logprob: -14.750001907348633
    4. '[' → logprob: -17.375001907348633
    5. ',str' → logprob: -18.500001907348633
    6. ',' → logprob: -18.875001907348633
    7. '(str' → logprob: -18.875001907348633
    8. ' ' → logprob: -20.125001907348633
    9. ' str' → logprob: -20.250001907348633
    10. '[
' → logprob: -20.250001907348633

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.130576806142926e-05
    2. ' ,' → logprob: -10.625031471252441
    3. ',str' → logprob: -12.125031471252441
    4. ' ' → logprob: -14.625031471252441
    5. ',
' → logprob: -15.125031471252441
    6. ',int' → logprob: -16.125030517578125
    7. '‌,' → logprob: -16.125030517578125
    8. ',List' → logprob: -16.250030517578125
    9. '',' → logprob: -16.625030517578125
    10. ',String' → logprob: -16.750030517578125

Token 130: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.11294859647750854
    2. ' str' → logprob: -2.2379486560821533
    3. ' ' → logprob: -10.237948417663574
    4. '[str' → logprob: -10.612948417663574
    5. '...' → logprob: -10.987948417663574
    6. '
' → logprob: -12.112948417663574
    7. '	str' → logprob: -12.112948417663574
    8. 'int' → logprob: -12.362948417663574
    9. '   ' → logprob: -12.487948417663574
    10. 'Str' → logprob: -12.550448417663574

Token 131: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -6.73052782076411e-05
    2. ' ],' → logprob: -10.250067710876465
    3. ']' → logprob: -10.750067710876465
    4. ''],' → logprob: -12.875067710876465
    5. ',' → logprob: -13.000067710876465
    6. ']]' → logprob: -13.375067710876465
    7. '"],' → logprob: -13.500067710876465
    8. '),' → logprob: -13.625067710876465
    9. '],
' → logprob: -14.750067710876465
    10. ']],' → logprob: -14.750067710876465

Token 132: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01604340225458145
    2. ' int' → logprob: -4.141043186187744
    3. '[int' → logprob: -12.516043663024902
    4. ']int' → logprob: -12.516043663024902
    5. '	int' → logprob: -14.891043663024902
    6. '<int' → logprob: -15.266043663024902
    7. ' ' → logprob: -15.641043663024902
    8. '=int' → logprob: -15.766043663024902
    9. 'default' → logprob: -15.891043663024902
    10. ' defaultdict' → logprob: -16.141042709350586

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002217748697148636
    2. ' ]' → logprob: -8.625222206115723
    3. ']=' → logprob: -10.125222206115723
    4. ']>' → logprob: -14.375222206115723
    5. ' ' → logprob: -14.500222206115723
    6. '[' → logprob: -15.375222206115723
    7. '>' → logprob: -15.500222206115723
    8. '   ' → logprob: -16.000221252441406
    9. ']
' → logprob: -16.250221252441406
    10. ']]' → logprob: -16.500221252441406

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931570172309875
    2. ' =' → logprob: -0.6931570172309875
    3. ' ' → logprob: -11.693157196044922
    4. ']' → logprob: -13.693157196044922
    5. ')' → logprob: -15.943157196044922
    6. '  ' → logprob: -16.318157196044922
    7. '   ' → logprob: -16.693157196044922
    8. '>' → logprob: -17.193157196044922
    9. ']=' → logprob: -18.193157196044922
    10. '[' → logprob: -18.693157196044922

Token 135: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0008085522567853332
    2. ' defaultdict' → logprob: -7.1258087158203125
    3. ' default' → logprob: -12.750808715820312
    4. '(default' → logprob: -14.500808715820312
    5. '"default' → logprob: -15.250808715820312
    6. '.default' → logprob: -16.000808715820312
    7. '   ' → logprob: -16.125808715820312
    8. ''default' → logprob: -16.125808715820312
    9. '	default' → logprob: -16.250808715820312
    10. 'collections' → logprob: -17.500808715820312

Token 136: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014307129895314574
    2. '(lambda' → logprob: -6.876430511474609
    3. ' (' → logprob: -8.00143051147461
    4. '(' → logprob: -10.75143051147461
    5. '(list' → logprob: -10.87643051147461
    6. ')(' → logprob: -11.87643051147461
    7. '<int' → logprob: -12.62643051147461
    8. ']int' → logprob: -13.00143051147461
    9. '```' → logprob: -13.50143051147461
    10. '   ' → logprob: -13.50143051147461

Token 137: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ')
' → logprob: -12.25001049041748
    3. ' )' → logprob: -12.25001049041748
    4. ')

' → logprob: -15.75001049041748
    5. '   ' → logprob: -15.87501049041748
    6. '       ' → logprob: -16.125009536743164
    7. ' ' → logprob: -16.750009536743164
    8. '}' → logprob: -16.875009536743164
    9. '<|end|>' → logprob: -17.375009536743164
    10. ')`' → logprob: -17.625009536743164

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026217155158519745
    2. '    
' → logprob: -4.151216983795166
    3. '   ' → logprob: -5.276216983795166
    4. '  
' → logprob: -5.901216983795166
    5. ' 
' → logprob: -6.276216983795166
    6. '<|end|>' → logprob: -8.776217460632324
    7. '

' → logprob: -9.651217460632324
    8. '        
' → logprob: -9.901217460632324
    9. '   
' → logprob: -9.901217460632324
    10. ' ' → logprob: -11.026217460632324

Token 139: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024862384889274836
    2. ' def' → logprob: -6.002486228942871
    3. '   ' → logprob: -11.502486228942871
    4. '
' → logprob: -15.252486228942871
    5. '    
' → logprob: -16.127487182617188
    6. ' ' → logprob: -17.127487182617188
    7. ' 
' → logprob: -18.252487182617188
    8. '	def' → logprob: -18.252487182617188
    9. 'de' → logprob: -18.377487182617188
    10. '  ' → logprob: -20.377487182617188

Token 140: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.3200327157974243
    2. ' update' → logprob: -1.4450327157974243
    3. ' process' → logprob: -3.3200325965881348
    4. ' def' → logprob: -7.195032596588135
    5. ' ' → logprob: -8.195033073425293
    6. ' increment' → logprob: -8.695033073425293
    7. ' count' → logprob: -8.945033073425293
    8. ' calculate' → logprob: -8.945033073425293
    9. ' record' → logprob: -9.320033073425293
    10. 'add' → logprob: -9.445033073425293

Token 141: '_purchase' (ID: 147627)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.3929709792137146
    2. '_pairs' → logprob: -1.7679710388183594
    3. '(' → logprob: -2.1429710388183594
    4. '_purchase' → logprob: -4.517971038818359
    5. '_' → logprob: -5.017971038818359
    6. '_item' → logprob: -5.267971038818359
    7. '_items' → logprob: -5.267971038818359
    8. ' ' → logprob: -5.892971038818359
    9. ' (' → logprob: -6.392971038818359
    10. '_p' → logprob: -6.392971038818359

Token 142: '_record' (ID: 26649)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09181293845176697
    2. '(' → logprob: -2.9668128490448
    3. '_record' → logprob: -3.3418128490448
    4. '(record' → logprob: -7.841813087463379
    5. 'record' → logprob: -9.091813087463379
    6. ' (' → logprob: -9.216813087463379
    7. 'Record' → logprob: -9.341813087463379
    8. '(
' → logprob: -9.466813087463379
    9. '_records' → logprob: -10.466813087463379
    10. '_items' → logprob: -10.716813087463379

Token 143: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002694416616577655
    2. '(' → logprob: -8.250269889831543
    3. ' (' → logprob: -12.375269889831543
    4. '(
' → logprob: -13.125269889831543
    5. '(s' → logprob: -13.750269889831543
    6. 'self' → logprob: -15.250269889831543
    7. '(p' → logprob: -15.500269889831543
    8. '(this' → logprob: -16.625268936157227
    9. '(sel' → logprob: -16.750268936157227
    10. '   ' → logprob: -17.250268936157227

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045486391172744334
    2. ' ,' → logprob: -8.125454902648926
    3. ':' → logprob: -10.000454902648926
    4. '):' → logprob: -10.375454902648926
    5. 'self' → logprob: -10.875454902648926
    6. ',p' → logprob: -11.250454902648926
    7. ',
' → logprob: -11.375454902648926
    8. ')' → logprob: -11.625454902648926
    9. '.purchase' → logprob: -11.875454902648926
    10. ' purchase' → logprob: -12.375454902648926

Token 145: ' record' (ID: 3704)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0106351375579834
    2. 'self' → logprob: -1.2606351375579834
    3. ' purchase' → logprob: -1.8856351375579834
    4. ' record' → logprob: -2.5106351375579834
    5. 'record' → logprob: -2.7606351375579834
    6. 'purchase' → logprob: -2.8856351375579834
    7. '       ' → logprob: -9.260635375976562
    8. '   ' → logprob: -9.510635375976562
    9. ')' → logprob: -9.510635375976562
    10. ' purchases' → logprob: -10.010635375976562

Token 146: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03401816636323929
    2. '):' → logprob: -3.4090182781219482
    3. ')' → logprob: -9.034018516540527
    4. ' :' → logprob: -9.034018516540527
    5. '):
' → logprob: -9.784018516540527
    6. ' ):' → logprob: -10.034018516540527
    7. ' ' → logprob: -11.284018516540527
    8. ',' → logprob: -12.284018516540527
    9. '   ' → logprob: -12.659018516540527
    10. '<|end|>' → logprob: -13.159018516540527

Token 147: ' Purchase' (ID: 37646)
  Prédit: ' Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Purchase' → logprob: -0.1427011936903
    2. 'Purchase' → logprob: -2.0177011489868164
    3. ' purchase' → logprob: -11.517701148986816
    4. ' ' → logprob: -12.017701148986816
    5. ')' → logprob: -12.642701148986816
    6. '_purchase' → logprob: -12.642701148986816
    7. 'purchase' → logprob: -14.017701148986816
    8. '
' → logprob: -14.892701148986816
    9. 'Purch' → logprob: -14.892701148986816
    10. '   ' → logprob: -14.892701148986816

Token 148: 'Record' (ID: 6721)
  Prédit: 'Record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Record' → logprob: -2.45848218582978e-06
    2. 'record' → logprob: -13.75000286102295
    3. '_record' → logprob: -14.75000286102295
    4. ' Record' → logprob: -15.25000286102295
    5. '_Record' → logprob: -15.50000286102295
    6. '<Record' → logprob: -15.62500286102295
    7. 'Records' → logprob: -16.875001907348633
    8. 'Purchase' → logprob: -17.125001907348633
    9. '_RECORD' → logprob: -17.500001907348633
    10. 'Rec' → logprob: -17.500001907348633

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12724588811397552
    2. ')' → logprob: -2.3772459030151367
    3. '):
' → logprob: -3.6272459030151367
    4. '):
' → logprob: -10.127245903015137
    5. '   ' → logprob: -11.127245903015137
    6. ':' → logprob: -11.252245903015137
    7. ' ):' → logprob: -11.627245903015137
    8. ')->' → logprob: -12.377245903015137
    9. ' )' → logprob: -13.127245903015137
    10. '       ' → logprob: -13.252245903015137

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023369524569716305
    2. '        
' → logprob: -8.87523365020752
    3. '
' → logprob: -10.50023365020752
    4. '   ' → logprob: -11.12523365020752
    5. ',' → logprob: -11.75023365020752
    6. '    ' → logprob: -11.87523365020752
    7. '      ' → logprob: -11.87523365020752
    8. '    
' → logprob: -11.87523365020752
    9. ' ' → logprob: -12.37523365020752
    10. ':' → logprob: -12.50023365020752

Token 151: ' sorted' (ID: 20099)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31243953108787537
    2. ' items' → logprob: -1.4374395608901978
    3. 'items' → logprob: -4.187439441680908
    4. ' from' → logprob: -4.812439441680908
    5. ' for' → logprob: -5.687439441680908
    6. ' n' → logprob: -6.562439441680908
    7. 'from' → logprob: -6.937439441680908
    8. 'n' → logprob: -8.062439918518066
    9. '        ' → logprob: -8.062439918518066
    10. ' sorted' → logprob: -8.312439918518066

Token 152: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.00010866894444916397
    2. 'items' → logprob: -10.12510871887207
    3. '_' → logprob: -10.75010871887207
    4. 'ed' → logprob: -11.00010871887207
    5. 's' → logprob: -11.50010871887207
    6. '_pairs' → logprob: -12.37510871887207
    7. 'd' → logprob: -13.12510871887207
    8. '```' → logprob: -13.12510871887207
    9. '_tokens' → logprob: -13.50010871887207
    10. '(items' → logprob: -13.62510871887207

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011056549847126007
    2. '=' → logprob: -4.511056423187256
    3. ' ' → logprob: -12.761056900024414
    4. '        ' → logprob: -13.636056900024414
    5. 's' → logprob: -14.011056900024414
    6. '   ' → logprob: -14.011056900024414
    7. '       ' → logprob: -14.261056900024414
    8. ')' → logprob: -14.761056900024414
    9. '    ' → logprob: -14.761056900024414
    10. '	' → logprob: -15.011056900024414

Token 154: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.023246407508850098
    2. 'sorted' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.773246765136719
    4. '(sorted' → logprob: -15.273246765136719
    5. ' list' → logprob: -15.898246765136719
    6. '   ' → logprob: -16.52324676513672
    7. '.sorted' → logprob: -17.39824676513672
    8. ' tuple' → logprob: -17.89824676513672
    9. ' ' → logprob: -19.77324676513672
    10. 'list' → logprob: -20.39824676513672

Token 155: '(record' (ID: 42175)
  Prédit: '(record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(record' → logprob: -7.815280696377158e-05
    2. '(' → logprob: -10.250078201293945
    3. '(set' → logprob: -10.250078201293945
    4. 'record' → logprob: -11.875078201293945
    5. '(list' → logprob: -16.000078201293945
    6. ' (' → logprob: -16.250078201293945
    7. '(records' → logprob: -16.875078201293945
    8. '	record' → logprob: -17.250078201293945
    9. '(
' → logprob: -17.875078201293945
    10. ' record' → logprob: -18.125078201293945

Token 156: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.000217006730963476
    2. '.' → logprob: -8.62521743774414
    3. ' .' → logprob: -10.62521743774414
    4. 'items' → logprob: -11.62521743774414
    5. ').' → logprob: -12.87521743774414
    6. ' items' → logprob: -15.25021743774414
    7. '	items' → logprob: -15.87521743774414
    8. '.Items' → logprob: -16.00021743774414
    9. '.tokens' → logprob: -16.25021743774414
    10. '_items' → logprob: -16.50021743774414

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033295683097094297
    2. '())' → logprob: -6.378329753875732
    3. ' )' → logprob: -6.753329753875732
    4. ')
' → logprob: -7.878329753875732
    5. '()' → logprob: -9.878329277038574
    6. ' ' → logprob: -12.253329277038574
    7. '))' → logprob: -12.503329277038574
    8. '   ' → logprob: -12.878329277038574
    9. '())
' → logprob: -13.003329277038574
    10. ' )
' → logprob: -13.378329277038574

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004797138273715973
    2. '
' → logprob: -5.504796981811523
    3. ' for' → logprob: -7.504796981811523
    4. 'for' → logprob: -9.004796981811523
    5. ',' → logprob: -11.254796981811523
    6. '        
' → logprob: -11.379796981811523
    7. 'n' → logprob: -12.379796981811523
    8. '<|end|>' → logprob: -12.879796981811523
    9. '```' → logprob: -13.379796981811523
    10. '   ' → logprob: -13.379796981811523

Token 159: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34922125935554504
    2. '       ' → logprob: -1.5992212295532227
    3. ' for' → logprob: -2.8492212295532227
    4. 'n' (adapté à ' n') → logprob: -3.4742212295532227
    5. ' n' → logprob: -5.599221229553223
    6. 'from' → logprob: -9.224221229553223
    7. '
' → logprob: -10.974221229553223
    8. '```' → logprob: -12.724221229553223
    9. ' from' → logprob: -13.099221229553223
    10. '   ' → logprob: -13.099221229553223

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023310933262109756
    2. '=' → logprob: -3.773310899734497
    3. '=len' → logprob: -9.898310661315918
    4. '       ' → logprob: -11.523310661315918
    5. ' ' → logprob: -13.023310661315918
    6. '   ' → logprob: -13.523310661315918
    7. '_' → logprob: -15.148310661315918
    8. '        ' → logprob: -15.273310661315918
    9. 'for' → logprob: -15.523310661315918
    10. '           ' → logprob: -15.648310661315918

Token 161: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04859282076358795
    2. ' len' → logprob: -3.0485928058624268
    3. '(len' → logprob: -12.298592567443848
    4. '=len' → logprob: -14.173592567443848
    5. '[len' → logprob: -16.548593521118164
    6. '	len' → logprob: -17.673593521118164
    7. ',len' → logprob: -17.798593521118164
    8. '
' → logprob: -19.173593521118164
    9. ' ' → logprob: -19.173593521118164
    10. '   ' → logprob: -19.673593521118164

Token 162: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -1.3306015716807451e-05
    2. '(' → logprob: -11.25001335144043
    3. '(s' → logprob: -15.87501335144043
    4. 'sorted' → logprob: -16.62501335144043
    5. '(sort' → logprob: -17.12501335144043
    6. '(
' → logprob: -17.62501335144043
    7. ' sorted' → logprob: -18.00001335144043
    8. ' (' → logprob: -18.50001335144043
    9. '(saved' → logprob: -20.75001335144043
    10. '(set' → logprob: -21.37501335144043

Token 163: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.00010759611177491024
    2. 'items' → logprob: -9.250107765197754
    3. '(sorted' → logprob: -12.375107765197754
    4. '_tokens' → logprob: -12.750107765197754
    5. 'sorted' → logprob: -13.250107765197754
    6. ')' → logprob: -14.000107765197754
    7. '_sorted' → logprob: -14.375107765197754
    8. '```' → logprob: -15.000107765197754
    9. 'Items' → logprob: -15.250107765197754
    10. '_records' → logprob: -16.500106811523438

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029957015067338943
    2. ')
' → logprob: -3.5299570560455322
    3. ' )' → logprob: -8.779956817626953
    4. '       ' → logprob: -10.529956817626953
    5. ' )
' → logprob: -11.529956817626953
    6. '
' → logprob: -11.904956817626953
    7. ')

' → logprob: -12.779956817626953
    8. '   ' → logprob: -13.029956817626953
    9. ')
' → logprob: -13.279956817626953
    10. ' ' → logprob: -14.279956817626953

Token 165: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11616510152816772
    2. '       ' → logprob: -2.2411651611328125
    3. '   ' → logprob: -6.8661651611328125
    4. ' for' → logprob: -7.4911651611328125
    5. '        
' → logprob: -7.7411651611328125
    6. '  
' → logprob: -7.8661651611328125
    7. '    
' → logprob: -8.366165161132812
    8. ' ' → logprob: -8.866165161132812
    9. ' 
' → logprob: -8.991165161132812
    10. '<|end|>' → logprob: -9.241165161132812

Token 166: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46011242270469666
    2. ' for' → logprob: -1.085112452507019
    3. 'for' (adapté à ' for') → logprob: -3.8351123332977295
    4. '
' → logprob: -5.085112571716309
    5. '   ' → logprob: -6.585112571716309
    6. ' ' → logprob: -6.585112571716309
    7. '        
' → logprob: -8.710112571716309
    8. ' 
' → logprob: -10.085112571716309
    9. '  
' → logprob: -10.460112571716309
    10. '	for' → logprob: -10.585112571716309

Token 167: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026345467194914818
    2. 'i' → logprob: -3.6513454914093018
    3. ' ' → logprob: -10.401345252990723
    4. '   ' → logprob: -12.026345252990723
    5. '	i' → logprob: -12.151345252990723
    6. '    ' → logprob: -14.026345252990723
    7. ' ' → logprob: -14.276345252990723
    8. ' j' → logprob: -14.401345252990723
    9. '  ' → logprob: -14.526345252990723
    10. '```' → logprob: -14.901345252990723

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036898592952638865
    2. 'in' → logprob: -5.628689765930176
    3. ' ' → logprob: -9.378689765930176
    4. '1' → logprob: -13.503689765930176
    5. '	in' → logprob: -13.878689765930176
    6. '+' → logprob: -14.128689765930176
    7. '0' → logprob: -14.878689765930176
    8. '   ' → logprob: -15.003689765930176
    9. ' i' → logprob: -15.003689765930176
    10. 'import' → logprob: -15.253689765930176

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193676352500916
    2. ' range' → logprob: -1.5019367933273315
    3. ' ' → logprob: -12.251936912536621
    4. '   ' → logprob: -13.376936912536621
    5. '  ' → logprob: -14.251936912536621
    6. '	range' → logprob: -15.126936912536621
    7. '    ' → logprob: -16.251935958862305
    8. '```' → logprob: -16.251935958862305
    9. ')' → logprob: -17.001935958862305
    10. '
' → logprob: -17.126935958862305

Token 170: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019466065568849444
    2. '(' → logprob: -6.251946449279785
    3. ' (' → logprob: -11.376946449279785
    4. ' n' → logprob: -12.501946449279785
    5. 'n' → logprob: -13.001946449279785
    6. '(
' → logprob: -14.876946449279785
    7. ' ' → logprob: -16.1269474029541
    8. '	n' → logprob: -16.6269474029541
    9. '1' → logprob: -17.2519474029541
    10. '   ' → logprob: -17.3769474029541

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09195996075868607
    2. '-' → logprob: -3.4669599533081055
    3. ' -' → logprob: -3.5919599533081055
    4. '):
' → logprob: -3.7169599533081055
    5. ' ):' → logprob: -5.5919599533081055
    6. ')' → logprob: -8.091959953308105
    7. '   ' → logprob: -8.091959953308105
    8. '+' → logprob: -8.716959953308105
    9. '1' → logprob: -8.841959953308105
    10. ' ' → logprob: -9.966959953308105

Token 172: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31457895040512085
    2. '       ' → logprob: -1.5645790100097656
    3. '   ' → logprob: -3.8145790100097656
    4. ' ' → logprob: -4.064579010009766
    5. '           ' → logprob: -4.314579010009766
    6. '<|end|>' → logprob: -5.689579010009766
    7. 'for' → logprob: -6.314579010009766
    8. '+' → logprob: -7.189579010009766
    9. '	for' → logprob: -7.564579010009766
    10. '    ' → logprob: -8.314579010009766

Token 173: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07364513725042343
    2. 'for' (adapté à ' for') → logprob: -2.6986451148986816
    3. '   ' → logprob: -6.323645114898682
    4. '       ' → logprob: -6.448645114898682
    5. '           ' → logprob: -8.69864559173584
    6. '    ' → logprob: -9.44864559173584
    7. '	for' → logprob: -10.19864559173584
    8. ' ' → logprob: -11.19864559173584
    9. '        ' → logprob: -11.94864559173584
    10. '               ' → logprob: -12.32364559173584

Token 174: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.07070489972829819
    2. 'j' → logprob: -2.695704936981201
    3. ' range' → logprob: -8.070704460144043
    4. ' i' → logprob: -8.320704460144043
    5. 'range' → logprob: -8.820704460144043
    6. 'i' → logprob: -9.945704460144043
    7. '    ' → logprob: -11.320704460144043
    8. '   ' → logprob: -13.695704460144043
    9. '	j' → logprob: -14.445704460144043
    10. ' for' → logprob: -14.820704460144043

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01451017428189516
    2. ' i' → logprob: -4.389510154724121
    3. 'in' → logprob: -6.514510154724121
    4. ' ' → logprob: -8.389510154724121
    5. 'i' → logprob: -9.014510154724121
    6. '=i' → logprob: -9.389510154724121
    7. '(i' → logprob: -9.889510154724121
    8. '=' → logprob: -11.389510154724121
    9. ' (' → logprob: -11.764510154724121
    10. '	i' → logprob: -12.639510154724121

Token 176: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16239888966083527
    2. 'range' → logprob: -1.9123989343643188
    3. ' i' → logprob: -6.912398815155029
    4. '(range' → logprob: -7.412398815155029
    5. '(i' → logprob: -7.662398815155029
    6. 'i' → logprob: -9.537399291992188
    7. ' (' → logprob: -10.537399291992188
    8. ' ' → logprob: -13.287399291992188
    9. '[i' → logprob: -14.287399291992188
    10. '{i' → logprob: -14.412399291992188

Token 177: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.6166903151315637e-05
    2. '(' → logprob: -11.125016212463379
    3. ' (' → logprob: -14.500016212463379
    4. 'i' → logprob: -14.750016212463379
    5. '(n' → logprob: -15.625016212463379
    6. ' i' → logprob: -16.000015258789062
    7. '(
' → logprob: -16.250015258789062
    8. '{i' → logprob: -17.375015258789062
    9. '   ' → logprob: -17.875015258789062
    10. '[i' → logprob: -18.500015258789062

Token 178: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889925688505173
    2. ' +' → logprob: -2.5788991451263428
    3. '1' → logprob: -12.328899383544922
    4. '+i' → logprob: -13.328899383544922
    5. '+
' → logprob: -13.703899383544922
    6. '+j' → logprob: -14.078899383544922
    7. '+n' → logprob: -14.078899383544922
    8. ' +
' → logprob: -14.953899383544922
    9. ' ' → logprob: -15.578899383544922
    10. '+)' → logprob: -16.078899383544922

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. 'n' → logprob: -10.750029563903809
    3. ' ' → logprob: -11.750029563903809
    4. ' n' → logprob: -15.500029563903809
    5. '   ' → logprob: -16.375030517578125
    6. '```' → logprob: -17.125030517578125
    7. ')' → logprob: -17.375030517578125
    8. 'i' → logprob: -17.625030517578125
    9. '0' → logprob: -17.750030517578125
    10. '2' → logprob: -18.375030517578125

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019211633130908012
    2. ',n' → logprob: -4.019211769104004
    3. ' ,' → logprob: -7.269211769104004
    4. 'n' → logprob: -8.144211769104004
    5. '(n' → logprob: -11.019211769104004
    6. '):' → logprob: -11.019211769104004
    7. ')' → logprob: -11.144211769104004
    8. ')n' → logprob: -11.769211769104004
    9. ',
' → logprob: -11.894211769104004
    10. ' n' → logprob: -12.894211769104004

Token 181: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038042064756155014
    2. ' n' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.413042068481445
    4. '	n' → logprob: -15.788042068481445
    5. '   ' → logprob: -16.538042068481445
    6. ')' → logprob: -16.663042068481445
    7. ')n' → logprob: -17.163042068481445
    8. '
' → logprob: -17.413042068481445
    9. ' 
' → logprob: -17.788042068481445
    10. '_n' → logprob: -18.038042068481445

Token 182: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006744269747287035
    2. '):
' → logprob: -5.006744384765625
    3. ' ):' → logprob: -11.256744384765625
    4. ':' → logprob: -11.631744384765625
    5. ')' → logprob: -12.756744384765625
    6. '):
' → logprob: -13.381744384765625
    7. '+' → logprob: -13.881744384765625
    8. '       ' → logprob: -14.506744384765625
    9. '():' → logprob: -15.381744384765625
    10. '):

' → logprob: -15.631744384765625

Token 183: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007938416674733162
    2. '           ' → logprob: -5.007938385009766
    3. ' ' → logprob: -7.257938385009766
    4. '                   ' → logprob: -9.632938385009766
    5. '            ' → logprob: -9.757938385009766
    6. ' 
' → logprob: -9.757938385009766
    7. '                
' → logprob: -9.882938385009766
    8. ',' → logprob: -10.007938385009766
    9. ')' → logprob: -10.382938385009766
    10. '                ' → logprob: -10.632938385009766

Token 184: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.27255311608314514
    2. 'pair' (adapté à ' pair') → logprob: -1.8975530862808228
    3. ' key' → logprob: -2.5225532054901123
    4. 'key' → logprob: -5.647552967071533
    5. ' self' → logprob: -5.897552967071533
    6. '               ' → logprob: -7.397552967071533
    7. 'self' → logprob: -7.397552967071533
    8. '                   ' → logprob: -7.522552967071533
    9. '                       ' → logprob: -9.647553443908691
    10. '           ' → logprob: -9.897553443908691

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029780801385641098
    2. '=' → logprob: -3.529780864715576
    3. '_' → logprob: -11.279780387878418
    4. ')' → logprob: -11.529780387878418
    5. ' =(' → logprob: -13.029780387878418
    6. ' ' → logprob: -13.154780387878418
    7. ' =
' → logprob: -13.904780387878418
    8. '=(' → logprob: -14.404780387878418
    9. ']' → logprob: -14.779780387878418
    10. ',' → logprob: -14.779780387878418

Token 186: ' (' (ID: 350)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.02397654391825199
    2. ' (' → logprob: -3.7739765644073486
    3. '(s' → logprob: -7.7739763259887695
    4. '(sort' → logprob: -8.52397632598877
    5. '(' → logprob: -9.39897632598877
    6. '(tuple' → logprob: -11.02397632598877
    7. '(sl' → logprob: -12.89897632598877
    8. '(sys' → logprob: -13.14897632598877
    9. '(str' → logprob: -13.64897632598877
    10. '(serial' → logprob: -13.64897632598877

Token 187: 'sorted' (ID: 64288)
  Prédit: 'sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.00020377879263833165
    2. ' sorted' → logprob: -8.500204086303711
    3. '(sorted' → logprob: -15.500204086303711
    4. '.sorted' → logprob: -17.37520408630371
    5. '   ' → logprob: -17.75020408630371
    6. ')' → logprob: -18.25020408630371
    7. '_sorted' → logprob: -18.25020408630371
    8. ' ' → logprob: -18.62520408630371
    9. '           ' → logprob: -19.25020408630371
    10. '
' → logprob: -20.00020408630371

Token 188: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -1.0087516784551553e-05
    2. 'items' → logprob: -11.62501049041748
    3. '_tokens' → logprob: -14.37501049041748
    4. '_pairs' → logprob: -15.25001049041748
    5. '_ITEMS' → logprob: -16.375009536743164
    6. 'Items' → logprob: -17.000009536743164
    7. '```' → logprob: -17.500009536743164
    8. '[i' → logprob: -17.625009536743164
    9. 's' → logprob: -17.875009536743164
    10. '-items' → logprob: -18.375009536743164

Token 189: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018661346985027194
    2. '[' → logprob: -8.750186920166016
    3. 'i' → logprob: -11.500186920166016
    4. ' [' → logprob: -12.125186920166016
    5. '[
' → logprob: -12.625186920166016
    6. ')[' → logprob: -13.000186920166016
    7. '[j' → logprob: -13.125186920166016
    8. '   ' → logprob: -13.500186920166016
    9. ')' → logprob: -13.750186920166016
    10. ' ' → logprob: -15.000186920166016

Token 190: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004618896055035293
    2. '],' → logprob: -7.750462055206299
    3. ' ,' → logprob: -10.62546157836914
    4. ',
' → logprob: -12.50046157836914
    5. 'sorted' → logprob: -14.25046157836914
    6. ',j' → logprob: -14.50046157836914
    7. '),' → logprob: -14.87546157836914
    8. '>,' → logprob: -15.00046157836914
    9. '‌,' → logprob: -15.50046157836914
    10. '},' → logprob: -15.50046157836914

Token 191: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.1269632875919342
    2. 'sorted' → logprob: -2.1269633769989014
    3. '(sorted' → logprob: -11.37696361541748
    4. ' ' → logprob: -11.87696361541748
    5. '_sorted' → logprob: -12.12696361541748
    6. ' 
' → logprob: -12.87696361541748
    7. ' ' → logprob: -13.12696361541748
    8. '"' → logprob: -13.25196361541748
    9. '.sorted' → logprob: -13.37696361541748
    10. ')' → logprob: -13.87696361541748

Token 192: '_items' (ID: 27417)
  Prédit: '_items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.003791292430832982
    2. '_sorted' → logprob: -6.503791332244873
    3. '[j' → logprob: -6.628791332244873
    4. 'items' → logprob: -7.753791332244873
    5. '_[' → logprob: -8.753790855407715
    6. 'sorted' → logprob: -9.253790855407715
    7. '_' → logprob: -9.628790855407715
    8. '_pairs' → logprob: -9.628790855407715
    9. '[_' → logprob: -10.503790855407715
    10. 's' → logprob: -10.878790855407715

Token 193: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5570885807392187e-05
    2. 'j' → logprob: -11.750015258789062
    3. '[
' → logprob: -13.250015258789062
    4. ' [' → logprob: -13.375015258789062
    5. '[' → logprob: -13.625015258789062
    6. '```' → logprob: -14.250015258789062
    7. '
' → logprob: -14.625015258789062
    8. ']' → logprob: -14.750015258789062
    9. '   ' → logprob: -14.750015258789062
    10. '][' → logprob: -14.875015258789062

Token 194: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.049716949462890625
    2. ')' → logprob: -3.1747169494628906
    3. '])
' → logprob: -5.174716949462891
    4. ')
' → logprob: -7.299716949462891
    5. ']' → logprob: -8.79971694946289
    6. ')]' → logprob: -9.04971694946289
    7. '))' → logprob: -10.54971694946289
    8. ''])' → logprob: -11.04971694946289
    9. '])
' → logprob: -11.29971694946289
    10. ')])' → logprob: -11.67471694946289

Token 195: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00033534664544276893
    2. '
' → logprob: -8.750335693359375
    3. ' self' → logprob: -9.750335693359375
    4. '                
' → logprob: -10.000335693359375
    5. 'self' → logprob: -10.750335693359375
    6. ')' → logprob: -11.375335693359375
    7. '       ' → logprob: -11.625335693359375
    8. '                   ' → logprob: -11.875335693359375
    9. '```' → logprob: -12.250335693359375
    10. '           ' → logprob: -12.500335693359375

Token 196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16032403707504272
    2. ' self' → logprob: -1.9103240966796875
    3. '               ' → logprob: -9.285324096679688
    4. '
' → logprob: -12.785324096679688
    5. '                   ' → logprob: -13.160324096679688
    6. '	self' → logprob: -14.035324096679688
    7. '[self' → logprob: -14.410324096679688
    8. '           ' → logprob: -14.660324096679688
    9. ' ' → logprob: -16.285324096679688
    10. '                
' → logprob: -16.535324096679688

Token 197: '.frequency' (ID: 182193)
  Prédit: '.frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.frequency' → logprob: -4.8232690460281447e-05
    2. 'frequency' → logprob: -10.500048637390137
    3. '.' → logprob: -11.000048637390137
    4. ' .' → logprob: -13.125048637390137
    5. '.fre' → logprob: -13.625048637390137
    6. ').' → logprob: -16.00004768371582
    7. ' frequency' → logprob: -16.00004768371582
    8. '.period' → logprob: -16.25004768371582
    9. '.freq' → logprob: -16.37504768371582
    10. '.temperature' → logprob: -16.87504768371582

Token 198: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: 0.0
    2. '_' → logprob: -17.0
    3. '_MAP' → logprob: -19.25
    4. ' _' → logprob: -19.75
    5. '   ' → logprob: -19.875
    6. '[' → logprob: -20.125
    7. 'map' → logprob: -20.125
    8. '           ' → logprob: -20.25
    9. '[_' → logprob: -20.625
    10. '\' → logprob: -21.125

Token 199: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00015872348740231246
    2. '[' → logprob: -8.750158309936523
    3. ' [' → logprob: -15.750158309936523
    4. '[(' → logprob: -16.375158309936523
    5. '[
' → logprob: -17.000158309936523
    6. '```' → logprob: -18.125158309936523
    7. '(pair' → logprob: -18.375158309936523
    8. '
' → logprob: -18.750158309936523
    9. 'pair' → logprob: -19.250158309936523
    10. '\[' → logprob: -19.375158309936523

Token 200: 'air' (ID: 1517)
  Prédit: 'air'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -2.570319702499546e-05
    2. 'pair' → logprob: -11.375025749206543
    3. 'a' → logprob: -11.750025749206543
    4. '[' → logprob: -12.875025749206543
    5. '(pair' → logprob: -13.625025749206543
    6. 'ai' → logprob: -14.000025749206543
    7. '[p' → logprob: -14.125025749206543
    8. '[(' → logprob: -16.250024795532227
    9. 'ar' → logprob: -16.375024795532227
    10. 'airs' → logprob: -16.500024795532227

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004119480960071087
    2. ']+=' → logprob: -5.504119396209717
    3. ' ]' → logprob: -10.129119873046875
    4. ')' → logprob: -14.629119873046875
    5. ']+' → logprob: -14.629119873046875
    6. '']' → logprob: -16.504119873046875
    7. '"]' → logprob: -17.879119873046875
    8. '+=' → logprob: -17.879119873046875
    9. ' +=' → logprob: -18.004119873046875
    10. ')]' → logprob: -18.379119873046875

Token 202: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2521112561225891
    2. '+=' → logprob: -1.5021111965179443
    3. ']+=' → logprob: -8.627111434936523
    4. '+' → logprob: -13.627111434936523
    5. ']' → logprob: -14.252111434936523
    6. '    ' → logprob: -15.627111434936523
    7. '        ' → logprob: -15.877111434936523
    8. '   ' → logprob: -16.002111434936523
    9. '[' → logprob: -16.252111434936523
    10. ' ' → logprob: -16.252111434936523

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.893150329589844
    4. ' ' → logprob: -17.893150329589844
    5. '```' → logprob: -19.143150329589844
    6. '  ' → logprob: -20.580650329589844
    7. '１' → logprob: -20.643150329589844
    8. '`' → logprob: -21.518150329589844
    9. '0' → logprob: -21.580650329589844
    10. '2' → logprob: -21.705650329589844

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -22.75
    4. '```' → logprob: -22.875
    5. '１' → logprob: -24.25
    6. '
' → logprob: -25.125
    7. '۱' → logprob: -25.375
    8. '100' → logprob: -26.0
    9. '`' → logprob: -26.375
    10. 'int' → logprob: -26.625

Token 205: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.322237491607666
    2. '
' → logprob: -1.322237491607666
    3. 'def' → logprob: -4.822237491607666
    4. '<|end|>' → logprob: -7.697237491607666
    5. '    
' → logprob: -7.947237491607666
    6. ' def' → logprob: -10.697237014770508
    7. '

' → logprob: -11.322237014770508
    8. '        
' → logprob: -11.322237014770508
    9. '<|end|>' → logprob: -11.322237014770508
    10. '```' → logprob: -12.072237014770508

Token 207: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006247530109249055
    2. ' def' → logprob: -7.625624656677246
    3. '
' → logprob: -9.125624656677246
    4. '<|end|>' → logprob: -11.250624656677246
    5. '   ' → logprob: -11.500624656677246
    6. '	def' → logprob: -13.125624656677246
    7. ' ' → logprob: -14.250624656677246
    8. '    
' → logprob: -14.250624656677246
    9. '

' → logprob: -14.375624656677246
    10. '```' → logprob: -14.750624656677246

Token 208: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.7564603686332703
    2. ' get' → logprob: -1.006460428237915
    3. 'most' → logprob: -2.006460428237915
    4. ' most' → logprob: -3.506460428237915
    5. 'max' → logprob: -8.006460189819336
    6. ' max' → logprob: -9.256460189819336
    7. ' find' → logprob: -9.756460189819336
    8. 'def' → logprob: -9.881460189819336
    9. 'top' → logprob: -10.131460189819336
    10. ' def' → logprob: -10.381460189819336

Token 209: '_f' (ID: 1337)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.093899667263031
    2. '_top' → logprob: -2.468899726867676
    3. '_max' → logprob: -5.843899726867676
    4. '_pairs' → logprob: -7.468899726867676
    5. '_f' → logprob: -7.593899726867676
    6. 'top' → logprob: -8.218899726867676
    7. '_frequency' → logprob: -8.343899726867676
    8. 'max' → logprob: -9.218899726867676
    9. 'most' → logprob: -9.468899726867676
    10. '_sorted' → logprob: -9.468899726867676

Token 210: 'requent' (ID: 191346)
  Prédit: 'requency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requency' → logprob: -0.3357701897621155
    2. 'requent' → logprob: -1.4607701301574707
    3. 'requencies' → logprob: -2.9607701301574707
    4. 'requ' → logprob: -7.585770130157471
    5. 'req' → logprob: -7.835770130157471
    6. 'requently' → logprob: -8.210770606994629
    7. 'request' → logprob: -9.210770606994629
    8. 'irst' → logprob: -10.460770606994629
    9. 'or' → logprob: -11.210770606994629
    10. 'top' → logprob: -11.460770606994629

Token 211: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.9862216504407115e-05
    2. 'pairs' → logprob: -11.750020027160645
    3. '_items' → logprob: -12.125020027160645
    4. '_' → logprob: -12.375020027160645
    5. '_pair' → logprob: -13.500020027160645
    6. 'Pairs' → logprob: -15.125020027160645
    7. '_item' → logprob: -15.625020027160645
    8. ' pairs' → logprob: -15.750020027160645
    9. '<|end|>' → logprob: -16.875019073486328
    10. 's' → logprob: -16.875019073486328

Token 212: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001307142956648022
    2. '(' → logprob: -9.125130653381348
    3. 'self' → logprob: -10.875130653381348
    4. ' (' → logprob: -13.125130653381348
    5. '(
' → logprob: -14.750130653381348
    6. '   ' → logprob: -16.250131607055664
    7. ' self' → logprob: -16.375131607055664
    8. '(s' → logprob: -17.000131607055664
    9. '       ' → logprob: -17.375131607055664
    10. '(sel' → logprob: -17.875131607055664

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004519838839769363
    2. '):' → logprob: -6.379519939422607
    3. ' ,' → logprob: -6.629519939422607
    4. ')' → logprob: -6.879519939422607
    5. '):
' → logprob: -7.754519939422607
    6. 'self' → logprob: -11.50451946258545
    7. ',min' → logprob: -12.75451946258545
    8. ',max' → logprob: -13.12951946258545
    9. ' )' → logprob: -13.25451946258545
    10. '       ' → logprob: -13.50451946258545

Token 214: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.2936454117298126
    2. 'min' → logprob: -1.4186453819274902
    3. ' min' → logprob: -4.79364538192749
    4. ' threshold' → logprob: -5.79364538192749
    5. 'self' → logprob: -8.168645858764648
    6. 'minimum' → logprob: -8.418645858764648
    7. ')' → logprob: -8.668645858764648
    8. 'k' → logprob: -8.793645858764648
    9. '   ' → logprob: -9.543645858764648
    10. 'limit' → logprob: -10.293645858764648

Token 215: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.351697033504024e-05
    2. '):' → logprob: -10.000083923339844
    3. ':int' → logprob: -10.500083923339844
    4. ' :' → logprob: -12.500083923339844
    5. ')' → logprob: -12.750083923339844
    6. '):
' → logprob: -12.875083923339844
    7. '=' → logprob: -14.125083923339844
    8. 'self' → logprob: -14.750083923339844
    9. '_:' → logprob: -15.750083923339844
    10. ' ):' → logprob: -16.500083923339844

Token 216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28370407223701477
    2. ' int' → logprob: -1.4087040424346924
    3. ')' → logprob: -6.4087042808532715
    4. '[int' → logprob: -8.533703804016113
    5. ' ' → logprob: -9.033703804016113
    6. '):
' → logprob: -9.033703804016113
    7. ' )' → logprob: -9.158703804016113
    8. '1' → logprob: -9.283703804016113
    9. ':int' → logprob: -9.783703804016113
    10. '2' → logprob: -10.283703804016113

Token 217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001205893131555058
    2. '):' → logprob: -9.125120162963867
    3. ' )' → logprob: -12.375120162963867
    4. '):
' → logprob: -12.375120162963867
    5. '   ' → logprob: -13.250120162963867
    6. ')->' → logprob: -14.875120162963867
    7. ':' → logprob: -15.000120162963867
    8. '       ' → logprob: -16.250120162963867
    9. '):
' → logprob: -16.375120162963867
    10. ' ' → logprob: -16.500120162963867

Token 218: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.1660030633211136
    2. ' ->' → logprob: -1.9160031080245972
    3. ':' → logprob: -5.291003227233887
    4. ')' → logprob: -7.541003227233887
    5. '   ' → logprob: -9.041003227233887
    6. '       ' → logprob: -10.291003227233887
    7. '-' → logprob: -11.166003227233887
    8. ')->' → logprob: -11.541003227233887
    9. '>' → logprob: -12.166003227233887
    10. '->{' → logprob: -12.291003227233887

Token 219: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.12770406901836395
    2. ' List' → logprob: -2.37770414352417
    3. 'Dict' → logprob: -3.62770414352417
    4. ' Dict' → logprob: -7.75270414352417
    5. '[List' → logprob: -9.127703666687012
    6. '   ' → logprob: -12.377703666687012
    7. 'dict' → logprob: -13.877703666687012
    8. '	List' → logprob: -13.877703666687012
    9. '[' → logprob: -14.502703666687012
    10. '       ' → logprob: -15.127703666687012

Token 220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '[str' → logprob: -13.12500286102295
    3. '[List' → logprob: -14.12500286102295
    4. '[
' → logprob: -16.250001907348633
    5. '[(' → logprob: -17.375001907348633
    6. 'Tuple' → logprob: -17.750001907348633
    7. '```' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '<Tuple' → logprob: -19.875001907348633
    10. ' [' → logprob: -20.125001907348633

Token 221: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -3.4285862057004124e-05
    2. ' Tuple' → logprob: -10.50003433227539
    3. 'str' → logprob: -12.62503433227539
    4. '[' → logprob: -13.37503433227539
    5. '   ' → logprob: -14.00003433227539
    6. 'Pair' → logprob: -14.62503433227539
    7. ' ' → logprob: -15.62503433227539
    8. '       ' → logprob: -16.75003433227539
    9. '```' → logprob: -17.37503433227539
    10. '    ' → logprob: -17.50003433227539

Token 222: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.2519608736038208
    2. '[' → logprob: -1.5019608736038208
    3. 'str' → logprob: -10.626960754394531
    4. 'Tuple' → logprob: -12.876960754394531
    5. '[
' → logprob: -13.501960754394531
    6. '[int' → logprob: -13.751960754394531
    7. '   ' → logprob: -14.126960754394531
    8. '[(' → logprob: -14.626960754394531
    9. '[List' → logprob: -14.876960754394531
    10. ' [' → logprob: -15.876960754394531

Token 223: ',str' (ID: 95110)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012773419439326972
    2. ',str' → logprob: -9.375127792358398
    3. '[str' → logprob: -10.125127792358398
    4. ',int' → logprob: -13.625127792358398
    5. 'str' → logprob: -14.125127792358398
    6. ' ,' → logprob: -15.500127792358398
    7. ' ' → logprob: -15.500127792358398
    8. '   ' → logprob: -16.2501277923584
    9. '[int' → logprob: -16.5001277923584
    10. '[' → logprob: -16.6251277923584

Token 224: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.46514269709587097
    2. ']]' → logprob: -1.0901427268981934
    3. ',' → logprob: -3.3401427268981934
    4. ']' → logprob: -8.090142250061035
    5. ']],' → logprob: -12.215142250061035
    6. ']:' → logprob: -12.340142250061035
    7. '']]' → logprob: -12.465142250061035
    8. ')]' → logprob: -12.590142250061035
    9. ',int' → logprob: -12.715142250061035
    10. '>' → logprob: -12.840142250061035

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.706686690449715e-05
    2. ' return' → logprob: -10.625066757202148
    3. '[]' → logprob: -11.875066757202148
    4. ':' → logprob: -12.125066757202148
    5. '   ' → logprob: -12.375066757202148
    6. '	' → logprob: -12.750066757202148
    7. '[' → logprob: -12.750066757202148
    8. '{' → logprob: -12.875066757202148
    9. '```' → logprob: -13.000066757202148
    10. '      ' → logprob: -13.000066757202148

Token 226: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8209115266799927
    2. 'result' (adapté à ' result') → logprob: -1.0709115266799927
    3. '       ' → logprob: -1.5709115266799927
    4. ' result' → logprob: -5.195911407470703
    5. ' return' → logprob: -6.070911407470703
    6. 'fre' → logprob: -6.570911407470703
    7. ' frequent' → logprob: -9.195911407470703
    8. 'results' → logprob: -9.820911407470703
    9. 'pairs' → logprob: -11.695911407470703
    10. '   ' → logprob: -13.195911407470703

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141880214214325
    2. '=' → logprob: -1.7014187574386597
    3. '=[]' → logprob: -12.95141887664795
    4. ':' → logprob: -13.57641887664795
    5. ' ' → logprob: -13.82641887664795
    6. '=[]
' → logprob: -14.82641887664795
    7. '[]' → logprob: -15.45141887664795
    8. '[' → logprob: -16.201417922973633
    9. '[:]' → logprob: -16.326417922973633
    10. ' []' → logprob: -17.326417922973633

Token 228: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3921613097190857
    2. '[]
' → logprob: -1.1421613693237305
    3. '[' → logprob: -5.6421613693237305
    4. ' []' → logprob: -6.8921613693237305
    5. ' []
' → logprob: -8.14216136932373
    6. ' [' → logprob: -8.51716136932373
    7. '[
' → logprob: -9.01716136932373
    8. '[]

' → logprob: -9.89216136932373
    9. '[(' → logprob: -10.76716136932373
    10. '[key' → logprob: -11.26716136932373

Token 229: 'pair' (ID: 25488)
  Prédit: 'pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.0015098588773980737
    2. '(pair' → logprob: -6.626509666442871
    3. ' pair' → logprob: -8.626509666442871
    4. 'key' → logprob: -13.376509666442871
    5. '   ' → logprob: -13.626509666442871
    6. ' (' → logprob: -14.251509666442871
    7. '(p' → logprob: -14.876509666442871
    8. '(' → logprob: -15.126509666442871
    9. 'p' → logprob: -15.751509666442871
    10. '       ' → logprob: -16.376510620117188

Token 230: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0022085432428866625
    2. 'for' → logprob: -6.127208709716797
    3. '        ' → logprob: -11.377208709716797
    4. '           ' → logprob: -11.627208709716797
    5. ' ' → logprob: -14.377208709716797
    6. '       ' → logprob: -14.377208709716797
    7. '          ' → logprob: -14.502208709716797
    8. '         ' → logprob: -14.877208709716797
    9. '            ' → logprob: -14.877208709716797
    10. '	for' → logprob: -15.002208709716797

Token 231: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.31352895498275757
    2. ' pair' → logprob: -1.3135290145874023
    3. ',' → logprob: -8.438529014587402
    4. '(pair' → logprob: -9.938529014587402
    5. '<pair' → logprob: -14.563529014587402
    6. '_pair' → logprob: -14.813529014587402
    7. ' ' → logprob: -14.813529014587402
    8. '   ' → logprob: -15.188529014587402
    9. 'pairs' → logprob: -15.438529014587402
    10. 'self' → logprob: -15.688529014587402

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003017385315615684
    2. 'pair' → logprob: -8.250301361083984
    3. ',p' → logprob: -10.625301361083984
    4. '(pair' → logprob: -11.875301361083984
    5. ' pair' → logprob: -12.000301361083984
    6. ' in' → logprob: -13.000301361083984
    7. ' ,' → logprob: -15.125301361083984
    8. 'in' → logprob: -15.500301361083984
    9. ',
' → logprob: -15.750301361083984
    10. 'self' → logprob: -15.875301361083984

Token 233: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.31595098972320557
    2. 'freq' → logprob: -1.3159509897232056
    3. ' freq' → logprob: -6.315950870513916
    4. ' count' → logprob: -7.065950870513916
    5. 'cnt' → logprob: -10.940951347351074
    6. 'frequency' → logprob: -11.940951347351074
    7. ' frequency' → logprob: -15.815951347351074
    8. '   ' → logprob: -16.315950393676758
    9. '       ' → logprob: -16.690950393676758
    10. ' cnt' → logprob: -17.190950393676758

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029766341671347618
    2. 'in' → logprob: -3.529766321182251
    3. ',' → logprob: -11.279766082763672
    4. ' ' → logprob: -13.279766082763672
    5. '	in' → logprob: -14.904766082763672
    6. 'import' → logprob: -15.279766082763672
    7. 'In' → logprob: -15.654766082763672
    8. '<|end|>' → logprob: -16.029766082763672
    9. 's' → logprob: -16.279766082763672
    10. 'inthe' → logprob: -16.529766082763672

Token 235: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163747429847717
    2. ' self' → logprob: -4.264163970947266
    3. '(self' → logprob: -15.514163970947266
    4. '	self' → logprob: -17.514163970947266
    5. '[self' → logprob: -17.639163970947266
    6. ' ' → logprob: -18.264163970947266
    7. '=self' → logprob: -18.389163970947266
    8. '   ' → logprob: -19.889163970947266
    9. '{' → logprob: -20.014163970947266
    10. '`' → logprob: -20.139163970947266

Token 236: '.frequency' (ID: 182193)
  Prédit: '.frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.frequency' → logprob: -0.12993229925632477
    2. 'frequency' → logprob: -2.129932403564453
    3. ' in' → logprob: -6.879932403564453
    4. 'in' → logprob: -7.129932403564453
    5. ' frequency' → logprob: -7.379932403564453
    6. 'requency' → logprob: -8.629932403564453
    7. '_frequency' → logprob: -8.879932403564453
    8. '.' → logprob: -9.004932403564453
    9. 'Frequency' → logprob: -10.379932403564453
    10. ' .' → logprob: -10.504932403564453

Token 237: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0018912686500698328
    2. '_pairs' → logprob: -6.626891136169434
    3. 'pairs' → logprob: -8.501891136169434
    4. 'items' → logprob: -8.876891136169434
    5. 'counter' → logprob: -9.501891136169434
    6. 's' → logprob: -10.251891136169434
    7. 'map' → logprob: -10.876891136169434
    8. '_counter' → logprob: -11.626891136169434
    9. 'pair' → logprob: -11.751891136169434
    10. '_items' → logprob: -11.876891136169434

Token 238: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.005263880360871553
    2. 'items' → logprob: -5.755263805389404
    3. ' in' → logprob: -6.255263805389404
    4. ' if' → logprob: -9.630264282226562
    5. 'in' → logprob: -10.255264282226562
    6. ' items' → logprob: -10.380264282226562
    7. '.iteritems' → logprob: -10.880264282226562
    8. 'if' → logprob: -12.755264282226562
    9. '   ' → logprob: -12.755264282226562
    10. ' .' → logprob: -12.880264282226562

Token 239: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022880789765622467
    2. ' if' → logprob: -8.750228881835938
    3. 'if' → logprob: -9.625228881835938
    4. ' ()' → logprob: -12.750228881835938
    5. 'items' → logprob: -15.125228881835938
    6. ')' → logprob: -15.250228881835938
    7. '(' → logprob: -15.375228881835938
    8. '()]' → logprob: -15.375228881835938
    9. '()
' → logprob: -16.000228881835938
    10. ' ' → logprob: -17.125228881835938

Token 240: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012622660025954247
    2. 'if' → logprob: -4.387622833251953
    3. '           ' → logprob: -9.387622833251953
    4. '        ' → logprob: -11.637622833251953
    5. '            ' → logprob: -11.887622833251953
    6. '               ' → logprob: -12.637622833251953
    7. '       ' → logprob: -13.262622833251953
    8. '	if' → logprob: -13.262622833251953
    9. '          ' → logprob: -13.512622833251953
    10. '                ' → logprob: -13.637622833251953

Token 241: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6931481957435608
    2. 'count' → logprob: -0.6931481957435608
    3. '	count' → logprob: -15.318148612976074
    4. '           ' → logprob: -15.693148612976074
    5. '               ' → logprob: -16.068147659301758
    6. '(count' → logprob: -16.068147659301758
    7. 'counts' → logprob: -16.818147659301758
    8. ' ' → logprob: -16.943147659301758
    9. '   ' → logprob: -16.943147659301758
    10. '            ' → logprob: -17.318147659301758

Token 242: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07893186807632446
    2. ' >=' → logprob: -2.5789318084716797
    3. '>' → logprob: -10.82893180847168
    4. ']>=' → logprob: -11.07893180847168
    5. ')>=' → logprob: -12.70393180847168
    6. '[' → logprob: -12.82893180847168
    7. ' ' → logprob: -14.82893180847168
    8. '   ' → logprob: -15.82893180847168
    9. '```' → logprob: -15.95393180847168
    10. ']' → logprob: -16.07893180847168

Token 243: ' threshold' (ID: 24313)
  Prédit: ' threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.20141635835170746
    2. 'threshold' → logprob: -1.7014163732528687
    3. 'th' → logprob: -13.326416015625
    4. '.threshold' → logprob: -14.951416015625
    5. '   ' → logprob: -15.201416015625
    6. ' ' → logprob: -15.326416015625
    7. '_threshold' → logprob: -15.826416015625
    8. ' thresh' → logprob: -15.951416015625
    9. 'thr' → logprob: -16.326416015625
    10. ' ' → logprob: -16.951416015625

Token 244: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31660810112953186
    2. ']
' → logprob: -1.3166080713272095
    3. '       ' → logprob: -5.94160795211792
    4. ']
' → logprob: -7.44160795211792
    5. ' ]' → logprob: -9.316608428955078
    6. ' ]
' → logprob: -10.566608428955078
    7. ']

' → logprob: -11.691608428955078
    8. 'return' → logprob: -13.816608428955078
    9. ')' → logprob: -14.941608428955078
    10. ' ]
' → logprob: -15.316608428955078

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009808859322220087
    2. 'return' → logprob: -7.500980854034424
    3. ' return' → logprob: -8.125981330871582
    4. '
' → logprob: -10.125981330871582
    5. '	' → logprob: -10.250981330871582
    6. ')' → logprob: -11.250981330871582
    7. '	return' → logprob: -11.750981330871582
    8. '        
' → logprob: -11.750981330871582
    9. '.sort' → logprob: -12.375981330871582
    10. '.' → logprob: -12.500981330871582

Token 246: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4806094765663147
    2. 'return' → logprob: -0.9806094765663147
    3. '       ' → logprob: -5.98060941696167
    4. ' result' → logprob: -6.10560941696167
    5. ' return' → logprob: -6.35560941696167
    6. '
' → logprob: -11.230609893798828
    7. '   ' → logprob: -13.855609893798828
    8. '        
' → logprob: -13.980609893798828
    9. '```' → logprob: -14.355609893798828
    10. 'sort' → logprob: -16.105609893798828

Token 247: ' sort' (ID: 4506)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10315830260515213
    2. ' result' → logprob: -2.8531582355499268
    3. 'return' → logprob: -3.3531582355499268
    4. '       ' → logprob: -5.478158473968506
    5. ' return' → logprob: -6.728158473968506
    6. '
' → logprob: -13.478157997131348
    7. '   ' → logprob: -13.478157997131348
    8. 'Result' → logprob: -14.103157997131348
    9. '        
' → logprob: -14.978157997131348
    10. '```' → logprob: -15.103157997131348

Token 248: ' primarily' (ID: 22696)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007394837215542793
    2. ' result' → logprob: -6.132394790649414
    3. '_result' → logprob: -6.507394790649414
    4. '(result' → logprob: -6.632394790649414
    5. '=' → logprob: -7.132394790649414
    6. '       ' → logprob: -7.507394790649414
    7. ' =' → logprob: -8.007394790649414
    8. '=result' → logprob: -8.632394790649414
    9. '(' → logprob: -9.132394790649414
    10. 'return' → logprob: -9.132394790649414

Token 249: ' by' (ID: 656)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5060705542564392
    2. '=result' → logprob: -1.631070613861084
    3. '(result' → logprob: -2.631070613861084
    4. ' result' → logprob: -3.006070613861084
    5. ' by' → logprob: -3.381070613861084
    6. ',result' → logprob: -4.256070613861084
    7. '       ' → logprob: -4.631070613861084
    8. '=' → logprob: -4.631070613861084
    9. ',' → logprob: -5.131070613861084
    10. 'by' → logprob: -5.256070613861084

Token 250: ' first' (ID: 1577)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.018358414992690086
    2. '-l' → logprob: -4.76835823059082
    3. ' lambda' → logprob: -5.26835823059082
    4. '-count' → logprob: -6.14335823059082
    5. 'count' → logprob: -7.01835823059082
    6. '-' → logprob: -7.64335823059082
    7. '-frequency' → logprob: -7.89335823059082
    8. '(lambda' → logprob: -8.26835823059082
    9. '=lambda' → logprob: -8.76835823059082
    10. ' -' → logprob: -9.64335823059082

Token 251: ' item' (ID: 2169)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3831217288970947
    2. ',' → logprob: -1.6331217288970947
    3. 'pair' → logprob: -1.6331217288970947
    4. ' pair' → logprob: -1.7581217288970947
    5. 'and' → logprob: -2.7581217288970947
    6. ' key' → logprob: -3.2581217288970947
    7. '[' → logprob: -3.2581217288970947
    8. 'key' → logprob: -4.383121490478516
    9. '(pair' → logprob: -4.383121490478516
    10. ' then' → logprob: -5.133121490478516

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004167437553405762
    2. '       ' → logprob: -5.754167556762695
    3. ',result' → logprob: -7.629167556762695
    4. ',
' → logprob: -8.129167556762695
    5. 'result' → logprob: -9.754167556762695
    6. ' and' → logprob: -10.004167556762695
    7. ' ,' → logprob: -10.254167556762695
    8. '.sort' → logprob: -10.629167556762695
    9. 'and' → logprob: -11.004167556762695
    10. 'sorted' → logprob: -11.129167556762695

Token 253: ' second' (ID: 3099)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3854949474334717
    2. ' result' → logprob: -1.3854949474334717
    3. 'second' → logprob: -4.135495185852051
    4. '       ' → logprob: -4.135495185852051
    5. ' second' → logprob: -4.135495185852051
    6. ' then' → logprob: -4.510495185852051
    7. ' key' → logprob: -5.635495185852051
    8. 'key' → logprob: -6.510495185852051
    9. '#' → logprob: -6.635495185852051
    10. ' lambda' → logprob: -7.135495185852051

Token 254: 'arily' (ID: 10581)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.1136912107467651
    2. ' item' → logprob: -1.3636912107467651
    3. ',' → logprob: -1.9886912107467651
    4. 'arily' → logprob: -2.2386913299560547
    5. 'ly' → logprob: -2.4886913299560547
    6. '_item' → logprob: -3.8636913299560547
    7. '=' → logprob: -4.363691329956055
    8. '   ' → logprob: -4.488691329956055
    9. '=item' → logprob: -4.613691329956055
    10. ' by' → logprob: -4.863691329956055

Token 255: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.07068280875682831
    2. 'by' → logprob: -2.6956827640533447
    3. '=lambda' → logprob: -7.820683002471924
    4. '=' → logprob: -8.320682525634766
    5. ',' → logprob: -10.820682525634766
    6. 'sorted' → logprob: -11.070682525634766
    7. '=True' → logprob: -11.445682525634766
    8. 'ly' → logprob: -11.445682525634766
    9. 'sort' → logprob: -11.945682525634766
    10. '   ' → logprob: -12.070682525634766

Token 256: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.05371151119470596
    2. 'pair' → logprob: -3.303711414337158
    3. ' second' → logprob: -4.303711414337158
    4. ' pair' → logprob: -7.053711414337158
    5. 'the' → logprob: -7.928711414337158
    6. 'lambda' → logprob: -7.928711414337158
    7. ' lambda' → logprob: -8.303711891174316
    8. 'result' → logprob: -9.178711891174316
    9. ' the' → logprob: -10.303711891174316
    10. '   ' → logprob: -10.428711891174316

Token 257: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.18885649740695953
    2. ' item' → logprob: -1.9388564825057983
    3. '=item' → logprob: -4.563856601715088
    4. '=lambda' → logprob: -4.938856601715088
    5. ' key' → logprob: -6.313856601715088
    6. '_item' → logprob: -6.438856601715088
    7. 'key' → logprob: -6.438856601715088
    8. 'pair' → logprob: -6.563856601715088
    9. '=' → logprob: -6.938856601715088
    10. ' pair' → logprob: -6.938856601715088

Token 258: ' lex' (ID: 37772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08782162517309189
    2. '
' → logprob: -2.8378217220306396
    3. 'result' → logprob: -3.7128217220306396
    4. ' result' → logprob: -8.087821960449219
    5. '        
' → logprob: -8.587821960449219
    6. '.sort' → logprob: -8.837821960449219
    7. 'return' → logprob: -9.087821960449219
    8. '(result' → logprob: -9.337821960449219
    9. '
' → logprob: -9.587821960449219
    10. ',' → logprob: -10.212821960449219

Token 259: 'ic' (ID: 291)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1600708961486816
    2. 'ic' → logprob: -1.4100708961486816
    3. 'sorted' → logprob: -1.7850708961486816
    4. ',' → logprob: -2.5350708961486816
    5. ')' → logprob: -2.7850708961486816
    6. '       ' → logprob: -2.7850708961486816
    7. '           ' → logprob: -4.160070896148682
    8. '(result' → logprob: -4.410070896148682
    9. '_sorted' → logprob: -5.285070896148682
    10. ',result' → logprob: -5.285070896148682

Token 260: 'ographically' (ID: 121004)
  Prédit: 'ographically'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ographically' → logprob: -0.10058501362800598
    2. 'ographical' → logprob: -2.7255849838256836
    3. 'graph' → logprob: -3.8505849838256836
    4. 'ographic' → logprob: -5.100584983825684
    5. 'al' → logprob: -6.850584983825684
    6. 'ally' → logprob: -7.850584983825684
    7. 'ograph' → logprob: -7.975584983825684
    8. 'cal' → logprob: -8.100584983825684
    9. 'graphic' → logprob: -8.225584983825684
    10. 'og' → logprob: -9.225584983825684

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015311705647036433
    2. 'result' → logprob: -6.87653112411499
    3. '
' → logprob: -7.75153112411499
    4. ' result' → logprob: -10.626531600952148
    5. 'return' → logprob: -10.751531600952148
    6. ',' → logprob: -11.876531600952148
    7. '.sort' → logprob: -12.876531600952148
    8. '        
' → logprob: -12.876531600952148
    9. ',result' → logprob: -13.126531600952148
    10. ' return' → logprob: -13.251531600952148

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001618526759557426
    2. 'result' → logprob: -6.501618385314941
    3. ' result' → logprob: -9.376618385314941
    4. 'return' → logprob: -10.751618385314941
    5. ' return' → logprob: -11.626618385314941
    6. '```' → logprob: -15.251618385314941
    7. '   ' → logprob: -15.376618385314941
    8. '
' → logprob: -15.376618385314941
    9. ',result' → logprob: -15.876618385314941
    10. '        
' → logprob: -16.376619338989258

Token 263: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5076789855957031
    2. 'return' → logprob: -1.2576789855957031
    3. '       ' → logprob: -2.507678985595703
    4. ' result' → logprob: -4.007678985595703
    5. ' return' → logprob: -4.257678985595703
    6. '   ' → logprob: -12.382678985595703
    7. '
' → logprob: -13.007678985595703
    8. '        
' → logprob: -15.007678985595703
    9. '_result' → logprob: -15.132678985595703
    10. '	result' → logprob: -15.632678985595703

Token 264: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -5.88418151892256e-05
    2. '.' → logprob: -9.750059127807617
    3. ' .' → logprob: -14.875059127807617
    4. '.sorted' → logprob: -16.375059127807617
    5. '=' → logprob: -17.375059127807617
    6. 'sort' → logprob: -18.250059127807617
    7. '.s' → logprob: -19.000059127807617
    8. '   ' → logprob: -19.000059127807617
    9. '.Sort' → logprob: -19.125059127807617
    10. ' =' → logprob: -19.500059127807617

Token 265: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00048477304517291486
    2. '(key' → logprob: -7.750484943389893
    3. '()
' → logprob: -9.875484466552734
    4. 'key' → logprob: -14.375484466552734
    5. '()

' → logprob: -14.375484466552734
    6. '(lambda' → logprob: -14.500484466552734
    7. ' ()' → logprob: -15.500484466552734
    8. '(' → logprob: -15.500484466552734
    9. '())' → logprob: -15.875484466552734
    10. '();' → logprob: -16.000484466552734

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002299420302733779
    2. 'return' → logprob: -6.1272993087768555
    3. ' return' → logprob: -9.502299308776855
    4. '   ' → logprob: -10.252299308776855
    5. '	return' → logprob: -12.877299308776855
    6. '	' → logprob: -14.502299308776855
    7. '```' → logprob: -15.127299308776855
    8. '
' → logprob: -15.627299308776855
    9. ' ' → logprob: -16.252300262451172
    10. '        
' → logprob: -16.252300262451172

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00029708960209973156
    2. '       ' → logprob: -8.250297546386719
    3. ' return' → logprob: -10.250297546386719
    4. '   ' → logprob: -14.750297546386719
    5. '
' → logprob: -17.37529754638672
    6. '	return' → logprob: -17.75029754638672
    7. 'eturn' → logprob: -19.00029754638672
    8. '```' → logprob: -20.00029754638672
    9. ' ' → logprob: -20.12529754638672
    10. '{return' → logprob: -20.25029754638672

Token 268: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.061967797577381134
    2. ' result' → logprob: -2.8119678497314453
    3. '(result' → logprob: -15.936967849731445
    4. '[result' → logprob: -18.061967849731445
    5. '	result' → logprob: -19.436967849731445
    6. '   ' → logprob: -20.811967849731445
    7. '=result' → logprob: -20.936967849731445
    8. '_result' → logprob: -21.936967849731445
    9. '$result' → logprob: -21.936967849731445
    10. ',result' → logprob: -21.936967849731445

Token 269: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02326982282102108
    2. 'if' → logprob: -3.7732698917388916
    3. 'import' → logprob: -11.398269653320312
    4. '```' → logprob: -12.148269653320312
    5. 'class' → logprob: -12.773269653320312
    6. '#' → logprob: -12.773269653320312
    7. ' if' → logprob: -13.898269653320312
    8. '
' → logprob: -14.398269653320312
    9. ' def' → logprob: -14.773269653320312
    10. '    
' → logprob: -16.023269653320312

Token 271: ' Related' (ID: 43352)
  Prédit: 'Purchase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -0.7390248775482178
    2. ' Purchase' → logprob: -1.1140248775482178
    3. 'Solution' → logprob: -3.1140248775482178
    4. 'Transaction' → logprob: -3.3640248775482178
    5. 'Input' → logprob: -3.9890248775482178
    6. ' Solution' → logprob: -4.114025115966797
    7. ' Transaction' → logprob: -4.239025115966797
    8. 'Main' → logprob: -4.864025115966797
    9. 'Fre' → logprob: -4.864025115966797
    10. 'Pair' → logprob: -4.864025115966797

Token 272: 'Products' (ID: 19437)
  Prédit: 'Item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Item' → logprob: -0.5165741443634033
    2. 'Product' → logprob: -1.5165741443634033
    3. 'Purchase' → logprob: -2.3915741443634033
    4. 'Items' → logprob: -2.5165741443634033
    5. 'Products' → logprob: -5.391573905944824
    6. 'Purch' → logprob: -5.641573905944824
    7. 'Pair' → logprob: -6.016573905944824
    8. 'Pairs' → logprob: -7.141573905944824
    9. 'Topic' → logprob: -9.516573905944824
    10. 'ness' → logprob: -9.766573905944824

Token 273: 'Analyzer' (ID: 61604)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01582542061805725
    2. 'Finder' → logprob: -4.515825271606445
    3. 'Searcher' → logprob: -6.265825271606445
    4. ':
' → logprob: -6.515825271606445
    5. 'Analyzer' → logprob: -8.015825271606445
    6. 'Interactor' → logprob: -9.265825271606445
    7. '{' → logprob: -9.390825271606445
    8. 'Counter' → logprob: -9.515825271606445
    9. 'Detector' → logprob: -9.515825271606445
    10. 'Selector' → logprob: -9.640825271606445

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025108797126449645
    2. ':
' → logprob: -8.375250816345215
    3. '():' → logprob: -12.250250816345215
    4. '(' → logprob: -12.625250816345215
    5. ' :' → logprob: -12.625250816345215
    6. '):' → logprob: -13.000250816345215
    7. '(P' → logprob: -13.375250816345215
    8. '<|end|>' → logprob: -13.500250816345215
    9. '(object' → logprob: -13.750250816345215
    10. ':def' → logprob: -13.875250816345215

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001723488443531096
    2. ' def' → logprob: -7.001723289489746
    3. 'def' → logprob: -7.126723289489746
    4. '```' → logprob: -13.251723289489746
    5. '    
' → logprob: -13.376723289489746
    6. ':' → logprob: -13.626723289489746
    7. 'class' → logprob: -13.876723289489746
    8. '	def' → logprob: -14.251723289489746
    9. '   ' → logprob: -14.251723289489746
    10. '
' → logprob: -14.376723289489746

Token 276: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5775320529937744
    2. 'def' (adapté à ' def') → logprob: -0.8275320529937744
    3. '   ' → logprob: -6.452531814575195
    4. '	def' → logprob: -12.202531814575195
    5. ' ' → logprob: -13.077531814575195
    6. '
' → logprob: -13.202531814575195
    7. ':def' → logprob: -13.202531814575195
    8. 'class' → logprob: -13.827531814575195
    9. '```' → logprob: -13.827531814575195
    10. '  ' → logprob: -14.452531814575195

Token 277: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03587809577584267
    2. ' def' → logprob: -3.5358781814575195
    3. '__' → logprob: -6.0358781814575195
    4. ' init' → logprob: -6.1608781814575195
    5. 'init' → logprob: -6.9108781814575195
    6. 'def' → logprob: -8.28587818145752
    7. '_init' → logprob: -8.78587818145752
    8. ' ' → logprob: -9.41087818145752
    9. '  ' → logprob: -10.16087818145752
    10. '```' → logprob: -10.78587818145752

Token 278: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. 'def' → logprob: -15.125000953674316
    3. '```' → logprob: -15.500000953674316
    4. ' init' → logprob: -16.375
    5. '   ' → logprob: -17.0
    6. '(init' → logprob: -17.625
    7. 'in' → logprob: -17.75
    8. '
' → logprob: -18.0
    9. 'ini' → logprob: -18.125
    10. '_init' → logprob: -18.25

Token 279: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003190193965565413
    2. '__' → logprob: -8.125319480895996
    3. '__(
' → logprob: -11.125319480895996
    4. '(self' → logprob: -12.000319480895996
    5. '_(' → logprob: -13.875319480895996
    6. '(' → logprob: -14.250319480895996
    7. '__((' → logprob: -15.500319480895996
    8. '__('' → logprob: -15.750319480895996
    9. '_' → logprob: -17.00031852722168
    10. '__("' → logprob: -17.25031852722168

Token 280: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.073596548754722e-05
    2. ' self' → logprob: -10.50005054473877
    3. ')' → logprob: -10.87505054473877
    4. '
' → logprob: -13.25005054473877
    5. '):
' → logprob: -13.62505054473877
    6. '(self' → logprob: -14.50005054473877
    7. '   ' → logprob: -15.62505054473877
    8. ')(' → logprob: -15.75005054473877
    9. ')
' → logprob: -16.250051498413086
    10. 'threshold' → logprob: -16.375051498413086

Token 281: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3106291890144348
    2. '):' → logprob: -1.43562912940979
    3. ',' → logprob: -4.310629367828369
    4. 'self' → logprob: -4.935629367828369
    5. ')' → logprob: -5.435629367828369
    6. '__' → logprob: -5.810629367828369
    7. '(self' → logprob: -8.185628890991211
    8. '<|end|>' → logprob: -9.185628890991211
    9. '():
' → logprob: -9.435628890991211
    10. '__(' → logprob: -9.560628890991211

Token 282: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.24595563113689423
    2. 'purchase' → logprob: -1.8709555864334106
    3. 'records' → logprob: -3.8709557056427
    4. 'self' → logprob: -3.9959557056427
    5. ' threshold' → logprob: -4.745955467224121
    6. ' purchase' → logprob: -5.620955467224121
    7. 'min' → logprob: -5.870955467224121
    8. ')' → logprob: -6.245955467224121
    9. 'p' → logprob: -6.245955467224121
    10. 'frequency' → logprob: -6.245955467224121

Token 283: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007017991505563259
    2. '=' → logprob: -5.757018089294434
    3. '):' → logprob: -6.007018089294434
    4. ':int' → logprob: -6.632018089294434
    5. ' :' → logprob: -10.507018089294434
    6. ')' → logprob: -11.257018089294434
    7. ' ):' → logprob: -12.507018089294434
    8. ' =' → logprob: -12.757018089294434
    9. '):
' → logprob: -12.757018089294434
    10. '=int' → logprob: -13.257018089294434

Token 284: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05354757606983185
    2. '1' → logprob: -3.5535476207733154
    3. ' int' → logprob: -4.178547382354736
    4. '2' → logprob: -5.428547382354736
    5. '0' → logprob: -6.053547382354736
    6. '3' → logprob: -8.303547859191895
    7. '):
' → logprob: -8.303547859191895
    8. ')' → logprob: -8.553547859191895
    9. ' ' → logprob: -8.678547859191895
    10. ':int' → logprob: -8.803547859191895

Token 285: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5768691897392273
    2. '):' → logprob: -0.8268691897392273
    3. ',' → logprob: -7.326869010925293
    4. '):
' → logprob: -8.326869010925293
    5. '   ' → logprob: -10.951869010925293
    6. ':' → logprob: -12.326869010925293
    7. ')' → logprob: -12.576869010925293
    8. '       ' → logprob: -13.576869010925293
    9. ' ):' → logprob: -13.576869010925293
    10. ' ):
' → logprob: -14.076869010925293

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005280126351863146
    2. 'self' → logprob: -5.380280017852783
    3. ' self' → logprob: -7.380280017852783
    4. '   ' → logprob: -10.880280494689941
    5. '	self' → logprob: -11.630280494689941
    6. '	' → logprob: -12.005280494689941
    7. '	   ' → logprob: -14.880280494689941
    8. ',' → logprob: -15.130280494689941
    9. '(self' → logprob: -15.255280494689941
    10. '```' → logprob: -15.255280494689941

Token 287: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012474933173507452
    2. '       ' → logprob: -7.001247406005859
    3. ' self' → logprob: -8.00124740600586
    4. '   ' → logprob: -14.25124740600586
    5. '	self' → logprob: -15.75124740600586
    6. '
' → logprob: -16.50124740600586
    7. '        
' → logprob: -17.25124740600586
    8. '           ' → logprob: -19.37624740600586
    9. '(self' → logprob: -19.62624740600586
    10. ' ' → logprob: -20.12624740600586

Token 288: '.threshold' (ID: 153564)
  Prédit: '.threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.threshold' → logprob: -0.018051138147711754
    2. '.counter' → logprob: -4.5180511474609375
    3. '.p' → logprob: -5.3930511474609375
    4. 'threshold' → logprob: -6.7680511474609375
    5. '.frequency' → logprob: -6.7680511474609375
    6. '.purchase' → logprob: -9.393051147460938
    7. ' .' → logprob: -11.018051147460938
    8. '.th' → logprob: -11.518051147460938
    9. '_threshold' → logprob: -12.143051147460938
    10. 'counter' → logprob: -12.393051147460938

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47442641854286194
    2. '=' → logprob: -0.9744263887405396
    3. ':' → logprob: -7.97442626953125
    4. ' ' → logprob: -13.47442626953125
    5. ')' → logprob: -13.97442626953125
    6. ':int' → logprob: -14.34942626953125
    7. ',' → logprob: -14.59942626953125
    8. ' :' → logprob: -14.59942626953125
    9. '=int' → logprob: -14.72442626953125
    10. '   ' → logprob: -14.97442626953125

Token 290: ' threshold' (ID: 24313)
  Prédit: ' threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.47407716512680054
    2. 'threshold' → logprob: -0.9740771651268005
    3. '.threshold' → logprob: -16.724077224731445
    4. 'th' → logprob: -16.974077224731445
    5. '_threshold' → logprob: -18.224077224731445
    6. ' thresh' → logprob: -18.349077224731445
    7. ' ' → logprob: -18.599077224731445
    8. ' thresholds' → logprob: -18.974077224731445
    9. '
' → logprob: -19.099077224731445
    10. '   ' → logprob: -19.224077224731445

Token 291: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12788157165050507
    2. '
' → logprob: -2.1278815269470215
    3. '<|end|>' → logprob: -7.7528815269470215
    4. '   ' → logprob: -8.00288200378418
    5. ',' → logprob: -10.00288200378418
    6. '	' → logprob: -10.50288200378418
    7. 'def' → logprob: -10.75288200378418
    8. ' self' → logprob: -10.87788200378418
    9. 'self' → logprob: -11.12788200378418
    10. '<|end|>' → logprob: -11.50288200378418

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024979067966341972
    2. 'self' → logprob: -3.8999791145324707
    3. 'def' → logprob: -5.774979114532471
    4. ' self' → logprob: -7.024979114532471
    5. '
' → logprob: -8.649978637695312
    6. '   ' → logprob: -8.649978637695312
    7. '	self' → logprob: -10.399978637695312
    8. ' def' → logprob: -10.649978637695312
    9. '	' → logprob: -11.024978637695312
    10. '<|end|>' → logprob: -12.024978637695312

Token 293: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00016182278341148049
    2. ' self' → logprob: -9.125162124633789
    3. '       ' → logprob: -10.125162124633789
    4. 'def' → logprob: -11.500162124633789
    5. 'counter' → logprob: -13.125162124633789
    6. '
' → logprob: -15.625162124633789
    7. '   ' → logprob: -16.12516212463379
    8. '           ' → logprob: -16.87516212463379
    9. '        
' → logprob: -16.87516212463379
    10. '	self' → logprob: -16.87516212463379

Token 294: '.counter' (ID: 89645)
  Prédit: '.counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.counter' → logprob: -0.9027137160301208
    2. '.p' → logprob: -1.0277137756347656
    3. 'counter' → logprob: -2.4027137756347656
    4. ' .' → logprob: -3.0277137756347656
    5. '.frequency' → logprob: -3.2777137756347656
    6. 'pair' → logprob: -4.152713775634766
    7. ' counter' → logprob: -4.402713775634766
    8. 'frequency' → logprob: -4.402713775634766
    9. ' pair' → logprob: -5.527713775634766
    10. '.' → logprob: -5.652713775634766

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889220863580704
    2. '=' → logprob: -2.578892230987549
    3. 's' → logprob: -13.57889175415039
    4. ':' → logprob: -14.82889175415039
    5. ' =
' → logprob: -14.82889175415039
    6. ' ' → logprob: -15.57889175415039
    7. '   ' → logprob: -16.20389175415039
    8. '    ' → logprob: -16.57889175415039
    9. '  ' → logprob: -16.70389175415039
    10. '	' → logprob: -17.82889175415039

Token 296: ' Pair' (ID: 41250)
  Prédit: ' Pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Pair' → logprob: -0.07888978719711304
    2. 'Pair' → logprob: -2.578889846801758
    3. '<Pair' → logprob: -17.703889846801758
    4. ' ' → logprob: -17.828889846801758
    5. ' pair' → logprob: -17.953889846801758
    6. '_pair' → logprob: -18.453889846801758
    7. 'Pairs' → logprob: -20.828889846801758
    8. '.Pair' → logprob: -21.203889846801758
    9. 'pair' → logprob: -21.453889846801758
    10. ' ' → logprob: -21.703889846801758

Token 297: 'Frequency' (ID: 45815)
  Prédit: 'Frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Frequency' → logprob: 0.0
    2. 'frequency' → logprob: -17.625
    3. 'Fre' → logprob: -17.875
    4. '_frequency' → logprob: -18.375
    5. ' Frequency' → logprob: -18.625
    6. 'F' → logprob: -18.75
    7. 'requency' → logprob: -20.625
    8. 'Freq' → logprob: -21.5
    9. ' frequency' → logprob: -21.625
    10. 'fre' → logprob: -22.25

Token 298: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.3306015716807451e-05
    2. 'counter' → logprob: -11.50001335144043
    3. 'ounter' → logprob: -12.75001335144043
    4. '_counter' → logprob: -16.50001335144043
    5. ' Counter' → logprob: -16.50001335144043
    6. 'Coun' → logprob: -17.87501335144043
    7. ' counter' → logprob: -18.00001335144043
    8. '.Counter' → logprob: -18.12501335144043
    9. 'Count' → logprob: -18.62501335144043
    10. '-counter' → logprob: -18.75001335144043

Token 299: '()

' (ID: 5874)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.47770509123802185
    2. '<|end|>' → logprob: -1.6027051210403442
    3. '
' → logprob: -1.9777051210403442
    4. 'def' → logprob: -3.7277050018310547
    5. '<|end|>' → logprob: -4.727705001831055
    6. '   ' → logprob: -5.852705001831055
    7. ' def' → logprob: -6.602705001831055
    8. '()

' → logprob: -6.727705001831055
    9. '()' → logprob: -7.602705001831055
    10. '(' → logprob: -8.102705001831055

Token 300: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16571897268295288
    2. '   ' → logprob: -1.9157190322875977
    3. ' def' → logprob: -5.665719032287598
    4. '
' → logprob: -6.290719032287598
    5. '    
' → logprob: -9.040719032287598
    6. '<|end|>' → logprob: -10.415719032287598
    7. '	def' → logprob: -12.040719032287598
    8. '        
' → logprob: -13.165719032287598
    9. '<|end|>' → logprob: -13.165719032287598
    10. '  
' → logprob: -13.290719032287598

Token 301: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.3306015716807451e-05
    2. ' def' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.50001335144043
    4. '
' → logprob: -17.12501335144043
    5. '    
' → logprob: -19.87501335144043
    6. '	def' → logprob: -22.37501335144043
    7. '        
' → logprob: -24.12501335144043
    8. '

' → logprob: -24.50001335144043
    9. ' 
' → logprob: -24.87501335144043
    10. ' ' → logprob: -24.87501335144043

Token 302: ' analyze' (ID: 30532)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.6346098780632019
    2. ' process' → logprob: -0.8846098780632019
    3. ' analyze' → logprob: -3.5096099376678467
    4. 'add' → logprob: -4.384609699249268
    5. ' add' → logprob: -4.509609699249268
    6. 'an' → logprob: -5.634609699249268
    7. 'read' → logprob: -12.509610176086426
    8. ' load' → logprob: -12.509610176086426
    9. 'load' → logprob: -13.009610176086426
    10. 'run' → logprob: -13.134610176086426

Token 303: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.599403423024341e-05
    2. '_purchase' → logprob: -10.125065803527832
    3. '(' → logprob: -11.500065803527832
    4. '_p' → logprob: -12.000065803527832
    5. '_records' → logprob: -12.625065803527832
    6. ' (' → logprob: -13.125065803527832
    7. '(p' → logprob: -13.875065803527832
    8. ' purchases' → logprob: -14.375065803527832
    9. 'purchase' → logprob: -14.500065803527832
    10. '(s' → logprob: -14.625065803527832

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007914762943983078
    2. 'self' → logprob: -6.0079145431518555
    3. '_records' → logprob: -6.5079145431518555
    4. '_purchase' → logprob: -6.6329145431518555
    5. ',p' → logprob: -7.3829145431518555
    6. 'purchase' → logprob: -7.7579145431518555
    7. '):' → logprob: -7.7579145431518555
    8. '       ' → logprob: -8.632914543151855
    9. '(records' → logprob: -8.757914543151855
    10. ' ,' → logprob: -9.007914543151855

Token 305: ' purchase' (ID: 7314)
  Prédit: 'purchase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'purchase' → logprob: -0.4721846580505371
    2. 'records' → logprob: -2.097184658050537
    3. ' purchase' → logprob: -2.347184658050537
    4. 'lines' → logprob: -3.347184658050537
    5. 'self' → logprob: -3.597184658050537
    6. ' records' → logprob: -3.722184658050537
    7. ' lines' → logprob: -3.847184658050537
    8. ' purchases' → logprob: -4.222184658050537
    9. 'input' → logprob: -4.347184658050537
    10. 'p' → logprob: -4.722184658050537

Token 306: '_records' (ID: 77212)
  Prédit: '_records'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_records' → logprob: -0.20413479208946228
    2. 's' → logprob: -1.7041348218917847
    3. 'Records' → logprob: -7.079134941101074
    4. '_record' → logprob: -7.204134941101074
    5. '_lines' → logprob: -7.329134941101074
    6. 'records' → logprob: -8.204134941101074
    7. '_data' → logprob: -9.704134941101074
    8. '_line' → logprob: -10.454134941101074
    9. '_list' → logprob: -11.079134941101074
    10. '   ' → logprob: -11.204134941101074

Token 307: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02472265437245369
    2. '):' → logprob: -3.7747225761413574
    3. '):
' → logprob: -7.149722576141357
    4. ' :' → logprob: -8.024723052978516
    5. ')' → logprob: -8.774723052978516
    6. ' ):' → logprob: -9.024723052978516
    7. '   ' → logprob: -10.524723052978516
    8. '[]):' → logprob: -11.024723052978516
    9. '[' → logprob: -11.149723052978516
    10. '       ' → logprob: -11.899723052978516

Token 308: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00024882311117835343
    2. ' List' → logprob: -8.375248908996582
    3. ')' → logprob: -11.625248908996582
    4. 'Iterable' → logprob: -12.750248908996582
    5. '[List' → logprob: -12.875248908996582
    6. 'list' → logprob: -13.625248908996582
    7. 'self' → logprob: -13.875248908996582
    8. '   ' → logprob: -14.500248908996582
    9. '       ' → logprob: -14.750248908996582
    10. 'Iterator' → logprob: -15.125248908996582

Token 309: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '['' → logprob: -14.750001907348633
    3. '[str' → logprob: -14.875001907348633
    4. ')' → logprob: -14.875001907348633
    5. 'Purchase' → logprob: -15.250001907348633
    6. '[
' → logprob: -16.000001907348633
    7. '
' → logprob: -16.250001907348633
    8. '

' → logprob: -17.750001907348633
    9. ' [' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.125001907348633

Token 310: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -6.704273118884885e-07
    2. ' Purchase' → logprob: -14.250000953674316
    3. 'purchase' → logprob: -19.25
    4. 'Purch' → logprob: -21.0
    5. '_purchase' → logprob: -21.75
    6. ' purchase' → logprob: -22.125
    7. '[' → logprob: -22.25
    8. '   ' → logprob: -22.625
    9. 'Record' → logprob: -23.0
    10. 'urchase' → logprob: -23.0

Token 311: 'Record' (ID: 6721)
  Prédit: 'Record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Record' → logprob: -1.6240566083070007e-06
    2. 'Records' → logprob: -13.625001907348633
    3. 'record' → logprob: -15.500001907348633
    4. '<Record' → logprob: -17.125001907348633
    5. 's' → logprob: -17.375001907348633
    6. '_Record' → logprob: -17.375001907348633
    7. '_record' → logprob: -17.875001907348633
    8. ')' → logprob: -18.125001907348633
    9. ' Record' → logprob: -18.250001907348633
    10. '_RECORD' → logprob: -18.875001907348633

Token 312: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21323594450950623
    2. '])' → logprob: -1.9632359743118286
    3. ']):
' → logprob: -3.463235855102539
    4. '):
' → logprob: -3.963235855102539
    5. '   ' → logprob: -7.713235855102539
    6. ']):' → logprob: -7.963235855102539
    7. '):' → logprob: -8.838235855102539
    8. ')]' → logprob: -9.213235855102539
    9. '       ' → logprob: -9.338235855102539
    10. ']' → logprob: -10.088235855102539

Token 313: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03207123279571533
    2. ':
' → logprob: -3.532071113586426
    3. '       ' → logprob: -6.282071113586426
    4. '):' → logprob: -8.782071113586426
    5. '   ' → logprob: -9.032071113586426
    6. '):
' → logprob: -9.657071113586426
    7. '():' → logprob: -10.032071113586426
    8. '(self' → logprob: -10.657071113586426
    9. '():
' → logprob: -11.032071113586426
    10. ',' → logprob: -11.782071113586426

Token 314: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.004092292860150337
    2. ' List' → logprob: -5.504092216491699
    3. 'None' → logprob: -11.2540922164917
    4. '[List' → logprob: -14.3790922164917
    5. '	List' → logprob: -16.379093170166016
    6. '   ' → logprob: -16.379093170166016
    7. ' None' → logprob: -16.629093170166016
    8. 'list' → logprob: -18.379093170166016
    9. '       ' → logprob: -18.629093170166016
    10. '<List' → logprob: -19.379093170166016

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.584239938296378e-06
    2. '[str' → logprob: -12.000007629394531
    3. '[
' → logprob: -14.125007629394531
    4. '<Tuple' → logprob: -16.00000762939453
    5. '[List' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.12500762939453
    7. ' [' → logprob: -16.12500762939453
    8. 'Tuple' → logprob: -16.62500762939453
    9. '[(' → logprob: -16.75000762939453
    10. '```' → logprob: -16.75000762939453

Token 316: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -4.842555426876061e-06
    2. ' Tuple' → logprob: -12.625004768371582
    3. 'str' → logprob: -13.750004768371582
    4. 'tuple' → logprob: -15.625004768371582
    5. 'Tu' → logprob: -15.750004768371582
    6. '   ' → logprob: -15.875004768371582
    7. '[' → logprob: -17.7500057220459
    8. ' ' → logprob: -18.7500057220459
    9. '           ' → logprob: -19.3750057220459
    10. '[str' → logprob: -19.3750057220459

Token 317: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.652451464906335e-05
    2. 'str' → logprob: -11.125016212463379
    3. '[' → logprob: -14.250016212463379
    4. ' [' → logprob: -14.375016212463379
    5. '   ' → logprob: -15.500016212463379
    6. ' str' → logprob: -16.125017166137695
    7. ' ' → logprob: -17.250017166137695
    8. '[
' → logprob: -17.250017166137695
    9. '       ' → logprob: -17.375017166137695
    10. '[int' → logprob: -17.375017166137695

Token 318: ',str' (ID: 95110)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02326062321662903
    2. ',str' → logprob: -3.7732605934143066
    3. '[str' → logprob: -11.898261070251465
    4. ',
' → logprob: -12.898261070251465
    5. ' ,' → logprob: -13.023261070251465
    6. '   ' → logprob: -13.898261070251465
    7. 'str' → logprob: -13.898261070251465
    8. ',String' → logprob: -14.398261070251465
    9. ',int' → logprob: -14.523261070251465
    10. ',float' → logprob: -15.148261070251465

Token 319: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.0009120595059357584
    2. ']]' → logprob: -7.000912189483643
    3. '>' → logprob: -15.000911712646484
    4. ']' → logprob: -16.125911712646484
    5. ']:
' → logprob: -16.500911712646484
    6. '']' → logprob: -16.875911712646484
    7. '       ' → logprob: -17.750911712646484
    8. '   ' → logprob: -18.250911712646484
    9. ']]
' → logprob: -18.375911712646484
    10. '```' → logprob: -18.875911712646484

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010154220508411527
    2. '
' → logprob: -7.2510151863098145
    3. 'self' → logprob: -8.376015663146973
    4. '   ' → logprob: -10.626015663146973
    5. '```' → logprob: -11.251015663146973
    6. '        
' → logprob: -11.376015663146973
    7. ' self' → logprob: -12.251015663146973
    8. '    
' → logprob: -12.501015663146973
    9. 'for' → logprob: -12.751015663146973
    10. '[' → logprob: -13.126015663146973

Token 321: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42404964566230774
    2. 'for' (adapté à ' for') → logprob: -1.6740496158599854
    3. '       ' → logprob: -2.0490496158599854
    4. ' for' → logprob: -3.9240496158599854
    5. ' self' → logprob: -4.6740498542785645
    6. 'result' → logprob: -9.299049377441406
    7. '[self' → logprob: -11.049049377441406
    8. '   ' → logprob: -11.174049377441406
    9. 'results' → logprob: -11.424049377441406
    10. '```' → logprob: -11.424049377441406

Token 322: ' record' (ID: 3704)
  Prédit: ' record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' record' → logprob: -0.3869280219078064
    2. 'record' → logprob: -1.1369280815124512
    3. 'purchase' → logprob: -10.261927604675293
    4. ' purchase' → logprob: -10.761927604675293
    5. '	record' → logprob: -14.636927604675293
    6. '       ' → logprob: -15.386927604675293
    7. 'rec' → logprob: -15.886927604675293
    8. '(record' → logprob: -16.63692855834961
    9. '   ' → logprob: -17.01192855834961
    10. 'pr' → logprob: -18.01192855834961

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0001589618914294988
    2. 'in' → logprob: -8.75015926361084
    3. '	in' → logprob: -16.125158309936523
    4. ' ' → logprob: -16.250158309936523
    5. '        ' → logprob: -16.500158309936523
    6. 'import' → logprob: -16.625158309936523
    7. '       ' → logprob: -17.375158309936523
    8. ' i' → logprob: -17.625158309936523
    9. 'purchase' → logprob: -18.000158309936523
    10. '<|end|>' → logprob: -18.250158309936523

Token 324: ' purchase' (ID: 7314)
  Prédit: 'purchase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'purchase' → logprob: -0.3132619559764862
    2. ' purchase' → logprob: -1.3132619857788086
    3. '.purchase' → logprob: -16.188261032104492
    4. '_purchase' → logprob: -16.313261032104492
    5. 'Purchase' → logprob: -18.313261032104492
    6. 'urchase' → logprob: -19.313261032104492
    7. 'p' → logprob: -19.563261032104492
    8. '   ' → logprob: -20.438261032104492
    9. ' purchases' → logprob: -20.563261032104492
    10. 'pur' → logprob: -20.938261032104492

Token 325: '_records' (ID: 77212)
  Prédit: '_records'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_records' → logprob: -4.11996734328568e-05
    2. 's' → logprob: -10.250041007995605
    3. 'records' → logprob: -12.375041007995605
    4. '_' → logprob: -14.625041007995605
    5. '_record' → logprob: -14.875041007995605
    6. 'Records' → logprob: -15.750041007995605
    7. '_re' → logprob: -15.875041007995605
    8. ' records' → logprob: -16.875041961669922
    9. '_rec' → logprob: -17.500041961669922
    10. '(records' → logprob: -17.625041961669922

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04304657503962517
    2. ':
' → logprob: -3.168046474456787
    3. '.' → logprob: -11.168046951293945
    4. '           ' → logprob: -11.543046951293945
    5. '       ' → logprob: -11.918046951293945
    6. '):' → logprob: -12.543046951293945
    7. ',' → logprob: -12.668046951293945
    8. '):
' → logprob: -12.668046951293945
    9. ':
' → logprob: -12.918046951293945
    10. ' :' → logprob: -13.793046951293945

Token 327: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11653649806976318
    2. 'self' → logprob: -2.4915366172790527
    3. ' self' → logprob: -3.6165366172790527
    4. '       ' → logprob: -8.116536140441895
    5. '
' → logprob: -10.616536140441895
    6. '   ' → logprob: -11.741536140441895
    7. '```' → logprob: -12.741536140441895
    8. '[self' → logprob: -13.366536140441895
    9. '          ' → logprob: -13.491536140441895
    10. '               ' → logprob: -13.616536140441895

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023504948243498802
    2. ' self' → logprob: -3.7735049724578857
    3. '           ' → logprob: -8.398505210876465
    4. '               ' → logprob: -10.523505210876465
    5. '   ' → logprob: -12.648505210876465
    6. '       ' → logprob: -13.273505210876465
    7. ' ' → logprob: -13.398505210876465
    8. '	self' → logprob: -14.648505210876465
    9. '  ' → logprob: -14.898505210876465
    10. '[self' → logprob: -16.39850425720215

Token 329: '.counter' (ID: 89645)
  Prédit: '.counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.counter' → logprob: -5.3358446166384965e-05
    2. 'counter' → logprob: -10.125053405761719
    3. '.' → logprob: -11.375053405761719
    4. '[counter' → logprob: -13.625053405761719
    5. ' counter' → logprob: -15.625053405761719
    6. ' .' → logprob: -16.00005340576172
    7. '	counter' → logprob: -16.50005340576172
    8. '.Counter' → logprob: -17.37505340576172
    9. '   ' → logprob: -18.37505340576172
    10. '.chain' → logprob: -18.62505340576172

Token 330: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002622894535306841
    2. '.' → logprob: -8.250262260437012
    3. ' .' → logprob: -14.625262260437012
    4. 'add' → logprob: -14.625262260437012
    5. '.append' → logprob: -17.250263214111328
    6. '   ' → logprob: -18.250263214111328
    7. '.
' → logprob: -18.500263214111328
    8. ').' → logprob: -18.625263214111328
    9. '_add' → logprob: -18.875263214111328
    10. '.Add' → logprob: -19.125263214111328

Token 331: '_purchase' (ID: 147627)
  Prédit: '_purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_purchase' → logprob: -2.534558552724775e-05
    2. 'purchase' → logprob: -10.625025749206543
    3. '_' → logprob: -14.500025749206543
    4. ' purchase' → logprob: -15.125025749206543
    5. '_p' → logprob: -15.375025749206543
    6. 'Purchase' → logprob: -17.500024795532227
    7. 'urchase' → logprob: -18.625024795532227
    8. '_visit' → logprob: -18.750024795532227
    9. '(_' → logprob: -19.125024795532227
    10. '_sale' → logprob: -19.375024795532227

Token 332: '_record' (ID: 26649)
  Prédit: '_record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_record' → logprob: -0.002201763214543462
    2. 'record' → logprob: -6.127201557159424
    3. 'Record' → logprob: -11.127202033996582
    4. '_records' → logprob: -13.877202033996582
    5. ' record' → logprob: -15.002202033996582
    6. '_' → logprob: -16.127201080322266
    7. '(record' → logprob: -16.252201080322266
    8. ' _' → logprob: -17.377201080322266
    9. '_Record' → logprob: -17.377201080322266
    10. '
' → logprob: -17.627201080322266

Token 333: '(record' (ID: 42175)
  Prédit: '(record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(record' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. '(
' → logprob: -17.12509536743164
    4. ' (' → logprob: -17.25009536743164
    5. 'record' → logprob: -17.37509536743164
    6. '(rec' → logprob: -18.00009536743164
    7. '(records' → logprob: -18.25009536743164
    8. '(object' → logprob: -19.37509536743164
    9. '(line' → logprob: -19.62509536743164
    10. '(r' → logprob: -20.50009536743164

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020814549177885056
    2. ')
' → logprob: -3.8958146572113037
    3. '       ' → logprob: -8.270814895629883
    4. ')

' → logprob: -11.895814895629883
    5. ')return' → logprob: -12.520814895629883
    6. ')
' → logprob: -13.020814895629883
    7. '<|end|>' → logprob: -13.270814895629883
    8. ' )' → logprob: -13.770814895629883
    9. '
' → logprob: -14.770814895629883
    10. '   ' → logprob: -16.145814895629883

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1276310384273529
    2. 'return' → logprob: -2.3776309490203857
    3. ' return' → logprob: -3.6276309490203857
    4. '
' → logprob: -7.752631187438965
    5. '   ' → logprob: -10.502631187438965
    6. '	return' → logprob: -12.002631187438965
    7. '```' → logprob: -12.252631187438965
    8. 'result' → logprob: -13.502631187438965
    9. '	' → logprob: -13.752631187438965
    10. '      ' → logprob: -14.627631187438965

Token 336: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003393729217350483
    2. '       ' → logprob: -5.753393650054932
    3. ' return' → logprob: -8.50339412689209
    4. '
' → logprob: -12.00339412689209
    5. 'result' → logprob: -12.62839412689209
    6. '```' → logprob: -12.87839412689209
    7. '   ' → logprob: -14.50339412689209
    8. '
' → logprob: -15.37839412689209
    9. 'threshold' → logprob: -15.62839412689209
    10. '	return' → logprob: -15.87839412689209

Token 337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326404213905334
    2. ' self' → logprob: -1.313264012336731
    3. '(self' → logprob: -13.313263893127441
    4. '[self' → logprob: -14.563263893127441
    5. '	self' → logprob: -16.063264846801758
    6. 'Self' → logprob: -17.063264846801758
    7. '       ' → logprob: -17.438264846801758
    8. '   ' → logprob: -18.813264846801758
    9. '=self' → logprob: -18.938264846801758
    10. '```' → logprob: -19.063264846801758

Token 338: '.counter' (ID: 89645)
  Prédit: '.counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.counter' → logprob: -0.0002538296685088426
    2. 'counter' → logprob: -8.375253677368164
    3. '[counter' → logprob: -11.250253677368164
    4. '.get' → logprob: -12.000253677368164
    5. '	counter' → logprob: -13.375253677368164
    6. '.threshold' → logprob: -14.375253677368164
    7. '.' → logprob: -14.500253677368164
    8. ' counter' → logprob: -14.625253677368164
    9. ' .' → logprob: -14.750253677368164
    10. '(counter' → logprob: -15.750253677368164

Token 339: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -8.125210297293961e-05
    2. '.' → logprob: -9.500081062316895
    3. 'get' → logprob: -12.375081062316895
    4. ' .' → logprob: -14.500081062316895
    5. '.findall' → logprob: -15.250081062316895
    6. '
' → logprob: -15.375081062316895
    7. '.fre' → logprob: -15.625081062316895
    8. '_get' → logprob: -15.875081062316895
    9. 'fre' → logprob: -16.37508201599121
    10. '.frequency' → logprob: -16.37508201599121

Token 340: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.9361264946837764e-07
    2. 'fre' → logprob: -16.375
    3. '_' → logprob: -18.375
    4. '_frequency' → logprob: -18.375
    5. '```' → logprob: -20.125
    6. 'requent' → logprob: -20.5
    7. ' frequent' → logprob: -20.75
    8. 'f' → logprob: -21.0
    9. 'Fre' → logprob: -21.0
    10. ' frecuente' → logprob: -21.5

Token 341: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -1.2664456789934775e-06
    2. 'quent' → logprob: -14.625000953674316
    3. 'requ' → logprob: -15.000000953674316
    4. 're' → logprob: -15.625000953674316
    5. 'fre' → logprob: -16.875001907348633
    6. '_re' → logprob: -17.250001907348633
    7. 'requently' → logprob: -17.250001907348633
    8. 'request' → logprob: -17.625001907348633
    9. 'req' → logprob: -17.625001907348633
    10. '_' → logprob: -18.625001907348633

Token 342: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -5.080963092041202e-06
    2. 'pairs' → logprob: -12.625004768371582
    3. '_' → logprob: -13.875004768371582
    4. '_p' → logprob: -15.250004768371582
    5. 'Pairs' → logprob: -16.1250057220459
    6. 's' → logprob: -16.2500057220459
    7. ' _' → logprob: -16.2500057220459
    8. '```' → logprob: -16.5000057220459
    9. '_f' → logprob: -16.8750057220459
    10. '
' → logprob: -17.6250057220459

Token 343: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000264315924141556
    2. '(' → logprob: -8.250264167785645
    3. '(
' → logprob: -14.125264167785645
    4. ' (' → logprob: -14.375264167785645
    5. '()' → logprob: -15.125264167785645
    6. '(max' → logprob: -15.250264167785645
    7. 'self' → logprob: -15.375264167785645
    8. '(this' → logprob: -15.750264167785645
    9. '((' → logprob: -16.25026512145996
    10. '[self' → logprob: -16.25026512145996

Token 344: '.threshold' (ID: 153564)
  Prédit: '.threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.threshold' → logprob: -0.00011093381908722222
    2. 'threshold' → logprob: -9.250110626220703
    3. '.' → logprob: -11.375110626220703
    4. '.th' → logprob: -13.000110626220703
    5. 'reshold' → logprob: -14.375110626220703
    6. ' .' → logprob: -15.000110626220703
    7. ' threshold' → logprob: -16.125110626220703
    8. '_threshold' → logprob: -18.375110626220703
    9. 'Threshold' → logprob: -19.000110626220703
    10. ').' → logprob: -19.000110626220703

Token 345: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.64708495605737e-05
    2. ')
' → logprob: -9.625066757202148
    3. ' )' → logprob: -15.375066757202148
    4. ')

' → logprob: -16.87506675720215
    5. ')return' → logprob: -17.00006675720215
    6. ')
' → logprob: -17.37506675720215
    7. '))' → logprob: -17.37506675720215
    8. '<|end|>' → logprob: -17.62506675720215
    9. '   ' → logprob: -18.37506675720215
    10. ')}' → logprob: -18.87506675720215

Token 346: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023374641314148903
    2. 'if' → logprob: -3.773374557495117
    3. '#' → logprob: -9.398374557495117
    4. 'import' → logprob: -10.148374557495117
    5. ' if' → logprob: -13.273374557495117
    6. 'from' → logprob: -13.648374557495117
    7. '```' → logprob: -13.648374557495117
    8. 'n' → logprob: -13.773374557495117
    9. 'line' → logprob: -13.898374557495117
    10. ' def' → logprob: -13.898374557495117

Token 347: ' Input' (ID: 10090)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.973903477191925
    2. 'Purchase' → logprob: -1.4739034175872803
    3. ' Solution' → logprob: -1.7239034175872803
    4. ' Purchase' → logprob: -2.4739034175872803
    5. 'sys' → logprob: -3.7239034175872803
    6. 'Main' → logprob: -3.8489034175872803
    7. ' sys' → logprob: -3.8489034175872803
    8. 'Input' → logprob: -4.223903656005859
    9. ' Main' → logprob: -4.848903656005859
    10. 'Product' → logprob: -4.848903656005859

Token 348: 'Output' (ID: 6310)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.3132977783679962
    2. 'Handler' → logprob: -1.5632977485656738
    3. 'Processor' → logprob: -3.063297748565674
    4. 'Parser' → logprob: -4.563297748565674
    5. 'Provider' → logprob: -6.813297748565674
    6. 'Data' → logprob: -7.438297748565674
    7. ':' → logprob: -7.938297748565674
    8. 'Manager' → logprob: -9.188298225402832
    9. 'Loader' → logprob: -9.438298225402832
    10. 'Helper' → logprob: -10.313298225402832

Token 349: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.019772788509726524
    2. 'Manager' → logprob: -4.519773006439209
    3. 'Helper' → logprob: -5.144773006439209
    4. 'Processor' → logprob: -5.894773006439209
    5. ':' → logprob: -10.01977252960205
    6. 'handler' → logprob: -11.51977252960205
    7. 'Interface' → logprob: -11.64477252960205
    8. '():' → logprob: -11.89477252960205
    9. 'Analyzer' → logprob: -12.01977252960205
    10. 'Controller' → logprob: -12.51977252960205

Token 350: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018196819291915745
    2. ':
' → logprob: -8.625182151794434
    3. ':

' → logprob: -14.000182151794434
    4. ':def' → logprob: -14.000182151794434
    5. '):' → logprob: -15.500182151794434
    6. '():' → logprob: -15.500182151794434
    7. ' :' → logprob: -16.250181198120117
    8. '<|end|>' → logprob: -16.500181198120117
    9. ':
' → logprob: -16.750181198120117
    10. '(' → logprob: -16.875181198120117

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009531481191515923
    2. ' def' → logprob: -7.000953197479248
    3. 'def' → logprob: -10.12595272064209
    4. '   ' → logprob: -14.00095272064209
    5. '    
' → logprob: -14.50095272064209
    6. '	def' → logprob: -15.37595272064209
    7. ' indentation' → logprob: -16.875953674316406
    8. '       ' → logprob: -17.250953674316406
    9. '   ' → logprob: -17.875953674316406
    10. ',' → logprob: -18.000953674316406

Token 352: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6946583390235901
    2. 'def' (adapté à ' def') → logprob: -0.6946583390235901
    3. '   ' → logprob: -6.569658279418945
    4. '@' → logprob: -9.194658279418945
    5. ' @' → logprob: -12.069658279418945
    6. 'staticmethod' → logprob: -15.444658279418945
    7. '	def' → logprob: -15.694658279418945
    8. ':def' → logprob: -17.194658279418945
    9. '```' → logprob: -18.319658279418945
    10. '    
' → logprob: -18.819658279418945

Token 353: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.4403435289859772
    2. 'def' → logprob: -1.8153434991836548
    3. 'init' → logprob: -1.9403434991836548
    4. '__' → logprob: -3.8153436183929443
    5. ' def' → logprob: -4.190343379974365
    6. ' __' → logprob: -4.815343379974365
    7. 'static' → logprob: -6.315343379974365
    8. 'classmethod' → logprob: -7.065343379974365
    9. 'object' → logprob: -7.440343379974365
    10. '_init' → logprob: -7.440343379974365

Token 354: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'new' → logprob: -16.875
    3. ' init' → logprob: -17.375
    4. 'int' → logprob: -19.125
    5. 'ini' → logprob: -19.125
    6. 'in' → logprob: -19.375
    7. 'staticmethod' → logprob: -20.125
    8. 'inite' → logprob: -20.25
    9. 'def' → logprob: -21.0
    10. 'initi' → logprob: -21.0

Token 355: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5811308026313782
    2. '(self' → logprob: -0.8311308026313782
    3. '(' → logprob: -5.3311309814453125
    4. '__' → logprob: -8.956130981445312
    5. ' (' → logprob: -9.456130981445312
    6. 'self' → logprob: -9.956130981445312
    7. '__(
' → logprob: -9.956130981445312
    8. ')(' → logprob: -11.456130981445312
    9. '_(' → logprob: -11.831130981445312
    10. '<>(' → logprob: -11.831130981445312

Token 356: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.580929347255733e-05
    2. ')' → logprob: -11.250016212463379
    3. '):
' → logprob: -13.500016212463379
    4. ' self' → logprob: -14.750016212463379
    5. ')(' → logprob: -14.750016212463379
    6. '
' → logprob: -14.875016212463379
    7. '   ' → logprob: -16.000015258789062
    8. '(self' → logprob: -17.250015258789062
    9. '),' → logprob: -18.125015258789062
    10. ')
' → logprob: -18.125015258789062

Token 357: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11473604291677475
    2. '):' → logprob: -2.3647360801696777
    3. '):
' → logprob: -4.614736080169678
    4. 'self' → logprob: -5.489736080169678
    5. ')' → logprob: -8.23973560333252
    6. '   ' → logprob: -10.73973560333252
    7. ',self' → logprob: -10.98973560333252
    8. ' ,' → logprob: -11.23973560333252
    9. ' ):' → logprob: -11.23973560333252
    10. ' self' → logprob: -11.23973560333252

Token 358: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010080150241265073
    2. '       ' → logprob: -9.250101089477539
    3. ' self' → logprob: -12.750101089477539
    4. '0' → logprob: -14.375101089477539
    5. '(self' → logprob: -14.375101089477539
    6. '   ' → logprob: -15.125101089477539
    7. '
' → logprob: -15.875101089477539
    8. 'threshold' → logprob: -16.25010108947754
    9. '	self' → logprob: -16.25010108947754
    10. '1' → logprob: -18.12510108947754

Token 359: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.024917904287576675
    2. 'pass' → logprob: -3.7749178409576416
    3. 'import' → logprob: -7.149918079376221
    4. '       ' → logprob: -7.774918079376221
    5. ' self' → logprob: -7.899918079376221
    6. '   ' → logprob: -9.524917602539062
    7. ' pass' → logprob: -11.024917602539062
    8. '           ' → logprob: -13.649917602539062
    9. 'input' → logprob: -14.024917602539062
    10. 'sys' → logprob: -14.274917602539062

Token 360: '.purchase' (ID: 163082)
  Prédit: '.purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.purchase' → logprob: -0.9903297424316406
    2. '.threshold' → logprob: -1.1153297424316406
    3. '.input' → logprob: -1.9903297424316406
    4. '.lines' → logprob: -2.4903297424316406
    5. '.records' → logprob: -3.3653297424316406
    6. '.data' → logprob: -3.4903297424316406
    7. '.p' → logprob: -5.115329742431641
    8. '.buffer' → logprob: -5.990329742431641
    9. '.inputs' → logprob: -6.365329742431641
    10. '.stdin' → logprob: -6.365329742431641

Token 361: '_records' (ID: 77212)
  Prédit: '_records'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_records' → logprob: -0.000464035285403952
    2. 'records' → logprob: -7.875463962554932
    3. 'Records' → logprob: -10.37546443939209
    4. '_lines' → logprob: -10.62546443939209
    5. 's' → logprob: -10.87546443939209
    6. '_record' → logprob: -12.12546443939209
    7. '_count' → logprob: -14.12546443939209
    8. '_data' → logprob: -14.25046443939209
    9. '_list' → logprob: -14.87546443939209
    10. '_input' → logprob: -15.25046443939209

Token 362: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21466273069381714
    2. ' =' → logprob: -1.714662790298462
    3. ':' → logprob: -4.339662551879883
    4. '=[]' → logprob: -9.089662551879883
    5. ' ' → logprob: -12.464662551879883
    6. ' :' → logprob: -12.589662551879883
    7. '=[]
' → logprob: -14.839662551879883
    8. '   ' → logprob: -15.589662551879883
    9. '  ' → logprob: -16.214662551879883
    10. ':list' → logprob: -16.464662551879883

Token 363: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -6.392202976712724e-06
    2. ' List' → logprob: -12.000006675720215
    3. '[List' → logprob: -16.3750057220459
    4. '[]' → logprob: -18.8750057220459
    5. '	List' → logprob: -20.1250057220459
    6. 'list' → logprob: -20.2500057220459
    7. '   ' → logprob: -20.7500057220459
    8. ' ' → logprob: -22.7500057220459
    9. '  ' → logprob: -22.8750057220459
    10. '<List' → logprob: -24.3750057220459

Token 364: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022237090161070228
    2. '[str' → logprob: -9.625222206115723
    3. '[P' → logprob: -9.750222206115723
    4. '<|end|>' → logprob: -9.750222206115723
    5. 'Purchase' → logprob: -11.000222206115723
    6. '[
' → logprob: -11.125222206115723
    7. '['' → logprob: -13.250222206115723
    8. ' =' → logprob: -13.625222206115723
    9. '<|end|>' → logprob: -13.750222206115723
    10. '=' → logprob: -13.875222206115723

Token 365: 'Purchase' (ID: 38522)
  Prédit: 'Purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -1.1472419600977446e-06
    2. ' Purchase' → logprob: -13.750000953674316
    3. 'purchase' → logprob: -18.125001907348633
    4. 'Purch' → logprob: -19.125001907348633
    5. '_purchase' → logprob: -19.375001907348633
    6. 'Purchased' → logprob: -21.125001907348633
    7. ' purchase' → logprob: -21.500001907348633
    8. '[str' → logprob: -21.750001907348633
    9. 'urchase' → logprob: -22.000001907348633
    10. '[' → logprob: -22.125001907348633

Token 366: 'Record' (ID: 6721)
  Prédit: 'Record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Record' → logprob: -1.6240566083070007e-06
    2. 'Records' → logprob: -13.750001907348633
    3. 'record' → logprob: -15.500001907348633
    4. 'Purchase' → logprob: -15.625001907348633
    5. '<Record' → logprob: -16.250001907348633
    6. '_record' → logprob: -17.750001907348633
    7. '_Record' → logprob: -17.750001907348633
    8. ' Record' → logprob: -17.875001907348633
    9. '_RECORD' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.625001907348633

Token 367: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038348292582668364
    2. ']=' → logprob: -7.875383377075195
    3. ']
' → logprob: -13.625383377075195
    4. ')' → logprob: -13.750383377075195
    5. ']

' → logprob: -14.875383377075195
    6. ' ]' → logprob: -15.375383377075195
    7. '']' → logprob: -15.875383377075195
    8. '[' → logprob: -16.125383377075195
    9. '=' → logprob: -17.000383377075195
    10. '()]' → logprob: -17.125383377075195

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.636260449886322
    2. ' =' → logprob: -0.761260449886322
    3. '=[]' → logprob: -5.886260509490967
    4. '<|end|>' → logprob: -7.636260509490967
    5. '   ' → logprob: -8.761260032653809
    6. '=[]
' → logprob: -9.386260032653809
    7. 'def' → logprob: -9.886260032653809
    8. ' ' → logprob: -10.386260032653809
    9. '<|end|>' → logprob: -11.011260032653809
    10. '       ' → logprob: -11.261260032653809

Token 369: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.537868779967539e-06
    2. '[]
' → logprob: -12.000008583068848
    3. '[]}' → logprob: -13.750008583068848
    4. ' []' → logprob: -14.375008583068848
    5. '[]

' → logprob: -15.125008583068848
    6. '[' → logprob: -15.375008583068848
    7. '[]>' → logprob: -16.12500762939453
    8. '[])' → logprob: -16.50000762939453
    9. '=[]' → logprob: -17.62500762939453
    10. '[]"' → logprob: -17.75000762939453

Token 370: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07493167370557785
    2. 'def' → logprob: -2.6999316215515137
    3. ' def' → logprob: -5.699931621551514
    4. '
' → logprob: -6.449931621551514
    5. '<|end|>' → logprob: -10.949932098388672
    6. '	def' → logprob: -11.199932098388672
    7. '    
' → logprob: -11.449932098388672
    8. '       ' → logprob: -11.699932098388672
    9. '<|end|>' → logprob: -12.824932098388672
    10. '

' → logprob: -14.324932098388672

Token 371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007410150719806552
    2. 'def' → logprob: -7.375741004943848
    3. ' self' → logprob: -9.625741004943848
    4. '       ' → logprob: -10.500741004943848
    5. '   ' → logprob: -11.500741004943848
    6. 'import' → logprob: -13.125741004943848
    7. 'pass' → logprob: -13.375741004943848
    8. '        
' → logprob: -13.375741004943848
    9. '
' → logprob: -13.875741004943848
    10. '#' → logprob: -14.125741004943848

Token 372: '.threshold' (ID: 153564)
  Prédit: '.threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.threshold' → logprob: -0.004325076472014189
    2. 'threshold' → logprob: -5.879324913024902
    3. '.related' → logprob: -6.754324913024902
    4. '.an' → logprob: -8.504324913024902
    5. '.th' → logprob: -9.754324913024902
    6. '.frequency' → logprob: -10.754324913024902
    7. '.purchase' → logprob: -11.379324913024902
    8. '.' → logprob: -11.629324913024902
    9. ' threshold' → logprob: -11.754324913024902
    10. '_threshold' → logprob: -11.754324913024902

Token 373: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7789055109024048
    2. ' =' → logprob: -0.7789055109024048
    3. '=' → logprob: -2.5289053916931152
    4. ':int' → logprob: -6.153905391693115
    5. ' :' → logprob: -8.403905868530273
    6. '=int' → logprob: -9.903905868530273
    7. ' ' → logprob: -11.028905868530273
    8. '=None' → logprob: -11.278905868530273
    9. 'int' → logprob: -12.778905868530273
    10. '  ' → logprob: -12.778905868530273

Token 374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05199652910232544
    2. '1' → logprob: -3.5519964694976807
    3. 'int' → logprob: -4.05199670791626
    4. '2' → logprob: -5.92699670791626
    5. 'None' → logprob: -6.55199670791626
    6. ' ' → logprob: -8.176996231079102
    7. '3' → logprob: -9.176996231079102
    8. ' int' → logprob: -9.926996231079102
    9. '5' → logprob: -10.801996231079102
    10. ' None' → logprob: -10.926996231079102

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6512417197227478
    2. '2' → logprob: -1.6512417793273926
    3. 'int' → logprob: -1.7762417793273926
    4. '1' → logprob: -2.1512417793273926
    5. '3' → logprob: -7.526241779327393
    6. ' int' → logprob: -8.151241302490234
    7. '5' → logprob: -8.901241302490234
    8. '10' → logprob: -9.401241302490234
    9. ' ' → logprob: -10.276241302490234
    10. 'None' → logprob: -10.401241302490234

Token 376: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12935639917850494
    2. '   ' → logprob: -2.1293563842773438
    3. 'def' → logprob: -6.504356384277344
    4. '    
' → logprob: -7.754356384277344
    5. '

' → logprob: -8.129356384277344
    6. ' def' → logprob: -8.629356384277344
    7. '
' → logprob: -11.629356384277344
    8. '<|end|>' → logprob: -11.879356384277344
    9. '        
' → logprob: -12.379356384277344
    10. '<|end|>' → logprob: -13.129356384277344

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014848237857222557
    2. 'def' → logprob: -4.264848232269287
    3. ' def' → logprob: -7.764848232269287
    4. '
' → logprob: -8.264848709106445
    5. '    
' → logprob: -13.139848709106445
    6. '<|end|>' → logprob: -15.139848709106445
    7. '	def' → logprob: -15.389848709106445
    8. '<|end|>' → logprob: -16.264848709106445
    9. '```' → logprob: -16.514848709106445
    10. '

' → logprob: -16.889848709106445

Token 378: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0206720617134124e-05
    2. ' def' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.500009536743164
    4. '
' → logprob: -21.000009536743164
    5. 'de' → logprob: -22.750009536743164
    6. '	def' → logprob: -22.750009536743164
    7. '

' → logprob: -25.000009536743164
    8. '    
' → logprob: -25.500009536743164
    9. 'd' → logprob: -26.000009536743164
    10. 'ndef' → logprob: -26.250009536743164

Token 379: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.000354769523255527
    2. ' read' → logprob: -8.250354766845703
    3. 'parse' → logprob: -9.625354766845703
    4. 'process' → logprob: -10.625354766845703
    5. 'load' → logprob: -13.000354766845703
    6. 'handle' → logprob: -14.250354766845703
    7. 'run' → logprob: -16.500354766845703
    8. 'def' → logprob: -16.750354766845703
    9. ' parse' → logprob: -16.875354766845703
    10. ' process' → logprob: -17.375354766845703

Token 380: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.026230162009596825
    2. '(self' → logprob: -4.276230335235596
    3. 'self' → logprob: -5.151230335235596
    4. '_data' → logprob: -6.151230335235596
    5. '_line' → logprob: -7.026230335235596
    6. '_from' → logprob: -7.276230335235596
    7. '_self' → logprob: -7.276230335235596
    8. 'input' → logprob: -7.401230335235596
    9. '_lines' → logprob: -7.401230335235596
    10. '_inputs' → logprob: -7.776230335235596

Token 381: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.598092684522271e-05
    2. '(' → logprob: -10.000056266784668
    3. 'self' → logprob: -11.500056266784668
    4. ' (' → logprob: -14.875056266784668
    5. ' self' → logprob: -18.00005531311035
    6. '(
' → logprob: -18.25005531311035
    7. 's' → logprob: -18.25005531311035
    8. 'from' → logprob: -18.75005531311035
    9. '()' → logprob: -19.00005531311035
    10. '	self' → logprob: -19.00005531311035

Token 382: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.32615435123443604
    2. '):
' → logprob: -1.576154351234436
    3. ',' → logprob: -2.7011542320251465
    4. 'self' → logprob: -5.5761542320251465
    5. ')' → logprob: -8.326154708862305
    6. '(self' → logprob: -8.576154708862305
    7. '):
' → logprob: -9.576154708862305
    8. ',self' → logprob: -9.951154708862305
    9. '):

' → logprob: -10.576154708862305
    10. ' ):' → logprob: -11.451154708862305

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0281932782381773
    2. ' lines' → logprob: -4.778193473815918
    3. 'n' → logprob: -5.278193473815918
    4. ' for' → logprob: -5.403193473815918
    5. 'for' → logprob: -5.903193473815918
    6. ' line' → logprob: -6.403193473815918
    7. 'line' → logprob: -6.403193473815918
    8. 'lines' → logprob: -6.528193473815918
    9. 'import' → logprob: -6.778193473815918
    10. ' n' → logprob: -7.903193473815918

Token 384: ' first' (ID: 1577)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.48852038383483887
    2. 'lines' → logprob: -1.4885203838348389
    3. ' first' → logprob: -2.613520383834839
    4. 'first' (adapté à ' first') → logprob: -3.613520383834839
    5. ' n' → logprob: -3.863520383834839
    6. 'n' → logprob: -4.363520622253418
    7. 'line' → logprob: -4.613520622253418
    8. 'input' → logprob: -4.863520622253418
    9. ' input' → logprob: -5.238520622253418
    10. ' line' → logprob: -6.363520622253418

Token 385: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0009532637195661664
    2. 'line' → logprob: -7.125953197479248
    3. '_' → logprob: -9.375953674316406
    4. '()' → logprob: -10.625953674316406
    5. ' =' → logprob: -11.125953674316406
    6. '=' → logprob: -11.500953674316406
    7. '_input' → logprob: -12.875953674316406
    8. ' line' → logprob: -13.000953674316406
    9. '_li' → logprob: -13.000953674316406
    10. '_token' → logprob: -13.500953674316406

Token 386: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141461491584778
    2. '=' → logprob: -1.7014145851135254
    3. '=sys' → logprob: -14.576415061950684
    4. '=line' → logprob: -14.826415061950684
    5. ' ' → logprob: -15.576415061950684
    6. 'line' → logprob: -16.201414108276367
    7. ' =
' → logprob: -16.451414108276367
    8. '=input' → logprob: -17.576414108276367
    9. '_line' → logprob: -17.576414108276367
    10. 's' → logprob: -17.951414108276367

Token 387: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6931480169296265
    2. 'sys' → logprob: -0.6931480169296265
    3. 'input' → logprob: -14.443147659301758
    4. '	sys' → logprob: -15.693147659301758
    5. '=sys' → logprob: -16.943147659301758
    6. '       ' → logprob: -16.943147659301758
    7. ' input' → logprob: -17.068147659301758
    8. '(sys' → logprob: -17.443147659301758
    9. '   ' → logprob: -18.943147659301758
    10. '_sys' → logprob: -20.943147659301758

Token 388: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.875005722045898
    3. 'stdin' → logprob: -12.875005722045898
    4. '.stdout' → logprob: -15.375005722045898
    5. '.argv' → logprob: -15.500005722045898
    6. '.std' → logprob: -16.1250057220459
    7. '.readline' → logprob: -17.2500057220459
    8. '(stdin' → logprob: -18.7500057220459
    9. ' stdin' → logprob: -19.0000057220459
    10. '.stderr' → logprob: -20.2500057220459

Token 389: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -12.500003814697266
    3. '.stdin' → logprob: -16.375003814697266
    4. ' readline' → logprob: -17.125003814697266
    5. '.readlines' → logprob: -18.625003814697266
    6. '.read' → logprob: -20.125003814697266
    7. '.rstrip' → logprob: -21.875003814697266
    8. ' .' → logprob: -22.000003814697266
    9. '().' → logprob: -22.125003814697266
    10. 'read' → logprob: -22.625003814697266

Token 390: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32367822527885437
    2. '().' → logprob: -1.3236782550811768
    3. '()
' → logprob: -4.573678016662598
    4. '()

' → logprob: -10.448678016662598
    5. '()
' → logprob: -12.198678016662598
    6. '.strip' → logprob: -12.323678016662598
    7. '(' → logprob: -13.698678016662598
    8. '()\' → logprob: -13.698678016662598
    9. '.rstrip' → logprob: -14.573678016662598
    10. '()`' → logprob: -14.823678016662598

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030902020633220673
    2. '.strip' → logprob: -3.7809019088745117
    3. '
' → logprob: -6.405901908874512
    4. 'if' → logprob: -6.655901908874512
    5. 'self' → logprob: -6.905901908874512
    6. 'tokens' → logprob: -7.655901908874512
    7. '.rstrip' → logprob: -7.655901908874512
    8. '        
' → logprob: -7.780901908874512
    9. '().' → logprob: -7.780901908874512
    10. ' if' → logprob: -7.905901908874512

Token 392: ' if' (ID: 538)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.9327689409255981
    2. 'self' → logprob: -1.5577689409255981
    3. 't' → logprob: -1.9327689409255981
    4. 'if' (adapté à ' if') → logprob: -2.6827688217163086
    5. 'n' → logprob: -2.9327688217163086
    6. ' parts' → logprob: -3.0577688217163086
    7. 'threshold' → logprob: -3.8077688217163086
    8. '       ' → logprob: -3.9327688217163086
    9. ' if' → logprob: -4.182768821716309
    10. ' self' → logprob: -4.307768821716309

Token 393: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1022326648235321
    2. 'not' → logprob: -2.3522326946258545
    3. ' first' → logprob: -6.727232456207275
    4. 'first' → logprob: -7.102232456207275
    5. ' ' → logprob: -13.477232933044434
    6. '	not' → logprob: -13.977232933044434
    7. 'no' → logprob: -15.977232933044434
    8. ' no' → logprob: -16.102231979370117
    9. ' ' → logprob: -16.227231979370117
    10. '   ' → logprob: -16.852231979370117

Token 394: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.02324547804892063
    2. ' first' → logprob: -3.7732455730438232
    3. '
' → logprob: -17.398244857788086
    4. '	first' → logprob: -17.523244857788086
    5. '(first' → logprob: -18.273244857788086
    6. 'f' → logprob: -18.273244857788086
    7. '[first' → logprob: -19.023244857788086
    8. 'First' → logprob: -19.398244857788086
    9. ' ' → logprob: -19.898244857788086
    10. 'frist' → logprob: -20.898244857788086

Token 395: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.250000953674316
    3. 'line' → logprob: -16.125001907348633
    4. '_lin' → logprob: -16.250001907348633
    5. '_l' → logprob: -16.625001907348633
    6. '_LINE' → logprob: -17.750001907348633
    7. '_li' → logprob: -18.250001907348633
    8. ' _' → logprob: -19.500001907348633
    9. ' line' → logprob: -20.250001907348633
    10. '_Line' → logprob: -20.250001907348633

Token 396: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.018053477630019188
    2. ':' → logprob: -4.8930535316467285
    3. '.' → logprob: -5.0180535316467285
    4. ':
' → logprob: -5.6430535316467285
    5. 'strip' → logprob: -9.01805305480957
    6. ' or' → logprob: -9.64305305480957
    7. '.rstrip' → logprob: -10.39305305480957
    8. ' .' → logprob: -12.51805305480957
    9. '.startswith' → logprob: -12.64305305480957
    10. ' :' → logprob: -12.76805305480957

Token 397: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01325905416160822
    2. ' return' → logprob: -5.263258934020996
    3. 'return' → logprob: -5.513258934020996
    4. '
' → logprob: -5.638258934020996
    5. '       ' → logprob: -8.263258934020996
    6. ':
' → logprob: -10.013258934020996
    7. '   ' → logprob: -10.263258934020996
    8. '            
' → logprob: -11.388258934020996
    9. ':return' → logprob: -11.763258934020996
    10. '    
' → logprob: -12.013258934020996

Token 398: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10438947379589081
    2. ' return' → logprob: -2.6043894290924072
    3. 'raise' (adapté à ' raise') → logprob: -3.8543894290924072
    4. '           ' → logprob: -6.104389667510986
    5. ' raise' → logprob: -6.354389667510986
    6. '       ' → logprob: -11.479389190673828
    7. 'sys' → logprob: -12.729389190673828
    8. '
' → logprob: -13.854389190673828
    9. ' sys' → logprob: -13.979389190673828
    10. 'import' → logprob: -13.979389190673828

Token 399: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.21732395887374878
    2. 'Value' → logprob: -1.9673240184783936
    3. ' Value' → logprob: -3.4673240184783936
    4. ' EOF' → logprob: -3.7173240184783936
    5. 'Runtime' → logprob: -15.092324256896973
    6. 'Stop' → logprob: -15.592324256896973
    7. '(Value' → logprob: -15.717324256896973
    8. ' Runtime' → logprob: -16.717323303222656
    9. 'Exception' → logprob: -16.842323303222656
    10. 'System' → logprob: -17.217323303222656

Token 400: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.128163257315464e-07
    2. 'rror' → logprob: -15.25
    3. 'error' → logprob: -17.375
    4. '
' → logprob: -18.25
    5. 'Exception' → logprob: -19.25
    6. 'Warning' → logprob: -19.875
    7. 'LError' → logprob: -21.0
    8. 'SError' → logprob: -21.125
    9. 'ERROR' → logprob: -21.75
    10. ' Error' → logprob: -22.0

Token 401: '("' (ID: 568)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03508662432432175
    2. '
' → logprob: -3.4100866317749023
    3. '        
' → logprob: -6.660086631774902
    4. '()
' → logprob: -10.035086631774902
    5. '  
' → logprob: -10.285086631774902
    6. '
' → logprob: -11.285086631774902
    7. '<|end|>' → logprob: -11.285086631774902
    8. '()' → logprob: -11.660086631774902
    9. ' 
' → logprob: -11.785086631774902
    10. ',' → logprob: -12.160086631774902

Token 402: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.10091191530227661
    2. 'Input' → logprob: -2.850911855697632
    3. 'Empty' → logprob: -4.100912094116211
    4. '")' → logprob: -4.725912094116211
    5. 'Expected' → logprob: -5.475912094116211
    6. 'Missing' → logprob: -5.975912094116211
    7. 'Unexpected' → logprob: -5.975912094116211
    8. 'Invalid' → logprob: -6.850912094116211
    9. 'Threshold' → logprob: -6.850912094116211
    10. ' No' → logprob: -7.475912094116211

Token 403: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04331294074654579
    2. 'input' → logprob: -3.1683130264282227
    3. ' data' → logprob: -8.418313026428223
    4. ' more' → logprob: -10.668313026428223
    5. 'Input' → logprob: -10.668313026428223
    6. 'data' → logprob: -10.793313026428223
    7. '_input' → logprob: -11.168313026428223
    8. ' ' → logprob: -12.543313026428223
    9. '<|end|>' → logprob: -14.043313026428223
    10. '	input' → logprob: -14.168313026428223

Token 404: ' provided' (ID: 5181)
  Prédit: ' provided'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' provided' → logprob: -0.11570437997579575
    2. '")' → logprob: -3.365704298019409
    3. ' received' → logprob: -3.865704298019409
    4. ' data' → logprob: -4.115704536437988
    5. 'provided' → logprob: -4.365704536437988
    6. ' found' → logprob: -4.490704536437988
    7. ' given' → logprob: -5.240704536437988
    8. ' available' → logprob: -6.240704536437988
    9. 'received' → logprob: -6.240704536437988
    10. ' detected' → logprob: -6.615704536437988

Token 405: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.16053657233715057
    2. '")' → logprob: -1.910536527633667
    3. '       ' → logprob: -8.785536766052246
    4. ')")
' → logprob: -9.535536766052246
    5. '")
' → logprob: -9.910536766052246
    6. ')' → logprob: -11.535536766052246
    7. '")

' → logprob: -11.660536766052246
    8. ')")' → logprob: -12.285536766052246
    9. '   ' → logprob: -12.660536766052246
    10. ')
' → logprob: -13.160536766052246

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02485686168074608
    2. '
' → logprob: -3.8998568058013916
    3. '        
' → logprob: -5.774857044219971
    4. 'self' → logprob: -7.399857044219971
    5. ' self' → logprob: -9.399856567382812
    6. ' 
' → logprob: -9.649856567382812
    7. '  
' → logprob: -9.774856567382812
    8. '   ' → logprob: -9.774856567382812
    9. 'tokens' → logprob: -9.899856567382812
    10. ',' → logprob: -10.149856567382812

Token 407: ' parts' (ID: 7881)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8369080424308777
    2. 'parts' (adapté à ' parts') → logprob: -1.2119081020355225
    3. ' self' → logprob: -1.8369081020355225
    4. ' parts' → logprob: -2.5869081020355225
    5. 'threshold' → logprob: -4.211907863616943
    6. 'n' → logprob: -5.336907863616943
    7. '       ' → logprob: -5.461907863616943
    8. 't' → logprob: -5.711907863616943
    9. ' n' → logprob: -5.961907863616943
    10. 'tokens' → logprob: -6.711907863616943

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '[' → logprob: -17.061967849731445
    4. '=line' → logprob: -17.686967849731445
    5. '＝' → logprob: -18.436967849731445
    6. ')' → logprob: -19.061967849731445
    7. '=}' → logprob: -19.436967849731445
    8. '=

' → logprob: -19.686967849731445
    9. ' ' → logprob: -19.686967849731445
    10. '.' → logprob: -19.936967849731445

Token 409: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.00861456897109747
    2. ' first' → logprob: -4.758614540100098
    3. '[first' → logprob: -17.383615493774414
    4. '(first' → logprob: -19.883615493774414
    5. 'f' → logprob: -20.008615493774414
    6. '	first' → logprob: -20.508615493774414
    7. ' ' → logprob: -21.258615493774414
    8. 'fir' → logprob: -21.258615493774414
    9. ':first' → logprob: -22.133615493774414
    10. 'fi' → logprob: -22.383615493774414

Token 410: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.580929347255733e-05
    2. 'line' → logprob: -11.125016212463379
    3. '_LINE' → logprob: -14.875016212463379
    4. '_' → logprob: -15.750016212463379
    5. 'Line' → logprob: -15.750016212463379
    6. '_lin' → logprob: -17.125015258789062
    7. '[line' → logprob: -17.375015258789062
    8. '[' → logprob: -17.500015258789062
    9. 'lin' → logprob: -17.625015258789062
    10. '_li' → logprob: -18.000015258789062

Token 411: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.029610352590680122
    2. '.' → logprob: -4.0296101570129395
    3. '.split' → logprob: -4.9046101570129395
    4. '().' → logprob: -5.6546101570129395
    5. 'strip' → logprob: -8.529610633850098
    6. ' .' → logprob: -8.904610633850098
    7. '.rstrip' → logprob: -9.279610633850098
    8. 'split' → logprob: -10.154610633850098
    9. '()' → logprob: -12.154610633850098
    10. ' strip' → logprob: -12.529610633850098

Token 412: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0206720617134124e-05
    2. '()' → logprob: -11.50001049041748
    3. '.split' → logprob: -18.375009536743164
    4. ' ().' → logprob: -18.750009536743164
    5. '()
' → logprob: -19.000009536743164
    6. '(' → logprob: -19.750009536743164
    7. '('' → logprob: -20.250009536743164
    8. 'split' → logprob: -20.250009536743164
    9. '.' → logprob: -21.000009536743164
    10. '().'' → logprob: -21.750009536743164

Token 413: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. '(split' → logprob: -18.625
    4. 'spl' → logprob: -21.375
    5. 'strip' → logprob: -22.75
    6. '```' → logprob: -24.125
    7. '.split' → logprob: -24.5
    8. 'rstrip' → logprob: -25.875
    9. 'isdigit' → logprob: -26.0
    10. 'plit' → logprob: -26.625

Token 414: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.184574693441391
    2. '()
' → logprob: -2.434574604034424
    3. '       ' → logprob: -3.434574604034424
    4. '<|end|>' → logprob: -3.559574604034424
    5. '        
' → logprob: -4.809574604034424
    6. '()' → logprob: -5.434574604034424
    7. '[' → logprob: -6.434574604034424
    8. '  
' → logprob: -6.559574604034424
    9. '<|end|>' → logprob: -7.059574604034424
    10. 'if' → logprob: -7.059574604034424

Token 415: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029214832931756973
    2. '       ' → logprob: -4.029214859008789
    3. 'if' → logprob: -4.529214859008789
    4. ' self' → logprob: -8.529214859008789
    5. ' if' → logprob: -11.404214859008789
    6. '[self' → logprob: -13.404214859008789
    7. '
' → logprob: -13.779214859008789
    8. '[' → logprob: -13.779214859008789
    9. '        
' → logprob: -14.404214859008789
    10. '	self' → logprob: -14.529214859008789

Token 416: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003273491282016039
    2. 'if' (adapté à ' if') → logprob: -5.7532734870910645
    3. '       ' → logprob: -9.503273963928223
    4. ' self' → logprob: -10.878273963928223
    5. '[self' → logprob: -13.503273963928223
    6. ' if' → logprob: -15.003273963928223
    7. '	self' → logprob: -15.503273963928223
    8. '[' → logprob: -15.878273963928223
    9. '1' → logprob: -16.003273010253906
    10. '        
' → logprob: -16.128273010253906

Token 417: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018445368856191635
    2. ' len' → logprob: -4.0184454917907715
    3. 'not' → logprob: -8.518445014953613
    4. ' not' → logprob: -9.268445014953613
    5. '(len' → logprob: -14.143445014953613
    6. '   ' → logprob: -14.643445014953613
    7. '	len' → logprob: -16.14344596862793
    8. '       ' → logprob: -16.76844596862793
    9. '           ' → logprob: -17.64344596862793
    10. '  ' → logprob: -18.89344596862793

Token 418: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0001617035741219297
    2. 'parts' → logprob: -9.625162124633789
    3. '()' → logprob: -10.000162124633789
    4. '()<' → logprob: -10.250162124633789
    5. '(' → logprob: -11.750162124633789
    6. ' parts' → logprob: -12.500162124633789
    7. '()!=' → logprob: -13.875162124633789
    8. '<' → logprob: -14.000162124633789
    9. '!=' → logprob: -14.750162124633789
    10. '(points' → logprob: -15.750162124633789

Token 419: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.88665771484375
    2. '<' → logprob: -1.76165771484375
    3. '!=' → logprob: -2.13665771484375
    4. ')' → logprob: -2.13665771484375
    5. ' <' → logprob: -2.51165771484375
    6. '==' → logprob: -2.76165771484375
    7. ' ==' → logprob: -3.38665771484375
    8. '0' → logprob: -8.01165771484375
    9. ')<' → logprob: -8.26165771484375
    10. '<|end|>' → logprob: -8.26165771484375

Token 420: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07620278000831604
    2. '<' → logprob: -3.576202869415283
    3. '==' → logprob: -3.576202869415283
    4. ' !=' → logprob: -4.076202869415283
    5. ' ==' → logprob: -8.576202392578125
    6. ' <' → logprob: -9.326202392578125
    7. '()!=' → logprob: -9.826202392578125
    8. '<>' → logprob: -10.451202392578125
    9. '=' → logprob: -10.701202392578125
    10. '0' → logprob: -11.576202392578125

Token 421: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14278407394886017
    2. '1' → logprob: -2.0177841186523438
    3. ' ' → logprob: -9.142784118652344
    4. '3' → logprob: -13.767784118652344
    5. '   ' → logprob: -14.392784118652344
    6. '  ' → logprob: -15.892784118652344
    7. '0' → logprob: -16.830284118652344
    8. '    ' → logprob: -17.267784118652344
    9. '```' → logprob: -17.330284118652344
    10. '           ' → logprob: -18.267784118652344

Token 422: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0336495004594326
    2. '2' → logprob: -3.408649444580078
    3. ' ' → logprob: -12.658649444580078
    4. '3' → logprob: -14.908649444580078
    5. '0' → logprob: -16.721149444580078
    6. '   ' → logprob: -17.408649444580078
    7. '```' → logprob: -17.721149444580078
    8. '  ' → logprob: -18.221149444580078
    9. '１' → logprob: -19.096149444580078
    10. 'int' → logprob: -19.096149444580078

Token 423: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4107629060745239
    2. ':
' → logprob: -1.410762906074524
    3. ' or' → logprob: -2.9107627868652344
    4. ' and' → logprob: -3.2857627868652344
    5. ',' → logprob: -7.910762786865234
    6. ' :
' → logprob: -8.785762786865234
    7. 'and' → logprob: -8.785762786865234
    8. '       ' → logprob: -9.285762786865234
    9. ' :' → logprob: -9.285762786865234
    10. '           ' → logprob: -9.660762786865234

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19103796780109406
    2. 'self' → logprob: -1.9410380125045776
    3. 'raise' → logprob: -3.691037893295288
    4. ' raise' → logprob: -5.816038131713867
    5. ' self' → logprob: -6.316038131713867
    6. '   ' → logprob: -8.316038131713867
    7. '       ' → logprob: -9.316038131713867
    8. 'return' → logprob: -9.316038131713867
    9. '            
' → logprob: -9.941038131713867
    10. '
' → logprob: -9.941038131713867

Token 425: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.4742652475833893
    2. ' raise' → logprob: -0.9742652177810669
    3. '           ' → logprob: -8.724265098571777
    4. '	raise' → logprob: -10.974265098571777
    5. 'return' → logprob: -12.349265098571777
    6. 'self' → logprob: -12.974265098571777
    7. 'Raise' → logprob: -14.474265098571777
    8. '            ' → logprob: -14.599265098571777
    9. ' return' → logprob: -14.724265098571777
    10. ' self' → logprob: -15.474265098571777

Token 426: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -2.15310683415737e-05
    2. ' Value' → logprob: -10.750021934509277
    3. 'Runtime' → logprob: -17.62502098083496
    4. '(Value' → logprob: -17.62502098083496
    5. 'EOF' → logprob: -18.00002098083496
    6. 'value' → logprob: -19.12502098083496
    7. '```' → logprob: -19.37502098083496
    8. '_value' → logprob: -19.62502098083496
    9. '_Value' → logprob: -19.75002098083496
    10. '	Value' → logprob: -20.12502098083496

Token 427: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00018029935017693788
    2. 'rror' → logprob: -8.6251802444458
    3. 'Value' → logprob: -14.5001802444458
    4. 'SError' → logprob: -16.250181198120117
    5. 'Warning' → logprob: -17.375181198120117
    6. 'Input' → logprob: -18.000181198120117
    7. 'LError' → logprob: -18.625181198120117
    8. 'ror' → logprob: -19.375181198120117
    9. 'n' → logprob: -19.875181198120117
    10. '```' → logprob: -20.125181198120117

Token 428: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.750007629394531
    3. '('' → logprob: -18.00000762939453
    4. '(
' → logprob: -18.87500762939453
    5. '(f' → logprob: -19.75000762939453
    6. '"' → logprob: -20.12500762939453
    7. '("'' → logprob: -20.87500762939453
    8. '()' → logprob: -22.00000762939453
    9. ' ("' → logprob: -22.12500762939453
    10. '("")' → logprob: -23.12500762939453

Token 429: 'First' (ID: 7127)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01018489245325327
    2. 'Expected' → logprob: -4.6351847648620605
    3. 'Invalid' → logprob: -8.135185241699219
    4. 'Input' → logprob: -9.635185241699219
    5. 'Expect' → logprob: -10.260185241699219
    6. ''' → logprob: -10.510185241699219
    7. 'Two' → logprob: -13.010185241699219
    8. 'Incorrect' → logprob: -13.510185241699219
    9. '"The' → logprob: -14.385185241699219
    10. 'Exactly' → logprob: -14.385185241699219

Token 430: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2640060484409332
    2. '_line' → logprob: -1.6390060186386108
    3. 'line' → logprob: -3.6390061378479004
    4. ' ' → logprob: -4.7640061378479
    5. '_' → logprob: -6.6390061378479
    6. ' _' → logprob: -7.0140061378479
    7. ' token' → logprob: -7.6390061378479
    8. '_token' → logprob: -8.389005661010742
    9. 'token' → logprob: -9.889005661010742
    10. ' two' → logprob: -11.014005661010742

Token 431: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.013347038067877293
    2. 'must' → logprob: -4.763347148895264
    3. ' should' → logprob: -5.388347148895264
    4. 'should' → logprob: -9.763346672058105
    5. ' parts' → logprob: -10.513346672058105
    6. ' does' → logprob: -11.138346672058105
    7. ')' → logprob: -11.888346672058105
    8. ' tokens' → logprob: -12.013346672058105
    9. ':' → logprob: -12.013346672058105
    10. ' должен' → logprob: -12.263346672058105

Token 432: ' contain' (ID: 10232)
  Prédit: ' contain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.038493767380714417
    2. 'contain' → logprob: -3.2884938716888428
    3. ' be' → logprob: -8.288494110107422
    4. ' consist' → logprob: -8.788494110107422
    5. 'be' → logprob: -10.413494110107422
    6. 'cons' → logprob: -11.788494110107422
    7. ' have' → logprob: -12.038494110107422
    8. 'cont' → logprob: -13.788494110107422
    9. ' include' → logprob: -13.913494110107422
    10. ' provide' → logprob: -14.163494110107422

Token 433: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.45447275042533875
    2. ' two' → logprob: -1.0794727802276611
    3. '2' → logprob: -3.704472780227661
    4. ' exactly' → logprob: -7.454472541809082
    5. ''' → logprob: -9.079472541809082
    6. 'exact' → logprob: -9.454472541809082
    7. ' ' → logprob: -10.954472541809082
    8. 'threshold' → logprob: -11.579472541809082
    9. '"' → logprob: -12.204472541809082
    10. ' at' → logprob: -12.329472541809082

Token 434: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.018172655254602432
    2. 'inte' → logprob: -4.018172740936279
    3. ' numbers' → logprob: -11.768172264099121
    4. 'int' → logprob: -11.768172264099121
    5. ' integer' → logprob: -12.768172264099121
    6. 'ints' → logprob: -13.643172264099121
    7. ' values' → logprob: -14.018172264099121
    8. ' tokens' → logprob: -14.393172264099121
    9. 'numbers' → logprob: -14.393172264099121
    10. ' space' → logprob: -15.268172264099121

Token 435: '")
' (ID: 1896)
  Prédit: ' separated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' separated' → logprob: -0.2084561139345169
    2. ' for' → logprob: -2.083456039428711
    3. '")' → logprob: -3.333456039428711
    4. ' representing' → logprob: -4.458456039428711
    5. '")
' → logprob: -4.458456039428711
    6. ' threshold' → logprob: -6.458456039428711
    7. ',' → logprob: -7.208456039428711
    8. ':' → logprob: -7.333456039428711
    9. ' with' → logprob: -7.708456039428711
    10. ' as' → logprob: -8.708456039428711

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1338443160057068
    2. ' ' → logprob: -2.6338443756103516
    3. '        
' → logprob: -3.7588443756103516
    4. ' 
' → logprob: -4.633844375610352
    5. ' self' → logprob: -5.258844375610352
    6. '0' → logprob: -5.258844375610352
    7. 'self' → logprob: -6.133844375610352
    8. '        ' → logprob: -6.633844375610352
    9. '<|end|>' → logprob: -6.633844375610352
    10. '  ' → logprob: -6.758844375610352

Token 437: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05973789840936661
    2. ' self' → logprob: -2.9347379207611084
    3. '       ' → logprob: -6.059737682342529
    4. 'n' → logprob: -6.684737682342529
    5. 't' → logprob: -7.559737682342529
    6. 'k' → logprob: -8.059738159179688
    7. 'try' → logprob: -8.809738159179688
    8. 'threshold' → logprob: -9.434738159179688
    9. ' k' → logprob: -10.059738159179688
    10. ' n' → logprob: -10.309738159179688

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030293059535324574
    2. ' ,' → logprob: -8.500303268432617
    3. ' =' → logprob: -9.500303268432617
    4. '=' → logprob: -11.625303268432617
    5. ',int' → logprob: -12.000303268432617
    6. ',
' → logprob: -12.375303268432617
    7. '=int' → logprob: -13.625303268432617
    8. '<|end|>' → logprob: -13.625303268432617
    9. 'int' → logprob: -14.250303268432617
    10. ' ' → logprob: -14.625303268432617

Token 439: ' F' (ID: 454)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.210972398519516
    2. ' self' → logprob: -2.460972309112549
    3. 'T' → logprob: -2.585972309112549
    4. ' T' → logprob: -5.085972309112549
    5. 'space' → logprob: -5.210972309112549
    6. ' ' → logprob: -5.585972309112549
    7. 'threshold' → logprob: -5.585972309112549
    8. 't' → logprob: -5.710972309112549
    9. ' t' → logprob: -6.210972309112549
    10. 'K' → logprob: -6.335972309112549

Token 440: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08895058929920197
    2. ' =' → logprob: -2.4639506340026855
    3. '=int' → logprob: -12.713950157165527
    4. ' ' → logprob: -13.088950157165527
    5. 'threshold' → logprob: -13.213950157165527
    6. 'requency' → logprob: -13.463950157165527
    7. ',' → logprob: -13.963950157165527
    8. '_threshold' → logprob: -14.213950157165527
    9. '  ' → logprob: -15.088950157165527
    10. 'requencies' → logprob: -15.713950157165527

Token 441: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8060963153839111
    2. ' map' → logprob: -1.0560963153839111
    3. 'map' → logprob: -2.056096315383911
    4. ' int' → logprob: -2.556096315383911
    5. '[int' → logprob: -11.181096076965332
    6. ' parts' → logprob: -11.431096076965332
    7. 'parts' → logprob: -12.556096076965332
    8. ' ' → logprob: -14.306096076965332
    9. '(int' → logprob: -14.431096076965332
    10. 'ints' → logprob: -14.556096076965332

Token 442: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00043162284418940544
    2. 'int' → logprob: -7.750431537628174
    3. '(' → logprob: -14.375432014465332
    4. '(str' → logprob: -15.500432014465332
    5. ' int' → logprob: -16.500431060791016
    6. '=int' → logprob: -18.125431060791016
    7. '[int' → logprob: -18.375431060791016
    8. ' (' → logprob: -18.750431060791016
    9. '   ' → logprob: -19.000431060791016
    10. 'str' → logprob: -19.125431060791016

Token 443: ',' (ID: 11)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.01447445247322321
    2. ',' → logprob: -4.389474391937256
    3. 'parts' → logprob: -6.764474391937256
    4. ')' → logprob: -7.764474391937256
    5. ' parts' → logprob: -8.139474868774414
    6. '(' → logprob: -10.139474868774414
    7. ' (' → logprob: -10.264474868774414
    8. '
' → logprob: -11.639474868774414
    9. ' ,' → logprob: -12.139474868774414
    10. ')(' → logprob: -13.139474868774414

Token 444: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.020590119063854218
    2. ' parts' → logprob: -3.89559006690979
    3. '(parts' → logprob: -10.020589828491211
    4. '
' → logprob: -14.145589828491211
    5. '   ' → logprob: -14.270589828491211
    6. 'part' → logprob: -14.270589828491211
    7. ')' → logprob: -14.270589828491211
    8. ' ' → logprob: -15.020589828491211
    9. '           ' → logprob: -15.520589828491211
    10. '       ' → logprob: -16.64558982849121

Token 445: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012737659562844783
    2. ')
' → logprob: -9.000127792358398
    3. ' )' → logprob: -13.875127792358398
    4. ');' → logprob: -14.250127792358398
    5. ')
' → logprob: -14.375127792358398
    6. ')`' → logprob: -14.375127792358398
    7. ')

' → logprob: -15.125127792358398
    8. '),' → logprob: -15.375127792358398
    9. '[' → logprob: -16.0001277923584
    10. '())' → logprob: -16.3751277923584

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023432863876223564
    2. 'self' → logprob: -4.023432731628418
    3. '
' → logprob: -5.648432731628418
    4. '<|end|>' → logprob: -6.898432731628418
    5. '        
' → logprob: -8.273432731628418
    6. ' self' → logprob: -8.398432731628418
    7. '	' → logprob: -9.273432731628418
    8. '	self' → logprob: -9.648432731628418
    9. '   ' → logprob: -11.023432731628418
    10. '		
' → logprob: -11.398432731628418

Token 447: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04059886932373047
    2. '
' → logprob: -4.0405988693237305
    3. ' self' → logprob: -4.1655988693237305
    4. '       ' → logprob: -5.0405988693237305
    5. '	self' → logprob: -8.79059886932373
    6. '        
' → logprob: -10.66559886932373
    7. '	' → logprob: -11.54059886932373
    8. '		
' → logprob: -12.41559886932373
    9. '<|end|>' → logprob: -12.54059886932373
    10. '   ' → logprob: -12.91559886932373

Token 448: '.threshold' (ID: 153564)
  Prédit: '.threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.threshold' → logprob: -1.9146995327901095e-05
    2. '.' → logprob: -11.750019073486328
    3. '.purchase' → logprob: -11.750019073486328
    4. ' .' → logprob: -13.250019073486328
    5. '.th' → logprob: -13.500019073486328
    6. 'threshold' → logprob: -16.000019073486328
    7. '.temperature' → logprob: -17.625019073486328
    8. '.frequency' → logprob: -17.750019073486328
    9. '
' → logprob: -18.000019073486328
    10. '.quantity' → logprob: -19.250019073486328

Token 449: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132622241973877
    2. '=' → logprob: -1.3132622241973877
    3. ' ' → logprob: -14.688261985778809
    4. ',' → logprob: -17.188262939453125
    5. ' +=' → logprob: -19.813262939453125
    6. '=N' → logprob: -19.938262939453125
    7. '＝' → logprob: -19.938262939453125
    8. ' =
' → logprob: -20.063262939453125
    9. '   ' → logprob: -20.063262939453125
    10. '  ' → logprob: -20.063262939453125

Token 450: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.001170225441455841
    2. ' F' → logprob: -6.7511701583862305
    3. ' ' → logprob: -19.376171112060547
    4. '_F' → logprob: -19.876171112060547
    5. '	F' → logprob: -20.001171112060547
    6. '   ' → logprob: -20.251171112060547
    7. ' ' → logprob: -20.501171112060547
    8. 'f' → logprob: -21.001171112060547
    9. '
' → logprob: -21.126171112060547
    10. 'Ｆ' → logprob: -21.251171112060547

Token 451: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4907546639442444
    2. 'for' → logprob: -1.1157546043395996
    3. ' for' → logprob: -2.8657546043395996
    4. '
' → logprob: -5.9907546043396
    5. '	for' → logprob: -7.8657546043396
    6. '   ' → logprob: -8.615755081176758
    7. '	' → logprob: -9.240755081176758
    8. '	   ' → logprob: -10.490755081176758
    9. '        
' → logprob: -11.365755081176758
    10. '    
' → logprob: -12.615755081176758

Token 452: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49799469113349915
    2. '       ' → logprob: -0.9979946613311768
    3. ' for' → logprob: -3.7479946613311768
    4. '   ' → logprob: -9.872994422912598
    5. '	for' → logprob: -11.622994422912598
    6. '        
' → logprob: -12.747994422912598
    7. '
' → logprob: -13.247994422912598
    8. '<|end|>' → logprob: -13.747994422912598
    9. ' ' → logprob: -14.122994422912598
    10. '```' → logprob: -14.247994422912598

Token 453: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011156888213008642
    2. '       ' → logprob: -7.001115798950195
    3. ' for' → logprob: -8.501115798950195
    4. 'self' → logprob: -14.126115798950195
    5. '	for' → logprob: -16.251115798950195
    6. '   ' → logprob: -16.751115798950195
    7. '        
' → logprob: -18.126115798950195
    8. '```' → logprob: -18.126115798950195
    9. '
' → logprob: -18.501115798950195
    10. ' ' → logprob: -19.876115798950195

Token 454: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. ' _' → logprob: -14.250000953674316
    3. '_in' → logprob: -15.750000953674316
    4. '_range' → logprob: -15.750000953674316
    5. '_i' → logprob: -16.500001907348633
    6. '_line' → logprob: -17.750001907348633
    7. ' in' → logprob: -19.375001907348633
    8. '_index' → logprob: -19.500001907348633
    9. '_

' → logprob: -19.625001907348633
    10. '_counter' → logprob: -19.750001907348633

Token 455: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04197929799556732
    2. 'in' → logprob: -3.2919793128967285
    3. 'range' → logprob: -5.5419793128967285
    4. ' range' → logprob: -11.54197883605957
    5. ' ' → logprob: -13.54197883605957
    6. '  ' → logprob: -16.29197883605957
    7. '    ' → logprob: -16.41697883605957
    8. 'import' → logprob: -16.54197883605957
    9. '   ' → logprob: -17.54197883605957
    10. '
' → logprob: -17.79197883605957

Token 456: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.306760805164231e-05
    2. ' range' → logprob: -11.25001335144043
    3. '(range' → logprob: -17.75001335144043
    4. '	range' → logprob: -18.50001335144043
    5. '   ' → logprob: -18.62501335144043
    6. 'int' → logprob: -19.00001335144043
    7. 'sys' → logprob: -19.12501335144043
    8. 'read' → logprob: -19.50001335144043
    9. '[' → logprob: -19.62501335144043
    10. '```' → logprob: -19.62501335144043

Token 457: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.931863051955588e-05
    2. 'N' → logprob: -9.750059127807617
    3. '(' → logprob: -13.875059127807617
    4. '(int' → logprob: -17.125059127807617
    5. '(
' → logprob: -19.125059127807617
    6. 'int' → logprob: -19.250059127807617
    7. ' N' → logprob: -19.750059127807617
    8. '(n' → logprob: -20.125059127807617
    9. ' (' → logprob: -20.250059127807617
    10. '	N' → logprob: -20.625059127807617

Token 458: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39080512523651123
    2. '):
' → logprob: -1.1408051252365112
    3. ':' → logprob: -5.890805244445801
    4. ')' → logprob: -8.5158052444458
    5. '):
' → logprob: -8.5158052444458
    6. ' ):' → logprob: -8.5158052444458
    7. ':
' → logprob: -8.7658052444458
    8. '       ' → logprob: -9.0158052444458
    9. ' ):
' → logprob: -9.1408052444458
    10. '<|end|>' → logprob: -9.8908052444458

Token 459: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001968649885384366
    2. '<|end|>' → logprob: -9.75019645690918
    3. '<|end|>' → logprob: -10.62519645690918
    4. '	       ' → logprob: -10.62519645690918
    5. ':
' → logprob: -11.00019645690918
    6. '		' → logprob: -11.37519645690918
    7. ':' → logprob: -11.62519645690918
    8. '```' → logprob: -11.87519645690918
    9. ' line' → logprob: -12.00019645690918
    10. ' lines' → logprob: -12.62519645690918

Token 460: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.12719403207302094
    2. ' line' → logprob: -2.1271939277648926
    3. '           ' → logprob: -8.37719440460205
    4. 'input' → logprob: -10.87719440460205
    5. '	line' → logprob: -11.50219440460205
    6. ' input' → logprob: -13.12719440460205
    7. '_line' → logprob: -13.12719440460205
    8. '               ' → logprob: -14.00219440460205
    9. 'record' → logprob: -14.62719440460205
    10. '   ' → logprob: -14.75219440460205

Token 461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759443044662476
    2. '=' → logprob: -0.8259443044662476
    3. '=line' → logprob: -12.950943946838379
    4. '=sys' → logprob: -13.200943946838379
    5. '		' → logprob: -14.950943946838379
    6. ' ' → logprob: -16.200944900512695
    7. '           ' → logprob: -16.950944900512695
    8. '        ' → logprob: -17.075944900512695
    9. '	' → logprob: -17.325944900512695
    10. ' =
' → logprob: -17.575944900512695

Token 462: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005233763717114925
    2. ' sys' → logprob: -5.2552337646484375
    3. '=sys' → logprob: -17.880233764648438
    4. '           ' → logprob: -18.755233764648438
    5. 'input' → logprob: -19.005233764648438
    6. '	sys' → logprob: -19.130233764648438
    7. 'Sys' → logprob: -19.880233764648438
    8. '(sys' → logprob: -20.630233764648438
    9. '
' → logprob: -22.255233764648438
    10. 'stdin' → logprob: -22.380233764648438

Token 463: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006347587914206088
    2. 'stdin' → logprob: -7.625634670257568
    3. 'in' → logprob: -8.875635147094727
    4. 'din' → logprob: -12.500635147094727
    5. '.readline' → logprob: -13.125635147094727
    6. '.stdout' → logprob: -14.625635147094727
    7. 'd' → logprob: -15.375635147094727
    8. 'In' → logprob: -15.750635147094727
    9. 'sys' → logprob: -16.125635147094727
    10. '(stdin' → logprob: -16.250635147094727

Token 464: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.512236498361744e-07
    2. ' readline' → logprob: -15.375000953674316
    3. '.' → logprob: -16.5
    4. 'stdin' → logprob: -16.625
    5. 'read' → logprob: -17.875
    6. '.stdin' → logprob: -18.5
    7. 'line' → logprob: -19.375
    8. '.readlines' → logprob: -20.125
    9. 'getline' → logprob: -20.25
    10. '
' → logprob: -20.875

Token 465: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2040552794933319
    2. '()
' → logprob: -2.3290553092956543
    3. '()' → logprob: -2.4540553092956543
    4. '().' → logprob: -7.579055309295654
    5. ' line' → logprob: -8.704054832458496
    6. '
' → logprob: -9.329054832458496
    7. '<|end|>' → logprob: -9.454054832458496
    8. '(line' → logprob: -9.829054832458496
    9. '=line' → logprob: -9.954054832458496
    10. '()
' → logprob: -10.329054832458496

Token 466: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9743012671824545e-05
    2. '
' → logprob: -12.250020027160645
    3. '<|end|>' → logprob: -12.750020027160645
    4. '		' → logprob: -13.250020027160645
    5. '          ' → logprob: -13.625020027160645
    6. '       ' → logprob: -13.625020027160645
    7. '	       ' → logprob: -13.750020027160645
    8. '            
' → logprob: -13.875020027160645
    9. ',' → logprob: -14.125020027160645
    10. ' if' → logprob: -14.375020027160645

Token 467: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38348355889320374
    2. 'if' (adapté à ' if') → logprob: -1.5084835290908813
    3. 'record' → logprob: -2.633483648300171
    4. ' if' → logprob: -4.258483409881592
    5. 'purchase' → logprob: -4.758483409881592
    6. ' record' → logprob: -6.508483409881592
    7. 'self' → logprob: -6.883483409881592
    8. ' purchase' → logprob: -9.50848388671875
    9. '            
' → logprob: -10.50848388671875
    10. '
' → logprob: -10.63348388671875

Token 468: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5231485962867737
    2. ' not' → logprob: -0.8981485962867737
    3. '
' → logprob: -11.273148536682129
    4. 'line' → logprob: -11.773148536682129
    5. '	not' → logprob: -13.773148536682129
    6. 'n' → logprob: -14.398148536682129
    7. ' line' → logprob: -14.523148536682129
    8. '

' → logprob: -14.648148536682129
    9. '```' → logprob: -14.898148536682129
    10. '   ' → logprob: -15.023148536682129

Token 469: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01416350994259119
    2. ' line' → logprob: -4.264163494110107
    3. '(line' → logprob: -18.264163970947266
    4. '	line' → logprob: -18.764163970947266
    5. '
' → logprob: -19.139163970947266
    6. '=line' → logprob: -19.264163970947266
    7. '#line' → logprob: -19.389163970947266
    8. '[line' → logprob: -20.014163970947266
    9. ' ' → logprob: -22.014163970947266
    10. '_line' → logprob: -22.139163970947266

Token 470: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16825240850448608
    2. ':' → logprob: -2.168252468109131
    3. '               ' → logprob: -3.418252468109131
    4. '.strip' → logprob: -5.668252468109131
    5. '           ' → logprob: -5.918252468109131
    6. ' or' → logprob: -7.043252468109131
    7. ':return' → logprob: -8.418251991271973
    8. '<|end|>' → logprob: -9.168251991271973
    9. ':
' → logprob: -10.168251991271973
    10. '.' → logprob: -10.418251991271973

Token 471: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043937109876424074
    2. 'raise' → logprob: -8.625439643859863
    3. '           ' → logprob: -9.000439643859863
    4. ' raise' → logprob: -9.125439643859863
    5. '   ' → logprob: -11.125439643859863
    6. '                   ' → logprob: -12.000439643859863
    7. '	           ' → logprob: -13.375439643859863
    8. 'break' → logprob: -13.750439643859863
    9. '	raise' → logprob: -13.750439643859863
    10. '              ' → logprob: -14.250439643859863

Token 472: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.026270456612110138
    2. ' raise' → logprob: -3.7762703895568848
    3. 'break' → logprob: -5.901270389556885
    4. '	raise' → logprob: -8.901270866394043
    5. '               ' → logprob: -9.526270866394043
    6. '           ' → logprob: -10.151270866394043
    7. ' break' → logprob: -10.901270866394043
    8. '                   ' → logprob: -11.526270866394043
    9. 'Raise' → logprob: -12.651270866394043
    10. '_raise' → logprob: -13.651270866394043

Token 473: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.0011871340684592724
    2. ' EOF' → logprob: -6.751187324523926
    3. 'Value' → logprob: -11.001187324523926
    4. 'EO' → logprob: -15.376187324523926
    5. ' Value' → logprob: -17.12618637084961
    6. 'Unexpected' → logprob: -17.37618637084961
    7. 'E' → logprob: -18.87618637084961
    8. 'EOS' → logprob: -19.00118637084961
    9. '```' → logprob: -19.00118637084961
    10. '   ' → logprob: -19.50118637084961

Token 474: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9027791495318525e-05
    2. 'rror' → logprob: -10.875019073486328
    3. 'error' → logprob: -18.750019073486328
    4. 'SError' → logprob: -18.875019073486328
    5. 'Unexpected' → logprob: -19.625019073486328
    6. 'EOF' → logprob: -20.500019073486328
    7. 'LError' → logprob: -20.500019073486328
    8. ' Error' → logprob: -21.500019073486328
    9. '
' → logprob: -21.500019073486328
    10. 'Warning' → logprob: -21.625019073486328

Token 475: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. '('' → logprob: -15.875004768371582
    4. '(f' → logprob: -16.2500057220459
    5. '()' → logprob: -17.0000057220459
    6. '(
' → logprob: -17.2500057220459
    7. '"' → logprob: -17.3750057220459
    8. '("")' → logprob: -19.5000057220459
    9. '("\' → logprob: -20.0000057220459
    10. '       ' → logprob: -20.2500057220459

Token 476: 'Not' (ID: 2874)
  Prédit: 'Unexpected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.26489347219467163
    2. '"' → logprob: -1.8898935317993164
    3. 'Incomplete' → logprob: -2.8898935317993164
    4. 'Ins' → logprob: -4.264893531799316
    5. 'Expected' → logprob: -5.639893531799316
    6. 'Not' → logprob: -5.639893531799316
    7. 'Input' → logprob: -5.889893531799316
    8. ' Unexpected' → logprob: -7.014893531799316
    9. 'f' → logprob: -7.889893531799316
    10. 'Prem' → logprob: -8.389893531799316

Token 477: ' enough' (ID: 4951)
  Prédit: ' enough'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enough' → logprob: -0.07941954582929611
    2. 'en' → logprob: -2.5794196128845215
    3. 'Enough' → logprob: -8.454419136047363
    4. '<|end|>' → logprob: -8.704419136047363
    5. '_en' → logprob: -9.454419136047363
    6. 's' → logprob: -11.079419136047363
    7. ' en' → logprob: -11.829419136047363
    8. ' suficiente' → logprob: -11.829419136047363
    9. ' all' → logprob: -11.954419136047363
    10. ' sufficient' → logprob: -12.329419136047363

Token 478: ' purchase' (ID: 7314)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4507063627243042
    2. ' input' → logprob: -1.0757063627243042
    3. ' lines' → logprob: -4.575706481933594
    4. 'purchase' → logprob: -5.200706481933594
    5. 'lines' → logprob: -5.450706481933594
    6. ' purchase' → logprob: -6.950706481933594
    7. 'data' → logprob: -7.825706481933594
    8. ' data' → logprob: -8.575706481933594
    9. '_input' → logprob: -10.450706481933594
    10. 'inputs' → logprob: -10.700706481933594

Token 479: ' records' (ID: 11722)
  Prédit: ' records'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' records' → logprob: -0.045688822865486145
    2. '_records' → logprob: -3.4206888675689697
    3. ' lines' → logprob: -5.045688629150391
    4. 's' → logprob: -5.920688629150391
    5. 'records' → logprob: -6.045688629150391
    6. '_' → logprob: -8.42068862915039
    7. '_lines' → logprob: -9.67068862915039
    8. '_record' → logprob: -10.04568862915039
    9. ' data' → logprob: -10.29568862915039
    10. 'lines' → logprob: -10.42068862915039

Token 480: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.11788484454154968
    2. '")' → logprob: -2.492884874343872
    3. '           ' → logprob: -3.617884874343872
    4. ' provided' → logprob: -6.742884635925293
    5. 'provided' → logprob: -8.242884635925293
    6. ' to' → logprob: -9.617884635925293
    7. '")
' → logprob: -9.742884635925293
    8. ' for' → logprob: -9.992884635925293
    9. '       ' → logprob: -10.617884635925293
    10. 'Provided' → logprob: -11.742884635925293

Token 481: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.6100132496794686e-05
    2. '       ' → logprob: -10.750056266784668
    3. '               ' → logprob: -11.125056266784668
    4. 'purchase' → logprob: -12.250056266784668
    5. '<|end|>' → logprob: -12.625056266784668
    6. '          ' → logprob: -12.625056266784668
    7. 'Purchase' → logprob: -13.125056266784668
    8. '		' → logprob: -13.375056266784668
    9. ' purchase' → logprob: -14.000056266784668
    10. '            
' → logprob: -14.250056266784668

Token 482: ' record' (ID: 3704)
  Prédit: 'record'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'record' (adapté à ' record') → logprob: -0.06656467914581299
    2. ' record' → logprob: -3.5665645599365234
    3. '           ' → logprob: -3.8165645599365234
    4. 'self' → logprob: -4.316564559936523
    5. ' self' → logprob: -7.441564559936523
    6. 'purchase' → logprob: -8.566564559936523
    7. '	record' → logprob: -12.691564559936523
    8. 'rec' → logprob: -13.066564559936523
    9. '(record' → logprob: -13.441564559936523
    10. ' purchase' → logprob: -13.441564559936523

Token 483: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002476016292348504
    2. '=' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.75247573852539
    4. '.' → logprob: -16.50247573852539
    5. '.append' → logprob: -17.00247573852539
    6. ' =
' → logprob: -18.00247573852539
    7. '=line' → logprob: -18.12747573852539
    8. ')' → logprob: -18.25247573852539
    9. ' =)' → logprob: -18.62747573852539
    10. ' +=' → logprob: -19.00247573852539

Token 484: ' Purchase' (ID: 37646)
  Prédit: 'Purchase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Purchase' → logprob: -0.0009114635176956654
    2. ' Purchase' → logprob: -7.000911235809326
    3. 'Purch' → logprob: -18.500911712646484
    4. ' purchase' → logprob: -21.000911712646484
    5. 'purchase' → logprob: -21.375911712646484
    6. '_purchase' → logprob: -22.000911712646484
    7. 'Purchased' → logprob: -22.250911712646484
    8. 'Payment' → logprob: -24.500911712646484
    9. ' PURCHASE' → logprob: -25.250911712646484
    10. 'Pur' → logprob: -26.375911712646484

Token 485: 'Record' (ID: 6721)
  Prédit: 'Record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Record' → logprob: 0.0
    2. 'Purchase' → logprob: -18.5
    3. 'record' → logprob: -18.625
    4. '_Record' → logprob: -20.0
    5. '<Record' → logprob: -20.625
    6. 'Records' → logprob: -21.0
    7. '_record' → logprob: -22.0
    8. '[' → logprob: -22.75
    9. 'Request' → logprob: -22.75
    10. 'Recorder' → logprob: -22.875

Token 486: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.00013166792632546276
    2. '.' → logprob: -9.000131607055664
    3. 'from' → logprob: -11.750131607055664
    4. ' .' → logprob: -15.250131607055664
    5. '.for' → logprob: -17.750131607055664
    6. '.From' → logprob: -18.000131607055664
    7. '.strptime' → logprob: -19.000131607055664
    8. ' from' → logprob: -19.375131607055664
    9. '.=' → logprob: -19.500131607055664
    10. ' =' → logprob: -19.500131607055664

Token 487: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.999452772201039e-05
    2. 'input' → logprob: -10.500029563903809
    3. 'line' → logprob: -13.750029563903809
    4. '_line' → logprob: -14.500029563903809
    5. '_output' → logprob: -15.875029563903809
    6. '(_' → logprob: -15.875029563903809
    7. '_' → logprob: -16.750030517578125
    8. '(input' → logprob: -17.000030517578125
    9. 'Input' → logprob: -17.125030517578125
    10. '_inputs' → logprob: -17.250030517578125

Token 488: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.004084455315023661
    2. 'line' → logprob: -5.504084587097168
    3. '_lines' → logprob: -13.504084587097168
    4. 'Line' → logprob: -14.004084587097168
    5. '(line' → logprob: -14.254084587097168
    6. '_' → logprob: -14.379084587097168
    7. '[line' → logprob: -14.504084587097168
    8. 'lines' → logprob: -15.129084587097168
    9. ' line' → logprob: -15.254084587097168
    10. 'lin' → logprob: -15.754084587097168

Token 489: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. '(Line' → logprob: -15.750001907348633
    4. '[line' → logprob: -16.625001907348633
    5. '=line' → logprob: -17.125001907348633
    6. ' (' → logprob: -17.125001907348633
    7. '(lines' → logprob: -18.625001907348633
    8. '#line' → logprob: -18.750001907348633
    9. '(
' → logprob: -18.750001907348633
    10. ',line' → logprob: -18.750001907348633

Token 490: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20175762474536896
    2. ')
' → logprob: -1.7017576694488525
    3. '           ' → logprob: -8.326757431030273
    4. ')
' → logprob: -9.326757431030273
    5. ')`
' → logprob: -12.201757431030273
    6. '       ' → logprob: -12.951757431030273
    7. ')`' → logprob: -14.076757431030273
    8. '())
' → logprob: -14.076757431030273
    9. ')

' → logprob: -14.201757431030273
    10. '               ' → logprob: -14.326757431030273

Token 491: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001129602751461789
    2. 'self' → logprob: -9.250112533569336
    3. '       ' → logprob: -11.750112533569336
    4. ' self' → logprob: -12.500112533569336
    5. '   ' → logprob: -13.500112533569336
    6. '<|end|>' → logprob: -13.750112533569336
    7. '               ' → logprob: -13.875112533569336
    8. '	       ' → logprob: -14.750112533569336
    9. '
' → logprob: -15.125112533569336
    10. '		' → logprob: -15.125112533569336

Token 492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004408990498632193
    2. ' self' → logprob: -6.004408836364746
    3. '           ' → logprob: -6.254408836364746
    4. '	self' → logprob: -12.254408836364746
    5. '       ' → logprob: -13.004408836364746
    6. '               ' → logprob: -13.754408836364746
    7. '
' → logprob: -14.629408836364746
    8. '   ' → logprob: -14.754408836364746
    9. '          ' → logprob: -16.504409790039062
    10. '		' → logprob: -16.629409790039062

Token 493: '.purchase' (ID: 163082)
  Prédit: '.purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.purchase' → logprob: -1.3902033970225602e-05
    2. 'purchase' → logprob: -11.500014305114746
    3. '.' → logprob: -12.875014305114746
    4. '.p' → logprob: -13.875014305114746
    5. ' purchase' → logprob: -16.50001335144043
    6. ' .' → logprob: -16.50001335144043
    7. '.payment' → logprob: -18.37501335144043
    8. '_purchase' → logprob: -19.37501335144043
    9. 'urchase' → logprob: -20.25001335144043
    10. '.records' → logprob: -20.37501335144043

Token 494: '_records' (ID: 77212)
  Prédit: '_records'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_records' → logprob: -2.5776860184123507e-06
    2. 's' → logprob: -13.75000286102295
    3. 'records' → logprob: -13.87500286102295
    4. 'Records' → logprob: -15.12500286102295
    5. '_record' → logprob: -16.250001907348633
    6. '\' → logprob: -17.750001907348633
    7. '_' → logprob: -17.875001907348633
    8. ' records' → logprob: -18.000001907348633
    9. '_requests' → logprob: -18.375001907348633
    10. '```' → logprob: -18.375001907348633

Token 495: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.3464544432936236e-05
    2. '.' → logprob: -10.125043869018555
    3. '.app' → logprob: -12.875043869018555
    4. '.ap' → logprob: -15.125043869018555
    5. '.extend' → logprob: -16.125043869018555
    6. 'append' → logprob: -16.250043869018555
    7. ' .' → logprob: -16.375043869018555
    8. '.add' → logprob: -16.375043869018555
    9. '.Append' → logprob: -17.000043869018555
    10. '.setdefault' → logprob: -17.375043869018555

Token 496: '(record' (ID: 42175)
  Prédit: '(record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(record' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.250008583068848
    3. 'record' → logprob: -12.500008583068848
    4. '(
' → logprob: -16.250009536743164
    5. '(records' → logprob: -20.000009536743164
    6. '	record' → logprob: -20.375009536743164
    7. ' record' → logprob: -20.625009536743164
    8. '(rec' → logprob: -21.250009536743164
    9. '(r' → logprob: -22.125009536743164
    10. ' (' → logprob: -22.125009536743164

Token 497: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005440961103886366
    2. '<|end|>' → logprob: -7.62554407119751
    3. ')
' → logprob: -10.000544548034668
    4. ')return' → logprob: -12.500544548034668
    5. '       ' → logprob: -13.000544548034668
    6. '<|end|>' → logprob: -13.500544548034668
    7. ' )' → logprob: -13.625544548034668
    8. '())' → logprob: -14.125544548034668
    9. ')view' → logprob: -15.625544548034668
    10. '```' → logprob: -15.625544548034668

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22342316806316376
    2. '
' → logprob: -1.7234231233596802
    3. 'def' → logprob: -3.8484232425689697
    4. '<|end|>' → logprob: -8.47342300415039
    5. ' def' → logprob: -8.84842300415039
    6. '    
' → logprob: -9.84842300415039
    7. '```' → logprob: -10.47342300415039
    8. '

' → logprob: -11.47342300415039
    9. '	def' → logprob: -12.47342300415039
    10. '<|end|>' → logprob: -13.34842300415039

Token 499: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00031270162435248494
    2. '   ' → logprob: -8.500312805175781
    3. ' def' → logprob: -9.250312805175781
    4. '
' → logprob: -11.250312805175781
    5. '	def' → logprob: -16.12531280517578
    6. '    
' → logprob: -18.12531280517578
    7. '```' → logprob: -18.25031280517578
    8. '

' → logprob: -18.75031280517578
    9. ' ' → logprob: -19.37531280517578
    10. '  ' → logprob: -20.37531280517578

Token 500: ' output' (ID: 4733)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5960187315940857
    2. 'write' → logprob: -1.0960187911987305
    3. ' process' → logprob: -2.5960187911987305
    4. 'run' → logprob: -3.9710187911987305
    5. ' write' → logprob: -4.0960187911987305
    6. 'print' → logprob: -6.3460187911987305
    7. ' run' → logprob: -6.5960187911987305
    8. 'perform' → logprob: -7.4710187911987305
    9. 'execute' → logprob: -8.34601879119873
    10. 'output' → logprob: -8.59601879119873

Token 501: '_results' (ID: 31049)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6586460471153259
    2. '_records' → logprob: -1.6586461067199707
    3. '_results' → logprob: -2.0336461067199707
    4. '_pairs' → logprob: -2.7836461067199707
    5. '(' → logprob: -3.4086461067199707
    6. '_' → logprob: -3.5336461067199707
    7. '_f' → logprob: -4.408646106719971
    8. 'self' → logprob: -4.408646106719971
    9. '_result' → logprob: -5.283646106719971
    10. '_purchase' → logprob: -6.908646106719971

Token 502: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012320445966906846
    2. '(' → logprob: -9.125123023986816
    3. 'self' → logprob: -12.000123023986816
    4. '   ' → logprob: -12.750123023986816
    5. '(
' → logprob: -13.125123023986816
    6. '       ' → logprob: -13.500123023986816
    7. ' (' → logprob: -14.125123023986816
    8. 'def' → logprob: -14.750123023986816
    9. '(s' → logprob: -15.125123023986816
    10. '()' → logprob: -16.125123977661133

Token 503: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07794544100761414
    2. 'self' → logprob: -3.0779454708099365
    3. '):
' → logprob: -3.7029454708099365
    4. ',' → logprob: -5.827945232391357
    5. ')' → logprob: -6.702945232391357
    6. '(self' → logprob: -9.827945709228516
    7. '   ' → logprob: -11.327945709228516
    8. ':' → logprob: -11.452945709228516
    9. '):
' → logprob: -11.577945709228516
    10. ' self' → logprob: -11.952945709228516

Token 504: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.45007359981536865
    2. 'results' → logprob: -1.2000735998153687
    3. 'fre' → logprob: -3.575073719024658
    4. 'result' → logprob: -4.325073719024658
    5. ' pairs' → logprob: -4.450073719024658
    6. ' results' → logprob: -5.325073719024658
    7. 'self' → logprob: -6.450073719024658
    8. 'related' → logprob: -6.950073719024658
    9. ' frequent' → logprob: -7.450073719024658
    10. ' result' → logprob: -8.8250732421875

Token 505: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18129613995552063
    2. '):' → logprob: -1.9312961101531982
    3. '):
' → logprob: -4.306296348571777
    4. 'self' → logprob: -5.056296348571777
    5. '(self' → logprob: -7.931296348571777
    6. ')' → logprob: -7.931296348571777
    7. '       ' → logprob: -9.056296348571777
    8. '   ' → logprob: -10.056296348571777
    9. ' self' → logprob: -10.431296348571777
    10. ':self' → logprob: -10.681296348571777

Token 506: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00014454191841650754
    2. ' List' → logprob: -9.000144958496094
    3. ')' → logprob: -11.000144958496094
    4. '[List' → logprob: -12.375144958496094
    5. 'list' → logprob: -17.000144958496094
    6. '   ' → logprob: -17.000144958496094
    7. '):' → logprob: -17.750144958496094
    8. '	List' → logprob: -17.750144958496094
    9. '(List' → logprob: -18.125144958496094
    10. '):
' → logprob: -18.125144958496094

Token 507: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. '[str' → logprob: -13.12500286102295
    3. '<Tuple' → logprob: -15.50000286102295
    4. '[
' → logprob: -15.87500286102295
    5. ')' → logprob: -16.250001907348633
    6. 'Tuple' → logprob: -16.500001907348633
    7. '```' → logprob: -17.250001907348633
    8. '[(' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.750001907348633
    10. '):' → logprob: -18.000001907348633

Token 508: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.750003814697266
    3. ' Tuple' → logprob: -13.750003814697266
    4. 'str' → logprob: -16.125003814697266
    5. 'tuple' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '```' → logprob: -17.625003814697266
    8. 'Tu' → logprob: -18.375003814697266
    9. '           ' → logprob: -19.500003814697266
    10. '[str' → logprob: -19.625003814697266

Token 509: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. 'str' → logprob: -15.75
    4. '[
' → logprob: -17.25
    5. '[int' → logprob: -18.25
    6. '(str' → logprob: -19.125
    7. ',str' → logprob: -19.125
    8. '```' → logprob: -19.375
    9. '
' → logprob: -19.875
    10. ')' → logprob: -20.0

Token 510: ',str' (ID: 95110)
  Prédit: ',str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',str' → logprob: -0.3224691152572632
    2. ',' → logprob: -1.3224691152572632
    3. '[str' → logprob: -4.822469234466553
    4. 'str' → logprob: -6.822469234466553
    5. ',
' → logprob: -11.197468757629395
    6. ' ,' → logprob: -11.572468757629395
    7. ',String' → logprob: -13.947468757629395
    8. ',int' → logprob: -14.072468757629395
    9. '   ' → logprob: -14.197468757629395
    10. ' str' → logprob: -14.572468757629395

Token 511: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.012898423708975315
    2. ']])' → logprob: -4.3878984451293945
    3. ')]' → logprob: -8.262898445129395
    4. ']' → logprob: -10.137898445129395
    5. ']]:
' → logprob: -10.887898445129395
    6. '])' → logprob: -11.012898445129395
    7. ')' → logprob: -11.012898445129395
    8. ']):
' → logprob: -11.387898445129395
    9. ']])
' → logprob: -11.512898445129395
    10. ']):' → logprob: -11.512898445129395

Token 512: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.597996175289154
    2. ')' → logprob: -0.847996175289154
    3. '):
' → logprob: -3.847996234893799
    4. '):
' → logprob: -8.22299575805664
    5. ')->' → logprob: -8.59799575805664
    6. ':' → logprob: -10.47299575805664
    7. '   ' → logprob: -11.97299575805664
    8. '):

' → logprob: -13.22299575805664
    9. '       ' → logprob: -13.84799575805664
    10. '):

' → logprob: -14.97299575805664

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00070230319397524
    2. 'for' → logprob: -7.625702381134033
    3. ' for' → logprob: -8.500701904296875
    4. 'if' → logprob: -12.125701904296875
    5. '   ' → logprob: -12.375701904296875
    6. ' if' → logprob: -14.000701904296875
    7. '```' → logprob: -15.500701904296875
    8. '	for' → logprob: -16.375701904296875
    9. '	' → logprob: -17.000701904296875
    10. '	   ' → logprob: -18.000701904296875

Token 514: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008147508488036692
    2. '       ' → logprob: -7.500814914703369
    3. ' for' → logprob: -8.250814437866211
    4. 'if' → logprob: -14.250814437866211
    5. '	for' → logprob: -17.00081443786621
    6. '   ' → logprob: -17.25081443786621
    7. '```' → logprob: -18.25081443786621
    8. 'import' → logprob: -21.75081443786621
    9. 'For' → logprob: -22.37581443786621
    10. 'print' (adapté à ' print') → logprob: -22.75081443786621

Token 515: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0039038576651364565
    2. 'len' → logprob: -6.003903865814209
    3. '("' → logprob: -7.628903865814209
    4. '()' → logprob: -7.753903865814209
    5. '("")' → logprob: -9.37890338897705
    6. '("\' → logprob: -9.50390338897705
    7. '(f' → logprob: -9.75390338897705
    8. '(*' → logprob: -10.00390338897705
    9. '(' → logprob: -10.12890338897705
    10. '(p' → logprob: -10.12890338897705

Token 516: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0022161537781357765
    2. '(' → logprob: -6.127216339111328
    3. ')' → logprob: -10.627216339111328
    4. 'pairs' → logprob: -12.627216339111328
    5. ')(' → logprob: -13.752216339111328
    6. ')p' → logprob: -13.877216339111328
    7. ' (' → logprob: -14.002216339111328
    8. 'p' → logprob: -14.877216339111328
    9. ' pairs' → logprob: -15.627216339111328
    10. '(
' → logprob: -16.252216339111328

Token 517: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.00030197695014066994
    2. 'pairs' → logprob: -8.1253023147583
    3. ' pairs' → logprob: -12.7503023147583
    4. '_pairs' → logprob: -13.7503023147583
    5. ')' → logprob: -14.1253023147583
    6. 'air' → logprob: -14.6253023147583
    7. 'a' → logprob: -15.6253023147583
    8. 'aires' → logprob: -15.7503023147583
    9. 'Pairs' → logprob: -16.000301361083984
    10. '   ' → logprob: -16.625301361083984

Token 518: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10031504184007645
    2. ')' → logprob: -2.3503150939941406
    3. '))
' → logprob: -9.35031509399414
    4. '))' → logprob: -11.22531509399414
    5. ')
' → logprob: -11.85031509399414
    6. ')")
' → logprob: -15.60031509399414
    7. ')')
' → logprob: -15.72531509399414
    8. ')`
' → logprob: -15.72531509399414
    9. '")
' → logprob: -15.97531509399414
    10. ')

' → logprob: -15.97531509399414

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5761227607727051
    2. 'for' → logprob: -0.8261227607727051
    3. ' for' → logprob: -8.701122283935547
    4. '   ' → logprob: -11.076122283935547
    5. '	for' → logprob: -13.701122283935547
    6. '	' → logprob: -15.951122283935547
    7. '```' → logprob: -17.076122283935547
    8. '           ' → logprob: -17.201122283935547
    9. 'if' → logprob: -18.201122283935547
    10. '	   ' → logprob: -18.326122283935547

Token 520: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.246537173457909e-06
    2. '       ' → logprob: -12.750003814697266
    3. ' for' → logprob: -13.625003814697266
    4. '	for' → logprob: -17.250003814697266
    5. '```' → logprob: -19.625003814697266
    6. '   ' → logprob: -20.750003814697266
    7. 'if' → logprob: -22.250003814697266
    8. '        
' → logprob: -22.625003814697266
    9. 'For' → logprob: -22.750003814697266
    10. '``' → logprob: -23.375003814697266

Token 521: ' a' (ID: 261)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.13865786790847778
    2. 'first' → logprob: -2.638657808303833
    3. 'a' → logprob: -3.013657808303833
    4. 'p' → logprob: -5.138658046722412
    5. ' pair' → logprob: -6.263658046722412
    6. '(pair' → logprob: -7.388658046722412
    7. 'x' → logprob: -8.263657569885254
    8. ' first' → logprob: -9.388657569885254
    9. '   ' → logprob: -10.263657569885254
    10. 'item' → logprob: -10.388657569885254

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017144508892670274
    2. ',b' → logprob: -6.87671422958374
    3. ' ,' → logprob: -7.37671422958374
    4. ',p' → logprob: -11.126714706420898
    5. ' b' → logprob: -11.626714706420898
    6. ' pair' → logprob: -11.751714706420898
    7. 'b' → logprob: -11.751714706420898
    8. ',a' → logprob: -12.126714706420898
    9. 'pair' → logprob: -12.376714706420898
    10. ' ' → logprob: -14.001714706420898

Token 523: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001234428636962548
    2. ' b' → logprob: -9.000123023986816
    3. '	b' → logprob: -20.750123977661133
    4. '_b' → logprob: -23.375123977661133
    5. '   ' → logprob: -23.625123977661133
    6. ' ' → logprob: -23.750123977661133
    7. ')b' → logprob: -23.875123977661133
    8. ',b' → logprob: -24.750123977661133
    9. '  ' → logprob: -25.250123977661133
    10. '    
' → logprob: -25.375123977661133

Token 524: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06197015196084976
    2. 'in' → logprob: -2.8119702339172363
    3. ',' → logprob: -13.311969757080078
    4. ' ' → logprob: -15.061969757080078
    5. '	in' → logprob: -15.311969757080078
    6. 'a' → logprob: -16.436969757080078
    7. '  ' → logprob: -16.686969757080078
    8. 'import' → logprob: -16.936969757080078
    9. '   ' → logprob: -17.311969757080078
    10. 'print' → logprob: -17.311969757080078

Token 525: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.0007101670489646494
    2. ' pairs' → logprob: -7.2507100105285645
    3. 'airs' → logprob: -16.125709533691406
    4. 'pair' → logprob: -17.125709533691406
    5. 'p' → logprob: -17.375709533691406
    6. 'print' → logprob: -17.500709533691406
    7. '_pairs' → logprob: -17.875709533691406
    8. '
' → logprob: -18.625709533691406
    9. '   ' → logprob: -18.875709533691406
    10. 'Pairs' → logprob: -19.625709533691406

Token 526: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16229712963104248
    2. ':
' → logprob: -2.912297248840332
    3. '       ' → logprob: -3.412297248840332
    4. '           ' → logprob: -3.662297248840332
    5. 'print' → logprob: -4.662297248840332
    6. ' print' → logprob: -4.662297248840332
    7. ',' → logprob: -4.787297248840332
    8. '   ' → logprob: -5.662297248840332
    9. '<|end|>' → logprob: -6.162297248840332
    10. '.' → logprob: -6.662297248840332

Token 527: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002397174946963787
    2. '       ' → logprob: -6.377397060394287
    3. ' print' → logprob: -7.752397060394287
    4. 'print' → logprob: -8.377397537231445
    5. '   ' → logprob: -11.002397537231445
    6. '```' → logprob: -11.877397537231445
    7. '{' → logprob: -13.252397537231445
    8. '	       ' → logprob: -13.502397537231445
    9. '        
' → logprob: -13.627397537231445
    10. '            
' → logprob: -13.627397537231445

Token 528: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006347587914206088
    2. '           ' → logprob: -7.750634670257568
    3. ' print' → logprob: -8.500635147094727
    4. '   ' → logprob: -14.875635147094727
    5. '       ' → logprob: -15.375635147094727
    6. '	print' → logprob: -17.000635147094727
    7. '```' → logprob: -17.250635147094727
    8. '               ' → logprob: -18.125635147094727
    9. 'printf' → logprob: -18.375635147094727
    10. 'println' → logprob: -19.000635147094727

Token 529: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20244571566581726
    2. '(f' → logprob: -1.7024457454681396
    3. 'a' → logprob: -7.4524455070495605
    4. 'f' → logprob: -7.7024455070495605
    5. '(' → logprob: -16.07744598388672
    6. '{' → logprob: -18.20244598388672
    7. ' f' → logprob: -18.32744598388672
    8. '(
' → logprob: -18.95244598388672
    9. '("{}' → logprob: -19.20244598388672
    10. '   ' → logprob: -19.70244598388672

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021317286416888237
    2. ',b' → logprob: -3.89631724357605
    3. ' ,' → logprob: -7.771317481994629
    4. ' b' → logprob: -8.271317481994629
    5. ',
' → logprob: -10.021317481994629
    6. ''' → logprob: -10.896317481994629
    7. ')' → logprob: -11.521317481994629
    8. '"' → logprob: -11.521317481994629
    9. ' +' → logprob: -12.396317481994629
    10. 'b' → logprob: -12.896317481994629

Token 531: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010914575977949426
    2. ' b' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.62510871887207
    4. '    ' → logprob: -16.75010871887207
    5. ' ' → logprob: -17.00010871887207
    6. '
' → logprob: -17.62510871887207
    7. ' 
' → logprob: -17.87510871887207
    8. '    
' → logprob: -18.62510871887207
    9. '  ' → logprob: -19.25010871887207
    10. '     ' → logprob: -19.50010871887207

Token 532: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ')
' → logprob: -11.750007629394531
    3. ' )' → logprob: -18.00000762939453
    4. '<|end|>' → logprob: -18.25000762939453
    5. '),' → logprob: -18.62500762939453
    6. '       ' → logprob: -18.75000762939453
    7. '))' → logprob: -19.12500762939453
    8. ')

' → logprob: -19.50000762939453
    9. ')`' → logprob: -19.62500762939453
    10. '   ' → logprob: -19.62500762939453

Token 533: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015208146069198847
    2. 'if' → logprob: -6.62652063369751
    3. '   ' → logprob: -8.876521110534668
    4. ' def' → logprob: -10.126521110534668
    5. '```' → logprob: -11.751521110534668
    6. '
' → logprob: -12.251521110534668
    7. '	def' → logprob: -13.626521110534668
    8. '    
' → logprob: -13.876521110534668
    9. ' if' → logprob: -15.876521110534668
    10. '#' → logprob: -16.37652015686035

Token 534: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6931482553482056
    2. 'main' → logprob: -0.6931482553482056
    3. 'run' → logprob: -14.818148612976074
    4. ' run' → logprob: -15.068148612976074
    5. 'solve' → logprob: -15.568148612976074
    6. ' solve' → logprob: -15.943148612976074
    7. 'm' → logprob: -16.693147659301758
    8. 'process' → logprob: -17.193147659301758
    9. '	main' → logprob: -17.443147659301758
    10. 'def' → logprob: -17.818147659301758

Token 535: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1875571544806007e-05
    2. ' ():' → logprob: -11.500011444091797
    3. '():
' → logprob: -13.625011444091797
    4. '()' → logprob: -14.750011444091797
    5. ':' → logprob: -18.625011444091797
    6. '(' → logprob: -18.750011444091797
    7. '():
' → logprob: -19.000011444091797
    8. '().' → logprob: -19.250011444091797
    9. '()>' → logprob: -19.500011444091797
    10. '(":' → logprob: -20.500011444091797

Token 536: '   ' (ID: 271)
  Prédit: ' ioh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ioh' → logprob: -0.6667850017547607
    2. '   ' → logprob: -1.1667850017547607
    3. 'io' → logprob: -1.9167850017547607
    4. 'handler' → logprob: -4.04178524017334
    5. ' handler' → logprob: -4.91678524017334
    6. ' io' → logprob: -5.79178524017334
    7. '	handler' → logprob: -9.54178524017334
    8. '	io' → logprob: -9.54178524017334
    9. 'ih' → logprob: -10.54178524017334
    10. 'input' → logprob: -10.79178524017334

Token 537: ' ioh' (ID: 174122)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.06384861469268799
    2. 'handler' → logprob: -2.8138484954833984
    3. ' ioh' → logprob: -6.313848495483398
    4. ' handler' → logprob: -10.438848495483398
    5. ' io' → logprob: -11.063848495483398
    6. 'input' → logprob: -11.563848495483398
    7. 'i' → logprob: -12.438848495483398
    8. 'ih' → logprob: -12.688848495483398
    9. '   ' → logprob: -13.438848495483398
    10. 'ioa' → logprob: -14.313848495483398

Token 538: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5133880376815796
    2. '=' → logprob: -1.0133880376815796
    3. 'andler' → logprob: -3.263388156890869
    4. '   ' → logprob: -8.513387680053711
    5. ' ' → logprob: -9.763387680053711
    6. 'and' → logprob: -11.763387680053711
    7. '	' → logprob: -11.763387680053711
    8. '       ' → logprob: -12.388387680053711
    9. '    ' → logprob: -13.013387680053711
    10. '  ' → logprob: -13.513387680053711

Token 539: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0005530327325686812
    2. ' Input' → logprob: -7.500553131103516
    3. '	Input' → logprob: -19.875553131103516
    4. '<Input' → logprob: -20.250553131103516
    5. '_Input' → logprob: -20.875553131103516
    6. '\Input' → logprob: -22.000553131103516
    7. '_input' → logprob: -22.125553131103516
    8. 'input' → logprob: -22.250553131103516
    9. ' input' → logprob: -22.750553131103516
    10. '.Input' → logprob: -23.625553131103516

Token 540: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -4.320199877838604e-07
    2. 'O' → logprob: -15.125
    3. 'output' → logprob: -17.25
    4. '	Output' → logprob: -18.25
    5. ' Output' → logprob: -18.375
    6. 'Out' → logprob: -18.625
    7. '_output' → logprob: -19.875
    8. '_Output' → logprob: -20.25
    9. 'o' → logprob: -20.75
    10. '-output' → logprob: -20.75

Token 541: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.0280383548888494e-06
    2. 'andler' → logprob: -14.375000953674316
    3. 'handler' → logprob: -14.875000953674316
    4. 'Handle' → logprob: -17.375001907348633
    5. ' Handler' → logprob: -17.625001907348633
    6. '_Handler' → logprob: -19.000001907348633
    7. '_handler' → logprob: -19.125001907348633
    8. 'Helper' → logprob: -19.500001907348633
    9. '_HANDLER' → logprob: -20.000001907348633
    10. 'Hand' → logprob: -20.250001907348633

Token 542: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.22820113599300385
    2. '()' → logprob: -1.603201150894165
    3. '
' → logprob: -6.353200912475586
    4. '   ' → logprob: -7.853200912475586
    5. '.read' → logprob: -8.603200912475586
    6. '()
' → logprob: -8.603200912475586
    7. '.readline' → logprob: -8.853200912475586
    8. 'io' → logprob: -10.478200912475586
    9. '()\' → logprob: -10.978200912475586
    10. '.io' → logprob: -11.103200912475586

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5082686543464661
    2. 'io' → logprob: -1.0082685947418213
    3. ' ioh' → logprob: -3.8832685947418213
    4. '	io' → logprob: -4.6332688331604
    5. '"io' → logprob: -6.5082688331604
    6. '
' → logprob: -7.1332688331604
    7. '    
' → logprob: -7.8832688331604
    8. ' io' → logprob: -8.758268356323242
    9. '.io' → logprob: -9.008268356323242
    10. '(io' → logprob: -9.383268356323242

Token 544: ' ioh' (ID: 174122)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.026470521464943886
    2. ' ioh' → logprob: -3.651470422744751
    3. '   ' → logprob: -9.276470184326172
    4. '	io' → logprob: -11.026470184326172
    5. '"io' → logprob: -11.276470184326172
    6. ' io' → logprob: -11.526470184326172
    7. 'ih' → logprob: -11.776470184326172
    8. 'i' → logprob: -11.901470184326172
    9. '.io' → logprob: -12.276470184326172
    10. '/io' → logprob: -12.401470184326172

Token 545: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.3856492842023727e-06
    2. '.' → logprob: -13.750000953674316
    3. '.readline' → logprob: -15.625000953674316
    4. 'read' → logprob: -17.000001907348633
    5. ' .' → logprob: -17.500001907348633
    6. '.write' → logprob: -18.000001907348633
    7. '.readlines' → logprob: -18.500001907348633
    8. '.load' → logprob: -19.750001907348633
    9. '.Read' → logprob: -20.500001907348633
    10. '.reader' → logprob: -22.000001907348633

Token 546: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.750004768371582
    3. '_line' → logprob: -13.750004768371582
    4. '_output' → logprob: -15.250004768371582
    5. 'input' → logprob: -15.625004768371582
    6. '_in' → logprob: -15.875004768371582
    7. '_inputs' → logprob: -16.0000057220459
    8. 'Input' → logprob: -16.3750057220459
    9. '```' → logprob: -17.0000057220459
    10. ' _' → logprob: -18.1250057220459

Token 547: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08220934122800827
    2. '
' → logprob: -2.832209348678589
    3. 'purchase' → logprob: -4.58220911026001
    4. 'records' → logprob: -5.33220911026001
    5. '    
' → logprob: -5.70720911026001
    6. 'pairs' → logprob: -7.70720911026001
    7. 'p' → logprob: -8.207209587097168
    8. ' purchase' → logprob: -8.457209587097168
    9. ' records' → logprob: -8.457209587097168
    10. '()
' → logprob: -8.957209587097168

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015033314935863018
    2. 'an' → logprob: -4.26503324508667
    3. ' analyzer' → logprob: -8.265033721923828
    4. 'result' → logprob: -9.265033721923828
    5. 'results' → logprob: -9.390033721923828
    6. 'records' → logprob: -9.390033721923828
    7. 'pa' → logprob: -9.515033721923828
    8. '	an' → logprob: -10.265033721923828
    9. '   ' → logprob: -10.390033721923828
    10. 'ana' → logprob: -10.515033721923828

Token 549: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.030130185186862946
    2. 'r' → logprob: -3.65513014793396
    3. '   ' → logprob: -6.280130386352539
    4. ' analyzer' → logprob: -6.405130386352539
    5. ' r' → logprob: -8.780130386352539
    6. 'ana' → logprob: -10.280130386352539
    7. 'related' → logprob: -10.530130386352539
    8. 'analysis' → logprob: -10.905130386352539
    9. 'a' → logprob: -11.030130386352539
    10. 'rsa' → logprob: -12.030130386352539

Token 550: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004125419072806835
    2. '=' → logprob: -5.504125595092773
    3. '.' → logprob: -10.504125595092773
    4. '.an' → logprob: -11.254125595092773
    5. '   ' → logprob: -12.629125595092773
    6. ' ' → logprob: -13.254125595092773
    7. '  ' → logprob: -14.379125595092773
    8. 'an' → logprob: -15.879125595092773
    9. '    ' → logprob: -16.129125595092773
    10. '.=' → logprob: -16.379125595092773

Token 551: ' Related' (ID: 43352)
  Prédit: 'Related'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Related' → logprob: -0.04858771339058876
    2. ' Related' → logprob: -3.0485877990722656
    3. ' related' → logprob: -14.798587799072266
    4. '_related' → logprob: -18.923587799072266
    5. 'related' → logprob: -19.423587799072266
    6. 'Relevant' → logprob: -20.423587799072266
    7. 'RELATED' → logprob: -20.923587799072266
    8. '   ' → logprob: -22.173587799072266
    9. ' ' → logprob: -22.673587799072266
    10. ' ' → logprob: -22.923587799072266

Token 552: 'Products' (ID: 19437)
  Prédit: 'Products'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Products' → logprob: -9.088346359931165e-07
    2. ' Products' → logprob: -15.000000953674316
    3. 'Product' → logprob: -15.125000953674316
    4. 'Purchase' → logprob: -16.875
    5. 'Pro' → logprob: -17.125
    6. 'products' → logprob: -17.375
    7. '
' → logprob: -18.0
    8. 'Related' → logprob: -18.375
    9. 'Purch' → logprob: -18.5
    10. '_products' → logprob: -18.625

Token 553: 'Analyzer' (ID: 61604)
  Prédit: 'Analyzer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -2.696889623621246e-06
    2. 'Analy' → logprob: -13.37500286102295
    3. 'Products' → logprob: -14.12500286102295
    4. 'an' → logprob: -15.50000286102295
    5. 'Analyze' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.125001907348633
    7. 'Related' → logprob: -17.250001907348633
    8. 'alyzer' → logprob: -17.625001907348633
    9. ' Analyzer' → logprob: -18.000001907348633
    10. 'Anal' → logprob: -18.125001907348633

Token 554: '(io' (ID: 83879)
  Prédit: '(io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(io' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.750017166137695
    3. 'io' → logprob: -12.375017166137695
    4. '(i' → logprob: -13.375017166137695
    5. '(IO' → logprob: -13.375017166137695
    6. '(ip' → logprob: -14.500017166137695
    7. '   ' → logprob: -14.625017166137695
    8. ' ioh' → logprob: -15.375017166137695
    9. '/io' → logprob: -16.250017166137695
    10. '(
' → logprob: -16.500017166137695

Token 555: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.468279752880335e-05
    2. 'oh' → logprob: -10.000064849853516
    3. '
' → logprob: -12.375064849853516
    4. 'ih' → logprob: -13.125064849853516
    5. '   ' → logprob: -13.375064849853516
    6. 'handler' → logprob: -13.875064849853516
    7. ' h' → logprob: -14.250064849853516
    8. 'H' → logprob: -14.312564849853516
    9. '``' → logprob: -14.500064849853516
    10. 'th' → logprob: -14.562564849853516

Token 556: '.threshold' (ID: 153564)
  Prédit: '.threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.threshold' → logprob: -1.8550976164988242e-05
    2. '.' → logprob: -11.375018119812012
    3. 'threshold' → logprob: -12.625018119812012
    4. ' .' → logprob: -13.000018119812012
    5. '
' → logprob: -14.375018119812012
    6. '.th' → logprob: -14.625018119812012
    7. ').' → logprob: -15.750018119812012
    8. '   ' → logprob: -16.500019073486328
    9. ' ' → logprob: -17.375019073486328
    10. '.frequency' → logprob: -17.375019073486328

Token 557: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5775881409645081
    2. ')
' → logprob: -0.8275881409645081
    3. '   ' → logprob: -6.577588081359863
    4. ')
' → logprob: -8.327588081359863
    5. ' ' → logprob: -12.077588081359863
    6. ')

' → logprob: -12.577588081359863
    7. ' )
' → logprob: -13.202588081359863
    8. '  ' → logprob: -13.952588081359863
    9. ' )' → logprob: -14.827588081359863
    10. '       ' → logprob: -15.077588081359863

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08857273310422897
    2. 'pairs' → logprob: -3.2135727405548096
    3. ' pairs' → logprob: -3.8385727405548096
    4. 'results' → logprob: -4.8385725021362305
    5. 'result' → logprob: -4.8385725021362305
    6. ' result' → logprob: -5.7135725021362305
    7. ' results' → logprob: -5.9635725021362305
    8. 'purchase' → logprob: -7.3385725021362305
    9. ' purchase' → logprob: -8.46357250213623
    10. 'p' → logprob: -9.21357250213623

Token 559: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.21991068124771118
    2. 'results' → logprob: -1.8449106216430664
    3. 'pairs' → logprob: -4.094910621643066
    4. 'related' → logprob: -4.594910621643066
    5. 'fre' → logprob: -5.219910621643066
    6. ' result' → logprob: -5.344910621643066
    7. ' results' → logprob: -6.719910621643066
    8. ' frequent' → logprob: -7.969910621643066
    9. ' pairs' → logprob: -8.219910621643066
    10. '   ' → logprob: -8.719910621643066

Token 560: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975570224225521
    2. '=' → logprob: -3.5297555923461914
    3. 's' → logprob: -12.404755592346191
    4. ' ' → logprob: -15.279755592346191
    5. '_pairs' → logprob: -15.404755592346191
    6. '   ' → logprob: -15.654755592346191
    7. ')' → logprob: -15.779755592346191
    8. '  ' → logprob: -16.404756546020508
    9. ' =)' → logprob: -16.529756546020508
    10. '_' → logprob: -16.779756546020508

Token 561: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.02633153647184372
    2. ' analyzer' → logprob: -3.6513314247131348
    3. ' analy' → logprob: -11.651331901550293
    4. '   ' → logprob: -11.651331901550293
    5. '	an' → logprob: -11.651331901550293
    6. ' an' → logprob: -13.651331901550293
    7. 'Analyzer' → logprob: -14.401331901550293
    8. 'analysis' → logprob: -14.526331901550293
    9. ' analyze' → logprob: -15.026331901550293
    10. ' ' → logprob: -15.026331901550293

Token 562: '.an' (ID: 42697)
  Prédit: '.an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.an' → logprob: -2.641841820150148e-05
    2. 'an' → logprob: -10.75002670288086
    3. '.' → logprob: -12.87502670288086
    4. ' .' → logprob: -13.25002670288086
    5. '.An' → logprob: -15.75002670288086
    6. '	an' → logprob: -16.00002670288086
    7. '   ' → logprob: -16.12502670288086
    8. '\.' → logprob: -16.87502670288086
    9. '.evaluate' → logprob: -17.87502670288086
    10. '(an' → logprob: -17.87502670288086

Token 563: 'alyze' (ID: 71553)
  Prédit: 'alyze'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alyze' → logprob: -0.0009348054882138968
    2. 'al' → logprob: -7.000934600830078
    3. 'a' → logprob: -11.375934600830078
    4. 'an' → logprob: -12.000934600830078
    5. 'y' → logprob: -12.875934600830078
    6. '   ' → logprob: -14.500934600830078
    7. 'aly' → logprob: -14.625934600830078
    8. 'ize' → logprob: -15.125934600830078
    9. 'alyzer' → logprob: -15.375934600830078
    10. '```' → logprob: -15.375934600830078

Token 564: '(io' (ID: 83879)
  Prédit: '(io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(io' → logprob: -5.9153885558771435e-06
    2. 'io' → logprob: -12.375005722045898
    3. '	io' → logprob: -14.375005722045898
    4. '(IO' → logprob: -15.000005722045898
    5. '"io' → logprob: -15.375005722045898
    6. '(' → logprob: -15.750005722045898
    7. '/io' → logprob: -16.0000057220459
    8. '   ' → logprob: -16.2500057220459
    9. ' ioh' → logprob: -16.2500057220459
    10. ' (' → logprob: -16.3750057220459

Token 565: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0010562685783952475
    2. 'purchase' → logprob: -7.75105619430542
    3. 'oh' → logprob: -8.001056671142578
    4. '.purchase' → logprob: -8.501056671142578
    5. '.h' → logprob: -10.501056671142578
    6. 'uh' → logprob: -12.126056671142578
    7. 'u' → logprob: -12.251056671142578
    8. 'urchase' → logprob: -12.501056671142578
    9. 'o' → logprob: -12.501056671142578
    10. 's' → logprob: -12.626056671142578

Token 566: '.purchase' (ID: 163082)
  Prédit: '.purchase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.purchase' → logprob: -4.620622712536715e-05
    2. '.p' → logprob: -10.250045776367188
    3. 'purchase' → logprob: -11.625045776367188
    4. '.' → logprob: -13.625045776367188
    5. ' .' → logprob: -15.250045776367188
    6. '.payment' → logprob: -16.250045776367188
    7. '
' → logprob: -16.375045776367188
    8. '._' → logprob: -16.500045776367188
    9. '_purchase' → logprob: -17.000045776367188
    10. ').' → logprob: -17.250045776367188

Token 567: '_records' (ID: 77212)
  Prédit: '_records'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_records' → logprob: -1.0564331205387134e-05
    2. 's' → logprob: -11.50001049041748
    3. 'records' → logprob: -15.62501049041748
    4. '_' → logprob: -16.125011444091797
    5. 'Records' → logprob: -16.500011444091797
    6. '.records' → logprob: -17.875011444091797
    7. '_pairs' → logprob: -18.500011444091797
    8. '._' → logprob: -18.750011444091797
    9. '_record' → logprob: -19.000011444091797
    10. '[' → logprob: -19.375011444091797

Token 568: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002476724097505212
    2. ')
' → logprob: -6.002476692199707
    3. ')
' → logprob: -14.377476692199707
    4. '   ' → logprob: -15.252476692199707
    5. ' )' → logprob: -16.377477645874023
    6. ')

' → logprob: -16.502477645874023
    7. ' ' → logprob: -18.377477645874023
    8. ' )
' → logprob: -19.627477645874023
    9. ')`' → logprob: -19.627477645874023
    10. ')return' → logprob: -19.752477645874023

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08745567500591278
    2. 'io' → logprob: -2.5874557495117188
    3. ' ioh' → logprob: -4.837455749511719
    4. '	io' → logprob: -8.337455749511719
    5. '    
' → logprob: -9.212455749511719
    6. '"io' → logprob: -9.962455749511719
    7. '
' → logprob: -10.087455749511719
    8. 'ioq' → logprob: -10.712455749511719
    9. 'iox' → logprob: -10.837455749511719
    10. 'IO' → logprob: -10.837455749511719

Token 570: ' ioh' (ID: 174122)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -1.771655115589965e-05
    2. ' ioh' → logprob: -11.375018119812012
    3. '   ' → logprob: -12.125018119812012
    4. 'ih' → logprob: -15.375018119812012
    5. 'i' → logprob: -15.500018119812012
    6. '	io' → logprob: -16.250017166137695
    7. 'ioq' → logprob: -16.625017166137695
    8. '    
' → logprob: -16.750017166137695
    9. '"io' → logprob: -17.125017166137695
    10. '(io' → logprob: -17.625017166137695

Token 571: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.25
    3. ' .' → logprob: -17.25
    4. '.input' → logprob: -17.5
    5. '.out' → logprob: -17.625
    6. '.print' → logprob: -18.25
    7. 'output' → logprob: -18.875
    8. '.result' → logprob: -19.25
    9. '.stdout' → logprob: -19.375
    10. '.write' → logprob: -20.25

Token 572: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -1.9361264946837764e-07
    2. '_result' → logprob: -16.25
    3. 'results' → logprob: -17.0
    4. '```' → logprob: -19.25
    5. 'Results' → logprob: -20.0
    6. 's' → logprob: -20.125
    7. '_RESULTS' → logprob: -20.5
    8. '
' → logprob: -20.5
    9. '(results' → logprob: -20.625
    10. '_' → logprob: -20.75

Token 573: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.125000953674316
    3. 'result' → logprob: -15.125000953674316
    4. '(results' → logprob: -16.375001907348633
    5. '(
' → logprob: -17.625001907348633
    6. '(res' → logprob: -17.875001907348633
    7. '=result' → logprob: -18.375001907348633
    8. '(resultado' → logprob: -19.125001907348633
    9. ',result' → logprob: -19.875001907348633
    10. '[result' → logprob: -20.000001907348633

Token 574: ')

' (ID: 1029)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9426558613777161
    2. ')' → logprob: -1.1926558017730713
    3. '()' → logprob: -1.1926558017730713
    4. '()
' → logprob: -5.69265604019165
    5. '())
' → logprob: -8.942655563354492
    6. ')
' → logprob: -9.942655563354492
    7. ' )' → logprob: -11.317655563354492
    8. '(' → logprob: -11.567655563354492
    9. '(
' → logprob: -13.817655563354492
    10. '()

' → logprob: -13.817655563354492

Token 575: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.873571692267433e-05
    2. '
' → logprob: -9.750068664550781
    3. '```' → logprob: -12.000068664550781
    4. ' if' → logprob: -12.500068664550781
    5. '\n' → logprob: -15.875068664550781
    6. '    
' → logprob: -16.25006866455078
    7. '<|end|>' → logprob: -16.50006866455078
    8. '  
' → logprob: -16.62506866455078
    9. '#' → logprob: -16.87506866455078
    10. '\' → logprob: -17.37506866455078

Token 576: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007648630067706108
    2. '__' → logprob: -4.882648468017578
    3. '_' → logprob: -10.757648468017578
    4. '_name' → logprob: -11.507648468017578
    5. ' ' → logprob: -12.757648468017578
    6. ' _' → logprob: -13.382648468017578
    7. ' ' → logprob: -13.382648468017578
    8. 'name' → logprob: -13.632648468017578
    9. ' name' → logprob: -13.757648468017578
    10. '___' → logprob: -14.632648468017578

Token 577: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011279122903943062
    2. ' ==' → logprob: -5.636279106140137
    3. '.__' → logprob: -5.636279106140137
    4. '==' → logprob: -6.011279106140137
    5. '[' → logprob: -7.386279106140137
    6. ' __' → logprob: -7.636279106140137
    7. '__.__' → logprob: -8.386279106140137
    8. '__.' → logprob: -9.886279106140137
    9. 'if' → logprob: -10.011279106140137
    10. '__[' → logprob: -10.261279106140137

Token 578: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.847109812544659e-05
    2. '__.__' → logprob: -10.000048637390137
    3. '__.' → logprob: -13.000048637390137
    4. '__
' → logprob: -15.750048637390137
    5. '==' → logprob: -15.875048637390137
    6. '__["' → logprob: -16.00004768371582
    7. '____' → logprob: -16.00004768371582
    8. '___' → logprob: -16.25004768371582
    9. '__('' → logprob: -17.50004768371582
    10. '__[' → logprob: -17.75004768371582

Token 579: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.021448682993650436
    2. '__.__' → logprob: -4.396448612213135
    3. '.__' → logprob: -5.646448612213135
    4. ' ==' → logprob: -5.896448612213135
    5. '==' → logprob: -6.146448612213135
    6. '=="' → logprob: -8.646449089050293
    7. '.' → logprob: -9.271449089050293
    8. '__.' → logprob: -9.396449089050293
    9. '"' → logprob: -9.521449089050293
    10. '__["' → logprob: -11.521449089050293

Token 580: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.038063064217567444
    2. ''' → logprob: -3.2880630493164062
    3. ' "__' → logprob: -11.163063049316406
    4. '__' → logprob: -11.913063049316406
    5. ' '__' → logprob: -15.163063049316406
    6. '"user' → logprob: -15.788063049316406
    7. '"name' → logprob: -16.788063049316406
    8. '("__' → logprob: -17.663063049316406
    9. '"class' → logprob: -17.788063049316406
    10. ''"' → logprob: -17.788063049316406

Token 581: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00043353010551072657
    2. '__' → logprob: -7.750433444976807
    3. 'name' → logprob: -13.000433921813965
    4. '_main' → logprob: -15.875433921813965
    5. 'm' → logprob: -16.12543296813965
    6. 'built' → logprob: -16.25043296813965
    7. '__':
' → logprob: -16.75043296813965
    8. ' main' → logprob: -17.12543296813965
    9. '-main' → logprob: -17.12543296813965
    10. ' "__' → logprob: -17.25043296813965

Token 582: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.03817667067050934
    2. '__' → logprob: -3.2881767749786377
    3. '_' → logprob: -9.163176536560059
    4. '':' → logprob: -11.413176536560059
    5. ':' → logprob: -12.163176536560059
    6. '__":
' → logprob: -12.288176536560059
    7. '_'' → logprob: -12.663176536560059
    8. '__:' → logprob: -12.788176536560059
    9. ''' → logprob: -13.038176536560059
    10. '':
' → logprob: -13.663176536560059

Token 583: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.29533958435058594
    2. 'main' → logprob: -1.545339584350586
    3. ''' → logprob: -3.170339584350586
    4. '"' → logprob: -8.545339584350586
    5. ' main' → logprob: -9.545339584350586
    6. '   ' → logprob: -10.045339584350586
    7. '__':
' → logprob: -10.170339584350586
    8. '____' → logprob: -10.295339584350586
    9. '_main' → logprob: -10.295339584350586
    10. ' '__' → logprob: -10.545339584350586

Token 584: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0001238004770129919
    2. ' main' → logprob: -9.000123977661133
    3. '	main' → logprob: -15.125123977661133
    4. '   ' → logprob: -16.625123977661133
    5. '(main' → logprob: -19.625123977661133
    6. '
' → logprob: -19.875123977661133
    7. '_main' → logprob: -19.875123977661133
    8. 'm' → logprob: -20.125123977661133
    9. '    
' → logprob: -20.375123977661133
    10. '.main' → logprob: -20.875123977661133

Token 585: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 583
Tokens correctement prédits (1ère position, stricte): 315
Tokens correctement prédits (1ère position, avec adaptation): 343
Tokens correctement prédits (top 10): 544
Précision stricte (1ère position): 54.03%
Précision adaptée (1ère position): 58.83%
Précision (top 10): 93.31%
================================================================================
