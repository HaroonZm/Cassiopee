================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:05:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

dp = [[0]*37 for _ in range(5)]
dp[0][0] = 1
for i in range(1,5):
    for s in range(37):
        for k in range(10):
            if s - k >= 0:
                dp[i][s] += dp[i-1][s-k]

for line in sys.stdin:
    n = int(line)
    print(dp[4][n] if n <= 36 else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'dp' (ID: 19037)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06772785633802414
    2. '\n' → logprob: -3.44272780418396
    3. 'import' → logprob: -3.81772780418396
    4. '<|end|>' → logprob: -5.817728042602539
    5. '\' → logprob: -6.317728042602539
    6. 'newline' → logprob: -6.692728042602539
    7. ',' → logprob: -6.942728042602539
    8. '' → logprob: -7.442728042602539
    9. '
' → logprob: -7.692728042602539
    10. '<|end|>' → logprob: -7.692728042602539

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16039106249809265
    2. '[' → logprob: -1.910391092300415
    3. '=' → logprob: -10.035390853881836
    4. ' ' → logprob: -10.535390853881836
    5. '_' → logprob: -10.785390853881836
    6. '\[' → logprob: -10.785390853881836
    7. '.]' → logprob: -11.160390853881836
    8. ' =' → logprob: -11.660390853881836
    9. '[]' → logprob: -12.285390853881836
    10. '.[' → logprob: -12.660390853881836

Token 5: ' [[' (ID: 9237)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.37526965141296387
    2. '{}' → logprob: -1.6252696514129639
    3. ' []' → logprob: -2.625269651412964
    4. ' [' → logprob: -3.375269651412964
    5. '[]' → logprob: -5.000269889831543
    6. '[' → logprob: -6.750269889831543
    7. ' [{}' → logprob: -7.000269889831543
    8. ' ' → logprob: -8.500269889831543
    9. ' defaultdict' → logprob: -8.750269889831543
    10. 'dict' → logprob: -9.125269889831543

Token 6: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034940900513902307
    2. 'False' → logprob: -8.625349044799805
    3. '-' → logprob: -9.250349044799805
    4. 'float' → logprob: -9.625349044799805
    5. 'sys' → logprob: -12.750349044799805
    6. 'None' → logprob: -14.250349044799805
    7. '[' → logprob: -14.250349044799805
    8. ' ' → logprob: -14.375349044799805
    9. '[]' → logprob: -14.375349044799805
    10. 'inf' → logprob: -14.375349044799805

Token 7: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29508981108665466
    2. ' for' → logprob: -1.545089840888977
    3. ' ]' → logprob: -3.4200897216796875
    4. ',' → logprob: -5.5450897216796875
    5. ']*' → logprob: -5.7950897216796875
    6. 'for' → logprob: -6.4200897216796875
    7. ' ' → logprob: -7.6700897216796875
    8. '][' → logprob: -9.045089721679688
    9. ']]' → logprob: -9.670089721679688
    10. ']*(' → logprob: -9.670089721679688

Token 8: '37' (ID: 2991)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2931601107120514
    2. '101' → logprob: -1.418160080909729
    3. '10' → logprob: -5.4181599617004395
    4. '(' → logprob: -5.6681599617004395
    5. '501' → logprob: -7.0431599617004395
    6. '11' → logprob: -7.1681599617004395
    7. '51' → logprob: -7.7931599617004395
    8. '102' → logprob: -7.7931599617004395
    9. '500' → logprob: -8.418160438537598
    10. ' ' → logprob: -8.668160438537598

Token 9: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05535520613193512
    2. 'for' → logprob: -2.9303553104400635
    3. ']' → logprob: -7.805355072021484
    4. '0' → logprob: -10.805355072021484
    5. ' ]' → logprob: -11.305355072021484
    6. '	for' → logprob: -11.680355072021484
    7. ' ' → logprob: -11.805355072021484
    8. '[' → logprob: -12.430355072021484
    9. ')' → logprob: -12.680355072021484
    10. '```' → logprob: -13.055355072021484

Token 10: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0028665661811828613
    2. ' _' → logprob: -5.877866744995117
    3. '_' → logprob: -10.627866744995117
    4. ' i' → logprob: -11.002866744995117
    5. 'range' → logprob: -11.127866744995117
    6. ' ' → logprob: -12.377866744995117
    7. '_range' → logprob: -13.877866744995117
    8. ' xrange' → logprob: -14.627866744995117
    9. '	range' → logprob: -15.627866744995117
    10. '(range' → logprob: -16.127866744995117

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005277725285850465
    2. 'in' → logprob: -7.625527858734131
    3. ' ' → logprob: -10.375527381896973
    4. 'range' → logprob: -12.750527381896973
    5. ' _' → logprob: -13.000527381896973
    6. '  ' → logprob: -14.125527381896973
    7. '	in' → logprob: -14.250527381896973
    8. ' i' → logprob: -14.625527381896973
    9. '(' → logprob: -15.000527381896973
    10. 'import' → logprob: -15.750527381896973

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602262556552887
    2. 'range' → logprob: -1.9102262258529663
    3. ' ' → logprob: -14.285225868225098
    4. '[' → logprob: -14.410225868225098
    5. '(range' → logprob: -15.285225868225098
    6. 'Range' → logprob: -15.410225868225098
    7. '_range' → logprob: -16.285226821899414
    8. '	range' → logprob: -16.410226821899414
    9. 'r' → logprob: -16.660226821899414
    10. '```' → logprob: -16.785226821899414

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002284310758113861
    2. '37' → logprob: -6.377284526824951
    3. ' (' → logprob: -8.002284049987793
    4. '40' → logprob: -9.252284049987793
    5. '36' → logprob: -10.002284049987793
    6. '38' → logprob: -10.377284049987793
    7. '35' → logprob: -11.502284049987793
    8. '39' → logprob: -11.627284049987793
    9. ' ' → logprob: -11.877284049987793
    10. '(n' → logprob: -12.002284049987793

Token 14: '5' (ID: 20)
  Prédit: '37'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '37' → logprob: -0.708449125289917
    2. '38' → logprob: -0.708449125289917
    3. '10' → logprob: -5.833449363708496
    4. '100' → logprob: -6.458449363708496
    5. '11' → logprob: -6.958449363708496
    6. '7' → logprob: -7.083449363708496
    7. ' ' → logprob: -7.333449363708496
    8. '2' → logprob: -7.458449363708496
    9. '3' → logprob: -7.458449363708496
    10. '5' → logprob: -7.708449363708496

Token 15: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011784763046307489
    2. ' )' → logprob: -9.125118255615234
    3. ')' → logprob: -13.375118255615234
    4. ')])' → logprob: -13.625118255615234
    5. ' ]' → logprob: -13.750118255615234
    6. ')],' → logprob: -13.875118255615234
    7. ')][' → logprob: -14.125118255615234
    8. '```' → logprob: -14.250118255615234
    9. ']' → logprob: -14.875118255615234
    10. '])]' → logprob: -15.000118255615234

Token 16: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.057441890239715576
    2. 'for' → logprob: -3.0574419498443604
    3. ']' → logprob: -5.682441711425781
    4. '#' → logprob: -5.932441711425781
    5. '[' → logprob: -6.307441711425781
    6. 'n' → logprob: -8.807441711425781
    7. ' for' → logprob: -9.057441711425781
    8. 'import' → logprob: -9.307441711425781
    9. '.' → logprob: -10.057441711425781
    10. '\' → logprob: -10.057441711425781

Token 17: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016158436483237892
    2. '\[' → logprob: -9.875161170959473
    3. '<|end|>' → logprob: -10.125161170959473
    4. '```' → logprob: -10.750161170959473
    5. ']' → logprob: -11.125161170959473
    6. '[]' → logprob: -11.500161170959473
    7. '[user' → logprob: -12.500161170959473
    8. '[-' → logprob: -12.500161170959473
    9. '[len' → logprob: -13.125161170959473
    10. '\' → logprob: -13.250161170959473

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002932750794570893
    2. '4' → logprob: -9.125293731689453
    3. '1' → logprob: -9.500293731689453
    4. '3' → logprob: -9.875293731689453
    5. ' ' → logprob: -10.375293731689453
    6. '][' → logprob: -11.000293731689453
    7. '2' → logprob: -12.000293731689453
    8. '[' → logprob: -13.250293731689453
    9. ']' → logprob: -13.625293731689453
    10. '-' → logprob: -14.875293731689453

Token 19: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006784758996218443
    2. '[' → logprob: -5.506784915924072
    3. ']' → logprob: -6.006784915924072
    4. ' ][' → logprob: -8.381784439086914
    5. '][]' → logprob: -11.881784439086914
    6. '][-' → logprob: -13.506784439086914
    7. ' ]' → logprob: -13.881784439086914
    8. ' [' → logprob: -15.256784439086914
    9. '][:' → logprob: -15.256784439086914
    10. '```' → logprob: -15.506784439086914

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02453644387423992
    2. '1' → logprob: -3.774536371231079
    3. '36' → logprob: -7.399536609649658
    4. '18' → logprob: -8.3995361328125
    5. '3' → logprob: -8.6495361328125
    6. ' ' → logprob: -9.8995361328125
    7. '2' → logprob: -10.0245361328125
    8. '10' → logprob: -10.7745361328125
    9. '19' → logprob: -11.0870361328125
    10. '6' → logprob: -11.0870361328125

Token 21: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00867945421487093
    2. ' ]' → logprob: -4.758679389953613
    3. ']+=' → logprob: -9.883679389953613
    4. '+' → logprob: -12.008679389953613
    5. ']=' → logprob: -12.383679389953613
    6. '+]' → logprob: -13.758679389953613
    7. ']+' → logprob: -14.258679389953613
    8. ']==' → logprob: -14.633679389953613
    9. ' +=' → logprob: -15.133679389953613
    10. '=' → logprob: -15.133679389953613

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22551937401294708
    2. ' =' → logprob: -1.6005194187164307
    3. ' +=' → logprob: -9.850519180297852
    4. '+=' → logprob: -10.475519180297852
    5. ']' → logprob: -11.475519180297852
    6. ' ' → logprob: -12.100519180297852
    7. '<|end|>' → logprob: -13.225519180297852
    8. '=True' → logprob: -13.350519180297852
    9. ' |=' → logprob: -13.850519180297852
    10. ',' → logprob: -13.850519180297852

Token 23: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007227989844977856
    2. '0' → logprob: -7.375722885131836
    3. ' ' → logprob: -9.750722885131836
    4. '-' → logprob: -10.875722885131836
    5. 'True' → logprob: -12.125722885131836
    6. '2' → logprob: -12.875722885131836
    7. '100' → logprob: -13.250722885131836
    8. '3' → logprob: -13.250722885131836
    9. '10' → logprob: -14.000722885131836
    10. '7' → logprob: -14.000722885131836

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. '0' → logprob: -8.625203132629395
    3. 'True' → logprob: -11.500203132629395
    4. '-' → logprob: -12.000203132629395
    5. ' ' → logprob: -13.000203132629395
    6. '2' → logprob: -13.750203132629395
    7. '3' → logprob: -13.750203132629395
    8. '100' → logprob: -14.500203132629395
    9. '7' → logprob: -14.937703132629395
    10. '9' → logprob: -15.187703132629395

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.60008704662323
    2. 'for' → logprob: -1.47508704662323
    3. '' → logprob: -2.7250871658325195
    4. ' for' → logprob: -2.9750871658325195
    5. '\n' → logprob: -3.7250871658325195
    6. '\' → logprob: -3.8500871658325195
    7. ' ' → logprob: -3.8500871658325195
    8. '#' → logprob: -4.6000871658325195
    9. ' 
' → logprob: -4.6000871658325195
    10. 'newline' → logprob: -5.8500871658325195

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13964761793613434
    2. '
' → logprob: -3.0146477222442627
    3. ' for' → logprob: -3.1396477222442627
    4. '#' → logprob: -5.014647483825684
    5. '\n' → logprob: -5.014647483825684
    6. '' → logprob: -5.014647483825684
    7. '\' → logprob: -5.764647483825684
    8. ' 
' → logprob: -5.764647483825684
    9. '.' → logprob: -5.889647483825684
    10. '+' → logprob: -6.139647483825684

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006709686014801264
    2. 'i' → logprob: -5.881709575653076
    3. ' ' → logprob: -6.006709575653076
    4. '_' → logprob: -7.131709575653076
    5. ' _' → logprob: -7.381709575653076
    6. ' space' → logprob: -13.256710052490234
    7. '  ' → logprob: -13.881710052490234
    8. ' a' → logprob: -13.881710052490234
    9. ' ' → logprob: -13.881710052490234
    10. ' s' → logprob: -14.256710052490234

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010393849574029446
    2. 'in' → logprob: -4.6353936195373535
    3. ' ' → logprob: -7.3853936195373535
    4. ' i' → logprob: -12.260394096374512
    5. '1' → logprob: -13.010394096374512
    6. '+' → logprob: -13.260394096374512
    7. 'n' → logprob: -13.510394096374512
    8. '0' → logprob: -13.760394096374512
    9. '	in' → logprob: -14.260394096374512
    10. 's' → logprob: -14.385394096374512

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026301342993974686
    2. 'range' → logprob: -3.651301383972168
    3. ' ' → logprob: -14.276301383972168
    4. '(range' → logprob: -15.901301383972168
    5. '	range' → logprob: -16.15130043029785
    6. ' xrange' → logprob: -16.90130043029785
    7. '[' → logprob: -17.52630043029785
    8. ' ' → logprob: -18.15130043029785
    9. '  ' → logprob: -18.52630043029785
    10. '```' → logprob: -18.65130043029785

Token 30: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3902033970225602e-05
    2. ' (' → logprob: -11.250014305114746
    3. '1' → logprob: -14.875014305114746
    4. '4' → logprob: -15.875014305114746
    5. '(
' → logprob: -15.875014305114746
    6. '(len' → logprob: -16.12501335144043
    7. ' ' → logprob: -16.37501335144043
    8. '3' → logprob: -17.87501335144043
    9. '6' → logprob: -18.00001335144043
    10. '5' → logprob: -18.00001335144043

Token 31: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4864402711391449
    2. '1' → logprob: -0.9864403009414673
    3. '4' → logprob: -4.861440181732178
    4. ' ' → logprob: -6.236440181732178
    5. '37' → logprob: -6.236440181732178
    6. '3' → logprob: -8.611440658569336
    7. '2' → logprob: -8.861440658569336
    8. '10' → logprob: -9.236440658569336
    9. '36' → logprob: -9.486440658569336
    10. '0' → logprob: -10.611440658569336

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8284080624580383
    2. ' ,' → logprob: -0.8284080624580383
    3. ' ' → logprob: -2.8284080028533936
    4. '5' → logprob: -2.8284080028533936
    5. '7' → logprob: -5.703408241271973
    6. '36' → logprob: -6.328408241271973
    7. '4' → logprob: -7.078408241271973
    8. '6' → logprob: -7.203408241271973
    9. '0' → logprob: -8.328408241271973
    10. '1' → logprob: -8.328408241271973

Token 33: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.03742135688662529
    2. '37' → logprob: -3.787421464920044
    3. ' ' → logprob: -4.287421226501465
    4. '6' → logprob: -8.787421226501465
    5. '4' → logprob: -9.537421226501465
    6. '10' → logprob: -10.287421226501465
    7. '36' → logprob: -10.662421226501465
    8. '3' → logprob: -11.537421226501465
    9. '38' → logprob: -11.787421226501465
    10. '```' → logprob: -12.349921226501465

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004486969672143459
    2. ' ):' → logprob: -5.754487037658691
    3. ')' → logprob: -6.879487037658691
    4. ':' → logprob: -8.379487037658691
    5. '):
' → logprob: -10.254487037658691
    6. ',' → logprob: -12.004487037658691
    7. '+' → logprob: -12.504487037658691
    8. ' )' → logprob: -13.379487037658691
    9. ']:' → logprob: -13.754487037658691
    10. ' :' → logprob: -14.379487037658691

Token 35: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21843168139457703
    2. ' ' → logprob: -1.7184317111968994
    3. 'for' → logprob: -4.34343147277832
    4. '    ' → logprob: -6.21843147277832
    5. '   ' → logprob: -7.09343147277832
    6. '	for' → logprob: -7.34343147277832
    7. ' ' → logprob: -8.84343147277832
    8. ' dp' → logprob: -9.59343147277832
    9. '<|end|>' → logprob: -10.84343147277832
    10. 'space' → logprob: -10.96843147277832

Token 36: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0338236540555954
    2. 'for' (adapté à ' for') → logprob: -3.4088237285614014
    3. '   ' → logprob: -8.78382396697998
    4. ' ' → logprob: -11.53382396697998
    5. '	for' → logprob: -12.15882396697998
    6. '    ' → logprob: -12.28382396697998
    7. ' dp' → logprob: -13.15882396697998
    8. ' range' → logprob: -13.90882396697998
    9. 'dp' → logprob: -14.72132396697998
    10. '```' → logprob: -15.34632396697998

Token 37: ' s' (ID: 265)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1269834339618683
    2. 'j' → logprob: -2.126983404159546
    3. ' w' → logprob: -11.501983642578125
    4. ' ' → logprob: -11.876983642578125
    5. ' x' → logprob: -12.001983642578125
    6. 'x' → logprob: -12.376983642578125
    7. 'w' → logprob: -12.876983642578125
    8. 'd' → logprob: -12.876983642578125
    9. ' s' → logprob: -13.001983642578125
    10. ' k' → logprob: -13.126983642578125

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00010819212911883369
    2. 'in' → logprob: -9.625107765197754
    3. ' ' → logprob: -10.125107765197754
    4. 'n' → logprob: -14.750107765197754
    5. 's' → logprob: -15.250107765197754
    6. ' ' → logprob: -15.250107765197754
    7. '```' → logprob: -16.12510871887207
    8. '	in' → logprob: -16.25010871887207
    9. '<|end|>' → logprob: -16.37510871887207
    10. ')' → logprob: -16.50010871887207

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0485910028219223
    2. ' range' → logprob: -3.048590898513794
    3. '(range' → logprob: -12.798590660095215
    4. '	range' → logprob: -14.548590660095215
    5. '[' → logprob: -16.04859161376953
    6. 'ange' → logprob: -16.54859161376953
    7. ' ' → logprob: -16.92359161376953
    8. ')' → logprob: -17.04859161376953
    9. '   ' → logprob: -17.67359161376953
    10. '.range' → logprob: -17.92359161376953

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.2855416066013277e-05
    2. '37' → logprob: -10.375032424926758
    3. '(i' → logprob: -14.250032424926758
    4. ' (' → logprob: -14.750032424926758
    5. ')' → logprob: -15.875032424926758
    6. '((' → logprob: -15.875032424926758
    7. '(len' → logprob: -16.375032424926758
    8. '36' → logprob: -17.250032424926758
    9. '(s' → logprob: -17.375032424926758
    10. '(-' → logprob: -17.375032424926758

Token 41: '37' (ID: 2991)
  Prédit: '37'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '37' → logprob: -0.0037845235783606768
    2. '38' → logprob: -6.128784656524658
    3. '0' → logprob: -7.003784656524658
    4. '1' → logprob: -8.0037841796875
    5. 'i' → logprob: -9.2537841796875
    6. '(' → logprob: -9.3787841796875
    7. ' ' → logprob: -9.5037841796875
    8. '36' → logprob: -10.6287841796875
    9. '31' → logprob: -11.2537841796875
    10. 'min' → logprob: -11.3787841796875

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003490514063742012
    2. '):
' → logprob: -8.250349044799805
    3. ' ):' → logprob: -9.500349044799805
    4. ')' → logprob: -11.750349044799805
    5. ':' → logprob: -13.500349044799805
    6. '   ' → logprob: -13.625349044799805
    7. '+' → logprob: -13.875349044799805
    8. ']:' → logprob: -14.125349044799805
    9. '):
' → logprob: -15.500349044799805
    10. ']):' → logprob: -16.125349044799805

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00383119098842144
    2. ' dp' → logprob: -6.503831386566162
    3. '    ' → logprob: -7.128831386566162
    4. ' for' → logprob: -7.503831386566162
    5. 'dp' → logprob: -7.628831386566162
    6. '        ' → logprob: -8.378830909729004
    7. ' if' → logprob: -9.003830909729004
    8. '   ' → logprob: -9.753830909729004
    9. ' ' → logprob: -11.628830909729004
    10. 'if' → logprob: -11.753830909729004

Token 44: ' for' (ID: 395)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5228021144866943
    2. ' for' → logprob: -1.6478021144866943
    3. ' if' → logprob: -2.1478021144866943
    4. 'dp' → logprob: -2.6478021144866943
    5. 'for' (adapté à ' for') → logprob: -4.397802352905273
    6. 'if' → logprob: -4.772802352905273
    7. '    ' → logprob: -5.647802352905273
    8. '   ' → logprob: -6.147802352905273
    9. '       ' → logprob: -7.647802352905273
    10. ' ' → logprob: -10.022802352905273

Token 45: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8534152507781982
    2. ' j' → logprob: -1.9784152507781982
    3. ' v' → logprob: -2.3534152507781982
    4. ' d' → logprob: -2.6034152507781982
    5. 'k' → logprob: -2.8534152507781982
    6. ' x' → logprob: -2.8534152507781982
    7. ' t' → logprob: -3.3534152507781982
    8. 'd' → logprob: -3.9784152507781982
    9. 'j' → logprob: -4.103415489196777
    10. 'v' → logprob: -4.228415489196777

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02054772712290287
    2. 'in' → logprob: -3.89554762840271
    3. ' ' → logprob: -13.395547866821289
    4. '	in' → logprob: -13.895547866821289
    5. '0' → logprob: -14.020547866821289
    6. '1' → logprob: -14.395547866821289
    7. 'k' → logprob: -14.895547866821289
    8. 's' → logprob: -15.270547866821289
    9. 'import' → logprob: -15.395547866821289
    10. '_in' → logprob: -15.520547866821289

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.021537937223911285
    2. 'range' → logprob: -3.896538019180298
    3. '[' → logprob: -7.521537780761719
    4. ' ' → logprob: -8.521537780761719
    5. ' [' → logprob: -8.646537780761719
    6. '(range' → logprob: -10.146537780761719
    7. '(' → logprob: -11.896537780761719
    8. '1' → logprob: -12.146537780761719
    9. '0' → logprob: -12.396537780761719
    10. '   ' → logprob: -12.646537780761719

Token 48: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09506412595510483
    2. '(s' → logprob: -2.470064163208008
    3. '1' → logprob: -5.845064163208008
    4. '(min' → logprob: -6.720064163208008
    5. '(i' → logprob: -7.970064163208008
    6. '0' → logprob: -7.970064163208008
    7. '7' → logprob: -8.095064163208008
    8. '(k' → logprob: -8.595064163208008
    9. '6' → logprob: -8.845064163208008
    10. '10' → logprob: -9.095064163208008

Token 49: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.297119140625
    2. '0' → logprob: -1.672119140625
    3. '1' → logprob: -1.922119140625
    4. 's' → logprob: -2.547119140625
    5. 'min' → logprob: -2.797119140625
    6. '37' → logprob: -2.922119140625
    7. '5' → logprob: -3.047119140625
    8. '4' → logprob: -3.047119140625
    9. '7' → logprob: -3.547119140625
    10. '6' → logprob: -3.547119140625

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05122191831469536
    2. '):
' → logprob: -3.3012218475341797
    3. '+' → logprob: -4.92622184753418
    4. ' ):' → logprob: -5.42622184753418
    5. ':' → logprob: -8.05122184753418
    6. ' ):
' → logprob: -8.05122184753418
    7. 'if' → logprob: -8.42622184753418
    8. ' if' → logprob: -8.42622184753418
    9. ')' → logprob: -8.55122184753418
    10. '       ' → logprob: -10.17622184753418

Token 51: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3555537462234497
    2. '<|end|>' → logprob: -1.3555537462234497
    3. ' ' → logprob: -4.10555362701416
    4. '        ' → logprob: -5.60555362701416
    5. ' if' → logprob: -5.60555362701416
    6. '            ' → logprob: -5.60555362701416
    7. '<|end|>' → logprob: -5.73055362701416
    8. ':' → logprob: -5.73055362701416
    9. '               ' → logprob: -6.23055362701416
    10. '       ' → logprob: -6.60555362701416

Token 52: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.70701664686203
    2. '               ' → logprob: -1.2070167064666748
    3. '                ' → logprob: -2.707016706466675
    4. ' if' → logprob: -2.832016706466675
    5. '           ' → logprob: -3.332016706466675
    6. '            ' → logprob: -3.832016706466675
    7. '<|end|>' → logprob: -4.207016468048096
    8. ' 
' → logprob: -5.582016468048096
    9. '                               ' → logprob: -7.082016468048096
    10. '        ' → logprob: -7.457016468048096

Token 53: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04866163060069084
    2. 's' → logprob: -3.048661708831787
    3. ' k' → logprob: -10.173661231994629
    4. ' ' → logprob: -11.048661231994629
    5. ' dp' → logprob: -11.923661231994629
    6. 'k' → logprob: -12.298661231994629
    7. ' i' → logprob: -13.423661231994629
    8. '(s' → logprob: -13.798661231994629
    9. ' ' → logprob: -13.798661231994629
    10. '   ' → logprob: -14.048661231994629

Token 54: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7967631816864014
    2. '>=' → logprob: -0.7967631816864014
    3. '-k' → logprob: -3.1717631816864014
    4. ' -' → logprob: -3.4217631816864014
    5. ' >=' → logprob: -3.9217631816864014
    6. '+' → logprob: -5.6717634201049805
    7. '+k' → logprob: -7.5467634201049805
    8. ' +' → logprob: -10.54676342010498
    9. ']>=' → logprob: -11.17176342010498
    10. ')>=' → logprob: -11.67176342010498

Token 55: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0021852378267794847
    2. ' k' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.377185821533203
    4. ' ' → logprob: -17.127185821533203
    5. '	k' → logprob: -17.252185821533203
    6. '           ' → logprob: -18.127185821533203
    7. '  ' → logprob: -18.752185821533203
    8. '    ' → logprob: -19.002185821533203
    9. '{k' → logprob: -20.127185821533203
    10. '[k' → logprob: -20.127185821533203

Token 56: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6936320662498474
    2. '>=' → logprob: -0.6936320662498474
    3. ']>=' → logprob: -7.943632125854492
    4. ')>=' → logprob: -9.068632125854492
    5. ' ' → logprob: -12.193632125854492
    6. ')' → logprob: -12.818632125854492
    7. '>' → logprob: -13.068632125854492
    8. '[' → logprob: -13.193632125854492
    9. '">' → logprob: -14.568632125854492
    10. '0' → logprob: -14.943632125854492

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '۰' → logprob: -16.500295639038086
    4. '  ' → logprob: -17.812795639038086
    5. '０' → logprob: -18.062795639038086
    6. '   ' → logprob: -18.187795639038086
    7. '```' → logprob: -18.250295639038086
    8. '00' → logprob: -18.750295639038086
    9. '000' → logprob: -18.812795639038086
    10. '০' → logprob: -18.875295639038086

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '۰' → logprob: -18.25
    4. '00' → logprob: -19.25
    5. '０' → logprob: -19.875
    6. '000' → logprob: -20.125
    7. '০' → logprob: -20.25
    8. '```' → logprob: -20.625
    9. '   ' → logprob: -21.0
    10. '  ' → logprob: -21.125

Token 59: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6428415179252625
    2. ':' → logprob: -0.7678415179252625
    3. ':
' → logprob: -5.142841339111328
    4. 'and' → logprob: -5.892841339111328
    5. '               ' → logprob: -6.892841339111328
    6. '           ' → logprob: -7.642841339111328
    7. ' :' → logprob: -10.642841339111328
    8. '<|end|>' → logprob: -11.392841339111328
    9. ':

' → logprob: -11.517841339111328
    10. '                       ' → logprob: -11.892841339111328

Token 60: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11883371323347092
    2. ' and' → logprob: -2.2438337802886963
    3. ' dp' → logprob: -5.618833541870117
    4. ':' → logprob: -6.868833541870117
    5. '           ' → logprob: -7.868833541870117
    6. '<|end|>' → logprob: -8.118833541870117
    7. 'dp' → logprob: -8.618833541870117
    8. ':
' → logprob: -9.368833541870117
    9. '```' → logprob: -9.868833541870117
    10. 'and' → logprob: -10.118833541870117

Token 61: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.03977986052632332
    2. 'dp' (adapté à ' dp') → logprob: -3.5397799015045166
    3. '                   ' → logprob: -4.6647796630859375
    4. '               ' → logprob: -8.539779663085938
    5. '	dp' → logprob: -9.289779663085938
    6. '                ' → logprob: -9.664779663085938
    7. '(dp' → logprob: -9.664779663085938
    8. ' ' → logprob: -10.289779663085938
    9. '                    ' → logprob: -10.664779663085938
    10. '<|end|>' → logprob: -11.289779663085938

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[I' → logprob: -13.750001907348633
    3. '[' → logprob: -14.625001907348633
    4. '```' → logprob: -17.000001907348633
    5. 'i' → logprob: -18.125001907348633
    6. '[s' → logprob: -18.250001907348633
    7. '[int' → logprob: -18.375001907348633
    8. '[k' → logprob: -18.625001907348633
    9. ' [' → logprob: -18.875001907348633
    10. '[ip' → logprob: -18.875001907348633

Token 63: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002171555068343878
    2. '-' → logprob: -6.252171516418457
    3. '[s' → logprob: -9.127171516418457
    4. '[i' → logprob: -9.627171516418457
    5. ']' → logprob: -10.752171516418457
    6. ' ][' → logprob: -11.127171516418457
    7. '[' → logprob: -11.377171516418457
    8. '"][' → logprob: -12.127171516418457
    9. ' -' → logprob: -12.127171516418457
    10. 's' → logprob: -12.877171516418457

Token 64: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.339278580620885e-06
    2. ' s' → logprob: -13.000001907348633
    3. '[s' → logprob: -17.875001907348633
    4. '(s' → logprob: -19.125001907348633
    5. '`s' → logprob: -19.625001907348633
    6. '_s' → logprob: -20.375001907348633
    7. ']' → logprob: -20.625001907348633
    8. '   ' → logprob: -20.625001907348633
    9. '<s' → logprob: -20.750001907348633
    10. '][' → logprob: -21.125001907348633

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011977284448221326
    2. ']+=' → logprob: -6.751197814941406
    3. ' ]' → logprob: -11.126197814941406
    4. '[' → logprob: -11.626197814941406
    5. ']+' → logprob: -13.751197814941406
    6. '-' → logprob: -14.126197814941406
    7. '`]' → logprob: -14.501197814941406
    8. '"]' → logprob: -14.876197814941406
    9. ']]' → logprob: -14.876197814941406
    10. '']' → logprob: -14.876197814941406

Token 66: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07902506738901138
    2. ' +=' → logprob: -2.5790250301361084
    3. '=' → logprob: -9.329025268554688
    4. ']+=' → logprob: -10.204025268554688
    5. '|' → logprob: -12.704025268554688
    6. '+' → logprob: -13.329025268554688
    7. ' |=' → logprob: -13.329025268554688
    8. ' =' → logprob: -13.579025268554688
    9. '+=(' → logprob: -13.954025268554688
    10. '```' → logprob: -14.954025268554688

Token 67: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007099286303855479
    2. ' dp' → logprob: -7.2507100105285645
    3. '	dp' → logprob: -17.375709533691406
    4. '(dp' → logprob: -20.000709533691406
    5. '               ' → logprob: -20.500709533691406
    6. ' ' → logprob: -21.125709533691406
    7. '_dp' → logprob: -21.250709533691406
    8. '           ' → logprob: -21.375709533691406
    9. 'df' → logprob: -21.750709533691406
    10. 'd' → logprob: -21.750709533691406

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. 'i' → logprob: -12.375004768371582
    3. '```' → logprob: -16.250003814697266
    4. '[I' → logprob: -16.875003814697266
    5. '[' → logprob: -17.375003814697266
    6. '{i' → logprob: -18.375003814697266
    7. '[
' → logprob: -19.000003814697266
    8. 's' → logprob: -19.125003814697266
    9. '\[' → logprob: -19.250003814697266
    10. '(i' → logprob: -19.375003814697266

Token 69: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000743399141356349
    2. '[i' → logprob: -7.625743389129639
    3. ' -' → logprob: -8.375743865966797
    4. '[' → logprob: -11.000743865966797
    5. 'i' → logprob: -12.250743865966797
    6. '1' → logprob: -13.500743865966797
    7. '[-' → logprob: -13.625743865966797
    8. ' ' → logprob: -15.500743865966797
    9. '-i' → logprob: -16.375743865966797
    10. '[I' → logprob: -16.500743865966797

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. 's' → logprob: -18.125
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -18.375
    6. '][' → logprob: -18.875
    7. '       ' → logprob: -19.5
    8. ']' → logprob: -19.625
    9. '           ' → logprob: -19.75
    10. '[' → logprob: -20.0

Token 71: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008671891875565052
    2. '[s' → logprob: -4.758671760559082
    3. ']' → logprob: -10.383671760559082
    4. '[' → logprob: -11.133671760559082
    5. ' ][' → logprob: -12.008671760559082
    6. 's' → logprob: -12.633671760559082
    7. '"][' → logprob: -13.633671760559082
    8. '(s' → logprob: -14.508671760559082
    9. ''][' → logprob: -14.883671760559082
    10. ']][' → logprob: -15.883671760559082

Token 72: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008111746865324676
    2. ' s' → logprob: -7.1258111000061035
    3. '(s' → logprob: -12.500811576843262
    4. '[s' → logprob: -13.000811576843262
    5. '`s' → logprob: -15.250811576843262
    6. '][' → logprob: -16.000810623168945
    7. '   ' → logprob: -16.000810623168945
    8. ' ' → logprob: -16.125810623168945
    9. '{s' → logprob: -16.250810623168945
    10. '	s' → logprob: -17.750810623168945

Token 73: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.6381857991218567
    2. '-' → logprob: -1.138185739517212
    3. ' -' → logprob: -1.888185739517212
    4. ' ' → logprob: -12.763185501098633
    5. '-
' → logprob: -15.263185501098633
    6. '-n' → logprob: -15.513185501098633
    7. '   ' → logprob: -16.138185501098633
    8. '-python' → logprob: -16.388185501098633
    9. '-token' → logprob: -16.388185501098633
    10. '-v' → logprob: -16.638185501098633

Token 74: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4259644558478612e-05
    2. ' ]' → logprob: -11.500014305114746
    3. ']
' → logprob: -12.875014305114746
    4. ')' → logprob: -15.000014305114746
    5. ']

' → logprob: -15.250014305114746
    6. '']' → logprob: -15.750014305114746
    7. '<|end|>' → logprob: -16.12501335144043
    8. ')]' → logprob: -16.25001335144043
    9. ']]' → logprob: -16.37501335144043
    10. ']
' → logprob: -16.37501335144043

Token 75: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6863105893135071
    2. ' ' → logprob: -1.9363105297088623
    3. '\n' → logprob: -2.3113105297088623
    4. '
' → logprob: -2.8113105297088623
    5. 'print' → logprob: -3.1863105297088623
    6. '%' → logprob: -3.4363105297088623
    7. '<|end|>' → logprob: -3.4363105297088623
    8. '0' → logprob: -4.061310768127441
    9. '#' → logprob: -4.311310768127441
    10. '```' → logprob: -4.686310768127441

Token 76: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7817251086235046
    2. 'i' → logprob: -1.4067251682281494
    3. ' s' → logprob: -1.4067251682281494
    4. 's' → logprob: -3.0317251682281494
    5. ' ' → logprob: -6.65672492980957
    6. '_' → logprob: -6.90672492980957
    7. ' _' → logprob: -7.15672492980957
    8. '_i' → logprob: -7.90672492980957
    9. '_s' → logprob: -8.53172492980957
    10. ' in' → logprob: -9.59422492980957

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03816576674580574
    2. 'in' → logprob: -3.288165807723999
    3. '_in' → logprob: -10.288166046142578
    4. 's' → logprob: -10.663166046142578
    5. '[' → logprob: -11.038166046142578
    6. ' ' → logprob: -11.413166046142578
    7. '<|end|>' → logprob: -12.038166046142578
    8. '_' → logprob: -12.413166046142578
    9. '	in' → logprob: -12.538166046142578
    10. '(' → logprob: -12.788166046142578

Token 78: ' sys' (ID: 12228)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002675895346328616
    2. ' dp' → logprob: -6.377676010131836
    3. 'range' → logprob: -7.002676010131836
    4. ' range' → logprob: -9.752676010131836
    5. '(dp' → logprob: -12.627676010131836
    6. '[' → logprob: -14.252676010131836
    7. 'd' → logprob: -14.252676010131836
    8. 'sys' → logprob: -15.127676010131836
    9. 'print' → logprob: -15.502676010131836
    10. '	dp' → logprob: -15.752676010131836

Token 79: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002100298646837473
    2. 'stdin' → logprob: -6.377100467681885
    3. '.stdout' → logprob: -8.252099990844727
    4. '.argv' → logprob: -9.627099990844727
    5. 'in' → logprob: -10.502099990844727
    6. '.' → logprob: -11.127099990844727
    7. ' stdin' → logprob: -11.627099990844727
    8. '(stdin' → logprob: -12.127099990844727
    9. '.readline' → logprob: -12.377099990844727
    10. '.stderr' → logprob: -12.627099990844727

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.188575878739357
    2. '.readline' → logprob: -1.9385758638381958
    3. ' in' → logprob: -4.188575744628906
    4. 'in' → logprob: -4.813575744628906
    5. '.' → logprob: -6.563575744628906
    6. '.readlines' → logprob: -6.938575744628906
    7. 's' → logprob: -7.438575744628906
    8. '_' → logprob: -7.688575744628906
    9. '```' → logprob: -8.438575744628906
    10. ' readline' → logprob: -8.688575744628906

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022700242698192596
    2. ' s' → logprob: -4.897700309753418
    3. ' line' → logprob: -5.022700309753418
    4. 's' → logprob: -6.147700309753418
    5. ' input' → logprob: -6.897700309753418
    6. 'tokens' → logprob: -7.147700309753418
    7. ' tokens' → logprob: -7.397700309753418
    8. 'line' → logprob: -7.522700309753418
    9. '```' → logprob: -7.522700309753418
    10. ' for' → logprob: -7.897700309753418

Token 82: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.23417454957962036
    2. 'n' (adapté à ' n') → logprob: -1.7341744899749756
    3. ' s' → logprob: -3.7341744899749756
    4. 's' → logprob: -5.734174728393555
    5. '   ' → logprob: -6.234174728393555
    6. ' N' → logprob: -6.984174728393555
    7. 'N' → logprob: -7.984174728393555
    8. ' line' → logprob: -8.109174728393555
    9. ' x' → logprob: -8.359174728393555
    10. ' sum' → logprob: -8.734174728393555

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038228075951337814
    2. '=' → logprob: -3.2882280349731445
    3. '=int' → logprob: -9.038228034973145
    4. ',' → logprob: -9.788228034973145
    5. ' ' → logprob: -12.663228034973145
    6. ' =
' → logprob: -13.163228034973145
    7. ')' → logprob: -13.413228034973145
    8. '   ' → logprob: -14.038228034973145
    9. '  ' → logprob: -14.288228034973145
    10. ' ,' → logprob: -14.663228034973145

Token 84: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0355745330452919
    2. 'line' → logprob: -3.410574436187744
    3. ' int' → logprob: -6.285574436187744
    4. ' line' → logprob: -10.410574913024902
    5. 'len' → logprob: -10.535574913024902
    6. 'list' → logprob: -13.285574913024902
    7. '[int' → logprob: -13.660574913024902
    8. '   ' → logprob: -14.285574913024902
    9. ' ' → logprob: -14.285574913024902
    10. '(int' → logprob: -14.535574913024902

Token 85: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.004084216430783272
    2. '(' → logprob: -5.50408411026001
    3. ' (' → logprob: -12.754084587097168
    4. 'line' → logprob: -13.629084587097168
    5. '(
' → logprob: -14.879084587097168
    6. ' line' → logprob: -15.004084587097168
    7. '[line' → logprob: -15.629084587097168
    8. '=line' → logprob: -15.629084587097168
    9. '#line' → logprob: -16.00408363342285
    10. '()' → logprob: -16.00408363342285

Token 86: ')
' (ID: 446)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.1637660562992096
    2. ')' → logprob: -1.9137660264968872
    3. '.rstrip' → logprob: -5.663765907287598
    4. '.readline' → logprob: -10.913765907287598
    5. 'strip' → logprob: -11.038765907287598
    6. 'rstrip' → logprob: -11.538765907287598
    7. '[:-' → logprob: -11.663765907287598
    8. ' )' → logprob: -12.788765907287598
    9. '.split' → logprob: -13.038765907287598
    10. ')
' → logprob: -13.163765907287598

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8010515570640564
    2. ' if' → logprob: -1.9260516166687012
    3. '    
' → logprob: -2.551051616668701
    4. 'print' → logprob: -2.676051616668701
    5. '<|end|>' → logprob: -2.926051616668701
    6. '
' → logprob: -3.176051616668701
    7. '    ' → logprob: -3.176051616668701
    8. ' ' → logprob: -3.551051616668701
    9. '[' → logprob: -3.801051616668701
    10. 'if' → logprob: -4.051051616668701

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04295625537633896
    2. ' print' → logprob: -3.2929563522338867
    3. 'if' → logprob: -5.792956352233887
    4. ' if' → logprob: -7.292956352233887
    5. 'answer' → logprob: -8.292956352233887
    6. 's' → logprob: -8.917956352233887
    7. 'result' → logprob: -9.042956352233887
    8. 'res' → logprob: -9.167956352233887
    9. 'total' → logprob: -9.167956352233887
    10. '   ' → logprob: -9.292956352233887

Token 89: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.008688559755682945
    2. '(sum' → logprob: -5.508688449859619
    3. 'dp' → logprob: -5.758688449859619
    4. '(' → logprob: -6.633688449859619
    5. 'sum' → logprob: -9.508688926696777
    6. ' dp' → logprob: -10.633688926696777
    7. '(max' → logprob: -11.633688926696777
    8. '(s' → logprob: -12.383688926696777
    9. '((' → logprob: -12.758688926696777
    10. ' (' → logprob: -13.008688926696777

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011782010551542044
    2. '4' → logprob: -7.12617826461792
    3. '[-' → logprob: -8.501177787780762
    4. '[len' → logprob: -9.251177787780762
    5. '[n' → logprob: -9.876177787780762
    6. ')' → logprob: -11.251177787780762
    7. '][' → logprob: -12.751177787780762
    8. '[min' → logprob: -13.751177787780762
    9. ' [' → logprob: -14.251177787780762
    10. ']' → logprob: -14.251177787780762

Token 91: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0445127372804563e-05
    2. '-' → logprob: -12.25001049041748
    3. 'n' → logprob: -12.62501049041748
    4. '3' → logprob: -14.25001049041748
    5. '0' → logprob: -14.75001049041748
    6. ' ' → logprob: -15.00001049041748
    7. '1' → logprob: -15.12501049041748
    8. 'len' → logprob: -15.50001049041748
    9. '2' → logprob: -15.75001049041748
    10. '(' → logprob: -16.000009536743164

Token 92: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00020652047533076257
    2. ']' → logprob: -8.75020694732666
    3. '[n' → logprob: -10.12520694732666
    4. '[' → logprob: -12.50020694732666
    5. '"][' → logprob: -13.62520694732666
    6. '])' → logprob: -14.12520694732666
    7. ''][' → logprob: -14.50020694732666
    8. ' ][' → logprob: -14.62520694732666
    9. 'n' → logprob: -15.50020694732666
    10. '-' → logprob: -15.75020694732666

Token 93: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.4849443838757e-06
    2. ' n' → logprob: -12.375004768371582
    3. '36' → logprob: -15.875004768371582
    4. '9' → logprob: -17.000003814697266
    5. ')n' → logprob: -17.500003814697266
    6. '[n' → logprob: -17.625003814697266
    7. 'min' → logprob: -17.875003814697266
    8. '37' → logprob: -18.250003814697266
    9. '<n' → logprob: -19.125003814697266
    10. '	n' → logprob: -19.375003814697266

Token 94: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -8.613945101387799e-05
    2. ' ])' → logprob: -10.125085830688477
    3. ']' → logprob: -10.375085830688477
    4. ')' → logprob: -11.375085830688477
    5. ']])' → logprob: -13.875085830688477
    6. ')])' → logprob: -14.125085830688477
    7. '])
' → logprob: -14.125085830688477
    8. ''])' → logprob: -15.375085830688477
    9. ')]' → logprob: -15.500085830688477
    10. ']))' → logprob: -15.625085830688477

Token 95: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005326962564140558
    2. '])' → logprob: -5.255326747894287
    3. '))' → logprob: -9.505327224731445
    4. '})' → logprob: -12.130327224731445
    5. ')])' → logprob: -12.380327224731445
    6. ' )' → logprob: -12.880327224731445
    7. ')
' → logprob: -13.255327224731445
    8. ']' → logprob: -13.255327224731445
    9. ')]' → logprob: -14.130327224731445
    10. '`)' → logprob: -14.380327224731445

Token 96: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22829297184944153
    2. 'n' → logprob: -1.7282929420471191
    3. ' n' → logprob: -4.228292942047119
    4. ' ' → logprob: -4.478292942047119
    5. '37' → logprob: -7.728292942047119
    6. '36' → logprob: -8.978293418884277
    7. '<=' → logprob: -11.353293418884277
    8. '32' → logprob: -12.978293418884277
    9. '<n' → logprob: -13.103293418884277
    10. '(n' → logprob: -13.603293418884277

Token 97: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6220617294311523
    2. '<=' → logprob: -1.2470617294311523
    3. ' <' → logprob: -2.3720617294311523
    4. '<' → logprob: -2.4970617294311523
    5. '>=' → logprob: -9.372061729431152
    6. ' >=' → logprob: -10.122061729431152
    7. ' ' → logprob: -10.497061729431152
    8. '<len' → logprob: -10.997061729431152
    9. ']<=' → logprob: -11.747061729431152
    10. '<size' → logprob: -12.122061729431152

Token 98: ' ' (ID: 220)
  Prédit: '36'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '36' → logprob: -0.0019367238273844123
    2. ' ' → logprob: -6.251936912536621
    3. '32' → logprob: -13.126936912536621
    4. '   ' → logprob: -13.376936912536621
    5. '34' → logprob: -13.626936912536621
    6. '  ' → logprob: -13.876936912536621
    7. '35' → logprob: -14.251936912536621
    8. '33' → logprob: -14.626936912536621
    9. '37' → logprob: -14.751936912536621
    10. '366' → logprob: -15.001936912536621

Token 99: '36' (ID: 2636)
  Prédit: '36'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '36' → logprob: -1.8312570318812504e-05
    2. ' ' → logprob: -11.125018119812012
    3. '3' → logprob: -13.125018119812012
    4. '366' → logprob: -14.625018119812012
    5. '   ' → logprob: -15.250018119812012
    6. '37' → logprob: -15.250018119812012
    7. '  ' → logprob: -15.750018119812012
    8. '34' → logprob: -16.562519073486328
    9. '4' → logprob: -16.875019073486328
    10. '```' → logprob: -17.062519073486328

Token 100: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03804171830415726
    2. 'else' → logprob: -3.288041830062866
    3. '	else' → logprob: -15.788042068481445
    4. ')' → logprob: -16.038042068481445
    5. ' ' → logprob: -17.163042068481445
    6. ' ' → logprob: -18.163042068481445
    7. ' and' → logprob: -18.538042068481445
    8. ' )' → logprob: -18.788042068481445
    9. '_else' → logprob: -18.913042068481445
    10. '```' → logprob: -19.163042068481445

Token 101: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03386306390166283
    2. ' ' → logprob: -3.408863067626953
    3. ' dp' → logprob: -9.533863067626953
    4. 'dp' → logprob: -9.783863067626953
    5. ')' → logprob: -10.408863067626953
    6. ''' → logprob: -11.158863067626953
    7. '"' → logprob: -11.408863067626953
    8. '9' → logprob: -12.658863067626953
    9. ' ' → logprob: -12.721363067626953
    10. '(' → logprob: -12.783863067626953

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004725245293229818
    2. ' ' → logprob: -5.379725456237793
    3. 'dp' → logprob: -9.629725456237793
    4. ' dp' → logprob: -10.879725456237793
    5. '"' → logprob: -12.942225456237793
    6. ''' → logprob: -12.942225456237793
    7. '9' → logprob: -13.254725456237793
    8. '36' → logprob: -13.379725456237793
    9. '   ' → logprob: -13.692225456237793
    10. '1' → logprob: -13.754725456237793

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. '))' → logprob: -13.75000286102295
    3. '})' → logprob: -14.50000286102295
    4. ')
' → logprob: -15.25000286102295
    5. '`)' → logprob: -15.50000286102295
    6. '])' → logprob: -15.50000286102295
    7. ' )' → logprob: -16.000001907348633
    8. '）' → logprob: -17.500001907348633
    9. '')' → logprob: -17.750001907348633
    10. ')`' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 62.38%
Précision adaptée (1ère position): 63.37%
Précision (top 10): 91.09%
================================================================================
