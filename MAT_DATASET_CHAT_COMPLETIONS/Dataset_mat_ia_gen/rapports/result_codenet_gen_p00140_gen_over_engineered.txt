================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class BusStop:
    def __init__(self, number: int):
        self.number = number
        self.connected_forward = None
        self.connected_backward = None

    def __repr__(self):
        return f"BusStop({self.number})"

class CircularRoute:
    def __init__(self, stops):
        self.stops = stops
        n = len(stops)
        for i, stop in enumerate(stops):
            stop.connected_forward = stops[(i + 1) % n]
            stop.connected_backward = stops[(i - 1) % n]

    def shortest_path(self, start: BusStop, end: BusStop):
        if start == end:
            return [start.number]
        # Travel forwards
        path_fw = []
        current = start
        while True:
            path_fw.append(current.number)
            if current == end:
                break
            current = current.connected_forward
        # Travel backwards
        path_bw = []
        current = start
        while True:
            path_bw.append(current.number)
            if current == end:
                break
            current = current.connected_backward
        if len(path_fw) <= len(path_bw):
            return path_fw
        else:
            return path_bw

class LineSegment:
    def __init__(self, stops):
        self.stops = stops
        # Link stops in linear fashion
        for i in range(len(stops) -1):
            stops[i].connected_forward = stops[i+1]
            stops[i+1].connected_backward = stops[i]

    def path_forward(self, start: BusStop, end: BusStop):
        path = []
        current = start
        while True:
            path.append(current.number)
            if current == end:
                break
            current = current.connected_forward
        return path

    def path_backward(self, start: BusStop, end: BusStop):
        path = []
        current = start
        while True:
            path.append(current.number)
            if current == end:
                break
            current = current.connected_backward
        return path

    def shortest_path(self, start: BusStop, end: BusStop):
        # Check direction: forward if start < end
        # backward otherwise
        if start.number <= end.number:
            return self.path_forward(start,end)
        else:
            return self.path_backward(start,end)

class BusNetwork:
    def __init__(self):
        # Create all 10 stops
        self.stops = {i: BusStop(i) for i in range(10)}

        # Create main linear route from 0 to 5 with turnaround at 0
        linear_stops = [self.stops[i] for i in range(6)]
        self.linear_route = LineSegment(linear_stops)

        # Create circular route 5->6->7->8->9->5
        circular_stops = [self.stops[i] for i in range(5,10)]
        self.circular_route = CircularRoute(circular_stops)

        # Special handlings:
        # At stop 0: only turnaround, no backward stop
        self.stops[0].connected_forward = self.stops[1]
        self.stops[0].connected_backward = None

        # At stop 5: belongs to both linear and circular routes
        # For linear route 5 connected backward to 4
        # For circular route 5 connected forward to 6 and backward to 9
        # We will manage connections accordingly later as needed

    def get_route_for_trip(self, start_num: int, end_num: int):
        start = self.stops[start_num]
        end = self.stops[end_num]

        # Define range sets for areas:
        # Linear: 0-5
        # Circular: 5-9

        in_linear = lambda x: 0 <= x <=5
        in_circular = lambda x: 5 <= x <= 9

        # Cases

        # Case 0: both start and end in 0-5 (linear section)
        if in_linear(start_num) and in_linear(end_num):
            # From stops 1-5, both directions possible, choose shortest path on line
            # since line is linear, path forward or backward:
            # if start < end: go forward else backward
            path = self.linear_route.shortest_path(start, end)
            return path

        # Case 1: both start and end in 5-9 (circular section)
        elif in_circular(start_num) and in_circular(end_num):
            # shortest path on circular route
            path = self.circular_route.shortest_path(start, end)
            return path

        # Case 2: start in 0-5 and end in 5-9
        elif in_linear(start_num) and in_circular(end_num):
            # Need to pass through 5, switching from linear to circular at 5

            # From start to 5 on linear route
            path_to_5 = self.linear_route.shortest_path(start, self.stops[5])

            # From 5 to end on circular route
            path_5_to_end = self.circular_route.shortest_path(self.stops[5], end)

            # Concatenate but remove duplicate 5
            full_path = path_to_5 + path_5_to_end[1:]
            return full_path

        # Case 3: start in 5-9 and end in 0-5
        elif in_circular(start_num) and in_linear(end_num):
            # Need to pass through 5, switching from circular to linear at 5

            # From start to 5 on circular route
            path_start_to_5 = self.circular_route.shortest_path(start, self.stops[5])

            # From 5 to end on linear route
            path_5_to_end = self.linear_route.shortest_path(self.stops[5], end)

            # Combine removing duplicate 5
            full_path = path_start_to_5 + path_5_to_end[1:]
            return full_path

        else:
            raise ValueError("Invalid stop numbers")

def main():
    import sys
    input = sys.stdin.readline
    bus_network = BusNetwork()

    n = int(input())
    for _ in range(n):
        s, e = map(int, input().split())
        path = bus_network.get_route_for_trip(s, e)
        print(" ".join(map(str,path)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bus' (ID: 21332)
  → Token d'amorce (pas de prédiction)

Token 2: 'Stop' (ID: 13523)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027917763218283653
    2. '(' → logprob: -4.152917861938477
    3. '{' → logprob: -4.777917861938477
    4. '.' → logprob: -6.027917861938477
    5. ' {' → logprob: -7.277917861938477
    6. ' :' → logprob: -8.777917861938477
    7. '```' → logprob: -10.402917861938477
    8. ' ' → logprob: -10.527917861938477
    9. ' (' → logprob: -11.277917861938477
    10. '[' → logprob: -11.277917861938477

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03135626018047333
    2. '(' → logprob: -4.156356334686279
    3. '   ' → logprob: -4.531356334686279
    4. '```' → logprob: -5.781356334686279
    5. ':
' → logprob: -7.906356334686279
    6. ''' → logprob: -8.156355857849121
    7. '():' → logprob: -8.781355857849121
    8. ' :' → logprob: -9.156355857849121
    9. ' ' → logprob: -9.906355857849121
    10. '    ' → logprob: -10.156355857849121

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5923984050750732
    2. '    ' → logprob: -1.9673984050750732
    3. ' pass' → logprob: -1.9673984050750732
    4. '   ' → logprob: -2.4673984050750732
    5. ' def' → logprob: -3.0923984050750732
    6. 'pass' → logprob: -4.342398643493652
    7. '```' → logprob: -5.592398643493652
    8. '_' → logprob: -6.342398643493652
    9. '    
' → logprob: -6.717398643493652
    10. '\' → logprob: -6.717398643493652

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12938949465751648
    2. ' ' → logprob: -2.754389524459839
    3. '__' → logprob: -2.879389524459839
    4. ' init' → logprob: -7.12938928604126
    5. '  ' → logprob: -8.379389762878418
    6. ' ' → logprob: -8.629389762878418
    7. '_' → logprob: -9.504389762878418
    8. ' def' → logprob: -9.879389762878418
    9. '_init' → logprob: -10.754389762878418
    10. ' ___' → logprob: -10.754389762878418

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.988221684878226e-06
    2. ' init' → logprob: -12.000006675720215
    3. '_init' → logprob: -14.375006675720215
    4. 'ini' → logprob: -17.25000762939453
    5. '	init' → logprob: -17.50000762939453
    6. '_' → logprob: -19.25000762939453
    7. 'innit' → logprob: -20.12500762939453
    8. 'inite' → logprob: -20.25000762939453
    9. 'in' → logprob: -20.50000762939453
    10. 'int' → logprob: -20.62500762939453

Token 8: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04041306674480438
    2. '__(' → logprob: -3.9154131412506104
    3. '__' → logprob: -4.540412902832031
    4. '_' → logprob: -5.290412902832031
    5. ' (' → logprob: -6.165412902832031
    6. '__(
' → logprob: -7.165412902832031
    7. '<|end|>' → logprob: -8.665412902832031
    8. '_(' → logprob: -8.915412902832031
    9. '__((' → logprob: -9.040412902832031
    10. '```' → logprob: -9.165412902832031

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012015394167974591
    2. ' self' → logprob: -6.751201629638672
    3. '(self' → logprob: -10.626201629638672
    4. ')' → logprob: -12.376201629638672
    5. ' )' → logprob: -14.251201629638672
    6. 'bus' → logprob: -14.501201629638672
    7. ',self' → logprob: -14.501201629638672
    8. '_self' → logprob: -15.251201629638672
    9. '[self' → logprob: -16.001201629638672
    10. 's' → logprob: -16.251201629638672

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10069884359836578
    2. ')' → logprob: -3.225698947906494
    3. '(' → logprob: -3.725698947906494
    4. 'self' → logprob: -4.475698947906494
    5. '_' → logprob: -5.225698947906494
    6. ' ,' → logprob: -5.850698947906494
    7. ' ' → logprob: -5.975698947906494
    8. ' )' → logprob: -5.975698947906494
    9. '<|end|>' → logprob: -6.225698947906494
    10. '):' → logprob: -6.975698947906494

Token 11: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28820592164993286
    2. ' self' → logprob: -1.413205862045288
    3. ')' → logprob: -5.788206100463867
    4. ' )' → logprob: -6.413206100463867
    5. ' bus' → logprob: -6.538206100463867
    6. 'bus' → logprob: -8.288206100463867
    7. 'stop' → logprob: -8.663206100463867
    8. 'name' → logprob: -9.163206100463867
    9. ' stop' → logprob: -9.538206100463867
    10. 'location' → logprob: -9.913206100463867

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17285166680812836
    2. ',' → logprob: -1.9228516817092896
    3. ')' → logprob: -4.9228515625
    4. ':' → logprob: -5.4228515625
    5. '=' → logprob: -7.6728515625
    6. '):
' → logprob: -8.9228515625
    7. '_' → logprob: -9.0478515625
    8. ' ):' → logprob: -10.5478515625
    9. '   ' → logprob: -10.7978515625
    10. ' ,' → logprob: -10.7978515625

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759816765785217
    2. ' int' → logprob: -0.8259816765785217
    3. ')' → logprob: -11.575982093811035
    4. ' str' → logprob: -11.575982093811035
    5. ':int' → logprob: -11.700982093811035
    6. '=int' → logprob: -12.450982093811035
    7. ' )' → logprob: -12.825982093811035
    8. '(int' → logprob: -13.325982093811035
    9. '[int' → logprob: -13.325982093811035
    10. ' ' → logprob: -13.825982093811035

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.32339850068092346
    2. ',' → logprob: -1.448398470878601
    3. ')' → logprob: -3.1983985900878906
    4. '):
' → logprob: -8.32339859008789
    5. '   ' → logprob: -8.94839859008789
    6. '<|end|>' → logprob: -10.19839859008789
    7. '),' → logprob: -10.69839859008789
    8. ':' → logprob: -10.82339859008789
    9. ' ,' → logprob: -11.07339859008789
    10. '```' → logprob: -11.69839859008789

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009433045983314514
    2. '   ' → logprob: -5.509433269500732
    3. '    ' → logprob: -6.134433269500732
    4. 'self' → logprob: -7.509433269500732
    5. ' ' → logprob: -7.634433269500732
    6. '<|end|>' → logprob: -8.134432792663574
    7. '_' → logprob: -8.384432792663574
    8. '\' → logprob: -8.509432792663574
    9. '        
' → logprob: -8.634432792663574
    10. '      ' → logprob: -8.884432792663574

Token 16: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.06838168948888779
    2. ' self' → logprob: -3.3183817863464355
    3. '       ' → logprob: -3.5683817863464355
    4. '```' → logprob: -7.6933817863464355
    5. '           ' → logprob: -7.8183817863464355
    6. '   ' → logprob: -8.693381309509277
    7. ' ' → logprob: -8.818381309509277
    8. '\' → logprob: -9.193381309509277
    9. '_self' → logprob: -9.443381309509277
    10. '        ' → logprob: -9.443381309509277

Token 17: '.number' (ID: 25737)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.022215448319911957
    2. '.number' → logprob: -3.8972153663635254
    3. ' .' → logprob: -6.772215366363525
    4. '.bus' → logprob: -8.647215843200684
    5. '._' → logprob: -9.772215843200684
    6. '.stop' → logprob: -10.272215843200684
    7. 'number' → logprob: -10.522215843200684
    8. '.user' → logprob: -11.022215843200684
    9. '.is' → logprob: -11.147215843200684
    10. '.name' → logprob: -11.147215843200684

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07895984500646591
    2. ' =' → logprob: -2.5789599418640137
    3. '.' → logprob: -10.703959465026855
    4. ')' → logprob: -11.078959465026855
    5. '<|end|>' → logprob: -11.078959465026855
    6. '_' → logprob: -11.703959465026855
    7. ' is' → logprob: -13.078959465026855
    8. ' ' → logprob: -13.578959465026855
    9. ',' → logprob: -13.703959465026855
    10. '.=' → logprob: -13.953959465026855

Token 19: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.029750604182481766
    2. 'number' → logprob: -3.5297505855560303
    3. '	number' → logprob: -16.52975082397461
    4. ' ' → logprob: -17.15475082397461
    5. '_number' → logprob: -17.77975082397461
    6. ' ' → logprob: -18.15475082397461
    7. '(number' → logprob: -18.40475082397461
    8. '[number' → logprob: -19.40475082397461
    9. 'Number' → logprob: -19.52975082397461
    10. 'n' → logprob: -19.77975082397461

Token 20: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7535563707351685
    2. '\n' → logprob: -1.1285563707351685
    3. '<|end|>' → logprob: -2.503556251525879
    4. '\' → logprob: -3.128556251525879
    5. '   ' → logprob: -3.503556251525879
    6. '    
' → logprob: -4.628556251525879
    7. '.' → logprob: -4.878556251525879
    8. '       ' → logprob: -5.253556251525879
    9. '```' → logprob: -5.378556251525879
    10. ' ' → logprob: -5.753556251525879

Token 23: '.connected' (ID: 134294)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23360705375671387
    2. '._' → logprob: -1.9836070537567139
    3. '.pass' → logprob: -3.358607053756714
    4. '.bus' → logprob: -4.233607292175293
    5. '.is' → logprob: -5.858607292175293
    6. '.stop' → logprob: -6.108607292175293
    7. '_pass' → logprob: -6.358607292175293
    8. ' .' → logprob: -6.483607292175293
    9. '.next' → logprob: -6.608607292175293
    10. '.b' → logprob: -6.733607292175293

Token 24: '_forward' (ID: 75888)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.2520526051521301
    2. '_' → logprob: -2.0020525455474854
    3. '_to' → logprob: -3.2520525455474854
    4. '_b' → logprob: -4.0020527839660645
    5. '_bus' → logprob: -4.0020527839660645
    6. '_ro' → logprob: -5.6270527839660645
    7. '_stop' → logprob: -5.7520527839660645
    8. '_routes' → logprob: -5.7520527839660645
    9. 'Stops' → logprob: -7.5020527839660645
    10. '_places' → logprob: -8.002052307128906

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7424300312995911
    2. '=' → logprob: -0.8674300312995911
    3. '_' → logprob: -2.6174299716949463
    4. 's' → logprob: -3.7424299716949463
    5. '_connections' → logprob: -5.617430210113525
    6. '_bus' → logprob: -7.117430210113525
    7. '_s' → logprob: -7.992430210113525
    8. '_nodes' → logprob: -8.242429733276367
    9. ' ' → logprob: -8.367429733276367
    10. ',' → logprob: -8.492429733276367

Token 26: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0838259607553482
    2. ' []' → logprob: -2.7088260650634766
    3. 'None' → logprob: -5.208826065063477
    4. 'set' → logprob: -5.458826065063477
    5. ' None' → logprob: -6.458826065063477
    6. ' set' → logprob: -6.583826065063477
    7. '{}' → logprob: -6.958826065063477
    8. ' {}' → logprob: -9.458826065063477
    9. '[' → logprob: -10.333826065063477
    10. ' ' → logprob: -11.083826065063477

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6983309388160706
    2. '<|end|>' → logprob: -0.9483309388160706
    3. '
' → logprob: -3.198330879211426
    4. '    
' → logprob: -4.198330879211426
    5. '\n' → logprob: -4.573330879211426
    6. '\' → logprob: -4.823330879211426
    7. '.' → logprob: -4.948330879211426
    8. '```' → logprob: -5.073330879211426
    9. ' ' → logprob: -5.448330879211426
    10. ')' → logprob: -5.823330879211426

Token 28: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6179306507110596
    2. '<|end|>' → logprob: -0.9929306507110596
    3. '
' → logprob: -3.2429306507110596
    4. '    
' → logprob: -4.3679304122924805
    5. '.' → logprob: -5.1179304122924805
    6. ',' → logprob: -5.2429304122924805
    7. ')' → logprob: -5.3679304122924805
    8. '\' → logprob: -5.6179304122924805
    9. 'def' → logprob: -5.9929304122924805
    10. ' ' → logprob: -5.9929304122924805

Token 29: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2934126853942871
    2. '    
' → logprob: -2.418412685394287
    3. '
' → logprob: -3.293412685394287
    4. '.' → logprob: -3.543412685394287
    5. 'def' → logprob: -3.918412685394287
    6. '\' → logprob: -4.543412685394287
    7. '<|end|>' → logprob: -4.793412685394287
    8. 'n' → logprob: -4.918412685394287
    9. '```' → logprob: -4.918412685394287
    10. ',' → logprob: -5.168412685394287

Token 30: '.connected' (ID: 134294)
  Prédit: '.connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -0.2771480977535248
    2. '.' → logprob: -1.5271481275558472
    3. '._' → logprob: -3.9021480083465576
    4. '_connected' → logprob: -5.777148246765137
    5. 'connected' → logprob: -6.777148246765137
    6. ' .' → logprob: -8.527148246765137
    7. ' connected' → logprob: -9.652148246765137
    8. 'Connected' → logprob: -9.777148246765137
    9. '.connect' → logprob: -10.027148246765137
    10. '_' → logprob: -10.277148246765137

Token 31: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -0.010220405645668507
    2. '_back' → logprob: -4.635220527648926
    3. '_reverse' → logprob: -8.385220527648926
    4. '_forward' → logprob: -8.635220527648926
    5. '_' → logprob: -10.135220527648926
    6. '_to' → logprob: -12.260220527648926
    7. '_side' → logprob: -12.885220527648926
    8. '_down' → logprob: -13.135220527648926
    9. 'Backward' → logprob: -13.385220527648926
    10. '_up' → logprob: -13.760220527648926

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004080301150679588
    2. '=' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.879080772399902
    4. '<|end|>' → logprob: -14.254080772399902
    5. '=None' → logprob: -15.629080772399902
    6. ' =
' → logprob: -16.004079818725586
    7. ' =)' → logprob: -18.004079818725586
    8. ' None' → logprob: -18.129079818725586
    9. 'None' → logprob: -18.379079818725586
    10. ' ='' → logprob: -18.379079818725586

Token 33: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.31329166889190674
    2. 'None' → logprob: -1.3132916688919067
    3. 'self' → logprob: -10.813291549682617
    4. ' self' → logprob: -12.438291549682617
    5. '(None' → logprob: -12.938291549682617
    6. '_None' → logprob: -13.313291549682617
    7. ' ' → logprob: -14.188291549682617
    8. ',None' → logprob: -14.813291549682617
    9. '=None' → logprob: -15.438291549682617
    10. '.None' → logprob: -15.563291549682617

Token 34: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42911601066589355
    2. '   ' → logprob: -1.6791160106658936
    3. '<|end|>' → logprob: -2.1791160106658936
    4. '    
' → logprob: -4.679116249084473
    5. 'def' → logprob: -4.804116249084473
    6. ' 
' → logprob: -5.429116249084473
    7. ' ' → logprob: -5.554116249084473
    8. '\' → logprob: -5.679116249084473
    9. '```' → logprob: -5.929116249084473
    10. '' → logprob: -6.054116249084473

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03669672831892967
    2. '
' → logprob: -4.911696910858154
    3. 'def' → logprob: -5.036696910858154
    4. '    
' → logprob: -5.411696910858154
    5. '```' → logprob: -5.661696910858154
    6. 'd' → logprob: -6.161696910858154
    7. ' ' → logprob: -6.161696910858154
    8. '<|end|>' → logprob: -6.411696910858154
    9. '\' → logprob: -6.536696910858154
    10. ' 
' → logprob: -6.536696910858154

Token 36: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009211604483425617
    2. 'd' → logprob: -5.259211540222168
    3. '   ' → logprob: -5.884211540222168
    4. ' def' → logprob: -6.759211540222168
    5. ' ' → logprob: -11.509211540222168
    6. '    
' → logprob: -12.384211540222168
    7. '@' → logprob: -12.759211540222168
    8. 'de' → logprob: -13.009211540222168
    9. '	def' → logprob: -13.509211540222168
    10. '  ' → logprob: -13.759211540222168

Token 37: ' __' (ID: 2516)
  Prédit: ' connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connect' → logprob: -0.028284013271331787
    2. ' ' → logprob: -4.653284072875977
    3. 'connect' → logprob: -4.778284072875977
    4. ' connected' → logprob: -5.403284072875977
    5. ' set' → logprob: -6.028284072875977
    6. ' space' → logprob: -7.278284072875977
    7. '_' → logprob: -7.528284072875977
    8. ' add' → logprob: -7.653284072875977
    9. '_connect' → logprob: -7.653284072875977
    10. 'connected' → logprob: -8.903284072875977

Token 38: 'repr' (ID: 67002)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0222610235214233
    2. 'repr' → logprob: -1.0222610235214233
    3. 'init' → logprob: -1.2722610235214233
    4. 'eq' → logprob: -8.522260665893555
    5. 's' → logprob: -11.772260665893555
    6. 'r' → logprob: -11.897260665893555
    7. 'i' → logprob: -12.397260665893555
    8. 're' → logprob: -12.522260665893555
    9. 'rep' → logprob: -12.522260665893555
    10. 'ini' → logprob: -13.022260665893555

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3896186947822571
    2. '__' → logprob: -1.1396186351776123
    3. '__('' → logprob: -6.764618873596191
    4. '__(
' → logprob: -6.889618873596191
    5. '(' → logprob: -8.514618873596191
    6. '__((' → logprob: -8.889618873596191
    7. '_' → logprob: -9.264618873596191
    8. '(self' → logprob: -9.889618873596191
    9. '__("' → logprob: -10.264618873596191
    10. '___' → logprob: -10.514618873596191

Token 40: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.153795766294934e-06
    2. ')' → logprob: -12.125005722045898
    3. '(self' → logprob: -15.625005722045898
    4. ' self' → logprob: -15.875005722045898
    5. 'Self' → logprob: -16.5000057220459
    6. '_self' → logprob: -17.2500057220459
    7. 'elf' → logprob: -17.2500057220459
    8. 'sel' → logprob: -17.5000057220459
    9. '
' → logprob: -18.0000057220459
    10. 's' → logprob: -18.2500057220459

Token 41: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5140886902809143
    2. ',' → logprob: -1.8890886306762695
    3. '):' → logprob: -2.0140886306762695
    4. 'self' → logprob: -2.2640886306762695
    5. 's' → logprob: -5.2640886306762695
    6. '<|end|>' → logprob: -5.7640886306762695
    7. '(self' → logprob: -6.5140886306762695
    8. ' ,' → logprob: -7.3890886306762695
    9. '):
' → logprob: -7.8890886306762695
    10. ' self' → logprob: -8.13908863067627

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000491672137286514
    2. ' return' → logprob: -8.000492095947266
    3. 'return' → logprob: -8.875492095947266
    4. ' f' → logprob: -11.750492095947266
    5. '           ' → logprob: -13.375492095947266
    6. '      ' → logprob: -13.375492095947266
    7. '   ' → logprob: -13.500492095947266
    8. '        ' → logprob: -13.625492095947266
    9. 'f' → logprob: -14.375492095947266
    10. '    ' → logprob: -14.875492095947266

Token 43: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.35290512442588806
    2. ' return' → logprob: -1.4779051542282104
    3. '       ' → logprob: -2.727905035018921
    4. '   ' → logprob: -6.4779052734375
    5. ' f' → logprob: -6.8529052734375
    6. 'f' → logprob: -6.9779052734375
    7. '    ' → logprob: -8.3529052734375
    8. '        ' → logprob: -9.9779052734375
    9. 'r' → logprob: -10.9779052734375
    10. '      ' → logprob: -11.7279052734375

Token 44: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.023254329338669777
    2. 'f' → logprob: -3.77325439453125
    3. ''' → logprob: -12.39825439453125
    4. ''f' → logprob: -13.64825439453125
    5. '"' → logprob: -13.89825439453125
    6. ' ' → logprob: -14.14825439453125
    7. ' repr' → logprob: -14.39825439453125
    8. ' self' → logprob: -14.64825439453125
    9. ' ' → logprob: -15.27325439453125
    10. '	f' → logprob: -15.39825439453125

Token 45: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03481714054942131
    2. ''' → logprob: -3.5348172187805176
    3. 'Bus' → logprob: -6.409817218780518
    4. '"<' → logprob: -6.534817218780518
    5. 'f' → logprob: -7.034817218780518
    6. ''s' → logprob: -8.15981674194336
    7. '"class' → logprob: -8.40981674194336
    8. 'self' → logprob: -9.03481674194336
    9. '"{' → logprob: -9.53481674194336
    10. ''<' → logprob: -9.53481674194336

Token 46: 'Bus' (ID: 16573)
  Prédit: 'Bus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -1.5213274309644476e-05
    2. '<' → logprob: -11.625015258789062
    3. ' Bus' → logprob: -13.375015258789062
    4. '"' → logprob: -13.875015258789062
    5. 'B' → logprob: -14.000015258789062
    6. 'bus' → logprob: -14.500015258789062
    7. '{' → logprob: -14.625015258789062
    8. ''' → logprob: -15.250015258789062
    9. '<class' → logprob: -15.750015258789062
    10. 'Stop' → logprob: -15.750015258789062

Token 47: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -2.45848218582978e-06
    2. ' Stop' → logprob: -13.37500286102295
    3. '_Stop' → logprob: -14.37500286102295
    4. '_stop' → logprob: -16.750001907348633
    5. '_STOP' → logprob: -17.125001907348633
    6. '-' → logprob: -17.500001907348633
    7. '.Stop' → logprob: -17.625001907348633
    8. 'S' → logprob: -17.750001907348633
    9. 'Stops' → logprob: -18.000001907348633
    10. 'stop' → logprob: -18.000001907348633

Token 48: '({' (ID: 3972)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5235733389854431
    2. '(' → logprob: -1.148573398590088
    3. '({' → logprob: -2.648573398590088
    4. '(#' → logprob: -4.273573398590088
    5. '(number' → logprob: -5.648573398590088
    6. '#{' → logprob: -7.023573398590088
    7. '(f' → logprob: -7.648573398590088
    8. '#' → logprob: -7.648573398590088
    9. '(self' → logprob: -8.27357292175293
    10. '(
' → logprob: -10.27357292175293

Token 49: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0683535037969705e-05
    2. '{' → logprob: -12.00001049041748
    3. ' self' → logprob: -12.62501049041748
    4. 'sel' → logprob: -14.25001049041748
    5. 'repr' → logprob: -15.37501049041748
    6. 'elf' → logprob: -17.000011444091797
    7. 'f' → logprob: -17.500011444091797
    8. '       ' → logprob: -17.625011444091797
    9. 'se' → logprob: -17.750011444091797
    10. 's' → logprob: -17.875011444091797

Token 50: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0161442793905735
    2. '.' → logprob: -4.141144275665283
    3. 'number' → logprob: -9.266144752502441
    4. ' .' → logprob: -11.641144752502441
    5. ').' → logprob: -12.641144752502441
    6. ')' → logprob: -13.891144752502441
    7. ' number' → logprob: -14.641144752502441
    8. '.numero' → logprob: -15.141144752502441
    9. '.num' → logprob: -15.391144752502441
    10. 'umber' → logprob: -15.516144752502441

Token 51: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.02135404571890831
    2. ')' → logprob: -3.8963539600372314
    3. '}' → logprob: -8.271353721618652
    4. ')}' → logprob: -8.396353721618652
    5. ')"' → logprob: -9.021353721618652
    6. '}")' → logprob: -9.021353721618652
    7. ' })' → logprob: -10.646353721618652
    8. ')")' → logprob: -11.021353721618652
    9. '))' → logprob: -11.271353721618652
    10. '"})' → logprob: -11.521353721618652

Token 52: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0028923710342496634
    2. '")' → logprob: -6.50289249420166
    3. ')' → logprob: -7.00289249420166
    4. '"
' → logprob: -9.00289249420166
    5. '```' → logprob: -9.12789249420166
    6. '"""' → logprob: -9.50289249420166
    7. '<|end|>' → logprob: -9.50289249420166
    8. ')"' → logprob: -9.75289249420166
    9. '"}' → logprob: -11.37789249420166
    10. '\n' → logprob: -11.62789249420166

Token 53: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21255071461200714
    2. '   ' → logprob: -2.587550640106201
    3. '<|end|>' → logprob: -2.712550640106201
    4. 'def' → logprob: -4.212550640106201
    5. '    
' → logprob: -5.087550640106201
    6. ':' → logprob: -5.212550640106201
    7. '<|end|>' → logprob: -5.212550640106201
    8. '.' → logprob: -5.587550640106201
    9. ' 
' → logprob: -5.712550640106201
    10. '```' → logprob: -6.462550640106201

Token 54: ' Circular' (ID: 72772)
  Prédit: ' Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Bus' → logprob: -0.013983317650854588
    2. 'Bus' → logprob: -4.763983249664307
    3. ' ' → logprob: -5.388983249664307
    4. ' ' → logprob: -7.763983249664307
    5. ' bus' → logprob: -8.388983726501465
    6. 'bus' → logprob: -10.763983726501465
    7. ' Space' → logprob: -11.013983726501465
    8. ' Transport' → logprob: -11.388983726501465
    9. '  ' → logprob: -11.638983726501465
    10. '_bus' → logprob: -11.763983726501465

Token 55: 'Route' (ID: 7656)
  Prédit: 'Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -0.4717089533805847
    2. 'Linked' → logprob: -1.0967090129852295
    3. 'Route' → logprob: -3.5967090129852295
    4. 'Queue' → logprob: -5.34670877456665
    5. 'Train' → logprob: -5.34670877456665
    6. 'Line' → logprob: -6.09670877456665
    7. 'List' → logprob: -6.59670877456665
    8. 'Buffer' → logprob: -7.47170877456665
    9. 'Link' → logprob: -7.72170877456665
    10. 'Rail' → logprob: -8.846709251403809

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00297686830163002
    2. '(' → logprob: -5.877976894378662
    3. ' :' → logprob: -10.127976417541504
    4. '(B' → logprob: -10.752976417541504
    5. '):' → logprob: -10.752976417541504
    6. '():' → logprob: -10.752976417541504
    7. '(object' → logprob: -10.877976417541504
    8. '(:' → logprob: -11.377976417541504
    9. '>:' → logprob: -11.877976417541504
    10. '<|end|>' → logprob: -11.877976417541504

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020622236654162407
    2. ' def' → logprob: -4.145622253417969
    3. 'def' → logprob: -6.145622253417969
    4. '    ' → logprob: -7.020622253417969
    5. '(' → logprob: -7.395622253417969
    6. '    
' → logprob: -7.770622253417969
    7. '```' → logprob: -9.020622253417969
    8. '<|end|>' → logprob: -9.145622253417969
    9. '
' → logprob: -9.645622253417969
    10. ' 
' → logprob: -10.145622253417969

Token 58: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.009044094942510128
    2. 'def' (adapté à ' def') → logprob: -4.759044170379639
    3. '   ' → logprob: -7.759044170379639
    4. 'class' → logprob: -13.75904369354248
    5. ' class' → logprob: -14.00904369354248
    6. '    ' → logprob: -14.75904369354248
    7. '	def' → logprob: -15.63404369354248
    8. ' ' → logprob: -16.509044647216797
    9. '```' → logprob: -18.009044647216797
    10. ' ' → logprob: -18.134044647216797

Token 59: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006336849182844162
    2. '__' → logprob: -5.256336688995361
    3. ' ' → logprob: -7.256336688995361
    4. ' init' → logprob: -8.63133716583252
    5. '_init' → logprob: -9.38133716583252
    6. ' ' → logprob: -9.63133716583252
    7. 'init' → logprob: -9.75633716583252
    8. ' _' → logprob: -12.50633716583252
    9. '  ' → logprob: -12.75633716583252
    10. '_' → logprob: -13.75633716583252

Token 60: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.688212614681106e-05
    2. ' init' → logprob: -11.750017166137695
    3. 'i' → logprob: -12.500017166137695
    4. '   ' → logprob: -13.250017166137695
    5. 'in' → logprob: -14.250017166137695
    6. '_init' → logprob: -14.500017166137695
    7. 'def' → logprob: -14.500017166137695
    8. 'ini' → logprob: -14.500017166137695
    9. '```' → logprob: -14.625017166137695
    10. '  ' → logprob: -15.125017166137695

Token 61: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000846671755425632
    2. '(self' → logprob: -7.625846862792969
    3. '__' → logprob: -8.000846862792969
    4. '__(
' → logprob: -11.000846862792969
    5. '_(' → logprob: -12.500846862792969
    6. '__((' → logprob: -13.750846862792969
    7. 'self' → logprob: -14.375846862792969
    8. '(' → logprob: -14.875846862792969
    9. ' (' → logprob: -15.000846862792969
    10. '__('' → logprob: -15.375846862792969

Token 62: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002525841584429145
    2. ' self' → logprob: -6.002525806427002
    3. ')' → logprob: -10.00252628326416
    4. '
' → logprob: -14.25252628326416
    5. '0' → logprob: -14.50252628326416
    6. 'elf' → logprob: -14.62752628326416
    7. '(self' → logprob: -14.62752628326416
    8. ' ' → logprob: -14.62752628326416
    9. '```' → logprob: -14.87752628326416
    10. ',' → logprob: -15.00252628326416

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008180483244359493
    2. ' ,' → logprob: -5.258180618286133
    3. 'self' → logprob: -5.883180618286133
    4. ')' → logprob: -9.508180618286133
    5. ' ' → logprob: -10.633180618286133
    6. ' self' → logprob: -11.008180618286133
    7. '):' → logprob: -11.383180618286133
    8. '(self' → logprob: -12.133180618286133
    9. '_bus' → logprob: -12.258180618286133
    10. ',self' → logprob: -12.508180618286133

Token 64: ' stops' (ID: 29924)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009205576032400131
    2. ' self' → logprob: -5.009205341339111
    3. 'bus' → logprob: -6.634205341339111
    4. 'st' → logprob: -7.509205341339111
    5. '   ' → logprob: -8.88420581817627
    6. ' bus' → logprob: -9.00920581817627
    7. '       ' → logprob: -9.00920581817627
    8. ' stops' → logprob: -9.13420581817627
    9. ')' → logprob: -9.63420581817627
    10. '```' → logprob: -10.50920581817627

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22106777131557465
    2. ':' → logprob: -1.7210677862167358
    3. ',' → logprob: -4.471067905426025
    4. '):
' → logprob: -5.221067905426025
    5. ')' → logprob: -6.721067905426025
    6. '=[]' → logprob: -7.721067905426025
    7. ' ):' → logprob: -8.471067428588867
    8. '=None' → logprob: -8.471067428588867
    9. '=' → logprob: -8.846067428588867
    10. '   ' → logprob: -9.221067428588867

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.955703818472102e-05
    2. 'self' → logprob: -10.375059127807617
    3. ' self' → logprob: -11.500059127807617
    4. '<|end|>' → logprob: -12.500059127807617
    5. '```' → logprob: -12.625059127807617
    6. ',' → logprob: -12.875059127807617
    7. '   ' → logprob: -13.125059127807617
    8. '        
' → logprob: -13.625059127807617
    9. '[' → logprob: -14.250059127807617
    10. '      ' → logprob: -14.375059127807617

Token 67: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.013540646992623806
    2. 'self' (adapté à ' self') → logprob: -4.388540744781494
    3. '       ' → logprob: -6.888540744781494
    4. ' ' → logprob: -12.013540267944336
    5. '        ' → logprob: -13.138540267944336
    6. '	self' → logprob: -14.138540267944336
    7. '   ' → logprob: -14.138540267944336
    8. '    ' → logprob: -14.513540267944336
    9. ' if' → logprob: -14.888540267944336
    10. ' ' → logprob: -15.263540267944336

Token 68: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.007004613056778908
    2. '.' → logprob: -5.007004737854004
    3. '       ' → logprob: -9.132004737854004
    4. '   ' → logprob: -9.507004737854004
    5. ' .' → logprob: -9.632004737854004
    6. '.stop' → logprob: -11.257004737854004
    7. '.connected' → logprob: -11.882004737854004
    8. '.bus' → logprob: -12.507004737854004
    9. '.s' → logprob: -12.882004737854004
    10. '.next' → logprob: -13.132004737854004

Token 69: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -2.7014437364414334e-05
    2. 'op' → logprob: -11.37502670288086
    3. '   ' → logprob: -12.37502670288086
    4. '#' → logprob: -13.25002670288086
    5. 'o' → logprob: -13.37502670288086
    6. '_ops' → logprob: -13.37502670288086
    7. '```' → logprob: -13.50002670288086
    8. '=' → logprob: -13.75002670288086
    9. '       ' → logprob: -14.62502670288086
    10. '.ops' → logprob: -14.75002670288086

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003179855877533555
    2. '=' → logprob: -5.753180027008057
    3. '.extend' → logprob: -14.628179550170898
    4. ' ' → logprob: -14.628179550170898
    5. '   ' → logprob: -14.878179550170898
    6. '.append' → logprob: -15.378179550170898
    7. '.' → logprob: -15.378179550170898
    8. ')' → logprob: -16.1281795501709
    9. '    ' → logprob: -16.2531795501709
    10. '_' → logprob: -17.0031795501709

Token 71: ' stops' (ID: 29924)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.14530527591705322
    2. ' stops' → logprob: -2.0203051567077637
    3. '[]' → logprob: -6.645305156707764
    4. '[' → logprob: -7.395305156707764
    5. 'list' → logprob: -7.895305156707764
    6. ' [' → logprob: -9.395305633544922
    7. ' list' → logprob: -9.520305633544922
    8. ' []' → logprob: -9.895305633544922
    9. '[s' → logprob: -10.270305633544922
    10. '[]
' → logprob: -11.270305633544922

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4818168580532074
    2. '<|end|>' → logprob: -0.9818168878555298
    3. '       ' → logprob: -5.10681676864624
    4. '<|end|>' → logprob: -6.85681676864624
    5. '   ' → logprob: -8.481817245483398
    6. '  
' → logprob: -9.606817245483398
    7. 'def' → logprob: -9.981817245483398
    8. '    
' → logprob: -10.231817245483398
    9. ' 
' → logprob: -10.481817245483398
    10. '

' → logprob: -10.731817245483398

Token 73: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7797237038612366
    2. '       ' → logprob: -0.7797237038612366
    3. '<|end|>' → logprob: -2.779723644256592
    4. '   ' → logprob: -4.529723644256592
    5. ' for' → logprob: -5.279723644256592
    6. 'for' → logprob: -6.654723644256592
    7. 'def' → logprob: -7.029723644256592
    8. '        
' → logprob: -7.654723644256592
    9. '    
' → logprob: -7.779723644256592
    10. '  
' → logprob: -7.904723644256592

Token 74: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14242590963840485
    2. 'for' → logprob: -2.267426013946533
    3. ' n' → logprob: -4.767426013946533
    4. '       ' → logprob: -5.017426013946533
    5. ' current' → logprob: -5.642426013946533
    6. 'n' (adapté à ' n') → logprob: -5.767426013946533
    7. ' if' → logprob: -6.017426013946533
    8. ' self' → logprob: -6.267426013946533
    9. '
' → logprob: -6.767426013946533
    10. 'current' → logprob: -7.767426013946533

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19232870638370514
    2. '=' → logprob: -2.067328691482544
    3. ' ' → logprob: -3.442328691482544
    4. '   ' → logprob: -5.192328929901123
    5. '>' → logprob: -5.567328929901123
    6. ')' → logprob: -6.192328929901123
    7. 'um' → logprob: -6.692328929901123
    8. '=len' → logprob: -6.942328929901123
    9. '       ' → logprob: -7.192328929901123
    10. '  ' → logprob: -7.192328929901123

Token 76: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0002614550176076591
    2. 'len' → logprob: -8.250261306762695
    3. '=len' → logprob: -16.625261306762695
    4. '	len' → logprob: -16.875261306762695
    5. ' ' → logprob: -17.250261306762695
    6. '(len' → logprob: -17.375261306762695
    7. ' l' → logprob: -18.125261306762695
    8. ' le' → logprob: -18.375261306762695
    9. '[len' → logprob: -18.625261306762695
    10. ' ' → logprob: -18.750261306762695

Token 77: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.5760214328765869
    2. '(self' → logprob: -0.8260214328765869
    3. '(' → logprob: -9.451021194458008
    4. '(stop' → logprob: -12.951021194458008
    5. 'self' → logprob: -14.201021194458008
    6. '(s' → logprob: -15.576021194458008
    7. 'st' → logprob: -17.076021194458008
    8. '(this' → logprob: -17.201021194458008
    9. ' stops' → logprob: -18.201021194458008
    10. ' (' → logprob: -18.451021194458008

Token 78: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.011731171049177647
    2. ')' → logprob: -5.136731147766113
    3. '.ops' → logprob: -6.011731147766113
    4. 'op' → logprob: -6.386731147766113
    5. '```' → logprob: -7.261731147766113
    6. 's' → logprob: -7.886731147766113
    7. '   ' → logprob: -8.761731147766113
    8. 'ps' → logprob: -9.261731147766113
    9. ')
' → logprob: -9.886731147766113
    10. '       ' → logprob: -10.011731147766113

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007665063603781164
    2. ')
' → logprob: -7.250766277313232
    3. ' )' → logprob: -10.12576675415039
    4. '       ' → logprob: -11.37576675415039
    5. ')n' → logprob: -12.62576675415039
    6. '   ' → logprob: -14.87576675415039
    7. ')

' → logprob: -15.00076675415039
    8. ' ' → logprob: -15.62576675415039
    9. ')`' → logprob: -16.00076675415039
    10. ')
' → logprob: -16.00076675415039

Token 80: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33459144830703735
    2. '       ' → logprob: -1.3345913887023926
    3. ' for' → logprob: -3.9595913887023926
    4. 'for' → logprob: -6.459591388702393
    5. '
' → logprob: -8.70959186553955
    6. '<|end|>' → logprob: -9.70959186553955
    7. '        
' → logprob: -9.83459186553955
    8. '```' → logprob: -10.08459186553955
    9. '	for' → logprob: -10.33459186553955
    10. '  
' → logprob: -10.83459186553955

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07029484957456589
    2. 'for' (adapté à ' for') → logprob: -2.6952948570251465
    3. '       ' → logprob: -8.070294380187988
    4. '
' → logprob: -10.070294380187988
    5. '	for' → logprob: -13.945294380187988
    6. ' 
' → logprob: -14.195294380187988
    7. '```' → logprob: -14.570294380187988
    8. '        
' → logprob: -14.820294380187988
    9. '   ' → logprob: -15.320294380187988
    10. ' ' → logprob: -15.570294380187988

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008199920994229615
    2. 'i' → logprob: -7.250820159912109
    3. ' ' → logprob: -9.12582015991211
    4. ' ' → logprob: -14.37582015991211
    5. '	i' → logprob: -15.50082015991211
    6. ' range' → logprob: -16.50082015991211
    7. ')' → logprob: -16.75082015991211
    8. ' idx' → logprob: -16.75082015991211
    9. ' index' → logprob: -17.50082015991211
    10. '0' → logprob: -17.75082015991211

Token 83: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007921205251477659
    2. 'in' → logprob: -7.375792026519775
    3. ' ' → logprob: -8.750792503356934
    4. '  ' → logprob: -12.750792503356934
    5. ',' → logprob: -12.875792503356934
    6. ' i' → logprob: -14.750792503356934
    7. ' ,' → logprob: -15.000792503356934
    8. '```' → logprob: -15.625792503356934
    9. '	in' → logprob: -15.750792503356934
    10. 'n' → logprob: -16.250791549682617

Token 84: ' stop' (ID: 5666)
  Prédit: 'stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stop' → logprob: -0.633003830909729
    2. ' stop' → logprob: -0.758003830909729
    3. 's' → logprob: -9.633004188537598
    4. '	stop' → logprob: -9.633004188537598
    5. ' ' → logprob: -9.883004188537598
    6. '_stop' → logprob: -10.133004188537598
    7. 'st' → logprob: -10.258004188537598
    8. '(stop' → logprob: -10.508004188537598
    9. ' bus' → logprob: -10.633004188537598
    10. '```' → logprob: -10.883004188537598

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001567949540913105
    2. 'in' → logprob: -6.501567840576172
    3. ',' → logprob: -10.001567840576172
    4. ' ' → logprob: -11.126567840576172
    5. 's' → logprob: -13.626567840576172
    6. '	in' → logprob: -14.126567840576172
    7. 'enumer' → logprob: -14.501567840576172
    8. '<|end|>' → logprob: -14.501567840576172
    9. ' ,' → logprob: -14.751567840576172
    10. '_in' → logprob: -14.876567840576172

Token 86: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.026444505900144577
    2. 'enumer' → logprob: -3.651444435119629
    3. ' ' → logprob: -8.901444435119629
    4. ' ' → logprob: -13.276444435119629
    5. '   ' → logprob: -13.526444435119629
    6. ' range' → logprob: -13.651444435119629
    7. ' en' → logprob: -13.776444435119629
    8. '```' → logprob: -14.026444435119629
    9. ' enumer' → logprob: -14.901444435119629
    10. '  ' → logprob: -15.151444435119629

Token 87: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.1756376326084137
    2. '(self' → logprob: -2.050637722015381
    3. ' stops' → logprob: -3.675637722015381
    4. ' (' → logprob: -5.800637722015381
    5. 'self' → logprob: -6.425637722015381
    6. ' self' → logprob: -6.800637722015381
    7. ')' → logprob: -7.300637722015381
    8. '(' → logprob: -8.300637245178223
    9. '(stop' → logprob: -8.300637245178223
    10. '(range' → logprob: -10.300637245178223

Token 88: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0025635301135480404
    2. 'op' → logprob: -6.2525634765625
    3. ')' → logprob: -7.6275634765625
    4. 's' → logprob: -10.3775634765625
    5. '   ' → logprob: -10.8775634765625
    6. '```' → logprob: -10.8775634765625
    7. '.ops' → logprob: -11.2525634765625
    8. 'ps' → logprob: -11.3775634765625
    9. '       ' → logprob: -11.5025634765625
    10. '.op' → logprob: -12.2525634765625

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010612714104354382
    2. '):
' → logprob: -7.00106143951416
    3. ':' → logprob: -9.25106143951416
    4. ' ):' → logprob: -10.00106143951416
    5. ')' → logprob: -13.00106143951416
    6. '):
' → logprob: -13.50106143951416
    7. '       ' → logprob: -13.50106143951416
    8. ',' → logprob: -14.25106143951416
    9. '):

' → logprob: -14.50106143951416
    10. '   ' → logprob: -14.50106143951416

Token 90: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035599153488874435
    2. '<|end|>' → logprob: -4.535599231719971
    3. ',' → logprob: -4.910599231719971
    4. '           ' → logprob: -5.160599231719971
    5. '):' → logprob: -5.410599231719971
    6. '       ' → logprob: -6.035599231719971
    7. '<|end|>' → logprob: -6.660599231719971
    8. ' ' → logprob: -7.285599231719971
    9. '.' → logprob: -7.535599231719971
    10. ')' → logprob: -8.160598754882812

Token 91: ' stop' (ID: 5666)
  Prédit: ' stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.5393627285957336
    2. '           ' → logprob: -1.5393626689910889
    3. ' ' → logprob: -2.539362668991089
    4. ' ' → logprob: -3.039362668991089
    5. '               ' → logprob: -3.789362668991089
    6. 'stop' (adapté à ' stop') → logprob: -3.789362668991089
    7. '```' → logprob: -5.164362907409668
    8. ' stops' → logprob: -5.414362907409668
    9. '            ' → logprob: -5.914362907409668
    10. ' next' → logprob: -6.164362907409668

Token 92: '.connected' (ID: 134294)
  Prédit: '.connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -0.062186483293771744
    2. '.' → logprob: -2.8121864795684814
    3. '.connect' → logprob: -9.937186241149902
    4. ').' → logprob: -10.437186241149902
    5. '.next' → logprob: -10.562186241149902
    6. ' .' → logprob: -11.062186241149902
    7. '.forward' → logprob: -11.687186241149902
    8. '.con' → logprob: -11.687186241149902
    9. '.connections' → logprob: -11.937186241149902
    10. '.setdefault' → logprob: -12.062186241149902

Token 93: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.004124349914491177
    2. '_backward' → logprob: -5.504124164581299
    3. '_' → logprob: -10.129124641418457
    4. '_to' → logprob: -12.629124641418457
    5. '_back' → logprob: -14.629124641418457
    6. '_for' → logprob: -14.754124641418457
    7. ')_' → logprob: -15.254124641418457
    8. '__' → logprob: -15.504124641418457
    9. '```' → logprob: -15.629124641418457
    10. '##_' → logprob: -15.629124641418457

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022910177707672
    2. '=' → logprob: -1.9102290868759155
    3. ' ' → logprob: -12.535228729248047
    4. '.' → logprob: -14.785228729248047
    5. ' =
' → logprob: -15.035228729248047
    6. ')' → logprob: -15.410228729248047
    7. ',' → logprob: -15.535228729248047
    8. 's' → logprob: -15.785228729248047
    9. '=

' → logprob: -16.535228729248047
    10. ' is' → logprob: -17.660228729248047

Token 95: ' stops' (ID: 29924)
  Prédit: ' stops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.17999815940856934
    2. 'st' → logprob: -1.8049981594085693
    3. 'stop' → logprob: -9.304998397827148
    4. '   ' → logprob: -10.554998397827148
    5. ' st' → logprob: -10.554998397827148
    6. 'self' → logprob: -10.554998397827148
    7. ' ' → logprob: -11.304998397827148
    8. 'sts' → logprob: -11.304998397827148
    9. ' self' → logprob: -11.742498397827148
    10. '	st' → logprob: -11.867498397827148

Token 96: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.01061279233545065
    2. '(i' → logprob: -5.135612964630127
    3. '[i' → logprob: -5.510612964630127
    4. '[' → logprob: -7.635612964630127
    5. '[
' → logprob: -8.885612487792969
    6. '   ' → logprob: -13.260612487792969
    7. '```' → logprob: -13.260612487792969
    8. ' ' → logprob: -13.885612487792969
    9. '(' → logprob: -13.885612487792969
    10. '       ' → logprob: -14.760612487792969

Token 97: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10051795095205307
    2. '(i' → logprob: -2.350517988204956
    3. ' (' → logprob: -8.725518226623535
    4. ' i' → logprob: -8.850518226623535
    5. '   ' → logprob: -13.225518226623535
    6. '{i' → logprob: -13.975518226623535
    7. '           ' → logprob: -14.350518226623535
    8. '(' → logprob: -14.475518226623535
    9. ')i' → logprob: -14.475518226623535
    10. '1' → logprob: -15.225518226623535

Token 98: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142494142055511
    2. ' +' → logprob: -1.7014249563217163
    3. '+i' → logprob: -12.201424598693848
    4. '1' → logprob: -12.201424598693848
    5. '+n' → logprob: -14.326424598693848
    6. ' ' → logprob: -14.576424598693848
    7. '+
' → logprob: -15.576424598693848
    8. '   ' → logprob: -16.326425552368164
    9. '＋' → logprob: -17.076425552368164
    10. ' +
' → logprob: -17.076425552368164

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '```' → logprob: -16.752185821533203
    4. ' ' → logprob: -16.877185821533203
    5. '   ' → logprob: -17.002185821533203
    6. ')' → logprob: -17.377185821533203
    7. '`' → logprob: -18.814685821533203
    8. '
' → logprob: -18.939685821533203
    9. '  ' → logprob: -19.252185821533203
    10. '１' → logprob: -19.377185821533203

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -15.625006675720215
    4. '<|end|>' → logprob: -16.3750057220459
    5. '```' → logprob: -17.3750057220459
    6. '   ' → logprob: -17.5000057220459
    7. '`' → logprob: -17.8750057220459
    8. '(' → logprob: -18.0625057220459
    9. '+' → logprob: -18.3750057220459
    10. 'n' → logprob: -18.3750057220459

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010393599513918161
    2. ')%' → logprob: -6.876039505004883
    3. ')]' → logprob: -12.751039505004883
    4. ' )' → logprob: -13.126039505004883
    5. ']' → logprob: -14.001039505004883
    6. ')
' → logprob: -15.001039505004883
    7. '%' → logprob: -15.126039505004883
    8. ' %' → logprob: -16.501039505004883
    9. ')n' → logprob: -16.876039505004883
    10. '%n' → logprob: -17.001039505004883

Token 102: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011402154341340065
    2. ')%' → logprob: -7.251140117645264
    3. ' )' → logprob: -8.376140594482422
    4. ' %' → logprob: -8.876140594482422
    5. ']' → logprob: -10.251140594482422
    6. '%' → logprob: -11.376140594482422
    7. '%n' → logprob: -11.751140594482422
    8. ' ' → logprob: -13.126140594482422
    9. '<|end|>' → logprob: -14.251140594482422
    10. ')]' → logprob: -14.376140594482422

Token 103: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759457349777222
    2. ' n' → logprob: -0.8259457349777222
    3. ')n' → logprob: -12.825945854187012
    4. '	n' → logprob: -13.575945854187012
    5. '(n' → logprob: -13.700945854187012
    6. '<|end|>' → logprob: -14.325945854187012
    7. '
' → logprob: -16.325944900512695
    8. ' ' → logprob: -16.325944900512695
    9. ' н' → logprob: -16.575944900512695
    10. '_n' → logprob: -17.075944900512695

Token 104: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1003042608499527
    2. ']
' → logprob: -2.350304365158081
    3. ']

' → logprob: -10.10030460357666
    4. ']
' → logprob: -10.22530460357666
    5. ' ]' → logprob: -11.72530460357666
    6. ')]' → logprob: -11.85030460357666
    7. '       ' → logprob: -13.22530460357666
    8. ')' → logprob: -13.47530460357666
    9. ' ]
' → logprob: -14.22530460357666
    10. ' ' → logprob: -15.47530460357666

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03254421800374985
    2. '<|end|>' → logprob: -3.5325441360473633
    3. '            
' → logprob: -6.532544136047363
    4. '
' → logprob: -7.657544136047363
    5. '<|end|>' → logprob: -8.532544136047363
    6. ' 
' → logprob: -9.032544136047363
    7. '  
' → logprob: -9.157544136047363
    8. '    
' → logprob: -9.532544136047363
    9. '       ' → logprob: -9.782544136047363
    10. '```' → logprob: -9.782544136047363

Token 106: ' stop' (ID: 5666)
  Prédit: 'stop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stop' (adapté à ' stop') → logprob: -0.08992128074169159
    2. ' stop' → logprob: -2.464921236038208
    3. '           ' → logprob: -6.964921474456787
    4. ' ' → logprob: -11.464920997619629
    5. '   ' → logprob: -11.714920997619629
    6. '	stop' → logprob: -12.089920997619629
    7. '       ' → logprob: -12.464920997619629
    8. '(stop' → logprob: -12.964920997619629
    9. '.stop' → logprob: -13.464920997619629
    10. ' ' → logprob: -13.964920997619629

Token 107: '.connected' (ID: 134294)
  Prédit: '.connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -0.0013308331836014986
    2. '.' → logprob: -6.626330852508545
    3. ' .' → logprob: -13.626330375671387
    4. 'connected' → logprob: -14.251330375671387
    5. '.related' → logprob: -14.376330375671387
    6. '>.' → logprob: -14.876330375671387
    7. '.con' → logprob: -15.126330375671387
    8. '.completed' → logprob: -15.126330375671387
    9. '.selected' → logprob: -15.626330375671387
    10. '`.' → logprob: -15.876330375671387

Token 108: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -4.739826181321405e-05
    2. '_forward' → logprob: -10.62504768371582
    3. '_back' → logprob: -11.62504768371582
    4. '_' → logprob: -11.75004768371582
    5. 'Backward' → logprob: -13.00004768371582
    6. '_connected' → logprob: -14.25004768371582
    7. ')_' → logprob: -14.37504768371582
    8. '##_' → logprob: -14.50004768371582
    9. ' backward' → logprob: -15.12504768371582
    10. '.backward' → logprob: -15.12504768371582

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01254568062722683
    2. '=' → logprob: -4.387545585632324
    3. ' ' → logprob: -10.262545585632324
    4. '<|end|>' → logprob: -14.637545585632324
    5. ')' → logprob: -15.387545585632324
    6. ' ' → logprob: -16.13754653930664
    7. ' =
' → logprob: -16.38754653930664
    8. '    ' → logprob: -16.51254653930664
    9. ']' → logprob: -17.26254653930664
    10. 's' → logprob: -17.26254653930664

Token 110: ' stops' (ID: 29924)
  Prédit: ' stops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.0003079334564972669
    2. 'st' → logprob: -8.1253080368042
    3. 'stop' → logprob: -11.8753080368042
    4. ' stop' → logprob: -13.7503080368042
    5. 's' → logprob: -14.0003080368042
    6. ' ' → logprob: -14.6253080368042
    7. 'sts' → logprob: -14.7503080368042
    8. ' stopp' → logprob: -15.0003080368042
    9. ' st' → logprob: -15.1253080368042
    10. ' ' → logprob: -15.2503080368042

Token 111: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -6.511406809295295e-06
    2. '[i' → logprob: -12.375006675720215
    3. '[' → logprob: -13.125006675720215
    4. '(i' → logprob: -16.5000057220459
    5. '[
' → logprob: -16.5000057220459
    6. '[max' → logprob: -17.1250057220459
    7. '   ' → logprob: -18.2500057220459
    8. '(' → logprob: -18.3750057220459
    9. '[n' → logprob: -18.7500057220459
    10. '[((' → logprob: -19.2500057220459

Token 112: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004844154173042625
    2. ' i' → logprob: -7.875484466552734
    3. '(i' → logprob: -9.500484466552734
    4. 'n' → logprob: -11.000484466552734
    5. ' (' → logprob: -11.500484466552734
    6. '-' → logprob: -13.125484466552734
    7. ' -' → logprob: -16.375484466552734
    8. '       ' → logprob: -16.375484466552734
    9. ')i' → logprob: -16.625484466552734
    10. ')' → logprob: -16.750484466552734

Token 113: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6327707171440125
    2. ' -' → logprob: -0.7577707171440125
    3. ' ' → logprob: -9.007770538330078
    4. 'n' → logprob: -10.757770538330078
    5. ')' → logprob: -11.132770538330078
    6. '1' → logprob: -12.632770538330078
    7. ' n' → logprob: -13.632770538330078
    8. '  ' → logprob: -13.632770538330078
    9. '   ' → logprob: -13.757770538330078
    10. '    ' → logprob: -14.132770538330078

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.79811754100956e-05
    2. ' ' → logprob: -10.250038146972656
    3. ')' → logprob: -14.250038146972656
    4. '   ' → logprob: -14.375038146972656
    5. '           ' → logprob: -14.625038146972656
    6. '       ' → logprob: -15.625038146972656
    7. '```' → logprob: -15.625038146972656
    8. ']' → logprob: -16.437538146972656
    9. '
' → logprob: -16.750038146972656
    10. ')]' → logprob: -16.937538146972656

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '
' → logprob: -15.250007629394531
    4. ')' → logprob: -16.12500762939453
    5. '```' → logprob: -16.25000762939453
    6. '   ' → logprob: -16.75000762939453
    7. '       ' → logprob: -17.25000762939453
    8. '2' → logprob: -17.31250762939453
    9. '

' → logprob: -17.62500762939453
    10. '-' → logprob: -17.62500762939453

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004680153448134661
    2. ' )' → logprob: -5.754680156707764
    3. ']' → logprob: -6.629680156707764
    4. 'n' → logprob: -10.129679679870605
    5. ')%' → logprob: -10.254679679870605
    6. ' ]' → logprob: -10.504679679870605
    7. ')]' → logprob: -10.629679679870605
    8. ')n' → logprob: -11.129679679870605
    9. ' ' → logprob: -12.004679679870605
    10. '   ' → logprob: -12.129679679870605

Token 117: ' %' (ID: 1851)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04351188242435455
    2. ')' → logprob: -4.168511867523193
    3. ' %' → logprob: -4.543511867523193
    4. '%' → logprob: -4.668511867523193
    5. ' ]' → logprob: -5.293511867523193
    6. '%n' → logprob: -7.168511867523193
    7. ']%' → logprob: -7.418511867523193
    8. 'n' → logprob: -8.168512344360352
    9. ' ' → logprob: -9.543512344360352
    10. ')%' → logprob: -9.543512344360352

Token 118: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07889232039451599
    2. 'n' → logprob: -2.578892230987549
    3. ')n' → logprob: -13.578892707824707
    4. ' ' → logprob: -14.703892707824707
    5. ')' → logprob: -15.078892707824707
    6. '	n' → logprob: -15.203892707824707
    7. '<|end|>' → logprob: -15.453892707824707
    8. ' ' → logprob: -16.57889175415039
    9. ' н' → logprob: -17.45389175415039
    10. '_n' → logprob: -17.70389175415039

Token 119: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004597439547069371
    2. ']' → logprob: -7.875459671020508
    3. '       ' → logprob: -10.375459671020508
    4. ')]' → logprob: -10.750459671020508
    5. '])' → logprob: -11.750459671020508
    6. ' )' → logprob: -11.875459671020508
    7. ')
' → logprob: -12.000459671020508
    8. '<|end|>' → logprob: -13.875459671020508
    9. ')])' → logprob: -14.250459671020508
    10. ')`' → logprob: -14.250459671020508

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06915124505758286
    2. '
' → logprob: -3.0691511631011963
    3. 'def' → logprob: -4.319151401519775
    4. '    
' → logprob: -5.694151401519775
    5. ' def' → logprob: -6.069151401519775
    6. '<|end|>' → logprob: -6.944151401519775
    7. '<|end|>' → logprob: -9.569150924682617
    8. ' 
' → logprob: -9.569150924682617
    9. '        
' → logprob: -9.819150924682617
    10. '  
' → logprob: -9.819150924682617

Token 121: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008264204487204552
    2. ' def' → logprob: -5.008264064788818
    3. '   ' → logprob: -6.508264064788818
    4. ' ' → logprob: -10.258264541625977
    5. 'class' → logprob: -11.758264541625977
    6. '	def' → logprob: -12.633264541625977
    7. '
' → logprob: -13.133264541625977
    8. '```' → logprob: -13.258264541625977
    9. ')' → logprob: -13.383264541625977
    10. '  ' → logprob: -13.883264541625977

Token 122: ' shortest' (ID: 70564)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.624701738357544
    2. ' find' → logprob: -0.999701738357544
    3. ' __' → logprob: -2.749701738357544
    4. ' ' → logprob: -5.124701499938965
    5. ' add' → logprob: -5.124701499938965
    6. ' def' → logprob: -5.749701499938965
    7. 'get' → logprob: -5.874701499938965
    8. 'find' → logprob: -6.124701499938965
    9. '__' → logprob: -6.249701499938965
    10. ' next' → logprob: -6.249701499938965

Token 123: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.10668254643678665
    2. '_route' → logprob: -2.356682538986206
    3. '_' → logprob: -5.231682777404785
    4. '_distance' → logprob: -7.731682777404785
    5. '_stop' → logprob: -8.231682777404785
    6. '_forward' → logprob: -8.981682777404785
    7. '_trip' → logprob: -9.606682777404785
    8. '_direction' → logprob: -9.981682777404785
    9. '_connection' → logprob: -9.981682777404785
    10. '_cycle' → logprob: -10.481682777404785

Token 124: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005244072061032057
    2. '(' → logprob: -5.255244255065918
    3. '(
' → logprob: -12.005244255065918
    4. ' (' → logprob: -13.880244255065918
    5. '(start' → logprob: -14.005244255065918
    6. 'self' → logprob: -14.505244255065918
    7. '_between' → logprob: -15.005244255065918
    8. '   ' → logprob: -15.130244255065918
    9. '_forward' → logprob: -15.380244255065918
    10. '(from' → logprob: -15.755244255065918

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0770636647939682
    2. 'self' → logprob: -2.82706356048584
    3. '(self' → logprob: -4.45206356048584
    4. ' ,' → logprob: -6.20206356048584
    5. ',self' → logprob: -7.20206356048584
    6. ',start' → logprob: -9.07706356048584
    7. ')(' → logprob: -9.32706356048584
    8. ' self' → logprob: -9.32706356048584
    9. '_start' → logprob: -9.82706356048584
    10. 'start' → logprob: -10.07706356048584

Token 126: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009387578815221786
    2. 'start' → logprob: -5.134387493133545
    3. ' self' → logprob: -5.759387493133545
    4. ' start' → logprob: -8.884387969970703
    5. 'from' → logprob: -9.259387969970703
    6. '   ' → logprob: -10.009387969970703
    7. ')' → logprob: -11.634387969970703
    8. ',' → logprob: -13.009387969970703
    9. '(self' → logprob: -13.384387969970703
    10. 's' → logprob: -13.759387969970703

Token 127: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011266445508226752
    2. ':' → logprob: -7.001126766204834
    3. ' ,' → logprob: -9.251126289367676
    4. '_number' → logprob: -9.376126289367676
    5. '_stop' → logprob: -10.751126289367676
    6. '_bus' → logprob: -11.876126289367676
    7. ':,' → logprob: -13.376126289367676
    8. '_,' → logprob: -13.501126289367676
    9. '_num' → logprob: -14.126126289367676
    10. '_index' → logprob: -14.251126289367676

Token 128: ' Bus' (ID: 21332)
  Prédit: ' Bus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bus' → logprob: -0.1615065038204193
    2. 'Bus' → logprob: -2.036506414413452
    3. 'int' → logprob: -4.911506652832031
    4. ',' → logprob: -5.411506652832031
    5. ' int' → logprob: -5.411506652832031
    6. ' ,' → logprob: -7.661506652832031
    7. 'Stop' → logprob: -8.036506652832031
    8. ')' → logprob: -8.411506652832031
    9. '_bus' → logprob: -8.536506652832031
    10. ' ' → logprob: -8.661506652832031

Token 129: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.981667537620524e-06
    2. ' Stop' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.625001907348633
    4. '_Stop' → logprob: -15.125001907348633
    5. ')' → logprob: -16.125001907348633
    6. '_stop' → logprob: -16.375001907348633
    7. '_STOP' → logprob: -17.250001907348633
    8. '       ' → logprob: -17.375001907348633
    9. 'S' → logprob: -17.375001907348633
    10. '.Stop' → logprob: -17.375001907348633

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',
' → logprob: -17.875001907348633
    4. '‌,' → logprob: -18.000001907348633
    5. ',

' → logprob: -19.625001907348633
    6. ')' → logprob: -20.000001907348633
    7. '*,' → logprob: -20.750001907348633
    8. ',to' → logprob: -21.125001907348633
    9. ',end' → logprob: -21.125001907348633
    10. ',start' → logprob: -21.250001907348633

Token 131: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.016124458983540535
    2. 'end' → logprob: -4.141124248504639
    3. ' ' → logprob: -10.766124725341797
    4. ' goal' → logprob: -11.016124725341797
    5. '   ' → logprob: -11.141124725341797
    6. '	end' → logprob: -11.641124725341797
    7. '  ' → logprob: -12.141124725341797
    8. ' target' → logprob: -12.266124725341797
    9. ' destination' → logprob: -12.641124725341797
    10. 'goal' → logprob: -12.766124725341797

Token 132: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15160878002643585
    2. ':' → logprob: -2.02660870552063
    3. ')' → logprob: -5.526608943939209
    4. ' ):' → logprob: -6.151608943939209
    5. '):
' → logprob: -6.276608943939209
    6. ',' → logprob: -7.276608943939209
    7. ' :' → logprob: -9.02660846710205
    8. ' ' → logprob: -10.65160846710205
    9. ' )' → logprob: -11.02660846710205
    10. '   ' → logprob: -11.65160846710205

Token 133: ' Bus' (ID: 21332)
  Prédit: ' Bus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bus' → logprob: -0.03327644243836403
    2. 'Bus' → logprob: -3.5332765579223633
    3. ')' → logprob: -6.158276557922363
    4. ' ' → logprob: -7.533276557922363
    5. ' bus' → logprob: -7.658276557922363
    6. ' )' → logprob: -8.533276557922363
    7. '_bus' → logprob: -9.658276557922363
    8. ' ' → logprob: -9.783276557922363
    9. '  ' → logprob: -10.783276557922363
    10. '.Bus' → logprob: -11.033276557922363

Token 134: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -3.4121114822482923e-06
    2. ' Stop' → logprob: -14.000003814697266
    3. 'stop' → logprob: -14.125003814697266
    4. 'Top' → logprob: -14.625003814697266
    5. 'op' → logprob: -14.750003814697266
    6. 'Stops' → logprob: -15.625003814697266
    7. '_Stop' → logprob: -15.750003814697266
    8. 'top' → logprob: -16.000003814697266
    9. '_stop' → logprob: -16.375003814697266
    10. '   ' → logprob: -16.500003814697266

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22620168328285217
    2. ')' → logprob: -1.6012016534805298
    3. '):
' → logprob: -7.72620153427124
    4. ')->' → logprob: -8.101202011108398
    5. ' ):' → logprob: -10.851202011108398
    6. ':' → logprob: -11.851202011108398
    7. ',' → logprob: -11.976202011108398
    8. '):
' → logprob: -12.476202011108398
    9. '   ' → logprob: -12.851202011108398
    10. ' )' → logprob: -13.226202011108398

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007144584087654948
    2. '
' → logprob: -7.500714302062988
    3. '        
' → logprob: -9.750714302062988
    4. '        ' → logprob: -10.375714302062988
    5. ',' → logprob: -11.000714302062988
    6. ' if' → logprob: -11.250714302062988
    7. ':' → logprob: -11.875714302062988
    8. '      ' → logprob: -12.250714302062988
    9. '```' → logprob: -12.375714302062988
    10. '#' → logprob: -13.000714302062988

Token 137: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7088549733161926
    2. ' if' → logprob: -1.7088549137115479
    3. '       ' → logprob: -1.7088549137115479
    4. '#' → logprob: -2.583854913711548
    5. 'forward' → logprob: -3.083854913711548
    6. 'visited' → logprob: -4.708855152130127
    7. ' forward' → logprob: -5.583855152130127
    8. 'def' → logprob: -5.958855152130127
    9. 'current' → logprob: -6.083855152130127
    10. 'path' → logprob: -6.583855152130127

Token 138: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.0052406336180865765
    2. 'start' → logprob: -5.255240440368652
    3. ' ' → logprob: -12.755240440368652
    4. '	start' → logprob: -13.505240440368652
    5. ' end' → logprob: -14.130240440368652
    6. '```' → logprob: -14.505240440368652
    7. ' not' → logprob: -15.005240440368652
    8. ' ' → logprob: -15.255240440368652
    9. '  ' → logprob: -15.880240440368652
    10. '   ' → logprob: -16.00524139404297

Token 139: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026492342352867126
    2. '==' → logprob: -3.6514923572540283
    3. ' is' → logprob: -8.77649211883545
    4. '```' → logprob: -11.15149211883545
    5. '.' → logprob: -11.77649211883545
    6. 'is' → logprob: -12.27649211883545
    7. '=' → logprob: -12.65149211883545
    8. ' ' → logprob: -13.27649211883545
    9. '==
' → logprob: -13.65149211883545
    10. ')' → logprob: -13.77649211883545

Token 140: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.16023336350917816
    2. 'end' → logprob: -1.9102333784103394
    3. '=end' → logprob: -12.410233497619629
    4. ' ' → logprob: -12.535233497619629
    5. '	end' → logprob: -14.410233497619629
    6. '=' → logprob: -14.785233497619629
    7. '   ' → logprob: -15.660233497619629
    8. ' ' → logprob: -16.285232543945312
    9. 'e' → logprob: -17.035232543945312
    10. '>end' → logprob: -17.035232543945312

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10065679997205734
    2. ':
' → logprob: -2.350656747817993
    3. ':return' → logprob: -7.725656986236572
    4. '       ' → logprob: -12.600656509399414
    5. ':
' → logprob: -13.475656509399414
    6. 'return' → logprob: -14.100656509399414
    7. ' return' → logprob: -14.600656509399414
    8. '):
' → logprob: -14.600656509399414
    9. '           ' → logprob: -14.725656509399414
    10. ' :' → logprob: -14.975656509399414

Token 142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39245396852493286
    2. ':' → logprob: -1.642453908920288
    3. ':
' → logprob: -2.267453908920288
    4. '
' → logprob: -4.517454147338867
    5. ' return' → logprob: -4.642454147338867
    6. '       ' → logprob: -5.892454147338867
    7. 'return' → logprob: -6.142454147338867
    8. ':return' → logprob: -6.517454147338867
    9. '.' → logprob: -9.142454147338867
    10. '0' → logprob: -9.392454147338867

Token 143: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5203222036361694
    2. 'return' (adapté à ' return') → logprob: -1.7703222036361694
    3. '           ' → logprob: -2.020322322845459
    4. ' [' → logprob: -3.520322322845459
    5. ' ' → logprob: -4.145322322845459
    6. '[' → logprob: -4.270322322845459
    7. ' []
' → logprob: -4.520322322845459
    8. '[]
' → logprob: -4.520322322845459
    9. '0' → logprob: -4.645322322845459
    10. '[]' → logprob: -4.895322322845459

Token 144: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8164397478103638
    2. '[start' → logprob: -0.8164397478103638
    3. '[' → logprob: -2.191439628601074
    4. '[]' → logprob: -5.941439628601074
    5. ' []' → logprob: -7.816439628601074
    6. '[self' → logprob: -8.316439628601074
    7. '[f' → logprob: -8.316439628601074
    8. '[end' → logprob: -8.316439628601074
    9. '[int' → logprob: -9.316439628601074
    10. ' ' → logprob: -10.066439628601074

Token 145: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00038336371653713286
    2. ' start' → logprob: -7.875383377075195
    3. 'end' → logprob: -14.250383377075195
    4. 'stop' → logprob: -14.375383377075195
    5. '   ' → logprob: -14.500383377075195
    6. 'star' → logprob: -14.875383377075195
    7. '
' → logprob: -15.250383377075195
    8. ']' → logprob: -15.375383377075195
    9. ' ' → logprob: -15.875383377075195
    10. '	start' → logprob: -16.375383377075195

Token 146: '.number' (ID: 25737)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004568019416183233
    2. ']
' → logprob: -5.629568099975586
    3. ']

' → logprob: -7.004568099975586
    4. ' ]' → logprob: -9.879568099975586
    5. '       ' → logprob: -12.129568099975586
    6. ']
' → logprob: -13.629568099975586
    7. ']

' → logprob: -14.129568099975586
    8. ']


' → logprob: -14.754568099975586
    9. ' ]
' → logprob: -15.004568099975586
    10. '   ' → logprob: -15.254568099975586

Token 147: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04685063660144806
    2. ']
' → logprob: -3.1718506813049316
    3. '       ' → logprob: -5.921850681304932
    4. ']

' → logprob: -6.796850681304932
    5. ']
' → logprob: -10.921850204467773
    6. ' ]' → logprob: -11.171850204467773
    7. '   ' → logprob: -12.046850204467773
    8. ']

' → logprob: -12.671850204467773
    9. ']


' → logprob: -13.046850204467773
    10. ' ]
' → logprob: -14.421850204467773

Token 148: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01378627959638834
    2. '       ' → logprob: -5.013786315917969
    3. '        
' → logprob: -5.763786315917969
    4. '  
' → logprob: -5.888786315917969
    5. '
        
' → logprob: -8.138786315917969
    6. '<|end|>' → logprob: -8.638786315917969
    7. ' 
' → logprob: -8.888786315917969
    8. '    
' → logprob: -8.888786315917969
    9. '

' → logprob: -9.013786315917969
    10. '```' → logprob: -9.388786315917969

Token 149: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.629608154296875
    2. 'forward' → logprob: -1.504608154296875
    3. 'path' → logprob: -2.504608154296875
    4. '#' (adapté à ' #') → logprob: -2.879608154296875
    5. 'visited' → logprob: -3.004608154296875
    6. '
' → logprob: -4.629608154296875
    7. ' forward' → logprob: -4.754608154296875
    8. ' path' → logprob: -4.754608154296875
    9. 'current' → logprob: -4.879608154296875
    10. 'distance' → logprob: -5.254608154296875

Token 150: ' Travel' (ID: 20922)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0189803838729858
    2. 'visited' → logprob: -1.2689803838729858
    3. 'forward' → logprob: -1.3939803838729858
    4. ' forward' → logprob: -3.8939805030822754
    5. 'start' → logprob: -4.268980503082275
    6. ' visited' → logprob: -4.393980503082275
    7. 'from' → logprob: -4.518980503082275
    8. 'path' → logprob: -4.893980503082275
    9. 'def' → logprob: -5.018980503082275
    10. ' #' → logprob: -5.143980503082275

Token 151: ' forwards' (ID: 93590)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.5219382643699646
    2. ' forward' → logprob: -1.1469383239746094
    3. 'forward' → logprob: -2.5219383239746094
    4. '   ' → logprob: -5.396938323974609
    5. 'ing' → logprob: -6.771938323974609
    6. ' forwards' → logprob: -8.27193832397461
    7. '_backward' → logprob: -8.27193832397461
    8. '       ' → logprob: -8.39693832397461
    9. 'in' → logprob: -8.64693832397461
    10. 'both' → logprob: -8.89693832397461

Token 152: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03511195257306099
    2. '_path' → logprob: -5.160111904144287
    3. ' path' → logprob: -5.160111904144287
    4. ',' → logprob: -5.285111904144287
    5. 'path' → logprob: -5.660111904144287
    6. '
' → logprob: -6.035111904144287
    7. ' and' → logprob: -6.160111904144287
    8. ':' → logprob: -6.285111904144287
    9. ' forward' → logprob: -6.660111904144287
    10. '        
' → logprob: -6.785111904144287

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021274689584970474
    2. ' path' → logprob: -4.771274566650391
    3. '
' → logprob: -6.146274566650391
    4. ',' → logprob: -6.271274566650391
    5. ' forward' → logprob: -6.271274566650391
    6. 'path' → logprob: -6.521274566650391
    7. 'forward' → logprob: -7.146274566650391
    8. ' and' → logprob: -7.146274566650391
    9. '_path' → logprob: -7.146274566650391
    10. ':' → logprob: -7.396274566650391

Token 154: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.42127829790115356
    2. 'forward' → logprob: -1.2962782382965088
    3. ' path' → logprob: -3.171278238296509
    4. 'for' → logprob: -4.296278476715088
    5. 'current' → logprob: -4.671278476715088
    6. ' forward' → logprob: -6.171278476715088
    7. '       ' → logprob: -6.796278476715088
    8. '   ' → logprob: -7.296278476715088
    9. 'route' → logprob: -7.671278476715088
    10. ' current' → logprob: -8.54627799987793

Token 155: '_fw' (ID: 146828)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.05438034236431122
    2. '_f' → logprob: -3.554380416870117
    3. '_for' → logprob: -4.429380416870117
    4. ' =' → logprob: -4.679380416870117
    5. '_fw' → logprob: -5.804380416870117
    6. '_' → logprob: -10.304380416870117
    7. 's' → logprob: -11.054380416870117
    8. '_length' → logprob: -11.179380416870117
    9. '_len' → logprob: -11.929380416870117
    10. '1' → logprob: -12.054380416870117

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012853829190135002
    2. 'ard' → logprob: -5.262853622436523
    3. '=' → logprob: -5.637853622436523
    4. ',' → logprob: -7.137853622436523
    5. '_' → logprob: -7.137853622436523
    6. '   ' → logprob: -7.387853622436523
    7. 'ay' → logprob: -7.387853622436523
    8. ' ' → logprob: -8.637853622436523
    9. '_numbers' → logprob: -8.637853622436523
    10. 'd' → logprob: -8.762853622436523

Token 157: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5536407828330994
    2. '[start' → logprob: -1.3036408424377441
    3. '[' → logprob: -2.428640842437744
    4. '[self' → logprob: -3.053640842437744
    5. '[]
' → logprob: -4.803640842437744
    6. '[]' → logprob: -5.053640842437744
    7. ' []
' → logprob: -7.178640842437744
    8. '[next' → logprob: -7.428640842437744
    9. ' ' → logprob: -7.678640842437744
    10. '[current' → logprob: -7.803640842437744

Token 158: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.14376921951770782
    2. '       ' → logprob: -2.2687692642211914
    3. ' current' → logprob: -3.5187692642211914
    4. 'stop' → logprob: -8.143769264221191
    5. 'curr' → logprob: -8.268769264221191
    6. ',current' → logprob: -9.143769264221191
    7. '   ' → logprob: -9.893769264221191
    8. ',' → logprob: -10.268769264221191
    9. '
' → logprob: -11.018769264221191
    10. 'cur' → logprob: -11.143769264221191

Token 159: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0015506906202062964
    2. 'curr' → logprob: -7.001550674438477
    3. ' current' → logprob: -8.126550674438477
    4. '       ' → logprob: -8.501550674438477
    5. 'cur' → logprob: -9.126550674438477
    6. 'stop' → logprob: -10.626550674438477
    7. '   ' → logprob: -12.376550674438477
    8. 'node' → logprob: -13.876550674438477
    9. 'temp' → logprob: -14.876550674438477
    10. 'cursor' → logprob: -15.001550674438477

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017100441036745906
    2. '=' → logprob: -6.376709938049316
    3. ' ' → logprob: -12.876709938049316
    4. '.' → logprob: -13.501709938049316
    5. '_stop' → logprob: -14.001709938049316
    6. '<|end|>' → logprob: -14.376709938049316
    7. '=current' → logprob: -14.376709938049316
    8. ' =
' → logprob: -14.751709938049316
    9. '<|end|>' → logprob: -15.376709938049316
    10. '_' → logprob: -15.501709938049316

Token 161: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3132701516151428
    2. ' start' → logprob: -1.313270092010498
    3. '
' → logprob: -13.063270568847656
    4. '[start' → logprob: -13.188270568847656
    5. '=start' → logprob: -13.438270568847656
    6. '	start' → logprob: -14.063270568847656
    7. 'stop' → logprob: -14.813270568847656
    8. '.start' → logprob: -15.313270568847656
    9. ' ' → logprob: -15.438270568847656
    10. '(start' → logprob: -15.438270568847656

Token 162: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04104838892817497
    2. ' while' → logprob: -3.416048288345337
    3. '       ' → logprob: -4.916048526763916
    4. '
' → logprob: -10.916048049926758
    5. 'path' → logprob: -11.791048049926758
    6. '	while' → logprob: -12.166048049926758
    7. '        
' → logprob: -12.791048049926758
    8. '[' → logprob: -13.041048049926758
    9. 'While' → logprob: -13.041048049926758
    10. '0' → logprob: -13.416048049926758

Token 165: ' True' (ID: 6432)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.006715967319905758
    2. ' current' → logprob: -5.006715774536133
    3. 'True' → logprob: -14.631715774536133
    4. '.current' → logprob: -17.381715774536133
    5. ' True' → logprob: -17.381715774536133
    6. '	current' → logprob: -17.631715774536133
    7. '(current' → logprob: -17.881715774536133
    8. '   ' → logprob: -18.006715774536133
    9. '[current' → logprob: -18.506715774536133
    10. '$current' → logprob: -18.506715774536133

Token 166: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6496323943138123
    2. ':' → logprob: -0.7746323943138123
    3. '           ' → logprob: -5.024632453918457
    4. '<|end|>' → logprob: -5.274632453918457
    5. '
' → logprob: -6.149632453918457
    6. ' and' → logprob: -6.899632453918457
    7. '<|end|>' → logprob: -7.399632453918457
    8. '):
' → logprob: -7.649632453918457
    9. ',' → logprob: -7.899632453918457
    10. ':

' → logprob: -8.524632453918457

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02174185961484909
    2. '
' → logprob: -4.14674186706543
    3. '   ' → logprob: -5.89674186706543
    4. '       ' → logprob: -6.64674186706543
    5. '    
' → logprob: -7.77174186706543
    6. ' if' → logprob: -8.14674186706543
    7. '            
' → logprob: -8.14674186706543
    8. '<|end|>' → logprob: -8.64674186706543
    9. ' 
' → logprob: -8.77174186706543
    10. '```' → logprob: -9.77174186706543

Token 168: ' path' (ID: 3104)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7935128808021545
    2. ' path' → logprob: -0.9185128808021545
    3. 'path' (adapté à ' path') → logprob: -2.9185128211975098
    4. ' if' → logprob: -3.0435128211975098
    5. '
' → logprob: -4.29351282119751
    6. '               ' → logprob: -4.54351282119751
    7. ' 
' → logprob: -5.04351282119751
    8. '   ' → logprob: -5.41851282119751
    9. '       ' → logprob: -5.41851282119751
    10. ' current' → logprob: -6.54351282119751

Token 169: '_fw' (ID: 146828)
  Prédit: '_fw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fw' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -15.125000953674316
    3. '_bw' → logprob: -16.875
    4. '_fk' → logprob: -17.0
    5. '._' → logprob: -17.375
    6. '       ' → logprob: -17.5
    7. '_fc' → logprob: -17.5
    8. '_pw' → logprob: -17.75
    9. '_FW' → logprob: -17.75
    10. '_hw' → logprob: -17.75

Token 170: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.031157969729975e-05
    2. '.' → logprob: -9.375090599060059
    3. 'append' → logprob: -12.250090599060059
    4. ' .' → logprob: -14.875090599060059
    5. '.push' → logprob: -16.500089645385742
    6. '.app' → logprob: -16.500089645385742
    7. '.extend' → logprob: -17.000089645385742
    8. '.Append' → logprob: -17.375089645385742
    9. '.add' → logprob: -17.500089645385742
    10. '_append' → logprob: -17.625089645385742

Token 171: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0007418495370075107
    2. 'current' → logprob: -7.250741958618164
    3. '(' → logprob: -11.000741958618164
    4. ' current' → logprob: -11.125741958618164
    5. '(
' → logprob: -15.250741958618164
    6. '	current' → logprob: -16.125741958618164
    7. ' (' → logprob: -16.500741958618164
    8. '$current' → logprob: -16.750741958618164
    9. '.current' → logprob: -17.250741958618164
    10. ',current' → logprob: -17.375741958618164

Token 172: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -4.692145012086257e-05
    2. ').' → logprob: -10.625046730041504
    3. ')' → logprob: -11.250046730041504
    4. '.' → logprob: -11.875046730041504
    5. '.n' → logprob: -14.250046730041504
    6. ' .' → logprob: -14.500046730041504
    7. '.numero' → logprob: -15.000046730041504
    8. '.current' → logprob: -15.125046730041504
    9. 'number' → logprob: -15.250046730041504
    10. '.connected' → logprob: -15.625046730041504

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.577285647392273
    2. ')
' → logprob: -0.827285647392273
    3. '           ' → logprob: -6.7022857666015625
    4. ')
' → logprob: -9.952285766601562
    5. ')

' → logprob: -10.077285766601562
    6. '               ' → logprob: -10.952285766601562
    7. '
' → logprob: -12.952285766601562
    8. '       ' → logprob: -13.077285766601562
    9. ' )
' → logprob: -13.827285766601562
    10. '   ' → logprob: -14.452285766601562

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20660826563835144
    2. '
' → logprob: -1.7066082954406738
    3. ' 
' → logprob: -6.331608295440674
    4. '            
' → logprob: -6.456608295440674
    5. '<|end|>' → logprob: -7.456608295440674
    6. ' if' → logprob: -8.081607818603516
    7. '
' → logprob: -8.331607818603516
    8. '    
' → logprob: -8.956607818603516
    9. '  
' → logprob: -8.956607818603516
    10. 'if' → logprob: -9.206607818603516

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01647324115037918
    2. ' if' → logprob: -4.891473293304443
    3. '           ' → logprob: -5.016473293304443
    4. 'current' → logprob: -6.141473293304443
    5. '
' → logprob: -10.516472816467285
    6. ' current' → logprob: -10.891472816467285
    7. '```' → logprob: -14.016472816467285
    8. '            
' → logprob: -14.516472816467285
    9. '            ' → logprob: -15.016472816467285
    10. ' 
' → logprob: -15.891472816467285

Token 176: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.02324605919420719
    2. ' current' → logprob: -3.7732460498809814
    3. '.current' → logprob: -16.27324676513672
    4. '(current' → logprob: -16.27324676513672
    5. '$current' → logprob: -16.39824676513672
    6. 'urrent' → logprob: -16.77324676513672
    7. '[current' → logprob: -16.77324676513672
    8. '=current' → logprob: -17.14824676513672
    9. '_current' → logprob: -17.14824676513672
    10. '	current' → logprob: -17.77324676513672

Token 177: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004092174116522074
    2. '==' → logprob: -5.504092216491699
    3. ' is' → logprob: -12.0040922164917
    4. '<|end|>' → logprob: -12.6290922164917
    5. ' ' → logprob: -13.1290922164917
    6. '.connected' → logprob: -13.8790922164917
    7. '<|end|>' → logprob: -14.6290922164917
    8. '.number' → logprob: -15.7540922164917
    9. ')==' → logprob: -15.7540922164917
    10. '.' → logprob: -15.8790922164917

Token 178: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.008617646060883999
    2. ' end' → logprob: -4.758617877960205
    3. '=end' → logprob: -12.883617401123047
    4. '[end' → logprob: -15.508617401123047
    5. '(end' → logprob: -15.758617401123047
    6. ':end' → logprob: -16.508617401123047
    7. ' ' → logprob: -16.633617401123047
    8. '.end' → logprob: -17.133617401123047
    9. '	end' → logprob: -17.133617401123047
    10. '_end' → logprob: -17.508617401123047

Token 179: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16131721436977386
    2. ':' → logprob: -1.911317229270935
    3. '               ' → logprob: -7.036317348480225
    4. '           ' → logprob: -9.161316871643066
    5. '):
' → logprob: -10.036316871643066
    6. ' or' → logprob: -10.161316871643066
    7. ':
' → logprob: -12.036316871643066
    8. ':

' → logprob: -12.161316871643066
    9. ':return' → logprob: -13.161316871643066
    10. '():
' → logprob: -13.161316871643066

Token 180: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007441143970936537
    2. '
' → logprob: -7.500744342803955
    3. '                
' → logprob: -9.875743865966797
    4. ' break' → logprob: -10.000743865966797
    5. '           ' → logprob: -10.375743865966797
    6. ':
' → logprob: -10.625743865966797
    7. 'break' → logprob: -11.375743865966797
    8. ' 
' → logprob: -12.500743865966797
    9. ':' → logprob: -12.750743865966797
    10. '                   ' → logprob: -12.750743865966797

Token 181: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7509053349494934
    2. ' break' → logprob: -0.8759053349494934
    3. '               ' → logprob: -2.5009052753448486
    4. 'break' (adapté à ' break') → logprob: -3.6259052753448486
    5. '
' → logprob: -6.125905513763428
    6. '   ' → logprob: -8.00090503692627
    7. '	break' → logprob: -9.00090503692627
    8. '       ' → logprob: -9.25090503692627
    9. ' return' → logprob: -10.00090503692627
    10. '                   ' → logprob: -10.12590503692627

Token 182: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16160570085048676
    2. '
' → logprob: -1.911605715751648
    3. '    
' → logprob: -7.6616058349609375
    4. '            
' → logprob: -8.036605834960938
    5. 'current' → logprob: -8.661605834960938
    6. '       ' → logprob: -8.786605834960938
    7. ' current' → logprob: -9.911605834960938
    8. '   ' → logprob: -10.036605834960938
    9. '
' → logprob: -10.286605834960938
    10. '  
' → logprob: -10.536605834960938

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.615255839889869e-05
    2. 'current' → logprob: -10.125096321105957
    3. ' current' → logprob: -10.500096321105957
    4. '
' → logprob: -11.250096321105957
    5. '       ' → logprob: -11.750096321105957
    6. '               ' → logprob: -13.125096321105957
    7. '   ' → logprob: -14.125096321105957
    8. ',' → logprob: -14.250096321105957
    9. '<|end|>' → logprob: -14.250096321105957
    10. '            
' → logprob: -14.500096321105957

Token 184: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.8852825164794922
    2. ' current' → logprob: -1.0102825164794922
    3. '           ' → logprob: -1.5102825164794922
    4. '
' → logprob: -7.135282516479492
    5. '	current' → logprob: -7.385282516479492
    6. 'urrent' → logprob: -7.885282516479492
    7. '   ' → logprob: -8.260282516479492
    8. '       ' → logprob: -9.260282516479492
    9. '            
' → logprob: -9.385282516479492
    10. '.current' → logprob: -10.260282516479492

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760120749473572
    2. ' =' → logprob: -0.8260120749473572
    3. '=current' → logprob: -9.826011657714844
    4. 'current' → logprob: -11.326011657714844
    5. 'connected' → logprob: -13.076011657714844
    6. ' current' → logprob: -13.326011657714844
    7. '.' → logprob: -14.076011657714844
    8. ' ' → logprob: -14.076011657714844
    9. '.current' → logprob: -15.076011657714844
    10. '.connected' → logprob: -15.451011657714844

Token 186: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011051828041672707
    2. ' current' → logprob: -4.511051654815674
    3. '.current' → logprob: -13.136052131652832
    4. 'urrent' → logprob: -13.636052131652832
    5. '	current' → logprob: -15.011052131652832
    6. '(current' → logprob: -15.761052131652832
    7. '[current' → logprob: -15.761052131652832
    8. '$current' → logprob: -15.886052131652832
    9. '=current' → logprob: -16.636051177978516
    10. '_current' → logprob: -17.511051177978516

Token 187: '.connected' (ID: 134294)
  Prédit: '.connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.12500286102295
    3. ' .' → logprob: -14.87500286102295
    4. '.current' → logprob: -15.50000286102295
    5. 'connected' → logprob: -16.375001907348633
    6. '.ass' → logprob: -17.875001907348633
    7. '.connection' → logprob: -18.000001907348633
    8. '.forward' → logprob: -18.875001907348633
    9. '.connections' → logprob: -19.000001907348633
    10. '.link' → logprob: -19.125001907348633

Token 188: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -6.704273118884885e-07
    2. '_backward' → logprob: -14.625000953674316
    3. '_' → logprob: -16.625
    4. '"_' → logprob: -17.875
    5. 'forward' → logprob: -18.375
    6. '```' → logprob: -19.75
    7. '_for' → logprob: -20.0
    8. '_FORWARD' → logprob: -20.0
    9. '__' → logprob: -20.125
    10. ' _' → logprob: -20.25

Token 189: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6376010775566101
    2. '
' → logprob: -0.7626010775566101
    3. '        
' → logprob: -5.887600898742676
    4. '#' → logprob: -7.137600898742676
    5. '
' → logprob: -7.637600898742676
    6. '<|end|>' → logprob: -7.887600898742676
    7. '

' → logprob: -9.262600898742676
    8. '


' → logprob: -9.762600898742676
    9. 'newline' → logprob: -9.887600898742676
    10. '```' → logprob: -10.012600898742676

Token 190: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6444937586784363
    2. '       ' → logprob: -0.7694937586784363
    3. '        
' → logprob: -4.894493579864502
    4. '<|end|>' → logprob: -5.769493579864502
    5. '#' → logprob: -8.26949405670166
    6. '
' → logprob: -8.26949405670166
    7. '<|end|>' → logprob: -8.76949405670166
    8. '```' → logprob: -9.01949405670166
    9. '

' → logprob: -9.14449405670166
    10. '  
' → logprob: -9.51949405670166

Token 191: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5830463171005249
    2. '       ' → logprob: -0.8330463171005249
    3. '        
' → logprob: -5.3330464363098145
    4. '#' (adapté à ' #') → logprob: -6.9580464363098145
    5. '
' → logprob: -7.4580464363098145
    6. '

' → logprob: -8.458045959472656
    7. '```' → logprob: -8.833045959472656
    8. '   ' → logprob: -9.083045959472656
    9. '    
' → logprob: -9.458045959472656
    10. '  
' → logprob: -10.708045959472656

Token 192: ' Travel' (ID: 20922)
  Prédit: ' Travel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Travel' → logprob: -0.390094131231308
    2. 'Travel' → logprob: -1.3900941610336304
    3. '#' → logprob: -3.140094041824341
    4. ' #' → logprob: -4.14009428024292
    5. '       ' → logprob: -4.76509428024292
    6. 'Calculate' → logprob: -6.76509428024292
    7. ' path' → logprob: -7.01509428024292
    8. ' travel' → logprob: -7.01509428024292
    9. ' ' → logprob: -7.39009428024292
    10. 'path' → logprob: -7.64009428024292

Token 193: ' backwards' (ID: 59879)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.6341096758842468
    2. ' backwards' → logprob: -1.2591097354888916
    3. ' backward' → logprob: -1.8841097354888916
    4. '_back' → logprob: -3.8841097354888916
    5. '_backward' → logprob: -5.0091094970703125
    6. ' back' → logprob: -5.1341094970703125
    7. '_b' → logprob: -8.884109497070312
    8. '_' → logprob: -8.884109497070312
    9. '.backward' → logprob: -9.134109497070312
    10. ' ' → logprob: -10.259109497070312

Token 194: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10027837753295898
    2. '
' → logprob: -2.350278377532959
    3. '        
' → logprob: -10.725278854370117
    4. '
' → logprob: -11.100278854370117
    5. ':
' → logprob: -12.100278854370117
    6. ' path' → logprob: -12.350278854370117
    7. ':' → logprob: -12.475278854370117
    8. '```' → logprob: -12.475278854370117
    9. '  
' → logprob: -12.850278854370117
    10. '<|end|>' → logprob: -12.975278854370117

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31340131163597107
    2. '
' → logprob: -1.3134013414382935
    3. '
' → logprob: -9.438401222229004
    4. '<|end|>' → logprob: -10.813401222229004
    5. '        
' → logprob: -11.688401222229004
    6. '

' → logprob: -11.938401222229004
    7. '```' → logprob: -11.938401222229004
    8. '   ' → logprob: -12.563401222229004
    9. ':' → logprob: -12.813401222229004
    10. '  
' → logprob: -13.063401222229004

Token 196: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.1291593611240387
    2. 'path' (adapté à ' path') → logprob: -2.129159450531006
    3. '       ' → logprob: -6.129159450531006
    4. '
' → logprob: -10.879158973693848
    5. '_path' → logprob: -11.629158973693848
    6. '   ' → logprob: -12.129158973693848
    7. '.path' → logprob: -12.504158973693848
    8. ' ' → logprob: -13.129158973693848
    9. '```' → logprob: -13.129158973693848
    10. '	path' → logprob: -13.379158973693848

Token 197: '_bw' (ID: 172602)
  Prédit: '_bw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bw' → logprob: -0.0005567280459217727
    2. '_b' → logprob: -8.500556945800781
    3. '_' → logprob: -9.000556945800781
    4. '_bc' → logprob: -9.875556945800781
    5. '_bb' → logprob: -10.500556945800781
    6. '_rb' → logprob: -10.625556945800781
    7. '_pb' → logprob: -10.625556945800781
    8. '_back' → logprob: -11.000556945800781
    9. '_bg' → logprob: -11.125556945800781
    10. '__' → logprob: -11.250556945800781

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021130740642548
    2. '=' → logprob: -2.3502113819122314
    3. '=[]' → logprob: -12.350211143493652
    4. ' ' → logprob: -15.225211143493652
    5. '=[]
' → logprob: -15.850211143493652
    6. '[]' → logprob: -18.22521209716797
    7. 's' → logprob: -18.47521209716797
    8. ',' → logprob: -18.85021209716797
    9. '   ' → logprob: -19.10021209716797
    10. ' =[' → logprob: -19.60021209716797

Token 199: ' []
' (ID: 8911)
  Prédit: ' []
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []
' → logprob: -0.13808134198188782
    2. '[]
' → logprob: -2.6380813121795654
    3. ' []' → logprob: -3.1380813121795654
    4. '[]' → logprob: -4.2630815505981445
    5. ' []
' → logprob: -11.263081550598145
    6. ' []

' → logprob: -11.888081550598145
    7. '[]

' → logprob: -12.763081550598145
    8. '=[]
' → logprob: -13.013081550598145
    9. ' ' → logprob: -13.513081550598145
    10. ' [' → logprob: -13.638081550598145

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008637497201561928
    2. 'current' → logprob: -4.883637428283691
    3. ' current' → logprob: -6.883637428283691
    4. '   ' → logprob: -12.633637428283691
    5. '
' → logprob: -13.633637428283691
    6. 'Current' → logprob: -14.008637428283691
    7. '(current' → logprob: -15.508637428283691
    8. '	current' → logprob: -15.883637428283691
    9. '[current' → logprob: -15.883637428283691
    10. '```' → logprob: -16.258638381958008

Token 201: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0011736786691471934
    2. ' current' → logprob: -6.751173496246338
    3. '       ' → logprob: -12.626173973083496
    4. '
' → logprob: -16.62617301940918
    5. 'Current' → logprob: -18.00117301940918
    6. '.current' → logprob: -18.12617301940918
    7. '   ' → logprob: -18.25117301940918
    8. 'curr' → logprob: -18.87617301940918
    9. '	current' → logprob: -18.87617301940918
    10. 'start' → logprob: -19.00117301940918

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022524237632751
    2. '=' → logprob: -1.91022527217865
    3. '=start' → logprob: -13.910224914550781
    4. ' ' → logprob: -15.660224914550781
    5. '=end' → logprob: -17.91022491455078
    6. '=
' → logprob: -17.91022491455078
    7. ' =
' → logprob: -17.91022491455078
    8. '=current' → logprob: -18.41022491455078
    9. '.=' → logprob: -18.41022491455078
    10. '=b' → logprob: -18.66022491455078

Token 203: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2519412040710449
    2. ' start' → logprob: -1.501941204071045
    3. 'end' → logprob: -11.626941680908203
    4. ' end' → logprob: -12.751941680908203
    5. '[start' → logprob: -15.376941680908203
    6. '=start' → logprob: -16.626941680908203
    7. '	start' → logprob: -17.751941680908203
    8. ' ' → logprob: -17.751941680908203
    9. '(start' → logprob: -17.751941680908203
    10. ':start' → logprob: -18.376941680908203

Token 204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06176665797829628
    2. 'while' → logprob: -3.6867666244506836
    3. '       ' → logprob: -4.061766624450684
    4. '<|end|>' → logprob: -4.436766624450684
    5. '        
' → logprob: -5.686766624450684
    6. ' while' → logprob: -6.686766624450684
    7. '    
' → logprob: -7.811766624450684
    8. ' 
' → logprob: -8.186766624450684
    9. '  
' → logprob: -8.686766624450684
    10. '
' → logprob: -9.436766624450684

Token 205: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10192825645208359
    2. '       ' → logprob: -2.351928234100342
    3. ' while' → logprob: -6.476928234100342
    4. '
' → logprob: -8.9769287109375
    5. '	while' → logprob: -10.6019287109375
    6. '   ' → logprob: -11.1019287109375
    7. '        ' → logprob: -12.7269287109375
    8. '        
' → logprob: -12.7269287109375
    9. '	' → logprob: -13.3519287109375
    10. '    ' → logprob: -13.6019287109375

Token 206: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0007102862582542002
    2. ' while' → logprob: -7.250710487365723
    3. 'While' → logprob: -15.875710487365723
    4. '[]' → logprob: -16.375709533691406
    5. '	while' → logprob: -17.625709533691406
    6. '
' → logprob: -18.375709533691406
    7. '       ' → logprob: -19.000709533691406
    8. '[]
' → logprob: -19.000709533691406
    9. 'True' → logprob: -19.125709533691406
    10. 'False' → logprob: -19.375709533691406

Token 207: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0297551192343235
    2. ' True' → logprob: -3.529755115509033
    3. '(True' → logprob: -12.404755592346191
    4. 'current' → logprob: -15.404755592346191
    5. ' ' → logprob: -15.779755592346191
    6. 'not' → logprob: -16.279754638671875
    7. ' not' → logprob: -16.779754638671875
    8. '   ' → logprob: -17.404754638671875
    9. ' ' → logprob: -17.529754638671875
    10. ' current' → logprob: -18.279754638671875

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7226869463920593
    2. ':
' → logprob: -1.097687005996704
    3. '           ' → logprob: -1.722687005996704
    4. '       ' → logprob: -6.347686767578125
    5. '   ' → logprob: -9.222686767578125
    6. '):
' → logprob: -9.347686767578125
    7. '<|end|>' → logprob: -9.472686767578125
    8. '          ' → logprob: -9.597686767578125
    9. ',' → logprob: -9.972686767578125
    10. '{' → logprob: -10.222686767578125

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037490393151529133
    2. 'path' → logprob: -8.000374794006348
    3. '   ' → logprob: -10.875374794006348
    4. '       ' → logprob: -11.375374794006348
    5. ' path' → logprob: -12.375374794006348
    6. '```' → logprob: -13.750374794006348
    7. '		' → logprob: -13.875374794006348
    8. '	       ' → logprob: -14.250374794006348
    9. '{
' → logprob: -14.500374794006348
    10. '          ' → logprob: -15.000374794006348

Token 210: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.34129393100738525
    2. '           ' → logprob: -1.5912939310073853
    3. '       ' → logprob: -2.5912938117980957
    4. ' path' → logprob: -4.716293811798096
    5. '   ' → logprob: -6.466293811798096
    6. '	path' → logprob: -10.466294288635254
    7. '               ' → logprob: -11.716294288635254
    8. ' ' → logprob: -11.966294288635254
    9. '         ' → logprob: -12.591294288635254
    10. '     ' → logprob: -12.716294288635254

Token 211: '_bw' (ID: 172602)
  Prédit: '_bw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bw' → logprob: -4.723352049040841e-06
    2. '_fw' → logprob: -12.375004768371582
    3. 'bw' → logprob: -15.500004768371582
    4. '	bw' → logprob: -16.625003814697266
    5. '_backward' → logprob: -17.250003814697266
    6. 'Bw' → logprob: -17.750003814697266
    7. '   ' → logprob: -17.875003814697266
    8. '_' → logprob: -18.250003814697266
    9. '_hw' → logprob: -18.500003814697266
    10. '__' → logprob: -18.625003814697266

Token 212: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.380904672667384e-05
    2. 'append' → logprob: -11.125033378601074
    3. '_bw' → logprob: -11.625033378601074
    4. 'bw' → logprob: -11.875033378601074
    5. '.' → logprob: -13.125033378601074
    6. 'Bw' → logprob: -15.375033378601074
    7. ' .' → logprob: -15.750033378601074
    8. '_append' → logprob: -16.12503433227539
    9. '       ' → logprob: -16.37503433227539
    10. '.push' → logprob: -16.50003433227539

Token 213: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.001508674118667841
    2. 'current' → logprob: -6.501508712768555
    3. '(' → logprob: -12.126508712768555
    4. ' current' → logprob: -14.126508712768555
    5. ' (' → logprob: -17.001508712768555
    6. '$current' → logprob: -18.126508712768555
    7. '[current' → logprob: -18.251508712768555
    8. '(cur' → logprob: -18.751508712768555
    9. ',current' → logprob: -18.751508712768555
    10. '(
' → logprob: -18.876508712768555

Token 214: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.00012415809032972902
    2. '.' → logprob: -9.000123977661133
    3. ' .' → logprob: -14.500123977661133
    4. 'number' → logprob: -15.750123977661133
    5. '.numero' → logprob: -17.875123977661133
    6. '.connected' → logprob: -18.125123977661133
    7. '.n' → logprob: -18.875123977661133
    8. '.current' → logprob: -18.875123977661133
    9. '.Number' → logprob: -19.125123977661133
    10. '.space' → logprob: -19.125123977661133

Token 215: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0355214923620224
    2. ')' → logprob: -3.4105215072631836
    3. '           ' → logprob: -6.285521507263184
    4. '       ' → logprob: -12.785521507263184
    5. ')
' → logprob: -12.910521507263184
    6. ' )
' → logprob: -13.535521507263184
    7. ')

' → logprob: -13.660521507263184
    8. '   ' → logprob: -14.160521507263184
    9. '):
' → logprob: -14.660521507263184
    10. 'if' → logprob: -14.910521507263184

Token 216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004480692732613534
    2. '       ' → logprob: -7.875448226928711
    3. 'if' → logprob: -10.125448226928711
    4. '   ' → logprob: -11.250448226928711
    5. ' if' → logprob: -11.750448226928711
    6. '               ' → logprob: -13.000448226928711
    7. '         ' → logprob: -13.375448226928711
    8. '          ' → logprob: -13.500448226928711
    9. '```' → logprob: -14.875448226928711
    10. '        ' → logprob: -15.000448226928711

Token 217: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42941519618034363
    2. ' if' → logprob: -1.179415225982666
    3. '           ' → logprob: -3.179415225982666
    4. '   ' → logprob: -10.804414749145508
    5. '       ' → logprob: -11.054414749145508
    6. ' ' → logprob: -13.429414749145508
    7. '
' → logprob: -14.054414749145508
    8. ' current' → logprob: -14.429414749145508
    9. '          ' → logprob: -14.429414749145508
    10. '         ' → logprob: -14.554414749145508

Token 218: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.31326669454574585
    2. ' current' → logprob: -1.3132667541503906
    3. '(current' → logprob: -12.43826675415039
    4. '[current' → logprob: -14.93826675415039
    5. 'Current' → logprob: -15.18826675415039
    6. '.current' → logprob: -16.31326675415039
    7. '$current' → logprob: -16.43826675415039
    8. '_current' → logprob: -16.81326675415039
    9. '	current' → logprob: -17.06326675415039
    10. '=current' → logprob: -17.43826675415039

Token 219: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005234475247561932
    2. '==' → logprob: -5.255234241485596
    3. ' =' → logprob: -15.005234718322754
    4. ' ' → logprob: -16.005233764648438
    5. '=' → logprob: -16.255233764648438
    6. ' ' → logprob: -17.130233764648438
    7. ' ==
' → logprob: -17.380233764648438
    8. '<|end|>' → logprob: -17.880233764648438
    9. '==
' → logprob: -18.005233764648438
    10. '.connected' → logprob: -18.380233764648438

Token 220: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10020958632230759
    2. ' end' → logprob: -2.3502094745635986
    3. '(end' → logprob: -13.72520923614502
    4. ' ' → logprob: -14.10020923614502
    5. '=end' → logprob: -15.47520923614502
    6. '   ' → logprob: -15.60020923614502
    7. '	end' → logprob: -15.72520923614502
    8. '[end' → logprob: -15.85020923614502
    9. '.end' → logprob: -16.725210189819336
    10. '  ' → logprob: -17.225210189819336

Token 221: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5370950102806091
    2. ':
' → logprob: -1.287095069885254
    3. '           ' → logprob: -2.037095069885254
    4. ':' → logprob: -4.787095069885254
    5. '       ' → logprob: -7.662095069885254
    6. ',' → logprob: -9.162095069885254
    7. '<|end|>' → logprob: -9.912095069885254
    8. '):
' → logprob: -10.162095069885254
    9. ' or' → logprob: -11.287095069885254
    10. '
' → logprob: -11.662095069885254

Token 222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3933599591255188
    2. '           ' → logprob: -1.143359899520874
    3. '       ' → logprob: -5.268360137939453
    4. 'break' → logprob: -7.268360137939453
    5. ' break' → logprob: -7.518360137939453
    6. '
' → logprob: -10.643360137939453
    7. '   ' → logprob: -11.268360137939453
    8. 'current' → logprob: -12.018360137939453
    9. ':
' → logprob: -12.018360137939453
    10. '            
' → logprob: -12.143360137939453

Token 223: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.25775182247161865
    2. ' break' → logprob: -1.7577518224716187
    3. '               ' → logprob: -3.382751941680908
    4. '           ' → logprob: -3.882751941680908
    5. '       ' → logprob: -9.00775146484375
    6. '
' → logprob: -9.88275146484375
    7. '	break' → logprob: -10.13275146484375
    8. '   ' → logprob: -11.75775146484375
    9. '                   ' → logprob: -13.25775146484375
    10. '_break' → logprob: -13.25775146484375

Token 224: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00212325737811625
    2. 'current' → logprob: -7.0021233558654785
    3. '
' → logprob: -7.1271233558654785
    4. '       ' → logprob: -8.37712287902832
    5. ' current' → logprob: -9.00212287902832
    6. '   ' → logprob: -10.50212287902832
    7. '               ' → logprob: -12.00212287902832
    8. '
' → logprob: -12.50212287902832
    9. '		' → logprob: -12.50212287902832
    10. '<|end|>' → logprob: -13.12712287902832

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025323281064629555
    2. '       ' → logprob: -4.275323390960693
    3. 'current' → logprob: -5.025323390960693
    4. '   ' → logprob: -5.900323390960693
    5. ' current' → logprob: -6.400323390960693
    6. '	current' → logprob: -10.150322914123535
    7. '               ' → logprob: -10.400322914123535
    8. '
' → logprob: -10.525322914123535
    9. '		' → logprob: -12.150322914123535
    10. '	       ' → logprob: -12.275322914123535

Token 226: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.3869284391403198
    2. ' current' → logprob: -1.1369284391403198
    3. '   ' → logprob: -9.88692855834961
    4. '           ' → logprob: -12.76192855834961
    5. '	current' → logprob: -12.88692855834961
    6. '.current' → logprob: -14.51192855834961
    7. '[current' → logprob: -15.88692855834961
    8. '       ' → logprob: -16.01192855834961
    9. '_current' → logprob: -16.26192855834961
    10. '(current' → logprob: -16.38692855834961

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029764965176582336
    2. ' =' → logprob: -3.5297648906707764
    3. '=current' → logprob: -11.154765129089355
    4. '.' → logprob: -16.27976417541504
    5. 'connected' → logprob: -17.27976417541504
    6. '.connected' → logprob: -17.40476417541504
    7. ' ' → logprob: -17.90476417541504
    8. '.=' → logprob: -18.15476417541504
    9. ' connected' → logprob: -18.15476417541504
    10. '＝' → logprob: -18.52976417541504

Token 228: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6931480169296265
    2. 'current' → logprob: -0.6931480169296265
    3. '.current' → logprob: -14.693147659301758
    4. '	current' → logprob: -16.068147659301758
    5. '(current' → logprob: -16.443147659301758
    6. '[current' → logprob: -16.818147659301758
    7. ' ' → logprob: -16.943147659301758
    8. '$current' → logprob: -16.943147659301758
    9. '=current' → logprob: -17.318147659301758
    10. 'connected' → logprob: -17.318147659301758

Token 229: '.connected' (ID: 134294)
  Prédit: '.connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -0.0003360582049936056
    2. '.' → logprob: -8.000335693359375
    3. 'connected' → logprob: -14.750335693359375
    4. ' .' → logprob: -15.250335693359375
    5. '.con' → logprob: -17.125335693359375
    6. '.bound' → logprob: -18.125335693359375
    7. '.connect' → logprob: -18.250335693359375
    8. '.related' → logprob: -18.750335693359375
    9. '.ass' → logprob: -19.625335693359375
    10. '.current' → logprob: -20.000335693359375

Token 230: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -3.173704271830502e-06
    2. '.backward' → logprob: -13.87500286102295
    3. '_back' → logprob: -14.12500286102295
    4. 'Backward' → logprob: -14.62500286102295
    5. '_' → logprob: -15.25000286102295
    6. '\' → logprob: -15.62500286102295
    7. 's' → logprob: -15.87500286102295
    8. '_forward' → logprob: -15.87500286102295
    9. 'back' → logprob: -16.375003814697266
    10. '._' → logprob: -16.375003814697266

Token 231: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10222017765045166
    2. '
' → logprob: -2.352220058441162
    3. '#' → logprob: -6.727220058441162
    4. '        
' → logprob: -7.477220058441162
    5. '```' → logprob: -9.85222053527832
    6. '<|end|>' → logprob: -10.47722053527832
    7. 'return' → logprob: -10.72722053527832
    8. '  
' → logprob: -10.85222053527832
    9. '
' → logprob: -10.97722053527832
    10. ' if' → logprob: -10.97722053527832

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11228768527507782
    2. '
' → logprob: -2.362287759780884
    3. '#' → logprob: -4.737287521362305
    4. 'distance' → logprob: -7.362287521362305
    5. ' forward' → logprob: -7.612287521362305
    6. ' if' → logprob: -8.237287521362305
    7. '```' → logprob: -8.237287521362305
    8. 'if' → logprob: -8.487287521362305
    9. 'return' → logprob: -8.612287521362305
    10. 'forward' → logprob: -8.737287521362305

Token 233: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07477981597185135
    2. '
' → logprob: -3.449779748916626
    3. 'return' → logprob: -3.824779748916626
    4. 'if' (adapté à ' if') → logprob: -4.199779987335205
    5. ' if' → logprob: -6.199779987335205
    6. ' return' → logprob: -7.074779987335205
    7. '```' → logprob: -7.824779987335205
    8. '#' → logprob: -9.449779510498047
    9. '   ' → logprob: -10.199779510498047
    10. '        
' → logprob: -10.324779510498047

Token 234: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.007609466556459665
    2. 'len' → logprob: -4.8826093673706055
    3. '(len' → logprob: -12.882609367370605
    4. '	len' → logprob: -14.507609367370605
    5. ' ' → logprob: -15.507609367370605
    6. '[len' → logprob: -17.007610321044922
    7. '=len' → logprob: -17.257610321044922
    8. ' abs' → logprob: -17.507610321044922
    9. '   ' → logprob: -17.507610321044922
    10. '<len' → logprob: -17.632610321044922

Token 235: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'path' → logprob: -17.250001907348633
    4. ' path' → logprob: -18.875001907348633
    5. '(paths' → logprob: -21.500001907348633
    6. ' (' → logprob: -21.625001907348633
    7. '	path' → logprob: -22.375001907348633
    8. '[path' → logprob: -22.875001907348633
    9. '(PATH' → logprob: -22.875001907348633
    10. '"path' → logprob: -23.000001907348633

Token 236: '_fw' (ID: 146828)
  Prédit: '_fw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fw' → logprob: -9.014684110297821e-06
    2. '_bw' → logprob: -11.625008583068848
    3. 'fw' → logprob: -18.125009536743164
    4. '_hw' → logprob: -18.375009536743164
    5. '_pw' → logprob: -18.750009536743164
    6. '_FW' → logprob: -18.875009536743164
    7. ')' → logprob: -19.250009536743164
    8. 'Fw' → logprob: -19.375009536743164
    9. '(' → logprob: -19.625009536743164
    10. '_fc' → logprob: -19.875009536743164

Token 237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5011065602302551
    2. ' <=' → logprob: -1.0011065006256104
    3. '<=' → logprob: -3.7511065006256104
    4. ' )' → logprob: -6.5011067390441895
    5. ')<=' → logprob: -6.7511067390441895
    6. '()' → logprob: -8.251106262207031
    7. ' ' → logprob: -9.376106262207031
    8. '>' → logprob: -10.126106262207031
    9. ' <' → logprob: -10.376106262207031
    10. ' >' → logprob: -10.626106262207031

Token 238: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018352219834923744
    2. '<=' → logprob: -4.018352031707764
    3. ' ' → logprob: -9.518352508544922
    4. ' <' → logprob: -9.518352508544922
    5. ' >' → logprob: -10.268352508544922
    6. '()' → logprob: -12.143352508544922
    7. ')<=' → logprob: -12.643352508544922
    8. '>' → logprob: -12.768352508544922
    9. '<' → logprob: -13.518352508544922
    10. ']<=' → logprob: -13.768352508544922

Token 239: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04858884960412979
    2. ' len' → logprob: -3.048588752746582
    3. '(len' → logprob: -14.423588752746582
    4. '   ' → logprob: -14.548588752746582
    5. '	len' → logprob: -15.798588752746582
    6. ' ' → logprob: -16.0485897064209
    7. '    ' → logprob: -16.5485897064209
    8. '       ' → logprob: -17.1735897064209
    9. 'length' → logprob: -17.4235897064209
    10. '  ' → logprob: -18.0485897064209

Token 240: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -15.000007629394531
    4. 'path' → logprob: -16.62500762939453
    5. ' path' → logprob: -17.00000762939453
    6. '(
' → logprob: -19.25000762939453
    7. '[path' → logprob: -21.12500762939453
    8. '(paths' → logprob: -21.12500762939453
    9. '(p' → logprob: -21.37500762939453
    10. '(PATH' → logprob: -21.50000762939453

Token 241: '_bw' (ID: 172602)
  Prédit: '_bw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bw' → logprob: -0.00014251544780563563
    2. '_fw' → logprob: -8.875142097473145
    3. 'bw' → logprob: -13.375142097473145
    4. ')' → logprob: -15.250142097473145
    5. 'Bw' → logprob: -15.250142097473145
    6. '_rw' → logprob: -15.625142097473145
    7. '	bw' → logprob: -15.875142097473145
    8. '_hw' → logprob: -17.25014305114746
    9. 's' → logprob: -17.50014305114746
    10. '_bs' → logprob: -17.50014305114746

Token 242: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6216857433319092
    2. '):
' → logprob: -1.1216857433319092
    3. ':' → logprob: -2.121685743331909
    4. '):' → logprob: -4.121685981750488
    5. ':return' → logprob: -7.371685981750488
    6. ')' → logprob: -9.246685981750488
    7. '():
' → logprob: -9.246685981750488
    8. '):
' → logprob: -9.246685981750488
    9. ' :
' → logprob: -9.621685981750488
    10. ']:
' → logprob: -9.621685981750488

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03172309696674347
    2. ':
' → logprob: -3.7817230224609375
    3. '       ' → logprob: -5.2817230224609375
    4. ':' → logprob: -6.5317230224609375
    5. ' return' → logprob: -6.7817230224609375
    6. '
' → logprob: -7.9067230224609375
    7. 'return' → logprob: -9.031723022460938
    8. ':return' → logprob: -9.156723022460938
    9. '	       ' → logprob: -9.656723022460938
    10. '   ' → logprob: -10.281723022460938

Token 244: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5133562088012695
    2. ' return' → logprob: -1.0133562088012695
    3. '           ' → logprob: -3.2633562088012695
    4. '
' → logprob: -9.01335620880127
    5. '       ' → logprob: -9.26335620880127
    6. '   ' → logprob: -10.63835620880127
    7. '               ' → logprob: -11.38835620880127
    8. '	return' → logprob: -13.38835620880127
    9. ':return' → logprob: -13.51335620880127
    10. ' ' → logprob: -13.76335620880127

Token 245: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.07888978719711304
    2. ' path' → logprob: -2.578889846801758
    3. '(path' → logprob: -18.703889846801758
    4. '[path' → logprob: -18.953889846801758
    5. '	path' → logprob: -21.703889846801758
    6. '   ' → logprob: -22.078889846801758
    7. '_path' → logprob: -23.203889846801758
    8. '.path' → logprob: -23.203889846801758
    9. ',path' → logprob: -23.453889846801758
    10. '"path' → logprob: -23.703889846801758

Token 246: '_fw' (ID: 146828)
  Prédit: '_fw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fw' → logprob: -3.128163257315464e-07
    2. '_fs' → logprob: -16.625
    3. '_pw' → logprob: -17.0
    4. '_path' → logprob: -17.0
    5. '_bw' → logprob: -17.0
    6. '_hw' → logprob: -17.625
    7. '```' → logprob: -17.75
    8. '_fk' → logprob: -18.25
    9. '_fc' → logprob: -18.375
    10. '_fb' → logprob: -18.5

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2051474004983902
    2. 'else' → logprob: -1.955147385597229
    3. ' else' → logprob: -3.2051475048065186
    4. '
' → logprob: -5.7051472663879395
    5. '        
' → logprob: -10.580147743225098
    6. 'return' → logprob: -11.830147743225098
    7. '	else' → logprob: -12.455147743225098
    8. '<|end|>' → logprob: -12.830147743225098
    9. '   ' → logprob: -13.705147743225098
    10. '```' → logprob: -13.955147743225098

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048812296241521835
    2. 'else' → logprob: -3.1738123893737793
    3. ' else' → logprob: -5.173812389373779
    4. 'return' → logprob: -9.048811912536621
    5. '
' → logprob: -11.423811912536621
    6. ' return' → logprob: -13.173811912536621
    7. '<|end|>' → logprob: -14.173811912536621
    8. '	else' → logprob: -14.423811912536621
    9. '	' → logprob: -14.798811912536621
    10. '```' → logprob: -15.673811912536621

Token 249: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8126591444015503
    2. 'else' (adapté à ' else') → logprob: -1.0626591444015503
    3. ' else' → logprob: -1.5626591444015503
    4. 'return' → logprob: -6.81265926361084
    5. ' return' → logprob: -9.68765926361084
    6. '
' → logprob: -10.18765926361084
    7. '   ' → logprob: -12.18765926361084
    8. '	else' → logprob: -12.56265926361084
    9. '	' → logprob: -14.31265926361084
    10. '        
' → logprob: -15.81265926361084

Token 250: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28461477160453796
    2. ':' → logprob: -1.4096148014068604
    3. '           ' → logprob: -6.159614562988281
    4. ' :
' → logprob: -6.909614562988281
    5. ' :' → logprob: -8.784614562988281
    6. ':return' → logprob: -10.034614562988281
    7. '       ' → logprob: -10.159614562988281
    8. ':
' → logprob: -10.409614562988281
    9. '        ' → logprob: -10.659614562988281
    10. '   ' → logprob: -11.034614562988281

Token 251: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02855515293776989
    2. 'return' → logprob: -4.278554916381836
    3. '           ' → logprob: -4.778554916381836
    4. ' path' → logprob: -5.153554916381836
    5. 'path' → logprob: -10.028554916381836
    6. '       ' → logprob: -10.153554916381836
    7. '        ' → logprob: -11.403554916381836
    8. '   ' → logprob: -12.528554916381836
    9. '    ' → logprob: -13.278554916381836
    10. '            ' → logprob: -14.278554916381836

Token 252: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10030587017536163
    2. ' return' → logprob: -2.3503057956695557
    3. 'path' → logprob: -9.850305557250977
    4. ' path' → logprob: -10.100305557250977
    5. '       ' → logprob: -13.100305557250977
    6. '           ' → logprob: -13.475305557250977
    7. '   ' → logprob: -13.600305557250977
    8. '
' → logprob: -15.600305557250977
    9. '        ' → logprob: -15.975305557250977
    10. ' ' → logprob: -16.350305557250977

Token 253: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.01814994215965271
    2. ' path' → logprob: -4.0181498527526855
    3. '[path' → logprob: -18.518150329589844
    4. '(path' → logprob: -18.643150329589844
    5. '	path' → logprob: -19.768150329589844
    6. '_path' → logprob: -21.143150329589844
    7. ' ' → logprob: -21.643150329589844
    8. ' ' → logprob: -21.893150329589844
    9. '.path' → logprob: -22.143150329589844
    10. ',path' → logprob: -22.768150329589844

Token 254: '_bw' (ID: 172602)
  Prédit: '_bw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bw' → logprob: -4.008129963040119e-06
    2. '_fw' → logprob: -12.500003814697266
    3. '_pw' → logprob: -15.500003814697266
    4. 'bw' → logprob: -17.875003814697266
    5. '_bt' → logprob: -18.625003814697266
    6. '_bs' → logprob: -19.000003814697266
    7. '_bc' → logprob: -19.000003814697266
    8. '	bw' → logprob: -19.000003814697266
    9. '_hw' → logprob: -19.125003814697266
    10. '_' → logprob: -19.250003814697266

Token 255: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23674993216991425
    2. '<|end|>' → logprob: -2.6117498874664307
    3. '[' → logprob: -3.3617498874664307
    4. 'def' → logprob: -3.3617498874664307
    5. '
' → logprob: -4.48675012588501
    6. 'stop' → logprob: -4.61175012588501
    7. '```' → logprob: -4.98675012588501
    8. '<|end|>' → logprob: -5.11175012588501
    9. 'a' → logprob: -5.48675012588501
    10. 'class' → logprob: -5.48675012588501

Token 257: ' Line' (ID: 11342)
  Prédit: 'Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -0.09122452884912491
    2. ' Bus' → logprob: -2.841224431991577
    3. 'Route' → logprob: -5.091224670410156
    4. 'Trip' → logprob: -5.466224670410156
    5. 'Train' → logprob: -5.591224670410156
    6. 'Transit' → logprob: -5.966224670410156
    7. 'Traffic' → logprob: -6.716224670410156
    8. 'Transport' → logprob: -6.966224670410156
    9. 'Passenger' → logprob: -6.966224670410156
    10. 'City' → logprob: -7.091224670410156

Token 258: 'Segment' (ID: 24880)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1290288120508194
    2. 'Bus' → logprob: -2.379028797149658
    3. ':
' → logprob: -4.879028797149658
    4. '(' → logprob: -4.879028797149658
    5. '(Line' → logprob: -5.629028797149658
    6. '(Route' → logprob: -6.129028797149658
    7. 'Line' → logprob: -6.879028797149658
    8. 'Route' → logprob: -6.879028797149658
    9. '():' → logprob: -7.004028797149658
    10. '<|end|>' → logprob: -7.379028797149658

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003606244223192334
    2. ':
' → logprob: -5.62860631942749
    3. '(' → logprob: -12.753605842590332
    4. '(object' → logprob: -14.253605842590332
    5. '():' → logprob: -14.378605842590332
    6. ':

' → logprob: -14.378605842590332
    7. '(B' → logprob: -14.503605842590332
    8. ' :' → logprob: -15.003605842590332
    9. '<|end|>' → logprob: -15.128605842590332
    10. '(C' → logprob: -16.75360679626465

Token 260: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4099678695201874
    2. ':' → logprob: -1.1599678993225098
    3. '   ' → logprob: -3.7849678993225098
    4. 'def' → logprob: -10.034967422485352
    5. '(' → logprob: -10.784967422485352
    6. '  ' → logprob: -11.659967422485352
    7. '):
' → logprob: -11.909967422485352
    8. '<|end|>' → logprob: -11.909967422485352
    9. '():
' → logprob: -12.409967422485352
    10. 'class' → logprob: -12.659967422485352

Token 261: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3776213824748993
    2. '   ' → logprob: -1.8776214122772217
    3. ':' → logprob: -2.7526214122772217
    4. 'class' → logprob: -3.6276214122772217
    5. 'Bus' → logprob: -3.6276214122772217
    6. '__' → logprob: -4.127621173858643
    7. ':
' → logprob: -4.252621173858643
    8. ' ' → logprob: -5.377621173858643
    9. ' def' → logprob: -5.752621173858643
    10. '  ' → logprob: -6.502621173858643

Token 262: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014104039408266544
    2. '__' → logprob: -4.389103889465332
    3. ' def' → logprob: -7.389103889465332
    4. 'init' → logprob: -8.264103889465332
    5. ' init' → logprob: -8.889103889465332
    6. ' object' → logprob: -9.139103889465332
    7. 'def' → logprob: -9.264103889465332
    8. ' ' → logprob: -9.639103889465332
    9. 'object' → logprob: -9.764103889465332
    10. '   ' → logprob: -9.889103889465332

Token 263: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.053948625922203064
    2. 'it' → logprob: -3.3039486408233643
    3. 'def' → logprob: -5.678948402404785
    4. '```' → logprob: -5.803948402404785
    5. 'xt' → logprob: -6.178948402404785
    6. 'int' → logprob: -6.178948402404785
    7. 'class' → logprob: -6.678948402404785
    8. 'num' → logprob: -6.803948402404785
    9. 'Class' → logprob: -7.428948402404785
    10. 'Init' → logprob: -7.928948402404785

Token 264: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.021106518805027008
    2. '(self' → logprob: -3.896106481552124
    3. '(' → logprob: -8.021106719970703
    4. ' (' → logprob: -9.271106719970703
    5. '__' → logprob: -9.646106719970703
    6. '__(
' → logprob: -9.896106719970703
    7. '_(' → logprob: -11.396106719970703
    8. 'self' → logprob: -11.771106719970703
    9. '__((' → logprob: -13.146106719970703
    10. '   ' → logprob: -13.271106719970703

Token 265: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004721326287835836
    2. ' self' → logprob: -5.379721164703369
    3. '   ' → logprob: -9.504721641540527
    4. 'start' → logprob: -11.629721641540527
    5. ')' → logprob: -11.879721641540527
    6. ',' → logprob: -13.004721641540527
    7. '(self' → logprob: -13.504721641540527
    8. 'bus' → logprob: -13.504721641540527
    9. 'Bus' → logprob: -14.254721641540527
    10. 'def' → logprob: -14.254721641540527

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044721171259880066
    2. 'self' → logprob: -3.1697211265563965
    3. ' self' → logprob: -7.1697211265563965
    4. ' ,' → logprob: -8.044721603393555
    5. '   ' → logprob: -8.169721603393555
    6. '(self' → logprob: -8.294721603393555
    7. ' (' → logprob: -10.294721603393555
    8. ',self' → logprob: -10.294721603393555
    9. ')' → logprob: -11.294721603393555
    10. '       ' → logprob: -12.669721603393555

Token 267: ' stops' (ID: 29924)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3568379282951355
    2. ' start' → logprob: -1.2318379878997803
    3. 'stop' → logprob: -6.106837749481201
    4. 'bus' → logprob: -6.481837749481201
    5. ' stop' → logprob: -6.981837749481201
    6. 'point' → logprob: -7.106837749481201
    7. '   ' → logprob: -7.481837749481201
    8. 'length' → logprob: -7.731837749481201
    9. ' bus' → logprob: -7.731837749481201
    10. 'from' → logprob: -7.731837749481201

Token 268: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22977124154567719
    2. '):
' → logprob: -2.104771137237549
    3. ',' → logprob: -2.604771137237549
    4. ':' → logprob: -4.854771137237549
    5. ')' → logprob: -7.854771137237549
    6. '=[]' → logprob: -8.104771614074707
    7. '=None' → logprob: -8.354771614074707
    8. ':list' → logprob: -8.604771614074707
    9. ' ):' → logprob: -8.979771614074707
    10. '[]):' → logprob: -9.229771614074707

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036700330674648285
    2. '<|end|>' → logprob: -5.8786702156066895
    3. ':' → logprob: -7.6286702156066895
    4. ',' → logprob: -8.503669738769531
    5. '   ' → logprob: -9.628669738769531
    6. '<|end|>' → logprob: -10.878669738769531
    7. '[' → logprob: -11.253669738769531
    8. '      ' → logprob: -11.378669738769531
    9. ' self' → logprob: -11.753669738769531
    10. 'self' → logprob: -11.878669738769531

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.041514068841934204
    2. ' self' → logprob: -3.2915141582489014
    3. '       ' → logprob: -5.666513919830322
    4. '	self' → logprob: -12.41651439666748
    5. '   ' → logprob: -14.04151439666748
    6. 'super' → logprob: -14.16651439666748
    7. ' ' → logprob: -14.91651439666748
    8. ' ' → logprob: -16.041513442993164
    9. '(self' → logprob: -16.166513442993164
    10. '        ' → logprob: -16.416513442993164

Token 271: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.041694171726703644
    2. '.' → logprob: -3.791694164276123
    3. ' stops' → logprob: -4.541694164276123
    4. ' .' → logprob: -5.291694164276123
    5. 'st' → logprob: -6.041694164276123
    6. '   ' → logprob: -9.916694641113281
    7. '	st' → logprob: -10.416694641113281
    8. 'Stops' → logprob: -10.416694641113281
    9. '_st' → logprob: -10.791694641113281
    10. ' st' → logprob: -10.916694641113281

Token 272: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -2.6060808522743173e-05
    2. 'op' → logprob: -11.250025749206543
    3. '   ' → logprob: -11.375025749206543
    4. '       ' → logprob: -14.625025749206543
    5. 'tops' → logprob: -15.125025749206543
    6. ' ops' → logprob: -15.500025749206543
    7. ' ' → logprob: -16.12502670288086
    8. '```' → logprob: -16.75002670288086
    9. 'opts' → logprob: -16.87502670288086
    10. '=' → logprob: -17.00002670288086

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474081814289093
    2. '=' → logprob: -0.974081814289093
    3. '   ' → logprob: -12.849081993103027
    4. '.extend' → logprob: -14.474081993103027
    5. ' ' → logprob: -14.849081993103027
    6. ')' → logprob: -14.849081993103027
    7. '.append' → logprob: -15.474081993103027
    8. '.' → logprob: -15.474081993103027
    9. ',' → logprob: -15.849081993103027
    10. '=self' → logprob: -16.09908103942871

Token 274: ' stops' (ID: 29924)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.012519658543169498
    2. ' stops' → logprob: -4.387519836425781
    3. '[]' → logprob: -12.262519836425781
    4. '[' → logprob: -12.637519836425781
    5. 'list' → logprob: -13.887519836425781
    6. 'stop' → logprob: -14.637519836425781
    7. '   ' → logprob: -15.637519836425781
    8. ' [' → logprob: -16.13751983642578
    9. '(st' → logprob: -16.38751983642578
    10. '	st' → logprob: -16.51251983642578

Token 275: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5819875597953796
    2. '<|end|>' → logprob: -0.8319875597953796
    3. '   ' → logprob: -5.831987380981445
    4. '<|end|>' → logprob: -6.081987380981445
    5. '

' → logprob: -7.706987380981445
    6. 'def' → logprob: -9.081987380981445
    7. '    
' → logprob: -9.581987380981445
    8. ')' → logprob: -9.831987380981445
    9. '
    
' → logprob: -10.956987380981445
    10. '```' → logprob: -11.081987380981445

Token 276: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9689675569534302
    2. 'self' → logprob: -1.0939675569534302
    3. 'def' → logprob: -1.5939675569534302
    4. ' self' → logprob: -3.0939674377441406
    5. 'n' → logprob: -3.8439674377441406
    6. '   ' → logprob: -4.843967437744141
    7. ' def' → logprob: -5.218967437744141
    8. ' n' → logprob: -7.843967437744141
    9. ' if' → logprob: -8.09396743774414
    10. '    ' → logprob: -8.46896743774414

Token 278: ' Link' (ID: 8348)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6912149786949158
    2. 'for' → logprob: -1.8162150382995605
    3. ' self' → logprob: -1.9412150382995605
    4. ' for' → logprob: -2.4412150382995605
    5. 'n' → logprob: -2.8162150382995605
    6. ' n' → logprob: -4.3162150382995605
    7. 'length' → logprob: -5.1912150382995605
    8. 'pass' → logprob: -5.1912150382995605
    9. 'def' → logprob: -5.3162150382995605
    10. '       ' → logprob: -5.8162150382995605

Token 279: ' stops' (ID: 29924)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18691755831241608
    2. ' for' → logprob: -1.8119175434112549
    3. 'previous' → logprob: -6.061917781829834
    4. ' previous' → logprob: -6.561917781829834
    5. 'self' → logprob: -6.936917781829834
    6. '       ' → logprob: -7.186917781829834
    7. '   ' → logprob: -7.811917781829834
    8. 'prev' → logprob: -7.936917781829834
    9. ' stops' → logprob: -8.186917304992676
    10. ' self' → logprob: -9.061917304992676

Token 280: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2753453552722931
    2. ' for' → logprob: -1.6503453254699707
    3. 'for' → logprob: -3.0253453254699707
    4. '   ' → logprob: -9.650345802307129
    5. ',' → logprob: -10.525345802307129
    6. 'n' → logprob: -11.275345802307129
    7. ' in' → logprob: -11.400345802307129
    8. '	' → logprob: -11.650345802307129
    9. '	for' → logprob: -11.650345802307129
    10. ' with' → logprob: -11.775345802307129

Token 281: ' linear' (ID: 23876)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8956373333930969
    2. 'sequence' → logprob: -1.1456372737884521
    3. 'for' → logprob: -2.270637273788452
    4. 'a' → logprob: -2.270637273788452
    5. ' sequence' → logprob: -3.895637273788452
    6. 'linear' → logprob: -4.270637512207031
    7. 'the' → logprob: -4.395637512207031
    8. ' a' → logprob: -4.895637512207031
    9. 'order' → logprob: -5.395637512207031
    10. ' self' → logprob: -6.270637512207031

Token 282: ' fashion' (ID: 12808)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26220521330833435
    2. ' fashion' → logprob: -2.137205123901367
    3. 'fashion' → logprob: -2.887205123901367
    4. 'order' → logprob: -3.637205123901367
    5. ' for' → logprob: -4.387205123901367
    6. 'sequence' → logprob: -4.637205123901367
    7. ' order' → logprob: -5.762205123901367
    8. 'way' → logprob: -6.512205123901367
    9. '       ' → logprob: -7.012205123901367
    10. ' manner' → logprob: -7.262205123901367

Token 283: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006177155766636133
    2. ' for' → logprob: -5.506176948547363
    3. 'for' → logprob: -6.256176948547363
    4. 'n' → logprob: -9.381176948547363
    5. '
' → logprob: -9.381176948547363
    6. ',' → logprob: -12.881176948547363
    7. '   ' → logprob: -13.131176948547363
    8. ' n' → logprob: -13.256176948547363
    9. '```' → logprob: -14.131176948547363
    10. '<|end|>' → logprob: -14.631176948547363

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0642063245177269
    2. 'for' → logprob: -2.93920636177063
    3. ' for' → logprob: -4.689206123352051
    4. 'n' → logprob: -9.81420612335205
    5. '   ' → logprob: -10.56420612335205
    6. ' n' → logprob: -12.68920612335205
    7. '           ' → logprob: -13.81420612335205
    8. '	for' → logprob: -14.31420612335205
    9. '	' → logprob: -15.06420612335205
    10. '      ' → logprob: -15.31420612335205

Token 285: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004968205001205206
    2. '       ' → logprob: -5.504968166351318
    3. 'n' → logprob: -7.379968166351318
    4. ' for' → logprob: -8.254968643188477
    5. '   ' → logprob: -12.754968643188477
    6. ' n' → logprob: -14.004968643188477
    7. '	for' → logprob: -14.129968643188477
    8. 'prev' → logprob: -14.129968643188477
    9. 'previous' → logprob: -15.379968643188477
    10. '           ' → logprob: -16.004968643188477

Token 286: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06197351589798927
    2. ' i' → logprob: -2.8119735717773438
    3. '   ' → logprob: -12.436973571777344
    4. '	i' → logprob: -13.936973571777344
    5. ' ' → logprob: -14.561973571777344
    6. 'index' → logprob: -15.561973571777344
    7. '  ' → logprob: -16.311973571777344
    8. '    ' → logprob: -16.436973571777344
    9. '       ' → logprob: -16.686973571777344
    10. ' ' → logprob: -17.061973571777344

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012514480389654636
    2. 'in' → logprob: -4.387514591217041
    3. ',' → logprob: -12.637514114379883
    4. '	in' → logprob: -14.262514114379883
    5. ' ' → logprob: -14.512514114379883
    6. '   ' → logprob: -15.262514114379883
    7. ',in' → logprob: -17.262514114379883
    8. ' i' → logprob: -17.262514114379883
    9. 'In' → logprob: -17.512514114379883
    10. 'range' → logprob: -17.887514114379883

Token 288: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692947685718536
    2. ' range' → logprob: -2.126929521560669
    3. '(range' → logprob: -14.00192928314209
    4. '   ' → logprob: -15.12692928314209
    5. ' ' → logprob: -15.62692928314209
    6. '	range' → logprob: -16.626930236816406
    7. '  ' → logprob: -16.751930236816406
    8. '```' → logprob: -18.001930236816406
    9. '    ' → logprob: -18.376930236816406
    10. '
' → logprob: -19.001930236816406

Token 289: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0007270866190083325
    2. '(' → logprob: -7.25072717666626
    3. 'len' → logprob: -11.125726699829102
    4. ' len' → logprob: -13.000726699829102
    5. ' (' → logprob: -17.0007266998291
    6. ' ' → logprob: -17.3757266998291
    7. '1' → logprob: -18.1257266998291
    8. '	len' → logprob: -18.3757266998291
    9. '   ' → logprob: -19.6257266998291
    10. '[len' → logprob: -19.7507266998291

Token 290: '(st' (ID: 4065)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25194162130355835
    2. '(st' → logprob: -1.5019416809082031
    3. 'self' → logprob: -11.751941680908203
    4. '(stop' → logprob: -13.376941680908203
    5. 'st' → logprob: -13.501941680908203
    6. '(' → logprob: -13.626941680908203
    7. ' stops' → logprob: -15.251941680908203
    8. ' self' → logprob: -16.251941680908203
    9. ' (' → logprob: -17.126941680908203
    10. '   ' → logprob: -17.501941680908203

Token 291: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -3.190178904333152e-05
    2. 'op' → logprob: -10.625031471252441
    3. '   ' → logprob: -13.250031471252441
    4. 'ps' → logprob: -13.250031471252441
    5. '(' → logprob: -14.250031471252441
    6. 's' → logprob: -14.250031471252441
    7. '```' → logprob: -14.625031471252441
    8. ')' → logprob: -15.375031471252441
    9. '>' → logprob: -15.500031471252441
    10. 'o' → logprob: -15.625031471252441

Token 292: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003019422059878707
    2. ' -' → logprob: -6.128019332885742
    3. '-' → logprob: -7.253019332885742
    4. ')-' → logprob: -9.503019332885742
    5. ' )' → logprob: -10.253019332885742
    6. '   ' → logprob: -11.503019332885742
    7. ' ' → logprob: -12.128019332885742
    8. ']' → logprob: -15.378019332885742
    9. '}' → logprob: -15.878019332885742
    10. '	' → logprob: -16.628019332885742

Token 293: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38688185811042786
    2. ' -' → logprob: -1.1368818283081055
    3. ')' → logprob: -12.011881828308105
    4. ' ' → logprob: -12.761881828308105
    5. '   ' → logprob: -13.261881828308105
    6. '1' → logprob: -15.636881828308105
    7. '):
' → logprob: -17.261882781982422
    8. ' ' → logprob: -17.886882781982422
    9. '	' → logprob: -18.136882781982422
    10. ')-' → logprob: -18.261882781982422

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.751325607299805
    4. '```' → logprob: -17.876325607299805
    5. '  ' → logprob: -18.501325607299805
    6. ')' → logprob: -19.063825607299805
    7. '0' → logprob: -19.251325607299805
    8. '
' → logprob: -19.376325607299805
    9. '۱' → logprob: -19.751325607299805
    10. '       ' → logprob: -19.938825607299805

Token 295: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08922494202852249
    2. '):' → logprob: -2.4642250537872314
    3. '):
' → logprob: -8.589224815368652
    4. ' ):
' → logprob: -9.464224815368652
    5. ' ):' → logprob: -11.464224815368652
    6. ')' → logprob: -12.214224815368652
    7. '   ' → logprob: -12.589224815368652
    8. '):

' → logprob: -13.839224815368652
    9. ':' → logprob: -14.339224815368652
    10. '       ' → logprob: -14.839224815368652

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002043748099822551
    2. ',' → logprob: -9.625204086303711
    3. ':' → logprob: -10.000204086303711
    4. '       ' → logprob: -10.750204086303711
    5. '   ' → logprob: -10.750204086303711
    6. ':
' → logprob: -11.125204086303711
    7. '            
' → logprob: -12.250204086303711
    8. '          ' → logprob: -12.250204086303711
    9. 's' → logprob: -12.375204086303711
    10. '
' → logprob: -12.625204086303711

Token 297: ' stops' (ID: 29924)
  Prédit: ' stops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.31429407000541687
    2. 'st' → logprob: -1.3142940998077393
    3. 'stop' → logprob: -8.06429386138916
    4. '   ' → logprob: -8.18929386138916
    5. '           ' → logprob: -8.81429386138916
    6. '       ' → logprob: -9.31429386138916
    7. 'self' → logprob: -9.56429386138916
    8. '               ' → logprob: -10.06429386138916
    9. '	st' → logprob: -10.31429386138916
    10. ' st' → logprob: -10.43929386138916

Token 298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.875008583068848
    3. '[I' → logprob: -14.000008583068848
    4. '[index' → logprob: -16.75000762939453
    5. '```' → logprob: -17.37500762939453
    6. '   ' → logprob: -17.37500762939453
    7. 's' → logprob: -17.50000762939453
    8. ' [' → logprob: -17.75000762939453
    9. '[idx' → logprob: -17.87500762939453
    10. '[j' → logprob: -18.12500762939453

Token 299: '].' (ID: 1651)
  Prédit: '.connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -0.05101882666349411
    2. '].' → logprob: -3.051018714904785
    3. ').' → logprob: -6.551018714904785
    4. '.' → logprob: -7.176018714904785
    5. '}.' → logprob: -9.051018714904785
    6. '.next' → logprob: -10.551018714904785
    7. '>.' → logprob: -11.176018714904785
    8. '.connection' → logprob: -11.551018714904785
    9. '   ' → logprob: -11.801018714904785
    10. ' .' → logprob: -11.801018714904785

Token 300: 'connected' (ID: 26297)
  Prédit: 'connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -2.935296834039036e-06
    2. ' connected' → logprob: -13.50000286102295
    3. '.connected' → logprob: -13.50000286102295
    4. '_connected' → logprob: -17.250003814697266
    5. 'linked' → logprob: -18.500003814697266
    6. 'connect' → logprob: -20.500003814697266
    7. 'configured' → logprob: -20.875003814697266
    8. '-connected' → logprob: -21.000003814697266
    9. '   ' → logprob: -21.125003814697266
    10. '
' → logprob: -21.375003814697266

Token 301: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -4.167648876318708e-05
    2. '_backward' → logprob: -10.125041961669922
    3. '_' → logprob: -13.625041961669922
    4. '_next' → logprob: -15.875041961669922
    5. '_for' → logprob: -16.875041961669922
    6. '```' → logprob: -17.125041961669922
    7. '__' → logprob: -17.750041961669922
    8. '_future' → logprob: -17.875041961669922
    9. '"_' → logprob: -18.000041961669922
    10. '_FORWARD' → logprob: -18.000041961669922

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741095006465912
    2. '=' → logprob: -0.9741095304489136
    3. '.' → logprob: -10.849109649658203
    4. '.connected' → logprob: -11.599109649658203
    5. ' connected' → logprob: -13.974109649658203
    6. ' ' → logprob: -14.474109649658203
    7. '.=' → logprob: -14.474109649658203
    8. 'connected' → logprob: -14.599109649658203
    9. '.st' → logprob: -15.474109649658203
    10. '.next' → logprob: -15.474109649658203

Token 303: ' stops' (ID: 29924)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.008630757220089436
    2. ' stops' → logprob: -4.758630752563477
    3. 'stop' → logprob: -11.133630752563477
    4. '	st' → logprob: -14.883630752563477
    5. ' st' → logprob: -15.133630752563477
    6. '   ' → logprob: -15.383630752563477
    7. 'Stops' → logprob: -15.633630752563477
    8. ' ' → logprob: -16.258630752563477
    9. 'sts' → logprob: -16.258630752563477
    10. 'sticks' → logprob: -16.258630752563477

Token 304: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -12.75000286102295
    3. ' [' → logprob: -16.875003814697266
    4. '[(' → logprob: -17.125003814697266
    5. '[I' → logprob: -18.000003814697266
    6. '```' → logprob: -18.375003814697266
    7. '   ' → logprob: -18.875003814697266
    8. '[
' → logprob: -19.000003814697266
    9. 'i' → logprob: -19.125003814697266
    10. '(i' → logprob: -19.375003814697266

Token 305: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004808414727449417
    2. '].' → logprob: -6.00480842590332
    3. ' +' → logprob: -6.37980842590332
    4. '+i' → logprob: -7.37980842590332
    5. '[i' → logprob: -12.25480842590332
    6. ']' → logprob: -13.12980842590332
    7. '(i' → logprob: -13.62980842590332
    8. '   ' → logprob: -13.75480842590332
    9. '.i' → logprob: -14.75480842590332
    10. 'i' → logprob: -14.87980842590332

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.625012397766113
    4. 'i' → logprob: -14.750012397766113
    5. '+' → logprob: -16.00001335144043
    6. '```' → logprob: -16.62501335144043
    7. '
' → logprob: -17.00001335144043
    8. '       ' → logprob: -17.62501335144043
    9. '  ' → logprob: -17.81251335144043
    10. ']' → logprob: -17.81251335144043

Token 307: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14364686608314514
    2. '<|end|>' → logprob: -2.1436469554901123
    3. ']
' → logprob: -4.518646717071533
    4. ')' → logprob: -6.268646717071533
    5. '           ' → logprob: -6.893646717071533
    6. '       ' → logprob: -7.018646717071533
    7. '<|end|>' → logprob: -7.393646717071533
    8. '
' → logprob: -7.643646717071533
    9. ' stops' → logprob: -8.393647193908691
    10. 'stop' → logprob: -9.268647193908691

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04039841517806053
    2. ' stops' → logprob: -3.915398359298706
    3. '       ' → logprob: -4.165398597717285
    4. '   ' → logprob: -6.040398597717285
    5. '
' → logprob: -7.040398597717285
    6. 'st' → logprob: -7.540398597717285
    7. '<|end|>' → logprob: -9.290398597717285
    8. 'stop' → logprob: -9.290398597717285
    9. ' ' → logprob: -10.665398597717285
    10. '          ' → logprob: -10.790398597717285

Token 309: ' stops' (ID: 29924)
  Prédit: ' stops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stops' → logprob: -0.03217478096485138
    2. 'st' → logprob: -3.532174825668335
    3. '           ' → logprob: -6.157174587249756
    4. '   ' → logprob: -8.782175064086914
    5. 'stop' → logprob: -9.407175064086914
    6. '       ' → logprob: -9.907175064086914
    7. ' ' → logprob: -12.407175064086914
    8. ' stop' → logprob: -12.532175064086914
    9. ' st' → logprob: -13.657175064086914
    10. '	st' → logprob: -13.782175064086914

Token 310: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.875000953674316
    3. '][' → logprob: -15.125000953674316
    4. ' [' → logprob: -16.125001907348633
    5. '[j' → logprob: -16.625001907348633
    6. ')[' → logprob: -16.875001907348633
    7. 's' → logprob: -17.250001907348633
    8. '```' → logprob: -17.500001907348633
    9. '.' → logprob: -17.625001907348633
    10. '   ' → logprob: -17.875001907348633

Token 311: '+' (ID: 10)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00013905855303164572
    2. '+' → logprob: -9.250139236450195
    3. ']' → logprob: -10.375139236450195
    4. ' ].' → logprob: -11.750139236450195
    5. '.' → logprob: -12.750139236450195
    6. ']._' → logprob: -15.500139236450195
    7. '   ' → logprob: -15.750139236450195
    8. 's' → logprob: -16.125139236450195
    9. ' ' → logprob: -16.125139236450195
    10. '+i' → logprob: -17.000139236450195

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000464035285403952
    2. ' ' → logprob: -7.750463962554932
    3. '0' → logprob: -10.87546443939209
    4. '   ' → logprob: -11.75046443939209
    5. '  ' → logprob: -13.00046443939209
    6. '```' → logprob: -13.62546443939209
    7. '.' → logprob: -14.00046443939209
    8. '-' → logprob: -14.62546443939209
    9. '    ' → logprob: -15.43796443939209
    10. '2' → logprob: -15.50046443939209

Token 313: '].' (ID: 1651)
  Prédit: '.connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -0.0011899876408278942
    2. '.' → logprob: -6.751190185546875
    3. ' .' → logprob: -11.751190185546875
    4. '].' → logprob: -12.376190185546875
    5. ').' → logprob: -13.251190185546875
    6. '>.' → logprob: -13.376190185546875
    7. '}.' → logprob: -13.501190185546875
    8. '.selected' → logprob: -14.751190185546875
    9. '.connect' → logprob: -14.876190185546875
    10. 'connected' → logprob: -15.251190185546875

Token 314: 'connected' (ID: 26297)
  Prédit: 'connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -7.32654589228332e-05
    2. '.connected' → logprob: -9.750073432922363
    3. ' connected' → logprob: -11.125073432922363
    4. '_connected' → logprob: -15.625073432922363
    5. '
' → logprob: -18.250072479248047
    6. ' ' → logprob: -18.375072479248047
    7. '.' → logprob: -18.375072479248047
    8. 'linked' → logprob: -18.625072479248047
    9. '-connected' → logprob: -19.500072479248047
    10. '   ' → logprob: -20.000072479248047

Token 315: '_backward' (ID: 185673)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.44257768988609314
    2. '.connected' → logprob: -2.067577600479126
    3. '_backward' → logprob: -2.067577600479126
    4. '_forward' → logprob: -2.692577600479126
    5. '.backward' → logprob: -3.942577600479126
    6. '.' → logprob: -4.567577838897705
    7. '_connected' → logprob: -5.442577838897705
    8. '.forward' → logprob: -6.317577838897705
    9. 'connected' → logprob: -7.692577838897705
    10. ' .' → logprob: -9.192577362060547

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141403377056122
    2. '=' → logprob: -1.7014139890670776
    3. ' ' → logprob: -14.826414108276367
    4. '<|end|>' → logprob: -15.451414108276367
    5. ' =
' → logprob: -17.076414108276367
    6. ')' → logprob: -17.326414108276367
    7. '[' → logprob: -17.576414108276367
    8. '＝' → logprob: -17.701414108276367
    9. ' ' → logprob: -17.951414108276367
    10. '=None' → logprob: -18.201414108276367

Token 317: ' stops' (ID: 29924)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.38711676001548767
    2. ' stops' → logprob: -1.13711678981781
    3. 'stop' → logprob: -8.387116432189941
    4. ' st' → logprob: -12.887116432189941
    5. '   ' → logprob: -13.012116432189941
    6. 'Stops' → logprob: -13.012116432189941
    7. '	st' → logprob: -13.512116432189941
    8. ' stop' → logprob: -13.637116432189941
    9. 's' → logprob: -13.887116432189941
    10. ' ' → logprob: -13.887116432189941

Token 318: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -11.750008583068848
    3. 's' → logprob: -15.500008583068848
    4. '[s' → logprob: -16.37500762939453
    5. ' [' → logprob: -17.62500762939453
    6. '[I' → logprob: -18.75000762939453
    7. 'i' → logprob: -19.00000762939453
    8. '[
' → logprob: -19.12500762939453
    9. '```' → logprob: -19.75000762939453
    10. '[j' → logprob: -20.00000762939453

Token 319: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8000478148460388
    2. '<|end|>' → logprob: -0.8000478148460388
    3. ')' → logprob: -2.3000478744506836
    4. '}' → logprob: -7.550047874450684
    5. '<|end|>' → logprob: -7.925047874450684
    6. '```' → logprob: -9.425047874450684
    7. '
' → logprob: -10.175047874450684
    8. '#' → logprob: -10.925047874450684
    9. '       ' → logprob: -11.175047874450684
    10. '']' → logprob: -11.175047874450684

Token 320: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1660185158252716
    2. '
' → logprob: -3.041018486022949
    3. '<|end|>' → logprob: -3.041018486022949
    4. '   ' → logprob: -3.416018486022949
    5. ' def' → logprob: -3.791018486022949
    6. ' ' → logprob: -7.166018486022949
    7. '```' → logprob: -8.04101848602295
    8. ')' → logprob: -8.29101848602295
    9. '<|end|>' → logprob: -8.54101848602295
    10. '    
' → logprob: -8.66601848602295

Token 322: ' path' (ID: 3104)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.0643833801150322
    2. ' shortest' → logprob: -3.4393832683563232
    3. 'path' → logprob: -5.064383506774902
    4. 'def' → logprob: -5.064383506774902
    5. 'forward' → logprob: -5.439383506774902
    6. 'get' → logprob: -5.939383506774902
    7. 'length' → logprob: -6.064383506774902
    8. 'linear' → logprob: -6.189383506774902
    9. ' path' → logprob: -7.064383506774902
    10. ' get' → logprob: -7.564383506774902

Token 323: '_forward' (ID: 75888)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03686105087399483
    2. '_from' → logprob: -4.286860942840576
    3. '_between' → logprob: -4.286860942840576
    4. '(' → logprob: -4.786860942840576
    5. 'from' → logprob: -8.661861419677734
    6. '_(' → logprob: -9.661861419677734
    7. '_to' → logprob: -10.161861419677734
    8. ' (' → logprob: -11.161861419677734
    9. '(from' → logprob: -11.286861419677734
    10. '_' → logprob: -11.661861419677734

Token 324: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -15.625000953674316
    4. 'self' → logprob: -17.125001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '_(' → logprob: -19.125001907348633
    7. '(s' → logprob: -19.500001907348633
    8. 'from' → logprob: -19.750001907348633
    9. '__(' → logprob: -20.000001907348633
    10. '(start' → logprob: -20.250001907348633

Token 325: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012964145571459085
    2. '(' → logprob: -9.500129699707031
    3. ')(' → logprob: -10.625129699707031
    4. ' (' → logprob: -11.250129699707031
    5. 'self' → logprob: -11.250129699707031
    6. ')' → logprob: -13.500129699707031
    7. ',' → logprob: -13.625129699707031
    8. '}(' → logprob: -14.750129699707031
    9. '(start' → logprob: -15.000129699707031
    10. '   ' → logprob: -15.125129699707031

Token 326: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.10519050806760788
    2. ' start' → logprob: -2.3551905155181885
    3. 'self' → logprob: -5.355190277099609
    4. ' self' → logprob: -8.73019027709961
    5. 'stop' → logprob: -10.73019027709961
    6. 'from' → logprob: -10.73019027709961
    7. ' ' → logprob: -11.10519027709961
    8. ')' → logprob: -11.60519027709961
    9. '   ' → logprob: -12.35519027709961
    10. 'index' → logprob: -12.48019027709961

Token 327: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.782141569303349e-05
    2. ' ,' → logprob: -9.37509822845459
    3. ':' → logprob: -11.50009822845459
    4. ',start' → logprob: -13.25009822845459
    5. ',self' → logprob: -14.87509822845459
    6. '   ' → logprob: -15.25009822845459
    7. 'self' → logprob: -15.62509822845459
    8. ',index' → logprob: -17.000097274780273
    9. '):' → logprob: -17.125097274780273
    10. ':,' → logprob: -17.250097274780273

Token 328: ' Bus' (ID: 21332)
  Prédit: 'Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -0.12695257365703583
    2. ' Bus' → logprob: -2.126952648162842
    3. 'int' → logprob: -11.126952171325684
    4. ' ' → logprob: -12.501952171325684
    5. ' int' → logprob: -13.376952171325684
    6. 'bus' → logprob: -13.626952171325684
    7. ')' → logprob: -13.876952171325684
    8. '_bus' → logprob: -14.376952171325684
    9. '.Bus' → logprob: -14.376952171325684
    10. ' bus' → logprob: -14.751952171325684

Token 329: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.8624639324116288e-06
    2. ' Stop' → logprob: -14.125001907348633
    3. 'stop' → logprob: -14.750001907348633
    4. '   ' → logprob: -15.125001907348633
    5. '_Stop' → logprob: -16.250001907348633
    6. '_stop' → logprob: -16.375001907348633
    7. ')' → logprob: -17.875001907348633
    8. '
' → logprob: -18.125001907348633
    9. '       ' → logprob: -18.125001907348633
    10. '    ' → logprob: -18.250001907348633

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.526570384972729e-05
    2. ' ,' → logprob: -10.500055313110352
    3. ',end' → logprob: -10.625055313110352
    4. '):' → logprob: -13.250055313110352
    5. '):
' → logprob: -14.125055313110352
    6. ',start' → logprob: -14.500055313110352
    7. '   ' → logprob: -16.62505531311035
    8. ',current' → logprob: -16.62505531311035
    9. ',to' → logprob: -17.00005531311035
    10. ',index' → logprob: -17.12505531311035

Token 331: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.4740941822528839
    2. 'end' → logprob: -0.9740941524505615
    3. '   ' → logprob: -11.84909439086914
    4. ' ' → logprob: -12.59909439086914
    5. 'stop' → logprob: -13.09909439086914
    6. '  ' → logprob: -13.59909439086914
    7. '	end' → logprob: -13.72409439086914
    8. ' stop' → logprob: -13.84909439086914
    9. '       ' → logprob: -14.97409439086914
    10. '    ' → logprob: -15.22409439086914

Token 332: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3614453375339508
    2. '):' → logprob: -1.2364453077316284
    3. '):
' → logprob: -4.361445426940918
    4. '):
' → logprob: -9.361445426940918
    5. ')' → logprob: -10.111445426940918
    6. ' ):' → logprob: -10.861445426940918
    7. ' :' → logprob: -12.486445426940918
    8. '):

' → logprob: -13.111445426940918
    9. '   ' → logprob: -13.861445426940918
    10. ',' → logprob: -14.111445426940918

Token 333: ' Bus' (ID: 21332)
  Prédit: 'Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -0.5760159492492676
    2. ' Bus' → logprob: -0.8260159492492676
    3. ')' → logprob: -10.20101547241211
    4. ' ' → logprob: -10.95101547241211
    5. '   ' → logprob: -11.82601547241211
    6. '.Bus' → logprob: -12.57601547241211
    7. '  ' → logprob: -12.82601547241211
    8. ' bus' → logprob: -13.57601547241211
    9. 'Stop' → logprob: -13.57601547241211
    10. '_bus' → logprob: -13.95101547241211

Token 334: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.6240566083070007e-06
    2. ' Stop' → logprob: -14.500001907348633
    3. 'stop' → logprob: -14.875001907348633
    4. '_Stop' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.000001907348633
    6. 'Step' → logprob: -16.625001907348633
    7. 'Stops' → logprob: -16.875001907348633
    8. ' ' → logprob: -16.875001907348633
    9. '_stop' → logprob: -17.000001907348633
    10. 'S' → logprob: -17.250001907348633

Token 335: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018286434933543205
    2. '):
' → logprob: -4.018286228179932
    3. '):
' → logprob: -9.01828670501709
    4. ')' → logprob: -11.39328670501709
    5. '   ' → logprob: -13.39328670501709
    6. ' ):' → logprob: -13.76828670501709
    7. ':' → logprob: -14.39328670501709
    8. '       ' → logprob: -14.64328670501709
    9. '):

' → logprob: -15.14328670501709
    10. ')->' → logprob: -16.643285751342773

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.464347173576243e-05
    2. 'path' → logprob: -11.12503433227539
    3. '   ' → logprob: -12.25003433227539
    4. 'if' → logprob: -12.50003433227539
    5. 'current' → logprob: -12.62503433227539
    6. ' if' → logprob: -13.25003433227539
    7. 'index' → logprob: -13.62503433227539
    8. ' path' → logprob: -13.75003433227539
    9. 'def' → logprob: -14.00003433227539
    10. 'self' → logprob: -14.50003433227539

Token 337: ' path' (ID: 3104)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0574185885488987
    2. 'path' (adapté à ' path') → logprob: -3.1824185848236084
    3. ' path' → logprob: -5.0574188232421875
    4. 'if' → logprob: -5.3074188232421875
    5. 'current' → logprob: -6.5574188232421875
    6. ' if' → logprob: -6.8074188232421875
    7. 'result' → logprob: -8.557418823242188
    8. ' current' → logprob: -8.932418823242188
    9. 'index' → logprob: -9.932418823242188
    10. '   ' → logprob: -10.307418823242188

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06210056319832802
    2. '=' → logprob: -2.812100648880005
    3. '_fw' → logprob: -9.687100410461426
    4. '_' → logprob: -9.937100410461426
    5. '=[]' → logprob: -11.062100410461426
    6. '=[]
' → logprob: -12.687100410461426
    7. '   ' → logprob: -13.937100410461426
    8. '_forward' → logprob: -14.187100410461426
    9. ',' → logprob: -14.312100410461426
    10. ' ' → logprob: -14.562100410461426

Token 339: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.014200172387063503
    2. '[]' → logprob: -4.264200210571289
    3. ' []
' → logprob: -10.264200210571289
    4. '[]

' → logprob: -13.389200210571289
    5. '[' → logprob: -15.639200210571289
    6. ' []' → logprob: -16.38920021057129
    7. '[
' → logprob: -19.13920021057129
    8. '   ' → logprob: -19.26420021057129
    9. '=[]
' → logprob: -19.26420021057129
    10. '[])
' → logprob: -19.51420021057129

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000587821879889816
    2. 'current' → logprob: -7.5005879402160645
    3. ' current' → logprob: -11.000587463378906
    4. '   ' → logprob: -11.500587463378906
    5. '	' → logprob: -12.125587463378906
    6. '
' → logprob: -14.125587463378906
    7. '	current' → logprob: -14.625587463378906
    8. '	   ' → logprob: -15.250587463378906
    9. 'while' → logprob: -15.500587463378906
    10. '    ' → logprob: -15.625587463378906

Token 341: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.003430792596191168
    2. ' current' → logprob: -6.2534308433532715
    3. '       ' → logprob: -6.5034308433532715
    4. '   ' → logprob: -13.378430366516113
    5. '	current' → logprob: -14.753430366516113
    6. 'if' → logprob: -14.878430366516113
    7. '```' → logprob: -14.878430366516113
    8. '
' → logprob: -17.37843132019043
    9. '.current' → logprob: -17.75343132019043
    10. '(current' → logprob: -18.00343132019043

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141851902008057
    2. '=' → logprob: -1.7014185190200806
    3. '=start' → logprob: -12.20141887664795
    4. '=current' → logprob: -16.326417922973633
    5. ' ' → logprob: -17.076417922973633
    6. '＝' → logprob: -18.326417922973633
    7. '=
' → logprob: -18.951417922973633
    8. ' =
' → logprob: -18.951417922973633
    9. '	' → logprob: -19.326417922973633
    10. '   ' → logprob: -19.576417922973633

Token 343: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.575941264629364
    2. ' start' → logprob: -0.825941264629364
    3. '	start' → logprob: -13.95094108581543
    4. '[start' → logprob: -14.32594108581543
    5. '=start' → logprob: -15.95094108581543
    6. '
' → logprob: -16.20094108581543
    7. '(start' → logprob: -16.95094108581543
    8. 'Start' → logprob: -17.07594108581543
    9. 'star' → logprob: -17.45094108581543
    10. 'current' → logprob: -18.20094108581543

Token 344: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.032980866730213165
    2. '       ' → logprob: -3.7829809188842773
    3. 'while' → logprob: -5.532980918884277
    4. '        
' → logprob: -6.407980918884277
    5. ' 
' → logprob: -6.532980918884277
    6. '
' → logprob: -7.157980918884277
    7. ' while' → logprob: -7.282980918884277
    8. '  
' → logprob: -7.907980918884277
    9. '<|end|>' → logprob: -7.907980918884277
    10. '    
' → logprob: -9.532980918884277

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004682526458054781
    2. '
' → logprob: -6.004682540893555
    3. ' while' → logprob: -7.129682540893555
    4. 'while' → logprob: -7.629682540893555
    5. '	while' → logprob: -8.004682540893555
    6. '<|end|>' → logprob: -8.254682540893555
    7. '        
' → logprob: -9.254682540893555
    8. '	' → logprob: -9.504682540893555
    9. ' 
' → logprob: -10.129682540893555
    10. '		
' → logprob: -11.004682540893555

Token 346: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.08119600266218185
    2. ' while' → logprob: -2.5811960697174072
    3. '       ' → logprob: -6.081195831298828
    4. '	while' → logprob: -11.081195831298828
    5. '
' → logprob: -13.206195831298828
    6. 'While' → logprob: -14.081195831298828
    7. '```' → logprob: -18.081195831298828
    8. '   ' → logprob: -18.206195831298828
    9. '        
' → logprob: -18.206195831298828
    10. '<|end|>' → logprob: -18.456195831298828

Token 347: ' True' (ID: 6432)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0011804660316556692
    2. ' current' → logprob: -6.751180648803711
    3. 'True' → logprob: -11.501180648803711
    4. '   ' → logprob: -16.25118064880371
    5. ' True' → logprob: -16.62618064880371
    6. '(current' → logprob: -17.75118064880371
    7. '	current' → logprob: -18.75118064880371
    8. '.current' → logprob: -19.50118064880371
    9. ' ' → logprob: -19.62618064880371
    10. 'cur' → logprob: -19.87618064880371

Token 348: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3508983552455902
    2. ':' → logprob: -1.2258983850479126
    3. '       ' → logprob: -6.725898265838623
    4. ' and' → logprob: -7.350898265838623
    5. '   ' → logprob: -8.350898742675781
    6. '           ' → logprob: -8.475898742675781
    7. '):
' → logprob: -9.475898742675781
    8. 'and' → logprob: -10.850898742675781
    9. ',' → logprob: -11.100898742675781
    10. ':

' → logprob: -11.350898742675781

Token 349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07067514210939407
    2. '       ' → logprob: -3.0706751346588135
    3. '   ' → logprob: -4.445675373077393
    4. 'path' → logprob: -5.570675373077393
    5. ' if' → logprob: -5.820675373077393
    6. 'if' → logprob: -5.820675373077393
    7. ' path' → logprob: -8.695674896240234
    8. '```' → logprob: -9.695674896240234
    9. '
' → logprob: -10.695674896240234
    10. '          ' → logprob: -11.070674896240234

Token 350: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.09026432782411575
    2. '       ' → logprob: -3.340264320373535
    3. '           ' → logprob: -3.465264320373535
    4. '   ' → logprob: -4.840264320373535
    5. ' path' → logprob: -5.090264320373535
    6. 'if' → logprob: -5.340264320373535
    7. ' if' → logprob: -7.465264320373535
    8. '```' → logprob: -8.840264320373535
    9. '	path' → logprob: -11.090264320373535
    10. '               ' → logprob: -11.090264320373535

Token 351: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.7432603272027336e-06
    2. 'append' → logprob: -14.000001907348633
    3. '.' → logprob: -14.125001907348633
    4. ' .' → logprob: -15.875001907348633
    5. '.app' → logprob: -16.875001907348633
    6. '.ap' → logprob: -19.125001907348633
    7. ' append' → logprob: -19.625001907348633
    8. '_append' → logprob: -19.750001907348633
    9. '	append' → logprob: -20.000001907348633
    10. 'appen' → logprob: -20.250001907348633

Token 352: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.03820546716451645
    2. 'current' → logprob: -3.28820538520813
    3. ' current' → logprob: -9.41320514678955
    4. '(' → logprob: -9.41320514678955
    5. ' (' → logprob: -14.91320514678955
    6. '$current' → logprob: -15.91320514678955
    7. ',current' → logprob: -16.288206100463867
    8. '(
' → logprob: -16.413206100463867
    9. '	current' → logprob: -16.538206100463867
    10. '[current' → logprob: -16.913206100463867

Token 353: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -1.7954958821064793e-05
    2. ')' → logprob: -11.500018119812012
    3. '.' → logprob: -12.000018119812012
    4. ').' → logprob: -14.250018119812012
    5. 'number' → logprob: -15.250018119812012
    6. '.n' → logprob: -15.375018119812012
    7. ' .' → logprob: -15.750018119812012
    8. '.num' → logprob: -16.000017166137695
    9. '.numero' → logprob: -16.375017166137695
    10. '.code' → logprob: -17.250017166137695

Token 354: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6969950199127197
    2. ')
' → logprob: -0.6969950199127197
    3. '           ' → logprob: -5.571994781494141
    4. ')
' → logprob: -11.19699478149414
    5. '       ' → logprob: -11.82199478149414
    6. 'if' → logprob: -12.07199478149414
    7. ')

' → logprob: -13.07199478149414
    8. '               ' → logprob: -13.69699478149414
    9. '   ' → logprob: -13.94699478149414
    10. ' )
' → logprob: -14.19699478149414

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3425219549390022e-05
    2. '   ' → logprob: -11.62501335144043
    3. ' if' → logprob: -13.12501335144043
    4. '       ' → logprob: -13.25001335144043
    5. ' ' → logprob: -15.25001335144043
    6. 'if' → logprob: -15.50001335144043
    7. '          ' → logprob: -16.25001335144043
    8. '
' → logprob: -17.00001335144043
    9. '         ' → logprob: -17.25001335144043
    10. '               ' → logprob: -17.25001335144043

Token 356: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5862135291099548
    2. 'if' (adapté à ' if') → logprob: -0.8362135291099548
    3. ' if' → logprob: -4.5862135887146
    4. '   ' → logprob: -10.961213111877441
    5. '       ' → logprob: -11.461213111877441
    6. '               ' → logprob: -14.711213111877441
    7. '          ' → logprob: -14.711213111877441
    8. '	if' → logprob: -14.836213111877441
    9. '         ' → logprob: -15.711213111877441
    10. '```' → logprob: -15.711213111877441

Token 357: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0019286326132714748
    2. ' current' → logprob: -6.251928806304932
    3. '           ' → logprob: -19.126928329467773
    4. '.current' → logprob: -20.126928329467773
    5. '(current' → logprob: -20.251928329467773
    6. '   ' → logprob: -20.376928329467773
    7. '	current' → logprob: -20.376928329467773
    8. '=current' → logprob: -20.751928329467773
    9. '$current' → logprob: -21.126928329467773
    10. 'Current' → logprob: -21.751928329467773

Token 358: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04858805239200592
    2. '==' → logprob: -3.0485880374908447
    3. '==
' → logprob: -15.548587799072266
    4. ' is' → logprob: -15.798587799072266
    5. ' ' → logprob: -16.548587799072266
    6. '=' → logprob: -16.548587799072266
    7. ' ==
' → logprob: -17.298587799072266
    8. ')==' → logprob: -17.673587799072266
    9. ' =' → logprob: -17.673587799072266
    10. 'is' → logprob: -18.423587799072266

Token 359: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1602243334054947
    2. ' end' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.41022491455078
    4. '=end' → logprob: -16.66022491455078
    5. '	end' → logprob: -17.78522491455078
    6. '   ' → logprob: -18.28522491455078
    7. '(end' → logprob: -18.78522491455078
    8. '
' → logprob: -19.41022491455078
    9. '[end' → logprob: -19.53522491455078
    10. '_end' → logprob: -20.03522491455078

Token 360: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5011246800422668
    2. ':' → logprob: -1.751124620437622
    3. ':
' → logprob: -2.001124620437622
    4. ' or' → logprob: -2.501124620437622
    5. '           ' → logprob: -5.751124858856201
    6. ':return' → logprob: -9.626124382019043
    7. '       ' → logprob: -9.876124382019043
    8. ',' → logprob: -10.251124382019043
    9. '.' → logprob: -11.376124382019043
    10. '   ' → logprob: -11.751124382019043

Token 361: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014215784904081374
    2. '           ' → logprob: -9.625142097473145
    3. 'break' → logprob: -10.000142097473145
    4. ' break' → logprob: -10.875142097473145
    5. ' or' → logprob: -12.125142097473145
    6. '       ' → logprob: -13.000142097473145
    7. '   ' → logprob: -13.375142097473145
    8. 'return' → logprob: -14.250142097473145
    9. '                   ' → logprob: -14.625142097473145
    10. ' return' → logprob: -15.125142097473145

Token 362: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08536183089017868
    2. ' break' → logprob: -3.0853617191314697
    3. 'break' (adapté à ' break') → logprob: -3.3353617191314697
    4. 'return' → logprob: -8.33536148071289
    5. ' return' → logprob: -8.96036148071289
    6. '           ' → logprob: -9.96036148071289
    7. '	break' → logprob: -10.58536148071289
    8. '   ' → logprob: -10.58536148071289
    9. '                   ' → logprob: -11.08536148071289
    10. '
' → logprob: -11.21036148071289

Token 363: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001907855912577361
    2. '
' → logprob: -9.000190734863281
    3. '       ' → logprob: -10.875190734863281
    4. '            
' → logprob: -11.250190734863281
    5. 'current' → logprob: -11.250190734863281
    6. '   ' → logprob: -11.750190734863281
    7. '<|end|>' → logprob: -12.500190734863281
    8. ' current' → logprob: -12.750190734863281
    9. '    
' → logprob: -12.875190734863281
    10. '\n' → logprob: -13.750190734863281

Token 364: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000215457082958892
    2. '       ' → logprob: -8.625215530395508
    3. '   ' → logprob: -10.750215530395508
    4. 'current' → logprob: -12.000215530395508
    5. '               ' → logprob: -13.250215530395508
    6. 'if' → logprob: -13.625215530395508
    7. ' if' → logprob: -13.750215530395508
    8. ' ' → logprob: -14.000215530395508
    9. ' current' → logprob: -14.000215530395508
    10. '
' → logprob: -14.125215530395508

Token 365: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1218862533569336
    2. '           ' → logprob: -1.4968862533569336
    3. 'current' (adapté à ' current') → logprob: -1.4968862533569336
    4. ' if' → logprob: -1.8718862533569336
    5. ' current' → logprob: -2.6218862533569336
    6. '       ' → logprob: -9.121886253356934
    7. '
' → logprob: -10.746886253356934
    8. '            
' → logprob: -11.246886253356934
    9. '   ' → logprob: -11.496886253356934
    10. '.current' → logprob: -12.121886253356934

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141518115997314
    2. ' =' → logprob: -1.7014151811599731
    3. 'connected' → logprob: -13.701415061950684
    4. '.connected' → logprob: -14.951415061950684
    5. '.' → logprob: -15.326415061950684
    6. '_connected' → logprob: -16.326416015625
    7. ' connected' → logprob: -16.576416015625
    8. '=current' → logprob: -16.576416015625
    9. '.=' → logprob: -16.951416015625
    10. '＝' → logprob: -16.951416015625

Token 367: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.023245826363563538
    2. ' current' → logprob: -3.7732458114624023
    3. '.current' → logprob: -16.02324676513672
    4. '(current' → logprob: -16.52324676513672
    5. '	current' → logprob: -16.89824676513672
    6. '=current' → logprob: -17.27324676513672
    7. '$current' → logprob: -17.52324676513672
    8. '[current' → logprob: -17.64824676513672
    9. 'urrent' → logprob: -17.89824676513672
    10. 'cur' → logprob: -18.64824676513672

Token 368: '.connected' (ID: 134294)
  Prédit: '.connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -1.1875571544806007e-05
    2. '.current' → logprob: -11.750011444091797
    3. 'connected' → logprob: -12.750011444091797
    4. '.' → logprob: -14.250011444091797
    5. ' .' → logprob: -15.500011444091797
    6. '_connected' → logprob: -18.000011444091797
    7. '.connection' → logprob: -18.125011444091797
    8. '.available' → logprob: -18.625011444091797
    9. '.connections' → logprob: -18.625011444091797
    10. '.selected' → logprob: -18.875011444091797

Token 369: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -1.1472419600977446e-06
    2. '_backward' → logprob: -14.000000953674316
    3. '_' → logprob: -15.125000953674316
    4. '_FORWARD' → logprob: -17.625001907348633
    5. '```' → logprob: -17.750001907348633
    6. 'forward' → logprob: -18.500001907348633
    7. ' _' → logprob: -19.000001907348633
    8. '_for' → logprob: -19.125001907348633
    9. 'Forward' → logprob: -19.375001907348633
    10. '"_' → logprob: -19.375001907348633

Token 370: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03802748769521713
    2. '           ' → logprob: -3.53802752494812
    3. 'return' (adapté à ' return') → logprob: -5.163027286529541
    4. ' return' → logprob: -6.288027286529541
    5. '<|end|>' → logprob: -7.663027286529541
    6. '   ' → logprob: -9.1630277633667
    7. ' ' → logprob: -10.1630277633667
    8. '
' → logprob: -11.0380277633667
    9. ' if' → logprob: -11.9130277633667
    10. '```' → logprob: -12.2880277633667

Token 373: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.10020732134580612
    2. ' path' → logprob: -2.3502073287963867
    3. '[path' → logprob: -14.975207328796387
    4. '(path' → logprob: -15.350207328796387
    5. '	path' → logprob: -17.10020637512207
    6. ' ' → logprob: -17.35020637512207
    7. '[' → logprob: -17.72520637512207
    8. ' ' → logprob: -17.97520637512207
    9. 'Path' → logprob: -18.60020637512207
    10. '   ' → logprob: -18.72520637512207

Token 374: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2642626166343689
    2. '
' → logprob: -2.1392626762390137
    3. 'def' → logprob: -2.8892626762390137
    4. '<|end|>' → logprob: -2.8892626762390137
    5. '    
' → logprob: -6.764262676239014
    6. ' def' → logprob: -7.014262676239014
    7. ' ' → logprob: -7.889262676239014
    8. '<|end|>' → logprob: -8.014262199401855
    9. '```' → logprob: -8.889262199401855
    10. 'class' → logprob: -9.639262199401855

Token 376: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001996800536289811
    2. '   ' → logprob: -6.751996994018555
    3. '
' → logprob: -7.501996994018555
    4. ' def' → logprob: -8.376996994018555
    5. '    
' → logprob: -10.751996994018555
    6. '<|end|>' → logprob: -11.251996994018555
    7. '	def' → logprob: -12.001996994018555
    8. '  
' → logprob: -14.251996994018555
    9. '```' → logprob: -14.376996994018555
    10. ' ' → logprob: -14.626996994018555

Token 377: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.004625699482858181
    2. ' path' → logprob: -5.3796257972717285
    3. 'def' → logprob: -13.00462532043457
    4. '
' → logprob: -14.37962532043457
    5. ' ' → logprob: -14.62962532043457
    6. '   ' → logprob: -14.62962532043457
    7. '_path' → logprob: -14.87962532043457
    8. '.path' → logprob: -14.87962532043457
    9. 'paths' → logprob: -15.62962532043457
    10. '	path' → logprob: -15.62962532043457

Token 378: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -6.635164754698053e-05
    2. '_reverse' → logprob: -10.375066757202148
    3. '_back' → logprob: -10.500066757202148
    4. '_' → logprob: -12.000066757202148
    5. '_forward' → logprob: -14.125066757202148
    6. '_between' → logprob: -16.62506675720215
    7. 's' → logprob: -16.75006675720215
    8. '"_' → logprob: -16.75006675720215
    9. '##_' → logprob: -16.75006675720215
    10. '_linear' → logprob: -17.12506675720215

Token 379: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -16.3750057220459
    4. 'self' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.2500057220459
    6. '(s' → logprob: -18.7500057220459
    7. '       ' → logprob: -20.0000057220459
    8. '(Self' → logprob: -20.2500057220459
    9. '(this' → logprob: -20.3750057220459
    10. ' self' → logprob: -20.5000057220459

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011713240382960066
    2. ',start' → logprob: -9.750117301940918
    3. 'self' → logprob: -10.000117301940918
    4. ' ,' → logprob: -12.000117301940918
    5. ',self' → logprob: -12.250117301940918
    6. 'start' → logprob: -13.625117301940918
    7. '(self' → logprob: -14.000117301940918
    8. '_,' → logprob: -16.0001163482666
    9. '   ' → logprob: -16.8751163482666
    10. '(start' → logprob: -16.8751163482666

Token 381: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08133207261562347
    2. 'start' → logprob: -2.831331968307495
    3. ' self' → logprob: -4.081332206726074
    4. ' start' → logprob: -6.081332206726074
    5. '   ' → logprob: -13.081332206726074
    6. ' ' → logprob: -13.206332206726074
    7. 'end' → logprob: -13.456332206726074
    8. ')' → logprob: -14.081332206726074
    9. ',' → logprob: -14.331332206726074
    10. '(self' → logprob: -14.956332206726074

Token 382: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001598175847902894
    2. ',' → logprob: -6.501598358154297
    3. ' :' → logprob: -9.376598358154297
    4. '[' → logprob: -12.626598358154297
    5. '):' → logprob: -12.751598358154297
    6. ' ,' → logprob: -13.251598358154297
    7. '   ' → logprob: -13.876598358154297
    8. ')' → logprob: -14.626598358154297
    9. 'def' → logprob: -15.126598358154297
    10. ':,' → logprob: -15.626598358154297

Token 383: ' Bus' (ID: 21332)
  Prédit: ' Bus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bus' → logprob: -0.10020741820335388
    2. 'Bus' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.850207328796387
    4. '.Bus' → logprob: -15.975207328796387
    5. 'self' → logprob: -16.225208282470703
    6. ' bus' → logprob: -16.350208282470703
    7. ' ' → logprob: -16.725208282470703
    8. ' self' → logprob: -17.600208282470703
    9. '_bus' → logprob: -17.975208282470703
    10. '   ' → logprob: -18.100208282470703

Token 384: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: 0.0
    2. ' Stop' → logprob: -17.125
    3. 'Bus' → logprob: -17.875
    4. 'Stops' → logprob: -17.875
    5. '_Stop' → logprob: -18.25
    6. 'stop' → logprob: -18.375
    7. '   ' → logprob: -19.375
    8. 'St' → logprob: -19.5
    9. '.Stop' → logprob: -19.5
    10. 'Step' → logprob: -20.0

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.000036239624023
    4. '       ' → logprob: -16.500036239624023
    5. ',path' → logprob: -16.750036239624023
    6. ',start' → logprob: -17.000036239624023
    7. ',current' → logprob: -17.250036239624023
    8. ',end' → logprob: -17.375036239624023
    9. ',
' → logprob: -18.000036239624023
    10. ',line' → logprob: -18.000036239624023

Token 386: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.38934749364852905
    2. ' end' → logprob: -1.1393475532531738
    3. ' Bus' → logprob: -6.639347553253174
    4. 'Bus' → logprob: -6.764347553253174
    5. ' ' → logprob: -12.014347076416016
    6. 'stop' → logprob: -12.889347076416016
    7. '   ' → logprob: -14.514347076416016
    8. 'self' → logprob: -14.764347076416016
    9. '[end' → logprob: -14.889347076416016
    10. 'End' → logprob: -15.264347076416016

Token 387: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.531315314830863e-06
    2. ' :' → logprob: -13.000003814697266
    3. '):' → logprob: -13.875003814697266
    4. ',' → logprob: -15.750003814697266
    5. '   ' → logprob: -16.375003814697266
    6. ':start' → logprob: -17.000003814697266
    7. '):
' → logprob: -17.250003814697266
    8. ')' → logprob: -17.375003814697266
    9. '  ' → logprob: -17.625003814697266
    10. '：' → logprob: -18.750003814697266

Token 388: ' Bus' (ID: 21332)
  Prédit: ' Bus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bus' → logprob: -0.018151583150029182
    2. 'Bus' → logprob: -4.018151760101318
    3. '.Bus' → logprob: -14.89315128326416
    4. ' ' → logprob: -15.14315128326416
    5. 'start' → logprob: -15.26815128326416
    6. 'Stop' → logprob: -15.39315128326416
    7. ' stop' → logprob: -15.51815128326416
    8. ' start' → logprob: -15.64315128326416
    9. ' ' → logprob: -16.518152236938477
    10. ')' → logprob: -16.643152236938477

Token 389: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -5.512236498361744e-07
    2. 'Stops' → logprob: -16.25
    3. ' Stop' → logprob: -16.375
    4. 'op' → logprob: -16.375
    5. 'stop' → logprob: -16.5
    6. 'Top' → logprob: -16.5
    7. '_Stop' → logprob: -17.125
    8. 'top' → logprob: -17.375
    9. '   ' → logprob: -17.75
    10. '_stop' → logprob: -17.75

Token 390: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008909878320991993
    2. '):' → logprob: -4.758909702301025
    3. '):
' → logprob: -8.258910179138184
    4. ' ):
' → logprob: -10.633910179138184
    5. '       ' → logprob: -12.633910179138184
    6. ':' → logprob: -12.633910179138184
    7. '   ' → logprob: -12.758910179138184
    8. ')' → logprob: -13.508910179138184
    9. '):

' → logprob: -14.133910179138184
    10. ' ):' → logprob: -15.258910179138184

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.847109812544659e-05
    2. '   ' → logprob: -10.750048637390137
    3. 'path' → logprob: -11.125048637390137
    4. ' path' → logprob: -11.375048637390137
    5. '```' → logprob: -15.000048637390137
    6. '      ' → logprob: -16.25004768371582
    7. '
' → logprob: -16.87504768371582
    8. '(path' → logprob: -16.87504768371582
    9. '	path' → logprob: -17.00004768371582
    10. '           ' → logprob: -17.37504768371582

Token 392: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.763953447341919
    2. '       ' → logprob: -1.013953447341919
    3. 'path' (adapté à ' path') → logprob: -1.763953447341919
    4. '   ' → logprob: -10.76395320892334
    5. '```' → logprob: -12.38895320892334
    6. '	path' → logprob: -13.13895320892334
    7. '[path' → logprob: -14.13895320892334
    8. '      ' → logprob: -14.26395320892334
    9. '(path' → logprob: -14.26395320892334
    10. '"path' → logprob: -15.26395320892334

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31330040097236633
    2. '=' → logprob: -1.313300371170044
    3. '=[]' → logprob: -10.188300132751465
    4. '=[]
' → logprob: -14.563300132751465
    5. '[]' → logprob: -15.313300132751465
    6. ' ' → logprob: -15.563300132751465
    7. '[:]' → logprob: -16.06330108642578
    8. '   ' → logprob: -17.18830108642578
    9. '  ' → logprob: -17.81330108642578
    10. '=[]
' → logprob: -17.93830108642578

Token 394: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.011769111268222332
    2. ' []
' → logprob: -4.7617692947387695
    3. '[]' → logprob: -5.7617692947387695
    4. ' []' → logprob: -12.51176929473877
    5. '=[]
' → logprob: -15.88676929473877
    6. '([])
' → logprob: -16.011768341064453
    7. ' []
' → logprob: -16.261768341064453
    8. '[]

' → logprob: -17.761768341064453
    9. '   ' → logprob: -18.136768341064453
    10. '[' → logprob: -18.386768341064453

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006472356617450714
    2. 'current' → logprob: -5.256472587585449
    3. '
' → logprob: -6.756472587585449
    4. ' current' → logprob: -9.63147258758545
    5. '   ' → logprob: -11.75647258758545
    6. '
' → logprob: -14.50647258758545
    7. '```' → logprob: -15.25647258758545
    8. '	current' → logprob: -16.756471633911133
    9. '           ' → logprob: -17.256471633911133
    10. 'Current' → logprob: -17.381471633911133

Token 396: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.013499356806278229
    2. ' current' → logprob: -4.5134992599487305
    3. '       ' → logprob: -6.0134992599487305
    4. '	current' → logprob: -13.51349925994873
    5. '   ' → logprob: -14.13849925994873
    6. '.current' → logprob: -14.63849925994873
    7. '
' → logprob: -15.38849925994873
    8. 'Current' → logprob: -15.76349925994873
    9. '_current' → logprob: -16.513500213623047
    10. ' ' → logprob: -17.388500213623047

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759411454200745
    2. ' =' → logprob: -0.8259411454200745
    3. '=start' → logprob: -13.32594108581543
    4. '   ' → logprob: -16.07594108581543
    5. '	' → logprob: -17.57594108581543
    6. ' ' → logprob: -17.70094108581543
    7. '=current' → logprob: -18.57594108581543
    8. '＝' → logprob: -19.82594108581543
    9. '.=' → logprob: -19.95094108581543
    10. ' ' → logprob: -20.20094108581543

Token 398: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.25193122029304504
    2. ' start' → logprob: -1.5019311904907227
    3. 'end' → logprob: -13.251931190490723
    4. ' end' → logprob: -15.626931190490723
    5. '[start' → logprob: -16.00193214416504
    6. '(start' → logprob: -16.37693214416504
    7. '=start' → logprob: -17.62693214416504
    8. '	start' → logprob: -18.37693214416504
    9. 'Start' → logprob: -18.50193214416504
    10. '.start' → logprob: -19.00193214416504

Token 399: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7548171877861023
    2. ' =' → logprob: -0.7548171877861023
    3. '<|end|>' → logprob: -3.504817247390747
    4. '
' → logprob: -4.254817008972168
    5. '=start' → logprob: -5.379817008972168
    6. '       ' → logprob: -5.504817008972168
    7. '   ' → logprob: -6.129817008972168
    8. 'start' → logprob: -7.004817008972168
    9. '    
' → logprob: -7.504817008972168
    10. '[start' → logprob: -7.629817008972168

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3675691783428192
    2. '=' → logprob: -1.7425692081451416
    3. ' =' → logprob: -2.1175692081451416
    4. 'while' → logprob: -4.8675689697265625
    5. '<|end|>' → logprob: -6.6175689697265625
    6. '=start' → logprob: -7.3675689697265625
    7. '        ' → logprob: -7.4925689697265625
    8. '        
' → logprob: -7.4925689697265625
    9. ' while' → logprob: -8.367568969726562
    10. '
' → logprob: -8.367568969726562

Token 401: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.004087778273969889
    2. ' while' → logprob: -5.504087924957275
    3. '       ' → logprob: -11.629087448120117
    4. '	while' → logprob: -15.879087448120117
    5. 'While' → logprob: -15.879087448120117
    6. '   ' → logprob: -16.504087448120117
    7. '
' → logprob: -18.129087448120117
    8. '```' → logprob: -18.504087448120117
    9. '        ' → logprob: -18.754087448120117
    10. '    ' → logprob: -19.629087448120117

Token 402: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.038294050842523575
    2. ' True' → logprob: -3.2882940769195557
    3. 'current' → logprob: -8.413293838500977
    4. ' current' → logprob: -10.413293838500977
    5. '(True' → logprob: -14.663293838500977
    6. ' not' → logprob: -15.788293838500977
    7. 'not' → logprob: -17.038293838500977
    8. ' ' → logprob: -17.663293838500977
    9. 'true' → logprob: -17.788293838500977
    10. ' ' → logprob: -18.788293838500977

Token 403: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29936179518699646
    2. ':' → logprob: -1.7993618249893188
    3. ':
' → logprob: -2.6743617057800293
    4. '       ' → logprob: -3.7993617057800293
    5. '   ' → logprob: -6.424361705780029
    6. '          ' → logprob: -9.549362182617188
    7. '):
' → logprob: -9.924362182617188
    8. '<|end|>' → logprob: -10.299362182617188
    9. '         ' → logprob: -10.924362182617188
    10. '               ' → logprob: -11.049362182617188

Token 404: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007505440153181553
    2. '   ' → logprob: -7.750750541687012
    3. '       ' → logprob: -8.125750541687012
    4. 'path' → logprob: -11.500750541687012
    5. ' path' → logprob: -11.625750541687012
    6. '{
' → logprob: -13.000750541687012
    7. '
' → logprob: -14.625750541687012
    8. '```' → logprob: -14.750750541687012
    9. '          ' → logprob: -14.875750541687012
    10. ' ' → logprob: -15.500750541687012

Token 405: ' path' (ID: 3104)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06966817378997803
    2. 'path' (adapté à ' path') → logprob: -3.0696682929992676
    3. '   ' → logprob: -4.194668292999268
    4. '       ' → logprob: -5.694668292999268
    5. ' path' → logprob: -6.069668292999268
    6. '```' → logprob: -9.31966781616211
    7. '	path' → logprob: -11.81966781616211
    8. ' ' → logprob: -12.56966781616211
    9. '
' → logprob: -12.56966781616211
    10. '               ' → logprob: -14.44466781616211

Token 406: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.750001907348633
    3. 'append' → logprob: -14.250001907348633
    4. '.app' → logprob: -18.000001907348633
    5. '_append' → logprob: -18.125001907348633
    6. '.Append' → logprob: -18.500001907348633
    7. 'Append' → logprob: -19.375001907348633
    8. '	append' → logprob: -19.375001907348633
    9. ' .' → logprob: -19.625001907348633
    10. '.insert' → logprob: -19.750001907348633

Token 407: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -1.8074162653647363e-05
    2. '(' → logprob: -11.625018119812012
    3. 'current' → logprob: -11.625018119812012
    4. '(
' → logprob: -17.000017166137695
    5. '(cur' → logprob: -17.125017166137695
    6. ' current' → logprob: -17.500017166137695
    7. '$current' → logprob: -18.250017166137695
    8. ' (' → logprob: -18.500017166137695
    9. '(curr' → logprob: -18.500017166137695
    10. '[current' → logprob: -18.500017166137695

Token 408: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.00012558852904476225
    2. '.' → logprob: -9.000125885009766
    3. 'number' → logprob: -13.875125885009766
    4. '.current' → logprob: -14.875125885009766
    5. ' .' → logprob: -15.500125885009766
    6. '.connected' → logprob: -16.125125885009766
    7. '.numero' → logprob: -17.000125885009766
    8. '.period' → logprob: -17.125125885009766
    9. '.num' → logprob: -17.500125885009766
    10. '.previous' → logprob: -17.625125885009766

Token 409: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.030457697808742523
    2. ')' → logprob: -3.5304577350616455
    3. '           ' → logprob: -7.280457496643066
    4. ')
' → logprob: -11.905457496643066
    5. '       ' → logprob: -12.155457496643066
    6. '   ' → logprob: -13.530457496643066
    7. 'current' → logprob: -14.155457496643066
    8. '```' → logprob: -14.155457496643066
    9. '         ' → logprob: -14.280457496643066
    10. ')

' → logprob: -14.655457496643066

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022482690401375294
    2. '
' → logprob: -6.127248287200928
    3. '       ' → logprob: -10.75224781036377
    4. '```' → logprob: -11.25224781036377
    5. '   ' → logprob: -11.37724781036377
    6. ' if' → logprob: -12.37724781036377
    7. 'if' → logprob: -12.50224781036377
    8. '<|end|>' → logprob: -13.00224781036377
    9. '          ' → logprob: -13.12724781036377
    10. '            
' → logprob: -13.25224781036377

Token 411: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.559129536151886
    2. ' if' → logprob: -1.0591294765472412
    3. 'if' (adapté à ' if') → logprob: -2.559129476547241
    4. ' current' → logprob: -5.93412971496582
    5. 'current' → logprob: -6.68412971496582
    6. '       ' → logprob: -9.68412971496582
    7. '
' → logprob: -9.68412971496582
    8. '   ' → logprob: -9.68412971496582
    9. '```' → logprob: -10.05912971496582
    10. ' ' → logprob: -11.93412971496582

Token 412: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.2519291639328003
    2. 'current' → logprob: -1.5019291639328003
    3. '(current' → logprob: -16.126928329467773
    4. '[current' → logprob: -18.376928329467773
    5. 'Current' → logprob: -19.501928329467773
    6. '.current' → logprob: -19.626928329467773
    7. '	current' → logprob: -20.501928329467773
    8. '$current' → logprob: -20.501928329467773
    9. '_current' → logprob: -20.751928329467773
    10. 'urrent' → logprob: -21.001928329467773

Token 413: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.00861456897109747
    2. '==' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.508615493774414
    4. '==
' → logprob: -18.258615493774414
    5. ' =' → logprob: -18.508615493774414
    6. ' ==
' → logprob: -18.758615493774414
    7. '=' → logprob: -19.133615493774414
    8. ' is' → logprob: -19.258615493774414
    9. 'current' → logprob: -19.383615493774414
    10. 'is' → logprob: -19.883615493774414

Token 414: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.01815006136894226
    2. ' end' → logprob: -4.0181498527526855
    3. '(end' → logprob: -16.768150329589844
    4. '=end' → logprob: -17.143150329589844
    5. '[end' → logprob: -17.143150329589844
    6. '   ' → logprob: -17.268150329589844
    7. ' ' → logprob: -17.393150329589844
    8. '	end' → logprob: -17.768150329589844
    9. 'endon' → logprob: -18.143150329589844
    10. '_end' → logprob: -18.143150329589844

Token 415: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0785530805587769
    2. ':
' → logprob: -1.2035530805587769
    3. '==' → logprob: -1.3285530805587769
    4. ' ==' → logprob: -3.0785531997680664
    5. ':' → logprob: -3.5785531997680664
    6. '           ' → logprob: -3.9535531997680664
    7. ' or' → logprob: -7.578553199768066
    8. '              ' → logprob: -8.078553199768066
    9. 'current' → logprob: -8.453553199768066
    10. '=' → logprob: -9.078553199768066

Token 416: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.263011578586884e-05
    2. ' break' → logprob: -10.500042915344238
    3. 'break' → logprob: -11.375042915344238
    4. '           ' → logprob: -14.000042915344238
    5. '              ' → logprob: -14.000042915344238
    6. '			' → logprob: -14.750042915344238
    7. '```' → logprob: -15.125042915344238
    8. '       ' → logprob: -15.250042915344238
    9. '<|end|>' → logprob: -15.625042915344238
    10. '		       ' → logprob: -16.125041961669922

Token 417: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5794069170951843
    2. ' break' → logprob: -1.079406976699829
    3. 'break' (adapté à ' break') → logprob: -2.329406976699829
    4. '           ' → logprob: -5.95440673828125
    5. '	break' → logprob: -11.20440673828125
    6. '```' → logprob: -12.70440673828125
    7. '       ' → logprob: -13.20440673828125
    8. '   ' → logprob: -13.57940673828125
    9. '_break' → logprob: -14.07940673828125
    10. '                   ' → logprob: -14.20440673828125

Token 418: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010033934377133846
    2. '
' → logprob: -7.001003265380859
    3. '       ' → logprob: -9.87600326538086
    4. 'current' → logprob: -11.00100326538086
    5. '            
' → logprob: -12.00100326538086
    6. '		' → logprob: -12.00100326538086
    7. '   ' → logprob: -13.00100326538086
    8. '               ' → logprob: -13.37600326538086
    9. '    
' → logprob: -13.62600326538086
    10. '
' → logprob: -13.75100326538086

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005284877843223512
    2. '		' → logprob: -8.000528335571289
    3. '       ' → logprob: -9.250528335571289
    4. 'current' → logprob: -10.250528335571289
    5. '
' → logprob: -10.500528335571289
    6. '   ' → logprob: -11.000528335571289
    7. ' current' → logprob: -12.000528335571289
    8. '               ' → logprob: -12.375528335571289
    9. '	       ' → logprob: -13.250528335571289
    10. '	' → logprob: -13.500528335571289

Token 420: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.38694724440574646
    2. 'current' (adapté à ' current') → logprob: -1.1369472742080688
    3. '	current' → logprob: -10.136947631835938
    4. '   ' → logprob: -10.261947631835938
    5. '           ' → logprob: -14.511947631835938
    6. '.current' → logprob: -14.761947631835938
    7. '_current' → logprob: -15.011947631835938
    8. '       ' → logprob: -16.261947631835938
    9. '[current' → logprob: -16.261947631835938
    10. ' ' → logprob: -16.511947631835938

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327879428863525
    2. ' =' → logprob: -1.3132787942886353
    3. '=current' → logprob: -11.188279151916504
    4. '.' → logprob: -13.313279151916504
    5. '.connected' → logprob: -14.188279151916504
    6. ' ' → logprob: -15.563279151916504
    7. 'connected' → logprob: -15.563279151916504
    8. '_connected' → logprob: -16.063278198242188
    9. '.current' → logprob: -16.438278198242188
    10. '   ' → logprob: -16.438278198242188

Token 422: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0009115827269852161
    2. ' current' → logprob: -7.000911712646484
    3. '.current' → logprob: -17.375911712646484
    4. '	current' → logprob: -19.500911712646484
    5. '(current' → logprob: -20.000911712646484
    6. '[current' → logprob: -20.375911712646484
    7. '   ' → logprob: -20.375911712646484
    8. '$current' → logprob: -20.750911712646484
    9. '=current' → logprob: -21.000911712646484
    10. ' ' → logprob: -21.125911712646484

Token 423: '.connected' (ID: 134294)
  Prédit: '.connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -2.176947600673884e-05
    2. 'connected' → logprob: -10.875021934509277
    3. '.' → logprob: -12.875021934509277
    4. '.current' → logprob: -17.12502098083496
    5. '   ' → logprob: -17.37502098083496
    6. ' .' → logprob: -17.50002098083496
    7. '.con' → logprob: -18.37502098083496
    8. '.ass' → logprob: -18.62502098083496
    9. '_connected' → logprob: -19.12502098083496
    10. '.related' → logprob: -19.62502098083496

Token 424: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -0.0001617035741219297
    2. '.backward' → logprob: -9.250162124633789
    3. '_forward' → logprob: -9.750162124633789
    4. '_back' → logprob: -12.750162124633789
    5. 'Backward' → logprob: -12.750162124633789
    6. '_connected' → logprob: -14.750162124633789
    7. '_stop' → logprob: -15.000162124633789
    8. 's' → logprob: -15.250162124633789
    9. '._' → logprob: -15.250162124633789
    10. '_backup' → logprob: -16.87516212463379

Token 425: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13352403044700623
    2. '<|end|>' → logprob: -2.133523941040039
    3. 'return' → logprob: -5.258523941040039
    4. ' return' → logprob: -7.508523941040039
    5. '
' → logprob: -7.883523941040039
    6. '<|end|>' → logprob: -8.633523941040039
    7. '	return' → logprob: -9.758523941040039
    8. '   ' → logprob: -10.258523941040039
    9. ')return' → logprob: -10.383523941040039
    10. '	' → logprob: -10.883523941040039

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01420652586966753
    2. 'return' → logprob: -4.764206409454346
    3. '<|end|>' → logprob: -5.514206409454346
    4. ' return' → logprob: -6.764206409454346
    5. '	return' → logprob: -9.264206886291504
    6. '
' → logprob: -9.264206886291504
    7. '	' → logprob: -9.389206886291504
    8. '   ' → logprob: -9.889206886291504
    9. ')' → logprob: -11.389206886291504
    10. ')return' → logprob: -11.764206886291504

Token 427: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20514923334121704
    2. '       ' → logprob: -1.7051491737365723
    3. ' return' → logprob: -5.830149173736572
    4. '   ' → logprob: -7.455149173736572
    5. '	return' → logprob: -9.08014965057373
    6. '
' → logprob: -9.45514965057373
    7. '           ' → logprob: -11.83014965057373
    8. '	' → logprob: -12.70514965057373
    9. ')return' → logprob: -13.45514965057373
    10. 'eturn' → logprob: -13.70514965057373

Token 428: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.02324547804892063
    2. ' path' → logprob: -3.7732455730438232
    3. '(path' → logprob: -17.398244857788086
    4. ' ' → logprob: -17.523244857788086
    5. '[path' → logprob: -17.523244857788086
    6. '	path' → logprob: -19.148244857788086
    7. 'Path' → logprob: -19.273244857788086
    8. '[]' → logprob: -19.398244857788086
    9. '   ' → logprob: -19.398244857788086
    10. '[' → logprob: -19.898244857788086

Token 429: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44346511363983154
    2. '<|end|>' → logprob: -1.5684651136398315
    3. '   ' → logprob: -1.9434651136398315
    4. '<|end|>' → logprob: -5.443465232849121
    5. 'def' → logprob: -6.818465232849121
    6. '    
' → logprob: -7.943465232849121
    7. 'class' → logprob: -8.068465232849121
    8. '

' → logprob: -8.568465232849121
    9. '```' → logprob: -9.193465232849121
    10. '  
' → logprob: -10.193465232849121

Token 430: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4316587746143341
    2. '<|end|>' → logprob: -1.1816587448120117
    3. 'class' → logprob: -4.181658744812012
    4. '   ' → logprob: -4.181658744812012
    5. '<|end|>' → logprob: -4.806658744812012
    6. ' def' → logprob: -5.931658744812012
    7. '
' → logprob: -7.306658744812012
    8. '#' → logprob: -7.431658744812012
    9. '```' → logprob: -7.806658744812012
    10. '[' → logprob: -8.806658744812012

Token 431: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02067793533205986
    2. '   ' → logprob: -3.8956780433654785
    3. 'class' → logprob: -9.64567756652832
    4. ' def' → logprob: -10.27067756652832
    5. '<|end|>' → logprob: -11.27067756652832
    6. '	def' → logprob: -11.89567756652832
    7. '
' → logprob: -12.14567756652832
    8. '#' → logprob: -12.52067756652832
    9. '<|end|>' → logprob: -13.02067756652832
    10. 'from' → logprob: -13.27067756652832

Token 432: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.349998414516449
    2. ' shortest' → logprob: -1.2249984741210938
    3. 'path' → logprob: -6.724998474121094
    4. ' path' → logprob: -9.099998474121094
    5. ' short' → logprob: -9.724998474121094
    6. 'sub' → logprob: -10.224998474121094
    7. 'find' → logprob: -10.599998474121094
    8. 'segment' → logprob: -11.224998474121094
    9. 'shortcut' → logprob: -11.599998474121094
    10. 'def' → logprob: -11.599998474121094

Token 433: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.00011915886716451496
    2. '_' → logprob: -9.12511920928955
    3. '_route' → logprob: -12.87511920928955
    4. '_p' → logprob: -13.25011920928955
    5. '_direction' → logprob: -14.12511920928955
    6. ' _' → logprob: -14.12511920928955
    7. '_line' → logprob: -14.37511920928955
    8. '_distance' → logprob: -14.50011920928955
    9. '_segment' → logprob: -14.75011920928955
    10. '_forward' → logprob: -15.00011920928955

Token 434: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. 'self' → logprob: -17.00000762939453
    4. '   ' → logprob: -18.00000762939453
    5. ' (' → logprob: -18.25000762939453
    6. '(s' → logprob: -18.62500762939453
    7. '(
' → logprob: -20.00000762939453
    8. '(sel' → logprob: -20.50000762939453
    9. ' ' → logprob: -20.75000762939453
    10. '       ' → logprob: -21.12500762939453

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043448375072330236
    2. 'self' → logprob: -7.875434398651123
    3. '(self' → logprob: -10.000434875488281
    4. ' ,' → logprob: -12.125434875488281
    5. ',self' → logprob: -13.625434875488281
    6. ')' → logprob: -13.875434875488281
    7. ' self' → logprob: -14.000434875488281
    8. ',
' → logprob: -15.750434875488281
    9. '   ' → logprob: -16.00043487548828
    10. '       ' → logprob: -16.12543487548828

Token 436: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04308152198791504
    2. ' self' → logprob: -3.793081521987915
    3. 'start' → logprob: -4.043081283569336
    4. ' start' → logprob: -6.168081283569336
    5. '   ' → logprob: -13.918081283569336
    6. '       ' → logprob: -14.293081283569336
    7. ' ' → logprob: -15.293081283569336
    8. '(self' → logprob: -16.543081283569336
    9. '	self' → logprob: -17.543081283569336
    10. 'stop' → logprob: -17.793081283569336

Token 437: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.438573680294212e-06
    2. ' ,' → logprob: -12.250005722045898
    3. ':' → logprob: -15.125005722045898
    4. 'self' → logprob: -15.875005722045898
    5. ',start' → logprob: -16.0000057220459
    6. ',self' → logprob: -16.1250057220459
    7. '   ' → logprob: -17.8750057220459
    8. ',
' → logprob: -18.6250057220459
    9. ' self' → logprob: -19.1250057220459
    10. ':,' → logprob: -19.2500057220459

Token 438: ' Bus' (ID: 21332)
  Prédit: ' Bus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bus' → logprob: -0.3137205243110657
    2. 'Bus' → logprob: -1.313720464706421
    3. 'self' → logprob: -8.063720703125
    4. ' self' → logprob: -9.063720703125
    5. ' bus' → logprob: -11.813720703125
    6. '_bus' → logprob: -11.938720703125
    7. ' ' → logprob: -12.313720703125
    8. 'Stop' → logprob: -12.438720703125
    9. '.Bus' → logprob: -13.563720703125
    10. 'bus' → logprob: -13.813720703125

Token 439: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.7432603272027336e-06
    2. ' Stop' → logprob: -14.500001907348633
    3. 'Stops' → logprob: -15.375001907348633
    4. 'stop' → logprob: -15.500001907348633
    5. '_Stop' → logprob: -15.500001907348633
    6. 'St' → logprob: -16.250001907348633
    7. '   ' → logprob: -16.500001907348633
    8. 'Sto' → logprob: -16.750001907348633
    9. 'S' → logprob: -16.875001907348633
    10. 'Step' → logprob: -16.875001907348633

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.024604277219623e-05
    2. ' ,' → logprob: -10.125040054321289
    3. ',end' → logprob: -16.12504005432129
    4. ',start' → logprob: -18.00004005432129
    5. ',
' → logprob: -18.50004005432129
    6. '   ' → logprob: -19.62504005432129
    7. '`,' → logprob: -20.25004005432129
    8. '_,' → logprob: -20.37504005432129
    9. '‌,' → logprob: -20.50004005432129
    10. '       ' → logprob: -20.62504005432129

Token 441: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.31326204538345337
    2. 'end' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.688262939453125
    4. '   ' → logprob: -16.688262939453125
    5. 'stop' → logprob: -16.813262939453125
    6. '       ' → logprob: -17.813262939453125
    7. '	end' → logprob: -17.938262939453125
    8. ' stop' → logprob: -18.063262939453125
    9. '[end' → logprob: -18.188262939453125
    10. '    ' → logprob: -18.563262939453125

Token 442: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0074846455827355385
    2. '):
' → logprob: -5.382484436035156
    3. '):' → logprob: -5.882484436035156
    4. ' :' → logprob: -10.507484436035156
    5. '):
' → logprob: -10.757484436035156
    6. ':
' → logprob: -11.757484436035156
    7. '   ' → logprob: -12.257484436035156
    8. '):

' → logprob: -12.382484436035156
    9. ',' → logprob: -13.382484436035156
    10. ' ):' → logprob: -13.382484436035156

Token 443: ' Bus' (ID: 21332)
  Prédit: 'Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -0.02324850670993328
    2. ' Bus' → logprob: -3.7732484340667725
    3. '   ' → logprob: -14.023248672485352
    4. ')' → logprob: -14.398248672485352
    5. '.Bus' → logprob: -14.523248672485352
    6. ' ' → logprob: -15.023248672485352
    7. ' bus' → logprob: -15.523248672485352
    8. 'bus' → logprob: -15.523248672485352
    9. '_bus' → logprob: -16.02324867248535
    10. 'BUS' → logprob: -16.77324867248535

Token 444: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.0280383548888494e-06
    2. 'stop' → logprob: -14.875000953674316
    3. ' Stop' → logprob: -15.500000953674316
    4. 'Stops' → logprob: -15.875000953674316
    5. 'S' → logprob: -16.000001907348633
    6. '_Stop' → logprob: -16.875001907348633
    7. 'St' → logprob: -17.500001907348633
    8. 'Sto' → logprob: -17.500001907348633
    9. '_stop' → logprob: -18.375001907348633
    10. 'Step' → logprob: -18.625001907348633

Token 445: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02979978546500206
    2. '):' → logprob: -3.529799699783325
    3. '):
' → logprob: -10.279799461364746
    4. '       ' → logprob: -11.904799461364746
    5. '   ' → logprob: -12.154799461364746
    6. ':' → logprob: -13.654799461364746
    7. '):

' → logprob: -14.404799461364746
    8. ')' → logprob: -14.654799461364746
    9. ':
' → logprob: -15.029799461364746
    10. ' ):
' → logprob: -15.154799461364746

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014966767048463225
    2. '   ' → logprob: -9.250149726867676
    3. ' if' → logprob: -10.625149726867676
    4. '        ' → logprob: -11.625149726867676
    5. '    ' → logprob: -12.500149726867676
    6. '        
' → logprob: -12.625149726867676
    7. '           ' → logprob: -12.750149726867676
    8. '```' → logprob: -12.875149726867676
    9. 'if' → logprob: -13.625149726867676
    10. '      ' → logprob: -13.750149726867676

Token 447: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22941306233406067
    2. 'try' → logprob: -2.1044130325317383
    3. '       ' → logprob: -2.9794130325317383
    4. '#' (adapté à ' #') → logprob: -3.9794130325317383
    5. 'forward' → logprob: -5.104413032531738
    6. 'path' → logprob: -5.354413032531738
    7. 'for' → logprob: -6.104413032531738
    8. ' if' → logprob: -8.729413032531738
    9. 'paths' → logprob: -9.104413032531738
    10. '```' → logprob: -9.354413032531738

Token 448: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3409382402896881
    2. 'try' → logprob: -1.7159382104873657
    3. '#' → logprob: -2.5909383296966553
    4. 'path' → logprob: -3.7159383296966553
    5. 'forward' → logprob: -5.965938091278076
    6. 'for' → logprob: -5.965938091278076
    7. 'visited' → logprob: -6.340938091278076
    8. '       ' → logprob: -7.090938091278076
    9. 'paths' → logprob: -7.840938091278076
    10. 'def' → logprob: -7.840938091278076

Token 449: ' direction' (ID: 9262)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.553683340549469
    2. ' if' → logprob: -1.0536832809448242
    3. '       ' → logprob: -3.553683280944824
    4. 'try' → logprob: -3.928683280944824
    5. ' try' → logprob: -4.428683280944824
    6. ' forward' → logprob: -5.053683280944824
    7. 'forward' → logprob: -5.553683280944824
    8. 'for' → logprob: -5.928683280944824
    9. ' for' → logprob: -7.053683280944824
    10. ' current' → logprob: -7.428683280944824

Token 450: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03513382375240326
    2. 'if' → logprob: -4.2851338386535645
    3. ' if' → logprob: -4.2851338386535645
    4. '
' → logprob: -5.1601338386535645
    5. ':' → logprob: -7.9101338386535645
    6. ',' → logprob: -8.160133361816406
    7. '        
' → logprob: -8.285133361816406
    8. '#' → logprob: -9.410133361816406
    9. 'forward' → logprob: -9.910133361816406
    10. 'try' → logprob: -10.160133361816406

Token 451: ' forward' (ID: 6687)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.7729724645614624
    2. 'if' → logprob: -0.8979724645614624
    3. '       ' → logprob: -2.147972583770752
    4. 'current' → logprob: -5.397972583770752
    5. 'forward' → logprob: -5.522972583770752
    6. 'for' → logprob: -6.272972583770752
    7. ' if' → logprob: -6.647972583770752
    8. '```' → logprob: -7.022972583770752
    9. ' try' → logprob: -7.147972583770752
    10. 'index' → logprob: -8.397972106933594

Token 452: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0553678423166275
    2. 'if' → logprob: -3.180367946624756
    3. '
' → logprob: -5.555367946624756
    4. 'try' → logprob: -5.680367946624756
    5. ' if' → logprob: -6.680367946624756
    6. 'for' → logprob: -6.805367946624756
    7. 'path' → logprob: -7.555367946624756
    8. 'current' → logprob: -7.680367946624756
    9. 'forward' → logprob: -8.055367469787598
    10. ',' → logprob: -8.180367469787598

Token 453: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10955565422773361
    2. 'start' → logprob: -2.359555721282959
    3. 'end' → logprob: -4.984555721282959
    4. ' self' → logprob: -6.484555721282959
    5. 'stop' → logprob: -7.984555721282959
    6. ' start' → logprob: -8.7345552444458
    7. 'st' → logprob: -8.7345552444458
    8. '(self' → logprob: -8.9845552444458
    9. '(start' → logprob: -10.6095552444458
    10. '
' → logprob: -10.7345552444458

Token 454: ' <' (ID: 464)
  Prédit: '.number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.2856290936470032
    2. ' in' → logprob: -1.7856290340423584
    3. '==' → logprob: -3.5356290340423584
    4. 'in' → logprob: -4.1606292724609375
    5. 'number' → logprob: -4.4106292724609375
    6. ' ==' → logprob: -4.4106292724609375
    7. '.index' → logprob: -4.9106292724609375
    8. '.position' → logprob: -7.2856292724609375
    9. ' is' → logprob: -7.4106292724609375
    10. ' !=' → logprob: -7.4106292724609375

Token 455: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.06686253845691681
    2. 'self' → logprob: -3.6918625831604004
    3. ' end' → logprob: -3.9418625831604004
    4. 'st' → logprob: -3.9418625831604004
    5. ' stops' → logprob: -7.8168625831604
    6. ' self' → logprob: -8.191862106323242
    7. 'stop' → logprob: -8.691862106323242
    8. '=end' → logprob: -10.441862106323242
    9. '   ' → logprob: -11.441862106323242
    10. 'start' → logprob: -11.691862106323242

Token 456: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38166698813438416
    2. ' and' → logprob: -1.3816670179367065
    3. ' if' → logprob: -3.131666898727417
    4. ':
' → logprob: -4.881667137145996
    5. ':' → logprob: -5.381667137145996
    6. ',' → logprob: -5.631667137145996
    7. ' or' → logprob: -5.881667137145996
    8. 'if' → logprob: -6.256667137145996
    9. 'and' → logprob: -7.131667137145996
    10. '
' → logprob: -7.631667137145996

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001517834491096437
    2. ' if' → logprob: -7.3765177726745605
    3. ',' → logprob: -8.001518249511719
    4. ' or' → logprob: -8.751518249511719
    5. ' and' → logprob: -9.001518249511719
    6. '
' → logprob: -9.376518249511719
    7. '        
' → logprob: -10.251518249511719
    8. '<|end|>' → logprob: -10.626518249511719
    9. '[' → logprob: -10.751518249511719
    10. '      ' → logprob: -11.251518249511719

Token 458: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5368039011955261
    2. 'if' → logprob: -0.9118039011955261
    3. 'start' → logprob: -4.411803722381592
    4. ' if' → logprob: -7.036803722381592
    5. 'index' → logprob: -8.41180419921875
    6. 'stop' → logprob: -9.53680419921875
    7. 'idx' → logprob: -9.78680419921875
    8. 'try' → logprob: -9.91180419921875
    9. 'forward' → logprob: -10.16180419921875
    10. 'path' → logprob: -10.41180419921875

Token 459: ' backward' (ID: 58986)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09039991348981857
    2. '       ' → logprob: -3.340399980545044
    3. 'start' → logprob: -3.340399980545044
    4. 'try' → logprob: -5.090399742126465
    5. 'index' → logprob: -5.340399742126465
    6. ' if' → logprob: -5.590399742126465
    7. 'idx' → logprob: -8.090399742126465
    8. 'forward' → logprob: -8.590399742126465
    9. '```' → logprob: -8.965399742126465
    10. ' start' → logprob: -9.840399742126465

Token 460: ' otherwise' (ID: 10275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2426600307226181
    2. ' if' → logprob: -2.2426600456237793
    3. 'if' → logprob: -2.3676600456237793
    4. '
' → logprob: -4.242660045623779
    5. '        
' → logprob: -7.367660045623779
    6. ',' → logprob: -8.117659568786621
    7. ':' → logprob: -9.867659568786621
    8. '        ' → logprob: -9.992659568786621
    9. ':
' → logprob: -11.117659568786621
    10. '           ' → logprob: -11.242659568786621

Token 461: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014311899431049824
    2. '
' → logprob: -6.876430988311768
    3. ' if' → logprob: -8.751431465148926
    4. ',' → logprob: -9.501431465148926
    5. 'if' → logprob: -9.626431465148926
    6. '        
' → logprob: -10.126431465148926
    7. '```' → logprob: -10.376431465148926
    8. ':' → logprob: -11.626431465148926
    9. '[' → logprob: -12.501431465148926
    10. '        ' → logprob: -13.626431465148926

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014433091506361961
    2. '   ' → logprob: -4.389432907104492
    3. '
' → logprob: -6.639432907104492
    4. '        
' → logprob: -8.389432907104492
    5. '    
' → logprob: -8.639432907104492
    6. '```' → logprob: -10.014432907104492
    7. '	' → logprob: -10.264432907104492
    8. '[' → logprob: -10.889432907104492
    9. ' if' → logprob: -10.889432907104492
    10. '    ' → logprob: -11.514432907104492

Token 463: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4752967357635498
    2. '       ' → logprob: -0.9752967357635498
    3. ' if' → logprob: -6.975296974182129
    4. 'start' → logprob: -8.725296974182129
    5. 'return' → logprob: -9.600296974182129
    6. '```' → logprob: -10.850296974182129
    7. 'direction' → logprob: -10.975296974182129
    8. '   ' → logprob: -12.350296974182129
    9. 'index' → logprob: -12.975296974182129
    10. 'd' → logprob: -13.225296974182129

Token 464: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3287227749824524
    2. 'start' → logprob: -1.3287227153778076
    3. ' self' → logprob: -4.578722953796387
    4. ' start' → logprob: -5.328722953796387
    5. 'stop' → logprob: -9.828722953796387
    6. '(self' → logprob: -10.078722953796387
    7. 'st' → logprob: -10.078722953796387
    8. '   ' → logprob: -10.453722953796387
    9. '(start' → logprob: -11.578722953796387
    10. 'not' → logprob: -12.328722953796387

Token 465: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.004864649847149849
    2. ' in' → logprob: -6.254864692687988
    3. '==' → logprob: -6.879864692687988
    4. ' ==' → logprob: -7.004864692687988
    5. '.' → logprob: -7.879864692687988
    6. 'number' → logprob: -8.254864692687988
    7. '.n' → logprob: -8.379864692687988
    8. ' is' → logprob: -10.004864692687988
    9. '.position' → logprob: -11.254864692687988
    10. '.index' → logprob: -11.629864692687988

Token 466: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.318513423204422
    2. ' <' → logprob: -1.5685133934020996
    3. '<=' → logprob: -3.3185133934020996
    4. ' <=' → logprob: -3.5685133934020996
    5. '<int' → logprob: -12.568513870239258
    6. '<number' → logprob: -12.693513870239258
    7. '<num' → logprob: -12.943513870239258
    8. ' ' → logprob: -14.318513870239258
    9. '<len' → logprob: -14.693513870239258
    10. '<data' → logprob: -14.693513870239258

Token 467: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.02975129522383213
    2. ' end' → logprob: -3.5297513008117676
    3. '   ' → logprob: -14.65475082397461
    4. '       ' → logprob: -15.27975082397461
    5. ' ' → logprob: -16.90475082397461
    6. '=end' → logprob: -16.90475082397461
    7. '	end' → logprob: -17.27975082397461
    8. '(end' → logprob: -17.27975082397461
    9. '
' → logprob: -17.90475082397461
    10. '           ' → logprob: -18.02975082397461

Token 468: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -1.652451464906335e-05
    2. '.' → logprob: -11.375016212463379
    3. 'number' → logprob: -12.750016212463379
    4. ' .' → logprob: -13.250016212463379
    5. '   ' → logprob: -16.000017166137695
    6. '	number' → logprob: -16.750017166137695
    7. '<number' → logprob: -17.750017166137695
    8. '```' → logprob: -18.375017166137695
    9. '[number' → logprob: -18.500017166137695
    10. ' number' → logprob: -18.750017166137695

Token 469: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47425857186317444
    2. ':
' → logprob: -0.974258542060852
    3. '       ' → logprob: -9.099258422851562
    4. '           ' → logprob: -10.349258422851562
    5. '):
' → logprob: -11.099258422851562
    6. ':
' → logprob: -11.599258422851562
    7. ':return' → logprob: -12.224258422851562
    8. ':

' → logprob: -13.349258422851562
    9. ' :
' → logprob: -13.474258422851562
    10. '):' → logprob: -13.474258422851562

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01568930223584175
    2. '       ' → logprob: -5.390689373016357
    3. ':
' → logprob: -5.390689373016357
    4. 'return' → logprob: -5.515689373016357
    5. ' return' → logprob: -6.390689373016357
    6. '
' → logprob: -7.515689373016357
    7. ':' → logprob: -8.7656888961792
    8. ':return' → logprob: -11.6406888961792
    9. '```' → logprob: -12.1406888961792
    10. '   ' → logprob: -12.3906888961792

Token 471: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6591606140136719
    2. 'return' (adapté à ' return') → logprob: -1.1591606140136719
    3. '           ' → logprob: -1.7841606140136719
    4. '       ' → logprob: -7.284160614013672
    5. '
' → logprob: -8.284160614013672
    6. '               ' → logprob: -9.784160614013672
    7. '   ' → logprob: -11.784160614013672
    8. '            
' → logprob: -12.409160614013672
    9. '	return' → logprob: -12.784160614013672
    10. ' 
' → logprob: -13.034160614013672

Token 472: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602296084165573
    2. ' self' → logprob: -1.9102295637130737
    3. '       ' → logprob: -12.785229682922363
    4. '   ' → logprob: -14.035229682922363
    5. '           ' → logprob: -14.285229682922363
    6. '[self' → logprob: -14.285229682922363
    7. '(self' → logprob: -15.035229682922363
    8. '	self' → logprob: -15.660229682922363
    9. ' ' → logprob: -16.785228729248047
    10. ' ' → logprob: -17.660228729248047

Token 473: '.path' (ID: 8153)
  Prédit: '.path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.path' → logprob: -0.0002557369298301637
    2. '.' → logprob: -8.375255584716797
    3. ' .' → logprob: -10.750255584716797
    4. '.line' → logprob: -12.625255584716797
    5. '.short' → logprob: -17.125255584716797
    6. '.method' → logprob: -17.250255584716797
    7. 'path' → logprob: -17.500255584716797
    8. ' ' → logprob: -17.625255584716797
    9. '`.' → logprob: -17.625255584716797
    10. '.paths' → logprob: -17.625255584716797

Token 474: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -1.7432603272027336e-06
    2. '_backward' → logprob: -13.375001907348633
    3. '```' → logprob: -15.875001907348633
    4. '_for' → logprob: -17.375001907348633
    5. '_' → logprob: -18.000001907348633
    6. '"_' → logprob: -18.125001907348633
    7. '`' → logprob: -18.500001907348633
    8. ')_' → logprob: -18.500001907348633
    9. ''_' → logprob: -18.625001907348633
    10. 'forward' → logprob: -19.500001907348633

Token 475: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -2.248469718324486e-05
    2. '(' → logprob: -10.750022888183594
    3. '(end' → logprob: -15.000022888183594
    4. ' (' → logprob: -15.250022888183594
    5. '(stop' → logprob: -15.500022888183594
    6. '(
' → logprob: -15.875022888183594
    7. '(Start' → logprob: -18.000022888183594
    8. 'start' → logprob: -18.250022888183594
    9. '(self' → logprob: -18.500022888183594
    10. ',start' → logprob: -18.875022888183594

Token 476: ',end' (ID: 93014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015079588629305363
    2. ',end' → logprob: -6.501507759094238
    3. ' ,' → logprob: -12.126507759094238
    4. 'end' → logprob: -15.626507759094238
    5. ',
' → logprob: -16.876508712768555
    6. '[end' → logprob: -17.126508712768555
    7. ' end' → logprob: -17.876508712768555
    8. '(end' → logprob: -18.376508712768555
    9. ',start' → logprob: -18.626508712768555
    10. '=end' → logprob: -19.251508712768555

Token 477: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015943869948387146
    2. ')
' → logprob: -8.75015926361084
    3. ' )' → logprob: -14.12515926361084
    4. '       ' → logprob: -15.87515926361084
    5. ')
' → logprob: -17.000160217285156
    6. ')`' → logprob: -18.000160217285156
    7. '   ' → logprob: -18.125160217285156
    8. ')

' → logprob: -19.250160217285156
    9. '))' → logprob: -19.500160217285156
    10. ')return' → logprob: -20.000160217285156

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007335089612752199
    2. 'else' → logprob: -7.500733375549316
    3. ' else' → logprob: -8.625733375549316
    4. '
' → logprob: -15.000733375549316
    5. 'return' → logprob: -15.250733375549316
    6. '           ' → logprob: -15.625733375549316
    7. '	' → logprob: -16.000734329223633
    8. '   ' → logprob: -16.125734329223633
    9. '```' → logprob: -16.250734329223633
    10. '​' → logprob: -16.500734329223633

Token 479: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1800851821899414
    2. 'else' (adapté à ' else') → logprob: -1.9300851821899414
    3. ' else' → logprob: -3.9300851821899414
    4. '
' → logprob: -11.305085182189941
    5. 'return' → logprob: -11.555085182189941
    6. '   ' → logprob: -15.305085182189941
    7. '	else' → logprob: -15.430085182189941
    8. '```' → logprob: -15.555085182189941
    9. '           ' → logprob: -15.805085182189941
    10. 'elif' → logprob: -15.930085182189941

Token 480: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1438976526260376
    2. '           ' → logprob: -2.643897533416748
    3. ':' → logprob: -2.768897533416748
    4. '       ' → logprob: -9.268898010253906
    5. ':return' → logprob: -9.643898010253906
    6. 'return' → logprob: -10.768898010253906
    7. '   ' → logprob: -12.018898010253906
    8. '          ' → logprob: -12.393898010253906
    9. ' return' → logprob: -12.643898010253906
    10. ' :
' → logprob: -12.643898010253906

Token 481: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2927941381931305
    2. '           ' → logprob: -1.792794108390808
    3. '       ' → logprob: -2.5427942276000977
    4. 'return' → logprob: -4.792794227600098
    5. '   ' → logprob: -7.917794227600098
    6. '	return' → logprob: -11.042794227600098
    7. '               ' → logprob: -13.292794227600098
    8. '    ' → logprob: -13.292794227600098
    9. ' ' → logprob: -13.417794227600098
    10. '
' → logprob: -13.542794227600098

Token 482: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10039978474378586
    2. 'return' (adapté à ' return') → logprob: -2.3503997325897217
    3. '       ' → logprob: -8.6003999710083
    4. '           ' → logprob: -12.8503999710083
    5. '	return' → logprob: -12.8503999710083
    6. '   ' → logprob: -13.1003999710083
    7. '
' → logprob: -14.2253999710083
    8. ' ' → logprob: -15.2253999710083
    9. '        ' → logprob: -15.7253999710083
    10. ' ' → logprob: -15.7253999710083

Token 483: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06196768581867218
    2. ' self' → logprob: -2.811967611312866
    3. '	self' → logprob: -17.686967849731445
    4. '(self' → logprob: -18.061967849731445
    5. ' ' → logprob: -18.436967849731445
    6. '   ' → logprob: -18.811967849731445
    7. ' ' → logprob: -19.061967849731445
    8. '[self' → logprob: -19.561967849731445
    9. '=self' → logprob: -20.561967849731445
    10. '       ' → logprob: -20.561967849731445

Token 484: '.path' (ID: 8153)
  Prédit: '.path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.path' → logprob: -9.610702363715973e-06
    2. '.' → logprob: -12.250009536743164
    3. 'path' → logprob: -12.250009536743164
    4. ' .' → logprob: -17.625009536743164
    5. ' path' → logprob: -20.125009536743164
    6. '	path' → logprob: -20.625009536743164
    7. '.p' → logprob: -20.875009536743164
    8. '"path' → logprob: -22.000009536743164
    9. '\.' → logprob: -22.250009536743164
    10. '.line' → logprob: -22.250009536743164

Token 485: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -3.292907877039397e-06
    2. '_forward' → logprob: -13.00000286102295
    3. '.backward' → logprob: -14.25000286102295
    4. '_back' → logprob: -15.00000286102295
    5. 'Backward' → logprob: -17.125003814697266
    6. ' backward' → logprob: -18.625003814697266
    7. '__' → logprob: -20.000003814697266
    8. 'back' → logprob: -20.250003814697266
    9. '```' → logprob: -20.625003814697266
    10. '_' → logprob: -21.250003814697266

Token 486: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0003384422743692994
    2. '(' → logprob: -8.000338554382324
    3. ' (' → logprob: -13.375338554382324
    4. '(end' → logprob: -14.500338554382324
    5. '(stop' → logprob: -14.500338554382324
    6. 'start' → logprob: -15.250338554382324
    7. '(
' → logprob: -16.250337600708008
    8. '(st' → logprob: -16.875337600708008
    9. '[start' → logprob: -18.375337600708008
    10. '```' → logprob: -18.625337600708008

Token 487: ',end' (ID: 93014)
  Prédit: ',end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.004084335640072823
    2. ',' → logprob: -5.50408411026001
    3. '(end' → logprob: -12.504084587097168
    4. 'end' → logprob: -13.629084587097168
    5. ' ,' → logprob: -14.254084587097168
    6. ',start' → logprob: -15.754084587097168
    7. ')' → logprob: -16.37908363342285
    8. '[end' → logprob: -16.37908363342285
    9. ':end' → logprob: -17.25408363342285
    10. ' end' → logprob: -18.37908363342285

Token 488: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.250000953674316
    3. '       ' → logprob: -16.25
    4. ' )' → logprob: -16.75
    5. '<|end|>' → logprob: -17.625
    6. '   ' → logprob: -17.875
    7. '}' → logprob: -18.125
    8. ')return' → logprob: -18.25
    9. '))' → logprob: -18.625
    10. ')#' → logprob: -19.25

Token 489: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7892062067985535
    2. '<|end|>' → logprob: -0.9142062067985535
    3. '#' → logprob: -2.4142062664031982
    4. 'def' → logprob: -3.4142062664031982
    5. 'stop' → logprob: -5.039206027984619
    6. 'bus' → logprob: -5.414206027984619
    7. '<|end|>' → logprob: -5.414206027984619
    8. '```' → logprob: -5.664206027984619
    9. 'line' → logprob: -6.664206027984619
    10. ')' → logprob: -8.039206504821777

Token 490: ' Bus' (ID: 21332)
  Prédit: 'Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -1.0903643369674683
    2. 'Train' → logprob: -1.7153643369674683
    3. 'Route' → logprob: -2.465364456176758
    4. 'Branch' → logprob: -3.340364456176758
    5. 'Line' → logprob: -3.465364456176758
    6. 'Multi' → logprob: -3.465364456176758
    7. 'Transport' → logprob: -3.465364456176758
    8. 'Sub' → logprob: -3.715364456176758
    9. 'Transfer' → logprob: -3.840364456176758
    10. ' Bus' → logprob: -3.965364456176758

Token 491: 'Network' (ID: 14022)
  Prédit: 'Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -0.16423693299293518
    2. 'Line' → logprob: -2.1642370223999023
    3. 'Stop' → logprob: -3.6642370223999023
    4. 'Network' → logprob: -4.789237022399902
    5. 'Train' → logprob: -7.539237022399902
    6. 'Router' → logprob: -7.914237022399902
    7. 'Trip' → logprob: -8.164237022399902
    8. 'Station' → logprob: -8.414237022399902
    9. 'Chain' → logprob: -8.789237022399902
    10. 'Terminal' → logprob: -9.039237022399902

Token 492: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002845768758561462
    2. ':
' → logprob: -8.250284194946289
    3. '():' → logprob: -11.875284194946289
    4. '(object' → logprob: -12.000284194946289
    5. '(' → logprob: -12.625284194946289
    6. '):' → logprob: -13.375284194946289
    7. ' :' → logprob: -13.500284194946289
    8. ':def' → logprob: -13.500284194946289
    9. '   ' → logprob: -14.625284194946289
    10. 'def' → logprob: -14.750284194946289

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0206720617134124e-05
    2. 'def' → logprob: -12.50001049041748
    3. 'class' → logprob: -12.75001049041748
    4. ' def' → logprob: -13.37501049041748
    5. '```' → logprob: -14.50001049041748
    6. ':' → logprob: -14.62501049041748
    7. '):
' → logprob: -14.75001049041748
    8. ':
' → logprob: -15.25001049041748
    9. '(' → logprob: -16.000009536743164
    10. 'import' → logprob: -17.125009536743164

Token 494: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4411259591579437
    2. 'def' (adapté à ' def') → logprob: -1.1911259889602661
    3. '   ' → logprob: -2.9411258697509766
    4. ' ' → logprob: -13.941125869750977
    5. '	def' → logprob: -14.441125869750977
    6. '    ' → logprob: -14.566125869750977
    7. 'class' → logprob: -14.691125869750977
    8. '__' → logprob: -15.066125869750977
    9. '```' → logprob: -15.316125869750977
    10. '  ' → logprob: -15.691125869750977

Token 495: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02090468257665634
    2. '__' → logprob: -3.895904779434204
    3. 'def' → logprob: -8.645904541015625
    4. ' def' → logprob: -9.145904541015625
    5. 'init' → logprob: -9.895904541015625
    6. '_init' → logprob: -11.895904541015625
    7. ' ' → logprob: -12.145904541015625
    8. '___' → logprob: -12.270904541015625
    9. '```' → logprob: -12.270904541015625
    10. '   ' → logprob: -12.395904541015625

Token 496: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3306015716807451e-05
    2. 'it' → logprob: -11.75001335144043
    3. ' init' → logprob: -13.62501335144043
    4. 'def' → logprob: -13.87501335144043
    5. '```' → logprob: -14.37501335144043
    6. '__' → logprob: -14.50001335144043
    7. 'class' → logprob: -14.62501335144043
    8. 'ini' → logprob: -14.75001335144043
    9. '   ' → logprob: -15.37501335144043
    10. 'int' → logprob: -15.50001335144043

Token 497: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00015383612480945885
    2. '(self' → logprob: -8.875153541564941
    3. '__' → logprob: -11.750153541564941
    4. '__(
' → logprob: -12.250153541564941
    5. '_(' → logprob: -13.875153541564941
    6. '(' → logprob: -15.875153541564941
    7. 'self' → logprob: -16.625154495239258
    8. '__((' → logprob: -17.500154495239258
    9. '<>(' → logprob: -18.375154495239258
    10. ' (' → logprob: -18.375154495239258

Token 498: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.9292415749514475e-05
    2. ' self' → logprob: -10.500039100646973
    3. '):
' → logprob: -12.250039100646973
    4. '
' → logprob: -12.750039100646973
    5. ')' → logprob: -13.125039100646973
    6. '   ' → logprob: -13.875039100646973
    7. ',' → logprob: -14.625039100646973
    8. '       ' → logprob: -15.000039100646973
    9. '(self' → logprob: -15.750039100646973
    10. ')
' → logprob: -17.12504005432129

Token 499: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005811501177959144
    2. 'self' → logprob: -7.50058126449585
    3. ',self' → logprob: -11.500580787658691
    4. '(self' → logprob: -12.000580787658691
    5. '__,' → logprob: -12.125580787658691
    6. ' ,' → logprob: -12.625580787658691
    7. ',
' → logprob: -14.000580787658691
    8. ')' → logprob: -15.125580787658691
    9. '   ' → logprob: -15.125580787658691
    10. '__(' → logprob: -15.250580787658691

Token 500: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015598179015796632
    2. ' self' → logprob: -9.00015640258789
    3. '       ' → logprob: -10.37515640258789
    4. '   ' → logprob: -13.75015640258789
    5. '
' → logprob: -16.37515640258789
    6. '	self' → logprob: -16.62515640258789
    7. '```' → logprob: -16.87515640258789
    8. '(self' → logprob: -17.62515640258789
    9. '):
' → logprob: -18.12515640258789
    10. ' ' → logprob: -18.62515640258789

Token 501: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043337367475032806
    2. ' self' → logprob: -3.793337345123291
    3. '       ' → logprob: -3.918337345123291
    4. '	self' → logprob: -11.29333782196045
    5. '   ' → logprob: -13.41833782196045
    6. '(self' → logprob: -14.16833782196045
    7. ' ' → logprob: -14.29333782196045
    8. 'class' → logprob: -14.29333782196045
    9. '	' → logprob: -15.04333782196045
    10. '0' → logprob: -15.29333782196045

Token 502: ' Create' (ID: 6585)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020691948011517525
    2. ' self' → logprob: -3.8956918716430664
    3. '       ' → logprob: -9.020691871643066
    4. 'bus' → logprob: -11.520691871643066
    5. '   ' → logprob: -12.270691871643066
    6. 'from' → logprob: -12.645691871643066
    7. 'super' → logprob: -13.645691871643066
    8. ' bus' → logprob: -13.895691871643066
    9. 'Initialize' → logprob: -13.895691871643066
    10. 'b' → logprob: -14.020691871643066

Token 503: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07914511859416962
    2. ' self' → logprob: -2.5791451930999756
    3. ' an' → logprob: -9.079145431518555
    4. '[]' → logprob: -10.329145431518555
    5. 'empty' → logprob: -10.579145431518555
    6. ' a' → logprob: -10.704145431518555
    7. '{}' → logprob: -11.329145431518555
    8. ' empty' → logprob: -11.704145431518555
    9. ' stops' → logprob: -12.079145431518555
    10. 'an' → logprob: -12.454145431518555

Token 504: ' ' (ID: 220)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.10398411750793457
    2. ' stops' → logprob: -3.2289841175079346
    3. 'bus' → logprob: -3.4789841175079346
    4. 'self' → logprob: -4.2289838790893555
    5. ' bus' → logprob: -4.7289838790893555
    6. 'Bus' → logprob: -6.1039838790893555
    7. ' self' → logprob: -6.6039838790893555
    8. ' Bus' → logprob: -7.6039838790893555
    9. 'stations' → logprob: -8.353983879089355
    10. 'lines' → logprob: -8.728983879089355

Token 505: '10' (ID: 702)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.04502227157354355
    2. 'bus' → logprob: -3.4200222492218018
    3. 'Bus' → logprob: -4.670022487640381
    4. 'self' → logprob: -7.170022487640381
    5. 'lines' → logprob: -8.170022010803223
    6. ' stops' → logprob: -8.545022010803223
    7. 'stations' → logprob: -8.920022010803223
    8. ' Bus' → logprob: -9.170022010803223
    9. 'stop' → logprob: -9.545022010803223
    10. '```' → logprob: -9.670022010803223

Token 506: ' stops' (ID: 29924)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.9536121487617493
    2. ' bus' → logprob: -1.3286120891571045
    3. ' stops' → logprob: -1.8286120891571045
    4. 'bus' → logprob: -1.9536120891571045
    5. 'Bus' → logprob: -3.4536120891571045
    6. ' Bus' → logprob: -4.328612327575684
    7. '_bus' → logprob: -7.453612327575684
    8. 'self' → logprob: -7.578612327575684
    9. 'class' → logprob: -7.953612327575684
    10. ' buses' → logprob: -8.328612327575684

Token 507: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011423612013459206
    2. 'self' → logprob: -7.126142501831055
    3. ' self' → logprob: -8.251142501831055
    4. ',' → logprob: -10.001142501831055
    5. '
' → logprob: -11.001142501831055
    6. '<|end|>' → logprob: -13.001142501831055
    7. '(self' → logprob: -13.251142501831055
    8. '   ' → logprob: -13.501142501831055
    9. ':' → logprob: -13.876142501831055
    10. '{' → logprob: -14.001142501831055

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001751222531311214
    2. ' self' → logprob: -6.75175142288208
    3. 'self' → logprob: -7.50175142288208
    4. '(self' → logprob: -11.501750946044922
    5. ',' → logprob: -11.751750946044922
    6. '
' → logprob: -12.251750946044922
    7. '        
' → logprob: -13.126750946044922
    8. '   ' → logprob: -14.251750946044922
    9. '<|end|>' → logprob: -14.501750946044922
    10. '[' → logprob: -14.626750946044922

Token 509: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.024394400417804718
    2. ' self' → logprob: -3.7743945121765137
    3. '       ' → logprob: -6.774394512176514
    4. '[self' → logprob: -13.149394035339355
    5. ' stops' → logprob: -13.149394035339355
    6. '[' → logprob: -14.024394035339355
    7. '   ' → logprob: -14.274394035339355
    8. '	self' → logprob: -15.524394035339355
    9. ' [' → logprob: -17.274394989013672
    10. '(self' → logprob: -17.399394989013672

Token 510: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -3.452426608419046e-05
    2. '.bus' → logprob: -10.62503433227539
    3. '.' → logprob: -12.25003433227539
    4. '.s' → logprob: -13.37503433227539
    5. '.all' → logprob: -13.87503433227539
    6. 'st' → logprob: -13.87503433227539
    7. '.stop' → logprob: -14.37503433227539
    8. ' stops' → logprob: -15.00003433227539
    9. '_st' → logprob: -15.12503433227539
    10. '	st' → logprob: -15.50003433227539

Token 511: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -2.939851037808694e-05
    2. 'op' → logprob: -10.750029563903809
    3. 'ps' → logprob: -13.375029563903809
    4. '   ' → logprob: -13.500029563903809
    5. 'eps' → logprob: -14.000029563903809
    6. '_' → logprob: -14.375029563903809
    7. '=' → logprob: -14.500029563903809
    8. '0' → logprob: -14.875029563903809
    9. '```' → logprob: -14.875029563903809
    10. '#' → logprob: -15.000029563903809

Token 512: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519362270832062
    2. ' =' → logprob: -1.5019361972808838
    3. ':' → logprob: -12.126935958862305
    4. '[' → logprob: -13.751935958862305
    5. '=[]' → logprob: -15.501935958862305
    6. '=[' → logprob: -15.501935958862305
    7. ' ' → logprob: -16.626935958862305
    8. ' =[' → logprob: -16.626935958862305
    9. '   ' → logprob: -17.501935958862305
    10. '[:]' → logprob: -17.626935958862305

Token 513: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022289134562015533
    2. '{' → logprob: -4.522289276123047
    3. ' [' → logprob: -4.522289276123047
    4. '[list' → logprob: -8.897289276123047
    5. '[class' → logprob: -10.147289276123047
    6. ' {' → logprob: -10.397289276123047
    7. '[List' → logprob: -10.647289276123047
    8. '[number' → logprob: -11.147289276123047
    9. '[int' → logprob: -11.522289276123047
    10. '[num' → logprob: -11.897289276123047

Token 514: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008498902898281813
    2. ' i' → logprob: -7.375849723815918
    3. 'num' → logprob: -8.750849723815918
    4. 'n' → logprob: -10.375849723815918
    5. 'number' → logprob: -10.375849723815918
    6. '   ' → logprob: -13.750849723815918
    7. 'k' → logprob: -14.625849723815918
    8. ' number' → logprob: -15.000849723815918
    9. ' num' → logprob: -15.500849723815918
    10. '       ' → logprob: -15.625849723815918

Token 515: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3782830137643032e-05
    2. ' :' → logprob: -11.75001335144043
    3. ':i' → logprob: -12.62501335144043
    4. '=' → logprob: -13.25001335144043
    5. '1' → logprob: -15.00001335144043
    6. ' =' → logprob: -15.62501335144043
    7. ':int' → logprob: -17.62501335144043
    8. '   ' → logprob: -17.75001335144043
    9. 'Bus' → logprob: -17.75001335144043
    10. '=i' → logprob: -17.75001335144043

Token 516: ' Bus' (ID: 21332)
  Prédit: 'Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -0.1002068892121315
    2. ' Bus' → logprob: -2.3502068519592285
    3. ' bus' → logprob: -16.10020637512207
    4. 'bus' → logprob: -16.10020637512207
    5. '.Bus' → logprob: -17.60020637512207
    6. ' ' → logprob: -17.85020637512207
    7. '   ' → logprob: -17.97520637512207
    8. '_bus' → logprob: -18.10020637512207
    9. 'B' → logprob: -18.35020637512207
    10. 'BUS' → logprob: -18.72520637512207

Token 517: 'Stop' (ID: 13523)
  Prédit: 'Stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -1.0280383548888494e-06
    2. 'stop' → logprob: -14.625000953674316
    3. ' Stop' → logprob: -16.250001907348633
    4. '_Stop' → logprob: -16.250001907348633
    5. 'Stops' → logprob: -16.250001907348633
    6. 'Bus' → logprob: -16.875001907348633
    7. '_stop' → logprob: -17.000001907348633
    8. '.Stop' → logprob: -18.000001907348633
    9. '[i' → logprob: -18.250001907348633
    10. '(i' → logprob: -18.250001907348633

Token 518: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.625075340270996
    3. ' (' → logprob: -12.000075340270996
    4. 'i' → logprob: -12.875075340270996
    5. ' i' → logprob: -16.62507438659668
    6. '(
' → logprob: -16.62507438659668
    7. '   ' → logprob: -17.62507438659668
    8. '((' → logprob: -18.12507438659668
    9. ' ' → logprob: -18.50007438659668
    10. '(int' → logprob: -18.50007438659668

Token 519: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8325677703833207e-05
    2. ' )' → logprob: -10.500028610229492
    3. ')
' → logprob: -15.125028610229492
    4. '   ' → logprob: -15.625028610229492
    5. ' for' → logprob: -16.250028610229492
    6. 'for' → logprob: -16.250028610229492
    7. '       ' → logprob: -17.375028610229492
    8. ' ' → logprob: -17.375028610229492
    9. ')}' → logprob: -18.375028610229492
    10. ')`' → logprob: -18.500028610229492

Token 520: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005247156601399183
    2. 'for' → logprob: -5.255247116088867
    3. ' ' → logprob: -11.880247116088867
    4. '       ' → logprob: -12.755247116088867
    5. ')' → logprob: -13.755247116088867
    6. '}' → logprob: -14.255247116088867
    7. '()' → logprob: -14.630247116088867
    8. '        ' → logprob: -14.755247116088867
    9. '   ' → logprob: -15.005247116088867
    10. '    ' → logprob: -15.130247116088867

Token 521: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25383156538009644
    2. 'i' → logprob: -1.5038316249847412
    3. ' range' → logprob: -6.378831386566162
    4. 'range' → logprob: -8.50383186340332
    5. ' ' → logprob: -14.37883186340332
    6. '	i' → logprob: -16.62883186340332
    7. '```' → logprob: -16.75383186340332
    8. ' ' → logprob: -16.87883186340332
    9. '   ' → logprob: -17.37883186340332
    10. '  ' → logprob: -17.87883186340332

Token 522: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132902979850769
    2. 'in' → logprob: -1.3132903575897217
    3. 'range' → logprob: -11.3132905960083
    4. '1' → logprob: -12.0632905960083
    5. 'i' → logprob: -12.0632905960083
    6. ' ' → logprob: -13.5632905960083
    7. ' range' → logprob: -14.0632905960083
    8. '10' → logprob: -14.3132905960083
    9. ' i' → logprob: -14.4382905960083
    10. '0' → logprob: -14.5632905960083

Token 523: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019301822176203132
    2. ' range' → logprob: -6.251930236816406
    3. '1' → logprob: -13.376930236816406
    4. '(range' → logprob: -17.376930236816406
    5. '[' → logprob: -18.876930236816406
    6. ' ' → logprob: -19.126930236816406
    7. '	range' → logprob: -19.376930236816406
    8. 'Range' → logprob: -19.501930236816406
    9. '(' → logprob: -19.751930236816406
    10. '0' → logprob: -20.376930236816406

Token 524: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038801267510280013
    2. '1' → logprob: -8.250388145446777
    3. '10' → logprob: -9.000388145446777
    4. ' (' → logprob: -12.750388145446777
    5. '(
' → logprob: -15.500388145446777
    6. '0' → logprob: -16.00038719177246
    7. ' ' → logprob: -16.12538719177246
    8. '11' → logprob: -17.37538719177246
    9. '   ' → logprob: -18.00038719177246
    10. '(-' → logprob: -18.25038719177246

Token 525: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20154207944869995
    2. '1' → logprob: -1.7015421390533447
    3. '0' → logprob: -9.076541900634766
    4. ' ' → logprob: -11.951541900634766
    5. '11' → logprob: -12.201541900634766
    6. '(' → logprob: -12.826541900634766
    7. '   ' → logprob: -15.951541900634766
    8. '```' → logprob: -16.451541900634766
    9. '100' → logprob: -17.076541900634766
    10. '101' → logprob: -18.326541900634766

Token 526: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.005279534496366978
    2. ')' → logprob: -5.255279541015625
    3. ' )' → logprob: -10.130279541015625
    4. ')}
' → logprob: -13.255279541015625
    5. '}' → logprob: -13.380279541015625
    6. ');}' → logprob: -13.505279541015625
    7. '       ' → logprob: -14.755279541015625
    8. ')}

' → logprob: -15.255279541015625
    9. ')}}' → logprob: -16.005279541015625
    10. '   ' → logprob: -16.130279541015625

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038188379257917404
    2. '<|end|>' → logprob: -6.128818988800049
    3. '        
' → logprob: -7.878818988800049
    4. '        ' → logprob: -8.00381851196289
    5. '   ' → logprob: -8.50381851196289
    6. '
' → logprob: -8.87881851196289
    7. '```' → logprob: -8.87881851196289
    8. ' self' → logprob: -9.12881851196289
    9. 'self' → logprob: -9.25381851196289
    10. ',' → logprob: -9.62881851196289

Token 528: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.268545001745224
    2. 'self' → logprob: -1.6435450315475464
    3. '       ' → logprob: -3.268544912338257
    4. ' #' → logprob: -6.143545150756836
    5. ' self' → logprob: -6.393545150756836
    6. 'for' → logprob: -9.268545150756836
    7. '   ' → logprob: -10.143545150756836
    8. 'line' → logprob: -10.268545150756836
    9. 'route' → logprob: -10.893545150756836
    10. '#line' → logprob: -10.893545150756836

Token 529: ' Create' (ID: 6585)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3203122913837433
    2. 'self' → logprob: -1.695312261581421
    3. 'Create' → logprob: -3.195312261581421
    4. 'c' → logprob: -4.1953125
    5. 'Define' → logprob: -5.0703125
    6. ' self' → logprob: -5.1953125
    7. ' #' → logprob: -5.3203125
    8. '       ' → logprob: -5.5703125
    9. ' Create' → logprob: -5.9453125
    10. 'line' → logprob: -6.1953125

Token 530: ' main' (ID: 2758)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5025935769081116
    2. 'c' → logprob: -1.7525935173034668
    3. 'Circular' → logprob: -2.252593517303467
    4. '#' → logprob: -3.502593517303467
    5. ' circular' → logprob: -3.627593517303467
    6. 'line' → logprob: -4.002593517303467
    7. ' self' → logprob: -4.127593517303467
    8. 'a' → logprob: -4.627593517303467
    9. ' line' → logprob: -5.752593517303467
    10. 'Line' → logprob: -6.002593517303467

Token 531: ' linear' (ID: 23876)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -1.053217887878418
    2. 'line' → logprob: -1.303217887878418
    3. 'c' → logprob: -1.928217887878418
    4. '_route' → logprob: -2.803217887878418
    5. '_c' → logprob: -3.303217887878418
    6. ' route' → logprob: -3.428217887878418
    7. ' circular' → logprob: -3.678217887878418
    8. 'circle' → logprob: -3.928217887878418
    9. '_line' → logprob: -4.178217887878418
    10. 'routes' → logprob: -4.678217887878418

Token 532: ' route' (ID: 9656)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2651936411857605
    2. 'route' → logprob: -1.7651937007904053
    3. ' line' → logprob: -3.8901937007904053
    4. 'segments' → logprob: -4.265193462371826
    5. 'segment' → logprob: -4.265193462371826
    6. ' route' → logprob: -5.390193462371826
    7. 'lines' → logprob: -5.390193462371826
    8. 'routes' → logprob: -6.640193462371826
    9. ' segments' → logprob: -7.265193462371826
    10. '_line' → logprob: -7.515193462371826

Token 533: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3219088912010193
    2. 'self' → logprob: -1.821908950805664
    3. ' self' → logprob: -2.196908950805664
    4. ' line' → logprob: -7.196908950805664
    5. ' stops' → logprob: -7.696908950805664
    6. ',' → logprob: -8.571908950805664
    7. ' =' → logprob: -8.946908950805664
    8. '#' → logprob: -9.071908950805664
    9. 'line' → logprob: -9.196908950805664
    10. '        
' → logprob: -9.821908950805664

Token 534: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013327162712812424
    2. ' ' → logprob: -4.388327121734619
    3. '1' → logprob: -8.138327598571777
    4. 'self' → logprob: -8.388327598571777
    5. 'Bus' → logprob: -8.763327598571777
    6. ' Bus' → logprob: -9.513327598571777
    7. ' self' → logprob: -9.888327598571777
    8. '2' → logprob: -12.638327598571777
    9. '   ' → logprob: -12.763327598571777
    10. '(' → logprob: -13.138327598571777

Token 535: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005473282653838396
    2. '1' → logprob: -6.0054731369018555
    3. 'self' → logprob: -6.3804731369018555
    4. ' ' → logprob: -7.0054731369018555
    5. 'Bus' → logprob: -8.255473136901855
    6. 'range' → logprob: -10.005473136901855
    7. ' self' → logprob: -10.505473136901855
    8. '2' → logprob: -11.255473136901855
    9. '[' → logprob: -11.505473136901855
    10. ' Bus' → logprob: -12.005473136901855

Token 536: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2813001573085785
    2. 'to' → logprob: -1.4063001871109009
    3. ' through' → logprob: -9.53130054473877
    4. '0' → logprob: -10.15630054473877
    5. 'through' → logprob: -11.15630054473877
    6. ' ' → logprob: -11.65630054473877
    7. ',' → logprob: -12.03130054473877
    8. '1' → logprob: -12.78130054473877
    9. '<|end|>' → logprob: -12.78130054473877
    10. ' up' → logprob: -13.90630054473877

Token 537: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0022910907864570618
    2. '4' → logprob: -6.502291202545166
    3. '5' → logprob: -7.627291202545166
    4. '6' → logprob: -8.502290725708008
    5. '7' → logprob: -9.877290725708008
    6. '8' → logprob: -10.502290725708008
    7. ' ' → logprob: -10.877290725708008
    8. '3' → logprob: -15.127290725708008
    9. '```' → logprob: -16.127290725708008
    10. '1' → logprob: -16.252290725708008

Token 538: '5' (ID: 20)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00027182576013728976
    2. '4' → logprob: -9.000271797180176
    3. '5' → logprob: -9.750271797180176
    4. '6' → logprob: -9.750271797180176
    5. '7' → logprob: -10.750271797180176
    6. '8' → logprob: -11.625271797180176
    7. ' ' → logprob: -14.375271797180176
    8. '```' → logprob: -15.625271797180176
    9. '3' → logprob: -16.062772750854492
    10. '10' → logprob: -16.062772750854492

Token 539: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02000884711742401
    2. 'self' → logprob: -4.5200090408325195
    3. ' self' → logprob: -5.1450090408325195
    4. ' stops' → logprob: -5.8950090408325195
    5. ' line' → logprob: -8.89500904083252
    6. ',' → logprob: -9.14500904083252
    7. '
' → logprob: -10.52000904083252
    8. ' and' → logprob: -10.77000904083252
    9. 'line' → logprob: -11.64500904083252
    10. ' (' → logprob: -12.27000904083252

Token 540: ' turnaround' (ID: 104366)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2275744080543518
    2. 'self' → logprob: -2.227574348449707
    3. '[
' → logprob: -3.102574348449707
    4. '[self' → logprob: -3.852574348449707
    5. ' [' → logprob: -4.727574348449707
    6. ' stops' → logprob: -4.852574348449707
    7. 'Bus' → logprob: -5.227574348449707
    8. 'st' → logprob: -5.852574348449707
    9. ' self' → logprob: -6.227574348449707
    10. ' Bus' → logprob: -7.352574348449707

Token 541: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.669182538986206
    2. ' loop' → logprob: -2.044182538986206
    3. '       ' → logprob: -2.294182538986206
    4. '
' → logprob: -3.294182538986206
    5. 'loop' → logprob: -3.294182538986206
    6. 'point' → logprob: -3.794182538986206
    7. ' (' → logprob: -3.794182538986206
    8. 'at' → logprob: -3.919182538986206
    9. 'segment' → logprob: -4.044182777404785
    10. 'points' → logprob: -4.419182777404785

Token 542: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.008652745746076107
    2. ' ' → logprob: -4.758652687072754
    3. '6' → logprob: -11.633652687072754
    4. 'stop' → logprob: -11.883652687072754
    5. '0' → logprob: -12.258652687072754
    6. '   ' → logprob: -12.383652687072754
    7. ' stop' → logprob: -12.758652687072754
    8. ' Bus' → logprob: -13.133652687072754
    9. 'line' → logprob: -13.508652687072754
    10. '  ' → logprob: -14.008652687072754

Token 543: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.000610690622124821
    2. ' ' → logprob: -7.750610828399658
    3. '0' → logprob: -8.8756103515625
    4. '6' → logprob: -10.3756103515625
    5. 'stop' → logprob: -13.5006103515625
    6. '4' → logprob: -13.9381103515625
    7. '   ' → logprob: -14.2506103515625
    8. '1' → logprob: -14.3131103515625
    9. 'line' → logprob: -14.3756103515625
    10. 'Bus' → logprob: -14.6256103515625

Token 544: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35943326354026794
    2. ' and' → logprob: -1.3594332933425903
    3. ',' → logprob: -4.359433174133301
    4. ' to' → logprob: -4.859433174133301
    5. ':' → logprob: -4.984433174133301
    6. 'self' → logprob: -4.984433174133301
    7. ' through' → logprob: -5.609433174133301
    8. ' (' → logprob: -6.359433174133301
    9. '
' → logprob: -6.734433174133301
    10. 'and' → logprob: -7.234433174133301

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032335598953068256
    2. 'self' → logprob: -6.003233432769775
    3. ' self' → logprob: -7.628233432769775
    4. ',' → logprob: -9.628233909606934
    5. ' stops' → logprob: -9.753233909606934
    6. ' line' → logprob: -10.003233909606934
    7. ' and' → logprob: -10.503233909606934
    8. 'line' → logprob: -10.753233909606934
    9. ' for' → logprob: -12.128233909606934
    10. 'bus' → logprob: -12.253233909606934

Token 546: ' linear' (ID: 23876)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9654290080070496
    2. 'main' → logprob: -1.3404290676116943
    3. 'linear' (adapté à ' linear') → logprob: -1.7154290676116943
    4. 'line' → logprob: -1.9654290676116943
    5. 'segment' → logprob: -3.9654290676116943
    6. '       ' → logprob: -5.090428829193115
    7. 'route' → logprob: -5.215428829193115
    8. ' main' → logprob: -6.090428829193115
    9. ' self' → logprob: -6.215428829193115
    10. ' linear' → logprob: -7.215428829193115

Token 547: '_st' (ID: 2518)
  Prédit: '_route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.19359910488128662
    2. '_st' → logprob: -1.9435991048812866
    3. '_segment' → logprob: -4.193599224090576
    4. '_line' → logprob: -5.193599224090576
    5. 'route' → logprob: -5.443599224090576
    6. 'Route' → logprob: -5.693599224090576
    7. 'st' → logprob: -6.068599224090576
    8. ' =' → logprob: -6.818599224090576
    9. '=' → logprob: -7.943599224090576
    10. '_segments' → logprob: -8.443598747253418

Token 548: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.03366287425160408
    2. 'op' → logprob: -3.408662796020508
    3. 'r' → logprob: -11.658662796020508
    4. '   ' → logprob: -12.908662796020508
    5. 'eps' → logprob: -13.658662796020508
    6. ' ops' → logprob: -13.783662796020508
    7. '```' → logprob: -14.408662796020508
    8. '       ' → logprob: -14.533662796020508
    9. 'opt' → logprob: -15.283662796020508
    10. 'top' → logprob: -15.658662796020508

Token 549: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2321176379919052
    2. '=' → logprob: -1.8571176528930664
    3. '=[' → logprob: -2.9821176528930664
    4. ' =[' → logprob: -8.982117652893066
    5. '=list' → logprob: -8.982117652893066
    6. '=self' → logprob: -9.982117652893066
    7. '[' → logprob: -10.982117652893066
    8. '   ' → logprob: -11.607117652893066
    9. '_list' → logprob: -12.732117652893066
    10. '=[
' → logprob: -12.857117652893066

Token 550: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.1700569987297058
    2. ' [' → logprob: -2.1700570583343506
    3. '[' → logprob: -3.1700570583343506
    4. '[list' → logprob: -8.54505729675293
    5. '[start' → logprob: -12.67005729675293
    6. 'self' → logprob: -13.42005729675293
    7. '[line' → logprob: -13.42005729675293
    8. '   ' → logprob: -13.54505729675293
    9. '[this' → logprob: -13.79505729675293
    10. '[List' → logprob: -13.79505729675293

Token 551: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001426346570951864
    2. ' self' → logprob: -8.875143051147461
    3. '(self' → logprob: -14.125143051147461
    4. '       ' → logprob: -14.375143051147461
    5. '[self' → logprob: -14.500143051147461
    6. '   ' → logprob: -14.625143051147461
    7. '           ' → logprob: -15.250143051147461
    8. '
' → logprob: -15.250143051147461
    9. '=self' → logprob: -17.00014305114746
    10. '	self' → logprob: -18.37514305114746

Token 552: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0001593195047462359
    2. 'st' → logprob: -8.75015926361084
    3. ' stops' → logprob: -14.62515926361084
    4. ' .' → logprob: -15.50015926361084
    5. '.' → logprob: -16.500160217285156
    6. '.stop' → logprob: -17.625160217285156
    7. '	st' → logprob: -17.875160217285156
    8. 'Stops' → logprob: -18.000160217285156
    9. '_st' → logprob: -19.125160217285156
    10. '.s' → logprob: -19.375160217285156

Token 553: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -2.2127087504486553e-05
    2. '.ops' → logprob: -12.000021934509277
    3. 'tops' → logprob: -12.125021934509277
    4. 'st' → logprob: -12.750021934509277
    5. 's' → logprob: -13.625021934509277
    6. 'op' → logprob: -14.000021934509277
    7. '{' → logprob: -14.375021934509277
    8. '
' → logprob: -14.625021934509277
    9. 'ps' → logprob: -14.750021934509277
    10. '[' → logprob: -14.875021934509277

Token 554: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020973898062948138
    2. '[' → logprob: -8.87520980834961
    3. '(i' → logprob: -9.62520980834961
    4. 'i' → logprob: -13.37520980834961
    5. '[j' → logprob: -14.37520980834961
    6. ' [' → logprob: -14.37520980834961
    7. '(' → logprob: -15.00020980834961
    8. '[n' → logprob: -15.37520980834961
    9. '[x' → logprob: -15.50020980834961
    10. '0' → logprob: -16.50020980834961

Token 555: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.576361894607544
    2. 'for' → logprob: -0.826361894607544
    3. '   ' → logprob: -8.451361656188965
    4. 'i' → logprob: -8.701361656188965
    5. ' i' → logprob: -11.201361656188965
    6. ' ' → logprob: -11.326361656188965
    7. '    ' → logprob: -12.451361656188965
    8. '0' → logprob: -12.701361656188965
    9. '(i' → logprob: -12.826361656188965
    10. '[i' → logprob: -13.201361656188965

Token 556: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931912899017334
    2. 'for' → logprob: -0.6931912899017334
    3. '   ' → logprob: -10.568191528320312
    4. 'i' → logprob: -11.818191528320312
    5. ' i' → logprob: -12.193191528320312
    6. ' ' → logprob: -12.818191528320312
    7. '	for' → logprob: -13.318191528320312
    8. '    ' → logprob: -14.443191528320312
    9. '       ' → logprob: -15.318191528320312
    10. '[i' → logprob: -15.693191528320312

Token 557: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5783568620681763
    2. 'range' → logprob: -0.8283568620681763
    3. 'i' → logprob: -6.578356742858887
    4. ' i' → logprob: -6.953356742858887
    5. ' ' → logprob: -10.328356742858887
    6. '0' → logprob: -10.328356742858887
    7. '   ' → logprob: -13.078356742858887
    8. '  ' → logprob: -13.953356742858887
    9. ' in' → logprob: -15.828356742858887
    10. '(range' → logprob: -15.953356742858887

Token 558: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39410755038261414
    2. 'in' → logprob: -1.1441075801849365
    3. 'range' → logprob: -5.019107341766357
    4. ' range' → logprob: -7.644107341766357
    5. '0' → logprob: -10.019107818603516
    6. '(range' → logprob: -10.144107818603516
    7. '(' → logprob: -11.019107818603516
    8. ' ' → logprob: -11.019107818603516
    9. '   ' → logprob: -13.519107818603516
    10. '6' → logprob: -13.894107818603516

Token 559: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715728435665369
    2. ' range' → logprob: -5.006715774536133
    3. '0' → logprob: -15.006715774536133
    4. '[' → logprob: -17.131715774536133
    5. '   ' → logprob: -17.256715774536133
    6. '(range' → logprob: -17.381715774536133
    7. ' ' → logprob: -17.631715774536133
    8. '	range' → logprob: -18.756715774536133
    9. '
' → logprob: -20.006715774536133
    10. '  ' → logprob: -20.006715774536133

Token 560: '(' (ID: 7)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.008875609375536442
    2. '0' → logprob: -4.758875846862793
    3. '(' → logprob: -8.258875846862793
    4. ' ' → logprob: -13.758875846862793
    5. '1' → logprob: -14.133875846862793
    6. '5' → logprob: -15.758875846862793
    7. '   ' → logprob: -16.133874893188477
    8. ')' → logprob: -17.508874893188477
    9. '7' → logprob: -18.133874893188477
    10. '06' → logprob: -18.133874893188477

Token 561: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0008049834286794066
    2. '0' → logprob: -7.125804901123047
    3. '1' → logprob: -15.500804901123047
    4. ' ' → logprob: -15.875804901123047
    5. '   ' → logprob: -17.000804901123047
    6. 'six' → logprob: -17.250804901123047
    7. '5' → logprob: -18.375804901123047
    8. '(' → logprob: -18.375804901123047
    9. ')' → logprob: -18.500804901123047
    10. '"' → logprob: -19.000804901123047

Token 562: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0020129792392253876
    2. ')]
' → logprob: -6.252013206481934
    3. ' )' → logprob: -9.502013206481934
    4. ' ]' → logprob: -12.127013206481934
    5. ']' → logprob: -13.002013206481934
    6. ')]

' → logprob: -14.377013206481934
    7. '       ' → logprob: -15.002013206481934
    8. ')]
' → logprob: -15.252013206481934
    9. ')' → logprob: -15.502013206481934
    10. '   ' → logprob: -15.877013206481934

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04948825761675835
    2. '
' → logprob: -4.174488067626953
    3. ' self' → logprob: -4.549488067626953
    4. 'self' → logprob: -4.674488067626953
    5. ' line' → logprob: -5.424488067626953
    6. ' linear' → logprob: -5.424488067626953
    7. 'linear' → logprob: -6.674488067626953
    8. ' circular' → logprob: -6.799488067626953
    9. 'line' → logprob: -7.174488067626953
    10. 'c' → logprob: -7.424488067626953

Token 564: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.051545556634664536
    2. ' self' → logprob: -3.6765456199645996
    3. 'linear' → logprob: -3.9265456199645996
    4. '       ' → logprob: -6.6765456199646
    5. 'main' → logprob: -6.8015456199646
    6. 'line' → logprob: -6.8015456199646
    7. 'c' → logprob: -7.0515456199646
    8. ' linear' → logprob: -7.5515456199646
    9. 'route' → logprob: -9.051545143127441
    10. ' main' → logprob: -9.551545143127441

Token 565: '.linear' (ID: 75762)
  Prédit: '.linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.linear' → logprob: -0.08528541773557663
    2. '.main' → logprob: -2.9602854251861572
    3. 'linear' → logprob: -4.585285186767578
    4. '.line' → logprob: -4.710285186767578
    5. '.route' → logprob: -5.460285186767578
    6. 'main' → logprob: -5.835285186767578
    7. '.circular' → logprob: -5.835285186767578
    8. '.' → logprob: -8.835285186767578
    9. 'line' → logprob: -9.585285186767578
    10. 'route' → logprob: -9.710285186767578

Token 566: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.004154379945248365
    2. 'route' → logprob: -6.504154205322266
    3. 'Route' → logprob: -7.004154205322266
    4. '_segment' → logprob: -7.004154205322266
    5. '_line' → logprob: -7.379154205322266
    6. '_st' → logprob: -8.754154205322266
    7. '_segments' → logprob: -11.379154205322266
    8. '=' → logprob: -11.504154205322266
    9. ' =' → logprob: -12.004154205322266
    10. '_routes' → logprob: -12.004154205322266

Token 567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575939416885376
    2. ' =' → logprob: -0.825939416885376
    3. ' ' → logprob: -18.075939178466797
    4. '=line' → logprob: -18.075939178466797
    5. 's' → logprob: -18.950939178466797
    6. '＝' → logprob: -19.200939178466797
    7. '=
' → logprob: -19.575939178466797
    8. ' =
' → logprob: -19.700939178466797
    9. '   ' → logprob: -19.950939178466797
    10. ',' → logprob: -20.075939178466797

Token 568: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.006722233723849058
    2. ' Line' → logprob: -5.006722450256348
    3. 'Linear' → logprob: -12.131722450256348
    4. '   ' → logprob: -14.131722450256348
    5. 'Circular' → logprob: -14.881722450256348
    6. '(Line' → logprob: -15.506722450256348
    7. ' ' → logprob: -16.38172149658203
    8. ' line' → logprob: -16.63172149658203
    9. 'line' → logprob: -17.50672149658203
    10. '_Line' → logprob: -17.50672149658203

Token 569: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -2.339278580620885e-06
    2. 'segment' → logprob: -13.125001907348633
    3. ' Segment' → logprob: -16.750001907348633
    4. '_segment' → logprob: -16.750001907348633
    5. 'Seg' → logprob: -17.125001907348633
    6. 'egment' → logprob: -17.250001907348633
    7. 'linear' → logprob: -17.875001907348633
    8. 'ar' → logprob: -18.500001907348633
    9. 'line' → logprob: -18.500001907348633
    10. 'Segments' → logprob: -19.250001907348633

Token 570: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. 'linear' → logprob: -18.625
    4. '(lines' → logprob: -20.125
    5. ' (' → logprob: -21.5
    6. '(Line' → logprob: -22.375
    7. '(
' → logprob: -22.5
    8. '[line' → logprob: -22.5
    9. '(le' → logprob: -22.75
    10. '((' → logprob: -22.75

Token 571: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -7.226628895296017e-06
    2. 'st' → logprob: -12.625007629394531
    3. 'Segment' → logprob: -14.000007629394531
    4. 'ear' → logprob: -14.375007629394531
    5. '(ar' → logprob: -14.625007629394531
    6. 'linear' → logprob: -15.000007629394531
    7. 'Stops' → logprob: -15.125007629394531
    8. '(st' → logprob: -15.375007629394531
    9. 'segment' → logprob: -15.500007629394531
    10. 'r' → logprob: -15.625007629394531

Token 572: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0005946164601482451
    2. 'st' → logprob: -7.500594615936279
    3. '_route' → logprob: -10.875595092773438
    4. 'Stops' → logprob: -11.500595092773438
    5. '(st' → logprob: -12.250595092773438
    6. 'route' → logprob: -12.750595092773438
    7. '_stop' → logprob: -13.500595092773438
    8. ')' → logprob: -14.000595092773438
    9. ',' → logprob: -14.125595092773438
    10. '   ' → logprob: -14.250595092773438

Token 573: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00038479414070025086
    2. 'op' → logprob: -7.87538480758667
    3. '   ' → logprob: -12.625384330749512
    4. '       ' → logprob: -14.875384330749512
    5. ' ops' → logprob: -15.250384330749512
    6. '```' → logprob: -15.250384330749512
    7. 'ps' → logprob: -15.875384330749512
    8. '_ops' → logprob: -16.500385284423828
    9. ' ' → logprob: -17.000385284423828
    10. ')' → logprob: -17.375385284423828

Token 574: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.310693111619912e-05
    2. ')
' → logprob: -10.125042915344238
    3. ' )' → logprob: -13.625042915344238
    4. ')

' → logprob: -14.375042915344238
    5. '       ' → logprob: -14.625042915344238
    6. '<|end|>' → logprob: -15.250042915344238
    7. ')
' → logprob: -15.375042915344238
    8. '   ' → logprob: -15.625042915344238
    9. '),' → logprob: -17.125043869018555
    10. ')#' → logprob: -17.125043869018555

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2932340204715729
    2. '#' → logprob: -1.4182339906692505
    3. 'c' → logprob: -4.668233871459961
    4. '
' → logprob: -7.418233871459961
    5. ' #' → logprob: -7.418233871459961
    6. ' circular' → logprob: -7.418233871459961
    7. 'self' → logprob: -8.168233871459961
    8. '```' → logprob: -8.543233871459961
    9. 'Circular' → logprob: -8.793233871459961
    10. '        
' → logprob: -9.793233871459961

Token 576: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.16021041572093964
    2. 'c' → logprob: -2.535210371017456
    3. 'self' → logprob: -3.035210371017456
    4. '       ' → logprob: -4.035210609436035
    5. ' #' → logprob: -6.660210609436035
    6. ' self' → logprob: -7.285210609436035
    7. ' circular' → logprob: -7.410210609436035
    8. 'circle' → logprob: -8.660210609436035
    9. 'circ' → logprob: -10.035210609436035
    10. '
' → logprob: -10.410210609436035

Token 577: ' Create' (ID: 6585)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06514563411474228
    2. '#' → logprob: -3.06514573097229
    3. 'self' → logprob: -4.690145492553711
    4. 'circle' → logprob: -5.690145492553711
    5. 'Create' → logprob: -7.065145492553711
    6. 'main' → logprob: -7.315145492553711
    7. 'loop' → logprob: -7.440145492553711
    8. '       ' → logprob: -7.940145492553711
    9. ' circular' → logprob: -7.940145492553711
    10. 'ring' → logprob: -8.440145492553711

Token 578: ' circular' (ID: 37626)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38893529772758484
    2. ' circular' → logprob: -1.1389353275299072
    3. 'circle' → logprob: -7.138935089111328
    4. '#' → logprob: -8.138935089111328
    5. 'self' → logprob: -8.888935089111328
    6. 'circ' → logprob: -9.263935089111328
    7. '       ' → logprob: -9.263935089111328
    8. 'a' → logprob: -9.388935089111328
    9. ' ring' → logprob: -9.513935089111328
    10. ' a' → logprob: -9.763935089111328

Token 579: ' route' (ID: 9656)
  Prédit: '_route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.04366686940193176
    2. '_st' → logprob: -3.6686668395996094
    3. 'route' → logprob: -4.168666839599609
    4. 'st' → logprob: -6.793666839599609
    5. 'Route' → logprob: -7.543666839599609
    6. '_routes' → logprob: -10.91866683959961
    7. '_segment' → logprob: -11.79366683959961
    8. '_' → logprob: -12.04366683959961
    9. '_stop' → logprob: -12.04366683959961
    10. '
' → logprob: -12.16866683959961

Token 580: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38523736596107483
    2. 'st' → logprob: -2.135237455368042
    3. ' stops' → logprob: -3.010237455368042
    4. 'c' → logprob: -3.260237455368042
    5. '_st' → logprob: -3.260237455368042
    6. '=' → logprob: -3.635237455368042
    7. ' circular' → logprob: -3.760237455368042
    8. '       ' → logprob: -4.885237216949463
    9. '(st' → logprob: -5.385237216949463
    10. '_c' → logprob: -5.635237216949463

Token 581: '5' (ID: 20)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -1.3314687013626099
    2. ' =' → logprob: -1.3314687013626099
    3. 'c' → logprob: -1.7064687013626099
    4. '=' → logprob: -2.8314685821533203
    5. '([' → logprob: -3.0814685821533203
    6. '_st' → logprob: -3.7064685821533203
    7. '_c' → logprob: -4.20646858215332
    8. '(st' → logprob: -4.20646858215332
    9. ' circular' → logprob: -4.33146858215332
    10. 'from' → logprob: -4.45646858215332

Token 582: '->' (ID: 609)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6813782453536987
    2. ' to' → logprob: -1.4313782453536987
    3. ' through' → logprob: -2.4313783645629883
    4. ' =' → logprob: -2.8063783645629883
    5. 'through' → logprob: -3.1813783645629883
    6. ',' → logprob: -3.8063783645629883
    7. '[' → logprob: -4.556378364562988
    8. '       ' → logprob: -4.556378364562988
    9. '=' → logprob: -5.056378364562988
    10. '=[' → logprob: -6.056378364562988

Token 583: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.15562468767166138
    2. '9' → logprob: -2.5306246280670166
    3. '[' → logprob: -3.1556246280670166
    4. ' ' → logprob: -4.905624866485596
    5. '(' → logprob: -5.030624866485596
    6. '1' → logprob: -6.280624866485596
    7. '0' → logprob: -6.655624866485596
    8. 'self' → logprob: -7.030624866485596
    9. ' [' → logprob: -7.280624866485596
    10. '->' → logprob: -7.530624866485596

Token 584: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.021684346720576286
    2. '->[' → logprob: -4.771684169769287
    3. '[' → logprob: -5.271684169769287
    4. ',' → logprob: -5.521684169769287
    5. ' ->' → logprob: -6.646684169769287
    6. ' through' → logprob: -7.896684169769287
    7. ' [' → logprob: -7.896684169769287
    8. '7' → logprob: -8.021684646606445
    9. '6' → logprob: -8.521684646606445
    10. 'to' → logprob: -8.646684646606445

Token 585: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00032879042555578053
    2. ' ' → logprob: -8.37532901763916
    3. '9' → logprob: -9.25032901763916
    4. '...' → logprob: -14.62532901763916
    5. '0' → logprob: -15.00032901763916
    6. '```' → logprob: -15.00032901763916
    7. '[' → logprob: -15.12532901763916
    8. '   ' → logprob: -15.50032901763916
    9. ',' → logprob: -16.375328063964844
    10. '  ' → logprob: -16.375328063964844

Token 586: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.001457735663279891
    2. '->[' → logprob: -7.501457691192627
    3. ' ->' → logprob: -7.876457691192627
    4. '>' → logprob: -8.251458168029785
    5. '[' → logprob: -9.626458168029785
    6. '8' → logprob: -10.376458168029785
    7. '6' → logprob: -10.751458168029785
    8. '->{' → logprob: -10.876458168029785
    9. '7' → logprob: -11.001458168029785
    10. ' ' → logprob: -11.126458168029785

Token 587: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -3.082895273109898e-05
    2. '...' → logprob: -11.625030517578125
    3. ' ' → logprob: -11.625030517578125
    4. '
' → logprob: -12.375030517578125
    5. '[' → logprob: -13.125030517578125
    6. '5' → logprob: -14.000030517578125
    7. '7' → logprob: -14.187530517578125
    8. '9' → logprob: -14.437530517578125
    9. '3' → logprob: -14.750030517578125
    10. '```' → logprob: -14.875030517578125

Token 588: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.0011408114805817604
    2. '->[' → logprob: -7.626140594482422
    3. ' ->' → logprob: -8.001140594482422
    4. '>' → logprob: -8.751140594482422
    5. '->{' → logprob: -10.126140594482422
    6. '       ' → logprob: -10.626140594482422
    7. '}->' → logprob: -11.126140594482422
    8. '→' → logprob: -11.501140594482422
    9. '[' → logprob: -11.876140594482422
    10. '```' → logprob: -12.001140594482422

Token 589: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '۹' → logprob: -15.8751802444458
    4. '```' → logprob: -16.500179290771484
    5. '९' → logprob: -16.625179290771484
    6. '   ' → logprob: -16.625179290771484
    7. '5' → logprob: -17.000179290771484
    8. '９' → logprob: -17.125179290771484
    9. '[' → logprob: -17.625179290771484
    10. '`' → logprob: -18.000179290771484

Token 590: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -1.2529213428497314
    2. '       ' → logprob: -1.5029213428497314
    3. ' stops' → logprob: -1.8779213428497314
    4. 'c' → logprob: -2.2529213428497314
    5. ' with' → logprob: -3.1279213428497314
    6. ' circular' → logprob: -3.2529213428497314
    7. 'st' → logprob: -3.5029213428497314
    8. '...' → logprob: -4.252921104431152
    9. 'linear' → logprob: -4.252921104431152
    10. '[' → logprob: -4.377921104431152

Token 591: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.847109812544659e-05
    2. 'self' → logprob: -10.000048637390137
    3. ' ' → logprob: -13.125048637390137
    4. '
' → logprob: -15.000048637390137
    5. '0' → logprob: -15.000048637390137
    6. ' self' → logprob: -15.750048637390137
    7. '```' → logprob: -16.12504768371582
    8. '   ' → logprob: -18.00004768371582
    9. '

' → logprob: -18.12504768371582
    10. '4' → logprob: -18.12504768371582

Token 592: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22458237409591675
    2. '
' → logprob: -2.2245824337005615
    3. 'c' → logprob: -2.8495824337005615
    4. ' circular' → logprob: -3.7245824337005615
    5. ' stops' → logprob: -4.724582195281982
    6. ',' → logprob: -7.724582195281982
    7. 'self' → logprob: -7.974582195281982
    8. ' and' → logprob: -8.84958267211914
    9. '
' → logprob: -8.97458267211914
    10. 'st' → logprob: -9.09958267211914

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5523067712783813
    2. 'c' → logprob: -1.1773067712783813
    3. ' circular' → logprob: -2.302306652069092
    4. ' stops' → logprob: -4.177306652069092
    5. '
' → logprob: -8.42730712890625
    6. 'st' → logprob: -9.05230712890625
    7. 'circ' → logprob: -9.30230712890625
    8. '```' → logprob: -9.67730712890625
    9. 'self' → logprob: -9.80230712890625
    10. 'circle' → logprob: -9.92730712890625

Token 594: ' circular' (ID: 37626)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007083826349116862
    2. ' circular' → logprob: -8.12570858001709
    3. 'circle' → logprob: -8.37570858001709
    4. 'circ' → logprob: -9.00070858001709
    5. 'self' → logprob: -10.25070858001709
    6. '       ' → logprob: -11.00070858001709
    7. 'cir' → logprob: -12.75070858001709
    8. '   ' → logprob: -13.87570858001709
    9. 'cycle' → logprob: -14.37570858001709
    10. '.circular' → logprob: -15.12570858001709

Token 595: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0011940367985516787
    2. 'st' → logprob: -7.251194000244141
    3. '_route' → logprob: -7.751194000244141
    4. 'route' → logprob: -10.00119400024414
    5. 'Stops' → logprob: -12.50119400024414
    6. '_routes' → logprob: -13.75119400024414
    7. 'Route' → logprob: -13.87619400024414
    8. '_' → logprob: -14.12619400024414
    9. '_stop' → logprob: -15.00119400024414
    10. '
' → logprob: -15.50119400024414

Token 596: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00525154173374176
    2. 'op' → logprob: -5.255251407623291
    3. '_ops' → logprob: -12.38025188446045
    4. 'opts' → logprob: -12.63025188446045
    5. 'route' → logprob: -13.50525188446045
    6. 'top' → logprob: -13.50525188446045
    7. 'tops' → logprob: -13.75525188446045
    8. '_route' → logprob: -13.88025188446045
    9. ' ops' → logprob: -14.00525188446045
    10. 'r' → logprob: -14.63025188446045

Token 597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251937597990036
    2. '=' → logprob: -1.5019376277923584
    3. '=[' → logprob: -12.126937866210938
    4. ' =[' → logprob: -12.751937866210938
    5. '   ' → logprob: -16.626937866210938
    6. ' ' → logprob: -16.751937866210938
    7. ']' → logprob: -18.126937866210938
    8. '=[
' → logprob: -18.126937866210938
    9. '```' → logprob: -18.251937866210938
    10. '=
' → logprob: -18.251937866210938

Token 598: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.043125130236148834
    2. ' [' → logprob: -3.2931251525878906
    3. '[' → logprob: -5.543125152587891
    4. '[c' → logprob: -6.793125152587891
    5. '[line' → logprob: -11.29312515258789
    6. '[start' → logprob: -12.16812515258789
    7. '[next' → logprob: -12.91812515258789
    8. '[current' → logprob: -12.91812515258789
    9. '[class' → logprob: -13.16812515258789
    10. '[this' → logprob: -13.41812515258789

Token 599: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043460296001285315
    2. ' self' → logprob: -7.875434398651123
    3. '[self' → logprob: -9.875434875488281
    4. '
' → logprob: -13.875434875488281
    5. '           ' → logprob: -14.250434875488281
    6. '(self' → logprob: -14.625434875488281
    7. '   ' → logprob: -15.000434875488281
    8. '       ' → logprob: -15.250434875488281
    9. '[' → logprob: -15.500434875488281
    10. ' [' → logprob: -16.50043487548828

Token 600: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.005236837547272444
    2. 'st' → logprob: -5.255236625671387
    3. '_st' → logprob: -14.005236625671387
    4. '	st' → logprob: -14.005236625671387
    5. ' .' → logprob: -15.380236625671387
    6. 'sts' → logprob: -15.505236625671387
    7. '.' → logprob: -15.630236625671387
    8. '.bus' → logprob: -16.130237579345703
    9. '(st' → logprob: -16.380237579345703
    10. 'St' → logprob: -16.755237579345703

Token 601: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.047485046088695526
    2. '.st' → logprob: -3.172485113143921
    3. 'st' → logprob: -5.547484874725342
    4. '.ops' → logprob: -8.4224853515625
    5. 'op' → logprob: -8.6724853515625
    6. '_st' → logprob: -9.9224853515625
    7. 'ost' → logprob: -10.0474853515625
    8. 'tops' → logprob: -11.0474853515625
    9. 'ots' → logprob: -11.4224853515625
    10. 's' → logprob: -11.4224853515625

Token 602: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0034358962439000607
    2. 'i' → logprob: -5.878436088562012
    3. '[' → logprob: -7.378436088562012
    4. '5' → logprob: -12.503436088562012
    5. '(i' → logprob: -13.628436088562012
    6. ' i' → logprob: -13.878436088562012
    7. '{i' → logprob: -15.878436088562012
    8. '6' → logprob: -16.128435134887695
    9. '   ' → logprob: -17.128435134887695
    10. ' [' → logprob: -17.128435134887695

Token 603: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4298032820224762
    2. ' for' → logprob: -1.0548032522201538
    3. ']' → logprob: -8.179802894592285
    4. '   ' → logprob: -8.304802894592285
    5. '6' → logprob: -8.804802894592285
    6. 'i' → logprob: -8.929802894592285
    7. ' ' → logprob: -9.054802894592285
    8. '[i' → logprob: -9.304802894592285
    9. ')' → logprob: -11.054802894592285
    10. '5' → logprob: -11.179802894592285

Token 604: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5763157606124878
    2. 'for' → logprob: -0.8263157606124878
    3. 'i' → logprob: -8.201315879821777
    4. '[i' → logprob: -9.951315879821777
    5. '   ' → logprob: -10.826315879821777
    6. '6' → logprob: -11.076315879821777
    7. ' i' → logprob: -11.951315879821777
    8. ' ' → logprob: -12.451315879821777
    9. '5' → logprob: -12.701315879821777
    10. '	for' → logprob: -13.576315879821777

Token 605: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004605783324223012
    2. ' i' → logprob: -7.750460624694824
    3. 'range' → logprob: -10.500460624694824
    4. ' range' → logprob: -13.250460624694824
    5. '5' → logprob: -15.750460624694824
    6. 'in' → logprob: -16.125459671020508
    7. '   ' → logprob: -16.875459671020508
    8. ' ' → logprob: -17.250459671020508
    9. ' in' → logprob: -17.250459671020508
    10. '[' → logprob: -17.625459671020508

Token 606: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12708905339241028
    2. ' in' → logprob: -2.127089023590088
    3. 'range' → logprob: -9.252089500427246
    4. 'i' → logprob: -10.627089500427246
    5. '   ' → logprob: -11.252089500427246
    6. ' ' → logprob: -11.752089500427246
    7. '  ' → logprob: -12.627089500427246
    8. '    ' → logprob: -12.752089500427246
    9. '5' → logprob: -12.752089500427246
    10. ' i' → logprob: -13.002089500427246

Token 607: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005600715056061745
    2. ' range' → logprob: -5.505600929260254
    3. '[' → logprob: -6.505600929260254
    4. '5' → logprob: -11.005600929260254
    5. '(' → logprob: -12.380600929260254
    6. '(range' → logprob: -13.255600929260254
    7. '   ' → logprob: -13.630600929260254
    8. ' [' → logprob: -14.255600929260254
    9. ' ' → logprob: -14.630600929260254
    10. '6' → logprob: -14.630600929260254

Token 608: '(' (ID: 7)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.007642952259629965
    2. '(' → logprob: -4.88264274597168
    3. '   ' → logprob: -11.13264274597168
    4. ' ' → logprob: -11.25764274597168
    5. '       ' → logprob: -13.50764274597168
    6. ' (' → logprob: -13.75764274597168
    7. '     ' → logprob: -13.88264274597168
    8. '    ' → logprob: -13.88264274597168
    9. '[' → logprob: -14.00764274597168
    10. ')' → logprob: -14.38264274597168

Token 609: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.500007629394531
    4. '    ' → logprob: -17.25000762939453
    5. '     ' → logprob: -17.62500762939453
    6. '  ' → logprob: -17.75000762939453
    7. '(' → logprob: -18.31250762939453
    8. '
' → logprob: -18.50000762939453
    9. '５' → logprob: -18.50000762939453
    10. '۵' → logprob: -18.50000762939453

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05022532492876053
    2. '5' → logprob: -3.050225257873535
    3. ' ,' → logprob: -6.425225257873535
    4. '6' → logprob: -11.800225257873535
    5. ' ' → logprob: -12.175225257873535
    6. '   ' → logprob: -13.675225257873535
    7. ',
' → logprob: -14.050225257873535
    8. '
' → logprob: -15.550225257873535
    9. ',i' → logprob: -15.550225257873535
    10. 'i' → logprob: -15.675225257873535

Token 611: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.125012397766113
    4. '```' → logprob: -16.25001335144043
    5. '1' → logprob: -17.12501335144043
    6. '       ' → logprob: -17.81251335144043
    7. '0' → logprob: -17.93751335144043
    8. ')' → logprob: -18.06251335144043
    9. '
' → logprob: -18.06251335144043
    10. '    ' → logprob: -18.12501335144043

Token 612: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12760628759860992
    2. ']' → logprob: -2.1276063919067383
    3. ' ]' → logprob: -7.502606391906738
    4. ')' → logprob: -9.877606391906738
    5. ']}' → logprob: -10.377606391906738
    6. '])' → logprob: -11.377606391906738
    7. ']
' → logprob: -11.627606391906738
    8. ' )' → logprob: -11.877606391906738
    9. ')]
' → logprob: -12.127606391906738
    10. '])]' → logprob: -12.252606391906738

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028517616912722588
    2. 'self' → logprob: -3.778517723083496
    3. '
' → logprob: -5.528517723083496
    4. ' self' → logprob: -7.153517723083496
    5. ')
' → logprob: -8.153517723083496
    6. ')' → logprob: -9.278517723083496
    7. '        
' → logprob: -10.403517723083496
    8. '<|end|>' → logprob: -10.778517723083496
    9. ',' → logprob: -11.028517723083496
    10. '   ' → logprob: -11.778517723083496

Token 614: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002246357616968453
    2. ' self' → logprob: -8.750225067138672
    3. '       ' → logprob: -9.625225067138672
    4. '
' → logprob: -15.875225067138672
    5. '        
' → logprob: -17.375225067138672
    6. '	self' → logprob: -19.500225067138672
    7. '   ' → logprob: -19.625225067138672
    8. 'Circular' → logprob: -19.625225067138672
    9. '(self' → logprob: -20.000225067138672
    10. 'class' → logprob: -21.000225067138672

Token 615: '.circular' (ID: 49716)
  Prédit: '.circular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.circular' → logprob: -0.002553307916969061
    2. '.c' → logprob: -6.252553462982178
    3. 'c' → logprob: -7.627553462982178
    4. 'Circular' → logprob: -10.00255298614502
    5. '.' → logprob: -10.37755298614502
    6. '.C' → logprob: -10.87755298614502
    7. ' circular' → logprob: -11.50255298614502
    8. '.circle' → logprob: -11.62755298614502
    9. ' .' → logprob: -12.00255298614502
    10. 'ircular' → logprob: -12.25255298614502

Token 616: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.6423331499099731
    2. 'Route' → logprob: -0.7673331499099731
    3. 'route' → logprob: -4.642333030700684
    4. '_' → logprob: -11.642333030700684
    5. '_ROUTE' → logprob: -12.017333030700684
    6. '	Route' → logprob: -12.267333030700684
    7. ' Route' → logprob: -12.267333030700684
    8. '_r' → logprob: -12.392333030700684
    9. '<Route' → logprob: -12.767333030700684
    10. ' route' → logprob: -13.017333030700684

Token 617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022595763206482
    2. ' =' → logprob: -1.9102259874343872
    3. '=C' → logprob: -13.285225868225098
    4. ' ' → logprob: -17.910226821899414
    5. '   ' → logprob: -18.035226821899414
    6. 'Circular' → logprob: -18.535226821899414
    7. 's' → logprob: -18.910226821899414
    8. '=
' → logprob: -19.035226821899414
    9. '＝' → logprob: -19.285226821899414
    10. '=

' → logprob: -19.410226821899414

Token 618: ' Circular' (ID: 72772)
  Prédit: 'Circular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circular' → logprob: -0.002475777640938759
    2. ' Circular' → logprob: -6.002475738525391
    3. 'Circ' → logprob: -17.62747573852539
    4. ' circular' → logprob: -17.75247573852539
    5. 'C' → logprob: -18.00247573852539
    6. 'Cir' → logprob: -18.00247573852539
    7. '	C' → logprob: -18.75247573852539
    8. 'c' → logprob: -19.25247573852539
    9. 'Circle' → logprob: -19.25247573852539
    10. '   ' → logprob: -19.37747573852539

Token 619: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -5.512236498361744e-07
    2. 'route' → logprob: -14.875000953674316
    3. '	Route' → logprob: -17.625
    4. 'Circular' → logprob: -17.75
    5. '_route' → logprob: -17.75
    6. ' Route' → logprob: -17.875
    7. '<Route' → logprob: -18.875
    8. 'Routes' → logprob: -19.75
    9. '.Route' → logprob: -19.75
    10. '(Route' → logprob: -20.25

Token 620: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00017994173686020076
    2. 'c' → logprob: -8.6251802444458
    3. ' circular' → logprob: -16.000179290771484
    4. 'Circular' → logprob: -16.500179290771484
    5. '(' → logprob: -16.625179290771484
    6. '.circular' → logprob: -16.625179290771484
    7. '(C' → logprob: -17.625179290771484
    8. '(circle' → logprob: -17.750179290771484
    9. ' (' → logprob: -18.500179290771484
    10. '((' → logprob: -19.375179290771484

Token 621: 'ircular' (ID: 27245)
  Prédit: 'ircular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircular' → logprob: -1.3663626305060461e-05
    2. 'c' → logprob: -11.37501335144043
    3. '.circular' → logprob: -13.50001335144043
    4. 'icular' → logprob: -15.37501335144043
    5. '[' → logprob: -15.50001335144043
    6. 'cular' → logprob: -16.12501335144043
    7. '(c' → logprob: -16.37501335144043
    8. 'ir' → logprob: -17.00001335144043
    9. 'ircle' → logprob: -17.12501335144043
    10. '#' → logprob: -17.75001335144043

Token 622: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -8.77627644513268e-06
    2. 'st' → logprob: -12.125008583068848
    3. 'Stops' → logprob: -13.000008583068848
    4. ')' → logprob: -14.625008583068848
    5. 's' → logprob: -15.000008583068848
    6. '_stop' → logprob: -16.125009536743164
    7. ' stops' → logprob: -17.500009536743164
    8. '(st' → logprob: -18.000009536743164
    9. '   ' → logprob: -18.000009536743164
    10. '_sp' → logprob: -18.125009536743164

Token 623: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -4.6087021473795176e-05
    2. 'op' → logprob: -10.250045776367188
    3. 's' → logprob: -12.875045776367188
    4. 'ps' → logprob: -13.750045776367188
    5. '```' → logprob: -13.750045776367188
    6. '{' → logprob: -14.125045776367188
    7. 'ts' → logprob: -14.625045776367188
    8. '.ops' → logprob: -14.750045776367188
    9. '[' → logprob: -14.875045776367188
    10. 'os' → logprob: -14.875045776367188

Token 624: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.750001907348633
    3. '   ' → logprob: -15.750001907348633
    4. ' )' → logprob: -15.750001907348633
    5. '       ' → logprob: -16.875001907348633
    6. '))' → logprob: -17.875001907348633
    7. ')}' → logprob: -18.875001907348633
    8. '),' → logprob: -19.000001907348633
    9. ')

' → logprob: -19.375001907348633
    10. '}' → logprob: -19.875001907348633

Token 625: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43369197845458984
    2. 'def' → logprob: -1.0586919784545898
    3. '<|end|>' → logprob: -5.68369197845459
    4. ' def' → logprob: -6.55869197845459
    5. '```' → logprob: -9.18369197845459
    6. ' ' → logprob: -10.43369197845459
    7. '<|end|>' → logprob: -11.80869197845459
    8. '  ' → logprob: -12.30869197845459
    9. ')' → logprob: -12.55869197845459
    10. '
' → logprob: -12.68369197845459

Token 626: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011721156537532806
    2. '   ' → logprob: -5.136721134185791
    3. 'self' → logprob: -5.261721134185791
    4. ' def' → logprob: -8.38672161102295
    5. '#' (adapté à ' #') → logprob: -9.01172161102295
    6. '<|end|>' → logprob: -9.01172161102295
    7. '       ' → logprob: -9.76172161102295
    8. '```' → logprob: -10.26172161102295
    9. ' self' → logprob: -11.88672161102295
    10. '
' → logprob: -11.88672161102295

Token 627: ' Special' (ID: 12586)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2225133627653122
    2. 'self' → logprob: -1.9725133180618286
    3. 'def' → logprob: -3.222513437271118
    4. 'Create' → logprob: -4.472513198852539
    5. '       ' → logprob: -5.972513198852539
    6. 'Connect' → logprob: -6.097513198852539
    7. 'Define' → logprob: -7.097513198852539
    8. ' self' → logprob: -7.597513198852539
    9. ' #' → logprob: -7.597513198852539
    10. 'Add' → logprob: -7.847513198852539

Token 628: ' hand' (ID: 1803)
  Prédit: ' connection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connection' → logprob: -0.9159834980964661
    2. 'connection' → logprob: -0.9159834980964661
    3. 'connections' → logprob: -3.0409834384918213
    4. ' transfer' → logprob: -3.4159834384918213
    5. 'transfer' → logprob: -3.5409834384918213
    6. ' connections' → logprob: -4.2909836769104
    7. 'self' → logprob: -4.6659836769104
    8. 'link' → logprob: -4.7909836769104
    9. 'case' → logprob: -5.0409836769104
    10. ' self' → logprob: -5.4159836769104

Token 629: 'lings' (ID: 45539)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3981366455554962
    2. 'off' → logprob: -2.398136615753174
    3. 'ler' → logprob: -2.523136615753174
    4. 'over' → logprob: -2.773136615753174
    5. 'lers' → logprob: -3.148136615753174
    6. '       ' → logprob: -3.898136615753174
    7. 'shake' → logprob: -5.023136615753174
    8. 'les' → logprob: -5.148136615753174
    9. 'overs' → logprob: -5.148136615753174
    10. 'ling' → logprob: -5.273136615753174

Token 630: ':
' (ID: 734)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5637784004211426
    2. ' self' → logprob: -1.6887784004211426
    3. '#' → logprob: -1.8137784004211426
    4. '       ' → logprob: -1.8137784004211426
    5. ' for' → logprob: -1.8137784004211426
    6. ' #' → logprob: -2.4387784004211426
    7. ' at' → logprob: -4.813778400421143
    8. 'for' → logprob: -4.938778400421143
    9. '<|end|>' → logprob: -5.563778400421143
    10. ' with' → logprob: -6.438778400421143

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0226200632750988
    2. '#' → logprob: -3.8976199626922607
    3. 'self' → logprob: -6.52262020111084
    4. ' #' → logprob: -8.14762020111084
    5. ' self' → logprob: -8.27262020111084
    6. 'for' → logprob: -10.39762020111084
    7. ' for' → logprob: -10.89762020111084
    8. '   ' → logprob: -12.02262020111084
    9. '
' → logprob: -13.14762020111084
    10. '```' → logprob: -13.89762020111084

Token 632: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.45295968651771545
    2. '#' (adapté à ' #') → logprob: -1.077959656715393
    3. ' self' → logprob: -3.9529597759246826
    4. '       ' → logprob: -5.7029595375061035
    5. ' #' → logprob: -6.5779595375061035
    6. 'for' → logprob: -11.577960014343262
    7. 'linear' → logprob: -12.202960014343262
    8. ' ' → logprob: -12.702960014343262
    9. '5' → logprob: -12.702960014343262
    10. '   ' → logprob: -12.952960014343262

Token 633: ' At' (ID: 3604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5236469507217407
    2. '#' → logprob: -0.8986469507217407
    3. '       ' → logprob: -7.773646831512451
    4. ' self' → logprob: -9.52364730834961
    5. ' #' → logprob: -11.39864730834961
    6. '
' → logprob: -11.64864730834961
    7. '   ' → logprob: -13.77364730834961
    8. '#line' → logprob: -13.77364730834961
    9. 'for' → logprob: -14.02364730834961
    10. '        
' → logprob: -14.02364730834961

Token 634: ' stop' (ID: 5666)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.01722940243780613
    2. 'self' → logprob: -4.2672295570373535
    3. ' self' → logprob: -6.6422295570373535
    4. '0' → logprob: -6.8922295570373535
    5. ' ' → logprob: -7.6422295570373535
    6. 'stop' → logprob: -8.892229080200195
    7. '6' → logprob: -9.642229080200195
    8. ' stop' → logprob: -10.392229080200195
    9. 'linear' → logprob: -11.767229080200195
    10. '   ' → logprob: -12.267229080200195

Token 635: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.026117166504263878
    2. '0' → logprob: -3.9011170864105225
    3. ' ' → logprob: -5.276117324829102
    4. '(' → logprob: -7.901117324829102
    5. '6' → logprob: -10.901117324829102
    6. '   ' → logprob: -11.026117324829102
    7. 'self' → logprob: -11.151117324829102
    8. '[' → logprob: -11.901117324829102
    9. '
' → logprob: -12.276117324829102
    10. 's' → logprob: -12.651117324829102

Token 636: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.020604951307177544
    2. '0' → logprob: -3.8956048488616943
    3. ' ' → logprob: -10.145605087280273
    4. '4' → logprob: -11.020605087280273
    5. '6' → logprob: -12.770605087280273
    6. '9' → logprob: -12.895605087280273
    7. '
' → logprob: -14.395605087280273
    8. '   ' → logprob: -14.895605087280273
    9. '05' → logprob: -15.895605087280273
    10. '５' → logprob: -16.020605087280273

Token 637: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22083914279937744
    2. '       ' → logprob: -1.8458391427993774
    3. 'self' → logprob: -3.470839023590088
    4. ':' → logprob: -5.470839023590088
    5. '.' → logprob: -5.970839023590088
    6. ' self' → logprob: -7.220839023590088
    7. ':
' → logprob: -8.095839500427246
    8. '.connected' → logprob: -8.720839500427246
    9. '
' → logprob: -8.845839500427246
    10. '.self' → logprob: -9.220839500427246

Token 638: ' only' (ID: 1606)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.024879073724150658
    2. ' self' → logprob: -3.774878978729248
    3. '       ' → logprob: -6.524878978729248
    4. 'stop' → logprob: -9.899879455566406
    5. '#' → logprob: -10.274879455566406
    6. '
' → logprob: -10.524879455566406
    7. '0' → logprob: -10.899879455566406
    8. '   ' → logprob: -12.024879455566406
    9. 'linear' → logprob: -12.649879455566406
    10. '           ' → logprob: -12.774879455566406

Token 639: ' turnaround' (ID: 104366)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2702057659626007
    2. 'connected' → logprob: -2.0202057361602783
    3. ' self' → logprob: -2.8952057361602783
    4. ' connected' → logprob: -4.145205974578857
    5. 'forward' → logprob: -4.395205974578857
    6. 'linear' → logprob: -5.145205974578857
    7. 'one' → logprob: -5.645205974578857
    8. 'connect' → logprob: -5.645205974578857
    9. ' forward' → logprob: -6.270205974578857
    10. ' one' → logprob: -6.395205974578857

Token 640: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01514193695038557
    2. ' (' → logprob: -5.39014196395874
    3. '<|end|>' → logprob: -5.64014196395874
    4. '   ' → logprob: -6.76514196395874
    5. '
' → logprob: -7.01514196395874
    6. 'self' → logprob: -7.14014196395874
    7. ',' → logprob: -7.14014196395874
    8. ' #' → logprob: -7.14014196395874
    9. ' and' → logprob: -7.51514196395874
    10. '#' → logprob: -7.51514196395874

Token 641: ' no' (ID: 860)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.36367255449295044
    2. '#' → logprob: -1.8636724948883057
    3. '       ' → logprob: -2.1136724948883057
    4. ' self' → logprob: -3.7386724948883057
    5. ' #' → logprob: -5.613672733306885
    6. 'but' → logprob: -8.113672256469727
    7. ' but' → logprob: -8.238672256469727
    8. '
' → logprob: -8.488672256469727
    9. 'pass' → logprob: -8.863672256469727
    10. 'not' → logprob: -9.238672256469727

Token 642: ' backward' (ID: 58986)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.6774749159812927
    2. ' connected' → logprob: -1.0524749755859375
    3. 'forward' → logprob: -2.9274749755859375
    4. ' forward' → logprob: -3.6774749755859375
    5. ' backward' → logprob: -3.6774749755859375
    6. ' connection' → logprob: -3.9274749755859375
    7. 'connection' → logprob: -5.1774749755859375
    8. 'back' → logprob: -5.1774749755859375
    9. 'c' → logprob: -6.9274749755859375
    10. ' onward' → logprob: -7.4274749755859375

Token 643: ' stop' (ID: 5666)
  Prédit: ' connection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connection' → logprob: -0.16006812453269958
    2. ' link' → logprob: -3.0350680351257324
    3. ' connected' → logprob: -3.4100680351257324
    4. ' =' → logprob: -3.7850680351257324
    5. 'connection' → logprob: -4.160068035125732
    6. 'connected' → logprob: -5.535068035125732
    7. '_connected' → logprob: -5.910068035125732
    8. ' and' → logprob: -6.035068035125732
    9. ' stop' → logprob: -6.285068035125732
    10. ' connections' → logprob: -6.410068035125732

Token 644: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1145629808306694
    2. 'self' → logprob: -2.36456298828125
    3. ' self' → logprob: -4.36456298828125
    4. '<|end|>' → logprob: -6.61456298828125
    5. '
' → logprob: -9.11456298828125
    6. ',' → logprob: -10.36456298828125
    7. '   ' → logprob: -11.98956298828125
    8. '```' → logprob: -12.11456298828125
    9. '(self' → logprob: -12.36456298828125
    10. '0' → logprob: -12.36456298828125

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017682626843452454
    2. '
' → logprob: -4.3926825523376465
    3. '<|end|>' → logprob: -5.3926825523376465
    4. ',' → logprob: -8.892683029174805
    5. '        
' → logprob: -9.392683029174805
    6. 'self' → logprob: -9.517683029174805
    7. ' self' → logprob: -9.642683029174805
    8. '#' → logprob: -10.017683029174805
    9. '   ' → logprob: -10.267683029174805
    10. '.' → logprob: -10.642683029174805

Token 646: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018220528960227966
    2. '       ' → logprob: -4.2682204246521
    3. ' self' → logprob: -5.5182204246521
    4. '#' → logprob: -10.768220901489258
    5. 'stop' → logprob: -12.268220901489258
    6. 'for' → logprob: -12.643220901489258
    7. '
' → logprob: -13.268220901489258
    8. '   ' → logprob: -13.518220901489258
    9. '	self' → logprob: -14.018220901489258
    10. '<|end|>' → logprob: -14.393220901489258

Token 647: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.00010807292710524052
    2. '.' → logprob: -9.500107765197754
    3. '.linear' → logprob: -10.500107765197754
    4. '.s' → logprob: -13.625107765197754
    5. '.stop' → logprob: -13.750107765197754
    6. ' .' → logprob: -14.000107765197754
    7. '.self' → logprob: -14.375107765197754
    8. '.lines' → logprob: -15.500107765197754
    9. '.St' → logprob: -16.12510871887207
    10. 'self' → logprob: -16.12510871887207

Token 648: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0003066222125198692
    2. 'op' → logprob: -8.500307083129883
    3. '.ops' → logprob: -9.500307083129883
    4. 'arts' → logprob: -11.250307083129883
    5. '#' → logprob: -12.625307083129883
    6. '   ' → logprob: -13.250307083129883
    7. 'ps' → logprob: -13.375307083129883
    8. '.' → logprob: -13.625307083129883
    9. '       ' → logprob: -14.000307083129883
    10. '```' → logprob: -14.125307083129883

Token 649: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.180258191714529e-06
    2. '0' → logprob: -11.875008583068848
    3. '\[' → logprob: -14.625008583068848
    4. ' [' → logprob: -15.250008583068848
    5. '```' → logprob: -15.750008583068848
    6. ')[' → logprob: -16.25000762939453
    7. '   ' → logprob: -16.75000762939453
    8. '
' → logprob: -17.12500762939453
    9. '}[' → logprob: -17.12500762939453
    10. '#' → logprob: -17.62500762939453

Token 650: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.625001907348633
    4. '[' → logprob: -18.000001907348633
    5. '```' → logprob: -18.500001907348633
    6. '`' → logprob: -19.125001907348633
    7. '1' → logprob: -19.562501907348633
    8. '  ' → logprob: -19.937501907348633
    9. '۰' → logprob: -19.937501907348633
    10. '    ' → logprob: -20.437501907348633

Token 651: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.020629707723855972
    2. '.connected' → logprob: -3.895629644393921
    3. '.' → logprob: -9.6456298828125
    4. ']' → logprob: -11.0206298828125
    5. 'connected' → logprob: -13.1456298828125
    6. '}.' → logprob: -13.3956298828125
    7. ' ].' → logprob: -13.6456298828125
    8. '"].' → logprob: -14.5206298828125
    9. ').' → logprob: -14.6456298828125
    10. ' connected' → logprob: -15.0206298828125

Token 652: 'connected' (ID: 26297)
  Prédit: 'connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -7.896309739408025e-07
    2. ' connected' → logprob: -14.375000953674316
    3. '.connected' → logprob: -16.5
    4. '_connected' → logprob: -17.125
    5. 'linked' → logprob: -17.25
    6. 'number' → logprob: -17.875
    7. 'attached' → logprob: -19.5
    8. '
' → logprob: -20.125
    9. '   ' → logprob: -20.375
    10. '-connected' → logprob: -20.75

Token 653: '_forward' (ID: 75888)
  Prédit: '_backward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -0.011057372204959393
    2. '_forward' → logprob: -4.511057376861572
    3. '_' → logprob: -11.761056900024414
    4. '_back' → logprob: -13.636056900024414
    5. '.backward' → logprob: -16.261056900024414
    6. 'Backward' → logprob: -16.511056900024414
    7. '=' → logprob: -16.636056900024414
    8. '__' → logprob: -16.761056900024414
    9. '=_' → logprob: -17.136056900024414
    10. '_none' → logprob: -17.261056900024414

Token 654: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026327935978770256
    2. ' =' → logprob: -3.6513278484344482
    3. '=None' → logprob: -10.776328086853027
    4. '=self' → logprob: -12.276328086853027
    5. '.' → logprob: -14.151328086853027
    6. '   ' → logprob: -15.151328086853027
    7. '<|end|>' → logprob: -15.276328086853027
    8. 'self' → logprob: -15.651328086853027
    9. ',' → logprob: -16.15132713317871
    10. ' ' → logprob: -16.52632713317871

Token 655: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016563729150220752
    2. 'linear' → logprob: -9.000165939331055
    3. 'None' → logprob: -10.125165939331055
    4. '0' → logprob: -13.500165939331055
    5. ' self' → logprob: -14.625165939331055
    6. 'line' → logprob: -15.750165939331055
    7. 'st' → logprob: -16.625165939331055
    8. '1' → logprob: -17.000165939331055
    9. '	self' → logprob: -17.625165939331055
    10. 'none' → logprob: -18.000165939331055

Token 656: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -5.5027299822540954e-05
    2. '0' → logprob: -10.500055313110352
    3. '.' → logprob: -11.000055313110352
    4. 'st' → logprob: -12.375055313110352
    5. '.s' → logprob: -14.000055313110352
    6. ' .' → logprob: -14.250055313110352
    7. '	st' → logprob: -14.500055313110352
    8. ' ' → logprob: -14.750055313110352
    9. 'None' → logprob: -14.750055313110352
    10. '.stop' → logprob: -14.875055313110352

Token 657: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -3.292907877039397e-06
    2. 'op' → logprob: -13.25000286102295
    3. 'ps' → logprob: -13.62500286102295
    4. '.ops' → logprob: -15.87500286102295
    5. 's' → logprob: -17.250003814697266
    6. '```' → logprob: -17.875003814697266
    7. '#' → logprob: -18.000003814697266
    8. '[' → logprob: -18.125003814697266
    9. 'os' → logprob: -18.125003814697266
    10. '0' → logprob: -18.250003814697266

Token 658: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20281173288822174
    2. '1' → logprob: -1.7028117179870605
    3. '0' → logprob: -6.5778117179870605
    4. ' ' → logprob: -12.827812194824219
    5. '   ' → logprob: -13.327812194824219
    6. ' [' → logprob: -14.202812194824219
    7. '[
' → logprob: -14.952812194824219
    8. '=' → logprob: -15.702812194824219
    9. '5' → logprob: -15.702812194824219
    10. '(' → logprob: -15.702812194824219

Token 659: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08916584402322769
    2. '0' → logprob: -2.4641659259796143
    3. '5' → logprob: -8.464165687561035
    4. '```' → logprob: -12.714165687561035
    5. ' ' → logprob: -12.776665687561035
    6. '
' → logprob: -12.964165687561035
    7. '   ' → logprob: -13.401665687561035
    8. ']' → logprob: -14.276665687561035
    9. '

' → logprob: -14.401665687561035
    10. '6' → logprob: -14.901665687561035

Token 660: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5414838194847107
    2. ']' → logprob: -0.9164838194847107
    3. ')
' → logprob: -5.0414838790893555
    4. ')' → logprob: -5.2914838790893555
    5. '       ' → logprob: -5.2914838790893555
    6. '<|end|>' → logprob: -7.2914838790893555
    7. '0' → logprob: -8.541483879089355
    8. '
' → logprob: -8.791483879089355
    9. '   ' → logprob: -9.166483879089355
    10. ']

' → logprob: -9.291483879089355

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29626524448394775
    2. '<|end|>' → logprob: -1.5462652444839478
    3. 'self' → logprob: -3.421265125274658
    4. ' self' → logprob: -4.671265125274658
    5. '<|end|>' → logprob: -8.171265602111816
    6. '
' → logprob: -8.421265602111816
    7. '        
' → logprob: -8.921265602111816
    8. '```' → logprob: -8.921265602111816
    9. '[self' → logprob: -9.046265602111816
    10. '   ' → logprob: -9.046265602111816

Token 662: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0018382027046754956
    2. '       ' → logprob: -6.501838207244873
    3. ' self' → logprob: -8.001837730407715
    4. '   ' → logprob: -14.876837730407715
    5. '	self' → logprob: -14.876837730407715
    6. '<|end|>' → logprob: -16.87683868408203
    7. '        
' → logprob: -17.00183868408203
    8. '
' → logprob: -17.25183868408203
    9. '```' → logprob: -17.25183868408203
    10. '[self' → logprob: -17.37683868408203

Token 663: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0015575934667140245
    2. '.' → logprob: -6.50155782699585
    3. ' .' → logprob: -10.376557350158691
    4. '.s' → logprob: -11.626557350158691
    5. '[' → logprob: -12.376557350158691
    6. ' stops' → logprob: -12.626557350158691
    7. '.stop' → logprob: -13.501557350158691
    8. '.user' → logprob: -13.501557350158691
    9. 'st' → logprob: -13.876557350158691
    10. '0' → logprob: -14.001557350158691

Token 664: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -5.676981345459353e-06
    2. 'op' → logprob: -12.750005722045898
    3. '.ops' → logprob: -13.875005722045898
    4. ' ops' → logprob: -14.125005722045898
    5. 'ps' → logprob: -15.375005722045898
    6. '0' → logprob: -15.500005722045898
    7. '#' → logprob: -16.2500057220459
    8. '_ops' → logprob: -16.3750057220459
    9. 'os' → logprob: -16.5000057220459
    10. '{' → logprob: -16.7500057220459

Token 665: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -13.25000286102295
    3. ' [' → logprob: -15.37500286102295
    4. '       ' → logprob: -15.62500286102295
    5. '][' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.125003814697266
    7. '#' → logprob: -16.625003814697266
    8. '\[' → logprob: -16.875003814697266
    9. '[
' → logprob: -17.000003814697266
    10. 's' → logprob: -17.000003814697266

Token 666: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -11.250021934509277
    3. '1' → logprob: -11.875021934509277
    4. '5' → logprob: -13.625021934509277
    5. '   ' → logprob: -15.750021934509277
    6. '6' → logprob: -15.750021934509277
    7. '  ' → logprob: -16.43752098083496
    8. '۰' → logprob: -17.31252098083496
    9. '    ' → logprob: -17.37502098083496
    10. '[' → logprob: -17.43752098083496

Token 667: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.580929347255733e-05
    2. ']' → logprob: -11.750016212463379
    3. '.' → logprob: -12.000016212463379
    4. ' ].' → logprob: -13.500016212463379
    5. '.connected' → logprob: -15.750016212463379
    6. '}.' → logprob: -16.125015258789062
    7. ']._' → logprob: -16.625015258789062
    8. ']
' → logprob: -17.375015258789062
    9. '"].' → logprob: -18.125015258789062
    10. ''].' → logprob: -18.125015258789062

Token 668: 'connected' (ID: 26297)
  Prédit: 'connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -3.1782583391759545e-05
    2. ' connected' → logprob: -10.375031471252441
    3. '.connected' → logprob: -14.875031471252441
    4. '_connected' → logprob: -16.000032424926758
    5. '
' → logprob: -18.125032424926758
    6. '-connected' → logprob: -19.000032424926758
    7. 'CONNECTED' → logprob: -19.875032424926758
    8. 'conn' → logprob: -20.125032424926758
    9. 'Connected' → logprob: -20.250032424926758
    10. 'con' → logprob: -20.500032424926758

Token 669: '_backward' (ID: 185673)
  Prédit: '_backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_backward' → logprob: -1.4378848391061183e-05
    2. '_forward' → logprob: -11.375014305114746
    3. '_back' → logprob: -13.125014305114746
    4. 'Backward' → logprob: -15.375014305114746
    5. '.backward' → logprob: -15.375014305114746
    6. '_' → logprob: -15.500014305114746
    7. '_backup' → logprob: -15.625014305114746
    8. 'back' → logprob: -17.000015258789062
    9. '=' → logprob: -17.500015258789062
    10. '```' → logprob: -17.750015258789062

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47444337606430054
    2. '=' → logprob: -0.9744433760643005
    3. '=None' → logprob: -7.974443435668945
    4. 'None' → logprob: -10.974443435668945
    5. ' None' → logprob: -12.474443435668945
    6. ' ' → logprob: -13.974443435668945
    7. '(None' → logprob: -16.224443435668945
    8. ' is' → logprob: -16.974443435668945
    9. '=null' → logprob: -17.474443435668945
    10. '<|end|>' → logprob: -17.599443435668945

Token 671: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002398938377154991
    2. 'self' → logprob: -8.375240325927734
    3. ' None' → logprob: -11.625240325927734
    4. 'none' → logprob: -15.375240325927734
    5. '(None' → logprob: -17.250240325927734
    6. '
' → logprob: -17.250240325927734
    7. '=None' → logprob: -18.125240325927734
    8. '   ' → logprob: -18.250240325927734
    9. '0' → logprob: -18.250240325927734
    10. '_None' → logprob: -18.375240325927734

Token 672: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7538446187973022
    2. '<|end|>' → logprob: -0.7538446187973022
    3. '   ' → logprob: -3.753844738006592
    4. 'self' → logprob: -3.753844738006592
    5. ')' → logprob: -5.378844738006592
    6. '
' → logprob: -5.753844738006592
    7. '```' → logprob: -7.003844738006592
    8. '<|end|>' → logprob: -7.003844738006592
    9. ' self' → logprob: -7.253844738006592
    10. 'n' → logprob: -8.128844261169434

Token 674: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25445786118507385
    2. 'self' → logprob: -2.379457950592041
    3. '<|end|>' → logprob: -2.879457950592041
    4. '#' (adapté à ' #') → logprob: -3.379457950592041
    5. ')' → logprob: -3.504457950592041
    6. '   ' → logprob: -4.879457950592041
    7. '```' → logprob: -6.504457950592041
    8. ' self' → logprob: -7.254457950592041
    9. '<|end|>' → logprob: -7.629457950592041
    10. '}' → logprob: -8.629457473754883

Token 675: ' At' (ID: 3604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49068325757980347
    2. '#' → logprob: -0.9906832575798035
    3. 'At' → logprob: -4.240683078765869
    4. '       ' → logprob: -6.490683078765869
    5. '   ' → logprob: -8.740683555603027
    6. 'def' → logprob: -8.990683555603027
    7. 'at' → logprob: -9.865683555603027
    8. ' at' → logprob: -9.990683555603027
    9. '0' → logprob: -10.115683555603027
    10. 'The' → logprob: -10.615683555603027

Token 676: ' stop' (ID: 5666)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017032064497470856
    2. ' self' → logprob: -4.392032146453857
    3. '5' → logprob: -5.517032146453857
    4. 'stop' → logprob: -8.1420316696167
    5. '0' → logprob: -8.8920316696167
    6. ' stop' → logprob: -11.1420316696167
    7. '6' → logprob: -11.2670316696167
    8. '   ' → logprob: -11.6420316696167
    9. ' ' → logprob: -12.1420316696167
    10. '(self' → logprob: -12.3920316696167

Token 677: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0019098350312560797
    2. ' ' → logprob: -7.1269097328186035
    3. '[' → logprob: -7.1269097328186035
    4. 'self' → logprob: -9.626910209655762
    5. '   ' → logprob: -9.876910209655762
    6. '9' → logprob: -10.001910209655762
    7. '0' → logprob: -10.126910209655762
    8. '=' → logprob: -10.126910209655762
    9. '1' → logprob: -11.001910209655762
    10. '(' → logprob: -11.376910209655762

Token 678: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.003483896842226386
    2. '0' → logprob: -5.878483772277832
    3. '9' → logprob: -7.878483772277832
    4. '1' → logprob: -8.628483772277832
    5. '6' → logprob: -9.503483772277832
    6. 'self' → logprob: -10.378483772277832
    7. ' ' → logprob: -11.690983772277832
    8. '10' → logprob: -13.440983772277832
    9. '4' → logprob: -13.628483772277832
    10. '```' → logprob: -13.753483772277832

Token 679: ':' (ID: 25)
  Prédit: '.connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -0.030166389420628548
    2. '.' → logprob: -3.5301663875579834
    3. '.self' → logprob: -8.280166625976562
    4. 'self' → logprob: -9.905166625976562
    5. 'connected' → logprob: -10.030166625976562
    6. ':' → logprob: -11.030166625976562
    7. ' connected' → logprob: -11.405166625976562
    8. '   ' → logprob: -11.905166625976562
    9. '.st' → logprob: -12.280166625976562
    10. ':
' → logprob: -12.280166625976562

Token 680: ' belongs' (ID: 33063)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005328982137143612
    2. ' self' → logprob: -5.255329132080078
    3. '#' → logprob: -11.005329132080078
    4. 'linear' → logprob: -11.005329132080078
    5. 'connected' → logprob: -11.255329132080078
    6. 'line' → logprob: -11.505329132080078
    7. '       ' → logprob: -11.630329132080078
    8. 'None' → logprob: -11.630329132080078
    9. 'c' → logprob: -12.380329132080078
    10. '   ' → logprob: -13.005329132080078

Token 681: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.018674956634640694
    2. ' to' → logprob: -4.018674850463867
    3. 'both' → logprob: -7.768674850463867
    4. '_to' → logprob: -9.893674850463867
    5. ' both' → logprob: -10.143674850463867
    6. '=' → logprob: -11.893674850463867
    7. 'To' → logprob: -12.768674850463867
    8. 'self' → logprob: -14.268674850463867
    9. '   ' → logprob: -14.893674850463867
    10. '	to' → logprob: -15.018674850463867

Token 682: ' both' (ID: 2973)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11271175742149353
    2. 'c' → logprob: -2.4877116680145264
    3. 'both' → logprob: -3.9877116680145264
    4. 'linear' → logprob: -5.4877119064331055
    5. ' self' → logprob: -7.9877119064331055
    6. ' both' → logprob: -8.237711906433105
    7. ' circular' → logprob: -9.487711906433105
    8. '[self' → logprob: -9.987711906433105
    9. 'line' → logprob: -10.737711906433105
    10. 'None' → logprob: -10.987711906433105

Token 683: ' linear' (ID: 23876)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.683142364025116
    2. 'routes' → logprob: -1.3081424236297607
    3. 'linear' → logprob: -1.6831424236297607
    4. ' routes' → logprob: -3.6831424236297607
    5. ' linear' → logprob: -5.433142185211182
    6. ' self' → logprob: -5.558142185211182
    7. 'lines' → logprob: -6.058142185211182
    8. 'c' → logprob: -6.308142185211182
    9. '.linear' → logprob: -7.558142185211182
    10. '.routes' → logprob: -8.68314266204834

Token 684: ' and' (ID: 326)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.6031951308250427
    2. 'and' → logprob: -1.3531951904296875
    3. 'segment' → logprob: -2.6031951904296875
    4. ' and' → logprob: -2.6031951904296875
    5. '_route' → logprob: -3.2281951904296875
    6. ' route' → logprob: -5.6031951904296875
    7. 'line' → logprob: -6.7281951904296875
    8. ' segment' → logprob: -7.2281951904296875
    9. '_segment' → logprob: -7.4781951904296875
    10. '   ' → logprob: -9.228195190429688

Token 685: ' circular' (ID: 37626)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015202185604721308
    2. ' circular' → logprob: -6.501520156860352
    3. '.circular' → logprob: -11.251520156860352
    4. 'ircular' → logprob: -13.501520156860352
    5. 'Circular' → logprob: -13.626520156860352
    6. 'circle' → logprob: -13.751520156860352
    7. 'self' → logprob: -14.626520156860352
    8. 'cir' → logprob: -14.751520156860352
    9. 'circ' → logprob: -15.501520156860352
    10. ')c' → logprob: -16.00152015686035

Token 686: ' routes' (ID: 19749)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35250717401504517
    2. ' self' → logprob: -1.3525071144104004
    3. ' stops' → logprob: -4.6025071144104
    4. ' routes' → logprob: -4.7275071144104
    5. '       ' → logprob: -4.8525071144104
    6. '   ' → logprob: -6.3525071144104
    7. 'route' → logprob: -6.4775071144104
    8. ',' → logprob: -6.6025071144104
    9. 'routes' → logprob: -6.6025071144104
    10. 'stop' → logprob: -7.4775071144104

Token 687: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07500123977661133
    2. 'self' → logprob: -2.7000012397766113
    3. ' self' → logprob: -5.950001239776611
    4. '
' → logprob: -6.950001239776611
    5. ',' → logprob: -7.450001239776611
    6. '<|end|>' → logprob: -7.825001239776611
    7. ' =' → logprob: -8.825000762939453
    8. '#' → logprob: -9.450000762939453
    9. ' and' → logprob: -10.200000762939453
    10. '        
' → logprob: -10.200000762939453

Token 688: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6513490080833435
    2. '       ' → logprob: -0.7763490080833435
    3. ' self' → logprob: -4.026349067687988
    4. '
' → logprob: -8.401349067687988
    5. '#' → logprob: -8.651349067687988
    6. ',' → logprob: -9.151349067687988
    7. '<|end|>' → logprob: -9.651349067687988
    8. '   ' → logprob: -9.901349067687988
    9. '```' → logprob: -11.026349067687988
    10. ')' → logprob: -11.401349067687988

Token 689: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000555416801944375
    2. ' self' → logprob: -7.750555515289307
    3. '#' (adapté à ' #') → logprob: -9.500555038452148
    4. '       ' → logprob: -10.250555038452148
    5. 'stop' → logprob: -11.500555038452148
    6. 'linear' → logprob: -14.000555038452148
    7. 'bus' → logprob: -14.125555038452148
    8. 'line' → logprob: -14.500555038452148
    9. '```' → logprob: -14.750555038452148
    10. 'for' → logprob: -15.125555038452148

Token 690: ' For' (ID: 2214)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019957784563302994
    2. '#' → logprob: -4.019958019256592
    3. ' self' → logprob: -6.394958019256592
    4. 'stop' → logprob: -9.769957542419434
    5. '       ' → logprob: -9.894957542419434
    6. ' #' → logprob: -11.269957542419434
    7. 'pass' → logprob: -13.019957542419434
    8. 'The' → logprob: -13.769957542419434
    9. '   ' → logprob: -13.769957542419434
    10. 'This' → logprob: -13.894957542419434

Token 691: ' linear' (ID: 23876)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009659519419074059
    2. 'stop' → logprob: -5.009659290313721
    3. ' self' → logprob: -6.509659290313721
    4. 'linear' → logprob: -7.759659290313721
    5. '5' → logprob: -8.259659767150879
    6. '#' → logprob: -8.634659767150879
    7. 'the' → logprob: -8.759659767150879
    8. 'line' → logprob: -9.009659767150879
    9. 'bus' → logprob: -9.634659767150879
    10. ' stop' → logprob: -10.259659767150879

Token 692: ' route' (ID: 9656)
  Prédit: '_route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.32392650842666626
    2. 'route' → logprob: -1.4489264488220215
    3. ' route' → logprob: -4.1989264488220215
    4. 'self' → logprob: -4.3239264488220215
    5. 'st' → logprob: -4.9489264488220215
    6. '_st' → logprob: -5.6989264488220215
    7. '_stop' → logprob: -7.3239264488220215
    8. 'stop' → logprob: -7.4489264488220215
    9. ' stops' → logprob: -7.9489264488220215
    10. 'segment' → logprob: -8.44892692565918

Token 693: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03479630500078201
    2. ',' → logprob: -4.159796237945557
    3. ' self' → logprob: -4.284796237945557
    4. '       ' → logprob: -5.659796237945557
    5. ' stops' → logprob: -7.659796237945557
    6. 'linear' → logprob: -8.534796714782715
    7. ':' → logprob: -9.284796714782715
    8. 's' → logprob: -9.534796714782715
    9. '#' → logprob: -9.534796714782715
    10. ''s' → logprob: -10.034796714782715

Token 694: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05820111930370331
    2. ',' → logprob: -3.0582010746002197
    3. ' self' → logprob: -6.183201313018799
    4. ':' → logprob: -6.808201313018799
    5. 'the' → logprob: -6.933201313018799
    6. '5' → logprob: -7.308201313018799
    7. 'connected' → logprob: -7.308201313018799
    8. 'stop' → logprob: -7.433201313018799
    9. ' stops' → logprob: -7.558201313018799
    10. 'st' → logprob: -7.683201313018799

Token 695: ' connected' (ID: 12079)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6235662698745728
    2. '.connected' → logprob: -0.9985662698745728
    3. '.' → logprob: -2.873566150665283
    4. 'connected' → logprob: -3.998566150665283
    5. ':' → logprob: -4.248566150665283
    6. 'self' → logprob: -6.248566150665283
    7. ' connected' → logprob: -6.623566150665283
    8. '.stop' → logprob: -6.873566150665283
    9. '.st' → logprob: -7.748566150665283
    10. ''s' → logprob: -7.998566150665283

Token 696: ' backward' (ID: 58986)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.6937243342399597
    2. '_backward' → logprob: -0.6937243342399597
    3. '_to' → logprob: -7.818724155426025
    4. '_' → logprob: -9.693724632263184
    5. '_back' → logprob: -10.068724632263184
    6. '_linear' → logprob: -10.693724632263184
    7. 'to' → logprob: -10.818724632263184
    8. 'forward' → logprob: -12.443724632263184
    9. '.backward' → logprob: -12.693724632263184
    10. 'Backward' → logprob: -13.193724632263184

Token 697: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026682013645768166
    2. '=' → logprob: -3.651681900024414
    3. '<|end|>' → logprob: -9.151681900024414
    4. '=self' → logprob: -9.651681900024414
    5. ':' → logprob: -10.151681900024414
    6. 'self' → logprob: -10.151681900024414
    7. ' is' → logprob: -10.526681900024414
    8. ',' → logprob: -10.526681900024414
    9. ' and' → logprob: -10.901681900024414
    10. ' to' → logprob: -11.026681900024414

Token 698: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05603780969977379
    2. '4' → logprob: -2.9310379028320312
    3. ' self' → logprob: -6.931037902832031
    4. 'st' → logprob: -8.806037902832031
    5. '   ' → logprob: -11.306037902832031
    6. '5' → logprob: -11.681037902832031
    7. ' ' → logprob: -12.556037902832031
    8. '	self' → logprob: -13.431037902832031
    9. 'stop' → logprob: -14.681037902832031
    10. '       ' → logprob: -14.931037902832031

Token 699: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04507390409708023
    2. 'self' → logprob: -3.170073986053467
    3. 'st' → logprob: -6.295073986053467
    4. ' self' → logprob: -8.920073509216309
    5. ' ' → logprob: -9.420073509216309
    6. '5' → logprob: -11.795073509216309
    7. '   ' → logprob: -14.420073509216309
    8. 'stop' → logprob: -14.545073509216309
    9. 'four' → logprob: -14.545073509216309
    10. '.st' → logprob: -14.795073509216309

Token 700: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022229790687561035
    2. 'self' → logprob: -4.5222296714782715
    3. ' and' → logprob: -5.1472296714782715
    4. ',' → logprob: -5.6472296714782715
    5. '
' → logprob: -7.1472296714782715
    6. 'and' → logprob: -7.3972296714782715
    7. ' self' → logprob: -9.14723014831543
    8. ',
' → logprob: -10.02223014831543
    9. '<|end|>' → logprob: -10.02223014831543
    10. '.' → logprob: -10.14723014831543

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047415029257535934
    2. 'self' → logprob: -5.879741668701172
    3. ' and' → logprob: -6.629741668701172
    4. ',' → logprob: -7.879741668701172
    5. 'and' → logprob: -8.629741668701172
    6. ' self' → logprob: -10.879741668701172
    7. '
' → logprob: -11.129741668701172
    8. '```' → logprob: -11.754741668701172
    9. '   ' → logprob: -12.504741668701172
    10. '           ' → logprob: -12.754741668701172

Token 702: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5769270062446594
    2. '       ' → logprob: -0.8269270062446594
    3. ' self' → logprob: -6.951927185058594
    4. '
' → logprob: -11.201927185058594
    5. '```' → logprob: -11.826927185058594
    6. '   ' → logprob: -13.076927185058594
    7. ',' → logprob: -13.076927185058594
    8. '        
' → logprob: -13.201927185058594
    9. '           ' → logprob: -14.326927185058594
    10. '[self' → logprob: -14.576927185058594

Token 703: ' For' (ID: 2214)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6372085809707642
    2. '       ' → logprob: -0.7622085809707642
    3. ' self' → logprob: -5.387208461761475
    4. '   ' → logprob: -12.012208938598633
    5. '        
' → logprob: -12.762208938598633
    6. '           ' → logprob: -13.012208938598633
    7. '```' → logprob: -13.012208938598633
    8. '
' → logprob: -13.262208938598633
    9. '#' → logprob: -13.387208938598633
    10. ',' → logprob: -13.512208938598633

Token 704: ' circular' (ID: 37626)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15314923226833344
    2. 'stop' → logprob: -2.903149127960205
    3. ' self' → logprob: -3.278149127960205
    4. '5' → logprob: -3.528149127960205
    5. 'c' → logprob: -4.403149127960205
    6. ' stop' → logprob: -5.528149127960205
    7. ' circular' → logprob: -6.778149127960205
    8. 'linear' → logprob: -7.403149127960205
    9. 'the' → logprob: -7.528149127960205
    10. 'Bus' → logprob: -8.028149604797363

Token 705: ' route' (ID: 9656)
  Prédit: '_route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.12178420275449753
    2. 'route' → logprob: -2.246784210205078
    3. ' route' → logprob: -5.371784210205078
    4. 'stop' → logprob: -5.996784210205078
    5. '_stop' → logprob: -6.871784210205078
    6. '5' → logprob: -8.371784210205078
    7. 'Route' → logprob: -8.746784210205078
    8. ' stop' → logprob: -9.496784210205078
    9. 'st' → logprob: -9.871784210205078
    10. 'self' → logprob: -10.246784210205078

Token 706: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0603310726583004
    2. ' ' → logprob: -3.060331106185913
    3. 'self' → logprob: -4.685330867767334
    4. ' self' → logprob: -6.935330867767334
    5. ',' → logprob: -7.435330867767334
    6. ' stops' → logprob: -7.935330867767334
    7. 'stop' → logprob: -8.935331344604492
    8. ' stop' → logprob: -9.685331344604492
    9. ' five' → logprob: -10.185331344604492
    10. 'connected' → logprob: -10.185331344604492

Token 707: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2574331760406494
    2. 'self' → logprob: -1.5074331760406494
    3. 'connected' → logprob: -6.25743293762207
    4. 'stop' → logprob: -6.38243293762207
    5. ' self' → logprob: -7.38243293762207
    6. '#' → logprob: -8.50743293762207
    7. 'None' → logprob: -8.50743293762207
    8. ' ' → logprob: -8.88243293762207
    9. ' stops' → logprob: -9.25743293762207
    10. 'The' → logprob: -9.63243293762207

Token 708: ' connected' (ID: 12079)
  Prédit: '.connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.connected' → logprob: -0.010460149496793747
    2. '.' → logprob: -4.885460376739502
    3. 'connected' → logprob: -6.010460376739502
    4. '.st' → logprob: -9.135459899902344
    5. ' connected' → logprob: -9.385459899902344
    6. '.stop' → logprob: -9.635459899902344
    7. ''s' → logprob: -10.510459899902344
    8. '.has' → logprob: -10.635459899902344
    9. ':' → logprob: -11.260459899902344
    10. ' has' → logprob: -11.635459899902344

Token 709: ' forward' (ID: 6687)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.0015711607411503792
    2. '_backward' → logprob: -6.501571178436279
    3. 'forward' → logprob: -9.626570701599121
    4. '_' → logprob: -13.501570701599121
    5. '_connected' → logprob: -14.001570701599121
    6. ' forward' → logprob: -15.251570701599121
    7. '_back' → logprob: -16.001571655273438
    8. '_FORWARD' → logprob: -16.251571655273438
    9. '_to' → logprob: -16.876571655273438
    10. 'Forward' → logprob: -17.751571655273438

Token 710: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026813743636012077
    2. '=' → logprob: -3.6518137454986572
    3. ' to' → logprob: -7.651813507080078
    4. ' ' → logprob: -11.276813507080078
    5. 'to' → logprob: -11.276813507080078
    6. '   ' → logprob: -12.901813507080078
    7. '=self' → logprob: -12.901813507080078
    8. '<|end|>' → logprob: -13.651813507080078
    9. 'self' → logprob: -14.026813507080078
    10. ' is' → logprob: -14.151813507080078

Token 711: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3522397577762604
    2. '6' → logprob: -1.227239727973938
    3. ' self' → logprob: -5.602239608764648
    4. ' ' → logprob: -9.602239608764648
    5. '	self' → logprob: -11.602239608764648
    6. '   ' → logprob: -11.852239608764648
    7. 'six' → logprob: -12.602239608764648
    8. '=self' → logprob: -13.102239608764648
    9. '7' → logprob: -13.352239608764648
    10. 'c' → logprob: -13.789739608764648

Token 712: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.16049422323703766
    2. 'self' → logprob: -1.9104942083358765
    3. ' self' → logprob: -8.410493850708008
    4. ' ' → logprob: -10.160493850708008
    5. '	self' → logprob: -13.035493850708008
    6. 'six' → logprob: -13.035493850708008
    7. '7' → logprob: -14.410493850708008
    8. '=self' → logprob: -14.535493850708008
    9. '   ' → logprob: -15.035493850708008
    10. '[self' → logprob: -15.222993850708008

Token 713: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029453709721565247
    2. 'self' → logprob: -6.002945423126221
    3. ',' → logprob: -8.502944946289062
    4. '
' → logprob: -9.002944946289062
    5. '<|end|>' → logprob: -10.252944946289062
    6. '        
' → logprob: -10.502944946289062
    7. ' and' → logprob: -10.627944946289062
    8. ' self' → logprob: -10.752944946289062
    9. '.' → logprob: -11.377944946289062
    10. 'and' → logprob: -12.627944946289062

Token 714: ' backward' (ID: 58986)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7985023856163025
    2. 'c' → logprob: -1.7985024452209473
    3. 'connected' → logprob: -1.7985024452209473
    4. ' connected' → logprob: -2.2985024452209473
    5. ' ' → logprob: -3.1735024452209473
    6. 'back' → logprob: -3.1735024452209473
    7. ' backward' → logprob: -4.048502445220947
    8. ' circular' → logprob: -4.798502445220947
    9. '4' → logprob: -5.923502445220947
    10. '9' → logprob: -6.923502445220947

Token 715: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2523314356803894
    2. 'to' → logprob: -1.5023314952850342
    3. ' connected' → logprob: -8.627331733703613
    4. 'connected' → logprob: -9.252331733703613
    5. '=' → logprob: -9.627331733703613
    6. ' =' → logprob: -10.252331733703613
    7. '5' → logprob: -11.752331733703613
    8. '<|end|>' → logprob: -12.252331733703613
    9. '_to' → logprob: -12.502331733703613
    10. ' ' → logprob: -12.627331733703613

Token 716: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.01033084373921156
    2. '4' → logprob: -4.760330677032471
    3. ' ' → logprob: -6.385330677032471
    4. '0' → logprob: -10.885331153869629
    5. 'self' → logprob: -11.885331153869629
    6. '10' → logprob: -13.260331153869629
    7. '   ' → logprob: -14.135331153869629
    8. ' self' → logprob: -14.760331153869629
    9. 'c' → logprob: -17.260330200195312
    10. 'linear' → logprob: -17.260330200195312

Token 717: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.2987729102605954e-05
    2. '4' → logprob: -10.375042915344238
    3. ' ' → logprob: -12.000042915344238
    4. '0' → logprob: -12.250042915344238
    5. 'self' → logprob: -14.125042915344238
    6. '   ' → logprob: -17.875043869018555
    7. '９' → logprob: -18.125043869018555
    8. '10' → logprob: -18.625043869018555
    9. '۹' → logprob: -18.750043869018555
    10. ' self' → logprob: -18.812543869018555

Token 718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052011583000421524
    2. '<|end|>' → logprob: -3.552011489868164
    3. '
' → logprob: -4.177011489868164
    4. 'self' → logprob: -5.177011489868164
    5. '<|end|>' → logprob: -8.052011489868164
    6. ' self' → logprob: -8.177011489868164
    7. '```' → logprob: -9.302011489868164
    8. '   ' → logprob: -9.427011489868164
    9. '        
' → logprob: -9.802011489868164
    10. ',' → logprob: -10.177011489868164

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02459053508937359
    2. 'self' → logprob: -3.774590492248535
    3. ' self' → logprob: -6.899590492248535
    4. '
' → logprob: -8.649590492248535
    5. '<|end|>' → logprob: -9.899590492248535
    6. ',' → logprob: -10.524590492248535
    7. '   ' → logprob: -10.524590492248535
    8. '        
' → logprob: -11.149590492248535
    9. ')' → logprob: -11.774590492248535
    10. ' and' → logprob: -12.149590492248535

Token 720: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01922554150223732
    2. '       ' → logprob: -4.644225597381592
    3. '#' (adapté à ' #') → logprob: -4.769225597381592
    4. ' self' → logprob: -7.394225597381592
    5. 'stop' → logprob: -8.394225120544434
    6. '   ' → logprob: -10.769225120544434
    7. '```' → logprob: -11.269225120544434
    8. ' #' → logprob: -11.394225120544434
    9. 'def' → logprob: -11.394225120544434
    10. 'pass' → logprob: -11.519225120544434

Token 721: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019911279901862144
    2. '       ' → logprob: -4.519911289215088
    3. '#' → logprob: -4.769911289215088
    4. ' self' → logprob: -8.51991081237793
    5. 'stop' → logprob: -9.89491081237793
    6. '   ' → logprob: -10.26991081237793
    7. '```' → logprob: -11.14491081237793
    8. 'def' → logprob: -11.39491081237793
    9. ' #' → logprob: -11.76991081237793
    10. 'pass' → logprob: -12.01991081237793

Token 722: ' will' (ID: 738)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8241363763809204
    2. '#' → logprob: -1.0741363763809204
    3. 'self' → logprob: -2.949136257171631
    4. '.st' → logprob: -3.449136257171631
    5. ''ll' → logprob: -3.574136257171631
    6. '       ' → logprob: -3.824136257171631
    7. 'need' → logprob: -4.074136257171631
    8. ' need' → logprob: -4.199136257171631
    9. ' will' → logprob: -4.699136257171631
    10. ' stops' → logprob: -5.074136257171631

Token 723: ' manage' (ID: 11659)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -1.9107547998428345
    2. 'handle' → logprob: -1.9107547998428345
    3. 'define' → logprob: -2.285754680633545
    4. 'add' → logprob: -2.410754680633545
    5. 'implement' → logprob: -2.410754680633545
    6. 'manage' → logprob: -2.660754680633545
    7. 'set' → logprob: -2.660754680633545
    8. 'keep' → logprob: -2.785754680633545
    9. 'use' → logprob: -3.035754680633545
    10. 'need' → logprob: -4.035754680633545

Token 724: ' connections' (ID: 21069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35678061842918396
    2. 'connections' → logprob: -2.356780529022217
    3. 'these' → logprob: -3.106780529022217
    4. 'this' → logprob: -3.106780529022217
    5. 'both' → logprob: -3.481780529022217
    6. '#' → logprob: -4.106780529022217
    7. 'the' → logprob: -4.606780529022217
    8. 'def' → logprob: -4.981780529022217
    9. ' these' → logprob: -5.106780529022217
    10. ' self' → logprob: -5.106780529022217

Token 725: ' accordingly' (ID: 44041)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8182702660560608
    2. '       ' → logprob: -1.693270206451416
    3. '   ' → logprob: -2.193270206451416
    4. 'man' → logprob: -2.943270206451416
    5. 'def' → logprob: -3.068270206451416
    6. ' at' → logprob: -3.568270206451416
    7. ' in' → logprob: -4.318270206451416
    8. 'in' → logprob: -4.318270206451416
    9. '#' → logprob: -4.443270206451416
    10. 'at' → logprob: -4.568270206451416

Token 726: ' later' (ID: 4849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24665644764900208
    2. '<|end|>' → logprob: -1.6216564178466797
    3. '
' → logprob: -4.24665641784668
    4. '   ' → logprob: -6.24665641784668
    5. '<|end|>' → logprob: -6.24665641784668
    6. 'self' → logprob: -6.62165641784668
    7. '.' → logprob: -7.37165641784668
    8. '        
' → logprob: -8.74665641784668
    9. ' self' → logprob: -8.99665641784668
    10. ',' → logprob: -9.12165641784668

Token 727: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 728: ' needed' (ID: 6118)
  Prédit: ' needed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' needed' → logprob: -0.21054625511169434
    2. 'needed' → logprob: -2.4605462551116943
    3. ' part' → logprob: -4.210546493530273
    4. ' the' → logprob: -5.085546493530273
    5. 'special' → logprob: -5.085546493530273
    6. ' a' → logprob: -5.085546493530273
    7. 'a' → logprob: -5.210546493530273
    8. 'the' → logprob: -5.335546493530273
    9. ' composite' → logprob: -5.710546493530273
    10. 'com' → logprob: -5.710546493530273

Token 729: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4389270544052124
    2. '<|end|>' → logprob: -1.1889270544052124
    3. 'def' → logprob: -3.188927173614502
    4. '<|end|>' → logprob: -5.438927173614502
    5. '
' → logprob: -5.688927173614502
    6. ')' → logprob: -7.563927173614502
    7. ' def' → logprob: -7.688927173614502
    8. '```' → logprob: -7.938927173614502
    9. '    
' → logprob: -9.313926696777344
    10. ' ' → logprob: -9.938926696777344

Token 731: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2905936539173126
    2. 'def' (adapté à ' def') → logprob: -1.4155936241149902
    3. ' def' → logprob: -5.41559362411499
    4. '<|end|>' → logprob: -5.54059362411499
    5. ' ' → logprob: -7.91559362411499
    6. ')' → logprob: -8.165594100952148
    7. '<|end|>' → logprob: -8.790594100952148
    8. '```' → logprob: -9.415594100952148
    9. '    ' → logprob: -10.790594100952148
    10. '    
' → logprob: -10.790594100952148

Token 732: ' get' (ID: 717)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.1518645286560059
    2. ' find' → logprob: -1.2768645286560059
    3. ' shortest' → logprob: -1.7768645286560059
    4. 'short' → logprob: -2.776864528656006
    5. 'get' → logprob: -3.026864528656006
    6. 'linear' → logprob: -3.151864528656006
    7. ' get' → logprob: -3.276864528656006
    8. ' linear' → logprob: -3.901864528656006
    9. 'path' → logprob: -5.151864528656006
    10. ' path' → logprob: -5.276864528656006

Token 733: '_route' (ID: 67828)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.17757262289524078
    2. '_route' → logprob: -2.302572727203369
    3. '_short' → logprob: -3.177572727203369
    4. '_stop' → logprob: -4.177572727203369
    5. '_linear' → logprob: -6.677572727203369
    6. '_next' → logprob: -7.177572727203369
    7. '_st' → logprob: -7.302572727203369
    8. '_connection' → logprob: -7.427572727203369
    9. '_paths' → logprob: -7.552572727203369
    10. '_possible' → logprob: -7.927572727203369

Token 734: '_for' (ID: 11903)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003685235744342208
    2. '(' → logprob: -6.128684997558594
    3. 's' → logprob: -7.503684997558594
    4. '_between' → logprob: -7.753684997558594
    5. '_for' → logprob: -8.753684997558594
    6. '_from' → logprob: -9.003684997558594
    7. '_path' → logprob: -9.003684997558594
    8. 'self' → logprob: -10.628684997558594
    9. '_s' → logprob: -11.128684997558594
    10. '_paths' → logprob: -11.378684997558594

Token 735: '_trip' (ID: 154353)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.294345498085022
    2. '_stop' → logprob: -1.544345498085022
    3. 'self' → logprob: -3.9193453788757324
    4. 'stop' → logprob: -4.169345378875732
    5. '(' → logprob: -6.419345378875732
    6. '_bus' → logprob: -6.544345378875732
    7. '_start' → logprob: -7.169345378875732
    8. 'start' → logprob: -7.294345378875732
    9. 'bus' → logprob: -7.669345378875732
    10. '_st' → logprob: -7.919345378875732

Token 736: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001427538663847372
    2. '(' → logprob: -8.875143051147461
    3. 'self' → logprob: -13.500143051147461
    4. ' (' → logprob: -14.125143051147461
    5. '(s' → logprob: -15.000143051147461
    6. '_start' → logprob: -15.750143051147461
    7. '(start' → logprob: -15.875143051147461
    8. '(
' → logprob: -16.75014305114746
    9. '   ' → logprob: -17.25014305114746
    10. 's' → logprob: -17.50014305114746

Token 737: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016673624515533447
    2. 'self' → logprob: -4.891673564910889
    3. '(' → logprob: -5.391673564910889
    4. ',' → logprob: -5.641673564910889
    5. ')' → logprob: -7.766673564910889
    6. ' (' → logprob: -8.516674041748047
    7. ')(' → logprob: -8.641674041748047
    8. ',self' → logprob: -10.516674041748047
    9. '):
' → logprob: -11.141674041748047
    10. '   ' → logprob: -11.391674041748047

Token 738: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3125925362110138
    2. ' start' → logprob: -1.6875925064086914
    3. 'self' → logprob: -2.5625925064086914
    4. ' self' → logprob: -5.062592506408691
    5. '   ' → logprob: -11.437592506408691
    6. ')' → logprob: -11.562592506408691
    7. 'from' → logprob: -11.562592506408691
    8. 'stop' → logprob: -12.062592506408691
    9. '	start' → logprob: -12.812592506408691
    10. ' ' → logprob: -13.062592506408691

Token 739: '_num' (ID: 9834)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014996256213635206
    2. ' ,' → logprob: -7.001499652862549
    3. '_number' → logprob: -8.25149917602539
    4. 'self' → logprob: -8.25149917602539
    5. 'number' → logprob: -10.12649917602539
    6. ':' → logprob: -11.87649917602539
    7. '):' → logprob: -11.87649917602539
    8. ',self' → logprob: -12.75149917602539
    9. '   ' → logprob: -13.00149917602539
    10. ' self' → logprob: -13.87649917602539

Token 740: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00358391460031271
    2. ' ,' → logprob: -5.753583908081055
    3. '):' → logprob: -8.378583908081055
    4. ':' → logprob: -9.253583908081055
    5. '):
' → logprob: -9.628583908081055
    6. '   ' → logprob: -12.253583908081055
    7. ',
' → logprob: -12.253583908081055
    8. ',start' → logprob: -14.128583908081055
    9. '       ' → logprob: -14.253583908081055
    10. ')' → logprob: -14.378583908081055

Token 741: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.012672449462115765
    2. ' int' → logprob: -4.387672424316406
    3. ':int' → logprob: -10.137672424316406
    4. ')' → logprob: -10.387672424316406
    5. 'start' → logprob: -10.387672424316406
    6. '[int' → logprob: -11.012672424316406
    7. '(int' → logprob: -11.262672424316406
    8. ',' → logprob: -11.387672424316406
    9. '=int' → logprob: -12.387672424316406
    10. ' ' → logprob: -12.512672424316406

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.000018119812012
    3. ',start' → logprob: -14.375018119812012
    4. ',
' → logprob: -16.000017166137695
    5. ',end' → logprob: -16.125017166137695
    6. '   ' → logprob: -16.750017166137695
    7. ',int' → logprob: -17.750017166137695
    8. '       ' → logprob: -18.500017166137695
    9. ' ' → logprob: -18.875017166137695
    10. '‌,' → logprob: -19.125017166137695

Token 743: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.05489233136177063
    2. ' end' → logprob: -2.9298923015594482
    3. '   ' → logprob: -12.054892539978027
    4. ' ' → logprob: -13.554892539978027
    5. 'stop' → logprob: -13.929892539978027
    6. '       ' → logprob: -14.554892539978027
    7. '	end' → logprob: -14.679892539978027
    8. '  ' → logprob: -14.929892539978027
    9. '    ' → logprob: -15.929892539978027
    10. '[end' → logprob: -16.42989158630371

Token 744: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0005093070212751627
    2. ':' → logprob: -7.625509262084961
    3. ':_' → logprob: -12.375509262084961
    4. 'num' → logprob: -12.625509262084961
    5. 'Num' → logprob: -12.625509262084961
    6. '_:' → logprob: -12.875509262084961
    7. '_NUM' → logprob: -13.000509262084961
    8. ':int' → logprob: -13.250509262084961
    9. '```' → logprob: -14.375509262084961
    10. '_Num' → logprob: -14.625509262084961

Token 745: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7447512745857239
    2. '):
' → logprob: -0.9947512745857239
    3. ':' → logprob: -1.869751214981079
    4. ')' → logprob: -7.244751453399658
    5. '):
' → logprob: -8.1197509765625
    6. '):

' → logprob: -9.2447509765625
    7. ':int' → logprob: -10.6197509765625
    8. ' ):' → logprob: -11.4947509765625
    9. ',' → logprob: -11.7447509765625
    10. '   ' → logprob: -11.8697509765625

Token 746: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000845364120323211
    2. ' int' → logprob: -7.125845432281494
    3. ')' → logprob: -10.125844955444336
    4. '[int' → logprob: -15.000844955444336
    5. '(int' → logprob: -15.750844955444336
    6. ':int' → logprob: -16.000844955444336
    7. '   ' → logprob: -16.625844955444336
    8. '=int' → logprob: -17.250844955444336
    9. ' ' → logprob: -17.375844955444336
    10. '):
' → logprob: -17.500844955444336

Token 747: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07513759285211563
    2. '):
' → logprob: -2.7001376152038574
    3. ')' → logprob: -5.325137615203857
    4. ':' → logprob: -8.7001371383667
    5. '):
' → logprob: -9.0751371383667
    6. ')->' → logprob: -11.0751371383667
    7. '   ' → logprob: -11.4501371383667
    8. '):

' → logprob: -12.2001371383667
    9. ',' → logprob: -12.4501371383667
    10. ' ):' → logprob: -13.2001371383667

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007887827814556658
    2. ' if' → logprob: -7.875788688659668
    3. '   ' → logprob: -8.625788688659668
    4. 'if' → logprob: -9.625788688659668
    5. '```' → logprob: -9.625788688659668
    6. ',' → logprob: -10.750788688659668
    7. '#' → logprob: -11.500788688659668
    8. '        
' → logprob: -11.625788688659668
    9. '	   ' → logprob: -12.125788688659668
    10. 'space' → logprob: -12.125788688659668

Token 749: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5224629044532776
    2. 'if' → logprob: -1.6474628448486328
    3. ' if' → logprob: -1.8974628448486328
    4. 'start' (adapté à ' start') → logprob: -2.897462844848633
    5. ' start' → logprob: -5.147462844848633
    6. 'route' → logprob: -7.272462844848633
    7. '```' → logprob: -7.272462844848633
    8. 'space' → logprob: -7.522462844848633
    9. 'for' → logprob: -8.022462844848633
    10. ' for' → logprob: -8.272462844848633

Token 750: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36782315373420715
    2. '_stop' → logprob: -1.2428231239318848
    3. '=' → logprob: -3.9928231239318848
    4. '_num' → logprob: -8.117823600769043
    5. 'stop' → logprob: -8.367823600769043
    6. ',' → logprob: -9.742823600769043
    7. '_start' → logprob: -10.117823600769043
    8. '_bus' → logprob: -10.242823600769043
    9. '   ' → logprob: -10.367823600769043
    10. 'Stop' → logprob: -10.992823600769043

Token 751: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067156096920371056
    2. ' self' → logprob: -5.006715774536133
    3. '       ' → logprob: -15.506715774536133
    4. 'Bus' → logprob: -18.006715774536133
    5. '	self' → logprob: -18.256715774536133
    6. '(self' → logprob: -18.756715774536133
    7. ' Bus' → logprob: -19.756715774536133
    8. '   ' → logprob: -20.256715774536133
    9. '[self' → logprob: -20.256715774536133
    10. '=self' → logprob: -20.381715774536133

Token 752: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.001950417528860271
    2. 'st' → logprob: -6.251950263977051
    3. 'self' → logprob: -10.87695026397705
    4. ' stops' → logprob: -13.50195026397705
    5. '.bus' → logprob: -15.25195026397705
    6. '	st' → logprob: -15.37695026397705
    7. 'Stops' → logprob: -15.37695026397705
    8. ' .' → logprob: -15.50195026397705
    9. '.s' → logprob: -16.126951217651367
    10. '.stop' → logprob: -16.126951217651367

Token 753: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -6.754368223482743e-05
    2. 'op' → logprob: -10.500067710876465
    3. 'arts' → logprob: -10.750067710876465
    4. 'tops' → logprob: -12.375067710876465
    5. 'ps' → logprob: -13.500067710876465
    6. '[' → logprob: -13.625067710876465
    7. '#' → logprob: -13.875067710876465
    8. '```' → logprob: -14.000067710876465
    9. 'os' → logprob: -14.125067710876465
    10. ' stops' → logprob: -14.250067710876465

Token 754: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.7432603272027336e-06
    2. 'start' → logprob: -13.375001907348633
    3. '[' → logprob: -15.875001907348633
    4. ' [' → logprob: -17.500001907348633
    5. '[end' → logprob: -18.250001907348633
    6. '(start' → logprob: -19.250001907348633
    7. '[
' → logprob: -19.500001907348633
    8. '[int' → logprob: -20.500001907348633
    9. '   ' → logprob: -20.500001907348633
    10. '=start' → logprob: -20.750001907348633

Token 755: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.6240566083070007e-06
    2. 'num' → logprob: -14.375001907348633
    3. ']' → logprob: -15.000001907348633
    4. '_start' → logprob: -15.500001907348633
    5. ')' → logprob: -15.750001907348633
    6. 'Num' → logprob: -16.125001907348633
    7. '_NUM' → logprob: -16.750001907348633
    8. '[start' → logprob: -16.750001907348633
    9. '_n' → logprob: -17.750001907348633
    10. 'start' → logprob: -18.125001907348633

Token 756: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14474451541900635
    2. ')' → logprob: -2.019744396209717
    3. ']
' → logprob: -6.394744396209717
    4. ']' → logprob: -8.269744873046875
    5. ')
' → logprob: -9.144744873046875
    6. '       ' → logprob: -10.519744873046875
    7. ',' → logprob: -13.519744873046875
    8. '}
' → logprob: -13.769744873046875
    9. '   ' → logprob: -13.894744873046875
    10. ')

' → logprob: -14.144744873046875

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030078491545282304
    2. ' if' → logprob: -8.750300407409668
    3. 'end' → logprob: -10.250300407409668
    4. ',' → logprob: -10.375300407409668
    5. '        
' → logprob: -11.125300407409668
    6. '<|end|>' → logprob: -11.125300407409668
    7. 'if' → logprob: -11.500300407409668
    8. '```' → logprob: -11.750300407409668
    9. '#' → logprob: -12.375300407409668
    10. '<|end|>' → logprob: -12.750300407409668

Token 758: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.0013974993489682674
    2. '       ' → logprob: -7.376397609710693
    3. ' end' → logprob: -7.751397609710693
    4. 'if' → logprob: -8.001397132873535
    5. ' if' → logprob: -12.751397132873535
    6. '#' → logprob: -13.376397132873535
    7. '   ' → logprob: -15.126397132873535
    8. ' ' → logprob: -15.751397132873535
    9. '[end' → logprob: -15.876397132873535
    10. '	end' → logprob: -16.75139808654785

Token 759: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.589990496635437
    2. ' =' → logprob: -0.839990496635437
    3. '<|end|>' → logprob: -4.589990615844727
    4. ')' → logprob: -6.089990615844727
    5. '.' → logprob: -7.839990615844727
    6. '<|end|>' → logprob: -8.339990615844727
    7. '[' → logprob: -8.714990615844727
    8. ':' → logprob: -8.714990615844727
    9. ' =
' → logprob: -8.839990615844727
    10. '=
' → logprob: -9.089990615844727

Token 760: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004085758700966835
    2. ' self' → logprob: -5.504085540771484
    3. '       ' → logprob: -12.004085540771484
    4. '   ' → logprob: -14.254085540771484
    5. ' ' → logprob: -15.504085540771484
    6. '(self' → logprob: -16.754085540771484
    7. '           ' → logprob: -17.004085540771484
    8. '
' → logprob: -17.129085540771484
    9. '  ' → logprob: -17.129085540771484
    10. '    ' → logprob: -17.129085540771484

Token 761: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -3.03521392197581e-05
    2. 'st' → logprob: -10.875030517578125
    3. '_st' → logprob: -11.625030517578125
    4. 's' → logprob: -14.500030517578125
    5. '.s' → logprob: -14.750030517578125
    6. '	st' → logprob: -15.000030517578125
    7. 'self' → logprob: -15.000030517578125
    8. '(st' → logprob: -15.500030517578125
    9. '
' → logprob: -15.875030517578125
    10. 'Stops' → logprob: -16.750030517578125

Token 762: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -5.478889215737581e-05
    2. 'op' → logprob: -10.250054359436035
    3. 's' → logprob: -12.750054359436035
    4. 'o' → logprob: -13.250054359436035
    5. '.ops' → logprob: -13.250054359436035
    6. '_ops' → logprob: -13.375054359436035
    7. ' ops' → logprob: -13.500054359436035
    8. '[' → logprob: -13.500054359436035
    9. 'ps' → logprob: -13.625054359436035
    10. '{' → logprob: -13.875054359436035

Token 763: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -4.5491004129871726e-05
    2. '[' → logprob: -10.375045776367188
    3. '[self' → logprob: -11.750045776367188
    4. '[start' → logprob: -12.875045776367188
    5. 'stop' → logprob: -13.250045776367188
    6. 'end' → logprob: -14.125045776367188
    7. 'st' → logprob: -15.000045776367188
    8. '[get' → logprob: -15.375045776367188
    9. '[
' → logprob: -16.375045776367188
    10. 'get' → logprob: -16.500045776367188

Token 764: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.05603701248764992
    2. 'num' → logprob: -2.931036949157715
    3. 'Num' → logprob: -7.181036949157715
    4. '5' → logprob: -8.306036949157715
    5. 'end' → logprob: -9.306036949157715
    6. ']' → logprob: -11.306036949157715
    7. '```' → logprob: -11.806036949157715
    8. '6' → logprob: -12.056036949157715
    9. '0' → logprob: -12.181036949157715
    10. ')' → logprob: -12.431036949157715

Token 765: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5001180171966553
    2. ')
' → logprob: -1.3751180171966553
    3. ']' → logprob: -2.5001180171966553
    4. ']
' → logprob: -2.8751180171966553
    5. '       ' → logprob: -6.250118255615234
    6. ')
' → logprob: -9.125118255615234
    7. ']

' → logprob: -10.000118255615234
    8. ']
' → logprob: -10.000118255615234
    9. ')

' → logprob: -10.375118255615234
    10. '])' → logprob: -10.625118255615234

Token 766: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026693744584918022
    2. '   ' → logprob: -3.776693820953369
    3. '```' → logprob: -6.401693820953369
    4. '<|end|>' → logprob: -6.901693820953369
    5. '<|end|>' → logprob: -8.526693344116211
    6. ' if' → logprob: -8.901693344116211
    7. 'if' → logprob: -9.401693344116211
    8. ')' → logprob: -9.401693344116211
    9. '        
' → logprob: -9.526693344116211
    10. '#' → logprob: -10.401693344116211

Token 767: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27525973320007324
    2. '#' (adapté à ' #') → logprob: -1.5252597332000732
    3. '       ' → logprob: -3.7752597332000732
    4. '```' → logprob: -9.525259971618652
    5. ' if' → logprob: -10.275259971618652
    6. 'route' → logprob: -11.650259971618652
    7. '``' → logprob: -12.775259971618652
    8. 'is' → logprob: -12.900259971618652
    9. 'routes' → logprob: -13.400259971618652
    10. ' #' → logprob: -13.400259971618652

Token 768: ' Define' (ID: 38966)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.576340913772583
    2. 'if' → logprob: -0.826340913772583
    3. '       ' → logprob: -8.826340675354004
    4. 'def' → logprob: -9.951340675354004
    5. ' if' → logprob: -9.951340675354004
    6. 'If' → logprob: -9.951340675354004
    7. 'Use' → logprob: -10.326340675354004
    8. '   ' → logprob: -11.326340675354004
    9. ' #' → logprob: -11.451340675354004
    10. 'linear' → logprob: -11.576340675354004

Token 769: ' range' (ID: 3352)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8070663809776306
    2. 'route' → logprob: -1.9320664405822754
    3. '#' → logprob: -2.3070664405822754
    4. ' route' → logprob: -2.5570664405822754
    5. 'if' → logprob: -2.6820664405822754
    6. ' def' → logprob: -3.4320664405822754
    7. ' if' → logprob: -3.5570664405822754
    8. ' routes' → logprob: -3.5570664405822754
    9. 'routes' → logprob: -4.307066440582275
    10. 'path' → logprob: -4.432066440582275

Token 770: ' sets' (ID: 11982)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2835417687892914
    2. ' =' → logprob: -2.658541679382324
    3. '(' → logprob: -2.783541679382324
    4. '       ' → logprob: -3.158541679382324
    5. 'if' → logprob: -3.908541679382324
    6. '0' → logprob: -4.408541679382324
    7. '_ranges' → logprob: -4.783541679382324
    8. '_line' → logprob: -5.658541679382324
    9. '_start' → logprob: -5.658541679382324
    10. ' if' → logprob: -5.783541679382324

Token 771: ' for' (ID: 395)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -1.1763356924057007
    2. ' =' → logprob: -1.5513356924057007
    3. ' linear' → logprob: -1.5513356924057007
    4. '       ' → logprob: -1.6763356924057007
    5. '(line' → logprob: -3.6763358116149902
    6. '=' → logprob: -4.42633581161499
    7. '_linear' → logprob: -4.55133581161499
    8. 'range' → logprob: -5.30133581161499
    9. 'line' → logprob: -5.42633581161499
    10. '```' → logprob: -5.92633581161499

Token 772: ' areas' (ID: 6723)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.06451873481273651
    2. 'range' → logprob: -3.564518690109253
    3. 'self' → logprob: -3.814518690109253
    4. ' linear' → logprob: -4.814518928527832
    5. 'line' → logprob: -6.439518928527832
    6. '{' → logprob: -7.689518928527832
    7. 'the' → logprob: -7.939518928527832
    8. '0' → logprob: -8.064518928527832
    9. 'both' → logprob: -8.064518928527832
    10. ' range' → logprob: -8.564518928527832

Token 773: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.557648241519928
    2. '       ' → logprob: -1.1826481819152832
    3. ' linear' → logprob: -3.307648181915283
    4. 'linear' → logprob: -3.432648181915283
    5. '=' → logprob: -3.682648181915283
    6. ':' → logprob: -5.307648181915283
    7. 'forward' → logprob: -5.807648181915283
    8. '_linear' → logprob: -5.807648181915283
    9. '(line' → logprob: -6.057648181915283
    10. '
' → logprob: -6.432648181915283

Token 774: '       ' (ID: 309)
  Prédit: ' linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' linear' → logprob: -0.5508779883384705
    2. 'linear' → logprob: -1.1758780479431152
    3. '       ' → logprob: -2.3008780479431152
    4. 'line' → logprob: -5.425878047943115
    5. ' line' → logprob: -5.800878047943115
    6. 'forward' → logprob: -7.050878047943115
    7. ' forward' → logprob: -7.175878047943115
    8. 'range' → logprob: -7.300878047943115
    9. ' range' → logprob: -7.300878047943115
    10. '        ' → logprob: -7.425878047943115

Token 775: ' #' (ID: 1069)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.0018888992490246892
    2. ' linear' → logprob: -6.876888751983643
    3. 'line' → logprob: -7.626888751983643
    4. 'if' → logprob: -9.2518892288208
    5. '       ' → logprob: -9.2518892288208
    6. 'start' → logprob: -9.5018892288208
    7. 'main' → logprob: -10.3768892288208
    8. 'range' → logprob: -11.0018892288208
    9. '   ' → logprob: -11.0018892288208
    10. 'lin' → logprob: -11.7518892288208

Token 776: ' Linear' (ID: 29092)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.001073419232852757
    2. ' linear' → logprob: -7.501073360443115
    3. 'line' → logprob: -8.501073837280273
    4. 'if' → logprob: -8.626073837280273
    5. 'main' → logprob: -9.751073837280273
    6. '   ' → logprob: -10.626073837280273
    7. 'in' → logprob: -11.876073837280273
    8. 'lin' → logprob: -11.876073837280273
    9. 'start' → logprob: -12.001073837280273
    10. '#' → logprob: -12.376073837280273

Token 777: ':' (ID: 25)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.4413208067417145
    2. '_st' → logprob: -1.191320776939392
    3. ' =' → logprob: -3.5663208961486816
    4. '_route' → logprob: -5.191320896148682
    5. '=' → logprob: -5.691320896148682
    6. 'range' → logprob: -5.691320896148682
    7. 'st' → logprob: -5.941320896148682
    8. '_forward' → logprob: -6.191320896148682
    9. '_set' → logprob: -6.441320896148682
    10. '_linear' → logprob: -6.566320896148682

Token 778: ' ' (ID: 220)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.07407871633768082
    2. ' set' → logprob: -3.3240787982940674
    3. 'range' → logprob: -3.6990787982940674
    4. '{' → logprob: -5.449078559875488
    5. 'linear' → logprob: -6.199078559875488
    6. '0' → logprob: -6.324078559875488
    7. '   ' → logprob: -7.074078559875488
    8. ' range' → logprob: -7.199078559875488
    9. 'line' → logprob: -8.199078559875488
    10. '       ' → logprob: -8.324078559875488

Token 779: '0' (ID: 15)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.045554421842098236
    2. 'range' → logprob: -3.2955543994903564
    3. '0' → logprob: -5.2955546379089355
    4. '{' → logprob: -6.4205546379089355
    5. ' set' → logprob: -7.1705546379089355
    6. ' range' → logprob: -9.920554161071777
    7. '   ' → logprob: -11.545554161071777
    8. ' ' → logprob: -12.795554161071777
    9. 'sets' → logprob: -13.295554161071777
    10. 'for' → logprob: -13.295554161071777

Token 780: '-' (ID: 12)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.11859859526157379
    2. 'to' → logprob: -3.493598699569702
    3. ' <=' → logprob: -3.493598699569702
    4. ',' → logprob: -3.993598699569702
    5. '6' → logprob: -3.993598699569702
    6. ' to' → logprob: -5.868598461151123
    7. ' ' → logprob: -6.243598461151123
    8. '5' → logprob: -6.368598461151123
    9. '0' → logprob: -6.618598461151123
    10. '   ' → logprob: -6.743598461151123

Token 781: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00011808603449026123
    2. '4' → logprob: -9.500118255615234
    3. '6' → logprob: -10.500118255615234
    4. ' ' → logprob: -11.250118255615234
    5. '=' → logprob: -13.250118255615234
    6. '
' → logprob: -15.000118255615234
    7. '   ' → logprob: -16.562618255615234
    8. 'to' → logprob: -16.812618255615234
    9. '  ' → logprob: -16.875118255615234
    10. '５' → logprob: -17.125118255615234

Token 782: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03290611878037453
    2. '
' → logprob: -3.7829060554504395
    3. ',' → logprob: -5.0329060554504395
    4. '#' → logprob: -7.4079060554504395
    5. ' and' → logprob: -7.5329060554504395
    6. 'linear' → logprob: -7.6579060554504395
    7. 'range' → logprob: -8.407906532287598
    8. '        
' → logprob: -8.532906532287598
    9. ' linear' → logprob: -8.657906532287598
    10. 'if' → logprob: -8.782906532287598

Token 783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009145628428086638
    2. ',' → logprob: -8.000914573669434
    3. '#' → logprob: -8.250914573669434
    4. '
' → logprob: -9.500914573669434
    5. 'if' → logprob: -9.875914573669434
    6. ' and' → logprob: -10.250914573669434
    7. 'range' → logprob: -10.250914573669434
    8. 'linear' → logprob: -10.250914573669434
    9. '   ' → logprob: -11.000914573669434
    10. ' if' → logprob: -11.125914573669434

Token 784: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10283396393060684
    2. '#' (adapté à ' #') → logprob: -2.7278339862823486
    3. 'if' → logprob: -4.4778337478637695
    4. 'linear' → logprob: -4.4778337478637695
    5. ' if' → logprob: -5.3528337478637695
    6. ' linear' → logprob: -5.8528337478637695
    7. ' #' → logprob: -6.9778337478637695
    8. ',' → logprob: -7.8528337478637695
    9. '
' → logprob: -9.10283374786377
    10. ' ' → logprob: -9.22783374786377

Token 785: ' Circular' (ID: 72772)
  Prédit: 'Circular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circular' → logprob: -0.027307210490107536
    2. ' Circular' → logprob: -4.152307033538818
    3. 'Linear' → logprob: -4.777307033538818
    4. 'if' → logprob: -7.027307033538818
    5. 'c' → logprob: -7.277307033538818
    6. '       ' → logprob: -7.777307033538818
    7. '#' → logprob: -8.277307510375977
    8. 'C' → logprob: -8.902307510375977
    9. ' circular' → logprob: -8.902307510375977
    10. ' Linear' → logprob: -9.402307510375977

Token 786: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006503634504042566
    2. ' :' → logprob: -7.875650405883789
    3. ' =' → logprob: -9.000650405883789
    4. ' ' → logprob: -10.250650405883789
    5. '5' → logprob: -10.750650405883789
    6. '6' → logprob: -11.000650405883789
    7. '=' → logprob: -11.125650405883789
    8. 'range' → logprob: -11.125650405883789
    9. '10' → logprob: -12.125650405883789
    10. '0' → logprob: -12.375650405883789

Token 787: ' ' (ID: 220)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.4506324529647827
    2. 'set' → logprob: -1.4506324529647827
    3. '5' → logprob: -1.5756324529647827
    4. '6' → logprob: -1.5756324529647827
    5. ' ' → logprob: -2.7006325721740723
    6. 'range' → logprob: -3.7006325721740723
    7. ' set' → logprob: -3.8256325721740723
    8. ' range' → logprob: -6.075632572174072
    9. ' {' → logprob: -6.700632572174072
    10. '   ' → logprob: -9.575632095336914

Token 788: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8078638315200806
    2. 'set' → logprob: -0.9328638315200806
    3. '{' → logprob: -2.557863712310791
    4. 'range' → logprob: -2.682863712310791
    5. '6' → logprob: -4.307863712310791
    6. ' set' → logprob: -7.307863712310791
    7. ' range' → logprob: -8.30786418914795
    8. ' ' → logprob: -9.05786418914795
    9. '[' → logprob: -9.18286418914795
    10. '(' → logprob: -9.18286418914795

Token 789: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00702106487005949
    2. '10' → logprob: -6.132020950317383
    3. '0' → logprob: -6.382020950317383
    4. 'if' → logprob: -7.257020950317383
    5. 'to' → logprob: -7.757020950317383
    6. ' if' → logprob: -7.757020950317383
    7. '9' → logprob: -7.882020950317383
    8. '–' → logprob: -7.882020950317383
    9. ',' → logprob: -8.007020950317383
    10. ' to' → logprob: -8.632020950317383

Token 790: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.250000953674316
    3. '
' → logprob: -16.25
    4. '10' → logprob: -16.75
    5. '```' → logprob: -16.875
    6. '９' → logprob: -17.25
    7. '۹' → logprob: -18.0
    8. '999' → logprob: -18.6875
    9. '९' → logprob: -18.6875
    10. '   ' → logprob: -18.75

Token 791: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05073694512248039
    2. '
' → logprob: -3.175736904144287
    3. '        
' → logprob: -5.175736904144287
    4. 'if' → logprob: -6.675736904144287
    5. ' if' → logprob: -7.300736904144287
    6. '```' → logprob: -10.300737380981445
    7. ',' → logprob: -11.050737380981445
    8. '<|end|>' → logprob: -11.300737380981445
    9. '  
' → logprob: -11.550737380981445
    10. ' 
' → logprob: -11.925737380981445

Token 792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002547832846175879
    2. '   ' → logprob: -9.00025463104248
    3. ' if' → logprob: -9.50025463104248
    4. 'if' → logprob: -10.50025463104248
    5. '```' → logprob: -10.75025463104248
    6. '        
' → logprob: -12.25025463104248
    7. '
' → logprob: -13.87525463104248
    8. ',' → logprob: -15.12525463104248
    9. '      ' → logprob: -15.25025463104248
    10. ' ' → logprob: -15.50025463104248

Token 793: ' in' (ID: 306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20996993780136108
    2. '       ' → logprob: -1.7099699974060059
    3. ' if' → logprob: -4.834969997406006
    4. 'linear' → logprob: -8.209969520568848
    5. '#' → logprob: -8.834969520568848
    6. 'start' → logprob: -9.959969520568848
    7. '   ' → logprob: -10.334969520568848
    8. 'in' (adapté à ' in') → logprob: -10.959969520568848
    9. 'lin' → logprob: -10.959969520568848
    10. 'is' → logprob: -11.209969520568848

Token 794: '_linear' (ID: 102608)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.64055335521698
    2. 'start' → logprob: -1.01555335521698
    3. '_range' → logprob: -3.3905534744262695
    4. '_start' → logprob: -4.5155534744262695
    5. ' range' → logprob: -4.7655534744262695
    6. ' start' → logprob: -4.8905534744262695
    7. 'def' → logprob: -5.0155534744262695
    8. '_line' → logprob: -5.2655534744262695
    9. '(start' → logprob: -5.2655534744262695
    10. 'line' → logprob: -5.3905534744262695

Token 795: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24240906536579132
    2. '=' → logprob: -2.3674089908599854
    3. '_start' → logprob: -2.6174089908599854
    4. '_' → logprob: -3.2424089908599854
    5. '_range' → logprob: -4.7424092292785645
    6. '_=' → logprob: -8.492408752441406
    7. '_route' → logprob: -9.367408752441406
    8. '=start' → logprob: -9.742408752441406
    9. '_ranges' → logprob: -9.867408752441406
    10. '_linear' → logprob: -9.992408752441406

Token 796: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.059069205075502396
    2. '(lambda' → logprob: -3.8090691566467285
    3. ' lambda' → logprob: -4.1840691566467285
    4. 'start' → logprob: -4.4340691566467285
    5. 'range' → logprob: -5.5590691566467285
    6. '0' → logprob: -5.9340691566467285
    7. '{' → logprob: -7.6840691566467285
    8. '(' → logprob: -7.6840691566467285
    9. '   ' → logprob: -7.9340691566467285
    10. '(start' → logprob: -9.434069633483887

Token 797: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5797889828681946
    2. ' x' → logprob: -0.8297889828681946
    3. 'n' → logprob: -5.954789161682129
    4. ' n' → logprob: -7.329789161682129
    5. 'num' → logprob: -7.704789161682129
    6. ' num' → logprob: -9.329789161682129
    7. ' stop' → logprob: -10.829789161682129
    8. 'stop' → logprob: -11.079789161682129
    9. ' ' → logprob: -12.704789161682129
    10. '   ' → logprob: -12.704789161682129

Token 798: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00512868445366621
    2. ' :' → logprob: -5.380128860473633
    3. ' x' → logprob: -8.130128860473633
    4. 'x' → logprob: -9.380128860473633
    5. '0' → logprob: -9.505128860473633
    6. ':x' → logprob: -10.255128860473633
    7. ' ' → logprob: -11.005128860473633
    8. '1' → logprob: -13.505128860473633
    9. ':
' → logprob: -14.880128860473633
    10. '<x' → logprob: -15.255128860473633

Token 799: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023319432511925697
    2. 'x' → logprob: -3.7733194828033447
    3. ' ' → logprob: -10.148319244384766
    4. ' x' → logprob: -10.773319244384766
    5. '(' → logprob: -12.398319244384766
    6. '(x' → logprob: -12.523319244384766
    7. '5' → logprob: -12.773319244384766
    8. 'return' → logprob: -13.773319244384766
    9. '   ' → logprob: -13.898319244384766
    10. 'lambda' → logprob: -14.523319244384766

Token 800: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20160940289497375
    2. 'x' → logprob: -1.7016093730926514
    3. '(x' → logprob: -9.82660961151123
    4. ' x' → logprob: -10.07660961151123
    5. 'self' → logprob: -10.20160961151123
    6. '(' → logprob: -10.45160961151123
    7. ' ' → logprob: -10.95160961151123
    8. 'return' → logprob: -11.70160961151123
    9. '5' → logprob: -13.20160961151123
    10. '   ' → logprob: -13.82660961151123

Token 801: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.005937924608588219
    2. ' <=' → logprob: -5.1309380531311035
    3. 'x' → logprob: -11.880937576293945
    4. ')<=' → logprob: -14.630937576293945
    5. '<' → logprob: -15.005937576293945
    6. ',' → logprob: -15.005937576293945
    7. '0' → logprob: -15.130937576293945
    8. '
' → logprob: -15.505937576293945
    9. ' ' → logprob: -15.630937576293945
    10. '<x' → logprob: -15.755937576293945

Token 802: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0280383548888494e-06
    2. ' x' → logprob: -13.875000953674316
    3. '(x' → logprob: -21.500001907348633
    4. ' ' → logprob: -21.875001907348633
    5. '   ' → logprob: -21.875001907348633
    6. '	x' → logprob: -22.250001907348633
    7. 'start' → logprob: -22.375001907348633
    8. '<|end|>' → logprob: -22.750001907348633
    9. '<|end|>' → logprob: -23.000001907348633
    10. ')x' → logprob: -23.250001907348633

Token 803: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.028679916635155678
    2. 'and' → logprob: -4.153679847717285
    3. ' <=' → logprob: -4.403679847717285
    4. ' and' → logprob: -8.028679847717285
    5. 'x' → logprob: -12.278679847717285
    6. '≤' → logprob: -14.278679847717285
    7. '<' → logprob: -14.403679847717285
    8. '           ' → logprob: -14.903679847717285
    9. '       ' → logprob: -15.153679847717285
    10. '        ' → logprob: -15.403679847717285

Token 804: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.500036239624023
    4. '  ' → logprob: -17.687536239624023
    5. '۵' → logprob: -18.250036239624023
    6. '５' → logprob: -18.500036239624023
    7. '٥' → logprob: -19.000036239624023
    8. '५' → logprob: -19.062536239624023
    9. '```' → logprob: -19.437536239624023
    10. '    ' → logprob: -19.687536239624023

Token 805: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06327641010284424
    2. '
' → logprob: -2.8132762908935547
    3. '        
' → logprob: -7.063276290893555
    4. ',' → logprob: -8.563276290893555
    5. 'in' → logprob: -9.313276290893555
    6. ' in' → logprob: -9.688276290893555
    7. ',
' → logprob: -10.938276290893555
    8. ' and' → logprob: -11.313276290893555
    9. ' 
' → logprob: -11.313276290893555
    10. '       
' → logprob: -11.438276290893555

Token 806: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013141758739948273
    2. ' in' → logprob: -5.388141632080078
    3. '        
' → logprob: -5.888141632080078
    4. '<|end|>' → logprob: -6.388141632080078
    5. '
' → logprob: -6.888141632080078
    6. '        ' → logprob: -7.013141632080078
    7. 'in' → logprob: -7.388141632080078
    8. '<|end|>' → logprob: -8.138141632080078
    9. ',' → logprob: -8.263141632080078
    10. '  
' → logprob: -8.888141632080078

Token 807: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.6273528337478638
    2. '       ' → logprob: -0.8773528337478638
    3. ' in' → logprob: -3.002352714538574
    4. 'is' → logprob: -8.627352714538574
    5. ' ' → logprob: -9.627352714538574
    6. '   ' → logprob: -9.752352714538574
    7. ' is' → logprob: -9.877352714538574
    8. 'out' → logprob: -11.127352714538574
    9. '	in' → logprob: -11.127352714538574
    10. '      ' → logprob: -11.502352714538574

Token 808: '_c' (ID: 1303)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.09967055171728134
    2. '_linear' → logprob: -3.224670648574829
    3. 'c' → logprob: -3.474670648574829
    4. ' linear' → logprob: -3.974670648574829
    5. ' circular' → logprob: -6.34967041015625
    6. 'lambda' → logprob: -6.47467041015625
    7. '_c' → logprob: -6.72467041015625
    8. '5' → logprob: -7.59967041015625
    9. 'circle' → logprob: -9.84967041015625
    10. ' lambda' → logprob: -10.09967041015625

Token 809: 'ircular' (ID: 27245)
  Prédit: 'ircular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircular' → logprob: -0.004070920869708061
    2. '5' → logprob: -6.25407075881958
    3. 'linear' → logprob: -6.37907075881958
    4. 'inear' → logprob: -9.129071235656738
    5. 'ircle' → logprob: -9.379071235656738
    6. '_linear' → logprob: -10.004071235656738
    7. 'irc' → logprob: -10.004071235656738
    8. 'lambda' → logprob: -10.504071235656738
    9. '6' → logprob: -10.629071235656738
    10. 'icular' → logprob: -10.754071235656738

Token 810: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933932304382324
    2. ' =' → logprob: -0.6933932304382324
    3. '=lambda' → logprob: -8.31839370727539
    4. ' ' → logprob: -13.19339370727539
    5. '＝' → logprob: -16.94339370727539
    6. '=
' → logprob: -17.31839370727539
    7. 'lambda' → logprob: -17.56839370727539
    8. '   ' → logprob: -17.94339370727539
    9. '  ' → logprob: -18.06839370727539
    10. '=}' → logprob: -18.69339370727539

Token 811: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5761187672615051
    2. ' lambda' → logprob: -0.8261187672615051
    3. '(lambda' → logprob: -8.701118469238281
    4. '=lambda' → logprob: -11.826118469238281
    5. '   ' → logprob: -13.201118469238281
    6. '5' → logprob: -13.701118469238281
    7. ' ' → logprob: -13.826118469238281
    8. '    ' → logprob: -14.451118469238281
    9. '_lambda' → logprob: -14.826118469238281
    10. ' lamb' → logprob: -15.826118469238281

Token 812: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6006181240081787
    2. ' x' → logprob: -0.8506181240081787
    3. 'lambda' → logprob: -4.100618362426758
    4. ' lambda' → logprob: -5.100618362426758
    5. '5' → logprob: -6.475618362426758
    6. ' ' → logprob: -8.850618362426758
    7. '6' → logprob: -11.600618362426758
    8. '7' → logprob: -11.975618362426758
    9. '0' → logprob: -12.350618362426758
    10. '   ' → logprob: -12.725618362426758

Token 813: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7439116835594177
    2. ' x' → logprob: -0.8689116835594177
    3. 'x' → logprob: -2.6189117431640625
    4. ' ' → logprob: -4.1189117431640625
    5. 'lambda' → logprob: -4.6189117431640625
    6. ' lambda' → logprob: -5.3689117431640625
    7. '0' → logprob: -7.1189117431640625
    8. '5' → logprob: -7.8689117431640625
    9. ' :' → logprob: -8.368911743164062
    10. '(x' → logprob: -10.368911743164062

Token 814: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.03015320561826229
    2. ' ' → logprob: -3.530153274536133
    3. 'lambda' → logprob: -8.530153274536133
    4. '6' → logprob: -9.405153274536133
    5. ' lambda' → logprob: -9.405153274536133
    6. '   ' → logprob: -11.280153274536133
    7. 'x' → logprob: -11.905153274536133
    8. '  ' → logprob: -12.280153274536133
    9. '(' → logprob: -12.405153274536133
    10. '(lambda' → logprob: -12.405153274536133

Token 815: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.008532896637916565
    2. ' ' → logprob: -5.133533000946045
    3. '6' → logprob: -6.008533000946045
    4. 'x' → logprob: -9.383532524108887
    5. 'lambda' → logprob: -10.633532524108887
    6. '(' → logprob: -11.008532524108887
    7. ' x' → logprob: -12.633532524108887
    8. '   ' → logprob: -12.633532524108887
    9. '(x' → logprob: -12.633532524108887
    10. ' (' → logprob: -13.008532524108887

Token 816: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07889717072248459
    2. ' <=' → logprob: -2.57889723777771
    3. '<' → logprob: -11.953897476196289
    4. ' <' → logprob: -14.953897476196289
    5. '>=' → logprob: -15.453897476196289
    6. ' ' → logprob: -15.828897476196289
    7. '0' → logprob: -16.70389747619629
    8. '<x' → logprob: -17.07889747619629
    9. '≤' → logprob: -17.20389747619629
    10. 'def' → logprob: -17.32889747619629

Token 817: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00014013137842994183
    2. ' x' → logprob: -8.875140190124512
    3. '9' → logprob: -15.375140190124512
    4. '10' → logprob: -17.250139236450195
    5. '5' → logprob: -18.125139236450195
    6. '7' → logprob: -18.375139236450195
    7. '6' → logprob: -18.750139236450195
    8. '
' → logprob: -19.000139236450195
    9. '<|end|>' → logprob: -19.375139236450195
    10. '8' → logprob: -19.625139236450195

Token 818: ' <=' (ID: 5017)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00949161034077406
    2. ' x' → logprob: -4.759491443634033
    3. '9' → logprob: -7.259491443634033
    4. '10' → logprob: -9.259491920471191
    5. '<=' → logprob: -10.634491920471191
    6. '(x' → logprob: -10.884491920471191
    7. 'num' → logprob: -11.634491920471191
    8. ' <=' → logprob: -12.134491920471191
    9. '<x' → logprob: -12.634491920471191
    10. '   ' → logprob: -13.009491920471191

Token 819: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.750003814697266
    4. '  ' → logprob: -19.000003814697266
    5. '９' → logprob: -19.000003814697266
    6. '۹' → logprob: -19.250003814697266
    7. 'nine' → logprob: -19.500003814697266
    8. '09' → logprob: -19.625003814697266
    9. '```' → logprob: -20.687503814697266
    10. '९' → logprob: -20.812503814697266

Token 820: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.625001907348633
    4. '９' → logprob: -20.000001907348633
    5. '۹' → logprob: -20.125001907348633
    6. '  ' → logprob: -20.750001907348633
    7. 'nine' → logprob: -21.187501907348633
    8. '९' → logprob: -21.687501907348633
    9. '09' → logprob: -21.875001907348633
    10. '=' → logprob: -21.875001907348633

Token 821: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034652480389922857
    2. '        
' → logprob: -6.003465175628662
    3. '
' → logprob: -7.503465175628662
    4. '<|end|>' → logprob: -8.75346565246582
    5. ',' → logprob: -9.00346565246582
    6. ' if' → logprob: -10.00346565246582
    7. '```' → logprob: -10.00346565246582
    8. '<|end|>' → logprob: -11.00346565246582
    9. 'if' → logprob: -11.62846565246582
    10. '    
' → logprob: -12.25346565246582

Token 822: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.837811088189483e-05
    2. '   ' → logprob: -10.125068664550781
    3. '```' → logprob: -10.875068664550781
    4. '        
' → logprob: -12.000068664550781
    5. 'if' → logprob: -13.250068664550781
    6. '
' → logprob: -14.500068664550781
    7. ' if' → logprob: -14.750068664550781
    8. '      ' → logprob: -16.12506866455078
    9. '    
' → logprob: -16.12506866455078
    10. '           ' → logprob: -16.75006866455078

Token 823: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07791368663311005
    2. '       ' → logprob: -2.827913761138916
    3. ' if' → logprob: -4.327913761138916
    4. '#' (adapté à ' #') → logprob: -5.952913761138916
    5. '```' → logprob: -11.077913284301758
    6. 'If' → logprob: -12.577913284301758
    7. '
' → logprob: -12.827913284301758
    8. ' #' → logprob: -13.452913284301758
    9. '        
' → logprob: -14.202913284301758
    10. '   ' → logprob: -14.202913284301758

Token 824: ' Cases' (ID: 79835)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007445355877280235
    2. '#' → logprob: -5.007445335388184
    3. '       ' → logprob: -7.507445335388184
    4. ' if' → logprob: -8.757445335388184
    5. 'If' → logprob: -11.507445335388184
    6. 'def' → logprob: -11.882445335388184
    7. 'start' → logprob: -13.257445335388184
    8. '```' → logprob: -13.382445335388184
    9. 'route' → logprob: -13.882445335388184
    10. ' #' → logprob: -14.757445335388184

Token 825: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004646215122193098
    2. ' if' → logprob: -5.629646301269531
    3. 'if' → logprob: -6.879646301269531
    4. ':' → logprob: -11.879646301269531
    5. '
' → logprob: -12.879646301269531
    6. ',' → logprob: -13.379646301269531
    7. '```' → logprob: -13.504646301269531
    8. '        
' → logprob: -13.629646301269531
    9. '   ' → logprob: -13.754646301269531
    10. 'elif' → logprob: -14.379646301269531

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.436450636712834e-05
    2. ':' → logprob: -9.875094413757324
    3. '
' → logprob: -10.875094413757324
    4. '        
' → logprob: -12.250094413757324
    5. ' if' → logprob: -12.375094413757324
    6. '           ' → logprob: -12.500094413757324
    7. '   ' → logprob: -13.125094413757324
    8. '        ' → logprob: -13.250094413757324
    9. 'import' → logprob: -14.000094413757324
    10. '1' → logprob: -14.125094413757324

Token 827: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10630705207586288
    2. 'if' → logprob: -2.356307029724121
    3. ' if' → logprob: -5.106307029724121
    4. '   ' → logprob: -10.981307029724121
    5. '#' (adapté à ' #') → logprob: -12.356307029724121
    6. '```' → logprob: -14.481307029724121
    7. '        
' → logprob: -14.731307029724121
    8. '           ' → logprob: -14.981307029724121
    9. '      ' → logprob: -15.356307029724121
    10. '
' → logprob: -15.356307029724121

Token 828: ' Case' (ID: 18964)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004566718824207783
    2. '       ' → logprob: -6.004566669464111
    3. '#' → logprob: -6.754566669464111
    4. ' if' → logprob: -7.004566669464111
    5. 'If' → logprob: -11.25456714630127
    6. '   ' → logprob: -13.50456714630127
    7. '```' → logprob: -14.50456714630127
    8. ' #' → logprob: -15.25456714630127
    9. 'elif' → logprob: -15.25456714630127
    10. '	if' → logprob: -16.254566192626953

Token 829: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14154376089572906
    2. '1' → logprob: -3.0165438652038574
    3. ' if' → logprob: -3.5165438652038574
    4. '0' → logprob: -3.8915438652038574
    5. ':' → logprob: -4.391543865203857
    6. '       ' → logprob: -5.516543865203857
    7. ' =' → logprob: -5.641543865203857
    8. '(' → logprob: -5.891543865203857
    9. ' (' → logprob: -6.016543865203857
    10. ' in' → logprob: -6.016543865203857

Token 830: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039482422173023224
    2. 'in' → logprob: -3.664482355117798
    3. '#' → logprob: -5.414482593536377
    4. '0' → logprob: -5.664482593536377
    5. ':' → logprob: -6.414482593536377
    6. ' ' → logprob: -6.664482593536377
    7. 'start' → logprob: -7.164482593536377
    8. 'if' → logprob: -7.289482593536377
    9. 'when' → logprob: -8.164482116699219
    10. 'linear' → logprob: -8.289482116699219

Token 831: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051083844155073166
    2. '       ' → logprob: -3.30108380317688
    3. ' if' → logprob: -5.051084041595459
    4. ' :' → logprob: -5.426084041595459
    5. ':
' → logprob: -6.676084041595459
    6. ' =' → logprob: -8.3010835647583
    7. 'if' → logprob: -8.3010835647583
    8. '   ' → logprob: -9.1760835647583
    9. '=' → logprob: -9.4260835647583
    10. ' ' → logprob: -10.3010835647583

Token 832: ' both' (ID: 2973)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6647056937217712
    2. ' start' → logprob: -0.9147056937217712
    3. 'in' → logprob: -2.789705753326416
    4. ' in' → logprob: -4.039705753326416
    5. 'if' → logprob: -5.789705753326416
    6. ' if' → logprob: -5.914705753326416
    7. ' ' → logprob: -9.664705276489258
    8. '   ' → logprob: -10.789705276489258
    9. '       ' → logprob: -11.039705276489258
    10. '0' → logprob: -11.914705276489258

Token 833: ' start' (ID: 1604)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.010358570143580437
    2. ' in' → logprob: -5.0103583335876465
    3. 'start' → logprob: -5.6353583335876465
    4. ' start' → logprob: -10.260358810424805
    5. 'numbers' → logprob: -11.635358810424805
    6. '(in' → logprob: -12.010358810424805
    7. 'are' → logprob: -12.260358810424805
    8. 'linear' → logprob: -12.760358810424805
    9. ' are' → logprob: -12.885358810424805
    10. 'points' → logprob: -13.885358810424805

Token 834: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.276275634765625
    2. ' and' → logprob: -1.526275634765625
    3. 'in' → logprob: -3.901275634765625
    4. ' in' → logprob: -6.151275634765625
    5. '<=' → logprob: -7.401275634765625
    6. ' <=' → logprob: -7.776275634765625
    7. '==' → logprob: -8.276275634765625
    8. ',' → logprob: -8.651275634765625
    9. ' ==' → logprob: -9.026275634765625
    10. '       ' → logprob: -11.026275634765625

Token 835: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.038042180240154266
    2. ' end' → logprob: -3.2880420684814453
    3. 'stop' → logprob: -14.913042068481445
    4. ' ' → logprob: -16.038042068481445
    5. '   ' → logprob: -16.288042068481445
    6. '_end' → logprob: -16.538042068481445
    7. 'in' → logprob: -17.163042068481445
    8. ' in' → logprob: -17.413042068481445
    9. '(end' → logprob: -17.413042068481445
    10. '0' → logprob: -17.788042068481445

Token 836: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5282266139984131
    2. ' in' → logprob: -0.9032266139984131
    3. ' are' → logprob: -5.778226852416992
    4. 'are' → logprob: -6.903226852416992
    5. 'linear' → logprob: -8.028226852416992
    6. ' linear' → logprob: -8.778226852416992
    7. 'numbers' → logprob: -9.028226852416992
    8. ' numbers' → logprob: -9.153226852416992
    9. '_in' → logprob: -10.278226852416992
    10. '   ' → logprob: -10.278226852416992

Token 837: ' ' (ID: 220)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.033419523388147354
    2. ' linear' → logprob: -4.033419609069824
    3. 'in' → logprob: -5.283419609069824
    4. '0' → logprob: -5.533419609069824
    5. 'range' → logprob: -5.783419609069824
    6. '[' → logprob: -6.783419609069824
    7. 'the' → logprob: -7.658419609069824
    8. ' in' → logprob: -8.158419609069824
    9. ' range' → logprob: -8.408419609069824
    10. 'line' → logprob: -8.533419609069824

Token 838: '0' (ID: 15)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.0030351129826158285
    2. ' linear' → logprob: -6.753035068511963
    3. '0' → logprob: -7.003035068511963
    4. 'in' → logprob: -7.878035068511963
    5. 'range' → logprob: -8.378035545349121
    6. 'the' → logprob: -9.128035545349121
    7. '[' → logprob: -9.253035545349121
    8. 'line' → logprob: -9.628035545349121
    9. '_linear' → logprob: -10.878035545349121
    10. '5' → logprob: -11.503035545349121

Token 839: '-' (ID: 12)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31001317501068115
    2. ' <=' → logprob: -2.1850132942199707
    3. 'and' → logprob: -2.8100132942199707
    4. '5' → logprob: -3.3100132942199707
    5. ' and' → logprob: -3.6850132942199707
    6. ',' → logprob: -4.310013294219971
    7. '       ' → logprob: -5.060013294219971
    8. '6' → logprob: -5.810013294219971
    9. ' ' → logprob: -6.060013294219971
    10. 'if' → logprob: -6.560013294219971

Token 840: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.375036239624023
    3. '   ' → logprob: -14.250036239624023
    4. '```' → logprob: -14.312536239624023
    5. '55' → logprob: -14.500036239624023
    6. '05' → logprob: -15.000036239624023
    7. '
' → logprob: -15.062536239624023
    8. '' → logprob: -15.312536239624023
    9. '`' → logprob: -15.562536239624023
    10. '  ' → logprob: -15.687536239624023

Token 841: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016406656941398978
    2. ' if' → logprob: -7.376640796661377
    3. ' and' → logprob: -7.626640796661377
    4. ',' → logprob: -8.126640319824219
    5. '
' → logprob: -9.126640319824219
    6. ':' → logprob: -9.501640319824219
    7. 'and' → logprob: -11.751640319824219
    8. '        
' → logprob: -11.751640319824219
    9. 'if' → logprob: -11.876640319824219
    10. '           ' → logprob: -12.126640319824219

Token 842: 'linear' (ID: 41454)
  Prédit: 'linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.8620160222053528
    2. ')' → logprob: -1.737015962600708
    3. 'if' → logprob: -1.862015962600708
    4. '       ' → logprob: -2.987015962600708
    5. ' and' → logprob: -3.362015962600708
    6. ' if' → logprob: -3.362015962600708
    7. ' linear' → logprob: -3.362015962600708
    8. '):' → logprob: -3.612015962600708
    9. 'in' → logprob: -3.737015962600708
    10. 'and' → logprob: -4.737016201019287

Token 843: ' section' (ID: 7102)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8020561933517456
    2. '):' → logprob: -0.9270561933517456
    3. ')' → logprob: -2.302056312561035
    4. ')
' → logprob: -3.177056312561035
    5. '       ' → logprob: -5.302056312561035
    6. '):

' → logprob: -5.927056312561035
    7. 'range' → logprob: -6.677056312561035
    8. ' and' → logprob: -7.052056312561035
    9. ' segment' → logprob: -7.052056312561035
    10. 'segment' → logprob: -7.177056312561035

Token 844: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7788156867027283
    2. ')
' → logprob: -1.653815746307373
    3. '):' → logprob: -1.778815746307373
    4. ')' → logprob: -1.903815746307373
    5. '       ' → logprob: -3.528815746307373
    6. '):

' → logprob: -6.903815746307373
    7. '),' → logprob: -7.153815746307373
    8. ':' → logprob: -8.903815269470215
    9. '):
' → logprob: -8.903815269470215
    10. ' and' → logprob: -9.028815269470215

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042804674012586474
    2. '
' → logprob: -8.000428199768066
    3. '        
' → logprob: -10.125428199768066
    4. ' if' → logprob: -10.625428199768066
    5. 'if' → logprob: -11.625428199768066
    6. '   ' → logprob: -12.125428199768066
    7. ',' → logprob: -12.500428199768066
    8. '```' → logprob: -12.750428199768066
    9. '           ' → logprob: -13.000428199768066
    10. 'return' → logprob: -13.125428199768066

Token 846: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014128545299172401
    2. ' if' → logprob: -6.751412868499756
    3. 'if' (adapté à ' if') → logprob: -8.876412391662598
    4. '```' → logprob: -10.251412391662598
    5. '           ' → logprob: -10.751412391662598
    6. '   ' → logprob: -11.001412391662598
    7. '        
' → logprob: -12.001412391662598
    8. ',' → logprob: -12.001412391662598
    9. 'return' → logprob: -12.251412391662598
    10. '
' → logprob: -12.876412391662598

Token 847: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16045087575912476
    2. ' in' → logprob: -1.9104509353637695
    3. '   ' → logprob: -9.03545093536377
    4. ' ' → logprob: -9.91045093536377
    5. '       ' → logprob: -10.66045093536377
    6. '           ' → logprob: -11.78545093536377
    7. '  ' → logprob: -11.91045093536377
    8. '    ' → logprob: -12.41045093536377
    9. '	in' → logprob: -12.41045093536377
    10. '(in' → logprob: -12.66045093536377

Token 848: '_linear' (ID: 102608)
  Prédit: '_linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_linear' → logprob: -0.034686461091041565
    2. 'linear' → logprob: -3.53468656539917
    3. '(start' → logprob: -5.53468656539917
    4. 'start' → logprob: -7.03468656539917
    5. '_c' → logprob: -10.784686088562012
    6. '(line' → logprob: -11.159686088562012
    7. 'line' → logprob: -11.409686088562012
    8. '[start' → logprob: -12.034686088562012
    9. 'Linear' → logprob: -12.159686088562012
    10. '_' → logprob: -12.159686088562012

Token 849: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00014036978245712817
    2. ' (' → logprob: -9.375140190124512
    3. '(' → logprob: -10.250140190124512
    4. 'start' → logprob: -11.125140190124512
    5. '(end' → logprob: -12.750140190124512
    6. '(stop' → logprob: -13.125140190124512
    7. ' start' → logprob: -15.625140190124512
    8. '((' → logprob: -16.500141143798828
    9. ' and' → logprob: -17.000141143798828
    10. '(self' → logprob: -17.250141143798828

Token 850: '_num' (ID: 9834)
  Prédit: '.number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.09538981318473816
    2. ')' → logprob: -2.8453898429870605
    3. 'number' → logprob: -3.4703898429870605
    4. '.start' → logprob: -8.095389366149902
    5. '_number' → logprob: -8.470389366149902
    6. '(number' → logprob: -8.595389366149902
    7. '.num' → logprob: -8.720389366149902
    8. '_num' → logprob: -9.220389366149902
    9. '   ' → logprob: -9.345389366149902
    10. ')
' → logprob: -9.345389366149902

Token 851: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013248840114101768
    2. 'and' → logprob: -7.126324653625488
    3. ' and' → logprob: -8.001324653625488
    4. ' )' → logprob: -8.626324653625488
    5. '       ' → logprob: -12.501324653625488
    6. '   ' → logprob: -14.001324653625488
    7. ')
' → logprob: -14.376324653625488
    8. ')&&' → logprob: -15.251324653625488
    9. '        ' → logprob: -15.626324653625488
    10. '           ' → logprob: -15.876324653625488

Token 852: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4741118848323822
    2. ' and' → logprob: -0.9741119146347046
    3. '       ' → logprob: -10.474111557006836
    4. '           ' → logprob: -12.349111557006836
    5. '   ' → logprob: -13.474111557006836
    6. '      ' → logprob: -15.349111557006836
    7. ' ' → logprob: -15.474111557006836
    8. '          ' → logprob: -16.099111557006836
    9. '  ' → logprob: -16.599111557006836
    10. '	and' → logprob: -16.724111557006836

Token 853: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0017367053078487515
    2. ' in' → logprob: -6.376736640930176
    3. '   ' → logprob: -11.001736640930176
    4. '       ' → logprob: -11.626736640930176
    5. '           ' → logprob: -12.876736640930176
    6. '  ' → logprob: -13.626736640930176
    7. ' ' → logprob: -13.751736640930176
    8. '    ' → logprob: -13.751736640930176
    9. '     ' → logprob: -14.126736640930176
    10. '         ' → logprob: -14.251736640930176

Token 854: '_linear' (ID: 102608)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.014238844625651836
    2. '_linear' → logprob: -4.2642388343811035
    3. ' linear' → logprob: -9.889239311218262
    4. '
' → logprob: -11.639239311218262
    5. 'in' → logprob: -11.764239311218262
    6. 'inear' → logprob: -12.639239311218262
    7. 'logical' → logprob: -14.139239311218262
    8. '5' → logprob: -14.139239311218262
    9. '.linear' → logprob: -14.264239311218262
    10. ' ' → logprob: -14.764239311218262

Token 855: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -1.688212614681106e-05
    2. 'end' → logprob: -11.375017166137695
    3. ' (' → logprob: -12.250017166137695
    4. '(' → logprob: -15.125017166137695
    5. '[end' → logprob: -15.625017166137695
    6. '=end' → logprob: -16.750017166137695
    7. '(stop' → logprob: -16.875017166137695
    8. '(start' → logprob: -17.375017166137695
    9. ',end' → logprob: -17.375017166137695
    10. '((' → logprob: -18.250017166137695

Token 856: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0002467966405674815
    2. 'num' → logprob: -9.50024700164795
    3. ')' → logprob: -9.87524700164795
    4. 'Num' → logprob: -10.00024700164795
    5. '(end' → logprob: -11.00024700164795
    6. '):
' → logprob: -11.12524700164795
    7. '       ' → logprob: -11.25024700164795
    8. '):' → logprob: -11.50024700164795
    9. '   ' → logprob: -12.50024700164795
    10. '           ' → logprob: -13.12524700164795

Token 857: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3872728645801544
    2. '):' → logprob: -1.137272834777832
    3. ')' → logprob: -8.512272834777832
    4. '       ' → logprob: -9.012272834777832
    5. '):
' → logprob: -10.512272834777832
    6. '):

' → logprob: -11.137272834777832
    7. '   ' → logprob: -11.387272834777832
    8. ':' → logprob: -11.387272834777832
    9. '()):
' → logprob: -11.887272834777832
    10. '():
' → logprob: -12.887272834777832

Token 858: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002394170151092112
    2. 'return' → logprob: -8.625239372253418
    3. '       ' → logprob: -10.250239372253418
    4. ' return' → logprob: -10.875239372253418
    5. ':' → logprob: -12.875239372253418
    6. ':
' → logprob: -13.875239372253418
    7. '          ' → logprob: -14.875239372253418
    8. '
' → logprob: -15.125239372253418
    9. '   ' → logprob: -15.125239372253418
    10. '            
' → logprob: -15.250239372253418

Token 859: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47547850012779236
    2. 'return' → logprob: -0.9754785299301147
    3. ' return' → logprob: -6.600478649139404
    4. '   ' → logprob: -10.350478172302246
    5. '       ' → logprob: -12.100478172302246
    6. '{return' → logprob: -14.100478172302246
    7. '          ' → logprob: -14.225478172302246
    8. '               ' → logprob: -14.475478172302246
    9. '	return' → logprob: -14.850478172302246
    10. '```' → logprob: -14.975478172302246

Token 860: ' From' (ID: 7217)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001601983094587922
    2. '           ' → logprob: -6.7516021728515625
    3. ' return' → logprob: -7.7516021728515625
    4. '       ' → logprob: -14.001602172851562
    5. '   ' → logprob: -14.876602172851562
    6. '```' → logprob: -15.751602172851562
    7. '
' → logprob: -16.501602172851562
    8. '               ' → logprob: -16.501602172851562
    9. '	return' → logprob: -16.876602172851562
    10. '#' → logprob: -17.001602172851562

Token 861: ' stops' (ID: 29924)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008316687308251858
    2. 'return' → logprob: -5.383316516876221
    3. ' self' → logprob: -6.133316516876221
    4. 'start' → logprob: -7.508316516876221
    5. 'linear' → logprob: -7.758316516876221
    6. '           ' → logprob: -8.258316993713379
    7. '0' → logprob: -9.508316993713379
    8. ' return' → logprob: -10.008316993713379
    9. 'Bus' → logprob: -10.508316993713379
    10. '       ' → logprob: -10.633316993713379

Token 862: ' ' (ID: 220)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.0846153497695923
    2. '0' → logprob: -1.8346153497695923
    3. '[start' → logprob: -1.8346153497695923
    4. '=' → logprob: -2.2096152305603027
    5. ' =' → logprob: -2.3346152305603027
    6. 'in' → logprob: -2.5846152305603027
    7. '       ' → logprob: -4.209615230560303
    8. '=start' → logprob: -4.334615230560303
    9. '           ' → logprob: -4.584615230560303
    10. ' in' → logprob: -5.209615230560303

Token 863: '1' (ID: 16)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.48804178833961487
    2. '0' → logprob: -1.6130417585372925
    3. '[start' → logprob: -1.7380417585372925
    4. '[' → logprob: -5.238041877746582
    5. 'self' → logprob: -5.738041877746582
    6. '[self' → logprob: -6.738041877746582
    7. 'in' → logprob: -7.613041877746582
    8. '[in' → logprob: -8.613041877746582
    9. 'linear' → logprob: -8.863041877746582
    10. ' start' → logprob: -9.488041877746582

Token 864: '-' (ID: 12)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.030828392133116722
    2. ' to' → logprob: -3.5308284759521484
    3. 'through' → logprob: -7.905828475952148
    4. '       ' → logprob: -8.030828475952148
    5. 'and' → logprob: -9.030828475952148
    6. ' through' → logprob: -10.030828475952148
    7. '0' → logprob: -10.030828475952148
    8. '   ' → logprob: -10.530828475952148
    9. '1' → logprob: -11.030828475952148
    10. '           ' → logprob: -11.155828475952148

Token 865: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10029897093772888
    2. '4' → logprob: -2.3502988815307617
    3. 'end' → logprob: -10.475298881530762
    4. 'start' → logprob: -10.850298881530762
    5. '0' → logprob: -10.975298881530762
    6. '
' → logprob: -11.725298881530762
    7. 'to' → logprob: -12.662798881530762
    8. 'linear' → logprob: -13.100298881530762
    9. ' ' → logprob: -13.225298881530762
    10. 'self' → logprob: -13.537798881530762

Token 866: ',' (ID: 11)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.9072780013084412
    2. 'if' → logprob: -1.407278060913086
    3. '           ' → logprob: -2.032278060913086
    4. 'and' → logprob: -2.407278060913086
    5. ',' → logprob: -3.282278060913086
    6. ' to' → logprob: -3.532278060913086
    7. ' and' → logprob: -4.532278060913086
    8. 'or' → logprob: -4.657278060913086
    9. ' if' → logprob: -4.657278060913086
    10. 'return' → logprob: -4.657278060913086

Token 867: ' both' (ID: 2973)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002785384887829423
    2. ' return' → logprob: -6.5027852058410645
    3. 'path' → logprob: -7.6277852058410645
    4. '#' → logprob: -8.002785682678223
    5. 'if' → logprob: -8.502785682678223
    6. '           ' → logprob: -8.627785682678223
    7. '       ' → logprob: -9.752785682678223
    8. 'route' → logprob: -12.502785682678223
    9. ' path' → logprob: -12.627785682678223
    10. '
' → logprob: -13.127785682678223

Token 868: ' directions' (ID: 24921)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.537927508354187
    2. 'dire' → logprob: -1.412927508354187
    3. 'connected' → logprob: -2.2879276275634766
    4. 'back' → logprob: -3.9129276275634766
    5. 'start' → logprob: -4.162927627563477
    6. 'direction' → logprob: -4.537927627563477
    7. 'connections' → logprob: -5.162927627563477
    8. 'ways' → logprob: -5.412927627563477
    9. ' directions' → logprob: -5.787927627563477
    10. 'linear' → logprob: -6.162927627563477

Token 869: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49664315581321716
    2. 'possible' → logprob: -2.12164306640625
    3. ' are' → logprob: -2.62164306640625
    4. ' possible' → logprob: -2.74664306640625
    5. 'return' → logprob: -2.87164306640625
    6. 'are' → logprob: -3.74664306640625
    7. ' return' → logprob: -4.37164306640625
    8. 'if' → logprob: -4.74664306640625
    9. ' can' → logprob: -5.12164306640625
    10. 'available' → logprob: -5.74664306640625

Token 870: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036882996559143066
    2. 'return' → logprob: -4.0368828773498535
    3. 'if' → logprob: -4.5368828773498535
    4. ' if' → logprob: -5.5368828773498535
    5. '
' → logprob: -6.1618828773498535
    6. ',' → logprob: -7.1618828773498535
    7. ' return' → logprob: -7.9118828773498535
    8. '#' → logprob: -8.536883354187012
    9. '       ' → logprob: -9.411883354187012
    10. ';' → logprob: -9.536883354187012

Token 871: ' choose' (ID: 5655)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43525367975234985
    2. '#' → logprob: -1.810253620147705
    3. '           ' → logprob: -2.435253620147705
    4. 'if' → logprob: -2.435253620147705
    5. 'path' → logprob: -4.435253620147705
    6. ' return' → logprob: -7.060253620147705
    7. '       ' → logprob: -7.810253620147705
    8. ' #' → logprob: -8.310254096984863
    9. ' if' → logprob: -8.435254096984863
    10. ' path' → logprob: -9.435254096984863

Token 872: ' shortest' (ID: 70564)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.640640377998352
    2. 'path' → logprob: -1.890640377998352
    3. 'return' → logprob: -2.2656402587890625
    4. 'linear' → logprob: -2.6406402587890625
    5. 'direction' → logprob: -3.3906402587890625
    6. 'the' → logprob: -3.7656402587890625
    7. 'forward' → logprob: -3.8906402587890625
    8. 'short' → logprob: -4.0156402587890625
    9. '           ' → logprob: -4.1406402587890625
    10. '       ' → logprob: -4.8906402587890625

Token 873: ' path' (ID: 3104)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3578317165374756
    2. 'return' → logprob: -1.7328317165374756
    3. ' path' → logprob: -2.8578317165374756
    4. 'path' → logprob: -3.2328317165374756
    5. ' return' → logprob: -3.7328317165374756
    6. '       ' → logprob: -6.732831954956055
    7. '_path' → logprob: -6.982831954956055
    8. '
' → logprob: -8.607831954956055
    9. 'route' → logprob: -8.732831954956055
    10. ' route' → logprob: -8.732831954956055

Token 874: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024061042815446854
    2. 'return' → logprob: -3.7740609645843506
    3. ' return' → logprob: -7.89906120300293
    4. '       ' → logprob: -8.14906120300293
    5. ',' → logprob: -10.52406120300293
    6. '<|end|>' → logprob: -10.64906120300293
    7. '
' → logprob: -11.02406120300293
    8. ' and' → logprob: -11.02406120300293
    9. '.' → logprob: -11.39906120300293
    10. 'if' → logprob: -11.77406120300293

Token 875: ' line' (ID: 2543)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010158807970583439
    2. 'linear' → logprob: -5.135159015655518
    3. ' self' → logprob: -5.635159015655518
    4. 'line' → logprob: -8.13515853881836
    5. 'the' → logprob: -8.88515853881836
    6. '           ' → logprob: -9.01015853881836
    7. ' linear' → logprob: -9.51015853881836
    8. 'Linear' → logprob: -12.38515853881836
    9. '
' → logprob: -12.63515853881836
    10. 'Line' → logprob: -13.01015853881836

Token 876: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034851450473070145
    2. 'return' → logprob: -3.409851551055908
    3. ' return' → logprob: -7.159851551055908
    4. '       ' → logprob: -8.28485107421875
    5. '               ' → logprob: -9.90985107421875
    6. '
' → logprob: -10.53485107421875
    7. ',' → logprob: -10.90985107421875
    8. '.' → logprob: -11.65985107421875
    9. '   ' → logprob: -12.15985107421875
    10. 's' → logprob: -12.40985107421875

Token 877: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02353685162961483
    2. 'return' → logprob: -3.7735369205474854
    3. ' return' → logprob: -8.648536682128906
    4. '       ' → logprob: -9.148536682128906
    5. '               ' → logprob: -12.273536682128906
    6. '   ' → logprob: -13.523536682128906
    7. '
' → logprob: -14.023536682128906
    8. '          ' → logprob: -15.148536682128906
    9. 'result' → logprob: -15.273536682128906
    10. ',' → logprob: -15.398536682128906

Token 878: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012915612198412418
    2. '           ' → logprob: -4.38791561126709
    3. ' return' → logprob: -8.51291561126709
    4. 'if' → logprob: -9.01291561126709
    5. 'path' → logprob: -9.51291561126709
    6. '       ' → logprob: -12.63791561126709
    7. '
' → logprob: -12.88791561126709
    8. '   ' → logprob: -14.51291561126709
    9. 'result' → logprob: -14.88791561126709
    10. '#' (adapté à ' #') → logprob: -15.01291561126709

Token 879: ' since' (ID: 3630)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06489228457212448
    2. '           ' → logprob: -3.314892292022705
    3. 'if' → logprob: -3.689892292022705
    4. 'path' → logprob: -7.064892292022705
    5. ' return' → logprob: -7.939892292022705
    6. '#' → logprob: -8.439891815185547
    7. ' if' → logprob: -10.564891815185547
    8. '       ' → logprob: -11.314891815185547
    9. '
' → logprob: -11.439891815185547
    10. 'result' → logprob: -11.564891815185547

Token 880: ' line' (ID: 2543)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7183324098587036
    2. 'self' → logprob: -0.8433324098587036
    3. '0' → logprob: -3.593332290649414
    4. 'the' → logprob: -4.218332290649414
    5. ' self' → logprob: -4.718332290649414
    6. ' start' → logprob: -5.093332290649414
    7. 'Line' → logprob: -5.218332290649414
    8. 'linear' → logprob: -5.593332290649414
    9. '5' → logprob: -5.843332290649414
    10. 'not' → logprob: -5.968332290649414

Token 881: ' is' (ID: 382)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6177836060523987
    2. 'segment' → logprob: -1.242783546447754
    3. ' is' → logprob: -3.117783546447754
    4. 'is' → logprob: -3.117783546447754
    5. 'segments' → logprob: -3.742783546447754
    6. '_segment' → logprob: -4.117783546447754
    7. ' segment' → logprob: -4.992783546447754
    8. ' stops' → logprob: -5.367783546447754
    9. '
' → logprob: -5.742783546447754
    10. ' segments' → logprob: -5.742783546447754

Token 882: ' linear' (ID: 23876)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.08648943901062012
    2. 'un' → logprob: -3.58648943901062
    3. ' linear' → logprob: -3.58648943901062
    4. 'one' → logprob: -4.836489677429199
    5. 'a' → logprob: -5.336489677429199
    6. 'not' → logprob: -5.711489677429199
    7. 'straight' → logprob: -5.836489677429199
    8. 'non' → logprob: -6.711489677429199
    9. 'single' → logprob: -6.961489677429199
    10. 'strict' → logprob: -6.961489677429199

Token 883: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2063313126564026
    2. 'return' → logprob: -1.7063312530517578
    3. ' return' → logprob: -6.081331253051758
    4. '
' → logprob: -7.206331253051758
    5. '       ' → logprob: -7.206331253051758
    6. ',' → logprob: -7.581331253051758
    7. 'if' → logprob: -8.331331253051758
    8. ' if' → logprob: -9.206331253051758
    9. '            
' → logprob: -9.831331253051758
    10. '               ' → logprob: -10.206331253051758

Token 884: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05157488211989403
    2. ' return' → logprob: -3.176574945449829
    3. '           ' → logprob: -5.05157470703125
    4. 'if' → logprob: -6.92657470703125
    5. '       ' → logprob: -8.30157470703125
    6. 'path' → logprob: -8.30157470703125
    7. '#' → logprob: -8.42657470703125
    8. '
' → logprob: -9.05157470703125
    9. ' if' → logprob: -9.42657470703125
    10. '   ' → logprob: -9.80157470703125

Token 885: ' forward' (ID: 6687)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_forward' → logprob: -0.8699436783790588
    2. 'is' → logprob: -1.619943618774414
    3. 'forward' → logprob: -1.619943618774414
    4. 'length' → logprob: -3.369943618774414
    5. ' =' → logprob: -3.369943618774414
    6. ' is' → logprob: -3.494943618774414
    7. '=' → logprob: -3.744943618774414
    8. 'should' → logprob: -3.994943618774414
    9. 'will' → logprob: -4.619943618774414
    10. 's' → logprob: -5.244943618774414

Token 886: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.15496321022510529
    2. 'and' → logprob: -2.404963254928589
    3. ' or' → logprob: -3.779963254928589
    4. '=' → logprob: -3.904963254928589
    5. 'if' → logprob: -5.90496301651001
    6. 'return' → logprob: -6.15496301651001
    7. '           ' → logprob: -6.40496301651001
    8. ' =' → logprob: -7.15496301651001
    9. 'is' → logprob: -7.40496301651001
    10. ' and' → logprob: -7.65496301651001

Token 887: ' backward' (ID: 58986)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -2.2246291337069124e-05
    2. ' backward' → logprob: -10.750021934509277
    3. '.backward' → logprob: -14.625021934509277
    4. 'path' → logprob: -16.000022888183594
    5. '_backward' → logprob: -16.250022888183594
    6. '   ' → logprob: -17.375022888183594
    7. 'reverse' → logprob: -17.500022888183594
    8. 'backs' → logprob: -17.875022888183594
    9. 'Backward' → logprob: -18.750022888183594
    10. ' backwards' → logprob: -19.250022888183594

Token 888: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43131816387176514
    2. 'return' → logprob: -1.1813181638717651
    3. ' =' → logprob: -4.681318283081055
    4. ' return' → logprob: -4.931318283081055
    5. '=' → logprob: -5.306318283081055
    6. ' is' → logprob: -6.056318283081055
    7. '       ' → logprob: -6.056318283081055
    8. '.' → logprob: -6.056318283081055
    9. ' can' → logprob: -6.306318283081055
    10. 'if' → logprob: -6.431318283081055

Token 889: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038757916539907455
    2. 'return' → logprob: -3.288757801055908
    3. ' return' → logprob: -7.538757801055908
    4. '       ' → logprob: -9.413758277893066
    5. 'if' → logprob: -9.913758277893066
    6. 'path' → logprob: -11.538758277893066
    7. ' if' → logprob: -11.913758277893066
    8. 'result' → logprob: -12.163758277893066
    9. '               ' → logprob: -12.288758277893066
    10. '```' → logprob: -12.288758277893066

Token 890: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.061685964465141296
    2. '           ' → logprob: -2.9366860389709473
    3. 'if' → logprob: -5.811686038970947
    4. 'path' → logprob: -6.061686038970947
    5. ' return' → logprob: -6.936686038970947
    6. 'start' → logprob: -8.436685562133789
    7. '       ' → logprob: -9.936685562133789
    8. '```' → logprob: -9.936685562133789
    9. 'result' → logprob: -10.186685562133789
    10. '   ' → logprob: -10.811685562133789

Token 891: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009782299399375916
    2. '           ' → logprob: -5.134782314300537
    3. 'path' → logprob: -5.759782314300537
    4. ' return' → logprob: -7.884782314300537
    5. 'if' → logprob: -8.759781837463379
    6. '
' → logprob: -9.759781837463379
    7. 'route' → logprob: -10.884781837463379
    8. '       ' → logprob: -11.134781837463379
    9. 'result' → logprob: -11.384781837463379
    10. 'start' → logprob: -11.509781837463379

Token 892: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.001435589394532144
    2. ' start' → logprob: -6.75143575668335
    3. 'abs' → logprob: -9.001435279846191
    4. 'self' → logprob: -9.126435279846191
    5. 'end' → logprob: -11.001435279846191
    6. '   ' → logprob: -12.126435279846191
    7. '(start' → logprob: -12.876435279846191
    8. 'not' → logprob: -13.376435279846191
    9. '
' → logprob: -13.876435279846191
    10. '       ' → logprob: -14.126435279846191

Token 893: ' <' (ID: 464)
  Prédit: '.number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.021811725571751595
    2. '_num' → logprob: -4.1468119621276855
    3. '.num' → logprob: -6.0218119621276855
    4. 'number' → logprob: -6.2718119621276855
    5. 'Num' → logprob: -7.2718119621276855
    6. 'num' → logprob: -7.5218119621276855
    7. '<=' → logprob: -10.271811485290527
    8. '```' → logprob: -10.396811485290527
    9. '_number' → logprob: -10.646811485290527
    10. '.' → logprob: -10.896811485290527

Token 894: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0024918261915445328
    2. ' end' → logprob: -6.0024919509887695
    3. '=end' → logprob: -11.12749195098877
    4. '=' → logprob: -13.50249195098877
    5. '	end' → logprob: -17.002490997314453
    6. ' ' → logprob: -17.377490997314453
    7. '(end' → logprob: -17.752490997314453
    8. '_end' → logprob: -17.877490997314453
    9. '   ' → logprob: -18.127490997314453
    10. 'stop' → logprob: -18.252490997314453

Token 895: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3903425931930542
    2. '           ' → logprob: -1.3903425931930542
    3. ':
' → logprob: -3.0153427124023438
    4. ':' → logprob: -4.515342712402344
    5. ' and' → logprob: -5.265342712402344
    6. ' or' → logprob: -5.640342712402344
    7. ',' → logprob: -6.265342712402344
    8. 'return' → logprob: -6.390342712402344
    9. 'and' → logprob: -7.640342712402344
    10. ':return' → logprob: -7.890342712402344

Token 896: ' go' (ID: 810)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47199922800064087
    2. '               ' → logprob: -1.096999168395996
    3. ' return' → logprob: -3.596999168395996
    4. '           ' → logprob: -4.221999168395996
    5. '```' → logprob: -8.846999168395996
    6. '   ' → logprob: -9.721999168395996
    7. 'self' → logprob: -10.221999168395996
    8. '{return' → logprob: -11.221999168395996
    9. '       ' → logprob: -11.721999168395996
    10. 'path' → logprob: -12.096999168395996

Token 897: ' forward' (ID: 6687)
  Prédit: ' forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.3971025049686432
    2. 'forward' → logprob: -1.3971024751663208
    3. '_forward' → logprob: -2.5221025943756104
    4. '   ' → logprob: -10.272102355957031
    5. '.forward' → logprob: -10.647102355957031
    6. '_' → logprob: -10.897102355957031
    7. ' ' → logprob: -11.022102355957031
    8. '_FORWARD' → logprob: -11.897102355957031
    9. ' forwards' → logprob: -12.022102355957031
    10. 'start' → logprob: -12.022102355957031

Token 898: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004476762376725674
    2. 'return' → logprob: -6.254476547241211
    3. '               ' → logprob: -6.504476547241211
    4. 'else' → logprob: -7.379476547241211
    5. ',' → logprob: -8.254476547241211
    6. ' else' → logprob: -9.879476547241211
    7. '       ' → logprob: -10.254476547241211
    8. ' return' → logprob: -10.629476547241211
    9. 'elif' → logprob: -11.129476547241211
    10. ';' → logprob: -11.629476547241211

Token 899: ' backward' (ID: 58986)
  Prédit: ' backward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' backward' → logprob: -0.009696004912257195
    2. ' go' → logprob: -5.009696006774902
    3. ' backwards' → logprob: -7.134696006774902
    4. 'back' → logprob: -7.884696006774902
    5. ' return' → logprob: -7.884696006774902
    6. ' self' → logprob: -8.009696006774902
    7. ' path' → logprob: -8.134696006774902
    8. ' back' → logprob: -8.134696006774902
    9. '_backward' → logprob: -8.134696006774902
    10. ' reverse' → logprob: -8.759696006774902

Token 900: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005692115053534508
    2. 'return' → logprob: -5.380692005157471
    3. '       ' → logprob: -7.755692005157471
    4. ' return' → logprob: -8.005692481994629
    5. '<|end|>' → logprob: -8.630692481994629
    6. '
' → logprob: -10.505692481994629
    7. '            
' → logprob: -10.755692481994629
    8. ',' → logprob: -11.005692481994629
    9. '               ' → logprob: -11.380692481994629
    10. '   ' → logprob: -11.630692481994629

Token 901: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004411839880049229
    2. 'return' → logprob: -6.004411697387695
    3. '       ' → logprob: -6.379411697387695
    4. ' return' → logprob: -8.504411697387695
    5. '               ' → logprob: -11.504411697387695
    6. ',' → logprob: -11.879411697387695
    7. '<|end|>' → logprob: -12.129411697387695
    8. '   ' → logprob: -12.504411697387695
    9. '          ' → logprob: -13.254411697387695
    10. ')' → logprob: -13.754411697387695

Token 902: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08984304219484329
    2. '           ' → logprob: -2.4648430347442627
    3. ' return' → logprob: -7.714843273162842
    4. 'if' → logprob: -8.339842796325684
    5. '       ' → logprob: -9.339842796325684
    6. 'path' (adapté à ' path') → logprob: -9.339842796325684
    7. '   ' → logprob: -11.839842796325684
    8. '               ' → logprob: -11.839842796325684
    9. '
' → logprob: -11.964842796325684
    10. '```' → logprob: -12.714842796325684

Token 903: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42996296286582947
    2. ' =' → logprob: -1.0549629926681519
    3. 'return' → logprob: -7.679963111877441
    4. '_fw' → logprob: -8.554963111877441
    5. '   ' → logprob: -8.679963111877441
    6. '       ' → logprob: -9.179963111877441
    7. '_forward' → logprob: -9.554963111877441
    8. '=self' → logprob: -9.929963111877441
    9. '_' → logprob: -10.304963111877441
    10. '.' → logprob: -10.804963111877441

Token 904: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001239196863025427
    2. ' self' → logprob: -9.000123977661133
    3. 'Line' → logprob: -14.750123977661133
    4. '   ' → logprob: -16.750123977661133
    5. '       ' → logprob: -17.750123977661133
    6. '(self' → logprob: -17.875123977661133
    7. ' ' → logprob: -18.000123977661133
    8. '[self' → logprob: -18.000123977661133
    9. '	self' → logprob: -18.875123977661133
    10. '           ' → logprob: -19.000123977661133

Token 905: '.linear' (ID: 75762)
  Prédit: '.linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.linear' → logprob: -1.1875571544806007e-05
    2. '.line' → logprob: -11.875011444091797
    3. 'linear' → logprob: -12.250011444091797
    4. '.' → logprob: -17.500011444091797
    5. '.linspace' → logprob: -17.875011444091797
    6. '.Linear' → logprob: -18.000011444091797
    7. '.lin' → logprob: -18.125011444091797
    8. '.logical' → logprob: -18.375011444091797
    9. '_linear' → logprob: -18.375011444091797
    10. '.binary' → logprob: -18.875011444091797

Token 906: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.0001017551330733113
    2. 'short' → logprob: -9.875102043151855
    3. 'route' → logprob: -11.125102043151855
    4. '.route' → logprob: -11.625102043151855
    5. '.short' → logprob: -11.625102043151855
    6. 'Route' → logprob: -11.750102043151855
    7. '_segment' → logprob: -12.125102043151855
    8. '   ' → logprob: -13.750102043151855
    9. '._' → logprob: -14.375102043151855
    10. '.Route' → logprob: -14.375102043151855

Token 907: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -4.7994282795116305e-05
    2. 'short' → logprob: -10.00004768371582
    3. ' .' → logprob: -14.12504768371582
    4. '.' → logprob: -14.25004768371582
    5. '.shortcuts' → logprob: -14.25004768371582
    6. '.long' → logprob: -16.00004768371582
    7. '.closest' → logprob: -16.00004768371582
    8. '.Short' → logprob: -16.12504768371582
    9. '.sh' → logprob: -16.37504768371582
    10. '.small' → logprob: -17.25004768371582

Token 908: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00018101456225849688
    2. '_path' → logprob: -8.625181198120117
    3. 'path' → logprob: -13.500181198120117
    4. 'er' → logprob: -17.625181198120117
    5. '```' → logprob: -17.625181198120117
    6. 'rest' → logprob: -18.250181198120117
    7. '_est' → logprob: -18.500181198120117
    8. 'es' → logprob: -18.625181198120117
    9. 'estion' → logprob: -18.875181198120117
    10. 'ested' → logprob: -18.875181198120117

Token 909: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.129266067640856e-05
    2. '_' → logprob: -11.500020980834961
    3. '_token' → logprob: -11.500020980834961
    4. '_p' → logprob: -15.000020980834961
    5. '```' → logprob: -16.00002098083496
    6. ''_' → logprob: -16.62502098083496
    7. '"_' → logprob: -17.12502098083496
    8. '_step' → logprob: -17.37502098083496
    9. '_code' → logprob: -17.50002098083496
    10. ')_' → logprob: -17.50002098083496

Token 910: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00018792471382766962
    2. '(' → logprob: -9.000187873840332
    3. 'start' → logprob: -10.000187873840332
    4. '(
' → logprob: -11.000187873840332
    5. ' (' → logprob: -14.125187873840332
    6. '(stop' → logprob: -15.125187873840332
    7. '(current' → logprob: -15.250187873840332
    8. '(st' → logprob: -15.375187873840332
    9. '[start' → logprob: -15.375187873840332
    10. '(end' → logprob: -15.875187873840332

Token 911: ',' (ID: 11)
  Prédit: ',end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',end' → logprob: -0.47408872842788696
    2. ',' → logprob: -0.974088728427887
    3. 'end' → logprob: -11.974088668823242
    4. ' ,' → logprob: -12.974088668823242
    5. '[end' → logprob: -13.724088668823242
    6. '           ' → logprob: -14.599088668823242
    7. '(end' → logprob: -14.724088668823242
    8. '=end' → logprob: -15.224088668823242
    9. ':end' → logprob: -15.349088668823242
    10. ',
' → logprob: -15.974088668823242

Token 912: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.008615161292254925
    2. ' end' → logprob: -4.758615016937256
    3. '           ' → logprob: -14.883615493774414
    4. '       ' → logprob: -16.008615493774414
    5. '(end' → logprob: -16.508615493774414
    6. ')' → logprob: -17.133615493774414
    7. '   ' → logprob: -17.133615493774414
    8. '	end' → logprob: -17.883615493774414
    9. '[end' → logprob: -18.133615493774414
    10. '=end' → logprob: -18.133615493774414

Token 913: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1071465015411377
    2. ')
' → logprob: -2.3571465015411377
    3. ')return' → logprob: -5.607146263122559
    4. '       ' → logprob: -6.107146263122559
    5. '           ' → logprob: -6.982146263122559
    6. ')
' → logprob: -10.357146263122559
    7. 'return' → logprob: -10.357146263122559
    8. '<|end|>' → logprob: -11.357146263122559
    9. ')

' → logprob: -13.107146263122559
    10. '               ' → logprob: -13.607146263122559

Token 914: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037351183127611876
    2. 'return' → logprob: -5.753735065460205
    3. '       ' → logprob: -7.503735065460205
    4. ' return' → logprob: -12.253735542297363
    5. '   ' → logprob: -13.878735542297363
    6. '               ' → logprob: -15.253735542297363
    7. '
' → logprob: -16.003734588623047
    8. '```' → logprob: -16.378734588623047
    9. '		' → logprob: -16.753734588623047
    10. '          ' → logprob: -16.878734588623047

Token 915: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3138454258441925
    2. 'return' (adapté à ' return') → logprob: -1.3138453960418701
    3. ' return' → logprob: -7.563845634460449
    4. '       ' → logprob: -9.68884563446045
    5. '   ' → logprob: -13.56384563446045
    6. '
' → logprob: -14.43884563446045
    7. '               ' → logprob: -14.68884563446045
    8. '          ' → logprob: -15.93884563446045
    9. '	return' → logprob: -16.563844680786133
    10. '		' → logprob: -16.563844680786133

Token 916: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0009247996495105326
    2. ' path' → logprob: -7.000924587249756
    3. '[path' → logprob: -11.625925064086914
    4. '[' → logprob: -13.125925064086914
    5. '   ' → logprob: -13.375925064086914
    6. '(path' → logprob: -15.000925064086914
    7. ' [' → logprob: -15.250925064086914
    8. 'list' → logprob: -15.875925064086914
    9. '
' → logprob: -17.000925064086914
    10. ' ' → logprob: -17.500925064086914

Token 917: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017020927742123604
    2. '
' → logprob: -4.1420207023620605
    3. '<|end|>' → logprob: -7.6420207023620605
    4. '        
' → logprob: -7.7670207023620605
    5. '```' → logprob: -9.892021179199219
    6. '   ' → logprob: -11.892021179199219
    7. 'elif' → logprob: -12.392021179199219
    8. '#' → logprob: -12.642021179199219
    9. '    
' → logprob: -12.892021179199219
    10. '<|end|>' → logprob: -13.142021179199219

Token 918: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14477938413619995
    2. '
' → logprob: -2.0197794437408447
    3. '        
' → logprob: -6.519779205322266
    4. '```' → logprob: -8.519779205322266
    5. '#' → logprob: -8.894779205322266
    6. '   ' → logprob: -9.019779205322266
    7. 'elif' → logprob: -9.519779205322266
    8. '

' → logprob: -10.144779205322266
    9. '    
' → logprob: -11.019779205322266
    10. '<|end|>' → logprob: -11.644779205322266

Token 919: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032352641224861145
    2. '
' → logprob: -3.5323526859283447
    3. '#' (adapté à ' #') → logprob: -6.032352447509766
    4. 'elif' → logprob: -9.407352447509766
    5. '        
' → logprob: -9.782352447509766
    6. 'if' → logprob: -9.907352447509766
    7. '

' → logprob: -12.532352447509766
    8. '   ' → logprob: -12.907352447509766
    9. '```' → logprob: -13.032352447509766
    10. ' if' → logprob: -13.907352447509766

Token 920: ' Case' (ID: 18964)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03608071804046631
    2. 'if' → logprob: -3.536080837249756
    3. 'Case' → logprob: -5.911080837249756
    4. 'elif' → logprob: -5.911080837249756
    5. '       ' → logprob: -7.411080837249756
    6. '   ' → logprob: -8.661080360412598
    7. 'case' → logprob: -10.036080360412598
    8. '
' → logprob: -10.661080360412598
    9. ' #' → logprob: -10.786080360412598
    10. 'If' → logprob: -11.411080360412598

Token 921: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0727243423461914
    2. '0' → logprob: -3.4477243423461914
    3. ' in' → logprob: -3.8227243423461914
    4. '1' → logprob: -4.697724342346191
    5. 'in' → logprob: -5.072724342346191
    6. '   ' → logprob: -8.322724342346191
    7. '       ' → logprob: -8.447724342346191
    8. ':' → logprob: -8.572724342346191
    9. ' #' → logprob: -9.072724342346191
    10. ' (' → logprob: -9.197724342346191

Token 922: '1' (ID: 16)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09874898195266724
    2. '0' → logprob: -2.4737489223480225
    3. '(in' → logprob: -5.723749160766602
    4. ' in' → logprob: -5.973749160766602
    5. '5' → logprob: -6.848749160766602
    6. '(' → logprob: -7.223749160766602
    7. '#' → logprob: -7.473749160766602
    8. ' ' → logprob: -7.598749160766602
    9. '1' → logprob: -8.098749160766602
    10. '   ' → logprob: -9.098749160766602

Token 923: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011503289453685284
    2. '       ' → logprob: -5.511503219604492
    3. ' if' → logprob: -5.636503219604492
    4. 'elif' → logprob: -6.386503219604492
    5. 'if' → logprob: -6.636503219604492
    6. ' :' → logprob: -7.761503219604492
    7. '#' → logprob: -8.511503219604492
    8. ':
' → logprob: -9.761503219604492
    9. ' elif' → logprob: -9.761503219604492
    10. '   ' → logprob: -10.761503219604492

Token 924: ' both' (ID: 2973)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.150144562125206
    2. '(in' → logprob: -2.900144577026367
    3. 'start' → logprob: -3.025144577026367
    4. '#' → logprob: -3.650144577026367
    5. 'both' → logprob: -5.525144577026367
    6. '(start' → logprob: -6.525144577026367
    7. '(' → logprob: -6.650144577026367
    8. ' in' → logprob: -6.775144577026367
    9. ' (' → logprob: -7.275144577026367
    10. 'if' → logprob: -8.025144577026367

Token 925: ' start' (ID: 1604)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.005936263594776392
    2. ' in' → logprob: -5.130936145782471
    3. 'start' → logprob: -13.380936622619629
    4. '(in' → logprob: -13.380936622619629
    5. '
' → logprob: -14.380936622619629
    6. '_num' → logprob: -14.380936622619629
    7. 'c' → logprob: -14.630936622619629
    8. '   ' → logprob: -14.755936622619629
    9. 'num' → logprob: -14.880936622619629
    10. '[in' → logprob: -15.005936622619629

Token 926: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.10749053955078125
    2. ' and' → logprob: -3.1074905395507812
    3. 'in' → logprob: -3.3574905395507812
    4. '_num' → logprob: -3.8574905395507812
    5. ' in' → logprob: -7.482490539550781
    6. 'Num' → logprob: -7.857490539550781
    7. 'num' → logprob: -8.732490539550781
    8. '```' → logprob: -10.607490539550781
    9. 'import' → logprob: -10.732490539550781
    10. '   ' → logprob: -11.232490539550781

Token 927: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.02853313647210598
    2. 'in' → logprob: -4.153532981872559
    3. 'c' → logprob: -5.028532981872559
    4. ' end' → logprob: -5.278532981872559
    5. ' in' → logprob: -7.778532981872559
    6. ' circular' → logprob: -8.903532981872559
    7. 'Circular' → logprob: -9.778532981872559
    8. ' ' → logprob: -10.403532981872559
    9. '(end' → logprob: -10.778532981872559
    10. 'both' → logprob: -11.153532981872559

Token 928: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47412872314453125
    2. 'in' → logprob: -0.9741287231445312
    3. ' ' → logprob: -11.349128723144531
    4. ' are' → logprob: -11.849128723144531
    5. 'num' → logprob: -11.974128723144531
    6. 'import' → logprob: -12.099128723144531
    7. '_num' → logprob: -13.099128723144531
    8. 'Num' → logprob: -13.224128723144531
    9. '   ' → logprob: -13.349128723144531
    10. '[' → logprob: -13.474128723144531

Token 929: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.274753212928772
    2. 'range' → logprob: -2.5247530937194824
    3. '5' → logprob: -2.7747530937194824
    4. 'in' → logprob: -3.1497530937194824
    5. ' range' → logprob: -4.024753093719482
    6. ' circular' → logprob: -4.524753093719482
    7. ' in' → logprob: -5.024753093719482
    8. '(c' → logprob: -5.524753093719482
    9. ' ' → logprob: -5.774753093719482
    10. '[' → logprob: -6.274753093719482

Token 930: '5' (ID: 20)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06474793702363968
    2. 'in' → logprob: -3.4397480487823486
    3. ' circular' → logprob: -4.6897478103637695
    4. '5' → logprob: -4.8147478103637695
    5. 'range' → logprob: -5.6897478103637695
    6. '9' → logprob: -6.3147478103637695
    7. '(c' → logprob: -6.6897478103637695
    8. 'ircular' → logprob: -6.6897478103637695
    9. ' in' → logprob: -6.8147478103637695
    10. '[' → logprob: -7.3147478103637695

Token 931: '-' (ID: 12)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.19077065587043762
    2. ' and' → logprob: -1.9407706260681152
    3. '<=' → logprob: -4.065770626068115
    4. ' <=' → logprob: -5.315770626068115
    5. ')' → logprob: -6.315770626068115
    6. '_num' → logprob: -7.065770626068115
    7. 'Num' → logprob: -7.190770626068115
    8. 'if' → logprob: -7.690770626068115
    9. '   ' → logprob: -7.690770626068115
    10. '       ' → logprob: -7.815770626068115

Token 932: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.751746746478602e-05
    2. ' ' → logprob: -10.12504768371582
    3. 'c' → logprob: -12.25004768371582
    4. 'num' → logprob: -14.62504768371582
    5. 'nine' → logprob: -15.12504768371582
    6. '
' → logprob: -15.25004768371582
    7. ' circular' → logprob: -15.25004768371582
    8. '```' → logprob: -15.25004768371582
    9. 'end' → logprob: -16.00004768371582
    10. '   ' → logprob: -16.31254768371582

Token 933: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00640164315700531
    2. 'if' → logprob: -5.756401538848877
    3. ' if' → logprob: -5.881401538848877
    4. ' and' → logprob: -8.506402015686035
    5. 'and' → logprob: -9.256402015686035
    6. ',' → logprob: -9.506402015686035
    7. '   ' → logprob: -10.756402015686035
    8. 'elif' → logprob: -11.006402015686035
    9. ':' → logprob: -12.006402015686035
    10. '           ' → logprob: -12.381402015686035

Token 934: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02073211967945099
    2. 'in' → logprob: -3.8957321643829346
    3. ' circular' → logprob: -8.895731925964355
    4. ' in' → logprob: -10.520731925964355
    5. '.circular' → logprob: -11.645731925964355
    6. ')' → logprob: -12.270731925964355
    7. ')c' → logprob: -12.520731925964355
    8. 'Circular' → logprob: -12.895731925964355
    9. 'ircular' → logprob: -13.395731925964355
    10. '
' → logprob: -14.145731925964355

Token 935: 'ircular' (ID: 27245)
  Prédit: 'ircular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircular' → logprob: -3.128163257315464e-07
    2. 'ircle' → logprob: -16.125
    3. 'lassical' → logprob: -17.0
    4. 'icular' → logprob: -17.625
    5. '```' → logprob: -17.875
    6. 'ir' → logprob: -18.375
    7. '#' → logprob: -18.5
    8. '   ' → logprob: -18.5
    9. ' circular' → logprob: -18.75
    10. '
' → logprob: -19.0

Token 936: ' section' (ID: 7102)
  Prédit: ' section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' section' → logprob: -0.42297038435935974
    2. 'section' → logprob: -1.4229704141616821
    3. '):
' → logprob: -2.4229702949523926
    4. ')' → logprob: -5.172970294952393
    5. ')
' → logprob: -5.672970294952393
    6. '):' → logprob: -6.047970294952393
    7. '_section' → logprob: -6.672970294952393
    8. ' segment' → logprob: -7.672970294952393
    9. 'segment' → logprob: -7.797970294952393
    10. '):

' → logprob: -7.922970294952393

Token 937: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.651836097240448
    2. '):
' → logprob: -0.776836097240448
    3. '):' → logprob: -4.651835918426514
    4. ':
' → logprob: -5.651835918426514
    5. ':' → logprob: -6.151835918426514
    6. ')' → logprob: -6.151835918426514
    7. '           ' → logprob: -7.276835918426514
    8. ')
' → logprob: -8.151836395263672
    9. ',' → logprob: -8.651836395263672
    10. 'if' → logprob: -8.901836395263672

Token 938: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012710237875580788
    2. '           ' → logprob: -4.387710094451904
    3. ' if' → logprob: -9.762710571289062
    4. 'if' → logprob: -10.137710571289062
    5. ',' → logprob: -10.387710571289062
    6. '   ' → logprob: -11.012710571289062
    7. '{
' → logprob: -11.387710571289062
    8. '
' → logprob: -11.512710571289062
    9. '#' → logprob: -11.762710571289062
    10. '        
' → logprob: -11.887710571289062

Token 939: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02277587167918682
    2. 'if' → logprob: -4.147775650024414
    3. ' if' → logprob: -5.022775650024414
    4. 'elif' (adapté à ' elif') → logprob: -9.897775650024414
    5. '
' → logprob: -10.272775650024414
    6. '           ' → logprob: -10.647775650024414
    7. '        
' → logprob: -12.022775650024414
    8. '   ' → logprob: -12.022775650024414
    9. ',' → logprob: -12.772775650024414
    10. ':' → logprob: -13.272775650024414

Token 940: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04860825836658478
    2. ' in' → logprob: -3.0486083030700684
    3. '   ' → logprob: -11.67360782623291
    4. '(in' → logprob: -12.42360782623291
    5. '       ' → logprob: -12.54860782623291
    6. ' ' → logprob: -13.17360782623291
    7. '	in' → logprob: -13.79860782623291
    8. '           ' → logprob: -14.04860782623291
    9. '  ' → logprob: -15.04860782623291
    10. '    ' → logprob: -15.67360782623291

Token 941: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023880409076809883
    2. '_c' → logprob: -3.7738804817199707
    3. '(c' → logprob: -8.523880004882812
    4. 'linear' → logprob: -8.773880004882812
    5. ' circular' → logprob: -9.648880004882812
    6. 'cir' → logprob: -10.273880004882812
    7. 'in' → logprob: -10.398880004882812
    8. '_linear' → logprob: -10.398880004882812
    9. 'ircular' → logprob: -10.648880004882812
    10. 'def' → logprob: -11.023880004882812

Token 942: 'ircular' (ID: 27245)
  Prédit: 'ircular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircular' → logprob: -4.320199877838604e-07
    2. 'c' → logprob: -15.25
    3. 'ir' → logprob: -16.375
    4. 'ircle' → logprob: -17.125
    5. 'icular' → logprob: -17.125
    6. '.circular' → logprob: -17.75
    7. '_' → logprob: -18.0
    8. 'irical' → logprob: -18.125
    9. 'irc' → logprob: -18.5
    10. '```' → logprob: -18.625

Token 943: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -7.088138227118179e-05
    2. 'start' → logprob: -9.875070571899414
    3. ' (' → logprob: -11.000070571899414
    4. '(' → logprob: -13.500070571899414
    5. '[start' → logprob: -14.250070571899414
    6. ' start' → logprob: -15.375070571899414
    7. '(stop' → logprob: -15.375070571899414
    8. ':start' → logprob: -16.875070571899414
    9. '(end' → logprob: -17.250070571899414
    10. 'and' → logprob: -17.375070571899414

Token 944: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.007738297339528799
    2. ')' → logprob: -4.88273811340332
    3. 'num' → logprob: -9.38273811340332
    4. 'Num' → logprob: -11.00773811340332
    5. '   ' → logprob: -11.25773811340332
    6. '
' → logprob: -12.88273811340332
    7. '_)' → logprob: -12.88273811340332
    8. '       ' → logprob: -13.38273811340332
    9. ')_' → logprob: -14.00773811340332
    10. '#' → logprob: -14.00773811340332

Token 945: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006603728979825974
    2. ' )' → logprob: -7.625660419464111
    3. ' and' → logprob: -9.375659942626953
    4. 'and' → logprob: -9.625659942626953
    5. '):
' → logprob: -10.875659942626953
    6. ')
' → logprob: -14.375659942626953
    7. ')&&' → logprob: -14.750659942626953
    8. '       ' → logprob: -14.875659942626953
    9. '):

' → logprob: -15.000659942626953
    10. '):' → logprob: -15.625659942626953

Token 946: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3886253535747528
    2. 'and' → logprob: -1.1386253833770752
    3. '       ' → logprob: -6.763625144958496
    4. ':
' → logprob: -8.013625144958496
    5. ':' → logprob: -8.763625144958496
    6. '           ' → logprob: -9.763625144958496
    7. '   ' → logprob: -10.138625144958496
    8. ' ' → logprob: -12.513625144958496
    9. '      ' → logprob: -13.263625144958496
    10. '        ' → logprob: -13.263625144958496

Token 947: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00672448705881834
    2. ' in' → logprob: -5.0067243576049805
    3. '   ' → logprob: -12.38172435760498
    4. '       ' → logprob: -13.75672435760498
    5. ' ' → logprob: -14.13172435760498
    6. '           ' → logprob: -14.25672435760498
    7. '  ' → logprob: -14.63172435760498
    8. '    ' → logprob: -14.75672435760498
    9. '         ' → logprob: -14.75672435760498
    10. '          ' → logprob: -15.13172435760498

Token 948: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009896328672766685
    2. '_c' → logprob: -5.009896278381348
    3. 'in' → logprob: -5.759896278381348
    4. ' in' → logprob: -11.634896278381348
    5. 'ircular' → logprob: -12.384896278381348
    6. ' circular' → logprob: -12.884896278381348
    7. '.circular' → logprob: -13.259896278381348
    8. '   ' → logprob: -13.884896278381348
    9. ' ' → logprob: -14.134896278381348
    10. '-c' → logprob: -14.384896278381348

Token 949: 'ircular' (ID: 27245)
  Prédit: 'ircular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircular' → logprob: -2.935296834039036e-06
    2. 'c' → logprob: -12.87500286102295
    3. 'icular' → logprob: -16.000003814697266
    4. 'ir' → logprob: -16.875003814697266
    5. '.circular' → logprob: -17.125003814697266
    6. 'cular' → logprob: -17.125003814697266
    7. '#' → logprob: -17.375003814697266
    8. 'Circular' → logprob: -17.625003814697266
    9. 'irc' → logprob: -18.125003814697266
    10. '```' → logprob: -18.375003814697266

Token 950: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -3.786196975852363e-05
    2. 'end' → logprob: -10.375038146972656
    3. ' (' → logprob: -12.500038146972656
    4. '[end' → logprob: -13.250038146972656
    5. '=end' → logprob: -14.625038146972656
    6. '(' → logprob: -15.125038146972656
    7. ':end' → logprob: -16.375038146972656
    8. '(stop' → logprob: -16.500038146972656
    9. '(start' → logprob: -16.625038146972656
    10. ',end' → logprob: -17.250038146972656

Token 951: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0012549920938909054
    2. 'Num' → logprob: -7.001255035400391
    3. 'num' → logprob: -8.00125503540039
    4. '_NUM' → logprob: -13.00125503540039
    5. '```' → logprob: -13.00125503540039
    6. ')' → logprob: -13.25125503540039
    7. '-num' → logprob: -14.25125503540039
    8. '...' → logprob: -14.75125503540039
    9. '_Num' → logprob: -14.75125503540039
    10. '):
' → logprob: -16.12625503540039

Token 952: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055812131613492966
    2. '):' → logprob: -2.930812120437622
    3. ':' → logprob: -7.805812358856201
    4. ':
' → logprob: -7.930812358856201
    5. '       ' → logprob: -8.930811882019043
    6. '):

' → logprob: -11.555811882019043
    7. '           ' → logprob: -11.805811882019043
    8. '):
' → logprob: -12.055811882019043
    9. '   ' → logprob: -12.930811882019043
    10. ')' → logprob: -13.430811882019043

Token 953: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.578582227230072
    2. '           ' → logprob: -0.828582227230072
    3. 'return' → logprob: -6.078582286834717
    4. 'path' → logprob: -8.703581809997559
    5. ' return' → logprob: -9.078581809997559
    6. ' path' → logprob: -10.203581809997559
    7. '
' → logprob: -12.328581809997559
    8. ':
' → logprob: -12.328581809997559
    9. '   ' → logprob: -12.328581809997559
    10. ',' → logprob: -12.453581809997559

Token 954: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3002317547798157
    2. 'path' → logprob: -1.425231695175171
    3. ' path' → logprob: -4.42523193359375
    4. 'return' → logprob: -5.30023193359375
    5. '       ' → logprob: -6.42523193359375
    6. '
' → logprob: -9.05023193359375
    7. ' return' → logprob: -9.42523193359375
    8. '#' (adapté à ' #') → logprob: -9.55023193359375
    9. '   ' → logprob: -10.80023193359375
    10. '               ' → logprob: -11.80023193359375

Token 955: ' shortest' (ID: 70564)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.014115668833255768
    2. 'return' → logprob: -4.639115810394287
    3. '           ' → logprob: -5.639115810394287
    4. '#' → logprob: -7.764115810394287
    5. ' path' → logprob: -8.139115333557129
    6. '       ' → logprob: -10.264115333557129
    7. '   ' → logprob: -10.764115333557129
    8. 'route' → logprob: -11.889115333557129
    9. ' return' → logprob: -12.139115333557129
    10. '
' → logprob: -12.514115333557129

Token 956: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.16099071502685547
    2. 'path' → logprob: -1.9109907150268555
    3. 'return' → logprob: -7.2859907150268555
    4. ' path' → logprob: -10.535990715026855
    5. 'route' → logprob: -10.535990715026855
    6. '_route' → logprob: -11.910990715026855
    7. '           ' → logprob: -12.410990715026855
    8. '_c' → logprob: -12.785990715026855
    9. '       ' → logprob: -12.910990715026855
    10. 'c' → logprob: -13.035990715026855

Token 957: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5956816077232361
    2. ' =' → logprob: -0.8456816077232361
    3. '           ' → logprob: -3.970681667327881
    4. 'return' → logprob: -7.470681667327881
    5. '               ' → logprob: -9.470681190490723
    6. 'path' → logprob: -11.470681190490723
    7. ' return' → logprob: -11.720681190490723
    8. '       ' → logprob: -11.845681190490723
    9. '   ' → logprob: -12.970681190490723
    10. '                   ' → logprob: -13.220681190490723

Token 958: ' circular' (ID: 37626)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00024168188974726945
    2. ' self' → logprob: -8.50024127960205
    3. '           ' → logprob: -10.25024127960205
    4. 'c' → logprob: -13.37524127960205
    5. '
' → logprob: -15.00024127960205
    6. '(self' → logprob: -15.00024127960205
    7. '               ' → logprob: -15.87524127960205
    8. '       ' → logprob: -16.375242233276367
    9. 'the' → logprob: -16.375242233276367
    10. '```' → logprob: -16.875242233276367

Token 959: ' route' (ID: 9656)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.35082942247390747
    2. 'route' → logprob: -2.3508293628692627
    3. '           ' → logprob: -2.6008293628692627
    4. '_route' → logprob: -2.6008293628692627
    5. '
' → logprob: -3.3508293628692627
    6. '       ' → logprob: -4.975829601287842
    7. '.route' → logprob: -6.100829601287842
    8. ' route' → logprob: -6.350829601287842
    9. ' return' → logprob: -6.475829601287842
    10. 'path' → logprob: -6.725829601287842

Token 960: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008284482173621655
    2. 'return' → logprob: -7.625828266143799
    3. '
' → logprob: -9.125828742980957
    4. ' =' → logprob: -9.625828742980957
    5. ' return' → logprob: -9.875828742980957
    6. '       ' → logprob: -10.000828742980957
    7. 'path' → logprob: -11.000828742980957
    8. ',' → logprob: -11.125828742980957
    9. ':
' → logprob: -11.500828742980957
    10. '=' → logprob: -11.750828742980957

Token 961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011585581814870238
    2. 'return' → logprob: -6.876158714294434
    3. ' return' → logprob: -9.501158714294434
    4. '       ' → logprob: -10.126158714294434
    5. '
' → logprob: -12.251158714294434
    6. 'path' → logprob: -12.501158714294434
    7. '               ' → logprob: -13.751158714294434
    8. ' path' → logprob: -14.251158714294434
    9. '   ' → logprob: -15.501158714294434
    10. ',' → logprob: -16.126157760620117

Token 962: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.48569339513778687
    2. 'return' → logprob: -1.4856934547424316
    3. '           ' → logprob: -1.8606934547424316
    4. ' path' → logprob: -6.235693454742432
    5. ' return' → logprob: -7.110693454742432
    6. '       ' → logprob: -10.735692977905273
    7. '   ' → logprob: -11.485692977905273
    8. '
' → logprob: -12.735692977905273
    9. '               ' → logprob: -13.110692977905273
    10. '```' → logprob: -13.235692977905273

Token 963: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692883610725403
    2. ' =' → logprob: -2.1269288063049316
    3. '=self' → logprob: -14.50192928314209
    4. '=

' → logprob: -15.87692928314209
    5. '           ' → logprob: -17.001928329467773
    6. '=}' → logprob: -17.251928329467773
    7. '=
' → logprob: -17.376928329467773
    8. '.=' → logprob: -17.501928329467773
    9. ')' → logprob: -17.501928329467773
    10. '.' → logprob: -17.626928329467773

Token 964: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026300468016415834
    2. ' self' → logprob: -8.250263214111328
    3. '           ' → logprob: -13.375263214111328
    4. '(self' → logprob: -16.500263214111328
    5. '       ' → logprob: -17.125263214111328
    6. '   ' → logprob: -17.875263214111328
    7. '	self' → logprob: -18.750263214111328
    8. '               ' → logprob: -19.000263214111328
    9. '[self' → logprob: -19.250263214111328
    10. '=self' → logprob: -19.750263214111328

Token 965: '.circular' (ID: 49716)
  Prédit: '.circular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.circular' → logprob: -0.00284600630402565
    2. 'c' → logprob: -5.8778462409973145
    3. 'self' → logprob: -10.377845764160156
    4. '.linear' → logprob: -12.377845764160156
    5. '```' → logprob: -13.377845764160156
    6. '.c' → logprob: -14.002845764160156
    7. 'ircular' → logprob: -14.377845764160156
    8. '   ' → logprob: -15.127845764160156
    9. '           ' → logprob: -15.252845764160156
    10. 'linear' → logprob: -15.252845764160156

Token 966: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -9.491498531133402e-06
    2. 'route' → logprob: -12.125009536743164
    3. '._' → logprob: -13.500009536743164
    4. 'Route' → logprob: -13.500009536743164
    5. '.route' → logprob: -13.875009536743164
    6. '_ROUTE' → logprob: -16.500009536743164
    7. '.Route' → logprob: -17.500009536743164
    8. '_routes' → logprob: -17.750009536743164
    9. '	Route' → logprob: -18.000009536743164
    10. '_path' → logprob: -18.000009536743164

Token 967: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -4.723352049040841e-06
    2. 'short' → logprob: -12.500004768371582
    3. ' .' → logprob: -14.000004768371582
    4. '.' → logprob: -16.375003814697266
    5. '.shortcuts' → logprob: -17.125003814697266
    6. '	short' → logprob: -19.000003814697266
    7. '(short' → logprob: -19.375003814697266
    8. '.sh' → logprob: -19.750003814697266
    9. '.Short' → logprob: -20.000003814697266
    10. '.closest' → logprob: -20.000003814697266

Token 968: 'est' (ID: 376)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.47417986392974854
    2. 'est' → logprob: -0.9741798639297485
    3. 'path' → logprob: -9.224180221557617
    4. 'rest' → logprob: -13.849180221557617
    5. 'ort' → logprob: -13.974180221557617
    6. 'short' → logprob: -14.724180221557617
    7. 'th' → logprob: -15.099180221557617
    8. '.path' → logprob: -15.224180221557617
    9. 'ent' → logprob: -15.599180221557617
    10. '```' → logprob: -15.599180221557617

Token 969: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -3.128163257315464e-07
    2. 'path' → logprob: -15.125
    3. 'Path' → logprob: -20.5
    4. '```' → logprob: -20.625
    5. '_route' → logprob: -21.25
    6. 'short' → logprob: -21.875
    7. '_pat' → logprob: -21.875
    8. '_' → logprob: -21.875
    9. '_PATH' → logprob: -22.0
    10. '.path' → logprob: -22.0

Token 970: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0002615742268972099
    2. 'start' → logprob: -8.250261306762695
    3. '(' → logprob: -15.625261306762695
    4. ' start' → logprob: -17.250261306762695
    5. '[start' → logprob: -17.375261306762695
    6. '(
' → logprob: -17.500261306762695
    7. ' (' → logprob: -17.875261306762695
    8. ',start' → logprob: -18.375261306762695
    9. '.start' → logprob: -19.625261306762695
    10. '	start' → logprob: -19.875261306762695

Token 971: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.050022926181554794
    2. ',end' → logprob: -3.050022840499878
    3. '(end' → logprob: -6.675023078918457
    4. 'end' → logprob: -9.550023078918457
    5. '(' → logprob: -9.800023078918457
    6. ' ,' → logprob: -11.175023078918457
    7. ')' → logprob: -12.050023078918457
    8. ',start' → logprob: -12.300023078918457
    9. ',
' → logprob: -12.675023078918457
    10. '[end' → logprob: -12.925023078918457

Token 972: ' end' (ID: 1268)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00033593899570405483
    2. ' start' → logprob: -8.000335693359375
    3. 'end' → logprob: -14.500335693359375
    4. '(start' → logprob: -19.000335693359375
    5. 'stop' → logprob: -19.375335693359375
    6. ')' → logprob: -20.000335693359375
    7. '
' → logprob: -20.375335693359375
    8. '[start' → logprob: -21.375335693359375
    9. 'Start' → logprob: -21.625335693359375
    10. 'star' → logprob: -21.750335693359375

Token 973: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009711332386359572
    2. ',' → logprob: -7.87597131729126
    3. ')
' → logprob: -7.87597131729126
    4. '_num' → logprob: -8.750970840454102
    5. 'stop' → logprob: -11.125970840454102
    6. ',end' → logprob: -11.125970840454102
    7. ',)' → logprob: -12.000970840454102
    8. ')
' → logprob: -12.500970840454102
    9. ')`' → logprob: -12.500970840454102
    10. '),' → logprob: -13.125970840454102

Token 974: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028660334646701813
    2. 'return' → logprob: -8.250287055969238
    3. '       ' → logprob: -10.875287055969238
    4. '               ' → logprob: -12.750287055969238
    5. ' return' → logprob: -13.000287055969238
    6. '		' → logprob: -14.875287055969238
    7. '	       ' → logprob: -15.125287055969238
    8. '   ' → logprob: -15.375287055969238
    9. '          ' → logprob: -16.250286102294922
    10. '{return' → logprob: -16.375286102294922

Token 975: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0623001754283905
    2. 'return' (adapté à ' return') → logprob: -2.812300205230713
    3. ' return' → logprob: -8.062299728393555
    4. '       ' → logprob: -11.187299728393555
    5. '   ' → logprob: -13.562299728393555
    6. '               ' → logprob: -13.812299728393555
    7. '{return' → logprob: -14.937299728393555
    8. '
' → logprob: -15.437299728393555
    9. '	return' → logprob: -15.437299728393555
    10. '		' → logprob: -15.562299728393555

Token 976: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00017958412354346365
    2. ' path' → logprob: -8.625179290771484
    3. '[path' → logprob: -17.500179290771484
    4. '(path' → logprob: -18.125179290771484
    5. '   ' → logprob: -19.750179290771484
    6. '[' → logprob: -20.250179290771484
    7. 'Path' → logprob: -20.375179290771484
    8. '
' → logprob: -20.625179290771484
    9. '	path' → logprob: -21.000179290771484
    10. 'list' → logprob: -21.250179290771484

Token 977: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006523760501295328
    2. '#' → logprob: -5.381523609161377
    3. '
' → logprob: -7.006523609161377
    4. '```' → logprob: -7.131523609161377
    5. '   ' → logprob: -9.256524085998535
    6. 'elif' → logprob: -10.131524085998535
    7. '        
' → logprob: -10.256524085998535
    8. 'else' → logprob: -11.256524085998535
    9. '<|end|>' → logprob: -12.131524085998535
    10. '``' → logprob: -13.631524085998535

Token 978: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0623328797519207
    2. '#' → logprob: -2.81233286857605
    3. '   ' → logprob: -8.687333106994629
    4. '```' → logprob: -8.937333106994629
    5. '
' → logprob: -10.312333106994629
    6. 'elif' → logprob: -10.437333106994629
    7. '        
' → logprob: -13.937333106994629
    8. ' #' → logprob: -14.437333106994629
    9. '           ' → logprob: -14.812333106994629
    10. '``' → logprob: -15.062333106994629

Token 979: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.03840291500091553
    2. '       ' → logprob: -3.288403034210205
    3. 'elif' → logprob: -8.163402557373047
    4. '
' → logprob: -10.413402557373047
    5. '   ' → logprob: -10.538402557373047
    6. '```' → logprob: -11.663402557373047
    7. 'else' → logprob: -11.788402557373047
    8. ' #' → logprob: -13.288402557373047
    9. 'if' → logprob: -13.538402557373047
    10. '        
' → logprob: -14.788402557373047

Token 980: ' Case' (ID: 18964)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.010945126414299011
    2. 'elif' → logprob: -5.1359453201293945
    3. '       ' → logprob: -5.5109453201293945
    4. 'else' → logprob: -7.0109453201293945
    5. '   ' → logprob: -10.385945320129395
    6. 'if' → logprob: -11.010945320129395
    7. '
' → logprob: -12.135945320129395
    8. ' #' → logprob: -12.260945320129395
    9. '```' → logprob: -14.510945320129395
    10. ' elif' → logprob: -15.135945320129395

Token 981: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0022329248022288084
    2. '1' → logprob: -6.877233028411865
    3. ' #' → logprob: -8.252232551574707
    4. '2' → logprob: -8.502232551574707
    5. '   ' → logprob: -8.752232551574707
    6. ' else' → logprob: -9.127232551574707
    7. ' elif' → logprob: -9.252232551574707
    8. 'elif' → logprob: -9.377232551574707
    9. '0' → logprob: -9.502232551574707
    10. '_' → logprob: -9.877232551574707

Token 982: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00037228144356049597
    2. ' ' → logprob: -8.500371932983398
    3. 'elif' → logprob: -9.250371932983398
    4. 'else' → logprob: -10.250371932983398
    5. '#' → logprob: -11.375371932983398
    6. '1' → logprob: -12.000371932983398
    7. '3' → logprob: -12.000371932983398
    8. '0' → logprob: -12.125371932983398
    9. '   ' → logprob: -13.375371932983398
    10. '(' → logprob: -13.750371932983398

Token 983: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027218335890211165
    2. '       ' → logprob: -8.500271797180176
    3. 'elif' → logprob: -10.000271797180176
    4. '#' → logprob: -11.625271797180176
    5. ' :' → logprob: -12.375271797180176
    6. '   ' → logprob: -12.500271797180176
    7. ':
' → logprob: -13.000271797180176
    8. ' elif' → logprob: -13.250271797180176
    9. ' if' → logprob: -14.750271797180176
    10. '=' → logprob: -14.750271797180176

Token 984: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8896669149398804
    2. 'in' → logprob: -1.1396669149398804
    3. '#' → logprob: -1.6396669149398804
    4. '(in' → logprob: -3.13966703414917
    5. '(start' → logprob: -3.63966703414917
    6. ' (' → logprob: -6.38966703414917
    7. ' start' → logprob: -6.63966703414917
    8. ' in' → logprob: -7.26466703414917
    9. '((' → logprob: -8.014666557312012
    10. '(' → logprob: -8.139666557312012

Token 985: ' in' (ID: 306)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.5467085242271423
    2. ' in' → logprob: -1.546708583831787
    3. ' <' → logprob: -1.671708583831787
    4. 'num' → logprob: -4.546708583831787
    5. 'in' → logprob: -5.296708583831787
    6. ' <=' → logprob: -6.546708583831787
    7. '<' → logprob: -7.046708583831787
    8. '<num' → logprob: -7.421708583831787
    9. ' >=' → logprob: -8.296708106994629
    10. 'and' → logprob: -8.421708106994629

Token 986: ' ' (ID: 220)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.0009904148755595088
    2. ' linear' → logprob: -7.000990390777588
    3. '_linear' → logprob: -10.125990867614746
    4. 'in' → logprob: -10.625990867614746
    5. 'c' → logprob: -12.500990867614746
    6. 'line' → logprob: -12.625990867614746
    7. ' in' → logprob: -13.250990867614746
    8. '.linear' → logprob: -13.750990867614746
    9. 'Linear' → logprob: -14.000990867614746
    10. 'inear' → logprob: -14.375990867614746

Token 987: '0' (ID: 15)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.0033337296918034554
    2. 'in' → logprob: -6.003333568572998
    3. '0' → logprob: -7.378333568572998
    4. ' linear' → logprob: -9.503334045410156
    5. '[' → logprob: -10.003334045410156
    6. '_linear' → logprob: -10.378334045410156
    7. 'line' → logprob: -10.753334045410156
    8. '5' → logprob: -11.628334045410156
    9. '(' → logprob: -11.753334045410156
    10. 'range' → logprob: -11.878334045410156

Token 988: '-' (ID: 12)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3846304714679718
    2. 'and' → logprob: -1.2596304416656494
    3. ' <=' → logprob: -4.6346306800842285
    4. ',' → logprob: -4.7596306800842285
    5. '<=' → logprob: -4.7596306800842285
    6. ' to' → logprob: -5.3846306800842285
    7. ' in' → logprob: -6.8846306800842285
    8. 'in' → logprob: -7.1346306800842285
    9. 'to' → logprob: -7.1346306800842285
    10. '5' → logprob: -7.8846306800842285

Token 989: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.751746746478602e-05
    2. '4' → logprob: -10.00004768371582
    3. '9' → logprob: -13.62504768371582
    4. ' ' → logprob: -15.12504768371582
    5. 'linear' → logprob: -15.12504768371582
    6. '
' → logprob: -15.50004768371582
    7. 'line' → logprob: -17.25004768371582
    8. '```' → logprob: -17.56254768371582
    9. 'five' → logprob: -17.68754768371582
    10. '５' → logprob: -17.81254768371582

Token 990: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04861552268266678
    2. 'and' → logprob: -3.0486154556274414
    3. ',' → logprob: -10.548615455627441
    4. ' ' → logprob: -13.923615455627441
    5. '   ' → logprob: -14.798615455627441
    6. '       ' → logprob: -15.173615455627441
    7. '
' → logprob: -15.798615455627441
    8. ' ,' → logprob: -16.548616409301758
    9. '    ' → logprob: -17.048616409301758
    10. '  ' → logprob: -17.298616409301758

Token 991: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03804171830415726
    2. ' end' → logprob: -3.288041830062866
    3. '(end' → logprob: -15.413042068481445
    4. ' ' → logprob: -18.663042068481445
    5. '
' → logprob: -20.163042068481445
    6. '#' → logprob: -20.163042068481445
    7. '   ' → logprob: -20.288042068481445
    8. '[end' → logprob: -20.663042068481445
    9. '	end' → logprob: -20.913042068481445
    10. '=end' → logprob: -21.163042068481445

Token 992: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14275917410850525
    2. 'in' → logprob: -2.017759084701538
    3. ' not' → logprob: -10.642759323120117
    4. '>' → logprob: -10.767759323120117
    5. 'not' → logprob: -10.892759323120117
    6. ' ' → logprob: -12.017759323120117
    7. 'num' → logprob: -12.142759323120117
    8. ' >' → logprob: -13.517759323120117
    9. '_num' → logprob: -13.517759323120117
    10. '
' → logprob: -13.892759323120117

Token 993: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00076114950934425
    2. ' ' → logprob: -7.750761032104492
    3. '6' → logprob: -8.250761032104492
    4. 'c' → logprob: -10.000761032104492
    5. '(' → logprob: -12.500761032104492
    6. '0' → logprob: -12.750761032104492
    7. '
' → logprob: -12.875761032104492
    8. 'range' → logprob: -12.875761032104492
    9. 'in' → logprob: -13.375761032104492
    10. '   ' → logprob: -13.688261032104492

Token 994: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00045307583059184253
    2. '6' → logprob: -7.750452995300293
    3. 'c' → logprob: -11.750452995300293
    4. ' ' → logprob: -12.125452995300293
    5. '
' → logprob: -13.375452995300293
    6. 'self' → logprob: -13.500452995300293
    7. 'in' → logprob: -13.625452995300293
    8. '(' → logprob: -14.125452995300293
    9. '```' → logprob: -14.500452995300293
    10. '(c' → logprob: -14.562952995300293

Token 995: '-' (ID: 12)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.7082854509353638
    2. '_c' → logprob: -1.8332854509353638
    3. '_num' → logprob: -2.083285331726074
    4. 'if' → logprob: -2.333285331726074
    5. ' and' → logprob: -2.458285331726074
    6. 'and' → logprob: -2.583285331726074
    7. ' or' → logprob: -2.833285331726074
    8. '       ' → logprob: -3.333285331726074
    9. ' if' → logprob: -3.458285331726074
    10. '
' → logprob: -3.458285331726074

Token 996: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.2664456789934775e-06
    2. '10' → logprob: -14.500000953674316
    3. '```' → logprob: -15.625000953674316
    4. '
' → logprob: -16.000001907348633
    5. '0' → logprob: -16.125001907348633
    6. ' ' → logprob: -16.750001907348633
    7. '09' → logprob: -17.562501907348633
    8. '-' → logprob: -17.625001907348633
    9. '=' → logprob: -17.687501907348633
    10. 'to' → logprob: -17.812501907348633

Token 997: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6960979700088501
    2. '       ' → logprob: -0.9460979700088501
    3. ':' → logprob: -2.3210978507995605
    4. '#' → logprob: -5.0710978507995605
    5. ',' → logprob: -5.3210978507995605
    6. '):
' → logprob: -6.8210978507995605
    7. 'if' → logprob: -7.4460978507995605
    8. '
' → logprob: -7.8210978507995605
    9. '   ' → logprob: -7.9460978507995605
    10. '        
' → logprob: -8.446098327636719

Token 998: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021942125633358955
    2. ':
' → logprob: -4.646942138671875
    3. ':' → logprob: -4.896942138671875
    4. ',' → logprob: -7.021942138671875
    5. '#' → logprob: -7.021942138671875
    6. '
' → logprob: -7.146942138671875
    7. '   ' → logprob: -7.521942138671875
    8. '        
' → logprob: -8.521942138671875
    9. '{
' → logprob: -8.646942138671875
    10. ' if' → logprob: -8.646942138671875

Token 999: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06858094781637192
    2. '#' → logprob: -3.0685808658599854
    3. 'if' → logprob: -4.9435811042785645
    4. ' if' → logprob: -5.5685811042785645
    5. ' linear' → logprob: -6.5685811042785645
    6. 'linear' → logprob: -6.6935811042785645
    7. '
' → logprob: -6.8185811042785645
    8. 'line' → logprob: -7.6935811042785645
    9. ' #' → logprob: -7.6935811042785645
    10. '        
' → logprob: -7.6935811042785645

Token 1000: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06202639266848564
    2. ' in' → logprob: -2.8120265007019043
    3. 'start' → logprob: -10.562026023864746
    4. '   ' → logprob: -11.312026023864746
    5. ' start' → logprob: -11.937026023864746
    6. ' ' → logprob: -12.437026023864746
    7. '       ' → logprob: -12.937026023864746
    8. '5' → logprob: -13.437026023864746
    9. '(in' → logprob: -13.437026023864746
    10. '	in' → logprob: -13.687026023864746

Token 1001: '_linear' (ID: 102608)
  Prédit: '_linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_linear' → logprob: -0.2601337730884552
    2. 'linear' → logprob: -1.5101337432861328
    3. '_c' → logprob: -5.010133743286133
    4. 'c' → logprob: -6.510133743286133
    5. ' linear' → logprob: -12.010133743286133
    6. '_line' → logprob: -13.010133743286133
    7. 'line' → logprob: -13.135133743286133
    8. 'Linear' → logprob: -14.385133743286133
    9. '(c' → logprob: -14.510133743286133
    10. '_' → logprob: -14.635133743286133

Token 1002: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0010366219794377685
    2. '(end' → logprob: -7.376036643981934
    3. ' (' → logprob: -7.876036643981934
    4. '(' → logprob: -11.126036643981934
    5. '(stop' → logprob: -11.126036643981934
    6. 'start' → logprob: -14.251036643981934
    7. '[start' → logprob: -17.376035690307617
    8. '(next' → logprob: -17.751035690307617
    9. '(s' → logprob: -17.751035690307617
    10. ' start' → logprob: -17.876035690307617

Token 1003: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00922483392059803
    2. ')' → logprob: -4.759224891662598
    3. 'num' → logprob: -7.509224891662598
    4. 'Num' → logprob: -10.634224891662598
    5. 'and' → logprob: -11.509224891662598
    6. '
' → logprob: -12.509224891662598
    7. '(start' → logprob: -12.634224891662598
    8. ')_' → logprob: -12.884224891662598
    9. '_NUM' → logprob: -13.259224891662598
    10. '(num' → logprob: -13.259224891662598

Token 1004: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010607946896925569
    2. ' )' → logprob: -7.126060962677002
    3. ' and' → logprob: -9.126060485839844
    4. 'and' → logprob: -9.376060485839844
    5. '):
' → logprob: -9.751060485839844
    6. '):' → logprob: -13.501060485839844
    7. ')
' → logprob: -14.126060485839844
    8. '):

' → logprob: -14.251060485839844
    9. '   ' → logprob: -14.501060485839844
    10. '       ' → logprob: -15.126060485839844

Token 1005: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07031562924385071
    2. 'and' → logprob: -2.6953155994415283
    3. ':
' → logprob: -8.82031536102295
    4. ':' → logprob: -9.44531536102295
    5. '       ' → logprob: -9.44531536102295
    6. ' ' → logprob: -10.32031536102295
    7. '   ' → logprob: -11.44531536102295
    8. '        ' → logprob: -11.94531536102295
    9. '           ' → logprob: -11.94531536102295
    10. '    ' → logprob: -12.19531536102295

Token 1006: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07023929059505463
    2. ' in' → logprob: -2.695239305496216
    3. 'not' → logprob: -8.570239067077637
    4. ' not' → logprob: -9.195239067077637
    5. ' ' → logprob: -13.070239067077637
    6. '(in' → logprob: -13.070239067077637
    7. '   ' → logprob: -13.195239067077637
    8. '
' → logprob: -13.445239067077637
    9. 'start' → logprob: -13.945239067077637
    10. '	in' → logprob: -14.195239067077637

Token 1007: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0031853171531111
    2. 'c' → logprob: -5.753185272216797
    3. 'in' → logprob: -12.753185272216797
    4. ' circular' → logprob: -12.878185272216797
    5. 'cir' → logprob: -14.128185272216797
    6. '_' → logprob: -15.128185272216797
    7. 'ircular' → logprob: -15.378185272216797
    8. ' in' → logprob: -15.753185272216797
    9. ' ' → logprob: -15.878185272216797
    10. '.circular' → logprob: -16.003185272216797

Token 1008: 'ircular' (ID: 27245)
  Prédit: 'ircular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircular' → logprob: -0.0004589094896800816
    2. '_c' → logprob: -7.750458717346191
    3. 'c' → logprob: -10.625458717346191
    4. '_' → logprob: -12.875458717346191
    5. 'ir' → logprob: -14.750458717346191
    6. '.circular' → logprob: -14.875458717346191
    7. '#' → logprob: -15.875458717346191
    8. '{' → logprob: -16.375459671020508
    9. 'irical' → logprob: -17.000459671020508
    10. 'i' → logprob: -17.125459671020508

Token 1009: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.00016158436483237892
    2. 'end' → logprob: -8.875161170959473
    3. ' (' → logprob: -11.000161170959473
    4. '[end' → logprob: -12.750161170959473
    5. '(' → logprob: -13.625161170959473
    6. ' end' → logprob: -15.125161170959473
    7. '=end' → logprob: -16.12516212463379
    8. ',end' → logprob: -16.62516212463379
    9. '((' → logprob: -16.75016212463379
    10. '>end' → logprob: -16.75016212463379

Token 1010: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.001033999491482973
    2. 'Num' → logprob: -7.001033782958984
    3. 'num' → logprob: -9.126033782958984
    4. ')' → logprob: -12.376033782958984
    5. '```' → logprob: -13.501033782958984
    6. 'um' → logprob: -13.626033782958984
    7. '(' → logprob: -14.126033782958984
    8. '_NUM' → logprob: -14.251033782958984
    9. '_' → logprob: -14.376033782958984
    10. '):
' → logprob: -14.751033782958984

Token 1011: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12751980125904083
    2. '):' → logprob: -2.1275198459625244
    3. ':' → logprob: -7.752519607543945
    4. ':
' → logprob: -8.877519607543945
    5. '):

' → logprob: -11.627519607543945
    6. ')' → logprob: -12.252519607543945
    7. '):
' → logprob: -12.627519607543945
    8. '       ' → logprob: -13.002519607543945
    9. '():
' → logprob: -13.377519607543945
    10. ' ):
' → logprob: -14.002519607543945

Token 1012: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019856464117765427
    2. '#' → logprob: -4.1448564529418945
    3. '           ' → logprob: -6.5198564529418945
    4. '   ' → logprob: -7.7698564529418945
    5. 'path' → logprob: -7.8948564529418945
    6. '        
' → logprob: -8.519856452941895
    7. 'return' → logprob: -8.769856452941895
    8. 'inter' → logprob: -8.894856452941895
    9. 'route' → logprob: -8.894856452941895
    10. 'transfer' → logprob: -8.894856452941895

Token 1013: ' #' (ID: 1069)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4532049894332886
    2. '#' (adapté à ' #') → logprob: -1.2032049894332886
    3. ' path' → logprob: -4.203205108642578
    4. 'transfer' → logprob: -4.203205108642578
    5. 'linear' → logprob: -4.453205108642578
    6. 'route' → logprob: -5.453205108642578
    7. ' #' → logprob: -5.703205108642578
    8. 'forward' → logprob: -5.953205108642578
    9. 'inter' → logprob: -6.078205108642578
    10. 'line' → logprob: -6.578205108642578

Token 1014: ' Need' (ID: 19792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1288079172372818
    2. 'path' → logprob: -2.25380802154541
    3. 'linear' → logprob: -5.12880802154541
    4. 'inter' → logprob: -6.25380802154541
    5. 'if' → logprob: -6.50380802154541
    6. 'to' → logprob: -6.75380802154541
    7. 'route' → logprob: -7.00380802154541
    8. ' #' → logprob: -7.37880802154541
    9. 'segment' → logprob: -7.50380802154541
    10. 'first' → logprob: -7.50380802154541

Token 1015: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0811375305056572
    2. ' to' → logprob: -2.8311374187469482
    3. '           ' → logprob: -4.581137657165527
    4. '#' → logprob: -5.581137657165527
    5. 'linear' → logprob: -5.956137657165527
    6. ' linear' → logprob: -6.956137657165527
    7. 'path' → logprob: -7.331137657165527
    8. '_to' → logprob: -7.831137657165527
    9. 'first' → logprob: -9.706137657165527
    10. '_linear' → logprob: -10.081137657165527

Token 1016: ' pass' (ID: 1853)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17055849730968475
    2. 'linear' → logprob: -2.545558452606201
    3. 'go' → logprob: -3.795558452606201
    4. 'path' → logprob: -3.920558452606201
    5. 'pass' → logprob: -4.045558452606201
    6. 'connect' → logprob: -5.170558452606201
    7. ' linear' → logprob: -5.545558452606201
    8. ' #' → logprob: -6.295558452606201
    9. 'line' → logprob: -6.795558452606201
    10. 'get' → logprob: -6.920558452606201

Token 1017: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.003937698435038328
    2. ' through' → logprob: -5.878937721252441
    3. '#' → logprob: -7.503937721252441
    4. '5' → logprob: -7.628937721252441
    5. 'stop' → logprob: -9.628937721252441
    6. '           ' → logprob: -12.253937721252441
    7. '0' → logprob: -12.503937721252441
    8. '(' → logprob: -12.503937721252441
    9. 'self' → logprob: -12.753937721252441
    10. ' ' → logprob: -12.878937721252441

Token 1018: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.012686936184763908
    2. 'self' → logprob: -4.387686729431152
    3. ' ' → logprob: -9.262686729431152
    4. ' self' → logprob: -9.762686729431152
    5. '[self' → logprob: -11.137686729431152
    6. '[' → logprob: -11.887686729431152
    7. '   ' → logprob: -13.762686729431152
    8. '(self' → logprob: -14.637686729431152
    9. 'stop' → logprob: -15.012686729431152
    10. '```' → logprob: -15.012686729431152

Token 1019: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0022549335844814777
    2. 'self' → logprob: -6.127254962921143
    3. ' ' → logprob: -9.752254486083984
    4. ' self' → logprob: -11.502254486083984
    5. '[self' → logprob: -14.377254486083984
    6. '[' → logprob: -14.502254486083984
    7. '   ' → logprob: -15.627254486083984
    8. '{' → logprob: -16.752254486083984
    9. '(self' → logprob: -16.814754486083984
    10. 'stop' → logprob: -17.189754486083984

Token 1020: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8512877225875854
    2. 'path' → logprob: -0.8512877225875854
    3. 'linear' → logprob: -2.851287841796875
    4. '#' → logprob: -3.476287841796875
    5. ' path' → logprob: -3.601287841796875
    6. 'forward' → logprob: -4.601287841796875
    7. ' linear' → logprob: -5.101287841796875
    8. 'line' → logprob: -6.226287841796875
    9. '
' → logprob: -6.226287841796875
    10. 'to' → logprob: -6.976287841796875

Token 1021: ' switching' (ID: 45236)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.6317711472511292
    2. 'path' → logprob: -1.1317710876464844
    3. ' linear' → logprob: -3.1317710876464844
    4. 'inter' → logprob: -3.2567710876464844
    5. ' path' → logprob: -3.7567710876464844
    6. 'first' → logprob: -4.381771087646484
    7. '#' → logprob: -5.131771087646484
    8. 'line' → logprob: -6.006771087646484
    9. 'forward' → logprob: -6.006771087646484
    10. ' first' → logprob: -6.256771087646484

Token 1022: ' from' (ID: 591)
  Prédit: 'routes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'routes' → logprob: -0.2310132533311844
    2. 'route' → logprob: -2.106013298034668
    3. ' routes' → logprob: -3.231013298034668
    4. 'to' → logprob: -3.481013298034668
    5. 'from' → logprob: -4.981013298034668
    6. ' route' → logprob: -6.231013298034668
    7. ' to' → logprob: -7.106013298034668
    8. 'lines' → logprob: -7.231013298034668
    9. '_route' → logprob: -7.481013298034668
    10. 'line' → logprob: -7.606013298034668

Token 1023: ' linear' (ID: 23876)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.03482796251773834
    2. 'self' → logprob: -4.034828186035156
    3. ' linear' → logprob: -4.159828186035156
    4. 'line' → logprob: -7.159828186035156
    5. ' self' → logprob: -9.284828186035156
    6. 'the' → logprob: -10.534828186035156
    7. 'Linear' → logprob: -11.034828186035156
    8. 'c' → logprob: -12.659828186035156
    9. '.linear' → logprob: -12.659828186035156
    10. ' line' → logprob: -13.284828186035156

Token 1024: ' to' (ID: 316)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.10066445916891098
    2. 'to' → logprob: -2.8506643772125244
    3. '_route' → logprob: -3.8506643772125244
    4. ' route' → logprob: -4.7256646156311035
    5. ' to' → logprob: -4.9756646156311035
    6. 'segment' → logprob: -7.4756646156311035
    7. 'line' → logprob: -9.600664138793945
    8. 'stop' → logprob: -9.850664138793945
    9. 'section' → logprob: -10.600664138793945
    10. '.route' → logprob: -10.600664138793945

Token 1025: ' circular' (ID: 37626)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0656290352344513
    2. 'self' → logprob: -2.815629005432129
    3. ' circular' → logprob: -5.940629005432129
    4. ' self' → logprob: -6.940629005432129
    5. '.circular' → logprob: -10.690629005432129
    6. 'cir' → logprob: -11.815629005432129
    7. 'circle' → logprob: -12.065629005432129
    8. 'the' → logprob: -12.190629005432129
    9. 'Circular' → logprob: -12.565629005432129
    10. 'circ' → logprob: -12.815629005432129

Token 1026: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5463901162147522
    2. '
' → logprob: -0.9213901162147522
    3. ' linear' → logprob: -5.171390056610107
    4. 'linear' → logprob: -5.171390056610107
    5. 'path' → logprob: -5.546390056610107
    6. ' path' → logprob: -6.296390056610107
    7. '#' → logprob: -6.796390056610107
    8. '            
' → logprob: -6.796390056610107
    9. '.
' → logprob: -7.296390056610107
    10. ',' → logprob: -7.796390056610107

Token 1027: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02088366635143757
    2. '5' → logprob: -3.895883560180664
    3. ' self' → logprob: -8.020883560180664
    4. 'stop' → logprob: -11.895883560180664
    5. '
' → logprob: -13.270883560180664
    6. ' ' → logprob: -13.520883560180664
    7. 'start' → logprob: -14.270883560180664
    8. '(self' → logprob: -14.520883560180664
    9. '```' → logprob: -14.645883560180664
    10. '   ' → logprob: -14.770883560180664

Token 1028: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00137404166162014
    2. '5' → logprob: -6.626374244689941
    3. ' self' → logprob: -10.251374244689941
    4. 'stop' → logprob: -11.376374244689941
    5. '(self' → logprob: -15.376374244689941
    6. 'start' → logprob: -15.501374244689941
    7. '
' → logprob: -16.001373291015625
    8. '   ' → logprob: -16.251373291015625
    9. '	self' → logprob: -16.376373291015625
    10. '[self' → logprob: -16.376373291015625

Token 1029: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3941723108291626
    2. 'linear' → logprob: -1.3941723108291626
    3. 'path' → logprob: -2.894172191619873
    4. '
' → logprob: -5.144172191619873
    5. ' linear' → logprob: -5.269172191619873
    6. 'line' → logprob: -5.394172191619873
    7. '#' → logprob: -6.144172191619873
    8. 'forward' → logprob: -6.394172191619873
    9. 'start' → logprob: -7.519172191619873
    10. ' path' → logprob: -7.519172191619873

Token 1030: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4922570586204529
    2. 'linear' → logprob: -1.3672571182250977
    3. 'path' → logprob: -2.6172571182250977
    4. ' linear' → logprob: -3.8672571182250977
    5. 'forward' → logprob: -3.8672571182250977
    6. 'line' → logprob: -4.617257118225098
    7. '#' → logprob: -5.867257118225098
    8. ' path' → logprob: -5.992257118225098
    9. '            
' → logprob: -7.367257118225098
    10. '
' → logprob: -7.492257118225098

Token 1031: ' #' (ID: 1069)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.05575001612305641
    2. 'linear' → logprob: -3.0557501316070557
    3. 'first' → logprob: -6.055749893188477
    4. '#' (adapté à ' #') → logprob: -6.055749893188477
    5. 'line' → logprob: -7.430749893188477
    6. 'forward' → logprob: -7.805749893188477
    7. 'part' → logprob: -7.805749893188477
    8. 'route' → logprob: -7.930749893188477
    9. ' path' → logprob: -8.305749893188477
    10. 'to' → logprob: -8.305749893188477

Token 1032: ' From' (ID: 7217)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.11349117755889893
    2. 'linear' → logprob: -2.4884910583496094
    3. ' path' → logprob: -4.488491058349609
    4. 'first' → logprob: -5.238491058349609
    5. '#' → logprob: -5.863491058349609
    6. 'part' → logprob: -5.988491058349609
    7. 'line' → logprob: -7.113491058349609
    8. ' linear' → logprob: -7.488491058349609
    9. 'to' → logprob: -7.988491058349609
    10. 'route' → logprob: -9.11349105834961

Token 1033: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.001153674442321062
    2. 'self' → logprob: -7.251153469085693
    3. ' start' → logprob: -7.876153469085693
    4. 'linear' → logprob: -9.876153945922852
    5. 'stop' → logprob: -12.626153945922852
    6. 'line' → logprob: -13.001153945922852
    7. 'end' → logprob: -13.376153945922852
    8. '
' → logprob: -14.376153945922852
    9. '(start' → logprob: -14.501153945922852
    10. '=start' → logprob: -14.626153945922852

Token 1034: ' to' (ID: 316)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.5457293391227722
    2. 'to' → logprob: -1.295729398727417
    3. 'path' → logprob: -2.795729398727417
    4. ' to' → logprob: -2.920729398727417
    5. '_to' → logprob: -3.670729398727417
    6. ' path' → logprob: -5.420729160308838
    7. '_linear' → logprob: -7.670729160308838
    8. '_num' → logprob: -7.795729160308838
    9. 'linear' → logprob: -8.670729637145996
    10. ')' → logprob: -8.795729637145996

Token 1035: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03290242701768875
    2. '5' → logprob: -3.532902479171753
    3. ' self' → logprob: -5.782902240753174
    4. 'stop' → logprob: -11.407902717590332
    5. '```' → logprob: -11.532902717590332
    6. 'linear' → logprob: -11.657902717590332
    7. 'Bus' → logprob: -12.032902717590332
    8. ' ' → logprob: -12.282902717590332
    9. '=self' → logprob: -12.407902717590332
    10. '[self' → logprob: -12.657902717590332

Token 1036: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043579499470070004
    2. ' self' → logprob: -8.375435829162598
    3. '5' → logprob: -8.500435829162598
    4. 'linear' → logprob: -14.875435829162598
    5. 'Bus' → logprob: -15.500435829162598
    6. ' ' → logprob: -15.500435829162598
    7. 'stop' → logprob: -15.625435829162598
    8. '(self' → logprob: -16.00043487548828
    9. '0' → logprob: -16.00043487548828
    10. ')' → logprob: -16.25043487548828

Token 1037: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5931035280227661
    2. 'path' → logprob: -0.8431035280227661
    3. 'start' → logprob: -4.468103408813477
    4. ' path' → logprob: -6.218103408813477
    5. 'linear' → logprob: -6.593103408813477
    6. 'return' → logprob: -7.218103408813477
    7. ',' → logprob: -8.718103408813477
    8. '
' → logprob: -8.843103408813477
    9. '_path' → logprob: -8.968103408813477
    10. 'self' → logprob: -9.343103408813477

Token 1038: ' linear' (ID: 23876)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1034773662686348
    2. 'linear' → logprob: -2.4784774780273438
    3. ' self' → logprob: -4.603477478027344
    4. 'line' → logprob: -5.978477478027344
    5. ' linear' → logprob: -6.603477478027344
    6. 'the' → logprob: -7.978477478027344
    7. ' line' → logprob: -10.228477478027344
    8. ' the' → logprob: -10.353477478027344
    9. '           ' → logprob: -10.478477478027344
    10. 'Linear' → logprob: -10.978477478027344

Token 1039: ' route' (ID: 9656)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.14891600608825684
    2. '           ' → logprob: -2.523916006088257
    3. ' path' → logprob: -4.023916244506836
    4. 'segment' → logprob: -4.023916244506836
    5. '_path' → logprob: -4.648916244506836
    6. 'linear' → logprob: -5.773916244506836
    7. 'route' → logprob: -6.773916244506836
    8. 'line' → logprob: -6.898916244506836
    9. ')' → logprob: -7.023916244506836
    10. ' =' → logprob: -7.273916244506836

Token 1040: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4582992494106293
    2. '           ' → logprob: -1.2082992792129517
    3. ' path' → logprob: -3.708299160003662
    4. ' =' → logprob: -3.833299160003662
    5. '=' → logprob: -5.208299160003662
    6. 'start' → logprob: -5.208299160003662
    7. 'linear' → logprob: -5.583299160003662
    8. ':' → logprob: -6.833299160003662
    9. ' part' → logprob: -6.958299160003662
    10. ',' → logprob: -7.083299160003662

Token 1041: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1082901805639267
    2. 'path' → logprob: -2.358290195465088
    3. ' path' → logprob: -5.233290195465088
    4. ',' → logprob: -6.858290195465088
    5. 'start' → logprob: -7.358290195465088
    6. 'return' → logprob: -8.35828971862793
    7. ':' → logprob: -8.73328971862793
    8. '
' → logprob: -9.73328971862793
    9. 'forward' → logprob: -9.73328971862793
    10. '_path' → logprob: -9.73328971862793

Token 1042: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.045082446187734604
    2. ' path' → logprob: -3.9200823307037354
    3. 'part' → logprob: -4.1700825691223145
    4. ' part' → logprob: -5.4200825691223145
    5. 'linear' → logprob: -6.0450825691223145
    6. 'start' → logprob: -7.5450825691223145
    7. 'segment' → logprob: -7.5450825691223145
    8. 'partial' → logprob: -7.9200825691223145
    9. 'first' → logprob: -8.420082092285156
    10. ' linear' → logprob: -9.295082092285156

Token 1043: '_to' (ID: 5089)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9109287858009338
    2. ' =' → logprob: -1.285928726196289
    3. '_to' → logprob: -1.910928726196289
    4. '_start' → logprob: -2.660928726196289
    5. '_part' → logprob: -3.410928726196289
    6. '_forward' → logprob: -3.535928726196289
    7. '_linear' → logprob: -3.785928726196289
    8. '_fw' → logprob: -4.910928726196289
    9. '=' → logprob: -5.160928726196289
    10. '_lin' → logprob: -6.035928726196289

Token 1044: '_' (ID: 62)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.581771194934845
    2. 'self' → logprob: -0.831771194934845
    3. ' self' → logprob: -6.581771373748779
    4. '[self' → logprob: -6.706771373748779
    5. '[' → logprob: -6.831771373748779
    6. 'five' → logprob: -7.081771373748779
    7. 'stop' → logprob: -7.956771373748779
    8. ' ' → logprob: -8.081770896911621
    9. 'linear' → logprob: -9.206770896911621
    10. ' five' → logprob: -9.831770896911621

Token 1045: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6861361265182495
    2. 'self' → logprob: -0.8111361265182495
    3. 'linear' → logprob: -3.311136245727539
    4. 'stop' → logprob: -5.061136245727539
    5. 'five' → logprob: -5.186136245727539
    6. 'line' → logprob: -6.186136245727539
    7. 'Bus' → logprob: -7.061136245727539
    8. '```' → logprob: -9.061136245727539
    9. 'Stop' → logprob: -9.436136245727539
    10. '`' → logprob: -9.686136245727539

Token 1046: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519505023956299
    2. ' =' → logprob: -1.5019505023956299
    3. '_forward' → logprob: -11.37695026397705
    4. '1' → logprob: -12.50195026397705
    5. '=start' → logprob: -13.75195026397705
    6. '_' → logprob: -14.00195026397705
    7. '=line' → logprob: -14.25195026397705
    8. '=
' → logprob: -14.37695026397705
    9. '_start' → logprob: -14.62695026397705
    10. '_=' → logprob: -14.87695026397705

Token 1047: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014173267409205437
    2. ' self' → logprob: -4.2641730308532715
    3. '           ' → logprob: -12.01417350769043
    4. '[self' → logprob: -12.76417350769043
    5. '(self' → logprob: -14.63917350769043
    6. '       ' → logprob: -16.13917350769043
    7. '	self' → logprob: -16.26417350769043
    8. '[' → logprob: -16.38917350769043
    9. '               ' → logprob: -16.88917350769043
    10. '=self' → logprob: -17.01417350769043

Token 1048: '.linear' (ID: 75762)
  Prédit: '.linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.linear' → logprob: -0.0040793512016534805
    2. 'linear' → logprob: -5.504079341888428
    3. '.line' → logprob: -14.629079818725586
    4. '_linear' → logprob: -15.629079818725586
    5. 'self' → logprob: -16.129079818725586
    6. ' linear' → logprob: -16.879079818725586
    7. '.Linear' → logprob: -17.129079818725586
    8. 'inear' → logprob: -18.129079818725586
    9. '.logical' → logprob: -18.379079818725586
    10. '_LINEAR' → logprob: -18.379079818725586

Token 1049: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -3.4881879400927573e-05
    2. '._' → logprob: -10.750035285949707
    3. '.route' → logprob: -11.625035285949707
    4. 'route' → logprob: -13.250035285949707
    5. '_segment' → logprob: -13.875035285949707
    6. 'Route' → logprob: -14.250035285949707
    7. '.Route' → logprob: -15.250035285949707
    8. '.' → logprob: -15.875035285949707
    9. '_ROUTE' → logprob: -15.875035285949707
    10. '_.' → logprob: -16.37503433227539

Token 1050: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -0.00012725738633889705
    2. 'short' → logprob: -9.000126838684082
    3. ' .' → logprob: -13.375126838684082
    4. '.shortcuts' → logprob: -13.875126838684082
    5. '.' → logprob: -14.375126838684082
    6. '.sh' → logprob: -15.500126838684082
    7. '	short' → logprob: -16.0001277923584
    8. '.path' → logprob: -16.3751277923584
    9. '.Short' → logprob: -16.5001277923584
    10. '短' → logprob: -16.6251277923584

Token 1051: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.000964223057962954
    2. '_path' → logprob: -7.000964164733887
    3. 'path' → logprob: -10.250964164733887
    4. 'test' → logprob: -11.750964164733887
    5. 'rest' → logprob: -12.750964164733887
    6. '```' → logprob: -13.375964164733887
    7. '.path' → logprob: -13.750964164733887
    8. 'st' → logprob: -14.750964164733887
    9. '(path' → logprob: -15.000964164733887
    10. 'ест' → logprob: -15.000964164733887

Token 1052: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.3557529857498594e-05
    2. '_token' → logprob: -10.75002384185791
    3. 'path' → logprob: -14.00002384185791
    4. '```' → logprob: -14.75002384185791
    5. '_route' → logprob: -16.250022888183594
    6. 'token' → logprob: -16.250022888183594
    7. '_segment' → logprob: -16.250022888183594
    8. '._' → logprob: -16.250022888183594
    9. '_stop' → logprob: -16.500022888183594
    10. '_' → logprob: -16.500022888183594

Token 1053: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -8.888114098226652e-05
    2. 'start' → logprob: -9.500088691711426
    3. '(' → logprob: -11.375088691711426
    4. '(stop' → logprob: -13.875088691711426
    5. '(
' → logprob: -14.500088691711426
    6. ' (' → logprob: -15.250088691711426
    7. '(end' → logprob: -15.625088691711426
    8. '[start' → logprob: -15.625088691711426
    9. ' start' → logprob: -15.750088691711426
    10. '(st' → logprob: -16.000089645385742

Token 1054: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017393168527632952
    2. ',self' → logprob: -6.376739501953125
    3. ',
' → logprob: -11.001739501953125
    4. 'self' → logprob: -11.501739501953125
    5. ' ,' → logprob: -12.376739501953125
    6. ',start' → logprob: -13.251739501953125
    7. ',[' → logprob: -14.376739501953125
    8. ',

' → logprob: -14.501739501953125
    9. ',end' → logprob: -14.626739501953125
    10. ')' → logprob: -14.876739501953125

Token 1055: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010914575977949426
    2. ' self' → logprob: -9.12510871887207
    3. '(self' → logprob: -17.12510871887207
    4. ')' → logprob: -17.62510871887207
    5. 'stop' → logprob: -17.87510871887207
    6. '
' → logprob: -18.37510871887207
    7. '[self' → logprob: -18.62510871887207
    8. '5' → logprob: -18.75010871887207
    9. '=self' → logprob: -18.75010871887207
    10. '   ' → logprob: -18.75010871887207

Token 1056: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0004915529862046242
    2. 'st' → logprob: -7.625491619110107
    3. '.' → logprob: -13.37549114227295
    4. '.bus' → logprob: -14.37549114227295
    5. ' stops' → logprob: -15.12549114227295
    6. '.stop' → logprob: -15.62549114227295
    7. '_st' → logprob: -16.000492095947266
    8. '	st' → logprob: -16.125492095947266
    9. 'Stops' → logprob: -16.250492095947266
    10. '>' → logprob: -16.375492095947266

Token 1057: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.00029244067263789475
    2. '.ops' → logprob: -9.125292778015137
    3. '.st' → logprob: -9.625292778015137
    4. 'op' → logprob: -10.125292778015137
    5. 'ps' → logprob: -11.000292778015137
    6. 'st' → logprob: -11.000292778015137
    7. '{' → logprob: -11.750292778015137
    8. 'os' → logprob: -11.750292778015137
    9. '[' → logprob: -12.500292778015137
    10. '```' → logprob: -12.625292778015137

Token 1058: '[' (ID: 58)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.054934076964855194
    2. '[' → logprob: -2.929934024810791
    3. '(' → logprob: -10.17993450164795
    4. '{' → logprob: -11.55493450164795
    5. ' ' → logprob: -12.80493450164795
    6. '```' → logprob: -14.05493450164795
    7. '   ' → logprob: -15.67993450164795
    8. '[
' → logprob: -16.054933547973633
    9. ' [' → logprob: -16.429933547973633
    10. ')' → logprob: -16.429933547973633

Token 1059: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.625
    3. ' ' → logprob: -17.125
    4. '[' → logprob: -17.375
    5. '```' → logprob: -18.25
    6. '
' → logprob: -20.25
    7. ']' → logprob: -20.75
    8. '{' → logprob: -20.875
    9. '۵' → logprob: -21.0
    10. '    ' → logprob: -21.125

Token 1060: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07025162875652313
    2. ')' → logprob: -2.695251703262329
    3. '])
' → logprob: -8.57025146484375
    4. ')
' → logprob: -9.82025146484375
    5. '))' → logprob: -10.69525146484375
    6. ')]' → logprob: -10.94525146484375
    7. ')])' → logprob: -11.19525146484375
    8. ']' → logprob: -11.94525146484375
    9. ' ])' → logprob: -12.94525146484375
    10. ''])' → logprob: -12.94525146484375

Token 1061: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0266672745347023
    2. 'path' → logprob: -4.65166711807251
    3. '#' → logprob: -4.77666711807251
    4. '
' → logprob: -5.65166711807251
    5. ' path' → logprob: -6.27666711807251
    6. '       ' → logprob: -6.77666711807251
    7. '[path' → logprob: -7.40166711807251
    8. '[' → logprob: -7.77666711807251
    9. '            
' → logprob: -8.151667594909668
    10. 'return' → logprob: -9.151667594909668

Token 1062: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.22842589020729065
    2. 'path' → logprob: -1.8534258604049683
    3. '           ' → logprob: -3.478425979614258
    4. '
' → logprob: -4.478425979614258
    5. ' path' → logprob: -5.728425979614258
    6. ' #' → logprob: -6.978425979614258
    7. 'if' → logprob: -8.103425979614258
    8. '            
' → logprob: -8.353425979614258
    9. '       ' → logprob: -8.478425979614258
    10. 'next' → logprob: -9.603425979614258

Token 1063: ' From' (ID: 7217)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.03276607766747475
    2. '#' → logprob: -3.532766103744507
    3. 'c' → logprob: -7.032765865325928
    4. 'from' → logprob: -7.532765865325928
    5. ' path' → logprob: -7.532765865325928
    6. 'remaining' → logprob: -8.657766342163086
    7. 'start' → logprob: -8.782766342163086
    8. 'rest' → logprob: -8.907766342163086
    9. 'if' → logprob: -8.907766342163086
    10. 'index' → logprob: -9.532766342163086

Token 1064: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005985465249978006
    2. '5' → logprob: -8.000598907470703
    3. ' self' → logprob: -8.250598907470703
    4. 'end' → logprob: -14.125598907470703
    5. '(self' → logprob: -15.000598907470703
    6. '6' → logprob: -15.500598907470703
    7. ' ' → logprob: -16.000598907470703
    8. 'stop' → logprob: -16.375598907470703
    9. '[self' → logprob: -16.500598907470703
    10. '=self' → logprob: -16.750598907470703

Token 1065: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2961512513575144e-05
    2. '5' → logprob: -11.125022888183594
    3. ' self' → logprob: -12.375022888183594
    4. 'end' → logprob: -12.750022888183594
    5. 'stop' → logprob: -15.125022888183594
    6. '
' → logprob: -15.625022888183594
    7. 'se' → logprob: -16.000022888183594
    8. 'start' → logprob: -16.250022888183594
    9. '6' → logprob: -16.375022888183594
    10. 'sel' → logprob: -16.625022888183594

Token 1066: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.037183281034231186
    2. 'connected' → logprob: -4.0371832847595215
    3. ' to' → logprob: -4.1621832847595215
    4. '.connected' → logprob: -6.4121832847595215
    5. '_to' → logprob: -7.6621832847595215
    6. '
' → logprob: -8.162182807922363
    7. 'on' → logprob: -8.287182807922363
    8. ' connected' → logprob: -9.162182807922363
    9. 'self' → logprob: -9.412182807922363
    10. ' onward' → logprob: -9.662182807922363

Token 1067: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00710510928183794
    2. ' end' → logprob: -5.382104873657227
    3. 'self' → logprob: -6.007104873657227
    4. ' self' → logprob: -11.007104873657227
    5. '
' → logprob: -14.257104873657227
    6. '	end' → logprob: -14.507104873657227
    7. '(end' → logprob: -14.507104873657227
    8. '```' → logprob: -14.507104873657227
    9. '   ' → logprob: -15.132104873657227
    10. ' ' → logprob: -15.132104873657227

Token 1068: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3176577091217041
    2. '=' → logprob: -1.942657709121704
    3. ' on' → logprob: -2.442657709121704
    4. '           ' → logprob: -3.817657709121704
    5. ' path' → logprob: -4.942657470703125
    6. 'on' → logprob: -4.942657470703125
    7. 'path' → logprob: -5.692657470703125
    8. '_path' → logprob: -7.317657470703125
    9. ' in' → logprob: -7.692657470703125
    10. ':' → logprob: -8.442657470703125

Token 1069: ' circular' (ID: 37626)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00038336371653713286
    2. ' self' → logprob: -7.875383377075195
    3. '           ' → logprob: -13.375383377075195
    4. 'the' → logprob: -14.500383377075195
    5. '(self' → logprob: -15.125383377075195
    6. 'c' → logprob: -15.125383377075195
    7. '=self' → logprob: -15.500383377075195
    8. ')' → logprob: -16.500383377075195
    9. '```' → logprob: -16.500383377075195
    10. '[self' → logprob: -16.875383377075195

Token 1070: ' route' (ID: 9656)
  Prédit: '_route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.00425255810841918
    2. 'route' → logprob: -5.5042524337768555
    3. 'self' → logprob: -8.754252433776855
    4. '.route' → logprob: -11.379252433776855
    5. ' route' → logprob: -12.754252433776855
    6. '_path' → logprob: -14.379252433776855
    7. 'path' → logprob: -14.504252433776855
    8. 'Route' → logprob: -14.879252433776855
    9. '_routes' → logprob: -15.629252433776855
    10. '$route' → logprob: -16.754253387451172

Token 1071: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044495776295661926
    2. 'path' → logprob: -3.5444958209991455
    3. ' path' → logprob: -4.294495582580566
    4. '
' → logprob: -8.544495582580566
    5. 'self' → logprob: -8.544495582580566
    6. 'return' → logprob: -8.544495582580566
    7. ' =' → logprob: -9.169495582580566
    8. ',' → logprob: -9.669495582580566
    9. '(path' → logprob: -9.669495582580566
    10. '=' → logprob: -10.294495582580566

Token 1072: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09616898000240326
    2. 'path' → logprob: -2.4711689949035645
    3. ' path' → logprob: -5.0961689949035645
    4. 'return' → logprob: -7.5961689949035645
    5. 'self' → logprob: -8.471168518066406
    6. '
' → logprob: -9.596168518066406
    7. '[path' → logprob: -10.221168518066406
    8. '```' → logprob: -10.221168518066406
    9. ',' → logprob: -10.346168518066406
    10. '(path' → logprob: -10.471168518066406

Token 1073: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.011670723557472229
    2. ' path' → logprob: -4.5116705894470215
    3. 'self' → logprob: -7.5116705894470215
    4. '           ' → logprob: -10.38667106628418
    5. 'return' → logprob: -10.38667106628418
    6. ' self' → logprob: -11.63667106628418
    7. '       ' → logprob: -12.63667106628418
    8. '
' → logprob: -14.38667106628418
    9. ' return' → logprob: -14.38667106628418
    10. '_path' → logprob: -15.01167106628418

Token 1074: '_' (ID: 62)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5861716270446777
    2. '_c' → logprob: -1.0861716270446777
    3. '_fw' → logprob: -2.9611716270446777
    4. '=' → logprob: -3.8361716270446777
    5. '_on' → logprob: -4.461171627044678
    6. '_from' → logprob: -4.586171627044678
    7. ' =' → logprob: -5.711171627044678
    8. '_bw' → logprob: -6.086171627044678
    9. '_' → logprob: -6.711171627044678
    10. 'to' → logprob: -6.711171627044678

Token 1075: '5' (ID: 20)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6540257930755615
    2. '_to' → logprob: -0.7790257930755615
    3. '_fw' → logprob: -5.029026031494141
    4. '=' → logprob: -5.904026031494141
    5. ' =' → logprob: -6.029026031494141
    6. 'c' → logprob: -6.029026031494141
    7. '_c' → logprob: -6.029026031494141
    8. '_from' → logprob: -6.654026031494141
    9. '=c' → logprob: -6.904026031494141
    10. 'from' → logprob: -7.279026031494141

Token 1076: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.07872167229652405
    2. ' =' → logprob: -3.203721761703491
    3. '_' → logprob: -4.078721523284912
    4. '=' → logprob: -4.453721523284912
    5. '_forward' → logprob: -5.578721523284912
    6. '_from' → logprob: -7.203721523284912
    7. '_on' → logprob: -7.828721523284912
    8. '_c' → logprob: -8.20372200012207
    9. '[' → logprob: -8.45372200012207
    10. '_for' → logprob: -8.70372200012207

Token 1077: '_end' (ID: 13707)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08922537416219711
    2. 'c' → logprob: -3.2142252922058105
    3. 'end' → logprob: -3.3392252922058105
    4. '9' → logprob: -4.9642252922058105
    5. ' self' → logprob: -6.9642252922058105
    6. '5' → logprob: -7.8392252922058105
    7. 'stop' → logprob: -8.214225769042969
    8. 'num' → logprob: -8.339225769042969
    9. '=self' → logprob: -9.339225769042969
    10. '   ' → logprob: -9.714225769042969

Token 1078: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740781784057617
    2. ' =' → logprob: -0.9740781784057617
    3. '=self' → logprob: -14.849078178405762
    4. '.' → logprob: -15.099078178405762
    5. '[' → logprob: -15.724078178405762
    6. '.=' → logprob: -16.099079132080078
    7. ' ' → logprob: -16.349079132080078
    8. '       ' → logprob: -16.974079132080078
    9. '   ' → logprob: -16.974079132080078
    10. ')' → logprob: -17.099079132080078

Token 1079: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016039881855249405
    2. ' self' → logprob: -4.141039848327637
    3. '           ' → logprob: -12.766039848327637
    4. '       ' → logprob: -14.016039848327637
    5. '[self' → logprob: -14.141039848327637
    6. '   ' → logprob: -15.016039848327637
    7. '	self' → logprob: -15.266039848327637
    8. ' ' → logprob: -15.766039848327637
    9. '(self' → logprob: -15.891039848327637
    10. '         ' → logprob: -16.266040802001953

Token 1080: '.circular' (ID: 49716)
  Prédit: '.circular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.circular' → logprob: -5.438573680294212e-06
    2. 'ircular' → logprob: -12.375005722045898
    3. '.linear' → logprob: -14.250005722045898
    4. 'c' → logprob: -15.375005722045898
    5. '.circle' → logprob: -16.5000057220459
    6. '```' → logprob: -16.6250057220459
    7. 'Circular' → logprob: -17.1250057220459
    8. '.c' → logprob: -17.6250057220459
    9. '.' → logprob: -17.7500057220459
    10. '
' → logprob: -18.1250057220459

Token 1081: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -1.1041145626222715e-05
    2. 'route' → logprob: -11.625011444091797
    3. '.route' → logprob: -13.500011444091797
    4. '._' → logprob: -14.625011444091797
    5. '_routes' → logprob: -16.625011444091797
    6. '_ROUTE' → logprob: -16.875011444091797
    7. 'Route' → logprob: -17.250011444091797
    8. '.Route' → logprob: -17.750011444091797
    9. '_network' → logprob: -17.875011444091797
    10. '_router' → logprob: -18.375011444091797

Token 1082: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -1.1279553291387856e-05
    2. 'short' → logprob: -11.625011444091797
    3. ' .' → logprob: -14.000011444091797
    4. '.shortcuts' → logprob: -14.250011444091797
    5. '.' → logprob: -14.875011444091797
    6. '.long' → logprob: -15.875011444091797
    7. '.small' → logprob: -16.750011444091797
    8. '.Short' → logprob: -17.375011444091797
    9. '	short' → logprob: -17.500011444091797
    10. '.closest' → logprob: -17.875011444091797

Token 1083: 'est' (ID: 376)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.25206297636032104
    2. 'est' → logprob: -1.5020630359649658
    3. 'path' → logprob: -9.377062797546387
    4. 'short' → logprob: -10.627062797546387
    5. 'ort' → logprob: -11.627062797546387
    6. '```' → logprob: -12.752062797546387
    7. 'art' → logprob: -12.877062797546387
    8. 'Path' → logprob: -13.377062797546387
    9. '.path' → logprob: -14.002062797546387
    10. '-path' → logprob: -14.127062797546387

Token 1084: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -8.180258191714529e-06
    2. 'path' → logprob: -11.750008583068848
    3. 'Path' → logprob: -15.750008583068848
    4. ' path' → logprob: -17.87500762939453
    5. '```' → logprob: -18.37500762939453
    6. '_route' → logprob: -18.62500762939453
    7. '.path' → logprob: -19.25000762939453
    8. 'self' → logprob: -19.50000762939453
    9. '
' → logprob: -19.62500762939453
    10. '-path' → logprob: -19.75000762939453

Token 1085: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16049078106880188
    2. 'self' → logprob: -1.9104907512664795
    3. 'start' → logprob: -8.910490989685059
    4. '(start' → logprob: -9.535490989685059
    5. ' self' → logprob: -10.035490989685059
    6. '(' → logprob: -11.410490989685059
    7. '(
' → logprob: -13.785490989685059
    8. '[self' → logprob: -14.410490989685059
    9. 'stop' → logprob: -14.535490989685059
    10. '5' → logprob: -14.535490989685059

Token 1086: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -2.5776860184123507e-06
    2. 'st' → logprob: -13.37500286102295
    3. 'self' → logprob: -15.00000286102295
    4. 's' → logprob: -15.75000286102295
    5. '.s' → logprob: -15.75000286102295
    6. '	st' → logprob: -16.625001907348633
    7. '.' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.125001907348633
    9. 'sts' → logprob: -17.625001907348633
    10. '(st' → logprob: -17.625001907348633

Token 1087: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0034526491072028875
    2. '.ops' → logprob: -5.753452777862549
    3. '._' → logprob: -9.75345230102539
    4. 'op' → logprob: -9.87845230102539
    5. '.op' → logprob: -10.12845230102539
    6. '.' → logprob: -10.50345230102539
    7. '.st' → logprob: -10.62845230102539
    8. '.stop' → logprob: -11.87845230102539
    9. 'ps' → logprob: -12.00345230102539
    10. 's' → logprob: -12.37845230102539

Token 1088: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007424530107527971
    2. '(' → logprob: -5.132424354553223
    3. '5' → logprob: -6.507424354553223
    4. '{' → logprob: -13.632424354553223
    5. ' [' → logprob: -15.257424354553223
    6. ' ' → logprob: -15.257424354553223
    7. '   ' → logprob: -15.632424354553223
    8. ')' → logprob: -16.13242530822754
    9. '6' → logprob: -16.25742530822754
    10. '```' → logprob: -16.25742530822754

Token 1089: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'end' → logprob: -17.000001907348633
    4. 'five' → logprob: -17.625001907348633
    5. '۵' → logprob: -17.875001907348633
    6. '[' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '５' → logprob: -19.000001907348633
    9. ' five' → logprob: -19.000001907348633
    10. '५' → logprob: -19.250001907348633

Token 1090: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006743912119418383
    2. ',end' → logprob: -5.006743907928467
    3. 'end' → logprob: -10.881744384765625
    4. ' ,' → logprob: -11.756744384765625
    5. '[end' → logprob: -14.006744384765625
    6. '(end' → logprob: -15.131744384765625
    7. '           ' → logprob: -15.881744384765625
    8. ' end' → logprob: -16.006744384765625
    9. '),' → logprob: -16.131744384765625
    10. '   ' → logprob: -16.256744384765625

Token 1091: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.018151111900806427
    2. ' end' → logprob: -4.01815128326416
    3. 'self' → logprob: -14.14315128326416
    4. '       ' → logprob: -16.268150329589844
    5. '
' → logprob: -16.393150329589844
    6. '           ' → logprob: -16.518150329589844
    7. '   ' → logprob: -16.643150329589844
    8. ' ' → logprob: -17.643150329589844
    9. '        ' → logprob: -17.643150329589844
    10. '```' → logprob: -17.768150329589844

Token 1092: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010914575977949426
    2. ')
' → logprob: -9.25010871887207
    3. ')[' → logprob: -11.50010871887207
    4. ').' → logprob: -14.00010871887207
    5. ' )' → logprob: -14.37510871887207
    6. ')`' → logprob: -14.50010871887207
    7. '           ' → logprob: -15.25010871887207
    8. ')+' → logprob: -16.12510871887207
    9. ')

' → logprob: -16.25010871887207
    10. '[' → logprob: -16.37510871887207

Token 1093: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3316279351711273
    2. '       ' → logprob: -1.5816279649734497
    3. '
' → logprob: -2.58162784576416
    4. 'return' → logprob: -7.70662784576416
    5. '   ' → logprob: -8.58162784576416
    6. 'path' → logprob: -9.33162784576416
    7. '        
' → logprob: -9.70662784576416
    8. '```' → logprob: -9.70662784576416
    9. '            
' → logprob: -10.20662784576416
    10. '
' → logprob: -10.83162784576416

Token 1094: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018392004072666168
    2. '#' (adapté à ' #') → logprob: -4.768392086029053
    3. '           ' → logprob: -4.768392086029053
    4. '       ' → logprob: -7.643392086029053
    5. ' return' → logprob: -7.768392086029053
    6. 'if' → logprob: -8.768391609191895
    7. '
' → logprob: -8.893391609191895
    8. 'full' → logprob: -11.018391609191895
    9. 'path' → logprob: -11.643391609191895
    10. 'result' → logprob: -11.768391609191895

Token 1095: ' Conc' (ID: 38226)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008087544701993465
    2. '#' → logprob: -5.008087635040283
    3. 'if' → logprob: -6.883087635040283
    4. ' return' → logprob: -9.508087158203125
    5. 'full' → logprob: -9.508087158203125
    6. 'result' → logprob: -9.758087158203125
    7. '           ' → logprob: -10.258087158203125
    8. 'combined' → logprob: -10.383087158203125
    9. '       ' → logprob: -10.508087158203125
    10. '
' → logprob: -10.883087158203125

Token 1096: 'atenate' (ID: 63439)
  Prédit: 'atenate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -0.00030674142180942
    2. 'aten' → logprob: -8.500307083129883
    3. 'at' → logprob: -9.250307083129883
    4. 'ate' → logprob: -12.000307083129883
    5. '```' → logprob: -14.875307083129883
    6. 'path' → logprob: -15.625307083129883
    7. 't' → logprob: -16.250307083129883
    8. 'cat' → logprob: -16.500307083129883
    9. 'atan' → logprob: -16.625307083129883
    10. '[' → logprob: -17.000307083129883

Token 1097: ' but' (ID: 889)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.057796262204647064
    2. 'return' → logprob: -3.3077962398529053
    3. ' path' → logprob: -4.432796478271484
    4. '(path' → logprob: -4.932796478271484
    5. ' return' → logprob: -8.057796478271484
    6. '           ' → logprob: -10.057796478271484
    7. '(' → logprob: -10.307796478271484
    8. '(
' → logprob: -10.432796478271484
    9. 'result' → logprob: -10.682796478271484
    10. '_path' → logprob: -11.182796478271484

Token 1098: ' remove' (ID: 6234)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.33071276545524597
    2. ' path' → logprob: -2.0807127952575684
    3. 'return' → logprob: -2.0807127952575684
    4. ' return' → logprob: -3.5807127952575684
    5. '
' → logprob: -6.455712795257568
    6. '[:-' → logprob: -6.705712795257568
    7. '#' → logprob: -7.580712795257568
    8. '[' → logprob: -8.33071231842041
    9. ' #' → logprob: -9.45571231842041
    10. '[path' → logprob: -9.58071231842041

Token 1099: ' duplicate' (ID: 41010)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.25204896926879883
    2. 'path' → logprob: -1.5020489692687988
    3. '[path' → logprob: -9.62704849243164
    4. '[' → logprob: -10.50204849243164
    5. '5' → logprob: -11.25204849243164
    6. '(path' → logprob: -12.75204849243164
    7. '[-' → logprob: -12.87704849243164
    8. '   ' → logprob: -13.62704849243164
    9. '	path' → logprob: -13.75204849243164
    10. '_path' → logprob: -14.00204849243164

Token 1100: ' ' (ID: 220)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.17571043968200684
    2. ' path' → logprob: -2.175710439682007
    3. '5' → logprob: -3.425710439682007
    4. '[' → logprob: -4.550710678100586
    5. '   ' → logprob: -6.675710678100586
    6. '[path' → logprob: -7.050710678100586
    7. '```' → logprob: -7.175710678100586
    8. '`' → logprob: -7.425710678100586
    9. '(path' → logprob: -8.550710678100586
    10. '_path' → logprob: -8.550710678100586

Token 1101: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5242740511894226
    2. 'path' → logprob: -1.0242741107940674
    3. '[' → logprob: -3.5242741107940674
    4. 'self' → logprob: -4.149273872375488
    5. '[path' → logprob: -6.524273872375488
    6. ' path' → logprob: -6.649273872375488
    7. '```' → logprob: -8.149273872375488
    8. '`' → logprob: -8.399273872375488
    9. '   ' → logprob: -8.649273872375488
    10. ' ' → logprob: -9.399273872375488

Token 1102: '
' (ID: 198)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.25770583748817444
    2. '[' → logprob: -1.507705807685852
    3. 'path' → logprob: -6.2577056884765625
    4. ' +' → logprob: -7.2577056884765625
    5. '
' → logprob: -7.2577056884765625
    6. '           ' → logprob: -7.5077056884765625
    7. '[
' → logprob: -7.6327056884765625
    8. ' path' → logprob: -7.7577056884765625
    9. '[path' → logprob: -8.257705688476562
    10. '+' → logprob: -8.507705688476562

Token 1103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4293473958969116
    2. 'path' → logprob: -1.4293473958969116
    3. 'return' → logprob: -2.554347515106201
    4. ' path' → logprob: -4.179347515106201
    5. '[:-' → logprob: -5.679347515106201
    6. '(path' → logprob: -5.804347515106201
    7. ' return' → logprob: -6.304347515106201
    8. ',' → logprob: -6.304347515106201
    9. '   ' → logprob: -6.304347515106201
    10. '[' → logprob: -6.679347515106201

Token 1104: ' full' (ID: 3149)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25516441464424133
    2. ' return' → logprob: -1.505164384841919
    3. 'path' → logprob: -6.755164623260498
    4. '           ' → logprob: -6.880164623260498
    5. ' path' → logprob: -6.880164623260498
    6. '   ' → logprob: -12.50516414642334
    7. '
' → logprob: -12.75516414642334
    8. '       ' → logprob: -13.75516414642334
    9. 'result' → logprob: -14.00516414642334
    10. ' ' → logprob: -15.25516414642334

Token 1105: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0021545456256717443
    2. 'path' → logprob: -6.627154350280762
    3. '_to' → logprob: -7.252154350280762
    4. '_' → logprob: -9.502154350280762
    5. ' path' → logprob: -11.752154350280762
    6. '   ' → logprob: -11.877154350280762
    7. '_code' → logprob: -12.002154350280762
    8. '(path' → logprob: -13.002154350280762
    9. '_paths' → logprob: -13.127154350280762
    10. '[path' → logprob: -13.502154350280762

Token 1106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. '   ' → logprob: -15.636871337890625
    4. '.extend' → logprob: -16.511871337890625
    5. ' =
' → logprob: -17.136871337890625
    6. '.append' → logprob: -17.761871337890625
    7. ' =[' → logprob: -18.011871337890625
    8. ' ' → logprob: -18.136871337890625
    9. ':' → logprob: -18.261871337890625
    10. '=
' → logprob: -18.386871337890625

Token 1107: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.000553151941858232
    2. ' path' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.625553131103516
    4. '(path' → logprob: -18.375553131103516
    5. '[path' → logprob: -18.625553131103516
    6. ' ' → logprob: -19.500553131103516
    7. '	path' → logprob: -20.375553131103516
    8. '  ' → logprob: -20.625553131103516
    9. '    ' → logprob: -20.875553131103516
    10. '       ' → logprob: -21.000553131103516

Token 1108: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.128163257315464e-07
    2. 'to' → logprob: -16.125
    3. 'To' → logprob: -17.625
    4. '```' → logprob: -17.625
    5. '   ' → logprob: -18.0
    6. '[:-' → logprob: -18.375
    7. '[' → logprob: -19.375
    8. '_TO' → logprob: -19.75
    9. '_fw' → logprob: -20.0
    10. '=' → logprob: -20.125

Token 1109: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03371313214302063
    2. '5' → logprob: -3.4087131023406982
    3. ' ' → logprob: -11.033713340759277
    4. '_to' → logprob: -11.283713340759277
    5. '```' → logprob: -11.408713340759277
    6. 'to' → logprob: -11.658713340759277
    7. '[' → logprob: -11.908713340759277
    8. '   ' → logprob: -12.908713340759277
    9. '`' → logprob: -13.158713340759277
    10. '-' → logprob: -13.158713340759277

Token 1110: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -13.750003814697266
    3. ' ' → logprob: -13.875003814697266
    4. ''' → logprob: -14.375003814697266
    5. '"' → logprob: -15.250003814697266
    6. '`' → logprob: -15.750003814697266
    7. '55' → logprob: -15.750003814697266
    8. '```' → logprob: -15.750003814697266
    9. '   ' → logprob: -15.875003814697266
    10. '  ' → logprob: -16.875003814697266

Token 1111: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0899561420083046
    2. '[:-' → logprob: -2.839956045150757
    3. ' +' → logprob: -3.589956045150757
    4. '[' → logprob: -14.214956283569336
    5. '+[' → logprob: -15.589956283569336
    6. '[:]' → logprob: -16.464956283569336
    7. '[:' → logprob: -16.589956283569336
    8. '   ' → logprob: -18.089956283569336
    9. '[::-' → logprob: -18.339956283569336
    10. '+
' → logprob: -18.464956283569336

Token 1112: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00671584764495492
    2. ' path' → logprob: -5.006715774536133
    3. '[' → logprob: -16.131715774536133
    4. '[path' → logprob: -16.131715774536133
    5. '`' → logprob: -16.381715774536133
    6. '(path' → logprob: -16.881715774536133
    7. '"path' → logprob: -17.381715774536133
    8. ''' → logprob: -18.006715774536133
    9. '```' → logprob: -18.381715774536133
    10. '	path' → logprob: -18.756715774536133

Token 1113: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00020401719666551799
    2. '[' → logprob: -8.500204086303711
    3. '_to' → logprob: -15.375204086303711
    4. '[-' → logprob: -16.37520408630371
    5. '_[' → logprob: -16.62520408630371
    6. '[len' → logprob: -17.37520408630371
    7. '_path' → logprob: -17.37520408630371
    8. '```' → logprob: -17.62520408630371
    9. '[path' → logprob: -17.75020408630371
    10. '(' → logprob: -18.00020408630371

Token 1114: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.88418151892256e-05
    2. '_' → logprob: -9.750059127807617
    3. '```' → logprob: -15.750059127807617
    4. '[' → logprob: -16.000059127807617
    5. '`' → logprob: -16.125059127807617
    6. 'end' → logprob: -16.375059127807617
    7. '-' → logprob: -17.375059127807617
    8. '{' → logprob: -17.875059127807617
    9. 'to' → logprob: -18.125059127807617
    10. '``' → logprob: -18.250059127807617

Token 1115: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0004294771933928132
    2. '[' → logprob: -7.875429630279541
    3. 'to' → logprob: -10.625429153442383
    4. '_' → logprob: -11.250429153442383
    5. '```' → logprob: -12.125429153442383
    6. '
' → logprob: -12.500429153442383
    7. '[-' → logprob: -13.750429153442383
    8. '[:-' → logprob: -14.875429153442383
    9. ''_' → logprob: -15.250429153442383
    10. '`' → logprob: -15.250429153442383

Token 1116: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0562119334936142
    2. '_end' → logprob: -2.9312119483947754
    3. '5' → logprob: -6.681211948394775
    4. '_' → logprob: -9.931211471557617
    5. '[end' → logprob: -11.931211471557617
    6. '(end' → logprob: -12.306211471557617
    7. 'en' → logprob: -13.056211471557617
    8. 'nd' → logprob: -13.431211471557617
    9. ' end' → logprob: -13.556211471557617
    10. '6' → logprob: -13.681211471557617

Token 1117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[:-' → logprob: -16.875
    3. '```' → logprob: -18.875
    4. '[
' → logprob: -18.875
    5. '1' → logprob: -19.125
    6. '[:' → logprob: -19.75
    7. '
' → logprob: -20.0
    8. ' [' → logprob: -21.0
    9. '   ' → logprob: -21.375
    10. '[len' → logprob: -21.625

Token 1118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '
' → logprob: -18.5
    4. '   ' → logprob: -18.875
    5. '```' → logprob: -20.0
    6. '[' → logprob: -21.5
    7. '۱' → logprob: -21.75
    8. ':' → logprob: -21.875
    9. '１' → logprob: -21.875
    10. 'from' → logprob: -22.0

Token 1119: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0005826997803524137
    2. ':]
' → logprob: -7.625582695007324
    3. ']' → logprob: -10.000582695007324
    4. ':' → logprob: -10.250582695007324
    5. ':]

' → logprob: -12.125582695007324
    6. ' :]' → logprob: -12.250582695007324
    7. ':],' → logprob: -13.250582695007324
    8. ':].' → logprob: -14.000582695007324
    9. '...]' → logprob: -14.250582695007324
    10. '()]' → logprob: -15.375582695007324

Token 1120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06721704453229904
    2. 'return' → logprob: -3.1922171115875244
    3. '       ' → logprob: -4.442216873168945
    4. '
' → logprob: -4.567216873168945
    5. ' return' → logprob: -6.442216873168945
    6. '   ' → logprob: -8.817216873168945
    7. '<|end|>' → logprob: -11.692216873168945
    8. '               ' → logprob: -12.817216873168945
    9. '```' → logprob: -12.942216873168945
    10. '	return' → logprob: -12.942216873168945

Token 1121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4842827320098877
    2. '           ' → logprob: -0.9842827320098877
    3. ' return' → logprob: -5.109282493591309
    4. '
' → logprob: -5.859282493591309
    5. '       ' → logprob: -6.734282493591309
    6. '   ' → logprob: -10.359282493591309
    7. '```' → logprob: -11.234282493591309
    8. '	return' → logprob: -11.734282493591309
    9. '               ' → logprob: -12.484282493591309
    10. '		' → logprob: -13.234282493591309

Token 1122: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.0011703446507453918
    2. ' full' → logprob: -6.7511701583862305
    3. '(full' → logprob: -16.751171112060547
    4. 'ful' → logprob: -17.626171112060547
    5. '	full' → logprob: -17.876171112060547
    6. 'Full' → logprob: -18.001171112060547
    7. '   ' → logprob: -19.501171112060547
    8. '
' → logprob: -20.126171112060547
    9. '.full' → logprob: -20.501171112060547
    10. '_full' → logprob: -20.626171112060547

Token 1123: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.7432603272027336e-06
    2. 'path' → logprob: -13.500001907348633
    3. '_' → logprob: -15.750001907348633
    4. 'full' → logprob: -16.125001907348633
    5. ' _' → logprob: -19.375001907348633
    6. '_full' → logprob: -20.000001907348633
    7. '_
' → logprob: -20.000001907348633
    8. '._' → logprob: -20.125001907348633
    9. 'Path' → logprob: -20.875001907348633
    10. '```' → logprob: -21.000001907348633

Token 1124: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05781775340437889
    2. '#' → logprob: -3.4328176975250244
    3. '
' → logprob: -3.9328176975250244
    4. '```' → logprob: -6.1828179359436035
    5. '   ' → logprob: -6.8078179359436035
    6. '        
' → logprob: -6.9328179359436035
    7. 'elif' → logprob: -9.807817459106445
    8. '<|end|>' → logprob: -10.557817459106445
    9. '``' → logprob: -10.807817459106445
    10. '    
' → logprob: -11.307817459106445

Token 1125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027632713317871094
    2. '#' → logprob: -6.002763271331787
    3. 'elif' → logprob: -8.627763748168945
    4. '```' → logprob: -9.502763748168945
    5. '   ' → logprob: -10.627763748168945
    6. '
' → logprob: -12.377763748168945
    7. 'else' → logprob: -12.502763748168945
    8. '        
' → logprob: -14.252763748168945
    9. '           ' → logprob: -14.627763748168945
    10. '``' → logprob: -15.752763748168945

Token 1126: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005792981944978237
    2. '#' (adapté à ' #') → logprob: -5.25579309463501
    3. 'elif' → logprob: -7.50579309463501
    4. '   ' → logprob: -12.130792617797852
    5. 'else' → logprob: -12.755792617797852
    6. '```' → logprob: -14.505792617797852
    7. '
' → logprob: -15.005792617797852
    8. '           ' → logprob: -17.63079261779785
    9. ' #' → logprob: -18.25579261779785
    10. '        
' → logprob: -18.50579261779785

Token 1127: ' Case' (ID: 18964)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.01122559979557991
    2. '#' → logprob: -4.511225700378418
    3. '   ' → logprob: -9.261225700378418
    4. 'else' → logprob: -9.886225700378418
    5. '       ' → logprob: -10.511225700378418
    6. ' elif' → logprob: -13.011225700378418
    7. '
' → logprob: -13.261225700378418
    8. '#elif' → logprob: -14.761225700378418
    9. ' #' → logprob: -16.1362247467041
    10. 'elseif' → logprob: -16.8862247467041

Token 1128: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6136221885681152
    2. ' ' → logprob: -0.8636221885681152
    3. '4' → logprob: -3.4886221885681152
    4. '   ' → logprob: -5.488622188568115
    5. '       ' → logprob: -6.488622188568115
    6. 'elif' → logprob: -8.613622665405273
    7. 'else' → logprob: -8.738622665405273
    8. ' else' → logprob: -9.613622665405273
    9. ':' → logprob: -9.613622665405273
    10. '           ' → logprob: -9.863622665405273

Token 1129: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08692733198404312
    2. '3' → logprob: -3.3369274139404297
    3. '1' → logprob: -3.5869274139404297
    4. 'elif' → logprob: -4.71192741394043
    5. 'in' → logprob: -5.21192741394043
    6. '   ' → logprob: -6.58692741394043
    7. '       ' → logprob: -6.83692741394043
    8. 'c' → logprob: -6.96192741394043
    9. '#' → logprob: -7.96192741394043
    10. '(' → logprob: -7.96192741394043

Token 1130: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15208573639392853
    2. '       ' → logprob: -2.277085781097412
    3. 'elif' → logprob: -3.402085781097412
    4. ' elif' → logprob: -5.652085781097412
    5. ' :' → logprob: -7.152085781097412
    6. '   ' → logprob: -7.402085781097412
    7. '#' → logprob: -8.902085304260254
    8. ':
' → logprob: -10.152085304260254
    9. 'else' → logprob: -10.777085304260254
    10. '	elif' → logprob: -10.902085304260254

Token 1131: ' start' (ID: 1604)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09254010021686554
    2. ' in' → logprob: -2.8425400257110596
    3. 'elif' → logprob: -3.5925400257110596
    4. 'start' → logprob: -6.592540264129639
    5. ' start' → logprob: -7.967540264129639
    6. ' elif' → logprob: -8.34253978729248
    7. '   ' → logprob: -8.71753978729248
    8. '#' → logprob: -8.71753978729248
    9. 'end' → logprob: -8.84253978729248
    10. '(in' → logprob: -9.84253978729248

Token 1132: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.33975544571876526
    2. ' in' → logprob: -1.3397554159164429
    3. '_num' → logprob: -3.7147555351257324
    4. '_in' → logprob: -7.589755535125732
    5. 'num' → logprob: -7.714755535125732
    6. '_c' → logprob: -8.964755058288574
    7. '   ' → logprob: -9.214755058288574
    8. 'not' → logprob: -9.214755058288574
    9. 'Num' → logprob: -9.339755058288574
    10. '
' → logprob: -9.464755058288574

Token 1133: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09942159056663513
    2. 'in' → logprob: -2.474421501159668
    3. '5' → logprob: -4.724421501159668
    4. '9' → logprob: -7.724421501159668
    5. ' circular' → logprob: -7.724421501159668
    6. 'linear' → logprob: -8.474421501159668
    7. ' in' → logprob: -8.849421501159668
    8. '   ' → logprob: -8.974421501159668
    9. ' ' → logprob: -9.849421501159668
    10. '0' → logprob: -10.099421501159668

Token 1134: '5' (ID: 20)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004705307073891163
    2. '5' → logprob: -5.379705429077148
    3. '0' → logprob: -10.754705429077148
    4. 'linear' → logprob: -10.879705429077148
    5. '(c' → logprob: -10.879705429077148
    6. 'in' → logprob: -11.629705429077148
    7. ' circular' → logprob: -12.129705429077148
    8. '9' → logprob: -13.004705429077148
    9. '_c' → logprob: -13.629705429077148
    10. 'cir' → logprob: -13.754705429077148

Token 1135: '-' (ID: 12)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8725833296775818
    2. '<=' → logprob: -1.1225833892822266
    3. '-' → logprob: -1.4975833892822266
    4. ' <=' → logprob: -4.497583389282227
    5. 'in' → logprob: -4.997583389282227
    6. ' and' → logprob: -5.747583389282227
    7. '   ' → logprob: -6.372583389282227
    8. '>' → logprob: -6.747583389282227
    9. '       ' → logprob: -6.872583389282227
    10. '<' → logprob: -6.997583389282227

Token 1136: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.012886889278888702
    2. 'c' → logprob: -4.762887001037598
    3. 'linear' → logprob: -5.512887001037598
    4. '0' → logprob: -9.012887001037598
    5. ' ' → logprob: -10.137887001037598
    6. '   ' → logprob: -11.637887001037598
    7. '_c' → logprob: -11.637887001037598
    8. '```' → logprob: -12.012887001037598
    9. 'in' → logprob: -12.137887001037598
    10. 'nine' → logprob: -12.512887001037598

Token 1137: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04865311458706856
    2. 'and' → logprob: -3.0486531257629395
    3. '       ' → logprob: -9.673652648925781
    4. ' ' → logprob: -14.173652648925781
    5. '   ' → logprob: -14.298652648925781
    6. '        ' → logprob: -14.548652648925781
    7. ')' → logprob: -14.923652648925781
    8. ',' → logprob: -15.673652648925781
    9. 'elif' → logprob: -15.798652648925781
    10. '    ' → logprob: -16.29865264892578

Token 1138: ' end' (ID: 1268)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03327782452106476
    2. ' in' → logprob: -3.658277750015259
    3. 'end' → logprob: -5.033277988433838
    4. ' end' → logprob: -7.908277988433838
    5. 'linear' → logprob: -10.65827751159668
    6. 'not' → logprob: -11.28327751159668
    7. ' ' → logprob: -11.78327751159668
    8. '   ' → logprob: -12.03327751159668
    9. '(in' → logprob: -12.65827751159668
    10. ' linear' → logprob: -12.90827751159668

Token 1139: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.007412824314087629
    2. '_num' → logprob: -5.632412910461426
    3. ' in' → logprob: -6.007412910461426
    4. '_in' → logprob: -6.757412910461426
    5. 'num' → logprob: -9.382412910461426
    6. '(in' → logprob: -9.882412910461426
    7. 'Num' → logprob: -11.132412910461426
    8. '```' → logprob: -11.132412910461426
    9. '[in' → logprob: -12.382412910461426
    10. '_number' → logprob: -13.132412910461426

Token 1140: ' ' (ID: 220)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.5954805016517639
    2. '0' → logprob: -0.8454805016517639
    3. 'in' → logprob: -4.845480442047119
    4. '(' → logprob: -5.095480442047119
    5. ' linear' → logprob: -6.095480442047119
    6. ' ' → logprob: -6.595480442047119
    7. '   ' → logprob: -7.970480442047119
    8. 'c' → logprob: -8.095480918884277
    9. ' in' → logprob: -8.595480918884277
    10. 'range' → logprob: -8.970480918884277

Token 1141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22586238384246826
    2. 'linear' → logprob: -1.7258623838424683
    3. 'in' → logprob: -3.975862503051758
    4. '(' → logprob: -5.725862503051758
    5. ' ' → logprob: -7.725862503051758
    6. ' linear' → logprob: -7.975862503051758
    7. 'line' → logprob: -8.100862503051758
    8. '[' → logprob: -8.100862503051758
    9. 'range' → logprob: -8.600862503051758
    10. ' in' → logprob: -8.975862503051758

Token 1142: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3036322295665741
    2. '_num' → logprob: -1.9286322593688965
    3. '_' → logprob: -2.8036322593688965
    4. '_linear' → logprob: -3.1786322593688965
    5. '_c' → logprob: -4.5536322593688965
    6. '(c' → logprob: -7.8036322593688965
    7. '-_' → logprob: -7.9286322593688965
    8. 'and' → logprob: -7.9286322593688965
    9. '_line' → logprob: -8.428631782531738
    10. '```' → logprob: -8.428631782531738

Token 1143: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.37500286102295
    3. '4' → logprob: -13.75000286102295
    4. 'linear' → logprob: -15.37500286102295
    5. '```' → logprob: -16.625003814697266
    6. 'five' → logprob: -17.750003814697266
    7. '9' → logprob: -17.875003814697266
    8. '6' → logprob: -18.000003814697266
    9. '   ' → logprob: -18.375003814697266
    10. 'line' → logprob: -18.375003814697266

Token 1144: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5841505527496338
    2. 'elif' → logprob: -0.8341505527496338
    3. ':
' → logprob: -5.334150314331055
    4. '   ' → logprob: -6.459150314331055
    5. ':' → logprob: -7.334150314331055
    6. ' elif' → logprob: -7.459150314331055
    7. '```' → logprob: -8.709150314331055
    8. 'else' → logprob: -8.959150314331055
    9. ' and' → logprob: -9.209150314331055
    10. '           ' → logprob: -9.709150314331055

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08580097556114197
    2. 'elif' → logprob: -2.585800886154175
    3. '   ' → logprob: -5.210801124572754
    4. ' elif' → logprob: -6.585801124572754
    5. '```' → logprob: -10.335801124572754
    6. '           ' → logprob: -11.960801124572754
    7. ':' → logprob: -12.585801124572754
    8. 'else' → logprob: -12.585801124572754
    9. '	elif' → logprob: -13.460801124572754
    10. ',' → logprob: -13.585801124572754

Token 1146: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16129691898822784
    2. 'elif' (adapté à ' elif') → logprob: -1.9112969636917114
    3. ' elif' → logprob: -6.911296844482422
    4. '   ' → logprob: -9.911296844482422
    5. '```' → logprob: -10.786296844482422
    6. 'else' → logprob: -12.911296844482422
    7. '	elif' → logprob: -14.036296844482422
    8. '           ' → logprob: -14.161296844482422
    9. '
' → logprob: -14.536296844482422
    10. '        
' → logprob: -14.661296844482422

Token 1147: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4741160273551941
    2. ' in' → logprob: -0.9741160273551941
    3. '   ' → logprob: -11.099116325378418
    4. '5' → logprob: -11.849116325378418
    5. '(in' → logprob: -12.099116325378418
    6. '	in' → logprob: -12.849116325378418
    7. ' ' → logprob: -12.974116325378418
    8. '    ' → logprob: -13.349116325378418
    9. '       ' → logprob: -13.974116325378418
    10. '           ' → logprob: -14.224116325378418

Token 1148: '_c' (ID: 1303)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7171851396560669
    2. '_c' → logprob: -0.7171851396560669
    3. '_linear' → logprob: -4.092185020446777
    4. 'linear' → logprob: -4.967185020446777
    5. ' circular' → logprob: -9.717185020446777
    6. 'cir' → logprob: -11.967185020446777
    7. ' linear' → logprob: -12.592185020446777
    8. 'Circular' → logprob: -12.842185020446777
    9. '_' → logprob: -12.967185020446777
    10. '.circular' → logprob: -12.967185020446777

Token 1149: 'ircular' (ID: 27245)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.38726332783699036
    2. 'ircular' → logprob: -1.137263298034668
    3. 'c' → logprob: -8.012263298034668
    4. '_linear' → logprob: -10.262263298034668
    5. 'ir' → logprob: -11.887263298034668
    6. '_' → logprob: -12.012263298034668
    7. 'linear' → logprob: -12.512263298034668
    8. '.circular' → logprob: -13.137263298034668
    9. '(c' → logprob: -13.262263298034668
    10. 'icular' → logprob: -13.512263298034668

Token 1150: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -2.3319124011322856e-05
    2. ' (' → logprob: -11.125022888183594
    3. 'start' → logprob: -12.625022888183594
    4. '[start' → logprob: -12.875022888183594
    5. '(' → logprob: -13.375022888183594
    6. '(end' → logprob: -14.000022888183594
    7. '(stop' → logprob: -15.875022888183594
    8. '(st' → logprob: -16.000022888183594
    9. '
' → logprob: -16.750022888183594
    10. '(s' → logprob: -17.750022888183594

Token 1151: '_num' (ID: 9834)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.7160211205482483
    2. 'num' → logprob: -1.3410210609436035
    3. '_num' → logprob: -1.4660210609436035
    4. ')' → logprob: -4.9660210609436035
    5. 'start' → logprob: -5.4660210609436035
    6. 'and' → logprob: -6.0910210609436035
    7. '(num' → logprob: -6.2160210609436035
    8. '(' → logprob: -6.5910210609436035
    9. 'Num' → logprob: -7.2160210609436035
    10. 'def' → logprob: -8.466021537780762

Token 1152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004809585225302726
    2. 'and' → logprob: -7.750481128692627
    3. ' and' → logprob: -10.625480651855469
    4. ' )' → logprob: -10.750480651855469
    5. '   ' → logprob: -13.000480651855469
    6. '       ' → logprob: -14.375480651855469
    7. ')
' → logprob: -14.500480651855469
    8. '`)' → logprob: -15.000480651855469
    9. '[' → logprob: -16.12548065185547
    10. '``' → logprob: -16.25048065185547

Token 1153: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2519335150718689
    2. ' and' → logprob: -1.5019335746765137
    3. ' ' → logprob: -13.626933097839355
    4. '   ' → logprob: -14.001933097839355
    5. ')' → logprob: -14.126933097839355
    6. '       ' → logprob: -14.751933097839355
    7. '        ' → logprob: -15.126933097839355
    8. '           ' → logprob: -15.126933097839355
    9. '
' → logprob: -15.501933097839355
    10. '    ' → logprob: -16.626934051513672

Token 1154: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05490868538618088
    2. ' in' → logprob: -2.9299087524414062
    3. '(in' → logprob: -10.929908752441406
    4. '
' → logprob: -12.179908752441406
    5. '[in' → logprob: -14.054908752441406
    6. ' ' → logprob: -14.679908752441406
    7. '   ' → logprob: -14.929908752441406
    8. 'not' → logprob: -15.304908752441406
    9. '	in' → logprob: -15.429908752441406
    10. '
' → logprob: -16.054908752441406

Token 1155: '_linear' (ID: 102608)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.0027427079621702433
    2. '_linear' → logprob: -6.502742767333984
    3. ' linear' → logprob: -7.127742767333984
    4. 'in' → logprob: -7.752742767333984
    5. 'Linear' → logprob: -12.877742767333984
    6. ' in' → logprob: -13.627742767333984
    7. 'c' → logprob: -14.127742767333984
    8. 'line' → logprob: -14.502742767333984
    9. '
' → logprob: -14.627742767333984
    10. ' ' → logprob: -14.752742767333984

Token 1156: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.00070230319397524
    2. 'end' → logprob: -7.375702381134033
    3. '(' → logprob: -10.625701904296875
    4. '[end' → logprob: -11.000701904296875
    5. '(start' → logprob: -11.000701904296875
    6. ' (' → logprob: -11.250701904296875
    7. '
' → logprob: -13.875701904296875
    8. '(
' → logprob: -14.500701904296875
    9. '((' → logprob: -14.875701904296875
    10. '```' → logprob: -14.875701904296875

Token 1157: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0005804349202662706
    2. 'num' → logprob: -7.750580310821533
    3. 'Num' → logprob: -9.250580787658691
    4. '(' → logprob: -10.125580787658691
    5. '(num' → logprob: -12.125580787658691
    6. '```' → logprob: -13.000580787658691
    7. ')' → logprob: -13.250580787658691
    8. '(_' → logprob: -13.500580787658691
    9. '
' → logprob: -14.500580787658691
    10. '[' → logprob: -14.750580787658691

Token 1158: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.025296896696090698
    2. '):' → logprob: -4.025296688079834
    3. ':' → logprob: -5.400296688079834
    4. ':
' → logprob: -6.025296688079834
    5. '       ' → logprob: -9.025297164916992
    6. '   ' → logprob: -10.650297164916992
    7. '):

' → logprob: -11.275297164916992
    8. '():
' → logprob: -11.650297164916992
    9. ')' → logprob: -11.775297164916992
    10. '           ' → logprob: -12.275297164916992

Token 1159: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021166864782571793
    2. '           ' → logprob: -3.8961668014526367
    3. '#' → logprob: -8.396166801452637
    4. '```' → logprob: -8.396166801452637
    5. '
' → logprob: -9.021166801452637
    6. '   ' → logprob: -10.896166801452637
    7. 'return' → logprob: -11.021166801452637
    8. 'start' → logprob: -12.396166801452637
    9. '``' → logprob: -12.646166801452637
    10. '        
' → logprob: -12.646166801452637

Token 1160: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6988931894302368
    2. '#' (adapté à ' #') → logprob: -0.8238931894302368
    3. '       ' → logprob: -2.9488930702209473
    4. 'path' → logprob: -4.573893070220947
    5. '
' → logprob: -6.823893070220947
    6. ' #' → logprob: -9.073893547058105
    7. 'start' → logprob: -9.573893547058105
    8. '   ' → logprob: -9.948893547058105
    9. '```' → logprob: -10.323893547058105
    10. ' path' → logprob: -10.698893547058105

Token 1161: ' Need' (ID: 19792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.003668959951028228
    2. '           ' → logprob: -5.753668785095215
    3. '       ' → logprob: -7.878668785095215
    4. ' #' → logprob: -10.003668785095215
    5. 'path' → logprob: -10.128668785095215
    6. '
' → logprob: -11.128668785095215
    7. '```' → logprob: -12.253668785095215
    8. '   ' → logprob: -12.378668785095215
    9. 'start' → logprob: -13.878668785095215
    10. 'def' → logprob: -15.128668785095215

Token 1162: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08590216934680939
    2. ' to' → logprob: -2.585902214050293
    3. '           ' → logprob: -5.085902214050293
    4. '       ' → logprob: -8.085902214050293
    5. '#' → logprob: -8.585902214050293
    6. '
' → logprob: -8.710902214050293
    7. '   ' → logprob: -9.210902214050293
    8. '_to' → logprob: -11.210902214050293
    9. 'def' → logprob: -11.335902214050293
    10. '          ' → logprob: -11.710902214050293

Token 1163: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.004823480267077684
    2. ' pass' → logprob: -5.754823684692383
    3. '#' → logprob: -6.504823684692383
    4. 'go' → logprob: -9.129823684692383
    5. '
' → logprob: -11.379823684692383
    6. 'return' → logprob: -11.754823684692383
    7. 'start' → logprob: -12.129823684692383
    8. ' #' → logprob: -12.254823684692383
    9. ' go' → logprob: -13.254823684692383
    10. '       ' → logprob: -13.379823684692383

Token 1164: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.0011766550596803427
    2. ' through' → logprob: -6.751176834106445
    3. '           ' → logprob: -12.376176834106445
    4. '#' → logprob: -14.126176834106445
    5. '
' → logprob: -14.251176834106445
    6. 'from' → logprob: -14.626176834106445
    7. 'start' → logprob: -15.876176834106445
    8. '-through' → logprob: -16.376176834106445
    9. '            
' → logprob: -17.126176834106445
    10. 'in' → logprob: -17.376176834106445

Token 1165: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.20233334600925446
    2. 'self' → logprob: -1.7023333311080933
    3. ' self' → logprob: -7.077333450317383
    4. ' ' → logprob: -9.827333450317383
    5. '```' → logprob: -11.702333450317383
    6. '   ' → logprob: -11.952333450317383
    7. 'the' → logprob: -12.452333450317383
    8. '
' → logprob: -14.702333450317383
    9. '[self' → logprob: -14.827333450317383
    10. '       ' → logprob: -14.952333450317383

Token 1166: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16030363738536835
    2. '5' → logprob: -1.9103035926818848
    3. ' self' → logprob: -9.535304069519043
    4. '```' → logprob: -13.035304069519043
    5. ' ' → logprob: -13.660304069519043
    6. '   ' → logprob: -14.035304069519043
    7. 'the' → logprob: -14.285304069519043
    8. 'Bus' → logprob: -14.285304069519043
    9. '
' → logprob: -14.910304069519043
    10. 'five' → logprob: -15.285304069519043

Token 1167: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11022340506315231
    2. '#' → logprob: -2.3602232933044434
    3. 'path' → logprob: -5.110223293304443
    4. 'start' → logprob: -6.985223293304443
    5. '
' → logprob: -7.110223293304443
    6. ':
' → logprob: -7.235223293304443
    7. ':' → logprob: -7.735223293304443
    8. '       ' → logprob: -8.110223770141602
    9. 'linear' → logprob: -8.735223770141602
    10. '```' → logprob: -9.235223770141602

Token 1168: ' switching' (ID: 45236)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1562599241733551
    2. '           ' → logprob: -2.4062600135803223
    3. 'path' → logprob: -3.5312600135803223
    4. ' path' → logprob: -4.406260013580322
    5. '
' → logprob: -4.781260013580322
    6. ' #' → logprob: -5.406260013580322
    7. 'start' → logprob: -10.031259536743164
    8. '       ' → logprob: -10.406259536743164
    9. '```' → logprob: -10.906259536743164
    10. 'from' → logprob: -11.406259536743164

Token 1169: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17901360988616943
    2. 'through' → logprob: -2.429013729095459
    3. ' from' → logprob: -2.929013729095459
    4. ' through' → logprob: -3.804013729095459
    5. '           ' → logprob: -10.4290132522583
    6. 'to' → logprob: -11.6790132522583
    7. '#' → logprob: -12.4290132522583
    8. '```' → logprob: -12.8040132522583
    9. '               ' → logprob: -13.6790132522583
    10. ' to' → logprob: -13.8040132522583

Token 1170: ' circular' (ID: 37626)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0806303471326828
    2. ' circular' → logprob: -3.205630302429199
    3. 'self' → logprob: -3.455630302429199
    4. ' self' → logprob: -5.830630302429199
    5. 'linear' → logprob: -6.205630302429199
    6. ' linear' → logprob: -8.8306303024292
    7. 'the' → logprob: -9.7056303024292
    8. ' ' → logprob: -10.5806303024292
    9. '.circular' → logprob: -10.5806303024292
    10. '```' → logprob: -10.5806303024292

Token 1171: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.29295843839645386
    2. '_to' → logprob: -1.7929584980010986
    3. ' to' → logprob: -2.7929584980010986
    4. 'start' → logprob: -3.9179584980010986
    5. '_start' → logprob: -6.0429582595825195
    6. 'route' → logprob: -6.1679582595825195
    7. '_num' → logprob: -6.6679582595825195
    8. '_route' → logprob: -8.41795825958252
    9. '```' → logprob: -9.16795825958252
    10. 'section' → logprob: -9.79295825958252

Token 1172: ' linear' (ID: 23876)
  Prédit: 'linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'linear' → logprob: -0.3176993727684021
    2. ' linear' → logprob: -1.3176994323730469
    3. 'line' → logprob: -5.567699432373047
    4. ' line' → logprob: -7.692699432373047
    5. 'self' → logprob: -9.692699432373047
    6. 'the' → logprob: -10.692699432373047
    7. '5' → logprob: -10.817699432373047
    8. ' self' → logprob: -11.067699432373047
    9. '```' → logprob: -11.817699432373047
    10. ' ' → logprob: -11.817699432373047

Token 1173: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6801145672798157
    2. 'at' → logprob: -0.9301145672798157
    3. '           ' → logprob: -2.805114507675171
    4. '#' → logprob: -4.05511474609375
    5. '
' → logprob: -4.43011474609375
    6. 'start' → logprob: -5.43011474609375
    7. 'route' → logprob: -6.05511474609375
    8. 'stop' → logprob: -7.68011474609375
    9. ':
' → logprob: -7.93011474609375
    10. '            
' → logprob: -8.05511474609375

Token 1174: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.1584538072347641
    2. 'self' → logprob: -2.4084537029266357
    3. ' self' → logprob: -3.0334537029266357
    4. ' ' → logprob: -4.783453941345215
    5. '```' → logprob: -10.283453941345215
    6. ' five' → logprob: -10.908453941345215
    7. ' the' → logprob: -12.533453941345215
    8. '`' → logprob: -13.408453941345215
    9. '   ' → logprob: -13.783453941345215
    10. 'stop' → logprob: -13.908453941345215

Token 1175: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3486592769622803
    2. '5' → logprob: -1.2236592769622803
    3. ' self' → logprob: -8.59865951538086
    4. ' ' → logprob: -11.34865951538086
    5. '```' → logprob: -12.09865951538086
    6. 'Bus' → logprob: -12.22365951538086
    7. '
' → logprob: -12.59865951538086
    8. '(self' → logprob: -14.47365951538086
    9. 'five' → logprob: -14.47365951538086
    10. '[self' → logprob: -14.59865951538086

Token 1176: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22783878445625305
    2. '
' → logprob: -1.6028387546539307
    3. '#' → logprob: -6.72783899307251
    4. '       ' → logprob: -7.35283899307251
    5. 'path' → logprob: -8.352838516235352
    6. '
' → logprob: -9.227838516235352
    7. 'start' → logprob: -9.352838516235352
    8. '   ' → logprob: -9.977838516235352
    9. '            
' → logprob: -10.102838516235352
    10. '```' → logprob: -10.102838516235352

Token 1177: '           ' (ID: 352)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5690153241157532
    2. '       ' → logprob: -1.3190152645111084
    3. '           ' → logprob: -1.8190152645111084
    4. 'path' → logprob: -5.5690155029296875
    5. '   ' → logprob: -8.569015502929688
    6. '
' → logprob: -8.944015502929688
    7. 'start' → logprob: -9.194015502929688
    8. '```' → logprob: -9.444015502929688
    9. ' #' → logprob: -12.069015502929688
    10. ' path' → logprob: -13.569015502929688

Token 1178: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.02356467954814434
    2. 'path' → logprob: -4.14856481552124
    3. '           ' → logprob: -5.02356481552124
    4. '       ' → logprob: -7.02356481552124
    5. '   ' → logprob: -11.648564338684082
    6. ' #' → logprob: -11.773564338684082
    7. '
' → logprob: -12.148564338684082
    8. 'start' → logprob: -12.398564338684082
    9. '```' → logprob: -13.023564338684082
    10. ' path' → logprob: -13.523564338684082

Token 1179: ' From' (ID: 7217)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4741956293582916
    2. '#' → logprob: -0.9741955995559692
    3. 'start' → logprob: -10.72419548034668
    4. '       ' → logprob: -10.72419548034668
    5. ' path' → logprob: -10.72419548034668
    6. '           ' → logprob: -11.59919548034668
    7. '
' → logprob: -11.72419548034668
    8. '   ' → logprob: -11.72419548034668
    9. ' #' → logprob: -11.84919548034668
    10. 'from' → logprob: -11.97419548034668

Token 1180: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1989683359861374
    2. 'start' → logprob: -1.8239682912826538
    3. ' self' → logprob: -4.198968410491943
    4. ' start' → logprob: -5.698968410491943
    5. 'current' → logprob: -7.823968410491943
    6. 'end' → logprob: -8.698967933654785
    7. 'c' → logprob: -9.573967933654785
    8. ' current' → logprob: -11.573967933654785
    9. 'stop' → logprob: -11.823967933654785
    10. '5' → logprob: -12.573967933654785

Token 1181: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0278303399682045
    2. ' to' → logprob: -3.6528303623199463
    3. '_to' → logprob: -6.902830123901367
    4. ' =' → logprob: -8.527830123901367
    5. 'num' → logprob: -9.027830123901367
    6. '=' → logprob: -9.152830123901367
    7. '_num' → logprob: -9.527830123901367
    8. '
' → logprob: -12.402830123901367
    9. 'path' → logprob: -12.902830123901367
    10. ' ' → logprob: -12.902830123901367

Token 1182: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234832875430584
    2. ' self' → logprob: -5.255234718322754
    3. '(self' → logprob: -15.255234718322754
    4. '```' → logprob: -15.755234718322754
    5. '[self' → logprob: -15.755234718322754
    6. '
' → logprob: -16.25523567199707
    7. '5' → logprob: -16.63023567199707
    8. '=self' → logprob: -16.63023567199707
    9. '   ' → logprob: -16.75523567199707
    10. '           ' → logprob: -16.75523567199707

Token 1183: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.024604277219623e-05
    2. ' self' → logprob: -10.125040054321289
    3. '5' → logprob: -16.37504005432129
    4. '
' → logprob: -16.87504005432129
    5. '(self' → logprob: -17.25004005432129
    6. '=self' → logprob: -18.37504005432129
    7. '[self' → logprob: -18.50004005432129
    8. '	self' → logprob: -20.00004005432129
    9. ' ' → logprob: -20.25004005432129
    10. '```' → logprob: -20.25004005432129

Token 1184: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22751182317733765
    2. '=' → logprob: -1.6025118827819824
    3. '           ' → logprob: -6.602511882781982
    4. ' path' → logprob: -8.227511405944824
    5. 'path' → logprob: -8.602511405944824
    6. ' on' → logprob: -9.102511405944824
    7. '_path' → logprob: -9.227511405944824
    8. 'on' → logprob: -10.852511405944824
    9. ',' → logprob: -11.227511405944824
    10. ')' → logprob: -11.852511405944824

Token 1185: ' circular' (ID: 37626)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007235141238197684
    2. ' self' → logprob: -7.250723361968994
    3. 'c' → logprob: -11.625723838806152
    4. 'the' → logprob: -13.000723838806152
    5. '(self' → logprob: -14.250723838806152
    6. '           ' → logprob: -14.875723838806152
    7. '```' → logprob: -15.375723838806152
    8. 'Circular' → logprob: -15.750723838806152
    9. '
' → logprob: -15.875723838806152
    10. '[self' → logprob: -16.000722885131836

Token 1186: ' route' (ID: 9656)
  Prédit: '_route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.006925181020051241
    2. 'route' → logprob: -5.006925106048584
    3. ' route' → logprob: -8.506925582885742
    4. 'self' → logprob: -12.131925582885742
    5. '.route' → logprob: -13.506925582885742
    6. 'Route' → logprob: -14.631925582885742
    7. '   ' → logprob: -15.006925582885742
    8. '
' → logprob: -17.381925582885742
    9. '_ROUTE' → logprob: -17.381925582885742
    10. '$route' → logprob: -17.756925582885742

Token 1187: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2769448161125183
    2. 'path' → logprob: -1.776944875717163
    3. ' path' → logprob: -2.651944875717163
    4. '
' → logprob: -7.026944637298584
    5. ' =' → logprob: -7.651944637298584
    6. ',' → logprob: -8.776945114135742
    7. ':' → logprob: -8.776945114135742
    8. '```' → logprob: -8.901945114135742
    9. '=' → logprob: -9.026945114135742
    10. '_path' → logprob: -9.151945114135742

Token 1188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4755823016166687
    2. 'path' → logprob: -1.1005823612213135
    3. ' path' → logprob: -3.1005823612213135
    4. '   ' → logprob: -8.850582122802734
    5. 'current' → logprob: -8.850582122802734
    6. '
' → logprob: -8.975582122802734
    7. '```' → logprob: -8.975582122802734
    8. '       ' → logprob: -9.600582122802734
    9. 'start' → logprob: -10.600582122802734
    10. ',' → logprob: -10.725582122802734

Token 1189: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -2.7133641196996905e-05
    2. ' path' → logprob: -10.87502670288086
    3. '           ' → logprob: -11.75002670288086
    4. '
' → logprob: -15.62502670288086
    5. '       ' → logprob: -16.87502670288086
    6. '```' → logprob: -16.87502670288086
    7. '   ' → logprob: -18.25002670288086
    8. '_path' → logprob: -19.12502670288086
    9. '            
' → logprob: -19.87502670288086
    10. '               ' → logprob: -20.00002670288086

Token 1190: '_start' (ID: 10949)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8088611364364624
    2. '_c' → logprob: -0.8088611364364624
    3. '_start' → logprob: -2.308861255645752
    4. '_to' → logprob: -4.808861255645752
    5. '_from' → logprob: -6.933861255645752
    6. '_fw' → logprob: -8.308860778808594
    7. ' =' → logprob: -8.433860778808594
    8. '=' → logprob: -9.433860778808594
    9. '_bw' → logprob: -9.808860778808594
    10. 'start' → logprob: -10.183860778808594

Token 1191: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5392779111862183
    2. '_start' → logprob: -1.4142779111862183
    3. ' =' → logprob: -2.414278030395508
    4. '=' → logprob: -2.664278030395508
    5. '_' → logprob: -5.289278030395508
    6. '_c' → logprob: -5.789278030395508
    7. '.' → logprob: -6.164278030395508
    8. '._' → logprob: -6.914278030395508
    9. '_on' → logprob: -7.289278030395508
    10. '=_' → logprob: -7.414278030395508

Token 1192: '_' (ID: 62)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002447946462780237
    2. '5' → logprob: -6.377448081970215
    3. ' self' → logprob: -7.252448081970215
    4. '```' → logprob: -11.502448081970215
    5. '[self' → logprob: -11.502448081970215
    6. '_' → logprob: -12.377448081970215
    7. '(self' → logprob: -12.502448081970215
    8. 'c' → logprob: -12.627448081970215
    9. ' ' → logprob: -13.377448081970215
    10. '`' → logprob: -14.377448081970215

Token 1193: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017000067979097366
    2. '5' → logprob: -4.142000198364258
    3. 'end' → logprob: -7.642000198364258
    4. ' self' → logprob: -8.017000198364258
    5. '```' → logprob: -10.642000198364258
    6. '(self' → logprob: -10.767000198364258
    7. 'c' → logprob: -11.392000198364258
    8. 'elf' → logprob: -11.517000198364258
    9. 'five' → logprob: -11.517000198364258
    10. '   ' → logprob: -11.642000198364258

Token 1194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193095207214355
    2. ' =' → logprob: -1.5019309520721436
    3. '=self' → logprob: -13.251931190490723
    4. 'self' → logprob: -16.876930236816406
    5. '=
' → logprob: -18.251930236816406
    6. ' ' → logprob: -18.751930236816406
    7. '.=' → logprob: -19.251930236816406
    8. '```' → logprob: -19.376930236816406
    9. '.' → logprob: -19.876930236816406
    10. '=

' → logprob: -19.876930236816406

Token 1195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021336376667023
    2. ' self' → logprob: -2.3502132892608643
    3. '           ' → logprob: -12.725213050842285
    4. '[self' → logprob: -13.725213050842285
    5. '(self' → logprob: -13.975213050842285
    6. '	self' → logprob: -14.225213050842285
    7. '=self' → logprob: -15.100213050842285
    8. ' ' → logprob: -16.1002140045166
    9. '   ' → logprob: -16.2252140045166
    10. ' ' → logprob: -16.7252140045166

Token 1196: '.circular' (ID: 49716)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3142682909965515
    2. '.circular' → logprob: -1.3142683506011963
    3. 'self' → logprob: -6.939268112182617
    4. ' circular' → logprob: -10.814268112182617
    5. 'Circular' → logprob: -11.939268112182617
    6. '.c' → logprob: -13.564268112182617
    7. '```' → logprob: -13.564268112182617
    8. 'linear' → logprob: -13.814268112182617
    9. '-c' → logprob: -14.314268112182617
    10. ')c' → logprob: -14.439268112182617

Token 1197: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -1.1637164789135568e-05
    2. '.route' → logprob: -12.000011444091797
    3. 'route' → logprob: -12.375011444091797
    4. 'Route' → logprob: -14.125011444091797
    5. '._' → logprob: -15.125011444091797
    6. '.Route' → logprob: -16.125011444091797
    7. '	Route' → logprob: -16.625011444091797
    8. '_ROUTE' → logprob: -17.125011444091797
    9. '_network' → logprob: -17.250011444091797
    10. '<Route' → logprob: -18.125011444091797

Token 1198: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -1.282920129597187e-05
    2. ' .' → logprob: -12.125012397766113
    3. '.shortcuts' → logprob: -13.375012397766113
    4. 'short' → logprob: -13.625012397766113
    5. '.start' → logprob: -13.750012397766113
    6. '.small' → logprob: -14.000012397766113
    7. '.long' → logprob: -14.125012397766113
    8. '.' → logprob: -14.625012397766113
    9. '.closest' → logprob: -14.750012397766113
    10. '.s' → logprob: -15.125012397766113

Token 1199: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.2016003578901291
    2. '_path' → logprob: -1.7016003131866455
    3. '.path' → logprob: -9.326600074768066
    4. 'path' → logprob: -10.201600074768066
    5. '._' → logprob: -11.451600074768066
    6. 'ested' → logprob: -11.451600074768066
    7. 'ed' → logprob: -11.576600074768066
    8. 'st' → logprob: -11.826600074768066
    9. 'stop' → logprob: -12.326600074768066
    10. 'start' → logprob: -12.951600074768066

Token 1200: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.676981345459353e-06
    2. '_route' → logprob: -13.125005722045898
    3. '._' → logprob: -13.375005722045898
    4. '_start' → logprob: -13.875005722045898
    5. 'Path' → logprob: -15.500005722045898
    6. 'path' → logprob: -15.625005722045898
    7. '```' → logprob: -15.625005722045898
    8. '.start' → logprob: -16.0000057220459
    9. '.path' → logprob: -16.1250057220459
    10. '(start' → logprob: -16.6250057220459

Token 1201: '(start' (ID: 20008)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018158959224820137
    2. 'self' → logprob: -4.018158912658691
    3. ' self' → logprob: -12.268158912658691
    4. '(start' → logprob: -13.143158912658691
    5. 'start' → logprob: -13.393158912658691
    6. '(' → logprob: -14.768158912658691
    7. '           ' → logprob: -15.393158912658691
    8. '(
' → logprob: -16.018159866333008
    9. ' (' → logprob: -16.518159866333008
    10. '   ' → logprob: -16.643159866333008

Token 1202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ',self' → logprob: -10.87502384185791
    3. ' ,' → logprob: -13.25002384185791
    4. 'self' → logprob: -13.37502384185791
    5. ',
' → logprob: -13.62502384185791
    6. '           ' → logprob: -17.375022888183594
    7. ' self' → logprob: -18.000022888183594
    8. ')' → logprob: -18.500022888183594
    9. '),' → logprob: -19.500022888183594
    10. ',

' → logprob: -19.625022888183594

Token 1203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005938755348324776
    2. ' self' → logprob: -5.130938529968262
    3. '(self' → logprob: -12.505938529968262
    4. '[self' → logprob: -12.755938529968262
    5. '           ' → logprob: -13.255938529968262
    6. '	self' → logprob: -15.255938529968262
    7. 'Bus' → logprob: -15.380938529968262
    8. '       ' → logprob: -15.380938529968262
    9. '=self' → logprob: -15.505938529968262
    10. ')' → logprob: -16.005939483642578

Token 1204: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.013096588663756847
    2. 'self' → logprob: -4.388096809387207
    3. 'st' → logprob: -7.513096809387207
    4. '.self' → logprob: -11.638096809387207
    5. ')' → logprob: -12.013096809387207
    6. '(self' → logprob: -12.138096809387207
    7. ' self' → logprob: -12.263096809387207
    8. '_st' → logprob: -12.513096809387207
    9. '[self' → logprob: -12.888096809387207
    10. '(st' → logprob: -13.638096809387207

Token 1205: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -9.610702363715973e-06
    2. 'op' → logprob: -12.125009536743164
    3. '.ops' → logprob: -13.875009536743164
    4. 'os' → logprob: -14.500009536743164
    5. 'ps' → logprob: -14.500009536743164
    6. ' stops' → logprob: -14.875009536743164
    7. '{' → logprob: -14.875009536743164
    8. '```' → logprob: -15.500009536743164
    9. 's' → logprob: -15.625009536743164
    10. '[' → logprob: -15.750009536743164

Token 1206: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3869018256664276
    2. '5' → logprob: -1.13690185546875
    3. '(' → logprob: -10.63690185546875
    4. '{' → logprob: -12.13690185546875
    5. '```' → logprob: -14.63690185546875
    6. ' ' → logprob: -14.88690185546875
    7. ' [' → logprob: -15.63690185546875
    8. '[
' → logprob: -15.63690185546875
    9. '   ' → logprob: -16.01190185546875
    10. '
' → logprob: -17.01190185546875

Token 1207: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '[' → logprob: -15.750000953674316
    4. '```' → logprob: -16.625001907348633
    5. '
' → logprob: -17.250001907348633
    6. '{' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '۵' → logprob: -18.625001907348633
    9. '５' → logprob: -18.625001907348633
    10. '(' → logprob: -18.875001907348633

Token 1208: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031803252641111612
    2. ')
' → logprob: -5.753180503845215
    3. '           ' → logprob: -13.253180503845215
    4. ')

' → logprob: -15.128180503845215
    5. ')
' → logprob: -16.1281795501709
    6. ')`' → logprob: -16.2531795501709
    7. ').' → logprob: -16.3781795501709
    8. ')`
' → logprob: -16.6281795501709
    9. '),' → logprob: -16.6281795501709
    10. ' )' → logprob: -16.8781795501709

Token 1209: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5771946310997009
    2. '           ' → logprob: -0.8271946310997009
    3. '#' → logprob: -7.452194690704346
    4. 'path' → logprob: -8.452194213867188
    5. '       ' → logprob: -8.577194213867188
    6. '
' → logprob: -9.327194213867188
    7. '            
' → logprob: -9.327194213867188
    8. '   ' → logprob: -9.952194213867188
    9. '```' → logprob: -10.452194213867188
    10. '

' → logprob: -12.452194213867188

Token 1210: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.035494010895490646
    2. 'path' → logprob: -3.910494089126587
    3. '           ' → logprob: -4.285493850708008
    4. '       ' → logprob: -7.035493850708008
    5. '
' → logprob: -9.160493850708008
    6. ' #' → logprob: -10.035493850708008
    7. '   ' → logprob: -10.910493850708008
    8. ' path' → logprob: -11.035493850708008
    9. '```' → logprob: -12.910493850708008
    10. '#line' → logprob: -13.035493850708008

Token 1211: ' From' (ID: 7217)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.003881665412336588
    2. ' path' → logprob: -5.628881454467773
    3. '           ' → logprob: -8.878881454467773
    4. '#' → logprob: -9.003881454467773
    5. '       ' → logprob: -11.503881454467773
    6. '
' → logprob: -12.128881454467773
    7. 'line' → logprob: -13.753881454467773
    8. '```' → logprob: -14.503881454467773
    9. '   ' → logprob: -14.628881454467773
    10. '	path' → logprob: -14.753881454467773

Token 1212: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.027687622234225273
    2. '5' → logprob: -3.6526875495910645
    3. ' self' → logprob: -6.9026875495910645
    4. '           ' → logprob: -8.652688026428223
    5. 'end' → logprob: -10.152688026428223
    6. ' ' → logprob: -10.277688026428223
    7. 'path' → logprob: -10.527688026428223
    8. '(self' → logprob: -10.902688026428223
    9. '6' → logprob: -11.027688026428223
    10. 'line' → logprob: -11.152688026428223

Token 1213: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3590500056743622
    2. '5' → logprob: -1.2340500354766846
    3. 'linear' → logprob: -4.7340497970581055
    4. 'end' → logprob: -6.7340497970581055
    5. 'path' → logprob: -8.484049797058105
    6. 'line' → logprob: -9.234049797058105
    7. ' self' → logprob: -9.484049797058105
    8. ' ' → logprob: -10.109049797058105
    9. 'five' → logprob: -10.109049797058105
    10. '
' → logprob: -10.359049797058105

Token 1214: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2652014195919037
    2. ' to' → logprob: -1.515201449394226
    3. '_to' → logprob: -4.640201568603516
    4. '           ' → logprob: -6.515201568603516
    5. 'To' → logprob: -7.765201568603516
    6. '
' → logprob: -7.765201568603516
    7. '```' → logprob: -7.890201568603516
    8. '.' → logprob: -9.140201568603516
    9. ')' → logprob: -9.265201568603516
    10. '.to' → logprob: -9.515201568603516

Token 1215: ' end' (ID: 1268)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09097138792276382
    2. 'end' → logprob: -2.5909714698791504
    3. ' self' → logprob: -4.46597146987915
    4. ' end' → logprob: -7.59097146987915
    5. ' ' → logprob: -12.590970993041992
    6. 'elf' → logprob: -12.840970993041992
    7. '5' → logprob: -13.965970993041992
    8. '(self' → logprob: -13.965970993041992
    9. 'linear' → logprob: -14.590970993041992
    10. '0' → logprob: -14.715970993041992

Token 1216: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09134486317634583
    2. '=' → logprob: -2.9663448333740234
    3. ' on' → logprob: -3.7163448333740234
    4. '           ' → logprob: -5.716344833374023
    5. '_on' → logprob: -5.841344833374023
    6. 'on' → logprob: -6.466344833374023
    7. ' path' → logprob: -6.716344833374023
    8. '_to' → logprob: -6.966344833374023
    9. '_path' → logprob: -7.341344833374023
    10. 'path' → logprob: -8.466344833374023

Token 1217: ' linear' (ID: 23876)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002646286739036441
    2. ' self' → logprob: -6.252646446228027
    3. 'linear' → logprob: -7.252646446228027
    4. '           ' → logprob: -12.002646446228027
    5. ' linear' → logprob: -13.252646446228027
    6. 'line' → logprob: -14.627646446228027
    7. 'the' → logprob: -15.127646446228027
    8. '(self' → logprob: -15.252646446228027
    9. '
' → logprob: -16.62764549255371
    10. '```' → logprob: -17.00264549255371

Token 1218: ' route' (ID: 9656)
  Prédit: '_route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.0002920830447692424
    2. 'route' → logprob: -8.25029182434082
    3. '.route' → logprob: -10.62529182434082
    4. 'self' → logprob: -12.37529182434082
    5. 'Route' → logprob: -13.75029182434082
    6. '       ' → logprob: -14.62529182434082
    7. '   ' → logprob: -15.00029182434082
    8. '           ' → logprob: -16.00029182434082
    9. '_ROUTE' → logprob: -16.50029182434082
    10. ' route' → logprob: -16.62529182434082

Token 1219: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5449935793876648
    2. '=' → logprob: -1.4199936389923096
    3. ' =' → logprob: -1.7949936389923096
    4. 'path' → logprob: -5.2949934005737305
    5. '```' → logprob: -6.0449934005737305
    6. ' path' → logprob: -6.4199934005737305
    7. '
' → logprob: -7.1699934005737305
    8. 'self' → logprob: -7.5449934005737305
    9. '       ' → logprob: -7.5449934005737305
    10. ':' → logprob: -8.29499340057373

Token 1220: '           ' (ID: 352)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.6274711489677429
    2. '           ' → logprob: -0.8774711489677429
    3. ' path' → logprob: -3.0024712085723877
    4. '=' → logprob: -8.502470970153809
    5. ' =' → logprob: -8.877470970153809
    6. '```' → logprob: -9.252470970153809
    7. '_path' → logprob: -10.002470970153809
    8. 'full' → logprob: -10.752470970153809
    9. 'return' → logprob: -11.377470970153809
    10. '(path' → logprob: -11.377470970153809

Token 1221: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.3522110879421234
    2. ' path' → logprob: -1.3522111177444458
    3. 'self' → logprob: -3.3522109985351562
    4. ' self' → logprob: -5.977210998535156
    5. '           ' → logprob: -7.352210998535156
    6. 'return' → logprob: -11.727210998535156
    7. '_path' → logprob: -13.352210998535156
    8. '       ' → logprob: -13.352210998535156
    9. '   ' → logprob: -13.477210998535156
    10. '```' → logprob: -14.102210998535156

Token 1222: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5818299651145935
    2. '_linear' → logprob: -0.8318299651145935
    3. '_to' → logprob: -5.706830024719238
    4. '_line' → logprob: -6.956830024719238
    5. '_start' → logprob: -8.206830024719238
    6. '_forward' → logprob: -8.206830024719238
    7. '=' → logprob: -8.206830024719238
    8. ' =' → logprob: -8.331830024719238
    9. 'linear' → logprob: -8.706830024719238
    10. '_lin' → logprob: -9.081830024719238

Token 1223: '5' (ID: 20)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014965300215408206
    2. 'linear' → logprob: -7.501496315002441
    3. '5' → logprob: -7.876496315002441
    4. '_to' → logprob: -8.001496315002441
    5. '_linear' → logprob: -9.126496315002441
    6. '_' → logprob: -9.501496315002441
    7. 'to' → logprob: -11.501496315002441
    8. ' self' → logprob: -11.751496315002441
    9. '_self' → logprob: -11.751496315002441
    10. '           ' → logprob: -12.126496315002441

Token 1224: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00021152703266125172
    2. '```' → logprob: -9.625211715698242
    3. '._' → logprob: -10.375211715698242
    4. '_' → logprob: -10.750211715698242
    5. '_linear' → logprob: -11.375211715698242
    6. '.to' → logprob: -11.500211715698242
    7. '_short' → logprob: -11.500211715698242
    8. ' =' → logprob: -11.750211715698242
    9. '_start' → logprob: -11.750211715698242
    10. '=' → logprob: -11.875211715698242

Token 1225: '_end' (ID: 13707)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0053153433836996555
    2. ' self' → logprob: -5.88031530380249
    3. '_' → logprob: -7.00531530380249
    4. 'linear' → logprob: -7.13031530380249
    5. '5' → logprob: -7.75531530380249
    6. '_linear' → logprob: -8.505315780639648
    7. '
' → logprob: -9.255315780639648
    8. ' ' → logprob: -10.130315780639648
    9. '```' → logprob: -11.380315780639648
    10. ' linear' → logprob: -12.130315780639648

Token 1226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692894041538239
    2. ' =' → logprob: -2.1269290447235107
    3. '=self' → logprob: -14.00192928314209
    4. '```' → logprob: -17.376928329467773
    5. '=
' → logprob: -18.501928329467773
    6. ')' → logprob: -18.751928329467773
    7. ' ' → logprob: -19.001928329467773
    8. '=_' → logprob: -19.001928329467773
    9. 'self' → logprob: -19.501928329467773
    10. '   ' → logprob: -19.626928329467773

Token 1227: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47407785058021545
    2. ' self' → logprob: -0.9740778207778931
    3. ' ' → logprob: -15.224078178405762
    4. '[self' → logprob: -15.224078178405762
    5. '	self' → logprob: -15.849078178405762
    6. '(self' → logprob: -16.724077224731445
    7. ' ' → logprob: -17.224077224731445
    8. '           ' → logprob: -17.474077224731445
    9. '```' → logprob: -17.599077224731445
    10. '[' → logprob: -18.224077224731445

Token 1228: '.linear' (ID: 75762)
  Prédit: '.linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.linear' → logprob: -0.25205203890800476
    2. 'linear' → logprob: -1.5020520687103271
    3. ' linear' → logprob: -9.127052307128906
    4. '.line' → logprob: -12.002052307128906
    5. 'line' → logprob: -12.377052307128906
    6. 'self' → logprob: -13.377052307128906
    7. '_linear' → logprob: -14.002052307128906
    8. '.' → logprob: -14.752052307128906
    9. '.Linear' → logprob: -14.877052307128906
    10. '```' → logprob: -15.627052307128906

Token 1229: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -3.666993507067673e-05
    2. '.route' → logprob: -10.500036239624023
    3. 'route' → logprob: -12.125036239624023
    4. '._' → logprob: -12.875036239624023
    5. 'Route' → logprob: -14.375036239624023
    6. '.Route' → logprob: -15.500036239624023
    7. '_ROUTE' → logprob: -16.125036239624023
    8. '.' → logprob: -16.875036239624023
    9. '路' → logprob: -16.875036239624023
    10. '	Route' → logprob: -17.375036239624023

Token 1230: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -0.0007158888038247824
    2. 'short' → logprob: -7.250715732574463
    3. '_short' → logprob: -13.000716209411621
    4. 'Shortest' → logprob: -13.875716209411621
    5. '.path' → logprob: -14.000716209411621
    6. ' shortest' → logprob: -14.500716209411621
    7. ' .' → logprob: -15.125716209411621
    8. '短' → logprob: -15.250716209411621
    9. '(short' → logprob: -15.250716209411621
    10. '.shortcuts' → logprob: -15.625716209411621

Token 1231: 'est' (ID: 376)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.02062901481986046
    2. '_forward' → logprob: -4.520628929138184
    3. 'est' → logprob: -5.770628929138184
    4. 'forward' → logprob: -6.395628929138184
    5. '.forward' → logprob: -6.770628929138184
    6. 'path' → logprob: -6.770628929138184
    7. 'short' → logprob: -8.145628929138184
    8. 'stop' → logprob: -8.270628929138184
    9. '       ' → logprob: -8.395628929138184
    10. 'ward' → logprob: -8.395628929138184

Token 1232: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.2200749754119897e-06
    2. 'path' → logprob: -13.625001907348633
    3. 'Path' → logprob: -14.750001907348633
    4. 'stop' → logprob: -14.875001907348633
    5. '_route' → logprob: -15.875001907348633
    6. 'short' → logprob: -17.250001907348633
    7. '_stop' → logprob: -17.875001907348633
    8. 'start' → logprob: -18.375001907348633
    9. '```' → logprob: -19.000001907348633
    10. 'self' → logprob: -19.125001907348633

Token 1233: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0232557263225317
    2. 'self' → logprob: -3.7732558250427246
    3. ' self' → logprob: -11.773255348205566
    4. '(' → logprob: -13.398255348205566
    5. 'start' → logprob: -14.898255348205566
    6. '[self' → logprob: -14.898255348205566
    7. '(start' → logprob: -15.398255348205566
    8. '           ' → logprob: -17.023256301879883
    9. '(
' → logprob: -17.273256301879883
    10. ' (' → logprob: -17.273256301879883

Token 1234: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -5.7053759519476444e-05
    2. 'st' → logprob: -10.000057220458984
    3. 'self' → logprob: -11.625057220458984
    4. '(st' → logprob: -14.125057220458984
    5. '.self' → logprob: -14.500057220458984
    6. '5' → logprob: -14.875057220458984
    7. '_st' → logprob: -15.250057220458984
    8. '
' → logprob: -15.375057220458984
    9. 's' → logprob: -15.375057220458984
    10. ' ' → logprob: -16.500057220458984

Token 1235: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -3.750436007976532e-05
    2. 'op' → logprob: -11.12503719329834
    3. '.ops' → logprob: -11.37503719329834
    4. 'os' → logprob: -12.87503719329834
    5. 'ps' → logprob: -13.12503719329834
    6. '.st' → logprob: -13.50003719329834
    7. '._' → logprob: -14.25003719329834
    8. '{' → logprob: -14.37503719329834
    9. 'tops' → logprob: -14.37503719329834
    10. 's' → logprob: -14.50003719329834

Token 1236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011153311934322119
    2. '[self' → logprob: -6.876115322113037
    3. '(' → logprob: -10.251115798950195
    4. 'self' → logprob: -10.376115798950195
    5. '(self' → logprob: -11.376115798950195
    6. '5' → logprob: -12.751115798950195
    7. '           ' → logprob: -15.251115798950195
    8. ',' → logprob: -15.501115798950195
    9. '       ' → logprob: -15.501115798950195
    10. '[end' → logprob: -15.751115798950195

Token 1237: '5' (ID: 20)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0022140119690448046
    2. '5' → logprob: -6.252213954925537
    3. ' end' → logprob: -8.877214431762695
    4. '[end' → logprob: -10.252214431762695
    5. 'st' → logprob: -10.377214431762695
    6. '   ' → logprob: -11.502214431762695
    7. '
' → logprob: -11.752214431762695
    8. 'number' → logprob: -11.877214431762695
    9. '(end' → logprob: -12.002214431762695
    10. ' ' → logprob: -12.252214431762695

Token 1238: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031872207764536142
    2. ',end' → logprob: -5.75318717956543
    3. ' ,' → logprob: -12.00318717956543
    4. ',start' → logprob: -13.75318717956543
    5. ',
' → logprob: -14.25318717956543
    6. '[end' → logprob: -14.62818717956543
    7. '),' → logprob: -14.75318717956543
    8. 'end' → logprob: -15.12818717956543
    9. '],' → logprob: -15.87818717956543
    10. '           ' → logprob: -16.50318717956543

Token 1239: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0011720098555088043
    2. ' end' → logprob: -6.751172065734863
    3. 'self' → logprob: -13.251172065734863
    4. '(end' → logprob: -19.626171112060547
    5. ' self' → logprob: -20.126171112060547
    6. '[end' → logprob: -20.876171112060547
    7. '	end' → logprob: -21.251171112060547
    8. '
' → logprob: -21.501171112060547
    9. '.end' → logprob: -21.751171112060547
    10. '           ' → logprob: -22.376171112060547

Token 1240: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.19149982929229736
    2. ')' → logprob: -2.066499710083008
    3. '           ' → logprob: -3.191499710083008
    4. '[' → logprob: -5.566499710083008
    5. ')[' → logprob: -5.941499710083008
    6. '       ' → logprob: -10.941499710083008
    7. '
' → logprob: -10.941499710083008
    8. ')
' → logprob: -11.566499710083008
    9. '          ' → logprob: -11.691499710083008
    10. '()
' → logprob: -12.316499710083008

Token 1241: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23546864092350006
    2. '           ' → logprob: -1.6104686260223389
    3. ' full' → logprob: -4.985468864440918
    4. 'full' → logprob: -6.110468864440918
    5. '(full' → logprob: -8.360468864440918
    6. '	full' → logprob: -8.860468864440918
    7. '       ' → logprob: -9.110468864440918
    8. '   ' → logprob: -9.110468864440918
    9. '```' → logprob: -9.235468864440918
    10. '
' → logprob: -9.860468864440918

Token 1242: ' #' (ID: 1069)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.12489566951990128
    2. '#' (adapté à ' #') → logprob: -2.8748955726623535
    3. '           ' → logprob: -2.9998955726623535
    4. ' full' → logprob: -4.7498955726623535
    5. '
' → logprob: -6.1248955726623535
    6. 'return' → logprob: -8.499896049499512
    7. '       ' → logprob: -9.374896049499512
    8. '   ' → logprob: -10.999896049499512
    9. '	full' → logprob: -11.124896049499512
    10. '_full' → logprob: -11.874896049499512

Token 1243: ' Combine' (ID: 78092)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -5.538490950129926e-05
    2. '#' → logprob: -10.000055313110352
    3. ' full' → logprob: -11.625055313110352
    4. 'return' → logprob: -14.625055313110352
    5. '
' → logprob: -15.250055313110352
    6. 'path' → logprob: -16.25005531311035
    7. 'Full' → logprob: -16.50005531311035
    8. '           ' → logprob: -17.75005531311035
    9. 'final' → logprob: -18.00005531311035
    10. '	full' → logprob: -18.50005531311035

Token 1244: ' removing' (ID: 28559)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.78645259141922
    2. 'full' → logprob: -1.5364525318145752
    3. ' =' → logprob: -2.536452531814575
    4. ' path' → logprob: -2.536452531814575
    5. 'path' → logprob: -2.536452531814575
    6. '=' → logprob: -2.911452531814575
    7. 'return' → logprob: -3.536452531814575
    8. ' return' → logprob: -5.286452770233154
    9. '           ' → logprob: -6.411452770233154
    10. '
' → logprob: -7.536452770233154

Token 1245: ' duplicate' (ID: 41010)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.2586074471473694
    2. 'duplicate' → logprob: -1.8836073875427246
    3. ' path' → logprob: -3.1336073875427246
    4. ' duplicate' → logprob: -4.008607387542725
    5. '[' → logprob: -5.258607387542725
    6. 'duplicates' → logprob: -5.883607387542725
    7. '[path' → logprob: -5.883607387542725
    8. 'the' → logprob: -7.008607387542725
    9. 'dup' → logprob: -7.383607387542725
    10. '5' → logprob: -7.508607387542725

Token 1246: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10588978230953217
    2. 'path' → logprob: -2.8558897972106934
    3. ' path' → logprob: -3.8558897972106934
    4. '[' → logprob: -4.480889797210693
    5. ' ' → logprob: -5.105889797210693
    6. '   ' → logprob: -5.605889797210693
    7. '[path' → logprob: -8.855889320373535
    8. 'self' → logprob: -9.105889320373535
    9. ' [' → logprob: -9.230889320373535
    10. '```' → logprob: -9.480889320373535

Token 1247: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003500050224829465
    2. 'path' → logprob: -8.125349998474121
    3. ' ' → logprob: -10.125349998474121
    4. '[' → logprob: -11.500349998474121
    5. ' path' → logprob: -13.750349998474121
    6. '[path' → logprob: -13.750349998474121
    7. '   ' → logprob: -14.750349998474121
    8. '```' → logprob: -14.875349998474121
    9. 'self' → logprob: -15.500349998474121
    10. '`' → logprob: -16.000350952148438

Token 1248: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.80680251121521
    2. '=' → logprob: -1.30680251121521
    3. '           ' → logprob: -2.18180251121521
    4. 'path' → logprob: -2.68180251121521
    5. ' path' → logprob: -2.93180251121521
    6. '
' → logprob: -3.68180251121521
    7. 'return' → logprob: -4.181802749633789
    8. '[' → logprob: -6.181802749633789
    9. ' return' → logprob: -6.181802749633789
    10. ',' → logprob: -7.306802749633789

Token 1249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056475501507520676
    2. 'full' → logprob: -3.5564754009246826
    3. ' full' → logprob: -3.8064754009246826
    4. 'path' → logprob: -6.056475639343262
    5. ' path' → logprob: -7.306475639343262
    6. 'return' → logprob: -7.806475639343262
    7. '
' → logprob: -7.931475639343262
    8. ',' → logprob: -9.431475639343262
    9. '[' → logprob: -9.931475639343262
    10. '   ' → logprob: -10.306475639343262

Token 1250: ' full' (ID: 3149)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6931756138801575
    2. 'path' → logprob: -0.6931756138801575
    3. 'return' → logprob: -10.693175315856934
    4. ' return' → logprob: -12.568175315856934
    5. '[path' → logprob: -13.693175315856934
    6. '[' → logprob: -15.193175315856934
    7. '           ' → logprob: -15.193175315856934
    8. '(path' → logprob: -15.443175315856934
    9. '_path' → logprob: -16.19317626953125
    10. '	path' → logprob: -16.44317626953125

Token 1251: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.750000953674316
    3. 'path' → logprob: -16.125
    4. '_pat' → logprob: -17.625
    5. ' _' → logprob: -18.0
    6. '_paths' → logprob: -18.5
    7. '_Path' → logprob: -18.875
    8. '_name' → logprob: -19.5
    9. '_p' → logprob: -19.75
    10. '_PATH' → logprob: -20.0

Token 1252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759394764900208
    2. '=' → logprob: -0.8259394764900208
    3. ' =
' → logprob: -17.075939178466797
    4. '=
' → logprob: -17.450939178466797
    5. 's' → logprob: -19.450939178466797
    6. '_' → logprob: -19.575939178466797
    7. ' path' → logprob: -19.700939178466797
    8. ' ' → logprob: -20.075939178466797
    9. '＝' → logprob: -20.075939178466797
    10. '_=' → logprob: -20.825939178466797

Token 1253: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.006715728435665369
    2. ' path' → logprob: -5.006715774536133
    3. '[path' → logprob: -15.131715774536133
    4. '(path' → logprob: -16.631715774536133
    5. '	path' → logprob: -17.756715774536133
    6. '   ' → logprob: -18.506715774536133
    7. 'list' → logprob: -19.131715774536133
    8. '
' → logprob: -19.381715774536133
    9. '"path' → logprob: -19.506715774536133
    10. '[' → logprob: -19.756715774536133

Token 1254: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.3120038501219824e-05
    2. 'start' → logprob: -9.875053405761719
    3. '_' → logprob: -13.625053405761719
    4. '[start' → logprob: -15.875053405761719
    5. 'Start' → logprob: -16.12505340576172
    6. '_to' → logprob: -16.62505340576172
    7. '\' → logprob: -17.37505340576172
    8. '_path' → logprob: -17.50005340576172
    9. '```' → logprob: -17.62505340576172
    10. '(start' → logprob: -18.62505340576172

Token 1255: '_to' (ID: 5089)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.25325846672058105
    2. '_to' → logprob: -1.503258466720581
    3. '_' → logprob: -6.62825870513916
    4. '\' → logprob: -13.00325870513916
    5. 'start' → logprob: -13.62825870513916
    6. '```' → logprob: -14.12825870513916
    7. '   ' → logprob: -15.50325870513916
    8. ' _' → logprob: -15.50325870513916
    9. '[' → logprob: -15.50325870513916
    10. '
' → logprob: -16.003257751464844

Token 1256: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07019250839948654
    2. '5' → logprob: -2.695192575454712
    3. '[' → logprob: -9.320192337036133
    4. 'start' → logprob: -9.445192337036133
    5. 'path' → logprob: -10.570192337036133
    6. 'to' → logprob: -10.945192337036133
    7. '_start' → logprob: -11.070192337036133
    8. '_to' → logprob: -11.820192337036133
    9. '-' → logprob: -12.570192337036133
    10. '6' → logprob: -13.195192337036133

Token 1257: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.18085262179374695
    2. 'end' → logprob: -2.0558526515960693
    3. 'path' → logprob: -3.5558526515960693
    4. 'start' → logprob: -4.80585241317749
    5. '_' → logprob: -7.80585241317749
    6. '_end' → logprob: -9.430852890014648
    7. ' ' → logprob: -9.680852890014648
    8. '6' → logprob: -10.055852890014648
    9. '8' → logprob: -10.430852890014648
    10. '_path' → logprob: -11.055852890014648

Token 1258: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931896805763245
    2. ' +' → logprob: -0.6931896805763245
    3. '[:-' → logprob: -10.06818962097168
    4. '[' → logprob: -17.19318962097168
    5. '+
' → logprob: -17.44318962097168
    6. '+[' → logprob: -17.69318962097168
    7. ' +
' → logprob: -18.94318962097168
    8. '+p' → logprob: -18.94318962097168
    9. ' ' → logprob: -18.94318962097168
    10. '＋' → logprob: -19.06818962097168

Token 1259: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0297523383051157
    2. ' path' → logprob: -3.529752254486084
    3. '[path' → logprob: -13.779752731323242
    4. '(path' → logprob: -14.529752731323242
    5. '	path' → logprob: -16.654752731323242
    6. ' ' → logprob: -16.904752731323242
    7. '"path' → logprob: -17.154752731323242
    8. '_path' → logprob: -17.779752731323242
    9. '[' → logprob: -17.904752731323242
    10. '.path' → logprob: -18.029752731323242

Token 1260: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007254178053699434
    2. '_to' → logprob: -7.250725269317627
    3. 'to' → logprob: -11.125725746154785
    4. '-' → logprob: -15.125725746154785
    5. '```' → logprob: -15.750725746154785
    6. '[' → logprob: -16.62572479248047
    7. 'To' → logprob: -16.62572479248047
    8. '[-' → logprob: -16.62572479248047
    9. '`' → logprob: -17.00072479248047
    10. '-to' → logprob: -18.75072479248047

Token 1261: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8311898112297058
    2. '_' → logprob: -1.0811898708343506
    3. 'to' → logprob: -1.5811898708343506
    4. '_to' → logprob: -4.0811896324157715
    5. 'end' → logprob: -7.2061896324157715
    6. '```' → logprob: -7.4561896324157715
    7. '[' → logprob: -7.8311896324157715
    8. '-' → logprob: -8.45619010925293
    9. '
' → logprob: -8.58119010925293
    10. '`' → logprob: -8.83119010925293

Token 1262: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.228561349213123e-05
    2. 'to' → logprob: -9.875052452087402
    3. '_' → logprob: -14.625052452087402
    4. '[' → logprob: -16.125051498413086
    5. 'To' → logprob: -16.625051498413086
    6. '_num' → logprob: -17.875051498413086
    7. '-to' → logprob: -18.125051498413086
    8. '[-' → logprob: -18.250051498413086
    9. '_path' → logprob: -18.375051498413086
    10. 'o' → logprob: -18.875051498413086

Token 1263: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.5793666243553162
    2. 'end' → logprob: -0.8293666243553162
    3. '_' → logprob: -6.329366683959961
    4. '5' → logprob: -6.454366683959961
    5. 'nd' → logprob: -10.454366683959961
    6. 'to' → logprob: -11.704366683959961
    7. '1' → logprob: -12.329366683959961
    8. '_to' → logprob: -12.454366683959961
    9. '[end' → logprob: -12.704366683959961
    10. '7' → logprob: -12.829366683959961

Token 1264: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. ' [' → logprob: -19.25
    4. '
' → logprob: -19.625
    5. '   ' → logprob: -20.75
    6. '\[' → logprob: -21.75
    7. '       ' → logprob: -22.0
    8. '           ' → logprob: -22.25
    9. '1' → logprob: -22.25
    10. '[
' → logprob: -22.375

Token 1265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014060820103622973
    2. '[' → logprob: -8.875140190124512
    3. '
' → logprob: -14.625140190124512
    4. '```' → logprob: -16.125141143798828
    5. 'from' → logprob: -17.000141143798828
    6. '   ' → logprob: -17.250141143798828
    7. ' ' → logprob: -17.375141143798828
    8. '(' → logprob: -17.625141143798828
    9. '`' → logprob: -19.125141143798828
    10. '>' → logprob: -19.250141143798828

Token 1266: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.04123464226722717
    2. ':]
' → logprob: -3.7912347316741943
    3. ']' → logprob: -4.041234493255615
    4. ':]

' → logprob: -9.416234970092773
    5. ']
' → logprob: -10.166234970092773
    6. ':' → logprob: -10.291234970092773
    7. ' :]' → logprob: -10.291234970092773
    8. '()]' → logprob: -10.666234970092773
    9. ' ]' → logprob: -11.791234970092773
    10. ':],' → logprob: -11.791234970092773

Token 1267: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7065820693969727
    2. '           ' → logprob: -0.9565820693969727
    3. '
' → logprob: -2.3315820693969727
    4. ' return' → logprob: -3.8315820693969727
    5. '       ' → logprob: -6.456582069396973
    6. '		' → logprob: -7.706582069396973
    7. ' full' → logprob: -8.081582069396973
    8. '[' → logprob: -8.331582069396973
    9. '
' → logprob: -8.706582069396973
    10. 'full' → logprob: -9.081582069396973

Token 1268: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0031989887356758118
    2. '           ' → logprob: -6.003199100494385
    3. ' return' → logprob: -7.253199100494385
    4. '       ' → logprob: -11.253198623657227
    5. '   ' → logprob: -13.253198623657227
    6. '	return' → logprob: -15.878198623657227
    7. '
' → logprob: -16.003198623657227
    8. '{return' → logprob: -16.503198623657227
    9. ':return' → logprob: -16.628198623657227
    10. '               ' → logprob: -17.128198623657227

Token 1269: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.0015023599844425917
    2. ' full' → logprob: -6.501502513885498
    3. '(full' → logprob: -18.751502990722656
    4. '	full' → logprob: -19.626502990722656
    5. 'ful' → logprob: -20.376502990722656
    6. 'path' → logprob: -20.751502990722656
    7. 'fully' → logprob: -21.251502990722656
    8. 'Full' → logprob: -21.501502990722656
    9. '_full' → logprob: -21.751502990722656
    10. '   ' → logprob: -21.876502990722656

Token 1270: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.935296834039036e-06
    2. 'path' → logprob: -13.25000286102295
    3. 'full' → logprob: -13.75000286102295
    4. 'Path' → logprob: -20.500003814697266
    5. '_full' → logprob: -20.500003814697266
    6. '```' → logprob: -20.875003814697266
    7. '_paths' → logprob: -21.375003814697266
    8. '\' → logprob: -21.625003814697266
    9. '"path' → logprob: -21.750003814697266
    10. '_PATH' → logprob: -22.000003814697266

Token 1271: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1272: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1273: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010449057444930077
    2. 'else' (adapté à ' else') → logprob: -5.010448932647705
    3. 'return' → logprob: -5.760448932647705
    4. ' else' → logprob: -8.635449409484863
    5. '<|end|>' → logprob: -9.010449409484863
    6. '#' → logprob: -9.260449409484863
    7. '
' → logprob: -9.385449409484863
    8. '```' → logprob: -10.635449409484863
    9. '[]' → logprob: -10.760449409484863
    10. '        
' → logprob: -10.885449409484863

Token 1274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8178344964981079
    2. ':
' → logprob: -0.9428344964981079
    3. '           ' → logprob: -1.817834496498108
    4. '       ' → logprob: -5.942834377288818
    5. '[' → logprob: -7.442834377288818
    6. ':return' → logprob: -7.442834377288818
    7. '(None' → logprob: -7.817834377288818
    8. '(' → logprob: -7.942834377288818
    9. '        ' → logprob: -8.192834854125977
    10. '():
' → logprob: -8.567834854125977

Token 1275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021181427873671055
    2. 'None' → logprob: -6.752118110656738
    3. '[]' → logprob: -7.877118110656738
    4. 'return' → logprob: -8.627118110656738
    5. '[' → logprob: -8.752118110656738
    6. '       ' → logprob: -8.752118110656738
    7. '[]
' → logprob: -10.627118110656738
    8. '[
' → logprob: -10.877118110656738
    9. ' None' → logprob: -11.627118110656738
    10. '          ' → logprob: -11.877118110656738

Token 1276: ' raise' (ID: 9338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39293497800827026
    2. 'return' → logprob: -1.142935037612915
    3. 'raise' (adapté à ' raise') → logprob: -5.267934799194336
    4. 'None' → logprob: -7.892934799194336
    5. '[]' → logprob: -8.517934799194336
    6. ' return' → logprob: -8.642934799194336
    7. '[]
' → logprob: -9.267934799194336
    8. ' raise' → logprob: -11.267934799194336
    9. '       ' → logprob: -11.392934799194336
    10. '
' → logprob: -11.392934799194336

Token 1277: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0032019545324146748
    2. ' Value' → logprob: -5.753201961517334
    3. 'Exception' → logprob: -11.003201484680176
    4. 'Runtime' → logprob: -12.128201484680176
    5. 'Not' → logprob: -13.753201484680176
    6. 'Assertion' → logprob: -14.878201484680176
    7. 'value' → logprob: -15.253201484680176
    8. ' Exception' → logprob: -15.753201484680176
    9. ' Runtime' → logprob: -16.003202438354492
    10. '_Value' → logprob: -16.503202438354492

Token 1278: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.02632816508412361
    2. 'rror' → logprob: -3.6513280868530273
    3. '(' → logprob: -11.401328086853027
    4. '.' → logprob: -11.401328086853027
    5. '.Error' → logprob: -13.651328086853027
    6. ')' → logprob: -14.526328086853027
    7. 'r' → logprob: -14.526328086853027
    8. '...' → logprob: -14.776328086853027
    9. 'nd' → logprob: -15.151328086853027
    10. '(Error' → logprob: -15.151328086853027

Token 1279: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007028053980320692
    2. '(' → logprob: -5.007028102874756
    3. '('' → logprob: -8.757027626037598
    4. '()' → logprob: -9.507027626037598
    5. '("")' → logprob: -9.757027626037598
    6. '(f' → logprob: -11.257027626037598
    7. '(
' → logprob: -12.507027626037598
    8. '       ' → logprob: -12.882027626037598
    9. '   ' → logprob: -14.507027626037598
    10. '           ' → logprob: -14.632027626037598

Token 1280: 'Invalid' (ID: 12278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0012358223320916295
    2. ''' → logprob: -7.6262359619140625
    3. 'Invalid' → logprob: -8.001235961914062
    4. 'f' → logprob: -8.126235961914062
    5. 'Value' → logprob: -10.251235961914062
    6. '"No' → logprob: -10.501235961914062
    7. 'Unsupported' → logprob: -11.126235961914062
    8. '("' → logprob: -11.501235961914062
    9. '"value' → logprob: -11.876235961914062
    10. ' "' → logprob: -12.251235961914062

Token 1281: ' stop' (ID: 5666)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.8907943964004517
    2. ' stop' → logprob: -1.1407943964004517
    3. ' route' → logprob: -2.640794277191162
    4. 'start' → logprob: -3.015794277191162
    5. 'stop' → logprob: -3.140794277191162
    6. 'route' → logprob: -3.265794277191162
    7. ' trip' → logprob: -3.390794277191162
    8. ' input' → logprob: -4.890794277191162
    9. ' stops' → logprob: -4.890794277191162
    10. '_stop' → logprob: -5.890794277191162

Token 1282: ' numbers' (ID: 8663)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.7964886426925659
    2. ')' → logprob: -1.671488642692566
    3. 's' → logprob: -2.1714887619018555
    4. '_num' → logprob: -2.2964887619018555
    5. '_numbers' → logprob: -2.6714887619018555
    6. 'number' → logprob: -3.5464887619018555
    7. '")' → logprob: -4.2964887619018555
    8. 'num' → logprob: -4.5464887619018555
    9. '_index' → logprob: -4.6714887619018555
    10. '_indices' → logprob: -5.9214887619018555

Token 1283: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030742455273866653
    2. '")' → logprob: -4.030742645263672
    3. ')")' → logprob: -4.780742645263672
    4. '       ' → logprob: -5.655742645263672
    5. '}")' → logprob: -8.030742645263672
    6. '<|end|>' → logprob: -9.280742645263672
    7. ' )' → logprob: -10.530742645263672
    8. ')")
' → logprob: -10.655742645263672
    9. '   ' → logprob: -10.780742645263672
    10. ')">' → logprob: -11.280742645263672

Token 1284: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1285: ' main' (ID: 2758)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.6513850092887878
    2. ' main' → logprob: -0.7763850092887878
    3. ' example' → logprob: -4.9013848304748535
    4. ' run' → logprob: -5.2763848304748535
    5. ' get' → logprob: -6.6513848304748535
    6. 'main' → logprob: -7.4013848304748535
    7. ' create' → logprob: -7.4013848304748535
    8. 'test' → logprob: -7.5263848304748535
    9. ' find' → logprob: -8.026385307312012
    10. ' calculate' → logprob: -8.151385307312012

Token 1286: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008622609078884125
    2. '():
' → logprob: -4.758622646331787
    3. ' ():' → logprob: -12.008622169494629
    4. '()' → logprob: -13.383622169494629
    5. '():
' → logprob: -14.883622169494629
    6. '():

' → logprob: -16.133623123168945
    7. 'def' → logprob: -17.758623123168945
    8. '().' → logprob: -18.883623123168945
    9. '(' → logprob: -19.008623123168945
    10. '()>' → logprob: -19.383623123168945

Token 1287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0058537740260362625
    2. 'bus' → logprob: -5.880853652954102
    3. ' network' → logprob: -7.005853652954102
    4. 'network' → logprob: -7.130853652954102
    5. ' bus' → logprob: -7.255853652954102
    6. 'import' → logprob: -8.505853652954102
    7. ' stops' → logprob: -8.880853652954102
    8. 'n' → logprob: -9.755853652954102
    9. ' import' → logprob: -10.130853652954102
    10. '```' → logprob: -10.255853652954102

Token 1288: ' import' (ID: 1588)
  Prédit: ' network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' network' → logprob: -0.7222257852554321
    2. 'network' → logprob: -0.9722257852554321
    3. '   ' → logprob: -2.2222256660461426
    4. ' bus' → logprob: -4.722225666046143
    5. 'bn' → logprob: -5.347225666046143
    6. ' bn' → logprob: -5.347225666046143
    7. 'net' → logprob: -5.472225666046143
    8. 'bus' → logprob: -5.972225666046143
    9. ' net' → logprob: -6.347225666046143
    10. ' nw' → logprob: -8.9722261428833

Token 1289: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.1279553291387856e-05
    2. 'arg' → logprob: -12.000011444091797
    3. ' sys' → logprob: -12.875011444091797
    4. 'random' → logprob: -13.625011444091797
    5. 'math' → logprob: -14.125011444091797
    6. 'collections' → logprob: -16.125011444091797
    7. 'heap' → logprob: -16.750011444091797
    8. 'built' → logprob: -17.000011444091797
    9. 'datetime' → logprob: -17.000011444091797
    10. 'time' → logprob: -17.250011444091797

Token 1290: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0366058312356472
    2. '
' → logprob: -3.6616058349609375
    3. 'args' → logprob: -5.5366058349609375
    4. 'for' → logprob: -6.0366058349609375
    5. 'lines' → logprob: -6.4116058349609375
    6. '    
' → logprob: -7.0366058349609375
    7. ' lines' → logprob: -7.9116058349609375
    8. '```' → logprob: -8.536605834960938
    9. 'bus' → logprob: -8.786605834960938
    10. 'line' → logprob: -8.786605834960938

Token 1291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021301566157490015
    2. 'args' → logprob: -6.877130031585693
    3. ' if' → logprob: -8.377130508422852
    4. 'if' → logprob: -8.377130508422852
    5. 'for' → logprob: -8.752130508422852
    6. 'def' → logprob: -8.877130508422852
    7. ' lines' → logprob: -9.127130508422852
    8. ' for' → logprob: -9.627130508422852
    9. 'lines' → logprob: -10.002130508422852
    10. '    
' → logprob: -10.252130508422852

Token 1292: ' input' (ID: 3422)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.7900309562683105
    2. '   ' → logprob: -1.0400309562683105
    3. 'if' → logprob: -2.2900309562683105
    4. 'for' → logprob: -3.2900309562683105
    5. 'lines' → logprob: -3.4150309562683105
    6. 'bus' → logprob: -4.7900309562683105
    7. 'argv' → logprob: -6.0400309562683105
    8. 'line' → logprob: -6.1650309562683105
    9. 'network' → logprob: -6.2900309562683105
    10. ' if' → logprob: -6.6650309562683105

Token 1293: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47257643938064575
    2. '_line' → logprob: -1.097576379776001
    3. '_data' → logprob: -3.847576379776001
    4. '_lines' → logprob: -4.34757661819458
    5. '().' → logprob: -5.97257661819458
    6. '_' → logprob: -5.97257661819458
    7. '_str' → logprob: -7.09757661819458
    8. '(' → logprob: -7.22257661819458
    9. '=' → logprob: -7.59757661819458
    10. 'data' → logprob: -7.97257661819458

Token 1294: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.007422406226396561
    2. ' sys' → logprob: -5.00742244720459
    3. 'input' → logprob: -7.25742244720459
    4. ' input' → logprob: -13.75742244720459
    5. '=sys' → logprob: -14.25742244720459
    6. 'lambda' → logprob: -16.382421493530273
    7. '	sys' → logprob: -16.882421493530273
    8. '(sys' → logprob: -17.132421493530273
    9. 'stdin' → logprob: -20.257421493530273
    10. '=input' → logprob: -21.257421493530273

Token 1295: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.23324277997016907
    2. '.' → logprob: -1.6082427501678467
    3. '.readline' → logprob: -5.358242988586426
    4. '.stdout' → logprob: -6.608242988586426
    5. '().' → logprob: -6.733242988586426
    6. 'stdin' → logprob: -8.608242988586426
    7. ' .' → logprob: -9.483242988586426
    8. '.argv' → logprob: -9.608242988586426
    9. '.read' → logprob: -9.983242988586426
    10. '.std' → logprob: -10.358242988586426

Token 1296: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1457303911447525
    2. '.readline' → logprob: -2.020730495452881
    3. 'stdin' → logprob: -6.520730495452881
    4. 'input' → logprob: -7.020730495452881
    5. ' readline' → logprob: -8.270730018615723
    6. 'buffer' → logprob: -8.770730018615723
    7. '.' → logprob: -9.645730018615723
    8. '_read' → logprob: -10.395730018615723
    9. 'reader' → logprob: -10.395730018615723
    10. '
' → logprob: -10.645730018615723

Token 1297: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002278007799759507
    2. '
' → logprob: -6.502277851104736
    3. 'n' → logprob: -7.877277851104736
    4. '    
' → logprob: -8.627278327941895
    5. 'num' → logprob: -9.502278327941895
    6. 'for' → logprob: -10.252278327941895
    7. 'def' → logprob: -10.502278327941895
    8. 'while' → logprob: -10.752278327941895
    9. 'line' → logprob: -11.627278327941895
    10. 't' → logprob: -11.752278327941895

Token 1298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006871753721497953
    2. '
' → logprob: -8.000687599182129
    3. '    
' → logprob: -9.000687599182129
    4. 'start' → logprob: -9.500687599182129
    5. 'stop' → logprob: -10.125687599182129
    6. 'for' → logprob: -10.375687599182129
    7. 'while' → logprob: -10.875687599182129
    8. 'line' → logprob: -11.250687599182129
    9. 'n' → logprob: -11.750687599182129
    10. 'num' → logprob: -12.000687599182129

Token 1299: ' bus' (ID: 1918)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10150519758462906
    2. '   ' → logprob: -2.7265052795410156
    3. 't' → logprob: -4.601505279541016
    4. 'q' → logprob: -4.726505279541016
    5. 'start' → logprob: -5.101505279541016
    6. 'Q' → logprob: -6.226505279541016
    7. 'num' → logprob: -6.476505279541016
    8. 'T' → logprob: -7.351505279541016
    9. 'for' → logprob: -7.351505279541016
    10. 'N' → logprob: -7.351505279541016

Token 1300: '_network' (ID: 47703)
  Prédit: '_network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_network' → logprob: -0.35081616044044495
    2. '_st' → logprob: -2.225816249847412
    3. '_stop' → logprob: -2.600816249847412
    4. '_num' → logprob: -3.225816249847412
    5. '_number' → logprob: -3.475816249847412
    6. ' =' → logprob: -4.725816249847412
    7. 'network' → logprob: -4.725816249847412
    8. '_' → logprob: -5.475816249847412
    9. '_numbers' → logprob: -5.850816249847412
    10. 'Network' → logprob: -5.975816249847412

Token 1301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4803830683231354
    2. '=' → logprob: -0.980383038520813
    3. '.' → logprob: -5.355382919311523
    4. '   ' → logprob: -6.730382919311523
    5. '  ' → logprob: -8.730382919311523
    6. ' ' → logprob: -9.730382919311523
    7. '.bus' → logprob: -10.730382919311523
    8. '.get' → logprob: -10.730382919311523
    9. 'def' → logprob: -10.855382919311523
    10. ')' → logprob: -11.480382919311523

Token 1302: ' Bus' (ID: 21332)
  Prédit: 'Bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bus' → logprob: -1.676292231422849e-05
    2. ' Bus' → logprob: -11.000017166137695
    3. 'bus' → logprob: -21.000017166137695
    4. 'Bike' → logprob: -22.500017166137695
    5. ' bus' → logprob: -22.875017166137695
    6. '.Bus' → logprob: -23.000017166137695
    7. '_bus' → logprob: -23.250017166137695
    8. '   ' → logprob: -23.375017166137695
    9. 'Bot' → logprob: -23.500017166137695
    10. 'BUS' → logprob: -23.500017166137695

Token 1303: 'Network' (ID: 14022)
  Prédit: 'Network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -3.4121114822482923e-06
    2. '_network' → logprob: -13.125003814697266
    3. 'etwork' → logprob: -13.750003814697266
    4. 'network' → logprob: -16.125003814697266
    5. 'Stop' → logprob: -16.375003814697266
    6. ' Network' → logprob: -17.875003814697266
    7. '_NETWORK' → logprob: -18.000003814697266
    8. '
' → logprob: -18.875003814697266
    9. 'Networking' → logprob: -19.750003814697266
    10. '.Network' → logprob: -19.750003814697266

Token 1304: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07789725065231323
    2. 'while' → logprob: -3.327897310256958
    3. '
' → logprob: -3.577897310256958
    4. 'for' → logprob: -4.952897071838379
    5. '    
' → logprob: -6.577897071838379
    6. ' while' → logprob: -7.327897071838379
    7. 'start' → logprob: -7.452897071838379
    8. '```' → logprob: -7.577897071838379
    9. 'line' → logprob: -7.702897071838379
    10. '  
' → logprob: -9.327897071838379

Token 1305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11040136218070984
    2. 'for' → logprob: -2.3604013919830322
    3. 'start' → logprob: -5.360401153564453
    4. 'while' → logprob: -5.985401153564453
    5. 'n' → logprob: -6.110401153564453
    6. ' for' → logprob: -8.235401153564453
    7. 'query' → logprob: -8.985401153564453
    8. 'trip' → logprob: -9.610401153564453
    9. 'num' → logprob: -9.735401153564453
    10. '```' → logprob: -10.235401153564453

Token 1306: ' n' (ID: 297)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5522354245185852
    2. 'start' → logprob: -1.0522353649139404
    3. 'while' → logprob: -3.0522353649139404
    4. 'n' (adapté à ' n') → logprob: -4.3022356033325195
    5. 'q' → logprob: -4.8022356033325195
    6. '   ' → logprob: -5.8022356033325195
    7. 'query' → logprob: -6.5522356033325195
    8. 's' → logprob: -7.3022356033325195
    9. 't' → logprob: -7.9272356033325195
    10. 'num' → logprob: -8.55223560333252

Token 1307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4291031062602997
    2. ' =' → logprob: -1.054103136062622
    3. '=int' → logprob: -7.929102897644043
    4. '   ' → logprob: -11.179102897644043
    5. '.' → logprob: -11.304102897644043
    6. ',' → logprob: -12.554102897644043
    7. ')' → logprob: -12.929102897644043
    8. '=input' → logprob: -13.179102897644043
    9. ' =
' → logprob: -13.304102897644043
    10. '_' → logprob: -14.054102897644043

Token 1308: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25192946195602417
    2. ' int' → logprob: -1.501929521560669
    3. 'input' → logprob: -15.75192928314209
    4. ' ' → logprob: -16.751930236816406
    5. ' input' → logprob: -16.751930236816406
    6. '=int' → logprob: -17.876930236816406
    7. '   ' → logprob: -18.626930236816406
    8. '  ' → logprob: -18.751930236816406
    9. '[int' → logprob: -19.126930236816406
    10. '(int' → logprob: -19.501930236816406

Token 1309: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03948310762643814
    2. 'input' → logprob: -3.289483070373535
    3. '(' → logprob: -6.789483070373535
    4. '()' → logprob: -8.164483070373535
    5. '()
' → logprob: -11.164483070373535
    6. ' input' → logprob: -11.789483070373535
    7. ' (' → logprob: -12.539483070373535
    8. '(
' → logprob: -12.664483070373535
    9. '=input' → logprob: -14.164483070373535
    10. ' ()' → logprob: -14.664483070373535

Token 1310: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16109664738178253
    2. '()' → logprob: -1.9110966920852661
    3. '())
' → logprob: -8.161096572875977
    4. '().' → logprob: -8.161096572875977
    5. ')' → logprob: -8.661096572875977
    6. '(' → logprob: -9.536096572875977
    7. '()
' → logprob: -10.036096572875977
    8. ' ())' → logprob: -11.911096572875977
    9. '()\' → logprob: -13.536096572875977
    10. '())

' → logprob: -14.286096572875977

Token 1311: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004577174549922347
    2. '   ' → logprob: -7.875457763671875
    3. ' for' → logprob: -9.500457763671875
    4. '	for' → logprob: -13.500457763671875
    5. 'results' → logprob: -14.500457763671875
    6. '
' → logprob: -14.750457763671875
    7. '    
' → logprob: -15.500457763671875
    8. 'while' → logprob: -16.625457763671875
    9. '```' → logprob: -17.375457763671875
    10. 'answers' → logprob: -18.125457763671875

Token 1312: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2664456789934775e-06
    2. ' for' → logprob: -14.000000953674316
    3. '
' → logprob: -15.000000953674316
    4. '   ' → logprob: -16.875001907348633
    5. '	for' → logprob: -17.750001907348633
    6. 'results' → logprob: -20.250001907348633
    7. '    
' → logprob: -20.750001907348633
    8. 'while' → logprob: -21.125001907348633
    9. '```' → logprob: -21.250001907348633
    10. '_for' → logprob: -22.000001907348633

Token 1313: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5759401917457581
    2. '_' → logprob: -0.8259401917457581
    3. ' ' → logprob: -14.325940132141113
    4. ' _
' → logprob: -16.07594108581543
    5. '_i' → logprob: -17.82594108581543
    6. ' i' → logprob: -18.32594108581543
    7. ' ' → logprob: -18.82594108581543
    8. '_
' → logprob: -18.95094108581543
    9. ' ‌' → logprob: -19.57594108581543
    10. '_=' → logprob: -19.82594108581543

Token 1314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011061854660511017
    2. 'in' → logprob: -4.511061668395996
    3. ' ' → logprob: -11.511061668395996
    4. 'range' → logprob: -13.011061668395996
    5. '_' → logprob: -13.761061668395996
    6. '
' → logprob: -15.886061668395996
    7. ' _' → logprob: -16.011062622070312
    8. '  ' → logprob: -16.136062622070312
    9. '	in' → logprob: -16.511062622070312
    10. ' 
' → logprob: -17.011062622070312

Token 1315: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '(range' → logprob: -17.500009536743164
    4. '
' → logprob: -18.000009536743164
    5. 'input' → logprob: -18.000009536743164
    6. 'in' → logprob: -19.125009536743164
    7. '	range' → logprob: -20.250009536743164
    8. 'read' → logprob: -20.750009536743164
    9. 'ange' → logprob: -20.875009536743164
    10. '```' → logprob: -20.875009536743164

Token 1316: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.015246194787323475
    2. 'n' → logprob: -4.265246391296387
    3. '(' → logprob: -7.015246391296387
    4. ' (' → logprob: -9.015246391296387
    5. ' n' → logprob: -9.765246391296387
    6. '(
' → logprob: -13.390246391296387
    7. '   ' → logprob: -13.390246391296387
    8. '(int' → logprob: -14.390246391296387
    9. '
' → logprob: -14.515246391296387
    10. ' ' → logprob: -15.390246391296387

Token 1317: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0016700613778084517
    2. '):' → logprob: -6.626669883728027
    3. '   ' → logprob: -8.626669883728027
    4. '():
' → logprob: -9.376669883728027
    5. ':
' → logprob: -9.876669883728027
    6. ':' → logprob: -11.126669883728027
    7. '):
' → logprob: -12.376669883728027
    8. '       ' → logprob: -12.501669883728027
    9. ')' → logprob: -13.126669883728027
    10. '```' → logprob: -14.126669883728027

Token 1318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3362117409706116
    2. 'line' → logprob: -1.9612116813659668
    3. 'start' → logprob: -2.711211681365967
    4. ' line' → logprob: -3.461211681365967
    5. '   ' → logprob: -4.086211681365967
    6. 'tokens' → logprob: -4.586211681365967
    7. 'query' → logprob: -4.711211681365967
    8. 'trip' → logprob: -6.211211681365967
    9. '	line' → logprob: -6.211211681365967
    10. ' start' → logprob: -6.711211681365967

Token 1319: ' s' (ID: 265)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5762112140655518
    2. 'start' → logprob: -1.4512112140655518
    3. ' line' → logprob: -1.7012112140655518
    4. '       ' → logprob: -4.701210975646973
    5. 'query' → logprob: -5.826210975646973
    6. ' start' → logprob: -6.201210975646973
    7. 's' (adapté à ' s') → logprob: -6.451210975646973
    8. 'from' → logprob: -6.576210975646973
    9. 'trip' → logprob: -6.701210975646973
    10. 'route' → logprob: -6.951210975646973

Token 1320: ',' (ID: 11)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.7972263097763062
    2. ',' → logprob: -1.1722263097763062
    3. 't' → logprob: -1.6722263097763062
    4. ',t' → logprob: -3.4222264289855957
    5. ',e' → logprob: -4.797226428985596
    6. ',end' → logprob: -5.422226428985596
    7. ' =' → logprob: -6.297226428985596
    8. ',tr' → logprob: -6.547226428985596
    9. ' ,' → logprob: -7.422226428985596
    10. ',start' → logprob: -7.672226428985596

Token 1321: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004081724211573601
    2. ' e' → logprob: -5.504081726074219
    3. 't' → logprob: -12.754081726074219
    4. 'd' → logprob: -15.504081726074219
    5. ' t' → logprob: -15.754081726074219
    6. '_e' → logprob: -20.37908172607422
    7. '	e' → logprob: -20.50408172607422
    8. ' d' → logprob: -21.00408172607422
    9. ' =' → logprob: -22.12908172607422
    10. 's' → logprob: -22.62908172607422

Token 1322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014138251543045
    2. ' =' → logprob: -1.701413869857788
    3. '=input' → logprob: -15.326414108276367
    4. '=line' → logprob: -16.201414108276367
    5. ')' → logprob: -16.701414108276367
    6. ',' → logprob: -16.701414108276367
    7. ' ' → logprob: -17.076414108276367
    8. '=int' → logprob: -17.951414108276367
    9. ')=' → logprob: -17.951414108276367
    10. 's' → logprob: -17.951414108276367

Token 1323: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3132663369178772
    2. ' map' → logprob: -1.3132662773132324
    3. 'input' → logprob: -12.43826675415039
    4. '(map' → logprob: -14.93826675415039
    5. '[' → logprob: -16.31326675415039
    6. ' input' → logprob: -16.56326675415039
    7. '	map' → logprob: -17.43826675415039
    8. '
' → logprob: -17.56326675415039
    9. 'list' → logprob: -17.56326675415039
    10. '_map' → logprob: -18.18826675415039

Token 1324: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.576049268245697
    2. 'int' → logprob: -0.826049268245697
    3. 'input' → logprob: -9.576048851013184
    4. '[int' → logprob: -10.951048851013184
    5. '```' → logprob: -11.826048851013184
    6. 'str' → logprob: -11.826048851013184
    7. '<int' → logprob: -12.576048851013184
    8. '=int' → logprob: -13.076048851013184
    9. ' int' → logprob: -13.951048851013184
    10. '(input' → logprob: -14.451048851013184

Token 1325: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10093443095684052
    2. ',' → logprob: -2.4759345054626465
    3. '(input' → logprob: -4.4759345054626465
    4. 'input' → logprob: -7.9759345054626465
    5. '(' → logprob: -9.475934028625488
    6. '   ' → logprob: -9.600934028625488
    7. ' ,' → logprob: -10.475934028625488
    8. ' (' → logprob: -12.350934028625488
    9. ')' → logprob: -12.475934028625488
    10. ',int' → logprob: -12.600934028625488

Token 1326: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '(input' → logprob: -17.000261306762695
    4. '=input' → logprob: -18.875261306762695
    5. ',input' → logprob: -19.500261306762695
    6. '<input' → logprob: -20.125261306762695
    7. '_input' → logprob: -20.625261306762695
    8. '[input' → logprob: -20.875261306762695
    9. '	input' → logprob: -21.250261306762695
    10. '.input' → logprob: -22.375261306762695

Token 1327: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.723973582556937e-05
    2. '()' → logprob: -11.000017166137695
    3. '()
' → logprob: -15.000017166137695
    4. '(' → logprob: -16.250017166137695
    5. ' ().' → logprob: -16.250017166137695
    6. '()[' → logprob: -17.125017166137695
    7. '.split' → logprob: -17.625017166137695
    8. 'split' → logprob: -18.375017166137695
    9. '.strip' → logprob: -19.375017166137695
    10. '.readline' → logprob: -19.625017166137695

Token 1328: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009136092266999185
    2. 'strip' → logprob: -7.000913619995117
    3. 'rstrip' → logprob: -13.125913619995117
    4. ' split' → logprob: -16.375913619995117
    5. '(split' → logprob: -17.625913619995117
    6. 'read' → logprob: -18.250913619995117
    7. 'spl' → logprob: -19.125913619995117
    8. '_split' → logprob: -19.875913619995117
    9. '().' → logprob: -20.500913619995117
    10. '.split' → logprob: -20.625913619995117

Token 1329: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0911952555179596
    2. '())
' → logprob: -2.5911953449249268
    3. ')' → logprob: -4.466195106506348
    4. '()' → logprob: -7.591195106506348
    5. ')
' → logprob: -8.716195106506348
    6. '(' → logprob: -10.341195106506348
    7. '())
' → logprob: -10.466195106506348
    8. '()
' → logprob: -12.091195106506348
    9. '())

' → logprob: -13.841195106506348
    10. ' ())' → logprob: -14.466195106506348

Token 1330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013047587708570063
    2. 'path' → logprob: -9.625130653381348
    3. '        
' → logprob: -10.750130653381348
    4. '```' → logprob: -11.125130653381348
    5. '<|end|>' → logprob: -11.250130653381348
    6. '   ' → logprob: -12.375130653381348
    7. ' path' → logprob: -12.875130653381348
    8. '
' → logprob: -13.000130653381348
    9. ',' → logprob: -13.500130653381348
    10. 'tokens' → logprob: -14.625130653381348

Token 1331: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.025158802047371864
    2. '       ' → logprob: -3.7751588821411133
    3. ' path' → logprob: -7.025158882141113
    4. 'route' → logprob: -7.650158882141113
    5. 'print' → logprob: -7.775158882141113
    6. 'result' → logprob: -9.025158882141113
    7. '```' → logprob: -13.275158882141113
    8. 'paths' → logprob: -14.025158882141113
    9. ' route' → logprob: -14.275158882141113
    10. '	path' → logprob: -14.650158882141113

Token 1332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. '_' → logprob: -17.561967849731445
    4. ' =
' → logprob: -18.061967849731445
    5. '   ' → logprob: -18.186967849731445
    6. ')' → logprob: -18.561967849731445
    7. ' ' → logprob: -19.811967849731445
    8. '.' → logprob: -19.811967849731445
    9. '＝' → logprob: -20.186967849731445
    10. '```' → logprob: -20.186967849731445

Token 1333: ' bus' (ID: 1918)
  Prédit: 'bus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bus' → logprob: -0.023245595395565033
    2. ' bus' → logprob: -3.7732455730438232
    3. '(bus' → logprob: -16.648244857788086
    4. '   ' → logprob: -18.398244857788086
    5. 'Bus' → logprob: -18.898244857788086
    6. 'b' → logprob: -19.273244857788086
    7. '_bus' → logprob: -19.648244857788086
    8. '.bus' → logprob: -19.773244857788086
    9. '```' → logprob: -20.773244857788086
    10. 'bot' → logprob: -20.898244857788086

Token 1334: '_network' (ID: 47703)
  Prédit: '_network'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_network' → logprob: -5.633853652398102e-05
    2. 'network' → logprob: -10.000056266784668
    3. 'etwork' → logprob: -11.500056266784668
    4. 'path' → logprob: -14.375056266784668
    5. '_NETWORK' → logprob: -16.125057220458984
    6. 'NETWORK' → logprob: -17.625057220458984
    7. 'Network' → logprob: -18.375057220458984
    8. '_path' → logprob: -19.125057220458984
    9. '.network' → logprob: -20.000057220458984
    10. '_system' → logprob: -20.375057220458984

Token 1335: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.07889672368764877
    2. 'get' → logprob: -2.5788967609405518
    3. '_get' → logprob: -12.703896522521973
    4. ' get' → logprob: -13.203896522521973
    5. '.' → logprob: -13.578896522521973
    6. ' .' → logprob: -15.453896522521973
    7. '=get' → logprob: -15.953896522521973
    8. '	get' → logprob: -16.70389747619629
    9. '   ' → logprob: -17.07889747619629
    10. '```' → logprob: -17.07889747619629

Token 1336: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.0009115827269852161
    2. 'route' → logprob: -7.000911712646484
    3. ' route' → logprob: -16.500911712646484
    4. 'Route' → logprob: -17.625911712646484
    5. '_path' → logprob: -18.125911712646484
    6. '_ROUTE' → logprob: -18.375911712646484
    7. '$route' → logprob: -18.750911712646484
    8. '\' → logprob: -19.375911712646484
    9. '(route' → logprob: -19.375911712646484
    10. '.route' → logprob: -19.625911712646484

Token 1337: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.002190352650359273
    2. 'for' → logprob: -6.127190589904785
    3. 'For' → logprob: -12.877190589904785
    4. 'path' → logprob: -13.377190589904785
    5. 's' → logprob: -14.877190589904785
    6. ' for' → logprob: -15.627190589904785
    7. '_path' → logprob: -16.12718963623047
    8. '```' → logprob: -16.12718963623047
    9. '`' → logprob: -16.25218963623047
    10. '_FOR' → logprob: -16.62718963623047

Token 1338: '_trip' (ID: 154353)
  Prédit: '_trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trip' → logprob: -0.029763683676719666
    2. 'trip' → logprob: -3.529763698577881
    3. 'Trip' → logprob: -12.404763221740723
    4. ' trip' → logprob: -12.529763221740723
    5. 's' → logprob: -13.154763221740723
    6. 'path' → logprob: -14.029763221740723
    7. '(s' → logprob: -14.779763221740723
    8. '
' → logprob: -14.779763221740723
    9. 'bus' → logprob: -15.154763221740723
    10. '```' → logprob: -15.154763221740723

Token 1339: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.65707261255011e-06
    2. 's' → logprob: -12.125008583068848
    3. '(' → logprob: -12.875008583068848
    4. ' (' → logprob: -14.750008583068848
    5. '       ' → logprob: -16.875009536743164
    6. '(
' → logprob: -17.000009536743164
    7. '((' → logprob: -17.750009536743164
    8. '(start' → logprob: -17.750009536743164
    9. '   ' → logprob: -18.125009536743164
    10. 'start' → logprob: -19.750009536743164

Token 1340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47415271401405334
    2. ',e' → logprob: -0.974152684211731
    3. ' ,' → logprob: -9.599152565002441
    4. 'e' → logprob: -12.474152565002441
    5. ',
' → logprob: -12.974152565002441
    6. ',end' → logprob: -14.474152565002441
    7. ' e' → logprob: -15.349152565002441
    8. ',p' → logprob: -15.474152565002441
    9. ',s' → logprob: -15.849152565002441
    10. '       ' → logprob: -15.849152565002441

Token 1341: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06196768581867218
    2. ' e' → logprob: -2.811967611312866
    3. '       ' → logprob: -18.186967849731445
    4. '           ' → logprob: -18.811967849731445
    5. '   ' → logprob: -19.186967849731445
    6. ' ' → logprob: -19.311967849731445
    7. '        ' → logprob: -19.561967849731445
    8. '    ' → logprob: -19.686967849731445
    9. '         ' → logprob: -19.686967849731445
    10. '          ' → logprob: -19.811967849731445

Token 1342: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5378777384757996
    2. '       ' → logprob: -1.0378777980804443
    3. ')' → logprob: -2.7878777980804443
    4. ')
' → logprob: -8.662878036499023
    5. '()
' → logprob: -10.662878036499023
    6. '[' → logprob: -10.912878036499023
    7. '()' → logprob: -11.537878036499023
    8. 'print' → logprob: -11.662878036499023
    9. '           ' → logprob: -12.162878036499023
    10. '())
' → logprob: -12.662878036499023

Token 1343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003204688662663102
    2. 'print' → logprob: -5.753204822540283
    3. '        
' → logprob: -11.003204345703125
    4. '```' → logprob: -12.003204345703125
    5. '   ' → logprob: -12.878204345703125
    6. '
' → logprob: -14.628204345703125
    7. '           ' → logprob: -15.003204345703125
    8. ' print' → logprob: -15.503204345703125
    9. 'for' → logprob: -15.628204345703125
    10. '<|end|>' → logprob: -16.253204345703125

Token 1344: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0028344690799713135
    2. '       ' → logprob: -6.002834320068359
    3. 'for' → logprob: -8.00283432006836
    4. ' print' → logprob: -11.12783432006836
    5. '```' → logprob: -11.62783432006836
    6. ' for' → logprob: -14.75283432006836
    7. '``' → logprob: -16.00283432006836
    8. '
' → logprob: -16.50283432006836
    9. '   ' → logprob: -16.87783432006836
    10. '	print' → logprob: -18.50283432006836

Token 1345: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.04324695095419884
    2. '('' → logprob: -3.2932469844818115
    3. '("' → logprob: -5.293246746063232
    4. '(path' → logprob: -9.04324722290039
    5. '(' → logprob: -10.29324722290039
    6. ''' → logprob: -11.91824722290039
    7. '*' → logprob: -12.41824722290039
    8. '"' → logprob: -13.41824722290039
    9. '(*(' → logprob: -13.66824722290039
    10. 'path' → logprob: -14.66824722290039

Token 1346: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20163346827030182
    2. ''' → logprob: -1.7016334533691406
    3. ' "' → logprob: -9.45163345336914
    4. '*' → logprob: -9.57663345336914
    5. ' '' → logprob: -9.95163345336914
    6. '"path' → logprob: -11.32663345336914
    7. '("' → logprob: -12.95163345336914
    8. '('' → logprob: -13.07663345336914
    9. '"*' → logprob: -13.45163345336914
    10. '"-' → logprob: -13.57663345336914

Token 1347: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.935296834039036e-06
    2. '"' → logprob: -13.75000286102295
    3. ' join' → logprob: -13.87500286102295
    4. 'print' → logprob: -15.12500286102295
    5. 'sep' → logprob: -15.50000286102295
    6. '.join' → logprob: -16.500003814697266
    7. ''' → logprob: -16.500003814697266
    8. 'j' → logprob: -16.750003814697266
    9. '".' → logprob: -17.125003814697266
    10. '```' → logprob: -17.125003814697266

Token 1348: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04871181771159172
    2. '(str' → logprob: -3.0487117767333984
    3. 'map' → logprob: -9.048711776733398
    4. 'str' → logprob: -12.048711776733398
    5. '[str' → logprob: -14.798711776733398
    6. '([' → logprob: -15.298711776733398
    7. '(' → logprob: -15.423711776733398
    8. '(list' → logprob: -16.0487117767334
    9. ' map' → logprob: -16.2987117767334
    10. '	map' → logprob: -17.5487117767334

Token 1349: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0009270645678043365
    2. 'str' → logprob: -7.000926971435547
    3. '(' → logprob: -11.750926971435547
    4. '(int' → logprob: -12.625926971435547
    5. '```' → logprob: -12.875926971435547
    6. ' str' → logprob: -14.125926971435547
    7. '=str' → logprob: -14.500926971435547
    8. '[str' → logprob: -14.875926971435547
    9. '	str' → logprob: -15.625926971435547
    10. '``' → logprob: -17.875926971435547

Token 1350: ',path' (ID: 188146)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.13157403469085693
    2. ',path' → logprob: -2.1315741539001465
    3. ',' → logprob: -5.3815741539001465
    4. 'path' → logprob: -10.631573677062988
    5. '[path' → logprob: -12.506573677062988
    6. '(' → logprob: -12.506573677062988
    7. ' ,' → logprob: -13.881573677062988
    8. '   ' → logprob: -14.631573677062988
    9. '
' → logprob: -14.631573677062988
    10. ' (' → logprob: -14.756573677062988

Token 1351: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038045622408390045
    2. ')))' → logprob: -3.288045644760132
    3. '))
' → logprob: -12.538045883178711
    4. '))))' → logprob: -15.788045883178711
    5. ')' → logprob: -15.913045883178711
    6. ')))
' → logprob: -16.53804588317871
    7. '()))' → logprob: -16.53804588317871
    8. '   ' → logprob: -16.53804588317871
    9. '}))' → logprob: -17.03804588317871
    10. ' ))' → logprob: -17.91304588317871

Token 1352: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12461870163679123
    2. '<|end|>' → logprob: -2.7496187686920166
    3. '```' → logprob: -3.6246187686920166
    4. '#' → logprob: -3.9996187686920166
    5. ' if' → logprob: -5.1246185302734375
    6. '<|end|>' → logprob: -7.6246185302734375
    7. '__' → logprob: -7.7496185302734375
    8. 'If' → logprob: -8.124618530273438
    9. '
' → logprob: -8.249618530273438
    10. '\' → logprob: -8.749618530273438

Token 1353: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10021119564771652
    2. ' __' → logprob: -2.3502111434936523
    3. 'name' → logprob: -13.225211143493652
    4. 'if' → logprob: -13.975211143493652
    5. '_name' → logprob: -13.975211143493652
    6. '___' → logprob: -14.225211143493652
    7. '.__' → logprob: -15.975211143493652
    8. ' ' → logprob: -16.47521209716797
    9. '(__' → logprob: -16.97521209716797
    10. '____' → logprob: -17.10021209716797

Token 1354: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04442736506462097
    2. '==' → logprob: -4.044427394866943
    3. ' ==' → logprob: -4.044427394866943
    4. '.__' → logprob: -5.544427394866943
    5. 'if' → logprob: -6.544427394866943
    6. '=="' → logprob: -7.169427394866943
    7. 'name' → logprob: -7.294427394866943
    8. '```' → logprob: -7.919427394866943
    9. '__.__' → logprob: -8.044426918029785
    10. ' __' → logprob: -8.919426918029785

Token 1355: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00019388488726690412
    2. '==' → logprob: -8.62519359588623
    3. '=="' → logprob: -11.62519359588623
    4. '__.__' → logprob: -13.00019359588623
    5. ' ==' → logprob: -13.12519359588623
    6. '```' → logprob: -15.12519359588623
    7. '=='' → logprob: -15.50019359588623
    8. '__.' → logprob: -15.87519359588623
    9. '__('' → logprob: -16.250194549560547
    10. '___' → logprob: -16.375194549560547

Token 1356: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10496417433023453
    2. ' ==' → logprob: -3.229964256286621
    3. '__' → logprob: -3.354964256286621
    4. '=="' → logprob: -3.729964256286621
    5. '=='' → logprob: -6.854964256286621
    6. '.__' → logprob: -9.354964256286621
    7. '==
' → logprob: -10.854964256286621
    8. '__.__' → logprob: -12.479964256286621
    9. '```' → logprob: -12.729964256286621
    10. '.' → logprob: -12.729964256286621

Token 1357: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12694008648395538
    2. ''' → logprob: -2.1269400119781494
    3. '__' → logprob: -11.50193977355957
    4. ' "__' → logprob: -13.75193977355957
    5. '"class' → logprob: -16.00193977355957
    6. '"_' → logprob: -16.25193977355957
    7. '   ' → logprob: -16.50193977355957
    8. ' '__' → logprob: -16.62693977355957
    9. ''"' → logprob: -16.62693977355957
    10. '"name' → logprob: -16.75193977355957

Token 1358: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014569371938705444
    2. '__' → logprob: -4.264569282531738
    3. 'name' → logprob: -8.389569282531738
    4. '"' → logprob: -8.764569282531738
    5. ''' → logprob: -11.389569282531738
    6. '_main' → logprob: -13.139569282531738
    7. ' main' → logprob: -13.264569282531738
    8. '__":
' → logprob: -13.264569282531738
    9. 'm' → logprob: -13.764569282531738
    10. 'python' → logprob: -13.889569282531738

Token 1359: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.010466636158525944
    2. '__' → logprob: -4.635466575622559
    3. '__':
' → logprob: -7.260466575622559
    4. '__:' → logprob: -13.385466575622559
    5. '__
' → logprob: -13.510466575622559
    6. '__.__' → logprob: -14.010466575622559
    7. '__.' → logprob: -14.135466575622559
    8. '__["' → logprob: -14.260466575622559
    9. '_' → logprob: -14.385466575622559
    10. '__);
' → logprob: -14.885466575622559

Token 1360: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00023607931507285684
    2. '   ' → logprob: -8.625236511230469
    3. ' main' → logprob: -10.375236511230469
    4. '	main' → logprob: -10.875236511230469
    5. '
' → logprob: -13.000236511230469
    6. '__' → logprob: -13.625236511230469
    7. '_main' → logprob: -13.750236511230469
    8. '    
' → logprob: -14.000236511230469
    9. '(main' → logprob: -15.000236511230469
    10. 'run' → logprob: -15.250236511230469

Token 1361: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.5
    3. '	main' → logprob: -21.0
    4. '   ' → logprob: -21.5
    5. '_main' → logprob: -23.75
    6. 'import' → logprob: -25.125
    7. '(main' → logprob: -25.125
    8. '.main' → logprob: -25.625
    9. 'Main' → logprob: -27.625
    10. '```' → logprob: -27.875

Token 1362: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1360
Tokens correctement prédits (1ère position, stricte): 585
Tokens correctement prédits (1ère position, avec adaptation): 641
Tokens correctement prédits (top 10): 1161
Précision stricte (1ère position): 43.01%
Précision adaptée (1ère position): 47.13%
Précision (top 10): 85.37%
================================================================================
