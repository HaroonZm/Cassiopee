================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:20:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    # ladder top floors pre-processing
    # For each ladder cell, find the top floor of ladder it belongs to
    def ladder_top(build):
        top = [0]*n
        i = 0
        while i < n:
            if build[i] == 1:
                j = i
                while j+1 < n and build[j+1] == 1:
                    j += 1
                for k in range(i, j+1):
                    top[k] = j
                i = j+1
            else:
                top[i] = i
                i += 1
        return top

    a_top = ladder_top(a)
    b_top = ladder_top(b)

    from collections import deque

    # State: (building(0 or 1), floor index 0-based)
    # Floors are 0-based internally for programming convenience
    # Start from floor 0 on either building
    visited = [[False]*n for _ in range(2)]

    queue = deque()
    # can start at floor 0 on building 0 and building 1
    # after being on floor 0, we can do jumps
    queue.append((0,0,0)) # building, floor, jumps
    queue.append((1,0,0))
    visited[0][0] = True
    visited[1][0] = True

    ans = "NA"

    while queue:
        bld,floor,jumps = queue.popleft()
        # if reached top floor, answer is jumps
        if floor == n-1:
            ans = jumps
            break
        # jump to the opposite building
        next_bld = 1 - bld

        # candidate floors: same floor, +1 floor, +2 floors
        for df in [0,1,2]:
            nf = floor + df
            if nf >= n:
                continue
            # after jump, adjust floor according to wall type
            if next_bld == 0:
                wall = a[nf]
                top_floor = a_top[nf]
            else:
                wall = b[nf]
                top_floor = b_top[nf]

            # process according to wall type
            if wall == 0:
                new_floor = nf
            elif wall == 1:
                new_floor = top_floor
            else: # wall == 2 slide
                # slide down to ladder top or normal floor
                # if ladder on that floor, slide down to top
                # otherwise, stay on nf
                if next_bld == 0:
                    new_floor = a_top[nf]
                else:
                    new_floor = b_top[nf]

            if not visited[next_bld][new_floor]:
                visited[next_bld][new_floor] = True
                queue.append((next_bld,new_floor,jumps+1))

    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7390616536140442
    2. 'u' → logprob: -1.6140615940093994
    3. '=' → logprob: -2.1140615940093994
    4. 'o' → logprob: -2.7390615940093994
    5. '   ' → logprob: -2.9890615940093994
    6. 'e' → logprob: -4.1140618324279785
    7. ' =' → logprob: -4.1140618324279785
    8. '_' → logprob: -4.7390618324279785
    9. '+' → logprob: -4.9890618324279785
    10. '  ' → logprob: -5.1140618324279785

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' eval' → logprob: -12.217714309692383
    10. ' i' → logprob: -12.217714309692383

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002818312495946884
    2. '(input' → logprob: -5.8778181076049805
    3. '('' → logprob: -12.62781810760498
    4. '()' → logprob: -12.87781810760498
    5. 'input' → logprob: -12.87781810760498
    6. '(
' → logprob: -13.12781810760498
    7. ' (' → logprob: -13.75281810760498
    8. ''' → logprob: -14.62781810760498
    9. '(n' → logprob: -15.25281810760498
    10. '("' → logprob: -16.252819061279297

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12421323359012604
    2. ')' → logprob: -2.499213218688965
    3. '()' → logprob: -3.624213218688965
    4. '())' → logprob: -5.124213218688965
    5. '))' → logprob: -6.999213218688965
    6. '(
' → logprob: -8.249213218688965
    7. '()))' → logprob: -8.749213218688965
    8. '('' → logprob: -8.749213218688965
    9. ' ' → logprob: -9.249213218688965
    10. '```' → logprob: -9.749213218688965

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39138108491897583
    2. ' if' → logprob: -2.016381025314331
    3. '   ' → logprob: -2.641381025314331
    4. ')' → logprob: -3.641381025314331
    5. ':' → logprob: -3.641381025314331
    6. '  ' → logprob: -3.891381025314331
    7. '<|end|>' → logprob: -4.26638126373291
    8. 'if' → logprob: -4.64138126373291
    9. '    ' → logprob: -5.39138126373291
    10. ',' → logprob: -5.64138126373291

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1099934577941895
    2. ' ' → logprob: -1.3599934577941895
    3. '<|end|>' → logprob: -1.8599934577941895
    4. '   ' → logprob: -2.6099934577941895
    5. ':' → logprob: -2.8599934577941895
    6. '  ' → logprob: -3.2349934577941895
    7. ')' → logprob: -3.6099934577941895
    8. 'if' (adapté à ' if') → logprob: -3.9849934577941895
    9. '    ' → logprob: -4.2349934577941895
    10. '```' → logprob: -5.4849934577941895

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020662404596805573
    2. ' ' → logprob: -4.020662307739258
    3. ' not' → logprob: -6.520662307739258
    4. 'n' → logprob: -6.895662307739258
    5. ' ' → logprob: -11.270662307739258
    6. 'not' → logprob: -12.145662307739258
    7. '  ' → logprob: -12.395662307739258
    8. '	n' → logprob: -14.770662307739258
    9. '(n' → logprob: -15.145662307739258
    10. '<|end|>' → logprob: -15.395662307739258

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.26881682872772217
    2. ' ==' → logprob: -2.1438169479370117
    3. ' <' → logprob: -3.0188169479370117
    4. ' <=' → logprob: -3.3938169479370117
    5. '>' → logprob: -4.018816947937012
    6. ' ' → logprob: -5.143816947937012
    7. '==' → logprob: -5.143816947937012
    8. ' >=' → logprob: -5.768816947937012
    9. '<' → logprob: -7.018816947937012
    10. ')' → logprob: -7.393816947937012

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021023452281952
    2. '0' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.975210189819336
    4. '1' → logprob: -14.100210189819336
    5. '32' → logprob: -15.225210189819336
    6. ' -' → logprob: -15.912710189819336
    7. '  ' → logprob: -16.037710189819336
    8. '4' → logprob: -16.162710189819336
    9. ' EOF' → logprob: -16.225210189819336
    10. ' a' → logprob: -16.225210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022028323728591204
    2. ' ' → logprob: -6.127202987670898
    3. '-' → logprob: -11.252202987670898
    4. '1' → logprob: -13.502202987670898
    5. ' -' → logprob: -13.627202987670898
    6. '42' → logprob: -14.252202987670898
    7. '   ' → logprob: -14.377202987670898
    8. '  ' → logprob: -15.502202987670898
    9. '```' → logprob: -15.877202987670898
    10. '    ' → logprob: -16.0022029876709

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ':
' → logprob: -9.875077247619629
    3. ' :' → logprob: -11.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. ':return' → logprob: -12.500077247619629
    6. '       ' → logprob: -13.000077247619629
    7. ':\' → logprob: -13.125077247619629
    8. '):' → logprob: -13.375077247619629
    9. '    ' → logprob: -14.375077247619629
    10. ':**' → logprob: -15.250077247619629

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028660334646701813
    2. ' break' → logprob: -8.750287055969238
    3. '   ' → logprob: -10.000287055969238
    4. '    ' → logprob: -10.250287055969238
    5. '        ' → logprob: -11.375287055969238
    6. '      ' → logprob: -11.750287055969238
    7. '\n' → logprob: -12.375287055969238
    8. '```' → logprob: -12.375287055969238
    9. '	break' → logprob: -12.625287055969238
    10. '     ' → logprob: -12.750287055969238

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014878070913255215
    2. '       ' → logprob: -4.514878273010254
    3. 'break' (adapté à ' break') → logprob: -5.889878273010254
    4. '   ' → logprob: -7.264878273010254
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. '_break' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23879946768283844
    2. '   ' → logprob: -1.9887994527816772
    3. '\n' → logprob: -2.863799571990967
    4. '\' → logprob: -5.363799571990967
    5. ' ' → logprob: -5.988799571990967
    6. '    
' → logprob: -6.363799571990967
    7. ')' → logprob: -6.488799571990967
    8. '<|end|>' → logprob: -6.488799571990967
    9. '\r' → logprob: -6.613799571990967
    10. '```' → logprob: -6.613799571990967

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17229793965816498
    2. '    
' → logprob: -3.297297954559326
    3. '<|end|>' → logprob: -3.297297954559326
    4. '\n' → logprob: -3.547297954559326
    5. '
' → logprob: -3.797297954559326
    6. '```' → logprob: -4.297297954559326
    7. 'n' → logprob: -5.547297954559326
    8. '\' → logprob: -5.547297954559326
    9. '#' → logprob: -5.797297954559326
    10. ')' → logprob: -6.422297954559326

Token 20: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27328136563301086
    2. '\n' → logprob: -2.1482813358306885
    3. ' ' → logprob: -3.5232813358306885
    4. '<|end|>' → logprob: -3.6482813358306885
    5. '\' → logprob: -3.7732813358306885
    6. '    ' → logprob: -4.523281574249268
    7. '    
' → logprob: -5.023281574249268
    8. '```' → logprob: -5.398281574249268
    9. ')' → logprob: -5.773281574249268
    10. '\r' → logprob: -5.773281574249268

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9828966856002808
    2. 'rr' → logprob: -1.1078966856002808
    3. ',' → logprob: -2.7328968048095703
    4. 'rray' → logprob: -2.8578968048095703
    5. ' ' → logprob: -3.1078968048095703
    6. 'r' → logprob: -3.2328968048095703
    7. '=' → logprob: -3.4828968048095703
    8. '[' → logprob: -4.10789680480957
    9. ' +=' → logprob: -4.10789680480957
    10. '[i' → logprob: -5.48289680480957

Token 22: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.0124129056930542
    2. ' n' → logprob: -1.2624129056930542
    3. ' [' → logprob: -2.1374130249023438
    4. 'n' → logprob: -2.3874130249023438
    5. '[]' → logprob: -2.8874130249023438
    6. ' list' → logprob: -3.0124130249023438
    7. '[n' → logprob: -4.637413024902344
    8. ' ' → logprob: -5.012413024902344
    9. '[' → logprob: -5.137413024902344
    10. 'list' → logprob: -5.512413024902344

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039039766415953636
    2. '(range' → logprob: -6.128903865814209
    3. '(a' → logprob: -6.503903865814209
    4. '(input' → logprob: -9.503904342651367
    5. '()' → logprob: -10.253904342651367
    6. '(int' → logprob: -10.753904342651367
    7. '(map' → logprob: -11.003904342651367
    8. '(
' → logprob: -11.878904342651367
    9. '(eval' → logprob: -12.003904342651367
    10. '(n' → logprob: -12.128904342651367

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023470476269721985
    2. '(' → logprob: -3.773470401763916
    3. 'int' → logprob: -8.773470878601074
    4. '(str' → logprob: -10.773470878601074
    5. '(lambda' → logprob: -11.273470878601074
    6. '(
' → logprob: -11.523470878601074
    7. ')' → logprob: -11.523470878601074
    8. '<int' → logprob: -11.648470878601074
    9. '=int' → logprob: -13.148470878601074
    10. '(input' → logprob: -13.773470878601074

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030362417921423912
    2. ',input' → logprob: -3.905362367630005
    3. '(' → logprob: -4.780362606048584
    4. ',' → logprob: -6.655362606048584
    5. 'input' → logprob: -10.155362129211426
    6. ')' → logprob: -11.530362129211426
    7. ' ,' → logprob: -11.530362129211426
    8. ' (' → logprob: -11.655362129211426
    9. '=input' → logprob: -11.905362129211426
    10. ' input' → logprob: -12.280362129211426

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5764405727386475
    2. 'input' → logprob: -0.8264405727386475
    3. '(input' → logprob: -7.701440811157227
    4. ',input' → logprob: -10.326440811157227
    5. ')' → logprob: -11.576440811157227
    6. '=input' → logprob: -12.951440811157227
    7. '[input' → logprob: -13.951440811157227
    8. '	input' → logprob: -13.951440811157227
    9. ' (' → logprob: -14.576440811157227
    10. ' )' → logprob: -14.701440811157227

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009441551752388477
    2. '()' → logprob: -4.759441375732422
    3. '(' → logprob: -7.759441375732422
    4. '()))' → logprob: -8.134441375732422
    5. '())' → logprob: -9.509441375732422
    6. '()));' → logprob: -11.509441375732422
    7. '())))' → logprob: -11.759441375732422
    8. ')' → logprob: -13.134441375732422
    9. '(()' → logprob: -13.384441375732422
    10. '()
' → logprob: -13.634441375732422

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005816269549541175
    2. 'strip' → logprob: -7.500581741333008
    3. 'rstrip' → logprob: -10.750581741333008
    4. ' split' → logprob: -12.000581741333008
    5. '(split' → logprob: -14.250581741333008
    6. 'spl' → logprob: -15.250581741333008
    7. ')' → logprob: -17.000581741333008
    8. 's' → logprob: -17.250581741333008
    9. 'sp' → logprob: -17.500581741333008
    10. ' strip' → logprob: -17.500581741333008

Token 29: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.15084542334079742
    2. '))' → logprob: -2.775845527648926
    3. '())' → logprob: -2.775845527648926
    4. '()' → logprob: -5.150845527648926
    5. '(' → logprob: -5.525845527648926
    6. ')' → logprob: -5.525845527648926
    7. '('' → logprob: -7.525845527648926
    8. '())))' → logprob: -8.025845527648926
    9. '()))
' → logprob: -8.150845527648926
    10. ')))' → logprob: -9.025845527648926

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2106785774230957
    2. ' ' → logprob: -2.5856785774230957
    3. '[' → logprob: -2.8356785774230957
    4. '<|end|>' → logprob: -3.9606785774230957
    5. '    
' → logprob: -5.210678577423096
    6. ')' → logprob: -5.335678577423096
    7. '\n' → logprob: -5.335678577423096
    8. ' 
' → logprob: -5.585678577423096
    9. '    ' → logprob: -5.710678577423096
    10. '
' → logprob: -5.710678577423096

Token 31: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1862291693687439
    2. 's' → logprob: -2.9362292289733887
    3. 'n' → logprob: -4.061229228973389
    4. ' a' → logprob: -4.311229228973389
    5. '[' → logprob: -4.561229228973389
    6. 'sum' → logprob: -4.561229228973389
    7. 'r' → logprob: -4.686229228973389
    8. 'c' → logprob: -4.811229228973389
    9. ' ' → logprob: -5.061229228973389
    10. '   ' → logprob: -5.186229228973389

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0157798919826746
    2. '=' → logprob: -4.265779972076416
    3. '.' → logprob: -6.765779972076416
    4. '.append' → logprob: -8.515779495239258
    5. '[' → logprob: -9.515779495239258
    6. ' .' → logprob: -10.265779495239258
    7. '[:]' → logprob: -10.265779495239258
    8. '.extend' → logprob: -10.640779495239258
    9. ')' → logprob: -10.640779495239258
    10. ' +=' → logprob: -11.640779495239258

Token 33: ' list' (ID: 1562)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -1.3547934293746948
    2. ' list' → logprob: -1.6047934293746948
    3. 'sorted' → logprob: -1.7297934293746948
    4. ' []' → logprob: -2.3547935485839844
    5. ' [' → logprob: -2.6047935485839844
    6. 'list' → logprob: -2.7297935485839844
    7. ' a' → logprob: -3.2297935485839844
    8. '[]' → logprob: -3.3547935485839844
    9. 'a' → logprob: -3.7297935485839844
    10. '[' → logprob: -4.354793548583984

Token 34: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.4741831123828888
    2. '(' → logprob: -0.9741830825805664
    3. '(int' → logprob: -9.349183082580566
    4. '(s' → logprob: -12.224183082580566
    5. '(
' → logprob: -12.349183082580566
    6. ' (' → logprob: -12.474183082580566
    7. '(

' → logprob: -13.724183082580566
    8. '(m' → logprob: -14.474183082580566
    9. '(range' → logprob: -14.474183082580566
    10. '(eval' → logprob: -14.474183082580566

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002817358821630478
    2. '(' → logprob: -5.877817153930664
    3. '<int' → logprob: -12.377817153930664
    4. '=int' → logprob: -13.002817153930664
    5. '[int' → logprob: -13.252817153930664
    6. ' (' → logprob: -13.377817153930664
    7. 'int' → logprob: -13.627817153930664
    8. ')' → logprob: -15.127817153930664
    9. ',int' → logprob: -15.127817153930664
    10. ' int' → logprob: -15.252817153930664

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8860231637954712
    2. '(int' → logprob: -1.0110231637954712
    3. '(' → logprob: -2.1360230445861816
    4. ',int' → logprob: -2.2610230445861816
    5. ' ,' → logprob: -6.636023044586182
    6. ')' → logprob: -10.01102352142334
    7. 'int' → logprob: -10.01102352142334
    8. ',input' → logprob: -10.63602352142334
    9. '=int' → logprob: -11.26102352142334
    10. '<int' → logprob: -11.51102352142334

Token 37: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38887453079223633
    2. ' int' → logprob: -1.1388745307922363
    3. ' input' → logprob: -6.638874530792236
    4. 'input' → logprob: -7.513874530792236
    5. '(int' → logprob: -9.013874053955078
    6. '[int' → logprob: -11.388874053955078
    7. 'str' → logprob: -12.763874053955078
    8. '<int' → logprob: -12.763874053955078
    9. ' str' → logprob: -12.888874053955078
    10. ' ' → logprob: -13.138874053955078

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6047699318733066e-05
    2. '()' → logprob: -11.250016212463379
    3. ' ().' → logprob: -13.500016212463379
    4. '(' → logprob: -13.625016212463379
    5. '(int' → logprob: -15.375016212463379
    6. '(.' → logprob: -15.875016212463379
    7. '()(' → logprob: -17.625015258789062
    8. '()-' → logprob: -18.000015258789062
    9. '(),' → logprob: -18.375015258789062
    10. '()[' → logprob: -18.625015258789062

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. '(split' → logprob: -14.625000953674316
    3. 'spl' → logprob: -15.000000953674316
    4. ' split' → logprob: -15.625000953674316
    5. 'plit' → logprob: -15.875000953674316
    6. ')' → logprob: -16.250001907348633
    7. 'int' → logprob: -16.875001907348633
    8. 'strip' → logprob: -17.625001907348633
    9. '.split' → logprob: -17.750001907348633
    10. '```' → logprob: -17.875001907348633

Token 40: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11612189561128616
    2. '())' → logprob: -2.366122007369995
    3. '()' → logprob: -4.241121768951416
    4. '))' → logprob: -6.991121768951416
    5. ')' → logprob: -8.241122245788574
    6. '()))
' → logprob: -9.366122245788574
    7. '(' → logprob: -9.491122245788574
    8. '()));' → logprob: -10.491122245788574
    9. '())).' → logprob: -11.991122245788574
    10. '()))

' → logprob: -12.741122245788574

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07867681980133057
    2. '
' → logprob: -3.578676700592041
    3. '    
' → logprob: -4.203676700592041
    4. 'c' → logprob: -4.328676700592041
    5. 'n' → logprob: -5.453676700592041
    6. '\n' → logprob: -6.328676700592041
    7. 'result' → logprob: -6.453676700592041
    8. '[' → logprob: -6.453676700592041
    9. 's' → logprob: -6.953676700592041
    10. '```' → logprob: -7.078676700592041

Token 42: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4426555633544922
    2. 'c' → logprob: -1.9426555633544922
    3. '   ' → logprob: -3.067655563354492
    4. 'diff' → logprob: -3.317655563354492
    5. 's' → logprob: -3.817655563354492
    6. 'ans' → logprob: -3.942655563354492
    7. 'count' → logprob: -4.067655563354492
    8. 'dp' → logprob: -4.567655563354492
    9. 'result' → logprob: -4.692655563354492
    10. 'sum' → logprob: -4.942655563354492

Token 43: ' ladder' (ID: 63451)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.862752079963684
    2. ' c' → logprob: -2.1127519607543945
    3. 's' → logprob: -2.2377519607543945
    4. 'd' → logprob: -2.6127519607543945
    5. 'c' → logprob: -2.7377519607543945
    6. ' result' → logprob: -2.8627519607543945
    7. ' d' → logprob: -2.9877519607543945
    8. '   ' → logprob: -3.2377519607543945
    9. ' diff' → logprob: -3.3627519607543945
    10. ' sum' → logprob: -3.4877519607543945

Token 44: ' top' (ID: 2344)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.95745450258255
    2. '_' → logprob: -1.4574544429779053
    3. '_length' → logprob: -2.0824544429779053
    4. '=' → logprob: -2.8324544429779053
    5. '_height' → logprob: -2.8324544429779053
    6. '_count' → logprob: -3.3324544429779053
    7. '_lengths' → logprob: -3.8324544429779053
    8. 's' → logprob: -4.082454681396484
    9. '_he' → logprob: -4.582454681396484
    10. '_positions' → logprob: -4.832454681396484

Token 45: ' floors' (ID: 30181)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26337799429893494
    2. ':' → logprob: -2.6383779048919678
    3. 'count' → logprob: -3.7633779048919678
    4. '```' → logprob: -3.8883779048919678
    5. 'height' → logprob: -4.013378143310547
    6. ' =' → logprob: -4.013378143310547
    7. 's' → logprob: -4.388378143310547
    8. '=' → logprob: -5.013378143310547
    9. ' heights' → logprob: -5.013378143310547
    10. 'diff' → logprob: -5.263378143310547

Token 46: ' pre' (ID: 876)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021486720070242882
    2. '<|end|>' → logprob: -4.521486759185791
    3. ':' → logprob: -5.521486759185791
    4. 'n' → logprob: -6.396486759185791
    5. '    
' → logprob: -6.896486759185791
    6. '    ' → logprob: -7.271486759185791
    7. '
' → logprob: -7.396486759185791
    8. '```' → logprob: -7.896486759185791
    9. ' ' → logprob: -8.146486282348633
    10. '  ' → logprob: -8.146486282348633

Token 47: '-processing' (ID: 143576)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4463767111301422
    2. 's' → logprob: -2.3213768005371094
    3. '_sum' → logprob: -2.8213768005371094
    4. 'd' → logprob: -2.9463768005371094
    5. 'v' → logprob: -2.9463768005371094
    6. 'fix' → logprob: -3.0713768005371094
    7. 'c' → logprob: -4.571376800537109
    8. 'dict' → logprob: -4.946376800537109
    9. 'compute' → logprob: -5.196376800537109
    10. 'computed' → logprob: -5.196376800537109

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17674532532691956
    2. ':' → logprob: -2.8017454147338867
    3. '<|end|>' → logprob: -3.4267454147338867
    4. ')' → logprob: -4.301745414733887
    5. '    
' → logprob: -4.676745414733887
    6. '[' → logprob: -4.926745414733887
    7. '
' → logprob: -5.051745414733887
    8. '```' → logprob: -5.176745414733887
    9. 'n' → logprob: -5.301745414733887
    10. '    ' → logprob: -6.301745414733887

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1529412716627121
    2. 'for' → logprob: -3.4029412269592285
    3. ' for' → logprob: -3.6529412269592285
    4. ':' → logprob: -3.9029412269592285
    5. '[' → logprob: -4.5279412269592285
    6. 'n' → logprob: -4.9029412269592285
    7. '<|end|>' → logprob: -5.1529412269592285
    8. '```' → logprob: -5.1529412269592285
    9. '#' → logprob: -5.2779412269592285
    10. ')' → logprob: -5.4029412269592285

Token 50: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8508599400520325
    2. ' for' → logprob: -1.7258598804473877
    3. 'dp' → logprob: -1.8508598804473877
    4. 'for' → logprob: -2.1008598804473877
    5. ' dp' → logprob: -3.6008598804473877
    6. 's' → logprob: -4.725860118865967
    7. 'l' → logprob: -4.975860118865967
    8. 'd' → logprob: -5.100860118865967
    9. 'f' → logprob: -5.100860118865967
    10. 'c' → logprob: -5.225860118865967

Token 51: ' For' (ID: 2214)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9332821369171143
    2. ' for' → logprob: -1.4332821369171143
    3. ' max' → logprob: -2.5582821369171143
    4. 'dp' → logprob: -2.6832821369171143
    5. ' c' → logprob: -3.4332821369171143
    6. ' prefix' → logprob: -3.5582821369171143
    7. ' top' → logprob: -4.183281898498535
    8. ' ladder' → logprob: -4.183281898498535
    9. ' l' → logprob: -4.308281898498535
    10. 'for' → logprob: -4.433281898498535

Token 52: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0021710782311856747
    2. ' _' → logprob: -6.627171039581299
    3. 'i' → logprob: -7.627171039581299
    4. ' ' → logprob: -8.877171516418457
    5. '_' → logprob: -9.502171516418457
    6. ' each' → logprob: -10.502171516418457
    7. 'bidden' → logprob: -11.127171516418457
    8. ' the' → logprob: -11.252171516418457
    9. ' every' → logprob: -11.752171516418457
    10. ' j' → logprob: -11.939671516418457

Token 53: ' ladder' (ID: 63451)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18343651294708252
    2. 'i' → logprob: -1.9334365129470825
    3. ' floor' → logprob: -4.183436393737793
    4. 'floor' → logprob: -5.683436393737793
    5. ' ladder' → logprob: -6.058436393737793
    6. ' index' → logprob: -7.808436393737793
    7. 'index' → logprob: -8.933436393737793
    8. ' position' → logprob: -9.058436393737793
    9. 'l' → logprob: -9.308436393737793
    10. ' l' → logprob: -9.433436393737793

Token 54: ' cell' (ID: 4206)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07710582762956619
    2. ' ,' → logprob: -2.827105760574341
    3. ' i' → logprob: -4.57710599899292
    4. ':' → logprob: -6.45210599899292
    5. ' in' → logprob: -7.57710599899292
    6. '   ' → logprob: -7.70210599899292
    7. 'i' → logprob: -8.077105522155762
    8. ' ' → logprob: -8.327105522155762
    9. ' at' → logprob: -8.327105522155762
    10. ' for' → logprob: -8.452105522155762

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0367228165268898
    2. ' ,' → logprob: -3.5367228984832764
    3. ':' → logprob: -5.536722660064697
    4. ' in' → logprob: -6.786722660064697
    5. ' i' → logprob: -7.286722660064697
    6. ' for' → logprob: -7.661722660064697
    7. ' (' → logprob: -9.411723136901855
    8. ' ' → logprob: -9.411723136901855
    9. 'i' → logprob: -9.536723136901855
    10. '   ' → logprob: -9.536723136901855

Token 56: ' find' (ID: 1646)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38783761858940125
    2. ' find' → logprob: -2.7628376483917236
    3. ' calculate' → logprob: -3.2628376483917236
    4. 'if' → logprob: -3.2628376483917236
    5. ' we' → logprob: -3.3878376483917236
    6. ' the' → logprob: -3.7628376483917236
    7. ' for' → logprob: -4.1378374099731445
    8. ' compute' → logprob: -4.1378374099731445
    9. ' store' → logprob: -4.3878374099731445
    10. ' ' → logprob: -4.7628374099731445

Token 57: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2582189440727234
    2. ' its' → logprob: -1.8832190036773682
    3. 'the' → logprob: -2.633219003677368
    4. ' next' → logprob: -6.508218765258789
    5. 'its' → logprob: -7.883218765258789
    6. ' all' → logprob: -8.258218765258789
    7. '   ' → logprob: -8.383218765258789
    8. 'nearest' → logprob: -8.633218765258789
    9. ' nearest' → logprob: -8.758218765258789
    10. 'next' → logprob: -9.133218765258789

Token 58: ' top' (ID: 2344)
  Prédit: ' nearest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nearest' → logprob: -1.21224045753479
    2. ' next' → logprob: -1.58724045753479
    3. 'nearest' → logprob: -1.71224045753479
    4. ' minimum' → logprob: -2.21224045753479
    5. 'minimum' → logprob: -2.71224045753479
    6. ' minimal' → logprob: -3.08724045753479
    7. 'next' → logprob: -3.96224045753479
    8. ' closest' → logprob: -4.462240219116211
    9. 'closest' → logprob: -4.712240219116211
    10. ' smallest' → logprob: -5.087240219116211

Token 59: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -1.0789822340011597
    2. ' floor' → logprob: -1.5789822340011597
    3. 'most' → logprob: -2.078982353210449
    4. 's' → logprob: -3.328982353210449
    5. ' of' → logprob: -3.328982353210449
    6. ')' → logprob: -3.453982353210449
    7. '    ' → logprob: -3.453982353210449
    8. '_floor' → logprob: -3.578982353210449
    9. '   ' → logprob: -3.953982353210449
    10. 'stairs' → logprob: -4.328982353210449

Token 60: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6544474363327026
    2. 's' → logprob: -1.6544474363327026
    3. '   ' → logprob: -2.029447555541992
    4. ')' → logprob: -3.654447555541992
    5. ' ' → logprob: -3.904447555541992
    6. ':' → logprob: -4.029447555541992
    7. ',' → logprob: -4.279447555541992
    8. ' for' → logprob: -4.404447555541992
    9. '.' → logprob: -4.904447555541992
    10. '    ' → logprob: -5.279447555541992

Token 61: ' ladder' (ID: 63451)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15351197123527527
    2. ' its' → logprob: -2.7785120010375977
    3. 'the' → logprob: -2.9035120010375977
    4. ' each' → logprob: -4.903512001037598
    5. ' a' → logprob: -5.153512001037598
    6. ' that' → logprob: -5.403512001037598
    7. 'a' → logprob: -6.528512001037598
    8. ' ladder' → logprob: -6.528512001037598
    9. ' all' → logprob: -6.653512001037598
    10. ' which' → logprob: -7.403512001037598

Token 62: ' it' (ID: 480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04467499256134033
    2. '   ' → logprob: -4.919674873352051
    3. ' s' → logprob: -4.919674873352051
    4. ':' → logprob: -5.169674873352051
    5. '_' → logprob: -5.419674873352051
    6. '[' → logprob: -5.544674873352051
    7. ')' → logprob: -6.044674873352051
    8. ' cells' → logprob: -6.294674873352051
    9. ',' → logprob: -6.544674873352051
    10. '(s' → logprob: -6.669674873352051

Token 63: ' belongs' (ID: 33063)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5294052958488464
    2. ' connects' → logprob: -1.4044053554534912
    3. ''s' → logprob: -2.779405355453491
    4. ' leads' → logprob: -2.779405355453491
    5. ' can' → logprob: -4.529405117034912
    6. ' is' → logprob: -5.029405117034912
    7. ' belongs' → logprob: -5.029405117034912
    8. ' ' → logprob: -5.154405117034912
    9. 'self' → logprob: -5.779405117034912
    10. ' s' → logprob: -6.279405117034912

Token 64: ' to' (ID: 316)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.43407773971557617
    2. ' to' → logprob: -1.1840777397155762
    3. 'to' → logprob: -3.559077739715576
    4. '   ' → logprob: -4.184077739715576
    5. 'To' → logprob: -7.059077739715576
    6. 's' → logprob: -7.809077739715576
    7. ')' → logprob: -8.059078216552734
    8. ',' → logprob: -8.559078216552734
    9. ':' → logprob: -8.934078216552734
    10. '    ' → logprob: -9.059078216552734

Token 65: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44373995065689087
    2. '   ' → logprob: -2.318739891052246
    3. 'n' → logprob: -2.693739891052246
    4. '
' → logprob: -2.943739891052246
    5. '```' → logprob: -3.068739891052246
    6. '#' → logprob: -4.318739891052246
    7. ' for' → logprob: -4.568739891052246
    8. ',' → logprob: -4.693739891052246
    9. '\n' → logprob: -4.693739891052246
    10. '\' → logprob: -4.943739891052246

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02433169260621071
    2. '
' → logprob: -5.149331569671631
    3. 't' → logprob: -5.524331569671631
    4. '    
' → logprob: -5.649331569671631
    5. ' for' → logprob: -6.399331569671631
    6. 'n' → logprob: -6.524331569671631
    7. 'for' → logprob: -6.774331569671631
    8. 'f' → logprob: -6.774331569671631
    9. 'l' → logprob: -6.899331569671631
    10. ':' → logprob: -7.399331569671631

Token 67: ' def' (ID: 1056)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.8742271065711975
    2. '
' → logprob: -2.2492270469665527
    3. '   ' → logprob: -2.2492270469665527
    4. '```' → logprob: -2.4992270469665527
    5. ' top' → logprob: -2.7492270469665527
    6. 'floor' → logprob: -2.7492270469665527
    7. 't' → logprob: -3.3742270469665527
    8. 'l' → logprob: -3.8742270469665527
    9. '``' → logprob: -3.9992270469665527
    10. 'f' → logprob: -3.9992270469665527

Token 68: ' ladder' (ID: 63451)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.1563655585050583
    2. ' get' → logprob: -2.0313656330108643
    3. ' dfs' → logprob: -4.906365394592285
    4. ' ladder' → logprob: -5.781365394592285
    5. ' top' → logprob: -6.281365394592285
    6. ' process' → logprob: -7.781365394592285
    7. ' assign' → logprob: -8.656365394592285
    8. ' map' → logprob: -9.406365394592285
    9. ' identify' → logprob: -9.406365394592285
    10. ' ' → logprob: -9.406365394592285

Token 69: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.018811026588082314
    2. '_' → logprob: -4.643811225891113
    3. '_floor' → logprob: -5.643811225891113
    4. '_t' → logprob: -5.893811225891113
    5. '_cells' → logprob: -7.893811225891113
    6. '_map' → logprob: -7.893811225891113
    7. 's' → logprob: -8.393811225891113
    8. '_pos' → logprob: -8.393811225891113
    9. 'Top' → logprob: -8.518811225891113
    10. 'top' → logprob: -8.768811225891113

Token 70: '(build' (ID: 71897)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6486825942993164
    2. '_floor' → logprob: -0.8986825942993164
    3. '(f' → logprob: -3.3986825942993164
    4. '_' → logprob: -4.273682594299316
    5. '_f' → logprob: -5.023682594299316
    6. '():' → logprob: -5.773682594299316
    7. '):' → logprob: -6.273682594299316
    8. '(n' → logprob: -6.273682594299316
    9. '(cell' → logprob: -6.523682594299316
    10. '(i' → logprob: -6.898682594299316

Token 71: '):
' (ID: 1883)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0060637714341282845
    2. ')' → logprob: -5.381063938140869
    3. '   ' → logprob: -7.381063938140869
    4. 'ings' → logprob: -8.631063461303711
    5. '_floor' → logprob: -8.631063461303711
    6. '[' → logprob: -9.006063461303711
    7. ']' → logprob: -9.631063461303711
    8. '```' → logprob: -10.131063461303711
    9. '[i' → logprob: -10.506063461303711
    10. '_id' → logprob: -11.131063461303711

Token 72: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32439133524894714
    2. ':' → logprob: -2.5743913650512695
    3. '   ' → logprob: -2.5743913650512695
    4. '):' → logprob: -2.8243913650512695
    5. '(build' → logprob: -4.1993913650512695
    6. '(' → logprob: -4.5743913650512695
    7. '(f' → logprob: -4.6993913650512695
    8. '[' → logprob: -4.9493913650512695
    9. '    ' → logprob: -5.0743913650512695
    10. '       ' → logprob: -5.3243913650512695

Token 73: ' top' (ID: 2344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5237436294555664
    2. '       ' → logprob: -2.0237436294555664
    3. ':' → logprob: -2.8987436294555664
    4. ')' → logprob: -3.0237436294555664
    5. '[' → logprob: -3.3987436294555664
    6. '
' → logprob: -3.3987436294555664
    7. '    ' → logprob: -3.7737436294555664
    8. ' ' → logprob: -4.023743629455566
    9. 'n' → logprob: -4.898743629455566
    10. '):' → logprob: -5.148743629455566

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6456918716430664
    2. 's' → logprob: -1.1456918716430664
    3. '=' → logprob: -1.8956918716430664
    4. '   ' → logprob: -5.395691871643066
    5. '_floor' → logprob: -6.270691871643066
    6. '_f' → logprob: -8.270691871643066
    7. ',' → logprob: -9.020691871643066
    8. '[' → logprob: -9.145691871643066
    9. '=[]' → logprob: -9.520691871643066
    10. '_idx' → logprob: -9.770691871643066

Token 75: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.41471439599990845
    2. '{}' → logprob: -2.1647143363952637
    3. '[' → logprob: -2.4147143363952637
    4. ' {}' → logprob: -3.0397143363952637
    5. ' [-' → logprob: -3.4147143363952637
    6. '[-' → logprob: -3.7897143363952637
    7. '[]' → logprob: -4.539714336395264
    8. ' []' → logprob: -4.539714336395264
    9. ' build' → logprob: -5.289714336395264
    10. 'build' → logprob: -5.789714336395264

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.769976019859314
    2. '-' → logprob: -1.019976019859314
    3. 'i' → logprob: -1.769976019859314
    4. ' -' → logprob: -6.1449761390686035
    5. ' i' → logprob: -6.5199761390686035
    6. 'None' → logprob: -6.8949761390686035
    7. '   ' → logprob: -7.2699761390686035
    8. ' ' → logprob: -8.519975662231445
    9. 'x' → logprob: -8.519975662231445
    10. ']' → logprob: -9.394975662231445

Token 77: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013064699247479439
    2. ']*' → logprob: -4.388064861297607
    3. ' for' → logprob: -8.01306438446045
    4. ']*(' → logprob: -8.88806438446045
    5. 'for' → logprob: -10.01306438446045
    6. '   ' → logprob: -10.51306438446045
    7. ' ]' → logprob: -11.88806438446045
    8. ')' → logprob: -12.51306438446045
    9. ')]' → logprob: -14.01306438446045
    10. '	for' → logprob: -14.63806438446045

Token 78: 'n' (ID: 77)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07975421845912933
    2. '(len' → logprob: -2.704754114151001
    3. '(' → logprob: -4.70475435256958
    4. '100' → logprob: -8.079753875732422
    5. 'n' → logprob: -9.204753875732422
    6. ' len' → logprob: -9.704753875732422
    7. '101' → logprob: -9.829753875732422
    8. '(n' → logprob: -10.079753875732422
    9. '50' → logprob: -10.704753875732422
    10. '10' → logprob: -10.829753875732422

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0012004701420664787
    2. '
' → logprob: -6.8762006759643555
    3. '<|end|>' → logprob: -10.251200675964355
    4. '' → logprob: -10.376200675964355
    5. '    
' → logprob: -10.876200675964355
    6. '\n' → logprob: -11.001200675964355
    7. '

' → logprob: -11.251200675964355
    8. ' 
' → logprob: -11.501200675964355
    9. '   ' → logprob: -11.501200675964355
    10. ')
' → logprob: -11.626200675964355

Token 80: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008756500668823719
    2. '<|end|>' → logprob: -5.258756637573242
    3. '    
' → logprob: -6.758756637573242
    4. '   ' → logprob: -7.258756637573242
    5. ' 
' → logprob: -7.508756637573242
    6. '
' → logprob: -7.758756637573242
    7. '\n' → logprob: -8.883756637573242
    8. '<|end|>' → logprob: -9.383756637573242
    9. '' → logprob: -9.508756637573242
    10. '  
' → logprob: -9.633756637573242

Token 81: ' i' (ID: 575)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5926241278648376
    2. 'for' → logprob: -1.3426241874694824
    3. ' stack' → logprob: -1.9676241874694824
    4. ' for' → logprob: -3.8426241874694824
    5. '   ' → logprob: -4.092624187469482
    6. 'current' → logprob: -5.217624187469482
    7. 'floor' → logprob: -7.092624187469482
    8. ' current' → logprob: -7.467624187469482
    9. 'i' (adapté à ' i') → logprob: -8.467623710632324
    10. 'build' → logprob: -8.592623710632324

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25199729204177856
    2. '=' → logprob: -1.5019972324371338
    3. ' ' → logprob: -9.876996994018555
    4. '   ' → logprob: -11.876996994018555
    5. '  ' → logprob: -12.626996994018555
    6. 'n' → logprob: -13.001996994018555
    7. ',' → logprob: -13.251996994018555
    8. 's' → logprob: -14.626996994018555
    9. 'f' → logprob: -14.876996994018555
    10. ')' → logprob: -15.001996994018555

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22747735679149628
    2. ' ' → logprob: -1.6024773120880127
    3. '1' → logprob: -6.227477550506592
    4. ' n' → logprob: -9.727477073669434
    5. 'n' → logprob: -10.602477073669434
    6. '  ' → logprob: -13.977477073669434
    7. '-' → logprob: -14.539977073669434
    8. '2' → logprob: -14.789977073669434
    9. '   ' → logprob: -15.039977073669434
    10. ' -' → logprob: -15.227477073669434

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011304517975077033
    2. '1' → logprob: -7.1261305809021
    3. ' ' → logprob: -8.626130104064941
    4. 'n' → logprob: -8.876130104064941
    5. '-' → logprob: -12.376130104064941
    6. '(' → logprob: -14.251130104064941
    7. '2' → logprob: -14.751130104064941
    8. ' n' → logprob: -15.063630104064941
    9. '   ' → logprob: -15.251130104064941
    10. '  ' → logprob: -15.563630104064941

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0006377388490363955
    2. '<|end|>' → logprob: -7.750637531280518
    3. '
' → logprob: -9.500638008117676
    4. '    
' → logprob: -10.625638008117676
    5. '<|end|>' → logprob: -10.625638008117676
    6. ' 
' → logprob: -11.000638008117676
    7. 'while' → logprob: -11.125638008117676
    8. '+' → logprob: -11.625638008117676
    9. '	
' → logprob: -11.750638008117676
    10. '  
' → logprob: -11.875638008117676

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031484827399253845
    2. '<|end|>' → logprob: -3.531484842300415
    3. '<|end|>' → logprob: -7.406484603881836
    4. '	while' → logprob: -8.531484603881836
    5. '
' → logprob: -8.656484603881836
    6. ')' → logprob: -8.781484603881836
    7. ' while' → logprob: -8.906484603881836
    8. 'while' → logprob: -9.281484603881836
    9. ' 
' → logprob: -9.406484603881836
    10. '  
' → logprob: -10.031484603881836

Token 87: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.046423062682151794
    2. ' while' → logprob: -3.1714229583740234
    3. '   ' → logprob: -6.046422958374023
    4. '1' → logprob: -7.796422958374023
    5. '	while' → logprob: -7.921422958374023
    6. ' ' → logprob: -9.671422958374023
    7. '0' → logprob: -9.796422958374023
    8. '<|end|>' → logprob: -9.796422958374023
    9. '
' → logprob: -10.421422958374023
    10. 'While' → logprob: -10.796422958374023

Token 88: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25196772813796997
    2. 'i' → logprob: -1.5019676685333252
    3. '   ' → logprob: -11.126967430114746
    4. '	i' → logprob: -11.626967430114746
    5. ' ' → logprob: -12.376967430114746
    6. '(i' → logprob: -12.751967430114746
    7. ' True' → logprob: -13.126967430114746
    8. 'n' → logprob: -13.376967430114746
    9. 'True' → logprob: -14.001967430114746
    10. ' n' → logprob: -14.126967430114746

Token 89: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006851296406239271
    2. '+' → logprob: -6.2568511962890625
    3. ' ' → logprob: -6.2568511962890625
    4. '<n' → logprob: -6.5068511962890625
    5. '<' → logprob: -6.6318511962890625
    6. ' +' → logprob: -9.756851196289062
    7. '<|end|>' → logprob: -10.006851196289062
    8. '<len' → logprob: -10.631851196289062
    9. '=' → logprob: -11.631851196289062
    10. ' <=' → logprob: -12.256851196289062

Token 90: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08895702660083771
    2. ' n' → logprob: -2.4639570713043213
    3. '	n' → logprob: -11.838956832885742
    4. '   ' → logprob: -11.963956832885742
    5. ' ' → logprob: -13.213956832885742
    6. 'len' → logprob: -13.963956832885742
    7. ' len' → logprob: -15.838956832885742
    8. ')n' → logprob: -15.963956832885742
    9. '<n' → logprob: -15.963956832885742
    10. '(n' → logprob: -16.213956832885742

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1911146640777588
    2. ' and' → logprob: -2.191114664077759
    3. ':
' → logprob: -2.816114664077759
    4. 'and' → logprob: -6.31611442565918
    5. '-' → logprob: -8.94111442565918
    6. ' :' → logprob: -9.06611442565918
    7. ' ' → logprob: -9.19111442565918
    8. '):
' → logprob: -10.06611442565918
    9. '   ' → logprob: -10.44111442565918
    10. ' :
' → logprob: -10.44111442565918

Token 92: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30471715331077576
    2. ':' → logprob: -2.1797170639038086
    3. ':
' → logprob: -3.1797170639038086
    4. '   ' → logprob: -3.4297170639038086
    5. ' ' → logprob: -3.8047170639038086
    6. '1' → logprob: -4.929717063903809
    7. '
' → logprob: -4.929717063903809
    8. '<|end|>' → logprob: -4.929717063903809
    9. ' if' → logprob: -5.304717063903809
    10. '    ' → logprob: -5.429717063903809

Token 93: ' if' (ID: 538)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6522787809371948
    2. ' if' → logprob: -2.0272789001464844
    3. 'if' (adapté à ' if') → logprob: -2.1522789001464844
    4. '   ' → logprob: -2.2772789001464844
    5. ' j' → logprob: -2.2772789001464844
    6. ' ' → logprob: -4.152278900146484
    7. '    ' → logprob: -5.777278900146484
    8. 'i' → logprob: -6.527278900146484
    9. '       ' → logprob: -6.777278900146484
    10. '1' → logprob: -7.277278900146484

Token 94: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.41326794028282166
    2. ' build' → logprob: -1.163267970085144
    3. 'a' → logprob: -4.663268089294434
    4. 'b' → logprob: -4.788268089294434
    5. ' a' → logprob: -5.538268089294434
    6. ' b' → logprob: -6.038268089294434
    7. ' not' → logprob: -7.288268089294434
    8. ' i' → logprob: -8.038268089294434
    9. '   ' → logprob: -8.288268089294434
    10. 'i' → logprob: -8.288268089294434

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.1557283111615106e-05
    2. '[' → logprob: -10.750041961669922
    3. '][' → logprob: -11.875041961669922
    4. '```' → logprob: -13.250041961669922
    5. '==' → logprob: -13.375041961669922
    6. ']' → logprob: -13.625041961669922
    7. ' [' → logprob: -13.750041961669922
    8. 'i' → logprob: -14.000041961669922
    9. '[I' → logprob: -14.375041961669922
    10. '[
' → logprob: -14.375041961669922

Token 96: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09093036502599716
    2. ']==' → logprob: -2.590930461883545
    3. '==' → logprob: -5.840930461883545
    4. '[' → logprob: -5.965930461883545
    5. ']=='' → logprob: -6.340930461883545
    6. ' ==' → logprob: -6.465930461883545
    7. ' ]' → logprob: -6.840930461883545
    8. '][' → logprob: -7.340930461883545
    9. '-' → logprob: -8.590929985046387
    10. '[i' → logprob: -8.715929985046387

Token 97: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06731434166431427
    2. '==' → logprob: -2.942314386367798
    3. '[' → logprob: -4.942314147949219
    4. ' >' → logprob: -6.317314147949219
    5. ' !=' → logprob: -7.067314147949219
    6. '>' → logprob: -7.692314147949219
    7. ' ' → logprob: -7.817314147949219
    8. ' <' → logprob: -8.192314147949219
    9. '[i' → logprob: -8.317314147949219
    10. ':' → logprob: -8.317314147949219

Token 98: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25076720118522644
    2. '1' → logprob: -1.6257672309875488
    3. '0' → logprob: -4.125767230987549
    4. ''' → logprob: -5.250767230987549
    5. ' '' → logprob: -7.125767230987549
    6. ' '#'' → logprob: -7.375767230987549
    7. ''#' → logprob: -7.625767230987549
    8. '2' → logprob: -7.750767230987549
    9. '-' → logprob: -8.25076675415039
    10. ''*' → logprob: -8.87576675415039

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14553439617156982
    2. '0' → logprob: -2.7705345153808594
    3. ''' → logprob: -3.0205345153808594
    4. '2' → logprob: -5.020534515380859
    5. ''#' → logprob: -5.395534515380859
    6. ' ' → logprob: -5.895534515380859
    7. ''*' → logprob: -6.520534515380859
    8. ''b' → logprob: -6.645534515380859
    9. ''l' → logprob: -6.895534515380859
    10. ''a' → logprob: -7.020534515380859

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6969844102859497
    2. ':
' → logprob: -0.6969844102859497
    3. ' and' → logprob: -5.82198429107666
    4. '):
' → logprob: -7.44698429107666
    5. ')' → logprob: -9.57198429107666
    6. '):' → logprob: -9.57198429107666
    7. '       ' → logprob: -10.44698429107666
    8. '           ' → logprob: -10.57198429107666
    9. 'and' → logprob: -10.57198429107666
    10. ':

' → logprob: -10.82198429107666

Token 101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3187144994735718
    2. '       ' → logprob: -2.5687146186828613
    3. ':' → logprob: -2.8187146186828613
    4. '           ' → logprob: -2.9437146186828613
    5. ':
' → logprob: -3.0687146186828613
    6. '
' → logprob: -4.193714618682861
    7. '):
' → logprob: -5.193714618682861
    8. ' and' → logprob: -5.693714618682861
    9. ',' → logprob: -6.443714618682861
    10. ')' → logprob: -6.443714618682861

Token 102: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.8127834796905518
    2. ' top' → logprob: -1.4377834796905518
    3. ' start' → logprob: -2.0627834796905518
    4. 'j' (adapté à ' j') → logprob: -2.0627834796905518
    5. 'start' → logprob: -3.5627834796905518
    6. 'top' → logprob: -3.5627834796905518
    7. '               ' → logprob: -5.812783241271973
    8. '   ' → logprob: -6.437783241271973
    9. ' ' → logprob: -7.187783241271973
    10. ' current' → logprob: -7.687783241271973

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003629646496847272
    2. '=i' → logprob: -6.253629684448242
    3. '=' → logprob: -6.378629684448242
    4. ' ' → logprob: -13.878629684448242
    5. '=j' → logprob: -14.753629684448242
    6. ',' → logprob: -15.003629684448242
    7. ')' → logprob: -16.003629684448242
    8. '=n' → logprob: -16.378629684448242
    9. '=int' → logprob: -16.628629684448242
    10. '<|end|>' → logprob: -16.628629684448242

Token 104: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029752805829048157
    2. ' i' → logprob: -3.529752731323242
    3. '	i' → logprob: -13.779752731323242
    4. '   ' → logprob: -13.904752731323242
    5. ' ' → logprob: -15.404752731323242
    6. ')i' → logprob: -17.404752731323242
    7. '    ' → logprob: -18.029752731323242
    8. '<|end|>' → logprob: -18.279752731323242
    9. ',i' → logprob: -18.404752731323242
    10. '  ' → logprob: -18.529752731323242

Token 105: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38766172528266907
    2. ' +' → logprob: -1.1376616954803467
    3. '
' → logprob: -7.637661933898926
    4. '<|end|>' → logprob: -8.387661933898926
    5. '<|end|>' → logprob: -10.512661933898926
    6. '               ' → logprob: -10.887661933898926
    7. 'while' → logprob: -11.512661933898926
    8. '                   ' → logprob: -12.262661933898926
    9. '+
' → logprob: -12.512661933898926
    10. '+i' → logprob: -12.762661933898926

Token 106: '               ' (ID: 506)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8446270227432251
    2. '               ' → logprob: -1.219627022743225
    3. '
' → logprob: -1.344627022743225
    4. ' +' → logprob: -4.8446269035339355
    5. 'while' → logprob: -5.9696269035339355
    6. '<|end|>' → logprob: -6.0946269035339355
    7. ' while' → logprob: -7.7196269035339355
    8. '<|end|>' → logprob: -8.219627380371094
    9. '                
' → logprob: -8.344627380371094
    10. '
' → logprob: -9.344627380371094

Token 107: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0236105564981699
    2. '               ' → logprob: -4.148610591888428
    3. ' while' → logprob: -4.898610591888428
    4. '
' → logprob: -10.02361011505127
    5. 'i' → logprob: -11.39861011505127
    6. '	while' → logprob: -11.52361011505127
    7. '           ' → logprob: -11.64861011505127
    8. ' ' → logprob: -12.89861011505127
    9. '1' → logprob: -12.89861011505127
    10. '0' → logprob: -13.14861011505127

Token 108: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08928415924310684
    2. ' j' → logprob: -2.4642841815948486
    3. 'build' → logprob: -8.96428394317627
    4. ' build' → logprob: -9.83928394317627
    5. '   ' → logprob: -9.96428394317627
    6. 'i' → logprob: -10.08928394317627
    7. ' ' → logprob: -10.33928394317627
    8. '	j' → logprob: -11.33928394317627
    9. '```' → logprob: -12.21428394317627
    10. '           ' → logprob: -12.58928394317627

Token 109: '+' (ID: 10)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5473771691322327
    2. '+' → logprob: -1.672377109527588
    3. '<n' → logprob: -1.797377109527588
    4. ' +' → logprob: -2.797377109527588
    5. '<' → logprob: -5.047377109527588
    6. ' ' → logprob: -8.172377586364746
    7. '+n' → logprob: -8.797377586364746
    8. '<len' → logprob: -9.547377586364746
    9. 'n' → logprob: -10.547377586364746
    10. '   ' → logprob: -10.672377586364746

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028982185176573694
    2. ' ' → logprob: -8.250289916992188
    3. ' <' → logprob: -11.000289916992188
    4. '<n' → logprob: -12.125289916992188
    5. '<' → logprob: -12.375289916992188
    6. '   ' → logprob: -14.250289916992188
    7. 'n' → logprob: -14.500289916992188
    8. '+' → logprob: -15.500289916992188
    9. '<|end|>' → logprob: -15.625289916992188
    10. 'while' → logprob: -15.875289916992188

Token 111: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.71828293800354
    2. '<n' → logprob: -0.71828293800354
    3. '<' → logprob: -3.71828293800354
    4. '<len' → logprob: -8.218282699584961
    5. 'n' → logprob: -8.968282699584961
    6. '<|end|>' → logprob: -9.843282699584961
    7. ' ' → logprob: -11.093282699584961
    8. '<N' → logprob: -11.343282699584961
    9. '<num' → logprob: -11.343282699584961
    10. '[n' → logprob: -11.343282699584961

Token 112: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163863845169544
    2. ' n' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.764163970947266
    4. '	n' → logprob: -16.264163970947266
    5. '
' → logprob: -16.639163970947266
    6. ' ' → logprob: -17.139163970947266
    7. '<|end|>' → logprob: -17.514163970947266
    8. ')n' → logprob: -18.014163970947266
    9. '<|end|>' → logprob: -18.514163970947266
    10. '<n' → logprob: -18.764163970947266

Token 113: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020551582798361778
    2. 'and' → logprob: -3.8955516815185547
    3. '           ' → logprob: -12.270551681518555
    4. ' ' → logprob: -13.020551681518555
    5. '               ' → logprob: -13.395551681518555
    6. '                   ' → logprob: -15.520551681518555
    7. '       ' → logprob: -15.770551681518555
    8. '   ' → logprob: -15.895551681518555
    9. '          ' → logprob: -16.145551681518555
    10. '         ' → logprob: -16.395551681518555

Token 114: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.6326382756233215
    2. ' build' → logprob: -0.7576382756233215
    3. ' ' → logprob: -11.132637977600098
    4. '	build' → logprob: -11.632637977600098
    5. '   ' → logprob: -12.007637977600098
    6. '(build' → logprob: -12.382637977600098
    7. ' buildup' → logprob: -13.007637977600098
    8. 'b' → logprob: -13.882637977600098
    9. ' buil' → logprob: -14.382637977600098
    10. 'building' → logprob: -15.382637977600098

Token 115: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -13.000003814697266
    3. '[i' → logprob: -14.000003814697266
    4. '][' → logprob: -14.750003814697266
    5. ' [' → logprob: -15.125003814697266
    6. '[
' → logprob: -16.000003814697266
    7. '```' → logprob: -17.000003814697266
    8. 'j' → logprob: -17.625003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '

' → logprob: -17.875003814697266

Token 116: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0957004502415657
    2. '+' → logprob: -2.59570050239563
    3. ']==' → logprob: -4.345700263977051
    4. ' ]' → logprob: -6.345700263977051
    5. ' +' → logprob: -6.470700263977051
    6. '[j' → logprob: -8.84570026397705
    7. '+j' → logprob: -9.09570026397705
    8. '][' → logprob: -10.22070026397705
    9. '[' → logprob: -10.47070026397705
    10. '   ' → logprob: -10.72070026397705

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005780545179732144
    2. '+' → logprob: -7.750577926635742
    3. ' ' → logprob: -9.000577926635742
    4. ']' → logprob: -11.250577926635742
    5. '0' → logprob: -13.375577926635742
    6. ']==' → logprob: -13.438077926635742
    7. 'j' → logprob: -13.500577926635742
    8. '   ' → logprob: -14.000577926635742
    9. '```' → logprob: -14.188077926635742
    10. ')' → logprob: -14.188077926635742

Token 118: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07933080196380615
    2. ']==' → logprob: -2.5793309211730957
    3. '==' → logprob: -7.954330921173096
    4. ' ]' → logprob: -9.704330444335938
    5. ' ==' → logprob: -11.579330444335938
    6. '[' → logprob: -11.829330444335938
    7. '[j' → logprob: -11.954330444335938
    8. '[i' → logprob: -13.454330444335938
    9. '```' → logprob: -14.079330444335938
    10. '][' → logprob: -14.454330444335938

Token 119: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5236007571220398
    2. ' ==' → logprob: -0.8986007571220398
    3. ']==' → logprob: -7.8986005783081055
    4. '[' → logprob: -9.398600578308105
    5. ']' → logprob: -11.523600578308105
    6. ')==' → logprob: -12.398600578308105
    7. ' ' → logprob: -13.398600578308105
    8. '```' → logprob: -13.523600578308105
    9. '()==' → logprob: -13.773600578308105
    10. '==
' → logprob: -14.023600578308105

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004907185211777687
    2. ' ' → logprob: -7.625490665435791
    3. 'build' → logprob: -13.37549114227295
    4. '   ' → logprob: -14.62549114227295
    5. '0' → logprob: -14.75049114227295
    6. '  ' → logprob: -15.50049114227295
    7. ' build' → logprob: -16.937990188598633
    8. 'b' → logprob: -17.937990188598633
    9. '2' → logprob: -18.312990188598633
    10. '```' → logprob: -18.937990188598633

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.85366350505501e-05
    2. ' ' → logprob: -9.25009822845459
    3. 'build' → logprob: -13.50009822845459
    4. '0' → logprob: -14.25009822845459
    5. '   ' → logprob: -15.87509822845459
    6. '  ' → logprob: -16.375099182128906
    7. 'b' → logprob: -17.437599182128906
    8. ' build' → logprob: -17.687599182128906
    9. 'a' → logprob: -18.125099182128906
    10. '2' → logprob: -18.375099182128906

Token 122: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07746389508247375
    2. ' and' → logprob: -3.3274638652801514
    3. ':' → logprob: -3.4524638652801514
    4. 'and' → logprob: -5.3274641036987305
    5. ':j' → logprob: -7.0774641036987305
    6. '):
' → logprob: -7.8274641036987305
    7. '                   ' → logprob: -8.20246410369873
    8. '           ' → logprob: -8.57746410369873
    9. '               ' → logprob: -8.82746410369873
    10. '   ' → logprob: -9.57746410369873

Token 123: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01563449762761593
    2. ' and' → logprob: -4.765634536743164
    3. '               ' → logprob: -5.390634536743164
    4. '           ' → logprob: -7.140634536743164
    5. ':
' → logprob: -7.640634536743164
    6. 'and' → logprob: -8.015634536743164
    7. ':' → logprob: -8.390634536743164
    8. '                       ' → logprob: -8.765634536743164
    9. '   ' → logprob: -8.890634536743164
    10. '```' → logprob: -9.390634536743164

Token 124: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.07930932193994522
    2. ' j' → logprob: -2.5793092250823975
    3. '                   ' → logprob: -8.079309463500977
    4. '   ' → logprob: -9.954309463500977
    5. '	j' → logprob: -10.454309463500977
    6. '                       ' → logprob: -11.204309463500977
    7. '               ' → logprob: -11.454309463500977
    8. '       ' → logprob: -13.454309463500977
    9. '+j' → logprob: -13.579309463500977
    10. ' ' → logprob: -13.704309463500977

Token 125: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3017849624156952
    2. ' +=' → logprob: -1.5517849922180176
    3. '+' → logprob: -3.1767849922180176
    4. '=' → logprob: -5.051784992218018
    5. ' =' → logprob: -8.92678451538086
    6. ')' → logprob: -9.05178451538086
    7. '<|end|>' → logprob: -9.55178451538086
    8. ']+=' → logprob: -9.80178451538086
    9. ' +' → logprob: -9.92678451538086
    10. '   ' → logprob: -9.92678451538086

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -18.62523078918457
    4. '
' → logprob: -20.37523078918457
    5. '```' → logprob: -20.37523078918457
    6. '+' → logprob: -20.75023078918457
    7. '  ' → logprob: -21.37523078918457
    8. ' ' → logprob: -21.62523078918457
    9. '0' → logprob: -22.37523078918457
    10. '    ' → logprob: -22.56273078918457

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.875
    4. '
' → logprob: -20.625
    5. '   ' → logprob: -20.875
    6. '+' → logprob: -21.0625
    7. 'j' → logprob: -22.0625
    8. '2' → logprob: -22.125
    9. '  ' → logprob: -22.25
    10. '１' → logprob: -22.3125

Token 128: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3156414330005646
    2. '               ' → logprob: -1.3156414031982422
    3. '           ' → logprob: -6.315641403198242
    4. '    
' → logprob: -9.190641403198242
    5. '<|end|>' → logprob: -9.190641403198242
    6. '                
' → logprob: -9.315641403198242
    7. '       ' → logprob: -9.815641403198242
    8. '                   ' → logprob: -10.440641403198242
    9. '            
' → logprob: -10.565641403198242
    10. '  
' → logprob: -10.565641403198242

Token 129: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2831669747829437
    2. '
' → logprob: -1.4081670045852661
    3. '           ' → logprob: -6.408166885375977
    4. '                
' → logprob: -9.158166885375977
    5. '       ' → logprob: -9.533166885375977
    6. '    
' → logprob: -10.533166885375977
    7. '
' → logprob: -10.908166885375977
    8. '                   ' → logprob: -10.908166885375977
    9. '#' → logprob: -10.908166885375977
    10. '            
' → logprob: -11.033166885375977

Token 130: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5672662258148193
    2. 'for' (adapté à ' for') → logprob: -1.1922662258148193
    3. '           ' → logprob: -2.5672662258148193
    4. '
' → logprob: -3.4422662258148193
    5. '   ' → logprob: -5.317266464233398
    6. '       ' → logprob: -5.317266464233398
    7. '               ' → logprob: -5.567266464233398
    8. 'while' → logprob: -6.442266464233398
    9. '```' → logprob: -6.692266464233398
    10. 'k' → logprob: -6.817266464233398

Token 131: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0030290482100099325
    2. ' k' → logprob: -6.003028869628906
    3. 'x' → logprob: -7.503028869628906
    4. ' x' → logprob: -13.378028869628906
    5. '_k' → logprob: -16.503028869628906
    6. 'idx' → logprob: -16.628028869628906
    7. '_' → logprob: -17.378028869628906
    8. 'index' → logprob: -17.878028869628906
    9. 'p' → logprob: -18.128028869628906
    10. 't' → logprob: -18.253028869628906

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028487443923950195
    2. 'in' → logprob: -5.8778486251831055
    3. ' ' → logprob: -11.002848625183105
    4. 'range' → logprob: -11.127848625183105
    5. '   ' → logprob: -12.002848625183105
    6. 'k' → logprob: -13.127848625183105
    7. ' range' → logprob: -13.877848625183105
    8. '    ' → logprob: -13.877848625183105
    9. '  ' → logprob: -14.002848625183105
    10. ')' → logprob: -14.752848625183105

Token 133: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001502598519437015
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -16.251502990722656
    4. '   ' → logprob: -16.376502990722656
    5. ' ' → logprob: -17.251502990722656
    6. '	range' → logprob: -17.751502990722656
    7. '  ' → logprob: -19.251502990722656
    8. 'rang' → logprob: -19.876502990722656
    9. 'r' → logprob: -20.251502990722656
    10. '```' → logprob: -20.501502990722656

Token 134: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.465036105713807e-06
    2. 'i' → logprob: -12.125007629394531
    3. '(' → logprob: -14.000007629394531
    4. '   ' → logprob: -14.125007629394531
    5. ' (' → logprob: -14.875007629394531
    6. ' i' → logprob: -16.50000762939453
    7. '	i' → logprob: -18.62500762939453
    8. '(
' → logprob: -19.12500762939453
    9. ',i' → logprob: -20.12500762939453
    10. '=i' → logprob: -21.00000762939453

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04754757881164551
    2. ',j' → logprob: -3.2975475788116455
    3. ' ,' → logprob: -4.672547340393066
    4. ',k' → logprob: -9.422547340393066
    5. '   ' → logprob: -11.172547340393066
    6. 'j' → logprob: -12.047547340393066
    7. '+' → logprob: -12.297547340393066
    8. ',
' → logprob: -13.172547340393066
    9. ' ' → logprob: -13.422547340393066
    10. ',n' → logprob: -14.672547340393066

Token 136: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002624086628202349
    2. ' j' → logprob: -8.250262260437012
    3. '(j' → logprob: -14.500262260437012
    4. '   ' → logprob: -14.625262260437012
    5. '	j' → logprob: -16.125263214111328
    6. ':j' → logprob: -17.875263214111328
    7. '[j' → logprob: -18.875263214111328
    8. ' ' → logprob: -19.250263214111328
    9. ',j' → logprob: -19.250263214111328
    10. '=j' → logprob: -19.625263214111328

Token 137: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005234121344983578
    2. ' +' → logprob: -5.255234241485596
    3. '+k' → logprob: -16.255233764648438
    4. '   ' → logprob: -16.880233764648438
    5. ')+' → logprob: -17.380233764648438
    6. '+
' → logprob: -17.505233764648438
    7. ' ' → logprob: -17.630233764648438
    8. '+i' → logprob: -18.255233764648438
    9. '+j' → logprob: -18.380233764648438
    10. '+)' → logprob: -19.130233764648438

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014609156642109156
    2. ' ' → logprob: -8.87514591217041
    3. '+' → logprob: -12.50014591217041
    4. '   ' → logprob: -13.75014591217041
    5. ')' → logprob: -15.37514591217041
    6. '2' → logprob: -15.50014591217041
    7. ' +' → logprob: -15.62514591217041
    8. '
' → logprob: -15.87514591217041
    9. '           ' → logprob: -16.312646865844727
    10. '```' → logprob: -16.312646865844727

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47596052289009094
    2. '):
' → logprob: -0.9759604930877686
    3. ' ):' → logprob: -7.100960731506348
    4. ' ):
' → logprob: -7.225960731506348
    5. ')' → logprob: -8.850960731506348
    6. '):
' → logprob: -9.600960731506348
    7. '):

' → logprob: -9.725960731506348
    8. ',' → logprob: -10.850960731506348
    9. '   ' → logprob: -11.100960731506348
    10. '+' → logprob: -12.100960731506348

Token 140: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0036411690525710583
    2. ' top' → logprob: -6.628641128540039
    3. '           ' → logprob: -6.753641128540039
    4. '               ' → logprob: -7.253641128540039
    5. 'top' → logprob: -9.253641128540039
    6. '[top' → logprob: -9.503641128540039
    7. '                       ' → logprob: -9.628641128540039
    8. '```' → logprob: -9.878641128540039
    9. '
' → logprob: -10.003641128540039
    10. '       ' → logprob: -10.628641128540039

Token 141: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -0.16084231436252594
    2. ' top' → logprob: -1.9108422994613647
    3. '
' → logprob: -8.285841941833496
    4. '               ' → logprob: -8.410841941833496
    5. '                   ' → logprob: -10.160841941833496
    6. '	top' → logprob: -10.160841941833496
    7. '[top' → logprob: -10.410841941833496
    8. '```' → logprob: -11.285841941833496
    9. '   ' → logprob: -11.535841941833496
    10. '                       ' → logprob: -12.160841941833496

Token 142: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.8550976164988242e-05
    2. '[j' → logprob: -11.750018119812012
    3. '[' → logprob: -12.125018119812012
    4. '[i' → logprob: -12.750018119812012
    5. 'k' → logprob: -14.375018119812012
    6. ']' → logprob: -14.500018119812012
    7. ' [' → logprob: -14.750018119812012
    8. '][' → logprob: -14.750018119812012
    9. '=k' → logprob: -16.375019073486328
    10. ')[' → logprob: -16.625019073486328

Token 143: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011922525009140372
    2. ']=' → logprob: -6.876192092895508
    3. ' ]' → logprob: -9.376192092895508
    4. '=' → logprob: -10.001192092895508
    5. ' =' → logprob: -10.501192092895508
    6. ')' → logprob: -13.626192092895508
    7. '=j' → logprob: -14.626192092895508
    8. '   ' → logprob: -16.626192092895508
    9. ' ' → logprob: -17.126192092895508
    10. '[j' → logprob: -17.501192092895508

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740825295448303
    2. ' =' → logprob: -0.9740825295448303
    3. ']' → logprob: -12.849082946777344
    4. ']=' → logprob: -13.474082946777344
    5. ')' → logprob: -14.349082946777344
    6. '=k' → logprob: -15.224082946777344
    7. ')=' → logprob: -15.849082946777344
    8. '=j' → logprob: -15.974082946777344
    9. '=i' → logprob: -16.599082946777344
    10. ',' → logprob: -16.724082946777344

Token 145: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007306549232453108
    2. ' j' → logprob: -5.0073065757751465
    3. 'i' → logprob: -7.5073065757751465
    4. 'k' → logprob: -10.757306098937988
    5. ' i' → logprob: -11.632306098937988
    6. '   ' → logprob: -11.632306098937988
    7. '	j' → logprob: -14.132306098937988
    8. ' ' → logprob: -14.257306098937988
    9. '(j' → logprob: -14.632306098937988
    10. '[j' → logprob: -15.257306098937988

Token 146: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6335287690162659
    2. '               ' → logprob: -0.7585287690162659
    3. '
' → logprob: -7.133528709411621
    4. '       ' → logprob: -9.633528709411621
    5. '                   ' → logprob: -11.758528709411621
    6. '            
' → logprob: -11.758528709411621
    7. '   ' → logprob: -12.008528709411621
    8. '    
' → logprob: -12.133528709411621
    9. '<|end|>' → logprob: -12.133528709411621
    10. '                
' → logprob: -12.383528709411621

Token 147: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024995561689138412
    2. '           ' → logprob: -6.002499580383301
    3. '       ' → logprob: -12.5024995803833
    4. '
' → logprob: -12.5024995803833
    5. '              ' → logprob: -12.8774995803833
    6. 'else' → logprob: -13.0024995803833
    7. '                   ' → logprob: -13.2524995803833
    8. '                
' → logprob: -13.3774995803833
    9. '			' → logprob: -13.8774995803833
    10. 'i' → logprob: -13.8774995803833

Token 148: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45792868733406067
    2. '               ' → logprob: -1.2079286575317383
    3. '       ' → logprob: -3.4579286575317383
    4. '
' → logprob: -3.8329286575317383
    5. ' i' → logprob: -4.707928657531738
    6. '   ' → logprob: -5.707928657531738
    7. 'i' (adapté à ' i') → logprob: -5.832928657531738
    8. '                
' → logprob: -10.832928657531738
    9. '    
' → logprob: -10.957928657531738
    10. ' 
' → logprob: -11.082928657531738

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012569227255880833
    2. ' =' → logprob: -4.512569427490234
    3. '+=' → logprob: -7.012569427490234
    4. ' +=' → logprob: -7.387569427490234
    5. ' ' → logprob: -14.262569427490234
    6. '=
' → logprob: -16.512569427490234
    7. '   ' → logprob: -16.512569427490234
    8. '+' → logprob: -16.762569427490234
    9. '.=' → logprob: -17.137569427490234
    10. ')' → logprob: -17.512569427490234

Token 150: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.31326186656951904
    2. ' j' → logprob: -1.313261866569519
    3. '	j' → logprob: -15.688261985778809
    4. '$j' → logprob: -18.063261032104492
    5. '=j' → logprob: -18.563261032104492
    6. '[j' → logprob: -18.563261032104492
    7. '(j' → logprob: -18.563261032104492
    8. ' ' → logprob: -19.063261032104492
    9. ':j' → logprob: -20.063261032104492
    10. '   ' → logprob: -20.563261032104492

Token 151: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602533757686615
    2. ' +' → logprob: -1.9102534055709839
    3. '   ' → logprob: -10.910253524780273
    4. '+
' → logprob: -12.785253524780273
    5. '       ' → logprob: -13.285253524780273
    6. '           ' → logprob: -13.785253524780273
    7. ' +
' → logprob: -13.910253524780273
    8. ' plus' → logprob: -14.035253524780273
    9. '               ' → logprob: -14.285253524780273
    10. '<|end|>' → logprob: -14.285253524780273

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -18.25000762939453
    4. '
' → logprob: -19.06250762939453
    5. '   ' → logprob: -19.06250762939453
    6. '۱' → logprob: -19.25000762939453
    7. '+' → logprob: -19.56250762939453
    8. '<|end|>' → logprob: -19.68750762939453
    9. '-' → logprob: -20.37500762939453
    10. '2' → logprob: -20.68750762939453

Token 153: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005378306843340397
    2. '       ' → logprob: -5.380378246307373
    3. 'else' → logprob: -7.630378246307373
    4. '   ' → logprob: -8.630378723144531
    5. ' else' → logprob: -9.505378723144531
    6. '<|end|>' → logprob: -12.005378723144531
    7. '```' → logprob: -13.005378723144531
    8. '	       ' → logprob: -13.005378723144531
    9. '
' → logprob: -13.505378723144531
    10. '	   ' → logprob: -13.755378723144531

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002664481056854129
    2. '       ' → logprob: -6.127664566040039
    3. 'else' → logprob: -7.752664566040039
    4. '   ' → logprob: -10.377664566040039
    5. ' else' → logprob: -11.502664566040039
    6. '```' → logprob: -12.627664566040039
    7. '               ' → logprob: -12.752664566040039
    8. '	       ' → logprob: -14.002664566040039
    9. 'import' → logprob: -15.252664566040039
    10. '		' → logprob: -15.377664566040039

Token 155: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7333847880363464
    2. 'else' (adapté à ' else') → logprob: -1.2333848476409912
    3. ' else' → logprob: -1.4833848476409912
    4. '   ' → logprob: -6.983384609222412
    5. '           ' → logprob: -7.483384609222412
    6. '	else' → logprob: -9.98338508605957
    7. '
' → logprob: -13.10838508605957
    8. '```' → logprob: -13.35838508605957
    9. '      ' → logprob: -13.98338508605957
    10. ' ' → logprob: -13.98338508605957

Token 156: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8306917548179626
    2. ':
' → logprob: -0.9556917548179626
    3. ':' → logprob: -2.3306918144226074
    4. '               ' → logprob: -2.9556918144226074
    5. '           ' → logprob: -3.8306918144226074
    6. '   ' → logprob: -5.455691814422607
    7. '	       ' → logprob: -6.455691814422607
    8. '
' → logprob: -7.205691814422607
    9. ' i' → logprob: -8.33069133758545
    10. '):
' → logprob: -8.45569133758545

Token 157: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051516685634851456
    2. ' i' → logprob: -3.6765167713165283
    3. 'i' → logprob: -4.176516532897949
    4. '   ' → logprob: -5.051516532897949
    5. '               ' → logprob: -6.051516532897949
    6. '           ' → logprob: -7.301516532897949
    7. '	i' → logprob: -10.67651653289795
    8. '	' → logprob: -11.05151653289795
    9. '	   ' → logprob: -11.05151653289795
    10. '	       ' → logprob: -11.17651653289795

Token 158: ' top' (ID: 2344)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06602470576763153
    2. 'top' (adapté à ' top') → logprob: -3.1910247802734375
    3. '   ' → logprob: -3.9410247802734375
    4. ' i' → logprob: -6.0660247802734375
    5. ' top' → logprob: -7.0660247802734375
    6. '               ' → logprob: -9.941024780273438
    7. '
' → logprob: -10.191024780273438
    8. '       ' → logprob: -10.191024780273438
    9. '           ' → logprob: -10.816024780273438
    10. '	i' → logprob: -12.191024780273438

Token 159: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.750005722045898
    3. 'i' → logprob: -13.500005722045898
    4. '   ' → logprob: -14.500005722045898
    5. ' [' → logprob: -14.500005722045898
    6. '=' → logprob: -15.125005722045898
    7. '[k' → logprob: -15.375005722045898
    8. '=i' → logprob: -16.7500057220459
    9. '[I' → logprob: -16.8750057220459
    10. ' =' → logprob: -16.8750057220459

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03421436995267868
    2. '=' → logprob: -4.159214496612549
    3. ' =' → logprob: -4.409214496612549
    4. ']=' → logprob: -5.159214496612549
    5. ' ]' → logprob: -9.53421401977539
    6. ')' → logprob: -10.65921401977539
    7. '   ' → logprob: -13.03421401977539
    8. '[' → logprob: -13.65921401977539
    9. '[i' → logprob: -13.78421401977539
    10. ')=' → logprob: -13.78421401977539

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.719917630311102e-05
    2. ' =' → logprob: -9.500077247619629
    3. '+=' → logprob: -13.125077247619629
    4. '=i' → logprob: -15.250077247619629
    5. ' +=' → logprob: -19.125076293945312
    6. '.=' → logprob: -19.125076293945312
    7. '=
' → logprob: -20.875076293945312
    8. '   ' → logprob: -21.125076293945312
    9. '=

' → logprob: -21.125076293945312
    10. '＝' → logprob: -21.250076293945312

Token 162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8624639324116288e-06
    2. ' i' → logprob: -13.250001907348633
    3. '0' → logprob: -16.750001907348633
    4. '-' → logprob: -17.375001907348633
    5. ' -' → logprob: -18.875001907348633
    6. '	i' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '  ' → logprob: -21.875001907348633
    9. ' ' → logprob: -21.875001907348633
    10. '-i' → logprob: -21.875001907348633

Token 163: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04732952266931534
    2. '       ' → logprob: -3.1723294258117676
    3. '   ' → logprob: -6.047329425811768
    4. '               ' → logprob: -6.672329425811768
    5. 'i' → logprob: -7.547329425811768
    6. ' i' → logprob: -9.047329902648926
    7. '
' → logprob: -11.172329902648926
    8. '	       ' → logprob: -11.297329902648926
    9. '	' → logprob: -12.797329902648926
    10. '		' → logprob: -12.922329902648926

Token 164: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08025195449590683
    2. '   ' → logprob: -3.330251932144165
    3. '       ' → logprob: -3.455251932144165
    4. '               ' → logprob: -4.955252170562744
    5. 'i' → logprob: -5.955252170562744
    6. ' i' → logprob: -10.205251693725586
    7. '	       ' → logprob: -10.580251693725586
    8. '```' → logprob: -10.705251693725586
    9. '	   ' → logprob: -11.830251693725586
    10. '	i' → logprob: -12.205251693725586

Token 165: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.12694711983203888
    2. ' i' → logprob: -2.1269471645355225
    3. '   ' → logprob: -10.876947402954102
    4. '	i' → logprob: -15.751947402954102
    5. '
' → logprob: -17.8769474029541
    6. '```' → logprob: -18.6269474029541
    7. '    ' → logprob: -19.0019474029541
    8. '_i' → logprob: -19.6269474029541
    9. '           ' → logprob: -20.0019474029541
    10. ' ' → logprob: -20.0019474029541

Token 166: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.052525803446769714
    2. ' +=' → logprob: -3.052525758743286
    3. '+' → logprob: -5.552525997161865
    4. '=' → logprob: -9.927525520324707
    5. '   ' → logprob: -13.552525520324707
    6. '<|end|>' → logprob: -14.427525520324707
    7. ' +' → logprob: -14.552525520324707
    8. ']+=' → logprob: -15.052525520324707
    9. ' ' → logprob: -15.302525520324707
    10. '+='' → logprob: -15.302525520324707

Token 167: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.25002098083496
    4. '```' → logprob: -18.87502098083496
    5. '  ' → logprob: -20.75002098083496
    6. '۱' → logprob: -21.62502098083496
    7. '１' → logprob: -22.18752098083496
    8. '    ' → logprob: -22.31252098083496
    9. '
' → logprob: -22.37502098083496
    10. '0' → logprob: -22.81252098083496

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -20.250001907348633
    5. '  ' → logprob: -22.000001907348633
    6. '１' → logprob: -22.500001907348633
    7. '۱' → logprob: -23.000001907348633
    8. '
' → logprob: -23.500001907348633
    9. '﻿' → logprob: -23.625001907348633
    10. '    ' → logprob: -24.187501907348633

Token 169: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6354700326919556
    2. '   ' → logprob: -0.7604700326919556
    3. 'return' → logprob: -6.385469913482666
    4. '
' → logprob: -7.510469913482666
    5. ' return' → logprob: -8.385470390319824
    6. '<|end|>' → logprob: -8.760470390319824
    7. '	return' → logprob: -9.010470390319824
    8. ')' → logprob: -10.260470390319824
    9. '           ' → logprob: -10.885470390319824
    10. '    
' → logprob: -10.885470390319824

Token 170: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020729316398501396
    2. '<|end|>' → logprob: -4.3957295417785645
    3. '
' → logprob: -5.5207295417785645
    4. '    
' → logprob: -6.2707295417785645
    5. '       ' → logprob: -6.5207295417785645
    6. 'return' → logprob: -8.395729064941406
    7. '<|end|>' → logprob: -8.770729064941406
    8. ' return' → logprob: -9.395729064941406
    9. '#' → logprob: -9.770729064941406
    10. ')' → logprob: -10.270729064941406

Token 171: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014132129959762096
    2. 'return' (adapté à ' return') → logprob: -4.514132022857666
    3. '       ' → logprob: -6.014132022857666
    4. ' return' → logprob: -7.514132022857666
    5. '
' → logprob: -9.889132499694824
    6. '    
' → logprob: -11.389132499694824
    7. '	return' → logprob: -11.639132499694824
    8. ')' → logprob: -12.764132499694824
    9. '```' → logprob: -12.764132499694824
    10. ' ' → logprob: -13.014132499694824

Token 172: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0009114635176956654
    2. ' top' → logprob: -7.000911235809326
    3. '[top' → logprob: -17.625911712646484
    4. '(top' → logprob: -19.875911712646484
    5. '	top' → logprob: -20.250911712646484
    6. 'Top' → logprob: -20.875911712646484
    7. ' ' → logprob: -21.000911712646484
    8. '   ' → logprob: -21.750911712646484
    9. 'tops' → logprob: -21.750911712646484
    10. 'to' → logprob: -22.000911712646484

Token 173: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8013271689414978
    2. '<|end|>' → logprob: -1.0513272285461426
    3. '   ' → logprob: -1.8013272285461426
    4. '    
' → logprob: -3.4263272285461426
    5. 'while' → logprob: -6.926327228546143
    6. ' while' → logprob: -7.176327228546143
    7. '

' → logprob: -7.801327228546143
    8. 'top' → logprob: -7.926327228546143
    9. '<|end|>' → logprob: -7.926327228546143
    10. '  
' → logprob: -8.051326751708984

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7223325371742249
    2. 'top' → logprob: -0.8473325371742249
    3. 'a' → logprob: -3.09733247756958
    4. '
' → logprob: -4.09733247756958
    5. '    
' → logprob: -4.22233247756958
    6. 'ta' → logprob: -5.47233247756958
    7. ' top' → logprob: -6.59733247756958
    8. 't' → logprob: -7.47233247756958
    9. 'for' → logprob: -7.59733247756958
    10. '  
' → logprob: -8.222332954406738

Token 175: ' a' (ID: 261)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.16785214841365814
    2. 'a' (adapté à ' a') → logprob: -2.2928521633148193
    3. 'ta' → logprob: -3.4178521633148193
    4. '   ' → logprob: -4.29285192489624
    5. 'at' → logprob: -5.54285192489624
    6. 'ata' → logprob: -7.54285192489624
    7. 'la' → logprob: -7.79285192489624
    8. 'A' → logprob: -7.91785192489624
    9. 't' → logprob: -8.292852401733398
    10. ' top' → logprob: -8.417852401733398

Token 176: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.002987448126077652
    2. '_' → logprob: -5.877987384796143
    3. '_t' → logprob: -9.6279878616333
    4. 'top' → logprob: -10.2529878616333
    5. ' _' → logprob: -10.7529878616333
    6. ' =' → logprob: -11.0029878616333
    7. '_=' → logprob: -11.5029878616333
    8. '=' → logprob: -11.8779878616333
    9. '__' → logprob: -12.2529878616333
    10. ''_' → logprob: -12.7529878616333

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326788663864136
    2. '=' → logprob: -1.3132679462432861
    3. '=a' → logprob: -12.438267707824707
    4. '(a' → logprob: -14.688267707824707
    5. 'a' → logprob: -14.813267707824707
    6. ')' → logprob: -15.063267707824707
    7. '(' → logprob: -15.438267707824707
    8. '_' → logprob: -15.563267707824707
    9. '_a' → logprob: -15.813267707824707
    10. ',' → logprob: -15.813267707824707

Token 178: ' ladder' (ID: 63451)
  Prédit: 'lad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lad' → logprob: -0.22545258700847626
    2. ' ladder' → logprob: -1.6004525423049927
    3. '   ' → logprob: -11.475452423095703
    4. ' ' → logprob: -11.600452423095703
    5. ' lad' → logprob: -12.475452423095703
    6. '  ' → logprob: -12.725452423095703
    7. ' ladd' → logprob: -12.850452423095703
    8. ' ' → logprob: -13.475452423095703
    9. 'lane' → logprob: -14.037952423095703
    10. 'lag' → logprob: -14.100452423095703

Token 179: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -1.9361264946837764e-07
    2. 'top' → logprob: -15.625
    3. '_t' → logprob: -17.125
    4. '_TOP' → logprob: -18.375
    5. '_' → logprob: -18.625
    6. 'a' → logprob: -19.0
    7. '[top' → logprob: -19.125
    8. 'Top' → logprob: -19.25
    9. ' top' → logprob: -19.375
    10. '(top' → logprob: -19.875

Token 180: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.625001907348633
    3. '(build' → logprob: -15.125001907348633
    4. 'a' → logprob: -15.375001907348633
    5. ' (' → logprob: -15.625001907348633
    6. '(b' → logprob: -16.750001907348633
    7. '(A' → logprob: -17.875001907348633
    8. '((' → logprob: -18.875001907348633
    9. '```' → logprob: -19.125001907348633
    10. '(arr' → logprob: -19.750001907348633

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006716674659401178
    2. ')
' → logprob: -5.006716728210449
    3. ')
' → logprob: -14.13171672821045
    4. ')

' → logprob: -14.88171672821045
    5. ' )' → logprob: -15.25671672821045
    6. ')a' → logprob: -17.381715774536133
    7. ')b' → logprob: -18.506715774536133
    8. ' )
' → logprob: -18.756715774536133
    9. '),' → logprob: -18.881715774536133
    10. ')#' → logprob: -19.256715774536133

Token 182: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2130182534456253
    2. '   ' → logprob: -1.7130182981491089
    3. ' b' → logprob: -4.463018417358398
    4. ' ' → logprob: -12.338018417358398
    5. '	b' → logprob: -12.588018417358398
    6. '```' → logprob: -14.338018417358398
    7. ',b' → logprob: -14.463018417358398
    8. '  ' → logprob: -14.838018417358398
    9. '.b' → logprob: -15.588018417358398
    10. '    ' → logprob: -15.963018417358398

Token 183: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -7.76759916334413e-05
    2. ' b' → logprob: -9.750077247619629
    3. '   ' → logprob: -10.875077247619629
    4. ' ' → logprob: -15.000077247619629
    5. '  ' → logprob: -16.625078201293945
    6. '	b' → logprob: -16.875078201293945
    7. '#' → logprob: -18.625078201293945
    8. '    ' → logprob: -18.625078201293945
    9. '       ' → logprob: -19.625078201293945
    10. 'a' → logprob: -20.500078201293945

Token 184: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0019357812125235796
    2. '_' → logprob: -6.251935958862305
    3. 'top' → logprob: -13.626935958862305
    4. '_bottom' → logprob: -13.626935958862305
    5. ' _' → logprob: -14.126935958862305
    6. '=' → logprob: -14.376935958862305
    7. ' =' → logprob: -14.501935958862305
    8. ')_' → logprob: -14.751935958862305
    9. '=_' → logprob: -14.876935958862305
    10. ''_' → logprob: -15.001935958862305

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022524237632751
    2. '=' → logprob: -1.91022527217865
    3. '=b' → logprob: -14.285224914550781
    4. ' ' → logprob: -15.285224914550781
    5. ')' → logprob: -16.16022491455078
    6. ' =)' → logprob: -17.03522491455078
    7. ' ' → logprob: -17.78522491455078
    8. ' =
' → logprob: -18.16022491455078
    9. '   ' → logprob: -18.28522491455078
    10. 'b' → logprob: -18.41022491455078

Token 186: ' ladder' (ID: 63451)
  Prédit: 'lad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lad' → logprob: -0.14762713015079498
    2. 'b' → logprob: -2.272627115249634
    3. ' ladder' → logprob: -3.397627115249634
    4. '(b' → logprob: -7.522627353668213
    5. ' b' → logprob: -9.522626876831055
    6. 'l' → logprob: -10.522626876831055
    7. '   ' → logprob: -10.647626876831055
    8. ' lad' → logprob: -10.772626876831055
    9. '(l' → logprob: -11.397626876831055
    10. '(' → logprob: -12.272626876831055

Token 187: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0004954866599291563
    2. 'top' → logprob: -7.625495433807373
    3. 'b' → logprob: -12.625495910644531
    4. 'Top' → logprob: -12.750495910644531
    5. '_TOP' → logprob: -14.750495910644531
    6. '[top' → logprob: -15.125495910644531
    7. ' top' → logprob: -15.250495910644531
    8. '[' → logprob: -16.12549591064453
    9. '_bottom' → logprob: -16.25049591064453
    10. '(top' → logprob: -16.62549591064453

Token 188: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.2471589798224159e-05
    2. '(' → logprob: -11.500012397766113
    3. 'b' → logprob: -13.000012397766113
    4. '(B' → logprob: -18.12501335144043
    5. ' (' → logprob: -18.75001335144043
    6. ' b' → logprob: -20.50001335144043
    7. '(
' → logprob: -20.87501335144043
    8. '	b' → logprob: -21.50001335144043
    9. ')b' → logprob: -21.75001335144043
    10. '[b' → logprob: -23.00001335144043

Token 189: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -13.875001907348633
    4. ')

' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '))' → logprob: -18.375001907348633
    7. '())' → logprob: -19.125001907348633
    8. ')`' → logprob: -19.125001907348633
    9. ')#' → logprob: -19.500001907348633
    10. ')a' → logprob: -20.000001907348633

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08759919553995132
    2. 'dp' → logprob: -2.712599277496338
    3. 'c' → logprob: -5.587599277496338
    4. '#' → logprob: -6.212599277496338
    5. 'cost' → logprob: -6.712599277496338
    6. 'result' → logprob: -6.837599277496338
    7. 'max' → logprob: -6.837599277496338
    8. 'for' → logprob: -7.087599277496338
    9. 'dist' → logprob: -7.087599277496338
    10. 'ans' → logprob: -7.212599277496338

Token 191: ' from' (ID: 591)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.038964200764894485
    2. '#' → logprob: -4.66396427154541
    3. 'dist' → logprob: -5.03896427154541
    4. 'cost' → logprob: -5.66396427154541
    5. 'ans' → logprob: -6.16396427154541
    6. 'min' → logprob: -6.16396427154541
    7. 'res' → logprob: -6.41396427154541
    8. 'visited' → logprob: -6.53896427154541
    9. 'result' → logprob: -6.78896427154541
    10. 'max' → logprob: -6.78896427154541

Token 192: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.016268962994217873
    2. 'sys' → logprob: -5.016268730163574
    3. 'heap' → logprob: -5.016268730163574
    4. 'math' → logprob: -6.016268730163574
    5. ' collections' → logprob: -7.891268730163574
    6. 'queue' → logprob: -9.891268730163574
    7. 'operator' → logprob: -11.891268730163574
    8. 'copy' → logprob: -12.391268730163574
    9. '_heap' → logprob: -13.766268730163574
    10. ' math' → logprob: -14.266268730163574

Token 193: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14569269120693207
    2. ' import' → logprob: -2.0206925868988037
    3. 'port' → logprob: -5.895692825317383
    4. 'ort' → logprob: -9.270692825317383
    5. 'ections' → logprob: -10.895692825317383
    6. 't' → logprob: -11.145692825317383
    7. '```' → logprob: -11.270692825317383
    8. 'n' → logprob: -11.395692825317383
    9. '	import' → logprob: -11.395692825317383
    10. 'tion' → logprob: -11.395692825317383

Token 194: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.07890840619802475
    2. ' deque' → logprob: -2.5789084434509277
    3. 'de' → logprob: -10.95390796661377
    4. 'collections' → logprob: -14.32890796661377
    5. ' defaultdict' → logprob: -14.57890796661377
    6. 'queue' → logprob: -17.453908920288086
    7. 'default' → logprob: -17.703908920288086
    8. '   ' → logprob: -18.078908920288086
    9. '.de' → logprob: -18.828908920288086
    10. '```' → logprob: -19.203908920288086

Token 195: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01809866912662983
    2. '    
' → logprob: -4.518098831176758
    3. '
' → logprob: -5.643098831176758
    4. 'queue' → logprob: -6.518098831176758
    5. 'q' → logprob: -6.893098831176758
    6. ' queue' → logprob: -8.518098831176758
    7. 'dist' → logprob: -8.768098831176758
    8. 'dq' → logprob: -8.768098831176758
    9. 'distance' → logprob: -9.518098831176758
    10. 'visited' → logprob: -9.893098831176758

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08251146227121353
    2. 'q' → logprob: -3.5825114250183105
    3. 'queue' → logprob: -4.0825114250183105
    4. '
' → logprob: -4.2075114250183105
    5. 'dist' → logprob: -4.5825114250183105
    6. 'dq' → logprob: -5.5825114250183105
    7. 'graph' → logprob: -6.3325114250183105
    8. '    
' → logprob: -6.8325114250183105
    9. 'distance' → logprob: -7.5825114250183105
    10. ' queue' → logprob: -7.5825114250183105

Token 197: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02872011624276638
    2. 'q' → logprob: -4.653719902038574
    3. 'dq' → logprob: -5.278719902038574
    4. 'dp' → logprob: -5.528719902038574
    5. 'queue' → logprob: -5.653719902038574
    6. 'graph' → logprob: -6.028719902038574
    7. 'visited' → logprob: -6.028719902038574
    8. 'Q' → logprob: -8.028719902038574
    9. 'd' → logprob: -8.278719902038574
    10. 'distance' → logprob: -8.653719902038574

Token 198: ' State' (ID: 5388)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.054022833704948425
    2. 'graph' → logprob: -3.929022789001465
    3. 'visited' → logprob: -4.179022789001465
    4. 'q' → logprob: -5.679022789001465
    5. 'dp' → logprob: -5.929022789001465
    6. ' dist' → logprob: -5.929022789001465
    7. 'queue' → logprob: -6.179022789001465
    8. 'def' → logprob: -6.679022789001465
    9. '#' → logprob: -6.804022789001465
    10. 'distance' → logprob: -6.929022789001465

Token 199: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004150341730564833
    2. '=' → logprob: -6.254150390625
    3. ' queue' → logprob: -7.504150390625
    4. ' space' → logprob: -8.004150390625
    5. ',' → logprob: -8.254150390625
    6. 's' → logprob: -8.504150390625
    7. '   ' → logprob: -8.504150390625
    8. '_queue' → logprob: -8.879150390625
    9. ' ' → logprob: -9.379150390625
    10. ':' → logprob: -9.504150390625

Token 200: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8628690242767334
    2. '(i' → logprob: -0.9878690242767334
    3. '(f' → logprob: -2.4878690242767334
    4. '(x' → logprob: -3.4878690242767334
    5. 'floor' → logprob: -3.9878690242767334
    6. 'deque' → logprob: -4.4878692626953125
    7. '(current' → logprob: -4.6128692626953125
    8. '(de' → logprob: -5.1128692626953125
    9. 'flo' → logprob: -5.1128692626953125
    10. '(queue' → logprob: -5.1128692626953125

Token 201: 'building' (ID: 38555)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.09364372491836548
    2. ' floor' → logprob: -2.9686436653137207
    3. 'x' → logprob: -4.343643665313721
    4. 'current' → logprob: -4.593643665313721
    5. ' current' → logprob: -5.468643665313721
    6. 'a' → logprob: -6.093643665313721
    7. 'flo' → logprob: -6.468643665313721
    8. 'position' → logprob: -6.843643665313721
    9. 'pos' → logprob: -7.093643665313721
    10. 'f' → logprob: -7.218643665313721

Token 202: '(' (ID: 7)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004302407614886761
    2. 'a' → logprob: -6.879302501678467
    3. '0' → logprob: -7.254302501678467
    4. '1' → logprob: -7.254302501678467
    5. '_a' → logprob: -7.379302501678467
    6. ' ,' → logprob: -7.504302501678467
    7. 'A' → logprob: -8.379302024841309
    8. 'index' → logprob: -9.379302024841309
    9. ',a' → logprob: -9.504302024841309
    10. '_id' → logprob: -9.629302024841309

Token 203: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09352225065231323
    2. '0' → logprob: -2.468522310256958
    3. ' ,' → logprob: -6.218522071838379
    4. 'a' → logprob: -6.593522071838379
    5. ' ' → logprob: -8.343522071838379
    6. '),' → logprob: -8.468522071838379
    7. '1' → logprob: -8.718522071838379
    8. ' a' → logprob: -9.343522071838379
    9. 'idx' → logprob: -9.343522071838379
    10. ' idx' → logprob: -9.843522071838379

Token 204: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13448581099510193
    2. '),' → logprob: -2.1344857215881348
    3. ' ,' → logprob: -5.634485721588135
    4. ' or' → logprob: -6.259485721588135
    5. ')' → logprob: -6.884485721588135
    6. '_or' → logprob: -8.259486198425293
    7. ' ),' → logprob: -8.509486198425293
    8. 'or' → logprob: -8.634486198425293
    9. 'a' → logprob: -9.259486198425293
    10. '1' → logprob: -9.634486198425293

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5589684844017029
    2. '1' → logprob: -1.4339685440063477
    3. ' ' → logprob: -1.6839685440063477
    4. 'floor' → logprob: -6.308968544006348
    5. ' floor' → logprob: -6.433968544006348
    6. '   ' → logprob: -8.683968544006348
    7. ')' → logprob: -9.058968544006348
    8. 'a' → logprob: -9.183968544006348
    9. ' building' → logprob: -9.183968544006348
    10. ' a' → logprob: -9.683968544006348

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2841426730155945
    2. '0' → logprob: -1.4091427326202393
    3. 'floor' → logprob: -6.53414249420166
    4. ')' → logprob: -7.78414249420166
    5. ' ' → logprob: -7.78414249420166
    6. 'a' → logprob: -8.78414249420166
    7. '),' → logprob: -8.78414249420166
    8. 'or' → logprob: -9.03414249420166
    9. ',' → logprob: -9.90914249420166
    10. ' or' → logprob: -10.03414249420166

Token 207: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.062173716723918915
    2. ',' → logprob: -2.81217360496521
    3. ' ),' → logprob: -9.437173843383789
    4. ')' → logprob: -9.812173843383789
    5. ' ,' → logprob: -9.812173843383789
    6. '),(' → logprob: -11.937173843383789
    7. ',),' → logprob: -12.437173843383789
    8. '),
' → logprob: -12.687173843383789
    9. '   ' → logprob: -14.062173843383789
    10. '),

' → logprob: -14.437173843383789

Token 208: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.10385969281196594
    2. ' floor' → logprob: -2.7288596630096436
    3. 'position' → logprob: -3.9788596630096436
    4. ' position' → logprob: -4.353859901428223
    5. 'pos' → logprob: -7.228859901428223
    6. 'index' → logprob: -7.603859901428223
    7. ' index' → logprob: -8.853859901428223
    8. 'current' → logprob: -9.603859901428223
    9. ' pos' → logprob: -9.728859901428223
    10. '   ' → logprob: -9.853859901428223

Token 209: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008995542302727699
    2. ')' → logprob: -7.375899791717529
    3. ' ,' → logprob: -8.250899314880371
    4. ',
' → logprob: -13.250899314880371
    5. ' )' → logprob: -13.625899314880371
    6. '),' → logprob: -13.750899314880371
    7. 'n' → logprob: -14.000899314880371
    8. ',n' → logprob: -14.250899314880371
    9. 's' → logprob: -14.500899314880371
    10. '0' → logprob: -14.750899314880371

Token 210: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05492199957370758
    2. ')' → logprob: -2.929922103881836
    3. '),' → logprob: -11.304922103881836
    4. ' ,' → logprob: -11.554922103881836
    5. '   ' → logprob: -12.179922103881836
    6. ' )' → logprob: -12.679922103881836
    7. '))' → logprob: -13.054922103881836
    8. '0' → logprob: -13.054922103881836
    9. ',)' → logprob: -13.554922103881836
    10. ',
' → logprob: -14.304922103881836

Token 211: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6333229541778564
    2. ')' → logprob: -0.7583229541778564
    3. ' )' → logprob: -7.633322715759277
    4. ' ,' → logprob: -8.758322715759277
    5. '0' → logprob: -11.008322715759277
    6. ')
' → logprob: -11.133322715759277
    7. ',)' → logprob: -11.383322715759277
    8. ',
' → logprob: -12.008322715759277
    9. '),' → logprob: -12.008322715759277
    10. 'n' → logprob: -12.258322715759277

Token 212: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017535405233502388
    2. ',' → logprob: -4.142535209655762
    3. ' )' → logprob: -6.642535209655762
    4. '   ' → logprob: -10.392535209655762
    5. '),' → logprob: -10.642535209655762
    6. ' ,' → logprob: -11.267535209655762
    7. '-based' → logprob: -11.392535209655762
    8. '0' → logprob: -11.517535209655762
    9. ' to' → logprob: -11.642535209655762
    10. 'to' → logprob: -11.767535209655762

Token 213: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6327118277549744
    2. ')' → logprob: -0.7577118277549744
    3. ' )' → logprob: -10.382711410522461
    4. '),' → logprob: -10.757711410522461
    5. ' ,' → logprob: -10.882711410522461
    6. '   ' → logprob: -11.257711410522461
    7. ',)' → logprob: -12.257711410522461
    8. '0' → logprob: -12.632711410522461
    9. '))' → logprob: -13.007711410522461
    10. ',
' → logprob: -13.132711410522461

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010897249914705753
    2. ')' → logprob: -5.635897159576416
    3. ',' → logprob: -5.760897159576416
    4. 'q' → logprob: -6.385897159576416
    5. 'queue' → logprob: -7.135897159576416
    6. ' q' → logprob: -7.635897159576416
    7. ' queue' → logprob: -7.760897159576416
    8. '    
' → logprob: -9.135897636413574
    9. 'state' → logprob: -9.385897636413574
    10. ' while' → logprob: -9.385897636413574

Token 215: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2771548926830292
    2. 'queue' → logprob: -1.7771549224853516
    3. 'q' → logprob: -3.1521549224853516
    4. 'dist' → logprob: -4.152154922485352
    5. 'dq' → logprob: -5.152154922485352
    6. 'visited' → logprob: -5.527154922485352
    7. ' queue' → logprob: -6.527154922485352
    8. 'Q' → logprob: -7.152154922485352
    9. 'deque' → logprob: -7.652154922485352
    10. '
' → logprob: -8.027154922485352

Token 216: ' Floors' (ID: 145095)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0221091508865356
    2. 'queue' → logprob: -1.2721091508865356
    3. 'dist' → logprob: -1.2721091508865356
    4. 'q' → logprob: -3.272109031677246
    5. 'dq' → logprob: -3.772109031677246
    6. '   ' → logprob: -5.397109031677246
    7. 'def' → logprob: -5.522109031677246
    8. ' visited' → logprob: -6.647109031677246
    9. '#' → logprob: -6.647109031677246
    10. ' queue' → logprob: -6.897109031677246

Token 217: ' are' (ID: 553)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40401139855384827
    2. ' =' → logprob: -2.0290114879608154
    3. '=' → logprob: -2.2790114879608154
    4. '   ' → logprob: -2.6540114879608154
    5. '+' → logprob: -5.779011249542236
    6. ' +=' → logprob: -5.904011249542236
    7. '+=' → logprob: -5.904011249542236
    8. '_remaining' → logprob: -6.029011249542236
    9. ')' → logprob: -6.404011249542236
    10. 'visited' → logprob: -6.529011249542236

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04841519892215729
    2. ' ' → logprob: -3.923415184020996
    3. 'n' → logprob: -4.548415184020996
    4. 'flo' → logprob: -5.673415184020996
    5. ' n' → logprob: -5.923415184020996
    6. ' numbered' → logprob: -6.048415184020996
    7. 'indexed' → logprob: -6.048415184020996
    8. '1' → logprob: -6.548415184020996
    9. 'from' → logprob: -7.048415184020996
    10. 'zero' → logprob: -7.048415184020996

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16181033849716187
    2. 'n' → logprob: -2.5368103981018066
    3. '1' → logprob: -3.6618103981018066
    4. 'flo' → logprob: -4.161810398101807
    5. 'indexed' → logprob: -5.161810398101807
    6. 'number' → logprob: -5.286810398101807
    7. 'from' → logprob: -5.536810398101807
    8. 'zero' → logprob: -5.661810398101807
    9. 'visited' → logprob: -5.786810398101807
    10. ' numbered' → logprob: -6.536810398101807

Token 220: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.02029743604362011
    2. '-index' → logprob: -4.645297527313232
    3. 'based' → logprob: -4.895297527313232
    4. '-' → logprob: -6.020297527313232
    5. ' -' → logprob: -7.895297527313232
    6. 'to' → logprob: -9.895297050476074
    7. ' based' → logprob: -10.020297050476074
    8. ' to' → logprob: -10.020297050476074
    9. 'indexed' → logprob: -10.020297050476074
    10. ')-' → logprob: -12.770297050476074

Token 221: ' internally' (ID: 65530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002395986346527934
    2. 'queue' → logprob: -6.752396106719971
    3. '
' → logprob: -8.002395629882812
    4. ',' → logprob: -8.127395629882812
    5. ' queue' → logprob: -8.377395629882812
    6. 'q' → logprob: -8.752395629882812
    7. '    
' → logprob: -9.252395629882812
    8. ')' → logprob: -11.252395629882812
    9. 'from' → logprob: -11.627395629882812
    10. 'Q' → logprob: -11.752395629882812

Token 222: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01103615015745163
    2. '
' → logprob: -5.386035919189453
    3. 'while' → logprob: -6.261035919189453
    4. 'queue' → logprob: -6.761035919189453
    5. ',' → logprob: -7.136035919189453
    6. '    
' → logprob: -7.261035919189453
    7. 'q' → logprob: -7.386035919189453
    8. ')' → logprob: -8.011035919189453
    9. ' while' → logprob: -8.011035919189453
    10. 'next' → logprob: -10.136035919189453

Token 223: ' programming' (ID: 23238)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.5649281740188599
    2. 'e' → logprob: -2.0649280548095703
    3. 'index' → logprob: -2.0649280548095703
    4. 'input' → logprob: -2.5649280548095703
    5. 'queue' → logprob: -2.9399280548095703
    6. 'floor' → logprob: -3.0649280548095703
    7. 'visited' → logprob: -3.1899280548095703
    8. ' the' → logprob: -3.5649280548095703
    9. 'que' → logprob: -3.5649280548095703
    10. 'con' → logprob: -3.6899280548095703

Token 224: ' convenience' (ID: 24582)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043850116431713104
    2. 'while' → logprob: -4.418849945068359
    3. '
' → logprob: -4.543849945068359
    4. ')' → logprob: -5.293849945068359
    5. 'queue' → logprob: -5.543849945068359
    6. ' while' → logprob: -5.668849945068359
    7. ',' → logprob: -6.043849945068359
    8. '    
' → logprob: -6.918849945068359
    9. 'moves' → logprob: -6.918849945068359
    10. 'q' → logprob: -7.418849945068359

Token 225: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007229181355796754
    2. '
' → logprob: -8.375722885131836
    3. 'queue' → logprob: -8.625722885131836
    4. '    
' → logprob: -9.000722885131836
    5. ',' → logprob: -9.625722885131836
    6. 'q' → logprob: -10.625722885131836
    7. ' queue' → logprob: -11.250722885131836
    8. ')' → logprob: -11.375722885131836
    9. 'from' → logprob: -11.375722885131836
    10. 'while' → logprob: -11.750722885131836

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022134194150567055
    2. 'queue' → logprob: -7.127213478088379
    3. '
' → logprob: -7.627213478088379
    4. 'q' → logprob: -7.752213478088379
    5. ' queue' → logprob: -8.877213478088379
    6. '    
' → logprob: -9.377213478088379
    7. 'Q' → logprob: -10.002213478088379
    8. 'dist' → logprob: -10.377213478088379
    9. ' q' → logprob: -10.627213478088379
    10. 'import' → logprob: -11.002213478088379

Token 227: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19350048899650574
    2. 'q' → logprob: -2.568500518798828
    3. 'queue' → logprob: -2.943500518798828
    4. 'dist' → logprob: -3.818500518798828
    5. 'visited' → logprob: -5.068500518798828
    6. 'dq' → logprob: -5.568500518798828
    7. ' queue' → logprob: -5.693500518798828
    8. 'dp' → logprob: -6.693500518798828
    9. ' q' → logprob: -6.693500518798828
    10. '
' → logprob: -6.818500518798828

Token 228: ' Start' (ID: 7972)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0794193744659424
    2. 'q' → logprob: -1.3294193744659424
    3. 'visited' → logprob: -1.4544193744659424
    4. 'queue' → logprob: -2.4544193744659424
    5. 'dq' → logprob: -3.7044193744659424
    6. '   ' → logprob: -3.7044193744659424
    7. 'dp' → logprob: -5.079419136047363
    8. 'start' → logprob: -5.829419136047363
    9. 'def' → logprob: -6.204419136047363
    10. 'from' → logprob: -6.204419136047363

Token 229: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5857194066047668
    2. '_state' → logprob: -1.460719347000122
    3. '_floor' → logprob: -2.335719347000122
    4. 'state' → logprob: -3.460719347000122
    5. '_build' → logprob: -3.585719347000122
    6. '=' → logprob: -4.210719585418701
    7. ',' → logprob: -4.335719585418701
    8. ' building' → logprob: -5.085719585418701
    9. 'building' → logprob: -5.835719585418701
    10. 'floor' → logprob: -6.210719585418701

Token 230: ' floor' (ID: 8350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18027682602405548
    2. ' (' → logprob: -1.805276870727539
    3. '0' → logprob: -7.805276870727539
    4. '   ' → logprob: -10.180276870727539
    5. '[' → logprob: -10.555276870727539
    6. 'deque' → logprob: -11.180276870727539
    7. ' ' → logprob: -11.305276870727539
    8. '[(' → logprob: -11.430276870727539
    9. ')' → logprob: -12.305276870727539
    10. 'floor' → logprob: -12.555276870727539

Token 231: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47835397720336914
    2. ' ' → logprob: -1.1033539772033691
    3. '(' → logprob: -3.853353977203369
    4. ' =' → logprob: -4.103353977203369
    5. ',' → logprob: -5.728353977203369
    6. ' (' → logprob: -5.978353977203369
    7. '=' → logprob: -5.978353977203369
    8. ' ,' → logprob: -6.228353977203369
    9. 's' → logprob: -8.603353500366211
    10. '[' → logprob: -8.728353500366211

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019024506211280823
    2. ' ' → logprob: -4.01902437210083
    3. '(' → logprob: -7.64402437210083
    4. '[' → logprob: -9.644024848937988
    5. ' (' → logprob: -9.644024848937988
    6. 's' → logprob: -9.769024848937988
    7. ',' → logprob: -9.769024848937988
    8. '=' → logprob: -10.269024848937988
    9. ' =' → logprob: -10.769024848937988
    10. '1' → logprob: -11.144024848937988

Token 233: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010884164832532406
    2. ',' → logprob: -5.1358842849731445
    3. 'queue' → logprob: -7.0108842849731445
    4. ' queue' → logprob: -7.0108842849731445
    5. 'state' → logprob: -7.2608842849731445
    6. '
' → logprob: -7.3858842849731445
    7. 'q' → logprob: -7.5108842849731445
    8. '(queue' → logprob: -8.760884284973145
    9. '    
' → logprob: -9.010884284973145
    10. ' q' → logprob: -9.135884284973145

Token 234: ' either' (ID: 4784)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003235109616070986
    2. ' ' → logprob: -6.503235340118408
    3. 'a' → logprob: -6.628235340118408
    4. ' a' → logprob: -8.87823486328125
    5. ' building' → logprob: -9.00323486328125
    6. 'building' → logprob: -9.62823486328125
    7. ' the' → logprob: -11.00323486328125
    8. 'the' → logprob: -11.37823486328125
    9. '   ' → logprob: -11.50323486328125
    10. '[' → logprob: -11.75323486328125

Token 235: ' building' (ID: 6282)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05080810561776161
    2. 'building' → logprob: -3.4258081912994385
    3. ' building' → logprob: -4.425807952880859
    4. ' ' → logprob: -5.800807952880859
    5. 'a' → logprob: -6.550807952880859
    6. ' a' → logprob: -8.80080795288086
    7. 'build' → logprob: -8.80080795288086
    8. 'b' → logprob: -8.80080795288086
    9. 'floor' → logprob: -9.42580795288086
    10. '1' → logprob: -10.92580795288086

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6231988072395325
    2. '0' → logprob: -0.9981988072395325
    3. ':' → logprob: -3.8731987476348877
    4. ' queue' → logprob: -4.123198986053467
    5. ',' → logprob: -4.248198986053467
    6. 'queue' → logprob: -4.998198986053467
    7. 's' → logprob: -5.123198986053467
    8. ' ' → logprob: -5.498198986053467
    9. '(queue' → logprob: -5.498198986053467
    10. '
' → logprob: -5.498198986053467

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015827087918296456
    2. ',' → logprob: -7.876582622528076
    3. 'queue' → logprob: -7.876582622528076
    4. 'q' → logprob: -8.126583099365234
    5. ' queue' → logprob: -8.626583099365234
    6. '    
' → logprob: -9.501583099365234
    7. '
' → logprob: -10.001583099365234
    8. ' q' → logprob: -10.126583099365234
    9. ' for' → logprob: -11.251583099365234
    10. ')' → logprob: -11.251583099365234

Token 238: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8966041803359985
    2. '   ' → logprob: -1.2716041803359985
    3. 'q' → logprob: -1.3966041803359985
    4. ' queue' → logprob: -3.271604061126709
    5. 'dq' → logprob: -4.646604061126709
    6. ' q' → logprob: -5.521604061126709
    7. 'dist' → logprob: -5.521604061126709
    8. 'que' → logprob: -6.396604061126709
    9. 'start' → logprob: -6.896604061126709
    10. 'Q' → logprob: -6.896604061126709

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023257127031683922
    2. '=' → logprob: -3.77325701713562
    3. '[' → logprob: -12.5232572555542
    4. '0' → logprob: -12.5232572555542
    5. ' ' → logprob: -13.5232572555542
    6. ',' → logprob: -14.7732572555542
    7. '_' → logprob: -14.7732572555542
    8. '=set' → logprob: -14.7732572555542
    9. '=[[' → logprob: -14.7732572555542
    10. '=[' → logprob: -14.8982572555542

Token 240: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.012536847032606602
    2. 'set' → logprob: -4.887537002563477
    3. ' [[' → logprob: -5.762537002563477
    4. '[' → logprob: -6.762537002563477
    5. '{' → logprob: -7.762537002563477
    6. ' set' → logprob: -9.262537002563477
    7. '[{' → logprob: -10.012537002563477
    8. '[(' → logprob: -10.512537002563477
    9. 'deque' → logprob: -11.137537002563477
    10. '{{' → logprob: -12.137537002563477

Token 241: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0280383548888494e-06
    2. ' False' → logprob: -14.375000953674316
    3. '0' → logprob: -14.875000953674316
    4. '[' → logprob: -19.500001907348633
    5. '(False' → logprob: -19.625001907348633
    6. '   ' → logprob: -20.375001907348633
    7. 'True' → logprob: -20.625001907348633
    8. 'false' → logprob: -21.750001907348633
    9. '=False' → logprob: -23.750001907348633
    10. 'float' → logprob: -24.000001907348633

Token 242: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37343937158584595
    2. ']*' → logprob: -1.8734393119812012
    3. ' for' → logprob: -2.248439311981201
    4. ']' → logprob: -3.623439311981201
    5. ',n' → logprob: -4.248439311981201
    6. ']*(' → logprob: -5.123439311981201
    7. 'for' → logprob: -5.498439311981201
    8. '   ' → logprob: -6.873439311981201
    9. ' ,' → logprob: -8.74843978881836
    10. '	for' → logprob: -9.99843978881836

Token 243: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010485442908247933
    2. '(n' → logprob: -9.375104904174805
    3. '(' → logprob: -11.000104904174805
    4. ' n' → logprob: -13.125104904174805
    5. '   ' → logprob: -14.250104904174805
    6. '100' → logprob: -15.750104904174805
    7. '
' → logprob: -15.875104904174805
    8. ' (' → logprob: -16.000104904174805
    9. '2' → logprob: -16.500104904174805
    10. '	n' → logprob: -17.125104904174805

Token 244: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005383756943047047
    2. ',' → logprob: -5.5053839683532715
    3. '   ' → logprob: -6.8803839683532715
    4. 'for' → logprob: -8.755383491516113
    5. ',[' → logprob: -10.005383491516113
    6. '[' → logprob: -10.630383491516113
    7. ' [' → logprob: -11.130383491516113
    8. '	for' → logprob: -11.380383491516113
    9. ' ,' → logprob: -11.755383491516113
    10. ' ' → logprob: -12.130383491516113

Token 245: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4994439482688904
    2. ' _' → logprob: -1.2494440078735352
    3. '_' → logprob: -2.249444007873535
    4. 'range' → logprob: -6.999444007873535
    5. '_range' → logprob: -9.374444007873535
    6. ' ' → logprob: -11.874444007873535
    7. '[' → logprob: -13.374444007873535
    8. 'Range' → logprob: -14.124444007873535
    9. '_=' → logprob: -14.249444007873535
    10. '(' → logprob: -14.499444007873535

Token 246: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2564813494682312
    2. ' range' → logprob: -1.506481409072876
    3. ' in' → logprob: -5.506481170654297
    4. '_' → logprob: -8.131481170654297
    5. 'in' → logprob: -8.631481170654297
    6. '2' → logprob: -12.631481170654297
    7. '_range' → logprob: -12.631481170654297
    8. '(' → logprob: -13.631481170654297
    9. '(range' → logprob: -14.756481170654297
    10. ' _' → logprob: -15.006481170654297

Token 247: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858759790658951
    2. ' range' → logprob: -3.0485875606536865
    3. '(range' → logprob: -16.423587799072266
    4. '[' → logprob: -17.548587799072266
    5. '(' → logprob: -18.173587799072266
    6. '2' → logprob: -18.298587799072266
    7. '_' → logprob: -19.423587799072266
    8. '_range' → logprob: -19.673587799072266
    9. '	range' → logprob: -20.048587799072266
    10. '.range' → logprob: -21.798587799072266

Token 248: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007099286303855479
    2. '2' → logprob: -7.2507100105285645
    3. ' (' → logprob: -17.500709533691406
    4. '   ' → logprob: -19.000709533691406
    5. '(
' → logprob: -19.625709533691406
    6. '```' → logprob: -21.000709533691406
    7. '=' → logprob: -21.250709533691406
    8. ' ' → logprob: -21.625709533691406
    9. ')' → logprob: -21.625709533691406
    10. '{' → logprob: -22.000709533691406

Token 249: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '3' → logprob: -19.75
    5. ')' → logprob: -19.875
    6. '```' → logprob: -20.125
    7. '
' → logprob: -20.25
    8. '       ' → logprob: -20.5625
    9. '  ' → logprob: -20.625
    10. '۲' → logprob: -20.75

Token 250: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.166338137816638e-05
    2. ')]
' → logprob: -11.375031471252441
    3. ']' → logprob: -11.500031471252441
    4. ' )' → logprob: -12.125031471252441
    5. ')' → logprob: -13.500031471252441
    6. ' ]' → logprob: -13.625031471252441
    7. '   ' → logprob: -13.875031471252441
    8. ')]

' → logprob: -15.000031471252441
    9. ')],' → logprob: -15.500031471252441
    10. '])]' → logprob: -16.000032424926758

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006274186074733734
    2. 'queue' → logprob: -5.256274223327637
    3. ' queue' → logprob: -7.506274223327637
    4. 'q' → logprob: -9.131274223327637
    5. 'from' → logprob: -9.381274223327637
    6. '
' → logprob: -9.506274223327637
    7. 'deque' → logprob: -9.506274223327637
    8. '    
' → logprob: -9.881274223327637
    9. '```' → logprob: -10.756274223327637
    10. '	queue' → logprob: -11.006274223327637

Token 252: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.10967156291007996
    2. '   ' → logprob: -2.8596715927124023
    3. 'q' → logprob: -3.1096715927124023
    4. 'dq' → logprob: -6.984671592712402
    5. 'deque' → logprob: -8.109671592712402
    6. ' queue' → logprob: -8.234671592712402
    7. 'que' → logprob: -8.609671592712402
    8. 'from' → logprob: -9.109671592712402
    9. '```' → logprob: -10.359671592712402
    10. 'start' → logprob: -10.609671592712402

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1006275862455368
    2. '=' → logprob: -2.3506276607513428
    3. '.append' → logprob: -7.975627422332764
    4. '.' → logprob: -9.725627899169922
    5. ')' → logprob: -11.850627899169922
    6. ' ' → logprob: -12.725627899169922
    7. '.=' → logprob: -13.600627899169922
    8. '   ' → logprob: -13.725627899169922
    9. '.enqueue' → logprob: -14.475627899169922
    10. '.add' → logprob: -14.600627899169922

Token 254: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.10020710527896881
    2. ' deque' → logprob: -2.3502070903778076
    3. 'de' → logprob: -15.100207328796387
    4. 'Deque' → logprob: -16.10020637512207
    5. 'collections' → logprob: -18.47520637512207
    6. '   ' → logprob: -19.22520637512207
    7. '(de' → logprob: -19.60020637512207
    8. '	de' → logprob: -20.72520637512207
    9. ' ' → logprob: -22.10020637512207
    10. '```' → logprob: -22.60020637512207

Token 255: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.11502222716808319
    2. '()' → logprob: -2.3650221824645996
    3. '()
' → logprob: -4.2400221824646
    4. '([' → logprob: -8.615022659301758
    5. '(' → logprob: -10.115022659301758
    6. '()

' → logprob: -10.365022659301758
    7. '((' → logprob: -11.115022659301758
    8. '()\' → logprob: -11.740022659301758
    9. '([
' → logprob: -12.115022659301758
    10. '(((' → logprob: -12.240022659301758

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3552490770816803
    2. 'queue' → logprob: -1.605249047279358
    3. '(queue' → logprob: -2.7302491664886475
    4. ' queue' → logprob: -3.4802491664886475
    5. '(' → logprob: -6.855248928070068
    6. '	queue' → logprob: -7.355248928070068
    7. '[' → logprob: -9.230249404907227
    8. '    
' → logprob: -9.355249404907227
    9. ' (' → logprob: -9.730249404907227
    10. ' ' → logprob: -9.980249404907227

Token 257: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.05325249582529068
    2. '   ' → logprob: -3.6782524585723877
    3. ' queue' → logprob: -3.6782524585723877
    4. '(queue' → logprob: -6.928252696990967
    5. '(' → logprob: -8.178252220153809
    6. 'for' → logprob: -10.428252220153809
    7. ' (' → logprob: -11.428252220153809
    8. ' for' → logprob: -11.678252220153809
    9. '	queue' → logprob: -12.053252220153809
    10. '    
' → logprob: -12.678252220153809

Token 258: ' can' (ID: 665)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.001011611195281148
    2. ' queue' → logprob: -7.251011848449707
    3. 'for' → logprob: -8.126011848449707
    4. '   ' → logprob: -12.751011848449707
    5. ' for' → logprob: -13.626011848449707
    6. '(queue' → logprob: -14.126011848449707
    7. '#' → logprob: -14.626011848449707
    8. '	queue' → logprob: -15.251011848449707
    9. 'if' → logprob: -16.25101089477539
    10. '
' → logprob: -16.75101089477539

Token 259: ' start' (ID: 1604)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1211813688278198
    2. ' queue' → logprob: -1.1211813688278198
    3. 'queue' → logprob: -1.2461813688278198
    4. '_queue' → logprob: -3.7461814880371094
    5. '.queue' → logprob: -4.121181488037109
    6. 'append' → logprob: -4.246181488037109
    7. '(queue' → logprob: -6.246181488037109
    8. ' append' → logprob: -6.871181488037109
    9. '.enqueue' → logprob: -7.496181488037109
    10. 'enqueue' → logprob: -7.871181488037109

Token 260: ' at' (ID: 540)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003451818134635687
    2. '(' → logprob: -6.628451824188232
    3. 'from' → logprob: -7.128451824188232
    4. ' from' → logprob: -8.128451347351074
    5. ' =' → logprob: -8.378451347351074
    6. '=' → logprob: -8.503451347351074
    7. '(queue' → logprob: -8.503451347351074
    8. '=(' → logprob: -8.878451347351074
    9. ' with' → logprob: -10.128451347351074
    10. 'with' → logprob: -10.378451347351074

Token 261: ' floor' (ID: 8350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012385203503072262
    2. ' (' → logprob: -4.512385368347168
    3. '0' → logprob: -6.637385368347168
    4. 'queue' → logprob: -11.262385368347168
    5. '(queue' → logprob: -12.137385368347168
    6. ' queue' → logprob: -13.137385368347168
    7. ' ' → logprob: -13.637385368347168
    8. '[' → logprob: -13.762385368347168
    9. 'floor' → logprob: -13.887385368347168
    10. 'both' → logprob: -14.262385368347168

Token 262: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5255908966064453
    2. '0' → logprob: -0.9005908966064453
    3. '(' → logprob: -6.275590896606445
    4. ' (' → logprob: -8.025590896606445
    5. 's' → logprob: -9.025590896606445
    6. '[' → logprob: -9.775590896606445
    7. ',' → logprob: -10.900590896606445
    8. ' =' → logprob: -11.650590896606445
    9. ' ,' → logprob: -11.775590896606445
    10. ' [' → logprob: -11.900590896606445

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '[' → logprob: -14.625004768371582
    4. '1' → logprob: -16.6250057220459
    5. 's' → logprob: -18.1250057220459
    6. '=' → logprob: -18.3750057220459
    7. '(' → logprob: -18.6250057220459
    8. '```' → logprob: -19.2500057220459
    9. '00' → logprob: -19.3750057220459
    10. '   ' → logprob: -19.5000057220459

Token 264: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036279164254665375
    2. '(queue' → logprob: -3.7862792015075684
    3. ' on' → logprob: -5.661279201507568
    4. '   ' → logprob: -5.786279201507568
    5. '(' → logprob: -6.161279201507568
    6. ' ,' → logprob: -6.286279201507568
    7. ' in' → logprob: -6.661279201507568
    8. ' (' → logprob: -7.786279201507568
    9. ',(' → logprob: -8.41127872467041
    10. ' queue' → logprob: -9.16127872467041

Token 265: ' building' (ID: 6282)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010106532834470272
    2. ' both' → logprob: -4.885106563568115
    3. 'both' → logprob: -6.260106563568115
    4. ' ' → logprob: -7.760106563568115
    5. '[' → logprob: -9.760106086730957
    6. ' queue' → logprob: -11.010106086730957
    7. 'queue' → logprob: -11.385106086730957
    8. ' building' → logprob: -11.385106086730957
    9. '(' → logprob: -11.510106086730957
    10. ' range' → logprob: -11.635106086730957

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31667038798332214
    2. ' ' → logprob: -1.3166704177856445
    3. '[' → logprob: -5.8166704177856445
    4. '(' → logprob: -8.816670417785645
    5. ',' → logprob: -9.191670417785645
    6. 's' → logprob: -9.816670417785645
    7. '   ' → logprob: -10.066670417785645
    8. 'a' → logprob: -10.691670417785645
    9. ' ,' → logprob: -11.441670417785645
    10. ' [' → logprob: -11.566670417785645

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016101972432807088
    2. ' ' → logprob: -6.501610279083252
    3. 'a' → logprob: -10.376609802246094
    4. '[' → logprob: -10.376609802246094
    5. '(' → logprob: -10.626609802246094
    6. ',' → logprob: -11.126609802246094
    7. '1' → logprob: -13.626609802246094
    8. 's' → logprob: -13.626609802246094
    9. '=' → logprob: -13.751609802246094
    10. '   ' → logprob: -14.376609802246094

Token 268: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19915930926799774
    2. 'queue' → logprob: -2.5741593837738037
    3. '(queue' → logprob: -2.8241593837738037
    4. '
' → logprob: -3.6991593837738037
    5. ',' → logprob: -4.699159145355225
    6. ')
' → logprob: -5.324159145355225
    7. ' queue' → logprob: -6.074159145355225
    8. ')' → logprob: -6.324159145355225
    9. '.queue' → logprob: -6.699159145355225
    10. ',
' → logprob: -8.074159622192383

Token 269: ' building' (ID: 6282)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33607375621795654
    2. ' building' → logprob: -2.336073875427246
    3. 'queue' → logprob: -2.461073875427246
    4. 'building' → logprob: -3.086073875427246
    5. ' queue' → logprob: -3.711073875427246
    6. ' ' → logprob: -3.711073875427246
    7. '   ' → logprob: -5.586073875427246
    8. 'floor' → logprob: -6.211073875427246
    9. ' on' → logprob: -7.711073875427246
    10. ' floor' → logprob: -8.086073875427246

Token 270: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4504615366458893
    2. '1' → logprob: -1.075461506843567
    3. '0' → logprob: -4.200461387634277
    4. '(' → logprob: -5.075461387634277
    5. ' (' → logprob: -8.825461387634277
    6. '=' → logprob: -9.825461387634277
    7. '[' → logprob: -10.325461387634277
    8. ' =' → logprob: -10.825461387634277
    9. '   ' → logprob: -11.575461387634277
    10. ')' → logprob: -12.450461387634277

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. '0' → logprob: -10.875025749206543
    3. ' ' → logprob: -12.000025749206543
    4. '[' → logprob: -17.250024795532227
    5. '(' → logprob: -17.375024795532227
    6. '   ' → logprob: -17.750024795532227
    7. '```' → logprob: -17.875024795532227
    8. '!' → logprob: -17.875024795532227
    9. 'or' → logprob: -18.125024795532227
    10. '<|end|>' → logprob: -18.375024795532227

Token 272: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5044601559638977
    2. 'queue' → logprob: -1.004460096359253
    3. '
' → logprob: -3.629460096359253
    4. ' queue' → logprob: -6.504460334777832
    5. '(queue' → logprob: -6.504460334777832
    6. '.queue' → logprob: -8.754460334777832
    7. ')
' → logprob: -9.754460334777832
    8. '    
' → logprob: -9.754460334777832
    9. ',' → logprob: -10.129460334777832
    10. '```' → logprob: -10.629460334777832

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7160288095474243
    2. 'queue' → logprob: -0.7160288095474243
    3. ' queue' → logprob: -3.8410286903381348
    4. '(queue' → logprob: -6.841028690338135
    5. '	queue' → logprob: -10.591029167175293
    6. '
' → logprob: -10.716029167175293
    7. '    
' → logprob: -11.591029167175293
    8. '.queue' → logprob: -11.591029167175293
    9. '```' → logprob: -12.591029167175293
    10. 'for' → logprob: -12.716029167175293

Token 274: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.14433619379997253
    2. ' queue' → logprob: -2.394336223602295
    3. '   ' → logprob: -3.144336223602295
    4. 'for' → logprob: -10.019335746765137
    5. ' for' → logprob: -11.019335746765137
    6. '(queue' → logprob: -11.894335746765137
    7. '	queue' → logprob: -12.644335746765137
    8. '
' → logprob: -13.269335746765137
    9. '.queue' → logprob: -14.269335746765137
    10. '    
' → logprob: -15.144335746765137

Token 275: ' after' (ID: 1934)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.000981839606538415
    2. ' queue' → logprob: -7.37598180770874
    3. '   ' → logprob: -8.375982284545898
    4. 'for' → logprob: -9.000982284545898
    5. ' for' → logprob: -14.625982284545898
    6. '	queue' → logprob: -15.000982284545898
    7. 'visited' → logprob: -15.125982284545898
    8. '(queue' → logprob: -15.500982284545898
    9. 'if' → logprob: -16.2509822845459
    10. '
' → logprob: -16.5009822845459

Token 276: ' being' (ID: 2447)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.14681215584278107
    2. ' queue' → logprob: -2.1468122005462646
    3. '(queue' → logprob: -5.2718119621276855
    4. '   ' → logprob: -6.1468119621276855
    5. ' adding' → logprob: -6.3968119621276855
    6. 'append' → logprob: -6.3968119621276855
    7. 'enqueue' → logprob: -7.0218119621276855
    8. 'all' → logprob: -7.0218119621276855
    9. 'app' → logprob: -7.2718119621276855
    10. ' ' → logprob: -7.5218119621276855

Token 277: ' on' (ID: 402)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.9291529059410095
    2. 'added' → logprob: -2.5541529655456543
    3. 'p' → logprob: -2.6791529655456543
    4. 'on' → logprob: -2.8041529655456543
    5. 'visited' → logprob: -3.0541529655456543
    6. 'lad' → logprob: -3.1791529655456543
    7. 'm' → logprob: -3.4291529655456543
    8. 'lift' → logprob: -3.4291529655456543
    9. 'at' → logprob: -3.5541529655456543
    10. 'picked' → logprob: -3.6791529655456543

Token 278: ' floor' (ID: 8350)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.2329895496368408
    2. ' queue' → logprob: -1.4829895496368408
    3. ' building' → logprob: -1.7329895496368408
    4. '(' → logprob: -2.107989549636841
    5. 'building' → logprob: -2.607989549636841
    6. 'floor' → logprob: -3.357989549636841
    7. '0' → logprob: -3.732989549636841
    8. '(queue' → logprob: -4.357989311218262
    9. ' (' → logprob: -4.482989311218262
    10. ' floor' → logprob: -4.982989311218262

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029918719083070755
    2. ' ' → logprob: -3.529918670654297
    3. '   ' → logprob: -9.654918670654297
    4. '=' → logprob: -10.529918670654297
    5. ' =' → logprob: -10.904918670654297
    6. 's' → logprob: -11.529918670654297
    7. ',' → logprob: -11.529918670654297
    8. '1' → logprob: -11.779918670654297
    9. '(' → logprob: -11.779918670654297
    10. '[' → logprob: -11.904918670654297

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003967071825172752
    2. ' ' → logprob: -7.875396728515625
    3. '1' → logprob: -11.625396728515625
    4. '   ' → logprob: -13.125396728515625
    5. '-' → logprob: -14.187896728515625
    6. '[' → logprob: -14.250396728515625
    7. 'a' → logprob: -14.625396728515625
    8. '
' → logprob: -14.687896728515625
    9. '```' → logprob: -14.812896728515625
    10. 's' → logprob: -15.125396728515625

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2967987358570099
    2. '(queue' → logprob: -2.1717987060546875
    3. '   ' → logprob: -2.6717987060546875
    4. ' on' → logprob: -3.1717987060546875
    5. ')' → logprob: -5.0467987060546875
    6. 'on' → logprob: -5.1717987060546875
    7. ' ,' → logprob: -5.4217987060546875
    8. '(' → logprob: -5.7967987060546875
    9. 'queue' → logprob: -5.7967987060546875
    10. ' in' → logprob: -6.1717987060546875

Token 282: ' we' (ID: 581)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.226796492934227
    2. ' queue' → logprob: -1.6017965078353882
    3. '   ' → logprob: -6.851796627044678
    4. ' for' → logprob: -9.47679615020752
    5. 'for' → logprob: -9.60179615020752
    6. '
' → logprob: -9.72679615020752
    7. 'visited' → logprob: -9.85179615020752
    8. '	queue' → logprob: -10.72679615020752
    9. '(queue' → logprob: -11.22679615020752
    10. ' visited' → logprob: -11.85179615020752

Token 283: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4957249164581299
    2. 'queue' → logprob: -1.9957249164581299
    3. 'can' → logprob: -2.37072491645813
    4. 'enqueue' → logprob: -2.99572491645813
    5. 'append' → logprob: -3.74572491645813
    6. '   ' → logprob: -3.74572491645813
    7. '.append' → logprob: -4.370724678039551
    8. ' queue' → logprob: -4.620724678039551
    9. 'mark' → logprob: -4.995724678039551
    10. '.enqueue' → logprob: -5.120724678039551

Token 284: ' do' (ID: 621)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.31876277923583984
    2. 'queue' → logprob: -1.9437627792358398
    3. 'enqueue' → logprob: -2.56876277923584
    4. 'add' → logprob: -4.31876277923584
    5. ' queue' → logprob: -4.44376277923584
    6. ' append' → logprob: -4.56876277923584
    7. '   ' → logprob: -5.19376277923584
    8. ' enqueue' → logprob: -5.56876277923584
    9. ' add' → logprob: -6.44376277923584
    10. 'put' → logprob: -6.69376277923584

Token 285: ' jumps' (ID: 65613)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.24222269654273987
    2. ' queue' → logprob: -1.9922226667404175
    3. '   ' → logprob: -2.617222785949707
    4. ' for' → logprob: -6.742222785949707
    5. 'for' → logprob: -6.992222785949707
    6. '(queue' → logprob: -6.992222785949707
    7. '
' → logprob: -7.117222785949707
    8. '	queue' → logprob: -8.117222785949707
    9. '    
' → logprob: -8.492222785949707
    10. ' ' → logprob: -8.742222785949707

Token 286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3670028746128082
    2. 'queue' → logprob: -1.9920028448104858
    3. '
' → logprob: -2.3670029640197754
    4. '(queue' → logprob: -2.6170029640197754
    5. ' queue' → logprob: -6.867002964019775
    6. ')
' → logprob: -7.242002964019775
    7. '()
' → logprob: -7.242002964019775
    8. ',' → logprob: -8.367002487182617
    9. '    
' → logprob: -8.492002487182617
    10. '(' → logprob: -8.492002487182617

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033952489495277405
    2. '(queue' → logprob: -3.908952474594116
    3. 'queue' → logprob: -4.408952713012695
    4. ' queue' → logprob: -8.033952713012695
    5. '
' → logprob: -8.033952713012695
    6. '    
' → logprob: -8.658952713012695
    7. '	queue' → logprob: -9.158952713012695
    8. '(' → logprob: -9.533952713012695
    9. ' ' → logprob: -10.033952713012695
    10. '  ' → logprob: -10.783952713012695

Token 288: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.00827861949801445
    2. '   ' → logprob: -5.508278846740723
    3. ' queue' → logprob: -5.633278846740723
    4. '
' → logprob: -7.633278846740723
    5. '(queue' → logprob: -9.133278846740723
    6. '	queue' → logprob: -11.508278846740723
    7. 'for' → logprob: -11.633278846740723
    8. '    
' → logprob: -13.758278846740723
    9. '.queue' → logprob: -14.258278846740723
    10. ' for' → logprob: -14.508278846740723

Token 289: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015943869948387146
    2. '.' → logprob: -9.00015926361084
    3. '.extend' → logprob: -10.37515926361084
    4. ').' → logprob: -13.12515926361084
    5. '.enqueue' → logprob: -13.37515926361084
    6. '].' → logprob: -15.50015926361084
    7. '.put' → logprob: -15.62515926361084
    8. '}.' → logprob: -16.125160217285156
    9. '.app' → logprob: -16.125160217285156
    10. 'append' → logprob: -16.250160217285156

Token 290: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00020377879263833165
    2. '(' → logprob: -8.500204086303711
    3. '([' → logprob: -16.50020408630371
    4. ' ((' → logprob: -16.62520408630371
    5. '(([' → logprob: -18.00020408630371
    6. '(((' → logprob: -18.62520408630371
    7. '(('' → logprob: -18.62520408630371
    8. ' ' → logprob: -19.37520408630371
    9. '[(' → logprob: -19.87520408630371
    10. '(("' → logprob: -20.25020408630371

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '(' → logprob: -15.500003814697266
    4. '1' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.375003814697266
    6. ',' → logprob: -18.125003814697266
    7. 'a' → logprob: -18.937503814697266
    8. '  ' → logprob: -19.500003814697266
    9. ' (' → logprob: -19.500003814697266
    10. ')' → logprob: -19.750003814697266

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8444881536415778e-05
    2. ' ,' → logprob: -10.500028610229492
    3. '0' → logprob: -14.250028610229492
    4. ',
' → logprob: -15.625028610229492
    5. '<|end|>' → logprob: -16.750028610229492
    6. '‌,' → logprob: -17.000028610229492
    7. ' ' → logprob: -18.750028610229492
    8. ')' → logprob: -19.500028610229492
    9. '‍,' → logprob: -19.750028610229492
    10. '，' → logprob: -20.625028610229492

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '1' → logprob: -18.9375057220459
    4. ')' → logprob: -19.1250057220459
    5. '   ' → logprob: -19.2500057220459
    6. '00' → logprob: -19.8750057220459
    7. '۰' → logprob: -20.0625057220459
    8. '```' → logprob: -20.2500057220459
    9. ',' → logprob: -20.3125057220459
    10. '  ' → logprob: -20.6875057220459

Token 294: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.058135539293289185
    2. ',' → logprob: -2.933135509490967
    3. '))
' → logprob: -5.808135509490967
    4. ')' → logprob: -9.183135986328125
    5. ' ))' → logprob: -9.183135986328125
    6. ' ,' → logprob: -11.558135986328125
    7. ',true' → logprob: -12.308135986328125
    8. '))

' → logprob: -12.308135986328125
    9. '0' → logprob: -12.808135986328125
    10. '))
' → logprob: -12.933135986328125

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011936791706830263
    2. 'False' → logprob: -7.376193523406982
    3. '1' → logprob: -8.12619400024414
    4. 'True' → logprob: -9.12619400024414
    5. ' ' → logprob: -9.50119400024414
    6. '"' → logprob: -10.37619400024414
    7. '-' → logprob: -11.25119400024414
    8. '2' → logprob: -12.06369400024414
    9. ')' → logprob: -12.31369400024414
    10. 'time' → logprob: -12.50119400024414

Token 296: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006039070431143045
    2. '))
' → logprob: -8.250603675842285
    3. ')' → logprob: -8.875603675842285
    4. ' ))' → logprob: -9.125603675842285
    5. ',' → logprob: -9.375603675842285
    6. ')))' → logprob: -12.750603675842285
    7. '))

' → logprob: -13.375603675842285
    8. '));' → logprob: -13.875603675842285
    9. '0' → logprob: -14.250603675842285
    10. '1' → logprob: -15.000603675842285

Token 297: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: ' building' (ID: 6282)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2727530300617218
    2. 'visited' → logprob: -1.8977530002593994
    3. 'False' → logprob: -3.7727530002593994
    4. 'steps' → logprob: -4.0227532386779785
    5. '#' → logprob: -4.0227532386779785
    6. 'distance' → logprob: -4.2727532386779785
    7. 'time' → logprob: -5.2727532386779785
    8. 'from' → logprob: -6.5227532386779785
    9. '1' → logprob: -6.6477532386779785
    10. ' ' → logprob: -6.7727532386779785

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05191311985254288
    2. '0' → logprob: -3.176913022994995
    3. '<|end|>' → logprob: -4.926913261413574
    4. ' ,' → logprob: -6.801913261413574
    5. ')' → logprob: -8.051913261413574
    6. '<|end|>' → logprob: -10.176913261413574
    7. ' ' → logprob: -10.301913261413574
    8. ',time' → logprob: -10.801913261413574
    9. ',index' → logprob: -11.176913261413574
    10. '[' → logprob: -11.301913261413574

Token 300: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.04058833420276642
    2. 'steps' → logprob: -4.04058837890625
    3. ' floor' → logprob: -4.91558837890625
    4. 'flo' → logprob: -5.16558837890625
    5. 'time' → logprob: -5.54058837890625
    6. 'step' → logprob: -6.04058837890625
    7. '0' → logprob: -6.41558837890625
    8. ' steps' → logprob: -7.91558837890625
    9. 'distance' → logprob: -8.04058837890625
    10. 'moves' → logprob: -9.29058837890625

Token 301: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ' jumps' (ID: 65613)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.41234731674194336
    2. 'steps' → logprob: -1.6623473167419434
    3. '0' → logprob: -2.6623473167419434
    4. 'j' → logprob: -2.9123473167419434
    5. 'distance' → logprob: -4.537347316741943
    6. ' time' → logprob: -5.037347316741943
    7. 'moves' → logprob: -5.787347316741943
    8. ' steps' → logprob: -7.037347316741943
    9. 'dist' → logprob: -7.037347316741943
    10. 'jump' → logprob: -7.287347316741943

Token 303: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5343400835990906
    2. ')' → logprob: -1.6593401432037354
    3. '<|end|>' → logprob: -2.2843401432037354
    4. 'while' → logprob: -2.7843401432037354
    5. ' while' → logprob: -3.4093401432037354
    6. '
' → logprob: -4.159339904785156
    7. '    
' → logprob: -5.784339904785156
    8. '<|end|>' → logprob: -6.034339904785156
    9. '	while' → logprob: -6.659339904785156
    10. '\n' → logprob: -6.659339904785156

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030020300298929214
    2. 'while' → logprob: -3.780020236968994
    3. ' while' → logprob: -5.405020236968994
    4. ')' → logprob: -6.530020236968994
    5. 'queue' → logprob: -8.530020713806152
    6. '    
' → logprob: -8.780020713806152
    7. '<|end|>' → logprob: -8.780020713806152
    8. '	while' → logprob: -9.280020713806152
    9. '
' → logprob: -9.530020713806152
    10. 'visited' → logprob: -9.905020713806152

Token 305: ' queue' (ID: 13661)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1374402493238449
    2. 'while' → logprob: -2.1374402046203613
    3. '   ' → logprob: -4.762440204620361
    4. 'queue' (adapté à ' queue') → logprob: -6.387440204620361
    5. ' visited' → logprob: -9.38744068145752
    6. ' while' → logprob: -9.51244068145752
    7. '
' → logprob: -10.26244068145752
    8. '    
' → logprob: -11.51244068145752
    9. '       ' → logprob: -12.01244068145752
    10. '	while' → logprob: -12.38744068145752

Token 306: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.031814102083444595
    2. '.p' → logprob: -3.5318140983581543
    3. '.' → logprob: -7.031814098358154
    4. '.pop' → logprob: -7.531814098358154
    5. '.extend' → logprob: -7.656814098358154
    6. 'append' → logprob: -9.406814575195312
    7. '.rotate' → logprob: -11.031814575195312
    8. ')' → logprob: -11.156814575195312
    9. ').' → logprob: -12.031814575195312
    10. '[-' → logprob: -12.156814575195312

Token 307: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00038086410495452583
    2. '(' → logprob: -7.875380992889404
    3. ' ' → logprob: -15.125380516052246
    4. ' (' → logprob: -15.250380516052246
    5. ' ((' → logprob: -15.375380516052246
    6. '(
' → logprob: -18.250381469726562
    7. '   ' → logprob: -19.000381469726562
    8. '=(' → logprob: -19.500381469726562
    9. '[(' → logprob: -19.625381469726562
    10. '```' → logprob: -19.625381469726562

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -15.375000953674316
    4. '(' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.750001907348633
    6. ')' → logprob: -18.500001907348633
    7. '' → logprob: -20.000001907348633
    8. '  ' → logprob: -20.187501907348633
    9. '```' → logprob: -20.187501907348633
    10. '۱' → logprob: -20.437501907348633

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014013137842994183
    2. ' ,' → logprob: -8.875140190124512
    3. ',
' → logprob: -15.750140190124512
    4. '0' → logprob: -16.750139236450195
    5. ' ' → logprob: -16.875139236450195
    6. ')' → logprob: -18.125139236450195
    7. '
' → logprob: -19.625139236450195
    8. '   ' → logprob: -19.750139236450195
    9. '‌,' → logprob: -20.000139236450195
    10. '，' → logprob: -20.125139236450195

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -17.375
    4. '۰' → logprob: -19.5
    5. ')' → logprob: -19.5
    6. '```' → logprob: -21.1875
    7. ',' → logprob: -21.375
    8. '1' → logprob: -21.4375
    9. '00' → logprob: -21.5625
    10. '０' → logprob: -21.625

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.97024549683556e-05
    2. ' ,' → logprob: -9.500080108642578
    3. '0' → logprob: -12.250080108642578
    4. ')' → logprob: -17.000080108642578
    5. ',
' → logprob: -17.500080108642578
    6. '),' → logprob: -18.000080108642578
    7. ' ' → logprob: -18.250080108642578
    8. '```' → logprob: -19.125080108642578
    9. '   ' → logprob: -19.750080108642578
    10. '	' → logprob: -19.750080108642578

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. ')' → logprob: -16.75
    4. '۰' → logprob: -18.875
    5. '1' → logprob: -19.0625
    6. '<|end|>' → logprob: -19.625
    7. '   ' → logprob: -20.0
    8. '০' → logprob: -21.375
    9. ',' → logprob: -21.5
    10. '2' → logprob: -21.5625

Token 313: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009138475870713592
    2. ')' → logprob: -7.000913619995117
    3. '))
' → logprob: -13.250913619995117
    4. ' ))' → logprob: -15.125913619995117
    5. ')))' → logprob: -15.125913619995117
    6. '));' → logprob: -17.625913619995117
    7. '),' → logprob: -17.750913619995117
    8. '))

' → logprob: -18.250913619995117
    9. ')
' → logprob: -18.500913619995117
    10. ')),' → logprob: -18.875913619995117

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0451575331389904
    2. 'while' → logprob: -3.6701574325561523
    3. ' while' → logprob: -4.045157432556152
    4. '	while' → logprob: -7.420157432556152
    5. '<|end|>' → logprob: -8.045157432556152
    6. '    
' → logprob: -9.295157432556152
    7. '```' → logprob: -9.545157432556152
    8. ')' → logprob: -9.920157432556152
    9. '
' → logprob: -11.045157432556152
    10. ',' → logprob: -11.920157432556152

Token 315: ' visited' (ID: 18416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15250352025032043
    2. '   ' → logprob: -2.277503490447998
    3. ' while' → logprob: -3.277503490447998
    4. '
' → logprob: -7.402503490447998
    5. '	while' → logprob: -7.777503490447998
    6. '    
' → logprob: -9.527503967285156
    7. '<|end|>' → logprob: -10.277503967285156
    8. ')' → logprob: -11.277503967285156
    9. 'visited' (adapté à ' visited') → logprob: -11.402503967285156
    10. 'While' → logprob: -11.777503967285156

Token 316: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '][' → logprob: -14.500000953674316
    3. ')[' → logprob: -16.375
    4. '=' → logprob: -16.75
    5. '=[' → logprob: -16.875
    6. ' [' → logprob: -16.875
    7. '[[' → logprob: -18.0
    8. '```' → logprob: -18.125
    9. '\[' → logprob: -18.25
    10. ' =' → logprob: -18.75

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '1' → logprob: -16.75
    4. '[' → logprob: -16.75
    5. '][' → logprob: -17.125
    6. '   ' → logprob: -17.875
    7. '(' → logprob: -18.0
    8. ']' → logprob: -18.4375
    9. '```' → logprob: -19.1875
    10. '۰' → logprob: -19.4375

Token 318: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006302326801232994
    2. '[' → logprob: -7.3756303787231445
    3. ']' → logprob: -12.750630378723145
    4. ' ][' → logprob: -14.500630378723145
    5. '0' → logprob: -16.750629425048828
    6. ',' → logprob: -17.375629425048828
    7. ']][' → logprob: -17.500629425048828
    8. ''][' → logprob: -17.875629425048828
    9. '"][' → logprob: -17.875629425048828
    10. ')[' → logprob: -18.000629425048828

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -20.875
    3. '۰' → logprob: -21.5
    4. '０' → logprob: -23.5
    5. '   ' → logprob: -24.625
    6. '00' → logprob: -24.75
    7. '
' → logprob: -25.125
    8. '০' → logprob: -25.375
    9. '```' → logprob: -25.625
    10. '[' → logprob: -26.0

Token 320: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020509003661572933
    2. ']=' → logprob: -8.500205039978027
    3. ' ]' → logprob: -13.500205039978027
    4. '=' → logprob: -16.125205993652344
    5. 'True' → logprob: -16.500205993652344
    6. '=True' → logprob: -16.750205993652344
    7. ' =' → logprob: -18.750205993652344
    8. '']' → logprob: -19.500205993652344
    9. ')' → logprob: -19.750205993652344
    10. '[' → logprob: -20.375205993652344

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061993345618247986
    2. ' =' → logprob: -2.811993360519409
    3. '=True' → logprob: -11.186993598937988
    4. ']' → logprob: -11.436993598937988
    5. ']=' → logprob: -13.936993598937988
    6. ')' → logprob: -16.561992645263672
    7. 'True' → logprob: -17.186992645263672
    8. '[' → logprob: -17.561992645263672
    9. '=False' → logprob: -17.561992645263672
    10. ')=' → logprob: -18.686992645263672

Token 322: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.128163257315464e-07
    2. ' True' → logprob: -15.25
    3. '(True' → logprob: -23.25
    4. '=True' → logprob: -23.625
    5. 'true' → logprob: -24.125
    6. 'False' → logprob: -24.5
    7. '1' → logprob: -24.625
    8. '   ' → logprob: -25.125
    9. '_true' → logprob: -26.875
    10. 'Tr' → logprob: -26.875

Token 323: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12725870311260223
    2. '   ' → logprob: -2.127258777618408
    3. ' visited' → logprob: -8.12725830078125
    4. ')' → logprob: -11.62725830078125
    5. '<|end|>' → logprob: -11.75225830078125
    6. '
' → logprob: -11.87725830078125
    7. ',' → logprob: -12.25225830078125
    8. '  ' → logprob: -13.75225830078125
    9. '    
' → logprob: -14.00225830078125
    10. '```' → logprob: -14.00225830078125

Token 324: '   ' (ID: 271)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.02980928122997284
    2. '   ' → logprob: -3.5298092365264893
    3. ' visited' → logprob: -9.77980899810791
    4. '```' → logprob: -14.65480899810791
    5. '    ' → logprob: -14.90480899810791
    6. '  ' → logprob: -15.02980899810791
    7. '
' → logprob: -15.27980899810791
    8. 'queue' → logprob: -15.65480899810791
    9. ' ' → logprob: -15.90480899810791
    10. '       ' → logprob: -15.90480899810791

Token 325: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.00012701898231171072
    2. '   ' → logprob: -9.375126838684082
    3. 'while' → logprob: -10.125126838684082
    4. ' visited' → logprob: -13.125126838684082
    5. '       ' → logprob: -18.1251277923584
    6. '```' → logprob: -18.2501277923584
    7. 'for' → logprob: -18.5001277923584
    8. '    
' → logprob: -18.6251277923584
    9. '           ' → logprob: -18.6251277923584
    10. '  ' → logprob: -18.6251277923584

Token 326: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.375
    3. '][' → logprob: -16.5
    4. ' [' → logprob: -17.75
    5. ')[' → logprob: -18.0
    6. '1' → logprob: -18.875
    7. '0' → logprob: -18.875
    8. '}[' → logprob: -19.75
    9. '\[' → logprob: -19.75
    10. '=' → logprob: -19.875

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.875
    3. '[' → logprob: -17.375
    4. ' ' → logprob: -18.25
    5. '   ' → logprob: -19.875
    6. '
' → logprob: -22.125
    7. '][' → logprob: -22.375
    8. ']' → logprob: -22.5
    9. '```' → logprob: -22.5
    10. '১' → logprob: -22.6875

Token 328: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002863961970433593
    2. '[' → logprob: -5.877863883972168
    3. ']' → logprob: -10.002863883972168
    4. ' ][' → logprob: -11.377863883972168
    5. ')[' → logprob: -13.752863883972168
    6. '"][' → logprob: -14.627863883972168
    7. '>[' → logprob: -15.252863883972168
    8. ''][' → logprob: -15.502863883972168
    9. '}[' → logprob: -16.127864837646484
    10. '0' → logprob: -16.127864837646484

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '<|end|>' → logprob: -20.375
    4. '۰' → logprob: -22.375
    5. '   ' → logprob: -23.125
    6. '```' → logprob: -23.625
    7. '[' → logprob: -23.625
    8. ']' → logprob: -24.0
    9. '1' → logprob: -24.25
    10. ')' → logprob: -24.25

Token 330: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.1093578804284334e-05
    2. ']=' → logprob: -10.000051498413086
    3. ' ]' → logprob: -12.625051498413086
    4. '=' → logprob: -13.000051498413086
    5. ' =' → logprob: -16.125051498413086
    6. '[' → logprob: -17.125051498413086
    7. 'True' → logprob: -18.250051498413086
    8. '=True' → logprob: -18.375051498413086
    9. ')' → logprob: -18.625051498413086
    10. '][' → logprob: -19.625051498413086

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416750717908144
    2. ' =' → logprob: -4.264167308807373
    3. ']' → logprob: -13.514167785644531
    4. '=True' → logprob: -13.514167785644531
    5. '[' → logprob: -13.639167785644531
    6. ']=' → logprob: -17.13916778564453
    7. ')' → logprob: -18.13916778564453
    8. 'True' → logprob: -19.01416778564453
    9. ' ' → logprob: -19.51416778564453
    10. '   ' → logprob: -19.63916778564453

Token 332: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.15310683415737e-05
    2. ' True' → logprob: -10.750021934509277
    3. '=True' → logprob: -19.00002098083496
    4. '(True' → logprob: -19.12502098083496
    5. 'False' → logprob: -20.12502098083496
    6. '.True' → logprob: -22.62502098083496
    7. '_true' → logprob: -24.37502098083496
    8. 'true' → logprob: -24.37502098083496
    9. 'Yes' → logprob: -24.50002098083496
    10. '1' → logprob: -24.75002098083496

Token 333: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4432712197303772
    2. 'while' → logprob: -1.1932711601257324
    3. ' while' → logprob: -2.9432711601257324
    4. ')' → logprob: -7.068271160125732
    5. '	while' → logprob: -7.318271160125732
    6. '<|end|>' → logprob: -7.818271160125732
    7. '
' → logprob: -9.44327163696289
    8. ',' → logprob: -9.94327163696289
    9. '```' → logprob: -10.44327163696289
    10. '    
' → logprob: -10.56827163696289

Token 334: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2547839879989624
    2. '   ' → logprob: -1.5047839879989624
    3. ' while' → logprob: -5.879784107208252
    4. '	while' → logprob: -9.879783630371094
    5. '    
' → logprob: -13.254783630371094
    6. 'While' → logprob: -13.879783630371094
    7. '```' → logprob: -14.129783630371094
    8. '<|end|>' → logprob: -15.629783630371094
    9. '
' → logprob: -15.754783630371094
    10. 'for' → logprob: -16.504783630371094

Token 335: ' ans' (ID: 3345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00038682064041495323
    2. '   ' → logprob: -8.250387191772461
    3. ' while' → logprob: -9.000387191772461
    4. '	while' → logprob: -13.125387191772461
    5. '    
' → logprob: -16.62538719177246
    6. 'While' → logprob: -17.12538719177246
    7. 'next' → logprob: -18.25038719177246
    8. '```' → logprob: -18.25038719177246
    9. 'from' → logprob: -19.12538719177246
    10. 'try' → logprob: -19.12538719177246

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020732134580612
    2. '=' → logprob: -2.3502073287963867
    3. '=-' → logprob: -15.225207328796387
    4. ' ' → logprob: -15.850207328796387
    5. '   ' → logprob: -16.10020637512207
    6. ')' → logprob: -16.85020637512207
    7. '  ' → logprob: -16.97520637512207
    8. '=None' → logprob: -16.97520637512207
    9. ' =
' → logprob: -17.35020637512207
    10. ' =)' → logprob: -17.60020637512207

Token 337: ' "' (ID: 392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00027706706896424294
    2. 'None' → logprob: -9.125277519226074
    3. ' -' → logprob: -9.375277519226074
    4. 'float' → logprob: -10.000277519226074
    5. '0' → logprob: -10.375277519226074
    6. '"' → logprob: -12.750277519226074
    7. '10' → logprob: -13.250277519226074
    8. 'False' → logprob: -14.250277519226074
    9. '100' → logprob: -14.750277519226074
    10. '-inf' → logprob: -15.250277519226074

Token 338: 'NA' (ID: 9555)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.7999687194824219
    2. 'IMP' → logprob: -2.049968719482422
    3. '-' → logprob: -2.299968719482422
    4. 'NO' → logprob: -2.424968719482422
    5. '0' → logprob: -2.799968719482422
    6. '"' → logprob: -2.924968719482422
    7. 'Impossible' → logprob: -3.174968719482422
    8. 'NA' → logprob: -3.799968719482422
    9. 'Yes' → logprob: -3.799968719482422
    10. 'Fail' → logprob: -5.424968719482422

Token 339: '"

' (ID: 2678)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.251083105802536
    2. '"' → logprob: -1.7510831356048584
    3. '")' → logprob: -3.7510831356048584
    4. 'N' → logprob: -5.251082897186279
    5. 'T' → logprob: -5.376082897186279
    6. 'V' → logprob: -5.626082897186279
    7. 'L' → logprob: -6.126082897186279
    8. 'M' → logprob: -6.251082897186279
    9. 'G' → logprob: -7.001082897186279
    10. 'C' → logprob: -7.001082897186279

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32765159010887146
    2. 'while' → logprob: -1.3276516199111938
    3. ' while' → logprob: -4.327651500701904
    4. '	while' → logprob: -7.577651500701904
    5. '
' → logprob: -7.702651500701904
    6. '    
' → logprob: -9.452651977539062
    7. '  
' → logprob: -11.077651977539062
    8. '<|end|>' → logprob: -11.327651977539062
    9. '  ' → logprob: -12.202651977539062
    10. 'While' → logprob: -12.452651977539062

Token 341: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.000649529043585062
    2. '   ' → logprob: -7.500649452209473
    3. ' while' → logprob: -9.250649452209473
    4. '	while' → logprob: -14.750649452209473
    5. 'While' → logprob: -17.62565040588379
    6. '```' → logprob: -17.62565040588379
    7. '    
' → logprob: -17.87565040588379
    8. 'from' → logprob: -18.62565040588379
    9. '
' → logprob: -18.87565040588379
    10. 'wh' → logprob: -19.75065040588379

Token 342: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.00468109967187047
    2. 'queue' → logprob: -5.37968111038208
    3. ' len' → logprob: -10.379680633544922
    4. '(queue' → logprob: -10.754680633544922
    5. 'True' → logprob: -12.504680633544922
    6. ' True' → logprob: -13.004680633544922
    7. '	queue' → logprob: -14.004680633544922
    8. 'len' → logprob: -14.129680633544922
    9. ' ' → logprob: -15.504680633544922
    10. '   ' → logprob: -15.629680633544922

Token 343: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023250950500369072
    2. ':
' → logprob: -3.7732510566711426
    3. '):' → logprob: -13.273250579833984
    4. '):
' → logprob: -13.773250579833984
    5. ':
' → logprob: -13.773250579833984
    6. '   ' → logprob: -14.773250579833984
    7. ':

' → logprob: -15.273250579833984
    8. '>:' → logprob: -15.398250579833984
    9. ' and' → logprob: -15.523250579833984
    10. 'and' → logprob: -15.773250579833984

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002374223666265607
    2. 'b' → logprob: -6.127374172210693
    3. '   ' → logprob: -10.002374649047852
    4. 'building' → logprob: -10.252374649047852
    5. ' building' → logprob: -10.377374649047852
    6. ',' → logprob: -11.127374649047852
    7. '(build' → logprob: -11.377374649047852
    8. '(' → logprob: -11.502374649047852
    9. ' b' → logprob: -11.502374649047852
    10. 'build' → logprob: -12.002374649047852

Token 345: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.041142888367176056
    2. 'building' → logprob: -3.7911429405212402
    3. 'build' → logprob: -4.54114294052124
    4. ' b' → logprob: -5.41614294052124
    5. '       ' → logprob: -7.16614294052124
    6. ' building' → logprob: -7.29114294052124
    7. 'cur' → logprob: -7.79114294052124
    8. 'c' → logprob: -7.91614294052124
    9. '   ' → logprob: -8.791142463684082
    10. 'curr' → logprob: -10.166142463684082

Token 346: 'ld' (ID: 582)
  Prédit: 'uild'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uild' → logprob: -0.1522107571363449
    2. ',' → logprob: -2.0272107124328613
    3. 'ld' → logprob: -5.152210712432861
    4. 'u' → logprob: -6.402210712432861
    5. ',u' → logprob: -7.402210712432861
    6. '_,' → logprob: -7.902210712432861
    7. ',b' → logprob: -8.02721118927002
    8. 'uilder' → logprob: -9.02721118927002
    9. 'b' → logprob: -9.15221118927002
    10. 'UILD' → logprob: -9.65221118927002

Token 347: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5289718508720398
    2. 'uild' → logprob: -0.9039718508720398
    3. ',u' → logprob: -6.6539716720581055
    4. 'g' → logprob: -6.7789716720581055
    5. 'ld' → logprob: -6.9039716720581055
    6. 'u' → logprob: -6.9039716720581055
    7. '_,' → logprob: -7.5289716720581055
    8. ',_' → logprob: -8.903971672058105
    9. 'd' → logprob: -9.403971672058105
    10. 'ing' → logprob: -9.528971672058105

Token 348: 'loor' (ID: 5494)
  Prédit: 'loor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loor' → logprob: -0.11020942032337189
    2. ',' → logprob: -2.3602094650268555
    3. 'ld' → logprob: -5.4852094650268555
    4. 'l' → logprob: -6.3602094650268555
    5. 'lo' → logprob: -6.6102094650268555
    6. 'lr' → logprob: -7.1102094650268555
    7. ',l' → logprob: -7.3602094650268555
    8. 'oor' → logprob: -8.235209465026855
    9. 'or' → logprob: -8.610209465026855
    10. ',r' → logprob: -9.110209465026855

Token 349: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.014433911070227623
    2. ',' → logprob: -4.264433860778809
    3. ',m' → logprob: -8.514433860778809
    4. ',c' → logprob: -11.139433860778809
    5. ',num' → logprob: -11.514433860778809
    6. ',k' → logprob: -11.764433860778809
    7. ',x' → logprob: -12.389433860778809
    8. ' ,' → logprob: -12.514433860778809
    9. ',d' → logprob: -12.514433860778809
    10. ',current' → logprob: -12.514433860778809

Token 350: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -0.0013251224299892783
    2. 'ump' → logprob: -7.2513251304626465
    3. ',' → logprob: -7.6263251304626465
    4. 'm' → logprob: -10.251324653625488
    5. '   ' → logprob: -10.376324653625488
    6. 's' → logprob: -10.876324653625488
    7. 'mp' → logprob: -11.876324653625488
    8. ')' → logprob: -12.751324653625488
    9. 'u' → logprob: -12.876324653625488
    10. ' =' → logprob: -13.126324653625488

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16027794778347015
    2. '=' → logprob: -1.9102779626846313
    3. '   ' → logprob: -9.9102783203125
    4. ')' → logprob: -13.4102783203125
    5. ' ' → logprob: -14.0352783203125
    6. '    ' → logprob: -14.0352783203125
    7. '       ' → logprob: -14.9102783203125
    8. ')=' → logprob: -15.5352783203125
    9. '  ' → logprob: -16.1602783203125
    10. '=f' → logprob: -16.2852783203125

Token 352: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00671809446066618
    2. ' queue' → logprob: -5.006718158721924
    3. '   ' → logprob: -13.006717681884766
    4. '	queue' → logprob: -16.131717681884766
    5. '(queue' → logprob: -16.256717681884766
    6. ' ' → logprob: -16.506717681884766
    7. 'deque' → logprob: -16.631717681884766
    8. '       ' → logprob: -16.881717681884766
    9. 'que' → logprob: -17.131717681884766
    10. '.queue' → logprob: -17.631717681884766

Token 353: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2634967267513275
    2. ' =' → logprob: -1.88849675655365
    3. ')' → logprob: -3.2634966373443604
    4. '       ' → logprob: -4.0134968757629395
    5. ':' → logprob: -4.5134968757629395
    6. '   ' → logprob: -4.7634968757629395
    7. ',' → logprob: -7.1384968757629395
    8. ')=' → logprob: -7.5134968757629395
    9. ':
' → logprob: -8.013496398925781
    10. '    ' → logprob: -8.138496398925781

Token 354: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.04860202223062515
    2. 'op' → logprob: -3.0486021041870117
    3. 'opl' → logprob: -11.548602104187012
    4. 'ople' → logprob: -12.423602104187012
    5. 'p' → logprob: -15.798602104187012
    6. 'opup' → logprob: -15.798602104187012
    7. 'оп' → logprob: -15.923602104187012
    8. 'opt' → logprob: -16.173601150512695
    9. '   ' → logprob: -16.423601150512695
    10. 'o' → logprob: -16.798601150512695

Token 355: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005742399953305721
    2. '(' → logprob: -8.000574111938477
    3. '()
' → logprob: -8.500574111938477
    4. '(),' → logprob: -11.250574111938477
    5. ',' → logprob: -11.750574111938477
    6. ')' → logprob: -12.375574111938477
    7. '   ' → logprob: -13.125574111938477
    8. '();' → logprob: -13.375574111938477
    9. '()

' → logprob: -13.500574111938477
    10. '()`' → logprob: -13.750574111938477

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012543961638584733
    2. 'if' → logprob: -7.501254558563232
    3. '<|end|>' → logprob: -8.001254081726074
    4. ' if' → logprob: -8.251254081726074
    5. '        
' → logprob: -9.501254081726074
    6. '
' → logprob: -11.501254081726074
    7. ')' → logprob: -12.251254081726074
    8. '   ' → logprob: -12.251254081726074
    9. '<|end|>' → logprob: -12.751254081726074
    10. ',' → logprob: -12.876254081726074

Token 357: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00778548140078783
    2. '       ' → logprob: -4.882785320281982
    3. '#' (adapté à ' #') → logprob: -9.38278579711914
    4. ' if' → logprob: -9.63278579711914
    5. 'next' → logprob: -11.13278579711914
    6. '```' → logprob: -11.50778579711914
    7. 'for' → logprob: -13.25778579711914
    8. '   ' → logprob: -13.25778579711914
    9. 'If' → logprob: -14.75778579711914
    10. 'current' → logprob: -15.38278579711914

Token 358: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00033522743615321815
    2. '#' → logprob: -8.750335693359375
    3. '       ' → logprob: -9.000335693359375
    4. ' if' → logprob: -10.625335693359375
    5. 'If' → logprob: -11.375335693359375
    6. 'for' → logprob: -11.875335693359375
    7. 'next' → logprob: -12.000335693359375
    8. '   ' → logprob: -12.875335693359375
    9. 'current' → logprob: -14.375335693359375
    10. '
' → logprob: -15.125335693359375

Token 359: ' reached' (ID: 15237)
  Prédit: ' floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.0052470373921096325
    2. 'floor' → logprob: -5.255247116088867
    3. ' b' → logprob: -12.630247116088867
    4. '(f' → logprob: -12.880247116088867
    5. '_floor' → logprob: -13.380247116088867
    6. ' ' → logprob: -13.880247116088867
    7. ' ans' → logprob: -14.255247116088867
    8. 'b' → logprob: -14.505247116088867
    9. ' jumps' → logprob: -14.505247116088867
    10. 'Floor' → logprob: -14.630247116088867

Token 360: ' top' (ID: 2344)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.050910528749227524
    2. ' n' → logprob: -3.050910472869873
    3. 'floor' → logprob: -6.300910472869873
    4. ' floor' → logprob: -8.175910949707031
    5. '   ' → logprob: -8.550910949707031
    6. '(n' → logprob: -12.550910949707031
    7. ' ' → logprob: -12.550910949707031
    8. '	n' → logprob: -13.925910949707031
    9. '       ' → logprob: -14.550910949707031
    10. ' (' → logprob: -14.925910949707031

Token 361: ' floor' (ID: 8350)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2618122100830078
    2. ' (' → logprob: -1.6368122100830078
    3. '==' → logprob: -2.011812210083008
    4. 'floor' → logprob: -2.136812210083008
    5. '       ' → logprob: -2.261812210083008
    6. '(f' → logprob: -2.886812210083008
    7. ' and' → logprob: -3.136812210083008
    8. ' floor' → logprob: -3.636812210083008
    9. '(' → logprob: -4.386812210083008
    10. ':' → logprob: -4.636812210083008

Token 362: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4374207556247711
    2. ' and' → logprob: -1.4374207258224487
    3. ' (' → logprob: -3.3124208450317383
    4. ' or' → logprob: -4.062420845031738
    5. ' ==' → logprob: -4.187420845031738
    6. ' if' → logprob: -4.187420845031738
    7. '==' → logprob: -4.562420845031738
    8. ':' → logprob: -4.937420845031738
    9. '(f' → logprob: -5.062420845031738
    10. 'and' → logprob: -5.937420845031738

Token 363: ' answer' (ID: 6052)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47696009278297424
    2. 'if' → logprob: -1.6019600629806519
    3. ' if' → logprob: -1.7269600629806519
    4. '   ' → logprob: -13.476960182189941
    5. '           ' → logprob: -13.476960182189941
    6. '	if' → logprob: -13.726960182189941
    7. 'If' → logprob: -13.976960182189941
    8. '<|end|>' → logprob: -13.976960182189941
    9. ' ' → logprob: -14.601960182189941
    10. '```' → logprob: -15.476960182189941

Token 364: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3463621437549591
    2. '=' → logprob: -2.0963621139526367
    3. ' if' → logprob: -2.4713621139526367
    4. '       ' → logprob: -2.8463621139526367
    5. 'if' → logprob: -4.221362113952637
    6. '           ' → logprob: -4.596362113952637
    7. ':' → logprob: -6.596362113952637
    8. '=True' → logprob: -7.846362113952637
    9. 's' → logprob: -9.221362113952637
    10. '
' → logprob: -9.721362113952637

Token 365: ' jumps' (ID: 65613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.017301812767982483
    2. ' jumps' → logprob: -4.2673020362854
    3. ' j' → logprob: -6.8923020362854
    4. 'str' → logprob: -7.2673020362854
    5. 'floor' → logprob: -7.3923020362854
    6. ' floor' → logprob: -8.142301559448242
    7. 'b' → logprob: -8.517301559448242
    8. ' str' → logprob: -8.892301559448242
    9. '   ' → logprob: -9.142301559448242
    10. ' ' → logprob: -11.142301559448242

Token 366: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.166338137816638e-05
    2. ' if' → logprob: -11.125031471252441
    3. ',' → logprob: -12.125031471252441
    4. '<|end|>' → logprob: -12.250031471252441
    5. '           ' → logprob: -13.250031471252441
    6. ':' → logprob: -13.625031471252441
    7. ' and' → logprob: -14.000031471252441
    8. 'if' → logprob: -14.625031471252441
    9. '   ' → logprob: -15.125031471252441
    10. '	' → logprob: -15.250031471252441

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004044554370921105
    2. ' if' → logprob: -8.000404357910156
    3. 'if' → logprob: -9.625404357910156
    4. '   ' → logprob: -14.000404357910156
    5. '<|end|>' → logprob: -14.375404357910156
    6. '	' → logprob: -14.500404357910156
    7. '```' → logprob: -14.875404357910156
    8. '	if' → logprob: -15.250404357910156
    9. '	   ' → logprob: -15.875404357910156
    10. '           ' → logprob: -16.000404357910156

Token 368: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1659492403268814
    2. '       ' → logprob: -1.9159492254257202
    3. ' if' → logprob: -5.16594934463501
    4. '   ' → logprob: -14.665948867797852
    5. '	if' → logprob: -15.040948867797852
    6. 'If' → logprob: -15.790948867797852
    7. '```' → logprob: -17.04094886779785
    8. ' ' → logprob: -17.29094886779785
    9. '           ' → logprob: -18.29094886779785
    10. '        
' → logprob: -18.41594886779785

Token 369: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.5759412050247192
    2. 'floor' → logprob: -0.8259412050247192
    3. '   ' → logprob: -14.70094108581543
    4. 'flo' → logprob: -14.82594108581543
    5. '_floor' → logprob: -15.07594108581543
    6. 'n' → logprob: -15.57594108581543
    7. 'f' → logprob: -15.57594108581543
    8. '.floor' → logprob: -16.70094108581543
    9. 'j' → logprob: -16.82594108581543
    10. ' ' → logprob: -17.20094108581543

Token 370: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20142874121665955
    2. '==' → logprob: -1.701428771018982
    3. '>=' → logprob: -11.576428413391113
    4. ' >=' → logprob: -12.326428413391113
    5. ']==' → logprob: -14.576428413391113
    6. ')==' → logprob: -14.701428413391113
    7. '==(' → logprob: -14.951428413391113
    8. ' ' → logprob: -15.826428413391113
    9. '==
' → logprob: -15.826428413391113
    10. ' ' → logprob: -15.951428413391113

Token 371: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.32654589228332e-05
    2. '   ' → logprob: -10.000073432922363
    3. ' n' → logprob: -10.500073432922363
    4. ' ' → logprob: -16.000072479248047
    5. '	n' → logprob: -16.500072479248047
    6. '(n' → logprob: -16.750072479248047
    7. '       ' → logprob: -17.750072479248047
    8. '  ' → logprob: -19.000072479248047
    9. '     ' → logprob: -19.000072479248047
    10. '    ' → logprob: -19.250072479248047

Token 372: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019286326132714748
    2. ' -' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.126928329467773
    4. '   ' → logprob: -19.501928329467773
    5. '−' → logprob: -20.501928329467773
    6. '()-' → logprob: -20.751928329467773
    7. '–' → logprob: -21.751928329467773
    8. '1' → logprob: -22.626928329467773
    9. '  ' → logprob: -23.876928329467773
    10. ''-' → logprob: -24.001928329467773

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. '
' → logprob: -18.750003814697266
    5. '```' → logprob: -18.750003814697266
    6. '<|end|>' → logprob: -19.875003814697266
    7. '-' → logprob: -20.250003814697266
    8. '۱' → logprob: -20.250003814697266
    9. '  ' → logprob: -20.812503814697266
    10. '2' → logprob: -20.875003814697266

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14275504648685455
    2. ':
' → logprob: -2.0177550315856934
    3. '       ' → logprob: -10.892755508422852
    4. '):
' → logprob: -11.267755508422852
    5. ' and' → logprob: -11.517755508422852
    6. '           ' → logprob: -11.892755508422852
    7. '):' → logprob: -12.017755508422852
    8. ' or' → logprob: -12.017755508422852
    9. ':

' → logprob: -12.267755508422852
    10. ':return' → logprob: -12.392755508422852

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003377270477358252
    2. '
' → logprob: -9.000337600708008
    3. '       ' → logprob: -9.000337600708008
    4. '   ' → logprob: -10.375337600708008
    5. ':
' → logprob: -11.125337600708008
    6. '               ' → logprob: -11.250337600708008
    7. 'ans' → logprob: -11.375337600708008
    8. ':' → logprob: -12.000337600708008
    9. ' ans' → logprob: -12.750337600708008
    10. '<|end|>' → logprob: -13.000337600708008

Token 376: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0009465920156799257
    2. '
' → logprob: -7.750946521759033
    3. '           ' → logprob: -8.500946998596191
    4. ' ans' → logprob: -8.500946998596191
    5. '   ' → logprob: -9.750946998596191
    6. '       ' → logprob: -10.000946998596191
    7. '	ans' → logprob: -13.000946998596191
    8. 'answer' → logprob: -13.125946998596191
    9. 'print' → logprob: -14.375946998596191
    10. '_ans' → logprob: -14.750946998596191

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192928314208984
    2. '=' → logprob: -1.5019292831420898
    3. ' =
' → logprob: -16.501930236816406
    4. ' ' → logprob: -16.876930236816406
    5. '=j' → logprob: -17.751930236816406
    6. '=
' → logprob: -18.126930236816406
    7. '＝' → logprob: -18.126930236816406
    8. ')' → logprob: -18.501930236816406
    9. '=f' → logprob: -18.501930236816406
    10. '   ' → logprob: -18.626930236816406

Token 378: ' jumps' (ID: 65613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.056047722697257996
    2. ' jumps' → logprob: -2.9310476779937744
    3. 'str' → logprob: -7.4310479164123535
    4. ' j' → logprob: -7.9310479164123535
    5. ' str' → logprob: -9.056047439575195
    6. 'jump' → logprob: -10.181047439575195
    7. '   ' → logprob: -10.306047439575195
    8. ' ' → logprob: -11.681047439575195
    9. '	j' → logprob: -11.681047439575195
    10. '$j' → logprob: -13.806047439575195

Token 379: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.061054359131958e-06
    2. '               ' → logprob: -12.750007629394531
    3. '       ' → logprob: -13.250007629394531
    4. '		' → logprob: -13.375007629394531
    5. '
' → logprob: -14.000007629394531
    6. '                   ' → logprob: -15.125007629394531
    7. '            
' → logprob: -15.750007629394531
    8. '   ' → logprob: -16.12500762939453
    9. '	       ' → logprob: -16.12500762939453
    10. ',' → logprob: -16.37500762939453

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.4849443838757e-06
    2. '       ' → logprob: -13.000004768371582
    3. '		' → logprob: -14.250004768371582
    4. '               ' → logprob: -14.375004768371582
    5. '   ' → logprob: -15.125004768371582
    6. '	       ' → logprob: -15.500004768371582
    7. '                   ' → logprob: -16.125003814697266
    8. '
' → logprob: -16.625003814697266
    9. '<|end|>' → logprob: -17.000003814697266
    10. '            
' → logprob: -17.625003814697266

Token 381: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015502138994634151
    2. 'break' (adapté à ' break') → logprob: -6.501550197601318
    3. '       ' → logprob: -10.251550674438477
    4. ' break' → logprob: -11.501550674438477
    5. '   ' → logprob: -13.751550674438477
    6. '               ' → logprob: -14.626550674438477
    7. '		' → logprob: -14.876550674438477
    8. '	break' → logprob: -15.251550674438477
    9. 'print' → logprob: -16.251550674438477
    10. '
' → logprob: -16.376550674438477

Token 382: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005296365823596716
    2. '
' → logprob: -5.755296230316162
    3. '        
' → logprob: -6.505296230316162
    4. '<|end|>' → logprob: -7.505296230316162
    5. '    
' → logprob: -11.50529670715332
    6. '  
' → logprob: -11.63029670715332
    7. '
' → logprob: -11.88029670715332
    8. '<|end|>' → logprob: -12.13029670715332
    9. '            
' → logprob: -12.38029670715332
    10. '   ' → logprob: -12.50529670715332

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00029995047952979803
    2. 'next' → logprob: -9.125300407409668
    3. '#' → logprob: -9.750300407409668
    4. '        
' → logprob: -10.125300407409668
    5. '
' → logprob: -10.625300407409668
    6. ' next' → logprob: -10.875300407409668
    7. '```' → logprob: -11.125300407409668
    8. 'if' → logprob: -11.250300407409668
    9. '   ' → logprob: -12.500300407409668
    10. '_next' → logprob: -12.750300407409668

Token 384: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7001476287841797
    2. '       ' → logprob: -0.7001476287841797
    3. 'next' → logprob: -5.95014762878418
    4. 'if' → logprob: -6.70014762878418
    5. '   ' → logprob: -6.70014762878418
    6. '```' → logprob: -7.20014762878418
    7. 'for' → logprob: -7.32514762878418
    8. ' #' → logprob: -8.57514762878418
    9. '        
' → logprob: -8.95014762878418
    10. 'current' → logprob: -10.20014762878418

Token 385: ' jump' (ID: 13843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.004065101966261864
    2. 'for' → logprob: -6.504065036773682
    3. '       ' → logprob: -7.004065036773682
    4. 'if' → logprob: -7.379065036773682
    5. 'next' → logprob: -7.379065036773682
    6. '   ' → logprob: -8.37906551361084
    7. ' #' → logprob: -10.00406551361084
    8. 'floor' → logprob: -10.75406551361084
    9. 'steps' → logprob: -11.12906551361084
    10. '        
' → logprob: -11.25406551361084

Token 386: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9267889261245728
    2. '_floor' → logprob: -1.4267889261245728
    3. '   ' → logprob: -2.676788806915283
    4. ' =' → logprob: -3.051788806915283
    5. 'floor' → logprob: -3.051788806915283
    6. '_length' → logprob: -3.176788806915283
    7. '+' → logprob: -3.926788806915283
    8. 'to' → logprob: -4.176788806915283
    9. 'from' → logprob: -4.176788806915283
    10. '_up' → logprob: -4.301788806915283

Token 387: ' the' (ID: 290)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.013982260599732399
    2. 'min' → logprob: -4.63898229598999
    3. 'next' → logprob: -5.76398229598999
    4. ' floor' → logprob: -7.88898229598999
    5. 'b' → logprob: -8.263981819152832
    6. 'max' → logprob: -9.013981819152832
    7. 'the' → logprob: -10.013981819152832
    8. 'lad' → logprob: -10.138981819152832
    9. 'adj' → logprob: -10.388981819152832
    10. 'new' → logprob: -10.513981819152832

Token 388: ' opposite' (ID: 23821)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.04741331562399864
    2. 'same' → logprob: -3.7974133491516113
    3. 'next' → logprob: -4.297413349151611
    4. ' floor' → logprob: -5.672413349151611
    5. 'top' → logprob: -5.797413349151611
    6. 'other' → logprob: -6.797413349151611
    7. 'min' → logprob: -7.047413349151611
    8. 'b' → logprob: -7.047413349151611
    9. 'right' → logprob: -8.672412872314453
    10. 'current' → logprob: -8.797412872314453

Token 389: ' building' (ID: 6282)
  Prédit: 'building'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'building' → logprob: -0.6948814988136292
    2. ' building' → logprob: -0.8198814988136292
    3. 'b' → logprob: -2.8198814392089844
    4. '_build' → logprob: -8.194881439208984
    5. 'build' → logprob: -8.319881439208984
    6. ' b' → logprob: -8.944881439208984
    7. '   ' → logprob: -10.819881439208984
    8. '_b' → logprob: -10.944881439208984
    9. ' ' → logprob: -10.944881439208984
    10. 'floor' → logprob: -11.194881439208984

Token 390: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04750358313322067
    2. ',' → logprob: -3.5475034713745117
    3. ' if' → logprob: -5.422503471374512
    4. ' next' → logprob: -5.547503471374512
    5. ' =' → logprob: -5.797503471374512
    6. 'next' → logprob: -6.422503471374512
    7. ' ,' → logprob: -6.922503471374512
    8. 'b' → logprob: -7.672503471374512
    9. '=' → logprob: -8.172503471374512
    10. ' other' → logprob: -8.422503471374512

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002746742684394121
    2. ',' → logprob: -6.25274658203125
    3. ' next' → logprob: -7.62774658203125
    4. ' at' → logprob: -9.12774658203125
    5. 'next' → logprob: -9.75274658203125
    6. ' if' → logprob: -10.00274658203125
    7. ' ,' → logprob: -10.50274658203125
    8. ' =' → logprob: -11.37774658203125
    9. '(next' → logprob: -11.75274658203125
    10. ' (' → logprob: -11.87774658203125

Token 392: ' next' (ID: 2613)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.890821099281311
    2. 'opp' → logprob: -1.640821099281311
    3. 'other' → logprob: -1.765821099281311
    4. ' opp' → logprob: -2.0158209800720215
    5. ' other' → logprob: -3.3908209800720215
    6. 'ob' → logprob: -3.3908209800720215
    7. ' op' → logprob: -5.5158209800720215
    8. ' opposite' → logprob: -5.5158209800720215
    9. 'nb' → logprob: -5.6408209800720215
    10. 'obs' → logprob: -5.8908209800720215

Token 393: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12349292635917664
    2. '_build' → logprob: -3.123492956161499
    3. '_floor' → logprob: -3.123492956161499
    4. 'b' → logprob: -3.623492956161499
    5. 'building' → logprob: -7.74849271774292
    6. '_' → logprob: -7.99849271774292
    7. 'floor' → logprob: -8.623493194580078
    8. '=' → logprob: -9.123493194580078
    9. 'build' → logprob: -9.248493194580078
    10. '_f' → logprob: -9.248493194580078

Token 394: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -0.01660960726439953
    2. ' =' → logprob: -4.5166096687316895
    3. '=' → logprob: -5.7666096687316895
    4. 'uild' → logprob: -6.1416096687316895
    5. 'uld' → logprob: -9.141609191894531
    6. ',' → logprob: -9.891609191894531
    7. '_ld' → logprob: -10.766609191894531
    8. 'ild' → logprob: -11.016609191894531
    9. '   ' → logprob: -11.141609191894531
    10. 'b' → logprob: -11.766609191894531

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269301027059555
    2. ' =' → logprob: -2.126929998397827
    3. ')' → logprob: -13.626930236816406
    4. ',' → logprob: -14.501930236816406
    5. ')=' → logprob: -17.501930236816406
    6. '=int' → logprob: -17.501930236816406
    7. '＝' → logprob: -17.501930236816406
    8. '```' → logprob: -17.626930236816406
    9. '=b' → logprob: -17.751930236816406
    10. 'b' → logprob: -18.001930236816406

Token 396: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -10.875020980834961
    3. '(' → logprob: -13.250020980834961
    4. 'b' → logprob: -15.375020980834961
    5. '   ' → logprob: -15.625020980834961
    6. '0' → logprob: -18.37502098083496
    7. '(b' → logprob: -18.75002098083496
    8. ' (' → logprob: -18.87502098083496
    9. '```' → logprob: -18.87502098083496
    10. '
' → logprob: -19.37502098083496

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.375005722045898
    4. 'b' → logprob: -15.750005722045898
    5. '   ' → logprob: -17.1250057220459
    6. '0' → logprob: -17.1250057220459
    7. '(b' → logprob: -17.6250057220459
    8. '
' → logprob: -19.8750057220459
    9. ' (' → logprob: -20.0000057220459
    10. '`' → logprob: -20.1250057220459

Token 398: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20215892791748047
    2. ' -' → logprob: -1.7021589279174805
    3. '-b' → logprob: -7.2021589279174805
    4. 'b' → logprob: -15.45215892791748
    5. '−' → logprob: -16.452159881591797
    6. '-
' → logprob: -17.452159881591797
    7. '   ' → logprob: -17.452159881591797
    8. ' if' → logprob: -17.452159881591797
    9. '-B' → logprob: -17.702159881591797
    10. '
' → logprob: -17.827159881591797

Token 399: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.935296834039036e-06
    2. ' b' → logprob: -12.75000286102295
    3. '	b' → logprob: -19.875003814697266
    4. '   ' → logprob: -21.125003814697266
    5. '_b' → logprob: -21.625003814697266
    6. ')b' → logprob: -22.000003814697266
    7. ' ' → logprob: -22.375003814697266
    8. '```' → logprob: -22.750003814697266
    9. '[b' → logprob: -23.250003814697266
    10. '\b' → logprob: -23.875003814697266

Token 400: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -2.1008713702030946e-06
    2. 'd' → logprob: -13.875001907348633
    3. 'b' → logprob: -14.000001907348633
    4. '_ld' → logprob: -15.625001907348633
    5. '_b' → logprob: -17.000001907348633
    6. 'ldr' → logprob: -18.000001907348633
    7. '(ld' → logprob: -18.250001907348633
    8. 'nd' → logprob: -18.375001907348633
    9. 'l' → logprob: -18.750001907348633
    10. ' ld' → logprob: -18.750001907348633

Token 401: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08276642858982086
    2. 'next' → logprob: -2.707766532897949
    3. ' next' → logprob: -5.332766532897949
    4. '
' → logprob: -5.832766532897949
    5. ',next' → logprob: -6.707766532897949
    6. ',' → logprob: -6.832766532897949
    7. '[next' → logprob: -6.832766532897949
    8. 'if' → logprob: -8.08276653289795
    9. 'floor' → logprob: -8.08276653289795
    10. '#' → logprob: -8.33276653289795

Token 402: '       ' (ID: 309)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.08251739293336868
    2. '       ' → logprob: -2.832517385482788
    3. 'if' → logprob: -4.957517623901367
    4. ' next' → logprob: -5.332517623901367
    5. '
' → logprob: -6.082517623901367
    6. ',' → logprob: -6.457517623901367
    7. ',next' → logprob: -7.082517623901367
    8. '[next' → logprob: -7.207517623901367
    9. '   ' → logprob: -7.332517623901367
    10. 'floor' → logprob: -7.457517623901367

Token 403: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7272801399230957
    2. '#' (adapté à ' #') → logprob: -1.3522801399230957
    3. 'next' → logprob: -1.4772801399230957
    4. 'for' → logprob: -3.9772801399230957
    5. 'floor' → logprob: -4.727280139923096
    6. 'top' → logprob: -6.352280139923096
    7. '   ' → logprob: -9.102279663085938
    8. 'new' → logprob: -9.602279663085938
    9. 'jump' → logprob: -9.602279663085938
    10. '       ' → logprob: -9.977279663085938

Token 404: ' candidate' (ID: 17098)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.442111611366272
    2. 'if' → logprob: -1.567111611366272
    3. 'for' → logprob: -2.1921114921569824
    4. 'next' → logprob: -3.8171114921569824
    5. 'floor' → logprob: -5.067111492156982
    6. 'top' → logprob: -5.192111492156982
    7. 'curr' → logprob: -7.567111492156982
    8. 'current' → logprob: -7.567111492156982
    9. 'max' → logprob: -7.692111492156982
    10. 'jump' → logprob: -7.817111492156982

Token 405: ' floors' (ID: 30181)
  Prédit: 'flo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flo' → logprob: -0.19538506865501404
    2. '_f' → logprob: -2.445384979248047
    3. 'floor' → logprob: -3.570384979248047
    4. '_floor' → logprob: -3.695384979248047
    5. ' floors' → logprob: -4.070384979248047
    6. 's' → logprob: -4.820384979248047
    7. '=' → logprob: -5.945384979248047
    8. ' =' → logprob: -5.945384979248047
    9. 'Flo' → logprob: -6.195384979248047
    10. 'for' → logprob: -6.945384979248047

Token 406: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01891104131937027
    2. ' =' → logprob: -4.018910884857178
    3. 'for' → logprob: -7.393910884857178
    4. ' for' → logprob: -10.393911361694336
    5. '=
' → logprob: -10.643911361694336
    6. '       ' → logprob: -11.018911361694336
    7. 'floor' → logprob: -11.518911361694336
    8. 'from' → logprob: -11.768911361694336
    9. '=[]
' → logprob: -11.893911361694336
    10. '=[]' → logprob: -11.893911361694336

Token 407: ' same' (ID: 2684)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[f' → logprob: -1.3639670610427856
    2. 'for' → logprob: -1.4889670610427856
    3. 'floor' → logprob: -1.9889670610427856
    4. '[next' → logprob: -2.488966941833496
    5. '[top' → logprob: -2.488966941833496
    6. '[]
' → logprob: -2.988966941833496
    7. '[j' → logprob: -3.363966941833496
    8. '[' → logprob: -3.863966941833496
    9. 'next' → logprob: -4.363966941833496
    10. '[c' → logprob: -4.363966941833496

Token 408: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.1397296041250229
    2. ',' → logprob: -2.1397294998168945
    3. 'flo' → logprob: -5.2647294998168945
    4. '_floor' → logprob: -5.6397294998168945
    5. ' floor' → logprob: -6.6397294998168945
    6. 'and' → logprob: -7.3897294998168945
    7. ' ,' → logprob: -7.8897294998168945
    8. 'level' → logprob: -8.639729499816895
    9. ' and' → logprob: -8.639729499816895
    10. '   ' → logprob: -8.764729499816895

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05918032303452492
    2. '       ' → logprob: -3.05918025970459
    3. ',next' → logprob: -5.18418025970459
    4. ' ,' → logprob: -6.30918025970459
    5. ' and' → logprob: -6.68418025970459
    6. 'and' → logprob: -7.18418025970459
    7. ',
' → logprob: -8.30918025970459
    8. 'next' → logprob: -8.68418025970459
    9. ' next' → logprob: -9.30918025970459
    10. '           ' → logprob: -9.80918025970459

Token 410: ' +' (ID: 659)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9470345973968506
    2. 'lad' → logprob: -1.0720345973968506
    3. 'top' → logprob: -1.9470345973968506
    4. ' ladder' → logprob: -3.1970345973968506
    5. 'same' → logprob: -3.9470345973968506
    6. 'and' → logprob: -4.44703483581543
    7. 'floor' → logprob: -4.44703483581543
    8. 'b' → logprob: -4.44703483581543
    9. 'next' → logprob: -5.32203483581543
    10. 'op' → logprob: -5.32203483581543

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00047094907495193183
    2. 'a' → logprob: -7.875471115112305
    3. ' ' → logprob: -10.000471115112305
    4. '0' → logprob: -11.000471115112305
    5. '-' → logprob: -12.625471115112305
    6. '
' → logprob: -12.625471115112305
    7. '(a' → logprob: -12.875471115112305
    8. 'next' → logprob: -13.000471115112305
    9. '(' → logprob: -13.125471115112305
    10. '+' → logprob: -13.250471115112305

Token 412: ' floor' (ID: 8350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09069402515888214
    2. 'and' → logprob: -2.965693950653076
    3. 'floor' → logprob: -3.590693950653076
    4. ' and' → logprob: -5.965693950653076
    5. ',next' → logprob: -6.965693950653076
    6. '       ' → logprob: -7.215693950653076
    7. ' floor' → logprob: -7.590693950653076
    8. '   ' → logprob: -7.840693950653076
    9. ')' → logprob: -7.840693950653076
    10. 'or' → logprob: -7.965693950653076

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3548838496208191
    2. '       ' → logprob: -1.2298839092254639
    3. ' and' → logprob: -5.729883670806885
    4. 'and' → logprob: -5.979883670806885
    5. ' ,' → logprob: -8.354884147644043
    6. 'for' → logprob: -9.354884147644043
    7. ',
' → logprob: -9.604884147644043
    8. ',next' → logprob: -9.729884147644043
    9. '<|end|>' → logprob: -10.104884147644043
    10. ' for' → logprob: -10.604884147644043

Token 414: ' +' (ID: 659)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.8182750344276428
    2. '+' → logprob: -0.9432750344276428
    3. ' floor' → logprob: -2.318274974822998
    4. '-' → logprob: -3.568274974822998
    5. 'and' → logprob: -4.443274974822998
    6. 'if' → logprob: -5.068274974822998
    7. ' +' → logprob: -5.193274974822998
    8. '#' → logprob: -5.443274974822998
    9. ' and' → logprob: -5.818274974822998
    10. '       ' → logprob: -5.943274974822998

Token 415: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13744688034057617
    2. '1' → logprob: -2.637446880340576
    3. '-' → logprob: -2.887446880340576
    4. '+' → logprob: -8.387447357177734
    5. ' ' → logprob: -8.387447357177734
    6. '0' → logprob: -8.637447357177734
    7. '(-' → logprob: -9.262447357177734
    8. 'floor' → logprob: -9.262447357177734
    9. 'jump' → logprob: -9.887447357177734
    10. '(' → logprob: -9.887447357177734

Token 416: ' floors' (ID: 30181)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7877712845802307
    2. 'floor' → logprob: -0.9127712845802307
    3. ' floor' → logprob: -2.037771224975586
    4. ' ,' → logprob: -5.287771224975586
    5. '_floor' → logprob: -5.912771224975586
    6. 'flo' → logprob: -5.912771224975586
    7. '.floor' → logprob: -7.412771224975586
    8. '   ' → logprob: -7.537771224975586
    9. '       ' → logprob: -7.787771224975586
    10. ',f' → logprob: -8.287771224975586

Token 417: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031512193381786346
    2. 'for' → logprob: -6.6281514167785645
    3. ',' → logprob: -6.7531514167785645
    4. ' for' → logprob: -7.3781514167785645
    5. '   ' → logprob: -11.878150939941406
    6. '        
' → logprob: -12.128150939941406
    7. '<|end|>' → logprob: -12.128150939941406
    8. 'next' → logprob: -13.253150939941406
    9. ')' → logprob: -13.503150939941406
    10. '
' → logprob: -13.628150939941406

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056537059135735035
    2. 'for' → logprob: -5.3806538581848145
    3. ' for' → logprob: -6.8806538581848145
    4. ',' → logprob: -13.130653381347656
    5. '   ' → logprob: -13.255653381347656
    6. '	for' → logprob: -14.880653381347656
    7. '        
' → logprob: -14.880653381347656
    8. '<|end|>' → logprob: -15.130653381347656
    9. '```' → logprob: -15.630653381347656
    10. '           ' → logprob: -16.130653381347656

Token 419: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005288311280310154
    2. '       ' → logprob: -5.255288124084473
    3. ' for' → logprob: -9.880288124084473
    4. '   ' → logprob: -13.505288124084473
    5. '	for' → logprob: -13.630288124084473
    6. 'c' → logprob: -14.380288124084473
    7. '```' → logprob: -16.75528907775879
    8. 'possible' → logprob: -17.63028907775879
    9. 'candidate' → logprob: -17.63028907775879
    10. '[' → logprob: -17.88028907775879

Token 420: ' df' (ID: 13742)
  Prédit: ' df'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' df' → logprob: -0.5563029050827026
    2. 'df' → logprob: -1.3063029050827026
    3. ' delta' → logprob: -3.306303024291992
    4. 'delta' → logprob: -3.556303024291992
    5. ' diff' → logprob: -3.931303024291992
    6. ' step' → logprob: -3.931303024291992
    7. ' offset' → logprob: -4.306303024291992
    8. 'step' → logprob: -4.806303024291992
    9. 'offset' → logprob: -5.181303024291992
    10. ' jump' → logprob: -5.306303024291992

Token 421: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005583931924775243
    2. 'in' → logprob: -7.500558376312256
    3. 'd' → logprob: -12.750558853149414
    4. 'f' → logprob: -14.500558853149414
    5. ' ' → logprob: -14.625558853149414
    6. ')' → logprob: -15.250558853149414
    7. 't' → logprob: -15.375558853149414
    8. 'range' → logprob: -15.500558853149414
    9. 's' → logprob: -16.250558853149414
    10. 'loor' → logprob: -16.375558853149414

Token 422: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.24949321150779724
    2. 'range' → logprob: -1.7494932413101196
    3. '[' → logprob: -3.12449312210083
    4. ' [' → logprob: -5.87449312210083
    5. '(' → logprob: -9.249493598937988
    6. '0' → logprob: -10.499493598937988
    7. ' (' → logprob: -10.624493598937988
    8. ' ' → logprob: -10.999493598937988
    9. '(range' → logprob: -11.999493598937988
    10. '   ' → logprob: -13.624493598937988

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.933173426659778e-05
    2. ' ' → logprob: -10.000069618225098
    3. '1' → logprob: -10.875069618225098
    4. '   ' → logprob: -12.750069618225098
    5. '-' → logprob: -13.625069618225098
    6. '+' → logprob: -15.250069618225098
    7. '  ' → logprob: -15.500069618225098
    8. 'd' → logprob: -16.81256866455078
    9. '    ' → logprob: -16.81256866455078
    10. '       ' → logprob: -17.31256866455078

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00524454889819026
    2. ' ,' → logprob: -5.255244731903076
    3. ',
' → logprob: -11.880244255065918
    4. ',+' → logprob: -13.005244255065918
    5. '   ' → logprob: -14.005244255065918
    6. '1' → logprob: -14.630244255065918
    7. ' ,
' → logprob: -16.755245208740234
    8. ' ' → logprob: -16.880245208740234
    9. '    ' → logprob: -17.005245208740234
    10. '  ' → logprob: -17.255245208740234

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002980432182084769
    2. ' ' → logprob: -8.125298500061035
    3. '+' → logprob: -13.750298500061035
    4. '   ' → logprob: -13.875298500061035
    5. '  ' → logprob: -16.87529754638672
    6. ' +' → logprob: -17.50029754638672
    7. '    ' → logprob: -18.50029754638672
    8. '       ' → logprob: -18.62529754638672
    9. ' ' → logprob: -18.75029754638672
    10. '     ' → logprob: -19.37529754638672

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3915141355246305e-05
    2. ' ,' → logprob: -11.00002384185791
    3. '2' → logprob: -11.87502384185791
    4. ' ' → logprob: -17.125024795532227
    5. '   ' → logprob: -17.125024795532227
    6. ',
' → logprob: -17.125024795532227
    7. '    ' → logprob: -19.125024795532227
    8. '       ' → logprob: -19.125024795532227
    9. ']' → logprob: -19.250024795532227
    10. '  ' → logprob: -19.375024795532227

Token 427: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.706686690449715e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.000066757202148
    4. '  ' → logprob: -16.25006675720215
    5. '    ' → logprob: -18.50006675720215
    6. '       ' → logprob: -18.56256675720215
    7. '２' → logprob: -18.62506675720215
    8. '```' → logprob: -19.06256675720215
    9. ',' → logprob: -19.18756675720215
    10. '
' → logprob: -19.43756675720215

Token 428: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.387755423784256
    2. ']:' → logprob: -1.1377553939819336
    3. ']:
' → logprob: -7.512755393981934
    4. ']' → logprob: -8.387755393981934
    5. ']:

' → logprob: -10.137755393981934
    6. '   ' → logprob: -10.262755393981934
    7. '       ' → logprob: -10.762755393981934
    8. ' ]' → logprob: -11.512755393981934
    9. ']:


' → logprob: -13.262755393981934
    10. ',' → logprob: -14.387755393981934

Token 429: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004341261519584805
    2. 'floor' → logprob: -8.750433921813965
    3. 'next' → logprob: -10.000433921813965
    4. ' floor' → logprob: -10.375433921813965
    5. ' next' → logprob: -10.375433921813965
    6. '
' → logprob: -10.375433921813965
    7. ',' → logprob: -10.625433921813965
    8. '            
' → logprob: -10.750433921813965
    9. '       ' → logprob: -11.250433921813965
    10. '   ' → logprob: -11.250433921813965

Token 430: ' nf' (ID: 89636)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2298400104045868
    2. 'next' → logprob: -2.354840040206909
    3. ' next' → logprob: -3.229840040206909
    4. 'nf' (adapté à ' nf') → logprob: -3.854840040206909
    5. 'new' → logprob: -3.979840040206909
    6. ' new' → logprob: -4.35483980178833
    7. 'floor' → logprob: -5.22983980178833
    8. ' nf' → logprob: -5.22983980178833
    9. 'n' → logprob: -5.47983980178833
    10. ' floor' → logprob: -7.10483980178833

Token 431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023267146199941635
    2. ' =' → logprob: -3.7732670307159424
    3. 'loor' → logprob: -10.898266792297363
    4. '=f' → logprob: -13.023266792297363
    5. 'f' → logprob: -15.273266792297363
    6. 'floor' → logprob: -15.523266792297363
    7. '=
' → logprob: -15.648266792297363
    8. '```' → logprob: -17.02326774597168
    9. '_floor' → logprob: -17.02326774597168
    10. ' ' → logprob: -17.14826774597168

Token 432: ' floor' (ID: 8350)
  Prédit: ' floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floor' → logprob: -0.47407880425453186
    2. 'floor' → logprob: -0.9740787744522095
    3. ' ' → logprob: -14.349079132080078
    4. '   ' → logprob: -14.974079132080078
    5. 'flo' → logprob: -15.224079132080078
    6. 'f' → logprob: -15.474079132080078
    7. '  ' → logprob: -16.599079132080078
    8. '_floor' → logprob: -16.849079132080078
    9. '.floor' → logprob: -17.099079132080078
    10. '    ' → logprob: -17.349079132080078

Token 433: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132622241973877
    2. '+' → logprob: -1.3132622241973877
    3. '+
' → logprob: -16.063262939453125
    4. '+n' → logprob: -16.813262939453125
    5. ' +
' → logprob: -17.063262939453125
    6. '   ' → logprob: -17.313262939453125
    7. ' ' → logprob: -17.313262939453125
    8. ' ' → logprob: -17.813262939453125
    9. '+d' → logprob: -17.813262939453125
    10. '        ' → logprob: -17.813262939453125

Token 434: ' df' (ID: 13742)
  Prédit: 'df'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'df' → logprob: -7.493430894101039e-05
    2. ' df' → logprob: -9.500075340270996
    3. '(df' → logprob: -17.75007438659668
    4. 'dfs' → logprob: -19.00007438659668
    5. '	df' → logprob: -19.25007438659668
    6. '[df' → logprob: -19.37507438659668
    7. '   ' → logprob: -20.37507438659668
    8. '_df' → logprob: -20.50007438659668
    9. 'dfa' → logprob: -21.25007438659668
    10. '1' → logprob: -21.25007438659668

Token 435: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017994173686020076
    2. '
' → logprob: -9.1251802444458
    3. ' if' → logprob: -10.0001802444458
    4. ' and' → logprob: -12.2501802444458
    5. 'if' → logprob: -12.3751802444458
    6. '          ' → logprob: -12.8751802444458
    7. '            
' → logprob: -13.0001802444458
    8. '       ' → logprob: -13.1251802444458
    9. '<|end|>' → logprob: -13.5001802444458
    10. '   ' → logprob: -13.7501802444458

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00876831915229559
    2. ' if' → logprob: -4.758768081665039
    3. 'if' → logprob: -8.883768081665039
    4. '       ' → logprob: -12.883768081665039
    5. ' and' → logprob: -13.008768081665039
    6. '   ' → logprob: -13.133768081665039
    7. '<|end|>' → logprob: -13.133768081665039
    8. '		' → logprob: -13.508768081665039
    9. '
' → logprob: -14.258768081665039
    10. '               ' → logprob: -14.383768081665039

Token 437: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06338047236204147
    2. ' if' → logprob: -2.813380479812622
    3. '           ' → logprob: -6.563380241394043
    4. '               ' → logprob: -15.188380241394043
    5. '       ' → logprob: -15.938380241394043
    6. '          ' → logprob: -16.31338119506836
    7. '	if' → logprob: -16.81338119506836
    8. '   ' → logprob: -17.06338119506836
    9. '            ' → logprob: -17.06338119506836
    10. '                   ' → logprob: -17.06338119506836

Token 438: ' nf' (ID: 89636)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.5762609243392944
    2. ' nf' → logprob: -0.8262609243392944
    3. '0' → logprob: -8.326260566711426
    4. 'n' → logprob: -9.826260566711426
    5. ' ' → logprob: -11.326260566711426
    6. '_nf' → logprob: -11.951260566711426
    7. '   ' → logprob: -13.451260566711426
    8. ' n' → logprob: -13.701260566711426
    9. '<n' → logprob: -14.326260566711426
    10. '                   ' → logprob: -14.451260566711426

Token 439: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.041691780090332
    2. '<n' → logprob: -1.041691780090332
    3. ' <' → logprob: -1.291691780090332
    4. '>=' → logprob: -4.416691780090332
    5. ' >=' → logprob: -4.916691780090332
    6. '<len' → logprob: -10.416691780090332
    7. '<num' → logprob: -11.041691780090332
    8. '<N' → logprob: -11.416691780090332
    9. '<size' → logprob: -11.541691780090332
    10. 'n' → logprob: -13.041691780090332

Token 440: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0206720617134124e-05
    2. ' n' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.875009536743164
    4. '	n' → logprob: -18.625009536743164
    5. '0' → logprob: -18.875009536743164
    6. '           ' → logprob: -19.750009536743164
    7. '       ' → logprob: -20.250009536743164
    8. '_n' → logprob: -21.750009536743164
    9. ')n' → logprob: -22.125009536743164
    10. 'n't' → logprob: -22.500009536743164

Token 441: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23181995749473572
    2. ':
' → logprob: -2.1068198680877686
    3. ' or' → logprob: -2.6068198680877686
    4. '           ' → logprob: -4.981820106506348
    5. '               ' → logprob: -5.606820106506348
    6. '       ' → logprob: -7.731820106506348
    7. 'or' → logprob: -7.731820106506348
    8. '                       ' → logprob: -10.731820106506348
    9. ':return' → logprob: -10.731820106506348
    10. '                   ' → logprob: -10.856820106506348

Token 442: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017447966383770108
    2. 'continue' → logprob: -6.376744747161865
    3. ' continue' → logprob: -10.251745223999023
    4. '	continue' → logprob: -12.876745223999023
    5. '                   ' → logprob: -13.251745223999023
    6. '   ' → logprob: -13.626745223999023
    7. '           ' → logprob: -14.376745223999023
    8. '	           ' → logprob: -15.001745223999023
    9. '			' → logprob: -15.251745223999023
    10. '       ' → logprob: -15.501745223999023

Token 443: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.22451457381248474
    2. '               ' → logprob: -1.7245146036148071
    3. 'break' → logprob: -4.724514484405518
    4. '                   ' → logprob: -4.974514484405518
    5. ' continue' → logprob: -4.974514484405518
    6. '   ' → logprob: -9.474514961242676
    7. ' break' → logprob: -9.974514961242676
    8. '	continue' → logprob: -12.099514961242676
    9. '           ' → logprob: -12.474514961242676
    10. '                       ' → logprob: -12.974514961242676

Token 444: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026826607063412666
    2. '            
' → logprob: -6.377682685852051
    3. '
' → logprob: -7.002682685852051
    4. 'if' → logprob: -10.87768268585205
    5. ' if' → logprob: -11.25268268585205
    6. '    
' → logprob: -11.87768268585205
    7. '```' → logprob: -12.00268268585205
    8. '<|end|>' → logprob: -12.75268268585205
    9. '               ' → logprob: -12.87768268585205
    10. '           
' → logprob: -12.87768268585205

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011999329581158236
    2. 'if' → logprob: -9.625120162963867
    3. '            
' → logprob: -10.125120162963867
    4. ' if' → logprob: -11.750120162963867
    5. '```' → logprob: -12.750120162963867
    6. '
' → logprob: -13.500120162963867
    7. '<|end|>' → logprob: -14.500120162963867
    8. '          ' → logprob: -15.375120162963867
    9. '               ' → logprob: -15.625120162963867
    10. '    
' → logprob: -15.875120162963867

Token 446: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.493781715631485
    2. 'if' → logprob: -1.6187816858291626
    3. 'next' → logprob: -2.368781805038452
    4. '#' (adapté à ' #') → logprob: -2.493781805038452
    5. 'build' → logprob: -5.118781566619873
    6. 'current' → logprob: -5.868781566619873
    7. 'top' → logprob: -6.743781566619873
    8. 'new' → logprob: -6.868781566619873
    9. 'curr' → logprob: -7.118781566619873
    10. 'b' → logprob: -7.118781566619873

Token 447: ' after' (ID: 1934)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09307496249675751
    2. 'top' → logprob: -3.2180750370025635
    3. '#' → logprob: -3.5930750370025635
    4. 'next' → logprob: -4.468074798583984
    5. 'for' → logprob: -5.843074798583984
    6. 'target' → logprob: -5.843074798583984
    7. '           ' → logprob: -6.218074798583984
    8. 'build' → logprob: -7.343074798583984
    9. 'nt' → logprob: -8.718074798583984
    10. 'new' → logprob: -8.843074798583984

Token 448: ' jump' (ID: 13843)
  Prédit: 'jump'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jump' → logprob: -0.23211394250392914
    2. 'switch' → logprob: -2.732113838195801
    3. 'lad' → logprob: -2.982113838195801
    4. 'landing' → logprob: -3.107113838195801
    5. '#' → logprob: -4.857113838195801
    6. 'moving' → logprob: -5.107113838195801
    7. 'l' → logprob: -5.482113838195801
    8. 'top' → logprob: -5.857113838195801
    9. 'a' → logprob: -6.107113838195801
    10. '   ' → logprob: -6.232113838195801

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16894350945949554
    2. '           ' → logprob: -1.9189435243606567
    3. 'if' → logprob: -6.168943405151367
    4. 'to' → logprob: -6.543943405151367
    5. ' if' → logprob: -6.543943405151367
    6. ' ,' → logprob: -6.668943405151367
    7. ' to' → logprob: -6.918943405151367
    8. ' at' → logprob: -8.293943405151367
    9. '=' → logprob: -8.293943405151367
    10. '       ' → logprob: -8.668943405151367

Token 450: ' adjust' (ID: 10266)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.3432425558567047
    2. 'if' → logprob: -2.343242645263672
    3. 'nf' → logprob: -2.843242645263672
    4. 'next' → logprob: -3.343242645263672
    5. '#' → logprob: -3.718242645263672
    6. '   ' → logprob: -4.093242645263672
    7. 'nt' → logprob: -4.593242645263672
    8. 'lf' → logprob: -4.968242645263672
    9. 'new' → logprob: -5.218242645263672
    10. 'target' → logprob: -5.593242645263672

Token 451: ' floor' (ID: 8350)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.43551400303840637
    2. 'floor' → logprob: -1.560513973236084
    3. ' nf' → logprob: -2.310513973236084
    4. ' floor' → logprob: -3.310513973236084
    5. '_nf' → logprob: -6.185513973236084
    6. ' =' → logprob: -6.185513973236084
    7. '_floor' → logprob: -6.560513973236084
    8. 'flo' → logprob: -8.060514450073242
    9. '           ' → logprob: -8.310514450073242
    10. '=' → logprob: -8.560514450073242

Token 452: ' according' (ID: 7065)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7350673079490662
    2. ' =' → logprob: -0.7350673079490662
    3. '           ' → logprob: -3.235067367553711
    4. '               ' → logprob: -7.860067367553711
    5. 'to' → logprob: -8.235067367553711
    6. ' to' → logprob: -8.235067367553711
    7. 'floor' → logprob: -8.610067367553711
    8. 'if' → logprob: -8.985067367553711
    9. '   ' → logprob: -9.360067367553711
    10. '       ' → logprob: -9.860067367553711

Token 453: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0009904148755595088
    2. ' to' → logprob: -7.375990390777588
    3. 'top' → logprob: -8.000990867614746
    4. '=' → logprob: -11.500990867614746
    5. '           ' → logprob: -12.125990867614746
    6. '       ' → logprob: -12.125990867614746
    7. '   ' → logprob: -12.750990867614746
    8. 'floor' → logprob: -13.500990867614746
    9. '_to' → logprob: -13.875990867614746
    10. '               ' → logprob: -14.500990867614746

Token 454: ' wall' (ID: 9688)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.33437180519104
    2. 'b' → logprob: -1.95937180519104
    3. '[a' → logprob: -2.08437180519104
    4. ' [' → logprob: -2.20937180519104
    5. 'a' → logprob: -2.70937180519104
    6. ' b' → logprob: -2.70937180519104
    7. ' ladder' → logprob: -2.83437180519104
    8. '[' → logprob: -2.83437180519104
    9. ' a' → logprob: -3.58437180519104
    10. ' (' → logprob: -3.83437180519104

Token 455: ' type' (ID: 1490)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.37677693367004395
    2. '           ' → logprob: -1.751776933670044
    3. ' top' → logprob: -2.876776933670044
    4. '   ' → logprob: -3.251776933670044
    5. '_top' → logprob: -3.626776933670044
    6. '       ' → logprob: -4.876776695251465
    7. 's' → logprob: -5.876776695251465
    8. 'tops' → logprob: -6.126776695251465
    9. '               ' → logprob: -7.001776695251465
    10. 'if' → logprob: -7.376776695251465

Token 456: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006558468448929489
    2. ' if' → logprob: -8.750656127929688
    3. '            
' → logprob: -9.375656127929688
    4. '=' → logprob: -9.375656127929688
    5. '<|end|>' → logprob: -9.625656127929688
    6. '       ' → logprob: -10.125656127929688
    7. 'if' → logprob: -10.250656127929688
    8. ' next' → logprob: -10.375656127929688
    9. ',' → logprob: -10.625656127929688
    10. '               ' → logprob: -10.750656127929688

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002386949025094509
    2. ' if' → logprob: -6.252387046813965
    3. 'if' → logprob: -8.252387046813965
    4. ',' → logprob: -10.252387046813965
    5. '            
' → logprob: -10.502387046813965
    6. 'top' → logprob: -11.002387046813965
    7. ' next' → logprob: -11.002387046813965
    8. ' top' → logprob: -11.377387046813965
    9. ' and' → logprob: -11.877387046813965
    10. ' for' → logprob: -11.877387046813965

Token 458: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8910717964172363
    2. '           ' → logprob: -1.2660717964172363
    3. 'top' → logprob: -1.8910717964172363
    4. ' if' → logprob: -2.5160717964172363
    5. 'next' → logprob: -3.1410717964172363
    6. ' top' → logprob: -4.016071796417236
    7. ' next' → logprob: -4.641071796417236
    8. 'nf' → logprob: -6.641071796417236
    9. 'new' → logprob: -6.891071796417236
    10. 'floor' → logprob: -7.766071796417236

Token 459: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.24121710658073425
    2. ' next' → logprob: -2.1162171363830566
    3. 'b' → logprob: -2.4912171363830566
    4. ' b' → logprob: -4.991217136383057
    5. 'nf' → logprob: -6.491217136383057
    6. '(next' → logprob: -6.741217136383057
    7. ' nf' → logprob: -7.616217136383057
    8. 'n' → logprob: -8.116216659545898
    9. '   ' → logprob: -8.616216659545898
    10. '[next' → logprob: -8.991216659545898

Token 460: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00015169414109550416
    2. 'b' → logprob: -8.875151634216309
    3. '[' → logprob: -13.250151634216309
    4. '_top' → logprob: -13.625151634216309
    5. '}_' → logprob: -13.750151634216309
    6. ']_' → logprob: -13.750151634216309
    7. '_' → logprob: -14.000151634216309
    8. '   ' → logprob: -14.375151634216309
    9. ')_' → logprob: -14.625151634216309
    10. '\' → logprob: -14.750151634216309

Token 461: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: 0.0
    2. '_ld' → logprob: -17.5
    3. 'nd' → logprob: -19.25
    4. 'd' → logprob: -19.25
    5. 'ild' → logprob: -19.5
    6. '[' → logprob: -19.625
    7. 'lds' → logprob: -19.625
    8. ' ld' → logprob: -19.875
    9. 'ldr' → logprob: -19.875
    10. 'l' → logprob: -20.75

Token 462: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8786616921424866
    2. ' ==' → logprob: -0.8786616921424866
    3. ']==' → logprob: -2.378661632537842
    4. ']' → logprob: -2.753661632537842
    5. '][' → logprob: -4.503661632537842
    6. '[' → logprob: -7.753661632537842
    7. '[top' → logprob: -8.003662109375
    8. '   ' → logprob: -8.378662109375
    9. ')==' → logprob: -9.253662109375
    10. ':' → logprob: -9.378662109375

Token 463: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '1' → logprob: -18.500001907348633
    5. '=' → logprob: -20.625001907348633
    6. '۰' → logprob: -20.750001907348633
    7. 'a' → logprob: -21.812501907348633
    8. '==' → logprob: -22.187501907348633
    9. 'b' → logprob: -22.625001907348633
    10. '    ' → logprob: -22.687501907348633

Token 464: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.5000057220459
    4. '1' → logprob: -17.1250057220459
    5. 'a' → logprob: -19.3750057220459
    6. '۰' → logprob: -19.8125057220459
    7. 's' → logprob: -20.2500057220459
    8. '=' → logprob: -20.2500057220459
    9. 'b' → logprob: -20.3125057220459
    10. '       ' → logprob: -20.9375057220459

Token 465: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03386502340435982
    2. ':' → logprob: -3.408864974975586
    3. '):
' → logprob: -9.033864974975586
    4. '               ' → logprob: -10.033864974975586
    5. ':
' → logprob: -10.783864974975586
    6. ':

' → logprob: -11.033864974975586
    7. ':n' → logprob: -12.033864974975586
    8. ')' → logprob: -12.408864974975586
    9. '       ' → logprob: -13.033864974975586
    10. '           ' → logprob: -13.033864974975586

Token 466: '               ' (ID: 506)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.3891197144985199
    2. '               ' → logprob: -1.2641197443008423
    3. ' nf' → logprob: -3.2641196250915527
    4. 'floor' → logprob: -6.764119625091553
    5. ' floor' → logprob: -8.639120101928711
    6. '_nf' → logprob: -9.139120101928711
    7. 'n' → logprob: -10.139120101928711
    8. '   ' → logprob: -10.389120101928711
    9. '                   ' → logprob: -11.014120101928711
    10. 'next' → logprob: -11.014120101928711

Token 467: ' wall' (ID: 9688)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.012469155713915825
    2. ' nf' → logprob: -4.762469291687012
    3. '               ' → logprob: -5.762469291687012
    4. '           ' → logprob: -8.137469291687012
    5. 'floor' → logprob: -8.637469291687012
    6. 'n' → logprob: -9.762469291687012
    7. '                   ' → logprob: -10.262469291687012
    8. 'adj' → logprob: -10.637469291687012
    9. 'new' → logprob: -10.887469291687012
    10. 'nj' → logprob: -11.262469291687012

Token 468: ' =' (ID: 314)
  Prédit: '_floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.6456601023674011
    2. ' =' → logprob: -1.270660161972046
    3. '_top' → logprob: -2.020660161972046
    4. '_type' → logprob: -2.895660161972046
    5. 'top' → logprob: -6.520659923553467
    6. '_f' → logprob: -6.770659923553467
    7. '=' → logprob: -6.770659923553467
    8. 'floor' → logprob: -6.895659923553467
    9. 'type' → logprob: -7.020659923553467
    10. '_pos' → logprob: -8.395660400390625

Token 469: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.064297824399546e-05
    2. ' a' → logprob: -9.625070571899414
    3. '   ' → logprob: -13.000070571899414
    4. 'b' → logprob: -13.625070571899414
    5. ''a' → logprob: -15.125070571899414
    6. '	a' → logprob: -15.750070571899414
    7. '"a' → logprob: -16.375070571899414
    8. ' ' → logprob: -16.375070571899414
    9. '[a' → logprob: -16.500070571899414
    10. '(a' → logprob: -16.750070571899414

Token 470: '[n' (ID: 15433)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.006109855603426695
    2. '[n' → logprob: -5.131109714508057
    3. '_nf' → logprob: -9.256110191345215
    4. 'top' → logprob: -9.881110191345215
    5. '[top' → logprob: -11.381110191345215
    6. 'Top' → logprob: -12.381110191345215
    7. '_next' → logprob: -12.506110191345215
    8. '_bottom' → logprob: -13.131110191345215
    9. '_n' → logprob: -13.256110191345215
    10. ' top' → logprob: -13.381110191345215

Token 471: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.159660890465602e-05
    2. 'nf' → logprob: -10.87507152557373
    3. '_top' → logprob: -11.37507152557373
    4. '_f' → logprob: -11.50007152557373
    5. '[f' → logprob: -12.12507152557373
    6. ']' → logprob: -13.12507152557373
    7. '
' → logprob: -13.37507152557373
    8. 'top' → logprob: -13.37507152557373
    9. 'ext' → logprob: -13.50007152557373
    10. '[' → logprob: -13.50007152557373

Token 472: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14462175965309143
    2. '[n' → logprob: -2.0196218490600586
    3. ']
' → logprob: -7.019621849060059
    4. 'nf' → logprob: -7.769621849060059
    5. '_nf' → logprob: -8.019621849060059
    6. ' ]' → logprob: -9.519621849060059
    7. '[' → logprob: -9.644621849060059
    8. '[f' → logprob: -10.394621849060059
    9. '][' → logprob: -10.394621849060059
    10. ' nf' → logprob: -10.644621849060059

Token 473: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3856101334095001
    2. '           ' → logprob: -1.3856101036071777
    3. 'else' → logprob: -3.3856101036071777
    4. ' if' → logprob: -4.260610103607178
    5. 'if' → logprob: -4.510610103607178
    6. ' else' → logprob: -5.385610103607178
    7. '
' → logprob: -6.260610103607178
    8. 'elif' → logprob: -6.760610103607178
    9. '<|end|>' → logprob: -6.885610103607178
    10. ')' → logprob: -7.885610103607178

Token 474: ' top' (ID: 2344)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0646069124341011
    2. 'top' (adapté à ' top') → logprob: -3.4396069049835205
    3. ' if' → logprob: -4.4396071434021
    4. 'wall' → logprob: -5.4396071434021
    5. 'floor' → logprob: -5.5646071434021
    6. '           ' → logprob: -5.6896071434021
    7. 'nf' → logprob: -6.9396071434021
    8. '               ' → logprob: -6.9396071434021
    9. 'next' → logprob: -7.0646071434021
    10. 'elif' → logprob: -7.1896071434021

Token 475: '_floor' (ID: 152330)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48292240500450134
    2. ' =' → logprob: -0.9829224348068237
    3. '_' → logprob: -5.732922554016113
    4. '[next' → logprob: -6.232922554016113
    5. '_next' → logprob: -6.732922554016113
    6. '_top' → logprob: -7.482922554016113
    7. '_floor' → logprob: -7.607922554016113
    8. 'top' → logprob: -8.732922554016113
    9. '_idx' → logprob: -8.857922554016113
    10. '_=' → logprob: -8.982922554016113

Token 476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935352683067322
    2. ' =' → logprob: -0.6935352683067322
    3. '[next' → logprob: -7.943535327911377
    4. '   ' → logprob: -11.818534851074219
    5. 's' → logprob: -12.318534851074219
    6. ' ' → logprob: -12.443534851074219
    7. 'next' → logprob: -12.443534851074219
    8. '=n' → logprob: -12.818534851074219
    9. '[n' → logprob: -13.068534851074219
    10. '_' → logprob: -13.943534851074219

Token 477: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00861468818038702
    2. ' a' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.258615493774414
    4. '	a' → logprob: -17.508615493774414
    5. '_a' → logprob: -18.008615493774414
    6. ' ' → logprob: -18.633615493774414
    7. '(a' → logprob: -18.758615493774414
    8. '[a' → logprob: -18.758615493774414
    9. '  ' → logprob: -20.133615493774414
    10. '           ' → logprob: -20.133615493774414

Token 478: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -4.842555426876061e-06
    2. 'top' → logprob: -12.250004768371582
    3. 'Top' → logprob: -17.1250057220459
    4. '[top' → logprob: -18.0000057220459
    5. '_TOP' → logprob: -18.7500057220459
    6. ' top' → logprob: -18.8750057220459
    7. 'a' → logprob: -19.5000057220459
    8. '	top' → logprob: -20.7500057220459
    9. '_bottom' → logprob: -20.8750057220459
    10. ''_' → logprob: -21.0000057220459

Token 479: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.7530574849806726e-05
    2. 'nf' → logprob: -10.625057220458984
    3. '[next' → logprob: -11.250057220458984
    4. '[' → logprob: -12.125057220458984
    5. '(n' → logprob: -12.625057220458984
    6. '```' → logprob: -13.000057220458984
    7. '[top' → logprob: -13.000057220458984
    8. '   ' → logprob: -13.500057220458984
    9. '[N' → logprob: -13.875057220458984
    10. ' [' → logprob: -14.250057220458984

Token 480: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.73183855926618e-05
    2. 'nf' → logprob: -10.125077247619629
    3. '[f' → logprob: -11.000077247619629
    4. '[' → logprob: -11.250077247619629
    5. '[n' → logprob: -13.000077247619629
    6. ']' → logprob: -14.125077247619629
    7. 'mf' → logprob: -14.250077247619629
    8. '```' → logprob: -14.500077247619629
    9. 'ф' → logprob: -14.875077247619629
    10. '][' → logprob: -14.875077247619629

Token 481: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025955152232199907
    2. ']
' → logprob: -6.2525954246521
    3. '[n' → logprob: -7.5025954246521
    4. '           ' → logprob: -9.752595901489258
    5. '               ' → logprob: -10.627595901489258
    6. ' ]' → logprob: -12.127595901489258
    7. '       ' → logprob: -12.502595901489258
    8. 'nf' → logprob: -12.627595901489258
    9. '<|end|>' → logprob: -12.752595901489258
    10. '                   ' → logprob: -13.252595901489258

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001275353948585689
    2. 'else' → logprob: -6.751275539398193
    3. 'elif' → logprob: -9.251275062561035
    4. ' else' → logprob: -12.751275062561035
    5. '               ' → logprob: -13.251275062561035
    6. 'if' → logprob: -13.751275062561035
    7. ')' → logprob: -13.751275062561035
    8. '```' → logprob: -14.501275062561035
    9. 'next' → logprob: -14.876275062561035
    10. '       ' → logprob: -15.126275062561035

Token 483: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5782834887504578
    2. 'else' (adapté à ' else') → logprob: -0.8282834887504578
    3. ' else' → logprob: -6.078283309936523
    4. 'elif' → logprob: -9.953283309936523
    5. ' elif' → logprob: -14.828283309936523
    6. '       ' → logprob: -15.578283309936523
    7. '	else' → logprob: -15.578283309936523
    8. '               ' → logprob: -16.078283309936523
    9. '```' → logprob: -16.078283309936523
    10. '          ' → logprob: -16.578283309936523

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22394698858261108
    2. ':
' → logprob: -2.098947048187256
    3. '               ' → logprob: -2.598947048187256
    4. '{' → logprob: -6.723947048187256
    5. '           ' → logprob: -6.723947048187256
    6. '{
' → logprob: -6.723947048187256
    7. '```' → logprob: -11.348946571350098
    8. ' {' → logprob: -11.598946571350098
    9. '[' → logprob: -11.598946571350098
    10. ' :' → logprob: -11.723946571350098

Token 485: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002658655575942248
    2. 'b' → logprob: -8.750266075134277
    3. '           ' → logprob: -10.375266075134277
    4. '```' → logprob: -10.625266075134277
    5. ' b' → logprob: -11.375266075134277
    6. '   ' → logprob: -11.875266075134277
    7. ':' → logprob: -12.250266075134277
    8. '                   ' → logprob: -12.375266075134277
    9. '              ' → logprob: -12.625266075134277
    10. ' ' → logprob: -12.875266075134277

Token 486: ' wall' (ID: 9688)
  Prédit: 'wall'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wall' (adapté à ' wall') → logprob: -0.09192309528589249
    2. ' wall' → logprob: -2.4669229984283447
    3. '               ' → logprob: -5.841923236846924
    4. 'b' → logprob: -10.091922760009766
    5. '           ' → logprob: -11.341922760009766
    6. '                   ' → logprob: -12.716922760009766
    7. '```' → logprob: -12.716922760009766
    8. '                ' → logprob: -12.841922760009766
    9. '   ' → logprob: -12.841922760009766
    10. ' ' → logprob: -12.966922760009766

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602243334054947
    2. '=' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.660223960876465
    4. ')' → logprob: -17.78522491455078
    5. '=n' → logprob: -17.78522491455078
    6. '   ' → logprob: -18.53522491455078
    7. '[' → logprob: -19.41022491455078
    8. ']' → logprob: -19.41022491455078
    9. ' ' → logprob: -19.53522491455078
    10. '               ' → logprob: -19.53522491455078

Token 488: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003600544296205044
    2. ' b' → logprob: -5.628600597381592
    3. '           ' → logprob: -15.253600120544434
    4. '   ' → logprob: -15.503600120544434
    5. '	b' → logprob: -16.75360107421875
    6. '       ' → logprob: -17.37860107421875
    7. '               ' → logprob: -18.50360107421875
    8. ' ' → logprob: -18.50360107421875
    9. ')b' → logprob: -18.87860107421875
    10. '(b' → logprob: -19.12860107421875

Token 489: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.11304910480976105
    2. '[next' → logprob: -2.363049030303955
    3. '[top' → logprob: -4.738049030303955
    4. '_top' → logprob: -5.613049030303955
    5. 'top' → logprob: -8.238049507141113
    6. '[b' → logprob: -9.988049507141113
    7. 'b' → logprob: -11.113049507141113
    8. '_b' → logprob: -12.238049507141113
    9. '_bottom' → logprob: -12.363049507141113
    10. 'Top' → logprob: -12.363049507141113

Token 490: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.034296393394470215
    2. 'nf' → logprob: -3.4092965126037598
    3. '_nf' → logprob: -8.284296035766602
    4. '_top' → logprob: -9.034296035766602
    5. 'n' → logprob: -9.409296035766602
    6. '[n' → logprob: -9.659296035766602
    7. ' nf' → logprob: -10.409296035766602
    8. '[f' → logprob: -10.784296035766602
    9. '
' → logprob: -11.159296035766602
    10. 'Top' → logprob: -12.159296035766602

Token 491: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12714479863643646
    2. ']
' → logprob: -2.1271448135375977
    3. ']

' → logprob: -8.752144813537598
    4. '           ' → logprob: -11.002144813537598
    5. '               ' → logprob: -11.502144813537598
    6. ']
' → logprob: -11.627144813537598
    7. ')' → logprob: -12.377144813537598
    8. '[n' → logprob: -12.377144813537598
    9. ' ]' → logprob: -12.752144813537598
    10. '][' → logprob: -12.877144813537598

Token 492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10624433308839798
    2. 'top' → logprob: -2.3562443256378174
    3. '           ' → logprob: -5.2312445640563965
    4. ' top' → logprob: -7.9812445640563965
    5. 'if' → logprob: -8.856244087219238
    6. '[top' → logprob: -9.106244087219238
    7. '       ' → logprob: -10.731244087219238
    8. '(top' → logprob: -10.856244087219238
    9. '              ' → logprob: -12.356244087219238
    10. '   ' → logprob: -12.356244087219238

Token 493: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' (adapté à ' top') → logprob: -0.00033677343162707984
    2. ' top' → logprob: -8.000336647033691
    3. '               ' → logprob: -14.500336647033691
    4. '           ' → logprob: -14.625336647033691
    5. 'bottom' → logprob: -15.000336647033691
    6. '	top' → logprob: -17.250337600708008
    7. 'b' → logprob: -18.625337600708008
    8. '                   ' → logprob: -18.875337600708008
    9. '[top' → logprob: -19.625337600708008
    10. '   ' → logprob: -19.750337600708008

Token 494: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -6.0868278524139896e-05
    2. '_top' → logprob: -9.87506103515625
    3. 'floor' → logprob: -12.00006103515625
    4. '_' → logprob: -13.87506103515625
    5. '_f' → logprob: -13.87506103515625
    6. '```' → logprob: -14.25006103515625
    7. '_wall' → logprob: -15.62506103515625
    8. ' =' → logprob: -16.37506103515625
    9. '=' → logprob: -16.50006103515625
    10. '_bottom' → logprob: -16.62506103515625

Token 495: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401917457581
    2. ' =' → logprob: -0.8259401917457581
    3. ' ' → logprob: -15.325940132141113
    4. '=n' → logprob: -16.20094108581543
    5. '[top' → logprob: -16.20094108581543
    6. '   ' → logprob: -16.70094108581543
    7. '[n' → logprob: -17.45094108581543
    8. ')' → logprob: -17.57594108581543
    9. '=
' → logprob: -17.82594108581543
    10. '=b' → logprob: -17.95094108581543

Token 496: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.00020408630371
    4. '	b' → logprob: -18.00020408630371
    5. ' ' → logprob: -20.37520408630371
    6. '_b' → logprob: -20.62520408630371
    7. 'top' → logprob: -21.00020408630371
    8. '(b' → logprob: -21.00020408630371
    9. '[b' → logprob: -21.37520408630371
    10. 'bf' → logprob: -21.50020408630371

Token 497: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.2052982747554779
    2. 'top' → logprob: -1.7052983045578003
    3. 'nf' → logprob: -6.08029842376709
    4. '[n' → logprob: -6.83029842376709
    5. 'Top' → logprob: -8.70529842376709
    6. ' top' → logprob: -9.20529842376709
    7. '[top' → logprob: -9.33029842376709
    8. '_nf' → logprob: -9.45529842376709
    9. ' nf' → logprob: -10.08029842376709
    10. 'n' → logprob: -11.45529842376709

Token 498: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.404745439183898e-05
    2. 'nf' → logprob: -11.12503433227539
    3. '[next' → logprob: -11.37503433227539
    4. '```' → logprob: -12.87503433227539
    5. '[' → logprob: -13.75003433227539
    6. 'n' → logprob: -13.87503433227539
    7. '[top' → logprob: -14.00003433227539
    8. '   ' → logprob: -14.75003433227539
    9. 'top' → logprob: -15.00003433227539
    10. '       ' → logprob: -15.00003433227539

Token 499: 'f' (ID: 69)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.13419388234615326
    2. 'f' → logprob: -2.1341938972473145
    3. '[n' → logprob: -5.1341938972473145
    4. 'n' → logprob: -7.0091938972473145
    5. '_nf' → logprob: -8.634193420410156
    6. ' nf' → logprob: -8.759193420410156
    7. 'lf' → logprob: -10.759193420410156
    8. '[' → logprob: -11.134193420410156
    9. '[f' → logprob: -11.259193420410156
    10. '[next' → logprob: -11.384193420410156

Token 500: ']

' (ID: 3144)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.059491951018571854
    2. 'nf' → logprob: -3.0594918727874756
    3. ']' → logprob: -4.809492111206055
    4. 'n' → logprob: -7.059492111206055
    5. '][' → logprob: -7.309492111206055
    6. ' nf' → logprob: -7.809492111206055
    7. '[' → logprob: -8.184492111206055
    8. '_nf' → logprob: -8.934492111206055
    9. 'f' → logprob: -9.059492111206055
    10. '[f' → logprob: -9.559492111206055

Token 501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01041402481496334
    2. ' if' → logprob: -5.135414123535156
    3. '            
' → logprob: -5.885414123535156
    4. 'if' → logprob: -7.510414123535156
    5. ' 
' → logprob: -7.760414123535156
    6. '
' → logprob: -8.385414123535156
    7. '               ' → logprob: -9.260414123535156
    8. '<|end|>' → logprob: -9.260414123535156
    9. '  
' → logprob: -9.760414123535156
    10. '       ' → logprob: -10.260414123535156

Token 502: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05429249629378319
    2. 'if' → logprob: -3.5542924404144287
    3. ' if' → logprob: -3.8042924404144287
    4. '            
' → logprob: -6.429292678833008
    5. '               ' → logprob: -9.929292678833008
    6. '            ' → logprob: -9.929292678833008
    7. '       ' → logprob: -10.054292678833008
    8. '```' → logprob: -10.179292678833008
    9. ' 
' → logprob: -10.429292678833008
    10. '          ' → logprob: -10.679292678833008

Token 503: ' process' (ID: 2273)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004595791921019554
    2. '           ' → logprob: -5.629595756530762
    3. ' if' → logprob: -7.129595756530762
    4. '#' → logprob: -9.129595756530762
    5. 'next' → logprob: -10.129595756530762
    6. 'If' → logprob: -11.004595756530762
    7. 'new' → logprob: -11.629595756530762
    8. '            
' → logprob: -11.879595756530762
    9. 'floor' → logprob: -12.629595756530762
    10. 'nf' → logprob: -13.254595756530762

Token 504: ' according' (ID: 7065)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28124797344207764
    2. '           ' → logprob: -1.7812479734420776
    3. 'if' → logprob: -2.781248092651367
    4. 'nf' → logprob: -5.031248092651367
    5. ' nf' → logprob: -5.906248092651367
    6. ' next' → logprob: -6.031248092651367
    7. 'next' → logprob: -7.156248092651367
    8. ' for' → logprob: -7.906248092651367
    9. 'floor' → logprob: -8.156248092651367
    10. '```' → logprob: -8.531248092651367

Token 505: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.016236472874879837
    2. ' to' → logprob: -4.141236305236816
    3. '           ' → logprob: -9.016236305236816
    4. 'if' → logprob: -9.516236305236816
    5. '_to' → logprob: -12.891236305236816
    6. ' if' → logprob: -13.766236305236816
    7. '```' → logprob: -13.891236305236816
    8. '               ' → logprob: -14.016236305236816
    9. '   ' → logprob: -15.266236305236816
    10. '       ' → logprob: -15.266236305236816

Token 506: ' wall' (ID: 9688)
  Prédit: 'wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wall' → logprob: -0.07003379613161087
    2. ' wall' → logprob: -2.6950337886810303
    3. 'top' → logprob: -9.57003402709961
    4. ' top' → logprob: -10.94503402709961
    5. ' ' → logprob: -12.57003402709961
    6. 'type' → logprob: -13.19503402709961
    7. ' type' → logprob: -14.32003402709961
    8. '   ' → logprob: -14.57003402709961
    9. '```' → logprob: -14.82003402709961
    10. ' ' → logprob: -14.94503402709961

Token 507: ' type' (ID: 1490)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48821181058883667
    2. 'type' → logprob: -1.3632118701934814
    3. '==' → logprob: -2.4882118701934814
    4. '_type' → logprob: -4.488211631774902
    5. ' ==' → logprob: -4.738211631774902
    6. 'if' → logprob: -4.863211631774902
    7. ' type' → logprob: -5.113211631774902
    8. '               ' → logprob: -5.113211631774902
    9. ' if' → logprob: -5.238211631774902
    10. '```' → logprob: -7.363211631774902

Token 508: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015158153837546706
    2. ' if' → logprob: -6.626515865325928
    3. 'if' → logprob: -9.62651538848877
    4. '<|end|>' → logprob: -9.87651538848877
    5. '            
' → logprob: -10.50151538848877
    6. '       ' → logprob: -11.62651538848877
    7. '               ' → logprob: -11.62651538848877
    8. '<|end|>' → logprob: -12.25151538848877
    9. ':' → logprob: -12.50151538848877
    10. '            ' → logprob: -12.75151538848877

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008960972772911191
    2. ' if' → logprob: -7.500895977020264
    3. 'if' → logprob: -8.000896453857422
    4. '```' → logprob: -13.000896453857422
    5. '               ' → logprob: -13.750896453857422
    6. '       ' → logprob: -14.125896453857422
    7. '            
' → logprob: -14.125896453857422
    8. 'token' → logprob: -14.125896453857422
    9. '		' → logprob: -14.500896453857422
    10. '   ' → logprob: -14.500896453857422

Token 510: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1030896008014679
    2. 'if' (adapté à ' if') → logprob: -2.3530895709991455
    3. ' if' → logprob: -5.853089809417725
    4. '```' → logprob: -12.103089332580566
    5. '   ' → logprob: -14.478089332580566
    6. '               ' → logprob: -14.853089332580566
    7. '            
' → logprob: -15.228089332580566
    8. 'token' → logprob: -15.228089332580566
    9. '       ' → logprob: -15.353089332580566
    10. '		' → logprob: -15.478089332580566

Token 511: ' wall' (ID: 9688)
  Prédit: 'wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wall' → logprob: -0.057533279061317444
    2. ' wall' → logprob: -2.9325332641601562
    3. 'top' → logprob: -6.057533264160156
    4. ' top' → logprob: -8.182533264160156
    5. '   ' → logprob: -11.432533264160156
    6. ' ' → logprob: -12.807533264160156
    7. 'not' → logprob: -12.807533264160156
    8. '0' → logprob: -13.057533264160156
    9. '    ' → logprob: -13.432533264160156
    10. '1' → logprob: -13.557533264160156

Token 512: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16038091480731964
    2. ' ==' → logprob: -1.9103809595108032
    3. '!=' → logprob: -9.785381317138672
    4. ' in' → logprob: -10.535381317138672
    5. ' !=' → logprob: -11.160381317138672
    6. '<=' → logprob: -11.410381317138672
    7. '[' → logprob: -11.535381317138672
    8. 'in' → logprob: -11.660381317138672
    9. ']==' → logprob: -12.535381317138672
    10. '>=' → logprob: -12.660381317138672

Token 513: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06305952370166779
    2. '1' → logprob: -2.8130595684051514
    3. '2' → logprob: -7.313059329986572
    4. ' ' → logprob: -7.938059329986572
    5. '-' → logprob: -10.31305980682373
    6. '3' → logprob: -11.12555980682373
    7. '4' → logprob: -12.62555980682373
    8. '   ' → logprob: -12.75055980682373
    9. '9' → logprob: -13.50055980682373
    10. '5' → logprob: -13.56305980682373

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11320187896490097
    2. '1' → logprob: -2.238201856613159
    3. '2' → logprob: -8.238202095031738
    4. ' ' → logprob: -9.363202095031738
    5. '-' → logprob: -11.113202095031738
    6. '3' → logprob: -11.988202095031738
    7. '4' → logprob: -13.300702095031738
    8. '5' → logprob: -14.113202095031738
    9. '#' → logprob: -14.300702095031738
    10. '9' → logprob: -14.300702095031738

Token 515: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7417044639587402
    2. ':' → logprob: -0.8667044639587402
    3. ' or' → logprob: -2.3667044639587402
    4. '               ' → logprob: -4.74170446395874
    5. '           ' → logprob: -7.61670446395874
    6. ' and' → logprob: -8.991704940795898
    7. ':

' → logprob: -9.241704940795898
    8. ':
' → logprob: -9.866704940795898
    9. '):
' → logprob: -10.616704940795898
    10. 'or' → logprob: -10.991704940795898

Token 516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22924074530601501
    2. ' if' → logprob: -1.7292407751083374
    3. ' continue' → logprob: -4.354240894317627
    4. 'if' → logprob: -4.479240894317627
    5. 'continue' → logprob: -5.979240894317627
    6. ' next' → logprob: -8.854240417480469
    7. '#' → logprob: -9.479240417480469
    8. ' new' → logprob: -9.604240417480469
    9. ' #' → logprob: -9.604240417480469
    10. ' and' → logprob: -9.729240417480469

Token 517: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19894176721572876
    2. ' if' → logprob: -2.448941707611084
    3. '               ' → logprob: -3.323941707611084
    4. 'continue' → logprob: -3.323941707611084
    5. ' continue' → logprob: -4.198941707611084
    6. 'next' → logprob: -5.948941707611084
    7. '                   ' → logprob: -6.698941707611084
    8. '   ' → logprob: -6.948941707611084
    9. 'new' (adapté à ' new') → logprob: -7.323941707611084
    10. ' next' → logprob: -7.448941707611084

Token 518: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.0068097529001533985
    2. 'floor' → logprob: -5.131809711456299
    3. '_nf' → logprob: -7.756809711456299
    4. '_b' → logprob: -8.881810188293457
    5. '_f' → logprob: -9.131810188293457
    6. 'f' → logprob: -9.881810188293457
    7. '_n' → logprob: -9.881810188293457
    8. 'nf' → logprob: -10.881810188293457
    9. 'if' → logprob: -11.006810188293457
    10. ' floor' → logprob: -11.006810188293457

Token 519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519310414791107
    2. '=' → logprob: -1.501931071281433
    3. '=n' → logprob: -14.501931190490723
    4. '   ' → logprob: -15.126931190490723
    5. ' ' → logprob: -15.126931190490723
    6. '               ' → logprob: -16.001930236816406
    7. '    ' → logprob: -16.251930236816406
    8. 's' → logprob: -16.376930236816406
    9. ',' → logprob: -16.501930236816406
    10. 'n' → logprob: -16.876930236816406

Token 520: ' nf' (ID: 89636)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.004839976318180561
    2. ' nf' → logprob: -6.129839897155762
    3. 'floor' → logprob: -6.504839897155762
    4. 'top' → logprob: -7.004839897155762
    5. 'n' → logprob: -8.754839897155762
    6. '0' → logprob: -10.879839897155762
    7. ' top' → logprob: -11.254839897155762
    8. 'next' → logprob: -11.379839897155762
    9. ' floor' → logprob: -11.379839897155762
    10. '   ' → logprob: -12.129839897155762

Token 521: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33486759662628174
    2. '               ' → logprob: -1.3348675966262817
    3. '<|end|>' → logprob: -4.834867477416992
    4. '
' → logprob: -4.959867477416992
    5. '                
' → logprob: -6.459867477416992
    6. '+' → logprob: -6.959867477416992
    7. 'if' → logprob: -7.334867477416992
    8. ' if' → logprob: -7.584867477416992
    9. 'elif' → logprob: -7.584867477416992
    10. '            
' → logprob: -8.084867477416992

Token 522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09687741100788116
    2. '               ' → logprob: -2.971877336502075
    3. 'elif' → logprob: -3.221877336502075
    4. 'if' → logprob: -6.971877574920654
    5. ' elif' → logprob: -8.471877098083496
    6. 'else' → logprob: -10.221877098083496
    7. ' if' → logprob: -10.346877098083496
    8. '       ' → logprob: -12.346877098083496
    9. '   ' → logprob: -12.471877098083496
    10. '                
' → logprob: -12.846877098083496

Token 523: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.014843654818832874
    2. '           ' → logprob: -5.014843463897705
    3. ' elif' → logprob: -5.514843463897705
    4. 'else' → logprob: -5.514843463897705
    5. ' else' → logprob: -10.139843940734863
    6. '	elif' → logprob: -13.889843940734863
    7. '               ' → logprob: -14.264843940734863
    8. '       ' → logprob: -14.389843940734863
    9. 'elseif' → logprob: -15.514843940734863
    10. '#elif' → logprob: -15.889843940734863

Token 524: ' wall' (ID: 9688)
  Prédit: 'wall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wall' → logprob: -0.014181602746248245
    2. ' wall' → logprob: -4.264181613922119
    3. 'top' → logprob: -12.264181137084961
    4. '1' → logprob: -12.764181137084961
    5. 'new' → logprob: -13.139181137084961
    6. '0' → logprob: -13.139181137084961
    7. ' ' → logprob: -13.139181137084961
    8. '   ' → logprob: -13.889181137084961
    9. '2' → logprob: -14.514181137084961
    10. 'floor' → logprob: -14.639181137084961

Token 525: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1602320373058319
    2. '==' → logprob: -1.9102320671081543
    3. '[' → logprob: -13.035231590270996
    4. '==
' → logprob: -13.035231590270996
    5. ' ' → logprob: -14.285231590270996
    6. '```' → logprob: -14.535231590270996
    7. ')==' → logprob: -14.660231590270996
    8. ' ' → logprob: -14.910231590270996
    9. ']==' → logprob: -14.910231590270996
    10. ' ==
' → logprob: -15.160231590270996

Token 526: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05914347246289253
    2. ' ' → logprob: -2.934143543243408
    3. '2' → logprob: -5.559143543243408
    4. '3' → logprob: -8.93414306640625
    5. '0' → logprob: -9.30914306640625
    6. '-' → logprob: -9.43414306640625
    7. ' -' → logprob: -10.99664306640625
    8. '4' → logprob: -11.30914306640625
    9. '   ' → logprob: -11.43414306640625
    10. 'top' → logprob: -12.49664306640625

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030358207877725363
    2. '2' → logprob: -6.003036022186279
    3. ' ' → logprob: -7.878036022186279
    4. '3' → logprob: -9.378035545349121
    5. '0' → logprob: -10.253035545349121
    6. '-' → logprob: -10.503035545349121
    7. '4' → logprob: -11.753035545349121
    8. '   ' → logprob: -12.690535545349121
    9. '5' → logprob: -13.315535545349121
    10. '10' → logprob: -13.503035545349121

Token 528: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.698885977268219
    2. ':
' → logprob: -0.698885977268219
    3. '               ' → logprob: -5.198885917663574
    4. 'new' → logprob: -9.823885917663574
    5. ':new' → logprob: -10.073885917663574
    6. ':

' → logprob: -10.198885917663574
    7. '           ' → logprob: -11.073885917663574
    8. ':
' → logprob: -11.073885917663574
    9. '):
' → logprob: -11.323885917663574
    10. ' new' → logprob: -12.323885917663574

Token 529: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08999340981245041
    2. 'new' → logprob: -2.589993476867676
    3. ':
' → logprob: -5.214993476867676
    4. ' new' → logprob: -5.339993476867676
    5. ':' → logprob: -7.339993476867676
    6. '```' → logprob: -10.464993476867676
    7. '           ' → logprob: -10.964993476867676
    8. '):
' → logprob: -11.214993476867676
    9. 'continue' → logprob: -11.589993476867676
    10. ' and' → logprob: -11.589993476867676

Token 530: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.003821694990620017
    2. ' new' → logprob: -5.628821849822998
    3. '               ' → logprob: -8.50382137298584
    4. '                   ' → logprob: -11.87882137298584
    5. '   ' → logprob: -12.25382137298584
    6. '           ' → logprob: -12.75382137298584
    7. 'continue' → logprob: -13.12882137298584
    8. '	new' → logprob: -14.12882137298584
    9. ' ' → logprob: -15.50382137298584
    10. '```' → logprob: -15.62882137298584

Token 531: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -9.491498531133402e-06
    2. 'floor' → logprob: -11.625009536743164
    3. '_' → logprob: -15.750009536743164
    4. 'new' → logprob: -16.125009536743164
    5. 'Floor' → logprob: -17.000009536743164
    6. '```' → logprob: -18.000009536743164
    7. ' floor' → logprob: -18.250009536743164
    8. '=' → logprob: -18.375009536743164
    9. '_new' → logprob: -18.750009536743164
    10. 's' → logprob: -18.875009536743164

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.011871337890625
    4. '   ' → logprob: -17.636871337890625
    5. '=n' → logprob: -18.011871337890625
    6. ')' → logprob: -18.136871337890625
    7. ',' → logprob: -18.511871337890625
    8. 's' → logprob: -18.511871337890625
    9. 'new' → logprob: -18.511871337890625
    10. '           ' → logprob: -19.136871337890625

Token 533: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0015024791937321424
    2. ' top' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.876502990722656
    4. '	top' → logprob: -17.251502990722656
    5. 'Top' → logprob: -17.876502990722656
    6. ' ' → logprob: -18.501502990722656
    7. '(top' → logprob: -18.501502990722656
    8. '[top' → logprob: -18.626502990722656
    9. '           ' → logprob: -18.751502990722656
    10. '               ' → logprob: -19.751502990722656

Token 534: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -1.0280383548888494e-06
    2. '_top' → logprob: -14.375000953674316
    3. 'floor' → logprob: -15.500000953674316
    4. '[' → logprob: -16.625001907348633
    5. '[top' → logprob: -17.375001907348633
    6. '_' → logprob: -17.875001907348633
    7. '```' → logprob: -18.000001907348633
    8. '_wall' → logprob: -18.125001907348633
    9. '.floor' → logprob: -18.500001907348633
    10. '[f' → logprob: -18.875001907348633

Token 535: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012264199322089553
    2. 'else' → logprob: -7.001226425170898
    3. ' else' → logprob: -8.376226425170898
    4. 'elif' → logprob: -9.751226425170898
    5. '            
' → logprob: -11.751226425170898
    6. '<|end|>' → logprob: -12.376226425170898
    7. ' elif' → logprob: -12.501226425170898
    8. '		' → logprob: -13.001226425170898
    9. '               ' → logprob: -13.501226425170898
    10. ')' → logprob: -13.876226425170898

Token 536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02104499749839306
    2. 'else' → logprob: -4.021045207977295
    3. 'elif' → logprob: -6.146045207977295
    4. ' else' → logprob: -7.271045207977295
    5. ' elif' → logprob: -10.021044731140137
    6. '               ' → logprob: -12.896044731140137
    7. '```' → logprob: -12.896044731140137
    8. '		' → logprob: -13.771044731140137
    9. 'if' → logprob: -14.271044731140137
    10. '	       ' → logprob: -14.396044731140137

Token 537: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24398991465568542
    2. 'else' (adapté à ' else') → logprob: -1.8689899444580078
    3. 'elif' → logprob: -2.868989944458008
    4. ' else' → logprob: -5.493989944458008
    5. ' elif' → logprob: -6.618989944458008
    6. '               ' → logprob: -11.493989944458008
    7. '       ' → logprob: -12.993989944458008
    8. '```' → logprob: -13.618989944458008
    9. 'if' → logprob: -13.743989944458008
    10. '   ' → logprob: -13.868989944458008

Token 538: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5428599715232849
    2. ':
' → logprob: -1.0428600311279297
    3. '               ' → logprob: -2.9178600311279297
    4. '           ' → logprob: -4.41786003112793
    5. ' if' → logprob: -9.41786003112793
    6. '                   ' → logprob: -10.16786003112793
    7. ' continue' → logprob: -10.41786003112793
    8. ',' → logprob: -10.66786003112793
    9. '[' → logprob: -10.79286003112793
    10. '       ' → logprob: -11.16786003112793

Token 539: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6116175055503845
    2. 'continue' → logprob: -1.3616175651550293
    3. ' continue' → logprob: -1.6116175651550293
    4. '   ' → logprob: -7.361617565155029
    5. '	continue' → logprob: -7.986617565155029
    6. ' new' → logprob: -8.861617088317871
    7. 'new' → logprob: -8.861617088317871
    8. '           ' → logprob: -8.861617088317871
    9. '                   ' → logprob: -8.986617088317871
    10. '```' → logprob: -9.111617088317871

Token 540: ' wall' (ID: 9688)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9711699485778809
    2. '               ' → logprob: -1.0961699485778809
    3. 'continue' → logprob: -1.9711699485778809
    4. '2' → logprob: -2.471169948577881
    5. '#' → logprob: -4.096169948577881
    6. '0' → logprob: -4.221169948577881
    7. 'wall' → logprob: -4.971169948577881
    8. ' new' → logprob: -5.096169948577881
    9. '                   ' → logprob: -5.346169948577881
    10. ' continue' → logprob: -5.471169948577881

Token 541: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10037057101726532
    2. '==' → logprob: -2.3503706455230713
    3. '[' → logprob: -9.475370407104492
    4. '==-' → logprob: -10.850370407104492
    5. ' >=' → logprob: -11.475370407104492
    6. '   ' → logprob: -11.725370407104492
    7. ' ' → logprob: -12.225370407104492
    8. ' >' → logprob: -12.225370407104492
    9. ']==' → logprob: -12.475370407104492
    10. '>' → logprob: -12.475370407104492

Token 542: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04556252062320709
    2. ' ' → logprob: -3.170562505722046
    3. '-' → logprob: -6.295562744140625
    4. '3' → logprob: -8.170562744140625
    5. ' -' → logprob: -8.170562744140625
    6. '0' → logprob: -10.920562744140625
    7. '   ' → logprob: -10.983062744140625
    8. '4' → logprob: -11.108062744140625
    9. '9' → logprob: -11.295562744140625
    10. 'n' → logprob: -11.483062744140625

Token 543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014551517553627491
    2. '-' → logprob: -4.389551639556885
    3. ' ' → logprob: -6.764551639556885
    4. '3' → logprob: -7.764551639556885
    5. ' -' → logprob: -9.014551162719727
    6. '0' → logprob: -9.264551162719727
    7. '9' → logprob: -10.139551162719727
    8. '1' → logprob: -10.389551162719727
    9. '100' → logprob: -10.389551162719727
    10. '10' → logprob: -10.577051162719727

Token 544: ' slide' (ID: 24969)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025342104956507683
    2. ':
' → logprob: -4.400341987609863
    3. 'new' → logprob: -4.775341987609863
    4. ':' → logprob: -6.400341987609863
    5. 'continue' → logprob: -6.775341987609863
    6. ' new' → logprob: -8.025341987609863
    7. '           ' → logprob: -8.275341987609863
    8. '):
' → logprob: -8.400341987609863
    9. '                   ' → logprob: -8.775341987609863
    10. ',' → logprob: -8.900341987609863

Token 545: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0088129043579102
    2. '=' → logprob: -1.6338129043579102
    3. 'down' → logprob: -2.13381290435791
    4. '               ' → logprob: -2.25881290435791
    5. '           ' → logprob: -2.88381290435791
    6. 'new' → logprob: -3.63381290435791
    7. '   ' → logprob: -3.63381290435791
    8. ',' → logprob: -3.88381290435791
    9. ':' → logprob: -3.88381290435791
    10. '_down' → logprob: -4.13381290435791

Token 546: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010824844241142273
    2. 'new' → logprob: -5.260824680328369
    3. ' new' → logprob: -5.885824680328369
    4. '           ' → logprob: -6.885824680328369
    5. ':
' → logprob: -7.635824680328369
    6. '                   ' → logprob: -7.885824680328369
    7. ',' → logprob: -8.260825157165527
    8. ':' → logprob: -8.885825157165527
    9. '                
' → logprob: -9.385825157165527
    10. '   ' → logprob: -10.010825157165527

Token 547: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.005908177234232426
    2. 'if' → logprob: -5.630908012390137
    3. 'continue' → logprob: -7.380908012390137
    4. '0' → logprob: -7.505908012390137
    5. 'n' → logprob: -8.630908012390137
    6. '               ' → logprob: -8.755908012390137
    7. ' new' → logprob: -8.880908012390137
    8. 'while' → logprob: -8.880908012390137
    9. 'import' → logprob: -9.130908012390137
    10. '                   ' → logprob: -9.130908012390137

Token 548: ' slide' (ID: 24969)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.05726010724902153
    2. 'if' → logprob: -3.807260036468506
    3. 'slide' → logprob: -4.182260036468506
    4. '#' → logprob: -4.432260036468506
    5. 'continue' → logprob: -6.057260036468506
    6. '   ' → logprob: -7.307260036468506
    7. 'sl' → logprob: -7.557260036468506
    8. 'temp' → logprob: -7.682260036468506
    9. 'nf' → logprob: -7.682260036468506
    10. 'while' → logprob: -8.307260513305664

Token 549: ' down' (ID: 1917)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11013509333133698
    2. '=' → logprob: -2.610135078430176
    3. '_floor' → logprob: -4.485135078430176
    4. 'to' → logprob: -4.735135078430176
    5. 'new' → logprob: -5.610135078430176
    6. '_down' → logprob: -6.735135078430176
    7. 'floor' → logprob: -6.860135078430176
    8. '               ' → logprob: -7.110135078430176
    9. 'down' → logprob: -7.360135078430176
    10. '   ' → logprob: -8.110135078430176

Token 550: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.900076687335968
    2. 'new' → logprob: -1.2750766277313232
    3. '=' → logprob: -2.2750766277313232
    4. 'while' → logprob: -2.4000766277313232
    5. '               ' → logprob: -2.9000766277313232
    6. 'to' → logprob: -3.9000766277313232
    7. ' to' → logprob: -4.650076866149902
    8. 'down' → logprob: -4.900076866149902
    9. ' new' → logprob: -5.275076866149902
    10. ' while' → logprob: -5.400076866149902

Token 551: ' ladder' (ID: 63451)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.337447851896286
    2. 'nf' → logprob: -1.5874478816986084
    3. 'floor' → logprob: -3.3374478816986084
    4. ' nf' → logprob: -4.587447643280029
    5. 'the' → logprob: -4.962447643280029
    6. 'n' → logprob: -5.087447643280029
    7. 'next' → logprob: -5.212447643280029
    8. 'max' → logprob: -5.462447643280029
    9. 'min' → logprob: -5.712447643280029
    10. ' ' → logprob: -6.087447643280029

Token 552: ' top' (ID: 2344)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1413418054580688
    2. '               ' → logprob: -1.2663418054580688
    3. 'new' → logprob: -2.3913416862487793
    4. 'top' → logprob: -3.2663416862487793
    5. ' new' → logprob: -3.5163416862487793
    6. '=' → logprob: -3.8913416862487793
    7. '           ' → logprob: -3.8913416862487793
    8. 'floor' → logprob: -3.8913416862487793
    9. 'start' → logprob: -4.141341686248779
    10. 'while' → logprob: -4.141341686248779

Token 553: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2833302617073059
    2. ' =' → logprob: -2.283330202102661
    3. 'new' → logprob: -2.658330202102661
    4. ' new' → logprob: -3.283330202102661
    5. ',' → logprob: -4.15833044052124
    6. '=' → logprob: -5.03333044052124
    7. '           ' → logprob: -5.40833044052124
    8. '                   ' → logprob: -5.90833044052124
    9. ' if' → logprob: -6.28333044052124
    10. ' while' → logprob: -7.40833044052124

Token 554: ' normal' (ID: 6078)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.2803042531013489
    2. 'floor' → logprob: -2.530304193496704
    3. '0' → logprob: -2.655304193496704
    4. 'new' → logprob: -3.030304193496704
    5. 'the' → logprob: -4.155304431915283
    6. 'bottom' → logprob: -4.655304431915283
    7. 'lowest' → logprob: -5.030304431915283
    8. ' nf' → logprob: -5.280304431915283
    9. 'next' → logprob: -6.280304431915283
    10. 'n' → logprob: -6.530304431915283

Token 555: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.5591524839401245
    2. '_floor' → logprob: -1.1841524839401245
    3. 'new' → logprob: -2.559152603149414
    4. '               ' → logprob: -4.309152603149414
    5. ' new' → logprob: -5.059152603149414
    6. ' floor' → logprob: -5.059152603149414
    7. '=' → logprob: -5.684152603149414
    8. '           ' → logprob: -5.809152603149414
    9. ' =' → logprob: -5.809152603149414
    10. '```' → logprob: -6.559152603149414

Token 556: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.337632417678833
    2. 'new' → logprob: -2.087632417678833
    3. '           ' → logprob: -2.212632417678833
    4. ' =' → logprob: -3.962632417678833
    5. ' new' → logprob: -4.837632179260254
    6. ',' → logprob: -4.837632179260254
    7. 'while' → logprob: -5.087632179260254
    8. '=' → logprob: -5.337632179260254
    9. ' while' → logprob: -6.337632179260254
    10. 'if' → logprob: -6.837632179260254

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01516682282090187
    2. 'new' → logprob: -4.390166759490967
    3. '           ' → logprob: -6.890166759490967
    4. ' new' → logprob: -7.015166759490967
    5. '                   ' → logprob: -8.640167236328125
    6. ',' → logprob: -9.265167236328125
    7. ' =' → logprob: -9.265167236328125
    8. 'while' → logprob: -9.765167236328125
    9. 'down' → logprob: -9.890167236328125
    10. '=' → logprob: -10.140167236328125

Token 558: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08604786545038223
    2. 'if' → logprob: -2.586047887802124
    3. 'while' → logprob: -5.711047649383545
    4. '               ' → logprob: -6.711047649383545
    5. '           ' → logprob: -7.336047649383545
    6. 'slide' → logprob: -8.461048126220703
    7. '                   ' → logprob: -8.586048126220703
    8. 'idx' → logprob: -8.711048126220703
    9. 'for' → logprob: -8.711048126220703
    10. 'k' → logprob: -8.711048126220703

Token 559: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.054331451654434204
    2. 'if' → logprob: -3.1793315410614014
    3. '               ' → logprob: -5.679331302642822
    4. '#' → logprob: -5.929331302642822
    5. 'while' → logprob: -7.304331302642822
    6. '                   ' → logprob: -7.304331302642822
    7. 'slide' → logprob: -7.304331302642822
    8. '           ' → logprob: -7.554331302642822
    9. 'temp' → logprob: -7.804331302642822
    10. 'idx' → logprob: -7.929331302642822

Token 560: ' ladder' (ID: 63451)
  Prédit: ' nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nf' → logprob: -0.8037130236625671
    2. 'nf' → logprob: -1.553713083267212
    3. ' next' → logprob: -2.678713083267212
    4. 'wall' → logprob: -3.053713083267212
    5. ' wall' → logprob: -3.053713083267212
    6. ' new' → logprob: -3.178713083267212
    7. 'next' → logprob: -3.178713083267212
    8. 'new' → logprob: -3.303713083267212
    9. ' top' → logprob: -4.303712844848633
    10. 'top' → logprob: -4.678712844848633

Token 561: ' on' (ID: 402)
  Prédit: '_top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.9354244470596313
    2. 'top' → logprob: -1.4354244470596313
    3. '[top' → logprob: -2.685424327850342
    4. '               ' → logprob: -3.560424327850342
    5. 's' → logprob: -3.685424327850342
    6. ',' → logprob: -3.685424327850342
    7. ' and' → logprob: -3.810424327850342
    8. '==' → logprob: -3.935424327850342
    9. ' at' → logprob: -4.060424327850342
    10. 'and' → logprob: -4.060424327850342

Token 562: ' that' (ID: 484)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.36625921726226807
    2. 'new' → logprob: -1.991259217262268
    3. ' next' → logprob: -2.3662590980529785
    4. 'nf' → logprob: -3.4912590980529785
    5. ' new' → logprob: -4.2412590980529785
    6. '(next' → logprob: -4.9912590980529785
    7. ' nf' → logprob: -4.9912590980529785
    8. 'a' → logprob: -5.4912590980529785
    9. 'top' → logprob: -5.6162590980529785
    10. 'b' → logprob: -5.8662590980529785

Token 563: ' floor' (ID: 8350)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.11813178658485413
    2. ' nf' → logprob: -3.1181318759918213
    3. 'next' → logprob: -3.6181318759918213
    4. 'new' → logprob: -4.368131637573242
    5. ' next' → logprob: -4.493131637573242
    6. ' new' → logprob: -5.368131637573242
    7. '[next' → logprob: -6.118131637573242
    8. 'n' → logprob: -6.368131637573242
    9. 'floor' → logprob: -6.368131637573242
    10. 'top' → logprob: -6.618131637573242

Token 564: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1432703733444214
    2. ' ==' → logprob: -1.6432703733444214
    3. '==' → logprob: -2.018270492553711
    4. ':' → logprob: -2.143270492553711
    5. ':
' → logprob: -2.518270492553711
    6. ' and' → logprob: -2.893270492553711
    7. ',' → logprob: -3.018270492553711
    8. '                   ' → logprob: -4.268270492553711
    9. '           ' → logprob: -5.143270492553711
    10. '=' → logprob: -5.393270492553711

Token 565: ' slide' (ID: 24969)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.26101455092430115
    2. ' new' → logprob: -1.7610145807266235
    3. '                   ' → logprob: -4.011014461517334
    4. 'if' → logprob: -4.636014461517334
    5. '#' → logprob: -5.136014461517334
    6. '               ' → logprob: -5.511014461517334
    7. 'j' → logprob: -5.761014461517334
    8. 'while' → logprob: -5.761014461517334
    9. 'slide' → logprob: -6.011014461517334
    10. 'i' → logprob: -6.261014461517334

Token 566: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.3852188289165497
    2. 'up' → logprob: -2.260218858718872
    3. '_floor' → logprob: -2.635218858718872
    4. '_down' → logprob: -3.260218858718872
    5. 'new' → logprob: -4.010218620300293
    6. 's' → logprob: -4.260218620300293
    7. 'to' → logprob: -4.260218620300293
    8. 'top' → logprob: -4.635218620300293
    9. '_top' → logprob: -4.760218620300293
    10. ' down' → logprob: -4.760218620300293

Token 567: ' to' (ID: 316)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5977848172187805
    2. ' =' → logprob: -1.0977847576141357
    3. 'down' → logprob: -3.5977847576141357
    4. '=' → logprob: -3.8477847576141357
    5. '                   ' → logprob: -4.097784996032715
    6. 'new' → logprob: -4.597784996032715
    7. 'while' → logprob: -4.597784996032715
    8. ',' → logprob: -4.972784996032715
    9. ' down' → logprob: -5.097784996032715
    10. ' to' → logprob: -5.972784996032715

Token 568: ' top' (ID: 2344)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.5720442533493042
    2. 'top' → logprob: -1.5720442533493042
    3. 'new' → logprob: -1.9470442533493042
    4. 'next' → logprob: -3.4470443725585938
    5. ' nf' → logprob: -4.447044372558594
    6. 'floor' → logprob: -4.572044372558594
    7. 'a' → logprob: -4.572044372558594
    8. 'n' → logprob: -5.072044372558594
    9. '0' → logprob: -5.822044372558594
    10. 'bottom' → logprob: -5.947044372558594

Token 569: '
' (ID: 198)
  Prédit: '_floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.08423171192407608
    2. '               ' → logprob: -3.0842316150665283
    3. ' =' → logprob: -3.7092316150665283
    4. 'floor' → logprob: -5.209231853485107
    5. '                   ' → logprob: -6.084231853485107
    6. 'new' → logprob: -7.709231853485107
    7. '           ' → logprob: -7.959231853485107
    8. '=' → logprob: -8.08423137664795
    9. 'loor' → logprob: -8.58423137664795
    10. '_f' → logprob: -8.83423137664795

Token 570: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006186736281961203
    2. 'new' → logprob: -8.125618934631348
    3. ' new' → logprob: -9.125618934631348
    4. ' =' → logprob: -9.250618934631348
    5. ',' → logprob: -10.000618934631348
    6. '                   ' → logprob: -10.250618934631348
    7. '=' → logprob: -11.625618934631348
    8. '           ' → logprob: -12.250618934631348
    9. '```' → logprob: -12.250618934631348
    10. ' and' → logprob: -12.375618934631348

Token 571: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.10367803275585175
    2. 'if' → logprob: -2.478677988052368
    3. '               ' → logprob: -4.728678226470947
    4. ' new' → logprob: -6.103678226470947
    5. 'while' → logprob: -7.103678226470947
    6. 'for' → logprob: -7.853678226470947
    7. 'i' → logprob: -8.103677749633789
    8. '#' (adapté à ' #') → logprob: -8.103677749633789
    9. ' if' → logprob: -8.103677749633789
    10. 'idx' → logprob: -8.478677749633789

Token 572: ' otherwise' (ID: 10275)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6642537117004395
    2. 'if' → logprob: -0.9142537117004395
    3. '               ' → logprob: -2.9142537117004395
    4. '#' → logprob: -4.1642537117004395
    5. 'while' → logprob: -5.9142537117004395
    6. 'idx' → logprob: -6.1642537117004395
    7. ' if' → logprob: -6.2892537117004395
    8. ' new' → logprob: -6.4142537117004395
    9. 'current' → logprob: -7.1642537117004395
    10. 'for' → logprob: -7.2892537117004395

Token 573: ',' (ID: 11)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03925412520766258
    2. ' new' → logprob: -3.4142541885375977
    3. 'if' → logprob: -5.539254188537598
    4. '               ' → logprob: -7.289254188537598
    5. '                   ' → logprob: -7.789254188537598
    6. ' if' → logprob: -8.414254188537598
    7. '0' → logprob: -9.164254188537598
    8. 'slide' → logprob: -9.539254188537598
    9. 'continue' → logprob: -10.539254188537598
    10. 'down' → logprob: -11.289254188537598

Token 574: ' stay' (ID: 5092)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.014078646898269653
    2. ' new' → logprob: -4.514078617095947
    3. 'while' → logprob: -7.389078617095947
    4. 'if' → logprob: -7.389078617095947
    5. '                   ' → logprob: -7.514078617095947
    6. 'slide' → logprob: -7.639078617095947
    7. '#' → logprob: -9.014079093933105
    8. 'for' → logprob: -9.139079093933105
    9. 'continue' → logprob: -9.139079093933105
    10. '               ' → logprob: -9.389079093933105

Token 575: ' on' (ID: 402)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.3178406059741974
    2. '_nf' → logprob: -1.817840576171875
    3. '=' → logprob: -2.942840576171875
    4. ' nf' → logprob: -3.817840576171875
    5. 'new' → logprob: -4.692840576171875
    6. ' =' → logprob: -4.692840576171875
    7. 'down' → logprob: -5.067840576171875
    8. '=n' → logprob: -5.692840576171875
    9. '               ' → logprob: -5.692840576171875
    10. 'n' → logprob: -6.817840576171875

Token 576: ' nf' (ID: 89636)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.006278686225414276
    2. ' nf' → logprob: -5.7562785148620605
    3. 'new' → logprob: -6.0062785148620605
    4. 'floor' → logprob: -8.006278991699219
    5. 'next' → logprob: -8.631278991699219
    6. 'n' → logprob: -10.256278991699219
    7. '0' → logprob: -10.756278991699219
    8. ' new' → logprob: -11.381278991699219
    9. 'the' → logprob: -12.006278991699219
    10. '   ' → logprob: -12.006278991699219

Token 577: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016199061647057533
    2. ' =' → logprob: -5.516199111938477
    3. 'new' → logprob: -5.641199111938477
    4. ' if' → logprob: -6.016199111938477
    5. '           ' → logprob: -6.641199111938477
    6. '
' → logprob: -6.766199111938477
    7. '=' → logprob: -6.891199111938477
    8. ',' → logprob: -7.391199111938477
    9. ' new' → logprob: -7.391199111938477
    10. '                
' → logprob: -7.641199111938477

Token 578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06417456269264221
    2. 'new' → logprob: -3.6891746520996094
    3. 'if' → logprob: -3.9391746520996094
    4. ' if' → logprob: -4.439174652099609
    5. ' new' → logprob: -5.314174652099609
    6. '```' → logprob: -7.564174652099609
    7. '
' → logprob: -9.18917465209961
    8. '           ' → logprob: -9.68917465209961
    9. 'floor' → logprob: -10.43917465209961
    10. '                
' → logprob: -10.43917465209961

Token 579: ' if' (ID: 538)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.532261073589325
    2. 'if' (adapté à ' if') → logprob: -0.907261073589325
    3. '               ' → logprob: -5.282260894775391
    4. '#' → logprob: -7.157260894775391
    5. ' new' → logprob: -7.407260894775391
    6. '                   ' → logprob: -7.782260894775391
    7. ' if' → logprob: -7.782260894775391
    8. 'idx' → logprob: -8.28226089477539
    9. 'while' → logprob: -8.28226089477539
    10. 'for' → logprob: -8.65726089477539

Token 580: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.16694866120815277
    2. ' next' → logprob: -2.7919485569000244
    3. '(next' → logprob: -3.1669485569000244
    4. 'a' → logprob: -4.4169487953186035
    5. 'b' → logprob: -4.6669487953186035
    6. 'new' → logprob: -5.5419487953186035
    7. ' (' → logprob: -5.6669487953186035
    8. 'wall' → logprob: -5.6669487953186035
    9. 'nf' → logprob: -5.9169487953186035
    10. 'n' → logprob: -6.0419487953186035

Token 581: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.8624639324116288e-06
    2. 'b' → logprob: -13.875001907348633
    3. '_n' → logprob: -15.250001907348633
    4. 'n' → logprob: -15.250001907348633
    5. '==' → logprob: -16.750001907348633
    6. '(n' → logprob: -17.375001907348633
    7. '_' → logprob: -17.375001907348633
    8. '=' → logprob: -18.000001907348633
    9. '[' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.000001907348633

Token 582: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -0.0028203281108289957
    2. '_ld' → logprob: -5.8778204917907715
    3. '_b' → logprob: -12.127820014953613
    4. 'lf' → logprob: -13.127820014953613
    5. 'ł' → logprob: -13.127820014953613
    6. 'b' → logprob: -13.627820014953613
    7. 'ldr' → logprob: -13.627820014953613
    8. 'l' → logprob: -13.877820014953613
    9. '_l' → logprob: -14.752820014953613
    10. 'ild' → logprob: -14.752820014953613

Token 583: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5318737030029297
    2. '==' → logprob: -0.9068737030029297
    3. '[n' → logprob: -5.78187370300293
    4. '][' → logprob: -5.90687370300293
    5. '[' → logprob: -6.78187370300293
    6. ']==' → logprob: -7.03187370300293
    7. ']' → logprob: -8.03187370300293
    8. ' ' → logprob: -8.90687370300293
    9. '           ' → logprob: -9.78187370300293
    10. '0' → logprob: -10.15687370300293

Token 584: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004286980722099543
    2. ' ' → logprob: -5.504286766052246
    3. '1' → logprob: -8.504286766052246
    4. 'b' → logprob: -12.754286766052246
    5. 'a' → logprob: -13.504286766052246
    6. '   ' → logprob: -14.629286766052246
    7. ' b' → logprob: -15.066786766052246
    8. ' a' → logprob: -15.754286766052246
    9. 'n' → logprob: -15.941786766052246
    10. '(' → logprob: -16.191787719726562

Token 585: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019891862757503986
    2. 'b' → logprob: -7.001989364624023
    3. '1' → logprob: -7.126989364624023
    4. 'a' → logprob: -8.876989364624023
    5. ' ' → logprob: -9.001989364624023
    6. ' b' → logprob: -12.939489364624023
    7. '   ' → logprob: -12.939489364624023
    8. '(' → logprob: -13.939489364624023
    9. 'n' → logprob: -13.939489364624023
    10. '(b' → logprob: -14.376989364624023

Token 586: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.15097232162952423
    2. 'and' → logprob: -2.025972366333008
    3. '               ' → logprob: -5.650972366333008
    4. '                   ' → logprob: -5.900972366333008
    5. ':
' → logprob: -6.400972366333008
    6. ':' → logprob: -8.275972366333008
    7. '           ' → logprob: -9.900972366333008
    8. '   ' → logprob: -10.775972366333008
    9. '                       ' → logprob: -11.650972366333008
    10. '	and' → logprob: -12.525972366333008

Token 587: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.049451377242803574
    2. 'new' → logprob: -3.7994513511657715
    3. '               ' → logprob: -3.9244513511657715
    4. ' new' → logprob: -5.2994513511657715
    5. '                       ' → logprob: -7.9244513511657715
    6. '   ' → logprob: -8.04945182800293
    7. '           ' → logprob: -9.04945182800293
    8. 'if' → logprob: -9.79945182800293
    9. '```' → logprob: -9.92445182800293
    10. ' if' → logprob: -10.04945182800293

Token 588: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.09584246575832367
    2. 'if' → logprob: -2.4708423614501953
    3. '                   ' → logprob: -5.845842361450195
    4. ' new' → logprob: -5.970842361450195
    5. ' if' → logprob: -8.220842361450195
    6. '                       ' → logprob: -8.220842361450195
    7. 'wall' → logprob: -8.470842361450195
    8. '               ' → logprob: -8.720842361450195
    9. 'slide' → logprob: -8.845842361450195
    10. '   ' → logprob: -9.095842361450195

Token 589: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -7.226628895296017e-06
    2. 'floor' → logprob: -11.875007629394531
    3. '_' → logprob: -16.87500762939453
    4. '   ' → logprob: -17.50000762939453
    5. 'Floor' → logprob: -17.75000762939453
    6. 'new' → logprob: -18.12500762939453
    7. '```' → logprob: -19.00000762939453
    8. ' floor' → logprob: -19.25000762939453
    9. '=' → logprob: -19.50000762939453
    10. '_fl' → logprob: -19.62500762939453

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077433347702
    2. ' =' → logprob: -0.9740774631500244
    3. '=a' → logprob: -16.099077224731445
    4. ' ' → logprob: -16.599077224731445
    5. '=b' → logprob: -16.724077224731445
    6. ',' → logprob: -16.724077224731445
    7. '   ' → logprob: -16.974077224731445
    8. '=n' → logprob: -17.224077224731445
    9. '==' → logprob: -17.974077224731445
    10. ')' → logprob: -18.099077224731445

Token 591: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002831626683473587
    2. ' a' → logprob: -6.12783145904541
    3. 'nf' → logprob: -8.37783145904541
    4. 'top' → logprob: -8.50283145904541
    5. 'n' → logprob: -9.37783145904541
    6. '0' → logprob: -10.00283145904541
    7. ' nf' → logprob: -11.12783145904541
    8. 'max' → logprob: -11.37783145904541
    9. 'floor' → logprob: -11.37783145904541
    10. 'b' → logprob: -11.87783145904541

Token 592: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -0.0004390134708955884
    2. 'top' → logprob: -8.125438690185547
    3. '[n' → logprob: -9.625438690185547
    4. 'Top' → logprob: -10.750438690185547
    5. '[' → logprob: -11.500438690185547
    6. '_bottom' → logprob: -11.625438690185547
    7. '[top' → logprob: -11.750438690185547
    8. '   ' → logprob: -12.125438690185547
    9. 'a' → logprob: -12.875438690185547
    10. '
' → logprob: -12.875438690185547

Token 593: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0003781224077101797
    2. '[new' → logprob: -8.625377655029297
    3. '[' → logprob: -9.125377655029297
    4. 'nf' → logprob: -10.375377655029297
    5. '[next' → logprob: -11.375377655029297
    6. 'new' → logprob: -11.500377655029297
    7. ' [' → logprob: -11.625377655029297
    8. '(n' → logprob: -11.750377655029297
    9. ' nf' → logprob: -13.125377655029297
    10. '_nf' → logprob: -13.375377655029297

Token 594: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3494116961956024
    2. 'nf' → logprob: -1.2244117259979248
    3. '[f' → logprob: -7.724411487579346
    4. '_nf' → logprob: -8.599411964416504
    5. '[' → logprob: -8.724411964416504
    6. '[n' → logprob: -9.599411964416504
    7. ' nf' → logprob: -9.724411964416504
    8. 'mf' → logprob: -11.599411964416504
    9. 'tf' → logprob: -11.974411964416504
    10. 'n' → logprob: -12.349411964416504

Token 595: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1605866253376007
    2. ']
' → logprob: -1.9105865955352783
    3. '[n' → logprob: -8.1605863571167
    4. ']
' → logprob: -10.2855863571167
    5. ']

' → logprob: -11.5355863571167
    6. ']+' → logprob: -11.9105863571167
    7. '               ' → logprob: -12.1605863571167
    8. ')' → logprob: -12.2855863571167
    9. ' ]' → logprob: -12.7855863571167
    10. '           ' → logprob: -12.9105863571167

Token 596: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006877103354781866
    2. 'else' → logprob: -5.0068769454956055
    3. ' else' → logprob: -8.756876945495605
    4. 'elif' → logprob: -13.006876945495605
    5. '           ' → logprob: -13.381876945495605
    6. '                   ' → logprob: -15.756876945495605
    7. '			' → logprob: -16.006877899169922
    8. '                ' → logprob: -16.631877899169922
    9. '              ' → logprob: -17.006877899169922
    10. '       ' → logprob: -17.256877899169922

Token 597: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.442257285118103
    2. '               ' → logprob: -1.192257285118103
    3. ' else' → logprob: -2.9422574043273926
    4. '           ' → logprob: -6.942257404327393
    5. 'elif' → logprob: -8.817256927490234
    6. '<|end|>' → logprob: -12.817256927490234
    7. ' elif' → logprob: -12.942256927490234
    8. '                ' → logprob: -13.067256927490234
    9. '                   ' → logprob: -13.192256927490234
    10. '	else' → logprob: -13.317256927490234

Token 598: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1566152125597
    2. 'new' → logprob: -2.7816152572631836
    3. ' new' → logprob: -3.2816152572631836
    4. ':' → logprob: -3.6566152572631836
    5. '               ' → logprob: -4.656615257263184
    6. ':
' → logprob: -4.781615257263184
    7. '                       ' → logprob: -7.781615257263184
    8. ':new' → logprob: -7.781615257263184
    9. '[new' → logprob: -7.906615257263184
    10. '                  ' → logprob: -9.406615257263184

Token 599: '                   ' (ID: 699)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7913966774940491
    2. 'new' → logprob: -1.0413966178894043
    3. ' new' → logprob: -1.7913966178894043
    4. ' b' → logprob: -3.6663966178894043
    5. '                   ' → logprob: -6.541396617889404
    6. '               ' → logprob: -9.791397094726562
    7. '                       ' → logprob: -11.416397094726562
    8. '                ' → logprob: -12.041397094726562
    9. '                    ' → logprob: -12.291397094726562
    10. 'next' → logprob: -12.541397094726562

Token 600: ' new' (ID: 620)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7056300044059753
    2. 'new' (adapté à ' new') → logprob: -0.7056300044059753
    3. ' new' → logprob: -4.455629825592041
    4. ' b' → logprob: -7.205629825592041
    5. '                   ' → logprob: -9.9556303024292
    6. '               ' → logprob: -13.5806303024292
    7. '_new' → logprob: -15.2056303024292
    8. 'New' → logprob: -15.7056303024292
    9. '                       ' → logprob: -15.7056303024292
    10. '                    ' → logprob: -16.080629348754883

Token 601: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.00017886889690998942
    2. 'floor' → logprob: -8.750179290771484
    3. 'b' → logprob: -11.625179290771484
    4. '_b' → logprob: -12.000179290771484
    5. '_top' → logprob: -12.250179290771484
    6. '_fl' → logprob: -15.375179290771484
    7. '_' → logprob: -15.750179290771484
    8. 'Floor' → logprob: -16.875179290771484
    9. '_f' → logprob: -17.750179290771484
    10. 'flo' → logprob: -18.125179290771484

Token 602: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. '=n' → logprob: -19.131715774536133
    4. ' ' → logprob: -20.756715774536133
    5. '=
' → logprob: -20.881715774536133
    6. ')' → logprob: -21.131715774536133
    7. ']' → logprob: -21.881715774536133
    8. '＝' → logprob: -22.131715774536133
    9. '=b' → logprob: -22.256715774536133
    10. '=a' → logprob: -22.381715774536133

Token 603: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.493430894101039e-05
    2. ' b' → logprob: -9.500075340270996
    3. '	b' → logprob: -18.37507438659668
    4. '   ' → logprob: -19.12507438659668
    5. '_b' → logprob: -20.75007438659668
    6. '           ' → logprob: -22.00007438659668
    7. 'a' → logprob: -22.37507438659668
    8. '       ' → logprob: -22.50007438659668
    9. '               ' → logprob: -22.75007438659668
    10. '    ' → logprob: -23.00007438659668

Token 604: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: -1.3856492842023727e-06
    2. 'top' → logprob: -13.750000953674316
    3. 'Top' → logprob: -16.500001907348633
    4. '[top' → logprob: -17.375001907348633
    5. '_' → logprob: -17.500001907348633
    6. '[_' → logprob: -18.125001907348633
    7. '_bottom' → logprob: -18.375001907348633
    8. 'b' → logprob: -18.500001907348633
    9. '_TOP' → logprob: -19.000001907348633
    10. '```' → logprob: -19.250001907348633

Token 605: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.3319124011322856e-05
    2. '[next' → logprob: -10.875022888183594
    3. '[new' → logprob: -12.875022888183594
    4. 'nf' → logprob: -14.125022888183594
    5. '```' → logprob: -15.125022888183594
    6. '[' → logprob: -15.250022888183594
    7. ' [' → logprob: -16.125022888183594
    8. '[
' → logprob: -16.250022888183594
    9. '
' → logprob: -16.875022888183594
    10. '\[' → logprob: -17.000022888183594

Token 606: 'f' (ID: 69)
  Prédit: 'nf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nf' → logprob: -0.00011617878044489771
    2. '[n' → logprob: -9.875116348266602
    3. 'f' → logprob: -10.625116348266602
    4. '_nf' → logprob: -10.625116348266602
    5. ' nf' → logprob: -11.500116348266602
    6. 'n' → logprob: -12.250116348266602
    7. '[f' → logprob: -14.500116348266602
    8. '[' → logprob: -15.250116348266602
    9. 'fn' → logprob: -16.0001163482666
    10. '0' → logprob: -16.5001163482666

Token 607: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008476253715343773
    2. '[n' → logprob: -7.125847816467285
    3. '           ' → logprob: -11.375847816467285
    4. '][' → logprob: -11.625847816467285
    5. ']
' → logprob: -12.500847816467285
    6. '<|end|>' → logprob: -12.500847816467285
    7. ' ]' → logprob: -12.750847816467285
    8. ']+' → logprob: -13.000847816467285
    9. '(n' → logprob: -13.250847816467285
    10. ']>' → logprob: -13.625847816467285

Token 608: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.457669562427327e-05
    2. 'if' → logprob: -10.25007438659668
    3. ' if' → logprob: -11.12507438659668
    4. '
' → logprob: -12.00007438659668
    5. '```' → logprob: -12.00007438659668
    6. '            
' → logprob: -12.50007438659668
    7. '<|end|>' → logprob: -12.62507438659668
    8. '               ' → logprob: -12.62507438659668
    9. '          ' → logprob: -15.00007438659668
    10. '       ' → logprob: -15.25007438659668

Token 609: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023321760818362236
    2. 'if' (adapté à ' if') → logprob: -3.7733218669891357
    3. ' if' → logprob: -9.523322105407715
    4. '          ' → logprob: -13.773322105407715
    5. '            
' → logprob: -14.523322105407715
    6. '       ' → logprob: -14.773322105407715
    7. '               ' → logprob: -15.023322105407715
    8. '   ' → logprob: -15.273322105407715
    9. '```' → logprob: -15.523322105407715
    10. 'new' → logprob: -15.898322105407715

Token 610: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2080269157886505
    2. ' not' → logprob: -1.7080268859863281
    3. 'new' → logprob: -5.083026885986328
    4. ' new' → logprob: -8.333026885986328
    5. 'visited' → logprob: -9.708026885986328
    6. '0' → logprob: -9.833026885986328
    7. '(not' → logprob: -11.083026885986328
    8. '	not' → logprob: -11.833026885986328
    9. ' ' → logprob: -12.083026885986328
    10. '   ' → logprob: -13.208026885986328

Token 611: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0004306692280806601
    2. ' visited' → logprob: -7.750430583953857
    3. 'visit' → logprob: -19.875431060791016
    4. '   ' → logprob: -20.625431060791016
    5. 'visible' → logprob: -20.625431060791016
    6. ' ' → logprob: -21.750431060791016
    7. 'vis' → logprob: -21.750431060791016
    8. 'Visited' → logprob: -21.875431060791016
    9. 'used' → logprob: -22.125431060791016
    10. '
' → logprob: -22.125431060791016

Token 612: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.676292231422849e-05
    2. '[new' → logprob: -11.000017166137695
    3. '[' → logprob: -17.750017166137695
    4. 'next' → logprob: -18.125017166137695
    5. '```' → logprob: -18.250017166137695
    6. '(next' → logprob: -19.875017166137695
    7. '   ' → logprob: -20.125017166137695
    8. ' [' → logprob: -20.375017166137695
    9. '[now' → logprob: -20.875017166137695
    10. '           ' → logprob: -22.000017166137695

Token 613: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.006151323672384024
    2. 'b' → logprob: -5.13115119934082
    3. '[next' → logprob: -8.63115119934082
    4. '][' → logprob: -10.25615119934082
    5. 'next' → logprob: -13.25615119934082
    6. '[b' → logprob: -13.63115119934082
    7. '[' → logprob: -13.75615119934082
    8. '[new' → logprob: -14.38115119934082
    9. '	b' → logprob: -14.63115119934082
    10. '```' → logprob: -14.75615119934082

Token 614: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -13.000004768371582
    3. '_ld' → logprob: -13.000004768371582
    4. '][' → logprob: -16.5000057220459
    5. '_b' → logprob: -16.5000057220459
    6. 'b' → logprob: -17.0000057220459
    7. 'lds' → logprob: -17.0000057220459
    8. '1' → logprob: -17.1250057220459
    9. 'ild' → logprob: -17.5000057220459
    10. 'ldr' → logprob: -18.0000057220459

Token 615: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0036877207458019257
    2. '[new' → logprob: -5.628687858581543
    3. ']' → logprob: -9.753687858581543
    4. ' ][' → logprob: -11.253687858581543
    5. 'new' → logprob: -11.628687858581543
    6. '   ' → logprob: -12.378687858581543
    7. ']][' → logprob: -14.753687858581543
    8. '       ' → logprob: -14.878687858581543
    9. ''][' → logprob: -14.878687858581543
    10. '[' → logprob: -15.003687858581543

Token 616: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -5.512236498361744e-07
    2. ' new' → logprob: -14.500000953674316
    3. '[new' → logprob: -21.5
    4. '	new' → logprob: -21.625
    5. 'New' → logprob: -22.875
    6. '   ' → logprob: -23.0
    7. '_new' → logprob: -23.125
    8. ')new' → logprob: -23.75
    9. '新' → logprob: -24.0
    10. '```' → logprob: -24.625

Token 617: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -4.961759259458631e-06
    2. 'floor' → logprob: -12.250004768371582
    3. 'Floor' → logprob: -16.5000057220459
    4. '.floor' → logprob: -18.2500057220459
    5. 'loor' → logprob: -18.5000057220459
    6. ' floor' → logprob: -18.8750057220459
    7. '_f' → logprob: -19.1250057220459
    8. '-floor' → logprob: -19.7500057220459
    9. 'new' → logprob: -20.0000057220459
    10. '_' → logprob: -20.1250057220459

Token 618: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5864396095275879
    2. ']:
' → logprob: -0.8364396095275879
    3. ']' → logprob: -4.586439609527588
    4. ']:
' → logprob: -9.08643913269043
    5. ']:

' → logprob: -9.58643913269043
    6. ' ]' → logprob: -9.83643913269043
    7. ']]:
' → logprob: -12.08643913269043
    8. ']:


' → logprob: -13.08643913269043
    9. ']=' → logprob: -13.21143913269043
    10. '"]:' → logprob: -13.71143913269043

Token 619: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011737081513274461
    2. '```' → logprob: -10.125117301940918
    3. 'visited' → logprob: -10.375117301940918
    4. '           ' → logprob: -10.375117301940918
    5. ' visited' → logprob: -11.875117301940918
    6. '                   ' → logprob: -12.750117301940918
    7. '                               ' → logprob: -13.750117301940918
    8. '                       ' → logprob: -14.250117301940918
    9. '       ' → logprob: -14.500117301940918
    10. '                
' → logprob: -14.500117301940918

Token 620: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.8595402836799622
    2. '               ' → logprob: -1.2345402240753174
    3. '                   ' → logprob: -1.6095402240753174
    4. ' visited' → logprob: -2.4845402240753174
    5. ' queue' → logprob: -6.6095404624938965
    6. 'queue' → logprob: -7.6095404624938965
    7. '```' → logprob: -8.734539985656738
    8. '   ' → logprob: -9.109539985656738
    9. '                       ' → logprob: -9.234539985656738
    10. '           ' → logprob: -10.109539985656738

Token 621: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -2.935296834039036e-06
    2. '[new' → logprob: -12.75000286102295
    3. '[' → logprob: -17.250003814697266
    4. '[now' → logprob: -19.125003814697266
    5. '```' → logprob: -19.750003814697266
    6. ')[' → logprob: -20.625003814697266
    7. ' [' → logprob: -21.000003814697266
    8. '(next' → logprob: -21.125003814697266
    9. '][' → logprob: -21.125003814697266
    10. '   ' → logprob: -21.500003814697266

Token 622: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -8.327856630785391e-05
    2. '[next' → logprob: -9.625082969665527
    3. 'b' → logprob: -11.875082969665527
    4. '[' → logprob: -12.375082969665527
    5. '[new' → logprob: -12.750082969665527
    6. '[b' → logprob: -13.750082969665527
    7. 'bled' → logprob: -14.125082969665527
    8. '][' → logprob: -14.375082969665527
    9. '   ' → logprob: -16.125083923339844
    10. '```' → logprob: -16.625083923339844

Token 623: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -5.6457742175552994e-05
    2. '[' → logprob: -10.000056266784668
    3. '_ld' → logprob: -11.875056266784668
    4. 'led' → logprob: -13.875056266784668
    5. '[next' → logprob: -14.500056266784668
    6. 'l' → logprob: -14.875056266784668
    7. '][' → logprob: -15.000056266784668
    8. '1' → logprob: -15.375056266784668
    9. '_[' → logprob: -15.500056266784668
    10. 'td' → logprob: -15.875056266784668

Token 624: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16025379300117493
    2. '[new' → logprob: -1.9102537631988525
    3. ']' → logprob: -11.035253524780273
    4. ' ][' → logprob: -12.035253524780273
    5. '[' → logprob: -12.410253524780273
    6. 'new' → logprob: -14.410253524780273
    7. ''][' → logprob: -14.410253524780273
    8. ']][' → logprob: -14.785253524780273
    9. '[next' → logprob: -14.910253524780273
    10. '"][' → logprob: -15.160253524780273

Token 625: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.9361264946837764e-07
    2. ' new' → logprob: -16.5
    3. '[new' → logprob: -20.0
    4. '	new' → logprob: -22.5
    5. '   ' → logprob: -23.875
    6. 'New' → logprob: -24.125
    7. ')new' → logprob: -24.5
    8. '_new' → logprob: -24.75
    9. '               ' → logprob: -25.75
    10. '(new' → logprob: -25.875

Token 626: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.00012035090912831947
    2. 'Floor' → logprob: -9.125120162963867
    3. 'loor' → logprob: -11.750120162963867
    4. 'floor' → logprob: -13.125120162963867
    5. '_room' → logprob: -14.875120162963867
    6. 'oor' → logprob: -15.000120162963867
    7. '_f' → logprob: -15.750120162963867
    8. '.floor' → logprob: -16.000120162963867
    9. ' floor' → logprob: -16.000120162963867
    10. '```' → logprob: -16.875120162963867

Token 627: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009883884340524673
    2. ']=' → logprob: -7.000988483428955
    3. '=' → logprob: -9.500988006591797
    4. '=True' → logprob: -14.000988006591797
    5. ' =' → logprob: -14.375988006591797
    6. '[new' → logprob: -15.000988006591797
    7. ' ]' → logprob: -15.750988006591797
    8. '[' → logprob: -15.875988006591797
    9. ')' → logprob: -16.000988006591797
    10. 'True' → logprob: -17.375988006591797

Token 628: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3905175030231476
    2. ' =' → logprob: -1.1405174732208252
    3. '[new' → logprob: -6.390517711639404
    4. '=True' → logprob: -6.640517711639404
    5. ']' → logprob: -8.015517234802246
    6. '[' → logprob: -8.765517234802246
    7. ']=' → logprob: -9.265517234802246
    8. '               ' → logprob: -10.265517234802246
    9. '                   ' → logprob: -11.640517234802246
    10. '[next' → logprob: -11.765517234802246

Token 629: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -20.126502990722656
    4. '=True' → logprob: -21.501502990722656
    5. 'true' → logprob: -22.626502990722656
    6. '   ' → logprob: -23.126502990722656
    7. '[' → logprob: -23.751502990722656
    8. 'False' → logprob: -24.376502990722656
    9. 'TRUE' → logprob: -24.876502990722656
    10. '.True' → logprob: -24.876502990722656

Token 630: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010803976096212864
    2. '
' → logprob: -5.635804176330566
    3. '<|end|>' → logprob: -6.010804176330566
    4. '```' → logprob: -6.260804176330566
    5. '                
' → logprob: -7.135804176330566
    6. '(queue' → logprob: -7.135804176330566
    7. '                   ' → logprob: -8.010804176330566
    8. '           ' → logprob: -8.260804176330566
    9. ',' → logprob: -8.885804176330566
    10. '			' → logprob: -9.885804176330566

Token 631: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009648191626183689
    2. '
' → logprob: -7.500964641571045
    3. '```' → logprob: -9.125965118408203
    4. '			' → logprob: -9.625965118408203
    5. ' queue' → logprob: -9.625965118408203
    6. 'queue' → logprob: -9.750965118408203
    7. '<|end|>' → logprob: -11.000965118408203
    8. '           ' → logprob: -11.000965118408203
    9. '   ' → logprob: -11.250965118408203
    10. '       ' → logprob: -11.375965118408203

Token 632: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.30657345056533813
    2. ' queue' → logprob: -1.6815733909606934
    3. '               ' → logprob: -2.5565733909606934
    4. '           ' → logprob: -8.556573867797852
    5. '   ' → logprob: -9.056573867797852
    6. '       ' → logprob: -10.431573867797852
    7. '	queue' → logprob: -11.306573867797852
    8. '```' → logprob: -11.306573867797852
    9. '                   ' → logprob: -11.681573867797852
    10. '(queue' → logprob: -12.056573867797852

Token 633: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1160349458805285e-05
    2. '.' → logprob: -11.500011444091797
    3. '.extend' → logprob: -14.875011444091797
    4. 'append' → logprob: -15.125011444091797
    5. '.p' → logprob: -15.875011444091797
    6. '.enqueue' → logprob: -16.375011444091797
    7. '.app' → logprob: -17.000011444091797
    8. ').' → logprob: -17.875011444091797
    9. '```' → logprob: -17.875011444091797
    10. '   ' → logprob: -17.875011444091797

Token 634: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011749862460419536
    2. '(' → logprob: -6.7511749267578125
    3. '(next' → logprob: -12.251174926757812
    4. '(
' → logprob: -18.626174926757812
    5. '(((' → logprob: -18.751174926757812
    6. '(new' → logprob: -18.876174926757812
    7. ' ((' → logprob: -19.501174926757812
    8. '```' → logprob: -19.626174926757812
    9. ' (' → logprob: -20.251174926757812
    10. '[(' → logprob: -20.626174926757812

Token 635: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.1279553291387856e-05
    2. 'new' → logprob: -11.500011444091797
    3. ' next' → logprob: -13.750011444091797
    4. '	next' → logprob: -18.000011444091797
    5. '   ' → logprob: -18.375011444091797
    6. '(next' → logprob: -18.875011444091797
    7. '[next' → logprob: -20.875011444091797
    8. ',next' → logprob: -22.625011444091797
    9. '               ' → logprob: -22.875011444091797
    10. '           ' → logprob: -23.250011444091797

Token 636: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.933173426659778e-05
    2. 'b' → logprob: -9.625069618225098
    3. ',' → logprob: -13.750069618225098
    4. '[next' → logprob: -14.125069618225098
    5. ',next' → logprob: -14.625069618225098
    6. '(next' → logprob: -15.250069618225098
    7. '_bl' → logprob: -15.625069618225098
    8. '[' → logprob: -16.62506866455078
    9. ')' → logprob: -16.75006866455078
    10. '_,' → logprob: -16.75006866455078

Token 637: 'ld' (ID: 582)
  Prédit: 'ld'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ld' → logprob: -2.1888679839321412e-05
    2. '_ld' → logprob: -10.750021934509277
    3. '(ld' → logprob: -16.25002098083496
    4. 'lds' → logprob: -16.75002098083496
    5. ',' → logprob: -17.00002098083496
    6. 'd' → logprob: -17.25002098083496
    7. ' ld' → logprob: -17.25002098083496
    8. 'ild' → logprob: -17.37502098083496
    9. 'ł' → logprob: -17.62502098083496
    10. '[' → logprob: -17.75002098083496

Token 638: ',new' (ID: 60564)
  Prédit: ',new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',new' → logprob: -0.029753148555755615
    2. ',' → logprob: -3.5297532081604004
    3. 'new' → logprob: -13.154752731323242
    4. ' ,' → logprob: -14.654752731323242
    5. ' new' → logprob: -16.279752731323242
    6. ',
' → logprob: -16.904752731323242
    7. ')new' → logprob: -17.029752731323242
    8. '`,' → logprob: -17.779752731323242
    9. '```' → logprob: -17.904752731323242
    10. ',current' → logprob: -18.029752731323242

Token 639: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -9.758300438988954e-05
    2. 'floor' → logprob: -9.250097274780273
    3. 'loor' → logprob: -13.875097274780273
    4. '_fl' → logprob: -15.625097274780273
    5. 'Floor' → logprob: -15.875097274780273
    6. '_f' → logprob: -16.375097274780273
    7. '_' → logprob: -17.375097274780273
    8. 'new' → logprob: -17.625097274780273
    9. '_flow' → logprob: -17.875097274780273
    10. '.floor' → logprob: -18.500097274780273

Token 640: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.00035906085395254195
    2. 'j' → logprob: -8.250359535217285
    3. ',' → logprob: -9.250359535217285
    4. ' ,' → logprob: -13.375359535217285
    5. '   ' → logprob: -16.50035858154297
    6. '```' → logprob: -18.12535858154297
    7. '`,' → logprob: -18.37535858154297
    8. ' j' → logprob: -18.50035858154297
    9. '+j' → logprob: -18.75035858154297
    10. '`,`' → logprob: -19.00035858154297

Token 641: 'umps' (ID: 14938)
  Prédit: 'umps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umps' → logprob: -3.531315314830863e-06
    2. 'ump' → logprob: -13.125003814697266
    3. ' um' → logprob: -14.750003814697266
    4. '+' → logprob: -15.000003814697266
    5. ' jumps' → logprob: -15.500003814697266
    6. 'm' → logprob: -15.750003814697266
    7. '   ' → logprob: -16.000003814697266
    8. 'amps' → logprob: -16.750003814697266
    9. 'ups' → logprob: -16.875003814697266
    10. '
' → logprob: -17.125003814697266

Token 642: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.5491004129871726e-05
    2. ' +' → logprob: -10.000045776367188
    3. '+
' → logprob: -18.125045776367188
    4. '＋' → logprob: -20.250045776367188
    5. '+j' → logprob: -21.250045776367188
    6. ')+' → logprob: -23.000045776367188
    7. '+

' → logprob: -23.125045776367188
    8. '+i' → logprob: -23.375045776367188
    9. '   ' → logprob: -23.500045776367188
    10. '+[' → logprob: -23.500045776367188

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.625
    4. '))' → logprob: -18.5
    5. ')' → logprob: -18.625
    6. '```' → logprob: -19.0
    7. '+' → logprob: -20.75
    8. '`' → logprob: -21.1875
    9. '  ' → logprob: -21.25
    10. '       ' → logprob: -21.25

Token 644: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.723973582556937e-05
    2. '))
' → logprob: -11.125017166137695
    3. ')' → logprob: -13.125017166137695
    4. ')))' → logprob: -14.750017166137695
    5. ' ))' → logprob: -18.625017166137695
    6. '))
' → logprob: -18.750017166137695
    7. '))

' → logprob: -19.375017166137695
    8. '));' → logprob: -20.125017166137695
    9. '   ' → logprob: -20.375017166137695
    10. '+' → logprob: -20.625017166137695

Token 645: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011021859245374799
    2. '   ' → logprob: -9.375110626220703
    3. ' print' → logprob: -11.125110626220703
    4. '```' → logprob: -11.500110626220703
    5. ')' → logprob: -15.625110626220703
    6. '#print' → logprob: -15.750110626220703
    7. '``' → logprob: -16.750110626220703
    8. '
' → logprob: -16.875110626220703
    9. '#' → logprob: -17.625110626220703
    10. '<|end|>' → logprob: -17.625110626220703

Token 646: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.625001907348633
    3. '```' → logprob: -14.125001907348633
    4. ' print' → logprob: -15.375001907348633
    5. '(print' → logprob: -18.375001907348633
    6. '``' → logprob: -18.625001907348633
    7. '	print' → logprob: -19.625001907348633
    8. '#print' → logprob: -20.000001907348633
    9. '.print' → logprob: -21.625001907348633
    10. '(' → logprob: -22.125001907348633

Token 647: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. 'ans' → logprob: -16.875
    4. '()' → logprob: -17.75
    5. ' (' → logprob: -18.625
    6. '(answer' → logprob: -18.875
    7. '(abs' → logprob: -19.375
    8. '((' → logprob: -19.625
    9. '(an' → logprob: -19.625
    10. '	ans' → logprob: -19.875

Token 648: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -17.5
    3. ' )' → logprob: -17.625
    4. ')`' → logprob: -17.875
    5. ')
' → logprob: -18.25
    6. ')}' → logprob: -18.875
    7. '())' → logprob: -19.625
    8. '),' → logprob: -20.625
    9. '})' → logprob: -21.125
    10. '`)' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 646
Tokens correctement prédits (1ère position, stricte): 265
Tokens correctement prédits (1ère position, avec adaptation): 292
Tokens correctement prédits (top 10): 518
Précision stricte (1ère position): 41.02%
Précision adaptée (1ère position): 45.20%
Précision (top 10): 80.19%
================================================================================
