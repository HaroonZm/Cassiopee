================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

N = int(sys.stdin.readline())
A = list(map(int, sys.stdin.readline().split()))

# alternation pré-calculée de gauche à droite
left = [1]*N
for i in range(1, N):
    if A[i] != A[i-1]:
        left[i] = left[i-1] + 1

# alternation pré-calculée de droite à gauche
right = [1]*N
for i in range(N-2, -1, -1):
    if A[i] != A[i+1]:
        right[i] = right[i+1] + 1

# sans modification, le max
ans = max(left)

# pour chaque position, tenter de changer une séquence commençant ou terminant ici
# On essaye de considérer l'effet d'une inversion sur un intervalle [l,r]
# L'idée est de modifier un segment pour maximiser la séquence alternée autour du segment modifié.
# On essaie donc de vérifier pour chaque position, combien on peut raccorder de gauche et de droite.

# On veut calculer la longueur après inversion sur [l,r]
# Inversion change 0->1 et 1->0 dans ce segment, donc les alternances proche deviennent lisses si on choisit bien

# Pour accélérer, on va tester pour chaque position i la coupure (inversion) possible:
# on peut essayer d'inverser un segment de longueur 1 (un seul élément)
# on parcourt et on vérifie la nouvelle longueur possible sans reconstruire tout.

# Pour cela on essaye pour chaque position i, soit inverser uniquement A[i]
# Et on calcule la longueur de la plus grande alternance qui passe par i après inversion de A[i]

def val(x):
    return 1 - x  # inversion

max_len = ans

for i in range(N):
    # On inverse A[i] seul
    new_val = val(A[i])

    # On regarde a gauche:
    left_len = 1
    if i > 0 and new_val != A[i-1]:
        left_len += left[i-1]

    # On regarde a droite:
    right_len = 1
    if i < N-1 and new_val != A[i+1]:
        right_len += right[i+1]

    # on combine :
    total = left_len + right_len -1
    if total > max_len:
        max_len = total

# Pour inverser un segment de plus de 1 élément, le maximum est atteint en inversant un seul élément de la zone où la séquence est mauvaise.
# Pour vérifier cela, on vérifie pour joindre les séquences alternées de part et d'autre d'un intervalle où la séquence est cassée.

# On essaie tous les cassures (i où A[i] == A[i+1])
for i in range(N-1):
    if A[i] == A[i+1]:
        # inversion sur [i+1,i+1] déjà testé (single element)
        # On essaie inversion sur [i+1, j], mais ça est coûteux.
        # Optons pour une approche efficace:

        # longueur à gauche (à gauche de i+1)
        left_len = left[i]

        # longueur à droite (à droite de i+1)
        right_len = right[i+1]

        # Si on inverse [i+1, i+1] (faible gain), mais on peut inverser [i+1, i+1] déjà testé.
        # L'inversion peut connecter ces deux séquences en une seule séquence alternée parfaite.

        # Pour connecter les deux bouts, on vérifie si en inversant [i+1, i+1], cela fonctionne (déjà fait).
        # Sinon on peut envisager d'inverser une plus grande partie.

        # Mais le maximum de séquence alternée possible est au plus left_len + right_len

        candidate = left_len + right_len
        if candidate > max_len:
            max_len = candidate

print(max_len)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11250873655080795
    2. '.' → logprob: -2.612508773803711
    3. '\' → logprob: -4.862508773803711
    4. 'import' → logprob: -4.987508773803711
    5. '<|end|>' → logprob: -5.237508773803711
    6. 'newline' → logprob: -5.362508773803711
    7. '
' → logprob: -5.987508773803711
    8. '' → logprob: -6.612508773803711
    9. '```' → logprob: -6.612508773803711
    10. '\r' → logprob: -6.987508773803711

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29594722390174866
    2. '_trace' → logprob: -2.170947313308716
    3. 'trace' → logprob: -3.795947313308716
    4. 't' → logprob: -4.420947074890137
    5. '_exc' → logprob: -4.420947074890137
    6. '_soft' → logprob: -4.795947074890137
    7. '_sys' → logprob: -4.795947074890137
    8. 'x' → logprob: -5.045947074890137
    9. 's' → logprob: -5.045947074890137
    10. '_encoding' → logprob: -5.170947074890137

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0031121151987463236
    2. '9' → logprob: -6.003112316131592
    3. '8' → logprob: -7.503112316131592
    4. '6' → logprob: -9.378111839294434
    5. ' ' → logprob: -16.25311279296875
    6. '```' → logprob: -16.37811279296875
    7. ')' → logprob: -18.50311279296875
    8. '(' → logprob: -19.62811279296875
    9. '``' → logprob: -20.00311279296875
    10. '}' → logprob: -20.75311279296875

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.562005341053009
    2. ' ' → logprob: -1.1870052814483643
    3. ',' → logprob: -2.3120052814483643
    4. '=' → logprob: -4.062005519866943
    5. ' ,' → logprob: -4.937005519866943
    6. '.' → logprob: -8.062005043029785
    7. ')' → logprob: -8.812005043029785
    8. '  ' → logprob: -8.812005043029785
    9. '<|end|>' → logprob: -8.812005043029785
    10. ' >' → logprob: -9.062005043029785

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014424033463001251
    2. 'int' → logprob: -4.514423847198486
    3. ' ' → logprob: -5.889423847198486
    4. '10' → logprob: -7.639423847198486
    5. '20' → logprob: -10.264424324035645
    6. '5' → logprob: -10.639424324035645
    7. '100' → logprob: -11.139424324035645
    8. ' input' → logprob: -11.389424324035645
    9. '0' → logprob: -11.639424324035645
    10. '[int' → logprob: -12.139424324035645

Token 16: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006782424170523882
    2. '(input' → logprob: -7.625678062438965
    3. '(sys' → logprob: -8.750678062438965
    4. '('' → logprob: -11.750678062438965
    5. '(`' → logprob: -11.875678062438965
    6. '(
' → logprob: -12.000678062438965
    7. ' (' → logprob: -12.875678062438965
    8. '(N' → logprob: -13.250678062438965
    9. '()' → logprob: -13.875678062438965
    10. '(

' → logprob: -13.875678062438965

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4563276469707489
    2. '.' → logprob: -1.2063276767730713
    3. '.argv' → logprob: -2.9563276767730713
    4. '.readline' → logprob: -4.331327438354492
    5. '.input' → logprob: -6.956327438354492
    6. ' .' → logprob: -8.081327438354492
    7. '.stdout' → logprob: -8.581327438354492
    8. '.read' → logprob: -8.581327438354492
    9. '.)' → logprob: -9.331327438354492
    10. '.import' → logprob: -9.956327438354492

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0028406570199877024
    2. '.read' → logprob: -6.252840518951416
    3. '.' → logprob: -7.002840518951416
    4. '.readlines' → logprob: -14.502840995788574
    5. '.Read' → logprob: -14.877840995788574
    6. '.)' → logprob: -15.002840995788574
    7. '.READ' → logprob: -15.252840995788574
    8. '.stdin' → logprob: -15.752840995788574
    9. ' readline' → logprob: -16.002840042114258
    10. ' .' → logprob: -16.127840042114258

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009327941574156284
    2. '()' → logprob: -5.0093278884887695
    3. ')' → logprob: -6.0093278884887695
    4. '().' → logprob: -9.25932788848877
    5. '())
' → logprob: -10.38432788848877
    6. '()))' → logprob: -11.75932788848877
    7. ' ())' → logprob: -11.75932788848877
    8. '(' → logprob: -12.75932788848877
    9. '()[' → logprob: -12.88432788848877
    10. '())

' → logprob: -14.00932788848877

Token 20: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.028603434562683
    2. 'a' → logprob: -1.028603434562683
    3. 'for' → logprob: -2.1536035537719727
    4. 'data' → logprob: -3.1536035537719727
    5. 'tree' → logprob: -4.028603553771973
    6. 'dp' → logprob: -4.153603553771973
    7. 'S' → logprob: -4.403603553771973
    8. 'arr' → logprob: -4.528603553771973
    9. 'array' → logprob: -5.153603553771973
    10. 'x' → logprob: -5.403603553771973

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00911084283143282
    2. ' =' → logprob: -5.759110927581787
    3. '.' → logprob: -6.134110927581787
    4. '[]' → logprob: -6.384110927581787
    5. '=' → logprob: -7.009110927581787
    6. '[:]' → logprob: -7.634110927581787
    7. '.append' → logprob: -8.134110450744629
    8. '[i' → logprob: -9.259110450744629
    9. '[A' → logprob: -9.759110450744629
    10. '_' → logprob: -10.384110450744629

Token 22: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20644478499889374
    2. 'list' → logprob: -1.7064447402954102
    3. ' [' → logprob: -5.58144474029541
    4. '[' → logprob: -7.70644474029541
    5. ' []' → logprob: -7.70644474029541
    6. '[list' → logprob: -8.45644474029541
    7. '[int' → logprob: -9.70644474029541
    8. '[]' → logprob: -9.70644474029541
    9. ' ' → logprob: -11.58144474029541
    10. '=list' → logprob: -13.45644474029541

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27479416131973267
    2. '(map' → logprob: -1.899794101715088
    3. '(sys' → logprob: -2.649794101715088
    4. '(range' → logprob: -4.149794101715088
    5. '(int' → logprob: -5.899794101715088
    6. '()' → logprob: -8.274794578552246
    7. '(input' → logprob: -8.399794578552246
    8. '(eval' → logprob: -8.774794578552246
    9. '(s' → logprob: -8.899794578552246
    10. '(np' → logprob: -9.149794578552246

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02033737488090992
    2. '(' → logprob: -4.0203375816345215
    3. '(lambda' → logprob: -6.7703375816345215
    4. '(str' → logprob: -7.0203375816345215
    5. 'int' → logprob: -10.020337104797363
    6. '[int' → logprob: -10.520337104797363
    7. '=int' → logprob: -11.645337104797363
    8. '<int' → logprob: -11.645337104797363
    9. '(list' → logprob: -11.645337104797363
    10. '(eval' → logprob: -11.770337104797363

Token 25: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.006109266541898251
    2. '(' → logprob: -5.131109237670898
    3. '=sys' → logprob: -9.256109237670898
    4. ',' → logprob: -10.506109237670898
    5. 'sys' → logprob: -11.006109237670898
    6. ')' → logprob: -11.381109237670898
    7. '(Sys' → logprob: -12.131109237670898
    8. ' (' → logprob: -12.256109237670898
    9. '	sys' → logprob: -12.506109237670898
    10. '(s' → logprob: -12.756109237670898

Token 26: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005251899361610413
    2. ' sys' → logprob: -5.255251884460449
    3. '(sys' → logprob: -11.25525188446045
    4. '=sys' → logprob: -12.75525188446045
    5. '	sys' → logprob: -13.13025188446045
    6. '/sys' → logprob: -17.130252838134766
    7. ' ' → logprob: -17.255252838134766
    8. ')' → logprob: -17.505252838134766
    9. 'input' → logprob: -17.755252838134766
    10. '.sys' → logprob: -18.005252838134766

Token 27: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.7372048862162046e-05
    2. 'stdin' → logprob: -10.750027656555176
    3. '.stdout' → logprob: -12.625027656555176
    4. '.readline' → logprob: -13.125027656555176
    5. '.std' → logprob: -15.375027656555176
    6. '.argv' → logprob: -16.00002670288086
    7. '(stdin' → logprob: -16.62502670288086
    8. ' stdin' → logprob: -17.75002670288086
    9. '.' → logprob: -18.75002670288086
    10. '.stderr' → logprob: -19.12502670288086

Token 28: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009371895575895905
    2. '.' → logprob: -7.000936985015869
    3. '.read' → logprob: -11.750937461853027
    4. '.readlines' → logprob: -11.875937461853027
    5. '.stdin' → logprob: -12.250937461853027
    6. ' .' → logprob: -12.875937461853027
    7. ').' → logprob: -14.500937461853027
    8. '().' → logprob: -14.875937461853027
    9. '.randint' → logprob: -15.250937461853027
    10. '.reader' → logprob: -15.500937461853027

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.1689596148207784e-05
    2. '()))' → logprob: -10.500051498413086
    3. '()' → logprob: -10.875051498413086
    4. '())' → logprob: -12.250051498413086
    5. ' ().' → logprob: -15.750051498413086
    6. '()));' → logprob: -16.000051498413086
    7. '())))' → logprob: -16.625051498413086
    8. '(' → logprob: -17.250051498413086
    9. '.readline' → logprob: -17.250051498413086
    10. '()-' → logprob: -18.125051498413086

Token 30: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.05040658265352249
    2. 'rstrip' → logprob: -3.5504066944122314
    3. 'split' → logprob: -4.050406455993652
    4. 'read' → logprob: -5.800406455993652
    5. ' strip' → logprob: -13.425406455993652
    6. ')' → logprob: -14.050406455993652
    7. 'replace' → logprob: -16.30040740966797
    8. 'decode' → logprob: -16.67540740966797
    9. '.strip' → logprob: -17.30040740966797
    10. 'rs' → logprob: -17.42540740966797

Token 31: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47441866993904114
    2. ')' → logprob: -0.9744186401367188
    3. '()))' → logprob: -8.974418640136719
    4. '(' → logprob: -9.099418640136719
    5. '())' → logprob: -9.974418640136719
    6. '()' → logprob: -10.474418640136719
    7. ')))' → logprob: -10.724418640136719
    8. '))
' → logprob: -13.474418640136719
    9. ')
' → logprob: -13.849418640136719
    10. '),' → logprob: -14.224418640136719

Token 32: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4020475447177887
    2. 'dp' → logprob: -1.2770475149154663
    3. 'A' → logprob: -3.527047634124756
    4. 'count' → logprob: -5.277047634124756
    5. 'result' → logprob: -5.527047634124756
    6. 'd' → logprob: -6.527047634124756
    7. ')' → logprob: -6.777047634124756
    8. 'stack' → logprob: -6.902047634124756
    9. 'for' → logprob: -6.902047634124756
    10. 'M' → logprob: -7.152047634124756

Token 33: ' altern' (ID: 7310)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4027949571609497
    2. 'dp' → logprob: -1.2777949571609497
    3. 'from' → logprob: -3.77779483795166
    4. 'd' → logprob: -4.90279483795166
    5. '#' → logprob: -4.90279483795166
    6. ' dp' → logprob: -5.02779483795166
    7. ' def' → logprob: -5.65279483795166
    8. ' from' → logprob: -6.52779483795166
    9. 'import' → logprob: -6.90279483795166
    10. 'stack' → logprob: -7.52779483795166

Token 34: 'ation' (ID: 387)
  Prédit: 'ating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.5292741656303406
    2. 'ate' → logprob: -0.9042741656303406
    3. 'ately' → logprob: -5.154273986816406
    4. 'at' → logprob: -8.529273986816406
    5. 'atif' → logprob: -10.404273986816406
    6. 'a' → logprob: -10.904273986816406
    7. 'atig' → logprob: -10.904273986816406
    8. 'if' → logprob: -11.029273986816406
    9. 'ated' → logprob: -11.029273986816406
    10. 'ative' → logprob: -11.404273986816406

Token 35: ' pré' (ID: 9424)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04079538583755493
    2. ' =' → logprob: -3.66579532623291
    3. '_count' → logprob: -5.29079532623291
    4. '=' → logprob: -5.91579532623291
    5. '_max' → logprob: -6.41579532623291
    6. '_sum' → logprob: -7.04079532623291
    7. ' _' → logprob: -7.41579532623291
    8. ' ' → logprob: -7.41579532623291
    9. '(' → logprob: -7.91579532623291
    10. ')' → logprob: -8.29079532623291

Token 36: '-cal' (ID: 84920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2870960533618927
    2. 'f' → logprob: -2.1620960235595703
    3. 'd' → logprob: -2.4120960235595703
    4. 'z' → logprob: -4.66209602355957
    5. 'c' → logprob: -4.78709602355957
    6. 'fix' → logprob: -4.91209602355957
    7. 'v' → logprob: -5.66209602355957
    8. 'sent' → logprob: -5.78709602355957
    9. 'dict' → logprob: -5.91209602355957
    10. 'r' → logprob: -7.16209602355957

Token 37: 'cul' (ID: 2885)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.3490593433380127
    2. 'cule' → logprob: -1.9740593433380127
    3. 'culation' → logprob: -2.3490593433380127
    4. 'ulation' → logprob: -2.3490593433380127
    5. 'cul' → logprob: -2.3490593433380127
    6. 'c' → logprob: -3.0990593433380127
    7. '```' → logprob: -3.2240593433380127
    8. 'al' → logprob: -3.5990593433380127
    9. 'culated' → logprob: -3.5990593433380127
    10. 'u' → logprob: -3.5990593433380127

Token 38: 'ée' (ID: 2894)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1956852376461029
    2. 's' → logprob: -2.0706851482391357
    3. 'd' → logprob: -4.070685386657715
    4. 'u' → logprob: -5.195685386657715
    5. 'A' → logprob: -5.570685386657715
    6. 'max' → logprob: -5.820685386657715
    7. '=' → logprob: -6.195685386657715
    8. 'c' → logprob: -6.320685386657715
    9. '[' → logprob: -6.445685386657715
    10. 'sum' → logprob: -6.570685386657715

Token 39: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09681855142116547
    2. 's' → logprob: -3.096818447113037
    3. 'd' → logprob: -4.471818447113037
    4. 'dp' → logprob: -4.721818447113037
    5. ')' → logprob: -5.221818447113037
    6. ',' → logprob: -6.096818447113037
    7. ' =' → logprob: -6.346818447113037
    8. ':' → logprob: -6.471818447113037
    9. 'max' → logprob: -6.471818447113037
    10. '=' → logprob: -6.596818447113037

Token 40: ' gauche' (ID: 58367)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2397570610046387
    2. 'A' → logprob: -1.3647570610046387
    3. ' A' → logprob: -1.9897570610046387
    4. 's' → logprob: -2.4897570610046387
    5. '_' → logprob: -2.6147570610046387
    6. ' la' → logprob: -2.9897570610046387
    7. '[' → logprob: -3.6147570610046387
    8. 'i' → logprob: -4.364757061004639
    9. ' l' → logprob: -4.739757061004639
    10. 'len' → logprob: -4.864757061004639

Token 41: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15358150005340576
    2. ')' → logprob: -3.4035816192626953
    3. '_prefix' → logprob: -3.5285816192626953
    4. '_sum' → logprob: -4.153581619262695
    5. '[' → logprob: -4.278581619262695
    6. '[]' → logprob: -4.778581619262695
    7. 's' → logprob: -4.903581619262695
    8. ']' → logprob: -5.278581619262695
    9. ',' → logprob: -5.278581619262695
    10. '_s' → logprob: -5.903581619262695

Token 42: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.0025133544113487005
    2. ' droite' → logprob: -6.127513408660889
    3. 'd' → logprob: -8.25251293182373
    4. '-dro' → logprob: -10.50251293182373
    5. 'la' → logprob: -11.87751293182373
    6. 'g' → logprob: -12.00251293182373
    7. '```' → logprob: -12.37751293182373
    8. 'Dro' → logprob: -12.62751293182373
    9. 'dr' → logprob: -12.75251293182373
    10. '_' → logprob: -12.75251293182373

Token 43: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5925599336624146
    2. 's' → logprob: -2.342559814453125
    3. 'prefix' → logprob: -2.842559814453125
    4. ')' → logprob: -3.092559814453125
    5. '_' → logprob: -3.092559814453125
    6. ',' → logprob: -3.592559814453125
    7. ' dp' → logprob: -3.717559814453125
    8. 'count' → logprob: -4.342559814453125
    9. ' ' → logprob: -4.592559814453125
    10. 'd' → logprob: -4.592559814453125

Token 44: 'left' (ID: 4530)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'altern' → logprob: -1.3576433658599854
    2. 'dp' → logprob: -1.4826433658599854
    3. 'prefix' → logprob: -1.6076433658599854
    4. 'alt' → logprob: -2.1076433658599854
    5. '_' → logprob: -3.2326433658599854
    6. 's' → logprob: -3.2326433658599854
    7. 'c' → logprob: -3.7326433658599854
    8. 'alts' → logprob: -4.732643127441406
    9. 'left' → logprob: -4.857643127441406
    10. ' altern' → logprob: -4.982643127441406

Token 45: ' =' (ID: 314)
  Prédit: '_alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alt' → logprob: -1.2456587553024292
    2. '_min' → logprob: -1.3706587553024292
    3. '_al' → logprob: -1.6206587553024292
    4. '_max' → logprob: -2.1206588745117188
    5. '_' → logprob: -2.6206588745117188
    6. '_sum' → logprob: -3.3706588745117188
    7. '_diff' → logprob: -4.995658874511719
    8. ' =' → logprob: -5.120658874511719
    9. '_freq' → logprob: -6.495658874511719
    10. '=' → logprob: -6.495658874511719

Token 46: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3147275447845459
    2. ' [' → logprob: -1.314727544784546
    3. '[A' → logprob: -6.939727783203125
    4. '[N' → logprob: -8.314727783203125
    5. '[len' → logprob: -9.064727783203125
    6. '[]' → logprob: -10.189727783203125
    7. '[left' → logprob: -10.564727783203125
    8. '[a' → logprob: -11.564727783203125
    9. '[i' → logprob: -11.814727783203125
    10. ' []' → logprob: -11.939727783203125

Token 47: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023952710907906294
    2. '-' → logprob: -7.127395153045654
    3. '1' → logprob: -7.502395153045654
    4. 'A' → logprob: -8.377395629882812
    5. 'False' → logprob: -8.377395629882812
    6. '(' → logprob: -8.627395629882812
    7. '[' → logprob: -8.877395629882812
    8. ']' → logprob: -9.127395629882812
    9. 'None' → logprob: -9.752395629882812
    10. 'True' → logprob: -10.127395629882812

Token 48: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011214634403586388
    2. ' ]' → logprob: -5.261214733123779
    3. ')' → logprob: -5.886214733123779
    4. ',' → logprob: -6.136214733123779
    5. ')]' → logprob: -7.636214733123779
    6. ' )' → logprob: -9.011214256286621
    7. ' if' → logprob: -9.511214256286621
    8. ' ' → logprob: -9.511214256286621
    9. ' for' → logprob: -9.636214256286621
    10. ']*' → logprob: -10.011214256286621

Token 49: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00012892624363303185
    2. '(N' → logprob: -9.000128746032715
    3. '(' → logprob: -12.250128746032715
    4. ' N' → logprob: -14.875128746032715
    5. 'len' → logprob: -16.37512969970703
    6. 'n' → logprob: -16.50012969970703
    7. '(len' → logprob: -17.00012969970703
    8. 'NN' → logprob: -17.25012969970703
    9. '[N' → logprob: -17.62512969970703
    10. 'NX' → logprob: -18.25012969970703

Token 50: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12063662707805634
    2. ' for' → logprob: -2.8706367015838623
    3. '
' → logprob: -3.2456367015838623
    4. '<|end|>' → logprob: -4.620636463165283
    5. ')' → logprob: -5.495636463165283
    6. '```' → logprob: -6.370636463165283
    7. '[' → logprob: -7.495636463165283
    8. '<|end|>' → logprob: -7.870636463165283
    9. ' ' → logprob: -8.370636940002441
    10. '#' → logprob: -8.620636940002441

Token 51: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08936122059822083
    2. ' for' → logprob: -2.4643611907958984
    3. '
' → logprob: -7.839361190795898
    4. ' 
' → logprob: -12.089361190795898
    5. '```' → logprob: -12.339361190795898
    6. ')' → logprob: -12.464361190795898
    7. '\n' → logprob: -12.714361190795898
    8. ' ' → logprob: -13.089361190795898
    9. '	for' → logprob: -13.339361190795898
    10. '<|end|>' → logprob: -13.589361190795898

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0015096203424036503
    2. 'i' → logprob: -6.501509666442871
    3. '	i' → logprob: -12.376509666442871
    4. ' ' → logprob: -13.501509666442871
    5. ' ' → logprob: -13.501509666442871
    6. 'I' → logprob: -15.626509666442871
    7. '_' → logprob: -16.126508712768555
    8. ' I' → logprob: -17.251508712768555
    9. '_i' → logprob: -17.626508712768555
    10. ' range' → logprob: -17.876508712768555

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009604621678590775
    2. 'in' → logprob: -5.259604454040527
    3. ' ' → logprob: -5.509604454040527
    4. '+' → logprob: -9.384604454040527
    5. ' i' → logprob: -9.509604454040527
    6. '1' → logprob: -9.509604454040527
    7. '	in' → logprob: -10.884604454040527
    8. '[' → logprob: -11.509604454040527
    9. '  ' → logprob: -11.634604454040527
    10. ' ' → logprob: -12.259604454040527

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519448399543762
    2. ' range' → logprob: -1.5019447803497314
    3. '(range' → logprob: -11.251944541931152
    4. '	range' → logprob: -13.876944541931152
    5. ' xrange' → logprob: -13.876944541931152
    6. '1' → logprob: -15.001944541931152
    7. ' ' → logprob: -15.501944541931152
    8. 'ange' → logprob: -16.00194549560547
    9. 'in' → logprob: -17.00194549560547
    10. ' in' → logprob: -17.00194549560547

Token 55: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3676733690081164e-05
    2. '1' → logprob: -10.75002384185791
    3. ' (' → logprob: -13.37502384185791
    4. '(
' → logprob: -14.87502384185791
    5. ' ' → logprob: -16.000022888183594
    6. '(N' → logprob: -16.250022888183594
    7. '<|end|>' → logprob: -17.750022888183594
    8. '(i' → logprob: -17.875022888183594
    9. '()' → logprob: -18.250022888183594
    10. '2' → logprob: -18.250022888183594

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.250006675720215
    3. 'N' → logprob: -13.250006675720215
    4. '(' → logprob: -17.0000057220459
    5. '   ' → logprob: -17.0000057220459
    6. '
' → logprob: -19.0000057220459
    7. '2' → logprob: -19.2500057220459
    8. '１' → logprob: -19.2500057220459
    9. '```' → logprob: -19.3750057220459
    10. '0' → logprob: -19.5000057220459

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014373631216585636
    2. ' ,' → logprob: -4.764373779296875
    3. ',N' → logprob: -5.264373779296875
    4. '):' → logprob: -7.764373779296875
    5. ')' → logprob: -10.264373779296875
    6. ' ):' → logprob: -10.389373779296875
    7. ',len' → logprob: -10.764373779296875
    8. ',n' → logprob: -11.264373779296875
    9. ',i' → logprob: -11.389373779296875
    10. ':' → logprob: -12.389373779296875

Token 58: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002613358374219388
    2. ' N' → logprob: -8.250261306762695
    3. '	N' → logprob: -19.000261306762695
    4. 'n' → logprob: -21.375261306762695
    5. ',N' → logprob: -21.375261306762695
    6. ')' → logprob: -21.375261306762695
    7. ' ' → logprob: -21.500261306762695
    8. '>N' → logprob: -21.750261306762695
    9. '<|end|>' → logprob: -21.750261306762695
    10. '<N' → logprob: -22.000261306762695

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014551399275660515
    2. '):
' → logprob: -4.264551162719727
    3. ':' → logprob: -8.264551162719727
    4. '):
' → logprob: -9.139551162719727
    5. ')' → logprob: -11.139551162719727
    6. ' ):' → logprob: -12.264551162719727
    7. ']:' → logprob: -14.264551162719727
    8. '):

' → logprob: -14.514551162719727
    9. '():' → logprob: -14.889551162719727
    10. '}:' → logprob: -15.139551162719727

Token 60: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5846739411354065
    2. '   ' → logprob: -0.9596739411354065
    3. 'if' → logprob: -3.2096738815307617
    4. '	if' → logprob: -4.084673881530762
    5. ':' → logprob: -6.959673881530762
    6. ' ' → logprob: -7.209673881530762
    7. '```' → logprob: -7.459673881530762
    8. '<|end|>' → logprob: -10.084673881530762
    9. ')' → logprob: -10.334673881530762
    10. '  ' → logprob: -10.584673881530762

Token 61: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06695584952831268
    2. 'left' → logprob: -2.816955804824829
    3. ' if' → logprob: -5.441956043243408
    4. ' left' → logprob: -7.941956043243408
    5. '1' → logprob: -8.31695556640625
    6. '   ' → logprob: -10.94195556640625
    7. ' ' → logprob: -11.44195556640625
    8. '```' → logprob: -12.31695556640625
    9. '(left' → logprob: -12.94195556640625
    10. '	left' → logprob: -13.69195556640625

Token 62: ' A' (ID: 355)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.11691275238990784
    2. 'A' → logprob: -2.616912841796875
    3. ' (' → logprob: -3.491912841796875
    4. '(i' → logprob: -5.241912841796875
    5. ' A' → logprob: -7.241912841796875
    6. '(' → logprob: -8.491912841796875
    7. 'i' → logprob: -8.741912841796875
    8. '((' → logprob: -8.991912841796875
    9. '(a' → logprob: -9.116912841796875
    10. ' ' → logprob: -9.366912841796875

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.412610233994201e-05
    2. '[' → logprob: -9.375094413757324
    3. '[-' → logprob: -12.750094413757324
    4. '!=' → logprob: -13.125094413757324
    5. '```' → logprob: -13.750094413757324
    6. '>' → logprob: -14.250094413757324
    7. 'i' → logprob: -14.625094413757324
    8. '(i' → logprob: -14.750094413757324
    9. '*' → logprob: -14.875094413757324
    10. '[
' → logprob: -15.000094413757324

Token 64: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21584150195121765
    2. '!=' → logprob: -2.46584153175354
    3. '>' → logprob: -2.59084153175354
    4. ' !=' → logprob: -4.090841293334961
    5. ' *' → logprob: -4.465841293334961
    6. ' >' → logprob: -6.465841293334961
    7. '-' → logprob: -6.465841293334961
    8. ']!=' → logprob: -6.840841293334961
    9. '<' → logprob: -7.465841293334961
    10. '>*' → logprob: -8.340841293334961

Token 65: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4757985472679138
    2. '>' → logprob: -1.4757986068725586
    3. '*' → logprob: -1.9757986068725586
    4. '<' → logprob: -4.850798606872559
    5. ' !=' → logprob: -5.975798606872559
    6. ' >' → logprob: -8.725798606872559
    7. '>*' → logprob: -8.850798606872559
    8. ' *' → logprob: -8.850798606872559
    9. '==' → logprob: -8.850798606872559
    10. '*>' → logprob: -9.350798606872559

Token 66: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007164848502725363
    2. ' A' → logprob: -7.250716686248779
    3. ' ' → logprob: -12.875716209411621
    4. '	A' → logprob: -13.500716209411621
    5. '0' → logprob: -13.750716209411621
    6. '   ' → logprob: -14.375716209411621
    7. '```' → logprob: -16.000717163085938
    8. 'a' → logprob: -16.125717163085938
    9. '>A' → logprob: -16.125717163085938
    10. '1' → logprob: -16.250717163085938

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.625004768371582
    3. 'i' → logprob: -13.750004768371582
    4. '```' → logprob: -15.875004768371582
    5. '[I' → logprob: -16.250003814697266
    6. ' i' → logprob: -17.625003814697266
    7. '[
' → logprob: -17.875003814697266
    8. '{i' → logprob: -17.875003814697266
    9. '1' → logprob: -18.375003814697266
    10. '
' → logprob: -18.375003814697266

Token 68: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03006170131266117
    2. '[i' → logprob: -3.530061721801758
    3. '[' → logprob: -8.530061721801758
    4. '1' → logprob: -9.530061721801758
    5. '[-' → logprob: -11.030061721801758
    6. ' -' → logprob: -11.780061721801758
    7. 'i' → logprob: -12.280061721801758
    8. '```' → logprob: -12.655061721801758
    9. '-i' → logprob: -13.280061721801758
    10. '(i' → logprob: -13.280061721801758

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.500040054321289
    3. '```' → logprob: -12.562540054321289
    4. ']' → logprob: -12.812540054321289
    5. '])' → logprob: -14.125040054321289
    6. ')' → logprob: -14.437540054321289
    7. '   ' → logprob: -14.500040054321289
    8. '`' → logprob: -14.625040054321289
    9. '[' → logprob: -15.000040054321289
    10. 'i' → logprob: -15.437540054321289

Token 70: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3766058385372162
    2. ':' → logprob: -1.5016058683395386
    3. '):' → logprob: -2.501605749130249
    4. ']' → logprob: -5.501605987548828
    5. ']:
' → logprob: -6.876605987548828
    6. ']):' → logprob: -6.876605987548828
    7. '):
' → logprob: -7.876605987548828
    8. '-' → logprob: -8.126605987548828
    9. ')' → logprob: -8.251605987548828
    10. ' ' → logprob: -8.376605987548828

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07411058992147446
    2. 'left' → logprob: -3.074110507965088
    3. ' left' → logprob: -4.574110507965088
    4. ':
' → logprob: -4.699110507965088
    5. ':' → logprob: -5.949110507965088
    6. '   ' → logprob: -7.324110507965088
    7. ' and' → logprob: -7.449110507965088
    8. 'and' → logprob: -7.449110507965088
    9. '	left' → logprob: -8.074110984802246
    10. ':left' → logprob: -8.074110984802246

Token 72: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.009798115119338036
    2. ' left' → logprob: -4.634798049926758
    3. '           ' → logprob: -10.634798049926758
    4. '	left' → logprob: -11.509798049926758
    5. '       ' → logprob: -12.634798049926758
    6. '   ' → logprob: -13.259798049926758
    7. '[left' → logprob: -13.884798049926758
    8. ' lef' → logprob: -14.259798049926758
    9. '_left' → logprob: -14.884798049926758
    10. ':left' → logprob: -15.134798049926758

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.333223139634356e-05
    2. '[' → logprob: -10.375033378601074
    3. '[I' → logprob: -13.875033378601074
    4. ' [' → logprob: -14.875033378601074
    5. '```' → logprob: -15.750033378601074
    6. '[idx' → logprob: -15.875033378601074
    7. '\[' → logprob: -16.375032424926758
    8. '[index' → logprob: -16.500032424926758
    9. '[ii' → logprob: -16.875032424926758
    10. '[left' → logprob: -16.875032424926758

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011275982251390815
    2. ']=' → logprob: -7.25112771987915
    3. '=' → logprob: -8.001127243041992
    4. ' ]' → logprob: -10.126127243041992
    5. ' =' → logprob: -10.126127243041992
    6. ']+=' → logprob: -14.126127243041992
    7. '-' → logprob: -15.126127243041992
    8. '[' → logprob: -15.501127243041992
    9. 's' → logprob: -15.501127243041992
    10. '[i' → logprob: -15.876127243041992

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005239683669060469
    2. ' =' → logprob: -5.255239486694336
    3. '+=' → logprob: -12.130239486694336
    4. '=i' → logprob: -16.005239486694336
    5. ' +=' → logprob: -16.130239486694336
    6. '=int' → logprob: -16.505239486694336
    7. '=max' → logprob: -16.630239486694336
    8. '＝' → logprob: -16.630239486694336
    9. '.=' → logprob: -17.630239486694336
    10. ']=' → logprob: -18.005239486694336

Token 76: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005963526200503111
    2. ' left' → logprob: -5.130963325500488
    3. '1' → logprob: -11.130963325500488
    4. '   ' → logprob: -11.505963325500488
    5. '	left' → logprob: -11.630963325500488
    6. '0' → logprob: -15.255963325500488
    7. ' ' → logprob: -15.880963325500488
    8. '2' → logprob: -16.005964279174805
    9. ' lef' → logprob: -16.005964279174805
    10. ':left' → logprob: -16.005964279174805

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.37500286102295
    3. 'i' → logprob: -14.75000286102295
    4. ' i' → logprob: -15.50000286102295
    5. ' [' → logprob: -15.62500286102295
    6. '```' → logprob: -16.625001907348633
    7. '[I' → logprob: -17.375001907348633
    8. '[user' → logprob: -18.125001907348633
    9. '[
' → logprob: -18.500001907348633
    10. '[-' → logprob: -18.750001907348633

Token 78: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16174037754535675
    2. '-' → logprob: -1.9117404222488403
    3. 'i' → logprob: -6.536740303039551
    4. ' -' → logprob: -10.78674030303955
    5. ' i' → logprob: -11.03674030303955
    6. '-i' → logprob: -11.41174030303955
    7. '(i' → logprob: -11.91174030303955
    8. '   ' → logprob: -12.53674030303955
    9. '[' → logprob: -13.03674030303955
    10. ']' → logprob: -13.53674030303955

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '<|end|>' → logprob: -17.625
    3. ' ' → logprob: -17.75
    4. '```' → logprob: -18.125
    5. ']' → logprob: -18.75
    6. '-' → logprob: -19.0
    7. '१' → logprob: -19.375
    8. '১' → logprob: -19.4375
    9. '   ' → logprob: -19.75
    10. '۱' → logprob: -19.8125

Token 80: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006715370807796717
    2. ']+' → logprob: -5.006715297698975
    3. '-' → logprob: -16.881715774536133
    4. '+' → logprob: -17.256715774536133
    5. '```' → logprob: -17.256715774536133
    6. '"]' → logprob: -17.756715774536133
    7. '[' → logprob: -17.756715774536133
    8. '1' → logprob: -17.881715774536133
    9. '']' → logprob: -17.881715774536133
    10. ']+=' → logprob: -18.131715774536133

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023119196703191847
    2. ' +' → logprob: -8.37523078918457
    3. '+
' → logprob: -14.87523078918457
    4. ']+' → logprob: -16.62523078918457
    5. '```' → logprob: -16.75023078918457
    6. 'plus' → logprob: -16.87523078918457
    7. '1' → logprob: -17.12523078918457
    8. '＋' → logprob: -17.25023078918457
    9. '()+' → logprob: -17.50023078918457
    10. ' plus' → logprob: -17.75023078918457

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -19.625051498413086
    4. ' ' → logprob: -20.750051498413086
    5. '   ' → logprob: -20.750051498413086
    6. '2' → logprob: -21.000051498413086
    7. '+' → logprob: -21.750051498413086
    8. '１' → logprob: -21.750051498413086
    9. '  ' → logprob: -21.750051498413086
    10. '<|end|>' → logprob: -22.000051498413086

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.000001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '2' → logprob: -21.187501907348633
    6. '１' → logprob: -21.187501907348633
    7. '-' → logprob: -21.187501907348633
    8. '  ' → logprob: -21.375001907348633
    9. '[' → logprob: -21.500001907348633
    10. '۱' → logprob: -21.625001907348633

Token 84: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' altern' (ID: 7310)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4846155345439911
    2. 'right' → logprob: -1.6096155643463135
    3. 'altern' → logprob: -1.7346155643463135
    4. 'for' → logprob: -6.109615325927734
    5. ' altern' → logprob: -6.109615325927734
    6. ' right' → logprob: -6.984615325927734
    7. ' #' → logprob: -7.484615325927734
    8. 'dro' → logprob: -7.859615325927734
    9. '```' → logprob: -8.234615325927734
    10. 'from' → logprob: -8.859615325927734

Token 87: 'ation' (ID: 387)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3816421627998352
    2. 'ation' → logprob: -1.2566421031951904
    3. '_right' → logprob: -4.8816423416137695
    4. 'at' → logprob: -5.2566423416137695
    5. '```' → logprob: -5.2566423416137695
    6. '=' → logprob: -5.8816423416137695
    7. ' right' → logprob: -6.3816423416137695
    8. '#' → logprob: -6.5066423416137695
    9. '<|end|>' → logprob: -6.6316423416137695
    10. 'Right' → logprob: -7.2566423416137695

Token 88: ' pré' (ID: 9424)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2758785486221313
    2. '=' → logprob: -1.9008785486221313
    3. 'right' → logprob: -2.150878429412842
    4. ' de' → logprob: -2.275878429412842
    5. ' =' → logprob: -2.275878429412842
    6. 'pré' → logprob: -2.650878429412842
    7. 'from' → logprob: -3.275878429412842
    8. 'pre' → logprob: -3.400878429412842
    9. ' pré' → logprob: -3.525878429412842
    10. ' right' → logprob: -3.650878429412842

Token 89: '-cal' (ID: 84920)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.04490307345986366
    2. 'cal' → logprob: -3.544903039932251
    3. '-cal' → logprob: -4.29490327835083
    4. '_cal' → logprob: -7.29490327835083
    5. ' calcul' → logprob: -8.544902801513672
    6. '#' → logprob: -8.919902801513672
    7. 'calc' → logprob: -9.169902801513672
    8. '-c' → logprob: -9.544902801513672
    9. 'Calcul' → logprob: -9.794902801513672
    10. 'pré' → logprob: -10.544902801513672

Token 90: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.005875821225345135
    2. 'ul' → logprob: -5.755875587463379
    3. 'culated' → logprob: -7.380875587463379
    4. 'c' → logprob: -7.505875587463379
    5. 'calcul' → logprob: -8.005875587463379
    6. 'cu' → logprob: -9.005875587463379
    7. 'culaire' → logprob: -9.005875587463379
    8. 'culate' → logprob: -9.380875587463379
    9. 'icul' → logprob: -9.630875587463379
    10. 'cl' → logprob: -9.755875587463379

Token 91: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.001656613196246326
    2. 'lée' → logprob: -7.251656532287598
    3. 'érée' → logprob: -7.751656532287598
    4. 'rée' → logprob: -8.501656532287598
    5. 'uée' → logprob: -8.876656532287598
    6. 'é' → logprob: -9.876656532287598
    7. 'e' → logprob: -10.251656532287598
    8. 'ee' → logprob: -11.501656532287598
    9. '[' → logprob: -11.626656532287598
    10. 'cée' → logprob: -11.626656532287598

Token 92: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.18188127875328064
    2. ' de' → logprob: -1.806881308555603
    3. 'from' → logprob: -6.681881427764893
    4. 'à' → logprob: -8.556880950927734
    5. ' ' → logprob: -9.056880950927734
    6. '#' → logprob: -9.181880950927734
    7. ' ' → logprob: -9.181880950927734
    8. 'right' → logprob: -9.306880950927734
    9. ' from' → logprob: -9.681880950927734
    10. ' à' → logprob: -10.306880950927734

Token 93: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.1272352784872055
    2. ' droite' → logprob: -2.127235174179077
    3. 'd' → logprob: -9.252235412597656
    4. ' ' → logprob: -9.627235412597656
    5. 'right' → logprob: -9.752235412597656
    6. ' droit' → logprob: -10.377235412597656
    7. '```' → logprob: -11.377235412597656
    8. ' right' → logprob: -12.252235412597656
    9. ' direita' → logprob: -12.252235412597656
    10. ' dro' → logprob: -12.377235412597656

Token 94: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6458616852760315
    2. 'à' → logprob: -0.7708616852760315
    3. 'to' → logprob: -4.895861625671387
    4. ' to' → logprob: -5.770861625671387
    5. '-à' → logprob: -6.395861625671387
    6. 'À' → logprob: -8.145861625671387
    7. '’à' → logprob: -8.645861625671387
    8. ''à' → logprob: -8.895861625671387
    9. '<|end|>' → logprob: -9.520861625671387
    10. ' ' → logprob: -10.020861625671387

Token 95: ' gauche' (ID: 58367)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.013120103627443314
    2. ' droite' → logprob: -4.638120174407959
    3. 'range' → logprob: -6.388120174407959
    4. 'right' → logprob: -7.263120174407959
    5. '1' → logprob: -7.888120174407959
    6. 'g' → logprob: -8.6381196975708
    7. '```' → logprob: -9.2631196975708
    8. 'l' → logprob: -9.8881196975708
    9. ' ' → logprob: -10.5131196975708
    10. ' gauche' → logprob: -10.6381196975708

Token 96: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.12234541028738022
    2. '
' → logprob: -2.247345447540283
    3. '[' → logprob: -5.622345447540283
    4. ' right' → logprob: -6.122345447540283
    5. '[right' → logprob: -6.122345447540283
    6. '[
' → logprob: -8.372344970703125
    7. '```' → logprob: -8.372344970703125
    8. 's' → logprob: -8.622344970703125
    9. 'for' → logprob: -8.997344970703125
    10. '<|end|>' → logprob: -9.372344970703125

Token 97: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006574565544724464
    2. ' right' → logprob: -5.881574630737305
    3. '```' → logprob: -5.881574630737305
    4. 'for' → logprob: -7.381574630737305
    5. '[right' → logprob: -9.131574630737305
    6. '
' → logprob: -9.131574630737305
    7. ' for' → logprob: -10.131574630737305
    8. '[' → logprob: -10.381574630737305
    9. 'left' → logprob: -10.506574630737305
    10. '	right' → logprob: -11.756574630737305

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25220322608947754
    2. '=' → logprob: -1.5022032260894775
    3. '=[' → logprob: -8.377202987670898
    4. ' =[' → logprob: -10.377202987670898
    5. '[' → logprob: -11.377202987670898
    6. ' ' → logprob: -14.502202987670898
    7. '＝' → logprob: -14.627202987670898
    8. ' [' → logprob: -15.377202987670898
    9. ']' → logprob: -16.3772029876709
    10. ')' → logprob: -17.0022029876709

Token 99: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10027621686458588
    2. ' [' → logprob: -2.350276231765747
    3. '[N' → logprob: -9.600275993347168
    4. ' ' → logprob: -14.475275993347168
    5. '[len' → logprob: -15.100275993347168
    6. '[A' → logprob: -15.600275993347168
    7. '([' → logprob: -15.725275993347168
    8. '=[' → logprob: -15.725275993347168
    9. ' ' → logprob: -16.100276947021484
    10. '[n' → logprob: -16.225276947021484

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2603901015827432e-05
    2. '[' → logprob: -10.875022888183594
    3. '[N' → logprob: -13.625022888183594
    4. ' ' → logprob: -14.000022888183594
    5. ']' → logprob: -14.125022888183594
    6. 'N' → logprob: -14.750022888183594
    7. '0' → logprob: -16.250022888183594
    8. ' [' → logprob: -16.500022888183594
    9. '```' → logprob: -16.500022888183594
    10. ')' → logprob: -16.625022888183594

Token 101: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.07902131974697113
    2. '*N' → logprob: -2.5790212154388428
    3. '*' → logprob: -9.329021453857422
    4. ']' → logprob: -10.454021453857422
    5. ')*' → logprob: -11.329021453857422
    6. '```' → logprob: -14.079021453857422
    7. ' *' → logprob: -15.079021453857422
    8. 'N' → logprob: -15.329021453857422
    9. ' ]' → logprob: -16.079021453857422
    10. '"*' → logprob: -16.204021453857422

Token 102: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. '(N' → logprob: -18.875
    3. ' N' → logprob: -19.25
    4. '```' → logprob: -21.5
    5. 'n' → logprob: -22.625
    6. '(' → logprob: -23.0
    7. '   ' → logprob: -23.25
    8. '#' → logprob: -23.375
    9. '
' → logprob: -23.5
    10. '	N' → logprob: -23.625

Token 103: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06697391718626022
    2. '
' → logprob: -2.816973924636841
    3. ' for' → logprob: -5.316973686218262
    4. '<|end|>' → logprob: -9.691973686218262
    5. '```' → logprob: -11.816973686218262
    6. '\n' → logprob: -12.191973686218262
    7. '\' → logprob: -12.816973686218262
    8. '[' → logprob: -12.941973686218262
    9. '
' → logprob: -13.566973686218262
    10. '  
' → logprob: -13.566973686218262

Token 104: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.375
    3. '
' → logprob: -18.375
    4. 'from' → logprob: -19.875
    5. '```' → logprob: -20.0
    6. 'For' → logprob: -22.125
    7. '	for' → logprob: -22.125
    8. 'range' → logprob: -23.125
    9. '

' → logprob: -23.25
    10. '<|end|>' → logprob: -23.875

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0711558535695076
    2. 'i' → logprob: -2.6961557865142822
    3. ' range' → logprob: -6.821156024932861
    4. 'range' → logprob: -9.071155548095703
    5. ' in' → logprob: -12.196155548095703
    6. ' ' → logprob: -13.071155548095703
    7. ' reversed' → logprob: -13.196155548095703
    8. ' N' → logprob: -13.946155548095703
    9. ' j' → logprob: -14.446155548095703
    10. ' reverse' → logprob: -14.571155548095703

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009939531795680523
    2. 'in' → logprob: -4.634939670562744
    3. ' range' → logprob: -9.134939193725586
    4. 'range' → logprob: -9.759939193725586
    5. ' i' → logprob: -11.509939193725586
    6. ' ' → logprob: -12.134939193725586
    7. '(' → logprob: -13.509939193725586
    8. ' (' → logprob: -14.759939193725586
    9. '(range' → logprob: -14.884939193725586
    10. '	in' → logprob: -15.759939193725586

Token 107: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693255603313446
    2. 'range' → logprob: -0.693255603313446
    3. '(range' → logprob: -10.193255424499512
    4. ' reversed' → logprob: -10.318255424499512
    5. 're' → logprob: -10.943255424499512
    6. ' ' → logprob: -11.568255424499512
    7. '	range' → logprob: -12.943255424499512
    8. 'reverse' → logprob: -13.193255424499512
    9. ' N' → logprob: -13.818255424499512
    10. 'rang' → logprob: -13.943255424499512

Token 108: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002112193498760462
    2. '(' → logprob: -6.75211238861084
    3. '(range' → logprob: -7.12711238861084
    4. 'range' → logprob: -9.00211238861084
    5. ' range' → logprob: -12.00211238861084
    6. '(-' → logprob: -12.87711238861084
    7. '(R' → logprob: -13.00211238861084
    8. ' (' → logprob: -13.75211238861084
    9. 'Range' → logprob: -14.00211238861084
    10. '(
' → logprob: -14.00211238861084

Token 109: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017970333283301443
    2. ' -' → logprob: -8.625179290771484
    3. ')' → logprob: -16.375179290771484
    4. '1' → logprob: -17.250179290771484
    5. '2' → logprob: -17.750179290771484
    6. ')-' → logprob: -17.750179290771484
    7. '−' → logprob: -18.250179290771484
    8. ' ' → logprob: -18.500179290771484
    9. '-re' → logprob: -19.000179290771484
    10. '()-' → logprob: -20.000179290771484

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2617008400848135e-05
    2. '1' → logprob: -10.625032424926758
    3. ' ' → logprob: -11.750032424926758
    4. '-' → logprob: -15.750032424926758
    5. '```' → logprob: -16.000032424926758
    6. '

' → logprob: -17.437532424926758
    7. '
' → logprob: -17.500032424926758
    8. ')' → logprob: -17.750032424926758
    9. '   ' → logprob: -17.812532424926758
    10. '２' → logprob: -17.937532424926758

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017722812481224537
    2. ' ,' → logprob: -6.751772403717041
    3. ',-' → logprob: -8.126771926879883
    4. '-' → logprob: -8.126771926879883
    5. ' -' → logprob: -11.876771926879883
    6. ' ,-' → logprob: -13.501771926879883
    7. '-,' → logprob: -14.751771926879883
    8. '   ' → logprob: -14.876771926879883
    9. ',
' → logprob: -14.876771926879883
    10. ' ' → logprob: -15.001771926879883

Token 112: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012487331696320325
    2. ' -' → logprob: -9.00012493133545
    3. '-i' → logprob: -13.50012493133545
    4. ' ' → logprob: -18.500123977661133
    5. '0' → logprob: -18.625123977661133
    6. '-I' → logprob: -19.875123977661133
    7. '   ' → logprob: -20.625123977661133
    8. '−' → logprob: -20.625123977661133
    9. '	' → logprob: -20.875123977661133
    10. '-A' → logprob: -21.000123977661133

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '2' → logprob: -15.500000953674316
    4. '-' → logprob: -18.75
    5. '   ' → logprob: -18.75
    6. '

' → logprob: -19.5
    7. '0' → logprob: -19.5
    8. '```' → logprob: -19.75
    9. ' -' → logprob: -20.0
    10. '4' → logprob: -20.0625

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003794336807914078
    2. ',-' → logprob: -8.12537956237793
    3. '-' → logprob: -9.62537956237793
    4. ' ,' → logprob: -11.00037956237793
    5. '-,' → logprob: -15.00037956237793
    6. ' ,-' → logprob: -15.50037956237793
    7. ',
' → logprob: -16.12537956237793
    8. ' -' → logprob: -16.50037956237793
    9. '```' → logprob: -16.87537956237793
    10. '   ' → logprob: -17.37537956237793

Token 115: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011048642918467522
    2. ' -' → logprob: -4.511048793792725
    3. ')' → logprob: -15.261048316955566
    4. ' ' → logprob: -15.386048316955566
    5. '-i' → logprob: -15.761048316955566
    6. '-)' → logprob: -16.511049270629883
    7. ')-' → logprob: -17.136049270629883
    8. '   ' → logprob: -17.136049270629883
    9. '1' → logprob: -17.886049270629883
    10. '  ' → logprob: -18.011049270629883

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -17.375001907348633
    4. ')' → logprob: -17.625001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '```' → logprob: -18.000001907348633
    7. '-' → logprob: -18.375001907348633
    8. '１' → logprob: -18.750001907348633
    9. '

' → logprob: -19.312501907348633
    10. '  ' → logprob: -19.437501907348633

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02358575165271759
    2. '):
' → logprob: -3.773585796356201
    3. ')' → logprob: -9.148585319519043
    4. ':' → logprob: -9.273585319519043
    5. '-' → logprob: -9.523585319519043
    6. ' ):' → logprob: -10.398585319519043
    7. ',' → logprob: -11.273585319519043
    8. '1' → logprob: -12.398585319519043
    9. '):
' → logprob: -12.523585319519043
    10. ']:' → logprob: -12.773585319519043

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01012104470282793
    2. 'if' → logprob: -4.885120868682861
    3. ' if' → logprob: -6.010120868682861
    4. '	if' → logprob: -9.88512134552002
    5. '```' → logprob: -12.51012134552002
    6. '   ' → logprob: -12.76012134552002
    7. '       ' → logprob: -15.63512134552002
    8. ' ' → logprob: -15.88512134552002
    9. '  ' → logprob: -16.260120391845703
    10. '    ' → logprob: -17.385120391845703

Token 119: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03829829394817352
    2. ' if' → logprob: -3.2882983684539795
    3. '   ' → logprob: -8.288298606872559
    4. '	if' → logprob: -12.538298606872559
    5. '```' → logprob: -13.788298606872559
    6. ' ' → logprob: -14.913298606872559
    7. '
' → logprob: -15.913298606872559
    8. 'If' → logprob: -16.038297653198242
    9. '       ' → logprob: -16.038297653198242
    10. '    ' → logprob: -17.413297653198242

Token 120: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2014172375202179
    2. 'A' → logprob: -1.7014172077178955
    3. '   ' → logprob: -12.826416969299316
    4. ' ' → logprob: -13.826416969299316
    5. '	A' → logprob: -15.576416969299316
    6. '    ' → logprob: -17.076417922973633
    7. ' ' → logprob: -17.576417922973633
    8. '  ' → logprob: -17.576417922973633
    9. '(A' → logprob: -17.701417922973633
    10. '>A' → logprob: -18.826417922973633

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.394135612528771e-05
    2. '[' → logprob: -10.125043869018555
    3. '[
' → logprob: -13.500043869018555
    4. '[I' → logprob: -13.875043869018555
    5. '```' → logprob: -14.000043869018555
    6. '[N' → logprob: -15.875043869018555
    7. '`' → logprob: -16.500043869018555
    8. ' [' → logprob: -16.625043869018555
    9. 'i' → logprob: -16.750043869018555
    10. ' ' → logprob: -17.000043869018555

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1476324796676636
    2. ' !=' → logprob: -1.1476324796676636
    3. '!=' → logprob: -1.2726324796676636
    4. ']!=' → logprob: -2.647632598876953
    5. '[' → logprob: -5.147632598876953
    6. ')!=' → logprob: -5.647632598876953
    7. ')' → logprob: -5.772632598876953
    8. '[i' → logprob: -7.397632598876953
    9. ' ]' → logprob: -8.272632598876953
    10. ' ' → logprob: -8.397632598876953

Token 123: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06217024102807045
    2. ' !=' → logprob: -2.8121702671051025
    3. ']!=' → logprob: -9.062170028686523
    4. ')!=' → logprob: -9.812170028686523
    5. '()!=' → logprob: -10.812170028686523
    6. '[' → logprob: -13.187170028686523
    7. '!' → logprob: -13.437170028686523
    8. ')' → logprob: -14.062170028686523
    9. '!==' → logprob: -14.062170028686523
    10. '!=-' → logprob: -14.062170028686523

Token 124: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00861468818038702
    2. ' A' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.633615493774414
    4. '   ' → logprob: -17.633615493774414
    5. '	A' → logprob: -18.133615493774414
    6. '>A' → logprob: -19.633615493774414
    7. '  ' → logprob: -19.758615493774414
    8. '```' → logprob: -20.133615493774414
    9. '=A' → logprob: -21.133615493774414
    10. '`' → logprob: -21.258615493774414

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5107177862082608e-05
    2. '[' → logprob: -10.750024795532227
    3. 'i' → logprob: -13.375024795532227
    4. 'A' → logprob: -14.000024795532227
    5. '+' → logprob: -14.250024795532227
    6. '[
' → logprob: -15.625024795532227
    7. '[I' → logprob: -16.250024795532227
    8. '[A' → logprob: -16.750024795532227
    9. ' [' → logprob: -17.000024795532227
    10. '1' → logprob: -17.250024795532227

Token 126: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.623244553338736e-05
    2. '-' → logprob: -10.625065803527832
    3. ' +' → logprob: -10.750065803527832
    4. '[i' → logprob: -11.375065803527832
    5. '1' → logprob: -12.875065803527832
    6. '[' → logprob: -12.875065803527832
    7. '+i' → logprob: -13.125065803527832
    8. '+
' → logprob: -13.500065803527832
    9. 'i' → logprob: -15.500065803527832
    10. ']+' → logprob: -16.37506675720215

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -15.000001907348633
    4. ']' → logprob: -16.125001907348633
    5. '-' → logprob: -16.125001907348633
    6. '[i' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.500001907348633
    8. ')' → logprob: -18.687501907348633
    9. 'i' → logprob: -18.687501907348633
    10. '0' → logprob: -18.875001907348633

Token 128: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3076261878013611
    2. ']:
' → logprob: -1.4326262474060059
    3. ':' → logprob: -4.807626247406006
    4. '):
' → logprob: -4.807626247406006
    5. '):' → logprob: -4.932626247406006
    6. ']' → logprob: -6.557626247406006
    7. ':
' → logprob: -7.182626247406006
    8. ']:
' → logprob: -9.307625770568848
    9. '       ' → logprob: -9.557625770568848
    10. '```' → logprob: -9.682625770568848

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05455339699983597
    2. 'right' → logprob: -3.054553508758545
    3. ' right' → logprob: -5.179553508758545
    4. '   ' → logprob: -8.304553031921387
    5. '	right' → logprob: -10.054553031921387
    6. '           ' → logprob: -12.054553031921387
    7. '      ' → logprob: -12.054553031921387
    8. '```' → logprob: -12.804553031921387
    9. '     ' → logprob: -13.054553031921387
    10. '[right' → logprob: -13.304553031921387

Token 130: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.023251304402947426
    2. ' right' → logprob: -3.7732512950897217
    3. '       ' → logprob: -12.7732515335083
    4. '	right' → logprob: -13.5232515335083
    5. '           ' → logprob: -13.7732515335083
    6. '   ' → logprob: -14.8982515335083
    7. '
' → logprob: -16.398250579833984
    8. 'left' → logprob: -17.023250579833984
    9. '[right' → logprob: -17.523250579833984
    10. ' ' → logprob: -17.648250579833984

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.500011444091797
    3. '[I' → logprob: -14.000011444091797
    4. ' [' → logprob: -15.250011444091797
    5. '```' → logprob: -15.750011444091797
    6. '\[' → logprob: -17.500011444091797
    7. '=[' → logprob: -18.125011444091797
    8. '[ii' → logprob: -18.250011444091797
    9. '[int' → logprob: -18.500011444091797
    10. '`' → logprob: -18.625011444091797

Token 132: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13133248686790466
    2. ']' → logprob: -2.3813323974609375
    3. ' =' → logprob: -3.5063323974609375
    4. ']=' → logprob: -7.3813323974609375
    5. ')' → logprob: -11.756332397460938
    6. '[' → logprob: -12.381332397460938
    7. ' ]' → logprob: -12.631332397460938
    8. ']+=' → logprob: -15.006332397460938
    9. '   ' → logprob: -15.381332397460938
    10. ')=' → logprob: -15.506332397460938

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '=
' → logprob: -19.754077911376953
    4. '.=' → logprob: -19.879077911376953
    5. '＝' → logprob: -19.879077911376953
    6. '=

' → logprob: -20.504077911376953
    7. ')' → logprob: -21.004077911376953
    8. '+=' → logprob: -21.629077911376953
    9. ' ' → logprob: -22.004077911376953
    10. ')=' → logprob: -22.129077911376953

Token 134: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3132636249065399
    2. ' right' → logprob: -1.3132636547088623
    3. '	right' → logprob: -13.313263893127441
    4. '   ' → logprob: -16.938262939453125
    5. '1' → logprob: -17.313262939453125
    6. '[right' → logprob: -17.438262939453125
    7. 'r' → logprob: -17.563262939453125
    8. '       ' → logprob: -17.938262939453125
    9. '(right' → logprob: -18.063262939453125
    10. ' ' → logprob: -18.063262939453125

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.500011444091797
    3. 'i' → logprob: -14.250011444091797
    4. '+' → logprob: -15.000011444091797
    5. '[I' → logprob: -15.000011444091797
    6. ' [' → logprob: -16.000011444091797
    7. '][' → logprob: -16.875011444091797
    8. '[
' → logprob: -17.125011444091797
    9. '```' → logprob: -17.500011444091797
    10. ']' → logprob: -18.000011444091797

Token 136: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.36083877086639404
    2. '+' → logprob: -1.360838770866394
    3. '[' → logprob: -3.1108388900756836
    4. '-' → logprob: -7.235838890075684
    5. ']+' → logprob: -7.485838890075684
    6. ']' → logprob: -7.860838890075684
    7. '[
' → logprob: -9.235838890075684
    8. '1' → logprob: -9.860838890075684
    9. '[I' → logprob: -10.485838890075684
    10. 'i' → logprob: -10.860838890075684

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. ']' → logprob: -16.0000057220459
    4. '2' → logprob: -16.3750057220459
    5. '   ' → logprob: -16.5000057220459
    6. '```' → logprob: -17.1875057220459
    7. '0' → logprob: -17.3125057220459
    8. '-' → logprob: -17.4375057220459
    9. '+' → logprob: -17.6875057220459
    10. '  ' → logprob: -18.3125057220459

Token 138: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6574802398681641
    2. ']' → logprob: -0.9074802398681641
    3. ' +' → logprob: -2.782480239868164
    4. ']+' → logprob: -4.157480239868164
    5. ')' → logprob: -7.407480239868164
    6. ' ]' → logprob: -9.407480239868164
    7. '[' → logprob: -10.282480239868164
    8. ')+' → logprob: -10.657480239868164
    9. '}' → logprob: -12.657480239868164
    10. ' ' → logprob: -12.782480239868164

Token 139: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04858771339058876
    2. ' +' → logprob: -3.0485877990722656
    3. '+
' → logprob: -15.923587799072266
    4. '[' → logprob: -16.923587799072266
    5. '1' → logprob: -17.048587799072266
    6. '＋' → logprob: -17.048587799072266
    7. '```' → logprob: -17.673587799072266
    8. ' ' → logprob: -17.798587799072266
    9. ' plus' → logprob: -17.923587799072266
    10. '()+' → logprob: -18.173587799072266

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005928678438067436
    2. ' ' → logprob: -5.1309285163879395
    3. '```' → logprob: -15.880928993225098
    4. ' ' → logprob: -18.00592803955078
    5. '   ' → logprob: -18.75592803955078
    6. '
' → logprob: -19.38092803955078
    7. '`' → logprob: -20.25592803955078
    8. '１' → logprob: -20.38092803955078
    9. '0' → logprob: -20.50592803955078
    10. '<|end|>' → logprob: -20.63092803955078

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -17.375003814697266
    4. '   ' → logprob: -19.625003814697266
    5. '
' → logprob: -19.812503814697266
    6. '[' → logprob: -20.500003814697266
    7. '１' → logprob: -20.750003814697266
    8. '  ' → logprob: -20.937503814697266
    9. '`' → logprob: -21.125003814697266
    10. '-' → logprob: -21.250003814697266

Token 142: '

' (ID: 279)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.42898672819137573
    2. '#' → logprob: -1.4289867877960205
    3. 'result' → logprob: -2.8039867877960205
    4. 'answer' → logprob: -4.053986549377441
    5. 'for' → logprob: -4.428986549377441
    6. ')' → logprob: -5.178986549377441
    7. 'ans' → logprob: -6.053986549377441
    8. 'answers' → logprob: -6.178986549377441
    9. 'print' → logprob: -6.428986549377441
    10. 'res' → logprob: -6.803986549377441

Token 143: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09221218526363373
    2. 'ans' → logprob: -3.092212200164795
    3. 'answer' → logprob: -3.842212200164795
    4. 'result' → logprob: -4.342212200164795
    5. 'res' → logprob: -4.967212200164795
    6. 'best' → logprob: -6.967212200164795
    7. '#' → logprob: -8.342211723327637
    8. 'maximum' → logprob: -10.092211723327637
    9. 'total' → logprob: -11.092211723327637
    10. 'answers' → logprob: -11.967211723327637

Token 144: ' sans' (ID: 9828)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0210899114608765
    2. 'ans' → logprob: -1.3960899114608765
    3. 'answer' → logprob: -1.7710899114608765
    4. 'res' → logprob: -2.146090030670166
    5. 'result' → logprob: -2.271090030670166
    6. 'best' → logprob: -6.896090030670166
    7. '#' → logprob: -8.396089553833008
    8. ' ans' → logprob: -8.646089553833008
    9. ' max' → logprob: -9.271089553833008
    10. ' answer' → logprob: -9.521089553833008

Token 145: ' modification' (ID: 29847)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1490360498428345
    2. 'for' → logprob: -1.1490360498428345
    3. 'l' → logprob: -1.7740360498428345
    4. 'le' → logprob: -3.399035930633545
    5. 'i' → logprob: -3.524035930633545
    6. ' for' → logprob: -4.149035930633545
    7. '#' → logprob: -4.274035930633545
    8. 'la' → logprob: -4.399035930633545
    9. 'dou' → logprob: -4.899035930633545
    10. '```' → logprob: -5.024035930633545

Token 146: ',' (ID: 11)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28411656618118286
    2. 'answer' → logprob: -2.159116506576538
    3. 'ans' → logprob: -2.409116506576538
    4. 'result' → logprob: -3.534116506576538
    5. 'res' → logprob: -4.534116744995117
    6. 's' → logprob: -7.034116744995117
    7. 'print' → logprob: -7.909116744995117
    8. ' ans' → logprob: -8.534116744995117
    9. ' max' → logprob: -8.534116744995117
    10. 'best' → logprob: -9.159116744995117

Token 147: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4723505675792694
    2. 'ans' → logprob: -1.5973505973815918
    3. 'answer' → logprob: -2.097350597381592
    4. 'result' → logprob: -3.597350597381592
    5. 'res' → logprob: -3.972350597381592
    6. ' ans' → logprob: -6.347350597381592
    7. ' max' → logprob: -6.347350597381592
    8. ' answer' → logprob: -7.347350597381592
    9. 'best' → logprob: -7.597350597381592
    10. ' res' → logprob: -8.972350120544434

Token 148: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08008206635713577
    2. 'maximum' → logprob: -3.4550821781158447
    3. 'result' → logprob: -4.205081939697266
    4. 'answer' → logprob: -4.580081939697266
    5. 'res' → logprob: -5.080081939697266
    6. 'me' → logprob: -5.330081939697266
    7. 'ans' → logprob: -5.580081939697266
    8. 'best' → logprob: -5.955081939697266
    9. 'rés' → logprob: -6.955081939697266
    10. 'print' → logprob: -7.330081939697266

Token 149: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2613774240016937
    2. 'ans' → logprob: -1.6363774538040161
    3. 'answer' → logprob: -4.261377334594727
    4. 'res' → logprob: -4.761377334594727
    5. ' =' → logprob: -5.011377334594727
    6. 'result' → logprob: -6.261377334594727
    7. '=' → logprob: -6.886377334594727
    8. ' ans' → logprob: -7.011377334594727
    9. ' max' → logprob: -7.511377334594727
    10. 'best' → logprob: -7.511377334594727

Token 150: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08661429584026337
    2. 'answer' → logprob: -2.9616143703460693
    3. 'res' → logprob: -3.8366143703460693
    4. 'max' → logprob: -4.71161413192749
    5. 'result' → logprob: -7.46161413192749
    6. 'best' → logprob: -10.336614608764648
    7. 'maximum' → logprob: -10.711614608764648
    8. 'mx' → logprob: -11.586614608764648
    9. ' ans' → logprob: -11.836614608764648
    10. 'ret' → logprob: -12.211614608764648

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740866422653198
    2. '=' → logprob: -0.9740866422653198
    3. '=max' → logprob: -12.34908676147461
    4. ' ' → logprob: -13.84908676147461
    5. '_' → logprob: -13.84908676147461
    6. 'max' → logprob: -14.09908676147461
    7. '＝' → logprob: -14.47408676147461
    8. ',' → logprob: -14.47408676147461
    9. '=int' → logprob: -14.97408676147461
    10. ')' → logprob: -15.09908676147461

Token 152: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00015860427811276168
    2. ' max' → logprob: -8.750158309936523
    3. '(max' → logprob: -16.125158309936523
    4. '0' → logprob: -17.375158309936523
    5. '=max' → logprob: -17.500158309936523
    6. '1' → logprob: -17.750158309936523
    7. '[max' → logprob: -18.375158309936523
    8. '	max' → logprob: -18.750158309936523
    9. 'left' → logprob: -19.125158309936523
    10. ',max' → logprob: -19.375158309936523

Token 153: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00043448375072330236
    2. '(max' → logprob: -8.250434875488281
    3. 'left' → logprob: -9.750434875488281
    4. '(right' → logprob: -9.750434875488281
    5. '(' → logprob: -9.875434875488281
    6. '(ans' → logprob: -12.875434875488281
    7. '(
' → logprob: -14.000434875488281
    8. '(le' → logprob: -14.125434875488281
    9. '()' → logprob: -15.375434875488281
    10. '[left' → logprob: -16.37543487548828

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005245852749794722
    2. ' +' → logprob: -5.880245685577393
    3. '+' → logprob: -6.255245685577393
    4. ' )' → logprob: -7.630245685577393
    5. ')+' → logprob: -11.00524616241455
    6. '+)' → logprob: -12.13024616241455
    7. '))' → logprob: -12.88024616241455
    8. '+[' → logprob: -13.50524616241455
    9. ')
' → logprob: -13.75524616241455
    10. ',' → logprob: -13.75524616241455

Token 155: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015315281925722957
    2. ' for' → logprob: -6.501531600952148
    3. '
' → logprob: -11.126531600952148
    4. 'max' → logprob: -12.126531600952148
    5. '#' → logprob: -12.876531600952148
    6. ',' → logprob: -13.001531600952148
    7. 'if' → logprob: -14.126531600952148
    8. 'ans' → logprob: -14.501531600952148
    9. ')' → logprob: -14.626531600952148
    10. '+' → logprob: -14.626531600952148

Token 156: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004920298233628273
    2. ' for' → logprob: -7.625492095947266
    3. '```' → logprob: -13.500492095947266
    4. '#' → logprob: -13.875492095947266
    5. 'i' → logprob: -14.625492095947266
    6. 'import' → logprob: -14.750492095947266
    7. '1' → logprob: -15.750492095947266
    8. '
' → logprob: -15.875492095947266
    9. 'ans' → logprob: -16.250492095947266
    10. 'from' → logprob: -16.250492095947266

Token 157: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4741324186325073
    2. ' i' → logprob: -0.9741324186325073
    3. ' ' → logprob: -11.099132537841797
    4. ' ' → logprob: -12.224132537841797
    5. ')' → logprob: -12.661632537841797
    6. '```' → logprob: -12.661632537841797
    7. '(i' → logprob: -12.849132537841797
    8. ' chaque' → logprob: -12.974132537841797
    9. '	i' → logprob: -13.161632537841797
    10. 'j' → logprob: -13.286632537841797

Token 158: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11284094303846359
    2. 'i' → logprob: -2.2378408908843994
    3. 'index' → logprob: -12.61284065246582
    4. ' ' → logprob: -12.98784065246582
    5. ' ' → logprob: -13.23784065246582
    6. '_i' → logprob: -13.36284065246582
    7. ' index' → logprob: -13.73784065246582
    8. '	i' → logprob: -13.73784065246582
    9. '(i' → logprob: -13.73784065246582
    10. ')' → logprob: -13.98784065246582

Token 159: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3042444884777069
    2. ',' → logprob: -2.3042445182800293
    3. 'i' → logprob: -2.6792445182800293
    4. ' in' → logprob: -3.1792445182800293
    5. 'for' → logprob: -4.054244518280029
    6. ' for' → logprob: -4.304244518280029
    7. ':' → logprob: -4.554244518280029
    8. 'in' → logprob: -5.429244518280029
    9. ' ,' → logprob: -5.804244518280029
    10. ' ' → logprob: -7.054244518280029

Token 160: ' tenter' (ID: 109833)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5106282234191895
    2. ' for' → logprob: -1.2606282234191895
    3. ' ans' → logprob: -2.2606282234191895
    4. 'ans' → logprob: -4.5106282234191895
    5. ' i' → logprob: -7.7606282234191895
    6. 'i' → logprob: -8.385627746582031
    7. '#' → logprob: -9.135627746582031
    8. '(ans' → logprob: -9.260627746582031
    9. ' if' → logprob: -9.885627746582031
    10. 'if' → logprob: -10.010627746582031

Token 161: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4053724706172943
    2. ' d' → logprob: -1.9053725004196167
    3. 'de' → logprob: -2.280372381210327
    4. 'd' → logprob: -2.780372381210327
    5. ' une' → logprob: -4.530372619628906
    6. ' i' → logprob: -5.780372619628906
    7. ' ' → logprob: -6.530372619628906
    8. '<|end|>' → logprob: -6.905372619628906
    9. 'une' → logprob: -7.280372619628906
    10. '1' → logprob: -7.530372619628906

Token 162: ' changer' (ID: 47099)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8156658411026001
    2. 'range' → logprob: -1.5656658411026
    3. ' range' → logprob: -1.6906658411026
    4. ' augmenter' → logprob: -3.0656657218933105
    5. ' ' → logprob: -3.3156657218933105
    6. ' remplacer' → logprob: -3.8156657218933105
    7. 'augment' → logprob: -4.4406657218933105
    8. 'max' → logprob: -4.9406657218933105
    9. 'ans' → logprob: -5.4406657218933105
    10. ' i' → logprob: -5.4406657218933105

Token 163: ' une' (ID: 2463)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4541968107223511
    2. '1' → logprob: -1.829196810722351
    3. ' A' → logprob: -3.4541969299316406
    4. 'ans' → logprob: -3.4541969299316406
    5. 'for' → logprob: -3.5791969299316406
    6. 'i' → logprob: -3.7041969299316406
    7. ' ' → logprob: -3.9541969299316406
    8. '(' → logprob: -4.204196929931641
    9. ' i' → logprob: -4.704196929931641
    10. 'range' → logprob: -4.954196929931641

Token 164: ' sé' (ID: 7462)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.27603957056999207
    2. ' valeur' → logprob: -1.7760396003723145
    3. 'élé' → logprob: -2.9010396003723145
    4. 'cou' → logprob: -5.7760396003723145
    5. 'position' → logprob: -5.9010396003723145
    6. ' couleur' → logprob: -6.5260396003723145
    7. 'value' → logprob: -6.6510396003723145
    8. 'diff' → logprob: -6.9010396003723145
    9. 'vo' → logprob: -7.0260396003723145
    10. 'element' → logprob: -7.2760396003723145

Token 165: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.010859043337404728
    2. 'ction' → logprob: -6.76085901260376
    3. 'rie' → logprob: -6.76085901260376
    4. 'paration' → logprob: -6.76085901260376
    5. 'r' → logprob: -6.88585901260376
    6. ']' → logprob: -7.51085901260376
    7. 'lection' → logprob: -7.51085901260376
    8. '#' → logprob: -7.63585901260376
    9. 'p' → logprob: -7.63585901260376
    10. 'ance' → logprob: -7.76085901260376

Token 166: ' comm' (ID: 1394)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05584008991718292
    2. ' for' → logprob: -3.555840015411377
    3. 'i' → logprob: -4.680840015411377
    4. 'd' → logprob: -4.680840015411377
    5. 'de' → logprob: -6.055840015411377
    6. 'import' → logprob: -6.680840015411377
    7. 'pour' → logprob: -6.805840015411377
    8. 's' → logprob: -7.805840015411377
    9. ',' → logprob: -8.305840492248535
    10. 'max' → logprob: -8.430840492248535

Token 167: 'en' (ID: 262)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.39492470026016235
    2. 'un' → logprob: -1.8949246406555176
    3. 'enç' → logprob: -3.6449246406555176
    4. 'enc' → logprob: -3.7699246406555176
    5. 'e' → logprob: -3.7699246406555176
    6. '#' → logprob: -4.019924640655518
    7. 'ence' → logprob: -4.644924640655518
    8. 'uns' → logprob: -4.644924640655518
    9. '```' → logprob: -4.894924640655518
    10. 'en' → logprob: -5.269924640655518

Token 168: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.7241474986076355
    2. 'n' → logprob: -1.3491475582122803
    3. 'ç' → logprob: -1.8491475582122803
    4. 'nt' → logprob: -2.9741475582122803
    5. 'nc' → logprob: -4.474147319793701
    6. '```' → logprob: -4.474147319793701
    7. 'ment' → logprob: -4.474147319793701
    8. 'ce' → logprob: -6.224147319793701
    9. 'cement' → logprob: -6.349147319793701
    10. 'à' → logprob: -6.849147319793701

Token 169: ' ou' (ID: 2031)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.009214084595441818
    2. 'au' → logprob: -5.009213924407959
    3. ' à' → logprob: -7.134213924407959
    4. 'par' → logprob: -7.634213924407959
    5. 'at' → logprob: -7.884213924407959
    6. ''à' → logprob: -8.009214401245117
    7. 'en' → logprob: -8.384214401245117
    8. 'just' → logprob: -9.634214401245117
    9. 'from' → logprob: -10.259214401245117
    10. 'dans' → logprob: -10.509214401245117

Token 170: ' termin' (ID: 18412)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.7547929286956787
    2. 'termin' → logprob: -1.2547929286956787
    3. 'se' → logprob: -1.7547929286956787
    4. '#' → logprob: -3.0047929286956787
    5. 'f' → logprob: -4.379793167114258
    6. 'à' → logprob: -5.254793167114258
    7. ' se' → logprob: -7.004793167114258
    8. 'ou' → logprob: -7.629793167114258
    9. 'en' → logprob: -7.754793167114258
    10. 's' → logprob: -7.754793167114258

Token 171: 'ant' (ID: 493)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5633991360664368
    2. 'à' → logprob: -1.063399076461792
    3. 'ant' → logprob: -2.563399076461792
    4. '#' → logprob: -5.813399314880371
    5. 'a' → logprob: -5.938399314880371
    6. ' à' → logprob: -6.938399314880371
    7. ' par' → logprob: -7.563399314880371
    8. 'e' → logprob: -8.688399314880371
    9. 'dans' → logprob: -8.688399314880371
    10. ''à' → logprob: -8.938399314880371

Token 172: ' ici' (ID: 27994)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.06037226691842079
    2. 'par' → logprob: -3.3103723526000977
    3. 'au' → logprob: -4.560372352600098
    4. ' à' → logprob: -5.435372352600098
    5. 'sur' → logprob: -6.810372352600098
    6. 'dans' → logprob: -6.935372352600098
    7. '<|end|>' → logprob: -7.560372352600098
    8. 'a' → logprob: -7.560372352600098
    9. ' par' → logprob: -7.685372352600098
    10. ')' → logprob: -7.935372352600098

Token 173: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004567076452076435
    2. ' for' → logprob: -5.5045671463012695
    3. '
' → logprob: -7.6295671463012695
    4. ',' → logprob: -13.62956714630127
    5. ' 
' → logprob: -14.50456714630127
    6. '```' → logprob: -15.37956714630127
    7. '\n' → logprob: -16.004566192626953
    8. ',
' → logprob: -16.129566192626953
    9. '#' → logprob: -17.004566192626953
    10. '<|end|>' → logprob: -17.129566192626953

Token 174: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007253892254084349
    2. '
' → logprob: -5.507254123687744
    3. ' for' → logprob: -5.757254123687744
    4. '\n' → logprob: -12.382253646850586
    5. ' 
' → logprob: -12.507253646850586
    6. '```' → logprob: -13.257253646850586
    7. '\' → logprob: -15.257253646850586
    8. '

' → logprob: -15.632253646850586
    9. '
' → logprob: -15.757253646850586
    10. '  
' → logprob: -16.257253646850586

Token 175: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026205103495158255
    2. ' for' → logprob: -8.250262260437012
    3. '
' → logprob: -14.250262260437012
    4. '#' → logprob: -18.875261306762695
    5. '```' → logprob: -19.250261306762695
    6. 'ans' → logprob: -20.250261306762695
    7. '

' → logprob: -20.250261306762695
    8. '	for' → logprob: -20.375261306762695
    9. 'print' → logprob: -20.875261306762695
    10. ' 
' → logprob: -21.000261306762695

Token 176: ' essay' (ID: 9635)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08900468051433563
    2. ' for' → logprob: -2.4640047550201416
    3. 'or' → logprob: -11.464004516601562
    4. 'range' → logprob: -11.464004516601562
    5. ' continue' → logprob: -11.714004516601562
    6. 'continue' → logprob: -11.839004516601562
    7. ' =' → logprob: -12.089004516601562
    8. '
' → logprob: -12.214004516601562
    9. '=' → logprob: -12.589004516601562
    10. ' range' → logprob: -12.964004516601562

Token 177: 'e' (ID: 68)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7830640077590942
    2. 'r' → logprob: -0.7830640077590942
    3. ':' → logprob: -3.6580638885498047
    4. 'for' → logprob: -4.658063888549805
    5. 'd' → logprob: -4.783063888549805
    6. 'f' → logprob: -4.783063888549805
    7. 't' → logprob: -4.908063888549805
    8. '-' → logprob: -5.408063888549805
    9. '=' → logprob: -5.658063888549805
    10. 'x' → logprob: -6.158063888549805

Token 178: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30404961109161377
    2. ' de' → logprob: -1.9290496110916138
    3. ' d' → logprob: -3.054049491882324
    4. ' for' → logprob: -3.304049491882324
    5. 'd' → logprob: -4.179049491882324
    6. ':' → logprob: -4.304049491882324
    7. 'de' → logprob: -6.054049491882324
    8. 'import' → logprob: -8.554049491882324
    9. ' i' → logprob: -8.554049491882324
    10. 'i' → logprob: -8.554049491882324

Token 179: ' considérer' (ID: 172894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3454355299472809
    2. 'range' → logprob: -2.220435619354248
    3. ' for' → logprob: -2.345435619354248
    4. ' range' → logprob: -2.470435619354248
    5. '1' → logprob: -6.470435619354248
    6. ' ' → logprob: -7.095435619354248
    7. ' i' → logprob: -9.22043514251709
    8. 'forcer' → logprob: -9.22043514251709
    9. 'max' → logprob: -9.47043514251709
    10. 'i' → logprob: -9.59543514251709

Token 180: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4617481529712677
    2. ' i' → logprob: -1.0867481231689453
    3. ' la' → logprob: -5.086748123168945
    4. ' une' → logprob: -5.586748123168945
    5. 'd' → logprob: -5.711748123168945
    6. 'le' → logprob: -5.836748123168945
    7. ' de' → logprob: -6.086748123168945
    8. ' ' → logprob: -6.336748123168945
    9. 'de' → logprob: -6.461748123168945
    10. 'l' → logprob: -6.711748123168945

Token 181: ''effet' (ID: 197975)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1451728790998459
    2. ''ensemble' → logprob: -2.6451728343963623
    3. 'e' → logprob: -3.5201728343963623
    4. 'i' → logprob: -4.145173072814941
    5. 'es' → logprob: -4.770173072814941
    6. ''' → logprob: -6.270173072814941
    7. 'A' → logprob: -6.895173072814941
    8. ''é' → logprob: -7.145173072814941
    9. ''i' → logprob: -7.270173072814941
    10. ''espace' → logprob: -7.395173072814941

Token 182: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5802510976791382
    2. 'd' → logprob: -1.7052510976791382
    3. 'de' → logprob: -1.8302510976791382
    4. ' d' → logprob: -2.3302512168884277
    5. ' du' → logprob: -8.45525074005127
    6. ' ' → logprob: -8.95525074005127
    7. '#' → logprob: -9.08025074005127
    8. 'sur' → logprob: -9.45525074005127
    9. 'du' → logprob: -9.70525074005127
    10. ' à' → logprob: -10.33025074005127

Token 183: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0773967504501343
    2. 'une' → logprob: -1.0773967504501343
    3. ''une' → logprob: -2.077396869659424
    4. ''un' → logprob: -2.077396869659424
    5. 'un' → logprob: -3.077396869659424
    6. ' une' → logprob: -4.452396869659424
    7. 'i' → logprob: -5.952396869659424
    8. 'a' → logprob: -5.952396869659424
    9. ' un' → logprob: -6.202396869659424
    10. 'u' → logprob: -7.702396869659424

Token 184: ' inversion' (ID: 70924)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04395894706249237
    2. ' modification' → logprob: -3.418958902359009
    3. 'in' → logprob: -6.168959140777588
    4. 'élé' → logprob: -6.168959140777588
    5. 'rem' → logprob: -7.043959140777588
    6. 'supp' → logprob: -7.043959140777588
    7. 'é' → logprob: -7.418959140777588
    8. 'position' → logprob: -7.668959140777588
    9. 'sé' → logprob: -8.04395866394043
    10. 'alt' → logprob: -8.04395866394043

Token 185: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003697112202644348
    2. ' for' → logprob: -5.628696918487549
    3. '
' → logprob: -9.253697395324707
    4. '```' → logprob: -14.628697395324707
    5. ')' → logprob: -15.878697395324707
    6. '#' → logprob: -16.00369644165039
    7. '\n' → logprob: -16.50369644165039
    8. '<|end|>' → logprob: -16.75369644165039
    9. 'print' → logprob: -16.87869644165039
    10. 'i' → logprob: -17.12869644165039

Token 186: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4574722051620483
    2. 'A' → logprob: -1.5824722051620483
    3. 'la' → logprob: -1.5824722051620483
    4. 'i' → logprob: -2.457472324371338
    5. 'l' → logprob: -2.582472324371338
    6. ' i' → logprob: -2.957472324371338
    7. 'le' → logprob: -2.957472324371338
    8. ' A' → logprob: -3.582472324371338
    9. 'les' → logprob: -4.082472324371338
    10. ' le' → logprob: -4.457472324371338

Token 187: ' interval' (ID: 17116)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1252153515815735
    2. ' élément' → logprob: -2.8752152919769287
    3. 'i' → logprob: -3.8752152919769287
    4. 'element' → logprob: -4.250215530395508
    5. ' i' → logprob: -4.750215530395508
    6. 'interval' → logprob: -5.625215530395508
    7. 'segment' → logprob: -6.250215530395508
    8. ' interval' → logprob: -6.750215530395508
    9. 'indice' → logprob: -6.875215530395508
    10. ' segment' → logprob: -6.875215530395508

Token 188: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.356412410736084
    2. 'le' → logprob: -1.231412410736084
    3. 'u' → logprob: -5.106412410736084
    4. '[' → logprob: -7.981412410736084
    5. '#' → logprob: -8.231412887573242
    6. 'v' → logprob: -8.606412887573242
    7. 'um' → logprob: -8.856412887573242
    8. ',' → logprob: -8.981412887573242
    9. ']' → logprob: -9.231412887573242
    10. '...' → logprob: -9.356412887573242

Token 189: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025418936274945736
    2. ' for' → logprob: -6.002542018890381
    3. '
' → logprob: -9.877541542053223
    4. 'i' → logprob: -12.377541542053223
    5. ',' → logprob: -13.127541542053223
    6. 's' → logprob: -13.377541542053223
    7. '.' → logprob: -13.877541542053223
    8. '#' → logprob: -13.877541542053223
    9. '```' → logprob: -14.127541542053223
    10. 'max' → logprob: -14.127541542053223

Token 190: 'l' (ID: 75)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007793409284204245
    2. '0' → logprob: -5.257793426513672
    3. ' i' → logprob: -6.382793426513672
    4. 'l' → logprob: -7.882793426513672
    5. ']' → logprob: -9.132793426513672
    6. '1' → logprob: -9.132793426513672
    7. 'L' → logprob: -9.257793426513672
    8. 'j' → logprob: -10.007793426513672
    9. ')' → logprob: -10.382793426513672
    10. 'start' → logprob: -11.007793426513672

Token 191: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032435471657663584
    2. ' ,' → logprob: -6.628243446350098
    3. ',l' → logprob: -6.753243446350098
    4. ',i' → logprob: -7.878243446350098
    5. ',r' → logprob: -9.378243446350098
    6. ']' → logprob: -9.503243446350098
    7. ',s' → logprob: -10.003243446350098
    8. ',
' → logprob: -11.128243446350098
    9. ',j' → logprob: -11.253243446350098
    10. 's' → logprob: -11.253243446350098

Token 192: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003600782947614789
    2. ')' → logprob: -6.378600597381592
    3. '+' → logprob: -7.878600597381592
    4. '])' → logprob: -8.00360107421875
    5. ']
' → logprob: -8.00360107421875
    6. ' ]' → logprob: -8.37860107421875
    7. ',' → logprob: -8.62860107421875
    8. '],' → logprob: -9.37860107421875
    9. ')]' → logprob: -9.75360107421875
    10. '].' → logprob: -10.00360107421875

Token 193: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007019456243142486
    2. ' for' → logprob: -7.500701904296875
    3. '#' → logprob: -9.375701904296875
    4. '
' → logprob: -10.375701904296875
    5. 'r' → logprob: -11.375701904296875
    6. 'i' → logprob: -12.000701904296875
    7. ')' → logprob: -12.625701904296875
    8. '```' → logprob: -12.750701904296875
    9. 'max' → logprob: -13.125701904296875
    10. 'ans' → logprob: -13.375701904296875

Token 194: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006732541602104902
    2. ' for' → logprob: -5.00673246383667
    3. 'i' → logprob: -12.256732940673828
    4. 'r' → logprob: -12.381732940673828
    5. '
' → logprob: -12.631732940673828
    6. '```' → logprob: -13.256732940673828
    7. '#' → logprob: -13.631732940673828
    8. 'l' → logprob: -13.756732940673828
    9. 'ans' → logprob: -15.631732940673828
    10. ')' → logprob: -15.881732940673828

Token 195: ''idée' (ID: 131945)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7401130795478821
    2. 'r' → logprob: -1.4901130199432373
    3. 'for' → logprob: -1.4901130199432373
    4. ' for' → logprob: -3.3651130199432373
    5. 'i' → logprob: -4.365113258361816
    6. 'f' → logprob: -4.740113258361816
    7. ' #' → logprob: -5.115113258361816
    8. 'e' → logprob: -5.990113258361816
    9. 'l' → logprob: -6.115113258361816
    10. ' r' → logprob: -6.490113258361816

Token 196: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.319260597229004
    2. '=' → logprob: -1.444260597229004
    3. '#' → logprob: -1.819260597229004
    4. ' est' → logprob: -2.194260597229004
    5. ' =' → logprob: -2.694260597229004
    6. 'de' → logprob: -3.194260597229004
    7. ' de' → logprob: -3.694260597229004
    8. 'est' → logprob: -3.944260597229004
    9. 'd' → logprob: -4.194260597229004
    10. ',' → logprob: -4.444260597229004

Token 197: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4532945454120636
    2. 'de' → logprob: -1.0782945156097412
    3. 'd' → logprob: -4.45329475402832
    4. ' d' → logprob: -4.82829475402832
    5. ' que' → logprob: -6.20329475402832
    6. '#' → logprob: -7.07829475402832
    7. 'to' → logprob: -8.07829475402832
    8. 'def' → logprob: -8.32829475402832
    9. 'for' → logprob: -8.57829475402832
    10. 'que' → logprob: -8.70329475402832

Token 198: ' modifier' (ID: 37684)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7266042232513428
    2. 'for' → logprob: -1.1016042232513428
    3. 'contin' → logprob: -3.3516042232513428
    4. 'r' → logprob: -3.8516042232513428
    5. ' continuer' → logprob: -4.226604461669922
    6. '...' → logprob: -4.351604461669922
    7. ' for' → logprob: -4.726604461669922
    8. '"' → logprob: -4.726604461669922
    9. ' max' → logprob: -4.851604461669922
    10. '#' → logprob: -4.851604461669922

Token 199: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2118922472000122
    2. ' la' → logprob: -1.2118922472000122
    3. 'l' → logprob: -1.7118922472000122
    4. 'le' → logprob: -3.0868921279907227
    5. 'la' → logprob: -3.2118921279907227
    6. 'for' → logprob: -3.8368921279907227
    7. 'the' → logprob: -4.086892127990723
    8. ' le' → logprob: -4.336892127990723
    9. ' les' → logprob: -4.461892127990723
    10. ' for' → logprob: -4.461892127990723

Token 200: ' segment' (ID: 14806)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9542247653007507
    2. 'élé' → logprob: -1.5792248249053955
    3. 'interval' → logprob: -2.2042248249053955
    4. ' interval' → logprob: -2.3292248249053955
    5. ' segment' → logprob: -2.7042248249053955
    6. ' élément' → logprob: -3.5792248249053955
    7. 'i' → logprob: -4.204224586486816
    8. 'segment' → logprob: -4.329224586486816
    9. 'a' → logprob: -4.454224586486816
    10. 'element' → logprob: -4.454224586486816

Token 201: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.813514769077301
    2. ' ' → logprob: -1.3135147094726562
    3. '<|end|>' → logprob: -2.3135147094726562
    4. ',' → logprob: -2.6885147094726562
    5. 'de' → logprob: -4.063514709472656
    6. '_' → logprob: -4.438514709472656
    7. '.' → logprob: -4.688514709472656
    8. '#' → logprob: -4.938514709472656
    9. ' [' → logprob: -4.938514709472656
    10. ' de' → logprob: -4.938514709472656

Token 202: ' maxim' (ID: 29045)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5949777364730835
    2. 'am' → logprob: -1.8449777364730835
    3. 'augment' → logprob: -1.8449777364730835
    4. ' maxim' → logprob: -3.094977855682373
    5. 'all' → logprob: -3.344977855682373
    6. 'ob' → logprob: -4.969977855682373
    7. 'optim' → logprob: -5.344977855682373
    8. ' augmenter' → logprob: -5.719977855682373
    9. 'contin' → logprob: -5.969977855682373
    10. 'maximize' → logprob: -5.969977855682373

Token 203: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0025782748125493526
    2. 'al' → logprob: -6.377578258514404
    3. 'izer' → logprob: -8.502578735351562
    4. 'is' → logprob: -8.752578735351562
    5. 'er' → logprob: -8.877578735351562
    6. '#' → logprob: -9.252578735351562
    7. 'user' → logprob: -10.252578735351562
    8. 'ser' → logprob: -10.502578735351562
    9. '```' → logprob: -10.502578735351562
    10. 'um' → logprob: -10.627578735351562

Token 204: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.257027268409729
    2. 'l' → logprob: -2.2570271492004395
    3. ' la' → logprob: -2.8820271492004395
    4. 'la' → logprob: -3.5070271492004395
    5. ' ans' → logprob: -4.1320271492004395
    6. 'le' → logprob: -4.6320271492004395
    7. ' l' → logprob: -5.1320271492004395
    8. '(ans' → logprob: -6.5070271492004395
    9. 'max' → logprob: -7.1320271492004395
    10. ' le' → logprob: -7.2570271492004395

Token 205: ' sé' (ID: 7462)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10399022698402405
    2. 'max' → logprob: -2.603990316390991
    3. 'altern' → logprob: -4.478990077972412
    4. 'result' → logprob: -5.728990077972412
    5. 'rés' → logprob: -6.353990077972412
    6. 'maximum' → logprob: -6.353990077972412
    7. 'answer' → logprob: -6.353990077972412
    8. ' ans' → logprob: -6.728990077972412
    9. 'contin' → logprob: -7.103990077972412
    10. 'long' → logprob: -7.603990077972412

Token 206: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.008184506557881832
    2. 'q' → logprob: -4.883184432983398
    3. 'g' → logprob: -8.508184432983398
    4. '#' → logprob: -9.258184432983398
    5. 'gment' → logprob: -9.633184432983398
    6. 'qu' → logprob: -10.383184432983398
    7. '_' → logprob: -10.383184432983398
    8. 'QUENCE' → logprob: -10.508184432983398
    9. 'quences' → logprob: -11.258184432983398
    10. '```' → logprob: -11.383184432983398

Token 207: ' altern' (ID: 7310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025570355355739594
    2. ' for' → logprob: -4.150570392608643
    3. 'max' → logprob: -5.150570392608643
    4. 'i' → logprob: -5.900570392608643
    5. 's' → logprob: -8.025569915771484
    6. 'import' → logprob: -8.650569915771484
    7. 'possible' → logprob: -8.900569915771484
    8. 'de' → logprob: -10.275569915771484
    9. 'r' → logprob: -10.400569915771484
    10. ',' → logprob: -10.525569915771484

Token 208: 'ée' (ID: 2894)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.04715873673558235
    2. 'ation' → logprob: -3.797158718109131
    3. 'ante' → logprob: -3.922158718109131
    4. 'ée' → logprob: -6.547158718109131
    5. 'ence' → logprob: -7.672158718109131
    6. '#' → logprob: -7.922158718109131
    7. 'ant' → logprob: -8.422159194946289
    8. 'e' → logprob: -8.672159194946289
    9. 'a' → logprob: -8.922159194946289
    10. 'é' → logprob: -9.047159194946289

Token 209: ' autour' (ID: 39420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012410636991262436
    2. ' for' → logprob: -6.751241207122803
    3. '
' → logprob: -9.751240730285645
    4. 'max' → logprob: -12.876240730285645
    5. '```' → logprob: -13.001240730285645
    6. '#' → logprob: -13.376240730285645
    7. 'ans' → logprob: -13.376240730285645
    8. '<|end|>' → logprob: -13.626240730285645
    9. ')' → logprob: -14.376240730285645
    10. 'print' → logprob: -14.501240730285645

Token 210: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042307525873184204
    2. ' for' → logprob: -3.2923076152801514
    3. ',' → logprob: -7.042307376861572
    4. 'd' → logprob: -7.042307376861572
    5. 's' → logprob: -7.542307376861572
    6. 'de' → logprob: -7.667307376861572
    7. 'i' → logprob: -8.16730785369873
    8. '.' → logprob: -8.29230785369873
    9. 'r' → logprob: -8.66730785369873
    10. 'import' → logprob: -9.04230785369873

Token 211: ' segment' (ID: 14806)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7330119013786316
    2. 'segment' → logprob: -0.7330119013786316
    3. ' segment' → logprob: -4.233011722564697
    4. 'i' → logprob: -4.358011722564697
    5. 'l' → logprob: -6.108011722564697
    6. 'point' → logprob: -6.358011722564697
    7. 'a' → logprob: -6.858011722564697
    8. 'm' → logprob: -6.983011722564697
    9. ' r' → logprob: -7.108011722564697
    10. 'mod' → logprob: -7.483011722564697

Token 212: ' mod' (ID: 1812)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007752045057713985
    2. ' for' → logprob: -7.250775337219238
    3. '
' → logprob: -9.875775337219238
    4. 'max' → logprob: -12.750775337219238
    5. '```' → logprob: -13.125775337219238
    6. '#' → logprob: -13.125775337219238
    7. 'ans' → logprob: -13.250775337219238
    8. '<|end|>' → logprob: -14.125775337219238
    9. 's' → logprob: -14.250775337219238
    10. ')' → logprob: -14.250775337219238

Token 213: 'ifié' (ID: 49927)
  Prédit: 'ité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.7433339953422546
    2. 'r' → logprob: -2.2433340549468994
    3. 'ur' → logprob: -2.7433340549468994
    4. 'ax' → logprob: -2.9933340549468994
    5. 'ent' → logprob: -3.1183340549468994
    6. ']' → logprob: -3.9933340549468994
    7. 'ents' → logprob: -4.11833381652832
    8. 'um' → logprob: -4.24333381652832
    9. 'ment' → logprob: -4.24333381652832
    10. 'interval' → logprob: -4.49333381652832

Token 214: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015159345930442214
    2. ' for' → logprob: -6.501515865325928
    3. '
' → logprob: -12.001516342163086
    4. '```' → logprob: -12.251516342163086
    5. ')' → logprob: -13.876516342163086
    6. 'i' → logprob: -14.376516342163086
    7. ',' → logprob: -15.001516342163086
    8. '#' → logprob: -15.501516342163086
    9. 'ans' → logprob: -16.626516342163086
    10. '	for' → logprob: -16.626516342163086

Token 215: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00019603055261541158
    2. ' for' → logprob: -8.62519645690918
    3. 'i' → logprob: -11.12519645690918
    4. '```' → logprob: -14.12519645690918
    5. 'ans' → logprob: -15.25019645690918
    6. '
' → logprob: -15.62519645690918
    7. ')' → logprob: -15.75019645690918
    8. '#' → logprob: -15.75019645690918
    9. 'max' → logprob: -16.25019645690918
    10. 'r' → logprob: -17.62519645690918

Token 216: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012598758330568671
    2. ' for' → logprob: -6.751259803771973
    3. '
' → logprob: -9.376259803771973
    4. '\n' → logprob: -13.876259803771973
    5. ' 
' → logprob: -13.876259803771973
    6. '```' → logprob: -14.001259803771973
    7. 'i' → logprob: -14.126259803771973
    8. 'ans' → logprob: -14.376259803771973
    9. '\' → logprob: -15.251259803771973
    10. '

' → logprob: -16.25126075744629

Token 217: ' essa' (ID: 19417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009788908995687962
    2. ' for' → logprob: -4.634788990020752
    3. 'continue' → logprob: -10.759788513183594
    4. '#' → logprob: -12.884788513183594
    5. 'r' → logprob: -12.884788513183594
    6. ' continue' → logprob: -13.259788513183594
    7. 'range' → logprob: -13.384788513183594
    8. '=' → logprob: -14.884788513183594
    9. 'i' → logprob: -15.009788513183594
    10. 's' → logprob: -15.259788513183594

Token 218: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6746018528938293
    2. 'ye' → logprob: -1.0496017932891846
    3. 'ie' → logprob: -2.0496017932891846
    4. 'aye' → logprob: -5.049602031707764
    5. 'yer' → logprob: -6.549602031707764
    6. 'eye' → logprob: -7.549602031707764
    7. '\' → logprob: -7.549602031707764
    8. 'i' → logprob: -7.799602031707764
    9. 'e' → logprob: -8.299601554870605
    10. 'lle' → logprob: -8.799601554870605

Token 219: ' donc' (ID: 14206)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19217722117900848
    2. ' for' → logprob: -2.3171772956848145
    3. ' de' → logprob: -2.6921772956848145
    4. ' d' → logprob: -5.5671772956848145
    5. 'd' → logprob: -6.0671772956848145
    6. 'de' → logprob: -7.3171772956848145
    7. ':' → logprob: -7.9421772956848145
    8. '_' → logprob: -8.192176818847656
    9. ' of' → logprob: -8.317176818847656
    10. ' to' → logprob: -8.317176818847656

Token 220: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3046989440917969
    2. ' de' → logprob: -1.6796989440917969
    3. ' for' → logprob: -2.929698944091797
    4. 'de' → logprob: -4.304698944091797
    5. ' d' → logprob: -5.554698944091797
    6. 'd' → logprob: -5.679698944091797
    7. ':' → logprob: -7.679698944091797
    8. ' ' → logprob: -7.929698944091797
    9. 'une' → logprob: -8.429698944091797
    10. 'import' → logprob: -8.929698944091797

Token 221: ' vérifier' (ID: 93671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06704972684383392
    2. 'range' → logprob: -3.317049741744995
    3. ' for' → logprob: -3.692049741744995
    4. ' range' → logprob: -5.942049503326416
    5. 'max' → logprob: -8.192049980163574
    6. 'r' → logprob: -8.567049980163574
    7. ' ' → logprob: -8.567049980163574
    8. '1' → logprob: -8.942049980163574
    9. '0' → logprob: -9.942049980163574
    10. 'i' → logprob: -10.317049980163574

Token 222: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9591304063796997
    2. 'for' → logprob: -0.9591304063796997
    3. ' i' → logprob: -1.9591304063796997
    4. 'i' → logprob: -2.95913028717041
    5. ' if' → logprob: -3.95913028717041
    6. ' de' → logprob: -5.45913028717041
    7. 'if' → logprob: -5.70913028717041
    8. ' les' → logprob: -6.20913028717041
    9. ' ' → logprob: -6.33413028717041
    10. ' la' → logprob: -6.83413028717041

Token 223: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42982566356658936
    2. 'i' → logprob: -1.0548256635665894
    3. 'r' → logprob: -7.304825782775879
    4. ' r' → logprob: -7.929825782775879
    5. 'l' → logprob: -10.179825782775879
    6. ' l' → logprob: -10.804825782775879
    7. '_' → logprob: -11.304825782775879
    8. '_i' → logprob: -12.554825782775879
    9. ' ' → logprob: -12.679825782775879
    10. ' ' → logprob: -13.054825782775879

Token 224: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28119921684265137
    2. ' i' → logprob: -1.4061992168426514
    3. ' position' → logprob: -11.65619945526123
    4. 'r' → logprob: -11.78119945526123
    5. ' ' → logprob: -11.78119945526123
    6. ' ' → logprob: -12.03119945526123
    7. 'position' → logprob: -12.78119945526123
    8. '```' → logprob: -12.78119945526123
    9. '_i' → logprob: -13.03119945526123
    10. ' r' → logprob: -13.40619945526123

Token 225: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3710414469242096
    2. 'i' → logprob: -1.8710414171218872
    3. ':' → logprob: -1.9960414171218872
    4. ',' → logprob: -4.496041297912598
    5. ' if' → logprob: -6.121041297912598
    6. ' :' → logprob: -6.621041297912598
    7. ' ' → logprob: -6.871041297912598
    8. ')' → logprob: -7.496041297912598
    9. 'range' → logprob: -7.746041297912598
    10. 'if' → logprob: -7.871041297912598

Token 226: ' combien' (ID: 106648)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6353774666786194
    2. ' i' → logprob: -1.5103774070739746
    3. 'for' → logprob: -1.6353774070739746
    4. 'i' → logprob: -3.6353774070739746
    5. ' if' → logprob: -3.8853774070739746
    6. ' ans' → logprob: -5.635377407073975
    7. 'if' → logprob: -6.510377407073975
    8. ' ' → logprob: -7.885377407073975
    9. '...' → logprob: -8.010377883911133
    10. 'ans' → logprob: -8.010377883911133

Token 227: ' on' (ID: 402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8377397060394287
    2. ' de' → logprob: -1.5877397060394287
    3. ' on' → logprob: -1.7127397060394287
    4. ' d' → logprob: -2.5877397060394287
    5. 'i' → logprob: -2.9627397060394287
    6. 'max' → logprob: -4.712739944458008
    7. ' max' → logprob: -4.837739944458008
    8. 'd' → logprob: -4.962739944458008
    9. 'on' → logprob: -5.212739944458008
    10. ' ans' → logprob: -5.462739944458008

Token 228: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.4011063873767853
    2. ' peut' → logprob: -1.151106357574463
    3. ' peux' → logprob: -4.901106357574463
    4. ' pe' → logprob: -5.651106357574463
    5. 'pour' → logprob: -6.776106357574463
    6. ' pourrait' → logprob: -7.526106357574463
    7. ' can' → logprob: -8.151106834411621
    8. ' pourra' → logprob: -8.901106834411621
    9. '```' → logprob: -9.026106834411621
    10. '#' → logprob: -9.276106834411621

Token 229: ' racc' (ID: 146476)
  Prédit: ' augmenter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' augmenter' → logprob: -1.6276533603668213
    2. 'augment' → logprob: -1.6276533603668213
    3. 'aj' → logprob: -1.8776533603668213
    4. ' ajouter' → logprob: -2.2526533603668213
    5. ' continuer' → logprob: -2.2526533603668213
    6. ' obtenir' → logprob: -2.3776533603668213
    7. ' prolong' → logprob: -3.5026533603668213
    8. ' gagner' → logprob: -3.8776533603668213
    9. 'max' → logprob: -4.127653121948242
    10. ' max' → logprob: -4.627653121948242

Token 230: 'order' (ID: 2143)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.000260382192209363
    2. 'o' → logprob: -9.625260353088379
    3. 'cour' → logprob: -10.125260353088379
    4. 'or' → logprob: -10.750260353088379
    5. '
' → logprob: -10.750260353088379
    6. 'Our' → logprob: -11.000260353088379
    7. '

' → logprob: -11.000260353088379
    8. 'ourt' → logprob: -11.250260353088379
    9. 'ours' → logprob: -11.875260353088379
    10. 'ou' → logprob: -12.000260353088379

Token 231: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1106981039047241
    2. 'left' → logprob: -1.1106981039047241
    3. 'A' → logprob: -2.6106982231140137
    4. ' i' → logprob: -3.3606982231140137
    5. ' A' → logprob: -3.6106982231140137
    6. 'i' → logprob: -3.7356982231140137
    7. ' la' → logprob: -3.8606982231140137
    8. '...' → logprob: -4.235698223114014
    9. 'l' → logprob: -4.360698223114014
    10. ' left' → logprob: -4.485698223114014

Token 232: ' gauche' (ID: 58367)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.5160750150680542
    2. 'élé' → logprob: -1.6410750150680542
    3. ' gauche' → logprob: -2.3910751342773438
    4. ' positions' → logprob: -2.7660751342773438
    5. 'tokens' → logprob: -2.7660751342773438
    6. ' la' → logprob: -3.0160751342773438
    7. 'left' → logprob: -3.0160751342773438
    8. ' tokens' → logprob: -3.3910751342773438
    9. 'altern' → logprob: -3.3910751342773438
    10. 'cases' → logprob: -3.7660751342773438

Token 233: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.9493849277496338
    2. 'et' → logprob: -1.1993849277496338
    3. '+' → logprob: -2.074384927749634
    4. ',' → logprob: -2.574384927749634
    5. ' +' → logprob: -3.074384927749634
    6. 'à' → logprob: -4.324384689331055
    7. ' à' → logprob: -4.699384689331055
    8. '[i' → logprob: -4.699384689331055
    9. ' ,' → logprob: -5.199384689331055
    10. ')' → logprob: -5.449384689331055

Token 234: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.332750141620636
    2. ' de' → logprob: -1.3327500820159912
    3. ' droite' → logprob: -5.33275032043457
    4. ' ' → logprob: -6.08275032043457
    5. ' combien' → logprob: -6.08275032043457
    6. 'comb' → logprob: -6.20775032043457
    7. 'right' → logprob: -6.33275032043457
    8. ' right' → logprob: -6.83275032043457
    9. 'à' → logprob: -6.95775032043457
    10. ',' → logprob: -7.33275032043457

Token 235: ' droite' (ID: 61428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6108959317207336
    2. ' droite' → logprob: -1.1108958721160889
    3. 'right' → logprob: -3.360895872116089
    4. ' right' → logprob: -3.485895872116089
    5. 'dro' → logprob: -3.485895872116089
    6. ' ' → logprob: -3.735895872116089
    7. ' droit' → logprob: -5.235896110534668
    8. ' dro' → logprob: -7.735896110534668
    9. 'd' → logprob: -7.985896110534668
    10. ''' → logprob: -8.235896110534668

Token 236: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025237616151571274
    2. ' for' → logprob: -3.775237560272217
    3. '
' → logprob: -6.275237560272217
    4. ' 
' → logprob: -9.775238037109375
    5. '\n' → logprob: -10.525238037109375
    6. '\' → logprob: -11.525238037109375
    7. ',' → logprob: -12.650238037109375
    8. '```' → logprob: -13.400238037109375
    9. 's' → logprob: -13.775238037109375
    10. '  
' → logprob: -13.775238037109375

Token 237: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005299923941493034
    2. ' for' → logprob: -5.255300045013428
    3. '
' → logprob: -10.00529956817627
    4. '```' → logprob: -12.00529956817627
    5. '\n' → logprob: -12.00529956817627
    6. 'i' → logprob: -12.88029956817627
    7. ' 
' → logprob: -12.88029956817627
    8. '\' → logprob: -14.00529956817627
    9. 'ans' → logprob: -14.25529956817627
    10. '  
' → logprob: -15.00529956817627

Token 238: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.574251918005757e-05
    2. ' for' → logprob: -9.875055313110352
    3. 'ans' → logprob: -13.000055313110352
    4. 'i' → logprob: -13.250055313110352
    5. '```' → logprob: -16.75005531311035
    6. '
' → logprob: -17.12505531311035
    7. 'max' → logprob: -17.50005531311035
    8. 'prev' → logprob: -17.75005531311035
    9. '#' → logprob: -18.25005531311035
    10. '	for' → logprob: -18.37505531311035

Token 239: ' veut' (ID: 41653)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14376427233219147
    2. ' for' → logprob: -2.0187642574310303
    3. ' continue' → logprob: -8.01876449584961
    4. ' range' → logprob: -9.01876449584961
    5. 'range' → logprob: -9.01876449584961
    6. 'continue' → logprob: -9.26876449584961
    7. '
' → logprob: -9.39376449584961
    8. 'f' → logprob: -9.76876449584961
    9. ' peut' → logprob: -10.14376449584961
    10. ' a' → logprob: -10.64376449584961

Token 240: ' calcul' (ID: 7559)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024915581569075584
    2. 'max' → logprob: -4.39991569519043
    3. ' for' → logprob: -4.52491569519043
    4. 'i' → logprob: -7.52491569519043
    5. 'import' → logprob: -9.14991569519043
    6. '...' → logprob: -9.27491569519043
    7. ' max' → logprob: -9.77491569519043
    8. '#' → logprob: -9.77491569519043
    9. 'forcer' → logprob: -9.89991569519043
    10. 'print' → logprob: -10.02491569519043

Token 241: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -5.6100132496794686e-05
    2. '#' → logprob: -10.875056266784668
    3. 'ate' → logprob: -10.875056266784668
    4. 'e' → logprob: -11.125056266784668
    5. '```' → logprob: -13.500056266784668
    6. 'r' → logprob: -14.250056266784668
    7. ' er' → logprob: -15.500056266784668
    8. '
' → logprob: -15.750056266784668
    9. '=' → logprob: -15.875056266784668
    10. '_er' → logprob: -16.12505531311035

Token 242: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3601509630680084
    2. 'max' → logprob: -1.735150933265686
    3. ' for' → logprob: -2.2351510524749756
    4. 'ans' → logprob: -5.1101508140563965
    5. ' max' → logprob: -5.4851508140563965
    6. ' la' → logprob: -5.9851508140563965
    7. ' ans' → logprob: -6.4851508140563965
    8. '(max' → logprob: -7.3601508140563965
    9. 'pour' → logprob: -7.4851508140563965
    10. ' =' → logprob: -7.8601508140563965

Token 243: ' longueur' (ID: 104613)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0318714864552021
    2. 'maximum' → logprob: -4.156871318817139
    3. ' max' → logprob: -4.531871318817139
    4. 'for' → logprob: -6.031871318817139
    5. ' maximum' → logprob: -6.656871318817139
    6. ' for' → logprob: -8.906871795654297
    7. 'ans' → logprob: -9.031871795654297
    8. 'long' → logprob: -9.156871795654297
    9. ' maximale' → logprob: -9.156871795654297
    10. 'maxlength' → logprob: -9.406871795654297

Token 244: ' après' (ID: 16460)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01976296678185463
    2. ' maximale' → logprob: -4.269762992858887
    3. '_max' → logprob: -5.394762992858887
    4. ' max' → logprob: -7.894762992858887
    5. 'de' → logprob: -8.519762992858887
    6. 'maximum' → logprob: -8.644762992858887
    7. 'ma' → logprob: -10.144762992858887
    8. ' =' → logprob: -10.144762992858887
    9. '=max' → logprob: -10.144762992858887
    10. '=' → logprob: -10.519762992858887

Token 245: ' inversion' (ID: 70924)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.15187765657901764
    2. ' modification' → logprob: -3.0268776416778564
    3. ' la' → logprob: -3.4018776416778564
    4. 'la' → logprob: -3.9018776416778564
    5. '#' → logprob: -5.0268778800964355
    6. 'l' → logprob: -5.4018778800964355
    7. 'in' → logprob: -5.6518778800964355
    8. ' l' → logprob: -5.7768778800964355
    9. '```' → logprob: -5.9018778800964355
    10. ' inversion' → logprob: -6.1518778800964355

Token 246: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012492944486439228
    2. ' for' → logprob: -4.887493133544922
    3. 'ans' → logprob: -6.012493133544922
    4. 'max' → logprob: -6.387493133544922
    5. '
' → logprob: -8.387493133544922
    6. ' =' → logprob: -8.637493133544922
    7. '=' → logprob: -8.762493133544922
    8. 'answer' → logprob: -9.637493133544922
    9. '(ans' → logprob: -10.762493133544922
    10. ' ans' → logprob: -10.762493133544922

Token 247: ' [' (ID: 723)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.511948823928833
    2. 'un' → logprob: -1.636948823928833
    3. ' un' → logprob: -1.636948823928833
    4. 'une' → logprob: -1.886948823928833
    5. ' une' → logprob: -2.011948823928833
    6. ' i' → logprob: -3.636948823928833
    7. 'i' → logprob: -3.761948823928833
    8. '1' → logprob: -4.386948585510254
    9. 'l' → logprob: -4.511948585510254
    10. ' ' → logprob: -5.261948585510254

Token 248: 'l' (ID: 75)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3194118142127991
    2. 'l' → logprob: -1.3194117546081543
    3. ' i' → logprob: -5.444411754608154
    4. ']' → logprob: -7.444411754608154
    5. ' l' → logprob: -7.444411754608154
    6. ',' → logprob: -8.444412231445312
    7. 'r' → logprob: -8.694412231445312
    8. 'L' → logprob: -9.569412231445312
    9. ')' → logprob: -10.319412231445312
    10. '
' → logprob: -10.819412231445312

Token 249: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.2530478239059448
    2. ',' → logprob: -1.5030478239059448
    3. ',l' → logprob: -7.878047943115234
    4. 'r' → logprob: -8.378047943115234
    5. ' ,' → logprob: -8.503047943115234
    6. ']' → logprob: -8.753047943115234
    7. ',
' → logprob: -9.878047943115234
    8. '+' → logprob: -10.878047943115234
    9. '+r' → logprob: -11.503047943115234
    10. '-' → logprob: -11.753047943115234

Token 250: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034475417342036963
    2. ',' → logprob: -6.628447532653809
    3. ' ]' → logprob: -7.003447532653809
    4. '])' → logprob: -7.628447532653809
    5. '],' → logprob: -8.003447532653809
    6. ']
' → logprob: -9.003447532653809
    7. ')' → logprob: -9.878447532653809
    8. '].' → logprob: -10.128447532653809
    9. '#' → logprob: -10.253447532653809
    10. ']

' → logprob: -10.378447532653809

Token 251: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005677179899066687
    2. ' for' → logprob: -5.630677223205566
    3. '#' → logprob: -6.880677223205566
    4. '
' → logprob: -7.255677223205566
    5. '<|end|>' → logprob: -8.630677223205566
    6. 'i' → logprob: -10.380677223205566
    7. ',' → logprob: -10.505677223205566
    8. 'max' → logprob: -10.880677223205566
    9. ' 
' → logprob: -11.005677223205566
    10. ')' → logprob: -11.255677223205566

Token 252: ' In' (ID: 730)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00126059097237885
    2. ' for' → logprob: -6.751260757446289
    3. '
' → logprob: -9.501260757446289
    4. 'max' → logprob: -12.126260757446289
    5. '#' → logprob: -12.251260757446289
    6. 'r' → logprob: -13.626260757446289
    7. ' 
' → logprob: -14.126260757446289
    8. '```' → logprob: -14.376260757446289
    9. 'i' → logprob: -14.501260757446289
    10. 'l' → logprob: -14.751260757446289

Token 253: 'version' (ID: 8924)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26471346616744995
    2. '#' → logprob: -1.7647135257720947
    3. ' for' → logprob: -3.2647135257720947
    4. 't' → logprob: -5.139713287353516
    5. 'd' → logprob: -5.264713287353516
    6. 'f' → logprob: -6.639713287353516
    7. '```' → logprob: -6.639713287353516
    8. 'max' → logprob: -7.014713287353516
    9. ' #' → logprob: -7.139713287353516
    10. ']' → logprob: -7.139713287353516

Token 254: ' change' (ID: 3343)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0124131441116333
    2. 'def' → logprob: -1.7624131441116333
    3. 'de' → logprob: -2.5124130249023438
    4. '_length' → logprob: -2.7624130249023438
    5. 'for' → logprob: -2.7624130249023438
    6. '=' → logprob: -2.8874130249023438
    7. '#' → logprob: -3.2624130249023438
    8. '_possible' → logprob: -3.8874130249023438
    9. ' de' → logprob: -4.137413024902344
    10. ':' → logprob: -4.512413024902344

Token 255: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5566818714141846
    2. ' la' → logprob: -1.8066818714141846
    3. 'le' → logprob: -1.9316818714141846
    4. 'l' → logprob: -2.4316818714141846
    5. ' l' → logprob: -2.4316818714141846
    6. '[' → logprob: -2.9316818714141846
    7. 'de' → logprob: -3.3066818714141846
    8. 'la' → logprob: -3.4316818714141846
    9. ' le' → logprob: -3.4316818714141846
    10. 's' → logprob: -3.5566818714141846

Token 256: '0' (ID: 15)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7865762114524841
    2. 'le' → logprob: -1.286576271057129
    3. 'l' → logprob: -2.411576271057129
    4. 'A' → logprob: -2.911576271057129
    5. 'les' → logprob: -2.911576271057129
    6. 'r' → logprob: -3.411576271057129
    7. 'de' → logprob: -3.911576271057129
    8. 'tout' → logprob: -5.786576271057129
    9. 'un' → logprob: -6.536576271057129
    10. 'len' → logprob: -6.911576271057129

Token 257: '->' (ID: 609)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.5595494508743286
    2. ' ou' → logprob: -1.5595494508743286
    3. ' et' → logprob: -1.6845494508743286
    4. 'en' → logprob: -2.059549331665039
    5. ' en' → logprob: -2.309549331665039
    6. 'ou' → logprob: -3.309549331665039
    7. ' à' → logprob: -3.434549331665039
    8. 's' → logprob: -3.684549331665039
    9. ',' → logprob: -3.684549331665039
    10. 'à' → logprob: -4.059549331665039

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. ' ' → logprob: -17.877805709838867
    4. '
' → logprob: -18.502805709838867
    5. '0' → logprob: -18.627805709838867
    6. 'to' → logprob: -19.002805709838867
    7. '１' → logprob: -19.127805709838867
    8. ',' → logprob: -19.127805709838867
    9. 's' → logprob: -19.502805709838867
    10. '  ' → logprob: -19.752805709838867

Token 259: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21691101789474487
    2. ' for' → logprob: -1.9669110774993896
    3. 's' → logprob: -3.9669110774993896
    4. '#' → logprob: -4.2169108390808105
    5. ',' → logprob: -4.5919108390808105
    6. ')' → logprob: -6.3419108390808105
    7. '<|end|>' → logprob: -6.4669108390808105
    8. '
' → logprob: -6.4669108390808105
    9. ' or' → logprob: -6.8419108390808105
    10. ' ' → logprob: -6.8419108390808105

Token 260: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061971161514520645
    2. ' ' → logprob: -2.8119711875915527
    3. ' ' → logprob: -12.686970710754395
    4. '
' → logprob: -15.436970710754395
    5. '  ' → logprob: -16.56197166442871
    6. '   ' → logprob: -17.43697166442871
    7. ' ' → logprob: -17.68697166442871
    8. '```' → logprob: -17.93697166442871
    9. '`' → logprob: -18.18697166442871
    10. ',' → logprob: -18.18697166442871

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. ' ' → logprob: -16.5017032623291
    4. '0' → logprob: -17.3767032623291
    5. '
' → logprob: -17.5017032623291
    6. '```' → logprob: -19.1267032623291
    7. '  ' → logprob: -19.3767032623291
    8. '   ' → logprob: -19.6267032623291
    9. '`' → logprob: -19.8767032623291
    10. '!' → logprob: -20.8767032623291

Token 262: '->' (ID: 609)
  Prédit: '->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.0004954866599291563
    2. ' ->' → logprob: -7.625495433807373
    3. '-->' → logprob: -13.250495910644531
    4. '->[' → logprob: -13.375495910644531
    5. '→' → logprob: -13.625495910644531
    6. '0' → logprob: -14.625495910644531
    7. 'to' → logprob: -14.750495910644531
    8. '-' → logprob: -14.750495910644531
    9. '=>' → logprob: -15.500495910644531
    10. '>' → logprob: -15.500495910644531

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4868770196917467e-05
    2. '1' → logprob: -11.250024795532227
    3. '2' → logprob: -12.125024795532227
    4. ' ' → logprob: -12.125024795532227
    5. '```' → logprob: -14.500024795532227
    6. '-' → logprob: -15.125024795532227
    7. '!' → logprob: -16.500024795532227
    8. '.' → logprob: -16.750024795532227
    9. '`' → logprob: -17.750024795532227
    10. ',' → logprob: -17.875024795532227

Token 264: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011400962248444557
    2. ' for' → logprob: -6.876140117645264
    3. 'ans' → logprob: -9.751139640808105
    4. '#' → logprob: -10.376139640808105
    5. 'max' → logprob: -11.876139640808105
    6. '
' → logprob: -12.376139640808105
    7. 'result' → logprob: -13.751139640808105
    8. 'i' → logprob: -13.876139640808105
    9. 'prev' → logprob: -14.126139640808105
    10. '```' → logprob: -14.501139640808105

Token 265: ' ce' (ID: 2357)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.5732657313346863
    2. 'A' → logprob: -0.9482657313346863
    3. 'l' → logprob: -3.448265790939331
    4. 'le' → logprob: -5.823265552520752
    5. 'la' → logprob: -5.823265552520752
    6. '[r' → logprob: -5.823265552520752
    7. ' A' → logprob: -6.073265552520752
    8. '[A' → logprob: -6.323265552520752
    9. '[' → logprob: -7.448265552520752
    10. ' [' → logprob: -7.448265552520752

Token 266: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.22858847677707672
    2. 'code' → logprob: -3.103588581085205
    3. 'interval' → logprob: -3.228588581085205
    4. 'range' → logprob: -3.478588581085205
    5. ' segment' → logprob: -3.603588581085205
    6. 'A' → logprob: -3.978588581085205
    7. '#' → logprob: -4.103588581085205
    8. '[' → logprob: -4.728588581085205
    9. '```' → logprob: -5.978588581085205
    10. '[A' → logprob: -6.228588581085205

Token 267: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02339024469256401
    2. ' for' → logprob: -3.773390293121338
    3. '
' → logprob: -9.02338981628418
    4. '#' → logprob: -11.39838981628418
    5. 'i' → logprob: -12.64838981628418
    6. ' 
' → logprob: -12.64838981628418
    7. 'ans' → logprob: -13.89838981628418
    8. ',' → logprob: -13.89838981628418
    9. 'r' → logprob: -14.14838981628418
    10. '

' → logprob: -14.52338981628418

Token 268: ' donc' (ID: 14206)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13255372643470764
    2. ' for' → logprob: -2.132553815841675
    3. '#' → logprob: -5.507553577423096
    4. ' 
' → logprob: -7.382553577423096
    5. '
' → logprob: -7.882553577423096
    6. ' ' → logprob: -8.507554054260254
    7. ' #' → logprob: -9.507554054260254
    8. ' and' → logprob: -10.507554054260254
    9. 'i' → logprob: -10.632554054260254
    10. ' but' → logprob: -10.632554054260254

Token 269: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03277415782213211
    2. 'on' → logprob: -4.407773971557617
    3. '#' → logprob: -4.657773971557617
    4. ' for' → logprob: -5.532773971557617
    5. 'le' → logprob: -6.282773971557617
    6. 'pour' → logprob: -6.782773971557617
    7. ' on' → logprob: -7.032773971557617
    8. 'l' → logprob: -7.157773971557617
    9. 'la' → logprob: -7.282773971557617
    10. 'if' → logprob: -8.657773971557617

Token 270: ' altern' (ID: 7310)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -1.8708281517028809
    2. 'diff' → logprob: -1.9958281517028809
    3. 'b' → logprob: -3.120828151702881
    4. ' frontières' → logprob: -3.245828151702881
    5. ' adjacent' → logprob: -3.495828151702881
    6. 'dif' → logprob: -3.620828151702881
    7. 'adj' → logprob: -3.870828151702881
    8. '#' → logprob: -3.870828151702881
    9. ' voisin' → logprob: -3.870828151702881
    10. ' A' → logprob: -3.995828151702881

Token 271: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.2777654230594635
    2. 'ance' → logprob: -1.7777653932571411
    3. 'ations' → logprob: -3.1527655124664307
    4. 'ation' → logprob: -4.527765274047852
    5. 'es' → logprob: -5.277765274047852
    6. 'a' → logprob: -6.152765274047852
    7. 'at' → logprob: -6.777765274047852
    8. '#' → logprob: -6.902765274047852
    9. 's' → logprob: -7.152765274047852
    10. '-' → logprob: -7.277765274047852

Token 272: ' proche' (ID: 61089)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13678555190563202
    2. ' for' → logprob: -2.1367855072021484
    3. '.' → logprob: -6.011785507202148
    4. 's' → logprob: -6.511785507202148
    5. '#' → logprob: -6.636785507202148
    6. ',' → logprob: -6.761785507202148
    7. ' =' → logprob: -7.136785507202148
    8. 'import' → logprob: -8.011785507202148
    9. '
' → logprob: -8.261785507202148
    10. '=' → logprob: -8.261785507202148

Token 273: ' deviennent' (ID: 165279)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4897894263267517
    2. 'de' → logprob: -1.8647894859313965
    3. ' à' → logprob: -3.4897894859313965
    4. 'd' → logprob: -3.6147894859313965
    5. ' des' → logprob: -3.6147894859313965
    6. '#' → logprob: -4.1147894859313965
    7. ' =' → logprob: -4.1147894859313965
    8. ' du' → logprob: -4.1147894859313965
    9. ' d' → logprob: -4.3647894859313965
    10. 'i' → logprob: -4.4897894859313965

Token 274: ' l' (ID: 305)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.3380013406276703
    2. '1' → logprob: -3.088001251220703
    3. 'import' → logprob: -3.088001251220703
    4. 'max' → logprob: -3.588001251220703
    5. 'pot' → logprob: -3.963001251220703
    6. ' plus' → logprob: -3.963001251220703
    7. 'moins' → logprob: -3.963001251220703
    8. ' meilleures' → logprob: -4.213001251220703
    9. 'poss' → logprob: -4.713001251220703
    10. ' ' → logprob: -5.338001251220703

Token 275: 'isses' (ID: 49126)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4301199913024902
    2. 'a' → logprob: -1.9301199913024902
    3. 'e' → logprob: -2.1801199913024902
    4. 'imité' → logprob: -2.3051199913024902
    5. 'ég' → logprob: -2.5551199913024902
    6. 'ong' → logprob: -3.0551199913024902
    7. 'ocal' → logprob: -4.05511999130249
    8. 'à' → logprob: -4.05511999130249
    9. 'iné' → logprob: -4.05511999130249
    10. 'im' → logprob: -4.05511999130249

Token 276: ' si' (ID: 1784)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005358144640922546
    2. ' for' → logprob: -5.2553582191467285
    3. '
' → logprob: -9.25535774230957
    4. 'i' → logprob: -11.38035774230957
    5. '#' → logprob: -11.75535774230957
    6. '```' → logprob: -12.63035774230957
    7. ')' → logprob: -12.75535774230957
    8. ',' → logprob: -14.75535774230957
    9. '

' → logprob: -14.75535774230957
    10. ' 
' → logprob: -15.13035774230957

Token 277: ' on' (ID: 402)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1037381887435913
    2. 'r' → logprob: -1.6037381887435913
    3. ' l' → logprob: -1.7287381887435913
    4. 'A' → logprob: -2.603738307952881
    5. ' on' → logprob: -3.103738307952881
    6. 'on' → logprob: -3.353738307952881
    7. ' A' → logprob: -3.728738307952881
    8. ' les' → logprob: -3.853738307952881
    9. 'les' → logprob: -3.978738307952881
    10. '```' → logprob: -4.103738307952881

Token 278: ' chois' (ID: 33475)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -1.3297759294509888
    2. 'inverse' → logprob: -1.4547759294509888
    3. ' inverse' → logprob: -2.079775810241699
    4. ' change' → logprob: -2.204775810241699
    5. ' continue' → logprob: -2.829775810241699
    6. 'invert' → logprob: -3.079775810241699
    7. ' mod' → logprob: -3.329775810241699
    8. 'in' → logprob: -3.829775810241699
    9. 'continue' → logprob: -3.954775810241699
    10. ' chois' → logprob: -4.329775810241699

Token 279: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.055556196719408035
    2. 't' → logprob: -2.930556297302246
    3. '#' → logprob: -7.805556297302246
    4. '
' → logprob: -10.305556297302246
    5. 'et' → logprob: -10.430556297302246
    6. '<' → logprob: -11.180556297302246
    7. '[' → logprob: -11.430556297302246
    8. '```' → logprob: -11.430556297302246
    9. 'issait' → logprob: -11.555556297302246
    10. '...' → logprob: -11.680556297302246

Token 280: ' bien' (ID: 5340)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7804864645004272
    2. 'l' → logprob: -1.2804864645004272
    3. 'i' → logprob: -3.030486583709717
    4. 'une' → logprob: -3.405486583709717
    5. 'un' → logprob: -3.530486583709717
    6. 'd' → logprob: -3.530486583709717
    7. ' l' → logprob: -3.780486583709717
    8. ' r' → logprob: -3.905486583709717
    9. ' i' → logprob: -3.905486583709717
    10. ' de' → logprob: -4.655486583709717

Token 281: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043127983808517456
    2. ' for' → logprob: -3.16812801361084
    3. '
' → logprob: -9.41812801361084
    4. ',' → logprob: -11.29312801361084
    5. 's' → logprob: -11.91812801361084
    6. '#' → logprob: -12.04312801361084
    7. 'i' → logprob: -12.29312801361084
    8. ' 
' → logprob: -12.54312801361084
    9. ')' → logprob: -13.04312801361084
    10. '

' → logprob: -13.41812801361084

Token 282: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002505505457520485
    2. ' for' → logprob: -6.002505302429199
    3. '
' → logprob: -10.6275053024292
    4. 'i' → logprob: -12.6275053024292
    5. ' 
' → logprob: -14.2525053024292
    6. 'ans' → logprob: -15.0025053024292
    7. '```' → logprob: -15.0025053024292
    8. '	for' → logprob: -15.5025053024292
    9. '#' → logprob: -15.7525053024292
    10. '  
' → logprob: -16.377506256103516

Token 283: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024829115718603134
    2. ' for' → logprob: -6.002482891082764
    3. 'i' → logprob: -12.252483367919922
    4. '
' → logprob: -13.752483367919922
    5. 'ans' → logprob: -14.502483367919922
    6. ' 
' → logprob: -15.502483367919922
    7. '#' → logprob: -15.877483367919922
    8. '	for' → logprob: -16.002483367919922
    9. 'from' → logprob: -16.502483367919922
    10. 'f' → logprob: -16.752483367919922

Token 284: ' accél' (ID: 152966)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5838139653205872
    2. ' i' → logprob: -0.8338139653205872
    3. 'r' → logprob: -5.2088141441345215
    4. 'l' → logprob: -6.8338141441345215
    5. ' l' → logprob: -7.2088141441345215
    6. ' r' → logprob: -7.5838141441345215
    7. 'd' → logprob: -11.083813667297363
    8. ' length' → logprob: -11.583813667297363
    9. 'length' → logprob: -11.708813667297363
    10. 'L' → logprob: -12.708813667297363

Token 285: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.08798515796661377
    2. 'él' → logprob: -2.962985038757324
    3. 'é' → logprob: -4.212985038757324
    4. 'er' → logprob: -4.212985038757324
    5. 'erer' → logprob: -6.587985038757324
    6. 'éder' → logprob: -7.962985038757324
    7. 'ér' → logprob: -8.087985038757324
    8. 'eler' → logprob: -8.212985038757324
    9. 'ération' → logprob: -8.337985038757324
    10. 'è' → logprob: -8.712985038757324

Token 286: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02001025341451168
    2. 'i' → logprob: -4.020010471343994
    3. '_' → logprob: -6.645010471343994
    4. ' _' → logprob: -8.145009994506836
    5. ' ' → logprob: -8.520009994506836
    6. ' in' → logprob: -11.270009994506836
    7. '_i' → logprob: -11.395009994506836
    8. ' l' → logprob: -11.895009994506836
    9. ')' → logprob: -12.145009994506836
    10. ' ' → logprob: -12.270009994506836

Token 287: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042273249477148056
    2. ' for' → logprob: -3.7922732830047607
    3. 'import' → logprob: -5.042273044586182
    4. '#' → logprob: -5.167273044586182
    5. 'from' → logprob: -5.792273044586182
    6. 'dp' → logprob: -6.417273044586182
    7. 'i' → logprob: -7.917273044586182
    8. '...' → logprob: -8.04227352142334
    9. 'diff' → logprob: -8.04227352142334
    10. 'max' → logprob: -8.41727352142334

Token 288: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23867806792259216
    2. ' for' → logprob: -1.6136780977249146
    3. ' continue' → logprob: -5.738677978515625
    4. 'continue' → logprob: -6.363677978515625
    5. ' peut' → logprob: -6.738677978515625
    6. ' peux' → logprob: -6.738677978515625
    7. '#' → logprob: -6.738677978515625
    8. 's' → logprob: -7.488677978515625
    9. 'vais' → logprob: -7.488677978515625
    10. 'util' → logprob: -7.613677978515625

Token 289: ' tester' (ID: 51819)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.07789935171604156
    2. ' parcour' → logprob: -3.95289945602417
    3. ' utiliser' → logprob: -4.20289945602417
    4. 'contin' → logprob: -4.45289945602417
    5. 'calcul' → logprob: -5.32789945602417
    6. 'import' → logprob: -5.82789945602417
    7. '...' → logprob: -6.07789945602417
    8. 'for' → logprob: -6.07789945602417
    9. 'v' → logprob: -6.32789945602417
    10. 'iter' → logprob: -6.45289945602417

Token 290: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27710646390914917
    2. ' for' → logprob: -1.902106523513794
    3. 'i' → logprob: -2.777106523513794
    4. ' i' → logprob: -3.527106523513794
    5. ' ' → logprob: -8.777106285095215
    6. '...' → logprob: -8.902106285095215
    7. 'import' → logprob: -9.027106285095215
    8. 'l' → logprob: -9.152106285095215
    9. ' l' → logprob: -9.527106285095215
    10. '```' → logprob: -9.652106285095215

Token 291: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13101883232593536
    2. 'i' → logprob: -2.131018877029419
    3. ' r' → logprob: -5.88101863861084
    4. 'r' → logprob: -7.13101863861084
    5. ' l' → logprob: -8.25601863861084
    6. 'l' → logprob: -9.13101863861084
    7. ' ' → logprob: -9.88101863861084
    8. ' chaque' → logprob: -10.75601863861084
    9. 't' → logprob: -12.38101863861084
    10. ' _' → logprob: -12.63101863861084

Token 292: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47412458062171936
    2. ' i' → logprob: -0.974124550819397
    3. ' position' → logprob: -10.474124908447266
    4. 'position' → logprob: -11.224124908447266
    5. ' ' → logprob: -13.474124908447266
    6. 'pos' → logprob: -13.724124908447266
    7. ' ' → logprob: -14.224124908447266
    8. 'index' → logprob: -14.349124908447266
    9. ' index' → logprob: -14.474124908447266
    10. '	i' → logprob: -14.724124908447266

Token 293: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.32815778255462646
    2. ':' → logprob: -2.203157901763916
    3. ' in' → logprob: -2.828157901763916
    4. 'i' → logprob: -3.328157901763916
    5. ' for' → logprob: -3.328157901763916
    6. 'for' → logprob: -3.953157901763916
    7. 'in' → logprob: -4.828157901763916
    8. ' :' → logprob: -5.078157901763916
    9. ',' → logprob: -6.078157901763916
    10. ' ' → logprob: -7.328157901763916

Token 294: ' la' (ID: 557)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021750252693891525
    2. 'for' → logprob: -4.771750450134277
    3. ' for' → logprob: -5.146750450134277
    4. ' :' → logprob: -5.396750450134277
    5. ':
' → logprob: -6.396750450134277
    6. ',' → logprob: -7.646750450134277
    7. 'in' → logprob: -8.896750450134277
    8. ' in' → logprob: -8.896750450134277
    9. ' i' → logprob: -9.771750450134277
    10. ' :
' → logprob: -10.146750450134277

Token 295: ' coup' (ID: 25465)
  Prédit: ' possibilité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibilité' → logprob: -0.7142191529273987
    2. ' for' → logprob: -2.464219093322754
    3. ' range' → logprob: -2.464219093322754
    4. 'for' → logprob: -2.464219093322754
    5. ' suivante' → logprob: -3.339219093322754
    6. '#' → logprob: -3.589219093322754
    7. 's' → logprob: -3.589219093322754
    8. 'r' → logprob: -3.714219093322754
    9. ' même' → logprob: -3.714219093322754
    10. ' possible' → logprob: -3.964219093322754

Token 296: 'ure' (ID: 627)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0034027595538645983
    2. 'ure' → logprob: -6.2534027099609375
    3. 'er' → logprob: -6.8784027099609375
    4. 'é' → logprob: -8.128402709960938
    5. ' e' → logprob: -9.128402709960938
    6. 't' → logprob: -11.503402709960938
    7. 'r' → logprob: -11.878402709960938
    8. 'u' → logprob: -12.378402709960938
    9. 'de' → logprob: -12.628402709960938
    10. '```' → logprob: -12.878402709960938

Token 297: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.41600486636161804
    2. 'for' → logprob: -2.0410048961639404
    3. 'i' → logprob: -2.7910048961639404
    4. ',' → logprob: -3.0410048961639404
    5. ' for' → logprob: -3.5410048961639404
    6. ' between' → logprob: -4.541004657745361
    7. ' =' → logprob: -4.666004657745361
    8. ' de' → logprob: -4.666004657745361
    9. ' entre' → logprob: -4.666004657745361
    10. 'import' → logprob: -5.541004657745361

Token 298: 'in' (ID: 258)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3415699005126953
    2. ' )' → logprob: -1.3415699005126953
    3. ' i' → logprob: -3.9665699005126953
    4. 'i' → logprob: -5.341569900512695
    5. ',' → logprob: -6.591569900512695
    6. ' ' → logprob: -6.841569900512695
    7. ' ,' → logprob: -7.716569900512695
    8. '=' → logprob: -8.591569900512695
    9. ')i' → logprob: -8.716569900512695
    10. ' between' → logprob: -9.591569900512695

Token 299: 'version' (ID: 8924)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.8763680458068848
    2. 'd' → logprob: -1.1263680458068848
    3. 't' → logprob: -1.5013680458068848
    4. ')' → logprob: -3.7513680458068848
    5. ']' → logprob: -5.751368045806885
    6. '```' → logprob: -6.126368045806885
    7. 'i' → logprob: -6.251368045806885
    8. 'de' → logprob: -7.376368045806885
    9. 'ter' → logprob: -7.626368045806885
    10. 'sertion' → logprob: -7.876368045806885

Token 300: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01634238287806511
    2. ' )' → logprob: -4.1413421630859375
    3. ' ' → logprob: -9.766342163085938
    4. ',' → logprob: -9.891342163085938
    5. ' de' → logprob: -10.266342163085938
    6. '[' → logprob: -10.391342163085938
    7. ' i' → logprob: -10.891342163085938
    8. ' ' → logprob: -10.891342163085938
    9. '[i' → logprob: -11.266342163085938
    10. ')i' → logprob: -11.891342163085938

Token 301: ' possible' (ID: 4149)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0784022808074951
    2. 'for' → logprob: -1.5784022808074951
    3. ' for' → logprob: -2.078402280807495
    4. ' in' → logprob: -2.453402280807495
    5. ' i' → logprob: -2.703402280807495
    6. ':' → logprob: -2.703402280807495
    7. ',' → logprob: -3.578402280807495
    8. 'in' → logprob: -4.328402519226074
    9. ' en' → logprob: -4.578402519226074
    10. ' :' → logprob: -4.703402519226074

Token 302: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18025502562522888
    2. ' for' → logprob: -1.8052550554275513
    3. '
' → logprob: -8.055254936218262
    4. ' 
' → logprob: -9.930254936218262
    5. ' =' → logprob: -10.430254936218262
    6. 'i' → logprob: -10.430254936218262
    7. ' ' → logprob: -11.805254936218262
    8. '=' → logprob: -11.930254936218262
    9. ' i' → logprob: -11.930254936218262
    10. ',' → logprob: -12.055254936218262

Token 303: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038063179701566696
    2. ' for' → logprob: -3.2880632877349854
    3. 'i' → logprob: -11.163063049316406
    4. '
' → logprob: -12.288063049316406
    5. ' ans' → logprob: -13.788063049316406
    6. ' i' → logprob: -14.038063049316406
    7. 'ans' → logprob: -14.913063049316406
    8. ' 
' → logprob: -15.788063049316406
    9. '```' → logprob: -15.788063049316406
    10. '	for' → logprob: -16.538063049316406

Token 304: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011058438569307327
    2. ' for' → logprob: -4.511058330535889
    3. 'i' → logprob: -11.761058807373047
    4. '
' → logprob: -13.386058807373047
    5. ' i' → logprob: -14.761058807373047
    6. 'ans' → logprob: -14.886058807373047
    7. ' 
' → logprob: -15.886058807373047
    8. ' ans' → logprob: -16.011058807373047
    9. '```' → logprob: -16.386058807373047
    10. '	for' → logprob: -16.886058807373047

Token 305: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6375963687896729
    2. ' for' → logprob: -0.7625963687896729
    3. ' =' → logprob: -6.387596130371094
    4. '=' → logprob: -6.887596130371094
    5. ' continue' → logprob: -7.012596130371094
    6. ' i' → logprob: -7.637596130371094
    7. ' ' → logprob: -9.137596130371094
    8. '#' → logprob: -9.387596130371094
    9. ' #' → logprob: -9.512596130371094
    10. ' a' → logprob: -9.887596130371094

Token 306: ' essayer' (ID: 92713)
  Prédit: ' essayer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' essayer' → logprob: -1.2821112871170044
    2. 'for' → logprob: -1.4071112871170044
    3. ' for' → logprob: -1.5321112871170044
    4. 'i' → logprob: -3.157111167907715
    5. ' continuer' → logprob: -3.657111167907715
    6. ' ' → logprob: -4.157111167907715
    7. 'contin' → logprob: -4.157111167907715
    8. ' i' → logprob: -4.282111167907715
    9. ' invers' → logprob: -4.532111167907715
    10. 'mettre' → logprob: -4.657111167907715

Token 307: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6073803305625916
    2. 'i' → logprob: -1.3573803901672363
    3. 'for' → logprob: -1.9823803901672363
    4. ' for' → logprob: -2.9823803901672363
    5. 'left' → logprob: -5.482380390167236
    6. '   ' → logprob: -6.482380390167236
    7. ' left' → logprob: -7.482380390167236
    8. ' ' → logprob: -7.857380390167236
    9. ' to' → logprob: -7.857380390167236
    10. '    ' → logprob: -8.232379913330078

Token 308: ''in' (ID: 17942)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3072035312652588
    2. 'range' → logprob: -1.3072035312652588
    3. ' range' → logprob: -1.5572035312652588
    4. ' i' → logprob: -1.5572035312652588
    5. 'for' → logprob: -4.05720329284668
    6. 'f' → logprob: -5.05720329284668
    7. ' for' → logprob: -6.43220329284668
    8. 'x' → logprob: -6.68220329284668
    9. ')' → logprob: -6.80720329284668
    10. 'e' → logprob: -6.80720329284668

Token 309: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.45958495140075684
    2. 'vert' → logprob: -1.7095849514007568
    3. 'dex' → logprob: -2.084584951400757
    4. 'ter' → logprob: -4.334585189819336
    5. 'verter' → logprob: -4.459585189819336
    6. 'ver' → logprob: -5.084585189819336
    7. 'sert' → logprob: -5.209585189819336
    8. 't' → logprob: -5.584585189819336
    9. 'verse' → logprob: -5.584585189819336
    10. 'v' → logprob: -6.084585189819336

Token 310: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00012987985974177718
    2. 'e' → logprob: -9.125129699707031
    3. 'ter' → logprob: -11.750129699707031
    4. 'i' → logprob: -12.750129699707031
    5. 'ert' → logprob: -13.625129699707031
    6. ' i' → logprob: -13.750129699707031
    7. '
' → logprob: -13.750129699707031
    8. 'ion' → logprob: -13.875129699707031
    9. 'ir' → logprob: -14.000129699707031
    10. 'ser' → logprob: -14.250129699707031

Token 311: ' un' (ID: 537)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5940684676170349
    2. 'i' → logprob: -1.9690685272216797
    3. 'A' → logprob: -2.5940685272216797
    4. '[i' → logprob: -2.7190685272216797
    5. ' A' → logprob: -3.5940685272216797
    6. ' ' → logprob: -3.5940685272216797
    7. '[' → logprob: -3.9690685272216797
    8. ' la' → logprob: -4.46906852722168
    9. ' à' → logprob: -4.59406852722168
    10. '1' → logprob: -4.59406852722168

Token 312: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.1017072200775146
    2. ' seul' → logprob: -1.7267072200775146
    3. 'élé' → logprob: -1.8517072200775146
    4. ' segment' → logprob: -2.1017072200775146
    5. 'i' → logprob: -3.2267072200775146
    6. 'se' → logprob: -3.6017072200775146
    7. ' i' → logprob: -3.8517072200775146
    8. 'interval' → logprob: -3.9767072200775146
    9. ' unique' → logprob: -4.226707458496094
    10. ' élément' → logprob: -4.351707458496094

Token 313: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.590856671333313
    2. 'i' → logprob: -1.715856671333313
    3. '[' → logprob: -2.8408565521240234
    4. ' of' → logprob: -2.9658565521240234
    5. ' de' → logprob: -3.5908565521240234
    6. ' i' → logprob: -3.7158565521240234
    7. 'from' → logprob: -3.7158565521240234
    8. 'de' → logprob: -3.9658565521240234
    9. 'd' → logprob: -4.340856552124023
    10. '=' → logprob: -5.215856552124023

Token 314: ' longueur' (ID: 104613)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9378671050071716
    2. 'long' → logprob: -1.6878671646118164
    3. 'length' → logprob: -1.6878671646118164
    4. 'tail' → logprob: -2.1878671646118164
    5. ' longueur' → logprob: -2.5628671646118164
    6. ' taille' → logprob: -4.187867164611816
    7. ' length' → logprob: -4.812867164611816
    8. 'une' → logprob: -5.687867164611816
    9. 'A' → logprob: -5.687867164611816
    10. 'l' → logprob: -5.812867164611816

Token 315: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3138003349304199
    2. '2' → logprob: -1.43880033493042
    3. ' ' → logprob: -3.43880033493042
    4. '3' → logprob: -11.188800811767578
    5. '
' → logprob: -13.438800811767578
    6. '   ' → logprob: -13.563800811767578
    7. '```' → logprob: -14.188800811767578
    8. '0' → logprob: -14.813800811767578
    9. '  ' → logprob: -15.188800811767578
    10. '=' → logprob: -15.438800811767578

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31468191742897034
    2. '2' → logprob: -1.314681887626648
    3. ' ' → logprob: -6.5646820068359375
    4. '3' → logprob: -12.189682006835938
    5. '0' → logprob: -13.189682006835938
    6. 'k' → logprob: -14.439682006835938
    7. 'i' → logprob: -14.564682006835938
    8. '
' → logprob: -14.814682006835938
    9. '```' → logprob: -14.814682006835938
    10. '   ' → logprob: -14.939682006835938

Token 317: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30873003602027893
    2. ' for' → logprob: -1.5587300062179565
    3. ' ' → logprob: -3.808730125427246
    4. '
' → logprob: -3.808730125427246
    5. ' 
' → logprob: -4.808730125427246
    6. '  
' → logprob: -7.683730125427246
    7. ' i' → logprob: -7.933730125427246
    8. '#' → logprob: -8.058730125427246
    9. ',' → logprob: -8.058730125427246
    10. 'i' → logprob: -8.683730125427246

Token 318: 'un' (ID: 373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05837969481945038
    2. ' )' → logprob: -2.933379650115967
    3. '1' → logprob: -6.308379650115967
    4. ' ' → logprob: -6.683379650115967
    5. ')
' → logprob: -9.058380126953125
    6. 'for' → logprob: -10.058380126953125
    7. ')i' → logprob: -10.183380126953125
    8. ')#' → logprob: -10.433380126953125
    9. ' )
' → logprob: -11.058380126953125
    10. ' i' → logprob: -11.058380126953125

Token 319: ' seul' (ID: 33041)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49145814776420593
    2. ' seul' → logprob: -1.2414581775665283
    3. ' élément' → logprob: -3.3664581775665283
    4. 'élé' → logprob: -4.366457939147949
    5. ' )' → logprob: -4.991457939147949
    6. 'e' → logprob: -5.241457939147949
    7. ' token' → logprob: -5.241457939147949
    8. ' caractère' → logprob: -5.366457939147949
    9. ']' → logprob: -5.491457939147949
    10. 'i' → logprob: -5.491457939147949

Token 320: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.63276606798172
    2. ')' → logprob: -1.2577660083770752
    3. 'élé' → logprob: -1.7577660083770752
    4. 'element' → logprob: -5.257766246795654
    5. 'token' → logprob: -6.132766246795654
    6. ' caractère' → logprob: -6.507766246795654
    7. ' token' → logprob: -7.007766246795654
    8. ' )' → logprob: -7.257766246795654
    9. ' element' → logprob: -7.257766246795654
    10. 'i' → logprob: -9.007765769958496

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038042064756155014
    2. ' )' → logprob: -3.6630420684814453
    3. '),' → logprob: -4.913042068481445
    4. ',' → logprob: -6.038042068481445
    5. ' ou' → logprob: -7.038042068481445
    6. ')
' → logprob: -8.038042068481445
    7. ' à' → logprob: -8.288042068481445
    8. ' ),' → logprob: -8.913042068481445
    9. ' ' → logprob: -9.663042068481445
    10. ' ' → logprob: -10.038042068481445

Token 322: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0892043337225914
    2. ' for' → logprob: -2.4642043113708496
    3. '
' → logprob: -9.089204788208008
    4. ',' → logprob: -10.089204788208008
    5. ' 
' → logprob: -10.339204788208008
    6. ' ans' → logprob: -11.214204788208008
    7. '#' → logprob: -11.214204788208008
    8. '.' → logprob: -11.839204788208008
    9. ',
' → logprob: -11.839204788208008
    10. 'i' → logprob: -11.964204788208008

Token 323: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01214521937072277
    2. ' for' → logprob: -4.512145042419434
    3. '
' → logprob: -7.012145042419434
    4. 'ans' → logprob: -8.762145042419434
    5. ' ans' → logprob: -11.637145042419434
    6. 'i' → logprob: -12.387145042419434
    7. '

' → logprob: -12.387145042419434
    8. '#' → logprob: -12.512145042419434
    9. ' 
' → logprob: -12.512145042419434
    10. '\n' → logprob: -12.637145042419434

Token 324: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.397126168012619
    2. ' for' → logprob: -1.3971261978149414
    3. ' continue' → logprob: -3.5221261978149414
    4. '#' → logprob: -4.522126197814941
    5. ' =' → logprob: -4.522126197814941
    6. '=' → logprob: -4.897126197814941
    7. '.' → logprob: -5.522126197814941
    8. ' #' → logprob: -5.772126197814941
    9. ' peut' → logprob: -5.897126197814941
    10. ')' → logprob: -6.022126197814941

Token 325: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.16612443327903748
    2. 'ours' → logprob: -2.4161243438720703
    3. 'our' → logprob: -3.1661243438720703
    4. 'oure' → logprob: -3.9161243438720703
    5. 'orre' → logprob: -7.54112434387207
    6. 'orrer' → logprob: -7.79112434387207
    7. '```' → logprob: -8.79112434387207
    8. '_' → logprob: -9.04112434387207
    9. 'u' → logprob: -9.16612434387207
    10. '\' → logprob: -10.04112434387207

Token 326: ' et' (ID: 859)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3119545578956604
    2. 'i' → logprob: -1.5619544982910156
    3. ' range' → logprob: -3.5619544982910156
    4. ' i' → logprob: -4.561954498291016
    5. '(' → logprob: -5.561954498291016
    6. '(i' → logprob: -5.686954498291016
    7. '(range' → logprob: -5.686954498291016
    8. '_' → logprob: -6.061954498291016
    9. 'for' → logprob: -6.561954498291016
    10. '(N' → logprob: -6.561954498291016

Token 327: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6811405420303345
    2. 'for' → logprob: -1.1811405420303345
    3. ' i' → logprob: -2.681140422821045
    4. ' range' → logprob: -3.431140422821045
    5. 'range' → logprob: -3.556140422821045
    6. 'i' → logprob: -3.681140422821045
    7. ' ' → logprob: -3.806140422821045
    8. ':' → logprob: -6.056140422821045
    9. ',' → logprob: -6.806140422821045
    10. ' continue' → logprob: -6.931140422821045

Token 328: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25176292657852173
    2. ' for' → logprob: -1.876762866973877
    3. ' continue' → logprob: -3.126762866973877
    4. 'continue' → logprob: -4.126762866973877
    5. 'range' → logprob: -5.251762866973877
    6. ' range' → logprob: -5.751762866973877
    7. '#' → logprob: -8.251763343811035
    8. 'contin' → logprob: -8.626763343811035
    9. ' continues' → logprob: -9.251763343811035
    10. ':' → logprob: -10.376763343811035

Token 329: 'ifie' (ID: 46409)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.03547133877873421
    2. 'ifie' → logprob: -4.660471439361572
    3. 'it' → logprob: -4.910471439361572
    4. 'ote' → logprob: -5.285471439361572
    5. 'rite' → logprob: -5.660471439361572
    6. 'ort' → logprob: -5.910471439361572
    7. 'ritte' → logprob: -7.160471439361572
    8. 'iste' → logprob: -7.285471439361572
    9. 'irte' → logprob: -7.410471439361572
    10. 'itte' → logprob: -7.535471439361572

Token 330: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012374484911561012
    2. ' for' → logprob: -4.512374401092529
    3. '
' → logprob: -6.637374401092529
    4. 's' → logprob: -12.762374877929688
    5. 'i' → logprob: -12.762374877929688
    6. 'ans' → logprob: -13.012374877929688
    7. '```' → logprob: -13.387374877929688
    8. '

' → logprob: -13.637374877929688
    9. 'range' → logprob: -14.387374877929688
    10. ' 
' → logprob: -14.762374877929688

Token 331: ' nouvelle' (ID: 24562)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5029350519180298
    2. ' i' → logprob: -2.3779349327087402
    3. ' range' → logprob: -2.3779349327087402
    4. 'for' → logprob: -2.5029349327087402
    5. 'range' → logprob: -2.8779349327087402
    6. ' for' → logprob: -3.5029349327087402
    7. 'max' → logprob: -4.75293493270874
    8. 'poss' → logprob: -5.37793493270874
    9. 'if' → logprob: -5.87793493270874
    10. ' max' → logprob: -6.00293493270874

Token 332: ' longueur' (ID: 104613)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7876936197280884
    2. 'for' → logprob: -1.6626936197280884
    3. ' ans' → logprob: -1.9126936197280884
    4. ' for' → logprob: -2.162693500518799
    5. 'val' → logprob: -3.287693500518799
    6. '_ans' → logprob: -3.662693500518799
    7. ' longueur' → logprob: -4.662693500518799
    8. ' valeur' → logprob: -5.287693500518799
    9. 'long' → logprob: -6.162693500518799
    10. '#' → logprob: -6.287693500518799

Token 333: ' possible' (ID: 4149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003999446053057909
    2. ' for' → logprob: -5.87899923324585
    3. '
' → logprob: -6.75399923324585
    4. 'ans' → logprob: -10.753999710083008
    5. '```' → logprob: -14.253999710083008
    6. 'i' → logprob: -14.378999710083008
    7. 's' → logprob: -14.503999710083008
    8. '1' → logprob: -14.753999710083008
    9. ' 
' → logprob: -14.753999710083008
    10. '

' → logprob: -14.753999710083008

Token 334: ' sans' (ID: 9828)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00037621514638885856
    2. ' for' → logprob: -8.375375747680664
    3. '
' → logprob: -8.875375747680664
    4. 'ans' → logprob: -12.250375747680664
    5. 'i' → logprob: -15.250375747680664
    6. '```' → logprob: -15.250375747680664
    7. '#' → logprob: -16.250375747680664
    8. '

' → logprob: -16.500375747680664
    9. '1' → logprob: -16.875375747680664
    10. '``' → logprob: -17.250375747680664

Token 335: ' reconstru' (ID: 108053)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3185807466506958
    2. '#' → logprob: -2.0685806274414062
    3. 'changer' → logprob: -2.5685806274414062
    4. 'br' → logprob: -2.6935806274414062
    5. 'space' → logprob: -3.0685806274414062
    6. 'newline' → logprob: -3.3185806274414062
    7. 'modifier' → logprob: -3.5685806274414062
    8. 'import' → logprob: -3.6935806274414062
    9. '```' → logprob: -3.6935806274414062
    10. 'break' → logprob: -3.9435806274414062

Token 336: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.5251926779747009
    2. 'ction' → logprob: -1.1501927375793457
    3. 'ct' → logprob: -2.6501927375793457
    4. 'ir' → logprob: -4.150192737579346
    5. 'ite' → logprob: -7.025192737579346
    6. 't' → logprob: -7.150192737579346
    7. 'int' → logprob: -7.400192737579346
    8. 'it' → logprob: -7.525192737579346
    9. 'i' → logprob: -7.775192737579346
    10. 'cter' → logprob: -7.775192737579346

Token 337: ' tout' (ID: 5501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5235768556594849
    2. ' for' → logprob: -0.8985768556594849
    3. ' ' → logprob: -8.898576736450195
    4. '
' → logprob: -9.023576736450195
    5. ' 
' → logprob: -9.023576736450195
    6. ' ans' → logprob: -11.273576736450195
    7. ',' → logprob: -11.398576736450195
    8. ' =' → logprob: -11.898576736450195
    9. ' ' → logprob: -11.898576736450195
    10. ')' → logprob: -12.148576736450195

Token 338: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013945228420197964
    2. ' for' → logprob: -6.626394748687744
    3. '
' → logprob: -9.751394271850586
    4. 'ans' → logprob: -12.501394271850586
    5. 'i' → logprob: -13.251394271850586
    6. 's' → logprob: -13.751394271850586
    7. '```' → logprob: -13.876394271850586
    8. '#' → logprob: -14.751394271850586
    9. 'max' → logprob: -15.251394271850586
    10. ')
' → logprob: -15.501394271850586

Token 339: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004098346922546625
    2. ' for' → logprob: -5.504098415374756
    3. '
' → logprob: -10.879097938537598
    4. ' 
' → logprob: -14.754097938537598
    5. 'ans' → logprob: -15.129097938537598
    6. '```' → logprob: -15.629097938537598
    7. 'i' → logprob: -16.254098892211914
    8. ' ans' → logprob: -16.504098892211914
    9. '\n' → logprob: -16.504098892211914
    10. '\' → logprob: -17.504098892211914

Token 340: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000553151941858232
    2. ' for' → logprob: -7.500553131103516
    3. 'i' → logprob: -16.250553131103516
    4. 'ans' → logprob: -17.125553131103516
    5. '
' → logprob: -17.750553131103516
    6. '```' → logprob: -18.125553131103516
    7. '	for' → logprob: -18.625553131103516
    8. ' 
' → logprob: -19.875553131103516
    9. ' ans' → logprob: -20.375553131103516
    10. '#' → logprob: -20.500553131103516

Token 341: ' cela' (ID: 17542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759410858154297
    2. ' i' → logprob: -0.8259410858154297
    3. ' ' → logprob: -13.82594108581543
    4. '	i' → logprob: -14.57594108581543
    5. ' ' → logprob: -15.82594108581543
    6. '```' → logprob: -17.95094108581543
    7. 'I' → logprob: -18.07594108581543
    8. '_i' → logprob: -18.95094108581543
    9. '

' → logprob: -19.32594108581543
    10. 'int' → logprob: -19.95094108581543

Token 342: ' on' (ID: 402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14844906330108643
    2. ' in' → logprob: -2.273448944091797
    3. ',' → logprob: -3.773448944091797
    4. ' for' → logprob: -4.898448944091797
    5. 'i' → logprob: -6.273448944091797
    6. 'for' → logprob: -6.523448944091797
    7. 'in' → logprob: -7.398448944091797
    8. ':' → logprob: -8.398448944091797
    9. ' ,' → logprob: -8.648448944091797
    10. ' :' → logprob: -9.398448944091797

Token 343: ' essay' (ID: 9635)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.788434624671936
    2. 'for' → logprob: -1.288434624671936
    3. 'continue' → logprob: -1.538434624671936
    4. ' for' → logprob: -3.0384345054626465
    5. ' vais' → logprob: -6.1634345054626465
    6. 'contin' → logprob: -6.6634345054626465
    7. 'range' → logprob: -7.1634345054626465
    8. ' range' → logprob: -8.163434982299805
    9. '#' → logprob: -8.288434982299805
    10. ' continues' → logprob: -8.413434982299805

Token 344: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05883398279547691
    2. 've' → logprob: -3.0588340759277344
    3. 'te' → logprob: -5.308834075927734
    4. 'ue' → logprob: -5.808834075927734
    5. 't' → logprob: -6.808834075927734
    6. 're' → logprob: -7.933834075927734
    7. '#' → logprob: -8.808834075927734
    8. 'de' → logprob: -9.058834075927734
    9. 'ne' → logprob: -9.308834075927734
    10. 'eve' → logprob: -9.808834075927734

Token 345: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2058139443397522
    2. 'for' → logprob: -2.5808138847351074
    3. ' de' → logprob: -2.8308138847351074
    4. '   ' → logprob: -4.080813884735107
    5. ' d' → logprob: -4.580813884735107
    6. ' for' → logprob: -4.955813884735107
    7. 'd' → logprob: -5.455813884735107
    8. ' :' → logprob: -5.955813884735107
    9. 'de' → logprob: -6.205813884735107
    10. ' i' → logprob: -6.580813884735107

Token 346: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07889044284820557
    2. 'i' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.078890800476074
    4. '	i' → logprob: -15.703890800476074
    5. ' ' → logprob: -15.953890800476074
    6. '_i' → logprob: -17.828889846801758
    7. '_' → logprob: -18.078889846801758
    8. '```' → logprob: -18.328889846801758
    9. ' _' → logprob: -18.578889846801758
    10. ' ' → logprob: -19.953889846801758

Token 347: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931482553482056
    2. ' i' → logprob: -0.6931482553482056
    3. '	i' → logprob: -14.568148612976074
    4. ' ' → logprob: -15.193148612976074
    5. '_i' → logprob: -15.818148612976074
    6. ' ' → logprob: -15.818148612976074
    7. '_' → logprob: -16.818147659301758
    8. ' _' → logprob: -18.318147659301758
    9. ',' → logprob: -18.443147659301758
    10. '```' → logprob: -18.443147659301758

Token 348: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.057118359953165054
    2. ' in' → logprob: -3.4321184158325195
    3. 'i' → logprob: -3.8071184158325195
    4. 'in' → logprob: -7.4321184158325195
    5. ':' → logprob: -8.43211841583252
    6. ',' → logprob: -9.05711841583252
    7. ',i' → logprob: -10.93211841583252
    8. ' :' → logprob: -11.43211841583252
    9. ' ' → logprob: -12.18211841583252
    10. '[i' → logprob: -12.55711841583252

Token 349: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0055899410508573055
    2. ':
' → logprob: -5.255589962005615
    3. ' :' → logprob: -8.630589485168457
    4. ' in' → logprob: -9.380589485168457
    5. 'in' → logprob: -10.130589485168457
    6. ',' → logprob: -10.380589485168457
    7. ' :
' → logprob: -11.880589485168457
    8. '   ' → logprob: -12.380589485168457
    9. 'for' → logprob: -12.630589485168457
    10. ' for' → logprob: -13.255589485168457

Token 350: ' soit' (ID: 17293)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.4649778604507446
    2. ' if' → logprob: -1.5899778604507446
    3. ' for' → logprob: -1.7149778604507446
    4. 'for' → logprob: -2.214977741241455
    5. '   ' → logprob: -2.339977741241455
    6. 'if' → logprob: -3.089977741241455
    7. ' left' → logprob: -3.339977741241455
    8. 'ans' → logprob: -4.214977741241455
    9. ':' → logprob: -4.339977741241455
    10. ' i' → logprob: -4.339977741241455

Token 351: ' invers' (ID: 38721)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7420608401298523
    2. 'i' → logprob: -1.492060899734497
    3. 'en' → logprob: -2.867060899734497
    4. 'left' → logprob: -2.992060899734497
    5. 'g' → logprob: -3.242060899734497
    6. 'd' → logprob: -3.242060899734497
    7. 'in' → logprob: -3.742060899734497
    8. 'on' → logprob: -3.992060899734497
    9. 'sans' → logprob: -4.367060661315918
    10. 'changer' → logprob: -4.867060661315918

Token 352: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0006048606592230499
    2. 'e' → logprob: -7.750604629516602
    3. '   ' → logprob: -10.250604629516602
    4. 'ion' → logprob: -11.000604629516602
    5. 'ant' → logprob: -11.125604629516602
    6. 'ert' → logprob: -11.625604629516602
    7. 'i' → logprob: -11.625604629516602
    8. ' er' → logprob: -11.750604629516602
    9. 'ing' → logprob: -11.750604629516602
    10. 'é' → logprob: -11.938104629516602

Token 353: ' uniquement' (ID: 65527)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0556749105453491
    2. ' A' → logprob: -1.3056749105453491
    3. ' i' → logprob: -2.1806750297546387
    4. ' un' → logprob: -2.3056750297546387
    5. 'i' → logprob: -3.3056750297546387
    6. '[i' → logprob: -3.5556750297546387
    7. ' ' → logprob: -3.9306750297546387
    8. ' l' → logprob: -4.180675029754639
    9. 'un' → logprob: -4.180675029754639
    10. '(i' → logprob: -4.555675029754639

Token 354: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1440298855304718
    2. ' A' → logprob: -2.1440298557281494
    3. 'i' → logprob: -4.8940300941467285
    4. ' i' → logprob: -5.3940300941467285
    5. 'l' → logprob: -5.8940300941467285
    6. ' l' → logprob: -7.1440300941467285
    7. '[i' → logprob: -7.2690300941467285
    8. ' ' → logprob: -8.26902961730957
    9. 'le' → logprob: -8.76902961730957
    10. ' le' → logprob: -9.14402961730957

Token 355: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007681865710765123
    2. '[' → logprob: -4.882681846618652
    3. ' [' → logprob: -9.632681846618652
    4. 'i' → logprob: -11.882681846618652
    5. ' i' → logprob: -13.382681846618652
    6. '[
' → logprob: -14.507681846618652
    7. ' ' → logprob: -14.882681846618652
    8. '[I' → logprob: -15.757681846618652
    9. '```' → logprob: -15.882681846618652
    10. '   ' → logprob: -16.50768280029297

Token 356: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31494036316871643
    2. '],' → logprob: -1.314940333366394
    3. '[i' → logprob: -6.439940452575684
    4. '])' → logprob: -10.439940452575684
    5. ' ]' → logprob: -11.439940452575684
    6. '],
' → logprob: -11.689940452575684
    7. ' ],' → logprob: -11.814940452575684
    8. ']
' → logprob: -12.314940452575684
    9. ']),' → logprob: -12.314940452575684
    10. 'i' → logprob: -12.689940452575684

Token 357: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3597534894943237
    2. ':' → logprob: -1.4847534894943237
    3. 'for' → logprob: -1.8597534894943237
    4. ' ' → logprob: -2.1097536087036133
    5. '   ' → logprob: -2.2347536087036133
    6. ' for' → logprob: -3.3597536087036133
    7. ')' → logprob: -3.7347536087036133
    8. ':
' → logprob: -4.484753608703613
    9. ' ans' → logprob: -4.484753608703613
    10. ' =' → logprob: -4.609753608703613

Token 358: ' Et' (ID: 10007)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7006404995918274
    2. 'for' → logprob: -0.7006404995918274
    3. ' ' → logprob: -5.950640678405762
    4. ' ans' → logprob: -5.950640678405762
    5. ' 
' → logprob: -6.950640678405762
    6. '
' → logprob: -7.325640678405762
    7. ' i' → logprob: -8.825640678405762
    8. '   ' → logprob: -9.325640678405762
    9. ' =' → logprob: -9.575640678405762
    10. ',' → logprob: -9.575640678405762

Token 359: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.476772665977478
    2. '#' → logprob: -2.2267727851867676
    3. 'pour' → logprob: -2.6017727851867676
    4. ' for' → logprob: -3.2267727851867676
    5. 'ans' → logprob: -3.9767727851867676
    6. 'i' → logprob: -3.9767727851867676
    7. ' pour' → logprob: -4.601772785186768
    8. ' essayer' → logprob: -4.851772785186768
    9. 'max' → logprob: -4.976772785186768
    10. ' i' → logprob: -4.976772785186768

Token 360: ' calc' (ID: 25691)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6380062103271484
    2. 'continue' → logprob: -1.5130062103271484
    3. ' continue' → logprob: -2.5130062103271484
    4. '#' → logprob: -3.0130062103271484
    5. ' for' → logprob: -3.5130062103271484
    6. 'try' → logprob: -3.8880062103271484
    7. ' essa' → logprob: -4.638006210327148
    8. ' tente' → logprob: -4.763006210327148
    9. 'contin' → logprob: -5.013006210327148
    10. 'v' → logprob: -5.638006210327148

Token 361: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0011847536079585552
    2. 'ul' → logprob: -7.751184940338135
    3. 'uler' → logprob: -8.001184463500977
    4. 'ulate' → logprob: -8.626184463500977
    5. 'cule' → logprob: -9.251184463500977
    6. '#' → logprob: -10.376184463500977
    7. 'ulte' → logprob: -11.126184463500977
    8. 'ulé' → logprob: -11.501184463500977
    9. '```' → logprob: -11.501184463500977
    10. 'ure' → logprob: -11.751184463500977

Token 362: ' la' (ID: 557)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.317993402481079
    2. 'temp' → logprob: -1.567993402481079
    3. 'left' → logprob: -2.192993402481079
    4. 'max' → logprob: -2.442993402481079
    5. 'for' → logprob: -2.692993402481079
    6. 'possible' → logprob: -2.942993402481079
    7. 'new' → logprob: -3.067993402481079
    8. ' la' → logprob: -3.567993402481079
    9. 'ans' → logprob: -3.942993402481079
    10. 'l' → logprob: -3.942993402481079

Token 363: ' longueur' (ID: 104613)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2595413327217102
    2. 'ans' → logprob: -2.3845412731170654
    3. 'possible' → logprob: -2.7595412731170654
    4. ' max' → logprob: -3.2595412731170654
    5. 'new' → logprob: -4.3845415115356445
    6. ' new' → logprob: -5.0095415115356445
    7. ' possible' → logprob: -5.5095415115356445
    8. ' ans' → logprob: -6.0095415115356445
    9. 'nou' → logprob: -6.3845415115356445
    10. 'left' → logprob: -6.3845415115356445

Token 364: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5410601496696472
    2. 'possible' → logprob: -2.041060209274292
    3. ' possible' → logprob: -2.166060209274292
    4. '=' → logprob: -2.416060209274292
    5. '_possible' → logprob: -3.416060209274292
    6. 'max' → logprob: -3.791060209274292
    7. '   ' → logprob: -5.541059970855713
    8. ' max' → logprob: -6.041059970855713
    9. '_new' → logprob: -6.041059970855713
    10. 'new' → logprob: -6.166059970855713

Token 365: ' la' (ID: 557)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9842013716697693
    2. 'l' → logprob: -1.234201431274414
    3. 'max' → logprob: -2.109201431274414
    4. 'la' → logprob: -2.359201431274414
    5. ' la' → logprob: -3.734201431274414
    6. ' l' → logprob: -3.984201431274414
    7. 'altern' → logprob: -3.984201431274414
    8. ' left' → logprob: -4.109201431274414
    9. '1' → logprob: -4.359201431274414
    10. ' max' → logprob: -5.484201431274414

Token 366: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16509002447128296
    2. 'left' → logprob: -3.5400900840759277
    3. 'altern' → logprob: -3.5400900840759277
    4. '1' → logprob: -3.6650900840759277
    5. 'ans' → logprob: -3.6650900840759277
    6. 'possible' → logprob: -4.165090084075928
    7. ' max' → logprob: -4.290090084075928
    8. 'new' → logprob: -5.665090084075928
    9. 'alt' → logprob: -5.915090084075928
    10. 'i' → logprob: -6.040090084075928

Token 367: ' grande' (ID: 10094)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.2915777862071991
    2. ' longue' → logprob: -1.7915778160095215
    3. ' long' → logprob: -3.2915778160095215
    4. 'gr' → logprob: -3.7915778160095215
    5. '```' → logprob: -4.5415778160095215
    6. ' grande' → logprob: -4.9165778160095215
    7. 'grand' → logprob: -5.5415778160095215
    8. 'max' → logprob: -7.1665778160095215
    9. 'large' → logprob: -7.1665778160095215
    10. '1' → logprob: -7.5415778160095215

Token 368: ' altern' (ID: 7310)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.07692868262529373
    2. 'alt' → logprob: -4.201928615570068
    3. ' altern' → logprob: -4.326928615570068
    4. ' sequence' → logprob: -4.576928615570068
    5. 'sequence' → logprob: -4.826928615570068
    6. ' alternating' → logprob: -5.576928615570068
    7. 'possible' → logprob: -5.701928615570068
    8. '_al' → logprob: -5.951928615570068
    9. 'left' → logprob: -6.076928615570068
    10. ' possible' → logprob: -6.201928615570068

Token 369: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.15898069739341736
    2. 'ante' → logprob: -2.53398060798645
    3. 'ée' → logprob: -3.28398060798645
    4. 'ation' → logprob: -4.158980846405029
    5. 'ating' → logprob: -4.533980846405029
    6. 'ated' → logprob: -6.658980846405029
    7. 'ant' → logprob: -7.158980846405029
    8. 'ee' → logprob: -7.908980846405029
    9. '#' → logprob: -8.283980369567871
    10. '[' → logprob: -8.658980369567871

Token 370: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019838115200400352
    2. ' for' → logprob: -4.019838333129883
    3. ' =' → logprob: -7.269838333129883
    4. '=' → logprob: -7.769838333129883
    5. 'max' → logprob: -8.519838333129883
    6. 'ans' → logprob: -9.519838333129883
    7. '
' → logprob: -9.769838333129883
    8. 's' → logprob: -9.769838333129883
    9. 'import' → logprob: -10.144838333129883
    10. ',' → logprob: -10.769838333129883

Token 371: ' passe' (ID: 22210)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.7603025436401367
    2. ' passe' → logprob: -1.5103025436401367
    3. 'incl' → logprob: -2.1353025436401367
    4. ' peut' → logprob: -3.0103025436401367
    5. 'p' → logprob: -3.3853025436401367
    6. 'pass' → logprob: -3.6353025436401367
    7. 's' → logprob: -4.010302543640137
    8. ' pourrait' → logprob: -4.635302543640137
    9. '```' → logprob: -4.885302543640137
    10. 'include' → logprob: -5.010302543640137

Token 372: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.07718705385923386
    2. ' par' → logprob: -2.7021870613098145
    3. 'through' → logprob: -5.2021870613098145
    4. 'à' → logprob: -7.7021870613098145
    5. 'au' → logprob: -7.9521870613098145
    6. ' ' → logprob: -8.327186584472656
    7. ' through' → logprob: -8.952186584472656
    8. '[i' → logprob: -9.452186584472656
    9. '_par' → logprob: -9.452186584472656
    10. '_' → logprob: -9.577186584472656

Token 373: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3869055509567261
    2. ' i' → logprob: -1.136905550956726
    3. ' A' → logprob: -11.136905670166016
    4. ' ' → logprob: -12.011905670166016
    5. 'A' → logprob: -12.011905670166016
    6. '[i' → logprob: -12.761905670166016
    7. ' ' → logprob: -13.011905670166016
    8. '```' → logprob: -13.886905670166016
    9. '	i' → logprob: -14.011905670166016
    10. '`' → logprob: -15.261905670166016

Token 374: ' après' (ID: 16460)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003680240362882614
    2. ' for' → logprob: -5.628680229187012
    3. '
' → logprob: -9.878680229187012
    4. 'ans' → logprob: -10.878680229187012
    5. ' =' → logprob: -13.753680229187012
    6. 'i' → logprob: -13.878680229187012
    7. 's' → logprob: -14.128680229187012
    8. '=' → logprob: -14.128680229187012
    9. '```' → logprob: -14.128680229187012
    10. 'max' → logprob: -14.253680229187012

Token 375: ' inversion' (ID: 70924)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.030776839703321457
    2. ' inversion' → logprob: -4.4057769775390625
    3. 'l' → logprob: -5.4057769775390625
    4. ' l' → logprob: -5.6557769775390625
    5. 'mod' → logprob: -6.2807769775390625
    6. ' la' → logprob: -6.4057769775390625
    7. '   ' → logprob: -7.1557769775390625
    8. 'la' → logprob: -7.1557769775390625
    9. 'inv' → logprob: -7.2807769775390625
    10. 'i' → logprob: -7.4057769775390625

Token 376: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004080315411556512
    2. ' for' → logprob: -7.875408172607422
    3. '
' → logprob: -11.000408172607422
    4. '```' → logprob: -11.625408172607422
    5. '``' → logprob: -14.250408172607422
    6. 'ans' → logprob: -14.375408172607422
    7. 's' → logprob: -15.875408172607422
    8. 'i' → logprob: -15.875408172607422
    9. '	for' → logprob: -16.125408172607422
    10. '#' → logprob: -16.125408172607422

Token 377: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6109099388122559
    2. ' A' → logprob: -1.3609099388122559
    3. '[i' → logprob: -1.9859099388122559
    4. 'i' → logprob: -3.610909938812256
    5. ' i' → logprob: -3.985909938812256
    6. ' [' → logprob: -4.985909938812256
    7. '1' → logprob: -5.610909938812256
    8. '[' → logprob: -5.735909938812256
    9. '[A' → logprob: -6.735909938812256
    10. ' ' → logprob: -7.235909938812256

Token 378: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.33243727684020996
    2. 'for' → logprob: -1.33243727684021
    3. 'i' → logprob: -4.207437515258789
    4. ' for' → logprob: -6.332437515258789
    5. '[
' → logprob: -6.707437515258789
    6. '#' → logprob: -7.832437515258789
    7. '[' → logprob: -8.332437515258789
    8. '   ' → logprob: -8.832437515258789
    9. '```' → logprob: -10.082437515258789
    10. ' =' → logprob: -10.082437515258789

Token 379: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028141476213932037
    2. ')' → logprob: -6.752814292907715
    3. '+' → logprob: -7.252814292907715
    4. ']+' → logprob: -7.877814292907715
    5. '])' → logprob: -8.002814292907715
    6. '[i' → logprob: -9.752814292907715
    7. '].' → logprob: -10.002814292907715
    8. ' ]' → logprob: -10.502814292907715
    9. '.' → logprob: -10.752814292907715
    10. ']
' → logprob: -11.502814292907715

Token 380: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9151278138160706
    2. ' for' → logprob: -1.5401277542114258
    3. ' 
' → logprob: -2.040127754211426
    4. ' ' → logprob: -2.540127754211426
    5. '  
' → logprob: -3.165127754211426
    6. '
' → logprob: -3.290127754211426
    7. ' i' → logprob: -3.540127754211426
    8. 'i' → logprob: -4.165127754211426
    9. '\' → logprob: -5.165127754211426
    10. '   ' → logprob: -5.290127754211426

Token 381: ' val' (ID: 1459)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2897369861602783
    2. ' main' → logprob: -2.4147369861602783
    3. ' solve' → logprob: -2.6647369861602783
    4. ' calc' → logprob: -3.6647369861602783
    5. 'max' → logprob: -4.039736747741699
    6. ' best' → logprob: -4.039736747741699
    7. ' longest' → logprob: -4.664736747741699
    8. ' possible' → logprob: -5.039736747741699
    9. 'solve' → logprob: -5.289736747741699
    10. ' check' → logprob: -6.414736747741699

Token 382: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42172399163246155
    2. 'ue' → logprob: -1.7967239618301392
    3. '[' → logprob: -3.0467240810394287
    4. '[i' → logprob: -3.4217240810394287
    5. '(i' → logprob: -3.5467240810394287
    6. 'u' → logprob: -3.6717240810394287
    7. ')' → logprob: -4.79672384262085
    8. '(
' → logprob: -5.67172384262085
    9. 'uel' → logprob: -5.79672384262085
    10. '[u' → logprob: -5.79672384262085

Token 383: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04584388807415962
    2. '):
' → logprob: -3.1708438396453857
    3. ')' → logprob: -5.920844078063965
    4. ' ):' → logprob: -9.920844078063965
    5. ':' → logprob: -10.170844078063965
    6. ',' → logprob: -11.045844078063965
    7. '   ' → logprob: -11.045844078063965
    8. '):
' → logprob: -11.170844078063965
    9. '(x' → logprob: -11.420844078063965
    10. 'x' → logprob: -12.795844078063965

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1944141685962677
    2. ' return' → logprob: -2.6944141387939453
    3. '1' → logprob: -3.3194141387939453
    4. 'return' → logprob: -3.5694141387939453
    5. ' x' → logprob: -4.194414138793945
    6. ' =' → logprob: -4.444414138793945
    7. '0' → logprob: -5.194414138793945
    8. '=' → logprob: -5.694414138793945
    9. 'x' → logprob: -5.819414138793945
    10. ' ' → logprob: -5.819414138793945

Token 385: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.252551406621933
    2. '1' → logprob: -1.6275514364242554
    3. ' return' → logprob: -4.127551555633545
    4. '   ' → logprob: -5.252551555633545
    5. '0' → logprob: -5.377551555633545
    6. ' ' → logprob: -8.252551078796387
    7. 'x' → logprob: -8.502551078796387
    8. 'if' → logprob: -8.752551078796387
    9. '(' → logprob: -9.502551078796387
    10. 'A' → logprob: -10.252551078796387

Token 386: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015515257604420185
    2. ' ' → logprob: -4.640515327453613
    3. 'x' → logprob: -5.515515327453613
    4. '0' → logprob: -6.515515327453613
    5. ' x' → logprob: -9.015515327453613
    6. '(x' → logprob: -9.890515327453613
    7. '(' → logprob: -10.390515327453613
    8. 'A' → logprob: -10.765515327453613
    9. ' (' → logprob: -12.140515327453613
    10. '   ' → logprob: -13.140515327453613

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008299073204398155
    2. '0' → logprob: -5.133298873901367
    3. 'x' → logprob: -6.258298873901367
    4. '(' → logprob: -8.508298873901367
    5. 'A' → logprob: -8.758298873901367
    6. '(x' → logprob: -9.508298873901367
    7. ' ' → logprob: -11.633298873901367
    8. '(A' → logprob: -12.008298873901367
    9. '[x' → logprob: -14.008298873901367
    10. '-' → logprob: -14.508298873901367

Token 388: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.27395206689834595
    2. '-' → logprob: -1.5239520072937012
    3. '-x' → logprob: -4.273952007293701
    4. ' if' → logprob: -5.023952007293701
    5. '-val' → logprob: -7.148952007293701
    6. 'if' → logprob: -7.898952007293701
    7. 'x' → logprob: -10.64895248413086
    8. '^' → logprob: -10.77395248413086
    9. '-if' → logprob: -10.89895248413086
    10. ' ^' → logprob: -11.02395248413086

Token 389: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.000000953674316
    3. '(x' → logprob: -23.375
    4. '	x' → logprob: -24.125
    5. '{x' → logprob: -24.5
    6. ')x' → logprob: -24.5
    7. '"x' → logprob: -25.375
    8. '```' → logprob: -26.25
    9. '$x' → logprob: -26.375
    10. ''x' → logprob: -27.25

Token 390: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2920745611190796
    2. '
' → logprob: -1.5420745611190796
    3. ' for' → logprob: -3.417074680328369
    4. 'ans' → logprob: -6.167074680328369
    5. 'max' → logprob: -7.042074680328369
    6. '

' → logprob: -7.042074680328369
    7. '  
' → logprob: -7.292074680328369
    8. ')' → logprob: -7.792074680328369
    9. '<|end|>' → logprob: -8.042074203491211
    10. ' 
' → logprob: -8.042074203491211

Token 391: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: ' inversion' (ID: 70924)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5877398252487183
    2. 'for' → logprob: -0.9627398252487183
    3. ' for' → logprob: -3.587739944458008
    4. '<|end|>' → logprob: -3.712739944458008
    5. '<|end|>' → logprob: -6.212739944458008
    6. '

' → logprob: -6.587739944458008
    7. '\n' → logprob: -6.587739944458008
    8. ')' → logprob: -6.587739944458008
    9. ',' → logprob: -6.837739944458008
    10. 'def' → logprob: -7.587739944458008

Token 394: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03037838079035282
    2. ' for' → logprob: -3.6553783416748047
    3. 'ans' → logprob: -6.155378341674805
    4. '
' → logprob: -7.530378341674805
    5. 'max' → logprob: -8.030378341674805
    6. ')' → logprob: -8.155378341674805
    7. 'i' → logprob: -8.155378341674805
    8. '(ans' → logprob: -8.780378341674805
    9. ' ans' → logprob: -9.655378341674805
    10. ',' → logprob: -9.905378341674805

Token 395: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.3281680941581726
    2. '_' → logprob: -2.3281681537628174
    3. '_ans' → logprob: -2.3281681537628174
    4. '_length' → logprob: -2.7031681537628174
    5. '_val' → logprob: -4.578167915344238
    6. 'len' → logprob: -6.078167915344238
    7. 'ans' → logprob: -6.203167915344238
    8. '_left' → logprob: -7.328167915344238
    9. '(ans' → logprob: -7.328167915344238
    10. '_l' → logprob: -7.328167915344238

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5798620581626892
    2. '=' → logprob: -0.8298620581626892
    3. '_' → logprob: -5.579862117767334
    4. '=max' → logprob: -10.079861640930176
    5. '_=' → logprob: -10.829861640930176
    6. ',' → logprob: -11.079861640930176
    7. 'g' → logprob: -11.454861640930176
    8. 'e' → logprob: -11.829861640930176
    9. ' ' → logprob: -12.079861640930176
    10. ')' → logprob: -12.079861640930176

Token 397: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5162971019744873
    2. '1' → logprob: -1.2662971019744873
    3. '0' → logprob: -2.1412971019744873
    4. 'max' → logprob: -6.266297340393066
    5. ' ans' → logprob: -7.141297340393066
    6. ' ' → logprob: -7.266297340393066
    7. 'left' → logprob: -7.766297340393066
    8. '(ans' → logprob: -10.391297340393066
    9. '	ans' → logprob: -11.578797340393066
    10. '   ' → logprob: -11.891297340393066

Token 398: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17396610975265503
    2. '
' → logprob: -1.9239661693572998
    3. ' for' → logprob: -4.298965930938721
    4. ' 
' → logprob: -10.048966407775879
    5. '
' → logprob: -12.298966407775879
    6. '  
' → logprob: -12.298966407775879
    7. '

' → logprob: -12.673966407775879
    8. ')' → logprob: -13.673966407775879
    9. '\n' → logprob: -13.798966407775879
    10. 'i' → logprob: -13.923966407775879

Token 399: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.375000953674316
    3. ' for' → logprob: -14.500000953674316
    4. '```' → logprob: -19.000001907348633
    5. '	for' → logprob: -21.875001907348633
    6. '

' → logprob: -22.000001907348633
    7. 'i' → logprob: -22.000001907348633
    8. '    
' → logprob: -22.875001907348633
    9. '``' → logprob: -23.750001907348633
    10. ')' → logprob: -23.875001907348633

Token 400: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008070098701864481
    2. 'i' → logprob: -7.12580680847168
    3. ' ' → logprob: -13.37580680847168
    4. '	i' → logprob: -14.37580680847168
    5. ' ' → logprob: -14.75080680847168
    6. '_i' → logprob: -17.00080680847168
    7. ' _' → logprob: -18.12580680847168
    8. '(i' → logprob: -18.37580680847168
    9. '_' → logprob: -18.62580680847168
    10. '```' → logprob: -18.87580680847168

Token 401: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02055087871849537
    2. 'in' → logprob: -3.8955509662628174
    3. ' ' → logprob: -12.145550727844238
    4. ',' → logprob: -13.645550727844238
    5. '	in' → logprob: -14.145550727844238
    6. 'import' → logprob: -15.145550727844238
    7. '   ' → logprob: -15.520550727844238
    8. 'In' → logprob: -15.645550727844238
    9. '  ' → logprob: -16.020551681518555
    10. 'n' → logprob: -16.020551681518555

Token 402: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. ' ' → logprob: -18.00007438659668
    4. '(range' → logprob: -18.00007438659668
    5. '   ' → logprob: -18.62507438659668
    6. '
' → logprob: -19.62507438659668
    7. 'r' → logprob: -19.75007438659668
    8. '0' → logprob: -19.87507438659668
    9. '```' → logprob: -20.12507438659668
    10. '	range' → logprob: -20.25007438659668

Token 403: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.815280696377158e-05
    2. '(' → logprob: -9.750078201293945
    3. 'N' → logprob: -10.875078201293945
    4. '(n' → logprob: -15.000078201293945
    5. '(len' → logprob: -15.250078201293945
    6. '(
' → logprob: -15.375078201293945
    7. '(i' → logprob: -18.625078201293945
    8. ' N' → logprob: -19.125078201293945
    9. ' (' → logprob: -19.250078201293945
    10. '	N' → logprob: -19.750078201293945

Token 404: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007163656409829855
    2. '):
' → logprob: -7.250716209411621
    3. ' ):' → logprob: -12.250716209411621
    4. '):
' → logprob: -14.000716209411621
    5. ':' → logprob: -15.250716209411621
    6. ')' → logprob: -15.625716209411621
    7. '+' → logprob: -15.875716209411621
    8. '-' → logprob: -16.000717163085938
    9. '):

' → logprob: -17.125717163085938
    10. ']:' → logprob: -18.375717163085938

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019635913893580437
    2. 'left' → logprob: -4.1446356773376465
    3. 'l' → logprob: -6.7696356773376465
    4. 'new' → logprob: -7.2696356773376465
    5. ' left' → logprob: -7.3946356773376465
    6. 'val' → logprob: -8.769636154174805
    7. 'a' → logprob: -8.894636154174805
    8. 'if' → logprob: -9.019636154174805
    9. '	left' → logprob: -9.144636154174805
    10. 'prev' → logprob: -9.519636154174805

Token 406: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3689054250717163
    2. '   ' → logprob: -2.493905544281006
    3. 'cur' → logprob: -3.118905544281006
    4. 'l' → logprob: -3.618905544281006
    5. 'new' → logprob: -3.618905544281006
    6. '#' (adapté à ' #') → logprob: -3.743905544281006
    7. 'tmp' → logprob: -3.868905544281006
    8. 'val' → logprob: -3.993905544281006
    9. 'curr' → logprob: -4.368905544281006
    10. 'a' → logprob: -4.493905544281006

Token 407: ' On' (ID: 2160)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.49007830023765564
    2. 'new' → logprob: -2.2400782108306885
    3. 'inv' → logprob: -2.2400782108306885
    4. 'val' → logprob: -2.7400782108306885
    5. 'cur' → logprob: -4.115078449249268
    6. '#' → logprob: -4.115078449249268
    7. 'curr' → logprob: -4.490078449249268
    8. 'if' → logprob: -4.615078449249268
    9. 'original' → logprob: -4.740078449249268
    10. 'tmp' → logprob: -4.990078449249268

Token 408: ' inverse' (ID: 53743)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.170914888381958
    2. 'if' → logprob: -1.295914888381958
    3. ' if' → logprob: -1.670914888381958
    4. '   ' → logprob: -2.920914888381958
    5. 'tmp' → logprob: -3.295914888381958
    6. ' #' → logprob: -3.920914888381958
    7. 'for' → logprob: -4.045914649963379
    8. ' left' → logprob: -4.170914649963379
    9. 'temp' → logprob: -4.420914649963379
    10. ' tmp' → logprob: -4.795914649963379

Token 409: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21724550426006317
    2. ' A' → logprob: -1.8422454595565796
    3. '   ' → logprob: -4.342245578765869
    4. 'temp' → logprob: -4.967245578765869
    5. 'val' → logprob: -5.092245578765869
    6. ' temp' → logprob: -5.717245578765869
    7. 'tmp' → logprob: -5.717245578765869
    8. ' val' → logprob: -6.592245578765869
    9. ' tmp' → logprob: -7.592245578765869
    10. 'a' → logprob: -7.967245578765869

Token 410: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001705246395431459
    2. '[' → logprob: -9.125170707702637
    3. 'i' → logprob: -10.625170707702637
    4. '   ' → logprob: -11.125170707702637
    5. ' =' → logprob: -12.750170707702637
    6. 'def' → logprob: -12.875170707702637
    7. ')' → logprob: -13.125170707702637
    8. '[
' → logprob: -13.250170707702637
    9. '[I' → logprob: -13.250170707702637
    10. ' i' → logprob: -13.500170707702637

Token 411: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13096675276756287
    2. '])' → logprob: -2.1309666633605957
    3. ']
' → logprob: -5.880966663360596
    4. '])
' → logprob: -7.755966663360596
    5. ')' → logprob: -7.880966663360596
    6. '[i' → logprob: -9.630967140197754
    7. ' ]' → logprob: -9.755967140197754
    8. '],' → logprob: -10.005967140197754
    9. ']
' → logprob: -10.255967140197754
    10. '   ' → logprob: -10.380967140197754

Token 412: ' seul' (ID: 33041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043125927448272705
    2. '
' → logprob: -4.418126106262207
    3. 'val' → logprob: -5.168126106262207
    4. 'inv' → logprob: -5.168126106262207
    5. 'in' → logprob: -5.543126106262207
    6. 'new' → logprob: -5.543126106262207
    7. '    
' → logprob: -5.668126106262207
    8. 'temp' → logprob: -6.668126106262207
    9. ',' → logprob: -6.793126106262207
    10. 'tmp' → logprob: -7.168126106262207

Token 413: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055426158010959625
    2. '    
' → logprob: -3.1804261207580566
    3. ',' → logprob: -5.680426120758057
    4. '   
' → logprob: -6.430426120758057
    5. '
' → logprob: -6.555426120758057
    6. '  
' → logprob: -7.305426120758057
    7. ')' → logprob: -7.430426120758057
    8. 'val' → logprob: -7.430426120758057
    9. '    ' → logprob: -7.805426120758057
    10. 'A' → logprob: -7.930426120758057

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01058695837855339
    2. '    
' → logprob: -5.135586738586426
    3. ':' → logprob: -6.760586738586426
    4. ' new' → logprob: -7.510586738586426
    5. 'A' → logprob: -7.760586738586426
    6. ' if' → logprob: -8.010586738586426
    7. ',' → logprob: -8.510586738586426
    8. 'new' → logprob: -8.635586738586426
    9. ':
' → logprob: -8.635586738586426
    10. ' A' → logprob: -8.760586738586426

Token 415: ' new' (ID: 620)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.3292618989944458
    2. 'new' (adapté à ' new') → logprob: -1.5792618989944458
    3. 'inv' → logprob: -1.5792618989944458
    4. 'val' → logprob: -2.7042617797851562
    5. 'cur' → logprob: -3.2042617797851562
    6. '   ' → logprob: -3.2042617797851562
    7. 'orig' → logprob: -3.4542617797851562
    8. 'tmp' → logprob: -3.5792617797851562
    9. 'original' → logprob: -3.7042617797851562
    10. 'b' → logprob: -4.079261779785156

Token 416: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.017754778265953064
    2. '_A' → logprob: -4.517754554748535
    3. 'A' → logprob: -5.767754554748535
    4. '_len' → logprob: -6.642754554748535
    5. '_value' → logprob: -6.892754554748535
    6. ' =' → logprob: -7.517754554748535
    7. '_left' → logprob: -8.017754554748535
    8. 'val' → logprob: -9.142754554748535
    9. '_i' → logprob: -9.392754554748535
    10. '_a' → logprob: -10.267754554748535

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889088988304138
    2. ' =' → logprob: -2.578890800476074
    3. ')' → logprob: -14.578890800476074
    4. 's' → logprob: -15.703890800476074
    5. '＝' → logprob: -15.953890800476074
    6. ',' → logprob: -16.32889175415039
    7. ' ' → logprob: -16.82889175415039
    8. ')=' → logprob: -17.45389175415039
    9. '=int' → logprob: -17.70389175415039
    10. '_' → logprob: -17.82889175415039

Token 418: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0019286326132714748
    2. ' val' → logprob: -6.251928806304932
    3. '	val' → logprob: -18.876928329467773
    4. '(val' → logprob: -19.126928329467773
    5. '1' → logprob: -19.376928329467773
    6. '   ' → logprob: -21.376928329467773
    7. '[val' → logprob: -21.501928329467773
    8. ' ' → logprob: -21.876928329467773
    9. ',val' → logprob: -23.251928329467773
    10. '.val' → logprob: -23.376928329467773

Token 419: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.000297685619443655
    2. '(' → logprob: -8.375297546386719
    3. 'A' → logprob: -9.625297546386719
    4. '(
' → logprob: -14.000297546386719
    5. ' (' → logprob: -17.12529754638672
    6. ')' → logprob: -17.37529754638672
    7. '(`' → logprob: -17.50029754638672
    8. '```' → logprob: -17.62529754638672
    9. '(a' → logprob: -18.00029754638672
    10. '((' → logprob: -18.25029754638672

Token 420: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3663626305060461e-05
    2. 'i' → logprob: -11.50001335144043
    3. '[' → logprob: -13.00001335144043
    4. ')' → logprob: -14.12501335144043
    5. '[
' → logprob: -15.75001335144043
    6. ' i' → logprob: -16.62501335144043
    7. ')i' → logprob: -16.62501335144043
    8. '[I' → logprob: -16.87501335144043
    9. ')[' → logprob: -17.12501335144043
    10. ' [' → logprob: -17.37501335144043

Token 421: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011261084116995335
    2. '])' → logprob: -4.511260986328125
    3. '))' → logprob: -9.386260986328125
    4. ')]' → logprob: -9.636260986328125
    5. ' )' → logprob: -10.886260986328125
    6. ')
' → logprob: -10.886260986328125
    7. '[i' → logprob: -11.511260986328125
    8. ']' → logprob: -11.886260986328125
    9. ')])' → logprob: -12.636260986328125
    10. '   ' → logprob: -12.886260986328125

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39471113681793213
    2. 'left' → logprob: -1.1447111368179321
    3. 'l' → logprob: -5.144711017608643
    4. 'length' → logprob: -7.644711017608643
    5. '    
' → logprob: -7.769711017608643
    6. ' left' → logprob: -8.0197114944458
    7. '#' → logprob: -8.2697114944458
    8. 'if' → logprob: -8.6447114944458
    9. '
' → logprob: -9.5197114944458
    10. 'prev' → logprob: -9.8947114944458

Token 423: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03449162095785141
    2. 'l' → logprob: -3.909491539001465
    3. '   ' → logprob: -4.534491539001465
    4. '#' (adapté à ' #') → logprob: -6.409491539001465
    5. 'g' → logprob: -7.534491539001465
    6. 'length' → logprob: -7.909491539001465
    7. 'cur' → logprob: -8.659491539001465
    8. 'curr' → logprob: -9.159491539001465
    9. 'L' → logprob: -9.534491539001465
    10. 'cnt' → logprob: -9.909491539001465

Token 424: ' On' (ID: 2160)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.027029583230614662
    2. 'g' → logprob: -4.402029514312744
    3. 'l' → logprob: -4.402029514312744
    4. '#' → logprob: -7.277029514312744
    5. 'length' → logprob: -7.652029514312744
    6. '   ' → logprob: -7.652029514312744
    7. 'cur' → logprob: -8.902029991149902
    8. 'L' → logprob: -9.027029991149902
    9. ' left' → logprob: -9.902029991149902
    10. 'curr' → logprob: -10.152029991149902

Token 425: ' regarde' (ID: 115760)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15583963692188263
    2. 'left' → logprob: -2.530839681625366
    3. '#' → logprob: -3.405839681625366
    4. '=' → logprob: -4.530839443206787
    5. ' if' → logprob: -4.780839443206787
    6. '_left' → logprob: -6.155839443206787
    7. 'for' → logprob: -6.780839443206787
    8. ' =' → logprob: -6.780839443206787
    9. 'max' → logprob: -6.780839443206787
    10. 'continue' → logprob: -6.905839443206787

Token 426: ' a' (ID: 261)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6450557112693787
    2. 'g' → logprob: -1.3950557708740234
    3. '   ' → logprob: -1.7700557708740234
    4. ' left' → logprob: -3.0200557708740234
    5. ' gauche' → logprob: -6.145055770874023
    6. 'max' → logprob: -6.895055770874023
    7. '_left' → logprob: -7.020055770874023
    8. 'if' → logprob: -7.020055770874023
    9. 'l' → logprob: -7.145055770874023
    10. ' g' → logprob: -7.770055770874023

Token 427: ' gauche' (ID: 58367)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9477041959762573
    2. 't' → logprob: -1.0727041959762573
    3. 'if' → logprob: -2.072704315185547
    4. ' i' → logprob: -2.447704315185547
    5. ' if' → logprob: -3.697704315185547
    6. '   ' → logprob: -3.947704315185547
    7. 'left' → logprob: -5.572704315185547
    8. ' les' → logprob: -6.322704315185547
    9. ' la' → logprob: -6.947704315185547
    10. 'l' → logprob: -7.197704315185547

Token 428: ':
' (ID: 734)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.6002724170684814
    2. '   ' → logprob: -1.3502724170684814
    3. ' =' → logprob: -2.6002724170684814
    4. 'left' → logprob: -3.3502724170684814
    5. 'len' → logprob: -3.6002724170684814
    6. 'if' → logprob: -3.7252724170684814
    7. '_length' → logprob: -4.600272178649902
    8. '_left' → logprob: -4.725272178649902
    9. '=' → logprob: -5.350272178649902
    10. 'max' → logprob: -5.600272178649902

Token 429: '   ' (ID: 271)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2406950145959854
    2. '   ' → logprob: -1.9906949996948242
    3. 'l' → logprob: -2.615694999694824
    4. 'if' → logprob: -5.865694999694824
    5. ' left' → logprob: -7.615694999694824
    6. 'length' → logprob: -7.740694999694824
    7. 'len' → logprob: -8.990694999694824
    8. 'L' → logprob: -9.615694999694824
    9. '	left' → logprob: -9.615694999694824
    10. '    
' → logprob: -10.115694999694824

Token 430: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.08532658219337463
    2. 'l' → logprob: -2.710326671600342
    3. 'if' → logprob: -5.085326671600342
    4. 'g' → logprob: -5.085326671600342
    5. '   ' → logprob: -6.335326671600342
    6. 'length' → logprob: -7.585326671600342
    7. ' left' → logprob: -8.460326194763184
    8. 'cnt' → logprob: -9.085326194763184
    9. 'L' → logprob: -9.460326194763184
    10. 'lg' → logprob: -9.835326194763184

Token 431: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.003356778062880039
    2. '_i' → logprob: -6.62835693359375
    3. '_length' → logprob: -7.25335693359375
    4. '_val' → logprob: -7.75335693359375
    5. '_max' → logprob: -8.62835693359375
    6. '_idx' → logprob: -8.62835693359375
    7. '_count' → logprob: -8.75335693359375
    8. 'len' → logprob: -9.12835693359375
    9. '_seq' → logprob: -9.12835693359375
    10. '[i' → logprob: -10.37835693359375

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5755597352981567
    2. '=' → logprob: -0.9505597352981567
    3. '_i' → logprob: -3.450559616088867
    4. '_len' → logprob: -4.200559616088867
    5. '_left' → logprob: -6.450559616088867
    6. '_' → logprob: -7.450559616088867
    7. '_val' → logprob: -7.575559616088867
    8. '[i' → logprob: -7.825559616088867
    9. '_idx' → logprob: -7.825559616088867
    10. '=i' → logprob: -8.075559616088867

Token 433: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014997970312833786
    2. 'left' → logprob: -4.264997959136963
    3. '0' → logprob: -7.764997959136963
    4. '(' → logprob: -8.639998435974121
    5. '(i' → logprob: -9.514998435974121
    6. 'i' → logprob: -9.889998435974121
    7. '(left' → logprob: -9.889998435974121
    8. ' left' → logprob: -11.139998435974121
    9. ' ' → logprob: -11.264998435974121
    10. '   ' → logprob: -11.264998435974121

Token 434: '1' (ID: 16)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4514125883579254
    2. '1' → logprob: -1.076412558555603
    3. '0' → logprob: -4.076412677764893
    4. 'i' → logprob: -6.451412677764893
    5. '(i' → logprob: -6.451412677764893
    6. '(left' → logprob: -6.576412677764893
    7. '(' → logprob: -7.326412677764893
    8. ' left' → logprob: -8.826412200927734
    9. '[left' → logprob: -9.451412200927734
    10. ' (' → logprob: -11.076412200927734

Token 435: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15350408852100372
    2. 'if' → logprob: -2.1535041332244873
    3. ' if' → logprob: -3.6535041332244873
    4. '   ' → logprob: -8.153504371643066
    5. '    
' → logprob: -11.278504371643066
    6. '

' → logprob: -12.403504371643066
    7. '  
' → logprob: -12.403504371643066
    8. ' 
' → logprob: -12.528504371643066
    9. '	if' → logprob: -12.653504371643066
    10. '
' → logprob: -12.653504371643066

Token 436: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06608150154352188
    2. '
' → logprob: -3.1910815238952637
    3. ' if' → logprob: -3.8160815238952637
    4. '   ' → logprob: -7.566081523895264
    5. '    
' → logprob: -9.441081047058105
    6. 'for' → logprob: -9.691081047058105
    7. 'while' → logprob: -9.941081047058105
    8. ';if' → logprob: -11.316081047058105
    9. 'i' → logprob: -11.441081047058105
    10. 'and' → logprob: -11.441081047058105

Token 437: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0032472279854118824
    2. '
' → logprob: -6.503247261047363
    3. ' if' → logprob: -6.503247261047363
    4. 'while' → logprob: -9.003247261047363
    5. '   ' → logprob: -9.628247261047363
    6. 'for' → logprob: -10.378247261047363
    7. 'i' → logprob: -11.253247261047363
    8. 'left' → logprob: -12.753247261047363
    9. '1' → logprob: -12.878247261047363
    10. '+' → logprob: -13.253247261047363

Token 438: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007282786536961794
    2. ' i' → logprob: -7.250728130340576
    3. '   ' → logprob: -11.250728607177734
    4. 'new' → logprob: -12.375728607177734
    5. '(i' → logprob: -14.875728607177734
    6. ' ' → logprob: -15.125728607177734
    7. '	i' → logprob: -15.250728607177734
    8. '  ' → logprob: -16.000728607177734
    9. ' new' → logprob: -16.000728607177734
    10. '[i' → logprob: -17.875728607177734

Token 439: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4366040527820587
    2. '-' → logprob: -1.4366040229797363
    3. ' >' → logprob: -2.1866040229797363
    4. ' -' → logprob: -5.686604022979736
    5. ' ' → logprob: -9.061604499816895
    6. '0' → logprob: -9.436604499816895
    7. '   ' → logprob: -10.936604499816895
    8. ' >
' → logprob: -11.061604499816895
    9. '>
' → logprob: -11.061604499816895
    10. '[' → logprob: -11.186604499816895

Token 440: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '=' → logprob: -16.750431060791016
    4. '1' → logprob: -18.375431060791016
    5. '   ' → logprob: -19.000431060791016
    6. '  ' → logprob: -20.750431060791016
    7. '```' → logprob: -21.000431060791016
    8. '
' → logprob: -21.500431060791016
    9. 'i' → logprob: -22.125431060791016
    10. '#' → logprob: -22.125431060791016

Token 441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '=' → logprob: -18.375
    4. '۰' → logprob: -18.875
    5. '1' → logprob: -19.25
    6. '   ' → logprob: -20.0
    7. '０' → logprob: -20.0
    8. 'i' → logprob: -20.25
    9. '```' → logprob: -20.875
    10. '
' → logprob: -21.3125

Token 442: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2014801949262619
    2. 'and' → logprob: -1.7014801502227783
    3. '   ' → logprob: -10.3264799118042
    4. '       ' → logprob: -11.2014799118042
    5. ':
' → logprob: -11.9514799118042
    6. '	and' → logprob: -11.9514799118042
    7. '    ' → logprob: -12.2014799118042
    8. ':' → logprob: -14.4514799118042
    9. ' ' → logprob: -14.7014799118042
    10. '      ' → logprob: -15.2014799118042

Token 443: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.027397803962230682
    2. 'A' → logprob: -3.902397871017456
    3. 'val' → logprob: -5.402397632598877
    4. 'left' → logprob: -6.152397632598877
    5. ' new' → logprob: -9.527398109436035
    6. '(new' → logprob: -9.527398109436035
    7. '(A' → logprob: -10.902398109436035
    8. '   ' → logprob: -11.527398109436035
    9. '(' → logprob: -11.652398109436035
    10. ' A' → logprob: -12.777398109436035

Token 444: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0001302374730585143
    2. 'val' → logprob: -9.375130653381348
    3. '!=' → logprob: -11.375130653381348
    4. '_len' → logprob: -11.625130653381348
    5. '[i' → logprob: -12.250130653381348
    6. 'Val' → logprob: -12.250130653381348
    7. 'A' → logprob: -12.500130653381348
    8. '==' → logprob: -12.500130653381348
    9. '[A' → logprob: -13.000130653381348
    10. '   ' → logprob: -13.500130653381348

Token 445: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0008162968442775309
    2. ' !=' → logprob: -7.125816345214844
    3. ']!=' → logprob: -12.250816345214844
    4. ')!=' → logprob: -12.250816345214844
    5. '()!=' → logprob: -13.375816345214844
    6. '!==' → logprob: -15.750816345214844
    7. '```' → logprob: -15.875816345214844
    8. '==' → logprob: -15.875816345214844
    9. '   ' → logprob: -16.125816345214844
    10. '!=-' → logprob: -17.250816345214844

Token 446: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008735861047171056
    2. ' A' → logprob: -7.625873565673828
    3. 'val' → logprob: -7.875873565673828
    4. 'left' → logprob: -12.750873565673828
    5. '   ' → logprob: -14.000873565673828
    6. ' val' → logprob: -15.000873565673828
    7. '	A' → logprob: -15.125873565673828
    8. '(A' → logprob: -15.125873565673828
    9. ' ' → logprob: -15.500873565673828
    10. ' (' → logprob: -15.750873565673828

Token 447: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. 'i' → logprob: -15.875
    4. '[
' → logprob: -17.75
    5. '
' → logprob: -18.25
    6. '   ' → logprob: -18.625
    7. '```' → logprob: -19.75
    8. '[I' → logprob: -20.25
    9. ' ' → logprob: -20.375
    10. ' [' → logprob: -20.5

Token 448: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001089735422283411
    2. '[i' → logprob: -7.376089572906494
    3. ' -' → logprob: -7.751089572906494
    4. '[' → logprob: -10.751090049743652
    5. 'i' → logprob: -11.626090049743652
    6. '-i' → logprob: -14.751090049743652
    7. '[
' → logprob: -14.876090049743652
    8. '(i' → logprob: -15.251090049743652
    9. ']' → logprob: -15.251090049743652
    10. '[-' → logprob: -15.501090049743652

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.000001907348633
    4. '
' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '-' → logprob: -19.000001907348633
    7. '۱' → logprob: -19.375001907348633
    8. 'i' → logprob: -19.812501907348633
    9. '１' → logprob: -20.312501907348633
    10. '

' → logprob: -20.500001907348633

Token 450: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.697113573551178
    2. ':' → logprob: -1.0721135139465332
    3. '):
' → logprob: -2.197113513946533
    4. ']:
' → logprob: -3.322113513946533
    5. '   ' → logprob: -5.572113513946533
    6. '):' → logprob: -5.572113513946533
    7. ']:' → logprob: -5.697113513946533
    8. ']' → logprob: -7.572113513946533
    9. ')' → logprob: -7.697113513946533
    10. '       ' → logprob: -8.322113990783691

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011312354356050491
    2. 'left' → logprob: -4.886312484741211
    3. ' left' → logprob: -5.636312484741211
    4. '	left' → logprob: -10.136312484741211
    5. '	' → logprob: -11.136312484741211
    6. ',' → logprob: -11.136312484741211
    7. '
' → logprob: -11.261312484741211
    8. '	   ' → logprob: -11.511312484741211
    9. '[left' → logprob: -11.636312484741211
    10. '   ' → logprob: -11.636312484741211

Token 452: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.00029470553272403777
    2. '       ' → logprob: -9.00029468536377
    3. ' left' → logprob: -9.12529468536377
    4. '           ' → logprob: -9.75029468536377
    5. '	left' → logprob: -13.12529468536377
    6. '[left' → logprob: -14.00029468536377
    7. '   ' → logprob: -14.25029468536377
    8. '
' → logprob: -15.75029468536377
    9. '.left' → logprob: -15.87529468536377
    10. '(left' → logprob: -16.250295639038086

Token 453: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.9160102712921798e-05
    2. 'len' → logprob: -10.500029563903809
    3. '[i' → logprob: -14.750029563903809
    4. '[len' → logprob: -15.250029563903809
    5. '=' → logprob: -15.625029563903809
    6. '+=' → logprob: -15.750029563903809
    7. '   ' → logprob: -16.000028610229492
    8. '=len' → logprob: -16.000028610229492
    9. 'length' → logprob: -16.125028610229492
    10. '_LEN' → logprob: -17.000028610229492

Token 454: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011190937831997871
    2. ' =' → logprob: -4.511190891265869
    3. '+=' → logprob: -8.886191368103027
    4. ' +=' → logprob: -12.261191368103027
    5. '   ' → logprob: -17.63619041442871
    6. '=
' → logprob: -17.63619041442871
    7. '.=' → logprob: -18.13619041442871
    8. '＝' → logprob: -19.13619041442871
    9. '*=' → logprob: -19.51119041442871
    10. 'left' → logprob: -19.63619041442871

Token 455: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.676292231422849e-05
    2. ' left' → logprob: -11.000017166137695
    3. '	left' → logprob: -19.250017166137695
    4. '   ' → logprob: -20.125017166137695
    5. 'right' → logprob: -20.375017166137695
    6. '[left' → logprob: -20.750017166137695
    7. '
' → logprob: -21.750017166137695
    8. '       ' → logprob: -22.375017166137695
    9. '(left' → logprob: -22.500017166137695
    10. '1' → logprob: -23.750017166137695

Token 456: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. 'i' → logprob: -16.5
    4. '[
' → logprob: -16.75
    5. '```' → logprob: -18.375
    6. '   ' → logprob: -18.75
    7. '
' → logprob: -19.0
    8. '[int' → logprob: -19.25
    9. '[I' → logprob: -19.375
    10. '\[' → logprob: -20.375

Token 457: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00024025145103223622
    2. 'i' → logprob: -9.125240325927734
    3. ' -' → logprob: -9.625240325927734
    4. '[i' → logprob: -10.250240325927734
    5. '1' → logprob: -10.875240325927734
    6. '[' → logprob: -11.625240325927734
    7. '   ' → logprob: -14.500240325927734
    8. '[-' → logprob: -14.875240325927734
    9. '-i' → logprob: -15.000240325927734
    10. ']' → logprob: -15.250240325927734

Token 458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -18.125
    4. '۱' → logprob: -18.5625
    5. '   ' → logprob: -18.5625
    6. '```' → logprob: -18.6875
    7. '१' → logprob: -19.375
    8. '<|end|>' → logprob: -19.75
    9. '১' → logprob: -20.1875
    10. '11' → logprob: -20.1875

Token 459: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011858227662742138
    2. '-' → logprob: -7.376185894012451
    3. ' ]' → logprob: -7.876185894012451
    4. '<|end|>' → logprob: -8.876185417175293
    5. '   ' → logprob: -10.876185417175293
    6. ' -' → logprob: -12.376185417175293
    7. '<|end|>' → logprob: -12.626185417175293
    8. ' ' → logprob: -12.626185417175293
    9. ')' → logprob: -13.126185417175293
    10. ']
' → logprob: -13.126185417175293

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06758847832679749
    2. 'if' → logprob: -2.8175885677337646
    3. ' if' → logprob: -6.0675883293151855
    4. 'right' → logprob: -6.1925883293151855
    5. ' right' → logprob: -7.8175883293151855
    6. '    
' → logprob: -8.817588806152344
    7. ')' → logprob: -9.192588806152344
    8. ',' → logprob: -9.692588806152344
    9. 'left' → logprob: -9.692588806152344
    10. '
' → logprob: -9.817588806152344

Token 461: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6885232925415039
    2. 'right' → logprob: -0.8135232925415039
    3. '   ' → logprob: -2.938523292541504
    4. '#' (adapté à ' #') → logprob: -7.688523292541504
    5. 'print' → logprob: -7.688523292541504
    6. ' right' → logprob: -8.188523292541504
    7. ' if' → logprob: -8.938523292541504
    8. 'new' → logprob: -10.563523292541504
    9. 'left' → logprob: -10.813523292541504
    10. '
' → logprob: -11.063523292541504

Token 462: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.044990718364715576
    2. 'right' → logprob: -3.2949907779693604
    3. ' if' → logprob: -5.294990539550781
    4. ' right' → logprob: -6.794990539550781
    5. 'i' → logprob: -7.794990539550781
    6. '1' → logprob: -8.294990539550781
    7. '   ' → logprob: -9.919990539550781
    8. '
' → logprob: -10.794990539550781
    9. 'r' → logprob: -11.919990539550781
    10. '0' → logprob: -12.044990539550781

Token 463: ' regarde' (ID: 115760)
  Prédit: ' regarde'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' regarde' → logprob: -0.20027276873588562
    2. 'if' → logprob: -2.075272798538208
    3. 'look' → logprob: -4.200272560119629
    4. ' if' → logprob: -4.200272560119629
    5. ' looks' → logprob: -5.075272560119629
    6. 'reg' → logprob: -5.450272560119629
    7. ' look' → logprob: -5.700272560119629
    8. 'right' → logprob: -5.700272560119629
    9. ' regard' → logprob: -5.950272560119629
    10. '   ' → logprob: -7.075272560119629

Token 464: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3821907043457031
    2. 'i' → logprob: -1.6321907043457031
    3. ' i' → logprob: -1.6321907043457031
    4. ' at' → logprob: -2.132190704345703
    5. 'if' → logprob: -2.507190704345703
    6. ' if' → logprob: -2.757190704345703
    7. ' ' → logprob: -3.382190704345703
    8. ' à' → logprob: -4.257190704345703
    9. 'at' → logprob: -5.132190704345703
    10. 'right' → logprob: -5.257190704345703

Token 465: ' droite' (ID: 61428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7616719603538513
    2. '1' → logprob: -1.136672019958496
    3. ' i' → logprob: -1.636672019958496
    4. ' ' → logprob: -4.511672019958496
    5. ' right' → logprob: -6.261672019958496
    6. ' droite' → logprob: -6.386672019958496
    7. 'right' → logprob: -6.511672019958496
    8. '+' → logprob: -7.261672019958496
    9. ':' → logprob: -8.886672019958496
    10. ' range' → logprob: -9.386672019958496

Token 466: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05030592158436775
    2. ' =' → logprob: -3.1753058433532715
    3. '=' → logprob: -5.5503058433532715
    4. ' if' → logprob: -6.6753058433532715
    5. 'if' → logprob: -6.8003058433532715
    6. ':' → logprob: -8.05030632019043
    7. '
' → logprob: -8.55030632019043
    8. ':
' → logprob: -9.05030632019043
    9. '    
' → logprob: -9.17530632019043
    10. ',' → logprob: -9.17530632019043

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6497825980186462
    2. 'right' → logprob: -0.7747825980186462
    3. ' right' → logprob: -4.524782657623291
    4. '1' → logprob: -5.149782657623291
    5. '	right' → logprob: -8.649782180786133
    6. 'if' → logprob: -8.899782180786133
    7. ' ' → logprob: -11.024782180786133
    8. '```' → logprob: -11.024782180786133
    9. '    
' → logprob: -11.524782180786133
    10. '0' → logprob: -11.524782180786133

Token 468: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.3104740083217621
    2. '1' → logprob: -1.5604740381240845
    3. ' right' → logprob: -3.185473918914795
    4. '   ' → logprob: -4.185473918914795
    5. ' ' → logprob: -8.560474395751953
    6. 'if' → logprob: -10.185474395751953
    7. '
' → logprob: -11.185474395751953
    8. '	right' → logprob: -11.310474395751953
    9. '0' → logprob: -12.060474395751953
    10. 'r' → logprob: -12.060474395751953

Token 469: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.816093228830141e-06
    2. 'len' → logprob: -12.87500286102295
    3. '=' → logprob: -16.625001907348633
    4. ' =' → logprob: -16.875001907348633
    5. 'Len' → logprob: -17.125001907348633
    6. '_' → logprob: -17.875001907348633
    7. '_LEN' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '_length' → logprob: -18.250001907348633
    10. '_val' → logprob: -18.500001907348633

Token 470: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141538977622986
    2. ' =' → logprob: -1.7014154195785522
    3. '+=' → logprob: -13.576415061950684
    4. ' +=' → logprob: -14.451415061950684
    5. '   ' → logprob: -16.201416015625
    6. ' ' → logprob: -16.826416015625
    7. '=
' → logprob: -16.951416015625
    8. '＝' → logprob: -17.826416015625
    9. '=

' → logprob: -17.826416015625
    10. ' ' → logprob: -17.951416015625

Token 471: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026181264547631145
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.250262260437012
    4. '0' → logprob: -15.250262260437012
    5. '(' → logprob: -18.375261306762695
    6. '
' → logprob: -18.375261306762695
    7. '  ' → logprob: -19.125261306762695
    8. '=' → logprob: -20.250261306762695
    9. '[' → logprob: -20.500261306762695
    10. ' (' → logprob: -20.875261306762695

Token 472: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.264322317088954e-05
    2. ' ' → logprob: -10.000052452087402
    3. '0' → logprob: -11.875052452087402
    4. '(' → logprob: -16.12505340576172
    5. '   ' → logprob: -16.50005340576172
    6. '  ' → logprob: -19.50005340576172
    7. ' (' → logprob: -19.62505340576172
    8. '
' → logprob: -19.62505340576172
    9. 'right' → logprob: -20.12505340576172
    10. 'new' → logprob: -20.50005340576172

Token 473: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0598842091858387
    2. '   ' → logprob: -2.9348843097686768
    3. ' if' → logprob: -5.434884071350098
    4. '
' → logprob: -7.434884071350098
    5. '<|end|>' → logprob: -11.434884071350098
    6. '	if' → logprob: -11.559884071350098
    7. '+' → logprob: -12.809884071350098
    8. 'If' → logprob: -13.059884071350098
    9. ';if' → logprob: -13.059884071350098
    10. ',' → logprob: -13.184884071350098

Token 474: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20325534045696259
    2. '   ' → logprob: -1.703255295753479
    3. ' if' → logprob: -6.3282551765441895
    4. '
' → logprob: -10.328255653381348
    5. '+' → logprob: -11.703255653381348
    6. 'If' → logprob: -12.953255653381348
    7. ';if' → logprob: -13.078255653381348
    8. '<|end|>' → logprob: -13.078255653381348
    9. '    
' → logprob: -13.203255653381348
    10. '```' → logprob: -13.328255653381348

Token 475: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.56233171664644e-05
    2. ' if' → logprob: -10.000055313110352
    3. '   ' → logprob: -11.500055313110352
    4. '
' → logprob: -17.25005531311035
    5. '```' → logprob: -17.62505531311035
    6. '+' → logprob: -18.62505531311035
    7. 'If' → logprob: -18.87505531311035
    8. 'for' → logprob: -20.25005531311035
    9. '	if' → logprob: -20.37505531311035
    10. '    
' → logprob: -20.75005531311035

Token 476: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014147937297821
    2. 'i' → logprob: -1.7014148235321045
    3. '   ' → logprob: -14.326415061950684
    4. '(i' → logprob: -14.826415061950684
    5. '	i' → logprob: -15.451415061950684
    6. ' ' → logprob: -15.701415061950684
    7. 'I' → logprob: -16.951414108276367
    8. ' (' → logprob: -17.326414108276367
    9. ' ' → logprob: -17.701414108276367
    10. '  ' → logprob: -18.451414108276367

Token 477: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.28461548686027527
    2. '<' → logprob: -1.4096155166625977
    3. '+' → logprob: -5.784615516662598
    4. ' ' → logprob: -8.534615516662598
    5. ' +' → logprob: -9.534615516662598
    6. '<N' → logprob: -9.784615516662598
    7. '<len' → logprob: -10.284615516662598
    8. '[' → logprob: -11.659615516662598
    9. '<size' → logprob: -12.284615516662598
    10. '<int' → logprob: -13.409615516662598

Token 478: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00033546582562848926
    2. ' N' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.500335693359375
    4. ' ' → logprob: -19.750335693359375
    5. '	N' → logprob: -21.375335693359375
    6. '(N' → logprob: -22.375335693359375
    7. '  ' → logprob: -22.625335693359375
    8. 'n' → logprob: -23.750335693359375
    9. '<N' → logprob: -23.750335693359375
    10. '
' → logprob: -23.875335693359375

Token 479: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.493430894101039e-05
    2. ' -' → logprob: -9.500075340270996
    3. '1' → logprob: -17.50007438659668
    4. '```' → logprob: -19.00007438659668
    5. '−' → logprob: -19.12507438659668
    6. '()-' → logprob: -19.37507438659668
    7. 'N' → logprob: -20.12507438659668
    8. ' ' → logprob: -20.12507438659668
    9. 'and' → logprob: -21.00007438659668
    10. '–' → logprob: -21.50007438659668

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '-' → logprob: -19.0
    4. '2' → logprob: -19.875
    5. '```' → logprob: -20.25
    6. '
' → logprob: -21.0
    7. '   ' → logprob: -21.5
    8. '１' → logprob: -21.75
    9. '۱' → logprob: -22.5
    10. '১' → logprob: -23.5

Token 481: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804241120815277
    2. 'and' → logprob: -3.2880423069000244
    3. '   ' → logprob: -15.163042068481445
    4. ' ' → logprob: -15.163042068481445
    5. '    ' → logprob: -15.163042068481445
    6. ' и' → logprob: -16.413042068481445
    7. '	and' → logprob: -16.663042068481445
    8. ' ' → logprob: -16.788042068481445
    9. 'andr' → logprob: -18.788042068481445
    10. ',' → logprob: -18.913042068481445

Token 482: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0002624086628202349
    2. ' new' → logprob: -8.250262260437012
    3. 'val' → logprob: -14.000262260437012
    4. '   ' → logprob: -15.375262260437012
    5. '(new' → logprob: -17.875263214111328
    6. '	new' → logprob: -18.375263214111328
    7. '    ' → logprob: -18.500263214111328
    8. '
' → logprob: -18.500263214111328
    9. 'New' → logprob: -19.375263214111328
    10. '新' → logprob: -19.375263214111328

Token 483: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0007775885751470923
    2. 'val' → logprob: -7.250777721405029
    3. '[i' → logprob: -10.375777244567871
    4. 'Val' → logprob: -10.750777244567871
    5. 'new' → logprob: -12.750777244567871
    6. '_len' → logprob: -13.125777244567871
    7. '[val' → logprob: -13.500777244567871
    8. '```' → logprob: -13.500777244567871
    9. '_' → logprob: -13.750777244567871
    10. '
' → logprob: -14.000777244567871

Token 484: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04859180003404617
    2. ' !=' → logprob: -3.0485918521881104
    3. ')!=' → logprob: -13.298591613769531
    4. '()!=' → logprob: -13.923591613769531
    5. ']!=' → logprob: -14.048591613769531
    6. '!==' → logprob: -15.298591613769531
    7. '!=(' → logprob: -15.298591613769531
    8. '```' → logprob: -15.798591613769531
    9. '!='' → logprob: -15.923591613769531
    10. '!=-' → logprob: -16.04859161376953

Token 485: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0019286326132714748
    2. ' A' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.876928329467773
    4. '   ' → logprob: -18.126928329467773
    5. '	A' → logprob: -18.376928329467773
    6. '(A' → logprob: -20.626928329467773
    7. '
' → logprob: -21.501928329467773
    8. '[A' → logprob: -21.751928329467773
    9. ' ' → logprob: -21.751928329467773
    10. 'a' → logprob: -21.876928329467773

Token 486: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.875000953674316
    3. '[' → logprob: -15.500000953674316
    4. '[
' → logprob: -17.5
    5. '```' → logprob: -18.5
    6. 'A' → logprob: -19.125
    7. '[I' → logprob: -19.375
    8. ' [' → logprob: -19.5
    9. '
' → logprob: -19.625
    10. '[++' → logprob: -19.75

Token 487: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.251091377227567e-05
    2. ' +' → logprob: -10.250042915344238
    3. '[' → logprob: -12.375042915344238
    4. '+
' → logprob: -13.125042915344238
    5. '[i' → logprob: -14.875042915344238
    6. '1' → logprob: -15.250042915344238
    7. '+i' → logprob: -15.625042915344238
    8. '[
' → logprob: -17.000041961669922
    9. '   ' → logprob: -17.125041961669922
    10. '＋' → logprob: -17.250041961669922

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17145439982414246
    2. '+' → logprob: -1.9214544296264648
    3. 'i' → logprob: -4.546454429626465
    4. '[i' → logprob: -7.546454429626465
    5. ' i' → logprob: -12.046454429626465
    6. ' +' → logprob: -12.171454429626465
    7. '   ' → logprob: -12.421454429626465
    8. '[' → logprob: -12.421454429626465
    9. '```' → logprob: -12.546454429626465
    10. ' ' → logprob: -12.921454429626465

Token 489: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.07283385097980499
    2. ']:' → logprob: -2.822833776473999
    3. ':' → logprob: -4.947834014892578
    4. ':
' → logprob: -5.697834014892578
    5. ']' → logprob: -8.572834014892578
    6. '   ' → logprob: -9.822834014892578
    7. ']:

' → logprob: -10.447834014892578
    8. ']:
' → logprob: -10.572834014892578
    9. '):
' → logprob: -10.697834014892578
    10. '       ' → logprob: -11.072834014892578

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09260260313749313
    2. 'right' → logprob: -2.467602491378784
    3. '   ' → logprob: -6.342602729797363
    4. ' right' → logprob: -6.467602729797363
    5. '	right' → logprob: -9.342602729797363
    6. ':
' → logprob: -9.967602729797363
    7. '+' → logprob: -9.967602729797363
    8. '      ' → logprob: -9.967602729797363
    9. '     ' → logprob: -10.592602729797363
    10. '	' → logprob: -10.842602729797363

Token 491: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00016718693950679153
    2. ' right' → logprob: -8.750166893005371
    3. '   ' → logprob: -12.000166893005371
    4. '	right' → logprob: -13.375166893005371
    5. '       ' → logprob: -13.875166893005371
    6. '           ' → logprob: -16.500167846679688
    7. '[right' → logprob: -17.875167846679688
    8. '+' → logprob: -18.125167846679688
    9. ',right' → logprob: -18.625167846679688
    10. '     ' → logprob: -19.375167846679688

Token 492: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.0590548703912646e-05
    2. 'len' → logprob: -10.500030517578125
    3. '+=' → logprob: -13.750030517578125
    4. 'Len' → logprob: -14.375030517578125
    5. '_length' → logprob: -15.375030517578125
    6. '=' → logprob: -15.500030517578125
    7. '=len' → logprob: -16.000030517578125
    8. ' +=' → logprob: -16.125030517578125
    9. '[len' → logprob: -16.500030517578125
    10. 'length' → logprob: -16.500030517578125

Token 493: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003181159496307373
    2. ' +=' → logprob: -5.753180980682373
    3. '=' → logprob: -12.753181457519531
    4. ']+=' → logprob: -14.628181457519531
    5. '   ' → logprob: -16.12818145751953
    6. '+' → logprob: -17.87818145751953
    7. ' ' → logprob: -18.75318145751953
    8. '+=(' → logprob: -18.87818145751953
    9. '	' → logprob: -19.12818145751953
    10. '       ' → logprob: -19.75318145751953

Token 494: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -5.860340752406046e-05
    2. ' right' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.5000581741333
    4. '	right' → logprob: -19.750059127807617
    5. ' ' → logprob: -20.375059127807617
    6. '[right' → logprob: -21.125059127807617
    7. '(right' → logprob: -21.250059127807617
    8. 'left' → logprob: -21.875059127807617
    9. '  ' → logprob: -22.000059127807617
    10. 'r' → logprob: -22.500059127807617

Token 495: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.500000953674316
    3. '[right' → logprob: -18.875
    4. '[
' → logprob: -19.125
    5. ' [' → logprob: -19.125
    6. '[r' → logprob: -19.25
    7. '[j' → logprob: -19.25
    8. 'i' → logprob: -19.5
    9. '
' → logprob: -20.0
    10. '+' → logprob: -20.125

Token 496: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026097889989614487
    2. 'i' → logprob: -4.026097774505615
    3. '[i' → logprob: -4.901097774505615
    4. '+i' → logprob: -7.901097774505615
    5. ']+' → logprob: -10.651098251342773
    6. ' +' → logprob: -10.901098251342773
    7. ']' → logprob: -11.026098251342773
    8. '1' → logprob: -11.401098251342773
    9. '```' → logprob: -11.401098251342773
    10. '2' → logprob: -11.901098251342773

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08912386745214462
    2. 'i' → logprob: -2.4641239643096924
    3. '+' → logprob: -9.214123725891113
    4. '[i' → logprob: -10.214123725891113
    5. ' i' → logprob: -10.839123725891113
    6. '(i' → logprob: -11.464123725891113
    7. '0' → logprob: -11.964123725891113
    8. '2' → logprob: -12.339123725891113
    9. '+i' → logprob: -12.839123725891113
    10. '```' → logprob: -13.214123725891113

Token 498: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.93448489275761e-05
    2. ' ]' → logprob: -10.625079154968262
    3. '<|end|>' → logprob: -11.125079154968262
    4. '   ' → logprob: -11.250079154968262
    5. ']
' → logprob: -11.500079154968262
    6. '[' → logprob: -11.750079154968262
    7. '}' → logprob: -13.000079154968262
    8. '```' → logprob: -13.500079154968262
    9. ']

' → logprob: -13.625079154968262
    10. ')' → logprob: -13.875079154968262

Token 499: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7143611907958984
    2. '   ' → logprob: -0.9643611907958984
    3. 'max' → logprob: -2.2143611907958984
    4. '
' → logprob: -4.214361190795898
    5. ' ans' → logprob: -6.839361190795898
    6. 'temp' → logprob: -6.964361190795898
    7. '	ans' → logprob: -7.089361190795898
    8. '    
' → logprob: -7.214361190795898
    9. 'current' → logprob: -7.589361190795898
    10. 'answer' → logprob: -8.089361190795898

Token 500: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25435739755630493
    2. 'ans' → logprob: -1.5043573379516602
    3. '   ' → logprob: -6.37935733795166
    4. 'temp' → logprob: -7.87935733795166
    5. 'current' → logprob: -9.25435733795166
    6. 'res' → logprob: -9.50435733795166
    7. 'tmp' → logprob: -9.87935733795166
    8. ' max' → logprob: -10.75435733795166
    9. 'answer' → logprob: -10.75435733795166
    10. 'candidate' → logprob: -11.00435733795166

Token 501: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.695365309715271
    2. 'max' → logprob: -0.695365309715271
    3. ' max' → logprob: -7.6953654289245605
    4. 'current' → logprob: -7.9453654289245605
    5. 'res' → logprob: -8.070364952087402
    6. 'temp' → logprob: -8.320364952087402
    7. 'candidate' → logprob: -8.445364952087402
    8. '   ' → logprob: -8.570364952087402
    9. ' ans' → logprob: -8.570364952087402
    10. 'total' → logprob: -9.820364952087402

Token 502: ' combine' (ID: 21700)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32576143741607666
    2. 'max' → logprob: -2.325761318206787
    3. 'ans' → logprob: -2.950761318206787
    4. '
' → logprob: -3.450761318206787
    5. 'len' → logprob: -3.825761318206787
    6. '#' → logprob: -4.200761318206787
    7. '_ans' → logprob: -4.325761318206787
    8. '=max' → logprob: -4.950761318206787
    9. '=' → logprob: -5.200761318206787
    10. ' ans' → logprob: -5.325761318206787

Token 503: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.607842743396759
    2. '
' → logprob: -1.7328426837921143
    3. 'ans' → logprob: -1.7328426837921143
    4. ' ans' → logprob: -3.2328426837921143
    5. 'total' → logprob: -3.8578426837921143
    6. 'max' → logprob: -3.9828426837921143
    7. '    
' → logprob: -5.482842922210693
    8. ' max' → logprob: -5.607842922210693
    9. ' total' → logprob: -6.107842922210693
    10. 'temp' → logprob: -6.232842922210693

Token 504: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5890312790870667
    2. '   ' → logprob: -1.2140312194824219
    3. 'max' → logprob: -2.464031219482422
    4. ' ans' → logprob: -3.714031219482422
    5. ' max' → logprob: -3.964031219482422
    6. 'temp' → logprob: -4.464031219482422
    7. 'current' → logprob: -6.089031219482422
    8. '
' → logprob: -6.714031219482422
    9. ' temp' → logprob: -6.964031219482422
    10. 'tmp' → logprob: -7.214031219482422

Token 505: ' total' (ID: 3609)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03880687430500984
    2. 'ans' → logprob: -3.288806915283203
    3. '   ' → logprob: -7.663806915283203
    4. ' max' → logprob: -9.163806915283203
    5. 'current' → logprob: -9.538806915283203
    6. 'temp' → logprob: -9.788806915283203
    7. 'tmp' → logprob: -10.788806915283203
    8. 'candidate' → logprob: -11.413806915283203
    9. 'total' (adapté à ' total') → logprob: -11.913806915283203
    10. 'new' → logprob: -12.538806915283203

Token 506: ' =' (ID: 314)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.018595628440380096
    2. '=' → logprob: -4.5185956954956055
    3. '_length' → logprob: -5.3935956954956055
    4. ' =' → logprob: -6.1435956954956055
    5. '_' → logprob: -7.1435956954956055
    6. '=len' → logprob: -10.643595695495605
    7. 'len' → logprob: -12.643595695495605
    8. '=_' → logprob: -13.018595695495605
    9. '_=' → logprob: -13.268595695495605
    10. '_l' → logprob: -13.518595695495605

Token 507: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.001929228543303907
    2. ' left' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.50192928314209
    4. '	left' → logprob: -16.501928329467773
    5. '(left' → logprob: -18.376928329467773
    6. ' ' → logprob: -18.751928329467773
    7. '[left' → logprob: -19.001928329467773
    8. '_left' → logprob: -20.751928329467773
    9. '左' → logprob: -20.751928329467773
    10. '  ' → logprob: -20.876928329467773

Token 508: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -15.375
    3. '_' → logprob: -16.875
    4. '_length' → logprob: -17.125
    5. '[i' → logprob: -17.625
    6. '_LEN' → logprob: -18.0
    7. '[len' → logprob: -18.0
    8. '_le' → logprob: -18.625
    9. '[_' → logprob: -18.75
    10. '_l' → logprob: -19.0

Token 509: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31330788135528564
    2. ' +' → logprob: -1.3133078813552856
    3. '<|end|>' → logprob: -10.438307762145996
    4. '+
' → logprob: -11.938307762145996
    5. ' +
' → logprob: -12.938307762145996
    6. '   ' → logprob: -12.938307762145996
    7. '<|end|>' → logprob: -13.688307762145996
    8. '+#' → logprob: -13.688307762145996
    9. '+r' → logprob: -14.438307762145996
    10. ' ' → logprob: -14.438307762145996

Token 510: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0015023599844425917
    2. ' right' → logprob: -6.501502513885498
    3. '(right' → logprob: -17.501502990722656
    4. '	right' → logprob: -18.126502990722656
    5. '[right' → logprob: -18.751502990722656
    6. '
' → logprob: -19.251502990722656
    7. ',right' → logprob: -19.501502990722656
    8. 'r' → logprob: -20.501502990722656
    9. '   ' → logprob: -20.626502990722656
    10. '.right' → logprob: -21.126502990722656

Token 511: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -7.941850526549388e-06
    2. 'len' → logprob: -11.875007629394531
    3. 'Len' → logprob: -14.375007629394531
    4. '_LEN' → logprob: -15.875007629394531
    5. '_length' → logprob: -16.37500762939453
    6. '[len' → logprob: -17.00000762939453
    7. '```' → logprob: -17.12500762939453
    8. '[-' → logprob: -17.25000762939453
    9. '_l' → logprob: -17.75000762939453
    10. '-' → logprob: -18.25000762939453

Token 512: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4235571324825287
    2. ' -' → logprob: -1.673557162284851
    3. '   ' → logprob: -1.923557162284851
    4. ' if' → logprob: -4.923557281494141
    5. '
' → logprob: -5.923557281494141
    6. ' ' → logprob: -8.17355728149414
    7. '-max' → logprob: -8.17355728149414
    8. 'if' → logprob: -8.29855728149414
    9. 'max' → logprob: -8.67355728149414
    10. ' max' → logprob: -8.92355728149414

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '   ' → logprob: -20.625
    4. '۱' → logprob: -22.25
    5. '１' → logprob: -22.25
    6. '```' → logprob: -22.5
    7. '
' → logprob: -23.125
    8. '১' → logprob: -23.125
    9. '१' → logprob: -23.125
    10. '  ' → logprob: -24.5

Token 514: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002827700227499008
    2. '
' → logprob: -6.1278276443481445
    3. ' if' → logprob: -8.127827644348145
    4. 'if' → logprob: -9.127827644348145
    5. ',' → logprob: -9.502827644348145
    6. 'ans' → logprob: -9.752827644348145
    7. '    
' → logprob: -9.877827644348145
    8. 'max' → logprob: -10.627827644348145
    9. ' ans' → logprob: -11.252827644348145
    10. '
' → logprob: -12.002827644348145

Token 515: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8279208540916443
    2. '
' → logprob: -1.327920913696289
    3. 'if' → logprob: -1.952920913696289
    4. ' if' → logprob: -2.077920913696289
    5. 'ans' → logprob: -3.702920913696289
    6. 'max' → logprob: -5.702920913696289
    7. '    
' → logprob: -7.077920913696289
    8. ' ans' → logprob: -7.202920913696289
    9. ')' → logprob: -8.077920913696289
    10. ',' → logprob: -8.452920913696289

Token 516: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.022849280387163162
    2. 'max' → logprob: -4.147849082946777
    3. 'ans' → logprob: -5.272849082946777
    4. '
' → logprob: -7.022849082946777
    5. ' if' → logprob: -7.397849082946777
    6. '   ' → logprob: -8.772849082946777
    7. '    
' → logprob: -13.522849082946777
    8. '
' → logprob: -14.522849082946777
    9. ' max' → logprob: -14.647849082946777
    10. 'answer' → logprob: -14.897849082946777

Token 517: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.16023053228855133
    2. 'total' → logprob: -1.9102305173873901
    3. '	total' → logprob: -12.16023063659668
    4. '(total' → logprob: -14.03523063659668
    5. '$total' → logprob: -16.03523063659668
    6. 'Total' → logprob: -16.53523063659668
    7. '_total' → logprob: -17.03523063659668
    8. ' totale' → logprob: -17.16023063659668
    9. ' ' → logprob: -17.66023063659668
    10. ' tota' → logprob: -18.16023063659668

Token 518: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931856274604797
    2. ' >' → logprob: -0.6931856274604797
    3. ' ' → logprob: -10.318185806274414
    4. ')' → logprob: -12.943185806274414
    5. ' ' → logprob: -13.568185806274414
    6. '   ' → logprob: -15.193185806274414
    7. ' >
' → logprob: -15.318185806274414
    8. '  ' → logprob: -15.443185806274414
    9. ')>' → logprob: -15.568185806274414
    10. 'max' → logprob: -15.693185806274414

Token 519: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00691937655210495
    2. ' max' → logprob: -5.0069193840026855
    3. 'ans' → logprob: -8.506918907165527
    4. ' ans' → logprob: -13.256918907165527
    5. '	max' → logprob: -16.756919860839844
    6. '   ' → logprob: -17.631919860839844
    7. 'answer' → logprob: -18.381919860839844
    8. ' ' → logprob: -18.881919860839844
    9. '(max' → logprob: -19.006919860839844
    10. '=max' → logprob: -19.131919860839844

Token 520: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.75
    3. 'len' → logprob: -17.125
    4. '_length' → logprob: -17.875
    5. '_ans' → logprob: -18.0
    6. '_val' → logprob: -18.625
    7. '_LEN' → logprob: -19.375
    8. 'Len' → logprob: -19.5
    9. '_l' → logprob: -20.125
    10. '_max' → logprob: -20.625

Token 521: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038311269134283066
    2. ':
' → logprob: -3.288311243057251
    3. '=' → logprob: -9.288311004638672
    4. '   ' → logprob: -9.788311004638672
    5. '=max' → logprob: -9.913311004638672
    6. ':max' → logprob: -10.163311004638672
    7. 'max' → logprob: -11.288311004638672
    8. ' =' → logprob: -12.663311004638672
    9. '):
' → logprob: -12.788311004638672
    10. '[max' → logprob: -12.913311004638672

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014357770793139935
    2. '   ' → logprob: -4.639357566833496
    3. 'max' → logprob: -5.764357566833496
    4. ' max' → logprob: -6.639357566833496
    5. '	max' → logprob: -9.639357566833496
    6. '
' → logprob: -9.764357566833496
    7. '```' → logprob: -11.889357566833496
    8. ',max' → logprob: -12.889357566833496
    9. '(max' → logprob: -13.139357566833496
    10. '           ' → logprob: -13.139357566833496

Token 523: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -3.3213025744771585e-05
    2. ' max' → logprob: -11.250033378601074
    3. '   ' → logprob: -11.500033378601074
    4. '       ' → logprob: -11.875033378601074
    5. '
' → logprob: -12.875033378601074
    6. '	max' → logprob: -15.125033378601074
    7. '           ' → logprob: -16.375032424926758
    8. '_max' → logprob: -17.000032424926758
    9. '```' → logprob: -18.125032424926758
    10. '        
' → logprob: -19.000032424926758

Token 524: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. '_' → logprob: -17.5
    3. '_length' → logprob: -18.625
    4. '_l' → logprob: -18.75
    5. '_LEN' → logprob: -18.75
    6. 'len' → logprob: -19.375
    7. '_le' → logprob: -20.0
    8. 'Len' → logprob: -20.375
    9. '_val' → logprob: -20.625
    10. '[len' → logprob: -21.375

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141352713108063
    2. ' =' → logprob: -1.7014135122299194
    3. '＝' → logprob: -15.82641315460205
    4. '=max' → logprob: -16.201414108276367
    5. '=
' → logprob: -18.201414108276367
    6. '.=' → logprob: -18.326414108276367
    7. '=

' → logprob: -18.451414108276367
    8. ' =
' → logprob: -18.951414108276367
    9. ' ' → logprob: -19.826414108276367
    10. '	' → logprob: -20.076414108276367

Token 526: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005233882926404476
    2. ' total' → logprob: -5.2552337646484375
    3. 'tot' → logprob: -17.880233764648438
    4. '	total' → logprob: -19.380233764648438
    5. 't' → logprob: -20.005233764648438
    6. 'to' → logprob: -20.130233764648438
    7. '(total' → logprob: -20.380233764648438
    8. ' tota' → logprob: -21.130233764648438
    9. '$total' → logprob: -21.505233764648438
    10. '_total' → logprob: -22.255233764648438

Token 527: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.65707261255011e-06
    2. ' print' → logprob: -12.000008583068848
    3. '
' → logprob: -13.000008583068848
    4. '```' → logprob: -15.875008583068848
    5. ')' → logprob: -17.250009536743164
    6. '<|end|>' → logprob: -19.500009536743164
    7. '#' → logprob: -20.000009536743164
    8. '
' → logprob: -20.125009536743164
    9. '  
' → logprob: -20.250009536743164
    10. ' 
' → logprob: -20.250009536743164

Token 528: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7372048862162046e-05
    2. ' print' → logprob: -10.875027656555176
    3. '<|end|>' → logprob: -12.375027656555176
    4. '
' → logprob: -13.250027656555176
    5. '```' → logprob: -13.250027656555176
    6. ')' → logprob: -15.000027656555176
    7. 'max' → logprob: -15.625027656555176
    8. '#' → logprob: -16.37502670288086
    9. '#print' → logprob: -17.50002670288086
    10. '(print' → logprob: -18.00002670288086

Token 529: ' Pour' (ID: 13931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '```' → logprob: -22.0
    4. '#print' → logprob: -22.125
    5. '
' → logprob: -22.375
    6. '.print' → logprob: -25.125
    7. 'pr' → logprob: -25.25
    8. 'printf' → logprob: -25.375
    9. '-print' → logprob: -25.75
    10. 'import' → logprob: -25.875

Token 530: ' invers' (ID: 38721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05547352135181427
    2. ' print' → logprob: -2.930473566055298
    3. ' i' → logprob: -8.305473327636719
    4. 'i' → logprob: -8.305473327636719
    5. 'pr' → logprob: -10.055473327636719
    6. 'sys' → logprob: -11.055473327636719
    7. 'pri' → logprob: -12.180473327636719
    8. 'prin' → logprob: -12.305473327636719
    9. 'p' → logprob: -12.805473327636719
    10. ' sys' → logprob: -12.930473327636719

Token 531: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.47717997431755066
    2. 'ir' → logprob: -1.352180004119873
    3. 'ion' → logprob: -2.352180004119873
    4. 's' → logprob: -4.727180004119873
    5. '#' → logprob: -5.102180004119873
    6. 'e' → logprob: -5.852180004119873
    7. 'i' → logprob: -5.977180004119873
    8. 't' → logprob: -6.852180004119873
    9. 'tion' → logprob: -7.477180004119873
    10. 'tir' → logprob: -7.602180004119873

Token 532: ' un' (ID: 537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.8444881536415778e-05
    2. ' print' → logprob: -10.875028610229492
    3. '
' → logprob: -12.125028610229492
    4. 'import' → logprob: -12.750028610229492
    5. ',' → logprob: -15.000028610229492
    6. '(print' → logprob: -15.375028610229492
    7. '```' → logprob: -15.625028610229492
    8. '#' → logprob: -15.875028610229492
    9. '(' → logprob: -16.250028610229492
    10. '#print' → logprob: -16.250028610229492

Token 533: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.4027389883995056
    2. ' segment' → logprob: -1.1527390480041504
    3. 'i' → logprob: -4.65273904800415
    4. ' i' → logprob: -5.77773904800415
    5. 'e' → logprob: -7.52773904800415
    6. 'élé' → logprob: -7.65273904800415
    7. 'interval' → logprob: -7.90273904800415
    8. '#' → logprob: -8.402738571166992
    9. ' morceau' → logprob: -8.777738571166992
    10. ' interval' → logprob: -8.902738571166992

Token 534: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24550388753414154
    2. 'for' → logprob: -1.7455039024353027
    3. '#' → logprob: -3.3705039024353027
    4. ',' → logprob: -6.370503902435303
    5. ' for' → logprob: -6.620503902435303
    6. 'length' → logprob: -6.620503902435303
    7. '[' → logprob: -6.995503902435303
    8. 'l' → logprob: -7.245503902435303
    9. '...' → logprob: -7.620503902435303
    10. '=' → logprob: -7.995503902435303

Token 535: ' plus' (ID: 2932)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.057317059487104416
    2. 'length' → logprob: -3.307317018508911
    3. 'tail' → logprob: -4.18231725692749
    4. ' longueur' → logprob: -6.93231725692749
    5. '1' → logprob: -7.05731725692749
    6. 'plus' → logprob: -7.43231725692749
    7. 'code' → logprob: -8.307316780090332
    8. '#' → logprob: -8.307316780090332
    9. 'leng' → logprob: -9.182316780090332
    10. 'l' → logprob: -9.182316780090332

Token 536: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1479518562555313
    2. 'ieurs' → logprob: -2.27295184135437
    3. 'long' → logprob: -4.022952079772949
    4. '```' → logprob: -5.772952079772949
    5. ' ' → logprob: -5.897952079772949
    6. '2' → logprob: -6.272952079772949
    7. 'import' → logprob: -6.647952079772949
    8. 'au' → logprob: -6.647952079772949
    9. ' longue' → logprob: -6.897952079772949
    10. '#' → logprob: -6.897952079772949

Token 537: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018812811467796564
    2. 'un' → logprob: -6.876881122589111
    3. ' ' → logprob: -7.626881122589111
    4. 'une' → logprob: -8.62688159942627
    5. 'length' → logprob: -9.75188159942627
    6. 'long' → logprob: -10.25188159942627
    7. '2' → logprob: -10.50188159942627
    8. '```' → logprob: -11.25188159942627
    9. 'one' → logprob: -11.37688159942627
    10. 'tail' → logprob: -11.75188159942627

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.281485836254433e-05
    2. 'un' → logprob: -10.375092506408691
    3. 'length' → logprob: -10.750092506408691
    4. ' ' → logprob: -11.000092506408691
    5. '```' → logprob: -12.125092506408691
    6. 'long' → logprob: -12.500092506408691
    7. 'une' → logprob: -12.500092506408691
    8. '0' → logprob: -12.625092506408691
    9. '#' → logprob: -13.000092506408691
    10. 'one' → logprob: -13.625092506408691

Token 539: ' élément' (ID: 99627)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8301891088485718
    2. '#' → logprob: -1.3301891088485718
    3. ':' → logprob: -1.7051891088485718
    4. ',' → logprob: -3.2051892280578613
    5. ' for' → logprob: -3.5801892280578613
    6. '.' → logprob: -3.7051892280578613
    7. '...' → logprob: -4.580189228057861
    8. 'i' → logprob: -5.830189228057861
    9. 'print' → logprob: -6.205189228057861
    10. '[' → logprob: -6.580189228057861

Token 540: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14526836574077606
    2. '#' → logprob: -2.895268440246582
    3. ' for' → logprob: -3.020268440246582
    4. '
' → logprob: -4.145268440246582
    5. ',' → logprob: -4.520268440246582
    6. '<|end|>' → logprob: -5.895268440246582
    7. '<|end|>' → logprob: -7.770268440246582
    8. ':' → logprob: -7.895268440246582
    9. ',
' → logprob: -8.270268440246582
    10. ';' → logprob: -8.895268440246582

Token 541: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033534806221723557
    2. '#' → logprob: -3.7835347652435303
    3. 'for' → logprob: -4.783535003662109
    4. 'pass' → logprob: -6.408535003662109
    5. '#print' → logprob: -9.65853500366211
    6. '
' → logprob: -10.03353500366211
    7. '```' → logprob: -10.15853500366211
    8. ' for' → logprob: -10.40853500366211
    9. ' print' → logprob: -10.40853500366211
    10. '   ' → logprob: -12.28353500366211

Token 542: ' maximum' (ID: 10562)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7605709433555603
    2. 'for' → logprob: -0.7605709433555603
    3. 'pass' → logprob: -3.135571002960205
    4. ' for' → logprob: -4.760571002960205
    5. ' code' → logprob: -5.385571002960205
    6. 'print' → logprob: -5.510571002960205
    7. 'code' → logprob: -6.010571002960205
    8. '...' → logprob: -7.135571002960205
    9. ' #' → logprob: -8.010570526123047
    10. '```' → logprob: -8.260570526123047

Token 543: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06149788200855255
    2. '=' → logprob: -3.186497926712036
    3. ' =' → logprob: -4.686497688293457
    4. '#' → logprob: -5.186497688293457
    5. 'for' → logprob: -6.811497688293457
    6. '=max' → logprob: -7.436497688293457
    7. '+=' → logprob: -7.561497688293457
    8. ' print' → logprob: -8.436497688293457
    9. '#print' → logprob: -8.436497688293457
    10. 'possible' → logprob: -8.686497688293457

Token 544: ' atteint' (ID: 104876)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01026182435452938
    2. ' max' → logprob: -5.2602620124816895
    3. 'au' → logprob: -6.2602620124816895
    4. ' au' → logprob: -6.6352620124816895
    5. 'N' → logprob: -6.8852620124816895
    6. 'min' → logprob: -7.7602620124816895
    7. 'ans' → logprob: -8.635261535644531
    8. '   ' → logprob: -10.135261535644531
    9. ' N' → logprob: -10.135261535644531
    10. 'left' → logprob: -11.260261535644531

Token 545: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017386233957950026
    2. ' print' → logprob: -9.000173568725586
    3. '#' → logprob: -10.500173568725586
    4. '#print' → logprob: -11.500173568725586
    5. '```' → logprob: -12.250173568725586
    6. 'for' → logprob: -13.000173568725586
    7. 'import' → logprob: -13.125173568725586
    8. '
' → logprob: -14.125173568725586
    9. '#
' → logprob: -14.125173568725586
    10. 'par' → logprob: -14.375173568725586

Token 546: ' invers' (ID: 38721)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01407488714903593
    2. 'invert' → logprob: -5.139074802398682
    3. ' invers' → logprob: -5.889074802398682
    4. 'inverse' → logprob: -6.264074802398682
    5. 'change' → logprob: -6.889074802398682
    6. '```' → logprob: -7.139074802398682
    7. 'altern' → logprob: -7.764074802398682
    8. '1' → logprob: -8.76407527923584
    9. 'inv' → logprob: -9.01407527923584
    10. 'mod' → logprob: -9.26407527923584

Token 547: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.030871279537677765
    2. 's' → logprob: -4.030871391296387
    3. 'er' → logprob: -5.905871391296387
    4. '#' → logprob: -6.655871391296387
    5. 'çant' → logprob: -6.780871391296387
    6. 'vant' → logprob: -7.155871391296387
    7. 'ert' → logprob: -7.280871391296387
    8. 'issant' → logprob: -7.655871391296387
    9. 'rt' → logprob: -8.030871391296387
    10. 'ser' → logprob: -8.030871391296387

Token 548: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.09568505734205246
    2. 'une' → logprob: -2.8456850051879883
    3. 'a' → logprob: -4.220685005187988
    4. ' un' → logprob: -4.970685005187988
    5. 'just' → logprob: -5.595685005187988
    6. 'A' → logprob: -6.595685005187988
    7. '<|end|>' → logprob: -6.595685005187988
    8. 'le' → logprob: -6.845685005187988
    9. 'segment' → logprob: -7.595685005187988
    10. '```' → logprob: -7.720685005187988

Token 549: ' seul' (ID: 33041)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.00737826619297266
    2. 'se' → logprob: -5.632378101348877
    3. 'unique' → logprob: -6.382378101348877
    4. 'élé' → logprob: -7.382378101348877
    5. 'interval' → logprob: -7.757378101348877
    6. ' segment' → logprob: -8.382378578186035
    7. 'single' → logprob: -8.382378578186035
    8. 's' → logprob: -8.882378578186035
    9. '```' → logprob: -9.382378578186035
    10. 'sub' → logprob: -9.507378578186035

Token 550: ' élément' (ID: 99627)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.372294698550832e-06
    2. '```' → logprob: -12.500009536743164
    3. ' print' → logprob: -12.750009536743164
    4. '#' → logprob: -13.750009536743164
    5. 'segment' → logprob: -14.375009536743164
    6. 'element' → logprob: -14.750009536743164
    7. 'pr' → logprob: -15.500009536743164
    8. '
' → logprob: -16.500009536743164
    9. 'élé' → logprob: -16.500009536743164
    10. 'for' → logprob: -17.000009536743164

Token 551: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020973898062948138
    2. '
' → logprob: -8.50020980834961
    3. ' print' → logprob: -12.12520980834961
    4. '

' → logprob: -15.37520980834961
    5. ')
' → logprob: -15.50020980834961
    6. '```' → logprob: -15.62520980834961
    7. ')' → logprob: -17.37520980834961
    8. '#print' → logprob: -17.50020980834961
    9. '
' → logprob: -17.75020980834961
    10. '  
' → logprob: -18.00020980834961

Token 552: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.475756973028183
    2. 'A' → logprob: -1.7257570028305054
    3. 'val' → logprob: -2.850756883621216
    4. 'l' → logprob: -2.975756883621216
    5. 'plus' → logprob: -3.225756883621216
    6. 'altern' → logprob: -4.100757122039795
    7. 'type' → logprob: -4.600757122039795
    8. 'une' → logprob: -5.350757122039795
    9. '1' → logprob: -5.475757122039795
    10. 'chaine' → logprob: -5.725757122039795

Token 553: ' zone' (ID: 15070)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.5098305940628052
    2. 'sequence' → logprob: -1.8848305940628052
    3. 's' → logprob: -2.2598304748535156
    4. 'liste' → logprob: -2.6348304748535156
    5. 'suite' → logprob: -3.1348304748535156
    6. 'table' → logprob: -5.009830474853516
    7. 'array' → logprob: -5.259830474853516
    8. 'chaine' → logprob: -5.384830474853516
    9. 'plus' → logprob: -5.759830474853516
    10. 'altern' → logprob: -6.009830474853516

Token 554: ' où' (ID: 15113)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.20734242349863e-05
    2. '
' → logprob: -9.625072479248047
    3. ' print' → logprob: -12.250072479248047
    4. '#' → logprob: -14.625072479248047
    5. '```' → logprob: -15.250072479248047
    6. '#print' → logprob: -16.000072479248047
    7. '
' → logprob: -16.250072479248047
    8. ')
' → logprob: -16.375072479248047
    9. '

' → logprob: -16.625072479248047
    10. '<|end|>' → logprob: -17.250072479248047

Token 555: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18116238713264465
    2. ' l' → logprob: -2.4311623573303223
    3. 'A' → logprob: -3.5561623573303223
    4. 'la' → logprob: -3.6811623573303223
    5. 'les' → logprob: -5.056162357330322
    6. ' la' → logprob: -5.681162357330322
    7. 'le' → logprob: -5.681162357330322
    8. 'altern' → logprob: -6.056162357330322
    9. ' A' → logprob: -6.181162357330322
    10. 'on' → logprob: -6.556162357330322

Token 556: ' sé' (ID: 7462)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.3288669288158417
    2. 'diff' → logprob: -2.203866958618164
    3. 'sé' → logprob: -2.828866958618164
    4. 'val' → logprob: -3.203866958618164
    5. 'sequence' → logprob: -3.828866958618164
    6. 's' → logprob: -4.578866958618164
    7. ' altern' → logprob: -5.203866958618164
    8. ' sé' → logprob: -5.453866958618164
    9. 'variation' → logprob: -5.578866958618164
    10. 'difference' → logprob: -5.828866958618164

Token 557: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0001875671005109325
    2. 'q' → logprob: -9.625187873840332
    3. 'rie' → logprob: -9.750187873840332
    4. 'qu' → logprob: -10.750187873840332
    5. 'quences' → logprob: -10.875187873840332
    6. 'QUENCE' → logprob: -11.500187873840332
    7. 'que' → logprob: -12.875187873840332
    8. '#' → logprob: -13.000187873840332
    9. '[' → logprob: -13.250187873840332
    10. 'quent' → logprob: -14.500187873840332

Token 558: ' est' (ID: 893)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.3737504184246063
    2. 'est' → logprob: -1.6237504482269287
    3. 'alter' → logprob: -3.3737504482269287
    4. '#' → logprob: -3.4987504482269287
    5. 'd' → logprob: -4.62375020980835
    6. ' altern' → logprob: -4.87375020980835
    7. 's' → logprob: -5.12375020980835
    8. 'alt' → logprob: -5.24875020980835
    9. 'left' → logprob: -5.62375020980835
    10. 'n' → logprob: -5.62375020980835

Token 559: ' mauvaise' (ID: 102856)
  Prédit: 'cass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cass' → logprob: -0.2638312578201294
    2. 'br' → logprob: -3.26383113861084
    3. ' cass' → logprob: -3.51383113861084
    4. 'la' → logprob: -3.51383113861084
    5. 'dé' → logprob: -3.76383113861084
    6. 'c' → logprob: -4.13883113861084
    7. 'bris' → logprob: -4.76383113861084
    8. 'moins' → logprob: -4.88883113861084
    9. 'altern' → logprob: -5.13883113861084
    10. 'frag' → logprob: -5.13883113861084

Token 560: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0564331205387134e-05
    2. ' print' → logprob: -12.00001049041748
    3. '
' → logprob: -12.37501049041748
    4. '```' → logprob: -16.000011444091797
    5. '#print' → logprob: -18.750011444091797
    6. '.print' → logprob: -19.375011444091797
    7. '(print' → logprob: -20.125011444091797
    8. '_print' → logprob: -20.500011444091797
    9. '<|end|>' → logprob: -21.125011444091797
    10. '-print' → logprob: -21.125011444091797

Token 561: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.747814349073451e-05
    2. ' print' → logprob: -11.000017166137695
    3. '
' → logprob: -15.000017166137695
    4. '<|end|>' → logprob: -15.250017166137695
    5. '```' → logprob: -16.250017166137695
    6. '#' → logprob: -16.875017166137695
    7. '#print' → logprob: -17.625017166137695
    8. '.print' → logprob: -18.125017166137695
    9. ')' → logprob: -18.875017166137695
    10. '_print' → logprob: -19.500017166137695

Token 562: ' Pour' (ID: 13931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. ' print' → logprob: -13.12500286102295
    3. '
' → logprob: -14.25000286102295
    4. '```' → logprob: -17.250001907348633
    5. '#print' → logprob: -19.625001907348633
    6. '.print' → logprob: -21.000001907348633
    7. '-print' → logprob: -21.625001907348633
    8. '(print' → logprob: -21.625001907348633
    9. '<|end|>' → logprob: -21.750001907348633
    10. '``' → logprob: -21.875001907348633

Token 563: ' vérifier' (ID: 93671)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2932865619659424
    2. 'print' → logprob: -1.4182865619659424
    3. ' i' → logprob: -5.168286323547363
    4. '_' → logprob: -6.168286323547363
    5. ' print' → logprob: -6.293286323547363
    6. 'l' → logprob: -6.918286323547363
    7. '_print' → logprob: -8.043286323547363
    8. 'final' → logprob: -8.543286323547363
    9. ' _' → logprob: -9.043286323547363
    10. '__' → logprob: -9.418286323547363

Token 564: ' cela' (ID: 17542)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1484931707382202
    2. ' i' → logprob: -1.3984931707382202
    3. ',' → logprob: -1.6484931707382202
    4. 'if' → logprob: -2.2734932899475098
    5. 'i' → logprob: -3.1484932899475098
    6. ' for' → logprob: -3.8984932899475098
    7. ' in' → logprob: -4.02349328994751
    8. 'for' → logprob: -4.14849328994751
    9. 'print' → logprob: -4.52349328994751
    10. '#' → logprob: -4.64849328994751

Token 565: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.33313363790512085
    2. ':' → logprob: -1.5831336975097656
    3. ',' → logprob: -2.5831336975097656
    4. ' print' → logprob: -6.833133697509766
    5. '#' → logprob: -7.583133697509766
    6. ':
' → logprob: -7.708133697509766
    7. 'for' → logprob: -9.083133697509766
    8. '.' → logprob: -9.583133697509766
    9. 'import' → logprob: -9.833133697509766
    10. 'if' → logprob: -10.833133697509766

Token 566: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05657193064689636
    2. 'for' → logprob: -3.5565719604492188
    3. '#' → logprob: -4.181571960449219
    4. 'pass' → logprob: -5.681571960449219
    5. ' print' → logprob: -6.306571960449219
    6. ' for' → logprob: -6.431571960449219
    7. 'on' → logprob: -6.556571960449219
    8. ' on' → logprob: -6.806571960449219
    9. 'import' → logprob: -8.056571960449219
    10. 'i' → logprob: -8.056571960449219

Token 567: ' vér' (ID: 42524)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.07360228896141052
    2. ' continue' → logprob: -2.9486021995544434
    3. 'for' → logprob: -4.573602199554443
    4. 'print' → logprob: -5.073602199554443
    5. 'range' → logprob: -7.573602199554443
    6. '#' → logprob: -7.823602199554443
    7. 'contin' → logprob: -7.948602199554443
    8. ' for' → logprob: -8.323602676391602
    9. 'break' → logprob: -8.823602676391602
    10. ' print' → logprob: -9.698602676391602

Token 568: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0028786994516849518
    2. 'if' → logprob: -6.002878665924072
    3. 'ife' → logprob: -8.37787914276123
    4. 'f' → logprob: -9.50287914276123
    5. 'ifi' → logprob: -10.75287914276123
    6. 'i' → logprob: -11.12787914276123
    7. 'ifiez' → logprob: -11.12787914276123
    8. 'ify' → logprob: -11.62787914276123
    9. 'ifié' → logprob: -11.87787914276123
    10. 'ifies' → logprob: -12.00287914276123

Token 569: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8153085708618164
    2. ' if' → logprob: -1.0653085708618164
    3. 'for' → logprob: -2.3153085708618164
    4. ' les' → logprob: -3.1903085708618164
    5. 'les' → logprob: -3.8153085708618164
    6. ' for' → logprob: -4.190308570861816
    7. ' si' → logprob: -4.940308570861816
    8. 'i' → logprob: -5.190308570861816
    9. ' i' → logprob: -5.315308570861816
    10. ' la' → logprob: -5.440308570861816

Token 570: ' joindre' (ID: 194638)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019945392850786448
    2. ' i' → logprob: -6.501994609832764
    3. 'j' → logprob: -7.626994609832764
    4. ' j' → logprob: -13.376994132995605
    5. '_i' → logprob: -14.501994132995605
    6. '```' → logprob: -14.876994132995605
    7. 'k' → logprob: -15.126994132995605
    8. 'idx' → logprob: -15.126994132995605
    9. '_' → logprob: -15.126994132995605
    10. 'l' → logprob: -15.626994132995605

Token 571: ' les' (ID: 1341)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.3485753536224365
    2. 'les' → logprob: -1.5985753536224365
    3. ' deux' → logprob: -1.5985753536224365
    4. ' les' → logprob: -1.8485753536224365
    5. ' la' → logprob: -3.3485753536224365
    6. 'une' → logprob: -3.7235753536224365
    7. 'la' → logprob: -4.098575592041016
    8. ' des' → logprob: -4.348575592041016
    9. '#' → logprob: -4.723575592041016
    10. 'des' → logprob: -4.723575592041016

Token 572: ' sé' (ID: 7462)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.8993269801139832
    2. 'segments' → logprob: -2.149327039718628
    3. 'positions' → logprob: -2.274327039718628
    4. 'i' → logprob: -2.649327039718628
    5. 'altern' → logprob: -2.899327039718628
    6. ' sequences' → logprob: -3.024327039718628
    7. ' sé' → logprob: -3.274327039718628
    8. ' positions' → logprob: -3.399327039718628
    9. 'indices' → logprob: -4.524326801300049
    10. ' points' → logprob: -4.524326801300049

Token 573: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.0001387009397149086
    2. 'quence' → logprob: -10.500138282775879
    3. 'q' → logprob: -10.625138282775879
    4. 'ries' → logprob: -10.625138282775879
    5. 'gments' → logprob: -10.875138282775879
    6. 'qu' → logprob: -11.750138282775879
    7. 'lect' → logprob: -12.000138282775879
    8. '#' → logprob: -12.375138282775879
    9. '```' → logprob: -12.500138282775879
    10. 'lections' → logprob: -13.000138282775879

Token 574: ' altern' (ID: 7310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9144343137741089
    2. 'print' → logprob: -1.0394343137741089
    3. '#' → logprob: -2.5394344329833984
    4. 'bad' → logprob: -2.6644344329833984
    5. 'left' → logprob: -3.5394344329833984
    6. 'import' → logprob: -4.039434432983398
    7. 'if' → logprob: -4.789434432983398
    8. 'i' → logprob: -4.789434432983398
    9. 'break' → logprob: -5.039434432983398
    10. ' for' → logprob: -5.664434432983398

Token 575: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.029839113354682922
    2. 'antes' → logprob: -4.904839038848877
    3. 'é' → logprob: -5.654839038848877
    4. 'es' → logprob: -5.904839038848877
    5. '[' → logprob: -6.154839038848877
    6. '#' → logprob: -6.154839038848877
    7. 'ated' → logprob: -6.279839038848877
    8. '_' → logprob: -6.404839038848877
    9. '   ' → logprob: -6.529839038848877
    10. 'ée' → logprob: -7.154839038848877

Token 576: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019579214858822525
    2. ' print' → logprob: -8.875195503234863
    3. '.' → logprob: -10.625195503234863
    4. '#' → logprob: -11.125195503234863
    5. 'for' → logprob: -11.875195503234863
    6. ',' → logprob: -12.875195503234863
    7. ':' → logprob: -13.500195503234863
    8. 'if' → logprob: -13.500195503234863
    9. '...' → logprob: -13.625195503234863
    10. '.print' → logprob: -14.625195503234863

Token 577: ' part' (ID: 997)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17346161603927612
    2. 'l' → logprob: -3.423461675643921
    3. 'g' → logprob: -3.673461675643921
    4. 'A' → logprob: -3.798461675643921
    5. 't' → logprob: -4.173461437225342
    6. 'la' → logprob: -4.423461437225342
    7. '[i' → logprob: -5.173461437225342
    8. 'de' → logprob: -5.298461437225342
    9. 'dro' → logprob: -5.423461437225342
    10. ' i' → logprob: -5.548461437225342

Token 578: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.12033661454916
    2. '#' → logprob: -2.4953365325927734
    3. ' et' → logprob: -4.870336532592773
    4. '```' → logprob: -5.370336532592773
    5. 'out' → logprob: -5.495336532592773
    6. 'i' → logprob: -5.495336532592773
    7. 'and' → logprob: -5.870336532592773
    8. 'ie' → logprob: -5.995336532592773
    9. 'à' → logprob: -7.245336532592773
    10. 't' → logprob: -7.370336532592773

Token 579: ' d' (ID: 272)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11748472601175308
    2. 'd' → logprob: -3.3674848079681396
    3. ''autre' → logprob: -3.3674848079681396
    4. 'la' → logprob: -4.8674845695495605
    5. 'une' → logprob: -5.4924845695495605
    6. 'à' → logprob: -5.4924845695495605
    7. '```' → logprob: -5.4924845695495605
    8. 'ailleurs' → logprob: -5.8674845695495605
    9. '#' → logprob: -6.2424845695495605
    10. ''une' → logprob: -6.7424845695495605

Token 580: ''autre' (ID: 52145)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20919018983840942
    2. 'eux' → logprob: -3.9591901302337646
    3. 'u' → logprob: -4.084190368652344
    4. 'ans' → logprob: -4.209190368652344
    5. ''ici' → logprob: -4.334190368652344
    6. ''autre' → logprob: -4.459190368652344
    7. 'au' → logprob: -4.459190368652344
    8. 'i' → logprob: -4.459190368652344
    9. ''un' → logprob: -4.584190368652344
    10. 'un' → logprob: -4.709190368652344

Token 581: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.4987974029500037e-05
    2. ' print' → logprob: -10.875024795532227
    3. '
' → logprob: -12.250024795532227
    4. '```' → logprob: -14.500024795532227
    5. '#print' → logprob: -15.500024795532227
    6. '#' → logprob: -15.500024795532227
    7. '.print' → logprob: -16.250024795532227
    8. ',' → logprob: -16.625024795532227
    9. '<|end|>' → logprob: -16.750024795532227
    10. 'for' → logprob: -17.000024795532227

Token 582: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.30658820271492004
    2. ''une' → logprob: -2.1815881729125977
    3. 'i' → logprob: -3.3065881729125977
    4. 'un' → logprob: -3.3065881729125977
    5. 'u' → logprob: -3.5565881729125977
    6. 'une' → logprob: -4.056588172912598
    7. ' un' → logprob: -4.306588172912598
    8. 'e' → logprob: -5.181588172912598
    9. ''' → logprob: -5.556588172912598
    10. ' une' → logprob: -6.306588172912598

Token 583: ' interval' (ID: 17116)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.26084327697753906
    2. 'segment' → logprob: -2.010843276977539
    3. 'i' → logprob: -2.510843276977539
    4. 'élé' → logprob: -6.135843276977539
    5. 'interval' → logprob: -6.385843276977539
    6. 'break' → logprob: -6.385843276977539
    7. 'pivot' → logprob: -6.385843276977539
    8. 'index' → logprob: -6.885843276977539
    9. 'm' → logprob: -7.385843276977539
    10. 'éc' → logprob: -7.510843276977539

Token 584: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5803370475769043
    2. 'i' → logprob: -1.9553370475769043
    3. '#' → logprob: -2.3303370475769043
    4. 'u' → logprob: -2.4553370475769043
    5. ']' → logprob: -3.3303370475769043
    6. 'es' → logprob: -3.4553370475769043
    7. ')' → logprob: -4.580337047576904
    8. '=' → logprob: -4.955337047576904
    9. ',' → logprob: -5.455337047576904
    10. '}' → logprob: -5.455337047576904

Token 585: ' où' (ID: 15113)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014958515763282776
    2. '#' → logprob: -5.014958381652832
    3. 'for' → logprob: -5.014958381652832
    4. '.' → logprob: -7.264958381652832
    5. ')' → logprob: -8.639958381652832
    6. ' for' → logprob: -8.889958381652832
    7. '<|end|>' → logprob: -9.139958381652832
    8. '
' → logprob: -9.514958381652832
    9. ',' → logprob: -9.514958381652832
    10. ' print' → logprob: -9.764958381652832

Token 586: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07112289220094681
    2. 'l' → logprob: -3.321122884750366
    3. 'la' → logprob: -3.946122884750366
    4. 'les' → logprob: -4.821123123168945
    5. ' A' → logprob: -6.446123123168945
    6. 'le' → logprob: -7.321123123168945
    7. 'on' → logprob: -7.571123123168945
    8. 'i' → logprob: -7.696123123168945
    9. 'une' → logprob: -7.821123123168945
    10. ' la' → logprob: -7.946123123168945

Token 587: ' sé' (ID: 7462)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.7068175077438354
    2. 'A' → logprob: -0.8318175077438354
    3. 'val' → logprob: -3.706817626953125
    4. ' altern' → logprob: -4.581817626953125
    5. 'sé' → logprob: -4.581817626953125
    6. ' A' → logprob: -5.081817626953125
    7. 'sequence' → logprob: -5.206817626953125
    8. '#' → logprob: -5.456817626953125
    9. 'alt' → logprob: -5.581817626953125
    10. 's' → logprob: -6.581817626953125

Token 588: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0018856844399124384
    2. 'quences' → logprob: -6.376885890960693
    3. 'qu' → logprob: -10.126885414123535
    4. 'quent' → logprob: -10.126885414123535
    5. 'q' → logprob: -10.626885414123535
    6. 'A' → logprob: -10.876885414123535
    7. 'QUENCE' → logprob: -10.876885414123535
    8. 'lect' → logprob: -11.876885414123535
    9. '#' → logprob: -12.001885414123535
    10. '```' → logprob: -12.251885414123535

Token 589: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7365898489952087
    2. 'n' → logprob: -1.6115899085998535
    3. 'ne' → logprob: -2.2365899085998535
    4. 'diff' → logprob: -2.7365899085998535
    5. 's' → logprob: -3.1115899085998535
    6. 'est' → logprob: -3.6115899085998535
    7. 'break' → logprob: -3.8615899085998535
    8. 'change' → logprob: -4.3615899085998535
    9. 'd' → logprob: -4.8615899085998535
    10. '#' → logprob: -4.9865899085998535

Token 590: ' cass' (ID: 40353)
  Prédit: 'cass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cass' → logprob: -0.8263618350028992
    2. 'br' → logprob: -1.076361894607544
    3. 'non' → logprob: -2.576361894607544
    4. 'bris' → logprob: -3.326361894607544
    5. 'break' → logprob: -3.576361894607544
    6. 'c' → logprob: -3.826361894607544
    7. 'fa' → logprob: -4.576361656188965
    8. '```' → logprob: -4.951361656188965
    9. 'rom' → logprob: -5.076361656188965
    10. 'incorrect' → logprob: -5.076361656188965

Token 591: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.014194305054843426
    2. 'é' → logprob: -4.264194488525391
    3. 'ee' → logprob: -10.63919448852539
    4. 'e' → logprob: -12.63919448852539
    5. 'urée' → logprob: -13.13919448852539
    6. 'è' → logprob: -15.13919448852539
    7. '#' → logprob: -15.38919448852539
    8. 'ées' → logprob: -15.38919448852539
    9. '�' → logprob: -15.51419448852539
    10. 'lée' → logprob: -15.76419448852539

Token 592: '.

' (ID: 364)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012417788384482265
    2. 'for' → logprob: -6.751241683959961
    3. 'if' → logprob: -11.001241683959961
    4. '#' → logprob: -11.251241683959961
    5. 'i' → logprob: -11.501241683959961
    6. '.' → logprob: -11.876241683959961
    7. ' print' → logprob: -11.876241683959961
    8. '
' → logprob: -12.251241683959961
    9. ')' → logprob: -12.376241683959961
    10. ' for' → logprob: -12.876241683959961

Token 593: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06308235973119736
    2. 'for' → logprob: -2.813082456588745
    3. 'if' → logprob: -7.813082218170166
    4. '#' → logprob: -8.063082695007324
    5. 'i' → logprob: -8.563082695007324
    6. ' for' → logprob: -9.813082695007324
    7. 'break' → logprob: -10.063082695007324
    8. 'prev' → logprob: -10.938082695007324
    9. 'ans' → logprob: -11.188082695007324
    10. ' print' → logprob: -11.438082695007324

Token 594: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. 'if' → logprob: -13.50000286102295
    3. 'for' → logprob: -13.87500286102295
    4. '#' → logprob: -15.87500286102295
    5. ' print' → logprob: -16.250001907348633
    6. '```' → logprob: -18.375001907348633
    7. '#print' → logprob: -18.375001907348633
    8. '
' → logprob: -19.375001907348633
    9. 'ans' → logprob: -19.875001907348633
    10. 'i' → logprob: -20.375001907348633

Token 595: ' essa' (ID: 19417)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09357023239135742
    2. 'continue' → logprob: -2.5935702323913574
    3. 'print' → logprob: -5.343570232391357
    4. ' for' → logprob: -5.468570232391357
    5. ' continue' → logprob: -5.718570232391357
    6. '#' → logprob: -6.718570232391357
    7. ' =' → logprob: -8.718570709228516
    8. '=' → logprob: -9.093570709228516
    9. 'contin' → logprob: -9.093570709228516
    10. '_continue' → logprob: -9.093570709228516

Token 596: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06798437237739563
    2. 'ye' → logprob: -2.9429843425750732
    3. 'ie' → logprob: -4.942984580993652
    4. 'yer' → logprob: -5.192984580993652
    5. 'i' → logprob: -9.942984580993652
    6. 'yre' → logprob: -9.942984580993652
    7. 'yage' → logprob: -10.192984580993652
    8. 'iye' → logprob: -10.442984580993652
    9. 'aye' → logprob: -10.442984580993652
    10. 'yme' → logprob: -10.942984580993652

Token 597: ' tous' (ID: 10688)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.045598726719617844
    2. ':' → logprob: -3.5455987453460693
    3. ' for' → logprob: -4.42059850692749
    4. ':
' → logprob: -5.92059850692749
    5. '   ' → logprob: -8.920598983764648
    6. ' de' → logprob: -9.045598983764648
    7. 'd' → logprob: -9.170598983764648
    8. '=' → logprob: -9.170598983764648
    9. 'i' → logprob: -9.170598983764648
    10. 'to' → logprob: -9.920598983764648

Token 598: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12436240911483765
    2. ' i' → logprob: -2.4993624687194824
    3. '(i' → logprob: -3.4993624687194824
    4. '(' → logprob: -6.249362468719482
    5. 'for' → logprob: -7.124362468719482
    6. '(N' → logprob: -7.999362468719482
    7. ' for' → logprob: -8.249361991882324
    8. '_i' → logprob: -8.499361991882324
    9. '_' → logprob: -8.624361991882324
    10. '   ' → logprob: -8.624361991882324

Token 599: ' cass' (ID: 40353)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019181682728230953
    2. ' i' → logprob: -6.626918315887451
    3. 'break' → logprob: -8.001917839050293
    4. 'for' → logprob: -9.376917839050293
    5. 'indices' → logprob: -10.251917839050293
    6. 'points' → logprob: -10.376917839050293
    7. 'b' → logprob: -10.376917839050293
    8. 'positions' → logprob: -11.001917839050293
    9. 'N' → logprob: -11.626917839050293
    10. '_i' → logprob: -12.251917839050293

Token 600: 'ures' (ID: 1609)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.02020993083715439
    2. 'ures' → logprob: -4.770209789276123
    3. 'é' → logprob: -5.020209789276123
    4. 'ées' → logprob: -5.770209789276123
    5. 'es' → logprob: -6.645209789276123
    6. 'e' → logprob: -9.145210266113281
    7. 'u' → logprob: -9.145210266113281
    8. 'eurs' → logprob: -9.520210266113281
    9. '```' → logprob: -9.770210266113281
    10. 'ée' → logprob: -10.645210266113281

Token 601: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018288150895386934
    2. ' for' → logprob: -6.876828670501709
    3. 'i' → logprob: -8.126829147338867
    4. 'break' → logprob: -8.126829147338867
    5. 'bad' → logprob: -9.251829147338867
    6. 'broken' → logprob: -9.626829147338867
    7. '
' → logprob: -11.126829147338867
    8. 'prev' → logprob: -12.501829147338867
    9. '[i' → logprob: -12.751829147338867
    10. ',' → logprob: -13.001829147338867

Token 602: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11584334820508957
    2. 'for' → logprob: -3.1158432960510254
    3. ' i' → logprob: -3.3658432960510254
    4. ')' → logprob: -3.8658432960510254
    5. ' for' → logprob: -4.865843296051025
    6. ')i' → logprob: -7.490843296051025
    7. 'range' → logprob: -7.740843296051025
    8. ')
' → logprob: -8.115843772888184
    9. ' range' → logprob: -9.115843772888184
    10. '),' → logprob: -9.490843772888184

Token 603: ' où' (ID: 15113)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7015811204910278
    2. ' in' → logprob: -0.7015811204910278
    3. ')' → logprob: -5.951581001281738
    4. '
' → logprob: -5.951581001281738
    5. '=' → logprob: -6.451581001281738
    6. ',' → logprob: -7.951581001281738
    7. 'for' → logprob: -8.076581001281738
    8. ' ' → logprob: -8.201581001281738
    9. '+' → logprob: -9.326581001281738
    10. ' for' → logprob: -9.451581001281738

Token 604: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.750777542591095
    2. 'i' → logprob: -0.750777542591095
    3. ' i' → logprob: -3.50077748298645
    4. ' A' → logprob: -4.500777721405029
    5. '1' → logprob: -4.625777721405029
    6. '0' → logprob: -5.500777721405029
    7. ' ' → logprob: -7.500777721405029
    8. 'N' → logprob: -8.250777244567871
    9. '(i' → logprob: -11.500777244567871
    10. ')' → logprob: -12.250777244567871

Token 605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.375
    3. '```' → logprob: -16.375
    4. '
' → logprob: -17.0
    5. '[' → logprob: -17.875
    6. '[
' → logprob: -19.375
    7. '[I' → logprob: -19.375
    8. '   ' → logprob: -19.875
    9. '(i' → logprob: -20.0
    10. 'import' → logprob: -20.125

Token 606: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008440529345534742
    2. ']!=' → logprob: -7.7508440017700195
    3. '[i' → logprob: -8.25084400177002
    4. '-' → logprob: -9.12584400177002
    5. ']==' → logprob: -10.50084400177002
    6. '[' → logprob: -12.12584400177002
    7. ' ]' → logprob: -12.50084400177002
    8. ']
' → logprob: -13.25084400177002
    9. 'i' → logprob: -13.75084400177002
    10. '
' → logprob: -13.87584400177002

Token 607: ' ==' (ID: 951)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7935096621513367
    2. '[i' → logprob: -0.9185096621513367
    3. '==' → logprob: -2.6685097217559814
    4. ']==' → logprob: -3.0435097217559814
    5. '!=' → logprob: -3.7935097217559814
    6. ']!=' → logprob: -5.043509483337402
    7. '[' → logprob: -6.918509483337402
    8. ' !=' → logprob: -7.293509483337402
    9. ' ==' → logprob: -7.543509483337402
    10. '[
' → logprob: -8.918509483337402

Token 608: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.306760805164231e-05
    2. ' A' → logprob: -11.25001335144043
    3. 'i' → logprob: -17.25001335144043
    4. '   ' → logprob: -17.50001335144043
    5. ' ' → logprob: -18.25001335144043
    6. '	A' → logprob: -18.37501335144043
    7. '
' → logprob: -18.62501335144043
    8. '```' → logprob: -18.87501335144043
    9. 'a' → logprob: -20.37501335144043
    10. ' ' → logprob: -20.37501335144043

Token 609: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05492369458079338
    2. 'i' → logprob: -2.9299237728118896
    3. '[
' → logprob: -10.679924011230469
    4. '[' → logprob: -12.679924011230469
    5. ' i' → logprob: -12.679924011230469
    6. ']' → logprob: -12.929924011230469
    7. '	i' → logprob: -13.054924011230469
    8. '```' → logprob: -13.554924011230469
    9. '(i' → logprob: -13.679924011230469
    10. '
' → logprob: -13.679924011230469

Token 610: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.23681184649467468
    2. ']' → logprob: -1.611811876296997
    3. '-' → logprob: -4.986811637878418
    4. '[i' → logprob: -5.861811637878418
    5. '+' → logprob: -7.361811637878418
    6. ']),' → logprob: -8.111811637878418
    7. ']==' → logprob: -8.486811637878418
    8. '],' → logprob: -8.861811637878418
    9. 'i' → logprob: -9.486811637878418
    10. '])
' → logprob: -9.611811637878418

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009375298395752907
    2. '-' → logprob: -4.884375095367432
    3. 'i' → logprob: -6.384375095367432
    4. '0' → logprob: -9.75937557220459
    5. ' ' → logprob: -11.38437557220459
    6. ']' → logprob: -12.63437557220459
    7. ' -' → logprob: -13.50937557220459
    8. '+' → logprob: -13.75937557220459
    9. '[i' → logprob: -13.75937557220459
    10. '(i' → logprob: -13.75937557220459

Token 612: '])
' (ID: 5169)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7806640863418579
    2. '])' → logprob: -1.655664086341858
    3. ']):' → logprob: -1.655664086341858
    4. ']):
' → logprob: -2.1556639671325684
    5. ']:' → logprob: -4.280663967132568
    6. ']:
' → logprob: -4.655663967132568
    7. '):
' → logprob: -4.780663967132568
    8. ')' → logprob: -5.530663967132568
    9. '):' → logprob: -5.655663967132568
    10. ']==' → logprob: -6.030663967132568

Token 613: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004374579060822725
    2. '
' → logprob: -5.8793745040893555
    3. ' for' → logprob: -6.6293745040893555
    4. 'i' → logprob: -8.879374504089355
    5. ':
' → logprob: -10.004374504089355
    6. ':' → logprob: -11.129374504089355
    7. ',
' → logprob: -11.379374504089355
    8. '```' → logprob: -11.504374504089355
    9. ',' → logprob: -12.504374504089355
    10. '.
' → logprob: -12.629374504089355

Token 614: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47407761216163635
    2. ' i' → logprob: -0.974077582359314
    3. ' in' → logprob: -15.224077224731445
    4. '	i' → logprob: -15.724077224731445
    5. '_i' → logprob: -16.849077224731445
    6. ' ' → logprob: -16.849077224731445
    7. ' range' → logprob: -17.224077224731445
    8. 'range' → logprob: -17.474077224731445
    9. 'in' → logprob: -18.599077224731445
    10. ',i' → logprob: -18.724077224731445

Token 615: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08897381275892258
    2. 'in' → logprob: -2.4639737606048584
    3. ' ' → logprob: -10.463973999023438
    4. 'range' → logprob: -13.338973999023438
    5. ',' → logprob: -13.588973999023438
    6. '	in' → logprob: -14.588973999023438
    7. '1' → logprob: -14.713973999023438
    8. '0' → logprob: -14.838973999023438
    9. '   ' → logprob: -15.088973999023438
    10. 'In' → logprob: -15.588973999023438

Token 616: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246407508850098
    2. ' range' → logprob: -3.7732462882995605
    3. '0' → logprob: -14.523246765136719
    4. '(range' → logprob: -15.398246765136719
    5. ' ' → logprob: -15.773246765136719
    6. 'in' → logprob: -18.89824676513672
    7. '	range' → logprob: -19.02324676513672
    8. ' in' → logprob: -19.02324676513672
    9. '   ' → logprob: -19.52324676513672
    10. '```' → logprob: -20.02324676513672

Token 617: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00043519894825294614
    2. '(' → logprob: -7.7504353523254395
    3. 'N' → logprob: -12.500434875488281
    4. '(n' → logprob: -14.875434875488281
    5. '1' → logprob: -15.375434875488281
    6. '(len' → logprob: -16.12543487548828
    7. '(
' → logprob: -16.50043487548828
    8. ' (' → logprob: -17.12543487548828
    9. ' ' → logprob: -18.12543487548828
    10. '	N' → logprob: -19.25043487548828

Token 618: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04871624708175659
    2. ' -' → logprob: -3.0487163066864014
    3. '):
' → logprob: -9.04871654510498
    4. '):' → logprob: -12.04871654510498
    5. '
' → logprob: -13.04871654510498
    6. ' ' → logprob: -13.67371654510498
    7. '   ' → logprob: -14.29871654510498
    8. ')' → logprob: -15.04871654510498
    9. '1' → logprob: -15.54871654510498
    10. '−' → logprob: -15.54871654510498

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.268254896393046e-05
    2. ' ' → logprob: -10.250082969665527
    3. 'N' → logprob: -10.750082969665527
    4. '-' → logprob: -11.250082969665527
    5. '
' → logprob: -11.500082969665527
    6. '2' → logprob: -14.250082969665527
    7. ')' → logprob: -14.625082969665527
    8. ' -' → logprob: -14.750082969665527
    9. '(N' → logprob: -14.750082969665527
    10. '   ' → logprob: -15.500082969665527

Token 620: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0034916196018457413
    2. '):' → logprob: -5.753491401672363
    3. '   ' → logprob: -9.003491401672363
    4. ' ):
' → logprob: -9.628491401672363
    5. '):
' → logprob: -10.003491401672363
    6. ':
' → logprob: -10.253491401672363
    7. ':' → logprob: -11.253491401672363
    8. ')' → logprob: -11.503491401672363
    9. '():
' → logprob: -12.503491401672363
    10. ' if' → logprob: -12.628491401672363

Token 621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001029471677611582
    2. ' if' → logprob: -9.250102996826172
    3. 'if' → logprob: -12.500102996826172
    4. '	if' → logprob: -13.375102996826172
    5. '   ' → logprob: -14.375102996826172
    6. '    
' → logprob: -14.500102996826172
    7. ',' → logprob: -15.625102996826172
    8. '
' → logprob: -15.875102996826172
    9. '<|end|>' → logprob: -16.625102996826172
    10. '```' → logprob: -17.125102996826172

Token 622: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2529186010360718
    2. '   ' → logprob: -1.5029186010360718
    3. ' if' → logprob: -7.002918720245361
    4. 'new' → logprob: -9.752918243408203
    5. '   ' → logprob: -12.377918243408203
    6. ' ' → logprob: -12.502918243408203
    7. 'left' → logprob: -12.502918243408203
    8. '#' → logprob: -13.127918243408203
    9. '	if' → logprob: -13.377918243408203
    10. '  ' → logprob: -14.002918243408203

Token 623: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015043864259496331
    2. ' A' → logprob: -6.501504421234131
    3. '   ' → logprob: -13.251503944396973
    4. '	A' → logprob: -15.751503944396973
    5. ' ' → logprob: -16.50150489807129
    6. '(A' → logprob: -18.50150489807129
    7. '  ' → logprob: -19.62650489807129
    8. 'a' → logprob: -21.00150489807129
    9. ' ' → logprob: -21.37650489807129
    10. '>A' → logprob: -21.37650489807129

Token 624: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.0
    3. 'A' → logprob: -16.625
    4. '[' → logprob: -16.75
    5. '==' → logprob: -17.5
    6. '[
' → logprob: -17.625
    7. '[A' → logprob: -17.625
    8. ' [' → logprob: -17.875
    9. 'i' → logprob: -18.5
    10. '   ' → logprob: -18.875

Token 625: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21314185857772827
    2. ']' → logprob: -2.713141918182373
    3. ']==' → logprob: -2.713141918182373
    4. ' ==' → logprob: -2.838141918182373
    5. '=' → logprob: -8.088141441345215
    6. ')==' → logprob: -8.588141441345215
    7. '[' → logprob: -9.463141441345215
    8. '==
' → logprob: -9.963141441345215
    9. ')' → logprob: -10.213141441345215
    10. ' ]' → logprob: -10.463141441345215

Token 626: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005251899361610413
    2. ' ==' → logprob: -5.255251884460449
    3. '==
' → logprob: -11.63025188446045
    4. '=' → logprob: -11.88025188446045
    5. ')==' → logprob: -14.00525188446045
    6. ']==' → logprob: -14.25525188446045
    7. '===' → logprob: -15.00525188446045
    8. 'A' → logprob: -15.50525188446045
    9. '[' → logprob: -16.255252838134766
    10. '#' → logprob: -16.630252838134766

Token 627: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0001234428636962548
    2. ' A' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.250123977661133
    4. ' ' → logprob: -18.250123977661133
    5. '	A' → logprob: -19.625123977661133
    6. '  ' → logprob: -20.250123977661133
    7. 'a' → logprob: -21.750123977661133
    8. '
' → logprob: -21.750123977661133
    9. '```' → logprob: -22.125123977661133
    10. '0' → logprob: -22.250123977661133

Token 628: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016623330884613097
    2. 'A' → logprob: -9.250165939331055
    3. 'i' → logprob: -9.750165939331055
    4. '[' → logprob: -11.750165939331055
    5. '[
' → logprob: -13.000165939331055
    6. '   ' → logprob: -14.750165939331055
    7. '```' → logprob: -15.125165939331055
    8. '[A' → logprob: -15.125165939331055
    9. '(i' → logprob: -15.375165939331055
    10. ']' → logprob: -15.750165939331055

Token 629: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013155525550246239
    2. 'i' → logprob: -4.763155460357666
    3. ']' → logprob: -6.513155460357666
    4. ']:' → logprob: -6.888155460357666
    5. ']:
' → logprob: -7.138155460357666
    6. '+' → logprob: -7.263155460357666
    7. '   ' → logprob: -8.138155937194824
    8. '#' → logprob: -10.263155937194824
    9. '```' → logprob: -10.263155937194824
    10. '[
' → logprob: -10.388155937194824

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.250006675720215
    3. '[i' → logprob: -14.375006675720215
    4. 'i' → logprob: -14.625006675720215
    5. '   ' → logprob: -15.750006675720215
    6. '```' → logprob: -16.5000057220459
    7. '0' → logprob: -17.1250057220459
    8. '
' → logprob: -18.2500057220459
    9. '  ' → logprob: -18.5000057220459
    10. ']' → logprob: -18.5000057220459

Token 631: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0562081336975098
    2. ':' → logprob: -1.1812081336975098
    3. '):
' → logprob: -1.4312081336975098
    4. ']:
' → logprob: -2.6812081336975098
    5. '   ' → logprob: -3.9312081336975098
    6. '):' → logprob: -5.18120813369751
    7. ']:' → logprob: -5.68120813369751
    8. ']' → logprob: -6.18120813369751
    9. '       ' → logprob: -6.43120813369751
    10. '==' → logprob: -6.55620813369751

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3871578574180603
    2. '   ' → logprob: -1.137157917022705
    3. '#' → logprob: -9.262157440185547
    4. ':' → logprob: -10.762157440185547
    5. '   ' → logprob: -10.762157440185547
    6. '```' → logprob: -10.762157440185547
    7. ' left' → logprob: -10.887157440185547
    8. 'left' → logprob: -10.887157440185547
    9. ':
' → logprob: -11.137157440185547
    10. ',' → logprob: -11.387157440185547

Token 633: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7586221098899841
    2. 'new' → logprob: -0.8836221098899841
    3. 'if' → logprob: -3.008622169494629
    4. '#' (adapté à ' #') → logprob: -3.133622169494629
    5. 'l' → logprob: -5.008622169494629
    6. 'max' → logprob: -5.133622169494629
    7. 'val' → logprob: -5.508622169494629
    8. '   ' → logprob: -6.008622169494629
    9. 'total' → logprob: -6.383622169494629
    10. 'j' → logprob: -6.633622169494629

Token 634: ' inversion' (ID: 70924)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.33838436007499695
    2. 'left' → logprob: -1.7133843898773193
    3. 'val' → logprob: -3.3383843898773193
    4. 'l' → logprob: -3.7133843898773193
    5. 'if' → logprob: -3.7133843898773193
    6. '#' → logprob: -4.58838415145874
    7. '       ' → logprob: -5.58838415145874
    8. 'j' → logprob: -5.96338415145874
    9. '   ' → logprob: -6.83838415145874
    10. 'max' → logprob: -7.08838415145874

Token 635: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6608627438545227
    2. ' =' → logprob: -1.160862684249878
    3. '=' → logprob: -2.535862684249878
    4. '_length' → logprob: -4.660862922668457
    5. '1' → logprob: -4.910862922668457
    6. 'left' → logprob: -5.160862922668457
    7. '#' → logprob: -5.285862922668457
    8. 'possible' → logprob: -5.285862922668457
    9. '_len' → logprob: -5.410862922668457
    10. 'length' → logprob: -5.410862922668457

Token 636: ' [' (ID: 723)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21730957925319672
    2. '2' → logprob: -2.0923094749450684
    3. '1' → logprob: -2.8423094749450684
    4. '[i' → logprob: -4.842309474945068
    5. 'A' → logprob: -5.467309474945068
    6. ' i' → logprob: -7.342309474945068
    7. '[' → logprob: -8.592309951782227
    8. '
' → logprob: -8.967309951782227
    9. '(i' → logprob: -8.967309951782227
    10. ' ' → logprob: -9.342309951782227

Token 637: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.7697225252486533e-06
    2. '
' → logprob: -12.625003814697266
    3. ' i' → logprob: -15.500003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '(i' → logprob: -16.875003814697266
    6. '[i' → logprob: -17.500003814697266
    7. ']' → logprob: -18.250003814697266
    8. '	i' → logprob: -18.625003814697266
    9. ',i' → logprob: -18.875003814697266
    10. '{i' → logprob: -19.000003814697266

Token 638: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7812761068344116
    2. ',' → logprob: -1.0312761068344116
    3. ',i' → logprob: -1.7812761068344116
    4. '+' → logprob: -4.781276226043701
    5. ']' → logprob: -5.656276226043701
    6. ' i' → logprob: -6.281276226043701
    7. '   ' → logprob: -6.531276226043701
    8. ':i' → logprob: -7.156276226043701
    9. ' ,' → logprob: -7.781276226043701
    10. '	i' → logprob: -8.781275749206543

Token 639: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0022866877261549234
    2. '1' → logprob: -6.127286911010742
    3. ' i' → logprob: -10.002286911010742
    4. '
' → logprob: -10.502286911010742
    5. '   ' → logprob: -11.627286911010742
    6. '(i' → logprob: -11.877286911010742
    7. ']' → logprob: -12.502286911010742
    8. 'j' → logprob: -13.252286911010742
    9. '2' → logprob: -14.002286911010742
    10. '	i' → logprob: -14.127286911010742

Token 640: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3597724139690399
    2. ',i' → logprob: -1.4847724437713623
    3. ']' → logprob: -2.6097724437713623
    4. ' ,' → logprob: -6.359772205352783
    5. ':i' → logprob: -9.359772682189941
    6. 'i' → logprob: -9.484772682189941
    7. ' i' → logprob: -10.859772682189941
    8. ']
' → logprob: -10.984772682189941
    9. ',N' → logprob: -10.984772682189941
    10. ' ]' → logprob: -11.234772682189941

Token 641: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012630375567823648
    2. ']' → logprob: -9.750125885009766
    3. '1' → logprob: -10.500125885009766
    4. '+
' → logprob: -11.250125885009766
    5. ' +' → logprob: -11.375125885009766
    6. '
' → logprob: -12.125125885009766
    7. '2' → logprob: -12.500125885009766
    8. '],' → logprob: -13.125125885009766
    9. ']+' → logprob: -14.125125885009766
    10. '+]' → logprob: -14.375125885009766

Token 642: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08999209851026535
    2. 'i' → logprob: -2.839992046356201
    3. ']' → logprob: -3.714992046356201
    4. '+' → logprob: -6.839992046356201
    5. '2' → logprob: -7.214992046356201
    6. 'N' → logprob: -7.339992046356201
    7. '0' → logprob: -8.33999252319336
    8. '
' → logprob: -8.83999252319336
    9. ']
' → logprob: -8.96499252319336
    10. ' i' → logprob: -9.46499252319336

Token 643: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012866636971011758
    2. ']
' → logprob: -6.876286506652832
    3. ']:' → logprob: -8.626286506652832
    4. ' ]' → logprob: -10.376286506652832
    5. ']:
' → logprob: -10.626286506652832
    6. ']

' → logprob: -12.001286506652832
    7. ']
' → logprob: -12.626286506652832
    8. '   ' → logprob: -13.126286506652832
    9. '+' → logprob: -13.376286506652832
    10. '       ' → logprob: -13.626286506652832

Token 644: ' déjà' (ID: 21229)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021081414073705673
    2. '   ' → logprob: -4.396081447601318
    3. ':' → logprob: -5.521081447601318
    4. '        
' → logprob: -6.521081447601318
    5. ',' → logprob: -7.271081447601318
    6. ')' → logprob: -7.271081447601318
    7. '
' → logprob: -7.396081447601318
    8. ':
' → logprob: -7.896081447601318
    9. '#' → logprob: -9.14608097076416
    10. ' =' → logprob: -9.77108097076416

Token 645: ' testé' (ID: 181173)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.536672055721283
    2. ' continue' → logprob: -1.4116721153259277
    3. 'continue' → logprob: -1.7866721153259277
    4. '	continue' → logprob: -6.161672115325928
    5. '           ' → logprob: -7.786672115325928
    6. ',' → logprob: -8.03667163848877
    7. ';' → logprob: -8.28667163848877
    8. 'contin' → logprob: -8.66167163848877
    9. '   ' → logprob: -8.78667163848877
    10. ' continues' → logprob: -8.91167163848877

Token 646: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031421820167452097
    2. 'continue' → logprob: -6.503142356872559
    3. ' continue' → logprob: -6.503142356872559
    4. ',' → logprob: -9.878142356872559
    5. '	continue' → logprob: -10.628142356872559
    6. '   ' → logprob: -11.253142356872559
    7. '	' → logprob: -11.503142356872559
    8. '<|end|>' → logprob: -11.628142356872559
    9. 'pass' → logprob: -12.128142356872559
    10. ' pass' → logprob: -12.378142356872559

Token 647: 'single' (ID: 29765)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.39788514375686646
    2. ' continue' → logprob: -1.1478850841522217
    3. 'pass' → logprob: -4.647885322570801
    4. ' pass' → logprob: -6.897885322570801
    5. ')' → logprob: -8.7728853225708
    6. '       ' → logprob: -9.0228853225708
    7. '   ' → logprob: -10.6478853225708
    8. ')
' → logprob: -10.8978853225708
    9. '	continue' → logprob: -11.5228853225708
    10. 'contin' → logprob: -11.7728853225708

Token 648: ' element' (ID: 3577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48961350321769714
    2. 'element' → logprob: -1.4896135330200195
    3. ']' → logprob: -2.3646135330200195
    4. 'élé' → logprob: -3.6146135330200195
    5. ' element' → logprob: -4.4896135330200195
    6. ' élément' → logprob: -5.1146135330200195
    7. '-element' → logprob: -5.4896135330200195
    8. 'i' → logprob: -5.4896135330200195
    9. 'lement' → logprob: -5.7396135330200195
    10. '+' → logprob: -5.8646135330200195

Token 649: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6784037351608276
    2. ')
' → logprob: -1.0534037351608276
    3. 'continue' → logprob: -2.928403854370117
    4. '       ' → logprob: -3.178403854370117
    5. ' continue' → logprob: -3.428403854370117
    6. '#' → logprob: -5.303403854370117
    7. '),' → logprob: -5.303403854370117
    8. '
' → logprob: -6.678403854370117
    9. ' )' → logprob: -7.178403854370117
    10. '   ' → logprob: -7.178403854370117

Token 650: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009419540292583406
    2. ' continue' → logprob: -7.750941753387451
    3. 'continue' → logprob: -8.25094223022461
    4. '	' → logprob: -9.00094223022461
    5. ',' → logprob: -10.00094223022461
    6. '<|end|>' → logprob: -10.25094223022461
    7. '   ' → logprob: -11.12594223022461
    8. '	continue' → logprob: -11.75094223022461
    9. '        
' → logprob: -11.75094223022461
    10. ' continues' → logprob: -12.75094223022461

Token 651: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7578257918357849
    2. 'continue' → logprob: -0.7578257918357849
    3. '#' (adapté à ' #') → logprob: -3.3828258514404297
    4. 'l' → logprob: -4.38282585144043
    5. 'left' → logprob: -4.88282585144043
    6. 'new' → logprob: -5.75782585144043
    7. ' continue' → logprob: -6.13282585144043
    8. 'if' → logprob: -7.13282585144043
    9. 'pass' → logprob: -7.25782585144043
    10. '   ' → logprob: -7.38282585144043

Token 652: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0192649364471436
    2. '#' → logprob: -1.1442649364471436
    3. 'continue' → logprob: -1.3942649364471436
    4. 'new' → logprob: -3.3942649364471436
    5. 'l' → logprob: -3.6442649364471436
    6. 'left' → logprob: -4.644265174865723
    7. ' continue' → logprob: -7.394265174865723
    8. 'val' → logprob: -7.769265174865723
    9. 'max' → logprob: -7.894265174865723
    10. '   ' → logprob: -8.019265174865723

Token 653: ' essa' (ID: 19417)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1573387384414673
    2. 'continue' → logprob: -1.2823387384414673
    3. 'try' → logprob: -2.0323386192321777
    4. '       ' → logprob: -2.2823386192321777
    5. 'pour' → logprob: -3.9073386192321777
    6. 'pe' → logprob: -3.9073386192321777
    7. 'for' → logprob: -4.157338619232178
    8. 'reg' → logprob: -4.282338619232178
    9. '   ' → logprob: -4.282338619232178
    10. ' continue' → logprob: -4.282338619232178

Token 654: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3539001941680908
    2. 'ye' → logprob: -1.2289001941680908
    3. 'ie' → logprob: -6.103899955749512
    4. 'yer' → logprob: -6.978899955749512
    5. 'aye' → logprob: -6.978899955749512
    6. 'yez' → logprob: -8.228899955749512
    7. 'yle' → logprob: -8.728899955749512
    8. 'i' → logprob: -9.103899955749512
    9. 'yage' → logprob: -9.353899955749512
    10. 'eye' → logprob: -9.603899955749512

Token 655: ' inversion' (ID: 70924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8574327230453491
    2. '       ' → logprob: -1.2324327230453491
    3. ' de' → logprob: -1.9824327230453491
    4. 'de' → logprob: -2.7324328422546387
    5. 'd' → logprob: -2.9824328422546387
    6. ' d' → logprob: -4.732432842254639
    7. 'left' → logprob: -5.357432842254639
    8. '        
' → logprob: -5.732432842254639
    9. '#' → logprob: -6.107432842254639
    10. 'for' → logprob: -6.732432842254639

Token 656: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0865824222564697
    2. '   ' → logprob: -1.8365824222564697
    3. ' sur' → logprob: -1.9615824222564697
    4. 'sur' → logprob: -2.4615824222564697
    5. ' de' → logprob: -2.7115824222564697
    6. '[i' → logprob: -2.8365824222564697
    7. ' on' → logprob: -3.0865824222564697
    8. ' =' → logprob: -3.8365824222564697
    9. 'de' → logprob: -3.8365824222564697
    10. '(i' → logprob: -4.711582183837891

Token 657: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09323135018348694
    2. ' [' → logprob: -2.468231439590454
    3. ' i' → logprob: -6.593231201171875
    4. '[' → logprob: -7.218231201171875
    5. 'i' → logprob: -7.218231201171875
    6. 'range' → logprob: -8.093231201171875
    7. ' ' → logprob: -8.468231201171875
    8. 'A' → logprob: -8.718231201171875
    9. ' range' → logprob: -8.843231201171875
    10. '
' → logprob: -9.218231201171875

Token 658: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.723352049040841e-06
    2. ' i' → logprob: -12.750004768371582
    3. '
' → logprob: -13.375004768371582
    4. '	i' → logprob: -16.375003814697266
    5. ',i' → logprob: -16.875003814697266
    6. ']' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.750003814697266
    8. '[i' → logprob: -17.750003814697266
    9. '```' → logprob: -17.750003814697266
    10. '(i' → logprob: -17.875003814697266

Token 659: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3154018819332123
    2. ',i' → logprob: -1.4404019117355347
    3. ',' → logprob: -3.690401792526245
    4. ']' → logprob: -5.815402030944824
    5. 'i' → logprob: -6.315402030944824
    6. '   ' → logprob: -6.690402030944824
    7. ' i' → logprob: -6.690402030944824
    8. ' ,' → logprob: -7.565402030944824
    9. '],' → logprob: -8.565402030944824
    10. ':i' → logprob: -9.440402030944824

Token 660: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4251615107059479
    2. '1' → logprob: -1.1751614809036255
    3. '2' → logprob: -3.425161600112915
    4. '+' → logprob: -6.300161361694336
    5. '0' → logprob: -6.800161361694336
    6. '
' → logprob: -7.050161361694336
    7. ']' → logprob: -7.300161361694336
    8. ' i' → logprob: -8.550161361694336
    9. '(i' → logprob: -8.925161361694336
    10. '```' → logprob: -10.175161361694336

Token 661: ',' (ID: 11)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.2823565900325775
    2. '+' → logprob: -2.0323565006256104
    3. ']' → logprob: -2.6573565006256104
    4. ',' → logprob: -3.1573565006256104
    5. '],' → logprob: -7.6573567390441895
    6. ' ,' → logprob: -7.9073567390441895
    7. ':i' → logprob: -8.032356262207031
    8. ' +' → logprob: -8.407356262207031
    9. 'i' → logprob: -8.532356262207031
    10. '   ' → logprob: -8.782356262207031

Token 662: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02357853762805462
    2. 'N' → logprob: -3.773578643798828
    3. '
' → logprob: -8.648578643798828
    4. ']' → logprob: -9.273578643798828
    5. ' i' → logprob: -11.023578643798828
    6. 'min' → logprob: -11.148578643798828
    7. '   ' → logprob: -12.023578643798828
    8. ':' → logprob: -12.398578643798828
    9. 'j' → logprob: -12.523578643798828
    10. ' N' → logprob: -13.148578643798828

Token 663: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22943086922168732
    2. ']' → logprob: -1.604430913925171
    3. 'for' → logprob: -6.479430675506592
    4. ']:' → logprob: -6.979430675506592
    5. ' +' → logprob: -7.604430675506592
    6. ']:
' → logprob: -8.22943115234375
    7. ']
' → logprob: -8.97943115234375
    8. '+i' → logprob: -8.97943115234375
    9. ' for' → logprob: -9.47943115234375
    10. ']+' → logprob: -9.72943115234375

Token 664: ' mais' (ID: 2899)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6148532629013062
    2. ' j' → logprob: -1.4898532629013062
    3. ' for' → logprob: -1.7398532629013062
    4. 'for' → logprob: -2.8648533821105957
    5. '   ' → logprob: -7.364853382110596
    6. '       ' → logprob: -7.864853382110596
    7. '    ' → logprob: -8.739852905273438
    8. ' continue' → logprob: -10.489852905273438
    9. ' if' → logprob: -10.989852905273438
    10. '	j' → logprob: -10.989852905273438

Token 665: ' ça' (ID: 13590)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8312296271324158
    2. 'for' → logprob: -0.8312296271324158
    3. '#' → logprob: -3.4562296867370605
    4. 'continue' → logprob: -3.4562296867370605
    5. 'pass' → logprob: -3.5812296867370605
    6. ' for' → logprob: -3.9562296867370605
    7. ' j' → logprob: -4.9562296867370605
    8. ' continue' → logprob: -5.4562296867370605
    9. '   ' → logprob: -5.8312296867370605
    10. '       ' → logprob: -6.2062296867370605

Token 666: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6435174345970154
    2. 'n' → logprob: -1.3935174942016602
    3. 'continue' → logprob: -2.39351749420166
    4. 'for' → logprob: -3.39351749420166
    5. '...' → logprob: -3.64351749420166
    6. '#' → logprob: -4.26851749420166
    7. 's' → logprob: -4.64351749420166
    8. '=i' → logprob: -4.76851749420166
    9. ' =' → logprob: -5.14351749420166
    10. 'would' → logprob: -5.39351749420166

Token 667: ' coûte' (ID: 118994)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.3641387224197388
    2. '...' → logprob: -2.489138603210449
    3. 'pass' → logprob: -2.489138603210449
    4. ' impossible' → logprob: -2.864138603210449
    5. 's' → logprob: -2.989138603210449
    6. 'ra' → logprob: -3.114138603210449
    7. ' limité' → logprob: -3.114138603210449
    8. ' inutile' → logprob: -3.739138603210449
    9. 'r' → logprob: -3.864138603210449
    10. '#' → logprob: -3.989138603210449

Token 668: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.006395249627530575
    2. 'use' → logprob: -5.88139533996582
    3. 'eux' → logprob: -5.88139533996582
    4. 'ieux' → logprob: -8.13139533996582
    5. 'x' → logprob: -8.38139533996582
    6. 'ueux' → logprob: -9.00639533996582
    7. 'u' → logprob: -10.13139533996582
    8. 'l' → logprob: -10.63139533996582
    9. 'ful' → logprob: -11.00639533996582
    10. 'e' → logprob: -11.00639533996582

Token 669: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4479532241821289
    2. '<|end|>' → logprob: -1.572953224182129
    3. ':' → logprob: -3.072953224182129
    4. ' continue' → logprob: -3.447953224182129
    5. 'continue' → logprob: -4.197953224182129
    6. '...' → logprob: -4.197953224182129
    7. '   ' → logprob: -4.322953224182129
    8. '#' → logprob: -5.072953224182129
    9. '<|end|>' → logprob: -5.447953224182129
    10. ':
' → logprob: -5.572953224182129

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060098856687545776
    2. ' continue' → logprob: -3.435098886489868
    3. '<|end|>' → logprob: -4.310098648071289
    4. 'continue' → logprob: -5.685098648071289
    5. ' pass' → logprob: -5.810098648071289
    6. '   ' → logprob: -5.810098648071289
    7. '	' → logprob: -6.935098648071289
    8. '	continue' → logprob: -7.310098648071289
    9. ' for' → logprob: -7.560098648071289
    10. 'pass' → logprob: -8.435098648071289

Token 671: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5655622482299805
    2. 'continue' → logprob: -1.8155622482299805
    3. ' pass' → logprob: -2.3155622482299805
    4. 'pass' → logprob: -2.4405622482299805
    5. ' continue' → logprob: -2.5655622482299805
    6. '   ' → logprob: -5.6905622482299805
    7. '<|end|>' → logprob: -7.4405622482299805
    8. ' for' → logprob: -7.4405622482299805
    9. 'for' → logprob: -7.6905622482299805
    10. '	continue' → logprob: -7.8155622482299805

Token 672: ' Opt' (ID: 8995)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9475541114807129
    2. '       ' → logprob: -1.072554111480713
    3. 'pass' → logprob: -1.697554111480713
    4. ' continue' → logprob: -3.197554111480713
    5. ' pass' → logprob: -3.947554111480713
    6. '   ' → logprob: -4.197554111480713
    7. '#' → logprob: -4.697554111480713
    8. 'for' → logprob: -7.322554111480713
    9. '	continue' → logprob: -7.322554111480713
    10. ' #' → logprob: -7.947554111480713

Token 673: 'ons' (ID: 1808)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.2984243631362915
    2. 'imize' → logprob: -1.7984243631362915
    3. 'imized' → logprob: -2.923424243927002
    4. 'imiz' → logprob: -3.923424243927002
    5. 'imise' → logprob: -4.923424243927002
    6. 'imal' → logprob: -5.423424243927002
    7. 'i' → logprob: -5.798424243927002
    8. '#' → logprob: -7.048424243927002
    9. 'imum' → logprob: -7.173424243927002
    10. 'ions' → logprob: -7.673424243927002

Token 674: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47514137625694275
    2. ' for' → logprob: -0.9751414060592651
    3. ' pour' → logprob: -7.225141525268555
    4. 'pour' → logprob: -9.725141525268555
    5. ' plutôt' → logprob: -9.975141525268555
    6. '   ' → logprob: -10.225141525268555
    7. '	for' → logprob: -10.225141525268555
    8. '=' → logprob: -10.600141525268555
    9. ' ' → logprob: -10.600141525268555
    10. 'instead' → logprob: -10.850141525268555

Token 675: ' une' (ID: 2463)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3199866712093353
    2. 'continue' → logprob: -1.3199867010116577
    3. 'contin' → logprob: -6.444986820220947
    4. 'left' → logprob: -7.319986820220947
    5. ' continue' → logprob: -7.319986820220947
    6. 'i' → logprob: -7.569986820220947
    7. 'None' → logprob: -7.944986820220947
    8. '1' → logprob: -7.944986820220947
    9. ' continuer' → logprob: -7.944986820220947
    10. '#' → logprob: -8.069986343383789

Token 676: ' approche' (ID: 102373)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5474869012832642
    2. 'pass' → logprob: -1.5474869012832642
    3. 'appro' → logprob: -3.0474867820739746
    4. '#' → logprob: -3.0474867820739746
    5. 'break' → logprob: -3.4224867820739746
    6. 'optim' → logprob: -4.422486782073975
    7. 'contin' → logprob: -5.172486782073975
    8. 'for' → logprob: -5.297486782073975
    9. 'single' → logprob: -5.297486782073975
    10. ' approche' → logprob: -5.297486782073975

Token 677: ' efficace' (ID: 54338)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.13557492196559906
    2. ' continue' → logprob: -2.8855748176574707
    3. 'plus' → logprob: -4.260574817657471
    4. '```' → logprob: -4.510574817657471
    5. '#' → logprob: -4.885574817657471
    6. 'pass' → logprob: -5.135574817657471
    7. ' plus' → logprob: -5.260574817657471
    8. '   ' → logprob: -5.385574817657471
    9. 'optim' → logprob: -5.385574817657471
    10. '       ' → logprob: -5.760574817657471

Token 678: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13835987448692322
    2. '<|end|>' → logprob: -2.638359785079956
    3. ' for' → logprob: -4.013360023498535
    4. '   ' → logprob: -4.263360023498535
    5. ':' → logprob: -5.388360023498535
    6. 'continue' → logprob: -5.513360023498535
    7. ' continue' → logprob: -5.763360023498535
    8. '#' → logprob: -5.888360023498535
    9. '...' → logprob: -6.388360023498535
    10. ' pass' → logprob: -6.638360023498535

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02604062296450138
    2. ' pass' → logprob: -5.276040554046631
    3. 'pass' → logprob: -5.401040554046631
    4. 'continue' → logprob: -5.401040554046631
    5. '   ' → logprob: -5.526040554046631
    6. ' continue' → logprob: -6.151040554046631
    7. 'left' → logprob: -6.651040554046631
    8. ' for' → logprob: -6.776040554046631
    9. 'for' → logprob: -7.401040554046631
    10. ' left' → logprob: -7.526040554046631

Token 680: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42819005250930786
    2. 'l' → logprob: -1.803189992904663
    3. 'left' → logprob: -2.428189992904663
    4. '#' (adapté à ' #') → logprob: -3.678189992904663
    5. 'continue' → logprob: -3.928189992904663
    6. 'pass' → logprob: -4.053190231323242
    7. 'if' → logprob: -4.553190231323242
    8. 'j' → logprob: -4.803190231323242
    9. ' left' → logprob: -6.178190231323242
    10. '   ' → logprob: -6.178190231323242

Token 681: ' longueur' (ID: 104613)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.9420479536056519
    2. 'continue' → logprob: -1.0670479536056519
    3. 'left' → logprob: -2.3170480728149414
    4. 'l' → logprob: -2.3170480728149414
    5. ' pass' → logprob: -4.192048072814941
    6. '#' → logprob: -4.192048072814941
    7. ' continue' → logprob: -4.442048072814941
    8. '   ' → logprob: -4.817048072814941
    9. 'j' → logprob: -4.942048072814941
    10. 'if' → logprob: -5.442048072814941

Token 682: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19243364036083221
    2. '=' → logprob: -1.8174335956573486
    3. 'g' → logprob: -5.942433834075928
    4. '_left' → logprob: -5.942433834075928
    5. '_possible' → logprob: -6.192433834075928
    6. '   ' → logprob: -6.442433834075928
    7. '_g' → logprob: -7.317433834075928
    8. 'left' → logprob: -7.317433834075928
    9. '       ' → logprob: -7.817433834075928
    10. 'max' → logprob: -7.942433834075928

Token 683: ' gauche' (ID: 58367)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7384874224662781
    2. 'left' → logprob: -0.9884874224662781
    3. 'g' → logprob: -3.238487482070923
    4. 'right' → logprob: -3.238487482070923
    5. ' gauche' → logprob: -3.863487482070923
    6. ' droite' → logprob: -3.863487482070923
    7. 'dro' → logprob: -4.113487243652344
    8. 'i' → logprob: -4.988487243652344
    9. ' left' → logprob: -6.613487243652344
    10. ' max' → logprob: -6.738487243652344

Token 684: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387783020734787
    2. '=' → logprob: -1.1377830505371094
    3. '       ' → logprob: -7.512783050537109
    4. 'left' → logprob: -8.01278305053711
    5. '_left' → logprob: -11.51278305053711
    6. ',' → logprob: -12.51278305053711
    7. 'g' → logprob: -12.88778305053711
    8. ' ' → logprob: -12.88778305053711
    9. ' left' → logprob: -12.88778305053711
    10. '=max' → logprob: -13.38778305053711

Token 685: 'à' (ID: 708)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.10379725694656372
    2. '=' → logprob: -2.728797197341919
    3. ' left' → logprob: -4.728797435760498
    4. '       ' → logprob: -4.978797435760498
    5. ' =' → logprob: -5.228797435760498
    6. 'i' → logprob: -5.353797435760498
    7. 'right' → logprob: -5.728797435760498
    8. ')' → logprob: -6.853797435760498
    9. '=i' → logprob: -6.853797435760498
    10. 'max' → logprob: -8.22879695892334

Token 686: ' gauche' (ID: 58367)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006718054646626115
    2. ' i' → logprob: -7.750671863555908
    3. 'right' → logprob: -9.87567138671875
    4. 'max' → logprob: -10.00067138671875
    5. 'left' → logprob: -10.12567138671875
    6. 'l' → logprob: -10.62567138671875
    7. ')' → logprob: -10.87567138671875
    8. '   ' → logprob: -11.37567138671875
    9. '[i' → logprob: -11.87567138671875
    10. ' droite' → logprob: -11.87567138671875

Token 687: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7048555612564087
    2. ' =' → logprob: -0.8298555612564087
    3. ']' → logprob: -3.829855442047119
    4. ')' → logprob: -4.079855442047119
    5. '       ' → logprob: -4.954855442047119
    6. ',' → logprob: -5.329855442047119
    7. '[i' → logprob: -5.329855442047119
    8. '   ' → logprob: -6.079855442047119
    9. ':' → logprob: -6.454855442047119
    10. '=i' → logprob: -6.454855442047119

Token 688: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008059371029958129
    2. ' i' → logprob: -7.125805854797363
    3. '	i' → logprob: -14.875805854797363
    4. ')i' → logprob: -15.250805854797363
    5. '[i' → logprob: -15.500805854797363
    6. ',i' → logprob: -15.750805854797363
    7. '(i' → logprob: -15.750805854797363
    8. '
' → logprob: -15.750805854797363
    9. ')' → logprob: -16.37580680847168
    10. '```' → logprob: -17.00080680847168

Token 689: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8437888622283936
    2. ')' → logprob: -1.4687888622283936
    3. '   ' → logprob: -3.2187888622283936
    4. ',' → logprob: -3.3437888622283936
    5. ']' → logprob: -3.3437888622283936
    6. '[i' → logprob: -3.4687888622283936
    7. ' +' → logprob: -3.5937888622283936
    8. ' )' → logprob: -3.7187888622283936
    9. ' =' → logprob: -3.7187888622283936
    10. '):' → logprob: -3.9687888622283936

Token 690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. '2' → logprob: -11.625020980834961
    3. ')' → logprob: -12.625020980834961
    4. ' ' → logprob: -12.750020980834961
    5. '```' → logprob: -13.500020980834961
    6. '
' → logprob: -13.750020980834961
    7. '#' → logprob: -14.125020980834961
    8. '0' → logprob: -14.250020980834961
    9. '+' → logprob: -15.000020980834961
    10. '`' → logprob: -15.062520980834961

Token 691: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4840550124645233
    2. '       ' → logprob: -2.4840550422668457
    3. '+' → logprob: -2.6090550422668457
    4. ',' → logprob: -3.1090550422668457
    5. ']' → logprob: -3.3590550422668457
    6. ' =' → logprob: -3.6090550422668457
    7. '   ' → logprob: -3.9840550422668457
    8. '=' → logprob: -4.234055042266846
    9. '):' → logprob: -4.359055042266846
    10. ')+' → logprob: -4.359055042266846

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022036584094166756
    2. ' =' → logprob: -4.772036552429199
    3. 'left' → logprob: -5.022036552429199
    4. '=' → logprob: -5.647036552429199
    5. ',' → logprob: -6.147036552429199
    6. ' left' → logprob: -8.0220365524292
    7. 'length' → logprob: -8.5220365524292
    8. '#' → logprob: -9.1470365524292
    9. '	' → logprob: -9.6470365524292
    10. ',left' → logprob: -9.8970365524292

Token 693: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.018572337925434113
    2. ' left' → logprob: -4.2685723304748535
    3. '       ' → logprob: -6.3935723304748535
    4. 'if' → logprob: -6.6435723304748535
    5. 'l' → logprob: -7.3935723304748535
    6. 'g' → logprob: -7.7685723304748535
    7. 'length' → logprob: -8.768572807312012
    8. 'len' → logprob: -9.768572807312012
    9. ' if' → logprob: -9.893572807312012
    10. 'max' → logprob: -10.393572807312012

Token 694: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -7.517272024415433e-05
    2. 'len' → logprob: -9.750075340270996
    3. '_length' → logprob: -11.125075340270996
    4. '_val' → logprob: -14.000075340270996
    5. ' =' → logprob: -14.875075340270996
    6. '_' → logprob: -15.625075340270996
    7. '_idx' → logprob: -15.875075340270996
    8. '=' → logprob: -15.875075340270996
    9. '_l' → logprob: -16.25007438659668
    10. 'Len' → logprob: -16.50007438659668

Token 695: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407835721969604
    2. ' =' → logprob: -0.974078357219696
    3. ',' → logprob: -14.849078178405762
    4. ' ' → logprob: -15.224078178405762
    5. '   ' → logprob: -15.474078178405762
    6. '[' → logprob: -16.099079132080078
    7. '=i' → logprob: -16.474079132080078
    8. ')' → logprob: -16.599079132080078
    9. '[i' → logprob: -16.724079132080078
    10. '=len' → logprob: -16.974079132080078

Token 696: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0019010324031114578
    2. ' left' → logprob: -6.501901149749756
    3. 'right' → logprob: -7.876901149749756
    4. '0' → logprob: -12.251900672912598
    5. '       ' → logprob: -12.376900672912598
    6. '1' → logprob: -12.751900672912598
    7. '(left' → logprob: -13.001900672912598
    8. '	left' → logprob: -13.626900672912598
    9. 'i' → logprob: -13.751900672912598
    10. ' right' → logprob: -14.626900672912598

Token 697: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0219828002154827e-05
    2. '[' → logprob: -12.000020027160645
    3. 'i' → logprob: -12.500020027160645
    4. ' [' → logprob: -13.000020027160645
    5. '[len' → logprob: -13.750020027160645
    6. 'len' → logprob: -14.125020027160645
    7. '[N' → logprob: -14.125020027160645
    8. '[I' → logprob: -14.375020027160645
    9. ',i' → logprob: -14.625020027160645
    10. '   ' → logprob: -14.625020027160645

Token 698: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06454388052225113
    2. ']+' → logprob: -2.8145439624786377
    3. '+' → logprob: -6.189543724060059
    4. ']
' → logprob: -8.314543724060059
    5. '   ' → logprob: -9.314543724060059
    6. ' ]' → logprob: -9.564543724060059
    7. '[i' → logprob: -10.189543724060059
    8. ' +' → logprob: -10.439543724060059
    9. '-' → logprob: -11.314543724060059
    10. '       ' → logprob: -11.564543724060059

Token 699: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.788818359375
    2. '       ' → logprob: -0.788818359375
    3. ' +' → logprob: -2.413818359375
    4. '        
' → logprob: -7.288818359375
    5. 'right' → logprob: -7.663818359375
    6. '<|end|>' → logprob: -8.413818359375
    7. '+
' → logprob: -9.538818359375
    8. '
' → logprob: -9.788818359375
    9. ' right' → logprob: -10.038818359375
    10. ',' → logprob: -10.038818359375

Token 700: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.22766032814979553
    2. '+' → logprob: -2.6026604175567627
    3. '       ' → logprob: -2.6026604175567627
    4. ' right' → logprob: -3.7276604175567627
    5. 'if' → logprob: -4.852660179138184
    6. '
' → logprob: -4.977660179138184
    7. '        
' → logprob: -5.477660179138184
    8. ' if' → logprob: -5.602660179138184
    9. '#' (adapté à ' #') → logprob: -5.727660179138184
    10. ' +' → logprob: -5.977660179138184

Token 701: ' longueur' (ID: 104613)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0012072573881596327
    2. 'if' → logprob: -7.25120735168457
    3. ' right' → logprob: -8.25120735168457
    4. '#' → logprob: -9.12620735168457
    5. '       ' → logprob: -10.62620735168457
    6. 'for' → logprob: -10.62620735168457
    7. 'j' → logprob: -10.75120735168457
    8. '   ' → logprob: -11.25120735168457
    9. 'new' → logprob: -11.25120735168457
    10. 'r' → logprob: -11.75120735168457

Token 702: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6948742270469666
    2. '=' → logprob: -1.5698742866516113
    3. '+=' → logprob: -1.8198742866516113
    4. ' +=' → logprob: -2.6948742866516113
    5. '+' → logprob: -3.5698742866516113
    6. 'right' → logprob: -4.694874286651611
    7. '       ' → logprob: -4.819874286651611
    8. '   ' → logprob: -5.069874286651611
    9. '_right' → logprob: -5.319874286651611
    10. ' +' → logprob: -6.694874286651611

Token 703: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1705634444952011
    2. 'i' → logprob: -2.6705634593963623
    3. ' right' → logprob: -3.0455634593963623
    4. 'N' → logprob: -3.9205634593963623
    5. ' i' → logprob: -4.420563220977783
    6. ' N' → logprob: -5.795563220977783
    7. '[i' → logprob: -6.420563220977783
    8. '1' → logprob: -7.045563220977783
    9. 'min' → logprob: -7.420563220977783
    10. '[right' → logprob: -8.170563697814941

Token 704: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18057073652744293
    2. '=' → logprob: -1.8055707216262817
    3. '       ' → logprob: -7.180570602416992
    4. 'right' → logprob: -10.055570602416992
    5. '   ' → logprob: -11.930570602416992
    6. '+' → logprob: -12.055570602416992
    7. ' right' → logprob: -12.680570602416992
    8. '```' → logprob: -13.805570602416992
    9. '+=' → logprob: -14.305570602416992
    10. '           ' → logprob: -14.555570602416992

Token 705: 'à' (ID: 708)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014693068340420723
    2. ' right' → logprob: -4.264693260192871
    3. '=' → logprob: -8.139693260192871
    4. '   ' → logprob: -8.639693260192871
    5. '       ' → logprob: -10.764693260192871
    6. ' =' → logprob: -11.014693260192871
    7. '[right' → logprob: -12.014693260192871
    8. '           ' → logprob: -12.764693260192871
    9. '
' → logprob: -13.389693260192871
    10. 'N' → logprob: -13.389693260192871

Token 706: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.45796409249305725
    2. 'i' → logprob: -1.3329640626907349
    3. 'N' → logprob: -2.9579641819000244
    4. ' right' → logprob: -3.2079641819000244
    5. ' i' → logprob: -4.832963943481445
    6. ' N' → logprob: -5.832963943481445
    7. 'left' → logprob: -9.582963943481445
    8. 'r' → logprob: -10.082963943481445
    9. '   ' → logprob: -10.207963943481445
    10. 'max' → logprob: -10.332963943481445

Token 707: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008685869397595525
    2. '[j' → logprob: -8.000868797302246
    3. '=' → logprob: -8.625868797302246
    4. '[' → logprob: -9.250868797302246
    5. ' =' → logprob: -9.500868797302246
    6. '[N' → logprob: -10.000868797302246
    7. 'of' → logprob: -10.625868797302246
    8. 'i' → logprob: -10.750868797302246
    9. ' [' → logprob: -11.250868797302246
    10. '=i' → logprob: -11.375868797302246

Token 708: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008473869529552758
    2. '(i' → logprob: -7.125847339630127
    3. ' i' → logprob: -10.250847816467285
    4. '[i' → logprob: -12.750847816467285
    5. '
' → logprob: -13.625847816467285
    6. ' (' → logprob: -13.750847816467285
    7. '{i' → logprob: -13.875847816467285
    8. '   ' → logprob: -14.500847816467285
    9. '```' → logprob: -15.250847816467285
    10. '	i' → logprob: -15.500847816467285

Token 709: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043612658977508545
    2. '+' → logprob: -3.1686127185821533
    3. ' i' → logprob: -8.543612480163574
    4. '(i' → logprob: -8.918612480163574
    5. '[i' → logprob: -9.043612480163574
    6. '+i' → logprob: -9.918612480163574
    7. 'N' → logprob: -10.543612480163574
    8. '```' → logprob: -10.918612480163574
    9. ']' → logprob: -11.168612480163574
    10. ' +' → logprob: -11.293612480163574

Token 710: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015169414109550416
    2. '2' → logprob: -9.500151634216309
    3. '+' → logprob: -9.750151634216309
    4. 'i' → logprob: -11.000151634216309
    5. '(i' → logprob: -14.250151634216309
    6. ' ' → logprob: -14.625151634216309
    7. '```' → logprob: -14.625151634216309
    8. '(' → logprob: -17.000152587890625
    9. ' i' → logprob: -17.250152587890625
    10. '0' → logprob: -17.625152587890625

Token 711: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10467371344566345
    2. ']' → logprob: -2.8546736240386963
    3. ' +' → logprob: -3.2296736240386963
    4. ']+' → logprob: -7.479673862457275
    5. '   ' → logprob: -7.604673862457275
    6. ')' → logprob: -7.979673862457275
    7. '+]' → logprob: -8.479673385620117
    8. ' ]' → logprob: -8.604673385620117
    9. ']
' → logprob: -8.979673385620117
    10. '])' → logprob: -9.604673385620117

Token 712: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04165026172995567
    2. '=' → logprob: -3.2916502952575684
    3. '       ' → logprob: -5.666650295257568
    4. 'right' → logprob: -9.79164981842041
    5. '   ' → logprob: -9.91664981842041
    6. ' right' → logprob: -11.29164981842041
    7. '           ' → logprob: -12.04164981842041
    8. '        ' → logprob: -12.66664981842041
    9. '+' → logprob: -12.91664981842041
    10. ',' → logprob: -13.04164981842041

Token 713: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.008462217636406422
    2. ' right' → logprob: -5.008462429046631
    3. '       ' → logprob: -7.008462429046631
    4. '=' → logprob: -7.258462429046631
    5. 'if' → logprob: -9.383461952209473
    6. ' =' → logprob: -10.383461952209473
    7. '   ' → logprob: -12.508461952209473
    8. ' if' → logprob: -12.758461952209473
    9. '```' → logprob: -12.883461952209473
    10. '	right' → logprob: -13.383461952209473

Token 714: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00216394430026412
    2. 'len' → logprob: -6.877163887023926
    3. ' =' → logprob: -7.627163887023926
    4. '_' → logprob: -8.752163887023926
    5. '=' → logprob: -8.877163887023926
    6. '_length' → logprob: -9.252163887023926
    7. '[i' → logprob: -9.377163887023926
    8. '[len' → logprob: -10.377163887023926
    9. 'Len' → logprob: -11.127163887023926
    10. '_l' → logprob: -11.252163887023926

Token 715: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. '   ' → logprob: -15.188261985778809
    4. '=
' → logprob: -16.813262939453125
    5. ' ' → logprob: -16.938262939453125
    6. '+=' → logprob: -17.188262939453125
    7. '```' → logprob: -17.438262939453125
    8. '＝' → logprob: -17.688262939453125
    9. ' +=' → logprob: -17.813262939453125
    10. '	' → logprob: -18.063262939453125

Token 716: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.016067566350102425
    2. ' right' → logprob: -4.1410675048828125
    3. '1' → logprob: -11.766067504882812
    4. '   ' → logprob: -12.141067504882812
    5. 'N' → logprob: -12.391067504882812
    6. '	right' → logprob: -12.516067504882812
    7. ' N' → logprob: -12.891067504882812
    8. '0' → logprob: -13.266067504882812
    9. '[right' → logprob: -13.266067504882812
    10. 'left' → logprob: -13.391067504882812

Token 717: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.500000953674316
    3. '[j' → logprob: -14.875000953674316
    4. '```' → logprob: -15.250000953674316
    5. '[I' → logprob: -16.125001907348633
    6. 'i' → logprob: -17.125001907348633
    7. '\[' → logprob: -17.500001907348633
    8. '[A' → logprob: -17.875001907348633
    9. '[
' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.500001907348633

Token 718: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00028767617186531425
    2. ' +' → logprob: -8.625288009643555
    3. ']' → logprob: -9.875288009643555
    4. ']+' → logprob: -11.000288009643555
    5. '[' → logprob: -11.125288009643555
    6. '2' → logprob: -11.500288009643555
    7. '+i' → logprob: -12.250288009643555
    8. '+
' → logprob: -13.000288009643555
    9. '+]' → logprob: -13.125288009643555
    10. '1' → logprob: -13.125288009643555

Token 719: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04322721064090729
    2. '1' → logprob: -3.168227195739746
    3. '+' → logprob: -8.418227195739746
    4. ' ' → logprob: -12.793227195739746
    5. '```' → logprob: -13.293227195739746
    6. ']+' → logprob: -13.668227195739746
    7. ']' → logprob: -14.668227195739746
    8. '   ' → logprob: -15.293227195739746
    9. ' +' → logprob: -15.543227195739746
    10. '<|end|>' → logprob: -15.730727195739746

Token 720: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04165540263056755
    2. '+' → logprob: -3.9166553020477295
    3. ']+' → logprob: -3.9166553020477295
    4. ' +' → logprob: -7.916655540466309
    5. ' ]' → logprob: -8.166655540466309
    6. '   ' → logprob: -8.541655540466309
    7. ')' → logprob: -9.916655540466309
    8. '+]' → logprob: -10.791655540466309
    9. '])' → logprob: -10.916655540466309
    10. '       ' → logprob: -11.166655540466309

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014845887199044228
    2. '        
' → logprob: -5.264845848083496
    3. 'total' → logprob: -5.764845848083496
    4. '
' → logprob: -5.889845848083496
    5. '   ' → logprob: -6.139845848083496
    6. '```' → logprob: -7.764845848083496
    7. '  
' → logprob: -8.389845848083496
    8. '<|end|>' → logprob: -8.889845848083496
    9. ',' → logprob: -9.014845848083496
    10. ' total' → logprob: -9.139845848083496

Token 722: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8150969743728638
    2. 'max' → logprob: -1.3150969743728638
    3. 'total' → logprob: -1.4400969743728638
    4. 'if' → logprob: -3.190096855163574
    5. ' if' → logprob: -5.815096855163574
    6. ' total' → logprob: -6.065096855163574
    7. ' max' → logprob: -6.190096855163574
    8. 'ans' → logprob: -6.565096855163574
    9. '   ' → logprob: -7.565096855163574
    10. 'temp' → logprob: -7.565096855163574

Token 723: ' Si' (ID: 7832)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2832004725933075
    2. 'if' → logprob: -2.03320050239563
    3. 'total' → logprob: -2.40820050239563
    4. 'ans' → logprob: -4.158200263977051
    5. '       ' → logprob: -5.408200263977051
    6. 'candidate' → logprob: -6.158200263977051
    7. 'temp' → logprob: -6.908200263977051
    8. '#' → logprob: -7.783200263977051
    9. 'possible' → logprob: -7.908200263977051
    10. 'val' → logprob: -8.03320026397705

Token 724: ' on' (ID: 402)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5025728344917297
    2. ' A' → logprob: -1.877572774887085
    3. 'i' → logprob: -2.252572774887085
    4. ' i' → logprob: -2.877572774887085
    5. 'left' → logprob: -3.127572774887085
    6. ' left' → logprob: -3.877572774887085
    7. 'new' → logprob: -5.002573013305664
    8. ' new' → logprob: -5.752573013305664
    9. 'right' → logprob: -6.502573013305664
    10. ' right' → logprob: -6.877573013305664

Token 725: ' inverse' (ID: 53743)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6840822100639343
    2. 'can' → logprob: -2.059082269668579
    3. '#' → logprob: -2.184082269668579
    4. 'max' → logprob: -3.059082269668579
    5. ' if' → logprob: -3.184082269668579
    6. ' can' → logprob: -3.309082269668579
    7. 'A' → logprob: -3.309082269668579
    8. '   ' → logprob: -4.18408203125
    9. '       ' → logprob: -4.18408203125
    10. ' A' → logprob: -4.43408203125

Token 726: ' [' (ID: 723)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12219308316707611
    2. ' A' → logprob: -2.7471930980682373
    3. 'left' → logprob: -3.9971930980682373
    4. '[i' → logprob: -4.747192859649658
    5. 'right' → logprob: -5.247192859649658
    6. 'i' → logprob: -5.372192859649658
    7. '#' → logprob: -6.247192859649658
    8. ' right' → logprob: -6.622192859649658
    9. ' i' → logprob: -6.872192859649658
    10. ' left' → logprob: -6.997192859649658

Token 727: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.200166469876422e-06
    2. ' i' → logprob: -13.125004768371582
    3. '
' → logprob: -13.500004768371582
    4. ']' → logprob: -14.625004768371582
    5. '(i' → logprob: -14.625004768371582
    6. '   ' → logprob: -14.750004768371582
    7. '1' → logprob: -15.875004768371582
    8. ',i' → logprob: -16.1250057220459
    9. '	i' → logprob: -17.0000057220459
    10. '```' → logprob: -17.0000057220459

Token 728: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.215330409351736e-05
    2. ' +' → logprob: -10.625041961669922
    3. ']+' → logprob: -12.000041961669922
    4. '```' → logprob: -13.250041961669922
    5. '+
' → logprob: -13.500041961669922
    6. '
' → logprob: -13.500041961669922
    7. '1' → logprob: -13.625041961669922
    8. ']' → logprob: -13.750041961669922
    9. 'i' → logprob: -13.750041961669922
    10. '+i' → logprob: -14.125041961669922

Token 729: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.841743303695694e-05
    2. '2' → logprob: -10.00009822845459
    3. '+' → logprob: -10.50009822845459
    4. ' ' → logprob: -10.62509822845459
    5. '```' → logprob: -15.62509822845459
    6. '
' → logprob: -16.000099182128906
    7. 'i' → logprob: -16.125099182128906
    8. ']' → logprob: -16.312599182128906
    9. ',' → logprob: -16.375099182128906
    10. '0' → logprob: -16.562599182128906

Token 730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9934451580047607
    2. ',i' → logprob: -1.3684451580047607
    3. ']' → logprob: -1.6184451580047607
    4. '],' → logprob: -1.9934451580047607
    5. '+' → logprob: -3.7434451580047607
    6. ']:
' → logprob: -5.61844539642334
    7. ':i' → logprob: -5.74344539642334
    8. ']:' → logprob: -5.99344539642334
    9. ' ,' → logprob: -6.49344539642334
    10. '[i' → logprob: -6.99344539642334

Token 731: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.3319124011322856e-05
    2. ' i' → logprob: -11.125022888183594
    3. '
' → logprob: -12.125022888183594
    4. ']' → logprob: -13.250022888183594
    5. 'N' → logprob: -14.250022888183594
    6. '   ' → logprob: -15.250022888183594
    7. '```' → logprob: -15.625022888183594
    8. '	i' → logprob: -16.000022888183594
    9. ',i' → logprob: -17.000022888183594
    10. ')i' → logprob: -17.250022888183594

Token 732: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8444881536415778e-05
    2. ']' → logprob: -11.125028610229492
    3. ']+' → logprob: -12.625028610229492
    4. ' +' → logprob: -12.750028610229492
    5. '],' → logprob: -12.875028610229492
    6. '1' → logprob: -13.125028610229492
    7. '[' → logprob: -14.500028610229492
    8. '+
' → logprob: -14.750028610229492
    9. '```' → logprob: -14.812528610229492
    10. '2' → logprob: -15.250028610229492

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049604758620262146
    2. '2' → logprob: -3.424604654312134
    3. '+' → logprob: -4.174604892730713
    4. ']' → logprob: -8.299604415893555
    5. '
' → logprob: -8.924604415893555
    6. ']+' → logprob: -10.674604415893555
    7. '+
' → logprob: -11.424604415893555
    8. ' ' → logprob: -12.049604415893555
    9. '

' → logprob: -12.049604415893555
    10. '```' → logprob: -12.424604415893555

Token 734: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48083600401878357
    2. ']:
' → logprob: -1.605836033821106
    3. '],' → logprob: -1.980836033821106
    4. ']
' → logprob: -3.6058359146118164
    5. ']:' → logprob: -4.605835914611816
    6. '+' → logprob: -5.480835914611816
    7. ']:

' → logprob: -7.355835914611816
    8. ']+' → logprob: -8.105835914611816
    9. '],
' → logprob: -8.480835914611816
    10. ']

' → logprob: -8.855835914611816

Token 735: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4406036138534546
    2. '+' → logprob: -2.440603733062744
    3. ' +' → logprob: -2.565603733062744
    4. ':
' → logprob: -2.565603733062744
    5. ':' → logprob: -2.815603733062744
    6. '           ' → logprob: -4.190603733062744
    7. ',' → logprob: -4.315603733062744
    8. '=' → logprob: -4.815603733062744
    9. '   ' → logprob: -5.190603733062744
    10. ' =' → logprob: -5.440603733062744

Token 736: 'fa' (ID: 4968)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.532744824886322
    2. '1' → logprob: -2.282744884490967
    3. '+' → logprob: -3.282744884490967
    4. 'total' → logprob: -3.407744884490967
    5. '):
' → logprob: -3.657744884490967
    6. '),' → logprob: -3.782744884490967
    7. ',' → logprob: -3.907744884490967
    8. ']' → logprob: -4.157744884490967
    9. ')
' → logprob: -4.157744884490967
    10. 'right' → logprob: -4.157744884490967

Token 737: 'ible' (ID: 1430)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05939164012670517
    2. ']' → logprob: -4.059391498565674
    3. ']+' → logprob: -4.184391498565674
    4. '])' → logprob: -4.809391498565674
    5. ' +' → logprob: -5.434391498565674
    6. ')' → logprob: -5.434391498565674
    7. 'x' → logprob: -6.309391498565674
    8. '],' → logprob: -6.934391498565674
    9. ')+' → logprob: -7.059391498565674
    10. '#' → logprob: -7.434391498565674

Token 738: ' gain' (ID: 11621)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29888200759887695
    2. ')' → logprob: -1.798882007598877
    3. ' +' → logprob: -3.048882007598877
    4. '),' → logprob: -3.298882007598877
    5. ')+' → logprob: -6.298882007598877
    6. ')
' → logprob: -6.798882007598877
    7. ']' → logprob: -7.298882007598877
    8. ' )' → logprob: -7.423882007598877
    9. '):
' → logprob: -7.673882007598877
    10. '):' → logprob: -7.923882007598877

Token 739: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6889041066169739
    2. ')' → logprob: -1.063904047012329
    3. '+' → logprob: -2.438904047012329
    4. '):' → logprob: -3.063904047012329
    5. '):
' → logprob: -4.563904285430908
    6. ' +' → logprob: -5.313904285430908
    7. ')
' → logprob: -7.063904285430908
    8. ',' → logprob: -7.188904285430908
    9. '),
' → logprob: -8.06390380859375
    10. ' ),' → logprob: -8.06390380859375

Token 740: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6303202509880066
    2. 'if' → logprob: -2.0053203105926514
    3. 'max' → logprob: -2.1303203105926514
    4. 'continue' → logprob: -2.6303203105926514
    5. 'total' → logprob: -2.7553203105926514
    6. ' if' → logprob: -3.3803203105926514
    7. 'ans' → logprob: -4.380320072174072
    8. ' continue' → logprob: -4.755320072174072
    9. ' max' → logprob: -4.880320072174072
    10. ' total' → logprob: -5.380320072174072

Token 741: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3199164867401123
    2. 'max' → logprob: -1.9449164867401123
    3. 'continue' → logprob: -2.1949164867401123
    4. '       ' → logprob: -2.3199164867401123
    5. ' continue' → logprob: -2.5699164867401123
    6. 'ans' → logprob: -2.5699164867401123
    7. ' if' → logprob: -2.6949164867401123
    8. '#' → logprob: -2.6949164867401123
    9. ' max' → logprob: -3.5699164867401123
    10. '
' → logprob: -4.319916725158691

Token 742: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6412596702575684
    2. ' continue' → logprob: -0.7662596702575684
    3. ' peut' → logprob: -5.891259670257568
    4. 'pe' → logprob: -6.766259670257568
    5. ' peux' → logprob: -7.141259670257568
    6. '#' → logprob: -7.141259670257568
    7. 'contin' → logprob: -7.141259670257568
    8. '+=' → logprob: -7.516259670257568
    9. 'max' → logprob: -7.641259670257568
    10. ' continues' → logprob: -8.016260147094727

Token 743: ' invers' (ID: 38721)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4052841067314148
    2. ' continue' → logprob: -1.7802841663360596
    3. '       ' → logprob: -2.7802841663360596
    4. ' continuer' → logprob: -4.0302839279174805
    5. 'max' → logprob: -4.1552839279174805
    6. '+=' → logprob: -4.2802839279174805
    7. 'contin' → logprob: -4.2802839279174805
    8. '   ' → logprob: -4.2802839279174805
    9. '=' → logprob: -5.5302839279174805
    10. 'if' → logprob: -5.6552839279174805

Token 744: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.11882937699556351
    2. 'ter' → logprob: -2.8688294887542725
    3. '   ' → logprob: -3.3688294887542725
    4. '       ' → logprob: -4.868829250335693
    5. 'iter' → logprob: -4.993829250335693
    6. 'ser' → logprob: -6.243829250335693
    7. '[i' → logprob: -6.618829250335693
    8. 'érer' → logprob: -7.368829250335693
    9. '#' → logprob: -7.618829250335693
    10. 'eter' → logprob: -7.868829250335693

Token 745: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.45128923654556274
    2. 'i' → logprob: -2.201289176940918
    3. '[' → logprob: -2.826289176940918
    4. 'A' → logprob: -3.826289176940918
    5. ' i' → logprob: -3.951289176940918
    6. '...' → logprob: -3.951289176940918
    7. ' [' → logprob: -4.451289176940918
    8. 'un' → logprob: -4.451289176940918
    9. 'more' → logprob: -4.701289176940918
    10. 'right' → logprob: -4.701289176940918

Token 746: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.939851037808694e-05
    2. ' i' → logprob: -11.125029563903809
    3. '(i' → logprob: -12.500029563903809
    4. ']' → logprob: -12.875029563903809
    5. '[i' → logprob: -13.375029563903809
    6. ',i' → logprob: -13.500029563903809
    7. '
' → logprob: -13.500029563903809
    8. '0' → logprob: -13.625029563903809
    9. ',' → logprob: -14.625029563903809
    10. '1' → logprob: -15.000029563903809

Token 747: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.167648876318708e-05
    2. ' +' → logprob: -10.625041961669922
    3. ',i' → logprob: -11.750041961669922
    4. '
' → logprob: -13.125041961669922
    5. ',' → logprob: -13.375041961669922
    6. '+
' → logprob: -13.625041961669922
    7. ']' → logprob: -13.875041961669922
    8. ']+' → logprob: -14.125041961669922
    9. '+i' → logprob: -14.250041961669922
    10. '1' → logprob: -14.875041961669922

Token 748: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5772733688354492
    2. '1' → logprob: -0.8272733688354492
    3. '+' → logprob: -6.702273368835449
    4. '
' → logprob: -9.95227336883545
    5. 'N' → logprob: -11.20227336883545
    6. ' ' → logprob: -11.32727336883545
    7. '

' → logprob: -12.01477336883545
    8. '```' → logprob: -12.13977336883545
    9. 'j' → logprob: -12.38977336883545
    10. ']' → logprob: -12.95227336883545

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04906328767538071
    2. '+' → logprob: -3.424063205718994
    3. ',i' → logprob: -4.424063205718994
    4. ']' → logprob: -6.424063205718994
    5. ' ,' → logprob: -7.049063205718994
    6. ' +' → logprob: -7.799063205718994
    7. '   ' → logprob: -9.299063682556152
    8. ',
' → logprob: -9.424063682556152
    9. '],' → logprob: -10.049063682556152
    10. ':i' → logprob: -10.549063682556152

Token 750: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04320529103279114
    2. 'j' → logprob: -3.7932052612304688
    3. 'N' → logprob: -4.043205261230469
    4. ' i' → logprob: -6.543205261230469
    5. ']' → logprob: -7.668205261230469
    6. ' N' → logprob: -9.293205261230469
    7. '
' → logprob: -9.793205261230469
    8. ' j' → logprob: -10.168205261230469
    9. '   ' → logprob: -10.793205261230469
    10. ')' → logprob: -11.418205261230469

Token 751: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8670179997570813e-05
    2. ' +' → logprob: -12.375019073486328
    3. ']' → logprob: -12.375019073486328
    4. ']+' → logprob: -12.625019073486328
    5. '2' → logprob: -13.000019073486328
    6. '+
' → logprob: -13.125019073486328
    7. '+j' → logprob: -14.250019073486328
    8. '+]' → logprob: -14.375019073486328
    9. '+k' → logprob: -15.500019073486328
    10. '+r' → logprob: -15.500019073486328

Token 752: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010586731135845184
    2. '1' → logprob: -4.760586738586426
    3. '+' → logprob: -6.260586738586426
    4. ']' → logprob: -10.385586738586426
    5. '
' → logprob: -11.385586738586426
    6. '3' → logprob: -12.510586738586426
    7. '```' → logprob: -12.635586738586426
    8. ']+' → logprob: -13.385586738586426
    9. '

' → logprob: -13.448086738586426
    10. '۲' → logprob: -14.260586738586426

Token 753: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4304072856903076
    2. ']' → logprob: -1.0554072856903076
    3. ' +' → logprob: -7.180407524108887
    4. ']+' → logprob: -7.680407524108887
    5. ']
' → logprob: -8.180407524108887
    6. ')' → logprob: -10.055407524108887
    7. '],' → logprob: -10.680407524108887
    8. ' ]' → logprob: -10.680407524108887
    9. '+]' → logprob: -11.055407524108887
    10. '+i' → logprob: -11.430407524108887

Token 754: ' déjà' (ID: 21229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16704772412776947
    2. '<|end|>' → logprob: -2.4170477390289307
    3. '+' → logprob: -3.6670477390289307
    4. '       ' → logprob: -4.042047500610352
    5. ']' → logprob: -5.042047500610352
    6. ')
' → logprob: -5.792047500610352
    7. '
' → logprob: -5.792047500610352
    8. '<|end|>' → logprob: -6.042047500610352
    9. ':' → logprob: -6.417047500610352
    10. ',' → logprob: -7.292047500610352

Token 755: ' testé' (ID: 181173)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.682489275932312
    2. '       ' → logprob: -1.932489275932312
    3. 'continue' → logprob: -2.1824893951416016
    4. '+' → logprob: -2.3074893951416016
    5. '
' → logprob: -2.8074893951416016
    6. ' continue' → logprob: -4.557489395141602
    7. '   ' → logprob: -4.682489395141602
    8. ';' → logprob: -4.932489395141602
    9. ' max' → logprob: -4.932489395141602
    10. 'contin' → logprob: -5.557489395141602

Token 756: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5595043897628784
    2. 'continue' → logprob: -1.6845043897628784
    3. '<|end|>' → logprob: -2.309504508972168
    4. ')' → logprob: -2.809504508972168
    5. ' continue' → logprob: -3.559504508972168
    6. '   ' → logprob: -4.309504508972168
    7. ',' → logprob: -4.309504508972168
    8. '.' → logprob: -4.684504508972168
    9. '
' → logprob: -5.309504508972168
    10. '+' → logprob: -5.934504508972168

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014110381714999676
    2. '   ' → logprob: -5.389110565185547
    3. ')' → logprob: -5.514110565185547
    4. '<|end|>' → logprob: -5.889110565185547
    5. '
' → logprob: -7.389110565185547
    6. 'continue' → logprob: -7.514110565185547
    7. ',' → logprob: -7.764110565185547
    8. '.' → logprob: -8.889110565185547
    9. '        
' → logprob: -8.889110565185547
    10. '#' → logprob: -9.014110565185547

Token 758: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03153819590806961
    2. '   ' → logprob: -3.906538248062134
    3. 'if' → logprob: -6.031538009643555
    4. 'max' → logprob: -6.031538009643555
    5. ' if' → logprob: -6.281538009643555
    6. 'continue' → logprob: -6.531538009643555
    7. '
' → logprob: -6.906538009643555
    8. ',' → logprob: -8.156538009643555
    9. '        
' → logprob: -8.156538009643555
    10. ' max' → logprob: -8.406538009643555

Token 759: ' L' (ID: 451)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.4807275533676147
    2. '       ' → logprob: -1.6057275533676147
    3. 'if' → logprob: -1.6057275533676147
    4. 'max' → logprob: -2.1057276725769043
    5. '   ' → logprob: -2.2307276725769043
    6. 'ans' → logprob: -2.9807276725769043
    7. 'total' → logprob: -3.2307276725769043
    8. '#' → logprob: -3.4807276725769043
    9. 'temp' → logprob: -5.105727672576904
    10. ' if' → logprob: -5.855727672576904

Token 760: ''in' (ID: 17942)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5608601570129395
    2. 'i' → logprob: -2.1858601570129395
    3. 'e' → logprob: -2.4358601570129395
    4. '=' → logprob: -2.6858601570129395
    5. '+' → logprob: -3.1858601570129395
    6. ')' → logprob: -4.1858601570129395
    7. 'max' → logprob: -4.1858601570129395
    8. 'eft' → logprob: -4.3108601570129395
    9. '_' → logprob: -4.5608601570129395
    10. ' #' → logprob: -5.0608601570129395

Token 761: 'version' (ID: 8924)
  Prédit: 'version'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'version' → logprob: -0.1724754273891449
    2. 'verse' → logprob: -2.7974753379821777
    3. 'ver' → logprob: -3.1724753379821777
    4. '#' → logprob: -3.9224753379821777
    5. 'v' → logprob: -4.172475337982178
    6. 'if' → logprob: -5.422475337982178
    7. 'ter' → logprob: -5.422475337982178
    8. 'vers' → logprob: -5.672475337982178
    9. 'for' → logprob: -6.422475337982178
    10. '[' → logprob: -6.797475337982178

Token 762: ' peut' (ID: 9216)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.9282107353210449
    2. ' de' → logprob: -1.303210735321045
    3. ' des' → logprob: -2.678210735321045
    4. '#' → logprob: -2.678210735321045
    5. ' du' → logprob: -3.053210735321045
    6. ' peut' → logprob: -3.678210735321045
    7. 'sur' → logprob: -3.928210735321045
    8. ' complète' → logprob: -4.053210735321045
    9. ' possible' → logprob: -4.303210735321045
    10. ' pourrait' → logprob: -5.303210735321045

Token 763: ' connecter' (ID: 85351)
  Prédit: 'augment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'augment' → logprob: -0.9164006114006042
    2. ' permettre' → logprob: -2.041400671005249
    3. '#' → logprob: -2.291400671005249
    4. ' augmenter' → logprob: -2.416400671005249
    5. 'être' → logprob: -3.291400671005249
    6. '       ' → logprob: -3.291400671005249
    7. ' améliorer' → logprob: -3.541400671005249
    8. 'contin' → logprob: -4.29140043258667
    9. 'max' → logprob: -4.41640043258667
    10. 'potential' → logprob: -4.54140043258667

Token 764: ' ces' (ID: 10532)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.09775272011756897
    2. ' left' → logprob: -2.972752809524536
    3. 'i' → logprob: -3.597752809524536
    4. ' i' → logprob: -5.097752571105957
    5. 'right' → logprob: -5.972752571105957
    6. '[i' → logprob: -6.722752571105957
    7. ' right' → logprob: -7.597752571105957
    8. 'les' → logprob: -7.597752571105957
    9. '...' → logprob: -7.722752571105957
    10. ' les' → logprob: -7.847752571105957

Token 765: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.09806402772665024
    2. ' sequences' → logprob: -2.8480639457702637
    3. ' two' → logprob: -4.348063945770264
    4. 'de' → logprob: -4.723063945770264
    5. ' segments' → logprob: -5.473063945770264
    6. 'segments' → logprob: -6.598063945770264
    7. ' sé' → logprob: -6.723063945770264
    8. 'left' → logprob: -6.723063945770264
    9. 'two' → logprob: -6.848063945770264
    10. '[i' → logprob: -7.098063945770264

Token 766: ' sé' (ID: 7462)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.09975827485322952
    2. 'segments' → logprob: -2.9747583866119385
    3. 'len' → logprob: -4.974758148193359
    4. '-' → logprob: -4.974758148193359
    5. ' segments' → logprob: -5.474758148193359
    6. '_sequences' → logprob: -5.599758148193359
    7. '+' → logprob: -5.724758148193359
    8. 'sé' → logprob: -5.849758148193359
    9. ' sé' → logprob: -5.974758148193359
    10. 'se' → logprob: -6.099758148193359

Token 767: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -5.371605948312208e-05
    2. 'quence' → logprob: -10.500053405761719
    3. 'q' → logprob: -11.000053405761719
    4. 'qu' → logprob: -13.000053405761719
    5. '
' → logprob: -13.750053405761719
    6. '   ' → logprob: -14.125053405761719
    7. '#' → logprob: -14.750053405761719
    8. '`' → logprob: -15.000053405761719
    9. 'quent' → logprob: -15.000053405761719
    10. 'ences' → logprob: -15.000053405761719

Token 768: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03467483073472977
    2. ',' → logprob: -4.409674644470215
    3. '   ' → logprob: -5.284674644470215
    4. '+' → logprob: -5.784674644470215
    5. '.' → logprob: -6.159674644470215
    6. ' if' → logprob: -6.284674644470215
    7. ' =' → logprob: -6.534674644470215
    8. '        
' → logprob: -6.534674644470215
    9. '
' → logprob: -7.534674644470215
    10. '#' → logprob: -7.659674644470215

Token 769: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0170236825942993
    2. 'total' → logprob: -1.0170236825942993
    3. ' total' → logprob: -2.2670235633850098
    4. 'augment' → logprob: -2.7670235633850098
    5. 'max' → logprob: -3.2670235633850098
    6. ' ' → logprob: -4.64202356338501
    7. ' augment' → logprob: -4.89202356338501
    8. 'une' → logprob: -5.01702356338501
    9. 'left' → logprob: -5.01702356338501
    10. 'cré' → logprob: -5.14202356338501

Token 770: ' seule' (ID: 41983)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5913246870040894
    2. 'long' → logprob: -1.7163246870040894
    3. 'plus' → logprob: -2.091324806213379
    4. ' longueur' → logprob: -2.341324806213379
    5. '   ' → logprob: -2.716324806213379
    6. 'ligne' → logprob: -3.341324806213379
    7. ' longer' → logprob: -3.591324806213379
    8. ' max' → logprob: -3.716324806213379
    9. '+' → logprob: -3.716324806213379
    10. 'larg' → logprob: -3.966324806213379

Token 771: ' sé' (ID: 7462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020785242319107056
    2. ',' → logprob: -4.145785331726074
    3. '   ' → logprob: -6.770785331726074
    4. '.' → logprob: -6.770785331726074
    5. ':' → logprob: -7.770785331726074
    6. '+' → logprob: -8.145785331726074
    7. '        
' → logprob: -8.270785331726074
    8. '#' → logprob: -8.520785331726074
    9. ',
' → logprob: -8.520785331726074
    10. '=' → logprob: -8.645785331726074

Token 772: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0016698228428140283
    2. 'q' → logprob: -7.376669883728027
    3. 'rie' → logprob: -7.876669883728027
    4. 'quences' → logprob: -8.376669883728027
    5. 'qu' → logprob: -8.751669883728027
    6. 'ance' → logprob: -8.876669883728027
    7. 'que' → logprob: -9.876669883728027
    8. 'quent' → logprob: -10.001669883728027
    9. 'QUENCE' → logprob: -11.626669883728027
    10. '#' → logprob: -12.001669883728027

Token 773: ' altern' (ID: 7310)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018397267907857895
    2. 'possible' → logprob: -5.018397331237793
    3. ',' → logprob: -5.393397331237793
    4. ' possible' → logprob: -5.893397331237793
    5. '.' → logprob: -6.143397331237793
    6. '_possible' → logprob: -7.893397331237793
    7. ' complète' → logprob: -8.143397331237793
    8. '   ' → logprob: -8.268397331237793
    9. '#' → logprob: -8.393397331237793
    10. 'max' → logprob: -8.768397331237793

Token 774: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.006043862085789442
    2. 'ante' → logprob: -6.131043910980225
    3. 'ated' → logprob: -6.631043910980225
    4. 'ee' → logprob: -7.381043910980225
    5. '-' → logprob: -7.881043910980225
    6. '#' → logprob: -8.381043434143066
    7. 'a' → logprob: -8.881043434143066
    8. 'é' → logprob: -8.881043434143066
    9. '*' → logprob: -9.256043434143066
    10. 'e' → logprob: -9.381043434143066

Token 775: ' parfaite' (ID: 101350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008643409237265587
    2. ',' → logprob: -5.508643627166748
    3. '.' → logprob: -5.883643627166748
    4. '   ' → logprob: -7.758643627166748
    5. '        
' → logprob: -8.38364315032959
    6. ',
' → logprob: -8.38364315032959
    7. '
' → logprob: -9.00864315032959
    8. ':' → logprob: -9.25864315032959
    9. '<|end|>' → logprob: -9.25864315032959
    10. ' =' → logprob: -9.38364315032959

Token 776: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003739387495443225
    2. ',' → logprob: -6.128739356994629
    3. '.' → logprob: -7.503739356994629
    4. '        
' → logprob: -8.753739356994629
    5. '
' → logprob: -9.253739356994629
    6. '   ' → logprob: -9.253739356994629
    7. '<|end|>' → logprob: -9.253739356994629
    8. '           ' → logprob: -9.753739356994629
    9. '#' → logprob: -9.878739356994629
    10. ',
' → logprob: -10.003739356994629

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11045068502426147
    2. 'if' → logprob: -2.8604507446289062
    3. ' if' → logprob: -3.9854507446289062
    4. 'total' → logprob: -4.735450744628906
    5. 'max' → logprob: -4.985450744628906
    6. '   ' → logprob: -4.985450744628906
    7. 'possible' → logprob: -6.985450744628906
    8. 'ans' → logprob: -7.110450744628906
    9. '
' → logprob: -7.360450744628906
    10. '        
' → logprob: -7.360450744628906

Token 778: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7197909951210022
    2. 'if' → logprob: -1.2197909355163574
    3. '       ' → logprob: -2.2197909355163574
    4. 'ans' → logprob: -2.8447909355163574
    5. '   ' → logprob: -3.5947909355163574
    6. 'total' → logprob: -4.094790935516357
    7. 'temp' → logprob: -5.969790935516357
    8. ' if' → logprob: -6.969790935516357
    9. 'possible' → logprob: -7.344790935516357
    10. '#' (adapté à ' #') → logprob: -7.719790935516357

Token 779: ' Pour' (ID: 13931)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7400134205818176
    2. 'ans' → logprob: -1.3650133609771729
    3. 'if' → logprob: -1.7400133609771729
    4. 'candidate' → logprob: -3.115013360977173
    5. 'res' → logprob: -4.365013599395752
    6. '   ' → logprob: -4.615013599395752
    7. 'temp' → logprob: -4.990013599395752
    8. 'possible' → logprob: -5.240013599395752
    9. '       ' → logprob: -5.990013599395752
    10. 'total' → logprob: -6.115013599395752

Token 780: ' connecter' (ID: 85351)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7084977030754089
    2. 'j' → logprob: -1.2084977626800537
    3. 'i' → logprob: -2.7084977626800537
    4. 'max' → logprob: -3.4584977626800537
    5. 'l' → logprob: -3.7084977626800537
    6. ' i' → logprob: -3.9584977626800537
    7. 'total' → logprob: -4.458497524261475
    8. ' l' → logprob: -4.583497524261475
    9. 'k' → logprob: -4.958497524261475
    10. ' total' → logprob: -5.083497524261475

Token 781: ' les' (ID: 1341)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7332668304443359
    2. ' i' → logprob: -1.483266830444336
    3. ' left' → logprob: -1.733266830444336
    4. ' la' → logprob: -2.983266830444336
    5. 'i' → logprob: -3.983266830444336
    6. ' les' → logprob: -4.608266830444336
    7. ' ces' → logprob: -5.483266830444336
    8. ',' → logprob: -5.608266830444336
    9. ' if' → logprob: -5.858266830444336
    10. ' le' → logprob: -5.858266830444336

Token 782: ' deux' (ID: 10301)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.07669198513031
    2. 'i' → logprob: -1.82669198513031
    3. ' deux' → logprob: -1.82669198513031
    4. ' sequences' → logprob: -2.0766921043395996
    5. ' i' → logprob: -2.9516921043395996
    6. ' left' → logprob: -3.0766921043395996
    7. 'sé' → logprob: -3.8266921043395996
    8. 'de' → logprob: -4.0766921043396
    9. ' two' → logprob: -4.3266921043396
    10. 'if' → logprob: -4.3266921043396

Token 783: ' bouts' (ID: 165036)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.6884840726852417
    2. 'if' → logprob: -1.8134840726852417
    3. ' parts' → logprob: -2.6884841918945312
    4. 'sé' → logprob: -2.8134841918945312
    5. 'segments' → logprob: -3.1884841918945312
    6. 'parts' → logprob: -3.4384841918945312
    7. 's' → logprob: -3.8134841918945312
    8. 'part' → logprob: -3.9384841918945312
    9. '#' → logprob: -4.188484191894531
    10. 'seq' → logprob: -4.188484191894531

Token 784: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5657517313957214
    2. ',' → logprob: -1.8157517910003662
    3. 'if' → logprob: -2.065751791000366
    4. ' if' → logprob: -2.065751791000366
    5. '   ' → logprob: -4.565751552581787
    6. ':' → logprob: -5.940751552581787
    7. ',
' → logprob: -6.815751552581787
    8. ' ,' → logprob: -8.065752029418945
    9. '#' → logprob: -8.315752029418945
    10. '
' → logprob: -8.565752029418945

Token 785: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008571903221309185
    2. '       ' → logprob: -5.508572101593018
    3. '#' → logprob: -6.008572101593018
    4. ' if' → logprob: -6.508572101593018
    5. 'max' → logprob: -8.13357162475586
    6. 'continue' → logprob: -9.25857162475586
    7. 'ans' → logprob: -9.38357162475586
    8. '   ' → logprob: -10.88357162475586
    9. 'total' → logprob: -12.13357162475586
    10. 'pass' → logprob: -12.25857162475586

Token 786: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7412801384925842
    2. 'continue' → logprob: -1.2412800788879395
    3. '#' → logprob: -2.3662800788879395
    4. ' vér' → logprob: -2.9912800788879395
    5. 'check' → logprob: -3.7412800788879395
    6. 'v' → logprob: -3.9912800788879395
    7. ' continue' → logprob: -5.1162800788879395
    8. '+=' → logprob: -5.7412800788879395
    9. 'calc' → logprob: -5.7412800788879395
    10. 'aj' → logprob: -6.1162800788879395

Token 787: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.27084532380104065
    2. 'if' → logprob: -1.5208452939987183
    3. 'ify' → logprob: -5.020845413208008
    4. 'f' → logprob: -6.020845413208008
    5. '#' → logprob: -6.270845413208008
    6. '       ' → logprob: -6.270845413208008
    7. 'ifiez' → logprob: -6.395845413208008
    8. 'for' → logprob: -7.270845413208008
    9. 'ifier' → logprob: -7.520845413208008
    10. 'continue' → logprob: -7.770845413208008

Token 788: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3531453609466553
    2. ' if' → logprob: -1.9781453609466553
    3. ' si' → logprob: -2.2281453609466553
    4. 'si' → logprob: -2.9781453609466553
    5. '   ' → logprob: -8.353145599365234
    6. 'la' → logprob: -9.353145599365234
    7. ' que' → logprob: -10.103145599365234
    8. 'A' → logprob: -10.353145599365234
    9. ' la' → logprob: -10.478145599365234
    10. '	if' → logprob: -10.478145599365234

Token 789: ' en' (ID: 469)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1360873579978943
    2. 'new' → logprob: -2.886087417602539
    3. 'left' → logprob: -3.511087417602539
    4. ' A' → logprob: -3.761087417602539
    5. 'val' → logprob: -4.886087417602539
    6. ' left' → logprob: -5.761087417602539
    7. ' new' → logprob: -5.761087417602539
    8. '(A' → logprob: -6.886087417602539
    9. '(' → logprob: -7.261087417602539
    10. ' (' → logprob: -7.636087417602539

Token 790: ' invers' (ID: 38721)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2030322402715683
    2. 'in' → logprob: -2.4530322551727295
    3. 'new' → logprob: -3.0780322551727295
    4. 'left' → logprob: -3.5780322551727295
    5. 'A' → logprob: -4.95303201675415
    6. '1' → logprob: -5.57803201675415
    7. 'verting' → logprob: -5.82803201675415
    8. 'invert' → logprob: -5.82803201675415
    9. ' val' → logprob: -6.07803201675415
    10. 'right' → logprob: -7.45303201675415

Token 791: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.023115839809179306
    2. 'er' → logprob: -4.898115634918213
    3. 'ert' → logprob: -5.398115634918213
    4. 'tant' → logprob: -5.523115634918213
    5. 'rt' → logprob: -6.773115634918213
    6. 't' → logprob: -7.273115634918213
    7. '   ' → logprob: -7.273115634918213
    8. '[i' → logprob: -7.398115634918213
    9. '#' → logprob: -7.648115634918213
    10. 'quant' → logprob: -7.648115634918213

Token 792: ' [' (ID: 723)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03599401190876961
    2. ' A' → logprob: -3.410994052886963
    3. 'i' → logprob: -7.035994052886963
    4. 'right' → logprob: -7.660994052886963
    5. '[i' → logprob: -7.660994052886963
    6. ' i' → logprob: -8.910993576049805
    7. 'left' → logprob: -9.285993576049805
    8. '   ' → logprob: -9.535993576049805
    9. ' right' → logprob: -9.535993576049805
    10. ')' → logprob: -10.035993576049805

Token 793: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8670179997570813e-05
    2. ' i' → logprob: -11.750019073486328
    3. '(i' → logprob: -12.000019073486328
    4. '[i' → logprob: -12.500019073486328
    5. ']' → logprob: -15.125019073486328
    6. '
' → logprob: -15.500019073486328
    7. '```' → logprob: -16.000019073486328
    8. ',i' → logprob: -16.750019073486328
    9. 'range' → logprob: -16.875019073486328
    10. '   ' → logprob: -17.000019073486328

Token 794: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.629921436891891e-05
    2. '1' → logprob: -12.00002670288086
    3. 'i' → logprob: -12.12502670288086
    4. '+
' → logprob: -12.25002670288086
    5. ' +' → logprob: -12.37502670288086
    6. '+i' → logprob: -13.00002670288086
    7. ']+' → logprob: -13.50002670288086
    8. ']' → logprob: -14.12502670288086
    9. ':i' → logprob: -15.00002670288086
    10. '
' → logprob: -15.12502670288086

Token 795: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.20603168499656e-05
    2. '+' → logprob: -9.750061988830566
    3. ' ' → logprob: -12.750061988830566
    4. '2' → logprob: -15.750061988830566
    5. '```' → logprob: -15.875061988830566
    6. '<|end|>' → logprob: -15.875061988830566
    7. '
' → logprob: -16.250062942504883
    8. ' +' → logprob: -17.000062942504883
    9. ']' → logprob: -17.125062942504883
    10. '0' → logprob: -17.312562942504883

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45642417669296265
    2. '],' → logprob: -1.7064242362976074
    3. ']' → logprob: -1.9564242362976074
    4. ',i' → logprob: -3.2064242362976074
    5. '+' → logprob: -6.706424236297607
    6. ' ,' → logprob: -7.206424236297607
    7. '],
' → logprob: -8.45642375946045
    8. ']
' → logprob: -8.58142375946045
    9. ',j' → logprob: -9.20642375946045
    10. ':i' → logprob: -9.33142375946045

Token 797: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007213685312308371
    2. ' i' → logprob: -7.250721454620361
    3. '
' → logprob: -12.125720977783203
    4. ']' → logprob: -12.875720977783203
    5. ' 
' → logprob: -14.500720977783203
    6. '	i' → logprob: -14.625720977783203
    7. '```' → logprob: -15.000720977783203
    8. ',i' → logprob: -15.250720977783203
    9. '(i' → logprob: -15.375720977783203
    10. '   ' → logprob: -15.500720977783203

Token 798: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00424520019441843
    2. ']' → logprob: -5.504245281219482
    3. '1' → logprob: -9.629244804382324
    4. '],' → logprob: -9.629244804382324
    5. ']+' → logprob: -11.254244804382324
    6. '```' → logprob: -12.379244804382324
    7. '+]' → logprob: -12.754244804382324
    8. ' +' → logprob: -12.879244804382324
    9. '+i' → logprob: -13.254244804382324
    10. 'i' → logprob: -13.629244804382324

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005552975926548243
    2. '+' → logprob: -7.500555515289307
    3. ' ' → logprob: -13.625555038452148
    4. '
' → logprob: -14.750555038452148
    5. ']' → logprob: -15.375555038452148
    6. '```' → logprob: -15.625555038452148
    7. '۱' → logprob: -16.62555503845215
    8. '<|end|>' → logprob: -16.75055503845215
    9. '१' → logprob: -17.00055503845215
    10. '１' → logprob: -17.06305503845215

Token 800: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3878594636917114
    2. '],' → logprob: -1.1378594636917114
    3. ']
' → logprob: -7.137859344482422
    4. ']:
' → logprob: -9.387859344482422
    5. ']
' → logprob: -10.512859344482422
    6. '],
' → logprob: -11.137859344482422
    7. ']

' → logprob: -11.387859344482422
    8. ' ]' → logprob: -11.512859344482422
    9. ']:

' → logprob: -11.762859344482422
    10. ' ],' → logprob: -12.137859344482422

Token 801: ' cela' (ID: 17542)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8883984684944153
    2. 'the' → logprob: -2.0133984088897705
    3. 'le' → logprob: -2.3883984088897705
    4. '#' → logprob: -2.3883984088897705
    5. 'left' → logprob: -2.5133984088897705
    6. 'if' → logprob: -3.0133984088897705
    7. 'max' → logprob: -3.2633984088897705
    8. 'new' → logprob: -3.2633984088897705
    9. 'total' → logprob: -3.5133984088897705
    10. 'la' → logprob: -4.51339864730835

Token 802: ' fonctionne' (ID: 79086)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.9576210975646973
    2. 'perm' → logprob: -2.2076210975646973
    3. 'pe' → logprob: -2.3326210975646973
    4. 'can' → logprob: -2.5826210975646973
    5. 'allows' → logprob: -3.0826210975646973
    6. '#' → logprob: -3.4576210975646973
    7. 'creates' → logprob: -3.4576210975646973
    8. ' peut' → logprob: -3.5826210975646973
    9. 'per' → logprob: -3.8326210975646973
    10. 'break' → logprob: -3.9576210975646973

Token 803: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0805058404803276
    2. ':' → logprob: -2.955505847930908
    3. '           ' → logprob: -4.955505847930908
    4. ':
' → logprob: -5.455505847930908
    5. '.' → logprob: -5.580505847930908
    6. ',' → logprob: -5.580505847930908
    7. ' and' → logprob: -6.205505847930908
    8. '   ' → logprob: -6.580505847930908
    9. ' if' → logprob: -7.330505847930908
    10. 'and' → logprob: -7.830505847930908

Token 804: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030612409114837646
    2. '):' → logprob: -4.780612468719482
    3. 'if' → logprob: -5.030612468719482
    4. '       ' → logprob: -5.280612468719482
    5. 'continue' → logprob: -6.030612468719482
    6. ')
' → logprob: -6.655612468719482
    7. '   ' → logprob: -6.780612468719482
    8. '#' → logprob: -6.780612468719482
    9. '):
' → logprob: -7.030612468719482
    10. ' )' → logprob: -7.030612468719482

Token 805: 'jà' (ID: 19483)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0798487737774849
    2. 'jà' → logprob: -3.0798487663269043
    3. 'pass' → logprob: -4.704848766326904
    4. 'j' → logprob: -4.954848766326904
    5. 'ja' → logprob: -5.204848766326904
    6. ')' → logprob: -6.079848766326904
    7. 'cal' → logprob: -6.204848766326904
    8. 'com' → logprob: -7.454848766326904
    9. 'fi' → logprob: -7.454848766326904
    10. '#' → logprob: -7.829848766326904

Token 806: ' fait' (ID: 7473)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.1427273452281952
    2. 'com' → logprob: -3.3927273750305176
    3. 'fait' → logprob: -3.3927273750305176
    4. 'pris' → logprob: -3.5177273750305176
    5. ' testé' → logprob: -4.142727375030518
    6. 'calcul' → logprob: -5.142727375030518
    7. 'v' → logprob: -5.392727375030518
    8. 'in' → logprob: -5.517727375030518
    9. '```' → logprob: -6.017727375030518
    10. 'prise' → logprob: -7.767727375030518

Token 807: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002722610253840685
    2. ').' → logprob: -6.12772274017334
    3. ')
' → logprob: -8.00272274017334
    4. '),' → logprob: -9.12772274017334
    5. '   ' → logprob: -10.75272274017334
    6. ' ici' → logprob: -11.37772274017334
    7. ')...' → logprob: -11.62772274017334
    8. '#' → logprob: -12.00272274017334
    9. 'continue' → logprob: -12.00272274017334
    10. '.)' → logprob: -12.00272274017334

Token 808: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08593662083148956
    2. 'continue' → logprob: -2.8359365463256836
    3. ' continue' → logprob: -4.960936546325684
    4. '<|end|>' → logprob: -5.085936546325684
    5. '   ' → logprob: -5.585936546325684
    6. '#' → logprob: -5.585936546325684
    7. ')' → logprob: -6.960936546325684
    8. ' if' → logprob: -7.710936546325684
    9. 'if' → logprob: -7.960936546325684
    10. '```' → logprob: -8.585936546325684

Token 809: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04132134094834328
    2. '   ' → logprob: -3.916321277618408
    3. 'continue' → logprob: -4.666321277618408
    4. 'max' → logprob: -5.791321277618408
    5. 'if' → logprob: -5.916321277618408
    6. ' if' → logprob: -6.541321277618408
    7. '#' (adapté à ' #') → logprob: -6.916321277618408
    8. 'else' → logprob: -7.291321277618408
    9. ' continue' → logprob: -7.541321277618408
    10. '
' → logprob: -7.541321277618408

Token 810: ' Sinon' (ID: 154924)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15067142248153687
    2. 'if' → logprob: -2.7756714820861816
    3. 'continue' → logprob: -2.9006714820861816
    4. '#' → logprob: -4.900671482086182
    5. '   ' → logprob: -5.275671482086182
    6. 'max' → logprob: -5.650671482086182
    7. ' if' → logprob: -5.900671482086182
    8. ' continue' → logprob: -6.525671482086182
    9. '```' → logprob: -7.650671482086182
    10. 'pass' → logprob: -7.775671482086182

Token 811: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13092388212680817
    2. '#' → logprob: -3.2559239864349365
    3. 'continue' → logprob: -3.3809239864349365
    4. ' continue' → logprob: -4.005923748016357
    5. ' if' → logprob: -4.255923748016357
    6. 'if' → logprob: -4.505923748016357
    7. 'pass' → logprob: -6.130923748016357
    8. ' #' → logprob: -6.755923748016357
    9. ' on' → logprob: -7.130923748016357
    10. ' pass' → logprob: -7.255923748016357

Token 812: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05172273516654968
    2. ' continue' → logprob: -4.301722526550293
    3. '#' → logprob: -4.551722526550293
    4. 'try' → logprob: -4.676722526550293
    5. 'pe' → logprob: -5.301722526550293
    6. 'contin' → logprob: -5.551722526550293
    7. 'p' → logprob: -6.676722526550293
    8. 'print' → logprob: -6.926722526550293
    9. 'pour' → logprob: -7.051722526550293
    10. 'pass' → logprob: -7.301722526550293

Token 813: ' envis' (ID: 76610)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.19193412363529205
    2. ' essayer' → logprob: -2.691934108734131
    3. '#' → logprob: -3.441934108734131
    4. 'penser' → logprob: -4.066934108734131
    5. 'continue' → logprob: -4.441934108734131
    6. 'ess' → logprob: -4.441934108734131
    7. 'try' → logprob: -4.566934108734131
    8. 'pass' → logprob: -4.816934108734131
    9. ' continuer' → logprob: -4.816934108734131
    10. 'tester' → logprob: -5.816934108734131

Token 814: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.00026777281891554594
    2. 'age' → logprob: -8.25026798248291
    3. 'a' → logprob: -12.37526798248291
    4. 'ger' → logprob: -13.87526798248291
    5. 'er' → logprob: -14.12526798248291
    6. 'ag' → logprob: -15.87526798248291
    7. 'agé' → logprob: -16.500267028808594
    8. '```' → logprob: -16.875267028808594
    9. '#' → logprob: -17.125267028808594
    10. 'AGER' → logprob: -17.125267028808594

Token 815: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1165010929107666
    2. 'contin' → logprob: -1.1165010929107666
    3. '#' → logprob: -2.3665010929107666
    4. 'continue' → logprob: -2.6165010929107666
    5. 'pass' → logprob: -2.8665010929107666
    6. '   ' → logprob: -3.1165010929107666
    7. 'd' → logprob: -3.9915010929107666
    8. 'une' → logprob: -4.1165008544921875
    9. 'if' → logprob: -4.6165008544921875
    10. 'de' → logprob: -5.2415008544921875

Token 816: ''in' (ID: 17942)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6262722611427307
    2. ''in' → logprob: -1.626272201538086
    3. ''ét' → logprob: -3.251272201538086
    4. 'e' → logprob: -3.751272201538086
    5. 'i' → logprob: -3.751272201538086
    6. '#' → logprob: -3.876272201538086
    7. 'ess' → logprob: -4.126272201538086
    8. '```' → logprob: -4.126272201538086
    9. ''aj' → logprob: -4.376272201538086
    10. 'contin' → logprob: -4.626272201538086

Token 817: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.08193182945251465
    2. 'verting' → logprob: -3.5819318294525146
    3. 'vert' → logprob: -3.8319318294525146
    4. 'ver' → logprob: -3.9569318294525146
    5. 'verse' → logprob: -5.456932067871094
    6. 'v' → logprob: -6.206932067871094
    7. 'verter' → logprob: -7.206932067871094
    8. 'version' → logprob: -7.581932067871094
    9. '[' → logprob: -8.081932067871094
    10. 'verst' → logprob: -8.456932067871094

Token 818: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.06448386609554291
    2. '[i' → logprob: -2.939483880996704
    3. 'ser' → logprob: -5.314483642578125
    4. '[' → logprob: -5.814483642578125
    5. '   ' → logprob: -7.564483642578125
    6. '(i' → logprob: -8.814483642578125
    7. 'i' → logprob: -8.939483642578125
    8. 'iter' → logprob: -9.189483642578125
    9. '#' → logprob: -9.314483642578125
    10. 'ir' → logprob: -9.689483642578125

Token 819: ' une' (ID: 2463)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.046361275017261505
    2. 'i' → logprob: -3.671361207962036
    3. 'A' → logprob: -4.546361446380615
    4. '[' → logprob: -6.421361446380615
    5. 'the' → logprob: -6.671361446380615
    6. ' i' → logprob: -6.796361446380615
    7. 'right' → logprob: -7.296361446380615
    8. ' [' → logprob: -7.296361446380615
    9. ' A' → logprob: -7.421361446380615
    10. '(i' → logprob: -7.421361446380615

Token 820: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5592268109321594
    2. 'long' → logprob: -1.5592267513275146
    3. 'segment' → logprob: -1.8092267513275146
    4. 's' → logprob: -4.809226989746094
    5. 'sé' → logprob: -4.809226989746094
    6. 'large' → logprob: -5.059226989746094
    7. 'pl' → logprob: -5.184226989746094
    8. 'larg' → logprob: -5.309226989746094
    9. 'seg' → logprob: -5.434226989746094
    10. '+' → logprob: -6.059226989746094

Token 821: ' grande' (ID: 10094)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.11258681118488312
    2. 'large' → logprob: -2.862586736679077
    3. 'grand' → logprob: -3.612586736679077
    4. 'gr' → logprob: -3.987586736679077
    5. ' longue' → logprob: -6.112586975097656
    6. '```' → logprob: -7.362586975097656
    7. 'import' → logprob: -8.237586975097656
    8. ' grande' → logprob: -8.987586975097656
    9. ' long' → logprob: -8.987586975097656
    10. 'larg' → logprob: -9.612586975097656

Token 822: ' partie' (ID: 22139)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.39427921175956726
    2. 'portion' → logprob: -1.2692792415618896
    3. '#' → logprob: -3.8942792415618896
    4. 'seg' → logprob: -5.2692790031433105
    5. ' portion' → logprob: -5.6442790031433105
    6. 'tail' → logprob: -5.7692790031433105
    7. 'pl' → logprob: -6.6442790031433105
    8. 'interval' → logprob: -6.7692790031433105
    9. ' segment' → logprob: -6.8942790031433105
    10. 'port' → logprob: -6.8942790031433105

Token 823: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027956819161772728
    2. '   ' → logprob: -4.902956962585449
    3. 'continue' → logprob: -5.027956962585449
    4. '#' → logprob: -5.527956962585449
    5. ' if' → logprob: -5.652956962585449
    6. 'if' → logprob: -5.777956962585449
    7. ' continue' → logprob: -7.152956962585449
    8. '        
' → logprob: -7.402956962585449
    9. '```' → logprob: -8.77795696258545
    10. ',' → logprob: -8.77795696258545

Token 825: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7396793961524963
    2. '   ' → logprob: -1.7396793365478516
    3. 'if' → logprob: -2.1146793365478516
    4. 'max' → logprob: -2.1146793365478516
    5. 'ans' → logprob: -3.4896793365478516
    6. '#' (adapté à ' #') → logprob: -3.4896793365478516
    7. 'continue' → logprob: -3.4896793365478516
    8. 'for' → logprob: -5.364679336547852
    9. ' if' → logprob: -5.989679336547852
    10. ' ans' → logprob: -6.364679336547852

Token 826: ' Mais' (ID: 13880)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.565279483795166
    2. 'ans' → logprob: -1.315279483795166
    3. '   ' → logprob: -3.190279483795166
    4. 'max' → logprob: -3.565279483795166
    5. '       ' → logprob: -3.940279483795166
    6. 'possible' → logprob: -3.940279483795166
    7. 'candidate' → logprob: -4.440279483795166
    8. 'continue' → logprob: -4.565279483795166
    9. 'res' → logprob: -4.815279483795166
    10. '#' → logprob: -5.190279483795166

Token 827: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9305467009544373
    2. 'continue' → logprob: -1.055546760559082
    3. '#' → logprob: -2.555546760559082
    4. ' continue' → logprob: -2.680546760559082
    5. 'pass' → logprob: -2.930546760559082
    6. '   ' → logprob: -3.930546760559082
    7. ' on' → logprob: -4.180546760559082
    8. '...' → logprob: -5.805546760559082
    9. ' #' → logprob: -5.930546760559082
    10. 'if' → logprob: -6.180546760559082

Token 828: ' maximum' (ID: 10562)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.14612610638141632
    2. ' for' → logprob: -2.8961260318756104
    3. '#' → logprob: -3.3961260318756104
    4. 'for' → logprob: -4.3961262702941895
    5. ' #' → logprob: -5.2711262702941895
    6. '```' → logprob: -5.2711262702941895
    7. 'code' → logprob: -5.3961262702941895
    8. ' continue' → logprob: -5.6461262702941895
    9. 'continue' → logprob: -6.0211262702941895
    10. ' reste' → logprob: -6.6461262702941895

Token 829: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19343946874141693
    2. ' =' → logprob: -2.318439483642578
    3. '=max' → logprob: -2.568439483642578
    4. '+=' → logprob: -8.568439483642578
    5. 'possible' → logprob: -8.693439483642578
    6. ' possible' → logprob: -9.318439483642578
    7. 'max' → logprob: -9.693439483642578
    8. ',' → logprob: -10.068439483642578
    9. ' +=' → logprob: -10.318439483642578
    10. '_' → logprob: -10.318439483642578

Token 830: ' sé' (ID: 7462)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2891167104244232
    2. 'ans' → logprob: -1.6641167402267456
    3. 'left' → logprob: -3.539116621017456
    4. ' max' → logprob: -4.289116859436035
    5. ' ans' → logprob: -4.664116859436035
    6. 'right' → logprob: -6.414116859436035
    7. 'la' → logprob: -6.539116859436035
    8. ' la' → logprob: -6.789116859436035
    9. 'len' → logprob: -6.914116859436035
    10. 'l' → logprob: -7.039116859436035

Token 831: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0010170908644795418
    2. 'q' → logprob: -7.626017093658447
    3. 'quences' → logprob: -7.751017093658447
    4. 'QUENCE' → logprob: -10.126016616821289
    5. '#' → logprob: -10.376016616821289
    6. 'qu' → logprob: -11.001016616821289
    7. 'quent' → logprob: -13.251016616821289
    8. '}' → logprob: -13.376016616821289
    9. '   ' → logprob: -13.876016616821289
    10. ' qu' → logprob: -14.001016616821289

Token 832: ' altern' (ID: 7310)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.864800214767456
    2. 'possible' → logprob: -1.364800214767456
    3. ' =' → logprob: -1.489800214767456
    4. '=' → logprob: -2.989800214767456
    5. '_possible' → logprob: -3.114800214767456
    6. 'altern' → logprob: -6.989800453186035
    7. '=max' → logprob: -6.989800453186035
    8. ' possibles' → logprob: -8.239800453186035
    9. '+=' → logprob: -8.364800453186035
    10. ' +=' → logprob: -8.489800453186035

Token 833: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.044186171144247055
    2. 'ancée' → logprob: -4.669186115264893
    3. 'cée' → logprob: -5.544186115264893
    4. 'uée' → logprob: -5.544186115264893
    5. 'ated' → logprob: -5.669186115264893
    6. '[' → logprob: -5.794186115264893
    7. 'é' → logprob: -5.794186115264893
    8. 'at' → logprob: -6.169186115264893
    9. '{' → logprob: -6.794186115264893
    10. '-' → logprob: -6.919186115264893

Token 834: ' possible' (ID: 4149)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6606412529945374
    2. ' =' → logprob: -1.4106411933898926
    3. 'possible' → logprob: -1.9106411933898926
    4. ' possible' → logprob: -2.7856411933898926
    5. '=max' → logprob: -4.035641193389893
    6. '_possible' → logprob: -4.910641193389893
    7. 'est' → logprob: -6.035641193389893
    8. ' est' → logprob: -7.535641193389893
    9. 'pe' → logprob: -7.785641193389893
    10. 'ans' → logprob: -7.910641193389893

Token 835: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18610043823719025
    2. ' =' → logprob: -2.061100482940674
    3. '=max' → logprob: -3.436100482940674
    4. 'possible' → logprob: -4.936100482940674
    5. 'max' → logprob: -6.686100482940674
    6. ' possible' → logprob: -7.186100482940674
    7. '_possible' → logprob: -7.936100482940674
    8. '#' → logprob: -8.686100006103516
    9. 'ans' → logprob: -8.811100006103516
    10. 'est' → logprob: -9.436100006103516

Token 836: ' au' (ID: 2791)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.017621612176299095
    2. 'max' → logprob: -4.1426215171813965
    3. 'N' → logprob: -7.1426215171813965
    4. '   ' → logprob: -8.142621994018555
    5. ' left' → logprob: -8.142621994018555
    6. 'min' → logprob: -8.892621994018555
    7. 'le' → logprob: -11.017621994018555
    8. '	left' → logprob: -11.267621994018555
    9. ' max' → logprob: -12.017621994018555
    10. '```' → logprob: -12.017621994018555

Token 837: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.6636208891868591
    2. 'moins' → logprob: -0.9136208891868591
    3. 'maximum' → logprob: -3.288620948791504
    4. 'max' → logprob: -3.788620948791504
    5. 'most' → logprob: -3.788620948791504
    6. 'minimum' → logprob: -7.038620948791504
    7. 'mo' → logprob: -7.913620948791504
    8. 'min' → logprob: -10.163620948791504
    9. '```' → logprob: -10.788620948791504
    10. '+' → logprob: -10.913620948791504

Token 838: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0033772189635783434
    2. 'N' → logprob: -5.878377437591553
    3. 'max' → logprob: -8.128376960754395
    4. ' left' → logprob: -8.628376960754395
    5. '   ' → logprob: -9.753376960754395
    6. 'ans' → logprob: -10.503376960754395
    7. 'min' → logprob: -12.628376960754395
    8. 'right' → logprob: -13.253376960754395
    9. ' N' → logprob: -13.628376960754395
    10. '```' → logprob: -14.003376960754395

Token 839: '_len' (ID: 13683)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08973386138677597
    2. '_len' → logprob: -2.464733839035034
    3. 'len' → logprob: -7.714734077453613
    4. '[len' → logprob: -8.714734077453613
    5. '[' → logprob: -9.714734077453613
    6. '   ' → logprob: -10.464734077453613
    7. '+' → logprob: -10.964734077453613
    8. '[-' → logprob: -11.714734077453613
    9. 'Len' → logprob: -11.964734077453613
    10. ' +' → logprob: -11.964734077453613

Token 840: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5676175951957703
    2. ' +' → logprob: -1.067617654800415
    3. '[i' → logprob: -2.567617654800415
    4. ',' → logprob: -5.817617416381836
    5. ')' → logprob: -5.942617416381836
    6. ']' → logprob: -6.442617416381836
    7. '+i' → logprob: -6.692617416381836
    8. ']+' → logprob: -6.942617416381836
    9. '   ' → logprob: -7.067617416381836
    10. ')+' → logprob: -7.692617416381836

Token 841: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00615678122267127
    2. ' right' → logprob: -5.256156921386719
    3. '1' → logprob: -7.006156921386719
    4. '   ' → logprob: -11.506156921386719
    5. ' ' → logprob: -12.631156921386719
    6. '+' → logprob: -13.881156921386719
    7. '	right' → logprob: -14.631156921386719
    8. '```' → logprob: -14.881156921386719
    9. '(right' → logprob: -15.256156921386719
    10. '[right' → logprob: -15.506156921386719

Token 842: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0015692608430981636
    2. '[i' → logprob: -6.6265692710876465
    3. 'len' → logprob: -8.501568794250488
    4. '+' → logprob: -10.501568794250488
    5. 'Len' → logprob: -11.876568794250488
    6. '```' → logprob: -13.876568794250488
    7. '[' → logprob: -14.126568794250488
    8. '1' → logprob: -14.376568794250488
    9. '   ' → logprob: -14.876568794250488
    10. '[len' → logprob: -15.001568794250488

Token 843: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5742775201797485
    2. '+' → logprob: -1.8242775201797485
    3. ' +' → logprob: -1.9492775201797485
    4. '   ' → logprob: -3.074277400970459
    5. '
' → logprob: -3.324277400970459
    6. ',' → logprob: -4.699277400970459
    7. ' if' → logprob: -4.824277400970459
    8. 'if' → logprob: -4.824277400970459
    9. ' -' → logprob: -4.949277400970459
    10. '-' → logprob: -5.324277400970459

Token 844: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7402182817459106
    2. 'if' → logprob: -1.4902182817459106
    3. '   ' → logprob: -1.7402182817459106
    4. 'max' → logprob: -2.740218162536621
    5. ' if' → logprob: -3.115218162536621
    6. 'print' → logprob: -5.490218162536621
    7. 'ans' → logprob: -5.615218162536621
    8. '
' → logprob: -5.865218162536621
    9. '           ' → logprob: -7.240218162536621
    10. '    
' → logprob: -8.115218162536621

Token 845: ' candidate' (ID: 17098)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2532978653907776
    2. 'if' → logprob: -1.7532978057861328
    3. 'ans' → logprob: -3.503297805786133
    4. '   ' → logprob: -4.378297805786133
    5. ' if' → logprob: -5.628297805786133
    6. 'max' → logprob: -5.878297805786133
    7. '
' → logprob: -7.753297805786133
    8. 'temp' → logprob: -8.003297805786133
    9. '           ' → logprob: -8.503297805786133
    10. ' ans' → logprob: -8.503297805786133

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132631182670593
    2. ' =' → logprob: -1.313263177871704
    3. '=max' → logprob: -14.063262939453125
    4. '＝' → logprob: -15.438262939453125
    5. 'max' → logprob: -15.938262939453125
    6. '_' → logprob: -16.313262939453125
    7. '_candidate' → logprob: -17.063262939453125
    8. '   ' → logprob: -17.438262939453125
    9. '_max' → logprob: -17.563262939453125
    10. 's' → logprob: -18.188262939453125

Token 847: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00407923199236393
    2. ' left' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.50407886505127
    4. '	left' → logprob: -15.00407886505127
    5. '[left' → logprob: -17.129079818725586
    6. '       ' → logprob: -18.629079818725586
    7. '(left' → logprob: -19.504079818725586
    8. 'max' → logprob: -19.879079818725586
    9. '    ' → logprob: -20.129079818725586
    10. '_left' → logprob: -20.254079818725586

Token 848: '_len' (ID: 13683)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.856408536899835e-05
    2. '[' → logprob: -11.000028610229492
    3. '[c' → logprob: -12.000028610229492
    4. '```' → logprob: -13.375028610229492
    5. '[I' → logprob: -13.875028610229492
    6. 'candidate' → logprob: -14.000028610229492
    7. '[++' → logprob: -14.625028610229492
    8. 'i' → logprob: -15.000028610229492
    9. '[idx' → logprob: -15.625028610229492
    10. '_candidate' → logprob: -15.750028610229492

Token 849: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868740200996399
    2. ' +' → logprob: -1.1368739604949951
    3. '+
' → logprob: -13.386874198913574
    4. ' +
' → logprob: -14.511874198913574
    5. '   ' → logprob: -14.636874198913574
    6. '＋' → logprob: -15.511874198913574
    7. ' ' → logprob: -16.136873245239258
    8. ' plus' → logprob: -16.761873245239258
    9. '+i' → logprob: -17.136873245239258
    10. '+A' → logprob: -17.386873245239258

Token 850: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.023245595395565033
    2. ' right' → logprob: -3.7732455730438232
    3. '	right' → logprob: -16.648244857788086
    4. '[right' → logprob: -17.023244857788086
    5. '(right' → logprob: -18.648244857788086
    6. '1' → logprob: -19.023244857788086
    7. ',right' → logprob: -19.398244857788086
    8. '_right' → logprob: -20.648244857788086
    9. '   ' → logprob: -20.898244857788086
    10. '```' → logprob: -21.023244857788086

Token 851: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00011343709047650918
    2. 'len' → logprob: -9.375113487243652
    3. 'Len' → logprob: -11.000113487243652
    4. '[i' → logprob: -11.500113487243652
    5. '+' → logprob: -13.750113487243652
    6. '```' → logprob: -15.375113487243652
    7. '[_' → logprob: -16.625112533569336
    8. '_LEN' → logprob: -16.625112533569336
    9. '_length' → logprob: -17.000112533569336
    10. '1' → logprob: -17.250112533569336

Token 852: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7216083407402039
    2. '
' → logprob: -1.5966084003448486
    3. '   ' → logprob: -1.8466084003448486
    4. 'if' → logprob: -1.9716084003448486
    5. '       ' → logprob: -4.4716081619262695
    6. '<|end|>' → logprob: -6.8466081619262695
    7. ')' → logprob: -7.8466081619262695
    8. '
' → logprob: -7.8466081619262695
    9. ')
' → logprob: -8.09660816192627
    10. '	if' → logprob: -8.22160816192627

Token 853: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37545615434646606
    2. '
' → logprob: -1.3754560947418213
    3. 'if' → logprob: -3.2504560947418213
    4. '       ' → logprob: -4.5004563331604
    5. '<|end|>' → logprob: -5.6254563331604
    6. '   ' → logprob: -6.0004563331604
    7. ')' → logprob: -6.2504563331604
    8. ')
' → logprob: -7.2504563331604
    9. '
' → logprob: -8.250455856323242
    10. '	if' → logprob: -8.250455856323242

Token 854: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06708573549985886
    2. ' if' → logprob: -2.8170857429504395
    3. '   ' → logprob: -5.3170857429504395
    4. '
' → logprob: -9.067085266113281
    5. 'max' → logprob: -9.942085266113281
    6. '       ' → logprob: -10.442085266113281
    7. '	if' → logprob: -13.067085266113281
    8. '```' → logprob: -14.192085266113281
    9. '           ' → logprob: -14.317085266113281
    10. '    
' → logprob: -14.692085266113281

Token 855: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.048588622361421585
    2. ' candidate' → logprob: -3.048588514328003
    3. '(candidate' → logprob: -13.798588752746582
    4. ' candidat' → logprob: -15.923588752746582
    5. '_candidate' → logprob: -16.173587799072266
    6. 'c' → logprob: -18.173587799072266
    7. '   ' → logprob: -18.548587799072266
    8. 'cand' → logprob: -18.798587799072266
    9. '候' → logprob: -19.673587799072266
    10. 'Candidate' → logprob: -20.048587799072266

Token 856: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11282921582460403
    2. ' >' → logprob: -2.2378292083740234
    3. ':' → logprob: -13.237829208374023
    4. ')' → logprob: -13.362829208374023
    5. '">' → logprob: -14.112829208374023
    6. ')>' → logprob: -14.362829208374023
    7. '<|end|>' → logprob: -14.987829208374023
    8. '()>' → logprob: -15.237829208374023
    9. '   ' → logprob: -15.362829208374023
    10. '```' → logprob: -15.487829208374023

Token 857: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001261845463886857
    2. ' max' → logprob: -9.000125885009766
    3. 'ans' → logprob: -12.875125885009766
    4. '   ' → logprob: -17.625125885009766
    5. '
' → logprob: -18.500125885009766
    6. '	max' → logprob: -18.750125885009766
    7. '       ' → logprob: -19.250125885009766
    8. '           ' → logprob: -19.500125885009766
    9. '(max' → logprob: -19.625125885009766
    10. '_max' → logprob: -19.750125885009766

Token 858: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.250001907348633
    3. '_length' → logprob: -15.875001907348633
    4. '_l' → logprob: -16.500001907348633
    5. 'len' → logprob: -16.750001907348633
    6. '_ans' → logprob: -16.875001907348633
    7. '_val' → logprob: -17.000001907348633
    8. ' _' → logprob: -17.125001907348633
    9. '_LEN' → logprob: -17.750001907348633
    10. '_max' → logprob: -17.875001907348633

Token 859: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06335339695215225
    2. ':
' → logprob: -2.8133533000946045
    3. '<|end|>' → logprob: -7.438353538513184
    4. '):
' → logprob: -8.688353538513184
    5. '       ' → logprob: -8.688353538513184
    6. '   ' → logprob: -9.188353538513184
    7. '):' → logprob: -9.313353538513184
    8. '=' → logprob: -9.688353538513184
    9. '<|end|>' → logprob: -9.938353538513184
    10. ':max' → logprob: -10.813353538513184

Token 860: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03973197191953659
    2. 'max' → logprob: -4.039731979370117
    3. '   ' → logprob: -4.539731979370117
    4. '           ' → logprob: -4.914731979370117
    5. ' max' → logprob: -5.914731979370117
    6. '(max' → logprob: -8.664731979370117
    7. '	max' → logprob: -9.164731979370117
    8. '
' → logprob: -9.414731979370117
    9. '[max' → logprob: -9.914731979370117
    10. ':' → logprob: -10.039731979370117

Token 861: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0018171477131545544
    2. ' max' → logprob: -7.001817226409912
    3. '           ' → logprob: -7.251817226409912
    4. '   ' → logprob: -9.001816749572754
    5. '       ' → logprob: -10.126816749572754
    6. '               ' → logprob: -10.376816749572754
    7. '	max' → logprob: -13.251816749572754
    8. '                   ' → logprob: -16.50181770324707
    9. '```' → logprob: -16.62681770324707
    10. '[max' → logprob: -17.12681770324707

Token 862: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.6240566083070007e-06
    2. 'len' → logprob: -13.375001907348633
    3. 'Len' → logprob: -17.625001907348633
    4. '_LEN' → logprob: -19.000001907348633
    5. 'candidate' → logprob: -19.500001907348633
    6. '_length' → logprob: -20.375001907348633
    7. '_ans' → logprob: -21.250001907348633
    8. '=len' → logprob: -22.125001907348633
    9. '[len' → logprob: -22.125001907348633
    10. 'ans' → logprob: -22.375001907348633

Token 863: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=max' → logprob: -17.630233764648438
    4. '＝' → logprob: -18.380233764648438
    5. '=
' → logprob: -18.505233764648438
    6. '.=' → logprob: -18.630233764648438
    7. '+=' → logprob: -18.880233764648438
    8. '=

' → logprob: -19.005233764648438
    9. '           ' → logprob: -19.505233764648438
    10. ')=' → logprob: -21.380233764648438

Token 864: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.06196768581867218
    2. ' candidate' → logprob: -2.811967611312866
    3. ' candidat' → logprob: -17.311967849731445
    4. '(candidate' → logprob: -17.561967849731445
    5. '_candidate' → logprob: -18.561967849731445
    6. 'c' → logprob: -18.686967849731445
    7. '候' → logprob: -20.686967849731445
    8. ' candidato' → logprob: -21.061967849731445
    9. 'counter' → logprob: -22.561967849731445
    10. 'cand' → logprob: -22.686967849731445

Token 865: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.0484450437361374e-05
    2. '<|end|>' → logprob: -10.625040054321289
    3. ' print' → logprob: -11.375040054321289
    4. '
' → logprob: -12.500040054321289
    5. '```' → logprob: -15.250040054321289
    6. ')' → logprob: -15.250040054321289
    7. '#' → logprob: -15.750040054321289
    8. 'return' → logprob: -16.75004005432129
    9. '(print' → logprob: -16.87504005432129
    10. '.print' → logprob: -17.12504005432129

Token 866: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.2987729102605954e-05
    2. '
' → logprob: -10.375042915344238
    3. ' print' → logprob: -11.500042915344238
    4. ')' → logprob: -14.125042915344238
    5. '```' → logprob: -14.500042915344238
    6. '<|end|>' → logprob: -15.500042915344238
    7. '.print' → logprob: -17.125043869018555
    8. '#print' → logprob: -17.125043869018555
    9. '#' → logprob: -17.250043869018555
    10. '(print' → logprob: -17.750043869018555

Token 867: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.001502598519437015
    2. '(' → logprob: -6.501502513885498
    3. 'max' → logprob: -16.626502990722656
    4. '(min' → logprob: -17.626502990722656
    5. '(Max' → logprob: -17.626502990722656
    6. '()' → logprob: -17.876502990722656
    7. ' max' → logprob: -18.001502990722656
    8. '(
' → logprob: -18.251502990722656
    9. '=max' → logprob: -18.501502990722656
    10. ',max' → logprob: -19.126502990722656

Token 868: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.5776860184123507e-06
    2. 'len' → logprob: -13.25000286102295
    3. 'Len' → logprob: -14.62500286102295
    4. '_LEN' → logprob: -16.000001907348633
    5. '(len' → logprob: -16.125001907348633
    6. '_val' → logprob: -18.500001907348633
    7. '_l' → logprob: -18.750001907348633
    8. '_' → logprob: -19.125001907348633
    9. '_length' → logprob: -19.625001907348633
    10. 's' → logprob: -19.750001907348633

Token 869: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -12.87500286102295
    3. '())' → logprob: -16.375003814697266
    4. ')
' → logprob: -16.625003814697266
    5. '))' → logprob: -17.125003814697266
    6. ')`' → logprob: -17.500003814697266
    7. ')}' → logprob: -18.000003814697266
    8. '+' → logprob: -18.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. '),' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 867
Tokens correctement prédits (1ère position, stricte): 247
Tokens correctement prédits (1ère position, avec adaptation): 265
Tokens correctement prédits (top 10): 543
Précision stricte (1ère position): 28.49%
Précision adaptée (1ère position): 30.57%
Précision (top 10): 62.63%
================================================================================
