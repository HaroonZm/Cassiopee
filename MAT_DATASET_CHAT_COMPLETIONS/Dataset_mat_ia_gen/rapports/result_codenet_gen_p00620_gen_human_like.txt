================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def input():
    return sys.stdin.readline()

def get_line_sums(grid, n, start_r, start_c, target_sum, used):
    results = []
    # Try horizontal line (left to right)
    s = 0
    path = []
    for c in range(start_c, n):
        if used[start_r][c]:
            break
        s += grid[start_r][c]
        path.append((start_r, c))
        if s == target_sum:
            results.append(path[:])
            break
        if s > target_sum:
            break
    # Try horizontal line (right to left)
    s = 0
    path = []
    for c in range(start_c, -1, -1):
        if used[start_r][c]:
            break
        s += grid[start_r][c]
        path.append((start_r, c))
        if s == target_sum:
            results.append(path[:])
            break
        if s > target_sum:
            break
    # Try vertical line (top to bottom)
    s = 0
    path = []
    for r in range(start_r, n):
        if used[r][start_c]:
            break
        s += grid[r][start_c]
        path.append((r, start_c))
        if s == target_sum:
            results.append(path[:])
            break
        if s > target_sum:
            break
    # Try vertical line (bottom to top)
    s = 0
    path = []
    for r in range(start_r, -1, -1):
        if used[r][start_c]:
            break
        s += grid[r][start_c]
        path.append((r, start_c))
        if s == target_sum:
            results.append(path[:])
            break
        if s > target_sum:
            break
    return results

def can_place_all_lines(grid, n, start_points, used, idx):
    if idx == len(start_points):
        # Check all cells are used
        for r in range(n):
            for c in range(n):
                if not used[r][c]:
                    return False
        return True

    r, c = start_points[idx]
    target_sum = -grid[r][c]

    # Get all candidate line paths for this start point
    candidates = get_line_sums(grid, n, r, c, target_sum, used)
    # For each candidate, try placing it and proceed
    for path in candidates:
        # Check if path passes through other start points
        start_points_count = 0
        for rr, cc in path:
            if grid[rr][cc] < 0:
                start_points_count += 1
        if start_points_count > 1:
            continue

        # Mark path as used
        for rr, cc in path:
            used[rr][cc] = True
        used[r][c] = True  # origin always used (included in path but ensure)
        if can_place_all_lines(grid, n, start_points, used, idx + 1):
            return True
        # Backtrack
        for rr, cc in path:
            used[rr][cc] = False

    return False

def main():
    while True:
        n = int(sys.stdin.readline())
        if n == 0:
            break
        grid = []
        for _ in range(n):
            grid.append(list(map(int, sys.stdin.readline().split())))
        # find start points
        start_points = []
        for r in range(n):
            for c in range(n):
                if grid[r][c] < 0:
                    start_points.append((r, c))
        used = [[False]*n for _ in range(n)]
        # For used, initially mark start points as not used, 
        # as lines must pass start points (line includes start point cell)
        # but until set, just False
        # Actually start points must be included by line segments, so mark after line found

        # Because order affects backtracking, we sort start points to optimize:
        # Try points with fewer candidates first
        def count_candidates(sp):
            r, c = sp
            return len(get_line_sums(grid, n, r, c, -grid[r][c], used))
        # But this uses used state that is empty and common for all, so ignore

        # We just proceed as read order

        # Attempt to find solution
        ans = can_place_all_lines(grid, n, start_points, used, 0)
        print("YES" if ans else "NO")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.1689596148207784e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7140973210334778
    2. 'trace' → logprob: -1.339097261428833
    3. '_trace' → logprob: -2.464097261428833
    4. 't' → logprob: -3.464097261428833
    5. 'x' → logprob: -3.839097261428833
    6. 'ex' → logprob: -4.339097499847412
    7. '_version' → logprob: -4.339097499847412
    8. ' _' → logprob: -4.464097499847412
    9. 'default' → logprob: -4.839097499847412
    10. 'set' → logprob: -5.339097499847412

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037415295373648405
    2. 'ursive' → logprob: -6.37874174118042
    3. 'limit' → logprob: -7.00374174118042
    4. 'ur' → logprob: -7.50374174118042
    5. 'urse' → logprob: -9.253741264343262
    6. '_limit' → logprob: -9.628741264343262
    7. 'urs' → logprob: -9.628741264343262
    8. 'ut' → logprob: -9.753741264343262
    9. 'u' → logprob: -10.003741264343262
    10. 't' → logprob: -10.128741264343262

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.531600832939148
    2. 'limit' → logprob: -1.156600832939148
    3. '_depth' → logprob: -2.4066009521484375
    4. '_' → logprob: -5.9066009521484375
    5. 'depth' → logprob: -6.0316009521484375
    6. 'error' → logprob: -7.0316009521484375
    7. '_error' → logprob: -7.5316009521484375
    8. '_limits' → logprob: -8.781600952148438
    9. '('_' → logprob: -8.906600952148438
    10. '_rate' → logprob: -9.281600952148438

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.259079363080673e-05
    2. ' (' → logprob: -11.875012397766113
    3. '(
' → logprob: -12.625012397766113
    4. '(

' → logprob: -13.375012397766113
    5. '("("' → logprob: -15.375012397766113
    6. '((' → logprob: -15.750012397766113
    7. '('' → logprob: -15.875012397766113
    8. '(.' → logprob: -16.75001335144043
    9. '(
' → logprob: -17.12501335144043
    10. '()' → logprob: -17.50001335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064796358346939
    2. '100' → logprob: -2.3506479263305664
    3. ' ' → logprob: -8.100647926330566
    4. '500' → logprob: -9.850647926330566
    5. '300' → logprob: -9.975647926330566
    6. '250' → logprob: -10.725647926330566
    7. '  ' → logprob: -12.350647926330566
    8. '   ' → logprob: -12.600647926330566
    9. '200' → logprob: -12.975647926330566
    10. '999' → logprob: -13.100647926330566

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07455910742282867
    2. '000' → logprob: -2.949559211730957
    3. '00' → logprob: -3.949559211730957
    4. '4' → logprob: -8.824559211730957
    5. '**' → logprob: -10.574559211730957
    6. '6' → logprob: -10.699559211730957
    7. '2' → logprob: -11.949559211730957
    8. '5' → logprob: -12.449559211730957
    9. '```' → logprob: -12.449559211730957
    10. ')' → logprob: -12.574559211730957

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0016072244616225362
    2. '6' → logprob: -6.876607418060303
    3. '9' → logprob: -7.501607418060303
    4. '8' → logprob: -10.751606941223145
    5. ' ' → logprob: -15.126606941223145
    6. '(' → logprob: -15.126606941223145
    7. '```' → logprob: -16.87660789489746
    8. '3' → logprob: -17.62660789489746
    9. '4' → logprob: -18.12660789489746
    10. '5' → logprob: -18.37660789489746

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005465574562549591
    2. '\' → logprob: -6.380465507507324
    3. ')' → logprob: -6.505465507507324
    4. '```' → logprob: -7.130465507507324
    5. 'n' → logprob: -8.255465507507324
    6. '\n' → logprob: -8.880465507507324
    7. 'import' → logprob: -8.880465507507324
    8. '`' → logprob: -9.005465507507324
    9. ',' → logprob: -9.130465507507324
    10. 'a' → logprob: -9.130465507507324

Token 14: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16145841777324677
    2. ' factorial' → logprob: -2.1614584922790527
    3. ' dfs' → logprob: -3.7864584922790527
    4. ' fibonacci' → logprob: -5.536458492279053
    5. ' space' → logprob: -6.661458492279053
    6. ' factor' → logprob: -6.786458492279053
    7. ' recursive' → logprob: -7.411458492279053
    8. ' fib' → logprob: -7.536458492279053
    9. ' main' → logprob: -7.786458492279053
    10. '_' → logprob: -7.911458492279053

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007244306616485119
    2. '():' → logprob: -5.507244110107422
    3. '("("' → logprob: -7.007244110107422
    4. '()' → logprob: -7.382244110107422
    5. '_' → logprob: -7.507244110107422
    6. '('' → logprob: -7.632244110107422
    7. '("' → logprob: -8.882244110107422
    8. '_line' → logprob: -9.882244110107422
    9. '("")' → logprob: -10.007244110107422
    10. '(prompt' → logprob: -10.257244110107422

Token 16: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06371115893125534
    2. '().' → logprob: -3.813711166381836
    3. '(' → logprob: -4.438711166381836
    4. ' ' → logprob: -4.813711166381836
    5. 'input' → logprob: -5.063711166381836
    6. ' sys' → logprob: -5.938711166381836
    7. ' ()' → logprob: -5.938711166381836
    8. 'sys' → logprob: -6.563711166381836
    9. '   ' → logprob: -6.813711166381836
    10. ' input' → logprob: -6.938711166381836

Token 17: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4875110685825348
    2. ' return' → logprob: -1.1125110387802124
    3. ' sys' → logprob: -3.112511157989502
    4. 'sys' → logprob: -4.987511157989502
    5. '   ' → logprob: -6.237511157989502
    6. 'input' → logprob: -6.487511157989502
    7. ' ' → logprob: -6.487511157989502
    8. ' input' → logprob: -7.362511157989502
    9. '    ' → logprob: -10.487510681152344
    10. '  ' → logprob: -10.737510681152344

Token 18: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.09361843764781952
    2. ' input' → logprob: -2.593618392944336
    3. 'sys' → logprob: -4.718618392944336
    4. 'input' → logprob: -5.218618392944336
    5. ' ' → logprob: -8.343618392944336
    6. '  ' → logprob: -11.593618392944336
    7. ''' → logprob: -12.468618392944336
    8. '""' → logprob: -12.593618392944336
    9. ' next' → logprob: -12.718618392944336
    10. '"' → logprob: -12.968618392944336

Token 19: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00013369438238441944
    2. '.stdout' → logprob: -9.250133514404297
    3. '.' → logprob: -10.750133514404297
    4. '.std' → logprob: -11.875133514404297
    5. '.readline' → logprob: -12.375133514404297
    6. 'stdin' → logprob: -13.375133514404297
    7. ' stdin' → logprob: -13.625133514404297
    8. '.argv' → logprob: -14.250133514404297
    9. '(stdin' → logprob: -14.500133514404297
    10. '.__' → logprob: -14.625133514404297

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.114600834436715e-05
    2. '.read' → logprob: -9.375091552734375
    3. '.' → logprob: -12.500091552734375
    4. '.readlines' → logprob: -13.625091552734375
    5. 'read' → logprob: -13.750091552734375
    6. ' readline' → logprob: -15.625091552734375
    7. '.Read' → logprob: -16.500091552734375
    8. '<|end|>' → logprob: -17.000091552734375
    9. '_read' → logprob: -18.125091552734375
    10. '<|end|>' → logprob: -19.250091552734375

Token 21: '()

' (ID: 5874)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3874194920063019
    2. '()' → logprob: -1.1374194622039795
    3. '()
' → logprob: -8.387419700622559
    4. '()\' → logprob: -8.637419700622559
    5. '()

' → logprob: -9.012419700622559
    6. '(' → logprob: -11.762419700622559
    7. '()<' → logprob: -12.262419700622559
    8. '()(' → logprob: -13.137419700622559
    9. '())' → logprob: -13.762419700622559
    10. '.strip' → logprob: -14.137419700622559

Token 22: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.130336195230484
    2. 'def' → logprob: -2.130336284637451
    3. 'N' → logprob: -6.005336284637451
    4. 'a' → logprob: -8.630335807800293
    5. 'class' → logprob: -8.755335807800293
    6. 't' → logprob: -9.380335807800293
    7. '\' → logprob: -9.380335807800293
    8. 'd' → logprob: -9.630335807800293
    9. '(n' → logprob: -9.630335807800293
    10. '    
' → logprob: -9.880335807800293

Token 23: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11206603050231934
    2. ' dfs' → logprob: -3.1120660305023193
    3. ' factorial' → logprob: -3.8620660305023193
    4. '_' → logprob: -4.112066268920898
    5. ' solve' → logprob: -4.612066268920898
    6. ' ' → logprob: -5.237066268920898
    7. ' add' → logprob: -6.737066268920898
    8. '_factor' → logprob: -6.862066268920898
    9. ' factor' → logprob: -6.862066268920898
    10. '_main' → logprob: -7.237066268920898

Token 24: '_line' (ID: 14418)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6033729314804077
    2. '_factor' → logprob: -2.1033730506896973
    3. '_max' → logprob: -2.1033730506896973
    4. '_sum' → logprob: -2.6033730506896973
    5. '_depth' → logprob: -3.6033730506896973
    6. '_user' → logprob: -4.353373050689697
    7. '_next' → logprob: -4.853373050689697
    8. '_prime' → logprob: -4.853373050689697
    9. '_value' → logprob: -5.103373050689697
    10. '_count' → logprob: -5.103373050689697

Token 25: '_s' (ID: 1278)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007386435754597187
    2. '()' → logprob: -5.257386207580566
    3. 's' → logprob: -7.382386207580566
    4. '():
' → logprob: -7.507386207580566
    5. '_' → logprob: -8.757386207580566
    6. ' ():' → logprob: -8.757386207580566
    7. '_tokens' → logprob: -8.757386207580566
    8. '(' → logprob: -9.257386207580566
    9. '_length' → logprob: -9.757386207580566
    10. '_count' → logprob: -9.757386207580566

Token 26: 'ums' (ID: 6162)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6310561895370483
    2. 'plit' → logprob: -1.8810561895370483
    3. 'trs' → logprob: -1.8810561895370483
    4. 'plits' → logprob: -2.631056308746338
    5. 'tring' → logprob: -3.131056308746338
    6. 'trip' → logprob: -3.756056308746338
    7. '()' → logprob: -4.506056308746338
    8. 'pl' → logprob: -5.131056308746338
    9. 't' → logprob: -5.381056308746338
    10. 'eg' → logprob: -8.38105583190918

Token 27: '(grid' (ID: 51818)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7998140454292297
    2. '(' → logprob: -0.9248140454292297
    3. '(line' → logprob: -1.924813985824585
    4. '()' → logprob: -5.924814224243164
    5. '(s' → logprob: -7.049814224243164
    6. '(lines' → logprob: -7.424814224243164
    7. '(row' → logprob: -7.549814224243164
    8. '(x' → logprob: -7.674814224243164
    9. '(input' → logprob: -8.424814224243164
    10. '(data' → logprob: -8.424814224243164

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.203604057431221
    2. '):' → logprob: -1.7036041021347046
    3. ',row' → logprob: -6.828604221343994
    4. ' ,' → logprob: -8.203603744506836
    5. ')' → logprob: -8.203603744506836
    6. ',n' → logprob: -8.453603744506836
    7. '):
' → logprob: -9.953603744506836
    8. '   ' → logprob: -9.953603744506836
    9. ',size' → logprob: -10.078603744506836
    10. ',line' → logprob: -10.578603744506836

Token 29: ' n' (ID: 297)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.8107234239578247
    2. ' row' → logprob: -1.9357234239578247
    3. 'n' → logprob: -2.310723304748535
    4. 'i' → logprob: -2.435723304748535
    5. ' n' → logprob: -2.685723304748535
    6. 'x' → logprob: -2.685723304748535
    7. ' x' → logprob: -3.310723304748535
    8. ' i' → logprob: -3.310723304748535
    9. 'r' → logprob: -3.560723304748535
    10. 'N' → logprob: -3.560723304748535

Token 30: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18084955215454102
    2. ',' → logprob: -1.805849552154541
    3. ')' → logprob: -7.055849552154541
    4. '):
' → logprob: -8.680849075317383
    5. ' ):' → logprob: -10.180849075317383
    6. ' ,' → logprob: -11.180849075317383
    7. '   ' → logprob: -12.805849075317383
    8. ' ' → logprob: -13.305849075317383
    9. '),' → logprob: -13.430849075317383
    10. 'e' → logprob: -13.430849075317383

Token 31: ' start' (ID: 1604)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5859777927398682
    2. ' m' → logprob: -0.8359777927398682
    3. 'k' → logprob: -5.710977554321289
    4. ' k' → logprob: -6.460977554321289
    5. ')' → logprob: -6.960977554321289
    6. '   ' → logprob: -7.460977554321289
    7. ' start' → logprob: -8.023477554321289
    8. 'i' → logprob: -8.023477554321289
    9. ' row' → logprob: -8.023477554321289
    10. 'row' → logprob: -8.148477554321289

Token 32: '_r' (ID: 3442)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3359987735748291
    2. '_row' → logprob: -1.710998773574829
    3. '):' → logprob: -2.585998773574829
    4. '_x' → logprob: -4.21099853515625
    5. '_i' → logprob: -5.08599853515625
    6. '_idx' → logprob: -6.33599853515625
    7. 'x' → logprob: -6.96099853515625
    8. '):
' → logprob: -7.08599853515625
    9. '_index' → logprob: -7.33599853515625
    10. ' ,' → logprob: -7.33599853515625

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023739055905025452
    2. ' ,' → logprob: -8.750237464904785
    3. ')' → logprob: -10.500237464904785
    4. ',start' → logprob: -11.375237464904785
    5. '):' → logprob: -12.125237464904785
    6. 'ex' → logprob: -12.375237464904785
    7. 'r' → logprob: -12.500237464904785
    8. ',r' → logprob: -12.500237464904785
    9. '_,' → logprob: -12.625237464904785
    10. '):
' → logprob: -13.125237464904785

Token 34: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4758760929107666
    2. ' start' → logprob: -0.9758760929107666
    3. 'end' → logprob: -7.1008758544921875
    4. ' end' → logprob: -7.9758758544921875
    5. 'c' → logprob: -8.850875854492188
    6. ')' → logprob: -9.600875854492188
    7. 'n' → logprob: -9.850875854492188
    8. ' ' → logprob: -9.850875854492188
    9. ' c' → logprob: -10.100875854492188
    10. ' col' → logprob: -10.350875854492188

Token 35: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0003969455719925463
    2. '_r' → logprob: -8.750396728515625
    3. '_' → logprob: -9.875396728515625
    4. ',' → logprob: -9.875396728515625
    5. '_col' → logprob: -10.375396728515625
    6. ')' → logprob: -10.500396728515625
    7. 'c' → logprob: -10.500396728515625
    8. '_x' → logprob: -12.000396728515625
    9. '_,' → logprob: -12.250396728515625
    10. '_j' → logprob: -12.250396728515625

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3871379494667053
    2. '):' → logprob: -1.1371378898620605
    3. ')' → logprob: -8.512138366699219
    4. ' ,' → logprob: -10.637138366699219
    5. '):
' → logprob: -11.012138366699219
    6. ' ):' → logprob: -11.387138366699219
    7. '   ' → logprob: -12.137138366699219
    8. '),' → logprob: -13.762138366699219
    9. ':' → logprob: -14.137138366699219
    10. ' ' → logprob: -14.262138366699219

Token 37: ' target' (ID: 3783)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.1692783832550049
    2. ' direction' → logprob: -1.1692783832550049
    3. ' dr' → logprob: -1.6692783832550049
    4. ' step' → logprob: -3.544278383255005
    5. ' end' → logprob: -3.794278383255005
    6. 'length' → logprob: -4.419278144836426
    7. 'direction' → logprob: -4.544278144836426
    8. ' delta' → logprob: -4.669278144836426
    9. ' d' → logprob: -4.794278144836426
    10. 'dr' → logprob: -4.919278144836426

Token 38: '_sum' (ID: 29859)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.04638676717877388
    2. '):' → logprob: -3.79638671875
    3. ')' → logprob: -4.42138671875
    4. '_value' → logprob: -6.29638671875
    5. '_row' → logprob: -6.54638671875
    6. 's' → logprob: -6.67138671875
    7. '_' → logprob: -6.79638671875
    8. ',' → logprob: -7.17138671875
    9. '_sum' → logprob: -7.17138671875
    10. '_s' → logprob: -7.42138671875

Token 39: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006837221444584429
    2. ')' → logprob: -8.125683784484863
    3. ',' → logprob: -8.375683784484863
    4. ' ):' → logprob: -9.625683784484863
    5. '):
' → logprob: -9.625683784484863
    6. '=' → logprob: -11.500683784484863
    7. ':' → logprob: -12.000683784484863
    8. ' ' → logprob: -13.750683784484863
    9. '_' → logprob: -13.750683784484863
    10. ''):' → logprob: -14.000683784484863

Token 40: ' used' (ID: 2061)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.4249504804611206
    2. ' visited' → logprob: -2.29995059967041
    3. ' direction' → logprob: -3.04995059967041
    4. ' current' → logprob: -3.04995059967041
    5. 'path' → logprob: -3.54995059967041
    6. ' length' → logprob: -3.92495059967041
    7. ' depth' → logprob: -4.54995059967041
    8. ' row' → logprob: -4.54995059967041
    9. 'visited' → logprob: -5.04995059967041
    10. ' step' → logprob: -5.17495059967041

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07601862400770187
    2. ',' → logprob: -2.7010185718536377
    3. 's' → logprob: -5.451018810272217
    4. ')' → logprob: -7.576018810272217
    5. '):
' → logprob: -7.576018810272217
    6. ' ):' → logprob: -8.326018333435059
    7. '_cells' → logprob: -9.326018333435059
    8. ')):' → logprob: -9.701018333435059
    9. '_positions' → logprob: -10.076018333435059
    10. ':' → logprob: -10.201018333435059

Token 42: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27549850940704346
    2. '   ' → logprob: -1.5254985094070435
    3. '):' → logprob: -3.900498390197754
    4. '():' → logprob: -6.900498390197754
    5. ' :' → logprob: -7.525498390197754
    6. '<|end|>' → logprob: -8.150498390197754
    7. ')' → logprob: -8.275498390197754
    8. ':
' → logprob: -8.400498390197754
    9. ',' → logprob: -8.400498390197754
    10. '    ' → logprob: -9.650498390197754

Token 43: ' results' (ID: 4376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16785749793052673
    2. ' r' → logprob: -2.6678574085235596
    3. 'r' → logprob: -3.9178574085235596
    4. ' for' → logprob: -4.417857646942139
    5. ' if' → logprob: -4.542857646942139
    6. '    ' → logprob: -5.417857646942139
    7. ' rows' → logprob: -5.417857646942139
    8. ' total' → logprob: -5.667857646942139
    9. ' current' → logprob: -5.792857646942139
    10. ' ' → logprob: -5.792857646942139

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01440019067376852
    2. '=' → logprob: -4.264400005340576
    3. ' ' → logprob: -9.264400482177734
    4. '=[]' → logprob: -9.889400482177734
    5. '[]' → logprob: -10.889400482177734
    6. ')' → logprob: -11.389400482177734
    7. '[:]' → logprob: -11.389400482177734
    8. '   ' → logprob: -11.514400482177734
    9. ',' → logprob: -11.514400482177734
    10. '.' → logprob: -11.764400482177734

Token 45: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.576103150844574
    2. ' []' → logprob: -0.826103150844574
    3. '[' → logprob: -10.076103210449219
    4. ' ' → logprob: -10.326103210449219
    5. ' set' → logprob: -10.326103210449219
    6. '[]
' → logprob: -10.951103210449219
    7. ' []
' → logprob: -11.076103210449219
    8. 'set' → logprob: -11.076103210449219
    9. ' [' → logprob: -12.576103210449219
    10. ' []

' → logprob: -14.201103210449219

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02279871515929699
    2. '    
' → logprob: -4.772798538208008
    3. ' for' → logprob: -5.647798538208008
    4. '
' → logprob: -6.022798538208008
    5. '    ' → logprob: -6.522798538208008
    6. 'def' → logprob: -6.522798538208008
    7. ' ' → logprob: -6.647798538208008
    8. '<|end|>' → logprob: -6.772798538208008
    9. ',' → logprob: -7.147798538208008
    10. 'for' → logprob: -8.022798538208008

Token 47: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4958954453468323
    2. 'for' → logprob: -2.3708953857421875
    3. ' stack' → logprob: -2.3708953857421875
    4. ' if' → logprob: -2.8708953857421875
    5. 'r' → logprob: -3.1208953857421875
    6. ' r' → logprob: -3.6208953857421875
    7. '   ' → logprob: -4.1208953857421875
    8. 'if' → logprob: -4.7458953857421875
    9. 'stack' → logprob: -4.7458953857421875
    10. ' row' → logprob: -4.8708953857421875

Token 48: ' Try' (ID: 14720)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08986908942461014
    2. ' r' → logprob: -2.5898690223693848
    3. 'for' → logprob: -5.339869022369385
    4. 'r' → logprob: -6.589869022369385
    5. ' if' → logprob: -6.589869022369385
    6. ' row' → logprob: -6.714869022369385
    7. ' n' → logprob: -7.339869022369385
    8. '    ' → logprob: -8.464869499206543
    9. ' current' → logprob: -8.464869499206543
    10. ' def' → logprob: -8.589869499206543

Token 49: ' horizontal' (ID: 25511)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7237511277198792
    2. ' to' → logprob: -0.9737511277198792
    3. ':' → logprob: -3.0987510681152344
    4. '   ' → logprob: -3.2237510681152344
    5. ' for' → logprob: -4.598751068115234
    6. 'all' → logprob: -4.723751068115234
    7. 'to' → logprob: -4.973751068115234
    8. ' directions' → logprob: -5.223751068115234
    9. '    ' → logprob: -5.473751068115234
    10. ' ' → logprob: -5.723751068115234

Token 50: ' line' (ID: 2543)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21245761215686798
    2. 'for' → logprob: -1.7124576568603516
    3. ' and' → logprob: -5.837457656860352
    4. ' line' → logprob: -5.962457656860352
    5. ')' → logprob: -7.212457656860352
    6. '   ' → logprob: -7.462457656860352
    7. 'd' → logprob: -7.712457656860352
    8. 's' → logprob: -7.712457656860352
    9. ',' → logprob: -7.837457656860352
    10. ' ' → logprob: -7.962457656860352

Token 51: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06251509487628937
    2. 'for' → logprob: -3.3125150203704834
    3. '   ' → logprob: -4.0625152587890625
    4. 's' → logprob: -5.3125152587890625
    5. '<|end|>' → logprob: -6.9375152587890625
    6. ' if' → logprob: -8.437515258789062
    7. ' ' → logprob: -8.687515258789062
    8. ',' → logprob: -8.687515258789062
    9. '    ' → logprob: -9.187515258789062
    10. ':' → logprob: -9.687515258789062

Token 52: 'left' (ID: 4530)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.829760730266571
    2. 'for' → logprob: -0.829760730266571
    3. 'start' → logprob: -3.204760789871216
    4. ')' → logprob: -3.829760789871216
    5. 'r' → logprob: -3.829760789871216
    6. 'c' → logprob: -4.079760551452637
    7. ' start' → logprob: -4.704760551452637
    8. ' c' → logprob: -5.704760551452637
    9. '   ' → logprob: -5.704760551452637
    10. ' in' → logprob: -5.954760551452637

Token 53: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37656134366989136
    2. ',' → logprob: -1.3765614032745361
    3. ' to' → logprob: -3.251561403274536
    4. ' and' → logprob: -5.001561164855957
    5. '   ' → logprob: -5.126561164855957
    6. 'to' → logprob: -6.001561164855957
    7. 'wards' → logprob: -6.876561164855957
    8. '=' → logprob: -7.126561164855957
    9. ' )' → logprob: -7.251561164855957
    10. ' or' → logprob: -7.501561164855957

Token 54: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02699337713420391
    2. ' right' → logprob: -3.6519932746887207
    3. 'ight' → logprob: -7.526993274688721
    4. ' ' → logprob: -10.276993751525879
    5. 'r' → logprob: -10.901993751525879
    6. 'the' → logprob: -11.401993751525879
    7. '	right' → logprob: -11.526993751525879
    8. 'ght' → logprob: -11.526993751525879
    9. '```' → logprob: -11.526993751525879
    10. 'start' → logprob: -11.901993751525879

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014093453995883465
    2. '):' → logprob: -4.639093399047852
    3. '   ' → logprob: -6.514093399047852
    4. ')
' → logprob: -6.639093399047852
    5. ' )' → logprob: -7.014093399047852
    6. '):
' → logprob: -8.264093399047852
    7. ' for' → logprob: -8.764093399047852
    8. ',' → logprob: -9.889093399047852
    9. ' and' → logprob: -10.514093399047852
    10. '),' → logprob: -11.014093399047852

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09484166651964188
    2. ' for' → logprob: -2.719841718673706
    3. 'for' → logprob: -4.844841480255127
    4. '<|end|>' → logprob: -4.844841480255127
    5. ')' → logprob: -5.469841480255127
    6. ' ' → logprob: -6.344841480255127
    7. ' if' → logprob: -7.719841480255127
    8. ',' → logprob: -7.844841480255127
    9. '
' → logprob: -8.094841957092285
    10. '<|end|>' → logprob: -8.219841957092285

Token 57: ' s' (ID: 265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4282310903072357
    2. 'for' → logprob: -2.1782310009002686
    3. ' if' → logprob: -2.1782310009002686
    4. 'r' → logprob: -3.0532310009002686
    5. 'if' → logprob: -3.1782310009002686
    6. '   ' → logprob: -3.9282310009002686
    7. ' r' → logprob: -4.553231239318848
    8. 'c' → logprob: -7.178231239318848
    9. '```' → logprob: -7.178231239318848
    10. ' row' → logprob: -8.178231239318848

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22100019454956055
    2. 'um' → logprob: -1.9710001945495605
    3. '=' → logprob: -2.8460001945495605
    4. ' ' → logprob: -7.3460001945495605
    5. '   ' → logprob: -9.596000671386719
    6. '=sum' → logprob: -9.971000671386719
    7. 'u' → logprob: -10.721000671386719
    8. '  ' → logprob: -10.846000671386719
    9. ',' → logprob: -11.096000671386719
    10. '    ' → logprob: -12.096000671386719

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017599097918719053
    2. ' ' → logprob: -6.626760005950928
    3. 'grid' → logprob: -8.00175952911377
    4. 'sum' → logprob: -9.50175952911377
    5. 'target' → logprob: -12.12675952911377
    6. ' grid' → logprob: -12.25175952911377
    7. '   ' → logprob: -12.87675952911377
    8. 'int' → logprob: -13.00175952911377
    9. 'um' → logprob: -13.00175952911377
    10. 'start' → logprob: -13.12675952911377

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004851306148339063
    2. 'grid' → logprob: -8.12548542022705
    3. 'sum' → logprob: -8.62548542022705
    4. ' ' → logprob: -12.25048542022705
    5. 'int' → logprob: -13.12548542022705
    6. 'start' → logprob: -14.37548542022705
    7. 'target' → logprob: -14.75048542022705
    8. '1' → logprob: -15.62548542022705
    9. ' grid' → logprob: -16.000484466552734
    10. '```' → logprob: -16.062984466552734

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' path' (ID: 3104)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2605004906654358
    2. ' for' → logprob: -1.510500431060791
    3. 'c' → logprob: -5.635500431060791
    4. 'r' → logprob: -5.760500431060791
    5. '<|end|>' → logprob: -6.885500431060791
    6. 'i' → logprob: -7.885500431060791
    7. ' c' → logprob: -8.38550090789795
    8. ' r' → logprob: -9.76050090789795
    9. ' i' → logprob: -10.76050090789795
    10. ' ' → logprob: -10.88550090789795

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009570736438035965
    2. '=' → logprob: -4.759570598602295
    3. ' ' → logprob: -7.759570598602295
    4. '=[]' → logprob: -8.634571075439453
    5. '<|end|>' → logprob: -9.134571075439453
    6. '_' → logprob: -9.884571075439453
    7. '   ' → logprob: -10.134571075439453
    8. ',' → logprob: -10.509571075439453
    9. ')' → logprob: -10.634571075439453
    10. ':' → logprob: -10.759571075439453

Token 65: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.038102082908153534
    2. ' []' → logprob: -3.288102149963379
    3. '[' → logprob: -10.038102149963379
    4. '[]}' → logprob: -11.663102149963379
    5. '[]
' → logprob: -12.288102149963379
    6. ' ' → logprob: -14.038102149963379
    7. ' [' → logprob: -14.413102149963379
    8. '[],' → logprob: -14.538102149963379
    9. '[]

' → logprob: -14.538102149963379
    10. '[]>' → logprob: -14.913102149963379

Token 66: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6191087365150452
    2. '<|end|>' → logprob: -1.1191086769104004
    3. '   ' → logprob: -2.4941086769104004
    4. 'for' → logprob: -3.2441086769104004
    5. ' ' → logprob: -5.2441086769104
    6. '<|end|>' → logprob: -5.3691086769104
    7. '  ' → logprob: -7.4941086769104
    8. '	for' → logprob: -7.6191086769104
    9. '
' → logprob: -7.7441086769104
    10. ' 
' → logprob: -7.8691086769104

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5275775790214539
    2. 'for' (adapté à ' for') → logprob: -0.9025775790214539
    3. '<|end|>' → logprob: -5.6525774002075195
    4. '   ' → logprob: -7.5275774002075195
    5. ' ' → logprob: -8.52757740020752
    6. 'r' → logprob: -10.02757740020752
    7. ' 
' → logprob: -10.27757740020752
    8. '	for' → logprob: -10.27757740020752
    9. '
' → logprob: -10.65257740020752
    10. '<|end|>' → logprob: -10.77757740020752

Token 68: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2798056900501251
    2. 'i' → logprob: -1.9048056602478027
    3. ' c' → logprob: -2.5298056602478027
    4. 'c' → logprob: -4.529805660247803
    5. ' col' → logprob: -6.279805660247803
    6. ' j' → logprob: -6.404805660247803
    7. 'j' → logprob: -7.404805660247803
    8. ' offset' → logprob: -8.779806137084961
    9. 'col' → logprob: -8.779806137084961
    10. ' range' → logprob: -9.279806137084961

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11283549666404724
    2. 'in' → logprob: -2.23783540725708
    3. 'range' → logprob: -12.612835884094238
    4. ' ' → logprob: -12.862835884094238
    5. '<|end|>' → logprob: -12.862835884094238
    6. '   ' → logprob: -13.987835884094238
    7. '<|end|>' → logprob: -14.237835884094238
    8. '	in' → logprob: -14.487835884094238
    9. ' range' → logprob: -14.737835884094238
    10. 'from' → logprob: -14.862835884094238

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693430483341217
    2. ' range' → logprob: -2.126934289932251
    3. '(range' → logprob: -12.501934051513672
    4. '	range' → logprob: -13.876934051513672
    5. ' ' → logprob: -14.376934051513672
    6. '   ' → logprob: -15.251934051513672
    7. 'rang' → logprob: -15.501934051513672
    8. 'ange' → logprob: -15.626934051513672
    9. '  ' → logprob: -16.001934051513672
    10. ' xrange' → logprob: -16.376934051513672

Token 71: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0009171743295155466
    2. 'start' → logprob: -7.000916957855225
    3. '[start' → logprob: -13.250917434692383
    4. '=start' → logprob: -13.500917434692383
    5. '(' → logprob: -13.875917434692383
    6. ',start' → logprob: -14.750917434692383
    7. ' start' → logprob: -14.875917434692383
    8. ':start' → logprob: -15.375917434692383
    9. '```' → logprob: -15.875917434692383
    10. '   ' → logprob: -15.875917434692383

Token 72: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.3557529857498594e-05
    2. '_r' → logprob: -10.75002384185791
    3. '_' → logprob: -13.75002384185791
    4. ')' → logprob: -15.75002384185791
    5. '_col' → logprob: -15.75002384185791
    6. 'c' → logprob: -16.250022888183594
    7. 'r' → logprob: -16.250022888183594
    8. '```' → logprob: -16.875022888183594
    9. '_column' → logprob: -17.187522888183594
    10. '_d' → logprob: -17.312522888183594

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023035754566080868
    2. ' ,' → logprob: -8.75023078918457
    3. ',start' → logprob: -9.75023078918457
    4. 'start' → logprob: -13.00023078918457
    5. ',len' → logprob: -13.25023078918457
    6. ',n' → logprob: -13.25023078918457
    7. '+' → logprob: -13.50023078918457
    8. ',current' → logprob: -13.87523078918457
    9. ' ' → logprob: -14.37523078918457
    10. '=start' → logprob: -14.75023078918457

Token 74: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005019206088036299
    2. 'start' → logprob: -5.630019187927246
    3. ' n' → logprob: -6.755019187927246
    4. 'min' → logprob: -8.505019187927246
    5. ' start' → logprob: -10.380019187927246
    6. ' min' → logprob: -11.755019187927246
    7. 'len' → logprob: -12.255019187927246
    8. '   ' → logprob: -13.630019187927246
    9. ' ' → logprob: -13.942519187927246
    10. 'c' → logprob: -14.130019187927246

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002202120842412114
    2. '):
' → logprob: -6.127202033996582
    3. ' ):' → logprob: -11.627202033996582
    4. ':' → logprob: -12.502202033996582
    5. '):
' → logprob: -13.752202033996582
    6. ')' → logprob: -14.002202033996582
    7. ' ' → logprob: -14.127202033996582
    8. ')):' → logprob: -14.627202033996582
    9. '   ' → logprob: -15.127202033996582
    10. '):

' → logprob: -15.252202033996582

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025080326944589615
    2. '<|end|>' → logprob: -4.15008020401001
    3. ' s' → logprob: -5.52508020401001
    4. '   ' → logprob: -6.65008020401001
    5. 's' → logprob: -7.02508020401001
    6. ' ' → logprob: -7.27508020401001
    7. ',' → logprob: -7.40008020401001
    8. '    ' → logprob: -7.90008020401001
    9. '```' → logprob: -8.150080680847168
    10. '<|end|>' → logprob: -8.775080680847168

Token 77: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.53899085521698
    2. ' s' → logprob: -1.53899085521698
    3. 's' → logprob: -1.66399085521698
    4. '           ' → logprob: -4.6639909744262695
    5. '   ' → logprob: -7.2889909744262695
    6. '```' → logprob: -7.2889909744262695
    7. ' if' → logprob: -8.03899097442627
    8. '        ' → logprob: -8.16399097442627
    9. '        
' → logprob: -8.41399097442627
    10. ' ' → logprob: -8.41399097442627

Token 78: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.37450891733169556
    2. ' used' → logprob: -1.9995088577270508
    3. ' grid' → logprob: -2.624508857727051
    4. 'grid' → logprob: -2.624508857727051
    5. '(grid' → logprob: -4.249508857727051
    6. ' (' → logprob: -4.749508857727051
    7. '(' → logprob: -5.624508857727051
    8. ' not' → logprob: -6.374508857727051
    9. '(not' → logprob: -6.999508857727051
    10. 'not' → logprob: -7.374508857727051

Token 79: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.013761471956968307
    2. '[r' → logprob: -4.388761520385742
    3. '[row' → logprob: -6.763761520385742
    4. '[' → logprob: -9.888761520385742
    5. '[c' → logprob: -11.138761520385742
    6. '[s' → logprob: -11.763761520385742
    7. '[(' → logprob: -12.388761520385742
    8. '[end' → logprob: -12.513761520385742
    9. 'start' → logprob: -12.763761520385742
    10. '```' → logprob: -13.013761520385742

Token 80: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.06247343495488167
    2. '_c' → logprob: -2.8124735355377197
    3. 'r' → logprob: -8.18747329711914
    4. 'c' → logprob: -9.31247329711914
    5. 'used' → logprob: -10.68747329711914
    6. '   ' → logprob: -11.06247329711914
    7. '_' → logprob: -11.06247329711914
    8. '<|end|>' → logprob: -11.18747329711914
    9. '<|end|>' → logprob: -11.56247329711914
    10. '_used' → logprob: -11.99997329711914

Token 81: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.158350151963532e-05
    2. '[c' → logprob: -10.000061988830566
    3. ' ][' → logprob: -11.750061988830566
    4. ']' → logprob: -12.000061988830566
    5. '[' → logprob: -13.875061988830566
    6. ']][' → logprob: -14.625061988830566
    7. 'c' → logprob: -15.625061988830566
    8. ''][' → logprob: -15.750061988830566
    9. '"][' → logprob: -15.875061988830566
    10. '   ' → logprob: -16.62506103515625

Token 82: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.320199877838604e-07
    2. ' c' → logprob: -14.75
    3. '   ' → logprob: -18.25
    4. '	c' → logprob: -18.875
    5. ']' → logprob: -19.125
    6. ')c' → logprob: -19.125
    7. ' ' → logprob: -19.75
    8. '_c' → logprob: -20.25
    9. '```' → logprob: -20.5
    10. '
' → logprob: -20.875

Token 83: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5900045037269592
    2. ']:
' → logprob: -0.8400045037269592
    3. ']' → logprob: -4.4650044441223145
    4. ']==' → logprob: -6.2150044441223145
    5. ']:
' → logprob: -8.715004920959473
    6. ' ]' → logprob: -8.840004920959473
    7. ']:

' → logprob: -9.840004920959473
    8. ':' → logprob: -10.840004920959473
    9. ']>' → logprob: -11.215004920959473
    10. '   ' → logprob: -11.465004920959473

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015504523180425167
    2. ' ' → logprob: -7.501550674438477
    3. ' s' → logprob: -8.501550674438477
    4. '       ' → logprob: -9.126550674438477
    5. ',' → logprob: -9.251550674438477
    6. ':
' → logprob: -9.376550674438477
    7. '```' → logprob: -9.751550674438477
    8. ':' → logprob: -9.876550674438477
    9. '               ' → logprob: -10.001550674438477
    10. ' return' → logprob: -10.001550674438477

Token 85: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.24670366942882538
    2. 'break' (adapté à ' break') → logprob: -2.246703624725342
    3. '           ' → logprob: -2.621703624725342
    4. '       ' → logprob: -3.246703624725342
    5. '	break' → logprob: -7.496703624725342
    6. '               ' → logprob: -8.1217041015625
    7. '```' → logprob: -8.6217041015625
    8. '   ' → logprob: -9.1217041015625
    9. '_break' → logprob: -10.1217041015625
    10. ' continue' → logprob: -10.3717041015625

Token 86: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09326524287462234
    2. 's' → logprob: -3.0932652950286865
    3. '<|end|>' → logprob: -3.8432652950286865
    4. ' s' → logprob: -4.093265056610107
    5. '
' → logprob: -6.468265056610107
    6. '        
' → logprob: -6.718265056610107
    7. '```' → logprob: -7.218265056610107
    8. ' 
' → logprob: -7.843265056610107
    9. '<|end|>' → logprob: -7.843265056610107
    10. ')' → logprob: -8.093265533447266

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08140064775943756
    2. 's' → logprob: -2.7064006328582764
    3. ' s' → logprob: -4.5814008712768555
    4. '<|end|>' → logprob: -8.081400871276855
    5. '```' → logprob: -8.581400871276855
    6. '
' → logprob: -8.706400871276855
    7. '   ' → logprob: -8.706400871276855
    8. '        
' → logprob: -8.831400871276855
    9. '           ' → logprob: -10.206400871276855
    10. ' ' → logprob: -10.581400871276855

Token 88: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40924718976020813
    2. ' s' → logprob: -1.5342471599578857
    3. 's' (adapté à ' s') → logprob: -2.1592471599578857
    4. '<|end|>' → logprob: -6.034247398376465
    5. '        
' → logprob: -6.909247398376465
    6. '
' → logprob: -7.409247398376465
    7. '   ' → logprob: -8.409247398376465
    8. ' ' → logprob: -8.909247398376465
    9. '           ' → logprob: -9.409247398376465
    10. '<|end|>' → logprob: -9.534247398376465

Token 89: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.32350239157676697
    2. '+=' → logprob: -1.4485024213790894
    3. '+' → logprob: -3.1985023021698
    4. ' +' → logprob: -7.448502540588379
    5. '=' → logprob: -11.198502540588379
    6. '<|end|>' → logprob: -11.448502540588379
    7. '    ' → logprob: -11.823502540588379
    8. ']+=' → logprob: -11.948502540588379
    9. '+='' → logprob: -11.948502540588379
    10. ' ' → logprob: -12.573502540588379

Token 90: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.14272114634513855
    2. ' grid' → logprob: -2.017721176147461
    3. '	grid' → logprob: -10.767721176147461
    4. '(grid' → logprob: -11.642721176147461
    5. 'int' → logprob: -12.017721176147461
    6. '   ' → logprob: -13.142721176147461
    7. '.grid' → logprob: -13.267721176147461
    8. ':grid' → logprob: -13.267721176147461
    9. '<|end|>' → logprob: -13.392721176147461
    10. '/grid' → logprob: -14.017721176147461

Token 91: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.625003814697266
    3. 'start' → logprob: -16.625003814697266
    4. '[end' → logprob: -17.625003814697266
    5. '[s' → logprob: -18.625003814697266
    6. '[source' → logprob: -18.625003814697266
    7. '```' → logprob: -18.750003814697266
    8. '[
' → logprob: -19.000003814697266
    9. ' [' → logprob: -19.000003814697266
    10. '[src' → logprob: -19.375003814697266

Token 92: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.008628287352621555
    2. '_c' → logprob: -4.7586283683776855
    3. '_s' → logprob: -12.008627891540527
    4. 'r' → logprob: -13.758627891540527
    5. '<|end|>' → logprob: -13.758627891540527
    6. '   ' → logprob: -13.883627891540527
    7. '<|end|>' → logprob: -14.446127891540527
    8. '_' → logprob: -14.508627891540527
    9. '       ' → logprob: -15.071127891540527
    10. 'c' → logprob: -15.071127891540527

Token 93: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00099958258215338
    2. '[c' → logprob: -7.000999450683594
    3. ' ][' → logprob: -10.000999450683594
    4. ']' → logprob: -10.250999450683594
    5. '[' → logprob: -12.875999450683594
    6. ']][' → logprob: -13.625999450683594
    7. '"][' → logprob: -14.125999450683594
    8. '   ' → logprob: -14.625999450683594
    9. ''][' → logprob: -14.625999450683594
    10. 'c' → logprob: -14.750999450683594

Token 94: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.229872087715194e-05
    2. ' c' → logprob: -9.750061988830566
    3. ')c' → logprob: -13.750061988830566
    4. '[c' → logprob: -14.000061988830566
    5. '   ' → logprob: -14.500061988830566
    6. '][' → logprob: -14.875061988830566
    7. ')' → logprob: -15.500061988830566
    8. ' ' → logprob: -15.625061988830566
    9. ']' → logprob: -15.750061988830566
    10. '[' → logprob: -15.875061988830566

Token 95: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0339781828224659
    2. ']
' → logprob: -3.408978223800659
    3. ')]' → logprob: -8.658978462219238
    4. ')' → logprob: -9.408978462219238
    5. ' ]' → logprob: -11.033978462219238
    6. ']

' → logprob: -11.158978462219238
    7. ']
' → logprob: -11.283978462219238
    8. '])' → logprob: -11.283978462219238
    9. '<|end|>' → logprob: -11.908978462219238
    10. '       ' → logprob: -12.408978462219238

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040898515726439655
    2. '   ' → logprob: -8.375409126281738
    3. '<|end|>' → logprob: -8.875409126281738
    4. '      ' → logprob: -11.875409126281738
    5. '           ' → logprob: -12.125409126281738
    6. '        
' → logprob: -12.125409126281738
    7. '     ' → logprob: -12.250409126281738
    8. ',' → logprob: -12.500409126281738
    9. '        ' → logprob: -12.500409126281738
    10. ' ' → logprob: -12.875409126281738

Token 97: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.12157509475946426
    2. 'path' (adapté à ' path') → logprob: -2.371575117111206
    3. '       ' → logprob: -3.871575117111206
    4. '   ' → logprob: -8.496575355529785
    5. ' if' → logprob: -9.996575355529785
    6. '	path' → logprob: -11.121575355529785
    7. ' ' → logprob: -11.371575355529785
    8. ',path' → logprob: -11.871575355529785
    9. '
' → logprob: -12.121575355529785
    10. '.path' → logprob: -12.246575355529785

Token 98: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031840058509260416
    2. '.' → logprob: -5.753183841705322
    3. '.app' → logprob: -12.87818431854248
    4. ' .' → logprob: -13.12818431854248
    5. '.ap' → logprob: -14.37818431854248
    6. '.py' → logprob: -15.12818431854248
    7. '.extend' → logprob: -15.50318431854248
    8. '<|end|>' → logprob: -15.50318431854248
    9. ').' → logprob: -16.003183364868164
    10. '.Append' → logprob: -16.128183364868164

Token 99: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.14412648975849152
    2. '(grid' → logprob: -2.1441264152526855
    3. '(' → logprob: -4.3941264152526855
    4. '(c' → logprob: -5.5191264152526855
    5. '(start' → logprob: -8.019126892089844
    6. 'grid' → logprob: -8.269126892089844
    7. '(
' → logprob: -9.644126892089844
    8. 'c' → logprob: -11.394126892089844
    9. '([' → logprob: -12.394126892089844
    10. '(((' → logprob: -12.769126892089844

Token 100: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -7.52919222577475e-05
    2. ' start' → logprob: -9.500075340270996
    3. '[start' → logprob: -15.875075340270996
    4. 'star' → logprob: -16.75007438659668
    5. '(start' → logprob: -16.87507438659668
    6. '   ' → logprob: -17.12507438659668
    7. ')' → logprob: -17.25007438659668
    8. '_start' → logprob: -17.62507438659668
    9. ' ' → logprob: -18.25007438659668
    10. '	start' → logprob: -18.50007438659668

Token 101: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0007266097818501294
    2. '_c' → logprob: -7.250726699829102
    3. 'r' → logprob: -11.625726699829102
    4. '_s' → logprob: -12.125726699829102
    5. 'c' → logprob: -15.000726699829102
    6. '_' → logprob: -15.000726699829102
    7. ')' → logprob: -15.750726699829102
    8. '<|end|>' → logprob: -15.750726699829102
    9. ',' → logprob: -15.875726699829102
    10. '_,' → logprob: -16.4382266998291

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014399716630578041
    2. ',c' → logprob: -4.264399528503418
    3. ' ,' → logprob: -8.514399528503418
    4. 'c' → logprob: -11.014399528503418
    5. ')' → logprob: -12.139399528503418
    6. ',
' → logprob: -12.139399528503418
    7. ')c' → logprob: -13.014399528503418
    8. '<|end|>' → logprob: -13.639399528503418
    9. ' ' → logprob: -13.889399528503418
    10. '),' → logprob: -13.889399528503418

Token 103: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008074867073446512
    2. ' c' → logprob: -7.125807285308838
    3. '   ' → logprob: -13.750807762145996
    4. ')c' → logprob: -13.875807762145996
    5. ' ' → logprob: -15.125807762145996
    6. '    ' → logprob: -15.500807762145996
    7. '
' → logprob: -16.00080680847168
    8. '  ' → logprob: -16.25080680847168
    9. '	c' → logprob: -17.12580680847168
    10. ')' → logprob: -17.12580680847168

Token 104: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.048717040568590164
    2. '))
' → logprob: -3.0487170219421387
    3. ')' → logprob: -9.298717498779297
    4. '))

' → logprob: -10.798717498779297
    5. '       ' → logprob: -11.923717498779297
    6. '))
' → logprob: -12.923717498779297
    7. ')
' → logprob: -12.923717498779297
    8. '   ' → logprob: -13.173717498779297
    9. ')))' → logprob: -13.673717498779297
    10. ''))' → logprob: -14.173717498779297

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008376275189220905
    2. '<|end|>' → logprob: -5.508376121520996
    3. '   ' → logprob: -6.258376121520996
    4. ',' → logprob: -7.258376121520996
    5. ' if' → logprob: -7.633376121520996
    6. '        
' → logprob: -8.133376121520996
    7. '
' → logprob: -8.258376121520996
    8. '<|end|>' → logprob: -8.883376121520996
    9. '  
' → logprob: -9.258376121520996
    10. '```' → logprob: -9.383376121520996

Token 106: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2575591504573822
    2. '       ' → logprob: -1.5075591802597046
    3. ' if' → logprob: -5.257559299468994
    4. '   ' → logprob: -8.507558822631836
    5. '
' → logprob: -8.882558822631836
    6. '        
' → logprob: -10.257558822631836
    7. '```' → logprob: -11.007558822631836
    8. ' ' → logprob: -11.757558822631836
    9. 'If' → logprob: -13.507558822631836
    10. '	if' → logprob: -13.882558822631836

Token 107: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0052362410351634026
    2. 's' → logprob: -5.2552361488342285
    3. ' ' → logprob: -13.880236625671387
    4. '(s' → logprob: -14.380236625671387
    5. ' ' → logprob: -15.630236625671387
    6. ' len' → logprob: -16.25523567199707
    7. '	s' → logprob: -16.31773567199707
    8. '_s' → logprob: -16.56773567199707
    9. 'target' → logprob: -16.88023567199707
    10. ' target' → logprob: -16.88023567199707

Token 108: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0076304152607917786
    2. '==' → logprob: -4.882630348205566
    3. ' >=' → logprob: -11.257630348205566
    4. ' ' → logprob: -11.757630348205566
    5. '=' → logprob: -14.507630348205566
    6. ')' → logprob: -14.507630348205566
    7. ')==' → logprob: -14.507630348205566
    8. '>=' → logprob: -14.882630348205566
    9. ' >' → logprob: -15.132630348205566
    10. '<|end|>' → logprob: -15.257630348205566

Token 109: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.16022492945194244
    2. 'target' → logprob: -1.9102249145507812
    3. '(target' → logprob: -14.910224914550781
    4. '	target' → logprob: -15.660224914550781
    5. ' ' → logprob: -16.41022491455078
    6. '[target' → logprob: -16.66022491455078
    7. ' ' → logprob: -17.41022491455078
    8. '
' → logprob: -17.78522491455078
    9. '_target' → logprob: -17.78522491455078
    10. ',target' → logprob: -18.28522491455078

Token 110: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.266944157890975e-05
    2. '_s' → logprob: -9.625072479248047
    3. '_' → logprob: -12.875072479248047
    4. 'sum' → logprob: -13.250072479248047
    5. ' _' → logprob: -14.750072479248047
    6. 's' → logprob: -14.875072479248047
    7. ':' → logprob: -15.375072479248047
    8. ')' → logprob: -15.750072479248047
    9. '_line' → logprob: -16.375072479248047
    10. '):' → logprob: -16.500072479248047

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007681396324187517
    2. ':
' → logprob: -4.882681369781494
    3. ':return' → logprob: -9.757681846618652
    4. ' and' → logprob: -12.132681846618652
    5. '):' → logprob: -12.757681846618652
    6. '           ' → logprob: -12.757681846618652
    7. ',' → logprob: -13.507681846618652
    8. ':
' → logprob: -13.757681846618652
    9. ' :' → logprob: -13.882681846618652
    10. '       ' → logprob: -14.132681846618652

Token 112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009340109303593636
    2. ':' → logprob: -5.009340286254883
    3. ':
' → logprob: -7.759340286254883
    4. '
' → logprob: -7.884340286254883
    5. '<|end|>' → logprob: -7.884340286254883
    6. ':return' → logprob: -8.009340286254883
    7. '            
' → logprob: -8.134340286254883
    8. ' return' → logprob: -8.384340286254883
    9. '               ' → logprob: -8.884340286254883
    10. '\n' → logprob: -9.384340286254883

Token 113: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0837644562125206
    2. ' results' → logprob: -3.0837645530700684
    3. ' return' → logprob: -3.5837645530700684
    4. '               ' → logprob: -5.708764553070068
    5. 'results' (adapté à ' results') → logprob: -5.958764553070068
    6. 'return' → logprob: -7.708764553070068
    7. '
' → logprob: -8.08376407623291
    8. '            ' → logprob: -9.83376407623291
    9. ' 
' → logprob: -11.70876407623291
    10. '	results' → logprob: -11.70876407623291

Token 114: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003103175258729607
    2. '.' → logprob: -8.125309944152832
    3. '.extend' → logprob: -11.375309944152832
    4. '           ' → logprob: -14.375309944152832
    5. '.app' → logprob: -14.625309944152832
    6. ' .' → logprob: -14.750309944152832
    7. '.add' → logprob: -14.875309944152832
    8. '.Append' → logprob: -15.250309944152832
    9. '.ap' → logprob: -15.500309944152832
    10. '.py' → logprob: -16.12531089782715

Token 115: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0009672032319940627
    2. '((' → logprob: -7.500967025756836
    3. '(' → logprob: -8.375967025756836
    4. 'path' → logprob: -9.375967025756836
    5. '(list' → logprob: -9.750967025756836
    6. '(tuple' → logprob: -10.750967025756836
    7. ' (' → logprob: -11.125967025756836
    8. ' path' → logprob: -13.625967025756836
    9. '([' → logprob: -14.000967025756836
    10. '(paths' → logprob: -15.125967025756836

Token 116: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.14235292375087738
    2. '.copy' → logprob: -2.142352819442749
    3. '[:]' → logprob: -4.392353057861328
    4. ')' → logprob: -5.892353057861328
    5. ')
' → logprob: -8.767353057861328
    6. '   ' → logprob: -11.642353057861328
    7. '[::-' → logprob: -12.892353057861328
    8. '[' → logprob: -13.142353057861328
    9. ' ' → logprob: -13.517353057861328
    10. ')

' → logprob: -14.267353057861328

Token 117: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.49132150411605835
    2. ')' → logprob: -1.7413215637207031
    3. '])
' → logprob: -1.9913215637207031
    4. ')
' → logprob: -2.616321563720703
    5. ')]' → logprob: -6.241321563720703
    6. '))' → logprob: -8.241321563720703
    7. '       ' → logprob: -8.366321563720703
    8. ')])' → logprob: -8.366321563720703
    9. '])
' → logprob: -8.991321563720703
    10. ')
' → logprob: -8.991321563720703

Token 118: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16433919966220856
    2. '<|end|>' → logprob: -1.9143391847610474
    3. '<|end|>' → logprob: -6.664339065551758
    4. ')' → logprob: -6.789339065551758
    5. ',' → logprob: -7.539339065551758
    6. '   ' → logprob: -7.664339065551758
    7. '           ' → logprob: -8.039339065551758
    8. '\n' → logprob: -9.664339065551758
    9. 'return' → logprob: -10.039339065551758
    10. '
' → logprob: -10.289339065551758

Token 119: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12678204476833344
    2. '           ' → logprob: -2.376781940460205
    3. 'break' (adapté à ' break') → logprob: -4.001781940460205
    4. ' break' → logprob: -6.001781940460205
    5. 'return' → logprob: -6.376781940460205
    6. '   ' → logprob: -6.626781940460205
    7. 'continue' → logprob: -6.751781940460205
    8. 'elif' → logprob: -7.001781940460205
    9. ' continue' → logprob: -9.126782417297363
    10. ' return' → logprob: -9.501782417297363

Token 120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14948530495166779
    2. '   ' → logprob: -2.1494853496551514
    3. '<|end|>' → logprob: -4.649485111236572
    4. ')' → logprob: -4.899485111236572
    5. ',' → logprob: -5.774485111236572
    6. '    ' → logprob: -7.774485111236572
    7. '        
' → logprob: -7.899485111236572
    8. '    
' → logprob: -8.14948558807373
    9. '```' → logprob: -8.64948558807373
    10. '           ' → logprob: -9.14948558807373

Token 122: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05133471637964249
    2. ' elif' → logprob: -3.4263346195220947
    3. '   ' → logprob: -4.926334857940674
    4. '<|end|>' → logprob: -5.926334857940674
    5. 'elif' → logprob: -6.301334857940674
    6. '
' → logprob: -6.926334857940674
    7. '        ' → logprob: -7.176334857940674
    8. ' if' → logprob: -7.176334857940674
    9. '    ' → logprob: -7.426334857940674
    10. '           ' → logprob: -7.551334857940674

Token 123: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16022635996341705
    2. ' s' → logprob: -1.9102263450622559
    3. ' ' → logprob: -14.410226821899414
    4. '(s' → logprob: -15.035226821899414
    5. 'grid' → logprob: -15.285226821899414
    6. '   ' → logprob: -15.535226821899414
    7. 'c' → logprob: -15.910226821899414
    8. '_s' → logprob: -16.035226821899414
    9. '	s' → logprob: -16.285226821899414
    10. '  ' → logprob: -16.285226821899414

Token 124: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05496804416179657
    2. '>' → logprob: -2.9299681186676025
    3. ' <' → logprob: -9.929967880249023
    4. ' ' → logprob: -11.429967880249023
    5. ' ' → logprob: -11.429967880249023
    6. '<' → logprob: -12.554967880249023
    7. '<|end|>' → logprob: -12.554967880249023
    8. ' >
' → logprob: -13.054967880249023
    9. '()>' → logprob: -13.429967880249023
    10. '   ' → logprob: -14.429967880249023

Token 125: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.2519313097000122
    2. 'target' → logprob: -1.5019313097000122
    3. '(target' → logprob: -14.126931190490723
    4. '	target' → logprob: -14.501931190490723
    5. ' ' → logprob: -15.126931190490723
    6. '   ' → logprob: -15.376931190490723
    7. '[target' → logprob: -15.876931190490723
    8. 't' → logprob: -16.37693214416504
    9. ' ' → logprob: -17.12693214416504
    10. '_target' → logprob: -17.12693214416504

Token 126: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.438573680294212e-06
    2. '_s' → logprob: -12.750005722045898
    3. ' _' → logprob: -13.750005722045898
    4. '_' → logprob: -14.250005722045898
    5. 'sum' → logprob: -14.375005722045898
    6. '```' → logprob: -17.5000057220459
    7. ''_' → logprob: -18.2500057220459
    8. '_target' → logprob: -18.3750057220459
    9. '           ' → logprob: -18.3750057220459
    10. '__' → logprob: -18.5000057220459

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20112071931362152
    2. '           ' → logprob: -1.8261207342147827
    3. ':
' → logprob: -3.951120615005493
    4. '       ' → logprob: -6.576120853424072
    5. '<|end|>' → logprob: -8.576120376586914
    6. ':return' → logprob: -9.201120376586914
    7. '   ' → logprob: -9.951120376586914
    8. ',' → logprob: -10.326120376586914
    9. '<|end|>' → logprob: -10.701120376586914
    10. '          ' → logprob: -10.826120376586914

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005730282980948687
    2. ' break' → logprob: -5.255730152130127
    3. 'break' → logprob: -7.630730152130127
    4. '               ' → logprob: -12.005730628967285
    5. '	break' → logprob: -13.505730628967285
    6. '       ' → logprob: -13.505730628967285
    7. '   ' → logprob: -14.380730628967285
    8. '
' → logprob: -14.380730628967285
    9. '		' → logprob: -15.005730628967285
    10. '```' → logprob: -15.380730628967285

Token 129: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.015436709858477116
    2. '           ' → logprob: -4.76543664932251
    3. ' break' → logprob: -5.01543664932251
    4. '       ' → logprob: -8.890437126159668
    5. 'return' → logprob: -11.140437126159668
    6. '	break' → logprob: -12.015437126159668
    7. '   ' → logprob: -12.265437126159668
    8. '               ' → logprob: -14.015437126159668
    9. '```' → logprob: -15.390437126159668
    10. ' return' → logprob: -17.26543617248535

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6240658164024353
    2. '<|end|>' → logprob: -1.12406587600708
    3. '\n' → logprob: -2.49906587600708
    4. '    
' → logprob: -4.49906587600708
    5. '       ' → logprob: -4.49906587600708
    6. '<|end|>' → logprob: -4.62406587600708
    7. '
' → logprob: -4.74906587600708
    8. '```' → logprob: -5.24906587600708
    9. ')' → logprob: -5.37406587600708
    10. 'newline' → logprob: -6.74906587600708

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045321255922317505
    2. '<|end|>' → logprob: -3.295321226119995
    3. ')' → logprob: -5.920321464538574
    4. '    
' → logprob: -6.545321464538574
    5. '
' → logprob: -7.170321464538574
    6. ',' → logprob: -7.295321464538574
    7. '<|end|>' → logprob: -7.795321464538574
    8. '```' → logprob: -8.045321464538574
    9. '       ' → logprob: -8.170321464538574
    10. '\n' → logprob: -8.795321464538574

Token 132: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07619990408420563
    2. '
' → logprob: -2.701200008392334
    3. '    
' → logprob: -5.326200008392334
    4. '<|end|>' → logprob: -7.451200008392334
    5. '```' → logprob: -8.951199531555176
    6. ',' → logprob: -9.326199531555176
    7. 'def' → logprob: -9.326199531555176
    8. 'return' → logprob: -9.576199531555176
    9. '\n' → logprob: -9.576199531555176
    10. ')' → logprob: -9.826199531555176

Token 133: ' Try' (ID: 14720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22682727873325348
    2. '   ' → logprob: -2.101827383041382
    3. 'Try' → logprob: -3.226827383041382
    4. ' #' → logprob: -3.601827383041382
    5. 'def' → logprob: -4.851827144622803
    6. ' Try' → logprob: -5.851827144622803
    7. ' ' → logprob: -7.351827144622803
    8. 'try' → logprob: -7.476827144622803
    9. '
' → logprob: -7.476827144622803
    10. ' def' → logprob: -7.976827144622803

Token 134: ' horizontal' (ID: 25511)
  Prédit: ' vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.2817818820476532
    2. 'vertical' → logprob: -1.4067819118499756
    3. '(vertical' → logprob: -7.5317816734313965
    4. '_vertical' → logprob: -9.906782150268555
    5. 'def' → logprob: -11.781782150268555
    6. 'vert' → logprob: -11.781782150268555
    7. '(' → logprob: -11.906782150268555
    8. ' (' → logprob: -12.406782150268555
    9. ' diagonal' → logprob: -12.906782150268555
    10. ' вертик' → logprob: -12.906782150268555

Token 135: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.01952626183629036
    2. ' (' → logprob: -4.269526481628418
    3. 'line' → logprob: -6.269526481628418
    4. '_line' → logprob: -6.519526481628418
    5. '(line' → logprob: -7.519526481628418
    6. ' ' → logprob: -7.769526481628418
    7. '_' → logprob: -7.894526481628418
    8. '(' → logprob: -8.269526481628418
    9. ' _' → logprob: -9.394526481628418
    10. ' lines' → logprob: -9.644526481628418

Token 136: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03665352612733841
    2. '(vertical' → logprob: -4.161653518676758
    3. '(' → logprob: -4.286653518676758
    4. '   ' → logprob: -5.661653518676758
    5. '(left' → logprob: -6.786653518676758
    6. '(top' → logprob: -7.411653518676758
    7. ' ' → logprob: -8.536653518676758
    8. '(up' → logprob: -8.661653518676758
    9. 'down' → logprob: -8.786653518676758
    10. '(from' → logprob: -8.911653518676758

Token 137: 'right' (ID: 2460)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5203150510787964
    2. 'start' → logprob: -1.7703150510787964
    3. '(start' → logprob: -2.145315170288086
    4. ')' → logprob: -3.645315170288086
    5. 'right' → logprob: -3.895315170288086
    6. ' left' → logprob: -4.020315170288086
    7. ' (' → logprob: -4.020315170288086
    8. ' start' → logprob: -4.770315170288086
    9. 'down' → logprob: -5.020315170288086
    10. 'up' → logprob: -5.145315170288086

Token 138: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.47713711857795715
    2. 'to' → logprob: -0.9771370887756348
    3. ' ' → logprob: -6.477137088775635
    4. '-' → logprob: -8.102137565612793
    5. ')' → logprob: -8.227137565612793
    6. ' -' → logprob: -8.477137565612793
    7. '_to' → logprob: -8.477137565612793
    8. '   ' → logprob: -8.977137565612793
    9. '-to' → logprob: -9.227137565612793
    10. ',' → logprob: -9.352137565612793

Token 139: ' left' (ID: 3561)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.15272262692451477
    2. ' start' → logprob: -2.0277225971221924
    3. 'left' → logprob: -5.9027228355407715
    4. 'c' → logprob: -6.0277228355407715
    5. 'right' → logprob: -6.4027228355407715
    6. 'range' → logprob: -6.7777228355407715
    7. ' range' → logprob: -7.5277228355407715
    8. ' c' → logprob: -7.7777228355407715
    9. '_c' → logprob: -7.7777228355407715
    10. ' left' → logprob: -8.902722358703613

Token 140: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12905363738536835
    2. ')' → logprob: -2.5040535926818848
    3. '   ' → logprob: -3.2540535926818848
    4. '):
' → logprob: -8.129054069519043
    5. ' )
' → logprob: -8.629054069519043
    6. 'for' → logprob: -10.004054069519043
    7. '):' → logprob: -10.379054069519043
    8. ' for' → logprob: -10.504054069519043
    9. ')
' → logprob: -10.629054069519043
    10. ',' → logprob: -10.879054069519043

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01677936501801014
    2. '
' → logprob: -4.89177942276001
    3. '    
' → logprob: -5.64177942276001
    4. 's' → logprob: -6.01677942276001
    5. '  
' → logprob: -6.76677942276001
    6. '   
' → logprob: -7.39177942276001
    7. ' s' → logprob: -8.266778945922852
    8. '(s' → logprob: -8.516778945922852
    9. '```' → logprob: -9.016778945922852
    10. ' (' → logprob: -9.016778945922852

Token 142: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3637932538986206
    2. ' 
' → logprob: -1.9887932538986206
    3. '    
' → logprob: -2.98879337310791
    4. '
' → logprob: -3.36379337310791
    5. ' s' → logprob: -3.36379337310791
    6. '  
' → logprob: -4.11379337310791
    7. ' for' → logprob: -4.73879337310791
    8. '    ' → logprob: -5.11379337310791
    9. '   
' → logprob: -5.23879337310791
    10. '     
' → logprob: -5.98879337310791

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036017363891005516
    2. '=' → logprob: -5.628601551055908
    3. ' ' → logprob: -13.753602027893066
    4. ' +=' → logprob: -14.753602027893066
    5. ' ' → logprob: -16.62860107421875
    6. 's' → logprob: -17.00360107421875
    7. ' ,' → logprob: -17.25360107421875
    8. ',' → logprob: -18.12860107421875
    9. ' =
' → logprob: -18.12860107421875
    10. '   ' → logprob: -18.37860107421875

Token 144: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4287196695804596
    2. ' ' → logprob: -1.0537196397781372
    3. '   ' → logprob: -11.053719520568848
    4. '  ' → logprob: -14.053719520568848
    5. 's' → logprob: -15.116219520568848
    6. ' ' → logprob: -15.241219520568848
    7. 'import' → logprob: -15.303719520568848
    8. ',' → logprob: -15.741219520568848
    9. '=' → logprob: -16.116220474243164
    10. ' s' → logprob: -16.241220474243164

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028076060116291046
    2. ' ' → logprob: -5.8778076171875
    3. 'grid' → logprob: -13.8153076171875
    4. '   ' → logprob: -14.7528076171875
    5. 's' → logprob: -15.3778076171875
    6. ',' → logprob: -16.0653076171875
    7. '  ' → logprob: -16.1903076171875
    8. 'import' → logprob: -16.2528076171875
    9. ' grid' → logprob: -16.5028076171875
    10. 'r' → logprob: -16.5653076171875

Token 146: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07900677621364594
    2. '   ' → logprob: -2.5790066719055176
    3. '    
' → logprob: -9.704007148742676
    4. 'for' → logprob: -10.704007148742676
    5. ' for' → logprob: -11.829007148742676
    6. '  
' → logprob: -11.829007148742676
    7. ' 
' → logprob: -11.954007148742676
    8. '
' → logprob: -12.704007148742676
    9. '   
' → logprob: -12.954007148742676
    10. '\n' → logprob: -13.204007148742676

Token 147: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6520776152610779
    2. 'for' → logprob: -1.0270776748657227
    3. '   ' → logprob: -2.2770776748657227
    4. ' for' → logprob: -4.277077674865723
    5. ' 
' → logprob: -6.402077674865723
    6. '    
' → logprob: -6.652077674865723
    7. '```' → logprob: -7.402077674865723
    8. '  
' → logprob: -7.527077674865723
    9. '\n' → logprob: -9.027077674865723
    10. '   
' → logprob: -9.777077674865723

Token 148: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.5762116312980652
    2. 'path' (adapté à ' path') → logprob: -0.8262116312980652
    3. 'for' → logprob: -9.076211929321289
    4. '   ' → logprob: -9.451211929321289
    5. ' for' → logprob: -9.826211929321289
    6. ' line' → logprob: -11.451211929321289
    7. 'line' → logprob: -12.201211929321289
    8. '
' → logprob: -12.701211929321289
    9. '```' → logprob: -13.076211929321289
    10. ' ' → logprob: -13.326211929321289

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009781233966350555
    2. '=' → logprob: -4.634781360626221
    3. '.append' → logprob: -11.884780883789062
    4. '   ' → logprob: -11.884780883789062
    5. ' ' → logprob: -12.509780883789062
    6. '[:]' → logprob: -12.634780883789062
    7. ' +=' → logprob: -14.009780883789062
    8. '=[]' → logprob: -14.384780883789062
    9. '.extend' → logprob: -14.634780883789062
    10. 's' → logprob: -14.759780883789062

Token 150: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018194543197751045
    2. '[]
' → logprob: -4.018194675445557
    3. '[(' → logprob: -10.768194198608398
    4. ' []' → logprob: -11.268194198608398
    5. '[]

' → logprob: -11.643194198608398
    6. '[
' → logprob: -14.018194198608398
    7. '[' → logprob: -14.518194198608398
    8. ' []
' → logprob: -14.768194198608398
    9. '[]}' → logprob: -15.643194198608398
    10. '[])' → logprob: -17.0181941986084

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13673169910907745
    2. 'for' → logprob: -2.1367316246032715
    3. ' for' → logprob: -4.6367316246032715
    4. '
' → logprob: -10.51173210144043
    5. '    
' → logprob: -11.13673210144043
    6. '	for' → logprob: -11.13673210144043
    7. '```' → logprob: -11.76173210144043
    8. '[' → logprob: -14.51173210144043
    9. '       ' → logprob: -15.01173210144043
    10. '    ' → logprob: -15.01173210144043

Token 152: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005686411168426275
    2. ' for' → logprob: -7.500568866729736
    3. '   ' → logprob: -11.125568389892578
    4. '```' → logprob: -14.125568389892578
    5. '	for' → logprob: -16.625568389892578
    6. '
' → logprob: -16.750568389892578
    7. ' ' → logprob: -17.000568389892578
    8. '    
' → logprob: -17.125568389892578
    9. '``' → logprob: -18.875568389892578
    10. '  
' → logprob: -19.875568389892578

Token 153: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009989221580326557
    2. ' c' → logprob: -4.634989261627197
    3. '_c' → logprob: -9.384988784790039
    4. 'r' → logprob: -9.634988784790039
    5. 'start' → logprob: -9.759988784790039
    6. ' start' → logprob: -10.884988784790039
    7. ' ' → logprob: -13.259988784790039
    8. ' r' → logprob: -14.259988784790039
    9. '   ' → logprob: -14.509988784790039
    10. 'range' → logprob: -14.509988784790039

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03393059968948364
    2. 'in' → logprob: -3.783930540084839
    3. '(start' → logprob: -5.158930778503418
    4. ' range' → logprob: -6.158930778503418
    5. 'range' → logprob: -6.533930778503418
    6. '(range' → logprob: -7.658930778503418
    7. ' (' → logprob: -7.783930778503418
    8. '(' → logprob: -8.033930778503418
    9. 'start' → logprob: -10.408930778503418
    10. '=' → logprob: -11.033930778503418

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01898438110947609
    2. 'start' → logprob: -4.018984317779541
    3. ' range' → logprob: -7.143984317779541
    4. 're' → logprob: -10.8939847946167
    5. ' start' → logprob: -11.2689847946167
    6. '[start' → logprob: -12.1439847946167
    7. '(start' → logprob: -12.1439847946167
    8. '(range' → logprob: -13.3939847946167
    9. ' ' → logprob: -15.1439847946167
    10. 'reverse' → logprob: -15.2689847946167

Token 156: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -8.661626634420827e-05
    2. '(n' → logprob: -9.875086784362793
    3. 'start' → logprob: -10.500086784362793
    4. '(' → logprob: -12.500086784362793
    5. ' (' → logprob: -13.000086784362793
    6. 'n' → logprob: -13.875086784362793
    7. '(end' → logprob: -15.625086784362793
    8. ',start' → logprob: -16.250085830688477
    9. '(range' → logprob: -16.625085830688477
    10. 'range' → logprob: -16.875085830688477

Token 157: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0011342625366523862
    2. 'start' → logprob: -7.001134395599365
    3. '_r' → logprob: -9.001133918762207
    4. '[start' → logprob: -10.251133918762207
    5. '(start' → logprob: -10.501133918762207
    6. 'c' → logprob: -11.626133918762207
    7. ',start' → logprob: -11.751133918762207
    8. 'n' → logprob: -12.126133918762207
    9. '_n' → logprob: -12.251133918762207
    10. '=start' → logprob: -12.626133918762207

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001536166062578559
    2. '-' → logprob: -6.7515363693237305
    3. ' -' → logprob: -8.25153636932373
    4. ' ,' → logprob: -9.25153636932373
    5. ',-' → logprob: -12.12653636932373
    6. ',start' → logprob: -12.75153636932373
    7. '   ' → logprob: -15.87653636932373
    8. '-,' → logprob: -16.001535415649414
    9. '+' → logprob: -16.251535415649414
    10. ',
' → logprob: -16.626535415649414

Token 159: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.096126576769166e-05
    2. ' -' → logprob: -10.125041007995605
    3. '-c' → logprob: -14.500041007995605
    4. '-start' → logprob: -15.250041007995605
    5. '-re' → logprob: -17.25004005432129
    6. ' ' → logprob: -18.75004005432129
    7. 'c' → logprob: -18.75004005432129
    8. 'start' → logprob: -20.25004005432129
    9. '   ' → logprob: -21.37504005432129
    10. '-
' → logprob: -21.62504005432129

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.0000057220459
    4. '  ' → logprob: -19.6250057220459
    5. '
' → logprob: -19.6250057220459
    6. '2' → logprob: -19.7500057220459
    7. '۱' → logprob: -19.7500057220459
    8. '```' → logprob: -20.1250057220459
    9. '１' → logprob: -20.3750057220459
    10. ' ' → logprob: -20.5625057220459

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013440960901789367
    2. ',-' → logprob: -9.375134468078613
    3. '-' → logprob: -10.000134468078613
    4. ' ,' → logprob: -12.875134468078613
    5. '   ' → logprob: -14.250134468078613
    6. ' -' → logprob: -14.500134468078613
    7. ',
' → logprob: -15.625134468078613
    8. '```' → logprob: -16.625133514404297
    9. ' ,-' → logprob: -17.250133514404297
    10. '1' → logprob: -17.375133514404297

Token 162: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008061755215749145
    2. ' -' → logprob: -7.1258063316345215
    3. '   ' → logprob: -14.000805854797363
    4. ' ' → logprob: -14.625805854797363
    5. 'c' → logprob: -16.50080680847168
    6. '```' → logprob: -16.50080680847168
    7. '           ' → logprob: -16.62580680847168
    8. '       ' → logprob: -17.12580680847168
    9. '  ' → logprob: -17.12580680847168
    10. '-step' → logprob: -17.25080680847168

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -15.250000953674316
    4. '   ' → logprob: -17.0
    5. ' -' → logprob: -17.875
    6. '```' → logprob: -18.375
    7. ')' → logprob: -18.625
    8. '):
' → logprob: -20.375
    9. ',' → logprob: -20.375
    10. '2' → logprob: -20.625

Token 164: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03389614075422287
    2. '):' → logprob: -3.4088962078094482
    3. '   ' → logprob: -8.408896446228027
    4. ')' → logprob: -11.658896446228027
    5. '):
' → logprob: -12.033896446228027
    6. '):

' → logprob: -12.408896446228027
    7. ' ):
' → logprob: -12.533896446228027
    8. '       ' → logprob: -13.158896446228027
    9. '-' → logprob: -13.783896446228027
    10. ':
' → logprob: -14.908896446228027

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004653810989111662
    2. ' if' → logprob: -5.8796539306640625
    3. '   ' → logprob: -6.3796539306640625
    4. '<|end|>' → logprob: -9.254653930664062
    5. 'if' → logprob: -10.629653930664062
    6. '    ' → logprob: -12.004653930664062
    7. '```' → logprob: -12.004653930664062
    8. ',' → logprob: -12.629653930664062
    9. '[' → logprob: -12.754653930664062
    10. ' ' → logprob: -13.004653930664062

Token 166: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.003000762080773711
    2. '       ' → logprob: -6.503000736236572
    3. 'if' (adapté à ' if') → logprob: -7.128000736236572
    4. ' s' → logprob: -7.878000736236572
    5. ' ' → logprob: -8.75300121307373
    6. '<|end|>' → logprob: -9.62800121307373
    7. '        ' → logprob: -10.62800121307373
    8. '   ' → logprob: -11.00300121307373
    9. 's' → logprob: -11.00300121307373
    10. '    ' → logprob: -12.00300121307373

Token 167: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.007607100997120142
    2. 'used' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.757607460021973
    4. '.used' → logprob: -15.757607460021973
    5. '_used' → logprob: -16.132606506347656
    6. ' ' → logprob: -16.382606506347656
    7. ' ' → logprob: -16.882606506347656
    8. 'Used' → logprob: -17.257606506347656
    9. ' usado' → logprob: -17.382606506347656
    10. ' not' → logprob: -17.757606506347656

Token 168: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. '[end' → logprob: -15.625000953674316
    4. '[source' → logprob: -16.5
    5. ' [' → logprob: -16.875
    6. 'start' → logprob: -17.25
    7. '[selected' → logprob: -18.125
    8. '[first' → logprob: -18.25
    9. '[last' → logprob: -18.375
    10. '[next' → logprob: -18.5

Token 169: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.000718626833986491
    2. '_c' → logprob: -7.250718593597412
    3. '[start' → logprob: -13.12571907043457
    4. 'r' → logprob: -13.37571907043457
    5. '[' → logprob: -13.50071907043457
    6. '[_' → logprob: -14.00071907043457
    7. ' _' → logprob: -14.37571907043457
    8. '   ' → logprob: -14.75071907043457
    9. '```' → logprob: -15.00071907043457
    10. '[r' → logprob: -15.75071907043457

Token 170: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005710251862183213
    2. '[c' → logprob: -7.500571250915527
    3. ' ][' → logprob: -12.000571250915527
    4. '[' → logprob: -12.625571250915527
    5. ']' → logprob: -12.625571250915527
    6. ')[' → logprob: -13.000571250915527
    7. '}[' → logprob: -14.250571250915527
    8. '[C' → logprob: -14.375571250915527
    9. ']][' → logprob: -14.750571250915527
    10. '"][' → logprob: -15.000571250915527

Token 171: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.319370302458992e-06
    2. ' c' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.375005722045898
    4. '[' → logprob: -16.1250057220459
    5. ' ' → logprob: -17.0000057220459
    6. ')c' → logprob: -17.3750057220459
    7. '<|end|>' → logprob: -17.7500057220459
    8. '  ' → logprob: -17.8750057220459
    9. '	c' → logprob: -18.1250057220459
    10. '[c' → logprob: -18.3750057220459

Token 172: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1615583300590515
    2. ']:
' → logprob: -1.9115583896636963
    3. ':' → logprob: -7.411558151245117
    4. ']' → logprob: -8.161558151245117
    5. '[' → logprob: -9.036558151245117
    6. ']:

' → logprob: -9.161558151245117
    7. ']:
' → logprob: -10.036558151245117
    8. '       ' → logprob: -10.161558151245117
    9. '):' → logprob: -10.911558151245117
    10. ']==' → logprob: -10.911558151245117

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022169165313243866
    2. ' break' → logprob: -4.02216911315918
    3. 'break' → logprob: -5.52216911315918
    4. '       ' → logprob: -12.39716911315918
    5. '	break' → logprob: -13.02216911315918
    6. '          ' → logprob: -13.77216911315918
    7. '<|end|>' → logprob: -13.77216911315918
    8. '```' → logprob: -13.89716911315918
    9. '_break' → logprob: -14.14716911315918
    10. '               ' → logprob: -14.27216911315918

Token 174: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06198471784591675
    2. ' break' → logprob: -2.8119847774505615
    3. '           ' → logprob: -11.81198501586914
    4. '       ' → logprob: -11.93698501586914
    5. '	break' → logprob: -13.06198501586914
    6. '```' → logprob: -14.31198501586914
    7. '_break' → logprob: -15.93698501586914
    8. '               ' → logprob: -16.31198501586914
    9. '   ' → logprob: -17.31198501586914
    10. 'Break' → logprob: -17.43698501586914

Token 175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022625441197305918
    2. 's' → logprob: -6.752262592315674
    3. ' s' → logprob: -7.502262592315674
    4. '<|end|>' → logprob: -7.627262592315674
    5. '
' → logprob: -11.252262115478516
    6. '           ' → logprob: -11.877262115478516
    7. '```' → logprob: -12.002262115478516
    8. '        
' → logprob: -12.127262115478516
    9. '<|end|>' → logprob: -12.252262115478516
    10. '   ' → logprob: -12.502262115478516

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005822229431942105
    2. ' s' → logprob: -7.875582218170166
    3. 's' → logprob: -8.625582695007324
    4. '<|end|>' → logprob: -11.625582695007324
    5. '   ' → logprob: -12.250582695007324
    6. '           ' → logprob: -12.500582695007324
    7. '```' → logprob: -13.125582695007324
    8. ',' → logprob: -14.125582695007324
    9. ' ' → logprob: -14.625582695007324
    10. '
' → logprob: -14.625582695007324

Token 177: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5262933373451233
    2. 's' (adapté à ' s') → logprob: -0.9012933373451233
    3. '       ' → logprob: -5.7762932777404785
    4. '   ' → logprob: -10.526293754577637
    5. '           ' → logprob: -10.651293754577637
    6. '        ' → logprob: -12.901293754577637
    7. '```' → logprob: -13.401293754577637
    8. '    ' → logprob: -13.526293754577637
    9. ' ' → logprob: -13.526293754577637
    10. '      ' → logprob: -13.901293754577637

Token 178: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.043016090989112854
    2. '+=' → logprob: -3.168016195297241
    3. ' +' → logprob: -12.16801643371582
    4. ']+=' → logprob: -12.66801643371582
    5. '+' → logprob: -12.91801643371582
    6. '+='' → logprob: -13.41801643371582
    7. ' ' → logprob: -13.79301643371582
    8. ' -=' → logprob: -14.04301643371582
    9. '+="' → logprob: -14.29301643371582
    10. '   ' → logprob: -14.29301643371582

Token 179: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.4741046130657196
    2. 'grid' → logprob: -0.974104642868042
    3. '(grid' → logprob: -11.099104881286621
    4. '	grid' → logprob: -12.099104881286621
    5. '.grid' → logprob: -13.099104881286621
    6. ' ' → logprob: -14.224104881286621
    7. '_grid' → logprob: -14.224104881286621
    8. ':grid' → logprob: -14.349104881286621
    9. '```' → logprob: -14.599104881286621
    10. ' ' → logprob: -14.599104881286621

Token 180: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.000007629394531
    3. 'start' → logprob: -13.875007629394531
    4. ' [' → logprob: -16.12500762939453
    5. '[
' → logprob: -16.50000762939453
    6. '[[' → logprob: -18.62500762939453
    7. '   ' → logprob: -19.00000762939453
    8. '[source' → logprob: -19.00000762939453
    9. '```' → logprob: -19.00000762939453
    10. '[row' → logprob: -19.50000762939453

Token 181: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.04573208466172218
    2. '_c' → logprob: -3.295732021331787
    3. '[start' → logprob: -4.920732021331787
    4. 'r' → logprob: -8.545732498168945
    5. '[r' → logprob: -9.670732498168945
    6. '[' → logprob: -10.045732498168945
    7. '[c' → logprob: -11.295732498168945
    8. '_[' → logprob: -11.670732498168945
    9. '```' → logprob: -11.670732498168945
    10. 'start' → logprob: -11.670732498168945

Token 182: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013345248298719525
    2. '[c' → logprob: -6.8763346672058105
    3. '[start' → logprob: -8.376334190368652
    4. ' ][' → logprob: -10.501334190368652
    5. ')[' → logprob: -10.876334190368652
    6. '}[' → logprob: -12.126334190368652
    7. ']' → logprob: -12.376334190368652
    8. '[' → logprob: -12.376334190368652
    9. '   ' → logprob: -12.751334190368652
    10. '[current' → logprob: -14.001334190368652

Token 183: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.273621405242011e-05
    2. ' c' → logprob: -10.625032424926758
    3. '[c' → logprob: -12.250032424926758
    4. '   ' → logprob: -13.000032424926758
    5. ' ' → logprob: -15.000032424926758
    6. '[' → logprob: -15.250032424926758
    7. '
' → logprob: -15.500032424926758
    8. ')c' → logprob: -15.875032424926758
    9. '```' → logprob: -16.375032424926758
    10. '	c' → logprob: -17.000032424926758

Token 184: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6554648876190186
    2. '       ' → logprob: -0.7804648876190186
    3. ')
' → logprob: -4.030465126037598
    4. '<|end|>' → logprob: -5.405465126037598
    5. ']' → logprob: -9.530465126037598
    6. '   ' → logprob: -9.780465126037598
    7. '
' → logprob: -9.780465126037598
    8. '<|end|>' → logprob: -10.155465126037598
    9. ',' → logprob: -11.030465126037598
    10. '```' → logprob: -11.530465126037598

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.961759259458631e-06
    2. '```' → logprob: -12.875004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '
' → logprob: -14.375004768371582
    5. '           ' → logprob: -14.875004768371582
    6. '<|end|>' → logprob: -15.125004768371582
    7. ',' → logprob: -16.7500057220459
    8. '[' → logprob: -16.8750057220459
    9. 'path' → logprob: -16.8750057220459
    10. '``' → logprob: -17.0000057220459

Token 186: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.16051320731639862
    2. ' path' → logprob: -1.910513162612915
    3. '       ' → logprob: -8.160512924194336
    4. '   ' → logprob: -13.285512924194336
    5. '```' → logprob: -14.910512924194336
    6. ' ' → logprob: -15.035512924194336
    7. '	path' → logprob: -15.535512924194336
    8. 'Path' → logprob: -15.660512924194336
    9. '
' → logprob: -16.410512924194336
    10. '        ' → logprob: -16.535512924194336

Token 187: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.9153885558771435e-06
    2. '.' → logprob: -12.500005722045898
    3. '.app' → logprob: -13.500005722045898
    4. 'append' → logprob: -15.500005722045898
    5. '<|end|>' → logprob: -15.625005722045898
    6. ' .' → logprob: -16.6250057220459
    7. 'app' → logprob: -16.7500057220459
    8. '.setdefault' → logprob: -16.8750057220459
    9. '.clear' → logprob: -17.0000057220459
    10. '.push' → logprob: -17.6250057220459

Token 188: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002483626827597618
    2. '(start' → logprob: -6.00248384475708
    3. '(' → logprob: -11.877483367919922
    4. ' ((' → logprob: -14.377483367919922
    5. ' (' → logprob: -15.377483367919922
    6. '[(' → logprob: -16.252483367919922
    7. '```' → logprob: -17.377483367919922
    8. '(
' → logprob: -17.752483367919922
    9. '   ' → logprob: -18.002483367919922
    10. ' ' → logprob: -18.377483367919922

Token 189: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.5252596464706585e-05
    2. '(start' → logprob: -10.375044822692871
    3. ' start' → logprob: -11.250044822692871
    4. '[start' → logprob: -14.375044822692871
    5. '(' → logprob: -15.625044822692871
    6. '   ' → logprob: -16.625045776367188
    7. ')' → logprob: -17.375045776367188
    8. 'star' → logprob: -17.500045776367188
    9. ' (' → logprob: -18.250045776367188
    10. '	start' → logprob: -18.250045776367188

Token 190: '_r' (ID: 3442)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6288359761238098
    2. '_r' → logprob: -0.8788359761238098
    3. 'r' → logprob: -3.128835916519165
    4. '_start' → logprob: -5.003836154937744
    5. '[start' → logprob: -7.128836154937744
    6. ' start' → logprob: -9.628835678100586
    7. '_c' → logprob: -9.878835678100586
    8. '(start' → logprob: -10.003835678100586
    9. '_s' → logprob: -10.503835678100586
    10. '_' → logprob: -11.003835678100586

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002060436672763899
    2. ',c' → logprob: -8.625205993652344
    3. ' ,' → logprob: -11.250205993652344
    4. 'c' → logprob: -12.125205993652344
    5. ',
' → logprob: -12.500205993652344
    6. '       ' → logprob: -13.000205993652344
    7. ')' → logprob: -14.250205993652344
    8. ' c' → logprob: -15.625205993652344
    9. '   ' → logprob: -15.625205993652344
    10. ' ' → logprob: -15.875205993652344

Token 192: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001502598519437015
    2. ' c' → logprob: -6.501502513885498
    3. ' ' → logprob: -15.876502990722656
    4. '   ' → logprob: -16.126502990722656
    5. ')c' → logprob: -16.751502990722656
    6. '	c' → logprob: -17.876502990722656
    7. '
' → logprob: -17.876502990722656
    8. '  ' → logprob: -18.751502990722656
    9. '```' → logprob: -18.876502990722656
    10. '    ' → logprob: -18.876502990722656

Token 193: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044387683272361755
    2. '))' → logprob: -3.5443875789642334
    3. ')
' → logprob: -4.2943878173828125
    4. '))
' → logprob: -7.0443878173828125
    5. ')}' → logprob: -12.919387817382812
    6. ')

' → logprob: -13.044387817382812
    7. ')))' → logprob: -13.169387817382812
    8. '       ' → logprob: -13.294387817382812
    9. ')')
' → logprob: -14.294387817382812
    10. ' )' → logprob: -14.419387817382812

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000363590574124828
    2. '<|end|>' → logprob: -8.00036334991455
    3. '   ' → logprob: -11.62536334991455
    4. ' if' → logprob: -12.00036334991455
    5. '```' → logprob: -12.75036334991455
    6. ')' → logprob: -12.87536334991455
    7. '<|end|>' → logprob: -13.00036334991455
    8. 'if' → logprob: -13.12536334991455
    9. ',' → logprob: -13.87536334991455
    10. '           ' → logprob: -14.25036334991455

Token 195: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25238144397735596
    2. 'if' (adapté à ' if') → logprob: -1.752381443977356
    3. '       ' → logprob: -3.0023813247680664
    4. '   ' → logprob: -12.002381324768066
    5. '           ' → logprob: -12.502381324768066
    6. ' ' → logprob: -12.877381324768066
    7. 'If' → logprob: -13.127381324768066
    8. '        ' → logprob: -13.377381324768066
    9. '```' → logprob: -13.377381324768066
    10. '
' → logprob: -13.627381324768066

Token 196: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20141568779945374
    2. 's' → logprob: -1.7014156579971313
    3. ' ' → logprob: -14.201416015625
    4. '(s' → logprob: -14.326416015625
    5. ' ' → logprob: -15.576416015625
    6. '_s' → logprob: -15.701416015625
    7. '<|end|>' → logprob: -15.701416015625
    8. '#' → logprob: -16.201416015625
    9. '```' → logprob: -16.388916015625
    10. '`s' → logprob: -16.513916015625

Token 197: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0019308974733576179
    2. '==' → logprob: -6.2519307136535645
    3. ' ' → logprob: -13.251931190490723
    4. ' ' → logprob: -15.376931190490723
    5. ' ==
' → logprob: -16.751930236816406
    6. '=' → logprob: -17.126930236816406
    7. ')==' → logprob: -17.751930236816406
    8. ' =' → logprob: -17.751930236816406
    9. ')' → logprob: -17.876930236816406
    10. '<|end|>' → logprob: -18.126930236816406

Token 198: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.6931489109992981
    2. 'target' → logprob: -0.6931489109992981
    3. '(target' → logprob: -14.068148612976074
    4. '[target' → logprob: -14.443148612976074
    5. '	target' → logprob: -15.193148612976074
    6. ' ' → logprob: -17.06814956665039
    7. '_target' → logprob: -17.19314956665039
    8. ',target' → logprob: -17.44314956665039
    9. '
' → logprob: -17.56814956665039
    10. 'taget' → logprob: -17.81814956665039

Token 199: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -12.375007629394531
    3. '_s' → logprob: -13.250007629394531
    4. ' _' → logprob: -14.125007629394531
    5. '_target' → logprob: -14.750007629394531
    6. ''_' → logprob: -15.500007629394531
    7. 'sum' → logprob: -15.625007629394531
    8. ')' → logprob: -17.00000762939453
    9. '_token' → logprob: -17.12500762939453
    10. '_SUM' → logprob: -17.25000762939453

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5464875102043152
    2. ':
' → logprob: -1.04648756980896
    3. '           ' → logprob: -2.67148756980896
    4. '<|end|>' → logprob: -7.921487331390381
    5. '       ' → logprob: -8.921487808227539
    6. '):
' → logprob: -9.796487808227539
    7. '          ' → logprob: -10.546487808227539
    8. '):' → logprob: -10.921487808227539
    9. '               ' → logprob: -11.171487808227539
    10. '   ' → logprob: -11.296487808227539

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001963881659321487
    2. 'results' → logprob: -9.75019645690918
    3. ' results' → logprob: -9.75019645690918
    4. 'break' → logprob: -9.87519645690918
    5. ' break' → logprob: -10.87519645690918
    6. '<|end|>' → logprob: -12.87519645690918
    7. '```' → logprob: -13.12519645690918
    8. '          ' → logprob: -13.62519645690918
    9. '       ' → logprob: -14.37519645690918
    10. '               ' → logprob: -14.50019645690918

Token 202: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.38795536756515503
    2. ' results' → logprob: -1.1379554271697998
    3. '           ' → logprob: -6.887955188751221
    4. '	results' → logprob: -10.637955665588379
    5. '       ' → logprob: -11.262955665588379
    6. '               ' → logprob: -11.512955665588379
    7. '   ' → logprob: -11.887955665588379
    8. 'return' → logprob: -12.887955665588379
    9. '(results' → logprob: -13.137955665588379
    10. 'break' → logprob: -13.512955665588379

Token 203: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.2617008400848135e-05
    2. '.' → logprob: -10.500032424926758
    3. '.extend' → logprob: -12.875032424926758
    4. '.app' → logprob: -13.625032424926758
    5. '.ap' → logprob: -15.125032424926758
    6. '.setdefault' → logprob: -15.250032424926758
    7. '.add' → logprob: -15.875032424926758
    8. '.Append' → logprob: -15.875032424926758
    9. 'append' → logprob: -16.250032424926758
    10. '           ' → logprob: -16.375032424926758

Token 204: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -4.3464544432936236e-05
    2. 'path' → logprob: -10.250043869018555
    3. ' path' → logprob: -12.000043869018555
    4. ' (' → logprob: -13.500043869018555
    5. '[path' → logprob: -14.875043869018555
    6. '(' → logprob: -16.875043869018555
    7. ',path' → logprob: -17.750043869018555
    8. '(paths' → logprob: -19.125043869018555
    9. ':path' → logprob: -19.125043869018555
    10. '(
' → logprob: -19.250043869018555

Token 205: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.048603158444166183
    2. '[:]' → logprob: -3.048603057861328
    3. ')' → logprob: -11.298603057861328
    4. ' [:' → logprob: -13.798603057861328
    5. '[:-' → logprob: -13.798603057861328
    6. '[::-' → logprob: -14.923603057861328
    7. '][:' → logprob: -15.173603057861328
    8. '[' → logprob: -15.423603057861328
    9. '[])' → logprob: -15.798603057861328
    10. '[:,' → logprob: -15.923603057861328

Token 206: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011747668497264385
    2. ')' → logprob: -4.51174783706665
    3. '])
' → logprob: -7.51174783706665
    4. '           ' → logprob: -9.386747360229492
    5. ')
' → logprob: -10.886747360229492
    6. '])' → logprob: -11.136747360229492
    7. ']
' → logprob: -11.386747360229492
    8. '())
' → logprob: -11.886747360229492
    9. '))
' → logprob: -12.636747360229492
    10. ']' → logprob: -12.761747360229492

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004411591507960111
    2. 'break' → logprob: -7.875441074371338
    3. ' break' → logprob: -10.000441551208496
    4. 'continue' → logprob: -11.500441551208496
    5. '       ' → logprob: -13.500441551208496
    6. '               ' → logprob: -14.125441551208496
    7. '```' → logprob: -14.250441551208496
    8. '          ' → logprob: -14.500441551208496
    9. '<|end|>' → logprob: -14.750441551208496
    10. ' continue' → logprob: -14.875441551208496

Token 208: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.001106755924411118
    2. ' break' → logprob: -6.8761067390441895
    3. '           ' → logprob: -9.626107215881348
    4. '       ' → logprob: -12.376107215881348
    5. '   ' → logprob: -13.751107215881348
    6. '               ' → logprob: -13.876107215881348
    7. '	break' → logprob: -14.001107215881348
    8. '```' → logprob: -14.626107215881348
    9. '
' → logprob: -15.126107215881348
    10. 'continue' → logprob: -16.12610626220703

Token 209: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04247240722179413
    2. '   ' → logprob: -3.2924723625183105
    3. '<|end|>' → logprob: -5.9174723625183105
    4. '
' → logprob: -6.9174723625183105
    5. '#' → logprob: -8.167472839355469
    6. '        
' → logprob: -8.792472839355469
    7. '    
' → logprob: -9.292472839355469
    8. ')' → logprob: -9.792472839355469
    9. '    ' → logprob: -10.167472839355469
    10. '<|end|>' → logprob: -10.917472839355469

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02332758717238903
    2. '<|end|>' → logprob: -3.898327589035034
    3. '   ' → logprob: -6.398327350616455
    4. '
' → logprob: -7.023327350616455
    5. '#' → logprob: -9.773327827453613
    6. '        
' → logprob: -10.148327827453613
    7. '<|end|>' → logprob: -10.398327827453613
    8. ')' → logprob: -10.523327827453613
    9. '```' → logprob: -10.648327827453613
    10. '           ' → logprob: -11.898327827453613

Token 211: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2521316409111023
    2. '       ' → logprob: -1.627131700515747
    3. ' if' → logprob: -4.002131462097168
    4. '   ' → logprob: -4.877131462097168
    5. '
' → logprob: -8.502131462097168
    6. ' ' → logprob: -8.752131462097168
    7. '           ' → logprob: -10.127131462097168
    8. '     ' → logprob: -11.002131462097168
    9. '	if' → logprob: -11.502131462097168
    10. '  ' → logprob: -11.627131462097168

Token 212: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11282379925251007
    2. 's' → logprob: -2.237823724746704
    3. ' ' → logprob: -15.237823486328125
    4. '```' → logprob: -15.237823486328125
    5. '(s' → logprob: -15.362823486328125
    6. '   ' → logprob: -15.487823486328125
    7. ' ' → logprob: -16.237823486328125
    8. '	s' → logprob: -16.487823486328125
    9. '_s' → logprob: -16.987823486328125
    10. '>' → logprob: -17.175323486328125

Token 213: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0205594040453434
    2. '>' → logprob: -3.895559310913086
    3. ' ' → logprob: -11.395559310913086
    4. ' ' → logprob: -12.270559310913086
    5. '<|end|>' → logprob: -14.520559310913086
    6. '   ' → logprob: -15.145559310913086
    7. ' >
' → logprob: -15.145559310913086
    8. '```' → logprob: -16.395559310913086
    9. '[' → logprob: -16.520559310913086
    10. '  ' → logprob: -16.645559310913086

Token 214: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.005234121344983578
    2. 'target' → logprob: -5.255234241485596
    3. '(target' → logprob: -15.255233764648438
    4. '[target' → logprob: -16.880233764648438
    5. '	target' → logprob: -17.130233764648438
    6. ' ' → logprob: -18.505233764648438
    7. ' ' → logprob: -18.880233764648438
    8. ' targ' → logprob: -19.255233764648438
    9. ',target' → logprob: -19.380233764648438
    10. 't' → logprob: -19.380233764648438

Token 215: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.001887468621134758
    2. 'target' → logprob: -6.376887321472168
    3. '_target' → logprob: -8.626887321472168
    4. '_' → logprob: -13.251887321472168
    5. 'sum' → logprob: -13.501887321472168
    6. '_s' → logprob: -13.751887321472168
    7. ' target' → logprob: -14.001887321472168
    8. '```' → logprob: -14.751887321472168
    9. '[target' → logprob: -15.376887321472168
    10. 'arget' → logprob: -15.876887321472168

Token 216: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7521820664405823
    2. ':
' → logprob: -0.7521820664405823
    3. ':' → logprob: -2.8771820068359375
    4. '<|end|>' → logprob: -8.127182006835938
    5. '       ' → logprob: -8.627182006835938
    6. '{
' → logprob: -9.377182006835938
    7. 'break' → logprob: -9.377182006835938
    8. '):
' → logprob: -9.752182006835938
    9. '          ' → logprob: -9.877182006835938
    10. ':

' → logprob: -10.127182006835938

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01610029861330986
    2. 'break' → logprob: -4.2661004066467285
    3. ' break' → logprob: -6.2661004066467285
    4. '               ' → logprob: -10.89109992980957
    5. '```' → logprob: -12.26609992980957
    6. '       ' → logprob: -12.51609992980957
    7. '          ' → logprob: -12.51609992980957
    8. '	break' → logprob: -13.64109992980957
    9. '
' → logprob: -13.89109992980957
    10. '		' → logprob: -14.01609992980957

Token 218: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05248067155480385
    2. ' break' → logprob: -3.052480697631836
    3. '           ' → logprob: -5.552480697631836
    4. '               ' → logprob: -13.177480697631836
    5. '	break' → logprob: -13.177480697631836
    6. '       ' → logprob: -13.427480697631836
    7. '```' → logprob: -13.677480697631836
    8. '
' → logprob: -14.302480697631836
    9. '   ' → logprob: -14.927480697631836
    10. ' ' → logprob: -16.302480697631836

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014179613441228867
    2. '
' → logprob: -4.514179706573486
    3. '    
' → logprob: -6.139179706573486
    4. '```' → logprob: -7.764179706573486
    5. '\n' → logprob: -7.889179706573486
    6. '<|end|>' → logprob: -9.514179229736328
    7. '  
' → logprob: -10.514179229736328
    8. ')' → logprob: -11.014179229736328
    9. 'newline' → logprob: -11.014179229736328
    10. '#' → logprob: -11.889179229736328

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004019160754978657
    2. '
' → logprob: -5.754019260406494
    3. '#' → logprob: -7.754019260406494
    4. '    
' → logprob: -8.254018783569336
    5. '```' → logprob: -9.004018783569336
    6. '\n' → logprob: -12.129018783569336
    7. ',' → logprob: -12.129018783569336
    8. ')' → logprob: -12.504018783569336
    9. '  
' → logprob: -12.629018783569336
    10. '<|end|>' → logprob: -12.879018783569336

Token 221: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04909107834100723
    2. '#' (adapté à ' #') → logprob: -3.049091100692749
    3. '```' → logprob: -7.92409086227417
    4. '
' → logprob: -8.924091339111328
    5. '    
' → logprob: -12.299091339111328
    6. '``' → logprob: -14.049091339111328
    7. ')' → logprob: -14.424091339111328
    8. ' #' → logprob: -14.424091339111328
    9. ',' → logprob: -14.799091339111328
    10. 'def' → logprob: -15.049091339111328

Token 222: ' Try' (ID: 14720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.047263577580451965
    2. '   ' → logprob: -3.1722636222839355
    3. ' #' → logprob: -5.7972636222839355
    4. 's' → logprob: -7.0472636222839355
    5. ' s' → logprob: -8.547263145446777
    6. 'def' → logprob: -10.047263145446777
    7. 'Try' → logprob: -10.047263145446777
    8. ' ' → logprob: -10.547263145446777
    9. '
' → logprob: -11.047263145446777
    10. '  ' → logprob: -11.172263145446777

Token 223: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.12714658677577972
    2. ' vertical' → logprob: -2.1271464824676514
    3. 'vert' → logprob: -9.50214672088623
    4. '(vertical' → logprob: -9.87714672088623
    5. 'def' → logprob: -10.00214672088623
    6. '_vertical' → logprob: -10.62714672088623
    7. '   ' → logprob: -12.12714672088623
    8. 'for' → logprob: -12.25214672088623
    9. '(' → logprob: -12.50214672088623
    10. ' for' → logprob: -13.37714672088623

Token 224: ' line' (ID: 2543)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15674352645874023
    2. ' s' → logprob: -2.4067435264587402
    3. '   ' → logprob: -2.9067435264587402
    4. 'line' → logprob: -8.656744003295898
    5. '```' → logprob: -9.406744003295898
    6. ' line' → logprob: -10.156744003295898
    7. ' ' → logprob: -11.781744003295898
    8. '``' → logprob: -12.156744003295898
    9. '(s' → logprob: -13.281744003295898
    10. '  ' → logprob: -13.656744003295898

Token 225: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37458837032318115
    2. ' s' → logprob: -1.4995883703231812
    3. '(s' → logprob: -2.9995884895324707
    4. 's' → logprob: -3.4995884895324707
    5. ' (' → logprob: -4.999588489532471
    6. '(' → logprob: -6.499588489532471
    7. ' =' → logprob: -8.499588012695312
    8. '
' → logprob: -8.874588012695312
    9. '```' → logprob: -8.874588012695312
    10. ':' → logprob: -8.874588012695312

Token 226: 'top' (ID: 8169)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007898683659732342
    2. 's' → logprob: -5.257898807525635
    3. ' ' → logprob: -6.007898807525635
    4. ' s' → logprob: -8.882898330688477
    5. ')' → logprob: -10.382898330688477
    6. '   ' → logprob: -10.882898330688477
    7. 'start' → logprob: -11.632898330688477
    8. '
' → logprob: -13.132898330688477
    9. '```' → logprob: -14.382898330688477
    10. ')
' → logprob: -14.507898330688477

Token 227: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.228332057595253
    2. 'to' → logprob: -1.6033320426940918
    3. '_to' → logprob: -6.103332042694092
    4. '   ' → logprob: -7.728332042694092
    5. '_r' → logprob: -9.85333251953125
    6. '  ' → logprob: -10.10333251953125
    7. ',' → logprob: -10.35333251953125
    8. '    ' → logprob: -10.85333251953125
    9. 'down' → logprob: -10.97833251953125
    10. 'To' → logprob: -11.10333251953125

Token 228: ' bottom' (ID: 8725)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.35756662487983704
    2. 'start' → logprob: -1.4825665950775146
    3. 'right' → logprob: -2.9825665950775146
    4. ' down' → logprob: -4.232566833496094
    5. 'bottom' → logprob: -5.732566833496094
    6. 'r' → logprob: -6.232566833496094
    7. ' start' → logprob: -6.857566833496094
    8. 'next' → logprob: -6.982566833496094
    9. 'range' → logprob: -8.357566833496094
    10. 'left' → logprob: -8.357566833496094

Token 229: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2147783488035202
    2. ')' → logprob: -1.7147783041000366
    3. '   ' → logprob: -4.339778423309326
    4. 's' → logprob: -8.964777946472168
    5. '):
' → logprob: -9.964777946472168
    6. ' s' → logprob: -10.214777946472168
    7. ')s' → logprob: -11.839777946472168
    8. '```' → logprob: -12.214777946472168
    9. ')
' → logprob: -12.464777946472168
    10. ' )
' → logprob: -13.214777946472168

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057526301592588425
    2. 's' → logprob: -3.0575263500213623
    3. '```' → logprob: -4.807526111602783
    4. ' s' → logprob: -7.682526111602783
    5. '``' → logprob: -9.057526588439941
    6. '
' → logprob: -9.307526588439941
    7. ' ' → logprob: -10.057526588439941
    8. '  ' → logprob: -11.682526588439941
    9. '    
' → logprob: -12.182526588439941
    10. '    ' → logprob: -13.682526588439941

Token 231: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5773360133171082
    2. 's' (adapté à ' s') → logprob: -0.8273360133171082
    3. '   ' → logprob: -6.577335834503174
    4. '```' → logprob: -12.827336311340332
    5. ' ' → logprob: -13.702336311340332
    6. '
' → logprob: -16.952335357666016
    7. '``' → logprob: -16.952335357666016
    8. '_s' → logprob: -17.077335357666016
    9. '  ' → logprob: -17.327335357666016
    10. '	s' → logprob: -17.452335357666016

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.475207328796387
    4. '   ' → logprob: -17.10020637512207
    5. ' =
' → logprob: -18.35020637512207
    6. 's' → logprob: -18.60020637512207
    7. ' ' → logprob: -18.85020637512207
    8. '```' → logprob: -19.35020637512207
    9. '=
' → logprob: -19.35020637512207
    10. '<|end|>' → logprob: -19.72520637512207

Token 233: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4287017285823822
    2. ' ' → logprob: -1.0537017583847046
    3. '   ' → logprob: -13.928701400756836
    4. ' ' → logprob: -16.678701400756836
    5. '  ' → logprob: -16.991201400756836
    6. 'def' → logprob: -17.866201400756836
    7. '```' → logprob: -18.241201400756836
    8. 's' → logprob: -18.803701400756836
    9. '<|end|>' → logprob: -18.866201400756836
    10. '=' → logprob: -19.053701400756836

Token 234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.500123977661133
    4. '  ' → logprob: -18.500123977661133
    5. '000' → logprob: -19.000123977661133
    6. 's' → logprob: -19.000123977661133
    7. '```' → logprob: -19.750123977661133
    8. '00' → logprob: -20.000123977661133
    9. 'def' → logprob: -20.250123977661133
    10. 'import' → logprob: -20.750123977661133

Token 235: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2018018513917923
    2. '
' → logprob: -1.7018018960952759
    3. 'path' → logprob: -7.951801776885986
    4. '```' → logprob: -11.201802253723145
    5. ' path' → logprob: -11.701802253723145
    6. 'for' → logprob: -12.576802253723145
    7. '    
' → logprob: -12.951802253723145
    8. '\n' → logprob: -13.076802253723145
    9. '
' → logprob: -13.076802253723145
    10. '  ' → logprob: -14.451802253723145

Token 236: '   ' (ID: 271)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.32366815209388733
    2. ' path' → logprob: -1.323668122291565
    3. '   ' → logprob: -4.573668003082275
    4. '
' → logprob: -10.823668479919434
    5. '```' → logprob: -12.698668479919434
    6. ' ' → logprob: -12.948668479919434
    7. ',path' → logprob: -13.198668479919434
    8. '_path' → logprob: -13.698668479919434
    9. '"path' → logprob: -14.073668479919434
    10. '/path' → logprob: -14.198668479919434

Token 237: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -2.339278580620885e-06
    2. ' path' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.000001907348633
    4. '
' → logprob: -20.250001907348633
    5. '[]' → logprob: -20.875001907348633
    6. '[]
' → logprob: -21.250001907348633
    7. '(path' → logprob: -21.250001907348633
    8. ' ' → logprob: -21.875001907348633
    9. '	path' → logprob: -22.125001907348633
    10. '[path' → logprob: -22.250001907348633

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023732721805573
    2. '=' → logprob: -1.9102373123168945
    3. '=[]' → logprob: -11.535237312316895
    4. '   ' → logprob: -12.910237312316895
    5. ' ' → logprob: -14.785237312316895
    6. '=[]
' → logprob: -15.910237312316895
    7. 's' → logprob: -15.910237312316895
    8. '[]' → logprob: -16.16023826599121
    9. '  ' → logprob: -16.28523826599121
    10. '[:]' → logprob: -16.78523826599121

Token 239: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018154039978981018
    2. '[]
' → logprob: -4.018154144287109
    3. '[]

' → logprob: -12.51815414428711
    4. ' []' → logprob: -14.76815414428711
    5. '[' → logprob: -17.26815414428711
    6. '[]}' → logprob: -17.39315414428711
    7. ' []
' → logprob: -18.14315414428711
    8. '[
' → logprob: -18.89315414428711
    9. '[]"' → logprob: -18.89315414428711
    10. '```' → logprob: -18.89315414428711

Token 240: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09786060452461243
    2. ' for' → logprob: -2.84786057472229
    3. '   ' → logprob: -3.34786057472229
    4. '
' → logprob: -9.722860336303711
    5. '```' → logprob: -10.347860336303711
    6. '    
' → logprob: -13.347860336303711
    7. '	for' → logprob: -13.597860336303711
    8. '``' → logprob: -13.722860336303711
    9. '<|end|>' → logprob: -15.597860336303711
    10. ' ' → logprob: -15.722860336303711

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.5
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -19.0
    5. '
' → logprob: -22.75
    6. '``' → logprob: -23.25
    7. '	for' → logprob: -23.5
    8. '    
' → logprob: -24.375
    9. 'from' → logprob: -24.875
    10. '  
' → logprob: -26.875

Token 242: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003177952254191041
    2. ' r' → logprob: -5.753178119659424
    3. '_r' → logprob: -16.253177642822266
    4. '	r' → logprob: -16.253177642822266
    5. '```' → logprob: -17.753177642822266
    6. '(r' → logprob: -18.128177642822266
    7. 'start' → logprob: -19.378177642822266
    8. 'i' → logprob: -19.628177642822266
    9. '   ' → logprob: -19.878177642822266
    10. 'row' → logprob: -20.003177642822266

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016187800094485283
    2. 'in' → logprob: -4.14118766784668
    3. 'range' → logprob: -9.26618766784668
    4. ' range' → logprob: -9.89118766784668
    5. '(range' → logprob: -11.89118766784668
    6. 'In' → logprob: -14.76618766784668
    7. '(start' → logprob: -14.89118766784668
    8. '   ' → logprob: -15.76618766784668
    9. ',' → logprob: -16.01618766784668
    10. '(' → logprob: -16.14118766784668

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023830119520425797
    2. ' range' → logprob: -3.7738301753997803
    3. 'start' → logprob: -7.523829936981201
    4. '(range' → logprob: -10.39883041381836
    5. '(start' → logprob: -11.39883041381836
    6. ' start' → logprob: -12.89883041381836
    7. 'Range' → logprob: -16.14883041381836
    8. '[start' → logprob: -16.52383041381836
    9. '_range' → logprob: -17.77383041381836
    10. 'for' → logprob: -18.39883041381836

Token 245: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0019307781476527452
    2. 'start' → logprob: -6.2519307136535645
    3. '[start' → logprob: -14.126931190490723
    4. ' start' → logprob: -14.376931190490723
    5. ',start' → logprob: -14.626931190490723
    6. '=start' → logprob: -14.876931190490723
    7. '(' → logprob: -17.001930236816406
    8. ':start' → logprob: -17.126930236816406
    9. '	start' → logprob: -17.876930236816406
    10. '_start' → logprob: -19.126930236816406

Token 246: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0008575046667829156
    2. '(start' → logprob: -7.875857353210449
    3. '_c' → logprob: -8.00085735321045
    4. 'start' → logprob: -9.25085735321045
    5. '[start' → logprob: -10.87585735321045
    6. '=start' → logprob: -11.75085735321045
    7. ',start' → logprob: -12.00085735321045
    8. 'r' → logprob: -12.00085735321045
    9. '_,' → logprob: -13.00085735321045
    10. '_start' → logprob: -13.25085735321045

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.463036435074173e-05
    2. ' ,' → logprob: -11.125024795532227
    3. ',start' → logprob: -11.750024795532227
    4. ',
' → logprob: -14.375024795532227
    5. ',n' → logprob: -14.500024795532227
    6. 'start' → logprob: -14.625024795532227
    7. '   ' → logprob: -16.750024795532227
    8. '+' → logprob: -17.000024795532227
    9. '‌,' → logprob: -17.125024795532227
    10. '(start' → logprob: -17.375024795532227

Token 248: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009115827269852161
    2. ' n' → logprob: -7.000911712646484
    3. ',' → logprob: -16.875911712646484
    4. '   ' → logprob: -17.000911712646484
    5. 'start' → logprob: -17.500911712646484
    6. '	n' → logprob: -17.750911712646484
    7. ',n' → logprob: -17.875911712646484
    8. ' ' → logprob: -18.875911712646484
    9. '<n' → logprob: -18.875911712646484
    10. '(n' → logprob: -19.500911712646484

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1602444350719452
    2. '):
' → logprob: -1.9102444648742676
    3. '):

' → logprob: -12.03524398803711
    4. '   ' → logprob: -12.16024398803711
    5. '):
' → logprob: -12.53524398803711
    6. ':' → logprob: -13.53524398803711
    7. '```' → logprob: -13.78524398803711
    8. ' ):' → logprob: -14.41024398803711
    9. ' ' → logprob: -14.66024398803711
    10. '[' → logprob: -15.28524398803711

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001302374730585143
    2. ' if' → logprob: -9.625130653381348
    3. '   ' → logprob: -10.500130653381348
    4. '<|end|>' → logprob: -11.000130653381348
    5. '```' → logprob: -11.500130653381348
    6. 'if' → logprob: -11.750130653381348
    7. '           ' → logprob: -14.375130653381348
    8. '      ' → logprob: -15.250130653381348
    9. '[' → logprob: -15.375130653381348
    10. '``' → logprob: -15.750130653381348

Token 251: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10325893759727478
    2. 'if' (adapté à ' if') → logprob: -2.6032588481903076
    3. '       ' → logprob: -3.7282588481903076
    4. '   ' → logprob: -10.353259086608887
    5. '```' → logprob: -13.103259086608887
    6. '<|end|>' → logprob: -13.228259086608887
    7. ' ' → logprob: -13.353259086608887
    8. '	if' → logprob: -13.728259086608887
    9. '           ' → logprob: -13.978259086608887
    10. 'If' → logprob: -15.478259086608887

Token 252: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.029751179739832878
    2. ' used' → logprob: -3.5297510623931885
    3. '   ' → logprob: -14.90475082397461
    4. '.used' → logprob: -16.27975082397461
    5. '_used' → logprob: -16.65475082397461
    6. 'Used' → logprob: -17.15475082397461
    7. 'use' → logprob: -18.02975082397461
    8. ' ' → logprob: -18.02975082397461
    9. 'using' → logprob: -18.65475082397461
    10. '-used' → logprob: -18.65475082397461

Token 253: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. '[row' → logprob: -17.75
    4. ' [' → logprob: -17.875
    5. '[start' → logprob: -18.625
    6. 'r' → logprob: -19.25
    7. '[s' → logprob: -20.75
    8. '[root' → logprob: -20.875
    9. '(r' → logprob: -21.0
    10. '[t' → logprob: -21.125

Token 254: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005370952654629946
    2. '[start' → logprob: -5.25537109375
    3. ']' → logprob: -9.13037109375
    4. ' ][' → logprob: -11.50537109375
    5. ')[' → logprob: -12.38037109375
    6. '[' → logprob: -12.75537109375
    7. ']][' → logprob: -13.13037109375
    8. 'start' → logprob: -13.38037109375
    9. '[r' → logprob: -13.63037109375
    10. '[end' → logprob: -14.13037109375

Token 255: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.2246291337069124e-05
    2. ' start' → logprob: -11.000021934509277
    3. '0' → logprob: -12.250021934509277
    4. '[start' → logprob: -15.250021934509277
    5. 'c' → logprob: -15.625021934509277
    6. '
' → logprob: -16.125022888183594
    7. '   ' → logprob: -16.500022888183594
    8. '```' → logprob: -17.250022888183594
    9. ' ' → logprob: -17.375022888183594
    10. '(start' → logprob: -18.000022888183594

Token 256: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.2246291337069124e-05
    2. '_r' → logprob: -10.750021934509277
    3. 'c' → logprob: -15.000021934509277
    4. '_' → logprob: -15.625021934509277
    5. 'r' → logprob: -16.750022888183594
    6. '```' → logprob: -17.000022888183594
    7. '   ' → logprob: -17.125022888183594
    8. '[' → logprob: -17.625022888183594
    9. 'C' → logprob: -17.750022888183594
    10. 'start' → logprob: -18.500022888183594

Token 257: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.01692705601453781
    2. ']:' → logprob: -4.141927242279053
    3. ']' → logprob: -7.516927242279053
    4. ']):
' → logprob: -8.641926765441895
    5. '):
' → logprob: -9.766926765441895
    6. ']:

' → logprob: -10.016926765441895
    7. ']:
' → logprob: -10.641926765441895
    8. ']]:
' → logprob: -11.516926765441895
    9. '[' → logprob: -12.016926765441895
    10. ']==' → logprob: -12.016926765441895

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008532661013305187
    2. 'break' → logprob: -4.883532524108887
    3. ' break' → logprob: -7.008532524108887
    4. '```' → logprob: -11.508532524108887
    5. '       ' → logprob: -12.133532524108887
    6. '
' → logprob: -13.258532524108887
    7. '	break' → logprob: -13.633532524108887
    8. '_break' → logprob: -14.008532524108887
    9. ' ' → logprob: -14.633532524108887
    10. '<|end|>' → logprob: -14.883532524108887

Token 259: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0007211300544440746
    2. ' break' → logprob: -7.250720977783203
    3. '           ' → logprob: -11.500720977783203
    4. '```' → logprob: -14.375720977783203
    5. '       ' → logprob: -14.625720977783203
    6. '	break' → logprob: -17.125720977783203
    7. '_break' → logprob: -18.000720977783203
    8. 'Break' → logprob: -18.375720977783203
    9. '``' → logprob: -18.375720977783203
    10. '               ' → logprob: -18.625720977783203

Token 260: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002241727663204074
    2. 's' → logprob: -6.252241611480713
    3. '```' → logprob: -9.002242088317871
    4. ' s' → logprob: -9.627242088317871
    5. '
' → logprob: -10.127242088317871
    6. '<|end|>' → logprob: -10.502242088317871
    7. '           ' → logprob: -10.752242088317871
    8. '   ' → logprob: -11.127242088317871
    9. '``' → logprob: -11.627242088317871
    10. '\' → logprob: -13.502242088317871

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02365758828818798
    2. 's' → logprob: -3.7736575603485107
    3. ' s' → logprob: -7.89865779876709
    4. '   ' → logprob: -10.64865779876709
    5. '```' → logprob: -11.89865779876709
    6. '           ' → logprob: -12.02365779876709
    7. 'r' → logprob: -13.27365779876709
    8. ' ' → logprob: -14.14865779876709
    9. '<|end|>' → logprob: -15.39865779876709
    10. '``' → logprob: -15.52365779876709

Token 262: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.056357868015766144
    2. ' s' → logprob: -3.4313578605651855
    3. '       ' → logprob: -3.8063578605651855
    4. '```' → logprob: -8.681358337402344
    5. '           ' → logprob: -10.306358337402344
    6. '   ' → logprob: -11.806358337402344
    7. '``' → logprob: -11.806358337402344
    8. '`s' → logprob: -12.556358337402344
    9. '        ' → logprob: -13.431358337402344
    10. '               ' → logprob: -13.931358337402344

Token 263: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20142357051372528
    2. '+=' → logprob: -1.7014235258102417
    3. '+' → logprob: -12.076423645019531
    4. ']+=' → logprob: -13.326423645019531
    5. '   ' → logprob: -13.826423645019531
    6. '```' → logprob: -14.451423645019531
    7. ' +' → logprob: -14.701423645019531
    8. '+='' → logprob: -15.076423645019531
    9. '+=(' → logprob: -15.701423645019531
    10. '+="' → logprob: -16.07642364501953

Token 264: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3132660686969757
    2. ' grid' → logprob: -1.3132660388946533
    3. '	grid' → logprob: -13.188265800476074
    4. '(grid' → logprob: -13.563265800476074
    5. '.grid' → logprob: -14.938265800476074
    6. '_grid' → logprob: -15.688265800476074
    7. '```' → logprob: -15.688265800476074
    8. '/grid' → logprob: -16.18826675415039
    9. 'Grid' → logprob: -16.43826675415039
    10. ':grid' → logprob: -16.56326675415039

Token 265: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9361264946837764e-07
    2. 'r' → logprob: -16.5
    3. '[' → logprob: -17.125
    4. '[start' → logprob: -17.125
    5. '```' → logprob: -19.75
    6. '[row' → logprob: -19.875
    7. '   ' → logprob: -20.625
    8. '(r' → logprob: -20.875
    9. '[root' → logprob: -21.375
    10. ' [' → logprob: -21.5

Token 266: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003195654833689332
    2. '[start' → logprob: -5.753195762634277
    3. ']' → logprob: -11.503195762634277
    4. ' ][' → logprob: -12.253195762634277
    5. '   ' → logprob: -13.753195762634277
    6. ')[' → logprob: -14.378195762634277
    7. 'start' → logprob: -15.503195762634277
    8. ',start' → logprob: -15.628195762634277
    9. '[' → logprob: -15.753195762634277
    10. ']][' → logprob: -16.12819480895996

Token 267: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.729906196298543e-06
    2. '[start' → logprob: -11.750009536743164
    3. ' start' → logprob: -13.250009536743164
    4. '```' → logprob: -19.500009536743164
    5. '
' → logprob: -19.750009536743164
    6. '(start' → logprob: -20.375009536743164
    7. '=start' → logprob: -20.875009536743164
    8. 'c' → logprob: -21.500009536743164
    9. '   ' → logprob: -21.875009536743164
    10. '	start' → logprob: -21.875009536743164

Token 268: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0002683688362594694
    2. '[start' → logprob: -8.25026798248291
    3. 'start' → logprob: -12.62526798248291
    4. '_r' → logprob: -13.00026798248291
    5. '```' → logprob: -14.87526798248291
    6. 'c' → logprob: -15.12526798248291
    7. '][' → logprob: -15.62526798248291
    8. '(start' → logprob: -15.75026798248291
    9. '_col' → logprob: -15.75026798248291
    10. '_[' → logprob: -16.250268936157227

Token 269: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.03830058500170708
    2. ']' → logprob: -3.2883005142211914
    3. '[r' → logprob: -9.038300514221191
    4. ')
' → logprob: -9.538300514221191
    5. '       ' → logprob: -10.663300514221191
    6. ')' → logprob: -11.413300514221191
    7. ']
' → logprob: -11.413300514221191
    8. '   ' → logprob: -11.538300514221191
    9. '[c' → logprob: -12.163300514221191
    10. '[start' → logprob: -12.788300514221191

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.77627644513268e-06
    2. 'path' → logprob: -12.125008583068848
    3. '   ' → logprob: -13.250008583068848
    4. '```' → logprob: -14.000008583068848
    5. '<|end|>' → logprob: -15.500008583068848
    6. ' path' → logprob: -16.250009536743164
    7. '
' → logprob: -16.500009536743164
    8. '           ' → logprob: -16.500009536743164
    9. '``' → logprob: -17.500009536743164
    10. ' ' → logprob: -17.625009536743164

Token 271: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.20226140320301056
    2. '       ' → logprob: -1.7022614479064941
    3. ' path' → logprob: -7.077261447906494
    4. '   ' → logprob: -13.702260971069336
    5. '```' → logprob: -14.202260971069336
    6. '           ' → logprob: -14.452260971069336
    7. '[path' → logprob: -14.452260971069336
    8. '	path' → logprob: -15.077260971069336
    9. ',path' → logprob: -15.952260971069336
    10. '(path' → logprob: -16.202260971069336

Token 272: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.12500286102295
    3. 'append' → logprob: -14.87500286102295
    4. '.app' → logprob: -15.25000286102295
    5. '.extend' → logprob: -15.87500286102295
    6. 'path' → logprob: -16.375003814697266
    7. 'app' → logprob: -16.500003814697266
    8. ' .' → logprob: -16.625003814697266
    9. '=' → logprob: -18.875003814697266
    10. '   ' → logprob: -19.125003814697266

Token 273: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003812217037193477
    2. '(r' → logprob: -8.000381469726562
    3. '(' → logprob: -10.000381469726562
    4. '(
' → logprob: -15.625381469726562
    5. ' (' → logprob: -16.125381469726562
    6. ' ((' → logprob: -16.250381469726562
    7. '   ' → logprob: -17.875381469726562
    8. '```' → logprob: -18.250381469726562
    9. '[(' → logprob: -19.000381469726562
    10. '(('' → logprob: -19.750381469726562

Token 274: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.259079363080673e-05
    2. '(r' → logprob: -11.625012397766113
    3. ' r' → logprob: -12.750012397766113
    4. 'start' → logprob: -14.625012397766113
    5. ' (' → logprob: -15.750012397766113
    6. ')' → logprob: -17.12501335144043
    7. '[r' → logprob: -17.87501335144043
    8. '   ' → logprob: -18.12501335144043
    9. '(start' → logprob: -18.37501335144043
    10. '```' → logprob: -19.12501335144043

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.810037742368877e-05
    2. ',start' → logprob: -11.125038146972656
    3. ' ,' → logprob: -11.375038146972656
    4. '[start' → logprob: -11.750038146972656
    5. '),' → logprob: -13.125038146972656
    6. 'start' → logprob: -13.875038146972656
    7. '[' → logprob: -14.625038146972656
    8. ')' → logprob: -15.625038146972656
    9. ',
' → logprob: -17.000038146972656
    10. '`,' → logprob: -17.125038146972656

Token 276: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00015908108616713434
    2. ' start' → logprob: -8.75015926361084
    3. '[start' → logprob: -14.75015926361084
    4. 'c' → logprob: -16.625158309936523
    5. ')' → logprob: -17.000158309936523
    6. ' ' → logprob: -17.750158309936523
    7. '   ' → logprob: -17.750158309936523
    8. '```' → logprob: -18.250158309936523
    9. '	start' → logprob: -18.375158309936523
    10. '
' → logprob: -19.000158309936523

Token 277: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.981667537620524e-06
    2. '_r' → logprob: -13.250001907348633
    3. 'c' → logprob: -17.250001907348633
    4. '_' → logprob: -17.750001907348633
    5. 'r' → logprob: -17.875001907348633
    6. 'start' → logprob: -18.500001907348633
    7. ')' → logprob: -19.250001907348633
    8. '_col' → logprob: -19.500001907348633
    9. '```' → logprob: -19.625001907348633
    10. '   ' → logprob: -20.125001907348633

Token 278: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08910751342773438
    2. ')
' → logprob: -3.0891075134277344
    3. '))' → logprob: -3.3391075134277344
    4. '))
' → logprob: -5.464107513427734
    5. ')
' → logprob: -13.464107513427734
    6. ')')
' → logprob: -13.964107513427734
    7. ')

' → logprob: -14.589107513427734
    8. ')`
' → logprob: -14.839107513427734
    9. ')`' → logprob: -15.089107513427734
    10. ')\' → logprob: -15.214107513427734

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002366753324167803
    2. 'if' → logprob: -9.250236511230469
    3. '```' → logprob: -9.500236511230469
    4. ' if' → logprob: -10.500236511230469
    5. '   ' → logprob: -10.750236511230469
    6. '<|end|>' → logprob: -11.125236511230469
    7. '
' → logprob: -14.875236511230469
    8. '``' → logprob: -14.875236511230469
    9. '​' → logprob: -15.000236511230469
    10. '           ' → logprob: -15.500236511230469

Token 280: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21570603549480438
    2. 'if' (adapté à ' if') → logprob: -2.2157061100006104
    3. '       ' → logprob: -2.4657061100006104
    4. '   ' → logprob: -13.840705871582031
    5. '
' → logprob: -14.590705871582031
    6. ' ' → logprob: -14.590705871582031
    7. '```' → logprob: -15.215705871582031
    8. '	if' → logprob: -15.715705871582031
    9. 'If' → logprob: -16.46570587158203
    10. '           ' → logprob: -16.84070587158203

Token 281: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03804194927215576
    2. 's' → logprob: -3.2880420684814453
    3. '(s' → logprob: -15.163042068481445
    4. ' ' → logprob: -16.538042068481445
    5. ' ' → logprob: -16.913042068481445
    6. '_s' → logprob: -17.288042068481445
    7. '#' → logprob: -17.913042068481445
    8. '`s' → logprob: -18.038042068481445
    9. '	s' → logprob: -18.163042068481445
    10. '```' → logprob: -18.288042068481445

Token 282: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03804263845086098
    2. '==' → logprob: -3.2880425453186035
    3. '```' → logprob: -13.913043022155762
    4. ')==' → logprob: -16.538042068481445
    5. '==
' → logprob: -17.038042068481445
    6. ' ' → logprob: -17.413042068481445
    7. ']==' → logprob: -17.538042068481445
    8. ' ==
' → logprob: -17.663042068481445
    9. ')' → logprob: -17.788042068481445
    10. '=' → logprob: -17.913042068481445

Token 283: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.16022534668445587
    2. ' target' → logprob: -1.9102253913879395
    3. '(target' → logprob: -14.285224914550781
    4. '[target' → logprob: -15.285224914550781
    5. '	target' → logprob: -15.660224914550781
    6. ',target' → logprob: -17.16022491455078
    7. 't' → logprob: -17.28522491455078
    8. 'taget' → logprob: -17.41022491455078
    9. ' ' → logprob: -18.03522491455078
    10. '
' → logprob: -18.16022491455078

Token 284: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.896309739408025e-07
    2. 'sum' → logprob: -15.250000953674316
    3. '_target' → logprob: -15.500000953674316
    4. '_s' → logprob: -16.375
    5. 'target' → logprob: -16.625
    6. '_' → logprob: -17.375
    7. '_SUM' → logprob: -19.25
    8. '```' → logprob: -19.5
    9. 'Sum' → logprob: -19.875
    10. ')' → logprob: -20.5

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.774748682975769
    2. ':
' → logprob: -0.899748682975769
    3. '           ' → logprob: -2.0247488021850586
    4. '       ' → logprob: -8.024748802185059
    5. '):
' → logprob: -10.024748802185059
    6. '          ' → logprob: -10.524748802185059
    7. '```' → logprob: -10.774748802185059
    8. '):' → logprob: -11.024748802185059
    9. '               ' → logprob: -11.649748802185059
    10. '   ' → logprob: -11.649748802185059

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003065030323341489
    2. 'break' → logprob: -8.500306129455566
    3. ' break' → logprob: -9.250306129455566
    4. '```' → logprob: -13.000306129455566
    5. '
' → logprob: -13.625306129455566
    6. ' results' → logprob: -14.000306129455566
    7. 'results' → logprob: -14.000306129455566
    8. '          ' → logprob: -14.875306129455566
    9. '               ' → logprob: -15.125306129455566
    10. '		' → logprob: -15.375306129455566

Token 287: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.5840870141983032
    2. ' results' → logprob: -0.9590870141983032
    3. '           ' → logprob: -2.8340868949890137
    4. 'return' → logprob: -8.709087371826172
    5. ' return' → logprob: -9.334087371826172
    6. '       ' → logprob: -9.709087371826172
    7. '	results' → logprob: -10.584087371826172
    8. '               ' → logprob: -11.209087371826172
    9. '   ' → logprob: -11.959087371826172
    10. '(results' → logprob: -12.959087371826172

Token 288: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.375006675720215
    3. '.extend' → logprob: -13.625006675720215
    4. 'append' → logprob: -14.500006675720215
    5. '.app' → logprob: -14.875006675720215
    6. '.setdefault' → logprob: -15.750006675720215
    7. ' .' → logprob: -17.00000762939453
    8. '.Append' → logprob: -17.00000762939453
    9. '<|end|>' → logprob: -17.37500762939453
    10. '_append' → logprob: -18.00000762939453

Token 289: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -8.911954500945285e-05
    2. 'path' → logprob: -9.375088691711426
    3. ' path' → logprob: -12.750088691711426
    4. ' (' → logprob: -14.500088691711426
    5. '[path' → logprob: -14.500088691711426
    6. ',path' → logprob: -16.500089645385742
    7. '(' → logprob: -16.625089645385742
    8. '(paths' → logprob: -17.250089645385742
    9. '   ' → logprob: -18.000089645385742
    10. '(
' → logprob: -18.125089645385742

Token 290: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.3868733048439026
    2. '[:' → logprob: -1.1368732452392578
    3. '[:-' → logprob: -13.886873245239258
    4. '[:,' → logprob: -14.386873245239258
    5. '[::-' → logprob: -15.136873245239258
    6. '[' → logprob: -15.886873245239258
    7. '.copy' → logprob: -16.136873245239258
    8. ')' → logprob: -16.511873245239258
    9. '][:' → logprob: -16.886873245239258
    10. ' [:' → logprob: -17.011873245239258

Token 291: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06384582072496414
    2. ')' → logprob: -2.8138458728790283
    3. '           ' → logprob: -6.313845634460449
    4. ')
' → logprob: -9.81384563446045
    5. '       ' → logprob: -12.18884563446045
    6. ')

' → logprob: -13.68884563446045
    7. '())
' → logprob: -13.93884563446045
    8. '               ' → logprob: -14.06384563446045
    9. ']
' → logprob: -14.81384563446045
    10. 'break' → logprob: -14.81384563446045

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2948405128554441e-05
    2. 'break' → logprob: -11.75001335144043
    3. '```' → logprob: -12.62501335144043
    4. ' break' → logprob: -14.37501335144043
    5. '       ' → logprob: -15.12501335144043
    6. '               ' → logprob: -15.25001335144043
    7. '
' → logprob: -15.50001335144043
    8. '<|end|>' → logprob: -15.87501335144043
    9. '          ' → logprob: -16.50001335144043
    10. 'continue' → logprob: -16.87501335144043

Token 293: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.051619719713926315
    2. ' break' → logprob: -3.0516197681427
    3. '           ' → logprob: -5.801619529724121
    4. '
' → logprob: -12.926619529724121
    5. '               ' → logprob: -13.926619529724121
    6. '	break' → logprob: -14.301619529724121
    7. '```' → logprob: -14.426619529724121
    8. '       ' → logprob: -14.676619529724121
    9. '_break' → logprob: -16.926620483398438
    10. 'return' → logprob: -16.926620483398438

Token 294: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004142264660913497
    2. '   ' → logprob: -8.25041389465332
    3. '
' → logprob: -8.87541389465332
    4. '<|end|>' → logprob: -12.37541389465332
    5. '```' → logprob: -12.75041389465332
    6. '           ' → logprob: -13.25041389465332
    7. '     ' → logprob: -13.75041389465332
    8. '        
' → logprob: -14.12541389465332
    9. '      ' → logprob: -14.25041389465332
    10. ' if' → logprob: -14.87541389465332

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013134514447301626
    2. '   ' → logprob: -6.75131368637085
    3. '```' → logprob: -10.001313209533691
    4. '#' → logprob: -10.501313209533691
    5. '
' → logprob: -10.626313209533691
    6. '     ' → logprob: -11.251313209533691
    7. '      ' → logprob: -11.376313209533691
    8. '           ' → logprob: -11.876313209533691
    9. '<|end|>' → logprob: -12.501313209533691
    10. '    ' → logprob: -13.376313209533691

Token 296: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07126898318529129
    2. 'if' (adapté à ' if') → logprob: -3.0712690353393555
    3. ' if' → logprob: -4.0712690353393555
    4. '   ' → logprob: -5.3212690353393555
    5. '
' → logprob: -8.571269035339355
    6. '           ' → logprob: -9.196269035339355
    7. ' ' → logprob: -9.446269035339355
    8. '     ' → logprob: -9.571269035339355
    9. '      ' → logprob: -11.321269035339355
    10. '        
' → logprob: -11.571269035339355

Token 297: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.004078639671206474
    2. 's' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.379077911376953
    4. ' ' → logprob: -16.504077911376953
    5. '   ' → logprob: -18.004077911376953
    6. '```' → logprob: -18.754077911376953
    7. '(s' → logprob: -18.879077911376953
    8. '	s' → logprob: -18.879077911376953
    9. '_s' → logprob: -19.004077911376953
    10. '`s' → logprob: -19.254077911376953

Token 298: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.004082197323441505
    2. '>' → logprob: -5.504082202911377
    3. ' ' → logprob: -12.629081726074219
    4. '>s' → logprob: -16.00408172607422
    5. ' ' → logprob: -16.37908172607422
    6. ' >
' → logprob: -16.62908172607422
    7. '[' → logprob: -17.00408172607422
    8. ' s' → logprob: -17.25408172607422
    9. ' >
' → logprob: -17.87908172607422
    10. 's' → logprob: -18.12908172607422

Token 299: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.008615515194833279
    2. 'target' → logprob: -4.758615493774414
    3. '(target' → logprob: -14.258615493774414
    4. '[target' → logprob: -16.008615493774414
    5. '	target' → logprob: -16.008615493774414
    6. ' ' → logprob: -18.008615493774414
    7. '_target' → logprob: -18.258615493774414
    8. 't' → logprob: -18.383615493774414
    9. ' targ' → logprob: -18.758615493774414
    10. ',target' → logprob: -18.883615493774414

Token 300: '_sum' (ID: 29859)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.35150766372680664
    2. '_sum' → logprob: -1.8515076637268066
    3. '_target' → logprob: -2.2265076637268066
    4. ' target' → logprob: -3.4765076637268066
    5. '```' → logprob: -8.351507186889648
    6. '(target' → logprob: -8.976507186889648
    7. '[target' → logprob: -9.476507186889648
    8. '_' → logprob: -9.976507186889648
    9. ' _' → logprob: -10.226507186889648
    10. ' ' → logprob: -12.476507186889648

Token 301: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.650798499584198
    2. ':
' → logprob: -0.775798499584198
    3. ':' → logprob: -4.025798320770264
    4. '       ' → logprob: -9.400798797607422
    5. '               ' → logprob: -10.650798797607422
    6. '):
' → logprob: -10.650798797607422
    7. '          ' → logprob: -11.025798797607422
    8. '   ' → logprob: -12.025798797607422
    9. '         ' → logprob: -12.275798797607422
    10. 'break' → logprob: -12.275798797607422

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003979854751378298
    2. 'break' → logprob: -6.003979682922363
    3. ' break' → logprob: -6.503979682922363
    4. '               ' → logprob: -12.753979682922363
    5. '```' → logprob: -14.003979682922363
    6. '          ' → logprob: -14.003979682922363
    7. '       ' → logprob: -14.253979682922363
    8. '   ' → logprob: -15.753979682922363
    9. '		' → logprob: -16.50398063659668
    10. '         ' → logprob: -16.62898063659668

Token 303: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0035191758070141077
    2. '           ' → logprob: -5.753519058227539
    3. ' break' → logprob: -8.003519058227539
    4. '       ' → logprob: -12.003519058227539
    5. '```' → logprob: -15.003519058227539
    6. '               ' → logprob: -15.503519058227539
    7. '   ' → logprob: -15.628519058227539
    8. 'return' → logprob: -15.878519058227539
    9. '	break' → logprob: -16.37851905822754
    10. '
' → logprob: -17.25351905822754

Token 304: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0214622151106596
    2. '#' → logprob: -3.8964622020721436
    3. '```' → logprob: -7.021462440490723
    4. '
' → logprob: -11.521462440490723
    5. ' #' → logprob: -11.771462440490723
    6. '<|end|>' → logprob: -13.271462440490723
    7. ')' → logprob: -13.646462440490723
    8. '``' → logprob: -13.646462440490723
    9. '...' → logprob: -13.896462440490723
    10. '[' → logprob: -14.021462440490723

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03918923810124397
    2. '#' → logprob: -3.289189338684082
    3. '```' → logprob: -6.789189338684082
    4. ' #' → logprob: -11.039189338684082
    5. '``' → logprob: -13.664189338684082
    6. '...' → logprob: -14.289189338684082
    7. '<|end|>' → logprob: -14.289189338684082
    8. '       ' → logprob: -14.789189338684082
    9. '[' → logprob: -14.914189338684082
    10. '
' → logprob: -15.039189338684082

Token 306: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.20693428814411163
    2. '   ' → logprob: -1.7069343328475952
    3. '```' → logprob: -5.206934452056885
    4. '``' → logprob: -11.331933975219727
    5. ' #' → logprob: -11.581933975219727
    6. 's' → logprob: -12.206933975219727
    7. '
' → logprob: -14.831933975219727
    8. ' ' → logprob: -14.956933975219727
    9. '[' → logprob: -16.706933975219727
    10. '`' → logprob: -17.831933975219727

Token 307: ' Try' (ID: 14720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25059470534324646
    2. 's' → logprob: -1.7505947351455688
    3. 'Try' → logprob: -3.1255946159362793
    4. '   ' → logprob: -6.125594615936279
    5. 'try' → logprob: -6.500594615936279
    6. ' s' → logprob: -8.875595092773438
    7. ' #' → logprob: -9.125595092773438
    8. ' Try' → logprob: -9.750595092773438
    9. ' ' → logprob: -10.250595092773438
    10. 'path' → logprob: -10.750595092773438

Token 308: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.29485008120536804
    2. ' horizontal' → logprob: -1.5448501110076904
    3. 'vertical' → logprob: -3.2948501110076904
    4. 'horizontal' → logprob: -5.544849872589111
    5. '(vertical' → logprob: -7.669849872589111
    6. ' range' → logprob: -7.794849872589111
    7. '#' → logprob: -10.16985034942627
    8. '(horizontal' → logprob: -10.54485034942627
    9. ' horiz' → logprob: -10.91985034942627
    10. ' (' → logprob: -11.29485034942627

Token 309: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3233032524585724
    2. 'line' → logprob: -1.32330322265625
    3. ' (' → logprob: -4.82330322265625
    4. '_line' → logprob: -6.94830322265625
    5. '(line' → logprob: -7.44830322265625
    6. '(' → logprob: -8.07330322265625
    7. ' ' → logprob: -10.32330322265625
    8. '(s' → logprob: -10.82330322265625
    9. 's' → logprob: -11.07330322265625
    10. '   ' → logprob: -11.82330322265625

Token 310: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3142053484916687
    2. '(s' → logprob: -1.3142054080963135
    3. '(' → logprob: -7.564205169677734
    4. '   ' → logprob: -7.814205169677734
    5. ' ' → logprob: -12.189205169677734
    6. 's' → logprob: -12.314205169677734
    7. '```' → logprob: -12.564205169677734
    8. ' s' → logprob: -12.814205169677734
    9. ' =' → logprob: -13.939205169677734
    10. '(
' → logprob: -14.314205169677734

Token 311: 'bottom' (ID: 29677)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0910322368144989
    2. 'start' → logprob: -2.5910322666168213
    3. ' range' → logprob: -4.466032028198242
    4. ' start' → logprob: -7.966032028198242
    5. 'for' → logprob: -8.591032028198242
    6. 'n' → logprob: -10.716032028198242
    7. '1' → logprob: -11.716032028198242
    8. '   ' → logprob: -12.341032028198242
    9. 'down' → logprob: -12.841032028198242
    10. ' for' → logprob: -13.466032028198242

Token 312: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5278315544128418
    2. 'to' → logprob: -0.9028315544128418
    3. '_to' → logprob: -6.027831554412842
    4. '   ' → logprob: -7.152831554412842
    5. '-' → logprob: -7.277831554412842
    6. '-to' → logprob: -7.777831554412842
    7. ' -' → logprob: -8.52783203125
    8. ',' → logprob: -9.40283203125
    9. ' ' → logprob: -10.77783203125
    10. 'r' → logprob: -10.77783203125

Token 313: ' top' (ID: 2344)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0007756813429296017
    2. ' start' → logprob: -7.8757758140563965
    3. '-' → logprob: -8.500775337219238
    4. 'n' → logprob: -9.625775337219238
    5. '1' → logprob: -10.250775337219238
    6. 'range' → logprob: -10.625775337219238
    7. '   ' → logprob: -10.750775337219238
    8. '-start' → logprob: -11.750775337219238
    9. 'up' → logprob: -11.875775337219238
    10. 'down' → logprob: -12.000775337219238

Token 314: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7467519044876099
    2. ')
' → logprob: -0.7467519044876099
    3. ')' → logprob: -2.9967517852783203
    4. '):
' → logprob: -6.37175178527832
    5. 's' → logprob: -7.99675178527832
    6. ' s' → logprob: -9.24675178527832
    7. '```' → logprob: -9.99675178527832
    8. '):' → logprob: -11.12175178527832
    9. ')
' → logprob: -11.12175178527832
    10. '``' → logprob: -11.49675178527832

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20335505902767181
    2. 's' → logprob: -1.703355073928833
    3. '```' → logprob: -6.703354835510254
    4. ' s' → logprob: -7.328354835510254
    5. '
' → logprob: -10.328354835510254
    6. '``' → logprob: -11.203354835510254
    7. ' ' → logprob: -11.828354835510254
    8. '  ' → logprob: -13.328354835510254
    9. '       ' → logprob: -15.203354835510254
    10. '	s' → logprob: -15.828354835510254

Token 316: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.33032113313674927
    2. ' s' → logprob: -1.3303210735321045
    3. '   ' → logprob: -4.080321311950684
    4. '```' → logprob: -11.455321311950684
    5. ' ' → logprob: -13.830321311950684
    6. '       ' → logprob: -15.205321311950684
    7. '  ' → logprob: -15.580321311950684
    8. '_s' → logprob: -15.705321311950684
    9. '``' → logprob: -15.705321311950684
    10. '
' → logprob: -15.830321311950684

Token 317: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. 's' → logprob: -14.975207328796387
    4. '   ' → logprob: -15.725207328796387
    5. ' ' → logprob: -16.35020637512207
    6. ' s' → logprob: -18.97520637512207
    7. '```' → logprob: -18.97520637512207
    8. '=
' → logprob: -19.47520637512207
    9. ' ' → logprob: -19.47520637512207
    10. ' =
' → logprob: -19.47520637512207

Token 318: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141372084617615
    2. '0' → logprob: -1.7014137506484985
    3. '   ' → logprob: -14.826414108276367
    4. ' ' → logprob: -18.076414108276367
    5. '  ' → logprob: -18.451414108276367
    6. 's' → logprob: -18.701414108276367
    7. '```' → logprob: -18.701414108276367
    8. '=' → logprob: -19.951414108276367
    9. '    ' → logprob: -21.201414108276367
    10. '1' → logprob: -21.638914108276367

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.875059127807617
    4. '000' → logprob: -19.375059127807617
    5. 's' → logprob: -19.500059127807617
    6. '00' → logprob: -20.375059127807617
    7. '  ' → logprob: -21.375059127807617
    8. '=' → logprob: -21.500059127807617
    9. '```' → logprob: -21.500059127807617
    10. 'import' → logprob: -21.812559127807617

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0685710459947586
    2. '
' → logprob: -2.818571090698242
    3. 'path' → logprob: -5.818571090698242
    4. ' path' → logprob: -6.318571090698242
    5. '```' → logprob: -6.443571090698242
    6. '``' → logprob: -9.318571090698242
    7. 'for' → logprob: -9.818571090698242
    8. ' for' → logprob: -10.068571090698242
    9. '    
' → logprob: -12.693571090698242
    10. ' ' → logprob: -12.693571090698242

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11356385052204132
    2. 'path' → logprob: -2.2385637760162354
    3. ' path' → logprob: -7.7385640144348145
    4. '
' → logprob: -8.613563537597656
    5. '```' → logprob: -9.238563537597656
    6. '0' → logprob: -11.738563537597656
    7. ' ' → logprob: -12.113563537597656
    8. '``' → logprob: -12.988563537597656
    9. '"path' → logprob: -13.738563537597656
    10. '  ' → logprob: -13.738563537597656

Token 322: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.0009120595059357584
    2. ' path' → logprob: -7.000912189483643
    3. '   ' → logprob: -14.375911712646484
    4. '```' → logprob: -18.625911712646484
    5. '0' → logprob: -19.500911712646484
    6. '
' → logprob: -20.125911712646484
    7. '_path' → logprob: -21.125911712646484
    8. 'grid' → logprob: -21.375911712646484
    9. '"path' → logprob: -21.500911712646484
    10. 'Path' → logprob: -21.500911712646484

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022706031799316
    2. '=' → logprob: -1.9102270603179932
    3. '=[]' → logprob: -13.035226821899414
    4. '   ' → logprob: -14.410226821899414
    5. 's' → logprob: -16.785226821899414
    6. ' ' → logprob: -16.910226821899414
    7. '  ' → logprob: -17.285226821899414
    8. '=[]
' → logprob: -17.410226821899414
    9. '[]' → logprob: -18.285226821899414
    10. 'for' → logprob: -18.285226821899414

Token 324: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.2014172375202179
    2. '[]' → logprob: -1.7014172077178955
    3. ' []
' → logprob: -13.326416969299316
    4. '[]

' → logprob: -13.326416969299316
    5. '=[]
' → logprob: -14.826416969299316
    6. ' []' → logprob: -15.701416969299316
    7. '[' → logprob: -16.451417922973633
    8. '[
' → logprob: -17.701417922973633
    9. '   ' → logprob: -18.201417922973633
    10. '[])
' → logprob: -18.326417922973633

Token 325: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.602024900028482e-05
    2. ' for' → logprob: -9.750085830688477
    3. '   ' → logprob: -10.500085830688477
    4. '```' → logprob: -15.625085830688477
    5. '	for' → logprob: -16.750085830688477
    6. '
' → logprob: -16.875085830688477
    7. '``' → logprob: -19.500085830688477
    8. '    
' → logprob: -20.125085830688477
    9. 'from' → logprob: -20.250085830688477
    10. ' ' → logprob: -21.500085830688477

Token 326: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.5
    3. '   ' → logprob: -19.625
    4. '```' → logprob: -20.5
    5. 'from' → logprob: -21.25
    6. '	for' → logprob: -22.875
    7. '
' → logprob: -24.625
    8. 'range' → logprob: -24.75
    9. '``' → logprob: -25.625
    10. '    
' → logprob: -26.5

Token 327: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018155092373490334
    2. ' r' → logprob: -4.018155097961426
    3. 'range' → logprob: -12.893155097961426
    4. '(r' → logprob: -13.393155097961426
    5. ' range' → logprob: -14.393155097961426
    6. ' in' → logprob: -14.768155097961426
    7. '	r' → logprob: -16.64315414428711
    8. '_r' → logprob: -16.89315414428711
    9. 'for' → logprob: -18.01815414428711
    10. '   ' → logprob: -18.39315414428711

Token 328: ' in' (ID: 306)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.3268440365791321
    2. 'range' → logprob: -2.3268439769744873
    3. ' in' → logprob: -2.5768439769744873
    4. ' range' → logprob: -2.8268439769744873
    5. '(range' → logprob: -3.2018439769744873
    6. 'in' → logprob: -5.326844215393066
    7. ' (' → logprob: -8.451844215393066
    8. 'start' → logprob: -9.701844215393066
    9. '=start' → logprob: -9.701844215393066
    10. ' start' → logprob: -10.201844215393066

Token 329: ' range' (ID: 3352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20151683688163757
    2. 'range' → logprob: -1.70151686668396
    3. '(start' → logprob: -9.826517105102539
    4. ' range' → logprob: -10.326517105102539
    5. ' start' → logprob: -11.201517105102539
    6. '[start' → logprob: -12.826517105102539
    7. '(range' → logprob: -15.451517105102539
    8. '=start' → logprob: -16.32651710510254
    9. ',start' → logprob: -16.57651710510254
    10. '   ' → logprob: -17.32651710510254

Token 330: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -1.0206720617134124e-05
    2. 'start' → logprob: -11.50001049041748
    3. '[start' → logprob: -16.750009536743164
    4. ',start' → logprob: -17.500009536743164
    5. ' (' → logprob: -17.625009536743164
    6. '(' → logprob: -18.000009536743164
    7. ' start' → logprob: -18.625009536743164
    8. '=start' → logprob: -19.000009536743164
    9. '	start' → logprob: -20.000009536743164
    10. ':start' → logprob: -20.375009536743164

Token 331: '_r' (ID: 3442)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.010777086950838566
    2. '_c' → logprob: -5.260776996612549
    3. '(start' → logprob: -5.760776996612549
    4. ' start' → logprob: -6.510776996612549
    5. '_r' → logprob: -7.885776996612549
    6. '[start' → logprob: -8.510777473449707
    7. '=start' → logprob: -8.885777473449707
    8. ',start' → logprob: -9.385777473449707
    9. 'r' → logprob: -10.135777473449707
    10. 'n' → logprob: -10.760777473449707

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.453737710718997e-05
    2. ' ,' → logprob: -10.375044822692871
    3. ',start' → logprob: -11.750044822692871
    4. '-' → logprob: -12.625044822692871
    5. ',-' → logprob: -13.750044822692871
    6. ' -' → logprob: -14.250044822692871
    7. '   ' → logprob: -16.125043869018555
    8. ',
' → logprob: -16.125043869018555
    9. 'start' → logprob: -17.125043869018555
    10. ',r' → logprob: -17.875043869018555

Token 333: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.6240566083070007e-06
    2. ' -' → logprob: -13.375001907348633
    3. '-c' → logprob: -18.625001907348633
    4. '-r' → logprob: -18.875001907348633
    5. ' ' → logprob: -20.125001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '-n' → logprob: -21.125001907348633
    8. '-start' → logprob: -21.125001907348633
    9. '−' → logprob: -21.875001907348633
    10. '-
' → logprob: -22.375001907348633

Token 334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -16.875
    4. '
' → logprob: -19.125
    5. '```' → logprob: -19.375
    6. '-' → logprob: -19.5
    7. ' -' → logprob: -20.25
    8. '

' → logprob: -20.375
    9. '１' → logprob: -20.625
    10. ',' → logprob: -20.625

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004176833899691701
    2. '-' → logprob: -8.500417709350586
    3. ',-' → logprob: -9.125417709350586
    4. '   ' → logprob: -9.875417709350586
    5. ' ,' → logprob: -10.500417709350586
    6. ' -' → logprob: -11.250417709350586
    7. ',
' → logprob: -11.750417709350586
    8. '1' → logprob: -13.250417709350586
    9. '```' → logprob: -13.375417709350586
    10. '0' → logprob: -14.250417709350586

Token 336: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7610454708337784e-05
    2. ' -' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.00002670288086
    4. ' ' → logprob: -18.75002670288086
    5. '       ' → logprob: -20.12502670288086
    6. '-r' → logprob: -20.50002670288086
    7. '```' → logprob: -20.62502670288086
    8. '           ' → logprob: -21.37502670288086
    9. '  ' → logprob: -21.50002670288086
    10. '1' → logprob: -22.37502670288086

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.5
    5. '```' → logprob: -17.25
    6. '
' → logprob: -18.5
    7. ' -' → logprob: -19.25
    8. ')' → logprob: -19.625
    9. ',' → logprob: -19.625
    10. '<|end|>' → logprob: -19.875

Token 338: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055697813630104065
    2. '):' → logprob: -3.6806979179382324
    3. '-' → logprob: -4.180697917938232
    4. '   ' → logprob: -4.680697917938232
    5. '       ' → logprob: -5.555697917938232
    6. ' -' → logprob: -8.805697441101074
    7. ',' → logprob: -8.930697441101074
    8. ',-' → logprob: -9.805697441101074
    9. ':
' → logprob: -10.055697441101074
    10. '```' → logprob: -10.180697441101074

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8444881536415778e-05
    2. '<|end|>' → logprob: -10.750028610229492
    3. '```' → logprob: -12.875028610229492
    4. ' if' → logprob: -13.125028610229492
    5. '   ' → logprob: -13.625028610229492
    6. '<|end|>' → logprob: -15.375028610229492
    7. 'if' → logprob: -15.375028610229492
    8. ' ' → logprob: -16.625028610229492
    9. ')' → logprob: -16.750028610229492
    10. '{
' → logprob: -16.750028610229492

Token 340: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.669342577457428
    2. 'if' (adapté à ' if') → logprob: -0.919342577457428
    3. '       ' → logprob: -2.419342517852783
    4. '           ' → logprob: -9.294342994689941
    5. '   ' → logprob: -9.919342994689941
    6. '```' → logprob: -10.794342994689941
    7. '<|end|>' → logprob: -11.169342994689941
    8. '	if' → logprob: -11.669342994689941
    9. '
' → logprob: -12.919342994689941
    10. ' ' → logprob: -13.544342994689941

Token 341: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.12692978978157043
    2. 'used' → logprob: -2.126929759979248
    3. '   ' → logprob: -13.751930236816406
    4. ' not' → logprob: -15.251930236816406
    5. '_used' → logprob: -16.126930236816406
    6. '.used' → logprob: -16.126930236816406
    7. ' ' → logprob: -16.376930236816406
    8. ' grid' → logprob: -17.251930236816406
    9. 'not' → logprob: -17.376930236816406
    10. 'Used' → logprob: -17.501930236816406

Token 342: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.320199877838604e-07
    2. 'r' → logprob: -15.125
    3. ' [' → logprob: -16.5
    4. '   ' → logprob: -17.875
    5. '[' → logprob: -18.25
    6. '[
' → logprob: -18.75
    7. '```' → logprob: -19.375
    8. '[t' → logprob: -19.625
    9. '[row' → logprob: -19.875
    10. '
' → logprob: -19.875

Token 343: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008538239635527134
    2. '[start' → logprob: -7.375854015350342
    3. '[r' → logprob: -9.500853538513184
    4. '[' → logprob: -9.500853538513184
    5. ']' → logprob: -10.125853538513184
    6. ' ][' → logprob: -10.875853538513184
    7. ')[' → logprob: -12.125853538513184
    8. '}[' → logprob: -13.000853538513184
    9. '[end' → logprob: -13.125853538513184
    10. '[row' → logprob: -13.375853538513184

Token 344: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0005599428550340235
    2. '[start' → logprob: -7.5005598068237305
    3. ' start' → logprob: -11.87555980682373
    4. '[' → logprob: -17.500560760498047
    5. '(start' → logprob: -18.375560760498047
    6. ':start' → logprob: -19.125560760498047
    7. '
' → logprob: -19.250560760498047
    8. '	start' → logprob: -19.250560760498047
    9. ' ' → logprob: -19.375560760498047
    10. '0' → logprob: -19.500560760498047

Token 345: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.431207682704553e-05
    2. '[start' → logprob: -10.500054359436035
    3. '_r' → logprob: -10.625054359436035
    4. 'c' → logprob: -13.875054359436035
    5. 'start' → logprob: -14.250054359436035
    6. '][' → logprob: -15.625054359436035
    7. 'r' → logprob: -15.750054359436035
    8. '[' → logprob: -15.750054359436035
    9. '```' → logprob: -16.00005340576172
    10. '_' → logprob: -17.00005340576172

Token 346: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.08182495832443237
    2. ']:' → logprob: -3.081825017929077
    3. '):
' → logprob: -3.456825017929077
    4. '):' → logprob: -7.956824779510498
    5. ']' → logprob: -8.331825256347656
    6. ']):
' → logprob: -8.706825256347656
    7. '       ' → logprob: -8.956825256347656
    8. ':
' → logprob: -9.706825256347656
    9. ':' → logprob: -9.831825256347656
    10. ']:

' → logprob: -9.956825256347656

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001749351795297116
    2. 'break' → logprob: -8.875174522399902
    3. ' break' → logprob: -10.500174522399902
    4. '       ' → logprob: -12.750174522399902
    5. '          ' → logprob: -13.250174522399902
    6. '{
' → logprob: -13.875174522399902
    7. '```' → logprob: -14.125174522399902
    8. '               ' → logprob: -14.875174522399902
    9. '
' → logprob: -15.500174522399902
    10. '   ' → logprob: -16.00017547607422

Token 348: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01841014251112938
    2. '           ' → logprob: -4.0184102058410645
    3. 'True' → logprob: -8.643409729003906
    4. ' break' → logprob: -9.518409729003906
    5. '       ' → logprob: -12.393409729003906
    6. 'Break' → logprob: -12.893409729003906
    7. '```' → logprob: -13.518409729003906
    8. '
' → logprob: -14.143409729003906
    9. '               ' → logprob: -14.268409729003906
    10. 'False' → logprob: -15.268409729003906

Token 349: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001111520454287529
    2. 's' → logprob: -8.00111198425293
    3. '
' → logprob: -8.00111198425293
    4. '```' → logprob: -8.00111198425293
    5. ' s' → logprob: -10.00111198425293
    6. '<|end|>' → logprob: -10.50111198425293
    7. '``' → logprob: -11.37611198425293
    8. '           ' → logprob: -11.62611198425293
    9. '   ' → logprob: -12.75111198425293
    10. '        
' → logprob: -13.37611198425293

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012683282839134336
    2. 's' → logprob: -6.87626838684082
    3. ' s' → logprob: -8.50126838684082
    4. '```' → logprob: -11.00126838684082
    5. '           ' → logprob: -12.00126838684082
    6. '   ' → logprob: -12.00126838684082
    7. '``' → logprob: -12.87626838684082
    8. ' ' → logprob: -14.62626838684082
    9. '               ' → logprob: -16.75126838684082
    10. '<|end|>' → logprob: -16.87626838684082

Token 351: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -7.612634362885728e-05
    2. '       ' → logprob: -10.000076293945312
    3. ' s' → logprob: -10.500076293945312
    4. '           ' → logprob: -13.250076293945312
    5. '```' → logprob: -14.000076293945312
    6. '   ' → logprob: -15.000076293945312
    7. '`s' → logprob: -15.750076293945312
    8. '``' → logprob: -18.000076293945312
    9. '               ' → logprob: -18.125076293945312
    10. '	s' → logprob: -18.625076293945312

Token 352: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759721994400024
    2. '+=' → logprob: -0.8259721994400024
    3. ']+=' → logprob: -11.325972557067871
    4. '+' → logprob: -11.825972557067871
    5. '   ' → logprob: -12.200972557067871
    6. '```' → logprob: -12.700972557067871
    7. '    ' → logprob: -13.450972557067871
    8. '        ' → logprob: -13.950972557067871
    9. '       ' → logprob: -14.325972557067871
    10. ' ' → logprob: -14.575972557067871

Token 353: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.03805423527956009
    2. ' grid' → logprob: -3.2880542278289795
    3. '(grid' → logprob: -11.788054466247559
    4. '	grid' → logprob: -12.538054466247559
    5. '.grid' → logprob: -14.413054466247559
    6. ':grid' → logprob: -15.038054466247559
    7. '/grid' → logprob: -15.288054466247559
    8. '   ' → logprob: -15.663054466247559
    9. '```' → logprob: -16.163053512573242
    10. '
' → logprob: -16.663053512573242

Token 354: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.935296834039036e-06
    2. 'r' → logprob: -12.87500286102295
    3. '[' → logprob: -15.00000286102295
    4. '(r' → logprob: -18.500003814697266
    5. '[
' → logprob: -18.625003814697266
    6. ' [' → logprob: -18.875003814697266
    7. '   ' → logprob: -19.250003814697266
    8. '```' → logprob: -20.250003814697266
    9. '[t' → logprob: -20.875003814697266
    10. '[row' → logprob: -21.500003814697266

Token 355: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1271485835313797
    2. '[r' → logprob: -2.1271486282348633
    3. '[start' → logprob: -9.502148628234863
    4. '[' → logprob: -9.752148628234863
    5. ']' → logprob: -11.127148628234863
    6. ' ][' → logprob: -11.127148628234863
    7. '}[' → logprob: -11.127148628234863
    8. 'r' → logprob: -11.627148628234863
    9. '```' → logprob: -11.877148628234863
    10. '
' → logprob: -12.377148628234863

Token 356: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.009562588296830654
    2. 'r' → logprob: -5.1345624923706055
    3. 'c' → logprob: -6.2595624923706055
    4. '[start' → logprob: -6.3845624923706055
    5. '(start' → logprob: -11.134562492370605
    6. ' start' → logprob: -11.634562492370605
    7. '
' → logprob: -13.384562492370605
    8. '[r' → logprob: -14.009562492370605
    9. '```' → logprob: -14.384562492370605
    10. '[c' → logprob: -15.134562492370605

Token 357: '_c' (ID: 1303)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.43050822615623474
    2. '_c' → logprob: -1.0555082559585571
    3. 'start' → logprob: -7.180508136749268
    4. '][' → logprob: -8.055508613586426
    5. '[' → logprob: -8.180508613586426
    6. 'c' → logprob: -8.305508613586426
    7. '_r' → logprob: -10.055508613586426
    8. '(start' → logprob: -10.305508613586426
    9. '```' → logprob: -10.305508613586426
    10. '   ' → logprob: -11.305508613586426

Token 358: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1349058896303177
    2. ')
' → logprob: -2.5099058151245117
    3. ']' → logprob: -3.8849058151245117
    4. ')' → logprob: -4.759905815124512
    5. '       ' → logprob: -4.884905815124512
    6. '[r' → logprob: -4.884905815124512
    7. '[c' → logprob: -8.259905815124512
    8. '[
' → logprob: -9.009905815124512
    9. '```' → logprob: -9.134905815124512
    10. '   ' → logprob: -9.509905815124512

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001394161517964676
    2. 'path' → logprob: -9.125139236450195
    3. ' path' → logprob: -10.750139236450195
    4. '```' → logprob: -12.125139236450195
    5. '   ' → logprob: -12.875139236450195
    6. '``' → logprob: -15.250139236450195
    7. '           ' → logprob: -15.625139236450195
    8. '
' → logprob: -16.000139236450195
    9. ' ' → logprob: -16.375139236450195
    10. ',path' → logprob: -16.500139236450195

Token 360: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.5764008164405823
    2. '       ' → logprob: -0.8264008164405823
    3. ' path' → logprob: -7.7014007568359375
    4. '```' → logprob: -12.576400756835938
    5. '   ' → logprob: -13.076400756835938
    6. '[path' → logprob: -14.201400756835938
    7. '           ' → logprob: -14.451400756835938
    8. '	path' → logprob: -14.701400756835938
    9. 'Path' → logprob: -14.826400756835938
    10. ',path' → logprob: -15.451400756835938

Token 361: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.15310683415737e-05
    2. '.' → logprob: -11.000021934509277
    3. 'append' → logprob: -12.500021934509277
    4. ' .' → logprob: -14.125021934509277
    5. '<|end|>' → logprob: -15.375021934509277
    6. '.app' → logprob: -17.00002098083496
    7. '```' → logprob: -17.75002098083496
    8. 'app' → logprob: -18.50002098083496
    9. '.Append' → logprob: -18.62502098083496
    10. '.push' → logprob: -18.75002098083496

Token 362: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00027087211492471397
    2. '(r' → logprob: -8.25027084350586
    3. '(' → logprob: -11.62527084350586
    4. ' ((' → logprob: -14.62527084350586
    5. ' (' → logprob: -16.00027084350586
    6. '(
' → logprob: -16.25027084350586
    7. '   ' → logprob: -18.75027084350586
    8. 'r' → logprob: -19.75027084350586
    9. '```' → logprob: -19.75027084350586
    10. '[(' → logprob: -19.87527084350586

Token 363: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016045980155467987
    2. '(r' → logprob: -4.141046047210693
    3. ' r' → logprob: -12.391045570373535
    4. ' (' → logprob: -12.516045570373535
    5. '(' → logprob: -13.016045570373535
    6. '   ' → logprob: -14.516045570373535
    7. '	r' → logprob: -15.016045570373535
    8. '[r' → logprob: -15.016045570373535
    9. '(
' → logprob: -15.766045570373535
    10. ')' → logprob: -15.766045570373535

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021033499797340482
    2. ',start' → logprob: -8.750210762023926
    3. '[start' → logprob: -10.125210762023926
    4. ' ,' → logprob: -11.750210762023926
    5. '[' → logprob: -12.750210762023926
    6. 'start' → logprob: -14.750210762023926
    7. ',[' → logprob: -15.625210762023926
    8. ',
' → logprob: -16.00020980834961
    9. '),' → logprob: -16.50020980834961
    10. '       ' → logprob: -16.75020980834961

Token 365: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -8.53050296427682e-05
    2. ' start' → logprob: -9.37508487701416
    3. '[start' → logprob: -15.50008487701416
    4. '   ' → logprob: -16.500085830688477
    5. ' ' → logprob: -17.000085830688477
    6. ')' → logprob: -18.500085830688477
    7. '  ' → logprob: -18.750085830688477
    8. '```' → logprob: -18.750085830688477
    9. '	start' → logprob: -19.000085830688477
    10. '
' → logprob: -19.000085830688477

Token 366: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -2.939851037808694e-05
    2. '[start' → logprob: -10.500029563903809
    3. '_,' → logprob: -14.250029563903809
    4. 'c' → logprob: -15.250029563903809
    5. ',' → logprob: -15.500029563903809
    6. '[' → logprob: -15.875029563903809
    7. '_[' → logprob: -15.875029563903809
    8. '_r' → logprob: -16.375028610229492
    9. '```' → logprob: -16.750028610229492
    10. '[_' → logprob: -16.750028610229492

Token 367: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520509362220764
    2. ')
' → logprob: -1.5020508766174316
    3. '       ' → logprob: -9.12705135345459
    4. '))' → logprob: -13.00205135345459
    5. '))
' → logprob: -13.25205135345459
    6. ')

' → logprob: -13.75205135345459
    7. ')
' → logprob: -13.75205135345459
    8. ')\
' → logprob: -13.75205135345459
    9. ')`
' → logprob: -13.87705135345459
    10. ' )' → logprob: -14.25205135345459

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.464347173576243e-05
    2. '```' → logprob: -11.00003433227539
    3. 'if' → logprob: -11.12503433227539
    4. '
' → logprob: -13.62503433227539
    5. '   ' → logprob: -14.12503433227539
    6. ' if' → logprob: -14.75003433227539
    7. '<|end|>' → logprob: -15.50003433227539
    8. '``' → logprob: -15.75003433227539
    9. '​' → logprob: -15.75003433227539
    10. '        
' → logprob: -16.00003433227539

Token 369: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007108822464942932
    2. 'if' (adapté à ' if') → logprob: -7.750710964202881
    3. ' if' → logprob: -8.375710487365723
    4. '```' → logprob: -10.000710487365723
    5. '           ' → logprob: -13.000710487365723
    6. '   ' → logprob: -14.125710487365723
    7. '``' → logprob: -14.625710487365723
    8. ' ' → logprob: -15.500710487365723
    9. '
' → logprob: -15.625710487365723
    10. '<|end|>' → logprob: -15.625710487365723

Token 370: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.02324547804892063
    2. 's' → logprob: -3.7732455730438232
    3. '(s' → logprob: -17.523244857788086
    4. '```' → logprob: -17.773244857788086
    5. ' ' → logprob: -18.273244857788086
    6. '`s' → logprob: -18.398244857788086
    7. '_s' → logprob: -18.898244857788086
    8. ' ' → logprob: -19.273244857788086
    9. '{s' → logprob: -19.648244857788086
    10. '	s' → logprob: -19.773244857788086

Token 371: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014165983535349369
    2. '==' → logprob: -4.264165878295898
    3. '```' → logprob: -14.139165878295898
    4. ' ' → logprob: -14.514165878295898
    5. '          ' → logprob: -15.264165878295898
    6. '=' → logprob: -15.264165878295898
    7. '        ' → logprob: -15.514165878295898
    8. '           ' → logprob: -15.639165878295898
    9. ' =' → logprob: -15.639165878295898
    10. '            ' → logprob: -16.7641658782959

Token 372: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.014165041036903858
    2. ' target' → logprob: -4.264164924621582
    3. '(target' → logprob: -13.514164924621582
    4. '[target' → logprob: -16.0141658782959
    5. '	target' → logprob: -16.6391658782959
    6. '   ' → logprob: -17.7641658782959
    7. ',target' → logprob: -18.7641658782959
    8. ' ' → logprob: -18.8891658782959
    9. 't' → logprob: -19.3891658782959
    10. '
' → logprob: -19.8891658782959

Token 373: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00024858469259925187
    2. 'target' → logprob: -8.500248908996582
    3. '_target' → logprob: -10.750248908996582
    4. '==' → logprob: -11.750248908996582
    5. 'sum' → logprob: -12.125248908996582
    6. '_' → logprob: -12.625248908996582
    7. '```' → logprob: -13.625248908996582
    8. '_s' → logprob: -13.875248908996582
    9. '(target' → logprob: -14.000248908996582
    10. '[target' → logprob: -14.375248908996582

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5037305951118469
    2. '           ' → logprob: -1.5037305355072021
    3. ':
' → logprob: -1.7537305355072021
    4. '==' → logprob: -8.753730773925781
    5. '          ' → logprob: -10.003730773925781
    6. '       ' → logprob: -10.753730773925781
    7. '<|end|>' → logprob: -10.878730773925781
    8. '):
' → logprob: -11.128730773925781
    9. '):' → logprob: -11.878730773925781
    10. '```' → logprob: -12.003730773925781

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.319370302458992e-06
    2. 'break' → logprob: -13.875005722045898
    3. '          ' → logprob: -14.125005722045898
    4. ' break' → logprob: -14.375005722045898
    5. '<|end|>' → logprob: -14.375005722045898
    6. '               ' → logprob: -14.500005722045898
    7. '            
' → logprob: -14.625005722045898
    8. '```' → logprob: -15.000005722045898
    9. '       ' → logprob: -15.250005722045898
    10. '
' → logprob: -15.250005722045898

Token 376: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.1323447823524475
    2. ' results' → logprob: -2.1323447227478027
    3. '           ' → logprob: -5.257344722747803
    4. '       ' → logprob: -8.882345199584961
    5. '	results' → logprob: -10.632345199584961
    6. '               ' → logprob: -11.007345199584961
    7. '```' → logprob: -12.382345199584961
    8. 'return' → logprob: -12.507345199584961
    9. '   ' → logprob: -13.382345199584961
    10. '.results' → logprob: -13.382345199584961

Token 377: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.37500286102295
    3. '.app' → logprob: -14.12500286102295
    4. '.extend' → logprob: -15.62500286102295
    5. '.ap' → logprob: -16.625001907348633
    6. '.add' → logprob: -16.625001907348633
    7. '.setdefault' → logprob: -16.875001907348633
    8. 'append' → logprob: -17.125001907348633
    9. '.Append' → logprob: -17.625001907348633
    10. ' .' → logprob: -18.500001907348633

Token 378: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -1.981667537620524e-06
    2. 'path' → logprob: -13.250001907348633
    3. '[path' → logprob: -16.750001907348633
    4. ' path' → logprob: -17.250001907348633
    5. '(paths' → logprob: -17.500001907348633
    6. '(
' → logprob: -17.625001907348633
    7. ' (' → logprob: -17.875001907348633
    8. ',path' → logprob: -18.000001907348633
    9. '/path' → logprob: -18.625001907348633
    10. '(' → logprob: -19.000001907348633

Token 379: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.04859054833650589
    2. '[:]' → logprob: -3.048590660095215
    3. ')' → logprob: -13.423590660095215
    4. '[:,' → logprob: -14.173590660095215
    5. '[:-' → logprob: -14.923590660095215
    6. '.append' → logprob: -15.673590660095215
    7. '[' → logprob: -15.798590660095215
    8. ' [:' → logprob: -16.0485897064209
    9. '[path' → logprob: -16.5485897064209
    10. '(:' → logprob: -16.6735897064209

Token 380: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04948848485946655
    2. ')' → logprob: -3.0494885444641113
    3. '           ' → logprob: -7.049488544464111
    4. '       ' → logprob: -10.674488067626953
    5. ')
' → logprob: -12.424488067626953
    6. '               ' → logprob: -12.924488067626953
    7. '())
' → logprob: -14.424488067626953
    8. '   ' → logprob: -14.799488067626953
    9. ' )
' → logprob: -14.924488067626953
    10. ')

' → logprob: -15.174488067626953

Token 381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016301481809932739
    2. 'break' → logprob: -8.875163078308105
    3. ' break' → logprob: -11.375163078308105
    4. '
' → logprob: -12.250163078308105
    5. '               ' → logprob: -13.125163078308105
    6. '          ' → logprob: -13.625163078308105
    7. '            
' → logprob: -14.125163078308105
    8. '		' → logprob: -14.125163078308105
    9. '       ' → logprob: -14.875163078308105
    10. '	       ' → logprob: -14.875163078308105

Token 382: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6957889199256897
    2. 'break' (adapté à ' break') → logprob: -0.6957889199256897
    3. '           ' → logprob: -6.070788860321045
    4. '
' → logprob: -8.195789337158203
    5. '               ' → logprob: -10.445789337158203
    6. '       ' → logprob: -11.445789337158203
    7. '```' → logprob: -12.070789337158203
    8. '	break' → logprob: -12.320789337158203
    9. '
' → logprob: -14.070789337158203
    10. 'return' → logprob: -14.445789337158203

Token 383: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001226062304340303
    2. '
' → logprob: -6.87622594833374
    3. '<|end|>' → logprob: -9.126226425170898
    4. '        
' → logprob: -10.626226425170898
    5. '```' → logprob: -10.751226425170898
    6. 'if' → logprob: -11.126226425170898
    7. '   ' → logprob: -11.626226425170898
    8. ' if' → logprob: -12.376226425170898
    9. '\
' → logprob: -13.001226425170898
    10. '           ' → logprob: -13.126226425170898

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.383526149671525e-05
    2. '
' → logprob: -10.375053405761719
    3. '   ' → logprob: -11.375053405761719
    4. 'if' → logprob: -12.375053405761719
    5. '           ' → logprob: -12.625053405761719
    6. ' if' → logprob: -13.500053405761719
    7. '```' → logprob: -14.500053405761719
    8. '<|end|>' → logprob: -14.500053405761719
    9. '        
' → logprob: -14.625053405761719
    10. '               ' → logprob: -15.625053405761719

Token 385: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10194236785173416
    2. 'if' (adapté à ' if') → logprob: -2.351942300796509
    3. ' if' → logprob: -6.726942539215088
    4. '           ' → logprob: -8.47694206237793
    5. '   ' → logprob: -8.47694206237793
    6. '
' → logprob: -9.47694206237793
    7. '               ' → logprob: -11.47694206237793
    8. '      ' → logprob: -11.47694206237793
    9. '        ' → logprob: -11.97694206237793
    10. '     ' → logprob: -12.35194206237793

Token 386: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.31326186656951904
    2. 's' → logprob: -1.313261866569519
    3. '_s' → logprob: -16.688261032104492
    4. '(s' → logprob: -17.313261032104492
    5. ' ' → logprob: -17.438261032104492
    6. '	s' → logprob: -17.938261032104492
    7. '```' → logprob: -17.938261032104492
    8. ' ' → logprob: -18.563261032104492
    9. '{s' → logprob: -18.563261032104492
    10. '>s' → logprob: -19.063261032104492

Token 387: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10021184384822845
    2. '>' → logprob: -2.3502118587493896
    3. ' ' → logprob: -12.725212097167969
    4. '>s' → logprob: -13.975212097167969
    5. '```' → logprob: -15.225212097167969
    6. '[' → logprob: -15.225212097167969
    7. ' ' → logprob: -15.350212097167969
    8. '           ' → logprob: -15.600212097167969
    9. '   ' → logprob: -15.600212097167969
    10. ' >
' → logprob: -16.10021209716797

Token 388: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.018150178715586662
    2. 'target' → logprob: -4.018150329589844
    3. '[target' → logprob: -16.268150329589844
    4. '	target' → logprob: -16.393150329589844
    5. '(target' → logprob: -16.518150329589844
    6. ' ' → logprob: -17.643150329589844
    7. '   ' → logprob: -18.768150329589844
    8. ' tgt' → logprob: -18.893150329589844
    9. ' targ' → logprob: -18.893150329589844
    10. ',target' → logprob: -19.143150329589844

Token 389: '_sum' (ID: 29859)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.30115416646003723
    2. '_sum' → logprob: -1.9261541366577148
    3. 'target' → logprob: -2.176154136657715
    4. ' target' → logprob: -7.801154136657715
    5. '[target' → logprob: -8.676154136657715
    6. '(target' → logprob: -9.426154136657715
    7. '```' → logprob: -9.801154136657715
    8. '_' → logprob: -10.176154136657715
    9. '_value' → logprob: -10.176154136657715
    10. 'arget' → logprob: -11.426154136657715

Token 390: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05243835970759392
    2. ':' → logprob: -3.677438259124756
    3. ':
' → logprob: -3.677438259124756
    4. '       ' → logprob: -7.927438259124756
    5. '          ' → logprob: -10.177438735961914
    6. '               ' → logprob: -10.302438735961914
    7. '```' → logprob: -10.677438735961914
    8. '):
' → logprob: -10.927438735961914
    9. '   ' → logprob: -11.427438735961914
    10. '():
' → logprob: -12.302438735961914

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024429336190223694
    2. 'break' → logprob: -8.625244140625
    3. ' break' → logprob: -9.750244140625
    4. '       ' → logprob: -12.625244140625
    5. '          ' → logprob: -13.375244140625
    6. '               ' → logprob: -13.875244140625
    7. '```' → logprob: -15.000244140625
    8. '   ' → logprob: -16.000244140625
    9. '		' → logprob: -16.625244140625
    10. '         ' → logprob: -16.625244140625

Token 392: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08996998518705368
    2. ' break' → logprob: -2.8399698734283447
    3. '           ' → logprob: -3.5899698734283447
    4. '               ' → logprob: -12.214969635009766
    5. '   ' → logprob: -12.589969635009766
    6. '```' → logprob: -12.839969635009766
    7. '       ' → logprob: -13.464969635009766
    8. '	break' → logprob: -13.839969635009766
    9. '
' → logprob: -14.464969635009766
    10. '          ' → logprob: -15.214969635009766

Token 393: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.157039049663581e-05
    2. '    
' → logprob: -10.250051498413086
    3. '```' → logprob: -12.125051498413086
    4. 'return' → logprob: -12.500051498413086
    5. '
' → logprob: -13.125051498413086
    6. '	return' → logprob: -13.625051498413086
    7. '<|end|>' → logprob: -13.875051498413086
    8. ' return' → logprob: -14.750051498413086
    9. ')' → logprob: -14.750051498413086
    10. ',' → logprob: -15.125051498413086

Token 394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003694205661304295
    2. '    
' → logprob: -8.87536907196045
    3. 'return' → logprob: -9.37536907196045
    4. '	return' → logprob: -9.87536907196045
    5. '```' → logprob: -10.12536907196045
    6. ' return' → logprob: -10.75036907196045
    7. '
' → logprob: -11.25036907196045
    8. '<|end|>' → logprob: -12.00036907196045
    9. ':return' → logprob: -13.37536907196045
    10. ')' → logprob: -13.50036907196045

Token 395: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.673547563375905e-05
    2. 'return' (adapté à ' return') → logprob: -9.500086784362793
    3. '    
' → logprob: -11.875086784362793
    4. ' return' → logprob: -13.375086784362793
    5. '	return' → logprob: -13.750086784362793
    6. '```' → logprob: -13.875086784362793
    7. '
' → logprob: -14.250086784362793
    8. '<|end|>' → logprob: -14.875086784362793
    9. '       ' → logprob: -16.375085830688477
    10. '{return' → logprob: -17.375085830688477

Token 396: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.061968132853507996
    2. ' results' → logprob: -2.8119680881500244
    3. '(results' → logprob: -14.936967849731445
    4. '	results' → logprob: -16.061967849731445
    5. '.results' → logprob: -18.686967849731445
    6. '[' → logprob: -19.686967849731445
    7. 'Results' → logprob: -20.561967849731445
    8. '[]' → logprob: -20.811967849731445
    9. '_results' → logprob: -21.311967849731445
    10. '   ' → logprob: -21.686967849731445

Token 397: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5466183423995972
    2. '<|end|>' → logprob: -0.9216183423995972
    3. 'def' → logprob: -4.296618461608887
    4. '

' → logprob: -5.296618461608887
    5. '```' → logprob: -5.671618461608887
    6. '\n' → logprob: -7.796618461608887
    7. '<|end|>' → logprob: -8.171618461608887
    8. '    
' → logprob: -8.796618461608887
    9. '\' → logprob: -9.671618461608887
    10. ' 
' → logprob: -9.921618461608887

Token 398: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003178901970386505
    2. '
' → logprob: -6.00317907333374
    3. '```' → logprob: -7.62817907333374
    4. '

' → logprob: -9.503178596496582
    5. '<|end|>' → logprob: -9.753178596496582
    6. '\' → logprob: -10.253178596496582
    7. '\n' → logprob: -10.753178596496582
    8. ' def' → logprob: -12.003178596496582
    9. '(def' → logprob: -12.753178596496582
    10. '    
' → logprob: -13.003178596496582

Token 399: ' can' (ID: 665)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5325986742973328
    2. ' solve' → logprob: -1.5325987339019775
    3. ' search' → logprob: -2.5325987339019775
    4. ' back' → logprob: -2.9075987339019775
    5. 'dfs' → logprob: -3.2825987339019775
    6. ' find' → logprob: -4.407598495483398
    7. 'solve' → logprob: -4.782598495483398
    8. 'search' → logprob: -5.782598495483398
    9. ' main' → logprob: -7.032598495483398
    10. 'back' → logprob: -8.032598495483398

Token 400: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.25791051983833313
    2. '_use' → logprob: -2.2579104900360107
    3. '_find' → logprob: -3.0079104900360107
    4. '_form' → logprob: -4.50791072845459
    5. '_make' → logprob: -4.88291072845459
    6. '_take' → logprob: -4.88291072845459
    7. '_cover' → logprob: -5.00791072845459
    8. '_choose' → logprob: -5.00791072845459
    9. '_complete' → logprob: -5.00791072845459
    10. '_fill' → logprob: -5.13291072845459

Token 401: '_all' (ID: 13305)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.11599802225828171
    2. '(' → logprob: -2.7409980297088623
    3. '(line' → logprob: -3.6159980297088623
    4. '(path' → logprob: -4.740997791290283
    5. '_line' → logprob: -6.115997791290283
    6. '(lines' → logprob: -6.615997791290283
    7. '_path' → logprob: -6.615997791290283
    8. ' (' → logprob: -6.740997791290283
    9. '_' → logprob: -6.740997791290283
    10. '(row' → logprob: -7.365997791290283

Token 402: '_lines' (ID: 42980)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.36567768454551697
    2. '(' → logprob: -1.4906777143478394
    3. '(lines' → logprob: -3.49067759513855
    4. '(target' → logprob: -4.365677833557129
    5. '(line' → logprob: -4.490677833557129
    6. '(nums' → logprob: -5.115677833557129
    7. '(sum' → logprob: -5.990677833557129
    8. '(s' → logprob: -6.115677833557129
    9. '_targets' → logprob: -6.115677833557129
    10. '_lines' → logprob: -6.365677833557129

Token 403: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.0001478796184528619
    2. '(' → logprob: -9.000147819519043
    3. '(n' → logprob: -10.875147819519043
    4. '(gr' → logprob: -12.750147819519043
    5. ' (' → logprob: -13.125147819519043
    6. '(start' → logprob: -16.25014877319336
    7. '(
' → logprob: -16.37514877319336
    8. '(Grid' → logprob: -16.62514877319336
    9. '(line' → logprob: -17.12514877319336
    10. '(s' → logprob: -17.12514877319336

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004039785999339074
    2. ',n' → logprob: -7.875403881072998
    3. ' ,' → logprob: -10.875404357910156
    4. '(grid' → logprob: -12.500404357910156
    5. '   ' → logprob: -14.500404357910156
    6. ',
' → logprob: -15.500404357910156
    7. 'n' → logprob: -16.000404357910156
    8. '(n' → logprob: -16.500404357910156
    9. 'grid' → logprob: -16.875404357910156
    10. 'def' → logprob: -17.250404357910156

Token 405: ' n' (ID: 297)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.1537816524505615
    2. 'lines' → logprob: -1.4037816524505615
    3. 'n' → logprob: -2.1537816524505615
    4. ' n' → logprob: -2.9037816524505615
    5. ' target' → logprob: -3.0287816524505615
    6. 'used' → logprob: -3.0287816524505615
    7. 'target' → logprob: -3.2787816524505615
    8. 'k' → logprob: -3.4037816524505615
    9. ' used' → logprob: -3.5287816524505615
    10. ' line' → logprob: -4.778781890869141

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4855663721391466e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',start' → logprob: -14.000015258789062
    4. ',
' → logprob: -15.000015258789062
    5. ',k' → logprob: -16.500015258789062
    6. 'def' → logprob: -16.500015258789062
    7. ',s' → logprob: -16.750015258789062
    8. '   ' → logprob: -16.875015258789062
    9. ',current' → logprob: -17.250015258789062
    10. ',line' → logprob: -17.375015258789062

Token 407: ' start' (ID: 1604)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.8300336599349976
    2. ' target' → logprob: -1.5800336599349976
    3. 'lines' → logprob: -1.8300336599349976
    4. ' lines' → logprob: -2.580033779144287
    5. 'used' → logprob: -3.330033779144287
    6. 'line' → logprob: -4.330033779144287
    7. ' used' → logprob: -4.455033779144287
    8. ' sums' → logprob: -4.705033779144287
    9. 'targets' → logprob: -5.205033779144287
    10. 'index' → logprob: -5.205033779144287

Token 408: '_points' (ID: 30070)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.019827481359243393
    2. ',' → logprob: -4.019827365875244
    3. '):' → logprob: -7.144827365875244
    4. 'r' → logprob: -8.394827842712402
    5. '_idx' → logprob: -8.519827842712402
    6. '_c' → logprob: -9.519827842712402
    7. '_i' → logprob: -9.769827842712402
    8. '_pos' → logprob: -10.019827842712402
    9. '_,' → logprob: -10.144827842712402
    10. '   ' → logprob: -10.269827842712402

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.774276774493046e-05
    2. ' ,' → logprob: -10.625038146972656
    3. '   ' → logprob: -12.375038146972656
    4. '):' → logprob: -12.625038146972656
    5. ',
' → logprob: -13.375038146972656
    6. ',start' → logprob: -14.000038146972656
    7. '):
' → logprob: -14.125038146972656
    8. ',n' → logprob: -14.375038146972656
    9. ',row' → logprob: -14.875038146972656
    10. '[],' → logprob: -15.125038146972656

Token 410: ' used' (ID: 2061)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.5451257228851318
    2. 'target' → logprob: -1.5451257228851318
    3. ' used' → logprob: -2.545125722885132
    4. 'used' → logprob: -3.420125722885132
    5. ' lines' → logprob: -3.795125722885132
    6. ' line' → logprob: -4.170125961303711
    7. ' index' → logprob: -4.670125961303711
    8. 'index' → logprob: -4.670125961303711
    9. 'lines' → logprob: -4.795125961303711
    10. 'line' → logprob: -5.045125961303711

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005305142258293927
    2. '):' → logprob: -7.62553071975708
    3. ' ,' → logprob: -11.125530242919922
    4. '):
' → logprob: -11.250530242919922
    5. '   ' → logprob: -12.250530242919922
    6. ',start' → logprob: -12.250530242919922
    7. ')' → logprob: -13.500530242919922
    8. ',n' → logprob: -14.250530242919922
    9. ',
' → logprob: -14.250530242919922
    10. ',r' → logprob: -15.375530242919922

Token 412: ' idx' (ID: 14016)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -1.0995739698410034
    2. 'target' → logprob: -1.0995739698410034
    3. 'index' → logprob: -2.224574089050293
    4. ' idx' → logprob: -2.849574089050293
    5. 'idx' → logprob: -2.974574089050293
    6. ' index' → logprob: -3.099574089050293
    7. ' line' → logprob: -3.974574089050293
    8. 'line' → logprob: -4.224574089050293
    9. 'lines' → logprob: -4.849574089050293
    10. ' lines' → logprob: -4.849574089050293

Token 413: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0112290158867836
    2. '):
' → logprob: -4.511229038238525
    3. ',' → logprob: -9.261228561401367
    4. ')' → logprob: -10.761228561401367
    5. '+' → logprob: -10.761228561401367
    6. ' ):' → logprob: -10.886228561401367
    7. '):
' → logprob: -11.261228561401367
    8. '   ' → logprob: -12.136228561401367
    9. ':' → logprob: -12.761228561401367
    10. '):

' → logprob: -13.761228561401367

Token 414: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0979597270488739
    2. ':' → logprob: -2.5979597568511963
    3. '```' → logprob: -5.222959518432617
    4. ',' → logprob: -5.597959518432617
    5. ' if' → logprob: -5.847959518432617
    6. '(' → logprob: -7.097959518432617
    7. '    
' → logprob: -7.222959518432617
    8. ':
' → logprob: -7.347959518432617
    9. '():' → logprob: -7.472959518432617
    10. '    ' → logprob: -7.597959518432617

Token 415: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001007919549010694
    2. ' if' → logprob: -7.501008033752441
    3. 'if' (adapté à ' if') → logprob: -8.626008033752441
    4. ':' → logprob: -9.251008033752441
    5. '    
' → logprob: -9.376008033752441
    6. '
' → logprob: -10.626008033752441
    7. '```' → logprob: -10.876008033752441
    8. ' 
' → logprob: -11.001008033752441
    9. '    ' → logprob: -11.251008033752441
    10. '	if' → logprob: -12.501008033752441

Token 416: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.005237075500190258
    2. 'idx' → logprob: -5.255237102508545
    3. '	idx' → logprob: -12.755236625671387
    4. '_idx' → logprob: -15.005236625671387
    5. '(idx' → logprob: -16.005237579345703
    6. '[idx' → logprob: -17.255237579345703
    7. ' ' → logprob: -17.755237579345703
    8. '.idx' → logprob: -19.255237579345703
    9. 'Idx' → logprob: -19.380237579345703
    10. ' index' → logprob: -19.880237579345703

Token 417: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2920420467853546
    2. '==' → logprob: -1.4170420169830322
    3. ' >=' → logprob: -4.792042255401611
    4. '>=' → logprob: -6.042042255401611
    5. ')' → logprob: -9.917041778564453
    6. ' <' → logprob: -10.667041778564453
    7. ')==' → logprob: -11.292041778564453
    8. '   ' → logprob: -11.417041778564453
    9. '<' → logprob: -11.542041778564453
    10. ' ' → logprob: -11.792041778564453

Token 418: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020497082732617855
    2. ' len' → logprob: -8.500205039978027
    3. 'n' → logprob: -14.125205039978027
    4. '(len' → logprob: -14.375205039978027
    5. '[len' → logprob: -17.12520408630371
    6. '=len' → logprob: -17.25020408630371
    7. '   ' → logprob: -17.62520408630371
    8. '<len' → logprob: -17.75020408630371
    9. '	len' → logprob: -18.12520408630371
    10. ',len' → logprob: -18.62520408630371

Token 419: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0005576779949478805
    2. 'start' → logprob: -7.500557899475098
    3. '(' → logprob: -12.500557899475098
    4. ' start' → logprob: -14.500557899475098
    5. '=start' → logprob: -15.750557899475098
    6. '[start' → logprob: -16.12555694580078
    7. ':start' → logprob: -17.50055694580078
    8. ',start' → logprob: -17.62555694580078
    9. '(
' → logprob: -17.75055694580078
    10. '	start' → logprob: -17.87555694580078

Token 420: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.1875571544806007e-05
    2. ')_' → logprob: -12.500011444091797
    3. '_p' → logprob: -12.875011444091797
    4. '_pts' → logprob: -13.625011444091797
    5. '_start' → logprob: -13.875011444091797
    6. ')' → logprob: -13.875011444091797
    7. ' _' → logprob: -14.375011444091797
    8. '```' → logprob: -14.625011444091797
    9. '_positions' → logprob: -14.875011444091797
    10. '_POINTS' → logprob: -15.125011444091797

Token 421: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023522300645709038
    2. '):
' → logprob: -3.77352237701416
    3. ':' → logprob: -8.39852237701416
    4. ')' → logprob: -10.39852237701416
    5. '   ' → logprob: -11.52352237701416
    6. ':
' → logprob: -12.02352237701416
    7. ' ):' → logprob: -13.14852237701416
    8. '):
' → logprob: -14.14852237701416
    9. ']:' → logprob: -14.89852237701416
    10. ':return' → logprob: -15.02352237701416

Token 422: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15266838669776917
    2. '       ' → logprob: -2.0276684761047363
    3. ':
' → logprob: -5.277668476104736
    4. ':' → logprob: -6.027668476104736
    5. ':return' → logprob: -7.152668476104736
    6. '
' → logprob: -7.402668476104736
    7. ' return' → logprob: -7.652668476104736
    8. '    
' → logprob: -8.277667999267578
    9. '	return' → logprob: -9.152667999267578
    10. 'return' → logprob: -10.152667999267578

Token 423: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.42580291628837585
    2. '       ' → logprob: -1.4258029460906982
    3. 'return' → logprob: -2.4258029460906982
    4. '   ' → logprob: -4.050802707672119
    5. '
' → logprob: -8.050803184509277
    6. ' True' → logprob: -8.300803184509277
    7. 'True' → logprob: -10.425803184509277
    8. '	return' → logprob: -11.175803184509277
    9. ':return' → logprob: -12.050803184509277
    10. '        
' → logprob: -13.425803184509277

Token 424: ' Check' (ID: 6208)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2015615701675415
    2. 'return' → logprob: -1.7015615701675415
    3. '   ' → logprob: -8.95156192779541
    4. ' True' → logprob: -11.95156192779541
    5. '
' → logprob: -12.45156192779541
    6. 'True' → logprob: -12.82656192779541
    7. '	return' → logprob: -13.20156192779541
    8. ':return' → logprob: -14.07656192779541
    9. '{return' → logprob: -14.45156192779541
    10. 'Return' → logprob: -14.82656192779541

Token 425: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.2444521188735962
    2. 'True' → logprob: -1.2444521188735962
    3. ' True' → logprob: -1.2444521188735962
    4. ' all' → logprob: -2.1194519996643066
    5. 'used' → logprob: -4.994451999664307
    6. ' used' → logprob: -5.369451999664307
    7. 'if' → logprob: -6.494451999664307
    8. '   ' → logprob: -7.119451999664307
    9. ' if' → logprob: -7.119451999664307
    10. ' ' → logprob: -7.869451999664307

Token 426: ' cells' (ID: 11242)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.37035083770751953
    2. 'used' → logprob: -1.8703508377075195
    3. ' True' → logprob: -1.9953508377075195
    4. 'True' → logprob: -4.7453508377075195
    5. ' cells' → logprob: -5.1203508377075195
    6. ' all' → logprob: -6.8703508377075195
    7. ' lines' → logprob: -6.8703508377075195
    8. 'cells' → logprob: -7.3703508377075195
    9. ' points' → logprob: -7.9953508377075195
    10. ' rows' → logprob: -8.12035083770752

Token 427: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5900208950042725
    2. ' for' → logprob: -0.9650208950042725
    3. 'for' → logprob: -3.4650208950042725
    4. ' used' → logprob: -3.8400208950042725
    5. ' if' → logprob: -5.215021133422852
    6. 'used' → logprob: -5.840021133422852
    7. ' are' → logprob: -6.715021133422852
    8. '
' → logprob: -7.340021133422852
    9. '       ' → logprob: -7.340021133422852
    10. '_used' → logprob: -8.590021133422852

Token 428: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.25366830825805664
    2. ' used' → logprob: -1.5036683082580566
    3. ' True' → logprob: -6.878668308258057
    4. 'True' → logprob: -7.253668308258057
    5. '_used' → logprob: -15.753667831420898
    6. '   ' → logprob: -16.0036678314209
    7. '```' → logprob: -16.0036678314209
    8. '.used' → logprob: -16.2536678314209
    9. 'covered' → logprob: -17.2536678314209
    10. '-used' → logprob: -17.6286678314209

Token 429: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40400537848472595
    2. '   ' → logprob: -1.1540054082870483
    3. '
' → logprob: -4.529005527496338
    4. ':
' → logprob: -5.529005527496338
    5. ':' → logprob: -7.404005527496338
    6. ' for' → logprob: -7.529005527496338
    7. ' and' → logprob: -7.779005527496338
    8. '           ' → logprob: -9.02900505065918
    9. '    
' → logprob: -9.02900505065918
    10. ' or' → logprob: -9.52900505065918

Token 430: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6935501098632812
    2. '       ' → logprob: -0.6935501098632812
    3. ' for' → logprob: -8.068550109863281
    4. 'for' → logprob: -10.443550109863281
    5. '
' → logprob: -10.568550109863281
    6. '```' → logprob: -11.443550109863281
    7. 'return' → logprob: -11.943550109863281
    8. '    
' → logprob: -12.193550109863281
    9. ' return' → logprob: -12.818550109863281
    10. '           ' → logprob: -12.943550109863281

Token 431: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46393680572509766
    2. ' for' → logprob: -1.4639368057250977
    3. '       ' → logprob: -2.7139368057250977
    4. ' return' → logprob: -3.0889368057250977
    5. 'return' → logprob: -4.213936805725098
    6. 'for' (adapté à ' for') → logprob: -4.338936805725098
    7. '    ' → logprob: -9.713936805725098
    8. '    
' → logprob: -10.088936805725098
    9. '
' → logprob: -10.213936805725098
    10. ' ' → logprob: -11.338936805725098

Token 432: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009909666143357754
    2. ' r' → logprob: -4.759909629821777
    3. 'i' → logprob: -6.759909629821777
    4. ' i' → logprob: -9.259909629821777
    5. 'row' → logprob: -10.259909629821777
    6. ' row' → logprob: -12.384909629821777
    7. '   ' → logprob: -14.884909629821777
    8. ' ' → logprob: -15.509909629821777
    9. '	r' → logprob: -16.384910583496094
    10. '```' → logprob: -17.509910583496094

Token 433: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014173968695104122
    2. 'in' → logprob: -4.264173984527588
    3. '   ' → logprob: -12.26417350769043
    4. ' ' → logprob: -13.51417350769043
    5. 'import' → logprob: -14.01417350769043
    6. '	in' → logprob: -14.38917350769043
    7. '```' → logprob: -14.51417350769043
    8. 'In' → logprob: -14.88917350769043
    9. ',' → logprob: -15.13917350769043
    10. '
' → logprob: -15.38917350769043

Token 434: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740772247314453
    2. ' range' → logprob: -0.9740772247314453
    3. ')' → logprob: -16.099077224731445
    4. ' used' → logprob: -16.474077224731445
    5. '	range' → logprob: -17.724077224731445
    6. 'used' → logprob: -17.849077224731445
    7. '(range' → logprob: -17.974077224731445
    8. ' ' → logprob: -18.099077224731445
    9. '
' → logprob: -18.474077224731445
    10. '```' → logprob: -18.724077224731445

Token 435: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20182980597019196
    2. '(n' → logprob: -1.7018297910690308
    3. ' n' → logprob: -8.07682991027832
    4. '	n' → logprob: -10.07682991027832
    5. ')n' → logprob: -10.82682991027832
    6. '   ' → logprob: -11.57682991027832
    7. '(' → logprob: -11.57682991027832
    8. ',n' → logprob: -11.95182991027832
    9. '_n' → logprob: -12.07682991027832
    10. ')' → logprob: -12.45182991027832

Token 436: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005268738139420748
    2. '):' → logprob: -5.255268573760986
    3. '   ' → logprob: -10.630269050598145
    4. '):
' → logprob: -12.005269050598145
    5. ':
' → logprob: -13.255269050598145
    6. ' ):
' → logprob: -13.630269050598145
    7. '):

' → logprob: -14.380269050598145
    8. '       ' → logprob: -15.255269050598145
    9. ')' → logprob: -15.380269050598145
    10. ' ' → logprob: -15.755269050598145

Token 437: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013581438921391964
    2. '           ' → logprob: -4.513581275939941
    3. '<|end|>' → logprob: -6.388581275939941
    4. ' for' → logprob: -7.638581275939941
    5. '   ' → logprob: -9.263581275939941
    6. '	   ' → logprob: -9.763581275939941
    7. '<|end|>' → logprob: -9.763581275939941
    8. ',' → logprob: -9.888581275939941
    9. '	       ' → logprob: -10.888581275939941
    10. ':' → logprob: -11.263581275939941

Token 438: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10451801866292953
    2. ' for' → logprob: -2.354517936706543
    3. '   ' → logprob: -5.604517936706543
    4. '       ' → logprob: -7.479517936706543
    5. '           ' → logprob: -9.979517936706543
    6. ' ' → logprob: -11.979517936706543
    7. '	for' → logprob: -12.729517936706543
    8. '               ' → logprob: -14.229517936706543
    9. '```' → logprob: -16.97951889038086
    10. '	   ' → logprob: -17.35451889038086

Token 439: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.049115829169750214
    2. ' c' → logprob: -3.0491158962249756
    3. ' range' → logprob: -8.174116134643555
    4. 'n' → logprob: -8.674116134643555
    5. 'range' → logprob: -10.299116134643555
    6. ' n' → logprob: -11.049116134643555
    7. '0' → logprob: -11.174116134643555
    8. '   ' → logprob: -11.674116134643555
    9. ' ' → logprob: -14.174116134643555
    10. '_c' → logprob: -14.299116134643555

Token 440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004623799119144678
    2. 'in' → logprob: -5.379623889923096
    3. ' ' → logprob: -13.254623413085938
    4. ',' → logprob: -14.629623413085938
    5. 'n' → logprob: -15.254623413085938
    6. 'import' → logprob: -15.504623413085938
    7. '[' → logprob: -15.879623413085938
    8. '```' → logprob: -16.129623413085938
    9. '	in' → logprob: -16.254623413085938
    10. ')' → logprob: -16.629623413085938

Token 441: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06251823157072067
    2. ' range' → logprob: -2.8125181198120117
    3. 'n' → logprob: -7.562518119812012
    4. '(range' → logprob: -10.937518119812012
    5. '(n' → logprob: -11.312518119812012
    6. ' n' → logprob: -14.062518119812012
    7. '[n' → logprob: -17.187519073486328
    8. '
' → logprob: -17.562519073486328
    9. ' in' → logprob: -19.187519073486328
    10. '   ' → logprob: -19.437519073486328

Token 442: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015126005746424198
    2. 'n' → logprob: -6.50151252746582
    3. 'range' → logprob: -12.00151252746582
    4. '(' → logprob: -12.62651252746582
    5. ' (' → logprob: -15.25151252746582
    6. ' range' → logprob: -15.87651252746582
    7. ' n' → logprob: -16.00151252746582
    8. '
' → logprob: -16.50151252746582
    9. '<n' → logprob: -16.87651252746582
    10. ')' → logprob: -17.00151252746582

Token 443: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16029509902000427
    2. '):' → logprob: -1.9102951288223267
    3. '):
' → logprob: -10.785295486450195
    4. '):

' → logprob: -10.785295486450195
    5. ')' → logprob: -11.160295486450195
    6. '       ' → logprob: -12.660295486450195
    7. '           ' → logprob: -12.660295486450195
    8. '   ' → logprob: -13.160295486450195
    9. ':
' → logprob: -13.285295486450195
    10. ':' → logprob: -13.535295486450195

Token 444: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007293514790944755
    2. '<|end|>' → logprob: -7.750729560852051
    3. ' if' → logprob: -8.50072956085205
    4. '           ' → logprob: -10.37572956085205
    5. '<|end|>' → logprob: -11.12572956085205
    6. '       ' → logprob: -11.75072956085205
    7. ',' → logprob: -12.12572956085205
    8. 'if' → logprob: -12.37572956085205
    9. '                       ' → logprob: -12.37572956085205
    10. '              ' → logprob: -12.37572956085205

Token 445: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14096079766750336
    2. ' if' → logprob: -2.140960693359375
    3. '           ' → logprob: -5.140960693359375
    4. 'if' (adapté à ' if') → logprob: -5.640960693359375
    5. '       ' → logprob: -6.140960693359375
    6. '               ' → logprob: -6.640960693359375
    7. '   ' → logprob: -7.515960693359375
    8. '                       ' → logprob: -7.890960693359375
    9. '<|end|>' → logprob: -10.390960693359375
    10. '                    
' → logprob: -11.015960693359375

Token 446: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6326512098312378
    2. 'not' → logprob: -0.7576512098312378
    3. '               ' → logprob: -11.007651329040527
    4. '!' → logprob: -11.632651329040527
    5. '(not' → logprob: -11.632651329040527
    6. '   ' → logprob: -12.007651329040527
    7. '
' → logprob: -12.382651329040527
    8. 'used' → logprob: -12.757651329040527
    9. 'grid' → logprob: -13.507651329040527
    10. '```' → logprob: -14.007651329040527

Token 447: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0067154900170862675
    2. ' used' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.381715774536133
    4. '.used' → logprob: -17.131715774536133
    5. 'use' → logprob: -19.631715774536133
    6. '
' → logprob: -20.006715774536133
    7. '-used' → logprob: -20.131715774536133
    8. ' ' → logprob: -20.256715774536133
    9. '_used' → logprob: -20.381715774536133
    10. '```' → logprob: -20.381715774536133

Token 448: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. ' [' → logprob: -16.375
    4. '[c' → logprob: -17.75
    5. 'r' → logprob: -18.125
    6. '[s' → logprob: -18.375
    7. '[
' → logprob: -19.75
    8. '][' → logprob: -20.0
    9. '[u' → logprob: -20.125
    10. '[n' → logprob: -20.25

Token 449: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.4987974029500037e-05
    2. ']' → logprob: -11.250024795532227
    3. ' ][' → logprob: -12.000024795532227
    4. '[r' → logprob: -12.375024795532227
    5. '[' → logprob: -14.750024795532227
    6. '[c' → logprob: -14.875024795532227
    7. ']][' → logprob: -15.000024795532227
    8. '   ' → logprob: -16.125024795532227
    9. '           ' → logprob: -16.750024795532227
    10. '       ' → logprob: -16.875024795532227

Token 450: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.9981420336989686e-05
    2. '][' → logprob: -10.875020027160645
    3. ' c' → logprob: -14.125020027160645
    4. ']' → logprob: -16.000019073486328
    5. '
' → logprob: -17.500019073486328
    6. '   ' → logprob: -17.625019073486328
    7. ')c' → logprob: -17.750019073486328
    8. '	c' → logprob: -18.000019073486328
    9. ']][' → logprob: -18.500019073486328
    10. '```' → logprob: -18.500019073486328

Token 451: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1271151900291443
    2. ']:' → logprob: -2.127115249633789
    3. ']:

' → logprob: -9.502115249633789
    4. ']' → logprob: -10.127115249633789
    5. ']:
' → logprob: -10.502115249633789
    6. ' ]' → logprob: -11.127115249633789
    7. ':' → logprob: -11.252115249633789
    8. ':
' → logprob: -11.877115249633789
    9. ']]:
' → logprob: -12.877115249633789
    10. '):
' → logprob: -13.002115249633789

Token 452: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00340561312623322
    2. ' return' → logprob: -5.878405570983887
    3. 'return' → logprob: -7.878405570983887
    4. '                    
' → logprob: -9.128405570983887
    5. '                       ' → logprob: -9.878405570983887
    6. '           ' → logprob: -10.753405570983887
    7. '               ' → logprob: -11.003405570983887
    8. '                           ' → logprob: -12.128405570983887
    9. ':return' → logprob: -12.378405570983887
    10. '                  ' → logprob: -13.003405570983887

Token 453: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4998382031917572
    2. 'return' (adapté à ' return') → logprob: -0.9998382329940796
    3. '                       ' → logprob: -4.124838352203369
    4. '                   ' → logprob: -4.749838352203369
    5. '
' → logprob: -8.124837875366211
    6. ' 
' → logprob: -8.999837875366211
    7. '                        
' → logprob: -9.624837875366211
    8. '                    
' → logprob: -10.249837875366211
    9. '	return' → logprob: -10.624837875366211
    10. '               ' → logprob: -10.749837875366211

Token 454: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004095143172889948
    2. ' False' → logprob: -5.504095077514648
    3. 'True' → logprob: -11.004095077514648
    4. ' True' → logprob: -16.00409507751465
    5. '(False' → logprob: -19.37909507751465
    6. 'F' → logprob: -20.50409507751465
    7. '   ' → logprob: -21.12909507751465
    8. '
' → logprob: -21.25409507751465
    9. '=False' → logprob: -22.25409507751465
    10. '0' → logprob: -22.75409507751465

Token 455: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6656011939048767
    2. '       ' → logprob: -1.1656012535095215
    3. '               ' → logprob: -2.6656012535095215
    4. '<|end|>' → logprob: -3.4156012535095215
    5. '\n' → logprob: -3.9156012535095215
    6. '    
' → logprob: -4.6656012535095215
    7. '  
' → logprob: -4.7906012535095215
    8. '           ' → logprob: -4.9156012535095215
    9. '        
' → logprob: -5.2906012535095215
    10. '                
' → logprob: -5.6656012535095215

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6282463669776917
    2. '
' → logprob: -1.1282463073730469
    3. '               ' → logprob: -2.378246307373047
    4. '   ' → logprob: -4.128246307373047
    5. '           ' → logprob: -4.253246307373047
    6. '    
' → logprob: -5.378246307373047
    7. ' 
' → logprob: -6.253246307373047
    8. '                
' → logprob: -6.378246307373047
    9. '\n' → logprob: -6.503246307373047
    10. '        
' → logprob: -6.503246307373047

Token 457: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001435589394532144
    2. 'return' (adapté à ' return') → logprob: -7.12643575668335
    3. '       ' → logprob: -8.001435279846191
    4. '
' → logprob: -8.376435279846191
    5. ' return' → logprob: -9.876435279846191
    6. '           ' → logprob: -11.751435279846191
    7. '	return' → logprob: -13.251435279846191
    8. 'True' → logprob: -13.376435279846191
    9. '    
' → logprob: -14.001435279846191
    10. '               ' → logprob: -14.001435279846191

Token 458: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. '(True' → logprob: -18.01104736328125
    4. '=True' → logprob: -20.01104736328125
    5. '   ' → logprob: -20.13604736328125
    6. 'False' → logprob: -21.63604736328125
    7. '
' → logprob: -23.01104736328125
    8. 'true' → logprob: -23.76104736328125
    9. '_true' → logprob: -24.51104736328125
    10. 'Tr' → logprob: -24.51104736328125

Token 459: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7057358622550964
    2. '    
' → logprob: -1.2057359218597412
    3. '
' → logprob: -1.5807359218597412
    4. '  
' → logprob: -7.705735683441162
    5. '```' → logprob: -9.08073616027832
    6. '<|end|>' → logprob: -9.33073616027832
    7. '        
' → logprob: -9.70573616027832
    8. '   
' → logprob: -9.83073616027832
    9. '

' → logprob: -9.95573616027832
    10. '	
' → logprob: -10.08073616027832

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044391561299562454
    2. 'start' → logprob: -3.544391632080078
    3. '    
' → logprob: -4.544391632080078
    4. '```' → logprob: -6.669391632080078
    5. 'r' → logprob: -7.294391632080078
    6. ' start' → logprob: -7.419391632080078
    7. '   
' → logprob: -7.794391632080078
    8. 's' → logprob: -8.294391632080078
    9. '  
' → logprob: -9.044391632080078
    10. ' 
' → logprob: -9.419391632080078

Token 461: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.16122326254844666
    2. 'start' → logprob: -1.911223292350769
    3. 'sr' → logprob: -8.036223411560059
    4. 'row' → logprob: -8.161223411560059
    5. 'line' → logprob: -9.036223411560059
    6. 'target' → logprob: -9.536223411560059
    7. 's' → logprob: -10.286223411560059
    8. 'current' → logprob: -10.286223411560059
    9. 'for' → logprob: -10.536223411560059
    10. 'curr' → logprob: -11.036223411560059

Token 462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001138550229370594
    2. ',c' → logprob: -6.876138687133789
    3. ' ,' → logprob: -9.251138687133789
    4. 'c' → logprob: -11.876138687133789
    5. '_,' → logprob: -13.251138687133789
    6. ',
' → logprob: -15.001138687133789
    7. ',start' → logprob: -15.376138687133789
    8. '=' → logprob: -15.626138687133789
    9. ' c' → logprob: -16.25113868713379
    10. 's' → logprob: -16.87613868713379

Token 463: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002476016292348504
    2. ' c' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.37747573852539
    4. '<|end|>' → logprob: -16.87747573852539
    5. 'start' → logprob: -17.37747573852539
    6. ' ' → logprob: -17.50247573852539
    7. '  ' → logprob: -18.00247573852539
    8. '	c' → logprob: -18.12747573852539
    9. ',c' → logprob: -18.50247573852539
    10. '    ' → logprob: -18.62747573852539

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16122347116470337
    2. '=' → logprob: -1.9112234115600586
    3. ',' → logprob: -6.911223411560059
    4. ' ,' → logprob: -13.911223411560059
    5. ')' → logprob: -14.411223411560059
    6. '   ' → logprob: -16.036224365234375
    7. ' ' → logprob: -16.036224365234375
    8. '    ' → logprob: -16.661224365234375
    9. ' =
' → logprob: -16.911224365234375
    10. ')=' → logprob: -16.911224365234375

Token 465: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1602250337600708
    2. ' start' → logprob: -1.9102250337600708
    3. '   ' → logprob: -14.660224914550781
    4. '[start' → logprob: -15.160224914550781
    5. '
' → logprob: -16.78522491455078
    6. '=start' → logprob: -18.28522491455078
    7. '(start' → logprob: -18.53522491455078
    8. '	start' → logprob: -18.66022491455078
    9. ' ' → logprob: -19.16022491455078
    10. 'star' → logprob: -19.28522491455078

Token 466: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.9146995327901095e-05
    2. 'points' → logprob: -11.750019073486328
    3. '_r' → logprob: -12.625019073486328
    4. '_pts' → logprob: -13.125019073486328
    5. '_positions' → logprob: -13.375019073486328
    6. 'r' → logprob: -14.125019073486328
    7. '_p' → logprob: -14.375019073486328
    8. ',_' → logprob: -14.625019073486328
    9. ',' → logprob: -14.875019073486328
    10. 'Points' → logprob: -15.000019073486328

Token 467: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.263011578586884e-05
    2. 'idx' → logprob: -10.250042915344238
    3. '   ' → logprob: -13.375042915344238
    4. '(idx' → logprob: -13.375042915344238
    5. ' idx' → logprob: -13.750042915344238
    6. '[' → logprob: -13.750042915344238
    7. '
' → logprob: -14.250042915344238
    8. '	idx' → logprob: -15.000042915344238
    9. '```' → logprob: -15.250042915344238
    10. ' [' → logprob: -15.625042915344238

Token 468: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.315936429426074e-05
    2. ')
' → logprob: -9.875082969665527
    3. ' )' → logprob: -10.500082969665527
    4. ']' → logprob: -12.875082969665527
    5. ',' → logprob: -14.750082969665527
    6. ')]' → logprob: -15.000082969665527
    7. '   ' → logprob: -15.500082969665527
    8. '])' → logprob: -15.625082969665527
    9. '）' → logprob: -15.875082969665527
    10. ')

' → logprob: -16.625083923339844

Token 469: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21353188157081604
    2. '   ' → logprob: -1.9635318517684937
    3. 'results' → logprob: -4.463531970977783
    4. '    
' → logprob: -4.713531970977783
    5. ' 
' → logprob: -5.088531970977783
    6. 'possible' → logprob: -5.463531970977783
    7. ' for' → logprob: -5.838531970977783
    8. ' results' → logprob: -5.838531970977783
    9. '```' → logprob: -6.088531970977783
    10. ' possible' → logprob: -6.213531970977783

Token 470: ' target' (ID: 3783)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0717657282948494
    2. ' for' → logprob: -3.321765661239624
    3. 'possible' → logprob: -4.321765899658203
    4. 'lines' → logprob: -5.196765899658203
    5. 'if' → logprob: -5.696765899658203
    6. '   ' → logprob: -5.821765899658203
    7. 'results' → logprob: -6.446765899658203
    8. 'line' → logprob: -6.696765899658203
    9. 'paths' → logprob: -6.696765899658203
    10. ' lines' → logprob: -7.196765899658203

Token 471: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.004064032807946205
    2. '_s' → logprob: -6.129064083099365
    3. '=' → logprob: -7.129064083099365
    4. '_' → logprob: -7.754064083099365
    5. ' =' → logprob: -7.879064083099365
    6. '=_' → logprob: -9.629063606262207
    7. '_line' → logprob: -10.254063606262207
    8. '_value' → logprob: -10.504063606262207
    9. '_val' → logprob: -10.879063606262207
    10. '_points' → logprob: -11.129063606262207

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ',' → logprob: -14.703890800476074
    4. 's' → logprob: -16.953889846801758
    5. ' ' → logprob: -16.953889846801758
    6. '   ' → logprob: -17.078889846801758
    7. ')' → logprob: -17.953889846801758
    8. '(grid' → logprob: -18.453889846801758
    9. 'grid' → logprob: -18.703889846801758
    10. '=int' → logprob: -18.828889846801758

Token 473: ' -' (ID: 533)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.001181777217425406
    2. ' grid' → logprob: -6.751181602478027
    3. '   ' → logprob: -11.876181602478027
    4. '
' → logprob: -13.626181602478027
    5. '(grid' → logprob: -13.876181602478027
    6. 'sum' → logprob: -14.501181602478027
    7. '	grid' → logprob: -14.876181602478027
    8. '0' → logprob: -15.001181602478027
    9. ' ' → logprob: -15.376181602478027
    10. 'target' → logprob: -16.001182556152344

Token 474: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.006996439304202795
    2. '1' → logprob: -5.0069966316223145
    3. ' grid' → logprob: -8.756996154785156
    4. '(grid' → logprob: -10.006996154785156
    5. '-grid' → logprob: -10.256996154785156
    6. '-' → logprob: -11.631996154785156
    7. 'sys' → logprob: -11.756996154785156
    8. '2' → logprob: -12.631996154785156
    9. '(' → logprob: -12.756996154785156
    10. '	grid' → logprob: -13.131996154785156

Token 475: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0002649119414854795
    2. 'r' → logprob: -8.250265121459961
    3. '[' → logprob: -12.625265121459961
    4. ' r' → logprob: -15.875265121459961
    5. '	r' → logprob: -16.87526512145996
    6. '   ' → logprob: -17.00026512145996
    7. '(r' → logprob: -17.12526512145996
    8. '[u' → logprob: -17.25026512145996
    9. '[n' → logprob: -17.87526512145996
    10. '[row' → logprob: -18.00026512145996

Token 476: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004536804277449846
    2. '[r' → logprob: -5.5045366287231445
    3. '[c' → logprob: -8.004536628723145
    4. 'r' → logprob: -9.754536628723145
    5. ' ][' → logprob: -10.379536628723145
    6. ']' → logprob: -11.504536628723145
    7. '[' → logprob: -11.504536628723145
    8. 'c' → logprob: -12.629536628723145
    9. '   ' → logprob: -13.629536628723145
    10. ',' → logprob: -13.879536628723145

Token 477: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.747814349073451e-05
    2. 'r' → logprob: -11.625017166137695
    3. ' c' → logprob: -11.875017166137695
    4. '1' → logprob: -14.875017166137695
    5. '][' → logprob: -14.875017166137695
    6. ']' → logprob: -15.750017166137695
    7. ')c' → logprob: -16.250017166137695
    8. '```' → logprob: -16.250017166137695
    9. '[c' → logprob: -16.375017166137695
    10. '
' → logprob: -16.875017166137695

Token 478: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01278697606176138
    2. ']
' → logprob: -4.387786865234375
    3. ' ]' → logprob: -8.762786865234375
    4. '[' → logprob: -10.012786865234375
    5. ')' → logprob: -10.887786865234375
    6. ']

' → logprob: -11.012786865234375
    7. ']
' → logprob: -11.512786865234375
    8. ' ]
' → logprob: -12.262786865234375
    9. '   ' → logprob: -12.262786865234375
    10. '[
' → logprob: -12.512786865234375

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19726009666919708
    2. '
' → logprob: -2.3222601413726807
    3. '<|end|>' → logprob: -3.5722601413726807
    4. '    
' → logprob: -3.9472601413726807
    5. ' 
' → logprob: -4.322259902954102
    6. ':' → logprob: -5.197259902954102
    7. ')' → logprob: -5.697259902954102
    8. '  
' → logprob: -5.947259902954102
    9. ' ' → logprob: -6.447259902954102
    10. '   
' → logprob: -6.822259902954102

Token 480: ' #' (ID: 1069)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.9769012928009033
    2. ' for' → logprob: -1.3519012928009033
    3. '   ' → logprob: -2.1019012928009033
    4. 'for' → logprob: -2.4769012928009033
    5. ' possible' → logprob: -3.4769012928009033
    6. 'lines' → logprob: -3.6019012928009033
    7. ' line' → logprob: -4.351901054382324
    8. ' paths' → logprob: -4.351901054382324
    9. 'possible' → logprob: -4.476901054382324
    10. ' results' → logprob: -4.726901054382324

Token 481: ' Get' (ID: 2942)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6548587083816528
    2. 'lines' → logprob: -1.1548587083816528
    3. 'line' → logprob: -2.6548585891723633
    4. ' for' → logprob: -3.5298585891723633
    5. ' lines' → logprob: -3.9048585891723633
    6. 'paths' → logprob: -4.529858589172363
    7. 'c' → logprob: -4.779858589172363
    8. 'options' → logprob: -5.404858589172363
    9. 'possible' → logprob: -5.529858589172363
    10. 's' → logprob: -5.529858589172363

Token 482: ' all' (ID: 722)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5776051878929138
    2. ' get' → logprob: -0.8276051878929138
    3. '_line' → logprob: -6.577605247497559
    4. ' lines' → logprob: -9.827605247497559
    5. '_lines' → logprob: -10.202605247497559
    6. ' possible' → logprob: -10.702605247497559
    7. 'lines' → logprob: -10.952605247497559
    8. 's' → logprob: -11.077605247497559
    9. 'possible' → logprob: -11.077605247497559
    10. 'next' → logprob: -11.202605247497559

Token 483: ' candidate' (ID: 17098)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8712027668952942
    2. 'line' → logprob: -1.2462027072906494
    3. 'paths' → logprob: -2.4962027072906494
    4. ' lines' → logprob: -2.6212027072906494
    5. 'possible' → logprob: -2.9962027072906494
    6. ' possible' → logprob: -3.6212027072906494
    7. 'lines' → logprob: -3.7462027072906494
    8. ' paths' → logprob: -3.8712027072906494
    9. '_line' → logprob: -4.3712029457092285
    10. '   ' → logprob: -6.4962029457092285

Token 484: ' line' (ID: 2543)
  Prédit: '_paths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_paths' → logprob: -0.3945332169532776
    2. '_lines' → logprob: -2.019533157348633
    3. 's' → logprob: -2.144533157348633
    4. '_line' → logprob: -3.644533157348633
    5. 'paths' → logprob: -4.144533157348633
    6. ' lines' → logprob: -4.394533157348633
    7. ' paths' → logprob: -4.394533157348633
    8. ' line' → logprob: -5.894533157348633
    9. 'lines' → logprob: -6.269533157348633
    10. '_s' → logprob: -6.394533157348633

Token 485: ' paths' (ID: 23373)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006417520809918642
    2. '_s' → logprob: -5.631417751312256
    3. '_paths' → logprob: -6.131417751312256
    4. 'paths' → logprob: -8.006417274475098
    5. ' paths' → logprob: -9.131417274475098
    6. '_positions' → logprob: -10.131417274475098
    7. ' s' → logprob: -10.381417274475098
    8. '_segments' → logprob: -10.631417274475098
    9. '_' → logprob: -11.006417274475098
    10. '_results' → logprob: -11.256417274475098

Token 486: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08418864011764526
    2. ' candidates' → logprob: -2.95918869972229
    3. '
' → logprob: -5.084188461303711
    4. ' lines' → logprob: -5.459188461303711
    5. '    
' → logprob: -5.584188461303711
    6. 'candidate' → logprob: -6.084188461303711
    7. ' paths' → logprob: -6.209188461303711
    8. 's' → logprob: -6.459188461303711
    9. ' for' → logprob: -6.584188461303711
    10. ' candidate' → logprob: -6.709188461303711

Token 487: ' this' (ID: 495)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.028123503550887108
    2. ' grid' → logprob: -4.153123378753662
    3. 'get' → logprob: -5.278123378753662
    4. '(grid' → logprob: -5.403123378753662
    5. 'r' → logprob: -6.403123378753662
    6. '(r' → logprob: -8.02812385559082
    7. ' get' → logprob: -8.65312385559082
    8. ' r' → logprob: -9.77812385559082
    9. 'the' → logprob: -10.40312385559082
    10. '   ' → logprob: -10.40312385559082

Token 488: ' start' (ID: 1604)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.8818172216415405
    2. 'start' → logprob: -1.6318172216415405
    3. '(r' → logprob: -1.6318172216415405
    4. 'r' → logprob: -2.63181734085083
    5. ' grid' → logprob: -3.00681734085083
    6. '(grid' → logprob: -3.88181734085083
    7. ' (' → logprob: -4.38181734085083
    8. ' start' → logprob: -4.50681734085083
    9. 'target' → logprob: -4.88181734085083
    10. 'def' → logprob: -4.88181734085083

Token 489: ' point' (ID: 2438)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.445122092962265
    2. '_r' → logprob: -1.9451221227645874
    3. 'r' → logprob: -3.070122003555298
    4. '   ' → logprob: -3.070122003555298
    5. '_points' → logprob: -3.195122003555298
    6. 's' → logprob: -3.445122003555298
    7. '_s' → logprob: -3.570122003555298
    8. ',' → logprob: -5.570122241973877
    9. '(grid' → logprob: -5.570122241973877
    10. '=' → logprob: -5.820122241973877

Token 490: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17622292041778564
    2. '
' → logprob: -2.051222801208496
    3. ' candidates' → logprob: -4.301222801208496
    4. '    
' → logprob: -5.051222801208496
    5. 'results' → logprob: -5.676222801208496
    6. ' lines' → logprob: -5.676222801208496
    7. ' results' → logprob: -6.426222801208496
    8. '  
' → logprob: -6.676222801208496
    9. ' for' → logprob: -7.176222801208496
    10. '_candidates' → logprob: -8.051222801208496

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07604580372571945
    2. ' lines' → logprob: -3.7010457515716553
    3. ' candidates' → logprob: -3.8260457515716553
    4. '
' → logprob: -4.951045989990234
    5. ' paths' → logprob: -5.576045989990234
    6. 'paths' → logprob: -5.826045989990234
    7. ' for' → logprob: -6.076045989990234
    8. '    
' → logprob: -6.201045989990234
    9. 'results' → logprob: -6.326045989990234
    10. 'candidate' → logprob: -6.576045989990234

Token 492: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6776758432388306
    2. ' candidates' → logprob: -1.0526758432388306
    3. 'paths' → logprob: -3.427675724029541
    4. ' lines' → logprob: -3.677675724029541
    5. ' paths' → logprob: -3.802675724029541
    6. '   ' → logprob: -3.802675724029541
    7. 'lines' → logprob: -4.177675724029541
    8. 'line' → logprob: -4.677675724029541
    9. ' line' → logprob: -4.802675724029541
    10. 'candidate' → logprob: -5.552675724029541

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047935113310814
    2. '=' → logprob: -4.511047840118408
    3. ' ' → logprob: -18.01104736328125
    4. ',' → logprob: -18.13604736328125
    5. '=get' → logprob: -18.26104736328125
    6. ' =
' → logprob: -18.63604736328125
    7. 's' → logprob: -18.76104736328125
    8. '   ' → logprob: -18.76104736328125
    9. ')' → logprob: -19.13604736328125
    10. '＝' → logprob: -19.13604736328125

Token 494: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.023246292024850845
    2. ' get' → logprob: -3.7732462882995605
    3. '[get' → logprob: -14.773246765136719
    4. '(get' → logprob: -15.398246765136719
    5. '   ' → logprob: -16.39824676513672
    6. '	get' → logprob: -16.64824676513672
    7. '.get' → logprob: -16.77324676513672
    8. '=get' → logprob: -16.77324676513672
    9. ' ' → logprob: -17.27324676513672
    10. '[]' → logprob: -17.64824676513672

Token 495: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.981667537620524e-06
    2. 'line' → logprob: -13.500001907348633
    3. '_lines' → logprob: -15.375001907348633
    4. '_LINE' → logprob: -15.625001907348633
    5. '(line' → logprob: -16.875001907348633
    6. '```' → logprob: -17.000001907348633
    7. 'Line' → logprob: -17.500001907348633
    8. ' line' → logprob: -17.625001907348633
    9. '_' → logprob: -17.750001907348633
    10. '_l' → logprob: -18.000001907348633

Token 496: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.6405310816480778e-05
    2. '_sum' → logprob: -11.750016212463379
    3. '_candidates' → logprob: -12.375016212463379
    4. '_' → logprob: -14.000016212463379
    5. '_line' → logprob: -14.250016212463379
    6. '_results' → logprob: -14.250016212463379
    7. 's' → logprob: -14.250016212463379
    8. '_c' → logprob: -14.875016212463379
    9. '(_' → logprob: -15.125016212463379
    10. '```' → logprob: -15.750016212463379

Token 497: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.00045367187703959644
    2. 'um' → logprob: -8.12545394897461
    3. '_' → logprob: -9.37545394897461
    4. 's' → logprob: -10.62545394897461
    5. '_s' → logprob: -12.00045394897461
    6. '```' → logprob: -12.12545394897461
    7. 'u' → logprob: -12.62545394897461
    8. '[' → logprob: -12.75045394897461
    9. ' ums' → logprob: -13.00045394897461
    10. 'umsum' → logprob: -13.12545394897461

Token 498: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -2.2246291337069124e-05
    2. '(' → logprob: -10.875021934509277
    3. '(
' → logprob: -12.750021934509277
    4. ' (' → logprob: -15.875021934509277
    5. '(gr' → logprob: -16.625022888183594
    6. '```' → logprob: -17.375022888183594
    7. '(g' → logprob: -17.875022888183594
    8. '(Grid' → logprob: -18.000022888183594
    9. '(

' → logprob: -18.125022888183594
    10. '(graph' → logprob: -18.250022888183594

Token 499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002009887248277664
    2. ',n' → logprob: -6.252009868621826
    3. ',
' → logprob: -10.377010345458984
    4. ' ,' → logprob: -10.627010345458984
    5. '(grid' → logprob: -11.127010345458984
    6. '(n' → logprob: -12.127010345458984
    7. '(' → logprob: -13.252010345458984
    8. ')' → logprob: -13.877010345458984
    9. '   ' → logprob: -14.127010345458984
    10. ',r' → logprob: -14.627010345458984

Token 500: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931473612785339
    2. ' n' → logprob: -0.6931473612785339
    3. ')n' → logprob: -17.068147659301758
    4. '   ' → logprob: -17.193147659301758
    5. '	n' → logprob: -17.443147659301758
    6. ')' → logprob: -17.568147659301758
    7. '
' → logprob: -17.818147659301758
    8. ',n' → logprob: -18.068147659301758
    9. '_n' → logprob: -18.068147659301758
    10. ' ' → logprob: -18.693147659301758

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ',start' → logprob: -13.87500286102295
    3. ' ,' → logprob: -14.25000286102295
    4. ',r' → logprob: -14.37500286102295
    5. ',
' → logprob: -15.75000286102295
    6. '   ' → logprob: -16.000001907348633
    7. ')' → logprob: -18.250001907348633
    8. '```' → logprob: -19.000001907348633
    9. ',

' → logprob: -19.250001907348633
    10. 'start' → logprob: -19.500001907348633

Token 502: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.493430894101039e-05
    2. ' r' → logprob: -9.500075340270996
    3. 'start' → logprob: -19.25007438659668
    4. '   ' → logprob: -19.75007438659668
    5. '	r' → logprob: -19.75007438659668
    6. '_r' → logprob: -20.75007438659668
    7. '(r' → logprob: -20.87507438659668
    8. '
' → logprob: -20.87507438659668
    9. ')' → logprob: -21.37507438659668
    10. '```' → logprob: -22.25007438659668

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015085970517247915
    2. ',c' → logprob: -9.125150680541992
    3. ' ,' → logprob: -10.125150680541992
    4. ',
' → logprob: -13.500150680541992
    5. '   ' → logprob: -15.625150680541992
    6. 'c' → logprob: -16.000150680541992
    7. '+' → logprob: -17.000150680541992
    8. ')' → logprob: -17.250150680541992
    9. ',

' → logprob: -17.500150680541992
    10. ' c' → logprob: -17.625150680541992

Token 504: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00018006093159783632
    2. ' c' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.2501802444458
    4. '
' → logprob: -16.125179290771484
    5. ' ' → logprob: -17.250179290771484
    6. '    ' → logprob: -17.500179290771484
    7. ')c' → logprob: -17.625179290771484
    8. 'start' → logprob: -17.875179290771484
    9. '<|end|>' → logprob: -18.375179290771484
    10. '```' → logprob: -18.375179290771484

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.500006675720215
    3. ')' → logprob: -13.750006675720215
    4. '   ' → logprob: -13.875006675720215
    5. 'used' → logprob: -15.250006675720215
    6. ',
' → logprob: -15.625006675720215
    7. ',start' → logprob: -16.1250057220459
    8. ',

' → logprob: -17.1250057220459
    9. ',target' → logprob: -17.1250057220459
    10. '```' → logprob: -17.7500057220459

Token 506: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0009114635176956654
    2. ' target' → logprob: -7.000911235809326
    3. '(target' → logprob: -17.500911712646484
    4. '-target' → logprob: -18.750911712646484
    5. 't' → logprob: -19.000911712646484
    6. '[target' → logprob: -19.125911712646484
    7. '
' → logprob: -19.375911712646484
    8. '   ' → logprob: -19.500911712646484
    9. '	target' → logprob: -19.500911712646484
    10. 'abs' → logprob: -19.875911712646484

Token 507: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.7432603272027336e-06
    2. 'sum' → logprob: -13.500001907348633
    3. ')' → logprob: -15.875001907348633
    4. '_s' → logprob: -16.375001907348633
    5. '\' → logprob: -17.625001907348633
    6. ')_' → logprob: -18.000001907348633
    7. ' _' → logprob: -18.500001907348633
    8. '_' → logprob: -18.750001907348633
    9. ''_' → logprob: -18.750001907348633
    10. '```' → logprob: -19.250001907348633

Token 508: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.08944896562025e-05
    2. ',' → logprob: -9.875081062316895
    3. ')
' → logprob: -11.000081062316895
    4. '   ' → logprob: -11.375081062316895
    5. ' )' → logprob: -14.375081062316895
    6. ')

' → logprob: -15.625081062316895
    7. ',)' → logprob: -15.750081062316895
    8. '))' → logprob: -16.375080108642578
    9. '[' → logprob: -16.500080108642578
    10. '),' → logprob: -17.000080108642578

Token 509: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0019286326132714748
    2. ' used' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.376928329467773
    4. ' ' → logprob: -19.001928329467773
    5. '.used' → logprob: -19.876928329467773
    6. 'using' → logprob: -20.626928329467773
    7. '-used' → logprob: -20.876928329467773
    8. '```' → logprob: -21.126928329467773
    9. '_used' → logprob: -21.251928329467773
    10. 'unused' → logprob: -21.251928329467773

Token 510: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ')
' → logprob: -12.000007629394531
    3. '   ' → logprob: -13.375007629394531
    4. ' )' → logprob: -15.500007629394531
    5. ')

' → logprob: -17.37500762939453
    6. '))' → logprob: -18.37500762939453
    7. ')`' → logprob: -19.00000762939453
    8. '),' → logprob: -19.37500762939453
    9. ')
' → logprob: -19.50000762939453
    10. ').' → logprob: -19.50000762939453

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04882865026593208
    2. '
' → logprob: -3.673828601837158
    3. ' for' → logprob: -4.173828601837158
    4. '    
' → logprob: -6.048828601837158
    5. '```' → logprob: -6.298828601837158
    6. 'for' → logprob: -6.798828601837158
    7. '  
' → logprob: -7.048828601837158
    8. ' 
' → logprob: -8.298829078674316
    9. '<|end|>' → logprob: -8.298829078674316
    10. '\n' → logprob: -10.173829078674316

Token 512: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22517861425876617
    2. ' for' → logprob: -1.725178599357605
    3. '
' → logprob: -4.3501787185668945
    4. '    
' → logprob: -5.7251787185668945
    5. 'for' → logprob: -5.7251787185668945
    6. ' 
' → logprob: -5.8501787185668945
    7. '```' → logprob: -7.2251787185668945
    8. '  
' → logprob: -8.100178718566895
    9. ' ' → logprob: -10.600178718566895
    10. '	for' → logprob: -11.100178718566895

Token 513: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5785531997680664
    2. 'for' → logprob: -0.8285531997680664
    3. '   ' → logprob: -5.953553199768066
    4. '
' → logprob: -11.453553199768066
    5. '	for' → logprob: -14.203553199768066
    6. ' ' → logprob: -14.328553199768066
    7. '    
' → logprob: -14.578553199768066
    8. '```' → logprob: -14.578553199768066
    9. 'if' → logprob: -14.953553199768066
    10. ' 
' → logprob: -15.578553199768066

Token 514: ' each' (ID: 2454)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.410467505455017
    2. 'path' → logprob: -1.535467505455017
    3. ' candidate' → logprob: -1.660467505455017
    4. 'cand' → logprob: -1.910467505455017
    5. ' path' → logprob: -2.1604676246643066
    6. ' line' → logprob: -3.4104676246643066
    7. ' cand' → logprob: -3.6604676246643066
    8. 'line' → logprob: -3.7854676246643066
    9. 'can' → logprob: -5.660467624664307
    10. 'c' → logprob: -6.535467624664307

Token 515: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.5774040222167969
    2. 'candidate' → logprob: -0.8274040222167969
    3. 'cand' → logprob: -7.702404022216797
    4. ' path' → logprob: -7.827404022216797
    5. ' candidates' → logprob: -8.202404022216797
    6. 'path' → logprob: -8.827404022216797
    7. '   ' → logprob: -9.827404022216797
    8. ' cand' → logprob: -10.077404022216797
    9. 'c' → logprob: -10.077404022216797
    10. ' line' → logprob: -10.452404022216797

Token 516: ',' (ID: 11)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -1.5412273406982422
    2. 'candidate' → logprob: -1.5412273406982422
    3. ' candidate' → logprob: -1.9162273406982422
    4. ' line' → logprob: -1.9162273406982422
    5. ' in' → logprob: -2.041227340698242
    6. ':' → logprob: -2.541227340698242
    7. '   ' → logprob: -3.791227340698242
    8. 'path' → logprob: -4.166227340698242
    9. '_candidate' → logprob: -4.791227340698242
    10. ':
' → logprob: -5.041227340698242

Token 517: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014111561700701714
    2. '   ' → logprob: -4.764111518859863
    3. 'for' → logprob: -5.764111518859863
    4. '       ' → logprob: -6.264111518859863
    5. '<|end|>' → logprob: -9.014111518859863
    6. '
' → logprob: -9.389111518859863
    7. ' 
' → logprob: -10.014111518859863
    8. '        
' → logprob: -10.264111518859863
    9. ' if' → logprob: -10.264111518859863
    10. '    
' → logprob: -10.264111518859863

Token 518: ' placing' (ID: 33268)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2933465540409088
    2. ':
' → logprob: -1.7933465242385864
    3. ':' → logprob: -2.793346643447876
    4. 'path' → logprob: -5.168346405029297
    5. '```' → logprob: -5.168346405029297
    6. ' line' → logprob: -5.293346405029297
    7. ' path' → logprob: -5.543346405029297
    8. '       ' → logprob: -6.293346405029297
    9. ' placing' → logprob: -6.418346405029297
    10. 'placing' → logprob: -6.793346405029297

Token 519: ' it' (ID: 480)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8663648366928101
    2. '   ' → logprob: -1.11636483669281
    3. ' path' → logprob: -1.74136483669281
    4. 'path' → logprob: -3.6163649559020996
    5. '
' → logprob: -4.1163649559021
    6. '    
' → logprob: -4.8663649559021
    7. 'candidate' → logprob: -5.3663649559021
    8. ' candidate' → logprob: -5.7413649559021
    9. '```' → logprob: -5.7413649559021
    10. ' used' → logprob: -5.8663649559021

Token 520: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3397786021232605
    2. ':' → logprob: -1.5897786617279053
    3. ':
' → logprob: -2.7147786617279053
    4. ' and' → logprob: -5.089778423309326
    5. ',' → logprob: -5.589778423309326
    6. ' for' → logprob: -5.839778423309326
    7. '```' → logprob: -5.964778423309326
    8. '       ' → logprob: -6.714778423309326
    9. ' with' → logprob: -8.464778900146484
    10. '    
' → logprob: -8.839778900146484

Token 521: ' proceed' (ID: 18988)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6729138493537903
    2. ' used' → logprob: -1.2979137897491455
    3. '   ' → logprob: -2.2979137897491455
    4. '
' → logprob: -3.1729137897491455
    5. '```' → logprob: -3.9229137897491455
    6. '<|end|>' → logprob: -3.9229137897491455
    7. 'for' → logprob: -4.672914028167725
    8. ' 
' → logprob: -5.047914028167725
    9. 'used' → logprob: -5.047914028167725
    10. ' using' → logprob: -6.547914028167725

Token 522: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005264356732368469
    2. '    
' → logprob: -5.7552642822265625
    3. '       ' → logprob: -6.5052642822265625
    4. ':' → logprob: -8.880264282226562
    5. ' for' → logprob: -9.005264282226562
    6. '
' → logprob: -9.255264282226562
    7. ' with' → logprob: -9.505264282226562
    8. '        
' → logprob: -10.255264282226562
    9. ':
' → logprob: -10.505264282226562
    10. '<|end|>' → logprob: -10.880264282226562

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008348815608769655
    2. ' for' → logprob: -7.625834941864014
    3. '    
' → logprob: -8.750834465026855
    4. '       ' → logprob: -9.250834465026855
    5. '
' → logprob: -10.375834465026855
    6. '  
' → logprob: -11.000834465026855
    7. '```' → logprob: -11.375834465026855
    8. 'for' → logprob: -11.625834465026855
    9. '<|end|>' → logprob: -11.750834465026855
    10. '   ' → logprob: -12.750834465026855

Token 524: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01859048381447792
    2. ' for' → logprob: -4.518590450286865
    3. '    
' → logprob: -5.393590450286865
    4. ' 
' → logprob: -6.518590450286865
    5. '
' → logprob: -7.518590450286865
    6. '       ' → logprob: -8.268590927124023
    7. 'for' (adapté à ' for') → logprob: -8.393590927124023
    8. '  
' → logprob: -8.393590927124023
    9. '```' → logprob: -10.143590927124023
    10. '   
' → logprob: -10.268590927124023

Token 525: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.016710076481103897
    2. ' path' → logprob: -4.14171028137207
    3. 'line' → logprob: -7.89171028137207
    4. 'candidate' → logprob: -8.39171028137207
    5. ' line' → logprob: -9.89171028137207
    6. ' candidate' → logprob: -11.51671028137207
    7. 'cand' → logprob: -11.89171028137207
    8. '   ' → logprob: -12.51671028137207
    9. 'paths' → logprob: -14.39171028137207
    10. 'pat' → logprob: -14.51671028137207

Token 526: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001085566938854754
    2. 'in' → logprob: -7.2510857582092285
    3. ':' → logprob: -8.12608528137207
    4. '<|end|>' → logprob: -10.37608528137207
    5. '   ' → logprob: -11.25108528137207
    6. '_in' → logprob: -11.25108528137207
    7. '_' → logprob: -12.75108528137207
    8. '	in' → logprob: -13.00108528137207
    9. '<|end|>' → logprob: -13.00108528137207
    10. ')' → logprob: -13.00108528137207

Token 527: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.025421956554055214
    2. ' candidates' → logprob: -3.7754218578338623
    3. 'path' → logprob: -6.900422096252441
    4. 'get' → logprob: -7.275422096252441
    5. '   ' → logprob: -9.025422096252441
    6. 'results' → logprob: -9.400422096252441
    7. ' path' → logprob: -9.900422096252441
    8. 'paths' → logprob: -10.025422096252441
    9. 'candidate' → logprob: -10.150422096252441
    10. ' get' → logprob: -10.150422096252441

Token 528: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3149700164794922
    2. ':
' → logprob: -1.3149700164794922
    3. '       ' → logprob: -6.689970016479492
    4. '   ' → logprob: -7.939970016479492
    5. '):
' → logprob: -9.564970016479492
    6. '<|end|>' → logprob: -11.814970016479492
    7. ':
' → logprob: -11.939970016479492
    8. '):' → logprob: -12.189970016479492
    9. ',' → logprob: -12.314970016479492
    10. ':

' → logprob: -12.564970016479492

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000601169012952596
    2. '   ' → logprob: -8.750600814819336
    3. '
' → logprob: -8.875600814819336
    4. '        
' → logprob: -9.000600814819336
    5. '<|end|>' → logprob: -10.250600814819336
    6. ':
' → logprob: -10.375600814819336
    7. ':' → logprob: -10.500600814819336
    8. '```' → logprob: -10.875600814819336
    9. '    
' → logprob: -11.250600814819336
    10. ',' → logprob: -11.500600814819336

Token 530: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10875573754310608
    2. '       ' → logprob: -2.4837558269500732
    3. 'for' → logprob: -3.9837558269500732
    4. '           ' → logprob: -7.483755588531494
    5. ' valid' → logprob: -8.483756065368652
    6. ' can' → logprob: -9.108756065368652
    7. '   ' → logprob: -10.108756065368652
    8. ' #' → logprob: -10.483756065368652
    9. '```' → logprob: -11.108756065368652
    10. '#' (adapté à ' #') → logprob: -11.858756065368652

Token 531: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2145881950855255
    2. 'valid' → logprob: -2.464588165283203
    3. 'can' → logprob: -3.214588165283203
    4. '       ' → logprob: -3.464588165283203
    5. ' can' → logprob: -4.214588165283203
    6. ' for' → logprob: -4.464588165283203
    7. ' valid' → logprob: -5.464588165283203
    8. 'flag' → logprob: -5.964588165283203
    9. '   ' → logprob: -6.714588165283203
    10. '#' → logprob: -6.839588165283203

Token 532: ' if' (ID: 538)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.039891209453344345
    2. 'all' → logprob: -3.789891242980957
    3. ' if' → logprob: -4.414891242980957
    4. ' any' → logprob: -5.789891242980957
    5. 'if' → logprob: -7.039891242980957
    6. ' valid' → logprob: -8.664891242980957
    7. '       ' → logprob: -9.164891242980957
    8. ' can' → logprob: -9.914891242980957
    9. ' not' → logprob: -10.164891242980957
    10. 'any' → logprob: -10.539891242980957

Token 533: ' path' (ID: 3104)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.4949713349342346
    2. 'all' → logprob: -0.9949713349342346
    3. ' any' → logprob: -4.24497127532959
    4. ' all' → logprob: -5.11997127532959
    5. 'not' → logprob: -7.99497127532959
    6. ' not' → logprob: -10.74497127532959
    7. '   ' → logprob: -12.24497127532959
    8. ' ' → logprob: -14.36997127532959
    9. '```' → logprob: -14.86997127532959
    10. '	all' → logprob: -15.61997127532959

Token 534: ' passes' (ID: 29169)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6249173879623413
    2. 'is' → logprob: -1.7499173879623413
    3. ' cells' → logprob: -1.9999173879623413
    4. 'cells' → logprob: -2.624917507171631
    5. 'can' → logprob: -4.374917507171631
    6. '[' → logprob: -4.374917507171631
    7. ' can' → logprob: -4.374917507171631
    8. '   ' → logprob: -4.499917507171631
    9. '       ' → logprob: -5.124917507171631
    10. ' all' → logprob: -5.249917507171631

Token 535: ' through' (ID: 1819)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6994701623916626
    2. '           ' → logprob: -1.9494701623916626
    3. ' all' → logprob: -1.9494701623916626
    4. '       ' → logprob: -2.574470043182373
    5. ' any' → logprob: -3.199470043182373
    6. 'through' → logprob: -3.199470043182373
    7. 'any' → logprob: -4.074470043182373
    8. 'for' → logprob: -4.574470043182373
    9. ' through' → logprob: -4.574470043182373
    10. 'not' → logprob: -4.574470043182373

Token 536: ' other' (ID: 1273)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.03000039793550968
    2. 'any' → logprob: -3.5300004482269287
    3. ' used' → logprob: -8.905000686645508
    4. '   ' → logprob: -10.155000686645508
    5. 'used' → logprob: -10.280000686645508
    6. '       ' → logprob: -11.280000686645508
    7. ' all' → logprob: -11.780000686645508
    8. '           ' → logprob: -11.905000686645508
    9. ' cells' → logprob: -12.280000686645508
    10. 'all' → logprob: -13.530000686645508

Token 537: ' start' (ID: 1604)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.4597984552383423
    2. 'start' → logprob: -1.4597984552383423
    3. ' cells' → logprob: -2.0847983360290527
    4. ' used' → logprob: -2.3347983360290527
    5. 'cells' → logprob: -2.3347983360290527
    6. '[start' → logprob: -3.0847983360290527
    7. 'r' → logprob: -3.3347983360290527
    8. 'points' → logprob: -4.334798336029053
    9. '
' → logprob: -4.459798336029053
    10. ' start' → logprob: -4.459798336029053

Token 538: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0033475093077868223
    2. '_' → logprob: -6.503347396850586
    3. '_r' → logprob: -7.378347396850586
    4. 'points' → logprob: -7.628347396850586
    5. ' points' → logprob: -9.128347396850586
    6. '       ' → logprob: -9.253347396850586
    7. '   ' → logprob: -9.253347396850586
    8. '_point' → logprob: -9.378347396850586
    9. '_positions' → logprob: -9.628347396850586
    10. '_cells' → logprob: -9.753347396850586

Token 539: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5590810775756836
    2. '       ' → logprob: -1.0590810775756836
    3. ':' → logprob: -3.5590810775756836
    4. ' or' → logprob: -3.6840810775756836
    5. 'and' → logprob: -4.559081077575684
    6. ':
' → logprob: -5.184081077575684
    7. ' if' → logprob: -5.684081077575684
    8. '   ' → logprob: -6.434081077575684
    9. '
' → logprob: -6.434081077575684
    10. '           ' → logprob: -6.559081077575684

Token 540: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5818490386009216
    2. ' if' → logprob: -1.9568490982055664
    3. ' and' → logprob: -2.0818490982055664
    4. ':' → logprob: -2.2068490982055664
    5. ':
' → logprob: -3.9568490982055664
    6. '<|end|>' → logprob: -4.081849098205566
    7. ' or' → logprob: -4.706849098205566
    8. '
' → logprob: -5.831849098205566
    9. '           ' → logprob: -5.956849098205566
    10. '   ' → logprob: -6.331849098205566

Token 541: ' start' (ID: 1604)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.268653929233551
    2. '       ' → logprob: -1.6436538696289062
    3. '           ' → logprob: -4.143653869628906
    4. ' skip' → logprob: -5.018653869628906
    5. ' valid' → logprob: -5.768653869628906
    6. 'if' → logprob: -5.768653869628906
    7. '
' → logprob: -5.893653869628906
    8. ' ok' → logprob: -6.143653869628906
    9. ' continue' → logprob: -6.518653869628906
    10. ' pass' → logprob: -7.018653869628906

Token 542: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.06088744103908539
    2. '_' → logprob: -3.310887336730957
    3. 'points' → logprob: -5.185887336730957
    4. '_positions' → logprob: -5.435887336730957
    5. '_r' → logprob: -5.685887336730957
    6. '_pts' → logprob: -5.810887336730957
    7. '_point' → logprob: -6.060887336730957
    8. 'for' → logprob: -7.435887336730957
    9. '_cells' → logprob: -7.435887336730957
    10. ' points' → logprob: -7.560887336730957

Token 543: '_count' (ID: 7536)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.6126508712768555
    2. '[idx' → logprob: -0.9876508712768555
    3. '_idx' → logprob: -3.4876508712768555
    4. '_in' → logprob: -4.1126508712768555
    5. '_idxs' → logprob: -4.6126508712768555
    6. ' =' → logprob: -5.9876508712768555
    7. '_indices' → logprob: -5.9876508712768555
    8. ')' → logprob: -6.1126508712768555
    9. '_cont' → logprob: -6.3626508712768555
    10. '_count' → logprob: -6.3626508712768555

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25221601128578186
    2. '=' → logprob: -1.5022159814834595
    3. ')' → logprob: -9.502216339111328
    4. '   ' → logprob: -9.627216339111328
    5. '>' → logprob: -11.002216339111328
    6. ' ' → logprob: -11.127216339111328
    7. ' >' → logprob: -11.377216339111328
    8. 's' → logprob: -11.502216339111328
    9. ',' → logprob: -11.752216339111328
    10. ':' → logprob: -11.752216339111328

Token 545: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31456905603408813
    2. 'sum' → logprob: -1.3145689964294434
    3. ' sum' → logprob: -7.439568996429443
    4. 'len' → logprob: -8.064569473266602
    5. '{' → logprob: -9.189569473266602
    6. '1' → logprob: -9.314569473266602
    7. ' ' → logprob: -9.439569473266602
    8. '{}' → logprob: -10.064569473266602
    9. '{}
' → logprob: -10.564569473266602
    10. '   ' → logprob: -10.814569473266602

Token 546: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3139268755912781
    2. '0' → logprob: -1.3139269351959229
    3. '{' → logprob: -7.688926696777344
    4. 'len' → logprob: -8.813926696777344
    5. ' sum' → logprob: -10.563926696777344
    6. '{
' → logprob: -11.438926696777344
    7. '{}
' → logprob: -12.438926696777344
    8. '1' → logprob: -12.563926696777344
    9. '{}' → logprob: -12.813926696777344
    10. '[' → logprob: -13.188926696777344

Token 547: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5729633569717407
    2. '       ' → logprob: -1.4479633569717407
    3. 'for' → logprob: -1.8229633569717407
    4. '
' → logprob: -3.947963237762451
    5. '<|end|>' → logprob: -5.072963237762451
    6. ' in' → logprob: -5.197963237762451
    7. '        
' → logprob: -5.697963237762451
    8. ' 
' → logprob: -6.322963237762451
    9. ' ' → logprob: -7.322963237762451
    10. '        ' → logprob: -7.572963237762451

Token 548: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5743945837020874
    2. '       ' → logprob: -1.4493945837020874
    3. 'for' → logprob: -1.6993945837020874
    4. '
' → logprob: -4.199394702911377
    5. '<|end|>' → logprob: -6.824394702911377
    6. '        
' → logprob: -7.324394702911377
    7. ' 
' → logprob: -7.699394702911377
    8. ' ' → logprob: -7.824394702911377
    9. ' if' → logprob: -8.074394226074219
    10. ' in' → logprob: -8.199394226074219

Token 549: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2519741952419281
    2. ' for' → logprob: -1.5019742250442505
    3. '       ' → logprob: -10.126974105834961
    4. '
' → logprob: -12.376974105834961
    5. '        
' → logprob: -15.376974105834961
    6. ' 
' → logprob: -15.876974105834961
    7. '	for' → logprob: -16.00197410583496
    8. '```' → logprob: -16.00197410583496
    9. '        ' → logprob: -16.75197410583496
    10. 'if' → logprob: -16.87697410583496

Token 550: ' rr' (ID: 54129)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.702526330947876
    2. '(sr' → logprob: -2.077526330947876
    3. '(pr' → logprob: -2.077526330947876
    4. 'sr' → logprob: -2.202526330947876
    5. '(x' → logprob: -3.202526330947876
    6. 'pos' → logprob: -3.827526330947876
    7. ' (' → logprob: -4.077526092529297
    8. 'x' → logprob: -4.452526092529297
    9. '(pos' → logprob: -4.577526092529297
    10. ' pr' → logprob: -5.077526092529297

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11712239682674408
    2. ',c' → logprob: -2.2421224117279053
    3. ' in' → logprob: -6.367122173309326
    4. ',path' → logprob: -6.742122173309326
    5. ' ,' → logprob: -7.617122173309326
    6. ',
' → logprob: -8.617122650146484
    7. ',r' → logprob: -8.992122650146484
    8. ',p' → logprob: -8.992122650146484
    9. ',col' → logprob: -9.117122650146484
    10. ',row' → logprob: -10.117122650146484

Token 552: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -2.856408536899835e-05
    2. ' cc' → logprob: -10.500028610229492
    3. 'rc' → logprob: -14.125028610229492
    4. '	cc' → logprob: -15.625028610229492
    5. 'ccc' → logprob: -16.375028610229492
    6. '_cc' → logprob: -18.875028610229492
    7. 'ss' → logprob: -19.125028610229492
    8. '(cc' → logprob: -19.250028610229492
    9. '
' → logprob: -20.000028610229492
    10. ',' → logprob: -21.125028610229492

Token 553: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014165272004902363
    2. 'in' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.264164924621582
    4. ',' → logprob: -15.264164924621582
    5. '	in' → logprob: -15.389164924621582
    6. '_in' → logprob: -15.889164924621582
    7. 's' → logprob: -16.5141658782959
    8. 'In' → logprob: -16.5141658782959
    9. '```' → logprob: -16.6391658782959
    10. 'import' → logprob: -17.0141658782959

Token 554: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.014202408492565155
    2. ' path' → logprob: -4.26420259475708
    3. '   ' → logprob: -11.514202117919922
    4. '[path' → logprob: -11.514202117919922
    5. 'start' → logprob: -12.514202117919922
    6. '[' → logprob: -12.889202117919922
    7. ' ' → logprob: -13.014202117919922
    8. '
' → logprob: -13.139202117919922
    9. 'pat' → logprob: -13.264202117919922
    10. '(path' → logprob: -13.639202117919922

Token 555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4596087634563446
    2. ':
' → logprob: -1.084608793258667
    3. '           ' → logprob: -4.209608554840088
    4. '<|end|>' → logprob: -4.834608554840088
    5. ' in' → logprob: -6.209608554840088
    6. '       ' → logprob: -6.334608554840088
    7. '<|end|>' → logprob: -6.459608554840088
    8. ',' → logprob: -6.959608554840088
    9. ' if' → logprob: -7.334608554840088
    10. '):
' → logprob: -8.459609031677246

Token 556: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020299924071878195
    2. '<|end|>' → logprob: -7.002029895782471
    3. ' if' → logprob: -7.502029895782471
    4. '       ' → logprob: -9.127030372619629
    5. '<|end|>' → logprob: -9.127030372619629
    6. '
' → logprob: -9.752030372619629
    7. ':
' → logprob: -10.127030372619629
    8. '            
' → logprob: -10.252030372619629
    9. '               ' → logprob: -10.377030372619629
    10. '          ' → logprob: -10.377030372619629

Token 557: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12318923324346542
    2. '           ' → logprob: -2.2481892108917236
    3. '               ' → logprob: -4.873189449310303
    4. 'if' (adapté à ' if') → logprob: -6.123189449310303
    5. '<|end|>' → logprob: -7.998189449310303
    6. '       ' → logprob: -10.498188972473145
    7. '	       ' → logprob: -10.498188972473145
    8. ' ' → logprob: -11.123188972473145
    9. '```' → logprob: -11.498188972473145
    10. ' ' → logprob: -11.498188972473145

Token 558: ' grid' (ID: 10586)
  Prédit: '(rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rr' → logprob: -0.35819247364997864
    2. '(r' → logprob: -2.4831924438476562
    3. '(start' → logprob: -2.4831924438476562
    4. '(grid' → logprob: -2.4831924438476562
    5. ' (' → logprob: -3.1081924438476562
    6. 'grid' → logprob: -6.108192443847656
    7. '(' → logprob: -6.483192443847656
    8. '[start' → logprob: -7.108192443847656
    9. 'start' → logprob: -7.858192443847656
    10. '[r' → logprob: -9.233192443847656

Token 559: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002261854097014293
    2. '[r' → logprob: -9.250226020812988
    3. 'rr' → logprob: -9.875226020812988
    4. '(rr' → logprob: -10.375226020812988
    5. ' rr' → logprob: -11.000226020812988
    6. ' [' → logprob: -11.625226020812988
    7. '[
' → logprob: -12.125226020812988
    8. '_rr' → logprob: -12.250226020812988
    9. '```' → logprob: -12.875226020812988
    10. '

' → logprob: -13.875226020812988

Token 560: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.002890109783038497
    2. '[' → logprob: -6.877890110015869
    3. ' rr' → logprob: -7.002890110015869
    4. '(rr' → logprob: -7.127890110015869
    5. '_rr' → logprob: -9.002889633178711
    6. 'r' → logprob: -11.627889633178711
    7. ']' → logprob: -12.752889633178711
    8. '][' → logprob: -13.377889633178711
    9. 'RR' → logprob: -13.627889633178711
    10. '[r' → logprob: -13.877889633178711

Token 561: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005676110740751028
    2. ']' → logprob: -6.13067626953125
    3. '[' → logprob: -6.25567626953125
    4. ']==' → logprob: -6.50567626953125
    5. ' ][' → logprob: -11.50567626953125
    6. '   ' → logprob: -11.75567626953125
    7. '(rr' → logprob: -11.88067626953125
    8. '           ' → logprob: -12.13067626953125
    9. ']][' → logprob: -12.13067626953125
    10. '==' → logprob: -12.25567626953125

Token 562: 'cc' (ID: 710)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.25476062297821045
    2. 'cc' → logprob: -1.5047606229782104
    3. '(rr' → logprob: -7.3797607421875
    4. '[' → logprob: -7.6297607421875
    5. 'rc' → logprob: -7.6297607421875
    6. ' rr' → logprob: -7.7547607421875
    7. ']' → logprob: -8.3797607421875
    8. '
' → logprob: -9.2547607421875
    9. '][' → logprob: -9.2547607421875
    10. ']==' → logprob: -9.5047607421875

Token 563: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20621803402900696
    2. ']==' → logprob: -1.7062180042266846
    3. '[r' → logprob: -5.831218242645264
    4. '[' → logprob: -7.206218242645264
    5. ' ]' → logprob: -7.581218242645264
    6. ']<' → logprob: -8.581217765808105
    7. '==' → logprob: -9.331217765808105
    8. '   ' → logprob: -9.331217765808105
    9. ' ==' → logprob: -10.456217765808105
    10. ')==' → logprob: -10.706217765808105

Token 564: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5171678066253662
    2. '<' → logprob: -1.1421678066253662
    3. ' ==' → logprob: -3.017167806625366
    4. ' <' → logprob: -4.267168045043945
    5. ' in' → logprob: -5.017168045043945
    6. '>' → logprob: -5.142168045043945
    7. ']==' → logprob: -6.017168045043945
    8. 'in' → logprob: -6.517168045043945
    9. ']' → logprob: -6.517168045043945
    10. '==-' → logprob: -6.642168045043945

Token 565: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000618792837485671
    2. ' ' → logprob: -7.625618934631348
    3. '=' → logprob: -9.000618934631348
    4. '-' → logprob: -13.000618934631348
    5. '1' → logprob: -13.375618934631348
    6. '100' → logprob: -13.750618934631348
    7. '
' → logprob: -14.500618934631348
    8. '```' → logprob: -14.750618934631348
    9. '   ' → logprob: -15.625618934631348
    10. '  ' → logprob: -15.750618934631348

Token 566: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002439467643853277
    2. ' ' → logprob: -8.375244140625
    3. '=' → logprob: -11.750244140625
    4. '-' → logprob: -13.000244140625
    5. '100' → logprob: -13.375244140625
    6. '1' → logprob: -15.250244140625
    7. '```' → logprob: -15.500244140625
    8. ' -' → logprob: -16.437744140625
    9. '`' → logprob: -16.500244140625
    10. '10' → logprob: -16.625244140625

Token 567: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0696050152182579
    2. 'and' → logprob: -2.9446051120758057
    3. ':' → logprob: -4.944604873657227
    4. ':
' → logprob: -5.819604873657227
    5. '           ' → logprob: -6.194604873657227
    6. '<|end|>' → logprob: -6.569604873657227
    7. ' or' → logprob: -7.819604873657227
    8. '               ' → logprob: -7.944604873657227
    9. '<|end|>' → logprob: -9.819604873657227
    10. '       ' → logprob: -9.819604873657227

Token 568: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.036418721079826355
    2. ' and' → logprob: -3.4114186763763428
    3. '           ' → logprob: -6.411418914794922
    4. '<|end|>' → logprob: -8.036418914794922
    5. ':
' → logprob: -8.661418914794922
    6. ',' → logprob: -8.661418914794922
    7. 'and' → logprob: -8.786418914794922
    8. ':' → logprob: -9.536418914794922
    9. ' or' → logprob: -9.661418914794922
    10. '                   ' → logprob: -10.286418914794922

Token 569: ' start' (ID: 1604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2584194540977478
    2. ' start' → logprob: -1.5084195137023926
    3. '                   ' → logprob: -5.758419513702393
    4. 'start' (adapté à ' start') → logprob: -6.008419513702393
    5. '           ' → logprob: -8.633419036865234
    6. '[start' → logprob: -8.758419036865234
    7. ' continue' → logprob: -9.008419036865234
    8. ' break' → logprob: -9.133419036865234
    9. ' return' → logprob: -9.508419036865234
    10. '                       ' → logprob: -9.633419036865234

Token 570: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0003035266126971692
    2. 'points' → logprob: -8.500303268432617
    3. '_' → logprob: -10.625303268432617
    4. '_tokens' → logprob: -11.250303268432617
    5. ' points' → logprob: -11.625303268432617
    6. 'Points' → logprob: -11.750303268432617
    7. '```' → logprob: -11.750303268432617
    8. '_point' → logprob: -12.000303268432617
    9. '       ' → logprob: -12.375303268432617
    10. '           ' → logprob: -12.500303268432617

Token 571: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0013785678893327713
    2. '+=' → logprob: -6.876378536224365
    3. ' +=' → logprob: -8.501379013061523
    4. 'count' → logprob: -9.001379013061523
    5. '+' → logprob: -11.751379013061523
    6. '_counts' → logprob: -13.001379013061523
    7. ']+=' → logprob: -13.501379013061523
    8. '_points' → logprob: -13.626379013061523
    9. '_COUNT' → logprob: -13.751379013061523
    10. 'Count' → logprob: -13.876379013061523

Token 572: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02078687585890293
    2. '+=' → logprob: -3.895786762237549
    3. '<|end|>' → logprob: -9.270787239074707
    4. '           ' → logprob: -9.395787239074707
    5. '+' → logprob: -11.020787239074707
    6. '       ' → logprob: -11.770787239074707
    7. '   ' → logprob: -11.895787239074707
    8. '               ' → logprob: -12.145787239074707
    9. ' +' → logprob: -12.395787239074707
    10. ' =' → logprob: -12.520787239074707

Token 573: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. '0' → logprob: -15.626702308654785
    4. '<|end|>' → logprob: -17.5017032623291
    5. '+' → logprob: -18.5642032623291
    6. '2' → logprob: -18.9392032623291
    7. '```' → logprob: -19.0017032623291
    8. '   ' → logprob: -19.1267032623291
    9. '
' → logprob: -19.3767032623291
    10. ' ' → logprob: -19.5017032623291

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -16.75001335144043
    4. 'len' → logprob: -17.75001335144043
    5. '2' → logprob: -19.87501335144043
    6. '
' → logprob: -20.12501335144043
    7. '```' → logprob: -20.25001335144043
    8. '<|end|>' → logprob: -20.37501335144043
    9. '   ' → logprob: -20.68751335144043
    10. '+' → logprob: -20.87501335144043

Token 575: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4737616181373596
    2. '               ' → logprob: -1.4737615585327148
    3. '<|end|>' → logprob: -2.223761558532715
    4. '           ' → logprob: -3.473761558532715
    5. '
' → logprob: -4.848761558532715
    6. '<|end|>' → logprob: -7.723761558532715
    7. ',' → logprob: -8.598761558532715
    8. ' ' → logprob: -9.223761558532715
    9. '                   ' → logprob: -9.348761558532715
    10. '   ' → logprob: -9.598761558532715

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14408056437969208
    2. '           ' → logprob: -2.144080638885498
    3. '<|end|>' → logprob: -4.769080638885498
    4. '
' → logprob: -5.144080638885498
    5. '               ' → logprob: -6.769080638885498
    6. ' ' → logprob: -8.01908016204834
    7. '	' → logprob: -8.14408016204834
    8. '   ' → logprob: -8.39408016204834
    9. '	       ' → logprob: -9.01908016204834
    10. '		' → logprob: -9.01908016204834

Token 577: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021406246814876795
    2. '
' → logprob: -6.252140522003174
    3. 'if' (adapté à ' if') → logprob: -9.377140998840332
    4. ' if' → logprob: -9.502140998840332
    5. '           ' → logprob: -10.627140998840332
    6. '```' → logprob: -11.377140998840332
    7. '   ' → logprob: -12.127140998840332
    8. '<|end|>' → logprob: -12.752140998840332
    9. ' ' → logprob: -13.002140998840332
    10. 'If' → logprob: -13.377140998840332

Token 578: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.018151231110095978
    2. 'start' → logprob: -4.01815128326416
    3. '(start' → logprob: -15.39315128326416
    4. '[start' → logprob: -15.51815128326416
    5. ' not' → logprob: -15.89315128326416
    6. ' ' → logprob: -15.89315128326416
    7. '           ' → logprob: -16.018150329589844
    8. 'Start' → logprob: -16.018150329589844
    9. ' len' → logprob: -16.143150329589844
    10. ' ' → logprob: -16.643150329589844

Token 579: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.6060808522743173e-05
    2. 'points' → logprob: -10.750025749206543
    3. '_' → logprob: -14.000025749206543
    4. 'Points' → logprob: -14.125025749206543
    5. '_positions' → logprob: -14.250025749206543
    6. ' points' → logprob: -14.875025749206543
    7. 's' → logprob: -15.125025749206543
    8. '_start' → logprob: -15.125025749206543
    9. ' _' → logprob: -15.250025749206543
    10. '_
' → logprob: -15.500025749206543

Token 580: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005705483490601182
    2. 'count' → logprob: -7.500570774078369
    3. 'Count' → logprob: -11.250570297241211
    4. '[' → logprob: -14.500570297241211
    5. '_COUNT' → logprob: -14.875570297241211
    6. '   ' → logprob: -14.875570297241211
    7. '_counts' → logprob: -15.000570297241211
    8. '_' → logprob: -15.250570297241211
    9. '...' → logprob: -15.250570297241211
    10. '>' → logprob: -15.625570297241211

Token 581: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.11184167116880417
    2. ' <=' → logprob: -2.7368416786193848
    3. '>' → logprob: -3.3618416786193848
    4. ' ==' → logprob: -5.486841678619385
    5. '<=' → logprob: -6.611841678619385
    6. '==' → logprob: -7.486841678619385
    7. ' !=' → logprob: -9.111841201782227
    8. ' <' → logprob: -9.486841201782227
    9. ' ' → logprob: -9.611841201782227
    10. ')' → logprob: -10.986841201782227

Token 582: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006734743365086615
    2. ' ' → logprob: -7.375673294067383
    3. '0' → logprob: -10.125673294067383
    4. '2' → logprob: -12.500673294067383
    5. '   ' → logprob: -13.125673294067383
    6. '  ' → logprob: -15.500673294067383
    7. '```' → logprob: -15.875673294067383
    8. '
' → logprob: -16.438173294067383
    9. ' (' → logprob: -16.750673294067383
    10. '(' → logprob: -16.750673294067383

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.800739018013701e-05
    2. '0' → logprob: -10.3750581741333
    3. ' ' → logprob: -10.6250581741333
    4. '2' → logprob: -13.5000581741333
    5. '   ' → logprob: -14.6250581741333
    6. '
' → logprob: -16.250057220458984
    7. '  ' → logprob: -17.187557220458984
    8. '```' → logprob: -17.187557220458984
    9. '3' → logprob: -17.312557220458984
    10. '...' → logprob: -17.750057220458984

Token 584: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.799788236618042
    2. ':
' → logprob: -0.799788236618042
    3. '           ' → logprob: -2.299788236618042
    4. ' or' → logprob: -7.424788475036621
    5. ':return' → logprob: -9.174788475036621
    6. ' and' → logprob: -10.174788475036621
    7. ' continue' → logprob: -10.299788475036621
    8. '       ' → logprob: -10.424788475036621
    9. 'continue' → logprob: -10.674788475036621
    10. '               ' → logprob: -11.049788475036621

Token 585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06271743029356003
    2. ' continue' → logprob: -2.8127174377441406
    3. 'continue' → logprob: -7.312717437744141
    4. '               ' → logprob: -10.56271743774414
    5. ' continues' → logprob: -11.18771743774414
    6. '
' → logprob: -11.43771743774414
    7. '       ' → logprob: -12.06271743774414
    8. ':
' → logprob: -12.31271743774414
    9. '\n' → logprob: -12.56271743774414
    10. '		' → logprob: -12.81271743774414

Token 586: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.33447712659835815
    2. 'continue' (adapté à ' continue') → logprob: -1.834477186203003
    3. '           ' → logprob: -2.084477186203003
    4. '               ' → logprob: -8.834477424621582
    5. '	continue' → logprob: -9.959477424621582
    6. '_continue' → logprob: -11.334477424621582
    7. '		' → logprob: -11.959477424621582
    8. '       ' → logprob: -13.334477424621582
    9. '   ' → logprob: -13.584477424621582
    10. '
' → logprob: -13.709477424621582

Token 587: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012341526336967945
    2. '
' → logprob: -4.637341499328613
    3. '<|end|>' → logprob: -6.637341499328613
    4. '        
' → logprob: -6.762341499328613
    5. '```' → logprob: -11.012341499328613
    6. '   ' → logprob: -11.137341499328613
    7. '           ' → logprob: -11.137341499328613
    8. '
' → logprob: -11.137341499328613
    9. '<|end|>' → logprob: -11.512341499328613
    10. '            
' → logprob: -11.762341499328613

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022112776059657335
    2. '
' → logprob: -6.252211093902588
    3. '        
' → logprob: -8.252211570739746
    4. '           ' → logprob: -12.002211570739746
    5. '```' → logprob: -12.377211570739746
    6. '<|end|>' → logprob: -12.752211570739746
    7. '   ' → logprob: -13.127211570739746
    8. '  
' → logprob: -13.627211570739746
    9. '            
' → logprob: -13.877211570739746
    10. '    
' → logprob: -14.002211570739746

Token 589: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15551306307315826
    2. 'for' → logprob: -2.530513048171997
    3. ' for' → logprob: -3.280513048171997
    4. ' used' → logprob: -3.905513048171997
    5. 'used' → logprob: -5.655513286590576
    6. '#' (adapté à ' #') → logprob: -6.655513286590576
    7. '
' → logprob: -7.030513286590576
    8. '        
' → logprob: -7.780513286590576
    9. '```' → logprob: -7.905513286590576
    10. ' #' → logprob: -9.280512809753418

Token 590: ' Mark' (ID: 5070)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01361530739814043
    2. '#' → logprob: -5.388615131378174
    3. 'valid' → logprob: -5.638615131378174
    4. 'can' → logprob: -6.013615131378174
    5. 'flag' → logprob: -6.638615131378174
    6. '       ' → logprob: -7.388615131378174
    7. 'if' → logprob: -7.388615131378174
    8. ' for' → logprob: -9.013615608215332
    9. 'used' → logprob: -9.513615608215332
    10. 'conf' → logprob: -9.638615608215332

Token 591: ' path' (ID: 3104)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07696621119976044
    2. 'for' → logprob: -2.7019662857055664
    3. '       ' → logprob: -5.451966285705566
    4. ' path' → logprob: -6.826966285705566
    5. ' used' → logprob: -7.076966285705566
    6. '```' → logprob: -8.201966285705566
    7. '
' → logprob: -9.076966285705566
    8. '   ' → logprob: -9.201966285705566
    9. ' all' → logprob: -9.451966285705566
    10. 'path' → logprob: -9.576966285705566

Token 592: ' as' (ID: 472)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4598328471183777
    2. 'for' → logprob: -1.4598329067230225
    3. '       ' → logprob: -2.0848329067230225
    4. '```' → logprob: -4.584832668304443
    5. ' cells' → logprob: -8.209833145141602
    6. '   ' → logprob: -8.209833145141602
    7. '           ' → logprob: -8.459833145141602
    8. '``' → logprob: -8.459833145141602
    9. '
' → logprob: -8.584833145141602
    10. '        
' → logprob: -8.834833145141602

Token 593: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.39984777569770813
    2. 'used' → logprob: -1.5248477458953857
    3. ' True' → logprob: -3.0248477458953857
    4. 'True' → logprob: -3.3998477458953857
    5. ' for' → logprob: -3.6498477458953857
    6. 'for' → logprob: -5.649847984313965
    7. '```' → logprob: -8.399847984313965
    8. '   ' → logprob: -8.774847984313965
    9. '       ' → logprob: -10.649847984313965
    10. 'visited' → logprob: -11.149847984313965

Token 594: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011201318353414536
    2. ' for' → logprob: -4.63620138168335
    3. '
' → logprob: -6.76120138168335
    4. 'for' → logprob: -8.386200904846191
    5. '```' → logprob: -10.636200904846191
    6. '   ' → logprob: -11.636200904846191
    7. '           ' → logprob: -11.761200904846191
    8. ':
' → logprob: -12.261200904846191
    9. ':' → logprob: -12.511200904846191
    10. ',' → logprob: -12.886200904846191

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026613883674144745
    2. ' for' → logprob: -3.65161395072937
    3. 'for' → logprob: -8.52661418914795
    4. '   ' → logprob: -10.15161418914795
    5. '
' → logprob: -10.27661418914795
    6. '           ' → logprob: -10.77661418914795
    7. '```' → logprob: -11.15161418914795
    8. '        
' → logprob: -13.27661418914795
    9. '<|end|>' → logprob: -14.02661418914795
    10. '               ' → logprob: -14.15161418914795

Token 596: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08686788380146027
    2. 'for' (adapté à ' for') → logprob: -2.5868678092956543
    3. '       ' → logprob: -4.836867809295654
    4. '   ' → logprob: -11.586868286132812
    5. '```' → logprob: -12.711868286132812
    6. '           ' → logprob: -13.586868286132812
    7. '	for' → logprob: -14.961868286132812
    8. '
' → logprob: -15.461868286132812
    9. ' ' → logprob: -15.586868286132812
    10. '``' → logprob: -16.836868286132812

Token 597: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.22050435841083527
    2. ' rr' → logprob: -1.7205044031143188
    3. '(rr' → logprob: -3.9705042839050293
    4. '(r' → logprob: -10.720504760742188
    5. 'r' → logprob: -11.345504760742188
    6. ' (' → logprob: -11.845504760742188
    7. 'pr' → logprob: -13.345504760742188
    8. '_rr' → logprob: -13.720504760742188
    9. 'row' → logprob: -13.845504760742188
    10. '(' → logprob: -14.720504760742188

Token 598: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12888725101947784
    2. ' in' → logprob: -2.753887176513672
    3. 'in' → logprob: -2.878887176513672
    4. ' ,' → logprob: -7.378887176513672
    5. ',in' → logprob: -8.628887176513672
    6. '[' → logprob: -9.378887176513672
    7. ',c' → logprob: -10.128887176513672
    8. ',r' → logprob: -10.503887176513672
    9. ',ll' → logprob: -11.503887176513672
    10. '```' → logprob: -11.628887176513672

Token 599: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.001182607957161963
    2. ' cc' → logprob: -6.751182556152344
    3. 'path' → logprob: -11.376182556152344
    4. 'rc' → logprob: -15.376182556152344
    5. ' path' → logprob: -15.501182556152344
    6. 'c' → logprob: -15.501182556152344
    7. 'ccc' → logprob: -16.126182556152344
    8. '	cc' → logprob: -16.626182556152344
    9. '_cc' → logprob: -16.751182556152344
    10. '(cc' → logprob: -17.001182556152344

Token 600: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031806828919798136
    2. 'in' → logprob: -5.753180503845215
    3. ' ' → logprob: -13.503180503845215
    4. '   ' → logprob: -14.003180503845215
    5. '  ' → logprob: -15.753180503845215
    6. '```' → logprob: -15.878180503845215
    7. '	in' → logprob: -16.00318145751953
    8. '    ' → logprob: -16.25318145751953
    9. ',' → logprob: -16.75318145751953
    10. 'import' → logprob: -17.00318145751953

Token 601: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.57594895362854
    2. 'path' → logprob: -0.82594895362854
    3. '[path' → logprob: -12.950948715209961
    4. '(path' → logprob: -12.950948715209961
    5. ' ' → logprob: -13.325948715209961
    6. '   ' → logprob: -13.700948715209961
    7. '	path' → logprob: -13.825948715209961
    8. '
' → logprob: -15.200948715209961
    9. ',path' → logprob: -15.950948715209961
    10. '    ' → logprob: -16.32594871520996

Token 602: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6291114687919617
    2. ':
' → logprob: -0.8791114687919617
    3. '           ' → logprob: -3.1291115283966064
    4. '       ' → logprob: -5.254111289978027
    5. '   ' → logprob: -6.629111289978027
    6. ' used' → logprob: -7.254111289978027
    7. '[' → logprob: -8.504111289978027
    8. '               ' → logprob: -8.754111289978027
    9. '):
' → logprob: -9.629111289978027
    10. '):' → logprob: -10.004111289978027

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000158842682139948
    2. ' used' → logprob: -9.50015926361084
    3. '               ' → logprob: -9.62515926361084
    4. '
' → logprob: -12.25015926361084
    5. '       ' → logprob: -12.25015926361084
    6. '   ' → logprob: -12.75015926361084
    7. '```' → logprob: -13.50015926361084
    8. '                   ' → logprob: -13.87515926361084
    9. '<|end|>' → logprob: -13.87515926361084
    10. '	       ' → logprob: -14.50015926361084

Token 604: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.03234167769551277
    2. '           ' → logprob: -4.032341480255127
    3. 'used' (adapté à ' used') → logprob: -4.282341480255127
    4. '               ' → logprob: -8.282341957092285
    5. '       ' → logprob: -10.782341957092285
    6. '   ' → logprob: -12.032341957092285
    7. '.used' → logprob: -14.157341957092285
    8. '```' → logprob: -15.157341957092285
    9. '_used' → logprob: -15.782341957092285
    10. '                   ' → logprob: -16.03234100341797

Token 605: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2246291337069124e-05
    2. '[r' → logprob: -10.750021934509277
    3. 'rr' → logprob: -15.000021934509277
    4. '(rr' → logprob: -15.250021934509277
    5. ' [' → logprob: -16.625022888183594
    6. '```' → logprob: -17.125022888183594
    7. '_rr' → logprob: -17.750022888183594
    8. '[row' → logprob: -17.875022888183594
    9. ')[' → logprob: -18.625022888183594
    10. '][' → logprob: -18.750022888183594

Token 606: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.002223529852926731
    2. 'r' → logprob: -6.252223491668701
    3. '[' → logprob: -9.00222396850586
    4. ' rr' → logprob: -9.25222396850586
    5. '[r' → logprob: -10.50222396850586
    6. '(rr' → logprob: -10.50222396850586
    7. '][' → logprob: -11.37722396850586
    8. '_rr' → logprob: -11.75222396850586
    9. '           ' → logprob: -14.25222396850586
    10. 'rrrr' → logprob: -14.87722396850586

Token 607: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007318547577597201
    2. '[' → logprob: -7.250731945037842
    3. ']' → logprob: -11.000731468200684
    4. '[r' → logprob: -12.625731468200684
    5. ' ][' → logprob: -14.875731468200684
    6. '[row' → logprob: -15.125731468200684
    7. ']][' → logprob: -15.375731468200684
    8. '```' → logprob: -15.500731468200684
    9. ')[' → logprob: -15.625731468200684
    10. '           ' → logprob: -15.625731468200684

Token 608: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0019313741941004992
    2. 'c' → logprob: -6.251931190490723
    3. ' cc' → logprob: -13.501931190490723
    4. '	cc' → logprob: -13.626931190490723
    5. '][' → logprob: -15.751931190490723
    6. '(cc' → logprob: -16.87693214416504
    7. '_cc' → logprob: -17.25193214416504
    8. ']' → logprob: -17.37693214416504
    9. 'ccb' → logprob: -18.37693214416504
    10. 'cb' → logprob: -18.75193214416504

Token 609: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03762573376297951
    2. '=' → logprob: -3.787625789642334
    3. ' =' → logprob: -4.287625789642334
    4. ']=' → logprob: -7.787625789642334
    5. ')' → logprob: -9.412625312805176
    6. '=True' → logprob: -10.287625312805176
    7. ' ]' → logprob: -11.662625312805176
    8. ')=' → logprob: -15.912625312805176
    9. 'True' → logprob: -16.162626266479492
    10. ',' → logprob: -16.287626266479492

Token 610: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380525141954422
    2. ' =' → logprob: -3.288052558898926
    3. '=True' → logprob: -11.413052558898926
    4. '=
' → logprob: -17.91305160522461
    5. '=False' → logprob: -18.91305160522461
    6. '[' → logprob: -19.41305160522461
    7. '   ' → logprob: -19.78805160522461
    8. '=true' → logprob: -19.78805160522461
    9. 'True' → logprob: -19.91305160522461
    10. '           ' → logprob: -20.16305160522461

Token 611: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.842555426876061e-06
    2. ' True' → logprob: -12.250004768371582
    3. '(True' → logprob: -19.7500057220459
    4. '   ' → logprob: -20.8750057220459
    5. '=True' → logprob: -21.1250057220459
    6. '1' → logprob: -21.5000057220459
    7. 'true' → logprob: -23.8750057220459
    8. '           ' → logprob: -24.1250057220459
    9. 'TRUE' → logprob: -25.0000057220459
    10. '[' → logprob: -25.1250057220459

Token 612: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7032947540283203
    2. '       ' → logprob: -1.3282947540283203
    3. '<|end|>' → logprob: -1.4532947540283203
    4. '        
' → logprob: -6.07829475402832
    5. '<|end|>' → logprob: -6.70329475402832
    6. '\n' → logprob: -7.20329475402832
    7. '  
' → logprob: -7.32829475402832
    8. '    
' → logprob: -7.70329475402832
    9. '```' → logprob: -8.32829475402832
    10. 'newline' → logprob: -8.70329475402832

Token 613: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6956229209899902
    2. '       ' → logprob: -0.6956229209899902
    3. '        
' → logprob: -6.32062292098999
    4. '<|end|>' → logprob: -8.070623397827148
    5. '
' → logprob: -8.820623397827148
    6. '```' → logprob: -9.070623397827148
    7. '    
' → logprob: -10.695623397827148
    8. '  
' → logprob: -11.070623397827148
    9. '            
' → logprob: -11.570623397827148
    10. '           ' → logprob: -11.570623397827148

Token 614: ' used' (ID: 2061)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003478193422779441
    2. '
' → logprob: -6.378478050231934
    3. ' result' → logprob: -7.378478050231934
    4. 'result' → logprob: -7.378478050231934
    5. ' if' → logprob: -8.628478050231934
    6. '```' → logprob: -9.003478050231934
    7. '        
' → logprob: -9.128478050231934
    8. 'if' → logprob: -9.503478050231934
    9. '           ' → logprob: -10.753478050231934
    10. '   ' → logprob: -11.878478050231934

Token 615: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0008871606551110744
    2. '[start' → logprob: -7.375887393951416
    3. '[' → logprob: -8.625886917114258
    4. 'r' → logprob: -10.125886917114258
    5. 'start' → logprob: -11.125886917114258
    6. '```' → logprob: -12.875886917114258
    7. '[end' → logprob: -13.250886917114258
    8. ' =' → logprob: -13.500886917114258
    9. 'return' → logprob: -13.625886917114258
    10. '[row' → logprob: -13.750886917114258

Token 616: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.849109119386412e-06
    2. ']' → logprob: -11.875009536743164
    3. ' ][' → logprob: -13.000009536743164
    4. '[' → logprob: -15.000009536743164
    5. '"][' → logprob: -15.875009536743164
    6. ''][' → logprob: -17.375009536743164
    7. '[r' → logprob: -17.500009536743164
    8. '()][' → logprob: -17.750009536743164
    9. '][]' → logprob: -17.750009536743164
    10. ')][' → logprob: -17.875009536743164

Token 617: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.5107177862082608e-05
    2. ' c' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.750024795532227
    4. ')c' → logprob: -16.125024795532227
    5. '	c' → logprob: -16.375024795532227
    6. ',c' → logprob: -16.625024795532227
    7. ' ' → logprob: -17.000024795532227
    8. '][' → logprob: -17.000024795532227
    9. '[c' → logprob: -18.500024795532227
    10. '    ' → logprob: -18.500024795532227

Token 618: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.644463479053229e-05
    2. ']=' → logprob: -10.000046730041504
    3. '=' → logprob: -15.000046730041504
    4. ' ]' → logprob: -15.375046730041504
    5. '][' → logprob: -15.750046730041504
    6. ')' → logprob: -16.375045776367188
    7. ']
' → logprob: -16.500045776367188
    8. ' =' → logprob: -17.000045776367188
    9. '[' → logprob: -18.000045776367188
    10. ']==' → logprob: -18.375045776367188

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04310503974556923
    2. ' =' → logprob: -3.168105125427246
    3. '=False' → logprob: -9.418105125427246
    4. ']' → logprob: -11.168105125427246
    5. '[' → logprob: -12.168105125427246
    6. ')' → logprob: -12.793105125427246
    7. 'False' → logprob: -13.793105125427246
    8. '=True' → logprob: -14.168105125427246
    9. ']=' → logprob: -14.668105125427246
    10. '   ' → logprob: -15.543105125427246

Token 620: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02839839830994606
    2. 'False' → logprob: -3.7783985137939453
    3. ' True' → logprob: -5.278398513793945
    4. ' False' → logprob: -10.153398513793945
    5. '=True' → logprob: -18.153398513793945
    6. '   ' → logprob: -18.153398513793945
    7. '(True' → logprob: -19.028398513793945
    8. ' ' → logprob: -19.153398513793945
    9. '0' → logprob: -19.403398513793945
    10. 'F' → logprob: -19.903398513793945

Token 621: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1061970666050911
    2. '       ' → logprob: -2.4811971187591553
    3. '<|end|>' → logprob: -4.106196880340576
    4. '        
' → logprob: -8.731197357177734
    5. '<|end|>' → logprob: -8.856197357177734
    6. '```' → logprob: -8.981197357177734
    7. '
' → logprob: -10.106197357177734
    8. ',' → logprob: -10.231197357177734
    9. '   ' → logprob: -10.231197357177734
    10. '  
' → logprob: -11.231197357177734

Token 622: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021949008107185364
    2. '       ' → logprob: -4.02194881439209
    3. '<|end|>' → logprob: -5.64694881439209
    4. '```' → logprob: -9.52194881439209
    5. '        
' → logprob: -9.77194881439209
    6. '
' → logprob: -9.89694881439209
    7. '<|end|>' → logprob: -10.39694881439209
    8. '  
' → logprob: -11.52194881439209
    9. '

' → logprob: -11.89694881439209
    10. '\n' → logprob: -12.39694881439209

Token 623: ' origin' (ID: 12839)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6999047994613647
    2. '<|end|>' → logprob: -0.9499047994613647
    3. '
' → logprob: -2.1999049186706543
    4. ' return' → logprob: -6.199904918670654
    5. '        
' → logprob: -6.949904918670654
    6. '<|end|>' → logprob: -7.324904918670654
    7. 'return' → logprob: -7.449904918670654
    8. ' continue' → logprob: -7.574904918670654
    9. ' 
' → logprob: -8.324904441833496
    10. 'continue' → logprob: -8.824904441833496

Token 624: ' always' (ID: 3324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: ' used' (ID: 2061)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0697379112243652
    2. '<|end|>' → logprob: -1.0697379112243652
    3. '       ' → logprob: -1.1947379112243652
    4. '        
' → logprob: -5.194737911224365
    5. '<|end|>' → logprob: -5.819737911224365
    6. '```' → logprob: -7.194737911224365
    7. 'newline' → logprob: -7.694737911224365
    8. '  
' → logprob: -7.819737911224365
    9. '
' → logprob: -8.819738388061523
    10. '\n' → logprob: -9.069738388061523

Token 627: 'included' (ID: 159353)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 628: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012540421448647976
    2. ')
' → logprob: -6.876254081726074
    3. '<|end|>' → logprob: -9.126254081726074
    4. ' in' → logprob: -9.876254081726074
    5. ' )' → logprob: -10.126254081726074
    6. '       ' → logprob: -11.626254081726074
    7. '```' → logprob: -12.751254081726074
    8. ').' → logprob: -13.626254081726074
    9. ')

' → logprob: -13.626254081726074
    10. '   ' → logprob: -14.126254081726074

Token 629: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.2015431523323059
    2. ' path' → logprob: -1.7015430927276611
    3. 'the' → logprob: -10.326542854309082
    4. ' True' → logprob: -10.326542854309082
    5. ' the' → logprob: -10.701542854309082
    6. 'True' → logprob: -10.701542854309082
    7. ')' → logprob: -11.326542854309082
    8. '```' → logprob: -13.576542854309082
    9. ' used' → logprob: -13.951542854309082
    10. '   ' → logprob: -14.201542854309082

Token 630: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5642724633216858
    2. ')' → logprob: -1.064272403717041
    3. ')
' → logprob: -3.189272403717041
    4. '<|end|>' → logprob: -3.564272403717041
    5. '
' → logprob: -4.189272403717041
    6. '        
' → logprob: -7.189272403717041
    7. '<|end|>' → logprob: -8.5642728805542
    8. '),' → logprob: -8.9392728805542
    9. '\n' → logprob: -9.4392728805542
    10. ',' → logprob: -9.5642728805542

Token 631: ' ensure' (ID: 6757)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0318331718444824
    2. ' already' → logprob: -1.2818331718444824
    3. ' redundant' → logprob: -1.4068331718444824
    4. 'already' → logprob: -3.2818331718444824
    5. '<|end|>' → logprob: -3.6568331718444824
    6. ' also' → logprob: -4.156833171844482
    7. ' ensured' → logprob: -5.031833171844482
    8. ' not' → logprob: -5.031833171844482
    9. ' just' → logprob: -5.906833171844482
    10. ' here' → logprob: -6.156833171844482

Token 632: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6604533791542053
    2. 'True' → logprob: -1.1604533195495605
    3. ' this' → logprob: -3.0354533195495605
    4. ' True' → logprob: -3.1604533195495605
    5. ')
' → logprob: -3.4104533195495605
    6. 'this' → logprob: -3.7854533195495605
    7. '=True' → logprob: -4.6604533195495605
    8. ' it' → logprob: -5.5354533195495605
    9. ' the' → logprob: -6.4104533195495605
    10. ' that' → logprob: -6.7854533195495605

Token 633: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5766773819923401
    2. '       ' → logprob: -0.8266773819923401
    3. '<|end|>' → logprob: -7.576677322387695
    4. '        
' → logprob: -9.076677322387695
    5. '```' → logprob: -10.326677322387695
    6. '   ' → logprob: -10.326677322387695
    7. '
' → logprob: -10.701677322387695
    8. '<|end|>' → logprob: -12.201677322387695
    9. '    
' → logprob: -12.326677322387695
    10. ',' → logprob: -12.826677322387695

Token 634: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02791474387049675
    2. '
' → logprob: -3.7779147624969482
    3. 'if' (adapté à ' if') → logprob: -5.902914524078369
    4. 'result' → logprob: -6.777914524078369
    5. ' if' → logprob: -7.902914524078369
    6. '```' → logprob: -8.402915000915527
    7. '        
' → logprob: -9.277915000915527
    8. ' result' → logprob: -9.902915000915527
    9. '           ' → logprob: -11.402915000915527
    10. '	' → logprob: -11.777915000915527

Token 635: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.014173151925206184
    2. 'can' → logprob: -4.2641730308532715
    3. '	can' → logprob: -12.01417350769043
    4. '_can' → logprob: -13.13917350769043
    5. '(can' → logprob: -14.01417350769043
    6. '   ' → logprob: -14.13917350769043
    7. ' not' → logprob: -16.76417350769043
    8. '.can' → logprob: -18.01417350769043
    9. ' ' → logprob: -18.01417350769043
    10. ' ' → logprob: -18.26417350769043

Token 636: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -13.750001907348633
    3. '_put' → logprob: -15.500001907348633
    4. '_continue' → logprob: -16.875001907348633
    5. '_places' → logprob: -17.000001907348633
    6. 'place' → logprob: -17.375001907348633
    7. '_can' → logprob: -17.875001907348633
    8. ' _' → logprob: -18.125001907348633
    9. '_have' → logprob: -19.500001907348633
    10. '_replace' → logprob: -19.500001907348633

Token 637: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.9361264946837764e-07
    2. 'all' → logprob: -16.75
    3. '_ALL' → logprob: -19.875
    4. ' _' → logprob: -20.0
    5. '_' → logprob: -20.375
    6. 'All' → logprob: -20.375
    7. '```' → logprob: -20.875
    8. '   ' → logprob: -21.375
    9. '_All' → logprob: -21.875
    10. '_any' → logprob: -22.375

Token 638: '_lines' (ID: 42980)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.00671940203756094
    2. '_lines' → logprob: -5.006719589233398
    3. 'all' → logprob: -13.381719589233398
    4. '_line' → logprob: -13.631719589233398
    5. '_' → logprob: -15.006719589233398
    6. '```' → logprob: -15.006719589233398
    7. '(grid' → logprob: -15.256719589233398
    8. ' _' → logprob: -15.381719589233398
    9. '
' → logprob: -17.0067195892334
    10. '(lines' → logprob: -17.2567195892334

Token 639: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -5.319370302458992e-06
    2. '(
' → logprob: -12.500005722045898
    3. '(' → logprob: -13.875005722045898
    4. '(graph' → logprob: -14.750005722045898
    5. ' (' → logprob: -15.625005722045898
    6. '   ' → logprob: -16.8750057220459
    7. '(gr' → logprob: -17.7500057220459
    8. '(Grid' → logprob: -18.0000057220459
    9. '```' → logprob: -18.2500057220459
    10. 'grid' → logprob: -18.3750057220459

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.719917630311102e-05
    2. ',n' → logprob: -9.500077247619629
    3. ',
' → logprob: -13.500077247619629
    4. ' ,' → logprob: -14.250077247619629
    5. '(n' → logprob: -15.875077247619629
    6. '   ' → logprob: -16.125076293945312
    7. '       ' → logprob: -18.000076293945312
    8. ',
' → logprob: -18.625076293945312
    9. '```' → logprob: -19.000076293945312
    10. ',r' → logprob: -19.375076293945312

Token 641: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020752996206284
    2. ' n' → logprob: -2.350207567214966
    3. '   ' → logprob: -15.350207328796387
    4. '	n' → logprob: -16.100208282470703
    5. 'len' → logprob: -16.225208282470703
    6. '       ' → logprob: -16.225208282470703
    7. '    ' → logprob: -16.475208282470703
    8. ',n' → logprob: -16.600208282470703
    9. '           ' → logprob: -16.725208282470703
    10. ',' → logprob: -17.225208282470703

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.286852345103398e-05
    2. ',start' → logprob: -10.125042915344238
    3. ' ,' → logprob: -13.125042915344238
    4. ',
' → logprob: -14.500042915344238
    5. ',user' → logprob: -16.375041961669922
    6. '   ' → logprob: -16.750041961669922
    7. '       ' → logprob: -16.875041961669922
    8. ',n' → logprob: -18.250041961669922
    9. ',s' → logprob: -18.375041961669922
    10. '           ' → logprob: -18.625041961669922

Token 643: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20141440629959106
    2. ' start' → logprob: -1.7014143466949463
    3. '   ' → logprob: -14.701414108276367
    4. '[start' → logprob: -14.951414108276367
    5. ',start' → logprob: -15.951414108276367
    6. '	start' → logprob: -16.576414108276367
    7. '    ' → logprob: -17.076414108276367
    8. ' ' → logprob: -17.201414108276367
    9. '(start' → logprob: -17.701414108276367
    10. ',' → logprob: -18.076414108276367

Token 644: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.558399319241289e-05
    2. 'points' → logprob: -10.625025749206543
    3. 'Points' → logprob: -14.375025749206543
    4. '
' → logprob: -16.250024795532227
    5. '_POINTS' → logprob: -16.250024795532227
    6. ' points' → logprob: -16.250024795532227
    7. '```' → logprob: -16.625024795532227
    8. 'start' → logprob: -17.000024795532227
    9. 'oints' → logprob: -17.500024795532227
    10. '+' → logprob: -17.500024795532227

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. ' ,' → logprob: -11.375014305114746
    3. '[idx' → logprob: -14.125014305114746
    4. '   ' → logprob: -14.500014305114746
    5. 'idx' → logprob: -14.750014305114746
    6. ',
' → logprob: -15.375014305114746
    7. ',index' → logprob: -16.00001335144043
    8. '‌,' → logprob: -16.37501335144043
    9. '```' → logprob: -16.50001335144043
    10. '_,' → logprob: -16.62501335144043

Token 646: ' used' (ID: 2061)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4740830957889557
    2. ' idx' → logprob: -0.9740830659866333
    3. '	idx' → logprob: -12.724082946777344
    4. '   ' → logprob: -13.224082946777344
    5. '(idx' → logprob: -14.349082946777344
    6. '    ' → logprob: -15.474082946777344
    7. '       ' → logprob: -15.974082946777344
    8. 'index' → logprob: -15.974082946777344
    9. ' ' → logprob: -16.224082946777344
    10. '[idx' → logprob: -16.349082946777344

Token 647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.250004768371582
    3. 'idx' → logprob: -16.3750057220459
    4. '```' → logprob: -16.7500057220459
    5. ',
' → logprob: -16.8750057220459
    6. '(idx' → logprob: -18.1250057220459
    7. '           ' → logprob: -18.1250057220459
    8. ' idx' → logprob: -18.1250057220459
    9. ',index' → logprob: -18.3750057220459
    10. '‌,' → logprob: -18.7500057220459

Token 648: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.04858771339058876
    2. ' idx' → logprob: -3.0485877990722656
    3. '(idx' → logprob: -15.923587799072266
    4. '	idx' → logprob: -15.923587799072266
    5. '   ' → logprob: -16.298587799072266
    6. '[idx' → logprob: -18.673587799072266
    7. '
' → logprob: -18.798587799072266
    8. '_idx' → logprob: -19.048587799072266
    9. 'index' → logprob: -19.423587799072266
    10. ' ' → logprob: -21.048587799072266

Token 649: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014163747429847717
    2. ' +' → logprob: -4.264163970947266
    3. '+
' → logprob: -15.764163970947266
    4. '＋' → logprob: -16.014163970947266
    5. '()+' → logprob: -18.389163970947266
    6. '+i' → logprob: -18.889163970947266
    7. ' +
' → logprob: -18.889163970947266
    8. '+[' → logprob: -19.139163970947266
    9. '+n' → logprob: -19.264163970947266
    10. '+k' → logprob: -19.389163970947266

Token 650: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.750075340270996
    4. '+' → logprob: -15.875075340270996
    5. '```' → logprob: -17.12507438659668
    6. ')' → logprob: -17.25007438659668
    7. ' +' → logprob: -17.62507438659668
    8. '
' → logprob: -19.50007438659668
    9. ',' → logprob: -20.00007438659668
    10. '`' → logprob: -20.12507438659668

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.625
    4. '
' → logprob: -18.5
    5. '   ' → logprob: -19.25
    6. '``' → logprob: -20.25
    7. ')' → logprob: -20.8125
    8. '۱' → logprob: -20.875
    9. '`' → logprob: -21.0625
    10. '１' → logprob: -21.1875

Token 652: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4749731123447418
    2. '):
' → logprob: -0.9749730825424194
    3. '       ' → logprob: -7.599973201751709
    4. ')' → logprob: -8.09997272491455
    5. '   ' → logprob: -9.72497272491455
    6. '):
' → logprob: -11.22497272491455
    7. ':' → logprob: -12.09997272491455
    8. '):

' → logprob: -12.34997272491455
    9. '           ' → logprob: -13.22497272491455
    10. ' ):' → logprob: -13.84997272491455

Token 653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011951648048125207
    2. '               ' → logprob: -9.87511920928955
    3. 'return' → logprob: -10.25011920928955
    4. ' return' → logprob: -11.75011920928955
    5. '		' → logprob: -12.00011920928955
    6. '
' → logprob: -12.37511920928955
    7. '       ' → logprob: -12.50011920928955
    8. '                       ' → logprob: -13.37511920928955
    9. '```' → logprob: -13.37511920928955
    10. '                           ' → logprob: -13.50011920928955

Token 654: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1658143252134323
    2. '           ' → logprob: -1.9158142805099487
    3. ' return' → logprob: -5.415814399719238
    4. '               ' → logprob: -6.790814399719238
    5. '
' → logprob: -13.540814399719238
    6. '   ' → logprob: -14.290814399719238
    7. '	return' → logprob: -14.415814399719238
    8. '{return' → logprob: -14.665814399719238
    9. '```' → logprob: -14.790814399719238
    10. ':return' → logprob: -14.790814399719238

Token 655: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868710398674011
    2. ' True' → logprob: -1.136871099472046
    3. '(True' → logprob: -20.886871337890625
    4. '=True' → logprob: -21.261871337890625
    5. '   ' → logprob: -22.261871337890625
    6. 'False' → logprob: -22.636871337890625
    7. ' ' → logprob: -23.011871337890625
    8. 'true' → logprob: -23.511871337890625
    9. ' true' → logprob: -23.761871337890625
    10. '_true' → logprob: -24.511871337890625

Token 656: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010410251561552286
    2. '
' → logprob: -6.876040935516357
    3. '        
' → logprob: -11.876041412353516
    4. '
' → logprob: -15.001041412353516
    5. '           ' → logprob: -15.501041412353516
    6. '```' → logprob: -15.876041412353516
    7. '   ' → logprob: -16.001041412353516
    8. '#' → logprob: -16.251041412353516
    9. '            
' → logprob: -16.376041412353516
    10. '<|end|>' → logprob: -16.501041412353516

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.29340603761375e-05
    2. 'for' → logprob: -9.750092506408691
    3. '#' → logprob: -11.375092506408691
    4. '```' → logprob: -11.625092506408691
    5. '
' → logprob: -11.875092506408691
    6. '        
' → logprob: -12.375092506408691
    7. ' for' → logprob: -13.875092506408691
    8. '           ' → logprob: -14.125092506408691
    9. '   ' → logprob: -14.750092506408691
    10. '            
' → logprob: -16.000093460083008

Token 658: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011602196609601378
    2. '
' → logprob: -6.876160144805908
    3. 'for' → logprob: -9.251160621643066
    4. ' for' → logprob: -10.501160621643066
    5. '#' (adapté à ' #') → logprob: -13.001160621643066
    6. '   ' → logprob: -13.751160621643066
    7. '        
' → logprob: -15.376160621643066
    8. '           ' → logprob: -16.12615966796875
    9. '      ' → logprob: -16.75115966796875
    10. '
' → logprob: -16.87615966796875

Token 659: ' Back' (ID: 9793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011030614376068115
    2. ' for' → logprob: -5.011030673980713
    3. '       ' → logprob: -5.511030673980713
    4. '#' → logprob: -8.261030197143555
    5. '   ' → logprob: -12.511030197143555
    6. '           ' → logprob: -14.261030197143555
    7. '
' → logprob: -14.511030197143555
    8. ' #' → logprob: -15.386030197143555
    9. 'For' → logprob: -15.636030197143555
    10. '	for' → logprob: -16.261030197143555

Token 660: 'track' (ID: 22792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5145918726921082
    2. 'track' → logprob: -1.139591932296753
    3. '           ' → logprob: -2.764591932296753
    4. 'tracking' → logprob: -4.139591693878174
    5. '               ' → logprob: -6.014591693878174
    6. 'trace' → logprob: -8.764592170715332
    7. '   ' → logprob: -9.014592170715332
    8. '```' → logprob: -9.139592170715332
    9. 'tract' → logprob: -9.389592170715332
    10. '                       ' → logprob: -9.514592170715332

Token 661: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011450991732999682
    2. '
' → logprob: -7.126144886016846
    3. ' for' → logprob: -8.126145362854004
    4. 'for' → logprob: -10.251145362854004
    5. '        
' → logprob: -12.001145362854004
    6. '           ' → logprob: -13.626145362854004
    7. '```' → logprob: -13.876145362854004
    8. '<|end|>' → logprob: -14.626145362854004
    9. '   ' → logprob: -14.876145362854004
    10. '    
' → logprob: -16.126144409179688

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001693388563580811
    2. ' for' → logprob: -6.501693248748779
    3. 'for' → logprob: -8.626693725585938
    4. '           ' → logprob: -12.126693725585938
    5. '   ' → logprob: -12.501693725585938
    6. '
' → logprob: -13.501693725585938
    7. '```' → logprob: -14.376693725585938
    8. '               ' → logprob: -14.876693725585938
    9. ' ' → logprob: -16.376693725585938
    10. '     ' → logprob: -16.751693725585938

Token 663: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003894614754244685
    2. '       ' → logprob: -5.753894805908203
    3. ' for' → logprob: -7.253894805908203
    4. '```' → logprob: -11.878894805908203
    5. '
' → logprob: -13.253894805908203
    6. '   ' → logprob: -15.003894805908203
    7. '	for' → logprob: -16.003894805908203
    8. '           ' → logprob: -16.378894805908203
    9. '``' → logprob: -18.753894805908203
    10. ' ' → logprob: -18.753894805908203

Token 664: ' rr' (ID: 54129)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.07954671233892441
    2. ' rr' → logprob: -2.5795466899871826
    3. '(rr' → logprob: -7.329546928405762
    4. '_rr' → logprob: -14.329546928405762
    5. '(' → logprob: -16.704545974731445
    6. 'RR' → logprob: -16.954545974731445
    7. 'r' → logprob: -17.329545974731445
    8. ' ' → logprob: -17.829545974731445
    9. '
' → logprob: -17.954545974731445
    10. '   ' → logprob: -18.079545974731445

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023750975378789008
    2. ' ,' → logprob: -8.375237464904785
    3. ' in' → logprob: -12.500237464904785
    4. ',c' → logprob: -13.375237464904785
    5. '_,' → logprob: -14.875237464904785
    6. ',r' → logprob: -15.125237464904785
    7. ',
' → logprob: -16.0002384185791
    8. '```' → logprob: -16.1252384185791
    9. '‌,' → logprob: -16.2502384185791
    10. 'in' → logprob: -16.2502384185791

Token 666: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.2519322335720062
    2. ' cc' → logprob: -1.5019322633743286
    3. '_cc' → logprob: -13.751932144165039
    4. '	cc' → logprob: -14.126932144165039
    5. '(cc' → logprob: -14.251932144165039
    6. ',' → logprob: -14.376932144165039
    7. ' CC' → logprob: -17.25193214416504
    8. '.cc' → logprob: -17.62693214416504
    9. 'CC' → logprob: -18.12693214416504
    10. 'c' → logprob: -18.12693214416504

Token 667: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023247109726071358
    2. 'in' → logprob: -3.773247003555298
    3. ' ' → logprob: -14.273246765136719
    4. ',' → logprob: -15.523246765136719
    5. 'import' → logprob: -15.523246765136719
    6. '```' → logprob: -15.648246765136719
    7. '	in' → logprob: -15.648246765136719
    8. '   ' → logprob: -16.27324676513672
    9. 'In' → logprob: -16.89824676513672
    10. '[' → logprob: -16.89824676513672

Token 668: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.023245595395565033
    2. ' path' → logprob: -3.7732455730438232
    3. '[path' → logprob: -16.273244857788086
    4. '(path' → logprob: -17.148244857788086
    5. '	path' → logprob: -17.648244857788086
    6. '   ' → logprob: -17.898244857788086
    7. ' ' → logprob: -18.398244857788086
    8. 'Path' → logprob: -19.273244857788086
    9. '_path' → logprob: -19.523244857788086
    10. '.path' → logprob: -19.648244857788086

Token 669: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025968030095100403
    2. ':' → logprob: -4.650968074798584
    3. ':
' → logprob: -5.025968074798584
    4. ' in' → logprob: -5.400968074798584
    5. '[' → logprob: -6.775968074798584
    6. '       ' → logprob: -7.025968074798584
    7. ',' → logprob: -7.275968074798584
    8. '   ' → logprob: -7.400968074798584
    9. '=' → logprob: -8.025967597961426
    10. '               ' → logprob: -8.275967597961426

Token 670: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003231306094676256
    2. ' used' → logprob: -5.753231525421143
    3. '               ' → logprob: -10.128231048583984
    4. 'used' → logprob: -11.878231048583984
    5. '   ' → logprob: -12.128231048583984
    6. '```' → logprob: -15.003231048583984
    7. '       ' → logprob: -15.128231048583984
    8. '
' → logprob: -15.128231048583984
    9. '                   ' → logprob: -16.378231048583984
    10. '          ' → logprob: -16.878231048583984

Token 671: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.08186626434326172
    2. 'used' (adapté à ' used') → logprob: -2.5818662643432617
    3. '           ' → logprob: -5.831866264343262
    4. '               ' → logprob: -10.206866264343262
    5. '       ' → logprob: -13.706866264343262
    6. '   ' → logprob: -14.081866264343262
    7. '.used' → logprob: -14.956866264343262
    8. '_used' → logprob: -17.081867218017578
    9. ' ' → logprob: -17.206867218017578
    10. '         ' → logprob: -17.206867218017578

Token 672: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '[r' → logprob: -13.125001907348633
    3. '(rr' → logprob: -17.125001907348633
    4. 'rr' → logprob: -18.375001907348633
    5. ' [' → logprob: -18.625001907348633
    6. '[row' → logprob: -19.500001907348633
    7. '][' → logprob: -19.750001907348633
    8. '```' → logprob: -20.625001907348633
    9. ')[' → logprob: -20.750001907348633
    10. '[
' → logprob: -21.000001907348633

Token 673: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -1.7954958821064793e-05
    2. 'r' → logprob: -11.500018119812012
    3. ' rr' → logprob: -12.500018119812012
    4. '[' → logprob: -13.125018119812012
    5. '(rr' → logprob: -13.250018119812012
    6. '_rr' → logprob: -15.875018119812012
    7. '[r' → logprob: -17.125017166137695
    8. 'rrrr' → logprob: -17.500017166137695
    9. '][' → logprob: -17.875017166137695
    10. '   ' → logprob: -18.375017166137695

Token 674: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012675981968641281
    2. '[' → logprob: -4.387675762176514
    3. '[r' → logprob: -9.137676239013672
    4. '           ' → logprob: -11.012676239013672
    5. '       ' → logprob: -11.137676239013672
    6. '[c' → logprob: -11.137676239013672
    7. ')[' → logprob: -12.762676239013672
    8. '```' → logprob: -13.137676239013672
    9. '               ' → logprob: -13.762676239013672
    10. ' ][' → logprob: -13.887676239013672

Token 675: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -3.5597102396423e-05
    2. 'c' → logprob: -10.250035285949707
    3. ' cc' → logprob: -16.375036239624023
    4. 'rr' → logprob: -18.250036239624023
    5. '	cc' → logprob: -20.000036239624023
    6. '```' → logprob: -20.875036239624023
    7. '(cc' → logprob: -21.125036239624023
    8. 'False' → logprob: -21.125036239624023
    9. '   ' → logprob: -21.500036239624023
    10. '[' → logprob: -21.500036239624023

Token 676: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017767686222214252
    2. ']=' → logprob: -8.750177383422852
    3. '=' → logprob: -11.000177383422852
    4. ' ]' → logprob: -13.250177383422852
    5. ' =' → logprob: -14.625177383422852
    6. '[' → logprob: -16.62517738342285
    7. '   ' → logprob: -16.62517738342285
    8. ')' → logprob: -16.75017738342285
    9. '           ' → logprob: -17.37517738342285
    10. '       ' → logprob: -17.62517738342285

Token 677: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000912774819880724
    2. ' =' → logprob: -7.000912666320801
    3. '=False' → logprob: -13.8759126663208
    4. '[' → logprob: -16.250913619995117
    5. ']' → logprob: -16.625913619995117
    6. ']=' → logprob: -17.875913619995117
    7. '=
' → logprob: -19.000913619995117
    8. '=True' → logprob: -19.000913619995117
    9. '   ' → logprob: -19.625913619995117
    10. '```' → logprob: -20.000913619995117

Token 678: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -15.0
    3. '(False' → logprob: -21.375
    4. '=False' → logprob: -23.875
    5. '   ' → logprob: -24.25
    6. 'false' → logprob: -25.0
    7. 'True' → logprob: -25.125
    8. '.False' → logprob: -25.125
    9. '_false' → logprob: -25.375
    10. '```' → logprob: -25.625

Token 679: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025455779395997524
    2. '<|end|>' → logprob: -6.002545356750488
    3. '
' → logprob: -10.752545356750488
    4. '   ' → logprob: -11.127545356750488
    5. '           ' → logprob: -11.627545356750488
    6. ' return' → logprob: -11.877545356750488
    7. 'return' → logprob: -12.002545356750488
    8. ' used' → logprob: -12.502545356750488
    9. '<|end|>' → logprob: -12.877545356750488
    10. ',' → logprob: -14.127545356750488

Token 680: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019521240144968033
    2. '       ' → logprob: -4.019521236419678
    3. '<|end|>' → logprob: -7.144521236419678
    4. '```' → logprob: -8.144521713256836
    5. ')' → logprob: -9.394521713256836
    6. '    
' → logprob: -9.894521713256836
    7. '        
' → logprob: -10.019521713256836
    8. '           ' → logprob: -10.144521713256836
    9. 'return' → logprob: -11.269521713256836
    10. '   ' → logprob: -12.144521713256836

Token 681: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018173474818468094
    2. 'return' (adapté à ' return') → logprob: -4.018173694610596
    3. '```' → logprob: -11.018173217773438
    4. ' return' → logprob: -12.518173217773438
    5. '    
' → logprob: -14.143173217773438
    6. '       ' → logprob: -14.143173217773438
    7. '
' → logprob: -14.643173217773438
    8. '	return' → logprob: -14.643173217773438
    9. 'eturn' → logprob: -15.143173217773438
    10. '<|end|>' → logprob: -15.768173217773438

Token 682: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. '(False' → logprob: -21.000045776367188
    4. 'false' → logprob: -23.125045776367188
    5. '_false' → logprob: -23.875045776367188
    6. '=False' → logprob: -24.875045776367188
    7. '.False' → logprob: -26.875045776367188
    8. 'None' → logprob: -27.375045776367188
    9. '   ' → logprob: -27.500045776367188
    10. 'True' → logprob: -27.625045776367188

Token 683: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6835445761680603
    2. '<|end|>' → logprob: -0.9335445761680603
    3. '#' → logprob: -2.683544635772705
    4. 'n' → logprob: -3.808544635772705
    5. '
' → logprob: -4.933544635772705
    6. '```' → logprob: -6.308544635772705
    7. '<|end|>' → logprob: -7.183544635772705
    8. 'if' → logprob: -7.433544635772705
    9. 'print' → logprob: -8.308544158935547
    10. '(n' → logprob: -8.433544158935547

Token 684: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7897214293479919
    2. 'def' → logprob: -1.0397214889526367
    3. 'if' → logprob: -1.9147214889526367
    4. '#' → logprob: -3.1647214889526367
    5. 'print' → logprob: -6.164721488952637
    6. '```' → logprob: -8.039721488952637
    7. 'r' → logprob: -9.039721488952637
    8. 'data' → logprob: -9.789721488952637
    9. 'import' → logprob: -10.039721488952637
    10. ' n' → logprob: -10.414721488952637

Token 685: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03804366663098335
    2. 'main' → logprob: -3.288043737411499
    3. ' solve' → logprob: -13.288043975830078
    4. 'solve' → logprob: -14.538043975830078
    5. '	main' → logprob: -17.413043975830078
    6. '_main' → logprob: -17.538043975830078
    7. ' parse' → logprob: -19.788043975830078
    8. 'def' → logprob: -20.038043975830078
    9. ' find' → logprob: -20.038043975830078
    10. ' solution' → logprob: -20.288043975830078

Token 686: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011522514978423715
    2. '():
' → logprob: -9.125115394592285
    3. ' ():' → logprob: -12.500115394592285
    4. '()' → logprob: -13.125115394592285
    5. '(' → logprob: -15.000115394592285
    6. '():
' → logprob: -16.25011444091797
    7. '():

' → logprob: -16.37511444091797
    8. '_' → logprob: -17.12511444091797
    9. '(":' → logprob: -17.50011444091797
    10. ':' → logprob: -17.87511444091797

Token 687: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4032161831855774
    2. 'n' → logprob: -1.1532161235809326
    3. ' n' → logprob: -4.153216361999512
    4. '	n' → logprob: -7.778216361999512
    5. '```' → logprob: -9.528216361999512
    6. 'import' → logprob: -12.528216361999512
    7. '_n' → logprob: -13.028216361999512
    8. ',n' → logprob: -14.778216361999512
    9. '   ' → logprob: -15.528216361999512
    10. '``' → logprob: -15.528216361999512

Token 688: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011699594557285309
    2. ' n' → logprob: -4.511699676513672
    3. '   ' → logprob: -7.511699676513672
    4. 'import' → logprob: -9.886699676513672
    5. 't' → logprob: -10.136699676513672
    6. 'N' → logprob: -11.511699676513672
    7. ' import' → logprob: -13.511699676513672
    8. ' t' → logprob: -13.886699676513672
    9. '	n' → logprob: -13.886699676513672
    10. 'input' → logprob: -14.636699676513672

Token 689: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.06197160854935646
    2. 'True' → logprob: -2.811971664428711
    3. '(True' → logprob: -12.936971664428711
    4. '1' → logprob: -13.686971664428711
    5. '=True' → logprob: -15.061971664428711
    6. ' ' → logprob: -16.43697166442871
    7. '   ' → logprob: -18.31197166442871
    8. ' ' → logprob: -19.56197166442871
    9. '
' → logprob: -19.56197166442871
    10. '  ' → logprob: -19.81197166442871

Token 690: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13936224579811096
    2. '   ' → logprob: -2.514362335205078
    3. ':
' → logprob: -3.639362335205078
    4. '():' → logprob: -4.139362335205078
    5. '():
' → logprob: -5.514362335205078
    6. '(line' → logprob: -7.014362335205078
    7. '       ' → logprob: -7.889362335205078
    8. ' line' → logprob: -8.139362335205078
    9. '```' → logprob: -8.389362335205078
    10. '<|end|>' → logprob: -8.639362335205078

Token 691: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00023083435371518135
    2. '       ' → logprob: -8.50023078918457
    3. ' line' → logprob: -11.12523078918457
    4. 'line' → logprob: -12.37523078918457
    5. '```' → logprob: -12.62523078918457
    6. '	line' → logprob: -12.87523078918457
    7. 'try' → logprob: -13.12523078918457
    8. '   ' → logprob: -16.25023078918457
    9. '    
' → logprob: -16.62523078918457
    10. '    ' → logprob: -16.87523078918457

Token 692: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31629008054733276
    2. 'n' (adapté à ' n') → logprob: -2.0662901401519775
    3. 'line' → logprob: -2.0662901401519775
    4. ' line' → logprob: -4.566289901733398
    5. 'try' → logprob: -5.066289901733398
    6. ' n' → logprob: -7.816289901733398
    7. '```' → logprob: -7.816289901733398
    8. 'N' → logprob: -8.691289901733398
    9. ' try' → logprob: -8.941289901733398
    10. 'l' → logprob: -11.191289901733398

Token 693: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740850329399109
    2. '=' → logprob: -0.9740850329399109
    3. '   ' → logprob: -12.724084854125977
    4. ' ' → logprob: -13.724084854125977
    5. '=int' → logprob: -13.724084854125977
    6. ' =
' → logprob: -13.849084854125977
    7. '=input' → logprob: -14.724084854125977
    8. ',' → logprob: -15.099084854125977
    9. ' ' → logprob: -15.599084854125977
    10. '.' → logprob: -15.724084854125977

Token 694: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3868713080883026
    2. ' int' → logprob: -1.136871337890625
    3. '=int' → logprob: -15.511871337890625
    4. 'input' → logprob: -17.011871337890625
    5. '   ' → logprob: -17.136871337890625
    6. ' input' → logprob: -17.636871337890625
    7. '(int' → logprob: -17.761871337890625
    8. '0' → logprob: -18.136871337890625
    9. '	int' → logprob: -18.136871337890625
    10. ' ' → logprob: -18.136871337890625

Token 695: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19219493865966797
    2. '()' → logprob: -1.942194938659668
    3. 'input' → logprob: -3.692194938659668
    4. '(sys' → logprob: -5.442194938659668
    5. '(' → logprob: -6.192194938659668
    6. 'sys' → logprob: -9.317194938659668
    7. ' input' → logprob: -10.692194938659668
    8. '()
' → logprob: -10.692194938659668
    9. '(
' → logprob: -11.817194938659668
    10. '('' → logprob: -12.317194938659668

Token 696: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002273723715916276
    2. '.readline' → logprob: -6.5022735595703125
    3. '().' → logprob: -7.3772735595703125
    4. 'stdin' → logprob: -9.252273559570312
    5. '.stdout' → logprob: -10.752273559570312
    6. '.' → logprob: -11.252273559570312
    7. '(stdin' → logprob: -11.377273559570312
    8. '()' → logprob: -14.252273559570312
    9. '```' → logprob: -14.252273559570312
    10. '.argv' → logprob: -14.252273559570312

Token 697: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005645881756208837
    2. '().' → logprob: -7.6255645751953125
    3. '.' → logprob: -9.500564575195312
    4. '()
' → logprob: -14.875564575195312
    5. ' readline' → logprob: -15.000564575195312
    6. '()' → logprob: -15.250564575195312
    7. ').' → logprob: -15.625564575195312
    8. '())' → logprob: -15.750564575195312
    9. ')' → logprob: -15.875564575195312
    10. 'read' → logprob: -15.875564575195312

Token 698: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07919611036777496
    2. '().' → logprob: -2.5791962146759033
    3. '())
' → logprob: -8.204195976257324
    4. '()' → logprob: -10.704195976257324
    5. ')' → logprob: -11.829195976257324
    6. '.readline' → logprob: -13.954195976257324
    7. ' ())' → logprob: -14.454195976257324
    8. '()
' → logprob: -14.704195976257324
    9. '())

' → logprob: -14.954195976257324
    10. '();)' → logprob: -15.079195976257324

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02662629820406437
    2. 'if' → logprob: -3.7766263484954834
    3. ' if' → logprob: -5.776626110076904
    4. '   ' → logprob: -8.776626586914062
    5. '<|end|>' → logprob: -9.901626586914062
    6. '	if' → logprob: -10.651626586914062
    7. '	' → logprob: -11.276626586914062
    8. '```' → logprob: -11.401626586914062
    9. ' ' → logprob: -12.526626586914062
    10. '        
' → logprob: -12.651626586914062

Token 700: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4334937632083893
    2. 'if' (adapté à ' if') → logprob: -1.433493733406067
    3. ' if' → logprob: -2.1834938526153564
    4. '	if' → logprob: -7.683493614196777
    5. '	' → logprob: -9.183493614196777
    6. '   ' → logprob: -9.808493614196777
    7. '	   ' → logprob: -11.808493614196777
    8. '<|end|>' → logprob: -12.683493614196777
    9. 'If' → logprob: -13.308493614196777
    10. '```' → logprob: -13.433493614196777

Token 701: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017769228434190154
    2. ' n' → logprob: -6.501776695251465
    3. ' not' → logprob: -8.251776695251465
    4. 'not' → logprob: -11.251776695251465
    5. '   ' → logprob: -14.376776695251465
    6. '	n' → logprob: -15.876776695251465
    7. '0' → logprob: -18.12677764892578
    8. '_n' → logprob: -18.12677764892578
    9. 'n't' → logprob: -18.25177764892578
    10. '       ' → logprob: -19.00177764892578

Token 702: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38689079880714417
    2. '==' → logprob: -1.1368907690048218
    3. '=' → logprob: -11.636890411376953
    4. ')==' → logprob: -12.511890411376953
    5. '===' → logprob: -13.261890411376953
    6. '<=' → logprob: -13.261890411376953
    7. '()==' → logprob: -13.511890411376953
    8. ')' → logprob: -14.386890411376953
    9. ' <=' → logprob: -14.886890411376953
    10. ']==' → logprob: -15.011890411376953

Token 703: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -21.3750057220459
    4. '۰' → logprob: -22.0000057220459
    5. '０' → logprob: -22.5000057220459
    6. '=' → logprob: -22.8750057220459
    7. '  ' → logprob: -23.7500057220459
    8. '০' → logprob: -24.0000057220459
    9. '```' → logprob: -24.1250057220459
    10. ' ' → logprob: -25.0000057220459

Token 704: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '０' → logprob: -22.375
    4. '```' → logprob: -22.875
    5. '۰' → logprob: -23.375
    6. ')' → logprob: -24.0
    7. '00' → logprob: -24.875
    8. '=' → logprob: -25.5
    9. '``' → logprob: -25.875
    10. '০' → logprob: -25.875

Token 705: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31363481283187866
    2. ':' → logprob: -1.3136348724365234
    3. '       ' → logprob: -8.688634872436523
    4. '           ' → logprob: -9.188634872436523
    5. '   ' → logprob: -9.563634872436523
    6. ':return' → logprob: -11.063634872436523
    7. '():
' → logprob: -12.188634872436523
    8. ':
' → logprob: -12.563634872436523
    9. '):
' → logprob: -12.688634872436523
    10. ',' → logprob: -14.188634872436523

Token 706: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1517960956552997e-05
    2. '		' → logprob: -12.375011444091797
    3. '       ' → logprob: -12.625011444091797
    4. '	       ' → logprob: -13.875011444091797
    5. '   ' → logprob: -14.375011444091797
    6. '          ' → logprob: -14.750011444091797
    7. ' break' → logprob: -15.125011444091797
    8. 'break' → logprob: -15.125011444091797
    9. '               ' → logprob: -15.250011444091797
    10. '
' → logprob: -15.875011444091797

Token 707: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.02498685196042061
    2. ' break' → logprob: -4.024986743927002
    3. 'return' → logprob: -5.024986743927002
    4. '       ' → logprob: -8.52498722076416
    5. '	break' → logprob: -10.27498722076416
    6. ' return' → logprob: -11.89998722076416
    7. '           ' → logprob: -13.52498722076416
    8. '   ' → logprob: -15.02498722076416
    9. '               ' → logprob: -15.39998722076416
    10. '_break' → logprob: -15.64998722076416

Token 708: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3000029921531677
    2. '   ' → logprob: -2.0500030517578125
    3. '```' → logprob: -2.3000030517578125
    4. '<|end|>' → logprob: -4.4250030517578125
    5. '	grid' → logprob: -5.0500030517578125
    6. '        
' → logprob: -5.4250030517578125
    7. 'grid' → logprob: -5.4250030517578125
    8. '    
' → logprob: -7.4250030517578125
    9. '	' → logprob: -7.9250030517578125
    10. '``' → logprob: -8.550003051757812

Token 709: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7890934944152832
    2. '```' → logprob: -1.0390934944152832
    3. '   ' → logprob: -1.9140934944152832
    4. 'grid' → logprob: -3.914093494415283
    5. '<|end|>' → logprob: -4.289093494415283
    6. '        
' → logprob: -5.039093494415283
    7. '    
' → logprob: -6.664093494415283
    8. '	grid' → logprob: -6.664093494415283
    9. ' grid' → logprob: -7.789093494415283
    10. '``' → logprob: -8.039093017578125

Token 710: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.028107047080993652
    2. ' grid' → logprob: -3.778107166290283
    3. '       ' → logprob: -5.778107166290283
    4. '   ' → logprob: -6.403107166290283
    5. '```' → logprob: -9.903106689453125
    6. '	grid' → logprob: -10.028106689453125
    7. '
' → logprob: -13.028106689453125
    8. '        
' → logprob: -14.278106689453125
    9. '(grid' → logprob: -14.903106689453125
    10. '.grid' → logprob: -15.028106689453125

Token 711: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00862887967377901
    2. '=' → logprob: -4.758628845214844
    3. '   ' → logprob: -11.883628845214844
    4. '=[]' → logprob: -12.758628845214844
    5. ' =
' → logprob: -13.633628845214844
    6. '[]' → logprob: -14.133628845214844
    7. ' =[' → logprob: -14.258628845214844
    8. '[' → logprob: -14.758628845214844
    9. ',' → logprob: -15.008628845214844
    10. '=[]
' → logprob: -15.133628845214844

Token 712: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024764856789261103
    2. '[n' → logprob: -6.502476692199707
    3. '[]' → logprob: -7.502476692199707
    4. '[]
' → logprob: -8.752476692199707
    5. '[int' → logprob: -9.252476692199707
    6. '[new' → logprob: -10.752476692199707
    7. '[class' → logprob: -11.252476692199707
    8. '[array' → logprob: -11.252476692199707
    9. '[s' → logprob: -11.752476692199707
    10. '[
' → logprob: -12.127476692199707

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003230829257518053
    2. ' for' → logprob: -5.878231048583984
    3. 'for' → logprob: -8.503231048583984
    4. '<|end|>' → logprob: -8.753231048583984
    5. '```' → logprob: -11.253231048583984
    6. '	' → logprob: -11.378231048583984
    7. '   ' → logprob: -11.753231048583984
    8. '	for' → logprob: -12.003231048583984
    9. '[' → logprob: -12.003231048583984
    10. '	   ' → logprob: -12.253231048583984

Token 714: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12825912237167358
    2. ' for' → logprob: -2.1282591819763184
    3. '       ' → logprob: -6.628259181976318
    4. '	for' → logprob: -12.62825870513916
    5. '   ' → logprob: -12.75325870513916
    6. '
' → logprob: -13.75325870513916
    7. '```' → logprob: -15.62825870513916
    8. '[' → logprob: -16.003259658813477
    9. ' ' → logprob: -16.128259658813477
    10. ' ' → logprob: -17.753259658813477

Token 715: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.2200749754119897e-06
    2. ' _' → logprob: -13.625001907348633
    3. '_i' → logprob: -14.750001907348633
    4. '_in' → logprob: -15.500001907348633
    5. '_range' → logprob: -15.625001907348633
    6. '_
' → logprob: -17.125001907348633
    7. ' in' → logprob: -17.500001907348633
    8. '_=' → logprob: -18.000001907348633
    9. '_

' → logprob: -19.500001907348633
    10. '_r' → logprob: -19.500001907348633

Token 716: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00026848804554902017
    2. 'range' → logprob: -8.750268936157227
    3. 'in' → logprob: -9.125268936157227
    4. ' range' → logprob: -14.125268936157227
    5. ' ' → logprob: -15.875268936157227
    6. '  ' → logprob: -16.625268936157227
    7. 'import' → logprob: -17.250268936157227
    8. 'i' → logprob: -17.250268936157227
    9. '_' → logprob: -17.625268936157227
    10. ' _' → logprob: -18.750268936157227

Token 717: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '	range' → logprob: -19.50002670288086
    4. '
' → logprob: -20.25002670288086
    5. '_' → logprob: -20.75002670288086
    6. '(range' → logprob: -21.00002670288086
    7. '_range' → logprob: -21.50002670288086
    8. 'r' → logprob: -21.62502670288086
    9. ')' → logprob: -21.62502670288086
    10. '.range' → logprob: -22.50002670288086

Token 718: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.743758760625497e-05
    2. 'n' → logprob: -9.500077247619629
    3. '(' → logprob: -12.875077247619629
    4. 'range' → logprob: -17.625078201293945
    5. ' n' → logprob: -18.125078201293945
    6. ' (' → logprob: -18.750078201293945
    7. '(range' → logprob: -19.250078201293945
    8. '	n' → logprob: -20.000078201293945
    9. '(int' → logprob: -20.000078201293945
    10. '(N' → logprob: -20.250078201293945

Token 719: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023655256256461143
    2. '):' → logprob: -3.7736551761627197
    3. '():
' → logprob: -9.02365493774414
    4. '):
' → logprob: -9.02365493774414
    5. '       ' → logprob: -9.77365493774414
    6. '   ' → logprob: -10.02365493774414
    7. ':
' → logprob: -10.89865493774414
    8. ')' → logprob: -11.02365493774414
    9. '()):
' → logprob: -11.77365493774414
    10. ':' → logprob: -12.27365493774414

Token 720: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013183351838961244
    2. '   ' → logprob: -7.626318454742432
    3. '	       ' → logprob: -8.126317977905273
    4. '	   ' → logprob: -8.626317977905273
    5. '		   ' → logprob: -9.376317977905273
    6. '```' → logprob: -9.501317977905273
    7. '       ' → logprob: -9.626317977905273
    8. '		' → logprob: -10.626317977905273
    9. '    	   ' → logprob: -10.751317977905273
    10. '	           ' → logprob: -11.001317977905273

Token 721: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.38093480467796326
    2. 'row' → logprob: -1.6309348344802856
    3. ' grid' → logprob: -2.380934715270996
    4. ' row' → logprob: -3.755934715270996
    5. 'line' → logprob: -5.380934715270996
    6. '           ' → logprob: -8.005934715270996
    7. ' line' → logprob: -8.505934715270996
    8. 'list' → logprob: -11.255934715270996
    9. 'arr' → logprob: -11.505934715270996
    10. '   ' → logprob: -11.630934715270996

Token 722: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.018481066450476646
    2. '().' → logprob: -4.018481254577637
    3. '.' → logprob: -8.768481254577637
    4. '=' → logprob: -9.018481254577637
    5. '()' → logprob: -10.518481254577637
    6. '=list' → logprob: -12.018481254577637
    7. '.readline' → logprob: -12.518481254577637
    8. ' .' → logprob: -12.643481254577637
    9. 'append' → logprob: -12.893481254577637
    10. ' =' → logprob: -13.018481254577637

Token 723: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.00036787090357393026
    2. '(' → logprob: -8.000368118286133
    3. 'list' → logprob: -10.375368118286133
    4. '([' → logprob: -14.250368118286133
    5. '=list' → logprob: -15.375368118286133
    6. '(tuple' → logprob: -15.375368118286133
    7. ' list' → logprob: -15.875368118286133
    8. '(
' → logprob: -17.375368118286133
    9. '[list' → logprob: -18.375368118286133
    10. '	list' → logprob: -18.625368118286133

Token 724: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.3856492842023727e-06
    2. 'map' → logprob: -14.000000953674316
    3. '(' → logprob: -14.500000953674316
    4. '(int' → logprob: -19.000001907348633
    5. ' map' → logprob: -19.500001907348633
    6. '	map' → logprob: -19.750001907348633
    7. '(
' → logprob: -19.875001907348633
    8. '```' → logprob: -20.000001907348633
    9. '.map' → logprob: -20.375001907348633
    10. ',map' → logprob: -20.500001907348633

Token 725: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002692032721824944
    2. 'int' → logprob: -8.250268936157227
    3. ',int' → logprob: -12.500268936157227
    4. ' int' → logprob: -13.500268936157227
    5. '(' → logprob: -13.625268936157227
    6. '=int' → logprob: -14.000268936157227
    7. '```' → logprob: -15.625268936157227
    8. '(input' → logprob: -15.875268936157227
    9. '[int' → logprob: -16.375268936157227
    10. '(lambda' → logprob: -16.375268936157227

Token 726: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.45486530661582947
    2. ',' → logprob: -1.3298653364181519
    3. '(sys' → logprob: -2.5798652172088623
    4. '(input' → logprob: -4.454865455627441
    5. 'sys' → logprob: -4.704865455627441
    6. 'input' → logprob: -5.454865455627441
    7. '(),' → logprob: -9.579865455627441
    8. ' ,' → logprob: -9.954865455627441
    9. '=sys' → logprob: -10.704865455627441
    10. ' sys' → logprob: -11.079865455627441

Token 727: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02984953112900257
    2. 'sys' → logprob: -3.5298495292663574
    3. ' input' → logprob: -9.279850006103516
    4. ' sys' → logprob: -12.404850006103516
    5. 'lambda' → logprob: -14.404850006103516
    6. '(input' → logprob: -15.154850006103516
    7. '
' → logprob: -15.279850006103516
    8. '(sys' → logprob: -15.654850006103516
    9. ',input' → logprob: -15.779850006103516
    10. '<input' → logprob: -16.779850006103516

Token 728: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.12764877080917358
    2. '.readline' → logprob: -2.1276488304138184
    3. 'stdin' → logprob: -7.377648830413818
    4. '(stdin' → logprob: -10.12764835357666
    5. 'sys' → logprob: -10.37764835357666
    6. '=sys' → logprob: -11.12764835357666
    7. '(sys' → logprob: -12.62764835357666
    8. '().' → logprob: -13.12764835357666
    9. '.' → logprob: -13.62764835357666
    10. '.stdout' → logprob: -13.62764835357666

Token 729: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5048530030981055e-06
    2. '.stdin' → logprob: -13.750001907348633
    3. 'stdin' → logprob: -14.750001907348633
    4. '.readlines' → logprob: -17.250001907348633
    5. ' readline' → logprob: -17.750001907348633
    6. '().' → logprob: -18.000001907348633
    7. 'read' → logprob: -18.500001907348633
    8. '.' → logprob: -18.750001907348633
    9. '.read' → logprob: -19.125001907348633
    10. '(stdin' → logprob: -19.875001907348633

Token 730: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6240566083070007e-06
    2. '.readline' → logprob: -13.750001907348633
    3. '()' → logprob: -15.000001907348633
    4. '.strip' → logprob: -16.750001907348633
    5. '.split' → logprob: -17.875001907348633
    6. ' ().' → logprob: -18.000001907348633
    7. '()[' → logprob: -18.250001907348633
    8. '.rstrip' → logprob: -18.500001907348633
    9. '()
' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.250001907348633

Token 731: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20344045758247375
    2. 'strip' → logprob: -1.7034404277801514
    3. 'rstrip' → logprob: -6.2034406661987305
    4. 'read' → logprob: -13.20344066619873
    5. ' split' → logprob: -14.57844066619873
    6. ' strip' → logprob: -15.20344066619873
    7. '(split' → logprob: -15.95344066619873
    8. 'str' → logprob: -16.828439712524414
    9. 'spl' → logprob: -18.328439712524414
    10. '_split' → logprob: -19.078439712524414

Token 732: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.05254446715116501
    2. '()' → logprob: -3.927544355392456
    3. ')))' → logprob: -4.052544593811035
    4. '()))' → logprob: -4.302544593811035
    5. '())))
' → logprob: -7.802544593811035
    6. '())' → logprob: -8.927544593811035
    7. '(' → logprob: -11.177544593811035
    8. '().' → logprob: -11.677544593811035
    9. '))))' → logprob: -12.302544593811035
    10. '()
' → logprob: -12.802544593811035

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016813477501273155
    2. 'used' → logprob: -4.391813278198242
    3. ' used' → logprob: -5.891813278198242
    4. '```' → logprob: -7.641813278198242
    5. '<|end|>' → logprob: -8.016813278198242
    6. '
' → logprob: -8.266813278198242
    7. '        
' → logprob: -8.516813278198242
    8. '   ' → logprob: -8.641813278198242
    9. '           ' → logprob: -10.141813278198242
    10. '_used' → logprob: -10.766813278198242

Token 734: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0014977219980210066
    2. ' used' → logprob: -6.751497745513916
    3. '   ' → logprob: -8.751497268676758
    4. '       ' → logprob: -8.876497268676758
    5. '
' → logprob: -10.626497268676758
    6. '```' → logprob: -12.251497268676758
    7. '        
' → logprob: -15.251497268676758
    8. '    
' → logprob: -16.376497268676758
    9. '_used' → logprob: -16.501497268676758
    10. '.used' → logprob: -16.501497268676758

Token 735: ' find' (ID: 1646)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.030664656311273575
    2. 'used' → logprob: -4.030664443969727
    3. ' start' → logprob: -4.780664443969727
    4. '       ' → logprob: -5.780664443969727
    5. ' used' → logprob: -7.030664443969727
    6. 'import' → logprob: -10.280664443969727
    7. '```' → logprob: -11.155664443969727
    8. '   ' → logprob: -11.280664443969727
    9. '#' → logprob: -12.280664443969727
    10. '        ' → logprob: -13.780664443969727

Token 736: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0793803483247757
    2. ' start' → logprob: -2.5793802738189697
    3. 'negative' → logprob: -8.57938003540039
    4. '   ' → logprob: -9.70438003540039
    5. ' negative' → logprob: -10.07938003540039
    6. '```' → logprob: -10.20438003540039
    7. 'neg' → logprob: -10.57938003540039
    8. 'all' → logprob: -10.70438003540039
    9. '#' → logprob: -10.95438003540039
    10. 's' → logprob: -11.32938003540039

Token 737: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0001238004770129919
    2. '_positions' → logprob: -9.125123977661133
    3. '_' → logprob: -11.875123977661133
    4. '_pts' → logprob: -12.500123977661133
    5. '_p' → logprob: -13.500123977661133
    6. 'points' → logprob: -13.750123977661133
    7. 'ing' → logprob: -14.375123977661133
    8. '_cells' → logprob: -15.000123977661133
    9. 's' → logprob: -15.125123977661133
    10. '_r' → logprob: -15.875123977661133

Token 738: '
' (ID: 198)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0003155625017825514
    2. '```' → logprob: -9.37531566619873
    3. '       ' → logprob: -9.75031566619873
    4. '        
' → logprob: -9.87531566619873
    5. ' start' → logprob: -10.00031566619873
    6. '[start' → logprob: -10.12531566619873
    7. '(start' → logprob: -11.62531566619873
    8. ',start' → logprob: -12.50031566619873
    9. 'points' → logprob: -12.50031566619873
    10. '
' → logprob: -12.75031566619873

Token 739: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.15249553322792053
    2. '       ' → logprob: -2.0274956226348877
    3. ' start' → logprob: -4.652495384216309
    4. '```' → logprob: -8.902495384216309
    5. '[start' → logprob: -10.652495384216309
    6. '   ' → logprob: -10.652495384216309
    7. '	start' → logprob: -11.152495384216309
    8. ',start' → logprob: -11.527495384216309
    9. '(start' → logprob: -12.152495384216309
    10. '        
' → logprob: -12.402495384216309

Token 740: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.00017600801947992295
    2. ' start' → logprob: -8.750176429748535
    3. '       ' → logprob: -11.375176429748535
    4. '```' → logprob: -12.250176429748535
    5. '   ' → logprob: -14.625176429748535
    6. '        
' → logprob: -15.125176429748535
    7. '[start' → logprob: -16.12517547607422
    8. '	start' → logprob: -16.37517547607422
    9. '``' → logprob: -16.37517547607422
    10. '
' → logprob: -16.62517547607422

Token 741: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -6.504040356958285e-05
    2. 'points' → logprob: -10.500064849853516
    3. '_positions' → logprob: -11.250064849853516
    4. '_' → logprob: -12.000064849853516
    5. '_p' → logprob: -12.000064849853516
    6. 's' → logprob: -12.250064849853516
    7. '_pts' → logprob: -12.375064849853516
    8. '```' → logprob: -13.625064849853516
    9. '	points' → logprob: -14.500064849853516
    10. '_POINTS' → logprob: -15.125064849853516

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07892801612615585
    2. ' =' → logprob: -2.578927993774414
    3. '=[]' → logprob: -10.203927993774414
    4. '=[]
' → logprob: -13.703927993774414
    5. '＝' → logprob: -16.953927993774414
    6. '[]' → logprob: -17.328927993774414
    7. '=
' → logprob: -18.203927993774414
    8. '   ' → logprob: -18.203927993774414
    9. '=[]
' → logprob: -18.203927993774414
    10. ',' → logprob: -18.578927993774414

Token 743: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.40800392627716064
    2. '[]' → logprob: -1.4080039262771606
    3. '[]
' → logprob: -2.408003807067871
    4. '[
' → logprob: -7.908003807067871
    5. '[]

' → logprob: -10.658003807067871
    6. '[' → logprob: -12.408003807067871
    7. ' [(' → logprob: -13.908003807067871
    8. '[((' → logprob: -14.158003807067871
    9. ' []' → logprob: -15.783003807067871
    10. '[i' → logprob: -15.908003807067871

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4492778182029724
    2. ' for' → logprob: -1.1992778778076172
    3. 'for' → logprob: -2.824277877807617
    4. '```' → logprob: -7.949277877807617
    5. '	for' → logprob: -8.449277877807617
    6. '
' → logprob: -8.699277877807617
    7. '   ' → logprob: -8.949277877807617
    8. '        
' → logprob: -9.074277877807617
    9. ' ' → logprob: -9.824277877807617
    10. '<|end|>' → logprob: -10.449277877807617

Token 745: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002656271681189537
    2. ' for' → logprob: -8.250266075134277
    3. '       ' → logprob: -12.500266075134277
    4. '```' → logprob: -14.875266075134277
    5. '
' → logprob: -15.625266075134277
    6. '	for' → logprob: -17.50026512145996
    7. '``' → logprob: -17.50026512145996
    8. '   ' → logprob: -18.87526512145996
    9. '        
' → logprob: -20.25026512145996
    10. '[' → logprob: -22.00026512145996

Token 746: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029757659882307053
    2. ' r' → logprob: -3.5297577381134033
    3. 'i' → logprob: -12.279757499694824
    4. ' i' → logprob: -12.904757499694824
    5. '	r' → logprob: -17.52975845336914
    6. '   ' → logprob: -18.02975845336914
    7. '```' → logprob: -18.40475845336914
    8. '_r' → logprob: -18.52975845336914
    9. ' ' → logprob: -18.52975845336914
    10. 'range' → logprob: -19.02975845336914

Token 747: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004105708096176386
    2. 'in' → logprob: -5.504105567932129
    3. ',' → logprob: -10.629105567932129
    4. 'n' → logprob: -14.254105567932129
    5. ' ' → logprob: -14.754105567932129
    6. ' ,' → logprob: -14.754105567932129
    7. '```' → logprob: -15.379105567932129
    8. 'import' → logprob: -15.879105567932129
    9. '	in' → logprob: -16.004106521606445
    10. 's' → logprob: -16.004106521606445

Token 748: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269282102584839
    2. ' range' → logprob: -2.1269283294677734
    3. 'in' → logprob: -17.126928329467773
    4. ' in' → logprob: -17.751928329467773
    5. ' ' → logprob: -18.501928329467773
    6. '(range' → logprob: -18.876928329467773
    7. '```' → logprob: -19.251928329467773
    8. '	range' → logprob: -19.501928329467773
    9. '0' → logprob: -19.626928329467773
    10. 'ange' → logprob: -19.751928329467773

Token 749: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2520180344581604
    2. '(n' → logprob: -1.5020179748535156
    3. 'range' → logprob: -9.752017974853516
    4. ' n' → logprob: -10.877017974853516
    5. '(' → logprob: -11.752017974853516
    6. ' range' → logprob: -13.127017974853516
    7. '0' → logprob: -14.127017974853516
    8. '	n' → logprob: -15.377017974853516
    9. '<n' → logprob: -15.752017974853516
    10. '
' → logprob: -16.002017974853516

Token 750: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001851058448664844
    2. '):' → logprob: -6.3768510818481445
    3. '   ' → logprob: -9.251851081848145
    4. '       ' → logprob: -10.501851081848145
    5. '):
' → logprob: -11.251851081848145
    6. ':
' → logprob: -12.626851081848145
    7. '+' → logprob: -13.376851081848145
    8. '```' → logprob: -13.626851081848145
    9. '           ' → logprob: -13.876851081848145
    10. '():
' → logprob: -14.001851081848145

Token 751: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015783177688717842
    2. ' for' → logprob: -4.265783309936523
    3. '```' → logprob: -6.890783309936523
    4. 'for' → logprob: -7.515783309936523
    5. '<|end|>' → logprob: -10.640783309936523
    6. '	       ' → logprob: -12.015783309936523
    7. '       ' → logprob: -12.140783309936523
    8. '               ' → logprob: -12.140783309936523
    9. ',' → logprob: -13.015783309936523
    10. '   ' → logprob: -13.140783309936523

Token 752: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20160473883152008
    2. ' for' → logprob: -1.7016047239303589
    3. '           ' → logprob: -8.951604843139648
    4. '               ' → logprob: -10.451604843139648
    5. '   ' → logprob: -11.076604843139648
    6. '	for' → logprob: -11.326604843139648
    7. '```' → logprob: -12.576604843139648
    8. '       ' → logprob: -13.951604843139648
    9. ' ' → logprob: -13.951604843139648
    10. '                   ' → logprob: -16.82660484313965

Token 753: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006715370807796717
    2. ' c' → logprob: -5.006715297698975
    3. ' range' → logprob: -18.256715774536133
    4. '0' → logprob: -19.131715774536133
    5. 'range' → logprob: -19.131715774536133
    6. '```' → logprob: -19.256715774536133
    7. ' ' → logprob: -19.881715774536133
    8. '   ' → logprob: -20.506715774536133
    9. '_c' → logprob: -20.506715774536133
    10. 'C' → logprob: -21.381715774536133

Token 754: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0430259071290493
    2. 'in' → logprob: -3.1680259704589844
    3. '           ' → logprob: -12.168025970458984
    4. ',' → logprob: -12.543025970458984
    5. '<|end|>' → logprob: -12.543025970458984
    6. ' ' → logprob: -13.168025970458984
    7. '	in' → logprob: -13.793025970458984
    8. ' =' → logprob: -13.918025970458984
    9. '=' → logprob: -13.918025970458984
    10. '(n' → logprob: -13.918025970458984

Token 755: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048588961362838745
    2. ' range' → logprob: -3.048588991165161
    3. 'n' → logprob: -13.798588752746582
    4. '(range' → logprob: -14.298588752746582
    5. '(n' → logprob: -17.1735897064209
    6. ' n' → logprob: -19.1735897064209
    7. '(' → logprob: -19.5485897064209
    8. '0' → logprob: -20.2985897064209
    9. '	range' → logprob: -20.4235897064209
    10. ' ' → logprob: -21.7985897064209

Token 756: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.078839502763003e-05
    2. 'n' → logprob: -9.875090599060059
    3. 'range' → logprob: -10.375090599060059
    4. '(' → logprob: -12.000090599060059
    5. ' range' → logprob: -13.625090599060059
    6. '(range' → logprob: -14.500090599060059
    7. ' (' → logprob: -16.750091552734375
    8. ' n' → logprob: -17.500091552734375
    9. '<n' → logprob: -17.875091552734375
    10. ')n' → logprob: -18.625091552734375

Token 757: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012590412981808186
    2. '):' → logprob: -4.387590408325195
    3. '):
' → logprob: -10.637590408325195
    4. '):

' → logprob: -11.387590408325195
    5. ',' → logprob: -11.637590408325195
    6. ')' → logprob: -11.887590408325195
    7. '       ' → logprob: -12.137590408325195
    8. '           ' → logprob: -12.512590408325195
    9. ':' → logprob: -12.637590408325195
    10. ':
' → logprob: -12.762590408325195

Token 758: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049217287451028824
    2. '           ' → logprob: -3.0492172241210938
    3. '```' → logprob: -8.799217224121094
    4. ' if' → logprob: -8.924217224121094
    5. '                   ' → logprob: -9.549217224121094
    6. '	           ' → logprob: -9.674217224121094
    7. '<|end|>' → logprob: -9.674217224121094
    8. '                       ' → logprob: -10.049217224121094
    9. '            ' → logprob: -10.049217224121094
    10. '              ' → logprob: -11.549217224121094

Token 759: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3582134246826172
    2. 'if' (adapté à ' if') → logprob: -1.4832134246826172
    3. '                   ' → logprob: -2.608213424682617
    4. '               ' → logprob: -8.108213424682617
    5. '```' → logprob: -9.358213424682617
    6. '           ' → logprob: -9.608213424682617
    7. '                ' → logprob: -11.358213424682617
    8. '   ' → logprob: -11.858213424682617
    9. '                       ' → logprob: -12.233213424682617
    10. '                 ' → logprob: -12.483213424682617

Token 760: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2519306540489197
    2. ' grid' → logprob: -1.5019307136535645
    3. '(grid' → logprob: -13.751930236816406
    4. '	grid' → logprob: -15.126930236816406
    5. '-grid' → logprob: -17.001930236816406
    6. '_grid' → logprob: -17.251930236816406
    7. '.grid' → logprob: -17.376930236816406
    8. ':grid' → logprob: -17.751930236816406
    9. '   ' → logprob: -18.501930236816406
    10. 'Grid' → logprob: -19.126930236816406

Token 761: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: 0.0
    2. ' [' → logprob: -17.5
    3. 'r' → logprob: -18.875
    4. '```' → logprob: -20.125
    5. '[
' → logprob: -20.375
    6. '[' → logprob: -20.375
    7. '[row' → logprob: -20.5
    8. '   ' → logprob: -20.875
    9. '[s' → logprob: -21.125
    10. '
' → logprob: -22.125

Token 762: '][' (ID: 2696)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.28126561641693115
    2. '][' → logprob: -1.4062656164169312
    3. '[' → logprob: -10.156265258789062
    4. '[c' → logprob: -11.031265258789062
    5. '[row' → logprob: -11.156265258789062
    6. ')[' → logprob: -11.406265258789062
    7. '[s' → logprob: -11.906265258789062
    8. '"][' → logprob: -12.406265258789062
    9. 'r' → logprob: -13.031265258789062
    10. '[m' → logprob: -13.156265258789062

Token 763: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.034592388459714e-06
    2. '][' → logprob: -12.625005722045898
    3. '[c' → logprob: -13.250005722045898
    4. ' c' → logprob: -14.875005722045898
    5. ')c' → logprob: -15.000005722045898
    6. 'r' → logprob: -15.625005722045898
    7. '```' → logprob: -16.2500057220459
    8. '<c' → logprob: -18.0000057220459
    9. '
' → logprob: -18.0000057220459
    10. '	c' → logprob: -18.2500057220459

Token 764: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6429446935653687
    2. ']<' → logprob: -1.8929446935653687
    3. '[' → logprob: -2.142944812774658
    4. '[r' → logprob: -2.267944812774658
    5. '<' → logprob: -2.517944812774658
    6. ' <' → logprob: -3.892944812774658
    7. '[c' → logprob: -7.267944812774658
    8. ')<' → logprob: -8.5179443359375
    9. ')' → logprob: -8.7679443359375
    10. '][' → logprob: -9.1429443359375

Token 765: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.011153575964272022
    2. ' <' → logprob: -4.511153697967529
    3. '[' → logprob: -9.636153221130371
    4. '<n' → logprob: -11.636153221130371
    5. '<int' → logprob: -11.636153221130371
    6. '<|end|>' → logprob: -12.136153221130371
    7. '()<' → logprob: -12.886153221130371
    8. '{' → logprob: -13.386153221130371
    9. ')<' → logprob: -13.636153221130371
    10. '<num' → logprob: -13.761153221130371

Token 766: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '=' → logprob: -16.87506675720215
    4. '<|end|>' → logprob: -17.00006675720215
    5. '   ' → logprob: -17.87506675720215
    6. '
' → logprob: -18.25006675720215
    7. '```' → logprob: -18.25006675720215
    8. '۰' → logprob: -18.75006675720215
    9. ')' → logprob: -18.87506675720215
    10. 'def' → logprob: -19.00006675720215

Token 767: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '=' → logprob: -16.62500762939453
    4. '<|end|>' → logprob: -17.12500762939453
    5. '۰' → logprob: -19.00000762939453
    6. '(' → logprob: -20.37500762939453
    7. ')' → logprob: -20.62500762939453
    8. '<|end|>' → logprob: -20.75000762939453
    9. '
' → logprob: -20.87500762939453
    10. ' =' → logprob: -20.87500762939453

Token 768: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1059812530875206
    2. ':
' → logprob: -2.6059813499450684
    3. '                   ' → logprob: -4.355981349945068
    4. ' and' → logprob: -4.480981349945068
    5. '               ' → logprob: -7.105981349945068
    6. '                       ' → logprob: -7.980981349945068
    7. '           ' → logprob: -7.980981349945068
    8. 'and' → logprob: -8.10598087310791
    9. '<|end|>' → logprob: -8.35598087310791
    10. '):
' → logprob: -8.60598087310791

Token 769: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001104852301068604
    2. '                       ' → logprob: -7.251104831695557
    3. '               ' → logprob: -8.626105308532715
    4. '           ' → logprob: -9.626105308532715
    5. 'start' → logprob: -10.251105308532715
    6. ' start' → logprob: -10.376105308532715
    7. '                           ' → logprob: -10.501105308532715
    8. '                  ' → logprob: -11.251105308532715
    9. '[start' → logprob: -11.501105308532715
    10. '```' → logprob: -11.876105308532715

Token 770: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.049896035343408585
    2. ' start' → logprob: -3.049896001815796
    3. '                   ' → logprob: -6.924896240234375
    4. '                       ' → logprob: -8.299896240234375
    5. '               ' → logprob: -10.299896240234375
    6. '[start' → logprob: -10.674896240234375
    7. '```' → logprob: -11.549896240234375
    8. ',start' → logprob: -13.299896240234375
    9. '	start' → logprob: -13.549896240234375
    10. '                           ' → logprob: -13.549896240234375

Token 771: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -1.1637164789135568e-05
    2. 'points' → logprob: -11.625011444091797
    3. 'Points' → logprob: -14.000011444091797
    4. '_POINTS' → logprob: -14.500011444091797
    5. '_' → logprob: -14.750011444091797
    6. ' points' → logprob: -15.125011444091797
    7. '_tokens' → logprob: -15.875011444091797
    8. '_positions' → logprob: -15.875011444091797
    9. '_coordinates' → logprob: -16.625011444091797
    10. '               ' → logprob: -16.625011444091797

Token 772: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.9981420336989686e-05
    2. 'append' → logprob: -11.625020027160645
    3. '.' → logprob: -11.875020027160645
    4. ' .' → logprob: -13.750020027160645
    5. '.Append' → logprob: -14.500020027160645
    6. '```' → logprob: -14.500020027160645
    7. 'Append' → logprob: -15.000020027160645
    8. '.add' → logprob: -15.125020027160645
    9. '                   ' → logprob: -15.375020027160645
    10. '.setdefault' → logprob: -15.625020027160645

Token 773: '((' (ID: 2054)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.003961212933063507
    2. ' (' → logprob: -5.753961086273193
    3. '((' → logprob: -7.628961086273193
    4. '(' → logprob: -8.128961563110352
    5. '(row' → logprob: -14.128961563110352
    6. '   ' → logprob: -14.128961563110352
    7. '(
' → logprob: -16.12896156311035
    8. '(range' → logprob: -16.37896156311035
    9. '(R' → logprob: -16.50396156311035
    10. '(rc' → logprob: -17.00396156311035

Token 774: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: 0.0
    2. ' r' → logprob: -17.875
    3. '                   ' → logprob: -19.875
    4. '_r' → logprob: -20.375
    5. '	r' → logprob: -21.125
    6. '
' → logprob: -21.25
    7. '                           ' → logprob: -21.375
    8. '   ' → logprob: -21.5
    9. '                       ' → logprob: -22.0
    10. ')' → logprob: -22.0

Token 775: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20149841904640198
    2. ',c' → logprob: -1.7014983892440796
    3. ' ,' → logprob: -9.576498031616211
    4. ',
' → logprob: -11.451498031616211
    5. '<|end|>' → logprob: -13.951498031616211
    6. 'c' → logprob: -14.201498031616211
    7. '‌,' → logprob: -15.201498031616211
    8. '   ' → logprob: -15.326498031616211
    9. ',C' → logprob: -15.326498031616211
    10. ',p' → logprob: -15.326498031616211

Token 776: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012356207298580557
    2. ' c' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.125123977661133
    4. ')c' → logprob: -17.125123977661133
    5. '                   ' → logprob: -18.500123977661133
    6. '	c' → logprob: -19.250123977661133
    7. '                                           ' → logprob: -20.000123977661133
    8. '                               ' → logprob: -20.125123977661133
    9. '                           ' → logprob: -20.250123977661133
    10. ',c' → logprob: -20.375123977661133

Token 777: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001984663773328066
    2. ')' → logprob: -6.251984596252441
    3. '))
' → logprob: -10.376984596252441
    4. ')))' → logprob: -11.001984596252441
    5. '       ' → logprob: -12.501984596252441
    6. '               ' → logprob: -14.126984596252441
    7. '                   ' → logprob: -14.251984596252441
    8. '           ' → logprob: -14.751984596252441
    9. ' ))' → logprob: -14.751984596252441
    10. '   ' → logprob: -14.876984596252441

Token 778: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029300376772880554
    2. '```' → logprob: -6.127930164337158
    3. '<|end|>' → logprob: -7.502930164337158
    4. '
' → logprob: -9.0029296875
    5. '        
' → logprob: -10.0029296875
    6. '           ' → logprob: -12.2529296875
    7. '``' → logprob: -12.3779296875
    8. ' used' → logprob: -12.7529296875
    9. '   ' → logprob: -13.1279296875
    10. '                   ' → logprob: -13.2529296875

Token 779: ' used' (ID: 2061)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010281884111464024
    2. 'used' (adapté à ' used') → logprob: -5.510282039642334
    3. ' used' → logprob: -5.760282039642334
    4. '   ' → logprob: -6.260282039642334
    5. '
' → logprob: -7.135282039642334
    6. '```' → logprob: -8.135281562805176
    7. '        
' → logprob: -10.885281562805176
    8. '           ' → logprob: -12.510281562805176
    9. '<|end|>' → logprob: -12.510281562805176
    10. '    
' → logprob: -13.010281562805176

Token 780: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198437884449959
    2. '=' → logprob: -2.8119843006134033
    3. '=[' → logprob: -11.811984062194824
    4. '=[[' → logprob: -11.936984062194824
    5. ' =[' → logprob: -13.436984062194824
    6. '＝' → logprob: -15.061984062194824
    7. '=[]' → logprob: -15.311984062194824
    8. '[' → logprob: -15.436984062194824
    9. '<|end|>' → logprob: -15.936984062194824
    10. '   ' → logprob: -15.936984062194824

Token 781: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0007161272224038839
    2. ' [[' → logprob: -7.250716209411621
    3. '[' → logprob: -12.000716209411621
    4. ' [' → logprob: -16.750715255737305
    5. '[n' → logprob: -16.875715255737305
    6. '[
' → logprob: -17.000715255737305
    7. '   ' → logprob: -19.875715255737305
    8. '[['' → logprob: -20.125715255737305
    9. '([[' → logprob: -20.750715255737305
    10. '[i' → logprob: -21.250715255737305

Token 782: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.935296834039036e-06
    2. ' False' → logprob: -12.75000286102295
    3. '(False' → logprob: -17.750003814697266
    4. '=False' → logprob: -21.125003814697266
    5. '0' → logprob: -22.000003814697266
    6. '[' → logprob: -22.250003814697266
    7. '   ' → logprob: -22.250003814697266
    8. '.False' → logprob: -23.250003814697266
    9. '```' → logprob: -24.125003814697266
    10. '
' → logprob: -24.500003814697266

Token 783: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08521448075771332
    2. 'for' → logprob: -2.585214376449585
    3. ']' → logprob: -5.460214614868164
    4. '           ' → logprob: -6.585214614868164
    5. '       ' → logprob: -8.585214614868164
    6. '   ' → logprob: -8.710214614868164
    7. '               ' → logprob: -8.710214614868164
    8. '                   ' → logprob: -10.585214614868164
    9. '	for' → logprob: -10.835214614868164
    10. ']*' → logprob: -10.835214614868164

Token 784: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.8497312895488e-05
    2. '(n' → logprob: -9.750068664550781
    3. ' n' → logprob: -11.500068664550781
    4. ')n' → logprob: -17.87506866455078
    5. ' (' → logprob: -18.00006866455078
    6. '(' → logprob: -18.62506866455078
    7. '   ' → logprob: -19.50006866455078
    8. '
' → logprob: -19.62506866455078
    9. '	n' → logprob: -19.87506866455078
    10. '_n' → logprob: -21.25006866455078

Token 785: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25197523832321167
    2. 'for' → logprob: -1.5019752979278564
    3. ')' → logprob: -10.376975059509277
    4. ']' → logprob: -11.626975059509277
    5. '   ' → logprob: -13.001975059509277
    6. '	for' → logprob: -13.501975059509277
    7. '       ' → logprob: -13.876975059509277
    8. ' ' → logprob: -14.876975059509277
    9. '           ' → logprob: -15.126975059509277
    10. '<|end|>' → logprob: -15.501975059509277

Token 786: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07688618451356888
    2. ' range' → logprob: -2.7018861770629883
    3. ' _' → logprob: -5.701886177062988
    4. 'range' → logprob: -5.826886177062988
    5. '_range' → logprob: -7.451886177062988
    6. ' in' → logprob: -10.826886177062988
    7. 'in' → logprob: -11.201886177062988
    8. '_n' → logprob: -11.326886177062988
    9. '(range' → logprob: -12.201886177062988
    10. '_r' → logprob: -13.076886177062988

Token 787: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5605211853981018
    2. 'in' → logprob: -1.185521125793457
    3. ' in' → logprob: -2.685521125793457
    4. ' range' → logprob: -2.935521125793457
    5. '_' → logprob: -6.185521125793457
    6. '_range' → logprob: -9.310521125793457
    7. ' _' → logprob: -11.060521125793457
    8. 'n' → logprob: -11.060521125793457
    9. '(range' → logprob: -11.435521125793457
    10. '	range' → logprob: -12.060521125793457

Token 788: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -17.375553131103516
    4. '	range' → logprob: -20.875553131103516
    5. '.range' → logprob: -22.375553131103516
    6. '
' → logprob: -22.625553131103516
    7. '_range' → logprob: -22.625553131103516
    8. '   ' → logprob: -22.750553131103516
    9. '```' → logprob: -23.625553131103516
    10. '[' → logprob: -24.250553131103516

Token 789: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0823381319642067
    2. 'range' → logprob: -2.5823380947113037
    3. 'n' → logprob: -5.832338333129883
    4. ' range' → logprob: -7.832338333129883
    5. '(range' → logprob: -9.082338333129883
    6. ' (' → logprob: -14.832338333129883
    7. ' n' → logprob: -15.332338333129883
    8. '
' → logprob: -16.082338333129883
    9. '[n' → logprob: -16.957338333129883
    10. '(' → logprob: -16.957338333129883

Token 790: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.3458322731312364e-06
    2. ']' → logprob: -13.500007629394531
    3. '])]' → logprob: -13.500007629394531
    4. ')]
' → logprob: -13.625007629394531
    5. '       ' → logprob: -13.875007629394531
    6. ')' → logprob: -14.000007629394531
    7. ')])' → logprob: -14.375007629394531
    8. '   ' → logprob: -14.375007629394531
    9. ')],' → logprob: -15.875007629394531
    10. '')]' → logprob: -16.00000762939453

Token 791: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06343339383602142
    2. '   ' → logprob: -3.0634334087371826
    3. '<|end|>' → logprob: -4.5634331703186035
    4. '```' → logprob: -5.6884331703186035
    5. ' for' → logprob: -8.313433647155762
    6. ' next' → logprob: -8.938433647155762
    7. ' if' → logprob: -8.938433647155762
    8. '
' → logprob: -8.938433647155762
    9. '        
' → logprob: -9.188433647155762
    10. '           ' → logprob: -10.813433647155762

Token 792: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004189875442534685
    2. '       ' → logprob: -6.754189968109131
    3. 'res' → logprob: -7.004189968109131
    4. 'result' → logprob: -7.254189968109131
    5. ' if' → logprob: -7.379189968109131
    6. '   ' → logprob: -7.629189968109131
    7. 'for' → logprob: -9.254189491271973
    8. 'found' → logprob: -9.504189491271973
    9. 'success' → logprob: -10.004189491271973
    10. 'print' → logprob: -10.504189491271973

Token 793: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1081773191690445
    2. 'print' → logprob: -2.358177423477173
    3. ' if' → logprob: -4.983177185058594
    4. 'result' → logprob: -7.608177185058594
    5. '       ' → logprob: -7.733177185058594
    6. ' print' → logprob: -9.358177185058594
    7. 'res' → logprob: -10.108177185058594
    8. 'success' → logprob: -12.358177185058594
    9. 'found' → logprob: -12.358177185058594
    10. 'answer' → logprob: -12.608177185058594

Token 794: ' used' (ID: 2061)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2841558456420898
    2. 'if' → logprob: -1.5341558456420898
    3. 'start' → logprob: -1.6591558456420898
    4. ' line' → logprob: -2.65915584564209
    5. '       ' → logprob: -3.28415584564209
    6. ' start' → logprob: -3.78415584564209
    7. ' if' → logprob: -3.90915584564209
    8. 'result' → logprob: -3.90915584564209
    9. '_' → logprob: -3.90915584564209
    10. ' r' → logprob: -4.03415584564209

Token 795: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6879727244377136
    2. ' line' → logprob: -2.6879727840423584
    3. 'line' → logprob: -2.8129727840423584
    4. ' for' → logprob: -2.9379727840423584
    5. '[start' → logprob: -2.9379727840423584
    6. ' =' → logprob: -3.4379727840423584
    7. '_line' → logprob: -3.6879727840423584
    8. '[' → logprob: -4.187972545623779
    9. ',' → logprob: -4.187972545623779
    10. '=' → logprob: -4.312972545623779

Token 796: ' initially' (ID: 25998)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.579794704914093
    2. 'for' → logprob: -0.829794704914093
    3. '#' → logprob: -6.704794883728027
    4. ' used' → logprob: -6.954794883728027
    5. 'used' → logprob: -7.704794883728027
    6. '       ' → logprob: -7.829794883728027
    7. 'continue' → logprob: -8.454794883728027
    8. ' continue' → logprob: -8.704794883728027
    9. '```' → logprob: -8.954794883728027
    10. ' #' → logprob: -9.579794883728027

Token 797: ' mark' (ID: 1983)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034805282950401306
    2. ' for' → logprob: -4.1598052978515625
    3. 'mark' → logprob: -4.9098052978515625
    4. 'used' → logprob: -5.4098052978515625
    5. ' mark' → logprob: -5.9098052978515625
    6. '       ' → logprob: -6.9098052978515625
    7. 'start' → logprob: -7.0348052978515625
    8. '#' → logprob: -7.5348052978515625
    9. 'set' → logprob: -7.7848052978515625
    10. ' used' → logprob: -8.034805297851562

Token 798: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06383799016475677
    2. ' for' → logprob: -2.938838005065918
    3. 'the' → logprob: -6.063838005065918
    4. 'all' → logprob: -6.813838005065918
    5. '[r' → logprob: -6.813838005065918
    6. 'r' → logprob: -7.438838005065918
    7. 'False' → logprob: -7.563838005065918
    8. '
' → logprob: -7.688838005065918
    9. '   ' → logprob: -7.813838005065918
    10. ' the' → logprob: -8.063838005065918

Token 799: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0005902059492655098
    2. 'points' → logprob: -7.5005903244018555
    3. ' points' → logprob: -11.125590324401855
    4. '_positions' → logprob: -11.375590324401855
    5. '_cells' → logprob: -12.000590324401855
    6. 'Points' → logprob: -13.875590324401855
    7. '```' → logprob: -14.000590324401855
    8. '_' → logprob: -14.125590324401855
    9. '_POINTS' → logprob: -14.375590324401855
    10. '	points' → logprob: -15.000590324401855

Token 800: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41407114267349243
    2. ' for' → logprob: -1.6640710830688477
    3. 'for' → logprob: -1.9140710830688477
    4. '```' → logprob: -6.414071083068848
    5. ' as' → logprob: -8.664071083068848
    6. '[' → logprob: -9.414071083068848
    7. '<|end|>' → logprob: -9.664071083068848
    8. ',' → logprob: -10.039071083068848
    9. '   ' → logprob: -10.414071083068848
    10. '
' → logprob: -10.414071083068848

Token 801: ' not' (ID: 625)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005053732893429697
    2. 'False' → logprob: -8.000505447387695
    3. 'used' → logprob: -9.375505447387695
    4. ' True' → logprob: -9.375505447387695
    5. ' used' → logprob: -16.250505447387695
    6. '
' → logprob: -16.875505447387695
    7. '(True' → logprob: -16.875505447387695
    8. 'true' → logprob: -17.000505447387695
    9. '```' → logprob: -17.250505447387695
    10. '=True' → logprob: -17.875505447387695

Token 802: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.09666888415813446
    2. 'True' → logprob: -2.5966689586639404
    3. ' used' → logprob: -4.096668720245361
    4. 'False' → logprob: -7.471668720245361
    5. ' True' → logprob: -7.846668720245361
    6. '```' → logprob: -10.59666919708252
    7. 'marked' → logprob: -12.97166919708252
    8. '_used' → logprob: -13.34666919708252
    9. 'visited' → logprob: -13.84666919708252
    10. '-used' → logprob: -13.97166919708252

Token 803: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 804: ' 
' (ID: 793)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.6565864682197571
    2. '<|end|>' → logprob: -0.7815864682197571
    3. 'but' → logprob: -4.906586647033691
    4. '       ' → logprob: -5.156586647033691
    5. '<|end|>' → logprob: -6.156586647033691
    6. '#' → logprob: -6.656586647033691
    7. ' continue' → logprob: -6.781586647033691
    8. '        
' → logprob: -6.781586647033691
    9. 'continue' → logprob: -7.156586647033691
    10. '```' → logprob: -7.281586647033691

Token 805: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 806: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8049197196960449
    2. 'but' → logprob: -1.429919719696045
    3. ' but' → logprob: -1.554919719696045
    4. '       ' → logprob: -2.554919719696045
    5. '
' → logprob: -4.054919719696045
    6. ' so' → logprob: -6.429919719696045
    7. 'since' → logprob: -6.804919719696045
    8. '```' → logprob: -6.804919719696045
    9. ' as' → logprob: -7.304919719696045
    10. '   ' → logprob: -7.429919719696045

Token 807: ' as' (ID: 472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5782149434089661
    2. 'but' → logprob: -0.9532149434089661
    3. ' but' → logprob: -3.8282148838043213
    4. 'since' → logprob: -3.9532148838043213
    5. 'so' → logprob: -5.8282151222229
    6. 'continue' → logprob: -5.8282151222229
    7. '```' → logprob: -5.8282151222229
    8. '
' → logprob: -7.0782151222229
    9. 'because' → logprob: -7.2032151222229
    10. 'as' → logprob: -8.078214645385742

Token 808: ' lines' (ID: 8698)
  Prédit: 'they'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'they' → logprob: -0.2969564199447632
    2. ' they' → logprob: -1.4219564199447632
    3. 'we' → logprob: -5.546956539154053
    4. 'the' → logprob: -5.921956539154053
    5. '#' → logprob: -6.171956539154053
    6. ' we' → logprob: -6.671956539154053
    7. ' used' → logprob: -6.921956539154053
    8. ' the' → logprob: -7.046956539154053
    9. 'for' → logprob: -7.046956539154053
    10. 'start' → logprob: -7.421956539154053

Token 809: ' must' (ID: 2804)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.5642003417015076
    2. 'may' → logprob: -2.1892004013061523
    3. 'need' → logprob: -2.6892004013061523
    4. 'should' → logprob: -2.8142004013061523
    5. 'can' → logprob: -3.1892004013061523
    6. 'will' → logprob: -3.1892004013061523
    7. ' must' → logprob: -3.6892004013061523
    8. 'might' → logprob: -3.8142004013061523
    9. 'are' → logprob: -4.439200401306152
    10. ' may' → logprob: -4.564200401306152

Token 810: ' pass' (ID: 1853)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.5101056098937988
    2. 'pass' → logprob: -2.385105609893799
    3. 'include' → logprob: -2.510105609893799
    4. 'not' → logprob: -2.635105609893799
    5. ' cover' → logprob: -2.635105609893799
    6. 'use' → logprob: -3.260105609893799
    7. 'start' → logprob: -3.885105609893799
    8. ' not' → logprob: -4.510105609893799
    9. ' pass' → logprob: -6.135105609893799
    10. 'go' → logprob: -6.260105609893799

Token 811: ' start' (ID: 1604)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.006725788116455078
    2. ' through' → logprob: -5.006725788116455
    3. '-through' → logprob: -12.631725311279297
    4. '#' → logprob: -13.006725311279297
    5. 'over' → logprob: -13.881725311279297
    6. '       ' → logprob: -14.131725311279297
    7. '```' → logprob: -14.256725311279297
    8. '[start' → logprob: -14.381725311279297
    9. 'though' → logprob: -14.756725311279297
    10. '
' → logprob: -14.881725311279297

Token 812: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.008134021423757076
    2. 'points' → logprob: -5.133133888244629
    3. ' points' → logprob: -6.383133888244629
    4. '       ' → logprob: -9.008133888244629
    5. '_p' → logprob: -9.133133888244629
    6. '	points' → logprob: -9.383133888244629
    7. '_positions' → logprob: -9.633133888244629
    8. '_cells' → logprob: -10.383133888244629
    9. '_' → logprob: -10.758133888244629
    10. 'Points' → logprob: -11.383133888244629

Token 813: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 814: 'line' (ID: 1137)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.9376539587974548
    2. 'but' → logprob: -0.9376539587974548
    3. ')' → logprob: -1.9376540184020996
    4. 'not' → logprob: -3.4376540184020996
    5. 'and' → logprob: -3.9376540184020996
    6. ' not' → logprob: -5.4376540184021
    7. 'so' → logprob: -5.6876540184021
    8. ' too' → logprob: -6.3126540184021
    9. 'which' → logprob: -6.4376540184021
    10. ' and' → logprob: -6.6876540184021

Token 815: ' includes' (ID: 6664)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.9848159551620483
    2. ' must' → logprob: -1.2348159551620483
    3. ')' → logprob: -1.7348159551620483
    4. 'cells' → logprob: -2.734816074371338
    5. 'must' → logprob: -3.234816074371338
    6. ' passes' → logprob: -4.734816074371338
    7. ' should' → logprob: -5.234816074371338
    8. 's' → logprob: -5.234816074371338
    9. ' tokens' → logprob: -5.484816074371338
    10. '       ' → logprob: -5.609816074371338

Token 816: ' start' (ID: 1604)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.48248162865638733
    2. 'start' → logprob: -1.732481598854065
    3. ' the' → logprob: -2.4824817180633545
    4. ' them' → logprob: -3.6074817180633545
    5. ' start' → logprob: -3.7324817180633545
    6. 'them' → logprob: -3.8574817180633545
    7. '(' → logprob: -4.107481479644775
    8. '(start' → logprob: -4.357481479644775
    9. '(r' → logprob: -4.732481479644775
    10. ' (' → logprob: -5.232481479644775

Token 817: ' point' (ID: 2438)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.012757905758917332
    2. 'points' → logprob: -5.387757778167725
    3. ')' → logprob: -5.887757778167725
    4. '_r' → logprob: -5.887757778167725
    5. ' points' → logprob: -7.012757778167725
    6. '_cells' → logprob: -7.887757778167725
    7. '       ' → logprob: -8.137758255004883
    8. '_positions' → logprob: -8.387758255004883
    9. '_point' → logprob: -9.012758255004883
    10. ')_' → logprob: -9.262758255004883

Token 818: ' cell' (ID: 4206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017282599583268166
    2. ')
' → logprob: -4.392282485961914
    3. ').' → logprob: -5.767282485961914
    4. 's' → logprob: -8.267282485961914
    5. '),' → logprob: -8.392282485961914
    6. ',' → logprob: -8.517282485961914
    7. 'tokens' → logprob: -8.892282485961914
    8. '       ' → logprob: -9.017282485961914
    9. ' )' → logprob: -9.142282485961914
    10. '):
' → logprob: -9.267282485961914

Token 819: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004526723176240921
    2. ')
' → logprob: -6.254526615142822
    3. ').' → logprob: -6.629526615142822
    4. '       ' → logprob: -6.879526615142822
    5. ' )' → logprob: -9.25452709197998
    6. '<|end|>' → logprob: -9.50452709197998
    7. '),' → logprob: -10.75452709197998
    8. ')

' → logprob: -11.50452709197998
    9. ').
' → logprob: -12.00452709197998
    10. ' and' → logprob: -12.37952709197998

Token 820: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046495210379362106
    2. '<|end|>' → logprob: -3.296495199203491
    3. '
' → logprob: -5.42149543762207
    4. ' for' → logprob: -6.79649543762207
    5. '   ' → logprob: -6.92149543762207
    6. '        
' → logprob: -7.54649543762207
    7. ' and' → logprob: -7.54649543762207
    8. '```' → logprob: -7.92149543762207
    9. ',' → logprob: -8.67149543762207
    10. '<|end|>' → logprob: -9.04649543762207

Token 821: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.031807515770196915
    2. 'result' → logprob: -4.6568074226379395
    3. 'res' → logprob: -4.9068074226379395
    4. ' if' → logprob: -4.9068074226379395
    5. '       ' → logprob: -5.7818074226379395
    6. '
' → logprob: -6.5318074226379395
    7. 'print' → logprob: -6.9068074226379395
    8. 'found' → logprob: -7.5318074226379395
    9. 'success' → logprob: -8.156807899475098
    10. 'for' → logprob: -8.656807899475098

Token 822: ' but' (ID: 889)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11800074577331543
    2. 'print' → logprob: -2.7430007457733154
    3. 'result' → logprob: -3.8680007457733154
    4. 'res' → logprob: -4.4930009841918945
    5. '       ' → logprob: -4.7430009841918945
    6. '
' → logprob: -5.9930009841918945
    7. ' if' → logprob: -6.7430009841918945
    8. 'success' → logprob: -7.2430009841918945
    9. 'found' → logprob: -7.3680009841918945
    10. '   ' → logprob: -7.8680009841918945

Token 823: ' until' (ID: 4609)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.0048444271087646
    2. 'they' → logprob: -1.2548444271087646
    3. 'the' → logprob: -2.7548444271087646
    4. 'we' → logprob: -2.8798444271087646
    5. ' used' → logprob: -3.0048444271087646
    6. 'start' → logprob: -3.0048444271087646
    7. ' lines' → logprob: -3.2548444271087646
    8. 'not' → logprob: -3.7548444271087646
    9. 'lines' → logprob: -4.129844665527344
    10. ' they' → logprob: -5.129844665527344

Token 824: ' set' (ID: 920)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placed' → logprob: -0.4186115860939026
    2. 'lines' → logprob: -1.7936115264892578
    3. 'they' → logprob: -3.043611526489258
    4. ' placed' → logprob: -3.543611526489258
    5. 'used' → logprob: -3.793611526489258
    6. 'placement' → logprob: -4.043611526489258
    7. ' lines' → logprob: -4.668611526489258
    8. 'the' → logprob: -4.793611526489258
    9. 'we' → logprob: -5.043611526489258
    10. ' here' → logprob: -5.168611526489258

Token 825: ',' (ID: 11)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.2091507464647293
    2. 'used' → logprob: -1.709150791168213
    3. '_used' → logprob: -5.709150791168213
    4. ' as' → logprob: -5.834150791168213
    5. 'True' → logprob: -7.709150791168213
    6. ' True' → logprob: -8.334150314331055
    7. 'ted' → logprob: -9.209150314331055
    8. '       ' → logprob: -9.209150314331055
    9. '[' → logprob: -9.334150314331055
    10. '   ' → logprob: -9.709150314331055

Token 826: ' just' (ID: 1327)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.8863233327865601
    2. 'they' → logprob: -1.63632333278656
    3. ' lines' → logprob: -2.0113234519958496
    4. 'used' → logprob: -2.2613234519958496
    5. ' not' → logprob: -3.0113234519958496
    6. ' they' → logprob: -3.2613234519958496
    7. 'not' → logprob: -3.5113234519958496
    8. ' no' → logprob: -5.01132345199585
    9. ' pass' → logprob: -5.26132345199585
    10. 'pass' → logprob: -5.38632345199585

Token 827: ' False' (ID: 7983)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3694561719894409
    2. 'continue' → logprob: -1.994456171989441
    3. 'False' → logprob: -2.6194562911987305
    4. 'leave' → logprob: -2.7444562911987305
    5. ' pass' → logprob: -4.3694562911987305
    6. 'keep' → logprob: -4.4944562911987305
    7. ' leave' → logprob: -5.8694562911987305
    8. ' False' → logprob: -6.3694562911987305
    9. ' continue' → logprob: -6.3694562911987305
    10. 'remain' → logprob: -6.4944562911987305

Token 828: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004624868277460337
    2. 'if' → logprob: -5.629624843597412
    3. ' if' → logprob: -7.129624843597412
    4. '   ' → logprob: -9.50462532043457
    5. '<|end|>' → logprob: -9.87962532043457
    6. 'result' → logprob: -10.12962532043457
    7. 'print' → logprob: -10.50462532043457
    8. '```' → logprob: -11.50462532043457
    9. '        
' → logprob: -12.12962532043457
    10. '
' → logprob: -12.87962532043457

Token 830: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015956474468111992
    2. ' if' → logprob: -5.390956401824951
    3. 'result' → logprob: -5.640956401824951
    4. '       ' → logprob: -5.765956401824951
    5. 'res' → logprob: -6.015956401824951
    6. 'print' → logprob: -7.140956401824951
    7. 'found' → logprob: -7.265956401824951
    8. 'success' → logprob: -7.640956401824951
    9. '
' → logprob: -10.14095687866211
    10. '   ' → logprob: -10.39095687866211

Token 831: ' Actually' (ID: 50557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03633365407586098
    2. 'print' → logprob: -3.7863335609436035
    3. 'res' → logprob: -5.0363335609436035
    4. 'result' → logprob: -5.7863335609436035
    5. '       ' → logprob: -5.9113335609436035
    6. '
' → logprob: -8.161334037780762
    7. ' if' → logprob: -8.911334037780762
    8. 'success' → logprob: -9.536334037780762
    9. '   ' → logprob: -9.786334037780762
    10. 'found' → logprob: -9.786334037780762

Token 832: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.010266661643982
    2. ' used' → logprob: -1.385266661643982
    3. ' for' → logprob: -1.510266661643982
    4. 'used' → logprob: -2.0102667808532715
    5. ',' → logprob: -4.2602667808532715
    6. '#' → logprob: -5.6352667808532715
    7. 'continue' → logprob: -6.0102667808532715
    8. '
' → logprob: -6.0102667808532715
    9. '       ' → logprob: -6.2602667808532715
    10. ' the' → logprob: -6.6352667808532715

Token 833: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -6.718606891809031e-05
    2. 'points' → logprob: -10.125066757202148
    3. '_' → logprob: -11.625066757202148
    4. ' points' → logprob: -12.000066757202148
    5. '_used' → logprob: -12.875066757202148
    6. 'Points' → logprob: -13.125066757202148
    7. '_p' → logprob: -13.125066757202148
    8. '```' → logprob: -13.500066757202148
    9. '_point' → logprob: -13.875066757202148
    10. '_positions' → logprob: -14.000066757202148

Token 834: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.1247796043753624
    2. 'are' → logprob: -2.37477970123291
    3. 'should' → logprob: -4.62477970123291
    4. ' should' → logprob: -5.12477970123291
    5. '[' → logprob: -5.49977970123291
    6. ' must' → logprob: -6.99977970123291
    7. 'must' → logprob: -7.24977970123291
    8. '```' → logprob: -7.62477970123291
    9. '[start' → logprob: -8.12477970123291
    10. 'already' → logprob: -8.49977970123291

Token 835: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.38897082209587097
    2. ' be' → logprob: -1.1389708518981934
    3. 'also' → logprob: -7.638970851898193
    4. 'not' → logprob: -7.638970851898193
    5. 'always' → logprob: -7.638970851898193
    6. 'remain' → logprob: -8.388970375061035
    7. ' also' → logprob: -9.138970375061035
    8. ' always' → logprob: -9.263970375061035
    9. 'all' → logprob: -9.888970375061035
    10. ' not' → logprob: -10.013970375061035

Token 836: ' included' (ID: 7360)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.1642753779888153
    2. 'True' → logprob: -2.4142754077911377
    3. 'marked' → logprob: -2.9142754077911377
    4. ' used' → logprob: -5.414275169372559
    5. ' True' → logprob: -6.414275169372559
    6. 'set' → logprob: -7.164275169372559
    7. 'included' → logprob: -7.789275169372559
    8. 'consider' → logprob: -8.289275169372559
    9. ' marked' → logprob: -8.664275169372559
    10. ' set' → logprob: -10.039275169372559

Token 837: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7445813417434692
    2. ' for' → logprob: -0.8695813417434692
    3. '
' → logprob: -2.3695812225341797
    4. 'for' → logprob: -4.74458122253418
    5. ' in' → logprob: -7.11958122253418
    6. ' and' → logprob: -7.36958122253418
    7. '```' → logprob: -7.36958122253418
    8. '   ' → logprob: -7.74458122253418
    9. ',' → logprob: -7.86958122253418
    10. ' used' → logprob: -7.99458122253418

Token 838: ' line' (ID: 2543)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.30026522278785706
    2. 'the' → logprob: -2.175265312194824
    3. ' lines' → logprob: -2.550265312194824
    4. 'line' → logprob: -3.425265312194824
    5. 'a' → logprob: -4.050265312194824
    6. 'paths' → logprob: -5.050265312194824
    7. ' the' → logprob: -6.175265312194824
    8. 'path' → logprob: -6.175265312194824
    9. 'used' → logprob: -6.550265312194824
    10. 'some' → logprob: -6.550265312194824

Token 839: ' segments' (ID: 33749)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2103464603424072
    2. '       ' → logprob: -1.4603464603424072
    3. ' if' → logprob: -1.4603464603424072
    4. '   ' → logprob: -1.5853464603424072
    5. 'if' → logprob: -4.460346221923828
    6. '<|end|>' → logprob: -4.710346221923828
    7. ',' → logprob: -5.835346221923828
    8. ' and' → logprob: -6.585346221923828
    9. ',
' → logprob: -6.710346221923828
    10. '    
' → logprob: -6.710346221923828

Token 840: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1745399534702301
    2. '   ' → logprob: -2.2995400428771973
    3. '
' → logprob: -3.2995400428771973
    4. ' if' → logprob: -4.299540042877197
    5. 'if' → logprob: -5.174540042877197
    6. 'result' → logprob: -6.799540042877197
    7. '```' → logprob: -7.799540042877197
    8. ' result' → logprob: -8.049539566040039
    9. '<|end|>' → logprob: -8.049539566040039
    10. '    
' → logprob: -8.174539566040039

Token 841: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.5703801512718201
    2. 'so' → logprob: -1.6953802108764648
    3. '       ' → logprob: -2.320380210876465
    4. 'continue' → logprob: -3.070380210876465
    5. ' but' → logprob: -3.570380210876465
    6. ' continue' → logprob: -3.570380210876465
    7. 'but' → logprob: -3.820380210876465
    8. 'not' → logprob: -5.445380210876465
    9. '```' → logprob: -5.445380210876465
    10. ' not' → logprob: -5.445380210876465

Token 842: ' mark' (ID: 1983)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.515227198600769
    2. 'continue' → logprob: -1.765227198600769
    3. '#' → logprob: -1.890227198600769
    4. 'used' → logprob: -3.6402273178100586
    5. ' used' → logprob: -4.140227317810059
    6. ' pass' → logprob: -4.515227317810059
    7. ' continue' → logprob: -4.890227317810059
    8. 'for' → logprob: -5.265227317810059
    9. 'they' → logprob: -5.515227317810059
    10. '       ' → logprob: -6.015227317810059

Token 843: ' after' (ID: 1934)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.007833980955183506
    2. 'True' → logprob: -6.132833957672119
    3. 'for' → logprob: -6.257833957672119
    4. ' used' → logprob: -6.257833957672119
    5. 'False' → logprob: -7.632833957672119
    6. 'them' → logprob: -8.007834434509277
    7. 'start' → logprob: -8.132834434509277
    8. '[start' → logprob: -8.507834434509277
    9. '[r' → logprob: -9.132834434509277
    10. '[' → logprob: -9.382834434509277

Token 844: ' line' (ID: 2543)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.4426805973052979
    2. 'placing' → logprob: -1.8176805973052979
    3. 'reading' → logprob: -1.9426805973052979
    4. 'for' → logprob: -2.317680597305298
    5. 'this' → logprob: -2.442680597305298
    6. 'def' → logprob: -2.817680597305298
    7. 'used' → logprob: -3.192680597305298
    8. 'starting' → logprob: -3.317680597305298
    9. 'start' → logprob: -3.317680597305298
    10. 'all' → logprob: -3.817680597305298

Token 845: ' found' (ID: 2491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7426272630691528
    2. '   ' → logprob: -1.4926272630691528
    3. '
' → logprob: -1.6176272630691528
    4. '```' → logprob: -3.1176271438598633
    5. ' for' → logprob: -3.8676271438598633
    6. '<|end|>' → logprob: -3.9926271438598633
    7. 'for' → logprob: -5.492627143859863
    8. '<|end|>' → logprob: -6.117627143859863
    9. '        
' → logprob: -6.617627143859863
    10. ',' → logprob: -6.742627143859863

Token 846: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1694687157869339
    2. '   ' → logprob: -3.044468641281128
    3. '<|end|>' → logprob: -3.169468641281128
    4. ' if' → logprob: -3.294468641281128
    5. '
' → logprob: -4.169468879699707
    6. 'if' → logprob: -4.794468879699707
    7. '        
' → logprob: -6.044468879699707
    8. '<|end|>' → logprob: -7.169468879699707
    9. '```' → logprob: -7.419468879699707
    10. '	if' → logprob: -8.044468879699707

Token 847: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032233528792858124
    2. '```' → logprob: -3.907233476638794
    3. '
' → logprob: -4.657233715057373
    4. 'if' → logprob: -7.157233715057373
    5. '       ' → logprob: -7.532233715057373
    6. '    
' → logprob: -8.032233238220215
    7. ' if' → logprob: -8.282233238220215
    8. ' for' → logprob: -9.782233238220215
    9. 'result' → logprob: -9.907233238220215
    10. 'for' → logprob: -10.282233238220215

Token 848: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32912755012512207
    2. '       ' → logprob: -1.579127550125122
    3. '   ' → logprob: -2.954127550125122
    4. '
' → logprob: -4.954127311706543
    5. 'res' → logprob: -5.079127311706543
    6. 'result' → logprob: -5.454127311706543
    7. ' if' → logprob: -5.579127311706543
    8. 'success' → logprob: -8.329127311706543
    9. '```' → logprob: -8.829127311706543
    10. 'found' → logprob: -8.954127311706543

Token 849: ' Because' (ID: 13602)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04033647105097771
    2. 'print' → logprob: -3.7903363704681396
    3. 'res' → logprob: -4.790336608886719
    4. 'result' → logprob: -5.040336608886719
    5. '       ' → logprob: -6.540336608886719
    6. ' if' → logprob: -7.540336608886719
    7. 'found' → logprob: -9.790336608886719
    8. '   ' → logprob: -10.165336608886719
    9. 'ans' → logprob: -10.915336608886719
    10. 'possible' → logprob: -11.040336608886719

Token 850: ' order' (ID: 2569)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.5356085300445557
    2. 'len' → logprob: -1.5356085300445557
    3. ' not' → logprob: -1.9106085300445557
    4. '   ' → logprob: -2.4106085300445557
    5. ' len' → logprob: -2.5356085300445557
    6. 'the' → logprob: -2.6606085300445557
    7. 'not' → logprob: -3.1606085300445557
    8. ' start' → logprob: -3.9106085300445557
    9. 'start' → logprob: -3.9106085300445557
    10. ' all' → logprob: -4.160608291625977

Token 851: ' affects' (ID: 33780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7272589206695557
    2. 'def' → logprob: -1.9772589206695557
    3. 'of' → logprob: -2.3522589206695557
    4. ' of' → logprob: -2.7272589206695557
    5. ' =' → logprob: -2.8522589206695557
    6. ' is' → logprob: -3.1022589206695557
    7. ' in' → logprob: -3.8522589206695557
    8. 'in' → logprob: -4.227258682250977
    9. '   ' → logprob: -4.352258682250977
    10. 'for' → logprob: -4.477258682250977

Token 852: ' back' (ID: 1602)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3219483494758606
    2. ' the' → logprob: -2.071948289871216
    3. 'result' → logprob: -3.071948289871216
    4. 'next' → logprob: -3.571948289871216
    5. 'can' → logprob: -4.571948528289795
    6. 'dfs' → logprob: -4.821948528289795
    7. ' next' → logprob: -4.946948528289795
    8. 'results' → logprob: -5.196948528289795
    9. ' result' → logprob: -5.446948528289795
    10. 'solution' → logprob: -5.571948528289795

Token 853: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.0017434853361919522
    2. 'track' → logprob: -6.626743316650391
    3. '   ' → logprob: -7.876743316650391
    4. 't' → logprob: -11.12674331665039
    5. '       ' → logprob: -11.50174331665039
    6. 'tr' → logprob: -12.25174331665039
    7. 'trace' → logprob: -13.12674331665039
    8. 'tracks' → logprob: -14.00174331665039
    9. '```' → logprob: -14.00174331665039
    10. 'tract' → logprob: -14.12674331665039

Token 854: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1922236531972885
    2. '       ' → logprob: -2.06722354888916
    3. 'start' → logprob: -4.31722354888916
    4. '   ' → logprob: -4.94222354888916
    5. '
' → logprob: -5.19222354888916
    6. ' for' → logprob: -5.31722354888916
    7. 'def' → logprob: -5.31722354888916
    8. ',
' → logprob: -5.44222354888916
    9. 'for' → logprob: -6.06722354888916
    10. '        
' → logprob: -6.56722354888916

Token 855: ' we' (ID: 581)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.010769657790660858
    2. ' start' → logprob: -4.885769844055176
    3. '
' → logprob: -6.635769844055176
    4. 'import' → logprob: -7.260769844055176
    5. 'def' → logprob: -7.885769844055176
    6. 'continue' → logprob: -8.760769844055176
    7. 'next' → logprob: -8.885769844055176
    8. '       ' → logprob: -9.260769844055176
    9. '        
' → logprob: -9.885769844055176
    10. '#' → logprob: -9.885769844055176

Token 856: ' sort' (ID: 4506)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4183790385723114
    2. '.sort' → logprob: -2.043379068374634
    3. 'sort' → logprob: -2.668379068374634
    4. '       ' → logprob: -2.918379068374634
    5. 'should' → logprob: -3.918379068374634
    6. ' start' → logprob: -3.918379068374634
    7. ' can' → logprob: -4.043378829956055
    8. 'can' → logprob: -4.793378829956055
    9. 'continue' → logprob: -4.918378829956055
    10. ' should' → logprob: -5.168378829956055

Token 857: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.16078893840312958
    2. '(start' → logprob: -1.910788893699646
    3. '(' → logprob: -8.285788536071777
    4. ' start' → logprob: -8.785788536071777
    5. '```' → logprob: -9.410788536071777
    6. '(
' → logprob: -11.160788536071777
    7. '[start' → logprob: -11.160788536071777
    8. '=start' → logprob: -11.535788536071777
    9. 'the' → logprob: -11.535788536071777
    10. 'by' → logprob: -12.285788536071777

Token 858: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -6.630610641877865e-06
    2. 'points' → logprob: -12.000006675720215
    3. '_' → logprob: -15.750006675720215
    4. '_positions' → logprob: -16.2500057220459
    5. '```' → logprob: -16.2500057220459
    6. ' points' → logprob: -17.0000057220459
    7. 'Points' → logprob: -17.3750057220459
    8. '_p' → logprob: -17.5000057220459
    9. '_POINTS' → logprob: -18.3750057220459
    10. '_point' → logprob: -18.6250057220459

Token 859: ' to' (ID: 316)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0362323634326458
    2. '       ' → logprob: -5.1612324714660645
    3. 'start' → logprob: -5.2862324714660645
    4. '```' → logprob: -5.2862324714660645
    5. '(start' → logprob: -5.4112324714660645
    6. ' =' → logprob: -5.6612324714660645
    7. '=' → logprob: -5.7862324714660645
    8. '(sort' → logprob: -6.2862324714660645
    9. '()' → logprob: -6.4112324714660645
    10. '=start' → logprob: -6.7862324714660645

Token 860: ' optimize' (ID: 40398)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16185809671878815
    2. 'start' → logprob: -2.411858081817627
    3. ' minimize' → logprob: -4.161858081817627
    4. 'try' → logprob: -4.161858081817627
    5. 'maximize' → logprob: -4.911858081817627
    6. 'reduce' → logprob: -5.286858081817627
    7. 'opt' → logprob: -5.536858081817627
    8. 'continue' → logprob: -6.161858081817627
    9. 'sorted' → logprob: -6.286858081817627
    10. 'help' → logprob: -6.411858081817627

Token 861: ':
' (ID: 734)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.011077065952122211
    2. '(start' → logprob: -5.011076927185059
    3. ' start' → logprob: -5.761076927185059
    4. 'def' → logprob: -8.011076927185059
    5. '```' → logprob: -8.636076927185059
    6. '()' → logprob: -8.761076927185059
    7. '[start' → logprob: -8.761076927185059
    8. '   ' → logprob: -9.511076927185059
    9. '(' → logprob: -9.511076927185059
    10. '=start' → logprob: -9.886076927185059

Token 862: '       ' (ID: 309)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5316903591156006
    2. 'start' → logprob: -1.0316903591156006
    3. '```' → logprob: -3.2816903591156006
    4. '       ' → logprob: -4.28169059753418
    5. '   ' → logprob: -6.03169059753418
    6. '[start' → logprob: -6.40669059753418
    7. '
' → logprob: -8.28169059753418
    8. '``' → logprob: -9.28169059753418
    9. '        
' → logprob: -10.03169059753418
    10. 'import' → logprob: -10.40669059753418

Token 863: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.031133726239204407
    2. ' start' → logprob: -3.5311336517333984
    3. '
' → logprob: -6.781133651733398
    4. '```' → logprob: -8.906133651733398
    5. '       ' → logprob: -9.656133651733398
    6. '   ' → logprob: -11.656133651733398
    7. 'sorted' → logprob: -11.656133651733398
    8. '[start' → logprob: -12.156133651733398
    9. '        
' → logprob: -12.281133651733398
    10. '``' → logprob: -12.406133651733398

Token 864: ' Try' (ID: 14720)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00023059594968799502
    2. ' start' → logprob: -8.87523078918457
    3. '```' → logprob: -10.12523078918457
    4. 'def' → logprob: -11.25023078918457
    5. 'sort' → logprob: -11.62523078918457
    6. '#' → logprob: -11.75023078918457
    7. '
' → logprob: -12.37523078918457
    8. 'import' → logprob: -12.62523078918457
    9. 'for' → logprob: -12.75023078918457
    10. '       ' → logprob: -12.87523078918457

Token 865: ' points' (ID: 5571)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.016787100583314896
    2. 'def' → logprob: -4.641787052154541
    3. 'to' → logprob: -6.141787052154541
    4. 'sorted' → logprob: -6.141787052154541
    5. 'sorting' → logprob: -7.141787052154541
    6. 'import' → logprob: -7.141787052154541
    7. 'from' → logprob: -7.641787052154541
    8. '```' → logprob: -8.5167875289917
    9. ' start' → logprob: -9.6417875289917
    10. 'sort' → logprob: -9.8917875289917

Token 866: ' with' (ID: 483)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.010568911209702492
    2. '=' → logprob: -4.760569095611572
    3. ' =' → logprob: -7.260569095611572
    4. 'sort' → logprob: -7.385569095611572
    5. 'sorted' → logprob: -8.135568618774414
    6. '```' → logprob: -9.260568618774414
    7. '_sorted' → logprob: -9.760568618774414
    8. '.' → logprob: -10.510568618774414
    9. '   ' → logprob: -10.635568618774414
    10. '_points' → logprob: -11.010568618774414

Token 867: ' fewer' (ID: 30732)
  Prédit: 'few'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'few' → logprob: -0.8348449468612671
    2. 'lowest' → logprob: -1.834844946861267
    3. 'f' → logprob: -2.2098450660705566
    4. 'sm' → logprob: -2.5848450660705566
    5. ' fewer' → logprob: -2.7098450660705566
    6. 'small' → logprob: -2.8348450660705566
    7. ' few' → logprob: -3.9598450660705566
    8. ' smallest' → logprob: -3.9598450660705566
    9. 'lower' → logprob: -4.209845066070557
    10. ' smaller' → logprob: -4.209845066070557

Token 868: ' candidates' (ID: 18116)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.2555801272392273
    2. 'possible' → logprob: -2.505580186843872
    3. ' neighbors' → logprob: -3.130580186843872
    4. 'adj' → logprob: -3.130580186843872
    5. 'used' → logprob: -3.630580186843872
    6. 'available' → logprob: -4.255579948425293
    7. 'neighbor' → logprob: -5.130579948425293
    8. ' adjacent' → logprob: -5.755579948425293
    9. ' possible' → logprob: -6.255579948425293
    10. ' used' → logprob: -7.005579948425293

Token 869: ' first' (ID: 1577)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.7695943117141724
    2. ' =' → logprob: -1.0195943117141724
    3. 'start' → logprob: -3.519594192504883
    4. '=' → logprob: -3.519594192504883
    5. '_points' → logprob: -3.894594192504883
    6. '()
' → logprob: -4.519594192504883
    7. 'def' → logprob: -4.769594192504883
    8. '       ' → logprob: -4.769594192504883
    9. 'sort' → logprob: -5.019594192504883
    10. '(start' → logprob: -5.144594192504883

Token 870: '
' (ID: 198)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.012678928673267365
    2. '
' → logprob: -4.637679100036621
    3. '       ' → logprob: -7.512679100036621
    4. 'def' → logprob: -8.012679100036621
    5. ' start' → logprob: -8.012679100036621
    6. '(start' → logprob: -8.012679100036621
    7. ',' → logprob: -8.512679100036621
    8. '        
' → logprob: -8.512679100036621
    9. 'import' → logprob: -8.512679100036621
    10. '```' → logprob: -8.637679100036621

Token 871: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0262910109013319
    2. '
' → logprob: -4.2762908935546875
    3. ' start' → logprob: -5.2762908935546875
    4. '       ' → logprob: -6.0262908935546875
    5. 'def' → logprob: -6.2762908935546875
    6. '   ' → logprob: -7.6512908935546875
    7. 'for' → logprob: -8.151290893554688
    8. '```' → logprob: -8.151290893554688
    9. '(start' → logprob: -8.151290893554688
    10. ',' → logprob: -8.651290893554688

Token 872: ' def' (ID: 1056)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03243192657828331
    2. ' start' → logprob: -3.6574318408966064
    3. 'def' (adapté à ' def') → logprob: -6.1574320793151855
    4. 'for' → logprob: -6.9074320793151855
    5. '
' → logprob: -7.4074320793151855
    6. ' for' → logprob: -8.157431602478027
    7. 'sorted' → logprob: -8.157431602478027
    8. '   ' → logprob: -8.282431602478027
    9. '#' → logprob: -8.657431602478027
    10. '       ' → logprob: -8.657431602478027

Token 873: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.22395537793636322
    2. 'candidate' → logprob: -1.9739553928375244
    3. 'get' → logprob: -3.8489553928375244
    4. ' count' → logprob: -4.348955154418945
    5. 'c' → logprob: -4.598955154418945
    6. ' candidate' → logprob: -5.223955154418945
    7. ' get' → logprob: -5.348955154418945
    8. 'start' → logprob: -5.723955154418945
    9. 'num' → logprob: -6.348955154418945
    10. 'line' → logprob: -7.348955154418945

Token 874: '_candidates' (ID: 186937)
  Prédit: '_candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.009129263460636139
    2. '(' → logprob: -5.759129047393799
    3. '(start' → logprob: -6.509129047393799
    4. '_lines' → logprob: -6.759129047393799
    5. '_line' → logprob: -7.384129047393799
    6. '_start' → logprob: -7.759129047393799
    7. '(line' → logprob: -7.884129047393799
    8. '_candidate' → logprob: -7.884129047393799
    9. '_possible' → logprob: -8.009129524230957
    10. '_points' → logprob: -8.884129524230957

Token 875: '(sp' (ID: 33591)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.4954623878002167
    2. '(start' → logprob: -0.9954624176025391
    3. '(' → logprob: -4.620462417602539
    4. '(r' → logprob: -4.870462417602539
    5. '(row' → logprob: -6.745462417602539
    6. '(line' → logprob: -7.245462417602539
    7. '(n' → logprob: -7.370462417602539
    8. '(point' → logprob: -7.495462417602539
    9. '(points' → logprob: -8.620462417602539
    10. ' (' → logprob: -8.620462417602539

Token 876: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20850682258605957
    2. '):
' → logprob: -2.0835068225860596
    3. '(sp' → logprob: -3.5835068225860596
    4. '(grid' → logprob: -4.0835065841674805
    5. ')' → logprob: -5.0835065841674805
    6. ',' → logprob: -5.5835065841674805
    7. '(start' → logprob: -5.8335065841674805
    8. '):

' → logprob: -6.7085065841674805
    9. '):(' → logprob: -7.2085065841674805
    10. 's' → logprob: -7.7085065841674805

Token 877: '           ' (ID: 352)
  Prédit: '(sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sp' → logprob: -0.06032568961381912
    2. '(' → logprob: -3.5603256225585938
    3. '   ' → logprob: -4.435325622558594
    4. '(grid' → logprob: -4.810325622558594
    5. '(r' → logprob: -5.560325622558594
    6. '(s' → logprob: -5.810325622558594
    7. '(
' → logprob: -7.060325622558594
    8. '(line' → logprob: -7.685325622558594
    9. '(start' → logprob: -7.810325622558594
    10. '```' → logprob: -8.185325622558594

Token 878: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00015240935317706317
    2. '   ' → logprob: -9.125152587890625
    3. ' r' → logprob: -11.000152587890625
    4. 'grid' → logprob: -11.000152587890625
    5. '	r' → logprob: -12.750152587890625
    6. '       ' → logprob: -13.125152587890625
    7. '```' → logprob: -13.250152587890625
    8. 'n' → logprob: -14.250152587890625
    9. '           ' → logprob: -14.500152587890625
    10. 's' → logprob: -14.625152587890625

Token 879: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08926714211702347
    2. ',c' → logprob: -2.4642672538757324
    3. ',
' → logprob: -9.339266777038574
    4. ' ,' → logprob: -9.464266777038574
    5. 'c' → logprob: -9.964266777038574
    6. ',r' → logprob: -10.464266777038574
    7. '=' → logprob: -10.964266777038574
    8. ',s' → logprob: -11.214266777038574
    9. ',int' → logprob: -11.964266777038574
    10. ',a' → logprob: -12.089266777038574

Token 880: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006715967319905758
    2. ' c' → logprob: -5.006715774536133
    3. ',c' → logprob: -15.006715774536133
    4. ',' → logprob: -15.881715774536133
    5. '   ' → logprob: -16.631715774536133
    6. '_c' → logprob: -17.756715774536133
    7. '	c' → logprob: -17.756715774536133
    8. ' ' → logprob: -20.006715774536133
    9. '    ' → logprob: -20.131715774536133
    10. ')c' → logprob: -20.381715774536133

Token 881: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06264734268188477
    2. ' =' → logprob: -2.8126473426818848
    3. '   ' → logprob: -7.937647342681885
    4. ',' → logprob: -8.812646865844727
    5. '=
' → logprob: -9.812646865844727
    6. ')' → logprob: -10.312646865844727
    7. ')=' → logprob: -10.937646865844727
    8. '):
' → logprob: -10.937646865844727
    9. '=int' → logprob: -12.187646865844727
    10. '       ' → logprob: -12.187646865844727

Token 882: ' sp' (ID: 1014)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.018151817843317986
    2. ' sp' → logprob: -4.018151760101318
    3. '	sp' → logprob: -13.893152236938477
    4. '_sp' → logprob: -14.518152236938477
    5. '(sp' → logprob: -15.268152236938477
    6. '.sp' → logprob: -15.893152236938477
    7. 's' → logprob: -18.018152236938477
    8. '
' → logprob: -18.518152236938477
    9. '   ' → logprob: -18.518152236938477
    10. 'sys' → logprob: -18.643152236938477

Token 883: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5669055581092834
    2. ',' → logprob: -2.0669054985046387
    3. ':' → logprob: -2.1919054985046387
    4. '=' → logprob: -2.3169054985046387
    5. ' =' → logprob: -3.4419054985046387
    6. '
' → logprob: -3.6919054985046387
    7. ':
' → logprob: -3.9419054985046387
    8. ',
' → logprob: -5.566905498504639
    9. '    
' → logprob: -5.691905498504639
    10. '   
' → logprob: -6.441905498504639

Token 884: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1578449308872223
    2. '       ' → logprob: -2.7828450202941895
    3. '
' → logprob: -3.6578450202941895
    4. '```' → logprob: -3.6578450202941895
    5. 's' → logprob: -3.9078450202941895
    6. ' s' → logprob: -5.4078450202941895
    7. ',' → logprob: -6.9078450202941895
    8. '    
' → logprob: -7.0328450202941895
    9. 'token' → logprob: -7.1578450202941895
    10. ' used' → logprob: -7.5328450202941895

Token 885: ' return' (ID: 622)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5784685015678406
    2. 'c' → logprob: -1.7034685611724854
    3. 'cnt' → logprob: -2.2034685611724854
    4. '   ' → logprob: -2.9534685611724854
    5. 'return' (adapté à ' return') → logprob: -3.4534685611724854
    6. 'res' → logprob: -3.8284685611724854
    7. 'total' → logprob: -4.328468322753906
    8. 'counts' → logprob: -4.703468322753906
    9. 'results' → logprob: -5.203468322753906
    10. '           ' → logprob: -6.453468322753906

Token 886: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009350438485853374
    2. ' len' → logprob: -7.000935077667236
    3. 'sum' → logprob: -11.125934600830078
    4. '0' → logprob: -11.875934600830078
    5. '(len' → logprob: -13.750934600830078
    6. '   ' → logprob: -15.750934600830078
    7. '	len' → logprob: -16.125934600830078
    8. '
' → logprob: -16.250934600830078
    9. 'max' → logprob: -16.250934600830078
    10. ' sum' → logprob: -16.750934600830078

Token 887: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.00015955790877342224
    2. 'get' → logprob: -8.75015926361084
    3. '(' → logprob: -14.00015926361084
    4. '(
' → logprob: -16.250160217285156
    5. '[get' → logprob: -17.125160217285156
    6. ' (' → logprob: -18.000160217285156
    7. ' get' → logprob: -18.000160217285156
    8. '=get' → logprob: -18.125160217285156
    9. ',get' → logprob: -18.375160217285156
    10. '(c' → logprob: -18.375160217285156

Token 888: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.6240566083070007e-06
    2. 'line' → logprob: -13.500001907348633
    3. '_LINE' → logprob: -15.750001907348633
    4. 'Line' → logprob: -17.625001907348633
    5. '(line' → logprob: -18.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. 'get' → logprob: -18.375001907348633
    8. '(get' → logprob: -19.250001907348633
    9. '_Line' → logprob: -19.375001907348633
    10. ' line' → logprob: -19.375001907348633

Token 889: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.611323624383658e-05
    2. 's' → logprob: -9.875065803527832
    3. '_line' → logprob: -11.250065803527832
    4. '_sum' → logprob: -14.375065803527832
    5. '```' → logprob: -15.000065803527832
    6. ')' → logprob: -15.250065803527832
    7. 'line' → logprob: -16.00006675720215
    8. 'sum' → logprob: -16.75006675720215
    9. ',' → logprob: -17.12506675720215
    10. '   ' → logprob: -17.12506675720215

Token 890: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.03304649516940117
    2. '_s' → logprob: -3.7830464839935303
    3. 's' → logprob: -4.658046722412109
    4. 'um' → logprob: -8.65804672241211
    5. '```' → logprob: -10.15804672241211
    6. '...' → logprob: -12.03304672241211
    7. 'S' → logprob: -12.15804672241211
    8. '_' → logprob: -12.78304672241211
    9. 'ms' → logprob: -12.90804672241211
    10. '   ' → logprob: -13.15804672241211

Token 891: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -3.070975071750581e-05
    2. '(' → logprob: -11.125030517578125
    3. '(
' → logprob: -11.625030517578125
    4. ')' → logprob: -12.250030517578125
    5. ' (' → logprob: -13.250030517578125
    6. ')(' → logprob: -16.625030517578125
    7. '(Grid' → logprob: -16.625030517578125
    8. '```' → logprob: -16.625030517578125
    9. '(graph' → logprob: -16.750030517578125
    10. ' grid' → logprob: -17.125030517578125

Token 892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006011391058564186
    2. '(grid' → logprob: -5.131011486053467
    3. ',n' → logprob: -10.006011009216309
    4. ',
' → logprob: -10.881011009216309
    5. ' ,' → logprob: -11.756011009216309
    6. '(' → logprob: -12.881011009216309
    7. ')' → logprob: -13.756011009216309
    8. '(n' → logprob: -14.006011009216309
    9. '```' → logprob: -14.006011009216309
    10. ',g' → logprob: -14.381011009216309

Token 893: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07481653243303299
    2. ' n' → logprob: -2.6998164653778076
    3. 'grid' → logprob: -5.824816703796387
    4. ' grid' → logprob: -6.324816703796387
    5. ')' → logprob: -10.074816703796387
    6. ',' → logprob: -10.824816703796387
    7. '(grid' → logprob: -11.199816703796387
    8. ',n' → logprob: -11.324816703796387
    9. ' ' → logprob: -11.449816703796387
    10. '
' → logprob: -11.949816703796387

Token 894: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06201250106096268
    2. '(grid' → logprob: -2.8120124340057373
    3. ' ,' → logprob: -10.937012672424316
    4. 'grid' → logprob: -11.687012672424316
    5. '(' → logprob: -11.937012672424316
    6. ',
' → logprob: -12.312012672424316
    7. ' grid' → logprob: -13.562012672424316
    8. '```' → logprob: -14.062012672424316
    9. ',g' → logprob: -14.187012672424316
    10. ' (' → logprob: -14.187012672424316

Token 895: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.019453199580311775
    2. ' r' → logprob: -4.644453048706055
    3. 'grid' → logprob: -4.894453048706055
    4. ' grid' → logprob: -6.769453048706055
    5. 'sp' → logprob: -7.019453048706055
    6. ')' → logprob: -10.144453048706055
    7. 'c' → logprob: -10.644453048706055
    8. ' sp' → logprob: -11.269453048706055
    9. '(grid' → logprob: -11.769453048706055
    10. '   ' → logprob: -12.644453048706055

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016968417912721634
    2. ',c' → logprob: -6.501697063446045
    3. ' ,' → logprob: -8.626696586608887
    4. 'c' → logprob: -11.376696586608887
    5. ',
' → logprob: -13.251696586608887
    6. '<|end|>' → logprob: -15.376696586608887
    7. ',r' → logprob: -15.876696586608887
    8. '_,' → logprob: -16.001697540283203
    9. ',p' → logprob: -16.001697540283203
    10. '[' → logprob: -16.001697540283203

Token 897: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0036024407017976046
    2. ' c' → logprob: -5.628602504730225
    3. '   ' → logprob: -13.753602027893066
    4. ' ' → logprob: -14.378602027893066
    5. '  ' → logprob: -15.503602027893066
    6. '    ' → logprob: -16.128602981567383
    7. '
' → logprob: -16.253602981567383
    8. '	c' → logprob: -16.628602981567383
    9. ')c' → logprob: -16.878602981567383
    10. ',' → logprob: -17.628602981567383

Token 898: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014001218369230628
    2. ' ,' → logprob: -9.125140190124512
    3. ',start' → logprob: -11.125140190124512
    4. ',
' → logprob: -12.500140190124512
    5. '))' → logprob: -12.875140190124512
    6. ',r' → logprob: -13.500140190124512
    7. '```' → logprob: -13.500140190124512
    8. ',n' → logprob: -13.875140190124512
    9. ',None' → logprob: -14.250140190124512
    10. ',len' → logprob: -14.500140190124512

Token 899: ' -' (ID: 533)
  Prédit: '-grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-grid' → logprob: -0.5916891694068909
    2. '-' → logprob: -0.9666891694068909
    3. ' -' → logprob: -3.466689109802246
    4. '-r' → logprob: -3.841689109802246
    5. '-c' → logprob: -5.216689109802246
    6. '-sp' → logprob: -5.716689109802246
    7. 'abs' → logprob: -6.216689109802246
    8. 'r' → logprob: -7.216689109802246
    9. 'grid' → logprob: -7.466689109802246
    10. '-start' → logprob: -8.216689109802246

Token 900: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -3.6789137084269896e-05
    2. ' grid' → logprob: -10.37503719329834
    3. '(grid' → logprob: -12.62503719329834
    4. '1' → logprob: -14.12503719329834
    5. '	grid' → logprob: -14.25003719329834
    6. '-grid' → logprob: -15.37503719329834
    7. '.grid' → logprob: -15.75003719329834
    8. '   ' → logprob: -16.500036239624023
    9. '
' → logprob: -16.625036239624023
    10. '<|end|>' → logprob: -16.750036239624023

Token 901: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.008852577768266201
    2. 'r' → logprob: -4.758852481842041
    3. '[' → logprob: -8.5088529586792
    4. '[
' → logprob: -11.1338529586792
    5. ',r' → logprob: -11.5088529586792
    6. '[c' → logprob: -12.5088529586792
    7. '   ' → logprob: -13.6338529586792
    8. '[s' → logprob: -13.7588529586792
    9. ' r' → logprob: -13.8838529586792
    10. ' [' → logprob: -14.3838529586792

Token 902: '][' (ID: 2696)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6442150473594666
    2. '[c' → logprob: -0.7692150473594666
    3. '][' → logprob: -4.894215106964111
    4. '[r' → logprob: -6.519215106964111
    5. ',c' → logprob: -6.894215106964111
    6. '[' → logprob: -7.394215106964111
    7. 'r' → logprob: -8.019214630126953
    8. ']' → logprob: -8.144214630126953
    9. '[
' → logprob: -9.019214630126953
    10. ',' → logprob: -10.144214630126953

Token 903: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1875571544806007e-05
    2. '   ' → logprob: -12.500011444091797
    3. ' c' → logprob: -12.625011444091797
    4. '[c' → logprob: -13.250011444091797
    5. '```' → logprob: -14.125011444091797
    6. '[' → logprob: -14.625011444091797
    7. ' ' → logprob: -15.125011444091797
    8. '	c' → logprob: -15.125011444091797
    9. '][' → logprob: -15.375011444091797
    10. '<|end|>' → logprob: -15.625011444091797

Token 904: '],' (ID: 2155)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.1362261325120926
    2. '[r' → logprob: -2.386226177215576
    3. '],' → logprob: -4.261226177215576
    4. '),' → logprob: -5.011226177215576
    5. '   ' → logprob: -5.636226177215576
    6. ']' → logprob: -6.011226177215576
    7. '])))' → logprob: -6.386226177215576
    8. ')))' → logprob: -6.386226177215576
    9. ']))
' → logprob: -6.511226177215576
    10. '[' → logprob: -6.761226177215576

Token 905: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.004262176807969809
    2. ' used' → logprob: -5.5042619705200195
    3. '[[' → logprob: -9.75426197052002
    4. '[' → logprob: -9.75426197052002
    5. 'False' → logprob: -10.62926197052002
    6. ' [' → logprob: -11.75426197052002
    7. 'True' → logprob: -11.87926197052002
    8. '[]' → logprob: -11.87926197052002
    9. '   ' → logprob: -12.00426197052002
    10. 'set' → logprob: -12.25426197052002

Token 906: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0486910417675972
    2. '))
' → logprob: -3.0486910343170166
    3. '))

' → logprob: -10.173690795898438
    4. '   ' → logprob: -10.548690795898438
    5. '       ' → logprob: -11.298690795898438
    6. ')))' → logprob: -11.798690795898438
    7. ')' → logprob: -11.798690795898438
    8. ' ))' → logprob: -12.423690795898438
    9. '))
' → logprob: -13.048690795898438
    10. ' ' → logprob: -13.173690795898438

Token 907: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20748429000377655
    2. '
' → logprob: -1.957484245300293
    3. ')' → logprob: -4.207484245300293
    4. '   ' → logprob: -4.707484245300293
    5. '<|end|>' → logprob: -4.957484245300293
    6. 'def' → logprob: -5.207484245300293
    7. '        
' → logprob: -5.832484245300293
    8. ')
' → logprob: -6.332484245300293
    9. '```' → logprob: -6.957484245300293
    10. 'return' → logprob: -6.957484245300293

Token 908: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.163654625415802
    2. '       ' → logprob: -2.0386545658111572
    3. ' start' → logprob: -4.788654804229736
    4. 'sorted' → logprob: -5.413654804229736
    5. '
' → logprob: -5.538654804229736
    6. '   ' → logprob: -5.663654804229736
    7. ' sorted' → logprob: -9.038654327392578
    8. '        
' → logprob: -9.663654327392578
    9. '```' → logprob: -9.788654327392578
    10. '           ' → logprob: -10.038654327392578

Token 909: ' But' (ID: 3072)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -5.717296517104842e-05
    2. '       ' → logprob: -10.250057220458984
    3. '   ' → logprob: -11.750057220458984
    4. 'sorted' → logprob: -11.875057220458984
    5. ' start' → logprob: -12.875057220458984
    6. '
' → logprob: -14.000057220458984
    7. '#' → logprob: -14.125057220458984
    8. 'for' → logprob: -14.125057220458984
    9. 'sort' → logprob: -14.750057220458984
    10. '```' → logprob: -15.000057220458984

Token 910: ' this' (ID: 495)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03946912661194801
    2. ' start' → logprob: -3.2894692420959473
    3. '#' → logprob: -7.664469242095947
    4. '
' → logprob: -8.289468765258789
    5. '       ' → logprob: -9.039468765258789
    6. 'for' → logprob: -9.164468765258789
    7. ' for' → logprob: -9.289468765258789
    8. '   ' → logprob: -9.414468765258789
    9. 'sorted' → logprob: -9.414468765258789
    10. 'sort' → logprob: -10.164468765258789

Token 911: ' uses' (ID: 8844)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.31749850511550903
    2. 'start' → logprob: -1.4424984455108643
    3. '=' → logprob: -4.567498683929443
    4. 'sort' → logprob: -4.567498683929443
    5. 'sorted' → logprob: -4.942498683929443
    6. ' =' → logprob: -6.192498683929443
    7. '_sorted' → logprob: -6.817498683929443
    8. ' start' → logprob: -6.942498683929443
    9. '.' → logprob: -7.192498683929443
    10. ')' → logprob: -7.567498683929443

Token 912: ' used' (ID: 2061)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -1.2069995403289795
    2. 'sorted' → logprob: -1.4569995403289795
    3. ' used' → logprob: -2.3319995403289795
    4. ' start' → logprob: -3.0819995403289795
    5. 'sort' → logprob: -3.0819995403289795
    6. ' a' → logprob: -3.0819995403289795
    7. 'start' → logprob: -3.3319995403289795
    8. '[start' → logprob: -3.5819995403289795
    9. 'used' → logprob: -3.8319995403289795
    10. 'unused' → logprob: -3.8319995403289795

Token 913: ' state' (ID: 2608)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.43779718875885
    2. 'sorted' → logprob: -1.68779718875885
    3. '.sort' → logprob: -1.93779718875885
    4. ')
' → logprob: -2.0627970695495605
    5. '_sorted' → logprob: -2.3127970695495605
    6. '
' → logprob: -3.0627970695495605
    7. ' =' → logprob: -3.3127970695495605
    8. 'def' → logprob: -3.8127970695495605
    9. 'start' → logprob: -3.8127970695495605
    10. '#' → logprob: -4.3127970695495605

Token 914: ' that' (ID: 484)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.644277811050415
    2. 'start' → logprob: -1.769277811050415
    3. '       ' → logprob: -2.019277811050415
    4. 'sorted' → logprob: -2.894277811050415
    5. '#' → logprob: -3.394277811050415
    6. ' sorted' → logprob: -4.519277572631836
    7. ',' → logprob: -4.519277572631836
    8. '   ' → logprob: -4.644277572631836
    9. ' start' → logprob: -4.894277572631836
    10. '[start' → logprob: -5.144277572631836

Token 915: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5098817944526672
    2. ' is' → logprob: -1.5098817348480225
    3. 'may' → logprob: -2.3848817348480225
    4. ' may' → logprob: -3.3848817348480225
    5. 'might' → logprob: -4.134881973266602
    6. ' might' → logprob: -5.009881973266602
    7. 'does' → logprob: -5.259881973266602
    8. 'def' → logprob: -5.509881973266602
    9. 'currently' → logprob: -5.884881973266602
    10. 'will' → logprob: -5.884881973266602

Token 916: ' empty' (ID: 8213)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.45970436930656433
    2. 'False' → logprob: -1.3347043991088867
    3. 'always' → logprob: -3.5847043991088867
    4. 'mutable' → logprob: -4.209704399108887
    5. 'reset' → logprob: -4.584704399108887
    6. 'currently' → logprob: -4.959704399108887
    7. 'changing' → logprob: -5.209704399108887
    8. 'initial' → logprob: -5.459704399108887
    9. 'static' → logprob: -5.584704399108887
    10. 'still' → logprob: -5.584704399108887

Token 917: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4367089569568634
    2. '       ' → logprob: -1.311708927154541
    3. ')' → logprob: -3.436708927154541
    4. ',' → logprob: -4.186708927154541
    5. 'start' → logprob: -4.436708927154541
    6. ')
' → logprob: -5.061708927154541
    7. ',
' → logprob: -5.686708927154541
    8. '[start' → logprob: -6.311708927154541
    9. '.sort' → logprob: -6.436708927154541
    10. '   ' → logprob: -6.561708927154541

Token 918: ' common' (ID: 5355)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8155742287635803
    2. 'unused' → logprob: -2.4405741691589355
    3. 'unch' → logprob: -2.5655741691589355
    4. 'all' → logprob: -2.6905741691589355
    5. 'un' → logprob: -2.8155741691589355
    6. 'does' → logprob: -2.9405741691589355
    7. 'will' → logprob: -2.9405741691589355
    8. 'static' → logprob: -3.5655741691589355
    9. 'may' → logprob: -3.6905741691589355
    10. 'False' → logprob: -3.9405741691589355

Token 919: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.134099006652832
    2. '       ' → logprob: -1.634099006652832
    3. ')' → logprob: -2.509099006652832
    4. '
' → logprob: -2.884099006652832
    5. ',
' → logprob: -2.884099006652832
    6. ')
' → logprob: -3.009099006652832
    7. ' for' → logprob: -3.384099006652832
    8. '#' → logprob: -3.509099006652832
    9. 'for' → logprob: -3.759099006652832
    10. 'start' → logprob: -3.759099006652832

Token 920: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.01885571889579296
    2. 'start' → logprob: -4.768855571746826
    3. ' all' → logprob: -5.518855571746826
    4. 'sorting' → logprob: -6.143855571746826
    5. 'each' → logprob: -7.018855571746826
    6. 'sp' → logprob: -7.018855571746826
    7. 'count' → logprob: -7.143855571746826
    8. 'candidate' → logprob: -7.768855571746826
    9. 'initial' → logprob: -8.643856048583984
    10. 'now' → logprob: -8.893856048583984

Token 921: ',' (ID: 11)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8343998789787292
    2. 'sorted' → logprob: -1.834399938583374
    3. 'points' → logprob: -2.584399938583374
    4. '#' → logprob: -2.709399938583374
    5. 'sp' → logprob: -3.084399938583374
    6. ',' → logprob: -3.584399938583374
    7. 'sort' → logprob: -3.584399938583374
    8. 'def' → logprob: -3.959399938583374
    9. '_sp' → logprob: -3.959399938583374
    10. '
' → logprob: -4.084399700164795

Token 922: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.4049476385116577
    2. 'so' → logprob: -1.9049476385116577
    3. '#' → logprob: -2.5299477577209473
    4. '       ' → logprob: -3.2799477577209473
    5. ' which' → logprob: -3.5299477577209473
    6. 'which' → logprob: -3.6549477577209473
    7. 'start' → logprob: -5.654947757720947
    8. '
' → logprob: -6.404947757720947
    9. 'result' → logprob: -7.029947757720947
    10. ' #' → logprob: -7.029947757720947

Token 923: ' ignore' (ID: 17887)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49604570865631104
    2. 'start' → logprob: -1.621045708656311
    3. '       ' → logprob: -2.1210455894470215
    4. ' start' → logprob: -4.2460455894470215
    5. 'sorted' → logprob: -4.4960455894470215
    6. 'we' → logprob: -4.7460455894470215
    7. 'sp' → logprob: -5.4960455894470215
    8. 'pass' → logprob: -5.7460455894470215
    9. ' #' → logprob: -5.9960455894470215
    10. 'c' → logprob: -5.9960455894470215

Token 924: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6158931255340576
    2. '
' → logprob: -1.3658931255340576
    3. '#' → logprob: -2.4908931255340576
    4. '<|end|>' → logprob: -2.4908931255340576
    5. ')' → logprob: -3.7408931255340576
    6. ')
' → logprob: -5.615893363952637
    7. '   ' → logprob: -5.865893363952637
    8. '<|end|>' → logprob: -5.990893363952637
    9. '        
' → logprob: -6.240893363952637
    10. ',' → logprob: -6.740893363952637

Token 925: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03674694895744324
    2. '
' → logprob: -4.161746978759766
    3. '       ' → logprob: -4.536746978759766
    4. 'sorted' → logprob: -5.786746978759766
    5. '<|end|>' → logprob: -6.411746978759766
    6. '   ' → logprob: -6.536746978759766
    7. '        
' → logprob: -7.036746978759766
    8. '[start' → logprob: -7.411746978759766
    9. ' start' → logprob: -7.661746978759766
    10. '    
' → logprob: -8.161746978759766

Token 926: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.133056640625
    2. '       ' → logprob: -2.133056640625
    3. '#' (adapté à ' #') → logprob: -5.633056640625
    4. '
' → logprob: -6.508056640625
    5. '   ' → logprob: -7.633056640625
    6. 'sorted' → logprob: -8.008056640625
    7. ' start' → logprob: -9.383056640625
    8. '        
' → logprob: -9.508056640625
    9. '```' → logprob: -10.758056640625
    10. 'next' → logprob: -11.508056640625

Token 927: ' We' (ID: 1416)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.36984217166900635
    2. 'if' → logprob: -1.3698421716690063
    3. '       ' → logprob: -3.369842052459717
    4. 'used' → logprob: -5.244842052459717
    5. 'print' → logprob: -5.244842052459717
    6. 'result' → logprob: -5.744842052459717
    7. '#' → logprob: -6.244842052459717
    8. 'success' → logprob: -6.244842052459717
    9. 'sorted' → logprob: -6.744842052459717
    10. 'res' → logprob: -7.369842052459717

Token 928: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6284775733947754
    2. '#' → logprob: -2.1284775733947754
    3. ' =' → logprob: -2.1284775733947754
    4. '.sort' → logprob: -2.5034775733947754
    5. 'continue' → logprob: -2.7534775733947754
    6. 'start' → logprob: -2.8784775733947754
    7. ' start' → logprob: -3.1284775733947754
    8. ' can' → logprob: -3.2534775733947754
    9. '
' → logprob: -3.5034775733947754
    10. 're' → logprob: -3.5034775733947754

Token 929: ' proceed' (ID: 18988)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.9162259101867676
    2. 'continue' → logprob: -1.6662259101867676
    3. 'start' → logprob: -1.6662259101867676
    4. '       ' → logprob: -2.4162259101867676
    5. '.sort' → logprob: -2.7912259101867676
    6. '#' → logprob: -4.541225910186768
    7. '   ' → logprob: -4.666225910186768
    8. '```' → logprob: -4.791225910186768
    9. 'can' → logprob: -4.916225910186768
    10. 'use' → logprob: -5.041225910186768

Token 930: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019991323351860046
    2. '   ' → logprob: -4.144991397857666
    3. '
' → logprob: -6.269991397857666
    4. '```' → logprob: -7.144991397857666
    5. '        
' → logprob: -7.894991397857666
    6. ' to' → logprob: -8.394990921020508
    7. ' with' → logprob: -8.769990921020508
    8. '<|end|>' → logprob: -8.894990921020508
    9. 'with' → logprob: -9.769990921020508
    10. '    
' → logprob: -9.894990921020508

Token 931: ' read' (ID: 1729)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0008818074711598456
    2. ' is' → logprob: -7.250881671905518
    3. 'planned' → logprob: -9.250882148742676
    4. 'defined' → logprob: -10.125882148742676
    5. '-is' → logprob: -11.125882148742676
    6. '```' → logprob: -11.375882148742676
    7. 'def' → logprob: -13.125882148742676
    8. ' planned' → logprob: -13.250882148742676
    9. 'it' → logprob: -13.500882148742676
    10. 'usual' → logprob: -13.625882148742676

Token 932: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5060406923294067
    2. '   ' → logprob: -1.6310406923294067
    3. '
' → logprob: -2.256040573120117
    4. ',' → logprob: -3.256040573120117
    5. '()' → logprob: -4.381040573120117
    6. '```' → logprob: -4.381040573120117
    7. '<|end|>' → logprob: -4.506040573120117
    8. '        
' → logprob: -4.756040573120117
    9. '<|end|>' → logprob: -6.006040573120117
    10. '    
' → logprob: -6.381040573120117

Token 933: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4836980402469635
    2. '
' → logprob: -1.1086980104446411
    3. '       ' → logprob: -2.9836981296539307
    4. '    
' → logprob: -6.233697891235352
    5. '        
' → logprob: -7.983697891235352
    6. ',' → logprob: -8.108697891235352
    7. '<|end|>' → logprob: -9.233697891235352
    8. '```' → logprob: -9.733697891235352
    9. '
' → logprob: -10.483697891235352
    10. ',
' → logprob: -10.483697891235352

Token 934: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7111965417861938
    2. '
' → logprob: -0.9611965417861938
    3. '       ' → logprob: -2.8361964225769043
    4. '```' → logprob: -3.0861964225769043
    5. '    
' → logprob: -4.961196422576904
    6. 'if' → logprob: -5.586196422576904
    7. '        
' → logprob: -5.961196422576904
    8. 'result' → logprob: -6.086196422576904
    9. 'used' → logprob: -6.086196422576904
    10. 'while' → logprob: -6.461196422576904

Token 935: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0025019366294145584
    2. '       ' → logprob: -6.252501964569092
    3. '   ' → logprob: -7.877501964569092
    4. 'result' → logprob: -9.002501487731934
    5. 'print' → logprob: -10.502501487731934
    6. ' if' → logprob: -10.752501487731934
    7. 'success' → logprob: -11.627501487731934
    8. 'res' → logprob: -11.877501487731934
    9. '```' → logprob: -12.877501487731934
    10. '        
' → logprob: -13.752501487731934

Token 936: ' Attempt' (ID: 92189)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004170287400484085
    2. 'print' → logprob: -6.0041704177856445
    3. 'result' → logprob: -7.3791704177856445
    4. 'res' → logprob: -7.8791704177856445
    5. 'used' → logprob: -8.254170417785645
    6. '       ' → logprob: -8.754170417785645
    7. 'success' → logprob: -9.254170417785645
    8. ' if' → logprob: -9.504170417785645
    9. '   ' → logprob: -10.254170417785645
    10. 'ok' → logprob: -10.504170417785645

Token 937: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8278781175613403
    2. 'result' → logprob: -1.0778781175613403
    3. '       ' → logprob: -2.077877998352051
    4. 'res' → logprob: -2.952877998352051
    5. ' if' → logprob: -4.202877998352051
    6. '   ' → logprob: -4.327877998352051
    7. 'print' → logprob: -4.827877998352051
    8. ' result' → logprob: -5.702877998352051
    9. '
' → logprob: -5.952877998352051
    10. ' res' → logprob: -6.952877998352051

Token 938: ' find' (ID: 1646)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10263035446405411
    2. 'print' → logprob: -2.602630376815796
    3. 'used' → logprob: -4.227630138397217
    4. ' if' → logprob: -5.102630138397217
    5. ' used' → logprob: -6.102630138397217
    6. 'import' → logprob: -8.477630615234375
    7. '
' → logprob: -8.727630615234375
    8. ' print' → logprob: -8.852630615234375
    9. 'sys' → logprob: -10.852630615234375
    10. 'can' → logprob: -12.102630615234375

Token 939: ' solution' (ID: 7578)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13948088884353638
    2. 'if' → logprob: -2.6394808292388916
    3. ' a' → logprob: -3.2644808292388916
    4. 'solution' → logprob: -4.889481067657471
    5. 'result' → logprob: -5.639481067657471
    6. 'answer' → logprob: -6.014481067657471
    7. ' if' → logprob: -6.139481067657471
    8. 'all' → logprob: -7.264481067657471
    9. ' solution' → logprob: -7.389481067657471
    10. 'True' → logprob: -7.514481067657471

Token 940: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03938993439078331
    2. '   ' → logprob: -3.4143898487091064
    3. '<|end|>' → logprob: -6.4143900871276855
    4. 'if' → logprob: -6.7893900871276855
    5. ' used' → logprob: -7.1643900871276855
    6. 'used' → logprob: -7.4143900871276855
    7. ' if' → logprob: -7.7893900871276855
    8. '        
' → logprob: -7.7893900871276855
    9. '    
' → logprob: -8.539389610290527
    10. '
' → logprob: -8.539389610290527

Token 941: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5555198788642883
    2. '   ' → logprob: -1.1805198192596436
    3. 'if' → logprob: -2.6805198192596436
    4. 'used' → logprob: -3.5555198192596436
    5. ' used' → logprob: -4.805520057678223
    6. '```' → logprob: -5.055520057678223
    7. ' if' → logprob: -5.680520057678223
    8. 'result' → logprob: -6.305520057678223
    9. '
' → logprob: -6.680520057678223
    10. 'success' → logprob: -7.680520057678223

Token 942: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006098957732319832
    2. 'used' → logprob: -5.631098747253418
    3. '       ' → logprob: -6.881098747253418
    4. ' if' → logprob: -7.006098747253418
    5. 'result' → logprob: -8.381098747253418
    6. '   ' → logprob: -8.756098747253418
    7. ' used' → logprob: -9.506098747253418
    8. 'success' → logprob: -10.006098747253418
    9. '
' → logprob: -11.006098747253418
    10. 'res' → logprob: -11.131098747253418

Token 943: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25215598940849304
    2. '=' → logprob: -1.5021560192108154
    3. '   ' → logprob: -8.502156257629395
    4. '=True' → logprob: -11.002156257629395
    5. '_' → logprob: -13.627156257629395
    6. ' =
' → logprob: -13.877156257629395
    7. ')' → logprob: -14.002156257629395
    8. '=False' → logprob: -14.252156257629395
    9. ',' → logprob: -14.502156257629395
    10. '=[]' → logprob: -14.502156257629395

Token 944: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.06315118074417114
    2. ' can' → logprob: -2.8131511211395264
    3. 'False' → logprob: -7.8131513595581055
    4. 'True' → logprob: -7.9381513595581055
    5. '   ' → logprob: -8.688151359558105
    6. '"' → logprob: -9.063151359558105
    7. ' True' → logprob: -9.688151359558105
    8. ' False' → logprob: -9.938151359558105
    9. '(can' → logprob: -11.938151359558105
    10. 'not' → logprob: -12.563151359558105

Token 945: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -7.703443770878948e-06
    2. '_' → logprob: -12.000007629394531
    3. 'place' → logprob: -14.375007629394531
    4. '_put' → logprob: -14.750007629394531
    5. ' _' → logprob: -15.250007629394531
    6. '```' → logprob: -16.62500762939453
    7. '_places' → logprob: -16.75000762939453
    8. '_replace' → logprob: -17.12500762939453
    9. '_can' → logprob: -17.37500762939453
    10. '_p' → logprob: -17.62500762939453

Token 946: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -7.5649528298527e-05
    2. 'all' → logprob: -9.500075340270996
    3. 'can' → logprob: -15.500075340270996
    4. '_place' → logprob: -15.750075340270996
    5. 'place' → logprob: -15.875075340270996
    6. '_can' → logprob: -16.625076293945312
    7. '_possible' → logprob: -17.625076293945312
    8. '```' → logprob: -17.625076293945312
    9. 'All' → logprob: -17.875076293945312
    10. '_ans' → logprob: -18.125076293945312

Token 947: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.002451161155477166
    2. '_all' → logprob: -6.127450942993164
    3. 'all' → logprob: -8.252450942993164
    4. 'lines' → logprob: -12.377450942993164
    5. '_points' → logprob: -14.252450942993164
    6. '```' → logprob: -15.627450942993164
    7. '_line' → logprob: -15.877450942993164
    8. 's' → logprob: -16.377450942993164
    9. 'Lines' → logprob: -16.877450942993164
    10. '_list' → logprob: -17.752450942993164

Token 948: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -1.843177233240567e-05
    2. '(
' → logprob: -11.500018119812012
    3. '(' → logprob: -11.750018119812012
    4. ' (' → logprob: -16.000019073486328
    5. 'grid' → logprob: -16.000019073486328
    6. '```' → logprob: -16.875019073486328
    7. '(gr' → logprob: -17.875019073486328
    8. '(g' → logprob: -18.500019073486328
    9. '(Grid' → logprob: -18.500019073486328
    10. '(

' → logprob: -18.500019073486328

Token 949: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.143808109802194e-05
    2. ',n' → logprob: -10.250041007995605
    3. ',
' → logprob: -12.250041007995605
    4. ' ,' → logprob: -14.375041007995605
    5. '   ' → logprob: -14.875041007995605
    6. '       ' → logprob: -15.875041007995605
    7. '(n' → logprob: -16.750041961669922
    8. '(grid' → logprob: -17.250041961669922
    9. '(' → logprob: -17.500041961669922
    10. '
' → logprob: -17.875041961669922

Token 950: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007608635816723108
    2. ' n' → logprob: -4.882608413696289
    3. ',n' → logprob: -14.507608413696289
    4. ')n' → logprob: -14.757608413696289
    5. '   ' → logprob: -15.132608413696289
    6. '(n' → logprob: -15.507608413696289
    7. '0' → logprob: -15.632608413696289
    8. 'len' → logprob: -15.632608413696289
    9. '	n' → logprob: -15.757608413696289
    10. '[n' → logprob: -16.13260841369629

Token 951: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -11.875009536743164
    3. '       ' → logprob: -14.125009536743164
    4. '   ' → logprob: -14.125009536743164
    5. ')' → logprob: -15.875009536743164
    6. '```' → logprob: -15.875009536743164
    7. ',
' → logprob: -16.375009536743164
    8. '0' → logprob: -16.625009536743164
    9. ',user' → logprob: -16.750009536743164
    10. '<|end|>' → logprob: -17.500009536743164

Token 952: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0028166472911834717
    2. ' start' → logprob: -5.877816677093506
    3. '[start' → logprob: -11.627816200256348
    4. '   ' → logprob: -13.377816200256348
    5. '       ' → logprob: -14.377816200256348
    6. ',start' → logprob: -16.002817153930664
    7. ')' → logprob: -16.502817153930664
    8. '           ' → logprob: -16.502817153930664
    9. 'user' → logprob: -16.627817153930664
    10. ' ' → logprob: -16.627817153930664

Token 953: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -7.896309739408025e-07
    2. 'points' → logprob: -14.625000953674316
    3. '_POINTS' → logprob: -16.75
    4. '_p' → logprob: -17.125
    5. '_pts' → logprob: -17.125
    6. '_positions' → logprob: -17.375
    7. 'Points' → logprob: -17.375
    8. '```' → logprob: -18.0
    9. '       ' → logprob: -18.25
    10. ')_' → logprob: -18.375

Token 954: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -13.250004768371582
    3. '   ' → logprob: -13.375004768371582
    4. '       ' → logprob: -14.500004768371582
    5. '```' → logprob: -15.000004768371582
    6. '0' → logprob: -15.750004768371582
    7. ')' → logprob: -16.0000057220459
    8. ',
' → logprob: -16.1250057220459
    9. '<|end|>' → logprob: -16.5000057220459
    10. '           ' → logprob: -16.7500057220459

Token 955: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0011767742689698935
    2. ' used' → logprob: -6.751176834106445
    3. '[[' → logprob: -12.501176834106445
    4. '[' → logprob: -12.876176834106445
    5. '   ' → logprob: -16.376176834106445
    6. ' [[' → logprob: -16.751176834106445
    7. ' [' → logprob: -16.751176834106445
    8. '_used' → logprob: -17.501176834106445
    9. ' ' → logprob: -18.251176834106445
    10. '.used' → logprob: -18.376176834106445

Token 956: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ')' → logprob: -13.62500286102295
    3. ' ,' → logprob: -13.62500286102295
    4. '   ' → logprob: -14.87500286102295
    5. '<|end|>' → logprob: -15.87500286102295
    6. '<|end|>' → logprob: -16.125003814697266
    7. '       ' → logprob: -17.125003814697266
    8. '‌,' → logprob: -17.500003814697266
    9. '```' → logprob: -17.750003814697266
    10. ',
' → logprob: -17.875003814697266

Token 957: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -19.75
    4. 'idx' → logprob: -19.75
    5. '       ' → logprob: -21.125
    6. ')' → logprob: -21.625
    7. '           ' → logprob: -21.75
    8. '
' → logprob: -23.0
    9. '1' → logprob: -23.0
    10. '```' → logprob: -23.0

Token 958: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -21.0
    4. ')' → logprob: -22.0
    5. '۰' → logprob: -22.0
    6. '```' → logprob: -22.125
    7. '000' → logprob: -22.875
    8. '０' → logprob: -23.0
    9. '00' → logprob: -23.125
    10. '           ' → logprob: -23.125

Token 959: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021796036162413657
    2. '   ' → logprob: -8.750218391418457
    3. ')
' → logprob: -9.875218391418457
    4. ')return' → logprob: -12.750218391418457
    5. '       ' → logprob: -13.125218391418457
    6. '<|end|>' → logprob: -14.625218391418457
    7. ' )' → logprob: -14.875218391418457
    8. ')**' → logprob: -15.000218391418457
    9. ')#' → logprob: -15.375218391418457
    10. ')...' → logprob: -15.500218391418457

Token 960: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10511709749698639
    2. '
' → logprob: -2.855117082595825
    3. '```' → logprob: -3.355117082595825
    4. '<|end|>' → logprob: -5.355117321014404
    5. '       ' → logprob: -6.980117321014404
    6. '    
' → logprob: -7.230117321014404
    7. '``' → logprob: -7.980117321014404
    8. 'if' → logprob: -8.230116844177246
    9. ' if' → logprob: -9.355116844177246
    10. '        
' → logprob: -9.605116844177246

Token 961: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0860974788665771
    2. '```' → logprob: -1.5860974788665771
    3. '       ' → logprob: -1.7110974788665771
    4. '   ' → logprob: -1.8360974788665771
    5. '
' → logprob: -2.336097478866577
    6. 'if' → logprob: -4.711097717285156
    7. '``' → logprob: -4.961097717285156
    8. '<|end|>' → logprob: -6.211097717285156
    9. '        
' → logprob: -7.461097717285156
    10. ' if' → logprob: -7.586097717285156

Token 962: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.025134271010756493
    2. '('' → logprob: -3.775134325027466
    3. '(ans' → logprob: -6.650134086608887
    4. '(' → logprob: -8.025134086608887
    5. '(True' → logprob: -8.400134086608887
    6. '"' → logprob: -11.275134086608887
    7. 'ans' → logprob: -11.650134086608887
    8. '(("' → logprob: -12.275134086608887
    9. '(
' → logprob: -12.650134086608887
    10. '(bool' → logprob: -12.775134086608887

Token 963: 'YES' (ID: 31958)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.08011464029550552
    2. 'YES' → logprob: -2.5801146030426025
    3. 'yes' → logprob: -7.455114841461182
    4. 'True' → logprob: -7.830114841461182
    5. 'Possible' → logprob: -8.955114364624023
    6. '"' → logprob: -9.205114364624023
    7. 'possible' → logprob: -11.455114364624023
    8. ' Yes' → logprob: -13.330114364624023
    9. 'true' → logprob: -14.080114364624023
    10. '(True' → logprob: -14.330114364624023

Token 964: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.906711546937004e-05
    2. '")' → logprob: -10.000048637390137
    3. '")
' → logprob: -13.000048637390137
    4. ')"' → logprob: -14.250048637390137
    5. '```' → logprob: -15.250048637390137
    6. 'if' → logprob: -15.250048637390137
    7. ''' → logprob: -17.250049591064453
    8. '")
' → logprob: -17.500049591064453
    9. '")

' → logprob: -17.625049591064453
    10. ')' → logprob: -17.625049591064453

Token 965: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011784763046307489
    2. ' if' → logprob: -9.250118255615234
    3. 'if' → logprob: -11.625118255615234
    4. '")' → logprob: -11.875118255615234
    5. ',' → logprob: -12.875118255615234
    6. ')
' → logprob: -13.500118255615234
    7. '   ' → logprob: -14.000118255615234
    8. '),' → logprob: -15.625118255615234
    9. ' )' → logprob: -15.750118255615234
    10. ')")' → logprob: -15.750118255615234

Token 966: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.006717863027006388
    2. 'ans' → logprob: -5.006717681884766
    3. '(ans' → logprob: -13.006717681884766
    4. '	ans' → logprob: -15.256717681884766
    5. '_ans' → logprob: -17.256717681884766
    6. 'Ans' → logprob: -19.006717681884766
    7. ' Ans' → logprob: -21.506717681884766
    8. ' ' → logprob: -21.631717681884766
    9. 'ANS' → logprob: -21.881717681884766
    10. ' ' → logprob: -22.256717681884766

Token 967: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.01816597953438759
    2. 'else' → logprob: -4.0181660652160645
    3. '==' → logprob: -11.393165588378906
    4. ')' → logprob: -12.643165588378906
    5. ' ==' → logprob: -14.018165588378906
    6. '	else' → logprob: -14.893165588378906
    7. '```' → logprob: -15.768165588378906
    8. '   ' → logprob: -16.018165588378906
    9. ' )' → logprob: -16.768165588378906
    10. ' ' → logprob: -17.018165588378906

Token 968: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -8.041768160182983e-05
    2. ' "' → logprob: -9.500080108642578
    3. '"No' → logprob: -12.750080108642578
    4. '   ' → logprob: -14.125080108642578
    5. ''' → logprob: -14.250080108642578
    6. 'NO' → logprob: -14.500080108642578
    7. '
' → logprob: -15.250080108642578
    8. '("' → logprob: -15.750080108642578
    9. '       ' → logprob: -15.750080108642578
    10. ')' → logprob: -16.000080108642578

Token 969: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -5.3954463510308415e-05
    2. '"No' → logprob: -10.000054359436035
    3. '"' → logprob: -11.750054359436035
    4. 'No' → logprob: -14.750054359436035
    5. ' NO' → logprob: -16.12505340576172
    6. 'no' → logprob: -16.62505340576172
    7. '_NO' → logprob: -17.12505340576172
    8. '(NO' → logprob: -19.00005340576172
    9. 'NOS' → logprob: -19.37505340576172
    10. '"N' → logprob: -19.50005340576172

Token 970: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.10103627294301987
    2. ')' → logprob: -2.351036310195923
    3. ')")' → logprob: -7.101036071777344
    4. '')' → logprob: -13.226036071777344
    5. '")
' → logprob: -13.726036071777344
    6. '}")' → logprob: -14.226036071777344
    7. '`)' → logprob: -14.851036071777344
    8. '```' → logprob: -15.351036071777344
    9. ')"' → logprob: -15.601036071777344
    10. '())' → logprob: -15.726036071777344

Token 971: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 972: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0067156096920371056
    2. '__' → logprob: -5.006715774536133
    3. '```' → logprob: -16.256715774536133
    4. '_name' → logprob: -17.006715774536133
    5. ' ___' → logprob: -17.756715774536133
    6. '___' → logprob: -17.756715774536133
    7. '_' → logprob: -17.756715774536133
    8. ' _' → logprob: -17.756715774536133
    9. 'name' → logprob: -19.381715774536133
    10. 'Name' → logprob: -19.381715774536133

Token 973: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07199271023273468
    2. ' ==' → logprob: -3.5719926357269287
    3. '==' → logprob: -3.9469926357269287
    4. '.__' → logprob: -3.9469926357269287
    5. ' __' → logprob: -7.321992874145508
    6. '__.__' → logprob: -7.696992874145508
    7. 'name' → logprob: -7.821992874145508
    8. '```' → logprob: -8.071992874145508
    9. 'if' → logprob: -8.196992874145508
    10. '=="' → logprob: -8.571992874145508

Token 974: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011910823173820972
    2. '==' → logprob: -5.136910915374756
    3. '=="' → logprob: -5.636910915374756
    4. '__.__' → logprob: -7.011910915374756
    5. '=='' → logprob: -7.886910915374756
    6. '```' → logprob: -8.136910438537598
    7. '__["' → logprob: -8.511910438537598
    8. '__":
' → logprob: -8.636910438537598
    9. ' ==' → logprob: -9.011910438537598
    10. '__.' → logprob: -9.761910438537598

Token 975: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5501885414123535
    2. '==' → logprob: -1.0501885414123535
    3. '=="' → logprob: -2.9251885414123535
    4. ' ==' → logprob: -4.0501885414123535
    5. '=='' → logprob: -6.9251885414123535
    6. '__.__' → logprob: -7.1751885414123535
    7. '.__' → logprob: -9.175188064575195
    8. '```' → logprob: -9.550188064575195
    9. '[' → logprob: -9.800188064575195
    10. '__":
' → logprob: -10.175188064575195

Token 976: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38789433240890503
    2. ''' → logprob: -1.1378943920135498
    3. '__' → logprob: -6.887894153594971
    4. ' "__' → logprob: -13.012894630432129
    5. ' '__' → logprob: -15.512894630432129
    6. '`' → logprob: -16.262893676757812
    7. '"name' → logprob: -17.262893676757812
    8. '   ' → logprob: -17.387893676757812
    9. 'main' → logprob: -17.512893676757812
    10. ''m' → logprob: -17.637893676757812

Token 977: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003247943241149187
    2. 'name' → logprob: -5.8782477378845215
    3. '__' → logprob: -8.00324821472168
    4. '__":
' → logprob: -10.12824821472168
    5. 'python' → logprob: -10.37824821472168
    6. ' main' → logprob: -11.87824821472168
    7. '_main' → logprob: -12.00324821472168
    8. 'built' → logprob: -12.12824821472168
    9. '__':
' → logprob: -12.75324821472168
    10. '(main' → logprob: -12.87824821472168

Token 978: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06472670286893845
    2. '__' → logprob: -3.0647265911102295
    3. '__':
' → logprob: -4.189726829528809
    4. '():
' → logprob: -7.314726829528809
    5. '__:' → logprob: -9.314726829528809
    6. '__.' → logprob: -11.064726829528809
    7. '__.__' → logprob: -11.314726829528809
    8. '__["' → logprob: -11.314726829528809
    9. ':' → logprob: -11.689726829528809
    10. '__()
' → logprob: -12.064726829528809

Token 979: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0004982246900908649
    2. '   ' → logprob: -8.000497817993164
    3. ' main' → logprob: -9.125497817993164
    4. '	main' → logprob: -9.875497817993164
    5. '```' → logprob: -13.500497817993164
    6. '_main' → logprob: -14.500497817993164
    7. '
' → logprob: -15.000497817993164
    8. '    
' → logprob: -16.125497817993164
    9. '(main' → logprob: -16.375497817993164
    10. '__' → logprob: -17.500497817993164

Token 980: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -21.375
    4. '   ' → logprob: -23.0
    5. '_main' → logprob: -24.875
    6. '.main' → logprob: -25.25
    7. '(main' → logprob: -25.75
    8. '
' → logprob: -26.5
    9. 'import' → logprob: -26.875
    10. '```' → logprob: -27.75

Token 981: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 979
Tokens correctement prédits (1ère position, stricte): 433
Tokens correctement prédits (1ère position, avec adaptation): 477
Tokens correctement prédits (top 10): 808
Précision stricte (1ère position): 44.23%
Précision adaptée (1ère position): 48.72%
Précision (top 10): 82.53%
================================================================================
