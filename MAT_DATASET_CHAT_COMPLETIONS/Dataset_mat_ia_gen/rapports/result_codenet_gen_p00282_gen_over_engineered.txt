================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Optional, Iterator

class NumberUnit:
    """
    Represents a single unit in the Jinkouki large number representation.
    For example, 'Man', 'Oku', etc.
    """
    def __init__(self, name: str, power: int):
        self.name = name  # Unit name string
        self.power = power  # power of 10 that this unit represents (must be multiple of 4)

    def __str__(self):
        return self.name

class UnitSystem:
    """
    Encapsulates the Jinkouki unit system where each unit corresponds to a 10^4 power step.
    """
    def __init__(self):
        # The units are listed from smallest to largest in ascending power order
        # Power is 10^(4 * index) for index in range(len(units))
        self.units: List[NumberUnit] = [
            NumberUnit('', 0),         # No unit for 10^0 to 10^3, handled separately
            NumberUnit('Man', 4),
            NumberUnit('Oku', 8),
            NumberUnit('Cho', 12),
            NumberUnit('Kei', 16),
            NumberUnit('Gai', 20),
            NumberUnit('Jo', 24),
            NumberUnit('Jo', 24),      # duplicate for 126穣 in example?
            NumberUnit('Jo', 24),      # actually only one 'Jo' needed; standard Jinkouki units are up to 'Jo' (24)
            NumberUnit('Jo', 24),
            NumberUnit('Jou', 24),
            NumberUnit('Jou', 24),
        ]
        # The problem states units appear like "穣(じょ)", "垓", "京", "兆", "億", "万"
        # For the sake of output, we use the units appearing in the examples:
        # 'Man' (万, 10^4), 'Oku' (億, 10^8), 'Cho' (兆, 10^12), 'Kei' (京, 10^16),
        # 'Gai' (垓, 10^20), 'Jo' (穣, 10^24)
        # These are 7 units indexed 0 to 6 (0: no unit)
        self.units = [
            NumberUnit('', 0),
            NumberUnit('Man', 4),
            NumberUnit('Oku', 8),
            NumberUnit('Cho', 12),
            NumberUnit('Kei', 16),
            NumberUnit('Gai', 20),
            NumberUnit('Jo', 24),
        ]

    def get_unit_for_power(self, power: int) -> Optional[NumberUnit]:
        # Given the power (multiple of 4), return the corresponding unit from the table.
        for unit in self.units:
            if unit.power == power:
                return unit
        return None

    def max_power(self) -> int:
        # Return maximum power defined
        return self.units[-1].power

    def powers_descending(self) -> List[int]:
        # Return all powers in descending order
        return [unit.power for unit in reversed(self.units)]

class LargeNumber:
    """
    Handles large numbers and their decomposition into segments of units of 4 digits (up to 9999 per unit).
    Used to format numbers in Jinkouki style.
    """
    def __init__(self, number: int, unit_system: UnitSystem):
        """
        number: the integer to represent
        unit_system: the UnitSystem to use for formatting output
        """
        self.number = number
        self.unit_system = unit_system
        self.segments = self._decompose_to_segments()

    def _decompose_to_segments(self) -> List[Tuple[int, int]]:
        """
        Decompose the integer number into segments corresponding to units,
        at each segment is an integer between 0 and 9999 inclusive.
        Return list of tuples: (segment_value, unit_power)
        """
        segments = []
        n = self.number
        # Process segments from largest unit down to smallest unit (power 0)
        # Each segment corresponds to 10^(unit_power)
        # Each segment value at most 9999
        # 1 Man = 10^4, so segments correspond to groups of 4 digits
        powers_desc = self.unit_system.powers_descending()
        for pwr in powers_desc:
            divisor = 10 ** pwr
            segment_value = n // divisor
            if pwr != 0:
                segment_value %= 10**4
            else:
                # pwr == 0 means digits below 10^4 (i.e. 0-9999)
                segment_value = n % 10**4
            segments.append((segment_value, pwr))
        # Filter out leading segments that are 0 to avoid extra zeros on head
        while segments and segments[0][0] == 0:
            segments.pop(0)
        # But if no segments remain, the number is zero (should not happen since input ≥1)
        if not segments:
            segments = [(0,0)]
        return segments

    def format(self) -> str:
        """
        Format the large number segments into the Jinkouki styled string.
        Conditions:
        - Each segment value is from 1-9999 (except possibly zero)
        - segments with zero values are skipped (no zeros printed)
        - unit string is appended to segment value except for the smallest unit (power=0) which has no unit
        - no leading zeros printed
        """
        parts = []
        for value, power in self.segments:
            if value == 0:
                continue
            unit = self.unit_system.get_unit_for_power(power)
            if power == 0:
                # no unit for smallest segment
                parts.append(str(value))
            else:
                parts.append(f"{value}{unit}")
        if not parts:
            # number is zero
            return '0'
        return ''.join(parts)

class JinkoukiFormatter:
    """
    Main controller class that computes m^n and formats into Jinkouki units.
    Designed with extensibility for other unit systems or output formats.
    """
    def __init__(self):
        self.unit_system = UnitSystem()

    def compute_power(self, base: int, exponent: int) -> int:
        """
        Compute base ** exponent.
        """
        return pow(base, exponent)

    def format_power(self, base: int, exponent: int) -> str:
        """
        Compute base^exponent and format in Jinkouki style.
        """
        number = self.compute_power(base, exponent)
        # number < 10^72 (from problem constraint)
        ln = LargeNumber(number, self.unit_system)
        return ln.format()

def parse_input(input_str: str) -> Iterator[Tuple[int,int]]:
    """
    Parse input lines and yield tuples (m, n)
    Stops when a line with '0 0' is encountered.
    """
    for line in input_str.strip().splitlines():
        line = line.strip()
        if not line:
            continue
        parts = line.split()
        if len(parts) != 2:
            continue
        m, n = map(int, parts)
        if m == 0 and n == 0:
            break
        yield m, n

def main():
    import sys
    formatter = JinkoukiFormatter()
    for line in sys.stdin:
        line=line.strip()
        if not line:
            continue
        parts=line.split()
        if len(parts)!=2:
            continue
        m,n=map(int, parts)
        if m==0 and n==0:
            break
        print(formatter.format_power(m,n))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.35518091917037964
    2. 'List' → logprob: -1.7301809787750244
    3. 'Any' → logprob: -2.4801809787750244
    4. ' Any' → logprob: -3.3551809787750244
    5. ' Optional' → logprob: -6.730180740356445
    6. 'Optional' → logprob: -7.105180740356445
    7. ' Union' → logprob: -7.855180740356445
    8. 'Union' → logprob: -8.355180740356445
    9. 'Iterable' → logprob: -8.605180740356445
    10. ' Generator' → logprob: -9.230180740356445

Token 4: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4863593876361847
    2. '```' → logprob: -1.9863593578338623
    3. 'def' → logprob: -2.1113593578338623
    4. ',' → logprob: -2.8613593578338623
    5. '\[' → logprob: -4.361359596252441
    6. ':' → logprob: -4.486359596252441
    7. 'a' → logprob: -4.736359596252441
    8. '\' → logprob: -5.111359596252441
    9. 'import' → logprob: -5.236359596252441
    10. '.' → logprob: -5.611359596252441

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.7062650322914124
    2. 'Optional' → logprob: -0.7062650322914124
    3. 'Dict' → logprob: -5.331264972686768
    4. 'Tuple' → logprob: -5.581264972686768
    5. ' Dict' → logprob: -6.081264972686768
    6. ' Union' → logprob: -7.081264972686768
    7. ' Tuple' → logprob: -7.456264972686768
    8. 'Union' → logprob: -7.956264972686768
    9. 'Any' → logprob: -8.956265449523926
    10. 'Iterable' → logprob: -9.331265449523926

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17107652127742767
    2. '```' → logprob: -2.546076536178589
    3. ',' → logprob: -3.796076536178589
    4. ':' → logprob: -4.29607629776001
    5. 'import' → logprob: -4.67107629776001
    6. '`' → logprob: -5.17107629776001
    7. '\' → logprob: -5.29607629776001
    8. '(' → logprob: -5.42107629776001
    9. '[' → logprob: -5.67107629776001
    10. '\n' → logprob: -5.79607629776001

Token 7: ' Optional' (ID: 19351)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.19282151758670807
    2. 'Dict' → logprob: -2.192821502685547
    3. ' Optional' → logprob: -3.692821502685547
    4. ' Union' → logprob: -3.817821502685547
    5. 'Optional' → logprob: -4.817821502685547
    6. 'Union' → logprob: -6.192821502685547
    7. ' Callable' → logprob: -6.192821502685547
    8. 'Iterable' → logprob: -6.942821502685547
    9. ' dict' → logprob: -7.317821502685547
    10. 'Set' → logprob: -7.442821502685547

Token 8: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31786540150642395
    2. '```' → logprob: -1.5678653717041016
    3. ',' → logprob: -4.442865371704102
    4. '[' → logprob: -4.567865371704102
    5. '\n' → logprob: -4.692865371704102
    6. '\' → logprob: -4.942865371704102
    7. 'import' → logprob: -5.317865371704102
    8. '`' → logprob: -5.442865371704102
    9. ':' → logprob: -5.567865371704102
    10. '(' → logprob: -5.692865371704102

Token 9: ' Iterator' (ID: 41994)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.16219162940979004
    2. 'Union' → logprob: -2.28719162940979
    3. ' Dict' → logprob: -3.91219162940979
    4. 'Any' → logprob: -4.287191390991211
    5. 'Set' → logprob: -5.162191390991211
    6. ' Union' → logprob: -5.662191390991211
    7. 'Callable' → logprob: -6.287191390991211
    8. 'Iterable' → logprob: -6.287191390991211
    9. 'Iterator' → logprob: -7.787191390991211
    10. 'Typed' → logprob: -8.037191390991211

Token 10: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7965237498283386
    2. 'def' → logprob: -1.1715238094329834
    3. ',' → logprob: -3.1715238094329834
    4. '\' → logprob: -3.4215238094329834
    5. '<|end|>' → logprob: -3.4215238094329834
    6. '(' → logprob: -3.6715238094329834
    7. ':' → logprob: -4.046523571014404
    8. '\n' → logprob: -4.046523571014404
    9. '[' → logprob: -4.171523571014404
    10. 'import' → logprob: -4.421523571014404

Token 11: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08699868619441986
    2. '```' → logprob: -2.711998701095581
    3. '[' → logprob: -4.836998462677002
    4. ':' → logprob: -6.211998462677002
    5. ',' → logprob: -6.461998462677002
    6. '`' → logprob: -6.961998462677002
    7. '\' → logprob: -7.086998462677002
    8. '(' → logprob: -7.211998462677002
    9. 'import' → logprob: -7.336998462677002
    10. '\n' → logprob: -8.21199893951416

Token 12: ' Number' (ID: 9184)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3260163366794586
    2. ' My' → logprob: -1.5760163068771362
    3. ' Data' → logprob: -3.451016426086426
    4. ' Parser' → logprob: -3.701016426086426
    5. ' Space' → logprob: -5.951016426086426
    6. ' Vector' → logprob: -6.076016426086426
    7. ' Iterable' → logprob: -6.576016426086426
    8. ' Array' → logprob: -6.951016426086426
    9. ' Iterator' → logprob: -7.076016426086426
    10. ' User' → logprob: -7.076016426086426

Token 13: 'Unit' (ID: 6728)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02117234282195568
    2. '(' → logprob: -3.896172285079956
    3. 'Generator' → logprob: -9.271172523498535
    4. ''s' → logprob: -9.771172523498535
    5. 's' → logprob: -10.271172523498535
    6. ':
' → logprob: -10.646172523498535
    7. '():' → logprob: -10.771172523498535
    8. '):' → logprob: -10.771172523498535
    9. 'Handler' → logprob: -11.021172523498535
    10. '```' → logprob: -11.021172523498535

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017190889921039343
    2. '(' → logprob: -6.376718997955322
    3. '():' → logprob: -12.75171947479248
    4. '):' → logprob: -13.00171947479248
    5. ':**' → logprob: -13.00171947479248
    6. ' :' → logprob: -13.12671947479248
    7. ':
' → logprob: -13.75171947479248
    8. ',' → logprob: -14.12671947479248
    9. '.' → logprob: -14.25171947479248
    10. '(Abstract' → logprob: -14.50171947479248

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03198394924402237
    2. '   ' → logprob: -3.5319838523864746
    3. '(' → logprob: -6.656983852386475
    4. '```' → logprob: -7.531983852386475
    5. ':
' → logprob: -9.281984329223633
    6. 'def' → logprob: -9.406984329223633
    7. '<|end|>' → logprob: -10.031984329223633
    8. '():' → logprob: -10.156984329223633
    9. '  ' → logprob: -10.656984329223633
    10. ' ' → logprob: -10.906984329223633

Token 16: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12868821620941162
    2. 'def' → logprob: -2.503688335418701
    3. ' def' → logprob: -3.378688335418701
    4. '```' → logprob: -5.503688335418701
    5. ':' → logprob: -8.128687858581543
    6. '...' → logprob: -10.003687858581543
    7. ')' → logprob: -10.253687858581543
    8. 'pass' → logprob: -10.253687858581543
    9. 'class' → logprob: -10.253687858581543
    10. ' ' → logprob: -10.378687858581543

Token 17: '   ' (ID: 271)
  Prédit: 'Rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.29552143812179565
    2. ' Represents' → logprob: -1.7955214977264404
    3. ' represents' → logprob: -3.1705214977264404
    4. 'A' → logprob: -3.9205214977264404
    5. ' A' → logprob: -4.545521259307861
    6. '"""' → logprob: -5.420521259307861
    7. '"""
' → logprob: -5.795521259307861
    8. 'Class' → logprob: -6.170521259307861
    9. 'Represent' → logprob: -6.545521259307861
    10. 'rep' → logprob: -6.670521259307861

Token 18: ' Represents' (ID: 84592)
  Prédit: 'Rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.22174154222011566
    2. 'A' → logprob: -1.7217415571212769
    3. 'Class' → logprob: -4.471741676330566
    4. 'Represent' → logprob: -6.096741676330566
    5. 'Representation' → logprob: -6.096741676330566
    6. ' Represents' → logprob: -6.721741676330566
    7. ' A' → logprob: -7.596741676330566
    8. 'Number' → logprob: -7.846741676330566
    9. '"""' → logprob: -8.096741676330566
    10. 'This' → logprob: -8.096741676330566

Token 19: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.035222895443439484
    2. 'a' → logprob: -3.4102230072021484
    3. ' an' → logprob: -6.910223007202148
    4. ' the' → logprob: -7.535223007202148
    5. 'an' → logprob: -11.160223007202148
    6. 'the' → logprob: -11.160223007202148
    7. ' numerical' → logprob: -12.535223007202148
    8. ' numbers' → logprob: -13.160223007202148
    9. ' ' → logprob: -13.535223007202148
    10. ' units' → logprob: -13.660223007202148

Token 20: ' single' (ID: 4590)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.5868691205978394
    2. 'number' → logprob: -1.7118691205978394
    3. ' numerical' → logprob: -1.9618691205978394
    4. ' numeric' → logprob: -2.336869239807129
    5. ' unit' → logprob: -5.461869239807129
    6. 'numeric' → logprob: -5.586869239807129
    7. ' measurement' → logprob: -5.961869239807129
    8. 'quantity' → logprob: -6.086869239807129
    9. 'unit' → logprob: -6.211869239807129
    10. ' quantity' → logprob: -6.336869239807129

Token 21: ' unit' (ID: 7670)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6846317052841187
    2. 'number' → logprob: -1.5596317052841187
    3. ' numerical' → logprob: -2.809631824493408
    4. ' unit' → logprob: -2.809631824493408
    5. ' numeric' → logprob: -2.934631824493408
    6. 'unit' → logprob: -3.559631824493408
    7. ' token' → logprob: -3.684631824493408
    8. 'digit' → logprob: -3.934631824493408
    9. 'token' → logprob: -4.309631824493408
    10. ' digit' → logprob: -4.434631824493408

Token 22: ' in' (ID: 306)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0075529166497290134
    2. '   ' → logprob: -5.3825531005859375
    3. 'of' → logprob: -6.3825531005859375
    4. ' in' → logprob: -7.5075531005859375
    5. '```' → logprob: -8.507553100585938
    6. '.' → logprob: -9.382553100585938
    7. '"""' → logprob: -9.757553100585938
    8. ' that' → logprob: -10.257553100585938
    9. '  ' → logprob: -10.257553100585938
    10. '`' → logprob: -10.257553100585938

Token 23: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10616479068994522
    2. 'a' → logprob: -2.9811646938323975
    3. ' the' → logprob: -3.1061646938323975
    4. ' an' → logprob: -5.856164932250977
    5. 'the' → logprob: -6.606164932250977
    6. ' number' → logprob: -8.481164932250977
    7. ' code' → logprob: -8.856164932250977
    8. ' mathematical' → logprob: -9.606164932250977
    9. ' some' → logprob: -10.168664932250977
    10. ' numbers' → logprob: -10.293664932250977

Token 24: ' J' (ID: 643)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.4220693111419678
    2. 'Number' → logprob: -1.9220693111419678
    3. 'number' → logprob: -2.5470693111419678
    4. ' sequence' → logprob: -3.2970693111419678
    5. ' Number' → logprob: -3.2970693111419678
    6. ' measurement' → logprob: -4.922069549560547
    7. ' numbering' → logprob: -5.047069549560547
    8. 'sequence' → logprob: -5.547069549560547
    9. ' code' → logprob: -5.797069549560547
    10. ' expression' → logprob: -5.797069549560547

Token 25: 'ink' (ID: 881)
  Prédit: 'SON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SON' → logprob: -0.11824533343315125
    2. 'son' → logprob: -2.7432453632354736
    3. 'apanese' → logprob: -3.8682453632354736
    4. 'ob' → logprob: -5.3682451248168945
    5. 'oin' → logprob: -6.1182451248168945
    6. 'OIN' → logprob: -6.3682451248168945
    7. 'IN' → logprob: -6.3682451248168945
    8. 'ason' → logprob: -6.4932451248168945
    9. 'S' → logprob: -6.6182451248168945
    10. 'SO' → logprob: -6.7432451248168945

Token 26: 'ou' (ID: 283)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1057868003845215
    2. 'ei' → logprob: -1.6057868003845215
    3. 'ai' → logprob: -2.1057868003845215
    4. 'i' → logprob: -2.8557868003845215
    5. 'u' → logprob: -3.1057868003845215
    6. 'ing' → logprob: -3.3557868003845215
    7. 'y' → logprob: -3.8557868003845215
    8. 'a' → logprob: -3.9807868003845215
    9. 'e' → logprob: -3.9807868003845215
    10. 'you' → logprob: -4.2307868003845215

Token 27: 'ki' (ID: 3129)
  Prédit: 'population'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'population' → logprob: -1.5805189609527588
    2. ' process' → logprob: -1.9555189609527588
    3. ' population' → logprob: -1.9555189609527588
    4. ' system' → logprob: -2.205518960952759
    5. '   ' → logprob: -2.580518960952759
    6. ''s' → logprob: -3.205518960952759
    7. 'system' → logprob: -3.705518960952759
    8. ' sequence' → logprob: -3.830518960952759
    9. 'code' → logprob: -4.20551872253418
    10. 'Population' → logprob: -4.20551872253418

Token 28: ' large' (ID: 4410)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.6504515409469604
    2. ''s' → logprob: -2.52545166015625
    3. ' process' → logprob: -2.52545166015625
    4. 'system' → logprob: -3.40045166015625
    5. ' game' → logprob: -3.65045166015625
    6. ' series' → logprob: -3.77545166015625
    7. '"' → logprob: -3.90045166015625
    8. ' measurement' → logprob: -4.02545166015625
    9. ' world' → logprob: -4.15045166015625
    10. ' (' → logprob: -4.15045166015625

Token 29: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.12022637575864792
    2. 'number' → logprob: -2.8702263832092285
    3. '-scale' → logprob: -3.7452263832092285
    4. ' integer' → logprob: -4.3702263832092285
    5. '-number' → logprob: -4.6202263832092285
    6. 'integer' → logprob: -6.2452263832092285
    7. ' numbers' → logprob: -6.3702263832092285
    8. 'Number' → logprob: -6.6202263832092285
    9. ' numerical' → logprob: -7.2452263832092285
    10. ' scale' → logprob: -7.7452263832092285

Token 30: ' representation' (ID: 22311)
  Prédit: ' system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' system' → logprob: -0.16409087181091309
    2. 'system' → logprob: -1.914090871810913
    3. 'notation' → logprob: -7.289091110229492
    4. 's' → logprob: -7.414091110229492
    5. '   ' → logprob: -7.539091110229492
    6. ' notation' → logprob: -7.914091110229492
    7. 'ing' → logprob: -8.289091110229492
    8. '.' → logprob: -8.664091110229492
    9. 'class' → logprob: -8.789091110229492
    10. 'format' → logprob: -8.914091110229492

Token 31: '.
' (ID: 558)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.38509637117385864
    2. '.' → logprob: -1.2600963115692139
    3. '   ' → logprob: -4.135096549987793
    4. '."""' → logprob: -4.885096549987793
    5. ' with' → logprob: -5.760096549987793
    6. '```' → logprob: -6.010096549987793
    7. '"""
' → logprob: -6.885096549987793
    8. '"' → logprob: -6.885096549987793
    9. ' of' → logprob: -7.010096549987793
    10. ',' → logprob: -7.260096549987793

Token 32: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.36025470495224
    2. '   ' → logprob: -1.2352547645568848
    3. '```' → logprob: -4.860254764556885
    4. '"""
' → logprob: -5.860254764556885
    5. '"' → logprob: -7.610254764556885
    6. ' """' → logprob: -7.985254764556885
    7. '`' → logprob: -9.235254287719727
    8. '""' → logprob: -9.610254287719727
    9. ' """
' → logprob: -10.235254287719727
    10. ')' → logprob: -10.485254287719727

Token 33: ' For' (ID: 2214)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.485283762216568
    2. '```' → logprob: -1.4852837324142456
    3. '   ' → logprob: -1.9852837324142456
    4. '"""
' → logprob: -3.985283851623535
    5. '"' → logprob: -6.985283851623535
    6. '`' → logprob: -7.610283851623535
    7. '``' → logprob: -8.610283851623535
    8. '""' → logprob: -8.735283851623535
    9. ' """' → logprob: -9.485283851623535
    10. ' """
' → logprob: -9.735283851623535

Token 34: ' example' (ID: 4994)
  Prédit: ' example'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' example' → logprob: -0.016519911587238312
    2. ' large' → logprob: -5.266520023345947
    3. ' a' → logprob: -5.641520023345947
    4. ' the' → logprob: -5.766520023345947
    5. ' instance' → logprob: -6.766520023345947
    6. 'example' → logprob: -6.766520023345947
    7. ' ' → logprob: -8.016519546508789
    8. ' an' → logprob: -8.266519546508789
    9. ' ex' → logprob: -8.641519546508789
    10. ' very' → logprob: -8.641519546508789

Token 35: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0652783140540123
    2. ',' → logprob: -3.4402782917022705
    3. ':' → logprob: -4.69027853012085
    4. '
' → logprob: -5.44027853012085
    5. ' the' → logprob: -5.94027853012085
    6. '"""
' → logprob: -5.94027853012085
    7. 'the' → logprob: -6.44027853012085
    8. '    
' → logprob: -6.56527853012085
    9. ' each' → logprob: -7.06527853012085
    10. ':
' → logprob: -7.06527853012085

Token 36: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3325954675674438
    2. ' the' → logprob: -1.4575954675674438
    3. '10' → logprob: -1.7075954675674438
    4. ' ' → logprob: -2.7075953483581543
    5. 'the' → logprob: -3.2075953483581543
    6. ' a' → logprob: -3.4575953483581543
    7. ' each' → logprob: -3.9575953483581543
    8. '"' → logprob: -4.207595348358154
    9. 'a' → logprob: -4.332595348358154
    10. '```' → logprob: -4.457595348358154

Token 37: 'Man' (ID: 2246)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.952799916267395
    2. '100' → logprob: -1.827799916267395
    3. '万' → logprob: -2.7027997970581055
    4. '1' → logprob: -2.8277997970581055
    5. '一' → logprob: -3.0777997970581055
    6. '"' → logprob: -3.0777997970581055
    7. '3' → logprob: -3.5777997970581055
    8. '千' → logprob: -3.5777997970581055
    9. '億' → logprob: -3.9527997970581055
    10. ''' → logprob: -3.9527997970581055

Token 38: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10790906101465225
    2. ''''' → logprob: -3.7329089641571045
    3. 's' → logprob: -4.232909202575684
    4. '"' → logprob: -4.482909202575684
    5. ''s' → logprob: -4.607909202575684
    6. '(' → logprob: -5.232909202575684
    7. '```' → logprob: -5.232909202575684
    8. '<|end|>' → logprob: -5.357909202575684
    9. '"""' → logprob: -5.857909202575684
    10. ''>' → logprob: -5.857909202575684

Token 39: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.287352204322815
    2. '   ' → logprob: -1.287352204322815
    3. '"' → logprob: -1.537352204322815
    4. ''s' → logprob: -2.9123520851135254
    5. ' '' → logprob: -2.9123520851135254
    6. ' ' → logprob: -3.7873520851135254
    7. '"""' → logprob: -4.037352085113525
    8. ' K' → logprob: -4.787352085113525
    9. '"K' → logprob: -4.912352085113525
    10. ' "' → logprob: -5.037352085113525

Token 40: 'Oku' (ID: 190512)
  Prédit: 'Oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Oku' → logprob: -0.0826231986284256
    2. 'oku' → logprob: -3.082623243331909
    3. 'Sen' → logprob: -3.957623243331909
    4. 'Ok' → logprob: -5.45762300491333
    5. ' Oku' → logprob: -5.58262300491333
    6. 'O' → logprob: -5.58262300491333
    7. 'Hy' → logprob: -7.95762300491333
    8. ' oku' → logprob: -8.457623481750488
    9. '億' → logprob: -8.457623481750488
    10. 'Kan' → logprob: -9.207623481750488

Token 41: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0309743732213974
    2. ''' → logprob: -3.5309743881225586
    3. ',' → logprob: -6.905974388122559
    4. '",' → logprob: -9.905974388122559
    5. '','' → logprob: -10.155974388122559
    6. '`,' → logprob: -11.030974388122559
    7. ','' → logprob: -11.155974388122559
    8. '')' → logprob: -11.280974388122559
    9. '```' → logprob: -11.405974388122559
    10. '"' → logprob: -11.530974388122559

Token 42: ' etc' (ID: 5178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6187751293182373
    2. ''' → logprob: -1.3687751293182373
    3. '"""' → logprob: -2.9937751293182373
    4. ' '' → logprob: -3.2437751293182373
    5. ' and' → logprob: -3.6187751293182373
    6. '"' → logprob: -3.7437751293182373
    7. '"""
' → logprob: -3.9937751293182373
    8. ''s' → logprob: -4.368775367736816
    9. ' """
' → logprob: -5.243775367736816
    10. 'and' → logprob: -5.368775367736816

Token 43: '.
' (ID: 558)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.06311739236116409
    2. '   ' → logprob: -2.938117504119873
    3. '```' → logprob: -5.188117504119873
    4. '.' → logprob: -7.313117504119873
    5. '"""
' → logprob: -7.438117504119873
    6. '"' → logprob: -7.438117504119873
    7. ')' → logprob: -8.063117027282715
    8. '`' → logprob: -8.813117027282715
    9. ' """' → logprob: -9.813117027282715
    10. '}' → logprob: -9.813117027282715

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3920867443084717
    2. '"""' → logprob: -1.1420867443084717
    3. '"""
' → logprob: -5.767086982727051
    4. '"' → logprob: -6.642086982727051
    5. '```' → logprob: -7.517086982727051
    6. ' """' → logprob: -9.64208698272705
    7. '`' → logprob: -9.89208698272705
    8. ' """
' → logprob: -10.51708698272705
    9. '""' → logprob: -10.64208698272705
    10. '"""

' → logprob: -11.01708698272705

Token 45: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.48232796788215637
    2. '   ' → logprob: -0.982327938079834
    3. '"""
' (adapté à ' """
') → logprob: -5.232327938079834
    4. '"' → logprob: -6.232327938079834
    5. '```' → logprob: -7.232327938079834
    6. '`' → logprob: -9.482328414916992
    7. '""' → logprob: -9.607328414916992
    8. '"""

' → logprob: -11.107328414916992
    9. '    ' → logprob: -11.482328414916992
    10. ' """' → logprob: -12.107328414916992

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03497302159667015
    2. '    
' → logprob: -3.659972906112671
    3. 'def' → logprob: -5.28497314453125
    4. '```' → logprob: -6.53497314453125
    5. '
' → logprob: -7.03497314453125
    6. ' def' → logprob: -7.28497314453125
    7. '    ' → logprob: -8.53497314453125
    8. ' 
' → logprob: -8.65997314453125
    9. '   
' → logprob: -9.78497314453125
    10. '     
' → logprob: -10.15997314453125

Token 47: ' def' (ID: 1056)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.7318899035453796
    2. 'def' (adapté à ' def') → logprob: -0.7318899035453796
    3. ' def' → logprob: -4.231889724731445
    4. '   ' → logprob: -4.481889724731445
    5. 'unit' → logprob: -5.481889724731445
    6. '__' → logprob: -5.481889724731445
    7. ' name' → logprob: -5.731889724731445
    8. 'value' → logprob: -8.856889724731445
    9. '```' → logprob: -8.981889724731445
    10. ' __' → logprob: -9.106889724731445

Token 48: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6783000230789185
    2. '__' → logprob: -1.4283000230789185
    3. 'init' → logprob: -1.6783000230789185
    4. '_init' → logprob: -3.053299903869629
    5. 'def' → logprob: -5.178299903869629
    6. '_' → logprob: -5.178299903869629
    7. '```' → logprob: -5.428299903869629
    8. ' init' → logprob: -6.428299903869629
    9. '___' → logprob: -7.803299903869629
    10. ' def' → logprob: -8.553299903869629

Token 49: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.0
    3. 'in' → logprob: -17.75
    4. 'doc' → logprob: -18.0
    5. 'inite' → logprob: -18.375
    6. ' init' → logprob: -18.75
    7. 'int' → logprob: -19.0
    8. 'eq' → logprob: -19.375
    9. 'initi' → logprob: -20.0
    10. '_init' → logprob: -20.125

Token 50: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0033763842657208443
    2. '__' → logprob: -6.253376483917236
    3. '__(
' → logprob: -6.628376483917236
    4. '(' → logprob: -10.003376007080078
    5. '(self' → logprob: -10.128376007080078
    6. '__((' → logprob: -10.878376007080078
    7. '__(*' → logprob: -11.503376007080078
    8. '__('' → logprob: -12.253376007080078
    9. ' (' → logprob: -13.003376007080078
    10. '__(/*!' → logprob: -14.378376007080078

Token 51: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003815756645053625
    2. ' self' → logprob: -7.8753814697265625
    3. 'name' → logprob: -13.875381469726562
    4. 'value' → logprob: -15.750381469726562
    5. '	self' → logprob: -16.000381469726562
    6. '
' → logprob: -16.125381469726562
    7. '(self' → logprob: -17.500381469726562
    8. '   ' → logprob: -17.625381469726562
    9. 'unit' → logprob: -17.750381469726562
    10. '       ' → logprob: -18.000381469726562

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23752906918525696
    2. 'self' → logprob: -1.7375290393829346
    3. ' ,' → logprob: -4.112529277801514
    4. ' self' → logprob: -4.487529277801514
    5. ')' → logprob: -5.987529277801514
    6. '(self' → logprob: -6.362529277801514
    7. '<|end|>' → logprob: -6.737529277801514
    8. '<|end|>' → logprob: -6.862529277801514
    9. ' (' → logprob: -7.487529277801514
    10. '(' → logprob: -8.862528800964355

Token 53: ' name' (ID: 1308)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6473288536071777
    2. ' self' → logprob: -0.8973288536071777
    3. 'name' → logprob: -3.2723288536071777
    4. ' name' → logprob: -3.5223288536071777
    5. 'value' → logprob: -7.647328853607178
    6. ' value' → logprob: -7.772328853607178
    7. 'unit' → logprob: -8.522329330444336
    8. ' unit' → logprob: -8.772329330444336
    9. '   ' → logprob: -8.897329330444336
    10. ' amount' → logprob: -11.147329330444336

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002441741817165166
    2. ':str' → logprob: -8.625244140625
    3. ',' → logprob: -10.375244140625
    4. ' :' → logprob: -10.625244140625
    5. '):' → logprob: -12.125244140625
    6. '_:' → logprob: -14.125244140625
    7. ')' → logprob: -14.125244140625
    8. '=' → logprob: -14.250244140625
    9. '   ' → logprob: -14.625244140625
    10. '<|end|>' → logprob: -15.375244140625

Token 55: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0619727298617363
    2. ' str' → logprob: -2.8119726181030273
    3. ':str' → logprob: -13.436972618103027
    4. 'Optional' → logprob: -13.561972618103027
    5. '[str' → logprob: -14.186972618103027
    6. '	str' → logprob: -14.311972618103027
    7. ' Optional' → logprob: -14.436972618103027
    8. ')' → logprob: -15.311972618103027
    9. ' ' → logprob: -15.936972618103027
    10. 's' → logprob: -16.311973571777344

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013440960901789367
    2. ' ,' → logprob: -9.375134468078613
    3. ')' → logprob: -10.750134468078613
    4. '<|end|>' → logprob: -11.125134468078613
    5. '<|end|>' → logprob: -12.250134468078613
    6. '):' → logprob: -12.875134468078613
    7. ',
' → logprob: -13.250134468078613
    8. ':' → logprob: -13.500134468078613
    9. '   ' → logprob: -13.750134468078613
    10. '‌,' → logprob: -14.000134468078613

Token 57: ' power' (ID: 3470)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.2831282615661621
    2. 'value' → logprob: -2.283128261566162
    3. ' multiplier' → logprob: -3.033128261566162
    4. ' scale' → logprob: -3.533128261566162
    5. ' unit' → logprob: -3.783128261566162
    6. ' factor' → logprob: -4.408128261566162
    7. ' base' → logprob: -4.658128261566162
    8. ' exponent' → logprob: -5.533128261566162
    9. ' symbol' → logprob: -5.658128261566162
    10. 'unit' → logprob: -5.783128261566162

Token 58: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7030226588249207
    2. '=' → logprob: -0.7030226588249207
    3. '=int' → logprob: -5.328022480010986
    4. '<|end|>' → logprob: -6.078022480010986
    5. ':int' → logprob: -6.953022480010986
    6. ')' → logprob: -7.453022480010986
    7. '_of' → logprob: -7.453022480010986
    8. ' of' → logprob: -8.578022956848145
    9. '<|end|>' → logprob: -8.828022956848145
    10. ' =' → logprob: -10.203022956848145

Token 59: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14450426399707794
    2. ' int' → logprob: -2.0195043087005615
    3. '10' → logprob: -6.394504070281982
    4. ' ' → logprob: -9.51950454711914
    5. '<|end|>' → logprob: -10.39450454711914
    6. '[int' → logprob: -11.01950454711914
    7. '<int' → logprob: -12.14450454711914
    8. ')' → logprob: -12.14450454711914
    9. 'Optional' → logprob: -12.64450454711914
    10. ':int' → logprob: -12.64450454711914

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032789841294288635
    2. ')' → logprob: -3.657789945602417
    3. '):
' → logprob: -5.407789707183838
    4. ',' → logprob: -7.157789707183838
    5. '   ' → logprob: -7.407789707183838
    6. ':' → logprob: -7.782789707183838
    7. '=' → logprob: -9.782790184020996
    8. ' ):' → logprob: -10.157790184020996
    9. '<|end|>' → logprob: -10.657790184020996
    10. '<|end|>' → logprob: -11.282790184020996

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016704188892617822
    2. '):' → logprob: -7.1266703605651855
    3. ')' → logprob: -7.6266703605651855
    4. ':' → logprob: -8.376670837402344
    5. 'self' → logprob: -9.751670837402344
    6. ',' → logprob: -10.376670837402344
    7. '   ' → logprob: -11.126670837402344
    8. '<|end|>' → logprob: -11.501670837402344
    9. ' self' → logprob: -11.626670837402344
    10. '):
' → logprob: -11.751670837402344

Token 62: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5862947106361389
    2. '       ' → logprob: -0.8362947106361389
    3. ' self' → logprob: -4.586294651031494
    4. '   ' → logprob: -9.836295127868652
    5. ' ' → logprob: -11.461295127868652
    6. ' ' → logprob: -11.836295127868652
    7. '           ' → logprob: -12.086295127868652
    8. ')' → logprob: -12.211295127868652
    9. 'super' → logprob: -12.461295127868652
    10. '```' → logprob: -12.461295127868652

Token 63: '.name' (ID: 4834)
  Prédit: '.name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.name' → logprob: -0.3522963225841522
    2. '.' → logprob: -1.2272963523864746
    3. 'name' → logprob: -5.852296352386475
    4. ' name' → logprob: -7.727296352386475
    5. '_name' → logprob: -8.852295875549316
    6. ' .' → logprob: -9.352295875549316
    7. '   ' → logprob: -9.352295875549316
    8. '       ' → logprob: -9.477295875549316
    9. 'self' → logprob: -10.477295875549316
    10. ')' → logprob: -10.602295875549316

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6355862021446228
    2. ' =' → logprob: -0.7605862021446228
    3. '<|end|>' → logprob: -6.010586261749268
    4. ':' → logprob: -8.13558578491211
    5. '<|end|>' → logprob: -8.88558578491211
    6. ')' → logprob: -10.13558578491211
    7. ' ' → logprob: -10.63558578491211
    8. ',' → logprob: -10.76058578491211
    9. '=}' → logprob: -13.01058578491211
    10. ' =)' → logprob: -13.38558578491211

Token 65: ' name' (ID: 1308)
  Prédit: ' name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.10020710527896881
    2. 'name' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.475207328796387
    4. '	name' → logprob: -15.600207328796387
    5. '    ' → logprob: -17.60020637512207
    6. ' ' → logprob: -18.10020637512207
    7. '```' → logprob: -18.22520637512207
    8. ''name' → logprob: -18.60020637512207
    9. '(name' → logprob: -18.60020637512207
    10. '"name' → logprob: -18.72520637512207

Token 66: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00943989772349596
    2. '<|end|>' → logprob: -4.884439945220947
    3. '        
' → logprob: -7.634439945220947
    4. '
' → logprob: -7.759439945220947
    5. '=' → logprob: -8.134439468383789
    6. ',' → logprob: -8.884439468383789
    7. '<|end|>' → logprob: -9.009439468383789
    8. ' =' → logprob: -9.259439468383789
    9. '        ' → logprob: -9.884439468383789
    10. ' ' → logprob: -10.009439468383789

Token 67: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6445075273513794
    2. '       ' → logprob: -0.7695075273513794
    3. ',' → logprob: -5.39450740814209
    4. ' =' → logprob: -5.51950740814209
    5. '<|end|>' → logprob: -7.01950740814209
    6. '
' → logprob: -7.26950740814209
    7. 'self' → logprob: -7.26950740814209
    8. '        
' → logprob: -8.26950740814209
    9. ' ' → logprob: -8.76950740814209
    10. '   ' → logprob: -8.89450740814209

Token 68: ' Unit' (ID: 14856)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.18667258322238922
    2. 'name' → logprob: -1.936672568321228
    3. ' power' → logprob: -4.686672687530518
    4. '10' → logprob: -4.936672687530518
    5. 'power' → logprob: -5.561672687530518
    6. ' ' → logprob: -6.061672687530518
    7. '"' → logprob: -7.811672687530518
    8. ' str' → logprob: -7.936672687530518
    9. ' the' → logprob: -7.936672687530518
    10. 'The' → logprob: -8.06167221069336

Token 69: ' name' (ID: 1308)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' string' (ID: 1621)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026500709354877472
    2. '<|end|>' → logprob: -3.776500701904297
    3. 'self' → logprob: -6.276500701904297
    4. '
' → logprob: -7.026500701904297
    5. '<|end|>' → logprob: -8.651500701904297
    6. ' self' → logprob: -9.276500701904297
    7. '        
' → logprob: -9.651500701904297
    8. ')' → logprob: -9.651500701904297
    9. ',' → logprob: -10.651500701904297
    10. '   ' → logprob: -11.401500701904297

Token 71: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012402749620378017
    2. '<|end|>' → logprob: -4.637402534484863
    3. 'self' → logprob: -6.137402534484863
    4. '<|end|>' → logprob: -9.012402534484863
    5. ',' → logprob: -9.262402534484863
    6. ' self' → logprob: -9.262402534484863
    7. '
' → logprob: -9.637402534484863
    8. ')' → logprob: -10.012402534484863
    9. '        
' → logprob: -10.762402534484863
    10. '   ' → logprob: -11.512402534484863

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002827223390340805
    2. 'self' → logprob: -6.002827167510986
    3. ' self' → logprob: -8.377827644348145
    4. '<|end|>' → logprob: -9.127827644348145
    5. '        
' → logprob: -12.877827644348145
    6. '      ' → logprob: -13.377827644348145
    7. ',' → logprob: -13.377827644348145
    8. '   ' → logprob: -13.502827644348145
    9. '<|end|>' → logprob: -13.752827644348145
    10. ')' → logprob: -13.877827644348145

Token 73: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.545817494392395
    2. '       ' → logprob: -1.045817494392395
    3. ' self' → logprob: -2.6708173751831055
    4. ' ' → logprob: -12.045817375183105
    5. '	self' → logprob: -12.295817375183105
    6. '   ' → logprob: -12.420817375183105
    7. '        ' → logprob: -12.420817375183105
    8. '      ' → logprob: -12.545817375183105
    9. '        
' → logprob: -13.295817375183105
    10. '     ' → logprob: -13.670817375183105

Token 74: '.power' (ID: 81878)
  Prédit: '.power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.power' → logprob: -0.007798849139362574
    2. 'power' → logprob: -5.632798671722412
    3. '.' → logprob: -5.757798671722412
    4. '_power' → logprob: -7.132798671722412
    5. '.pow' → logprob: -9.25779914855957
    6. ' power' → logprob: -9.75779914855957
    7. '   ' → logprob: -11.25779914855957
    8. '.value' → logprob: -11.50779914855957
    9. 'pow' → logprob: -11.63279914855957
    10. '._' → logprob: -12.00779914855957

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6397559642791748
    2. '=' → logprob: -0.7647559642791748
    3. '<|end|>' → logprob: -5.264756202697754
    4. '   ' → logprob: -7.014756202697754
    5. '<|end|>' → logprob: -7.514756202697754
    6. ' ' → logprob: -8.514756202697754
    7. '    ' → logprob: -9.264756202697754
    8. ')' → logprob: -9.889756202697754
    9. ':' → logprob: -10.764756202697754
    10. '       ' → logprob: -10.889756202697754

Token 76: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.25545403361320496
    2. 'power' → logprob: -1.5054540634155273
    3. '10' → logprob: -5.880454063415527
    4. ' ' → logprob: -7.380454063415527
    5. 'pow' → logprob: -9.755454063415527
    6. '(power' → logprob: -10.755454063415527
    7. ' pow' → logprob: -11.755454063415527
    8. '    ' → logprob: -13.005454063415527
    9. '_power' → logprob: -13.130454063415527
    10. '  ' → logprob: -13.505454063415527

Token 77: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' power' (ID: 3470)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3904362618923187
    2. ' ' → logprob: -1.1404362916946411
    3. ' power' → logprob: -6.140436172485352
    4. 'power' → logprob: -7.765436172485352
    5. ' int' → logprob: -8.015436172485352
    6. 'int' → logprob: -8.140436172485352
    7. 'pow' → logprob: -9.265436172485352
    8. ' pow' → logprob: -9.515436172485352
    9. '1' → logprob: -10.890436172485352
    10. ' the' → logprob: -11.265436172485352

Token 80: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0053602829575538635
    2. ' ' → logprob: -5.255360126495361
    3. '1' → logprob: -9.63036060333252
    4. '100' → logprob: -9.88036060333252
    5. ' ten' → logprob: -12.50536060333252
    6. 'ten' → logprob: -13.63036060333252
    7. ' the' → logprob: -14.13036060333252
    8. '0' → logprob: -14.25536060333252
    9. '```' → logprob: -14.63036060333252
    10. '

' → logprob: -14.88036060333252

Token 82: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011206917697563767
    2. '100' → logprob: -6.876120567321777
    3. '1' → logprob: -9.626120567321777
    4. ' ' → logprob: -11.001120567321777
    5. '```' → logprob: -13.626120567321777
    6. '4' → logprob: -14.251120567321777
    7. 'ten' → logprob: -14.376120567321777
    8. '0' → logprob: -14.501120567321777
    9. '(' → logprob: -14.501120567321777
    10. '`' → logprob: -14.751120567321777

Token 83: ' that' (ID: 484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5318222045898438
    2. '10' → logprob: -1.7818222045898438
    3. ' this' → logprob: -2.6568222045898438
    4. ' corresponds' → logprob: -2.9068222045898438
    5. 'the' → logprob: -2.9068222045898438
    6. ' represents' → logprob: -3.6568222045898438
    7. 'this' → logprob: -4.281822204589844
    8. ' ' → logprob: -4.656822204589844
    9. 'rep' → logprob: -5.781822204589844
    10. 'self' → logprob: -5.906822204589844

Token 85: ' unit' (ID: 7670)
  Prédit: ' unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unit' → logprob: -0.018454967066645622
    2. 'unit' → logprob: -4.1434550285339355
    3. ' represents' → logprob: -6.1434550285339355
    4. '<|end|>' → logprob: -8.893454551696777
    5. ' is' → logprob: -10.518454551696777
    6. ' number' → logprob: -10.768454551696777
    7. ' corresponds' → logprob: -11.393454551696777
    8. '_unit' → logprob: -11.518454551696777
    9. 'Unit' → logprob: -11.518454551696777
    10. '<|end|>' → logprob: -11.518454551696777

Token 86: ' represents' (ID: 18627)
  Prédit: ' represents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represents' → logprob: -0.08862488716840744
    2. '**' → logprob: -3.338624954223633
    3. ' corresponds' → logprob: -3.963624954223633
    4. '10' → logprob: -4.588624954223633
    5. ' is' → logprob: -5.213624954223633
    6. 'rep' → logprob: -5.713624954223633
    7. ' **' → logprob: -5.838624954223633
    8. ' ' → logprob: -6.588624954223633
    9. '<|end|>' → logprob: -6.713624954223633
    10. '   ' → logprob: -6.713624954223633

Token 87: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'must' (ID: 46036)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5273515582084656
    2. ' )' → logprob: -0.9023515582084656
    3. '10' → logprob: -5.527351379394531
    4. ' )
' → logprob: -10.152351379394531
    5. ' ' → logprob: -10.277351379394531
    6. '**' → logprob: -10.527351379394531
    7. '*' → logprob: -10.777351379394531
    8. '6' → logprob: -10.902351379394531
    9. '   ' → logprob: -11.527351379394531
    10. ' *' → logprob: -11.652351379394531

Token 89: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.016441356390714645
    2. ')' → logprob: -4.516441345214844
    3. '   ' → logprob: -6.641441345214844
    4. '=' → logprob: -7.266441345214844
    5. '>=' → logprob: -7.266441345214844
    6. ' >=' → logprob: -7.516441345214844
    7. '    ' → logprob: -7.766441345214844
    8. '<|end|>' → logprob: -8.516441345214844
    9. '%' → logprob: -8.641441345214844
    10. '*' → logprob: -8.641441345214844

Token 90: ' multiple' (ID: 7598)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17565412819385529
    2. ' divisible' → logprob: -2.550654172897339
    3. 'a' → logprob: -3.425654172897339
    4. ' multiple' → logprob: -3.550654172897339
    5. 'multiple' → logprob: -4.30065393447876
    6. 'div' → logprob: -5.80065393447876
    7. ' multiples' → logprob: -6.30065393447876
    8. '10' → logprob: -6.80065393447876
    9. 'multip' → logprob: -7.17565393447876
    10. ' an' → logprob: -7.92565393447876

Token 91: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.020874682813882828
    2. 'of' → logprob: -4.145874500274658
    3. '   ' → logprob: -5.645874500274658
    4. '=' → logprob: -8.020874977111816
    5. ' ' → logprob: -8.395874977111816
    6. '    ' → logprob: -8.520874977111816
    7. '_of' → logprob: -8.895874977111816
    8. ')' → logprob: -9.145874977111816
    9. '10' → logprob: -9.145874977111816
    10. '	of' → logprob: -9.395874977111816

Token 92: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.023499706760048866
    2. ' ' → logprob: -3.7734997272491455
    3. '9' → logprob: -8.648499488830566
    4. '3' → logprob: -9.523499488830566
    5. '8' → logprob: -13.273499488830566
    6. '   ' → logprob: -13.398499488830566
    7. '  ' → logprob: -13.773499488830566
    8. '10' → logprob: -15.023499488830566
    9. '6' → logprob: -15.648499488830566
    10. '0' → logprob: -15.773499488830566

Token 93: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0009687491692602634
    2. ' ' → logprob: -7.125968933105469
    3. '9' → logprob: -8.750968933105469
    4. '   ' → logprob: -13.000968933105469
    5. '3' → logprob: -13.500968933105469
    6. '8' → logprob: -14.375968933105469
    7. '  ' → logprob: -15.000968933105469
    8. '```' → logprob: -15.000968933105469
    9. '４' → logprob: -15.000968933105469
    10. '四' → logprob: -16.00096893310547

Token 94: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014215784904081374
    2. '   ' → logprob: -10.250142097473145
    3. ')
' → logprob: -10.375142097473145
    4. '<|end|>' → logprob: -10.375142097473145
    5. ' )' → logprob: -10.750142097473145
    6. '4' → logprob: -12.125142097473145
    7. '<|end|>' → logprob: -12.500142097473145
    8. ')

' → logprob: -12.625142097473145
    9. '}' → logprob: -12.750142097473145
    10. ',' → logprob: -13.125142097473145

Token 95: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.016620978713035583
    2. '_repr' → logprob: -4.641621112823486
    3. ' ' → logprob: -6.141621112823486
    4. ' repr' → logprob: -6.641621112823486
    5. 'repr' → logprob: -7.391621112823486
    6. ' def' → logprob: -7.516621112823486
    7. '__' → logprob: -7.516621112823486
    8. ' _' → logprob: -7.766621112823486
    9. ' ' → logprob: -8.391620635986328
    10. '_str' → logprob: -8.766620635986328

Token 98: 'str' (ID: 689)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.06105881556868553
    2. 'repr' → logprob: -2.936058759689331
    3. 'str' → logprob: -5.56105899810791
    4. 'lt' → logprob: -6.18605899810791
    5. 'init' → logprob: -8.31105899810791
    6. 'hash' → logprob: -12.18605899810791
    7. ' eq' → logprob: -13.56105899810791
    8. 'int' → logprob: -14.43605899810791
    9. 'iter' → logprob: -14.93605899810791
    10. 'getitem' → logprob: -15.31105899810791

Token 99: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20313704013824463
    2. '__' → logprob: -1.7031370401382446
    3. '__(
' → logprob: -6.828136920928955
    4. '__('' → logprob: -7.578136920928955
    5. '(self' → logprob: -10.453137397766113
    6. '__("' → logprob: -10.578137397766113
    7. '__((' → logprob: -10.703137397766113
    8. '__(*' → logprob: -10.828137397766113
    9. '(' → logprob: -11.203137397766113
    10. '__.__' → logprob: -11.953137397766113

Token 100: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026181264547631145
    2. ')' → logprob: -8.250262260437012
    3. ' self' → logprob: -15.000262260437012
    4. '):
' → logprob: -16.500261306762695
    5. '(self' → logprob: -17.375261306762695
    6. '	self' → logprob: -17.625261306762695
    7. '):' → logprob: -17.875261306762695
    8. '
' → logprob: -18.000261306762695
    9. ')
' → logprob: -18.125261306762695
    10. '):

' → logprob: -18.625261306762695

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0906447023153305
    2. ')' → logprob: -2.465644598007202
    3. '):
' → logprob: -6.840644836425781
    4. 'self' → logprob: -7.590644836425781
    5. ' ):' → logprob: -10.215644836425781
    6. ',' → logprob: -10.465644836425781
    7. ').__' → logprob: -11.715644836425781
    8. ')__' → logprob: -12.090644836425781
    9. ')->' → logprob: -12.340644836425781
    10. '):

' → logprob: -12.340644836425781

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011407246813178062
    2. 'return' → logprob: -4.761407375335693
    3. ' return' → logprob: -5.886407375335693
    4. ':return' → logprob: -12.386406898498535
    5. '(' → logprob: -13.011406898498535
    6. '   ' → logprob: -13.261406898498535
    7. ')' → logprob: -13.761406898498535
    8. '```' → logprob: -14.886406898498535
    9. ':' → logprob: -15.136406898498535
    10. '	return' → logprob: -15.261406898498535

Token 103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06211019307374954
    2. ' return' → logprob: -3.062110185623169
    3. '       ' → logprob: -4.312110424041748
    4. '   ' → logprob: -10.93710994720459
    5. 'f' → logprob: -12.18710994720459
    6. '	return' → logprob: -13.31210994720459
    7. '{return' → logprob: -13.93710994720459
    8. '           ' → logprob: -15.06210994720459
    9. ' f' → logprob: -15.56210994720459
    10. '```' → logprob: -16.062110900878906

Token 104: ' self' (ID: 1051)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3773805797100067
    2. 'f' → logprob: -1.377380609512329
    3. ' self' → logprob: -3.127380609512329
    4. 'self' → logprob: -4.00238037109375
    5. '"' → logprob: -13.75238037109375
    6. ' ' → logprob: -14.75238037109375
    7. '   ' → logprob: -16.12738037109375
    8. ' ' → logprob: -16.12738037109375
    9. ' "{}' → logprob: -16.12738037109375
    10. '	f' → logprob: -16.25238037109375

Token 105: '.name' (ID: 4834)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42808997631073
    2. '.' → logprob: -1.80308997631073
    3. '.name' → logprob: -3.0530900955200195
    4. 'f' → logprob: -3.1780900955200195
    5. ' f' → logprob: -3.1780900955200195
    6. ' self' → logprob: -3.1780900955200195
    7. '.f' → logprob: -4.9280900955200195
    8. ' .' → logprob: -6.5530900955200195
    9. 'str' → logprob: -7.5530900955200195
    10. '.self' → logprob: -7.5530900955200195

Token 106: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.446399062871933
    2. '<|end|>' → logprob: -1.6963990926742554
    3. '   ' → logprob: -3.071398973464966
    4. ':' → logprob: -3.321398973464966
    5. ',' → logprob: -3.571398973464966
    6. 'class' → logprob: -3.946398973464966
    7. '    
' → logprob: -4.696399211883545
    8. '.' → logprob: -4.821399211883545
    9. '<|end|>' → logprob: -5.071399211883545
    10. '\n' → logprob: -5.196399211883545

Token 107: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7368026971817017
    2. '<|end|>' → logprob: -1.4868026971817017
    3. '   ' → logprob: -2.861802577972412
    4. ',' → logprob: -2.861802577972412
    5. 'class' → logprob: -3.111802577972412
    6. '.' → logprob: -3.361802577972412
    7. '<|end|>' → logprob: -3.736802577972412
    8. ':' → logprob: -3.861802577972412
    9. '#' → logprob: -4.111802577972412
    10. '

' → logprob: -4.486802577972412

Token 108: ' Unit' (ID: 14856)
  Prédit: ' Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Number' → logprob: -0.15164422988891602
    2. 'Number' → logprob: -2.776644229888916
    3. ' Large' → logprob: -2.901644229888916
    4. ' J' → logprob: -4.276644229888916
    5. 'Large' → logprob: -5.276644229888916
    6. 'J' → logprob: -5.901644229888916
    7. ' List' → logprob: -6.776644229888916
    8. ' Big' → logprob: -8.526643753051758
    9. 'List' → logprob: -9.401643753051758
    10. 'Big' → logprob: -9.901643753051758

Token 109: 'System' (ID: 3320)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.583810567855835
    2. 'List' → logprob: -1.958810567855835
    3. ':' → logprob: -2.083810567855835
    4. 'Iterator' → logprob: -2.958810567855835
    5. 'Converter' → logprob: -3.333810567855835
    6. 'System' → logprob: -3.958810567855835
    7. 'Chain' → logprob: -4.208810806274414
    8. 'Manager' → logprob: -4.708810806274414
    9. 'Parser' → logprob: -4.708810806274414
    10. 'Group' → logprob: -4.833810806274414

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.662937372922897e-05
    2. ':
' → logprob: -9.750096321105957
    3. '(List' → logprob: -11.125096321105957
    4. '<|end|>' → logprob: -12.125096321105957
    5. '):' → logprob: -12.625096321105957
    6. '():' → logprob: -12.625096321105957
    7. '(' → logprob: -12.750096321105957
    8. '(object' → logprob: -13.875096321105957
    9. '   ' → logprob: -14.000096321105957
    10. '[List' → logprob: -14.000096321105957

Token 111: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0672469213604927
    2. '   ' → logprob: -2.817246913909912
    3. ':
' → logprob: -5.942246913909912
    4. ' :' → logprob: -7.067246913909912
    5. '<|end|>' → logprob: -7.317246913909912
    6. '(List' → logprob: -8.31724739074707
    7. '):' → logprob: -8.94224739074707
    8. ' List' → logprob: -9.06724739074707
    9. 'def' → logprob: -9.19224739074707
    10. '(' → logprob: -9.31724739074707

Token 112: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059581585228443146
    2. ' def' → logprob: -3.8095815181732178
    3. ' List' → logprob: -4.184581756591797
    4. 'def' → logprob: -4.184581756591797
    5. 'List' → logprob: -5.809581756591797
    6. ':' → logprob: -6.934581756591797
    7. '    
' → logprob: -7.434581756591797
    8. '    ' → logprob: -9.184581756591797
    9. ':
' → logprob: -9.309581756591797
    10. ' ' → logprob: -9.309581756591797

Token 113: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.17297421395778656
    2. 'def' → logprob: -2.672974109649658
    3. '   ' → logprob: -3.547974109649658
    4. ' """
' → logprob: -3.547974109649658
    5. 'class' → logprob: -4.047974109649658
    6. '"""' → logprob: -4.422974109649658
    7. ' def' → logprob: -6.297974109649658
    8. '"' → logprob: -8.047974586486816
    9. '"
' → logprob: -8.422974586486816
    10. '""' → logprob: -9.422974586486816

Token 114: ' Enc' (ID: 26858)
  Prédit: 'Defines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Defines' → logprob: -0.6453738808631897
    2. 'Rep' → logprob: -1.145373821258545
    3. '   ' → logprob: -2.645373821258545
    4. ' Represents' → logprob: -2.895373821258545
    5. ' Defines' → logprob: -4.895373821258545
    6. 'class' → logprob: -5.020373821258545
    7. 'def' → logprob: -5.645373821258545
    8. ' Holds' → logprob: -5.895373821258545
    9. 'Provides' → logprob: -6.020373821258545
    10. 'A' → logprob: -6.145373821258545

Token 115: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.011126228608191013
    2. 'odes' → logprob: -5.3861260414123535
    3. 'oded' → logprob: -5.6361260414123535
    4. 'om' → logprob: -6.7611260414123535
    5. 'lass' → logprob: -7.5111260414123535
    6. 'lasses' → logprob: -8.136126518249512
    7. 'omp' → logprob: -8.511126518249512
    8. 'apsulation' → logprob: -8.761126518249512
    9. 'ont' → logprob: -8.886126518249512
    10. 'ode' → logprob: -9.011126518249512

Token 116: 'ulates' (ID: 52494)
  Prédit: 'ulates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulates' → logprob: -0.0029167381580919027
    2. 'ules' → logprob: -6.6279168128967285
    3. 'class' → logprob: -7.6279168128967285
    4. ' a' → logprob: -8.25291633605957
    5. 'ulating' → logprob: -8.25291633605957
    6. 'ures' → logprob: -8.75291633605957
    7. ' the' → logprob: -9.25291633605957
    8. 'ulate' → logprob: -9.37791633605957
    9. 'u' → logprob: -10.00291633605957
    10. 'ul' → logprob: -10.12791633605957

Token 117: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.44961822032928467
    2. ' the' → logprob: -1.0746182203292847
    3. 'a' → logprob: -4.449618339538574
    4. 'the' → logprob: -5.449618339538574
    5. ' large' → logprob: -6.199618339538574
    6. ' different' → logprob: -7.074618339538574
    7. ' units' → logprob: -7.324618339538574
    8. ' an' → logprob: -7.949618339538574
    9. ' predefined' → logprob: -8.074618339538574
    10. ' multiple' → logprob: -9.449618339538574

Token 118: ' J' (ID: 643)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.5973457098007202
    2. ' units' → logprob: -1.0973457098007202
    3. ' list' → logprob: -3.0973458290100098
    4. ' concept' → logprob: -3.4723458290100098
    5. 'unit' → logprob: -4.34734582901001
    6. 'list' → logprob: -4.72234582901001
    7. 'definition' → logprob: -5.72234582901001
    8. ' notion' → logprob: -5.97234582901001
    9. 'concept' → logprob: -6.09734582901001
    10. ' unit' → logprob: -6.22234582901001

Token 119: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.0046852570958435535
    2. 'inko' → logprob: -5.379685401916504
    3. 'inkgo' → logprob: -11.379685401916504
    4. 'inku' → logprob: -11.379685401916504
    5. ' ink' → logprob: -11.504685401916504
    6. 'Ink' → logprob: -11.629685401916504
    7. 'apanese' → logprob: -12.129685401916504
    8. 'inkan' → logprob: -12.379685401916504
    9. 'in' → logprob: -12.504685401916504
    10. '```' → logprob: -13.879685401916504

Token 120: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0007293514790944755
    2. 'ouk' → logprob: -7.250729560852051
    3. 'o' → logprob: -11.25072956085205
    4. 'oui' → logprob: -12.75072956085205
    5. 'kou' → logprob: -13.37572956085205
    6. 'оу' → logprob: -14.00072956085205
    7. 'ok' → logprob: -14.62572956085205
    8. 'oki' → logprob: -15.00072956085205
    9. 'you' → logprob: -16.500728607177734
    10. 'ō' → logprob: -16.875728607177734

Token 121: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -4.3822154111694545e-05
    2. 'uki' → logprob: -11.500043869018555
    3. 'oki' → logprob: -12.125043869018555
    4. ' ki' → logprob: -12.250043869018555
    5. 'cki' → logprob: -12.750043869018555
    6. '-' → logprob: -12.875043869018555
    7. '

' → logprob: -13.000043869018555
    8. 'large' → logprob: -13.000043869018555
    9. 'k' → logprob: -13.875043869018555
    10. '
' → logprob: -13.875043869018555

Token 122: ' unit' (ID: 7670)
  Prédit: ' large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.0503820963203907
    2. 'large' → logprob: -3.175382137298584
    3. '_large' → logprob: -5.675382137298584
    4. ' number' → logprob: -6.800382137298584
    5. ' units' → logprob: -7.050382137298584
    6. 'number' → logprob: -7.925382137298584
    7. ' system' → logprob: -8.175381660461426
    8. 'units' → logprob: -8.425381660461426
    9. ' unit' → logprob: -8.550381660461426
    10. 'Large' → logprob: -8.550381660461426

Token 123: ' system' (ID: 2420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3289554715156555
    2. ' system' → logprob: -1.8289554119110107
    3. ' s' → logprob: -2.9539554119110107
    4. '   ' → logprob: -3.8289554119110107
    5. ' representation' → logprob: -3.9539554119110107
    6. ' units' → logprob: -3.9539554119110107
    7. 'system' → logprob: -6.32895565032959
    8. ' ' → logprob: -6.45395565032959
    9. 'units' → logprob: -6.57895565032959
    10. 'representation' → logprob: -7.70395565032959

Token 124: ' where' (ID: 1919)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020788628607988358
    2. '   ' → logprob: -4.520788669586182
    3. ':
' → logprob: -5.395788669586182
    4. ',' → logprob: -5.645788669586182
    5. '.' → logprob: -7.645788669586182
    6. ' with' → logprob: -8.395788192749023
    7. '):' → logprob: -8.520788192749023
    8. 'with' → logprob: -8.645788192749023
    9. '<|end|>' → logprob: -9.020788192749023
    10. '<|end|>' → logprob: -9.520788192749023

Token 125: ' each' (ID: 2454)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.1559402197599411
    2. ' units' → logprob: -2.530940294265747
    3. 'each' → logprob: -3.655940294265747
    4. ' each' → logprob: -4.780940055847168
    5. '   ' → logprob: -5.155940055847168
    6. 'unit' → logprob: -5.280940055847168
    7. 'the' → logprob: -5.530940055847168
    8. 'large' → logprob: -5.655940055847168
    9. ' the' → logprob: -5.780940055847168
    10. 'self' → logprob: -5.905940055847168

Token 126: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.2523099482059479
    2. ' unit' → logprob: -1.5023099184036255
    3. 'number' → logprob: -9.127309799194336
    4. 'token' → logprob: -9.252309799194336
    5. '   ' → logprob: -10.002309799194336
    6. ' number' → logprob: -10.377309799194336
    7. 'Number' → logprob: -10.502309799194336
    8. 'Unit' → logprob: -11.252309799194336
    9. 'name' → logprob: -11.377309799194336
    10. 'line' → logprob: -11.502309799194336

Token 127: ' corresponds' (ID: 66938)
  Prédit: ' represents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represents' → logprob: -0.10348489880561829
    2. ' corresponds' → logprob: -3.103484869003296
    3. ' is' → logprob: -3.228484869003296
    4. ' has' → logprob: -5.478485107421875
    5. 'rep' → logprob: -5.603485107421875
    6. ''s' → logprob: -6.478485107421875
    7. '   ' → logprob: -6.978485107421875
    8. 'name' → logprob: -6.978485107421875
    9. 'is' → logprob: -7.603485107421875
    10. ' covers' → logprob: -7.728485107421875

Token 128: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.38761359453201294
    2. 'to' → logprob: -1.1376135349273682
    3. '<|end|>' → logprob: -7.762613773345947
    4. '   ' → logprob: -8.262613296508789
    5. '<|end|>' → logprob: -10.012613296508789
    6. '	to' → logprob: -12.762613296508789
    7. 'a' → logprob: -13.262613296508789
    8. ',' → logprob: -13.262613296508789
    9. ' ' → logprob: -13.762613296508789
    10. 'at' → logprob: -14.137613296508789

Token 129: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13169890642166138
    2. ' a' → logprob: -2.3816988468170166
    3. '10' → logprob: -3.7566988468170166
    4. 'powers' → logprob: -5.881699085235596
    5. 'an' → logprob: -6.631699085235596
    6. '4' → logprob: -7.256699085235596
    7. ' powers' → logprob: -7.631699085235596
    8. ' ' → logprob: -7.756699085235596
    9. ' an' → logprob: -7.756699085235596
    10. 'increments' → logprob: -8.381698608398438

Token 130: ' ' (ID: 220)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0943031907081604
    2. ' power' → logprob: -3.3443031311035156
    3. 'multiple' → logprob: -3.3443031311035156
    4. '10' → logprob: -4.344303131103516
    5. '4' → logprob: -6.094303131103516
    6. 'unit' → logprob: -6.844303131103516
    7. ' multiple' → logprob: -7.094303131103516
    8. 'pow' → logprob: -7.844303131103516
    9. 'large' → logprob: -8.219303131103516
    10. ' ' → logprob: -8.344303131103516

Token 131: '10' (ID: 702)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0390678346157074
    2. '10' → logprob: -4.03906774520874
    3. 'large' → logprob: -4.66406774520874
    4. ' power' → logprob: -5.53906774520874
    5. 'multiple' → logprob: -5.66406774520874
    6. 'unit' → logprob: -6.16406774520874
    7. '4' → logprob: -8.039068222045898
    8. 'multip' → logprob: -8.289068222045898
    9. 'number' → logprob: -8.414068222045898
    10. 'step' → logprob: -8.789068222045898

Token 132: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.13146241009235382
    2. '^' → logprob: -2.131462335586548
    3. '4' → logprob: -5.506462574005127
    4. ' **' → logprob: -8.631462097167969
    5. ',' → logprob: -9.131462097167969
    6. '000' → logprob: -9.756462097167969
    7. ' ' → logprob: -9.881462097167969
    8. ' ' → logprob: -10.381462097167969
    9. '_' → logprob: -11.506462097167969
    10. '^^' → logprob: -12.006462097167969

Token 133: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.500014305114746
    3. 'power' → logprob: -12.750014305114746
    4. '   ' → logprob: -15.250014305114746
    5. '```' → logprob: -15.250014305114746
    6. ' power' → logprob: -15.375014305114746
    7. '^' → logprob: -15.625014305114746
    8. 'pow' → logprob: -15.875014305114746
    9. '' → logprob: -16.125015258789062
    10. '04' → logprob: -16.375015258789062

Token 134: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.669665515422821
    2. ' power' → logprob: -1.0446655750274658
    3. 'multiple' → logprob: -2.419665575027466
    4. ' multiple' → logprob: -3.669665575027466
    5. 'n' → logprob: -4.919665336608887
    6. ' exponent' → logprob: -5.669665336608887
    7. 'multip' → logprob: -5.669665336608887
    8. 'increment' → logprob: -6.044665336608887
    9. ''s' → logprob: -6.544665336608887
    10. ' multiplier' → logprob: -7.294665336608887

Token 135: ' step' (ID: 5983)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7111701965332031
    2. '   ' → logprob: -1.4611701965332031
    3. ' level' → logprob: -2.836170196533203
    4. '.' → logprob: -2.961170196533203
    5. ' block' → logprob: -3.211170196533203
    6. ',' → logprob: -3.586170196533203
    7. ' unit' → logprob: -3.836170196533203
    8. 'of' → logprob: -4.586170196533203
    9. '>' → logprob: -5.336170196533203
    10. ' exponent' → logprob: -5.336170196533203

Token 136: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23216384649276733
    2. ':' → logprob: -1.857163906097412
    3. ',' → logprob: -3.232163906097412
    4. '.' → logprob: -4.732163906097412
    5. ' :' → logprob: -7.232163906097412
    6. '<|end|>' → logprob: -7.607163906097412
    7. '):' → logprob: -8.482163429260254
    8. ')' → logprob: -8.732163429260254
    9. ' ' → logprob: -8.982163429260254
    10. '    ' → logprob: -8.982163429260254

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012535653077065945
    2. ')' → logprob: -7.501253604888916
    3. '
' → logprob: -8.001253128051758
    4. ':' → logprob: -9.126253128051758
    5. '    
' → logprob: -9.126253128051758
    6. '):' → logprob: -9.751253128051758
    7. '):
' → logprob: -10.251253128051758
    8. '```' → logprob: -10.626253128051758
    9. 'def' → logprob: -11.251253128051758
    10. 'class' → logprob: -12.376253128051758

Token 138: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031219832599163055
    2. ')' → logprob: -6.003121852874756
    3. '    
' → logprob: -8.128122329711914
    4. 'def' → logprob: -8.628122329711914
    5. 'class' → logprob: -9.503122329711914
    6. '
' → logprob: -10.128122329711914
    7. '```' → logprob: -10.878122329711914
    8. '    ' → logprob: -11.753122329711914
    9. ' def' → logprob: -12.628122329711914
    10. ':' → logprob: -12.753122329711914

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08728329837322235
    2. ' def' → logprob: -2.5872833728790283
    3. 'def' → logprob: -4.837283134460449
    4. ' units' → logprob: -8.08728313446045
    5. 'units' → logprob: -9.08728313446045
    6. '_units' → logprob: -13.08728313446045
    7. ' indentation' → logprob: -13.58728313446045
    8. '    
' → logprob: -13.83728313446045
    9. '
' → logprob: -14.33728313446045
    10. ' _' → logprob: -14.58728313446045

Token 140: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3280640244483948
    2. 'def' (adapté à ' def') → logprob: -1.32806396484375
    3. 'units' → logprob: -4.57806396484375
    4. '_units' → logprob: -6.07806396484375
    5. ' units' → logprob: -6.32806396484375
    6. '   ' → logprob: -8.32806396484375
    7. ' UN' → logprob: -10.70306396484375
    8. '_def' → logprob: -10.95306396484375
    9. 'UN' → logprob: -11.07806396484375
    10. '_UN' → logprob: -11.32806396484375

Token 141: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.3825494050979614
    2. ' __' → logprob: -1.3825494050979614
    3. '__' → logprob: -3.382549285888672
    4. 'def' → logprob: -4.132549285888672
    5. '_init' → logprob: -4.632549285888672
    6. ' def' → logprob: -5.007549285888672
    7. ' init' → logprob: -8.132549285888672
    8. '```' → logprob: -9.882549285888672
    9. 'getitem' → logprob: -10.257549285888672
    10. 'classmethod' → logprob: -10.382549285888672

Token 142: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.747814349073451e-05
    2. '_init' → logprob: -11.000017166137695
    3. '__' → logprob: -14.500017166137695
    4. ' init' → logprob: -15.750017166137695
    5. 'iter' → logprob: -16.875017166137695
    6. '	init' → logprob: -18.375017166137695
    7. '_' → logprob: -18.625017166137695
    8. '```' → logprob: -18.625017166137695
    9. 'getitem' → logprob: -18.875017166137695
    10. '.init' → logprob: -19.000017166137695

Token 143: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0009957717265933752
    2. '__' → logprob: -7.125995635986328
    3. '__(
' → logprob: -9.125995635986328
    4. '(' → logprob: -9.750995635986328
    5. '(self' → logprob: -11.000995635986328
    6. '__((' → logprob: -12.500995635986328
    7. '__(*' → logprob: -13.750995635986328
    8. '__('' → logprob: -14.000995635986328
    9. '_(' → logprob: -14.125995635986328
    10. ' (' → logprob: -14.875995635986328

Token 144: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.607391408877447e-05
    2. ' self' → logprob: -10.500036239624023
    3. '):
' → logprob: -12.375036239624023
    4. ')' → logprob: -13.125036239624023
    5. '
' → logprob: -13.875036239624023
    6. '       ' → logprob: -14.375036239624023
    7. '   ' → logprob: -14.625036239624023
    8. ',' → logprob: -16.000036239624023
    9. '0' → logprob: -16.375036239624023
    10. '	self' → logprob: -17.125036239624023

Token 145: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07609353214502335
    2. 'self' → logprob: -2.7010934352874756
    3. '):
' → logprob: -6.201093673706055
    4. ' self' → logprob: -6.576093673706055
    5. '   ' → logprob: -6.951093673706055
    6. ' ,' → logprob: -7.326093673706055
    7. '       ' → logprob: -7.951093673706055
    8. '(self' → logprob: -8.076093673706055
    9. ',self' → logprob: -8.576093673706055
    10. '):' → logprob: -9.201093673706055

Token 146: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008206968195736408
    2. '       ' → logprob: -4.883206844329834
    3. ' self' → logprob: -7.508206844329834
    4. '   ' → logprob: -10.383207321166992
    5. '[]' → logprob: -12.008207321166992
    6. 'units' → logprob: -12.633207321166992
    7. '(self' → logprob: -12.758207321166992
    8. '0' → logprob: -12.883207321166992
    9. '):
' → logprob: -13.258207321166992
    10. '	self' → logprob: -13.633207321166992

Token 147: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01090998761355877
    2. '       ' → logprob: -5.1359100341796875
    3. ' self' → logprob: -5.3859100341796875
    4. '#' (adapté à ' #') → logprob: -7.8859100341796875
    5. ' #' → logprob: -11.885910034179688
    6. 'import' → logprob: -14.010910034179688
    7. '(self' → logprob: -14.385910034179688
    8. '   ' → logprob: -14.635910034179688
    9. '	self' → logprob: -14.635910034179688
    10. 'from' → logprob: -14.885910034179688

Token 148: ' The' (ID: 623)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00888825487345457
    2. ' self' → logprob: -4.883888244628906
    3. '#' → logprob: -6.758888244628906
    4. '       ' → logprob: -9.883888244628906
    5. 'units' → logprob: -10.008888244628906
    6. ' #' → logprob: -11.008888244628906
    7. '   ' → logprob: -12.758888244628906
    8. 'import' → logprob: -14.133888244628906
    9. 'names' → logprob: -14.258888244628906
    10. ' units' → logprob: -14.383888244628906

Token 149: ' units' (ID: 13306)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.26886165142059326
    2. ' units' → logprob: -1.5188616514205933
    3. '_units' → logprob: -4.393861770629883
    4. '.units' → logprob: -5.643861770629883
    5. 'unit' → logprob: -8.018861770629883
    6. '_unit' → logprob: -9.018861770629883
    7. '_name' → logprob: -9.143861770629883
    8. 'name' → logprob: -9.768861770629883
    9. 'names' → logprob: -9.893861770629883
    10. ' ' → logprob: -10.518861770629883

Token 150: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007446544244885445
    2. '=' → logprob: -5.132446765899658
    3. ':' → logprob: -6.507446765899658
    4. ' are' → logprob: -11.3824462890625
    5. '   ' → logprob: -12.5074462890625
    6. ' ' → logprob: -12.8824462890625
    7. ' :' → logprob: -13.5074462890625
    8. '       ' → logprob: -14.3824462890625
    9. 'self' → logprob: -14.3824462890625
    10. 's' → logprob: -14.6324462890625

Token 151: ' listed' (ID: 12073)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.18166053295135498
    2. ' [
' → logprob: -1.931660532951355
    3. ' [' → logprob: -4.4316606521606445
    4. '[' → logprob: -4.6816606521606445
    5. '["' → logprob: -11.056660652160645
    6. '       ' → logprob: -11.556660652160645
    7. '['' → logprob: -11.681660652160645
    8. '[]' → logprob: -11.806660652160645
    9. ' ['' → logprob: -12.931660652160645
    10. '   ' → logprob: -13.556660652160645

Token 152: ' from' (ID: 591)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.5112662315368652
    2. ' =' → logprob: -1.3862662315368652
    3. ' in' → logprob: -2.7612662315368652
    4. 'self' → logprob: -3.1362662315368652
    5. ' self' → logprob: -4.511266231536865
    6. '=' → logprob: -4.511266231536865
    7. '[' → logprob: -5.261266231536865
    8. 'in' → logprob: -5.511266231536865
    9. 'as' → logprob: -5.761266231536865
    10. '[
' → logprob: -5.761266231536865

Token 153: ' smallest' (ID: 42173)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.20873701572418213
    2. 'small' → logprob: -2.0837368965148926
    3. 'largest' → logprob: -3.4587368965148926
    4. ' smallest' → logprob: -4.833736896514893
    5. 'least' → logprob: -5.333736896514893
    6. 'the' → logprob: -5.583736896514893
    7. 'Man' → logprob: -5.958736896514893
    8. ' lowest' → logprob: -6.083736896514893
    9. 'highest' → logprob: -6.208736896514893
    10. '"' → logprob: -6.333736896514893

Token 154: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1449240744113922
    2. 'to' → logprob: -2.0199241638183594
    3. ' ' → logprob: -7.894924163818359
    4. 'self' → logprob: -8.14492416381836
    5. ' (' → logprob: -8.14492416381836
    6. ' up' → logprob: -8.51992416381836
    7. '       ' → logprob: -8.51992416381836
    8. ' upwards' → logprob: -8.51992416381836
    9. ' self' → logprob: -8.76992416381836
    10. ' unit' → logprob: -9.26992416381836

Token 155: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.013384087942540646
    2. ' largest' → logprob: -4.388383865356445
    3. 'highest' → logprob: -7.763383865356445
    4. 'Largest' → logprob: -7.888383865356445
    5. 'large' → logprob: -10.388383865356445
    6. 'larg' → logprob: -11.888383865356445
    7. ' highest' → logprob: -11.888383865356445
    8. 'most' → logprob: -12.263383865356445
    9. '-largest' → logprob: -12.513383865356445
    10. 'top' → logprob: -12.763383865356445

Token 156: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3551958501338959
    2. '       ' → logprob: -1.8551958799362183
    3. ' self' → logprob: -2.4801957607269287
    4. ':' → logprob: -3.4801957607269287
    5. ',' → logprob: -3.7301957607269287
    6. ':
' → logprob: -6.980195999145508
    7. ' as' → logprob: -7.230195999145508
    8. '
' → logprob: -7.605195999145508
    9. ' in' → logprob: -7.730195999145508
    10. ' with' → logprob: -8.105195999145508

Token 157: ' ascending' (ID: 75564)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6745429039001465
    2. 'order' → logprob: -1.2995429039001465
    3. ' order' → logprob: -2.0495429039001465
    4. 'a' → logprob: -3.6745429039001465
    5. ' a' → logprob: -3.6745429039001465
    6. ' self' → logprob: -4.1745429039001465
    7. 'the' → logprob: -4.9245429039001465
    8. 'power' → logprob: -5.6745429039001465
    9. 'terms' → logprob: -5.9245429039001465
    10. ' the' → logprob: -6.2995429039001465

Token 158: ' power' (ID: 3470)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.1281282603740692
    2. 'order' → logprob: -2.1281282901763916
    3. ' powers' → logprob: -7.5031280517578125
    4. 'powers' → logprob: -7.7531280517578125
    5. 'power' → logprob: -9.628128051757812
    6. ' power' → logprob: -9.628128051757812
    7. 'value' → logprob: -11.003128051757812
    8. 'self' → logprob: -11.378128051757812
    9. ' ' → logprob: -12.128128051757812
    10. '   ' → logprob: -12.378128051757812

Token 159: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05672861263155937
    2. ':' → logprob: -4.056728839874268
    3. ',' → logprob: -4.181728839874268
    4. 'self' → logprob: -4.556728839874268
    5. '.' → logprob: -5.931728839874268
    6. '   ' → logprob: -6.181728839874268
    7. ' of' → logprob: -6.431728839874268
    8. '_list' → logprob: -6.431728839874268
    9. ' self' → logprob: -6.681728839874268
    10. 'unit' → logprob: -8.05672836303711

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008420956321060658
    2. 'self' → logprob: -4.883420944213867
    3. ',' → logprob: -7.383420944213867
    4. ' self' → logprob: -9.258420944213867
    5. ':' → logprob: -9.633420944213867
    6. ':
' → logprob: -11.883420944213867
    7. '   ' → logprob: -12.508420944213867
    8. '(self' → logprob: -13.008420944213867
    9. '        
' → logprob: -13.008420944213867
    10. '[self' → logprob: -13.258420944213867

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008123023435473442
    2. 'self' → logprob: -4.88312292098999
    3. ',' → logprob: -7.75812292098999
    4. ' self' → logprob: -10.383123397827148
    5. '   ' → logprob: -10.508123397827148
    6. ':' → logprob: -11.383123397827148
    7. '[' → logprob: -12.008123397827148
    8. '        
' → logprob: -12.508123397827148
    9. '[
' → logprob: -13.883123397827148
    10. '.' → logprob: -14.008123397827148

Token 162: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010102282278239727
    2. '       ' → logprob: -4.885102272033691
    3. ' self' → logprob: -6.010102272033691
    4. '[
' → logprob: -10.510102272033691
    5. '[self' → logprob: -12.010102272033691
    6. '[' → logprob: -12.885102272033691
    7. '   ' → logprob: -14.260102272033691
    8. '	self' → logprob: -14.510102272033691
    9. '(self' → logprob: -14.635102272033691
    10. ' [
' → logprob: -15.260102272033691

Token 163: ' Power' (ID: 10079)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05236053466796875
    2. ' self' → logprob: -3.5523605346679688
    3. '       ' → logprob: -3.8023605346679688
    4. '   ' → logprob: -11.552360534667969
    5. '[self' → logprob: -12.052360534667969
    6. '#' → logprob: -12.177360534667969
    7. '[
' → logprob: -12.552360534667969
    8. 'units' → logprob: -12.802360534667969
    9. ' ' → logprob: -12.927360534667969
    10. '	self' → logprob: -13.427360534667969

Token 164: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30185946822166443
    2. ' =' → logprob: -1.5518594980239868
    3. 's' → logprob: -3.8018593788146973
    4. '       ' → logprob: -4.301859378814697
    5. '   ' → logprob: -5.426859378814697
    6. ':' → logprob: -6.051859378814697
    7. '_steps' → logprob: -6.301859378814697
    8. '_list' → logprob: -7.176859378814697
    9. '_units' → logprob: -7.551859378814697
    10. '_step' → logprob: -7.676859378814697

Token 165: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2590081989765167
    2. ' ' → logprob: -1.5090081691741943
    3. '4' → logprob: -5.259008407592773
    4. '   ' → logprob: -6.759008407592773
    5. '[' → logprob: -8.134008407592773
    6. '    ' → logprob: -9.134008407592773
    7. ' [' → logprob: -9.384008407592773
    8. '       ' → logprob: -9.884008407592773
    9. '  ' → logprob: -10.009008407592773
    10. ' multiples' → logprob: -10.259008407592773

Token 166: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07123634964227676
    2. '4' → logprob: -2.9462363719940186
    3. ' ' → logprob: -4.1962361335754395
    4. 'i' → logprob: -7.4462361335754395
    5. '[' → logprob: -8.696236610412598
    6. ' i' → logprob: -9.196236610412598
    7. '   ' → logprob: -9.446236610412598
    8. 'lambda' → logprob: -9.946236610412598
    9. ' [' → logprob: -10.696236610412598
    10. '  ' → logprob: -10.946236610412598

Token 167: '^(' (ID: 32612)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.143628790974617
    2. '**' → logprob: -2.0186288356781006
    3. ' ' → logprob: -7.2686285972595215
    4. '4' → logprob: -9.01862907409668
    5. ' *' → logprob: -9.76862907409668
    6. ',' → logprob: -10.76862907409668
    7. '^' → logprob: -11.39362907409668
    8. '0' → logprob: -11.39362907409668
    9. '000' → logprob: -11.64362907409668
    10. '   ' → logprob: -11.76862907409668

Token 168: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.024070464074611664
    2. '(self' → logprob: -4.5240702629089355
    3. '(' → logprob: -4.7740702629089355
    4. '(unit' → logprob: -6.2740702629089355
    5. '((' → logprob: -7.2740702629089355
    6. ' ' → logprob: -7.5240702629089355
    7. '(power' → logprob: -8.149070739746094
    8. 'self' → logprob: -8.274070739746094
    9. ' (' → logprob: -8.274070739746094
    10. '(i' → logprob: -8.524070739746094

Token 169: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6372659206390381
    2. '*' → logprob: -1.262265920639038
    3. ')' → logprob: -1.762265920639038
    4. '   ' → logprob: -5.637266159057617
    5. '*i' → logprob: -5.887266159057617
    6. '*n' → logprob: -6.262266159057617
    7. '4' → logprob: -6.262266159057617
    8. ' ' → logprob: -6.387266159057617
    9. '**' → logprob: -6.512266159057617
    10. ' )' → logprob: -6.637266159057617

Token 170: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2582014501094818
    2. 'index' → logprob: -1.7582014799118042
    3. 'idx' → logprob: -3.3832013607025146
    4. 'self' → logprob: -4.758201599121094
    5. 'len' → logprob: -5.508201599121094
    6. 'unit' → logprob: -6.008201599121094
    7. '(' → logprob: -6.258201599121094
    8. 'n' → logprob: -6.383201599121094
    9. ')' → logprob: -7.633201599121094
    10. ' i' → logprob: -7.633201599121094

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004028533585369587
    2. ' )' → logprob: -5.6290283203125
    3. '   ' → logprob: -8.6290283203125
    4. ')
' → logprob: -9.5040283203125
    5. '+' → logprob: -9.8790283203125
    6. ' +' → logprob: -10.8790283203125
    7. '))' → logprob: -11.0040283203125
    8. '),' → logprob: -11.1290283203125
    9. '):' → logprob: -11.3790283203125
    10. ')}' → logprob: -11.5040283203125

Token 172: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009853832423686981
    2. '
' → logprob: -5.509853839874268
    3. 'self' → logprob: -5.509853839874268
    4. ',' → logprob: -6.884853839874268
    5. '   ' → logprob: -9.00985336303711
    6. '        
' → logprob: -9.13485336303711
    7. ':' → logprob: -9.25985336303711
    8. ':
' → logprob: -9.88485336303711
    9. '#' → logprob: -10.25985336303711
    10. '):
' → logprob: -10.25985336303711

Token 173: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.29289838671684265
    2. 'self' → logprob: -1.542898416519165
    3. ' index' → logprob: -4.042898178100586
    4. 'each' → logprob: -5.042898178100586
    5. 'the' → logprob: -5.542898178100586
    6. ' self' → logprob: -5.542898178100586
    7. 'unit' → logprob: -6.042898178100586
    8. ' the' → logprob: -6.167898178100586
    9. ' each' → logprob: -6.542898178100586
    10. '0' → logprob: -7.167898178100586

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20027442276477814
    2. '=' → logprob: -2.4502744674682617
    3. 'in' → logprob: -3.3252744674682617
    4. ' =' → logprob: -3.5752744674682617
    5. '+' → logprob: -4.700274467468262
    6. ' +' → logprob: -4.825274467468262
    7. ',' → logprob: -5.200274467468262
    8. ')' → logprob: -6.700274467468262
    9. ' ' → logprob: -6.825274467468262
    10. '0' → logprob: -6.825274467468262

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12906140089035034
    2. ' range' → logprob: -2.129061460494995
    3. 'self' → logprob: -6.504061222076416
    4. '[' → logprob: -7.879061222076416
    5. '(range' → logprob: -8.504061698913574
    6. ' self' → logprob: -10.879061698913574
    7. '   ' → logprob: -12.254061698913574
    8. ' [' → logprob: -12.254061698913574
    9. 'enumer' → logprob: -12.504061698913574
    10. '[
' → logprob: -12.504061698913574

Token 176: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011371757835149765
    2. '(len' → logprob: -4.511371612548828
    3. 'len' → logprob: -9.136371612548828
    4. '6' → logprob: -10.386371612548828
    5. '10' → logprob: -10.511371612548828
    6. '8' → logprob: -10.636371612548828
    7. ' (' → logprob: -10.761371612548828
    8. '7' → logprob: -11.136371612548828
    9. '9' → logprob: -11.136371612548828
    10. '5' → logprob: -11.636371612548828

Token 177: '(un' (ID: 33694)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017025562701746821
    2. 'self' → logprob: -6.751702785491943
    3. '(' → logprob: -7.626702785491943
    4. '(s' → logprob: -10.876702308654785
    5. '(Unit' → logprob: -11.376702308654785
    6. '(un' → logprob: -12.626702308654785
    7. '(unit' → logprob: -12.626702308654785
    8. ' self' → logprob: -12.876702308654785
    9. 's' → logprob: -14.251702308654785
    10. '(
' → logprob: -14.251702308654785

Token 178: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.00601554149761796
    2. 'it' → logprob: -5.131015777587891
    3. 'it's' → logprob: -11.88101577758789
    4. '#' → logprob: -12.06851577758789
    5. '[' → logprob: -12.06851577758789
    6. 'Its' → logprob: -12.13101577758789
    7. ' its' → logprob: -12.13101577758789
    8. 'i' → logprob: -12.44351577758789
    9. '
' → logprob: -12.63101577758789
    10. 'units' → logprob: -12.75601577758789

Token 179: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.015230697579681873
    2. '))
' → logprob: -5.140230655670166
    3. ')):
' → logprob: -5.765230655670166
    4. ')):' → logprob: -6.015230655670166
    5. ')))' → logprob: -7.015230655670166
    6. ' ))' → logprob: -7.265230655670166
    7. ')' → logprob: -7.515230655670166
    8. '       ' → logprob: -7.890230655670166
    9. '   ' → logprob: -7.890230655670166
    10. ' ' → logprob: -8.765231132507324

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007706823293119669
    2. 'self' → logprob: -4.882706642150879
    3. ' self' → logprob: -9.882706642150879
    4. ',' → logprob: -10.507706642150879
    5. '   ' → logprob: -11.382706642150879
    6. '[' → logprob: -13.257706642150879
    7. '        
' → logprob: -13.632706642150879
    8. '      ' → logprob: -14.007706642150879
    9. ':' → logprob: -14.257706642150879
    10. '           ' → logprob: -14.257706642150879

Token 181: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05031737685203552
    2. '       ' → logprob: -3.1753172874450684
    3. ' self' → logprob: -4.925317287445068
    4. '   ' → logprob: -11.300317764282227
    5. '	self' → logprob: -11.800317764282227
    6. ' ' → logprob: -12.425317764282227
    7. '[self' → logprob: -13.175317764282227
    8. '#' → logprob: -14.050317764282227
    9. '(self' → logprob: -14.300317764282227
    10. '	' → logprob: -14.425317764282227

Token 182: '.units' (ID: 121284)
  Prédit: '.units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.units' → logprob: -0.0007263714214786887
    2. 'units' → logprob: -7.500726222991943
    3. '.' → logprob: -9.250726699829102
    4. ' .' → logprob: -9.750726699829102
    5. '._' → logprob: -11.750726699829102
    6. ' units' → logprob: -13.000726699829102
    7. '_units' → logprob: -13.125726699829102
    8. '.un' → logprob: -13.125726699829102
    9. '.unit' → logprob: -13.375726699829102
    10. '.names' → logprob: -13.500726699829102

Token 183: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21159791946411133
    2. ':' → logprob: -2.0865979194641113
    3. '=' → logprob: -2.7115979194641113
    4. ' :' → logprob: -8.711597442626953
    5. '=[]' → logprob: -12.711597442626953
    6. ' ' → logprob: -13.961597442626953
    7. '   ' → logprob: -14.836597442626953
    8. ' =[' → logprob: -14.836597442626953
    9. '[' → logprob: -14.961597442626953
    10. '=[' → logprob: -15.586597442626953

Token 184: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.4741319715976715
    2. ' List' → logprob: -0.9741319417953491
    3. '[List' → logprob: -9.84913158416748
    4. '	List' → logprob: -13.22413158416748
    5. '   ' → logprob: -15.97413158416748
    6. ' ' → logprob: -16.349132537841797
    7. ' list' → logprob: -16.849132537841797
    8. '[' → logprob: -17.099132537841797
    9. 'list' → logprob: -17.224132537841797
    10. '<List' → logprob: -18.474132537841797

Token 185: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.796184723294573e-06
    2. '[str' → logprob: -13.000005722045898
    3. '[
' → logprob: -13.750005722045898
    4. '[int' → logprob: -14.000005722045898
    5. '[Index' → logprob: -14.000005722045898
    6. '[List' → logprob: -14.750005722045898
    7. 'Number' → logprob: -16.0000057220459
    8. ' =' → logprob: -16.5000057220459
    9. '[number' → logprob: -16.6250057220459
    10. '=' → logprob: -17.0000057220459

Token 186: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -3.128163257315464e-07
    2. ' Number' → logprob: -15.375
    3. 'Unit' → logprob: -18.25
    4. 'number' → logprob: -19.375
    5. '[' → logprob: -19.625
    6. '   ' → logprob: -20.0
    7. '_Number' → logprob: -20.25
    8. 'Tuple' → logprob: -20.5
    9. 'Name' → logprob: -20.625
    10. ' ' → logprob: -20.75

Token 187: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.1472419600977446e-06
    2. '<Unit' → logprob: -14.125000953674316
    3. ' Unit' → logprob: -15.375000953674316
    4. '   ' → logprob: -17.000001907348633
    5. '_unit' → logprob: -17.875001907348633
    6. '_UNIT' → logprob: -18.000001907348633
    7. 'Token' → logprob: -18.125001907348633
    8. ' ' → logprob: -18.500001907348633
    9. ']' → logprob: -18.625001907348633
    10. 'unit' → logprob: -18.875001907348633

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.2200749754119897e-06
    2. ']=' → logprob: -13.375001907348633
    3. '[' → logprob: -14.875001907348633
    4. ' ]' → logprob: -15.250001907348633
    5. ')' → logprob: -17.625001907348633
    6. ']
' → logprob: -19.375001907348633
    7. '`]' → logprob: -20.250001907348633
    8. '']' → logprob: -20.625001907348633
    9. ']

' → logprob: -20.625001907348633
    10. '()]' → logprob: -20.625001907348633

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141959190368652
    2. '=' → logprob: -1.7014195919036865
    3. ' ' → logprob: -12.951419830322266
    4. '=[]' → logprob: -13.451419830322266
    5. '[' → logprob: -13.826419830322266
    6. ' =[' → logprob: -14.451419830322266
    7. ']' → logprob: -14.576419830322266
    8. '	' → logprob: -15.076419830322266
    9. '[]' → logprob: -16.076419830322266
    10. ')' → logprob: -16.701419830322266

Token 190: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.08092492818832397
    2. '[' → logprob: -3.3309249877929688
    3. '[]' → logprob: -3.3309249877929688
    4. ' [
' → logprob: -5.205924987792969
    5. ' [' → logprob: -7.455924987792969
    6. ' []' → logprob: -9.330924987792969
    7. '[]
' → logprob: -9.830924987792969
    8. '[List' → logprob: -11.955924987792969
    9. '   ' → logprob: -13.705924987792969
    10. '[self' → logprob: -13.830924987792969

Token 191: '           ' (ID: 352)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.06936647742986679
    2. '           ' → logprob: -2.819366455078125
    3. ' Number' → logprob: -4.944366455078125
    4. '       ' → logprob: -8.319366455078125
    5. '   ' → logprob: -12.944366455078125
    6. '_Number' → logprob: -14.694366455078125
    7. '         ' → logprob: -14.819366455078125
    8. '               ' → logprob: -14.819366455078125
    9. '          ' → logprob: -15.194366455078125
    10. ' ' → logprob: -15.319366455078125

Token 192: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -4.6087021473795176e-05
    2. ' Number' → logprob: -10.000045776367188
    3. '       ' → logprob: -15.000045776367188
    4. '           ' → logprob: -15.250045776367188
    5. '   ' → logprob: -16.875045776367188
    6. ' ' → logprob: -19.375045776367188
    7. '               ' → logprob: -19.500045776367188
    8. 'None' → logprob: -19.875045776367188
    9. '         ' → logprob: -21.125045776367188
    10. '(Number' → logprob: -21.125045776367188

Token 193: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -2.45848218582978e-06
    2. 'unit' → logprob: -14.50000286102295
    3. '('' → logprob: -14.75000286102295
    4. '<Unit' → logprob: -15.12500286102295
    5. '(Unit' → logprob: -15.62500286102295
    6. ' Unit' → logprob: -15.87500286102295
    7. '_unit' → logprob: -15.87500286102295
    8. '(' → logprob: -16.000001907348633
    9. ']' → logprob: -16.125001907348633
    10. '("' → logprob: -16.250001907348633

Token 194: '('',' (ID: 53836)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5124374628067017
    2. '("",' → logprob: -1.0124374628067017
    3. '('' → logprob: -3.637437343597412
    4. '('',' → logprob: -4.637437343597412
    5. '(' → logprob: -6.637437343597412
    6. '("")' → logprob: -8.51243782043457
    7. '(""' → logprob: -9.38743782043457
    8. ' ("' → logprob: -11.51243782043457
    9. '(
' → logprob: -12.13743782043457
    10. '("_' → logprob: -12.38743782043457

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02633083611726761
    2. ' ' → logprob: -3.6513309478759766
    3. '4' → logprob: -11.401330947875977
    4. '  ' → logprob: -12.151330947875977
    5. 'power' → logprob: -12.276330947875977
    6. '   ' → logprob: -12.651330947875977
    7. '1' → logprob: -12.776330947875977
    8. ' power' → logprob: -13.526330947875977
    9. ' ' → logprob: -14.713830947875977
    10. '    ' → logprob: -14.838830947875977

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.500031471252441
    4. '000' → logprob: -16.375032424926758
    5. '  ' → logprob: -17.000032424926758
    6. '4' → logprob: -17.687532424926758
    7. '00' → logprob: -18.062532424926758
    8. ')' → logprob: -18.500032424926758
    9. '    ' → logprob: -18.687532424926758
    10. '```' → logprob: -18.812532424926758

Token 197: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2531498074531555
    2. '),
' → logprob: -1.5031497478485107
    3. ')' → logprob: -7.00314998626709
    4. '),

' → logprob: -8.12814998626709
    5. '),
' → logprob: -11.62814998626709
    6. ' ),' → logprob: -12.75314998626709
    7. ' ),
' → logprob: -13.12814998626709
    8. '   ' → logprob: -14.12814998626709
    9. ')
' → logprob: -14.75314998626709
    10. '       ' → logprob: -15.50314998626709

Token 198: '        ' (ID: 269)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7211245894432068
    2. 'Number' → logprob: -0.7211245894432068
    3. ' Number' → logprob: -3.7211246490478516
    4. '       ' → logprob: -5.721124649047852
    5. '               ' → logprob: -9.471124649047852
    6. '   ' → logprob: -10.846124649047852
    7. '          ' → logprob: -12.971124649047852
    8. 'Unit' → logprob: -13.096124649047852
    9. ' ' → logprob: -13.221124649047852
    10. '_Number' → logprob: -14.346124649047852

Token 199: ' #' (ID: 1069)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.02008877322077751
    2. '           ' → logprob: -4.0200886726379395
    3. ' Number' → logprob: -6.3950886726379395
    4. '   ' → logprob: -8.520089149475098
    5. '       ' → logprob: -9.645089149475098
    6. '               ' → logprob: -13.895089149475098
    7. ' ' → logprob: -14.270089149475098
    8. 'Unit' → logprob: -14.645089149475098
    9. '_Number' → logprob: -15.395089149475098
    10. '          ' → logprob: -15.520089149475098

Token 200: ' No' (ID: 3004)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0406896248459816
    2. 'Man' → logprob: -4.040689468383789
    3. '''' → logprob: -4.290689468383789
    4. ' '' → logprob: -5.540689468383789
    5. 'None' → logprob: -6.290689468383789
    6. 'man' → logprob: -7.540689468383789
    7. ' ''' → logprob: -7.540689468383789
    8. ''y' → logprob: -7.790689468383789
    9. '"' → logprob: -8.290689468383789
    10. '""' → logprob: -8.415689468383789

Token 201: ' unit' (ID: 7670)
  Prédit: 'Name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Name' → logprob: -1.087306261062622
    2. 'Unit' → logprob: -1.212306261062622
    3. 'name' → logprob: -1.337306261062622
    4. 'unit' → logprob: -3.337306261062622
    5. ' unit' → logprob: -3.587306261062622
    6. ' name' → logprob: -3.962306261062622
    7. 'space' → logprob: -5.712306022644043
    8. '<|end|>' → logprob: -5.837306022644043
    9. '   ' → logprob: -6.212306022644043
    10. ' Unit' → logprob: -6.462306022644043

Token 202: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11663292348384857
    2. ',
' → logprob: -2.2416329383850098
    3. '           ' → logprob: -5.74163293838501
    4. '       ' → logprob: -8.366632461547852
    5. ',

' → logprob: -9.241632461547852
    6. '   ' → logprob: -9.366632461547852
    7. ')' → logprob: -9.741632461547852
    8. ',
' → logprob: -10.116632461547852
    9. ' ,' → logprob: -10.366632461547852
    10. '),' → logprob: -10.991632461547852

Token 203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0748019218444824
    2. 'the' → logprob: -1.3248019218444824
    3. '0' → logprob: -1.9498019218444824
    4. ' the' → logprob: -2.1998019218444824
    5. ' ones' → logprob: -2.9498019218444824
    6. ' ' → logprob: -3.0748019218444824
    7. 'ones' → logprob: -4.074801921844482
    8. '''' → logprob: -5.074801921844482
    9. 'one' → logprob: -5.324801921844482
    10. '10' → logprob: -6.074801921844482

Token 204: '10' (ID: 702)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3676631450653076
    2. '1' → logprob: -1.8676631450653076
    3. ' the' → logprob: -2.4926631450653076
    4. '0' → logprob: -3.8676631450653076
    5. 'one' → logprob: -4.617663383483887
    6. '10' → logprob: -4.742663383483887
    7. ' ' → logprob: -4.992663383483887
    8. 'ones' → logprob: -5.242663383483887
    9. ' ones' → logprob: -5.242663383483887
    10. 'zero' → logprob: -5.742663383483887

Token 205: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.0584954023361206
    2. '4' → logprob: -1.3084954023361206
    3. '0' → logprob: -1.5584954023361206
    4. '^' → logprob: -2.30849552154541
    5. ' ' → logprob: -3.43349552154541
    6. '000' → logprob: -3.93349552154541
    7. '3' → logprob: -4.18349552154541
    8. ' **' → logprob: -5.68349552154541
    9. '-' → logprob: -7.43349552154541
    10. '00' → logprob: -7.55849552154541

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015717383939772844
    2. ' ' → logprob: -8.875157356262207
    3. '4' → logprob: -11.125157356262207
    4. '   ' → logprob: -13.750157356262207
    5. '000' → logprob: -14.125157356262207
    6. '-' → logprob: -15.500157356262207
    7. '00' → logprob: -15.875157356262207
    8. '(' → logprob: -16.12515640258789
    9. '```' → logprob: -16.75015640258789
    10. '  ' → logprob: -17.12515640258789

Token 207: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10166911035776138
    2. ',
' → logprob: -2.3516690731048584
    3. '           ' → logprob: -6.7266693115234375
    4. 'Number' → logprob: -9.101669311523438
    5. '       ' → logprob: -9.601669311523438
    6. ',
' → logprob: -9.976669311523438
    7. ' ,' → logprob: -11.101669311523438
    8. '   ' → logprob: -11.726669311523438
    9. ',

' → logprob: -11.726669311523438
    10. ' Number' → logprob: -13.976669311523438

Token 208: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8126987218856812
    2. '3' → logprob: -1.1876987218856812
    3. '999' → logprob: -1.9376987218856812
    4. ' ' → logprob: -2.3126988410949707
    5. '399' → logprob: -5.062698841094971
    6. '100' → logprob: -7.937698841094971
    7. '9' → logprob: -8.187698364257812
    8. 'token' → logprob: -9.062698364257812
    9. '=' → logprob: -9.062698364257812
    10. '4' → logprob: -9.187698364257812

Token 209: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3530118763446808
    2. '3' → logprob: -1.2280118465423584
    3. '999' → logprob: -5.6030120849609375
    4. '4' → logprob: -8.353012084960938
    5. '1' → logprob: -8.728012084960938
    6. '0' → logprob: -9.103012084960938
    7. '100' → logprob: -9.603012084960938
    8. '9' → logprob: -9.853012084960938
    9. '(' → logprob: -9.978012084960938
    10. ' ' → logprob: -9.978012084960938

Token 210: '^' (ID: 61)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.004327691625803709
    2. '**' → logprob: -6.254327774047852
    3. '3' → logprob: -6.879327774047852
    4. ' ' → logprob: -7.254327774047852
    5. ',' → logprob: -8.879327774047852
    6. '^' → logprob: -8.879327774047852
    7. '0' → logprob: -9.379327774047852
    8. '000' → logprob: -9.504327774047852
    9. '+' → logprob: -9.629327774047852
    10. ' **' → logprob: -10.379327774047852

Token 211: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.11463867127895355
    2. '0' → logprob: -2.239638566970825
    3. '3' → logprob: -6.364638805389404
    4. '-' → logprob: -9.614638328552246
    5. ' ' → logprob: -11.739638328552246
    6. '```' → logprob: -12.552138328552246
    7. '(' → logprob: -13.177138328552246
    8. '1' → logprob: -13.239638328552246
    9. '12' → logprob: -13.864638328552246
    10. '8' → logprob: -13.989638328552246

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040707603096961975
    2. ',
' → logprob: -3.290707588195801
    3. '           ' → logprob: -6.040707588195801
    4. 'Number' → logprob: -8.5407075881958
    5. '       ' → logprob: -10.1657075881958
    6. ',
' → logprob: -10.5407075881958
    7. ',

' → logprob: -11.7907075881958
    8. ' ,' → logprob: -12.2907075881958
    9. '   ' → logprob: -12.5407075881958
    10. ')' → logprob: -13.1657075881958

Token 213: ' handled' (ID: 29594)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.10229852050542831
    2. '           ' → logprob: -2.3522984981536865
    3. ' Number' → logprob: -6.227298736572266
    4. '       ' → logprob: -9.352298736572266
    5. '   ' → logprob: -11.102298736572266
    6. 'Unit' → logprob: -11.602298736572266
    7. '               ' → logprob: -13.602298736572266
    8. ' ' → logprob: -14.227298736572266
    9. '          ' → logprob: -14.477298736572266
    10. '_Number' → logprob: -14.977298736572266

Token 214: ' separately' (ID: 37741)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.197361707687378
    2. ' internally' → logprob: -1.572361707687378
    3. 'as' → logprob: -1.697361707687378
    4. ' separately' → logprob: -1.947361707687378
    5. 'intern' → logprob: -2.947361707687378
    6. 'implicitly' → logprob: -3.572361707687378
    7. 'se' → logprob: -3.697361707687378
    8. ' specially' → logprob: -4.197361946105957
    9. ' differently' → logprob: -4.447361946105957
    10. ' explicitly' → logprob: -5.322361946105957

Token 215: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24732671678066254
    2. ',
' → logprob: -1.7473267316818237
    3. '           ' → logprob: -3.122326612472534
    4. '       ' → logprob: -7.497326850891113
    5. ')' → logprob: -9.747326850891113
    6. '),' → logprob: -9.747326850891113
    7. '   ' → logprob: -10.372326850891113
    8. ',
' → logprob: -10.497326850891113
    9. ',

' → logprob: -10.497326850891113
    10. ' ,' → logprob: -11.247326850891113

Token 216: '           ' (ID: 352)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.47510963678359985
    2. '           ' → logprob: -0.9751096367835999
    3. '       ' → logprob: -7.600109577178955
    4. ' Number' → logprob: -7.600109577178955
    5. '   ' → logprob: -11.100110054016113
    6. 'Unit' → logprob: -11.350110054016113
    7. '               ' → logprob: -13.225110054016113
    8. '          ' → logprob: -13.975110054016113
    9. ' ' → logprob: -14.350110054016113
    10. '         ' → logprob: -14.975110054016113

Token 217: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.001993227982893586
    2. ' Number' → logprob: -6.251993179321289
    3. '       ' → logprob: -10.126993179321289
    4. '   ' → logprob: -11.001993179321289
    5. '           ' → logprob: -11.876993179321289
    6. ' ' → logprob: -14.626993179321289
    7. '        ' → logprob: -15.876993179321289
    8. '  ' → logprob: -16.25199317932129
    9. '    ' → logprob: -16.37699317932129
    10. '         ' → logprob: -16.50199317932129

Token 218: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -6.511406809295295e-06
    2. '('' → logprob: -13.250006675720215
    3. ''' → logprob: -13.750006675720215
    4. ' Unit' → logprob: -14.125006675720215
    5. 'unit' → logprob: -14.375006675720215
    6. 'Number' → logprob: -14.625006675720215
    7. '<Unit' → logprob: -14.875006675720215
    8. '   ' → logprob: -15.625006675720215
    9. 'Units' → logprob: -15.625006675720215
    10. '"' → logprob: -15.625006675720215

Token 219: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.6312321753939614e-05
    2. '(' → logprob: -10.750036239624023
    3. '("' → logprob: -11.625036239624023
    4. ''' → logprob: -12.375036239624023
    5. ' ('' → logprob: -13.750036239624023
    6. '(
' → logprob: -15.500036239624023
    7. '   ' → logprob: -16.375036239624023
    8. '(',' → logprob: -17.000036239624023
    9. ''s' → logprob: -17.750036239624023
    10. '('',' → logprob: -17.875036239624023

Token 220: 'Man' (ID: 2246)
  Prédit: 'Man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Man' → logprob: -0.0054056961089372635
    2. ''' → logprob: -6.005405902862549
    3. '万' → logprob: -6.505405902862549
    4. 'man' → logprob: -7.380405902862549
    5. 'マン' → logprob: -7.380405902862549
    6. ' Man' → logprob: -9.88040542602539
    7. '"' → logprob: -10.00540542602539
    8. '\'' → logprob: -11.13040542602539
    9. 'Ман' → logprob: -11.25540542602539
    10. 'Wan' → logprob: -11.88040542602539

Token 221: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -3.8219583075260743e-05
    2. ',' → logprob: -11.125038146972656
    3. ''' → logprob: -11.250038146972656
    4. ''',' → logprob: -12.125038146972656
    5. ')',' → logprob: -13.375038146972656
    6. ' ',' → logprob: -14.000038146972656
    7. '",' → logprob: -14.375038146972656
    8. '   ' → logprob: -14.500038146972656
    9. '"',' → logprob: -14.500038146972656
    10. '''' → logprob: -15.625038146972656

Token 222: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.2520498037338257
    2. ' ' → logprob: -1.5020498037338257
    3. '16' → logprob: -9.627049446105957
    4. '   ' → logprob: -10.127049446105957
    5. ')' → logprob: -12.252049446105957
    6. '    ' → logprob: -13.502049446105957
    7. '  ' → logprob: -13.689549446105957
    8. '40' → logprob: -13.877049446105957
    9. '0' → logprob: -14.314549446105957
    10. '1' → logprob: -14.439549446105957

Token 223: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.250911712646484
    4. '1' → logprob: -17.875911712646484
    5. ')' → logprob: -17.938411712646484
    6. '0' → logprob: -18.313411712646484
    7. '４' → logprob: -18.500911712646484
    8. '```' → logprob: -19.188411712646484
    9. '۴' → logprob: -19.250911712646484
    10. '  ' → logprob: -19.313411712646484

Token 224: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18345040082931519
    2. '),
' → logprob: -1.80845046043396
    3. ')' → logprob: -5.808450222015381
    4. '),

' → logprob: -7.433450222015381
    5. '),
' → logprob: -9.808450698852539
    6. '   ' → logprob: -11.183450698852539
    7. ''),' → logprob: -11.433450698852539
    8. ' ),' → logprob: -11.558450698852539
    9. ' ),
' → logprob: -12.433450698852539
    10. ''),
' → logprob: -12.808450698852539

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04863198846578598
    2. 'Number' → logprob: -3.0486319065093994
    3. ' Number' → logprob: -10.17363166809082
    4. '       ' → logprob: -12.54863166809082
    5. 'Unit' → logprob: -13.17363166809082
    6. '          ' → logprob: -14.42363166809082
    7. '   ' → logprob: -15.04863166809082
    8. '               ' → logprob: -15.54863166809082
    9. '            ' → logprob: -16.67363166809082
    10. '         ' → logprob: -17.54863166809082

Token 226: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.0034407691564410925
    2. '           ' → logprob: -6.253440856933594
    3. ' Number' → logprob: -6.503440856933594
    4. '   ' → logprob: -11.753440856933594
    5. '       ' → logprob: -12.878440856933594
    6. 'Unit' → logprob: -14.003440856933594
    7. ' ' → logprob: -14.128440856933594
    8. '          ' → logprob: -15.128440856933594
    9. '         ' → logprob: -15.503440856933594
    10. '  ' → logprob: -16.253440856933594

Token 227: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.00010509284038562328
    2. 'Number' → logprob: -9.875104904174805
    3. '('' → logprob: -10.500104904174805
    4. ''' → logprob: -11.125104904174805
    5. 'unit' → logprob: -13.000104904174805
    6. ' Unit' → logprob: -13.500104904174805
    7. '<Unit' → logprob: -13.625104904174805
    8. '   ' → logprob: -13.875104904174805
    9. 'User' → logprob: -13.875104904174805
    10. '[' → logprob: -14.250104904174805

Token 228: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.009117921814322472
    2. ''' → logprob: -4.88411808013916
    3. '(' → logprob: -7.38411808013916
    4. ''O' → logprob: -7.50911808013916
    5. ' ('' → logprob: -8.50911808013916
    6. ' '' → logprob: -9.88411808013916
    7. '('',' → logprob: -10.50911808013916
    8. '   ' → logprob: -11.38411808013916
    9. '(
' → logprob: -11.75911808013916
    10. '(',' → logprob: -11.75911808013916

Token 229: 'Oku' (ID: 190512)
  Prédit: 'Oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Oku' → logprob: -0.004084808751940727
    2. ''O' → logprob: -5.629084587097168
    3. ''' → logprob: -8.379084587097168
    4. 'O' → logprob: -8.504084587097168
    5. 'Ok' → logprob: -10.754084587097168
    6. 'Ori' → logprob: -11.504084587097168
    7. 'Oi' → logprob: -12.379084587097168
    8. 'oku' → logprob: -12.379084587097168
    9. ' Oku' → logprob: -12.504084587097168
    10. '`' → logprob: -13.754084587097168

Token 230: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.003712784731760621
    2. ',' → logprob: -5.7537126541137695
    3. '4' → logprob: -7.7537126541137695
    4. ''' → logprob: -10.50371265411377
    5. '   ' → logprob: -11.37871265411377
    6. ' ',' → logprob: -11.62871265411377
    7. '",' → logprob: -11.75371265411377
    8. '14' → logprob: -11.87871265411377
    9. ''',' → logprob: -12.50371265411377
    10. '16' → logprob: -12.62871265411377

Token 231: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.6326022744178772
    2. ' ' → logprob: -0.7576022744178772
    3. '   ' → logprob: -13.50760269165039
    4. ',' → logprob: -14.75760269165039
    5. ')' → logprob: -15.07010269165039
    6. '4' → logprob: -15.32010269165039
    7. ' ,' → logprob: -16.19510269165039
    8. '  ' → logprob: -16.32010269165039
    9. '    ' → logprob: -16.63260269165039
    10. '=' → logprob: -16.63260269165039

Token 232: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.750710487365723
    4. '８' → logprob: -17.000709533691406
    5. '  ' → logprob: -18.000709533691406
    6. ')' → logprob: -18.313209533691406
    7. '৮' → logprob: -18.625709533691406
    8. '८' → logprob: -18.688209533691406
    9. '۸' → logprob: -18.813209533691406
    10. '=' → logprob: -19.188209533691406

Token 233: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.3160538077354431
    2. '),' → logprob: -1.316053867340088
    3. ')' → logprob: -6.066053867340088
    4. '           ' → logprob: -8.19105339050293
    5. '),
' → logprob: -9.06605339050293
    6. '       ' → logprob: -10.31605339050293
    7. '),

' → logprob: -10.81605339050293
    8. '   ' → logprob: -12.06605339050293
    9. ' ),
' → logprob: -12.31605339050293
    10. '],
' → logprob: -13.44105339050293

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06202123686671257
    2. 'Number' → logprob: -2.812021255493164
    3. ' Number' → logprob: -9.937021255493164
    4. '       ' → logprob: -12.562021255493164
    5. 'Unit' → logprob: -14.187021255493164
    6. '          ' → logprob: -14.687021255493164
    7. '               ' → logprob: -14.937021255493164
    8. '   ' → logprob: -15.312021255493164
    9. '         ' → logprob: -16.687021255493164
    10. '            ' → logprob: -16.812021255493164

Token 235: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.0142618827521801
    2. '           ' → logprob: -4.264261722564697
    3. ' Number' → logprob: -9.264262199401855
    4. '   ' → logprob: -13.514262199401855
    5. '       ' → logprob: -13.639262199401855
    6. '          ' → logprob: -14.514262199401855
    7. '         ' → logprob: -15.639262199401855
    8. ' ' → logprob: -16.01426124572754
    9. 'number' → logprob: -16.38926124572754
    10. 'Unit' → logprob: -16.51426124572754

Token 236: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.0003254527400713414
    2. '('' → logprob: -8.250325202941895
    3. 'Number' → logprob: -9.875325202941895
    4. 'unit' → logprob: -11.875325202941895
    5. ''' → logprob: -12.625325202941895
    6. 'Token' → logprob: -14.125325202941895
    7. 'System' → logprob: -15.375325202941895
    8. ''s' → logprob: -15.375325202941895
    9. '['' → logprob: -15.500325202941895
    10. '[' → logprob: -15.875325202941895

Token 237: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0010830636601895094
    2. ''' → logprob: -7.251082897186279
    3. '(' → logprob: -8.251083374023438
    4. ' ('' → logprob: -9.501083374023438
    5. ' '' → logprob: -10.626083374023438
    6. '   ' → logprob: -13.126083374023438
    7. '(',' → logprob: -13.251083374023438
    8. ',' → logprob: -13.251083374023438
    9. ''S' → logprob: -13.376083374023438
    10. ' ' → logprob: -13.751083374023438

Token 238: 'Cho' (ID: 12058)
  Prédit: 'Ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ch' → logprob: -0.1606799215078354
    2. 'Cho' → logprob: -1.9106799364089966
    3. ''' → logprob: -8.285679817199707
    4. '兆' → logprob: -9.660679817199707
    5. 'Chu' → logprob: -10.535679817199707
    6. 'ch' → logprob: -10.910679817199707
    7. '``' → logprob: -10.910679817199707
    8. ''ch' → logprob: -10.910679817199707
    9. '"' → logprob: -11.285679817199707
    10. 'cho' → logprob: -12.160679817199707

Token 239: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.004672326147556305
    2. 'r' → logprob: -5.504672527313232
    3. '4' → logprob: -8.754672050476074
    4. 'u' → logprob: -9.254672050476074
    5. 'a' → logprob: -9.504672050476074
    6. ' ',' → logprob: -9.879672050476074
    7. ''' → logprob: -10.004672050476074
    8. 'w' → logprob: -10.379672050476074
    9. 'k' → logprob: -10.504672050476074
    10. 'n' → logprob: -11.004672050476074

Token 240: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.4741877019405365
    2. ' ' → logprob: -0.9741877317428589
    3. '           ' → logprob: -9.849187850952148
    4. '16' → logprob: -10.349187850952148
    5. '   ' → logprob: -10.974187850952148
    6. '               ' → logprob: -13.099187850952148
    7. '       ' → logprob: -14.036687850952148
    8. '4' → logprob: -14.161687850952148
    9. '```' → logprob: -14.161687850952148
    10. '  ' → logprob: -14.536687850952148

Token 241: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -7.44574936106801e-05
    2. ' ' → logprob: -9.62507438659668
    3. '   ' → logprob: -12.25007438659668
    4. '           ' → logprob: -13.25007438659668
    5. '16' → logprob: -14.62507438659668
    6. '```' → logprob: -14.87507438659668
    7. '       ' → logprob: -15.87507438659668
    8. '[' → logprob: -15.87507438659668
    9. '(' → logprob: -16.06257438659668
    10. '  ' → logprob: -16.25007438659668

Token 242: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05926155671477318
    2. '),
' → logprob: -3.0592615604400635
    3. ')' → logprob: -4.559261322021484
    4. ''),' → logprob: -9.809261322021484
    5. '),
' → logprob: -10.184261322021484
    6. '),

' → logprob: -10.434261322021484
    7. '           ' → logprob: -12.059261322021484
    8. ''),
' → logprob: -12.059261322021484
    9. '       ' → logprob: -13.059261322021484
    10. ',' → logprob: -13.184261322021484

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02327168732881546
    2. 'Number' → logprob: -3.7732717990875244
    3. 'Unit' → logprob: -11.273271560668945
    4. ' Number' → logprob: -11.773271560668945
    5. '          ' → logprob: -12.898271560668945
    6. '       ' → logprob: -13.148271560668945
    7. '   ' → logprob: -14.273271560668945
    8. '               ' → logprob: -15.148271560668945
    9. '            ' → logprob: -15.523271560668945
    10. '         ' → logprob: -16.148271560668945

Token 244: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.0005631613312289119
    2. '           ' → logprob: -7.500563144683838
    3. ' Number' → logprob: -11.500563621520996
    4. '   ' → logprob: -17.25056266784668
    5. 'Unit' → logprob: -17.50056266784668
    6. '       ' → logprob: -17.62556266784668
    7. '          ' → logprob: -17.87556266784668
    8. 'number' → logprob: -18.25056266784668
    9. ' ' → logprob: -19.00056266784668
    10. '               ' → logprob: -19.62556266784668

Token 245: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.0013373857364058495
    2. 'Number' → logprob: -6.62633752822876
    3. 'Optional' → logprob: -12.501337051391602
    4. 'Option' → logprob: -13.251337051391602
    5. 'unit' → logprob: -14.001337051391602
    6. '(' → logprob: -14.001337051391602
    7. 'Token' → logprob: -14.376337051391602
    8. '('' → logprob: -14.501337051391602
    9. '[' → logprob: -14.626337051391602
    10. 'uint' → logprob: -15.251337051391602

Token 246: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.021325575187802315
    2. ''' → logprob: -4.021325588226318
    3. '(' → logprob: -5.896325588226318
    4. '(',' → logprob: -8.89632511138916
    5. ' '' → logprob: -9.39632511138916
    6. ' ('' → logprob: -9.89632511138916
    7. '',' → logprob: -10.27132511138916
    8. '('',' → logprob: -10.27132511138916
    9. ',' → logprob: -10.77132511138916
    10. ' (' → logprob: -11.39632511138916

Token 247: 'Ke' (ID: 15640)
  Prédit: 'Ke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ke' → logprob: -0.0005685218493454158
    2. 'kei' → logprob: -7.875568389892578
    3. 'Ken' → logprob: -9.750568389892578
    4. 'Kan' → logprob: -10.250568389892578
    5. ' Kei' → logprob: -10.250568389892578
    6. 'Gen' → logprob: -11.125568389892578
    7. 'Hai' → logprob: -11.125568389892578
    8. 'Ei' → logprob: -12.125568389892578
    9. 'Han' → logprob: -12.125568389892578
    10. 'Hei' → logprob: -13.000568389892578

Token 248: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0023758886381983757
    2. 'n' → logprob: -6.127376079559326
    3. 'I' → logprob: -9.127375602722168
    4. 'y' → logprob: -10.752375602722168
    5. 'iy' → logprob: -11.752375602722168
    6. '   ' → logprob: -11.877375602722168
    7. '    ' → logprob: -12.002375602722168
    8. 'is' → logprob: -12.127375602722168
    9. ' i' → logprob: -12.252375602722168
    10. ' ' → logprob: -12.752375602722168

Token 249: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0026121633127331734
    2. ''' → logprob: -6.877612113952637
    3. '14' → logprob: -7.627612113952637
    4. 'n' → logprob: -8.002612113952637
    5. 'r' → logprob: -8.127612113952637
    6. ' ',' → logprob: -8.502612113952637
    7. '   ' → logprob: -10.252612113952637
    8. '4' → logprob: -10.252612113952637
    9. '',
' → logprob: -10.877612113952637
    10. 'a' → logprob: -11.127612113952637

Token 250: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.01603507250547409
    2. ' ' → logprob: -4.141035079956055
    3. '   ' → logprob: -15.766035079956055
    4. '18' → logprob: -16.328535079956055
    5. '4' → logprob: -16.453535079956055
    6. ' ' → logprob: -16.703535079956055
    7. '14' → logprob: -16.766035079956055
    8. ' 
' → logprob: -16.891035079956055
    9. ' sixteen' → logprob: -16.891035079956055
    10. '17' → logprob: -16.953535079956055

Token 251: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. ' sixteen' → logprob: -15.875024795532227
    4. '１６' → logprob: -17.062524795532227
    5. '016' → logprob: -17.312524795532227
    6. '20' → logprob: -18.000024795532227
    7. '<|end|>' → logprob: -18.062524795532227
    8. '\
' → logprob: -18.062524795532227
    9. '```' → logprob: -18.250024795532227
    10. '(' → logprob: -18.812524795532227

Token 252: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3010076582431793
    2. '),
' → logprob: -1.551007628440857
    3. ')' → logprob: -3.0510077476501465
    4. '       ' → logprob: -8.551007270812988
    5. '           ' → logprob: -9.301007270812988
    6. '),
' → logprob: -9.551007270812988
    7. '   ' → logprob: -9.676007270812988
    8. '],' → logprob: -10.176007270812988
    9. ')]' → logprob: -10.301007270812988
    10. '],
' → logprob: -10.926007270812988

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25412803888320923
    2. 'Number' → logprob: -1.5041279792785645
    3. ' Number' → logprob: -6.2541279792785645
    4. '       ' → logprob: -8.879128456115723
    5. '          ' → logprob: -10.254128456115723
    6. 'Unit' → logprob: -10.254128456115723
    7. '   ' → logprob: -10.504128456115723
    8. '               ' → logprob: -11.379128456115723
    9. '18' → logprob: -12.129128456115723
    10. '16' → logprob: -12.254128456115723

Token 254: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.0037268034648150206
    2. '           ' → logprob: -5.628726959228516
    3. ' Number' → logprob: -9.378726959228516
    4. '       ' → logprob: -11.628726959228516
    5. '   ' → logprob: -11.628726959228516
    6. '          ' → logprob: -11.753726959228516
    7. '20' → logprob: -12.128726959228516
    8. 'Unit' → logprob: -12.503726959228516
    9. '               ' → logprob: -12.753726959228516
    10. '         ' → logprob: -13.378726959228516

Token 255: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.016147097572684288
    2. 'Number' → logprob: -4.141147136688232
    3. 'Token' → logprob: -9.391146659851074
    4. '('' → logprob: -11.391146659851074
    5. 'unit' → logprob: -12.266146659851074
    6. 'Units' → logprob: -12.641146659851074
    7. 'List' → logprob: -13.266146659851074
    8. 'User' → logprob: -13.391146659851074
    9. '<Unit' → logprob: -13.766146659851074
    10. 'Variable' → logprob: -14.141146659851074

Token 256: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.006404131650924683
    2. '(' → logprob: -5.131403923034668
    3. ''' → logprob: -8.506403923034668
    4. ',' → logprob: -8.756403923034668
    5. '(',' → logprob: -10.381403923034668
    6. ' ('' → logprob: -10.631403923034668
    7. 'Number' → logprob: -10.881403923034668
    8. ' ' → logprob: -11.381403923034668
    9. ' (' → logprob: -12.131403923034668
    10. '(Number' → logprob: -12.256403923034668

Token 257: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.010614565573632717
    2. 'Gin' → logprob: -4.885614395141602
    3. 'Gen' → logprob: -6.510614395141602
    4. 'Sai' → logprob: -7.135614395141602
    5. 'Gan' → logprob: -8.385614395141602
    6. 'Sho' → logprob: -8.885614395141602
    7. 'Gy' → logprob: -9.510614395141602
    8. 'Gun' → logprob: -10.635614395141602
    9. 'Hai' → logprob: -10.635614395141602
    10. 'Ga' → logprob: -10.760614395141602

Token 258: 'ai' (ID: 1361)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.142048180103302
    2. 'ai' → logprob: -2.1420481204986572
    3. 'a' → logprob: -4.892048358917236
    4. 'en' → logprob: -5.392048358917236
    5. 'i' → logprob: -6.767048358917236
    6. 'un' → logprob: -7.642048358917236
    7. 'o' → logprob: -8.517047882080078
    8. 'oku' → logprob: -8.642047882080078
    9. 'Sen' → logprob: -8.767047882080078
    10. 'in' → logprob: -8.892047882080078

Token 259: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.000586991140153259
    2. 'n' → logprob: -7.625586986541748
    3. 't' → logprob: -10.500587463378906
    4. ' ',' → logprob: -11.125587463378906
    5. ''' → logprob: -11.250587463378906
    6. '",' → logprob: -12.125587463378906
    7. 'a' → logprob: -12.375587463378906
    8. 'k' → logprob: -12.625587463378906
    9. '16' → logprob: -12.750587463378906
    10. 'u' → logprob: -12.875587463378906

Token 260: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.251930832862854
    2. ' ' → logprob: -1.501930832862854
    3. '202' → logprob: -14.751931190490723
    4. ')' → logprob: -15.689431190490723
    5. '   ' → logprob: -15.751931190490723
    6. ' ' → logprob: -15.876931190490723
    7. '24' → logprob: -15.876931190490723
    8. '```' → logprob: -16.314430236816406
    9. '2' → logprob: -16.376930236816406
    10. '=' → logprob: -16.939430236816406

Token 261: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.62507438659668
    4. '24' → logprob: -19.75007438659668
    5. '202' → logprob: -20.12507438659668
    6. '2' → logprob: -20.12507438659668
    7. '```' → logprob: -20.87507438659668
    8. '  ' → logprob: -21.00007438659668
    9. '(' → logprob: -21.37507438659668
    10. '    ' → logprob: -22.00007438659668

Token 262: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1658884435892105
    2. ')' → logprob: -2.415888547897339
    3. '),
' → logprob: -2.790888547897339
    4. ')]' → logprob: -7.41588830947876
    5. '],' → logprob: -7.79088830947876
    6. '           ' → logprob: -7.79088830947876
    7. '       ' → logprob: -8.290888786315918
    8. ',' → logprob: -8.915888786315918
    9. ']' → logprob: -9.040888786315918
    10. '   ' → logprob: -9.290888786315918

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25452932715415955
    2. 'Number' → logprob: -1.504529356956482
    3. ' Number' → logprob: -6.1295294761657715
    4. '       ' → logprob: -8.379528999328613
    5. 'Unit' → logprob: -9.254528999328613
    6. '   ' → logprob: -9.879528999328613
    7. '          ' → logprob: -10.629528999328613
    8. '               ' → logprob: -11.504528999328613
    9. '         ' → logprob: -12.754528999328613
    10. '            ' → logprob: -13.629528999328613

Token 264: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.007687901146709919
    2. '           ' → logprob: -5.007688045501709
    3. ' Number' → logprob: -7.007688045501709
    4. '   ' → logprob: -10.13268756866455
    5. '       ' → logprob: -10.75768756866455
    6. ' ' → logprob: -13.00768756866455
    7. 'Unit' → logprob: -13.75768756866455
    8. '          ' → logprob: -14.00768756866455
    9. '               ' → logprob: -14.25768756866455
    10. '         ' → logprob: -14.50768756866455

Token 265: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.007857399992644787
    2. 'Number' → logprob: -4.882857322692871
    3. 'Token' → logprob: -8.507857322692871
    4. 'Of' → logprob: -10.007857322692871
    5. 'User' → logprob: -13.257857322692871
    6. 'Option' → logprob: -14.132857322692871
    7. 'umber' → logprob: -14.757857322692871
    8. '<Unit' → logprob: -14.757857322692871
    9. 'Optional' → logprob: -15.257857322692871
    10. 'of' → logprob: -15.632857322692871

Token 266: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.004717295523732901
    2. ''' → logprob: -6.0047173500061035
    3. '(' → logprob: -6.1297173500061035
    4. ' ('' → logprob: -10.129716873168945
    5. ' '' → logprob: -12.004716873168945
    6. '('',' → logprob: -12.254716873168945
    7. '(',' → logprob: -13.129716873168945
    8. '(
' → logprob: -13.379716873168945
    9. ' (' → logprob: -13.504716873168945
    10. ',' → logprob: -13.754716873168945

Token 267: 'Jo' (ID: 32698)
  Prédit: 'Jo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Jo' → logprob: -0.013095766305923462
    2. 'J' → logprob: -4.388095855712891
    3. 'Joe' → logprob: -7.763095855712891
    4. 'Jy' → logprob: -10.01309585571289
    5. 'jo' → logprob: -10.76309585571289
    6. 'Sai' → logprob: -11.01309585571289
    7. 'Jose' → logprob: -11.13809585571289
    8. 'Jos' → logprob: -11.51309585571289
    9. 'Jog' → logprob: -11.63809585571289
    10. 'Ji' → logprob: -12.26309585571289

Token 268: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -7.93448489275761e-05
    2. ''' → logprob: -10.000079154968262
    3. '24' → logprob: -11.625079154968262
    4. '21' → logprob: -12.125079154968262
    5. '',
' → logprob: -12.375079154968262
    6. '",' → logprob: -12.750079154968262
    7. ' ',' → logprob: -12.875079154968262
    8. ',' → logprob: -13.000079154968262
    9. '23' → logprob: -13.250079154968262
    10. '4' → logprob: -14.000079154968262

Token 269: ' ' (ID: 220)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.038042064756155014
    2. ' ' → logprob: -3.2880420684814453
    3. '   ' → logprob: -15.663042068481445
    4. '  ' → logprob: -16.163042068481445
    5. ')' → logprob: -16.663042068481445
    6. '    ' → logprob: -16.850542068481445
    7. ''' → logprob: -17.413042068481445
    8. '```' → logprob: -17.600542068481445
    9. '26' → logprob: -17.600542068481445
    10. '25' → logprob: -17.788042068481445

Token 270: '24' (ID: 1494)
  Prédit: '24'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '(' → logprob: -17.25009536743164
    4. '  ' → logprob: -17.75009536743164
    5. '   ' → logprob: -17.81259536743164
    6. '
' → logprob: -18.68759536743164
    7. '```' → logprob: -18.75009536743164
    8. '4' → logprob: -19.00009536743164
    9. '25' → logprob: -19.12509536743164
    10. '244' → logprob: -19.56259536743164

Token 271: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06418328732252121
    2. '),
' → logprob: -2.939183235168457
    3. ')' → logprob: -4.689183235168457
    4. '   ' → logprob: -11.064183235168457
    5. ',' → logprob: -11.189183235168457
    6. '),

' → logprob: -11.814183235168457
    7. '),
' → logprob: -11.814183235168457
    8. '           ' → logprob: -11.939183235168457
    9. '       ' → logprob: -11.939183235168457
    10. ',
' → logprob: -13.689183235168457

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47493454813957214
    2. 'Number' → logprob: -0.9749345779418945
    3. ' Number' → logprob: -7.4749345779418945
    4. '       ' → logprob: -8.599934577941895
    5. '          ' → logprob: -10.474934577941895
    6. '               ' → logprob: -10.599934577941895
    7. 'Unit' → logprob: -10.599934577941895
    8. '   ' → logprob: -10.974934577941895
    9. '         ' → logprob: -12.599934577941895
    10. '             ' → logprob: -13.474934577941895

Token 273: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -6.337155355140567e-05
    2. '           ' → logprob: -10.250062942504883
    3. ' Number' → logprob: -10.500062942504883
    4. '   ' → logprob: -14.750062942504883
    5. 'Unit' → logprob: -17.500062942504883
    6. ' ' → logprob: -17.875062942504883
    7. '       ' → logprob: -18.500062942504883
    8. '          ' → logprob: -20.125062942504883
    9. '         ' → logprob: -20.500062942504883
    10. '_Number' → logprob: -20.625062942504883

Token 274: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.01140689104795456
    2. 'Number' → logprob: -4.761406898498535
    3. 'Token' → logprob: -5.886406898498535
    4. 'System' → logprob: -13.011406898498535
    5. '('' → logprob: -13.261406898498535
    6. '[' → logprob: -13.511406898498535
    7. 'User' → logprob: -13.511406898498535
    8. 'List' → logprob: -13.886406898498535
    9. 'Variable' → logprob: -14.511406898498535
    10. 'Of' → logprob: -15.011406898498535

Token 275: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.09373784065246582
    2. ''' → logprob: -2.718737840652466
    3. '(' → logprob: -3.843737840652466
    4. 'Number' → logprob: -6.593737602233887
    5. ' ('' → logprob: -8.718737602233887
    6. ' ' → logprob: -9.093737602233887
    7. ' '' → logprob: -9.218737602233887
    8. ' (' → logprob: -9.593737602233887
    9. '(
' → logprob: -9.968737602233887
    10. ',' → logprob: -10.218737602233887

Token 276: 'Jo' (ID: 32698)
  Prédit: 'Kan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kan' → logprob: -0.5875767469406128
    2. 'Ko' → logprob: -1.8375767469406128
    3. 'K' → logprob: -2.5875768661499023
    4. 'J' → logprob: -2.7125768661499023
    5. 'Jo' → logprob: -2.9625768661499023
    6. 'Dou' → logprob: -4.212576866149902
    7. 'Dan' → logprob: -4.337576866149902
    8. 'Jun' → logprob: -4.587576866149902
    9. 'Dok' → logprob: -4.837576866149902
    10. 'Gen' → logprob: -4.962576866149902

Token 277: '',' (ID: 787)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '25' → logprob: -0.38003212213516235
    2. '26' → logprob: -2.1300320625305176
    3. '(' → logprob: -3.2550320625305176
    4. '28' → logprob: -4.005032062530518
    5. '24' → logprob: -4.005032062530518
    6. 'a' → logprob: -4.005032062530518
    7. 'e' → logprob: -4.505032062530518
    8. 'o' → logprob: -4.505032062530518
    9. ',' → logprob: -4.755032062530518
    10. '27' → logprob: -5.005032062530518

Token 278: ' ' (ID: 220)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '28' → logprob: -0.11283189058303833
    2. ' ' → logprob: -2.2378318309783936
    3. '(' → logprob: -11.862832069396973
    4. ' (' → logprob: -13.862832069396973
    5. '30' → logprob: -14.925332069396973
    6. '32' → logprob: -15.612832069396973
    7. '   ' → logprob: -15.800332069396973
    8. ''' → logprob: -15.862832069396973
    9. '  ' → logprob: -16.175331115722656
    10. ' 
' → logprob: -16.300331115722656

Token 279: '24' (ID: 1494)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '28' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '30' → logprob: -15.625123977661133
    4. '(' → logprob: -16.000123977661133
    5. '32' → logprob: -16.687623977661133
    6. '   ' → logprob: -17.062623977661133
    7. '24' → logprob: -17.500123977661133
    8. '...' → logprob: -17.812623977661133
    9. '26' → logprob: -17.875123977661133
    10. '```' → logprob: -18.125123977661133

Token 280: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2873610854148865
    2. '),
' → logprob: -1.7873611450195312
    3. ')' → logprob: -2.6623611450195312
    4. '+' → logprob: -4.912361145019531
    5. '1' → logprob: -7.162361145019531
    6. '2' → logprob: -7.537361145019531
    7. ')]' → logprob: -7.537361145019531
    8. '6' → logprob: -8.037361145019531
    9. ' ),' → logprob: -8.287361145019531
    10. '),

' → logprob: -8.287361145019531

Token 281: '     ' (ID: 530)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14270108938217163
    2. 'Number' → logprob: -2.3927011489868164
    3. '       ' → logprob: -4.267701148986816
    4. ']' → logprob: -4.517701148986816
    5. ',' → logprob: -5.392701148986816
    6. '<|end|>' → logprob: -5.517701148986816
    7. ')' → logprob: -5.892701148986816
    8. ' Number' → logprob: -6.267701148986816
    9. '   ' → logprob: -6.392701148986816
    10. '          ' → logprob: -8.142701148986816

Token 282: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9434474110603333
    2. 'Number' → logprob: -1.1934473514556885
    3. '           ' → logprob: -1.4434473514556885
    4. ',
' → logprob: -3.5684473514556885
    5. ']' → logprob: -3.8184473514556885
    6. '       ' → logprob: -4.693447589874268
    7. '   ' → logprob: -5.193447589874268
    8. ')' → logprob: -5.943447589874268
    9. '],' → logprob: -6.568447589874268
    10. ' Number' → logprob: -7.818447589874268

Token 283: ' duplicate' (ID: 41010)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.0005079957190901041
    2. ' Number' → logprob: -7.750507831573486
    3. '           ' → logprob: -9.875508308410645
    4. ']' → logprob: -12.125508308410645
    5. '   ' → logprob: -12.125508308410645
    6. '...' → logprob: -12.500508308410645
    7. '<|end|>' → logprob: -13.375508308410645
    8. ' ' → logprob: -13.750508308410645
    9. 'None' → logprob: -13.750508308410645
    10. '_number' → logprob: -13.750508308410645

Token 284: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4702831208705902
    2. ',
' → logprob: -1.5952831506729126
    3. ']' → logprob: -2.220283031463623
    4. '<|end|>' → logprob: -3.595283031463623
    5. '   ' → logprob: -4.345283031463623
    6. ')' → logprob: -4.345283031463623
    7. '       ' → logprob: -5.470283031463623
    8. '           ' → logprob: -5.845283031463623
    9. '<|end|>' → logprob: -6.595283031463623
    10. 'Number' → logprob: -8.595283508300781

Token 285: ' ' (ID: 220)
  Prédit: ' intentional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intentional' → logprob: -1.7035696506500244
    2. ' deliberate' → logprob: -2.4535696506500244
    3. ' testing' → logprob: -2.5785696506500244
    4. ' debugging' → logprob: -2.5785696506500244
    5. '<|end|>' → logprob: -2.7035696506500244
    6. ''' → logprob: -2.8285696506500244
    7. 'possible' → logprob: -2.9535696506500244
    8. '#' → logprob: -2.9535696506500244
    9. ')' → logprob: -3.3285696506500244
    10. ' possible' → logprob: -3.5785696506500244

Token 286: '126' (ID: 16576)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6332157850265503
    2. 'testing' → logprob: -2.88321590423584
    3. ' '' → logprob: -3.25821590423584
    4. '#' → logprob: -3.63321590423584
    5. '"' → logprob: -3.75821590423584
    6. ' testing' → logprob: -4.00821590423584
    7. 'special' → logprob: -4.00821590423584
    8. ' ' → logprob: -4.13321590423584
    9. ')' → logprob: -4.25821590423584
    10. 'unit' → logprob: -4.50821590423584

Token 287: '�' (ID: 10160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: '�' (ID: 96)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' example' (ID: 4994)
  Prédit: 'Unicode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unicode' → logprob: -1.5452488660812378
    2. 'range' → logprob: -1.9202488660812378
    3. 'the' → logprob: -2.0452489852905273
    4. '<|end|>' → logprob: -2.2952489852905273
    5. 'code' → logprob: -2.4202489852905273
    6. 'Japanese' → logprob: -3.1702489852905273
    7. 'J' → logprob: -3.6702489852905273
    8. 'unicode' → logprob: -3.9202489852905273
    9. 'source' → logprob: -4.045248985290527
    10. '#' → logprob: -4.170248985290527

Token 291: '?
' (ID: 3901)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3877151608467102
    2. ',
' → logprob: -1.5127151012420654
    3. ']' → logprob: -3.1377151012420654
    4. '   ' → logprob: -3.5127151012420654
    5. '       ' → logprob: -4.2627153396606445
    6. '           ' → logprob: -4.8877153396606445
    7. '<|end|>' → logprob: -6.1377153396606445
    8. ')' → logprob: -6.2627153396606445
    9. ' ,' → logprob: -7.1377153396606445
    10. ' ]' → logprob: -8.262715339660645

Token 292: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5367999076843262
    2. ')' → logprob: -2.036799907684326
    3. '<|end|>' → logprob: -2.161799907684326
    4. ',
' → logprob: -2.536799907684326
    5. '           ' → logprob: -3.161799907684326
    6. '   ' → logprob: -3.661799907684326
    7. '       ' → logprob: -5.036799907684326
    8. ']' → logprob: -5.286799907684326
    9. '<|end|>' → logprob: -6.161799907684326
    10. ' ' → logprob: -6.411799907684326

Token 293: ' Number' (ID: 9184)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5925688147544861
    2. 'Number' (adapté à ' Number') → logprob: -0.8425688147544861
    3. ']' → logprob: -4.842568874359131
    4. ' Number' → logprob: -5.342568874359131
    5. '       ' → logprob: -6.217568874359131
    6. '   ' → logprob: -7.342568874359131
    7. '<|end|>' → logprob: -8.467568397521973
    8. ',' → logprob: -8.967568397521973
    9. '...' → logprob: -9.217568397521973
    10. '          ' → logprob: -9.217568397521973

Token 294: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.015013123862445354
    2. 'Token' → logprob: -4.390013217926025
    3. 'Number' → logprob: -6.640013217926025
    4. 'System' → logprob: -7.015013217926025
    5. 'User' → logprob: -8.515012741088867
    6. 'Variable' → logprob: -10.640012741088867
    7. 'Error' → logprob: -10.765012741088867
    8. 'List' → logprob: -11.265012741088867
    9. 'Value' → logprob: -11.640012741088867
    10. 'Of' → logprob: -11.890012741088867

Token 295: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0026728033553808928
    2. '(' → logprob: -6.1276726722717285
    3. '('',' → logprob: -8.002673149108887
    4. ' ('' → logprob: -9.752673149108887
    5. ''' → logprob: -10.252673149108887
    6. '(',' → logprob: -11.252673149108887
    7. '(
' → logprob: -11.502673149108887
    8. ')' → logprob: -12.377673149108887
    9. '("' → logprob: -12.502673149108887
    10. '<|end|>' → logprob: -12.502673149108887

Token 296: 'Jo' (ID: 32698)
  Prédit: 'Jo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Jo' → logprob: -1.484053134918213
    2. 'Kan' → logprob: -1.984053134918213
    3. 'Sai' → logprob: -1.984053134918213
    4. 'J' → logprob: -2.234053134918213
    5. 'Ei' → logprob: -2.734053134918213
    6. '``' → logprob: -2.984053134918213
    7. 'Ko' → logprob: -3.609053134918213
    8. 'Hai' → logprob: -3.734053134918213
    9. 'Se' → logprob: -3.859053134918213
    10. 'Jy' → logprob: -3.984053134918213

Token 297: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.00232296041212976
    2. ''',' → logprob: -7.127323150634766
    3. ''' → logprob: -7.377323150634766
    4. ',' → logprob: -7.502323150634766
    5. '''' → logprob: -10.002323150634766
    6. '24' → logprob: -10.127323150634766
    7. '",' → logprob: -10.127323150634766
    8. '')' → logprob: -10.377323150634766
    9. ' ',' → logprob: -10.627323150634766
    10. 'Jo' → logprob: -11.252323150634766

Token 298: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10109704732894897
    2. '28' → logprob: -2.3510971069335938
    3. '24' → logprob: -7.226097106933594
    4. '30' → logprob: -9.351097106933594
    5. '(' → logprob: -10.851097106933594
    6. '32' → logprob: -11.476097106933594
    7. '26' → logprob: -11.913597106933594
    8. '<|end|>' → logprob: -11.913597106933594
    9. '29' → logprob: -12.101097106933594
    10. ')' → logprob: -12.101097106933594

Token 299: '24' (ID: 1494)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '28' → logprob: -0.0016647082520648837
    2. ' ' → logprob: -6.751664638519287
    3. '24' → logprob: -7.626664638519287
    4. '32' → logprob: -12.501665115356445
    5. '30' → logprob: -13.876665115356445
    6. '26' → logprob: -14.126665115356445
    7. '(' → logprob: -14.939165115356445
    8. '...' → logprob: -15.189165115356445
    9. '27' → logprob: -15.939165115356445
    10. '36' → logprob: -15.939165115356445

Token 300: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5910565257072449
    2. '),' → logprob: -0.8410565257072449
    3. '),
' → logprob: -5.3410563468933105
    4. '],' → logprob: -5.5910563468933105
    5. ']' → logprob: -5.9660563468933105
    6. ')]' → logprob: -6.0910563468933105
    7. ')])' → logprob: -7.2160563468933105
    8. '])' → logprob: -8.841056823730469
    9. ')],' → logprob: -8.841056823730469
    10. ',' → logprob: -8.966056823730469

Token 301: '     ' (ID: 530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8448784947395325
    2. ']' → logprob: -1.0948784351348877
    3. ',' → logprob: -2.9698784351348877
    4. '...' → logprob: -2.9698784351348877
    5. '       ' → logprob: -3.0948784351348877
    6. ')' → logprob: -3.2198784351348877
    7. '<|end|>' → logprob: -4.094878673553467
    8. ',
' → logprob: -4.219878673553467
    9. '   ' → logprob: -5.094878673553467
    10. ' ]' → logprob: -5.969878673553467

Token 303: ' actually' (ID: 4771)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8963585495948792
    2. 'Number' → logprob: -1.1463584899902344
    3. '           ' → logprob: -1.5213584899902344
    4. '...' → logprob: -4.146358489990234
    5. '<|end|>' → logprob: -4.271358489990234
    6. ' Number' → logprob: -4.521358489990234
    7. '       ' → logprob: -5.646358489990234
    8. ' ]' → logprob: -6.146358489990234
    9. '
' → logprob: -6.271358489990234
    10. '   ' → logprob: -6.396358489990234

Token 304: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' one' (ID: 1001)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39010268449783325
    2. 'Number' → logprob: -2.1401026248931885
    3. '<|end|>' → logprob: -2.7651026248931885
    4. '...' → logprob: -3.0151026248931885
    5. '],' → logprob: -3.8901026248931885
    6. ')' → logprob: -4.265102863311768
    7. '           ' → logprob: -4.640102863311768
    8. ',' → logprob: -4.765102863311768
    9. ' ]' → logprob: -4.890102863311768
    10. '#' → logprob: -5.140102863311768

Token 306: ' '' (ID: 461)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0059449137188494205
    2. ',' → logprob: -6.255944728851318
    3. '   ' → logprob: -6.380944728851318
    4. '       ' → logprob: -6.880944728851318
    5. ' ]' → logprob: -7.255944728851318
    6. '<|end|>' → logprob: -8.505945205688477
    7. '           ' → logprob: -8.880945205688477
    8. ')' → logprob: -9.630945205688477
    9. ',
' → logprob: -10.005945205688477
    10. '],' → logprob: -10.380945205688477

Token 307: 'Jo' (ID: 32698)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6348849534988403
    2. ')' → logprob: -1.1348849534988403
    3. '']' → logprob: -3.009884834289551
    4. 'Jo' → logprob: -3.259884834289551
    5. '')' → logprob: -3.759884834289551
    6. ''' → logprob: -3.759884834289551
    7. ' Jo' → logprob: -6.259884834289551
    8. ')]' → logprob: -6.509884834289551
    9. ' ' → logprob: -6.759884834289551
    10. 'J' → logprob: -6.759884834289551

Token 308: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09712550044059753
    2. '']' → logprob: -3.22212553024292
    3. ')' → logprob: -3.59712553024292
    4. '<|end|>' → logprob: -4.22212553024292
    5. '],' → logprob: -6.09712553024292
    6. ',' → logprob: -6.34712553024292
    7. '   ' → logprob: -6.47212553024292
    8. '')' → logprob: -6.84712553024292
    9. '       ' → logprob: -7.22212553024292
    10. '<|end|>' → logprob: -7.34712553024292

Token 309: ' needed' (ID: 6118)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1047879233956337
    2. '       ' → logprob: -2.729787826538086
    3. ',' → logprob: -3.854787826538086
    4. '   ' → logprob: -4.729787826538086
    5. '           ' → logprob: -6.104787826538086
    6. ' ]' → logprob: -6.979787826538086
    7. ',
' → logprob: -8.229787826538086
    8. ')' → logprob: -8.354787826538086
    9. '<|end|>' → logprob: -8.479787826538086
    10. '],' → logprob: -9.354787826538086

Token 310: ';' (ID: 26)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10939932614564896
    2. '       ' → logprob: -2.4843993186950684
    3. ',' → logprob: -4.359399318695068
    4. ')' → logprob: -5.859399318695068
    5. '           ' → logprob: -6.484399318695068
    6. ',
' → logprob: -6.734399318695068
    7. ' ]' → logprob: -7.109399318695068
    8. '   ' → logprob: -7.234399318695068
    9. '#' → logprob: -9.734399795532227
    10. ')]' → logprob: -10.109399795532227

Token 311: ' standard' (ID: 7024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0746878907084465
    2. '       ' → logprob: -2.949687957763672
    3. '           ' → logprob: -4.699687957763672
    4. ' ]' → logprob: -5.449687957763672
    5. '   ' → logprob: -5.824687957763672
    6. ')' → logprob: -7.074687957763672
    7. '<|end|>' → logprob: -7.574687957763672
    8. 'Number' → logprob: -7.699687957763672
    9. '...' → logprob: -8.324687957763672
    10. '#' → logprob: -8.324687957763672

Token 312: ' J' (ID: 643)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007375542540103197
    2. '       ' → logprob: -5.757375717163086
    3. '   ' → logprob: -6.507375717163086
    4. ')' → logprob: -6.757375717163086
    5. ',' → logprob: -7.257375717163086
    6. '           ' → logprob: -8.257375717163086
    7. '],' → logprob: -8.882375717163086
    8. ' ]' → logprob: -8.882375717163086
    9. ',
' → logprob: -9.382375717163086
    10. ']
' → logprob: -9.757375717163086

Token 313: 'ink' (ID: 881)
  Prédit: 'apanese'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apanese' → logprob: -0.560115396976471
    2. ')' → logprob: -1.9351153373718262
    3. 'Unit' → logprob: -2.560115337371826
    4. '   ' → logprob: -2.935115337371826
    5. 'upyter' → logprob: -3.935115337371826
    6. '<|end|>' → logprob: -3.935115337371826
    7. '[' → logprob: -4.185115337371826
    8. 'avadoc' → logprob: -4.435115337371826
    9. '['' → logprob: -4.810115337371826
    10. '_unit' → logprob: -5.060115337371826

Token 314: 'ou' (ID: 283)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.11455745995044708
    2. 'ou' → logprob: -3.7395575046539307
    3. '```' → logprob: -4.239557266235352
    4. 'ok' → logprob: -4.364557266235352
    5. 'oki' → logprob: -4.614557266235352
    6. 'unit' → logprob: -5.114557266235352
    7. '_unit' → logprob: -5.489557266235352
    8. 'System' → logprob: -5.489557266235352
    9. 'out' → logprob: -5.989557266235352
    10. 'u' → logprob: -5.989557266235352

Token 315: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.5997809767723083
    2. 'oki' → logprob: -1.8497810363769531
    3. 'Unit' → logprob: -2.224781036376953
    4. 'uki' → logprob: -2.974781036376953
    5. ')' → logprob: -3.224781036376953
    6. ']' → logprob: -4.099781036376953
    7. 'iki' → logprob: -4.474781036376953
    8. 'unit' → logprob: -4.974781036376953
    9. 'u' → logprob: -5.474781036376953
    10. '<|end|>' → logprob: -5.474781036376953

Token 316: ' units' (ID: 13306)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09828577190637589
    2. ')' → logprob: -3.223285675048828
    3. '<|end|>' → logprob: -3.598285675048828
    4. '']' → logprob: -4.223285675048828
    5. ',' → logprob: -6.098285675048828
    6. '   ' → logprob: -6.223285675048828
    7. '],' → logprob: -6.473285675048828
    8. '       ' → logprob: -7.223285675048828
    9. '])' → logprob: -7.223285675048828
    10. ')]' → logprob: -7.348285675048828

Token 317: ' are' (ID: 553)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.032411277294158936
    2. ',' → logprob: -3.7824113368988037
    3. '           ' → logprob: -5.657411098480225
    4. '       ' → logprob: -6.407411098480225
    5. ')' → logprob: -6.782411098480225
    6. ',
' → logprob: -6.907411098480225
    7. '   ' → logprob: -7.157411098480225
    8. '[' → logprob: -8.407411575317383
    9. ' ]' → logprob: -8.657411575317383
    10. '],' → logprob: -8.907411575317383

Token 318: ' up' (ID: 869)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.6813135147094727
    2. 'removed' → logprob: -1.6813135147094727
    3. '[
' → logprob: -2.6813135147094727
    4. '           ' → logprob: -3.1813135147094727
    5. '...' → logprob: -3.3063135147094727
    6. 'not' → logprob: -3.3063135147094727
    7. '[' → logprob: -3.5563135147094727
    8. '['' → logprob: -4.306313514709473
    9. ']' → logprob: -4.681313514709473
    10. '[]' → logprob: -4.806313514709473

Token 319: ' to' (ID: 316)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35916584730148315
    2. '<|end|>' → logprob: -1.609165906906128
    3. 'to' → logprob: -3.734165906906128
    4. ' ' → logprob: -4.359165668487549
    5. ' to' → logprob: -4.359165668487549
    6. '],' → logprob: -4.984165668487549
    7. ')' → logprob: -5.234165668487549
    8. '...' → logprob: -5.359165668487549
    9. ',' → logprob: -5.859165668487549
    10. '0' → logprob: -5.984165668487549

Token 320: ' '' (ID: 461)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.11965012550354
    2. ''' → logprob: -2.11965012550354
    3. ')' → logprob: -2.11965012550354
    4. ']' → logprob: -2.36965012550354
    5. ' ' → logprob: -3.11965012550354
    6. '           ' → logprob: -3.36965012550354
    7. '28' → logprob: -3.74465012550354
    8. '30' → logprob: -3.74465012550354
    9. '18' → logprob: -4.119649887084961
    10. '29' → logprob: -4.244649887084961

Token 321: 'Jo' (ID: 32698)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1606026887893677
    2. ' ' → logprob: -1.9106026887893677
    3. ')' → logprob: -2.160602569580078
    4. '')' → logprob: -2.285602569580078
    5. '30' → logprob: -3.285602569580078
    6. '24' → logprob: -3.348102569580078
    7. '''' → logprob: -3.473102569580078
    8. 'Jo' → logprob: -4.035602569580078
    9. '25' → logprob: -4.285602569580078
    10. '...' → logprob: -4.285602569580078

Token 322: ''' (ID: 6)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.07747558504343033
    2. ']' → logprob: -3.0774755477905273
    3. ''' → logprob: -4.702475547790527
    4. '')' → logprob: -4.702475547790527
    5. '',' → logprob: -5.327475547790527
    6. ')' → logprob: -5.827475547790527
    7. '       ' → logprob: -7.702475547790527
    8. ''],' → logprob: -8.077475547790527
    9. '']
' → logprob: -8.077475547790527
    10. '   ' → logprob: -8.202475547790527

Token 323: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21522726118564606
    2. '       ' → logprob: -1.9652272462844849
    3. ',' → logprob: -3.2152273654937744
    4. '   ' → logprob: -5.090227127075195
    5. ')' → logprob: -5.840227127075195
    6. '           ' → logprob: -6.340227127075195
    7. ' ]' → logprob: -6.590227127075195
    8. ',
' → logprob: -7.340227127075195
    9. '<|end|>' → logprob: -9.090227127075195
    10. '],' → logprob: -9.340227127075195

Token 324: '24' (ID: 1494)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.224499225616455
    2. '           ' → logprob: -1.724499225616455
    3. '       ' → logprob: -1.849499225616455
    4. ']' → logprob: -2.099499225616455
    5. ')]' → logprob: -2.724499225616455
    6. '24' → logprob: -2.974499225616455
    7. ' ]' → logprob: -3.349499225616455
    8. ' ' → logprob: -4.099499225616455
    9. '   ' → logprob: -4.724499225616455
    10. '])' → logprob: -4.849499225616455

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012033097445964813
    2. '),' → logprob: -5.512032985687256
    3. '')' → logprob: -6.012032985687256
    4. '   ' → logprob: -7.012032985687256
    5. ')]' → logprob: -7.012032985687256
    6. '       ' → logprob: -7.512032985687256
    7. '<|end|>' → logprob: -7.512032985687256
    8. ' )' → logprob: -7.512032985687256
    9. ')
' → logprob: -7.887032985687256
    10. ']' → logprob: -7.887032985687256

Token 326: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21457213163375854
    2. ']' → logprob: -1.7145721912384033
    3. '   ' → logprob: -5.464571952819824
    4. '           ' → logprob: -5.714571952819824
    5. ')' → logprob: -5.839571952819824
    6. ' ]' → logprob: -6.214571952819824
    7. ',' → logprob: -8.089571952819824
    8. '#' → logprob: -9.589571952819824
    9. '[' → logprob: -9.964571952819824
    10. '])' → logprob: -10.464571952819824

Token 327: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.049245093017816544
    2. ']' → logprob: -3.5492451190948486
    3. '       ' → logprob: -4.6742448806762695
    4. '           ' → logprob: -4.7992448806762695
    5. '   ' → logprob: -7.0492448806762695
    6. ' Number' → logprob: -7.6742448806762695
    7. 'Unit' → logprob: -8.54924488067627
    8. ']
' → logprob: -9.17424488067627
    9. '#' → logprob: -10.04924488067627
    10. '          ' → logprob: -11.79924488067627

Token 328: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.00782924983650446
    2. 'Token' → logprob: -5.507829189300537
    3. 'Number' → logprob: -6.507829189300537
    4. ')' → logprob: -7.257829189300537
    5. 'System' → logprob: -7.882829189300537
    6. 'Units' → logprob: -7.882829189300537
    7. ']' → logprob: -8.132829666137695
    8. 'Of' → logprob: -8.882829666137695
    9. 'Tokens' → logprob: -10.132829666137695
    10. 'User' → logprob: -10.257829666137695

Token 329: '('' (ID: 706)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.4803098142147064
    2. '('' → logprob: -0.9803098440170288
    3. ''' → logprob: -5.855309963226318
    4. ''',' → logprob: -6.480309963226318
    5. '(',' → logprob: -7.730309963226318
    6. '',' → logprob: -7.980309963226318
    7. '(' → logprob: -8.48030948638916
    8. '(',',' → logprob: -8.48030948638916
    9. ',' → logprob: -9.10530948638916
    10. ' ('' → logprob: -9.48030948638916

Token 330: 'Jo' (ID: 32698)
  Prédit: 'Kan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kan' → logprob: -1.133104681968689
    2. 'Jo' → logprob: -1.758104681968689
    3. 'Tai' → logprob: -2.2581048011779785
    4. 'T' → logprob: -3.0081048011779785
    5. 'K' → logprob: -3.1331048011779785
    6. 'G' → logprob: -3.1331048011779785
    7. 'Se' → logprob: -3.7581048011779785
    8. 'J' → logprob: -3.7581048011779785
    9. '``' → logprob: -4.1331048011779785
    10. 'Ei' → logprob: -4.3831048011779785

Token 331: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0024190605618059635
    2. ''' → logprob: -6.8774189949035645
    3. ',' → logprob: -7.7524189949035645
    4. ''',' → logprob: -7.8774189949035645
    5. '24' → logprob: -8.627419471740723
    6. '')' → logprob: -9.002419471740723
    7. '''' → logprob: -10.127419471740723
    8. '",' → logprob: -10.377419471740723
    9. '23' → logprob: -11.002419471740723
    10. ''),' → logprob: -11.002419471740723

Token 332: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0753149539232254
    2. '24' → logprob: -2.825314998626709
    3. '28' → logprob: -4.325314998626709
    4. '30' → logprob: -12.13781452178955
    5. '26' → logprob: -12.20031452178955
    6. '32' → logprob: -12.32531452178955
    7. ' ' → logprob: -12.76281452178955
    8. '25' → logprob: -13.13781452178955
    9. '27' → logprob: -13.20031452178955
    10. '36' → logprob: -14.01281452178955

Token 333: '24' (ID: 1494)
  Prédit: '24'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.11896728724241257
    2. '28' → logprob: -2.243967294692993
    3. ' ' → logprob: -5.118967056274414
    4. '32' → logprob: -9.368967056274414
    5. '36' → logprob: -11.306467056274414
    6. '30' → logprob: -11.743967056274414
    7. '27' → logprob: -11.868967056274414
    8. '20' → logprob: -12.493967056274414
    9. '4' → logprob: -12.743967056274414
    10. '48' → logprob: -12.993967056274414

Token 334: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2076898217201233
    2. '),' → logprob: -1.7076897621154785
    3. ')]' → logprob: -6.3326897621154785
    4. ')])' → logprob: -6.4576897621154785
    5. '),
' → logprob: -6.5826897621154785
    6. '])' → logprob: -6.9576897621154785
    7. ']' → logprob: -9.207690238952637
    8. ')
' → logprob: -9.207690238952637
    9. '],' → logprob: -9.332690238952637
    10. '       ' → logprob: -9.707690238952637

Token 335: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5086809396743774
    2. ']' → logprob: -1.5086809396743774
    3. '           ' → logprob: -1.8836809396743774
    4. '   ' → logprob: -4.383680820465088
    5. 'Number' → logprob: -5.258680820465088
    6. '<|end|>' → logprob: -6.258680820465088
    7. '...' → logprob: -6.383680820465088
    8. ' ]' → logprob: -6.508680820465088
    9. ')' → logprob: -6.758680820465088
    10. ' Number' → logprob: -8.008681297302246

Token 336: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.6335573792457581
    2. ']' → logprob: -0.8835573792457581
    3. '       ' → logprob: -3.2585573196411133
    4. '   ' → logprob: -4.633557319641113
    5. '           ' → logprob: -5.008557319641113
    6. ' Number' → logprob: -7.633557319641113
    7. ']
' → logprob: -8.758557319641113
    8. ')' → logprob: -9.008557319641113
    9. '#' → logprob: -9.133557319641113
    10. 'Unit' → logprob: -9.508557319641113

Token 337: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.00017481597024016082
    2. 'System' → logprob: -9.500174522399902
    3. '('' → logprob: -10.000174522399902
    4. 'Token' → logprob: -10.250174522399902
    5. 'Number' → logprob: -12.000174522399902
    6. 'unit' → logprob: -13.000174522399902
    7. 'Units' → logprob: -13.375174522399902
    8. ''' → logprob: -13.750174522399902
    9. '(' → logprob: -13.875174522399902
    10. '<Unit' → logprob: -14.125174522399902

Token 338: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6297581195831299
    2. '('',' → logprob: -0.8797581195831299
    3. '(' → logprob: -4.004757881164551
    4. ''',' → logprob: -4.879757881164551
    5. '(',' → logprob: -5.129757881164551
    6. ''' → logprob: -5.254757881164551
    7. ',' → logprob: -5.629757881164551
    8. '(',',' → logprob: -5.629757881164551
    9. ')' → logprob: -6.504757881164551
    10. '',' → logprob: -6.504757881164551

Token 339: 'J' (ID: 41)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -1.2631176710128784
    2. 'None' → logprob: -2.013117790222168
    3. 'Jo' → logprob: -2.263117790222168
    4. ''' → logprob: -2.763117790222168
    5. ')' → logprob: -2.888117790222168
    6. 'T' → logprob: -3.138117790222168
    7. 'Se' → logprob: -3.263117790222168
    8. '''' → logprob: -3.638117790222168
    9. 'Ke' → logprob: -3.763117790222168
    10. 'Kan' → logprob: -3.888117790222168

Token 340: 'ou' (ID: 283)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.013884566724300385
    2. 'py' → logprob: -5.763884544372559
    3. ')' → logprob: -6.388884544372559
    4. '<|end|>' → logprob: -7.138884544372559
    5. 'un' → logprob: -7.263884544372559
    6. 'oji' → logprob: -7.513884544372559
    7. 'Unit' → logprob: -7.638884544372559
    8. '   ' → logprob: -7.638884544372559
    9. 'uyo' → logprob: -7.638884544372559
    10. 'oy' → logprob: -7.763884544372559

Token 341: '',' (ID: 787)
  Prédit: ''),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.4393898844718933
    2. '')' → logprob: -1.314389944076538
    3. '',' → logprob: -3.439389944076538
    4. ''' → logprob: -3.564389944076538
    5. ''),
' → logprob: -4.189389705657959
    6. '')]' → logprob: -5.814389705657959
    7. 't' → logprob: -6.814389705657959
    8. 'o' → logprob: -6.814389705657959
    9. 'Unit' → logprob: -6.814389705657959
    10. ')' → logprob: -6.939389705657959

Token 342: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1700681746006012
    2. '28' → logprob: -1.9200681447982788
    3. '20' → logprob: -4.920068264007568
    4. '24' → logprob: -6.045068264007568
    5. '32' → logprob: -9.54506778717041
    6. '30' → logprob: -11.42006778717041
    7. '16' → logprob: -11.67006778717041
    8. ',' → logprob: -12.23256778717041
    9. '26' → logprob: -12.29506778717041
    10. ')' → logprob: -12.42006778717041

Token 343: '24' (ID: 1494)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '28' → logprob: -0.014206287451088428
    2. ' ' → logprob: -4.264206409454346
    3. '24' → logprob: -10.889205932617188
    4. '20' → logprob: -12.139205932617188
    5. '26' → logprob: -12.264205932617188
    6. '25' → logprob: -12.576705932617188
    7. '(' → logprob: -12.826705932617188
    8. '32' → logprob: -13.576705932617188
    9. '16' → logprob: -13.639205932617188
    10. '27' → logprob: -13.889205932617188

Token 344: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04889596253633499
    2. '),' → logprob: -3.048896074295044
    3. '),
' → logprob: -8.423895835876465
    4. ')])' → logprob: -10.798895835876465
    5. ')
' → logprob: -10.923895835876465
    6. ')]' → logprob: -11.673895835876465
    7. '')' → logprob: -12.298895835876465
    8. '])' → logprob: -12.423895835876465
    9. '))' → logprob: -12.548895835876465
    10. '<|end|>' → logprob: -12.548895835876465

Token 345: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5479170680046082
    2. ']' → logprob: -1.047917127609253
    3. ')' → logprob: -3.172917127609253
    4. '   ' → logprob: -4.172916889190674
    5. '           ' → logprob: -4.672916889190674
    6. ' ]' → logprob: -6.422916889190674
    7. '<|end|>' → logprob: -6.672916889190674
    8. ')]' → logprob: -7.422916889190674
    9. '#' → logprob: -8.422917366027832
    10. '...' → logprob: -8.922917366027832

Token 346: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -0.44064605236053467
    2. ']' → logprob: -1.1906460523605347
    3. '       ' → logprob: -3.690646171569824
    4. '   ' → logprob: -3.940646171569824
    5. '           ' → logprob: -5.065646171569824
    6. ' Number' → logprob: -6.940646171569824
    7. ')' → logprob: -8.065646171569824
    8. 'Unit' → logprob: -9.315646171569824
    9. ' ]' → logprob: -9.440646171569824
    10. '#' → logprob: -10.315646171569824

Token 347: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.0001617035741219297
    2. 'Number' → logprob: -9.000162124633789
    3. 'Token' → logprob: -11.250162124633789
    4. 'System' → logprob: -11.750162124633789
    5. 'User' → logprob: -11.875162124633789
    6. ' Unit' → logprob: -13.375162124633789
    7. ' ' → logprob: -13.500162124633789
    8. '   ' → logprob: -13.750162124633789
    9. '<|end|>' → logprob: -14.125162124633789
    10. ')' → logprob: -14.250162124633789

Token 348: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.004060232546180487
    2. '('',' → logprob: -5.7540602684021
    3. '(' → logprob: -7.8790602684021
    4. ''' → logprob: -9.004059791564941
    5. 'Unit' → logprob: -9.129059791564941
    6. '(',' → logprob: -9.629059791564941
    7. '('_' → logprob: -10.629059791564941
    8. '(None' → logprob: -10.629059791564941
    9. '(
' → logprob: -10.754059791564941
    10. ' ('' → logprob: -10.754059791564941

Token 349: 'J' (ID: 41)
  Prédit: 'J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.3425043523311615
    2. ''' → logprob: -2.9675042629241943
    3. '')' → logprob: -3.2175042629241943
    4. 'None' → logprob: -3.2175042629241943
    5. ')' → logprob: -3.7175042629241943
    6. '''' → logprob: -4.217504501342773
    7. 'K' → logprob: -4.467504501342773
    8. 'Tok' → logprob: -4.842504501342773
    9. '24' → logprob: -4.967504501342773
    10. ''),' → logprob: -5.342504501342773

Token 350: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.017286697402596474
    2. 'o' → logprob: -4.392286777496338
    3. 'out' → logprob: -7.267286777496338
    4. 'oueur' → logprob: -7.517286777496338
    5. ')' → logprob: -7.642286777496338
    6. '__' → logprob: -8.51728630065918
    7. 'class' → logprob: -8.64228630065918
    8. '```' → logprob: -8.76728630065918
    9. ']' → logprob: -9.01728630065918
    10. '   ' → logprob: -9.01728630065918

Token 351: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3951878249645233
    2. '',' → logprob: -1.8951878547668457
    3. ')' → logprob: -2.6451878547668457
    4. ''' → logprob: -3.3951878547668457
    5. ''),' → logprob: -3.3951878547668457
    6. '')]' → logprob: -4.645187854766846
    7. '''' → logprob: -4.770187854766846
    8. ')',' → logprob: -4.770187854766846
    9. ']' → logprob: -5.895187854766846
    10. '')
' → logprob: -6.270187854766846

Token 352: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4744502604007721
    2. '24' → logprob: -0.9744502305984497
    3. ')' → logprob: -8.09945011138916
    4. ' )' → logprob: -11.34945011138916
    5. '28' → logprob: -11.47445011138916
    6. '<|end|>' → logprob: -11.59945011138916
    7. '25' → logprob: -12.09945011138916
    8. '...' → logprob: -12.66195011138916
    9. '32' → logprob: -12.66195011138916
    10. ',' → logprob: -12.72445011138916

Token 353: '24' (ID: 1494)
  Prédit: '24'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.02616269327700138
    2. ' ' → logprob: -3.776162624359131
    3. '28' → logprob: -5.901162624359131
    4. '32' → logprob: -9.776163101196289
    5. '30' → logprob: -10.026163101196289
    6. '48' → logprob: -10.776163101196289
    7. '<|end|>' → logprob: -11.401163101196289
    8. '0' → logprob: -12.276163101196289
    9. ')' → logprob: -12.401163101196289
    10. '36' → logprob: -12.651163101196289

Token 354: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7384801506996155
    2. '),' → logprob: -0.7384801506996155
    3. ')]' → logprob: -3.4884800910949707
    4. '),
' → logprob: -4.488480091094971
    5. ')])' → logprob: -6.988480091094971
    6. ']' → logprob: -7.863480091094971
    7. '       ' → logprob: -7.988480091094971
    8. '])' → logprob: -8.238480567932129
    9. '],' → logprob: -8.738480567932129
    10. ')],' → logprob: -8.988480567932129

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24949654936790466
    2. ']' → logprob: -1.999496579170227
    3. ')' → logprob: -2.9994964599609375
    4. '           ' → logprob: -3.9994964599609375
    5. '   ' → logprob: -4.4994964599609375
    6. ')]' → logprob: -5.8744964599609375
    7. ' ]' → logprob: -6.4994964599609375
    8. '])' → logprob: -7.9994964599609375
    9. '#' → logprob: -8.374496459960938
    10. '[' → logprob: -8.749496459960938

Token 356: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.040568187832832336
    2. '       ' → logprob: -3.4155681133270264
    3. '   ' → logprob: -5.6655683517456055
    4. '           ' → logprob: -6.5405683517456055
    5. ' ]' → logprob: -6.5405683517456055
    6. ')' → logprob: -8.290568351745605
    7. ',' → logprob: -9.415568351745605
    8. ']
' (adapté à ' ]
') → logprob: -9.915568351745605
    9. '[' → logprob: -10.540568351745605
    10. ',
' → logprob: -11.165568351745605

Token 357: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ' The' (ID: 623)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' problem' (ID: 4792)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.9771621823310852
    2. 'unit' → logprob: -1.2271621227264404
    3. 'power' → logprob: -2.7271621227264404
    4. 'max' → logprob: -2.7271621227264404
    5. 'powers' → logprob: -2.9771621227264404
    6. 'name' → logprob: -3.1021621227264404
    7. 'base' → logprob: -4.3521623611450195
    8. 'names' → logprob: -4.3521623611450195
    9. '_name' → logprob: -4.7271623611450195
    10. 'largest' → logprob: -4.8521623611450195

Token 361: ' states' (ID: 9407)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: ' units' (ID: 13306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' appear' (ID: 7680)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: ' like' (ID: 1299)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5326876640319824
    2. '<|end|>' → logprob: -1.7826876640319824
    3. ' =' → logprob: -2.6576876640319824
    4. ' to' → logprob: -3.0326876640319824
    5. '[' → logprob: -3.2826876640319824
    6. '.' → logprob: -4.032687664031982
    7. ':' → logprob: -4.657687664031982
    8. 'to' → logprob: -4.782687664031982
    9. '[:' → logprob: -5.282687664031982
    10. '#' → logprob: -5.282687664031982

Token 365: ' "' (ID: 392)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4468461275100708
    2. '<|end|>' → logprob: -1.6968461275100708
    3. '[
' → logprob: -2.1968460083007812
    4. '[' → logprob: -2.1968460083007812
    5. '...' → logprob: -2.4468460083007812
    6. '[]' → logprob: -2.4468460083007812
    7. '['' → logprob: -3.4468460083007812
    8. '<|end|>' → logprob: -3.6968460083007812
    9. ''' → logprob: -3.8218460083007812
    10. 'self' → logprob: -3.9468460083007812

Token 366: '�' (ID: 10160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.645363450050354
    2. ']' → logprob: -1.645363450050354
    3. '<|end|>' → logprob: -2.0203633308410645
    4. ''' → logprob: -2.1453633308410645
    5. '   ' → logprob: -2.2703633308410645
    6. '[' → logprob: -2.5203633308410645
    7. '[
' → logprob: -3.0203633308410645
    8. '<|end|>' → logprob: -4.0203633308410645
    9. '```' → logprob: -4.5203633308410645
    10. ' ' → logprob: -4.5203633308410645

Token 367: '�' (ID: 96)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36804133653640747
    2. '<|end|>' → logprob: -1.8680412769317627
    3. ')' → logprob: -2.8680412769317627
    4. ']' → logprob: -3.2430412769317627
    5. '[
' → logprob: -3.8680412769317627
    6. ' ' → logprob: -4.743041515350342
    7. '#' → logprob: -4.993041515350342
    8. '<|end|>' → logprob: -5.118041515350342
    9. '_' → logprob: -5.743041515350342
    10. ''' → logprob: -6.368041515350342

Token 368: '(' (ID: 7)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: 'じ' (ID: 29884)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4311855435371399
    2. ']' → logprob: -1.3061854839324951
    3. '[' → logprob: -4.431185722351074
    4. '"]' → logprob: -4.431185722351074
    5. '"' → logprob: -4.556185722351074
    6. '   ' → logprob: -4.806185722351074
    7. '[
' → logprob: -5.056185722351074
    8. '")' → logprob: -5.431185722351074
    9. '<|end|>' → logprob: -5.431185722351074
    10. ',' → logprob: -6.181185722351074

Token 370: 'ょ' (ID: 42993)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04637083038687706
    2. '")' → logprob: -3.4213707447052
    3. '<|end|>' → logprob: -5.796370983123779
    4. ')"' → logprob: -6.046370983123779
    5. ')")' → logprob: -6.171370983123779
    6. '"' → logprob: -6.546370983123779
    7. '[' → logprob: -7.296370983123779
    8. ')">' → logprob: -7.296370983123779
    9. ')
' → logprob: -8.171370506286621
    10. '<|end|>' → logprob: -8.546370506286621

Token 371: ')",' (ID: 23442)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4881812036037445
    2. '[' → logprob: -1.613181233406067
    3. '")' → logprob: -2.7381811141967773
    4. '<|end|>' → logprob: -2.7381811141967773
    5. ']' → logprob: -4.238181114196777
    6. '"' → logprob: -4.363181114196777
    7. '[
' → logprob: -4.488181114196777
    8. '   ' → logprob: -5.238181114196777
    9. '<|end|>' → logprob: -6.113181114196777
    10. '",' → logprob: -6.738181114196777

Token 372: ' "' (ID: 392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '�' (ID: 13493)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0997399315237999
    2. '<|end|>' → logprob: -2.4747400283813477
    3. '   ' → logprob: -5.974740028381348
    4. '       ' → logprob: -6.224740028381348
    5. '<|end|>' → logprob: -6.474740028381348
    6. ' ]' → logprob: -6.474740028381348
    7. '[' → logprob: -7.349740028381348
    8. ')' → logprob: -7.599740028381348
    9. 'Name' → logprob: -8.349740028381348
    10. '...' → logprob: -8.349740028381348

Token 374: '�' (ID: 241)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.437054306268692
    2. '")' → logprob: -1.6870542764663696
    3. '"' → logprob: -2.687054395675659
    4. '<|end|>' → logprob: -2.812054395675659
    5. '[' → logprob: -5.18705415725708
    6. '<|end|>' → logprob: -5.56205415725708
    7. 'u' → logprob: -5.68705415725708
    8. ')"' → logprob: -6.06205415725708
    9. ''' → logprob: -6.62455415725708
    10. '#' → logprob: -6.74955415725708

Token 375: '",' (ID: 672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.006913661956787
    2. '",' → logprob: -1.381913661956787
    3. '")' → logprob: -2.506913661956787
    4. '<|end|>' → logprob: -2.506913661956787
    5. ')",' → logprob: -2.881913661956787
    6. '[' → logprob: -2.881913661956787
    7. '"' → logprob: -3.381913661956787
    8. ']' → logprob: -4.506913661956787
    9. ')"' → logprob: -5.006913661956787
    10. '#' → logprob: -5.006913661956787

Token 376: ' "' (ID: 392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: '京' (ID: 3017)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: '",' (ID: 672)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8929973244667053
    2. '<|end|>' → logprob: -1.0179972648620605
    3. '[' → logprob: -2.6429972648620605
    4. ',' → logprob: -3.3929972648620605
    5. ')' → logprob: -3.5179972648620605
    6. '<|end|>' → logprob: -4.1429972648620605
    7. '']' → logprob: -4.2679972648620605
    8. '"]' → logprob: -4.6429972648620605
    9. '   ' → logprob: -4.8929972648620605
    10. '...' → logprob: -5.0179972648620605

Token 379: ' "' (ID: 392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '兆' (ID: 164969)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: '",' (ID: 672)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21251998841762543
    2. ',' → logprob: -2.837519884109497
    3. '<|end|>' → logprob: -3.087519884109497
    4. '...' → logprob: -4.087520122528076
    5. '[' → logprob: -4.212520122528076
    6. '   ' → logprob: -4.212520122528076
    7. '']' → logprob: -5.087520122528076
    8. '"]' → logprob: -5.087520122528076
    9. '       ' → logprob: -5.337520122528076
    10. ')' → logprob: -5.462520122528076

Token 382: ' "' (ID: 392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: '億' (ID: 81836)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: '",' (ID: 672)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6034073233604431
    2. '<|end|>' → logprob: -0.8534073233604431
    3. '<|end|>' → logprob: -4.353407382965088
    4. ',' → logprob: -5.603407382965088
    5. '[' → logprob: -5.853407382965088
    6. '   ' → logprob: -5.978407382965088
    7. '[
' → logprob: -6.853407382965088
    8. ')' → logprob: -7.103407382965088
    9. '']' → logprob: -7.353407382965088
    10. '       ' → logprob: -7.978407382965088

Token 385: ' "' (ID: 392)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8762868046760559
    2. '       ' → logprob: -1.7512867450714111
    3. '<|end|>' → logprob: -2.376286745071411
    4. '           ' → logprob: -2.501286745071411
    5. ')' → logprob: -2.751286745071411
    6. ',' → logprob: -3.251286745071411
    7. '...' → logprob: -3.501286745071411
    8. '#' → logprob: -3.751286745071411
    9. '[' → logprob: -4.00128698348999
    10. '   ' → logprob: -4.62628698348999

Token 386: '万' (ID: 6848)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.205498456954956
    2. '])' → logprob: -2.205498456954956
    3. '万' → logprob: -2.205498456954956
    4. ')' → logprob: -2.580498456954956
    5. ''' → logprob: -2.705498456954956
    6. '')' → logprob: -2.955498456954956
    7. ']' → logprob: -3.455498456954956
    8. '"' → logprob: -3.580498456954956
    9. '#' → logprob: -3.955498456954956
    10. '十' → logprob: -3.955498456954956

Token 387: '"
' (ID: 1092)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33177250623703003
    2. '<|end|>' → logprob: -1.3317725658416748
    3. '<|end|>' → logprob: -5.081772327423096
    4. '[' → logprob: -5.581772327423096
    5. '   ' → logprob: -5.706772327423096
    6. '[
' → logprob: -6.706772327423096
    7. ',' → logprob: -7.081772327423096
    8. '']' → logprob: -7.206772327423096
    9. ')' → logprob: -7.581772327423096
    10. ' ]' → logprob: -8.206772804260254

Token 388: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: ' #' (ID: 1069)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16714566946029663
    2. '<|end|>' → logprob: -2.0421457290649414
    3. '   ' → logprob: -4.792145729064941
    4. '[' → logprob: -5.417145729064941
    5. '<|end|>' → logprob: -5.417145729064941
    6. '[
' → logprob: -6.417145729064941
    7. '       ' → logprob: -6.542145729064941
    8. ' ]' → logprob: -6.792145729064941
    9. '.' → logprob: -7.417145729064941
    10. ' ' → logprob: -7.417145729064941

Token 390: ' For' (ID: 2214)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: ' the' (ID: 290)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: ' sake' (ID: 39035)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0632845163345337
    2. ')' → logprob: -2.438284397125244
    3. ' next' → logprob: -2.438284397125244
    4. 'def' → logprob: -2.688284397125244
    5. 'units' → logprob: -2.938284397125244
    6. 'unit' → logprob: -3.063284397125244
    7. 'user' → logprob: -3.188284397125244
    8. ']' → logprob: -3.563284397125244
    9. 'self' → logprob: -3.563284397125244
    10. '#' → logprob: -3.688284397125244

Token 393: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' output' (ID: 4733)
  Prédit: ' clarity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clarity' → logprob: -1.254693627357483
    2. 'unit' → logprob: -1.504693627357483
    3. 'correct' → logprob: -2.6296935081481934
    4. 'i' → logprob: -2.7546935081481934
    5. ' correctness' → logprob: -2.7546935081481934
    6. 'continu' → logprob: -3.0046935081481934
    7. 'clar' → logprob: -3.0046935081481934
    8. 'completion' → logprob: -3.3796935081481934
    9. '<|end|>' → logprob: -3.7546935081481934
    10. ' completeness' → logprob: -3.8796935081481934

Token 395: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' we' (ID: 581)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: ' use' (ID: 1199)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3691389560699463
    2. ')' → logprob: -3.1191389560699463
    3. '   ' → logprob: -3.2441389560699463
    4. 'continue' → logprob: -3.3691389560699463
    5. '<|end|>' → logprob: -3.7441389560699463
    6. '#' → logprob: -3.8691389560699463
    7. '<|end|>' → logprob: -3.8691389560699463
    8. ' continue' → logprob: -3.9941389560699463
    9. '']' → logprob: -4.744138717651367
    10. '       ' → logprob: -4.869138717651367

Token 398: ' the' (ID: 290)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.30722522735595703
    2. '['' → logprob: -2.432225227355957
    3. '[]' → logprob: -2.557225227355957
    4. 'Number' → logprob: -3.182225227355957
    5. '[' → logprob: -3.557225227355957
    6. 'the' → logprob: -4.932225227355957
    7. 'standard' → logprob: -5.057225227355957
    8. 'self' → logprob: -5.307225227355957
    9. '[]
' → logprob: -6.432225227355957
    10. '#' → logprob: -6.682225227355957

Token 399: ' units' (ID: 13306)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.0997058153152466
    2. 'correct' → logprob: -1.3497058153152466
    3. '[' → logprob: -1.9747058153152466
    4. '['' → logprob: -2.349705696105957
    5. 'Number' → logprob: -3.224705696105957
    6. 'standard' → logprob: -3.474705696105957
    7. ' correct' → logprob: -4.099705696105957
    8. 'list' → logprob: -4.974705696105957
    9. 'List' → logprob: -4.974705696105957
    10. ''' → logprob: -5.224705696105957

Token 400: ' appearing' (ID: 44748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1392799615859985
    2. 'self' → logprob: -1.3892799615859985
    3. 'Japanese' → logprob: -1.5142799615859985
    4. 'reverse' → logprob: -3.014279842376709
    5. 'ascending' → logprob: -3.764279842376709
    6. 'this' → logprob: -4.014279842376709
    7. '#' → logprob: -4.264279842376709
    8. 'correct' → logprob: -4.264279842376709
    9. 'a' → logprob: -4.389279842376709
    10. 'comments' → logprob: -4.639279842376709

Token 403: ' examples' (ID: 15652)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9481986165046692
    2. 'self' → logprob: -1.9481985569000244
    3. 'Japanese' → logprob: -1.9481985569000244
    4. 'class' → logprob: -2.6981985569000244
    5. 'code' → logprob: -2.9481985569000244
    6. 'unit' → logprob: -3.5731985569000244
    7. 'source' → logprob: -3.6981985569000244
    8. '[
' → logprob: -3.8231985569000244
    9. 'J' → logprob: -4.4481987953186035
    10. 'List' → logprob: -4.5731987953186035

Token 404: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1075310707092285
    2. ']' → logprob: -1.6075310707092285
    3. '<|end|>' → logprob: -1.6075310707092285
    4. '           ' → logprob: -2.1075310707092285
    5. '   ' → logprob: -2.4825310707092285
    6. '[
' → logprob: -4.2325310707092285
    7. '...' → logprob: -4.4825310707092285
    8. '#' → logprob: -4.7325310707092285
    9. '<|end|>' → logprob: -4.9825310707092285
    10. ' ]' → logprob: -5.4825310707092285

Token 406: ' #' (ID: 1069)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5322487950325012
    2. '       ' → logprob: -2.1572487354278564
    3. '#' (adapté à ' #') → logprob: -2.2822487354278564
    4. '           ' → logprob: -2.5322487354278564
    5. '<|end|>' → logprob: -3.4072487354278564
    6. 'Number' → logprob: -3.9072487354278564
    7. '   ' → logprob: -4.4072489738464355
    8. 'self' → logprob: -4.5322489738464355
    9. '[
' → logprob: -4.7822489738464355
    10. '...' → logprob: -5.1572489738464355

Token 407: ' '' (ID: 461)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.377668172121048
    2. '<|end|>' → logprob: -2.2526681423187256
    3. 'Number' → logprob: -2.6276681423187256
    4. '#' → logprob: -3.6276681423187256
    5. '   ' → logprob: -4.127668380737305
    6. '       ' → logprob: -4.377668380737305
    7. '<|end|>' → logprob: -4.377668380737305
    8. '...' → logprob: -4.502668380737305
    9. '[
' → logprob: -4.502668380737305
    10. 'Man' → logprob: -4.752668380737305

Token 408: 'Man' (ID: 2246)
  Prédit: 'Man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Man' → logprob: -0.8001772165298462
    2. ''' → logprob: -1.6751772165298462
    3. ']' → logprob: -2.4251770973205566
    4. '<|end|>' → logprob: -2.8001770973205566
    5. '[' → logprob: -2.9251770973205566
    6. ')' → logprob: -3.3001770973205566
    7. '   ' → logprob: -3.8001770973205566
    8. '')' → logprob: -4.300177097320557
    9. '']' → logprob: -4.300177097320557
    10. '<|end|>' → logprob: -4.425177097320557

Token 409: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6617875695228577
    2. '')' → logprob: -1.036787509918213
    3. ''' → logprob: -2.286787509918213
    4. ')' → logprob: -4.536787509918213
    5. '']' → logprob: -4.786787509918213
    6. '',
' → logprob: -6.036787509918213
    7. '')]' → logprob: -6.161787509918213
    8. ''),' → logprob: -6.786787509918213
    9. ''])' → logprob: -6.786787509918213
    10. '','' → logprob: -8.161787986755371

Token 410: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20337587594985962
    2. '<|end|>' → logprob: -2.453375816345215
    3. ',' → logprob: -3.078375816345215
    4. '   ' → logprob: -4.453375816345215
    5. '<|end|>' → logprob: -5.203375816345215
    6. ',
' → logprob: -5.203375816345215
    7. '
' → logprob: -5.578375816345215
    8. '']' → logprob: -5.578375816345215
    9. '[' → logprob: -5.578375816345215
    10. ' ' → logprob: -5.703375816345215

Token 411: '万' (ID: 6848)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04229702055454254
    2. '<|end|>' → logprob: -4.042296886444092
    3. '')' → logprob: -5.042296886444092
    4. ',' → logprob: -5.417296886444092
    5. ''' → logprob: -5.417296886444092
    6. '),' → logprob: -6.292296886444092
    7. '   ' → logprob: -7.042296886444092
    8. '<|end|>' → logprob: -7.292296886444092
    9. '',' → logprob: -7.417296886444092
    10. ' ' → logprob: -7.417296886444092

Token 412: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8273772597312927
    2. ']' → logprob: -1.3273773193359375
    3. '']' → logprob: -2.3273773193359375
    4. '')' → logprob: -2.4523773193359375
    5. ''' → logprob: -3.4523773193359375
    6. '   ' → logprob: -3.9523773193359375
    7. '<|end|>' → logprob: -4.5773773193359375
    8. '<|end|>' → logprob: -4.5773773193359375
    9. '',' → logprob: -4.8273773193359375
    10. ',' → logprob: -4.9523773193359375

Token 413: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.95915287733078
    2. ')' → logprob: -1.3341529369354248
    3. ' '' → logprob: -2.084152936935425
    4. 'Oku' → logprob: -2.084152936935425
    5. '),' → logprob: -3.459152936935425
    6. ''O' → logprob: -3.834152936935425
    7. '<|end|>' → logprob: -4.834152698516846
    8. ' Oku' → logprob: -4.834152698516846
    9. ' )' → logprob: -5.084152698516846
    10. ' '')' → logprob: -5.459152698516846

Token 414: '10' (ID: 702)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8083564639091492
    2. ''' → logprob: -1.433356523513794
    3. 'Oku' → logprob: -1.558356523513794
    4. '')' → logprob: -3.433356523513794
    5. ' '' → logprob: -4.183356285095215
    6. '),' → logprob: -4.808356285095215
    7. ' )' → logprob: -5.058356285095215
    8. ''O' → logprob: -5.058356285095215
    9. ' ' → logprob: -5.558356285095215
    10. ''),' → logprob: -5.808356285095215

Token 415: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3667599558830261
    2. '^' → logprob: -1.241760015487671
    3. '')' → logprob: -4.866759777069092
    4. '),' → logprob: -5.991759777069092
    5. ',' → logprob: -6.491759777069092
    6. '4' → logprob: -6.616759777069092
    7. '**' → logprob: -7.116759777069092
    8. ')
' → logprob: -7.116759777069092
    9. '[' → logprob: -7.491759777069092
    10. '```' → logprob: -7.616759777069092

Token 416: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.08927074074745178
    2. ' ' → logprob: -2.464270830154419
    3. '   ' → logprob: -8.83927059173584
    4. ')' → logprob: -10.33927059173584
    5. '0' → logprob: -10.46427059173584
    6. ' ' → logprob: -10.46427059173584
    7. '^' → logprob: -10.96427059173584
    8. ''' → logprob: -11.21427059173584
    9. '    ' → logprob: -11.65177059173584
    10. ' )' → logprob: -11.90177059173584

Token 417: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5883997082710266
    2. ']' → logprob: -2.838399648666382
    3. '   ' → logprob: -2.838399648666382
    4. '])' → logprob: -2.838399648666382
    5. '')' → logprob: -2.838399648666382
    6. ''])' → logprob: -3.088399648666382
    7. ')]' → logprob: -3.213399648666382
    8. ')])' → logprob: -3.963399648666382
    9. '']' → logprob: -4.088399887084961
    10. ',' → logprob: -4.213399887084961

Token 418: ' '' (ID: 461)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2634161114692688
    2. '       ' → logprob: -2.013416051864624
    3. '   ' → logprob: -3.388416051864624
    4. ''' → logprob: -3.638416051864624
    5. ']' → logprob: -5.388416290283203
    6. ' '' → logprob: -5.513416290283203
    7. 'Number' → logprob: -5.638416290283203
    8. '               ' → logprob: -5.763416290283203
    9. '<|end|>' → logprob: -5.763416290283203
    10. 'Unit' → logprob: -5.888416290283203

Token 419: 'Oku' (ID: 190512)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8693390488624573
    2. 'Oku' → logprob: -0.8693390488624573
    3. 'Hy' → logprob: -3.2443389892578125
    4. ''H' → logprob: -3.2443389892578125
    5. 'None' → logprob: -4.2443389892578125
    6. 'Hund' → logprob: -4.4943389892578125
    7. '')' → logprob: -5.1193389892578125
    8. 'Han' → logprob: -5.1193389892578125
    9. 'H' → logprob: -5.6193389892578125
    10. ' '' → logprob: -5.8693389892578125

Token 420: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.7282662391662598
    2. '')' → logprob: -1.4782662391662598
    3. ''),' → logprob: -1.7282662391662598
    4. ')' → logprob: -2.8532662391662598
    5. ''' → logprob: -3.2282662391662598
    6. ',' → logprob: -5.60326623916626
    7. '<|end|>' → logprob: -5.72826623916626
    8. '),' → logprob: -5.97826623916626
    9. '')]' → logprob: -7.60326623916626
    10. '[' → logprob: -7.72826623916626

Token 421: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2244299054145813
    2. ',' → logprob: -2.3494298458099365
    3. '<|end|>' → logprob: -2.8494298458099365
    4. '[' → logprob: -3.9744298458099365
    5. '']' → logprob: -4.849430084228516
    6. ')' → logprob: -5.099430084228516
    7. '   ' → logprob: -5.224430084228516
    8. '<|end|>' → logprob: -6.099430084228516
    9. '[
' → logprob: -6.599430084228516
    10. ',
' → logprob: -6.974430084228516

Token 422: '億' (ID: 81836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1750496625900269
    2. '8' → logprob: -1.8000496625900269
    3. '12' → logprob: -1.9250496625900269
    4. ' ' → logprob: -2.1750497817993164
    5. '24' → logprob: -2.1750497817993164
    6. '16' → logprob: -3.1750497817993164
    7. '```' → logprob: -4.300049781799316
    8. ''' → logprob: -4.550049781799316
    9. '4' → logprob: -4.675049781799316
    10. '10' → logprob: -4.800049781799316

Token 423: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6861205697059631
    2. '',' → logprob: -1.5611205101013184
    3. ',' → logprob: -2.3111205101013184
    4. ''),' → logprob: -2.5611205101013184
    5. '),' → logprob: -2.6861205101013184
    6. '')' → logprob: -3.6861205101013184
    7. ''' → logprob: -5.311120510101318
    8. '<|end|>' → logprob: -5.561120510101318
    9. '   ' → logprob: -7.061120510101318
    10. ')',' → logprob: -7.311120510101318

Token 424: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18960778415203094
    2. '10' → logprob: -2.314607858657837
    3. '8' → logprob: -2.939607858657837
    4. '12' → logprob: -4.314607620239258
    5. '16' → logprob: -5.939607620239258
    6. ')' → logprob: -6.189607620239258
    7. '18' → logprob: -6.439607620239258
    8. '20' → logprob: -8.564607620239258
    9. '),' → logprob: -8.689607620239258
    10. ''' → logprob: -9.314607620239258

Token 425: '10' (ID: 702)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '12' → logprob: -0.006422259844839573
    2. ' ' → logprob: -5.13142204284668
    3. '16' → logprob: -7.75642204284668
    4. '8' → logprob: -10.25642204284668
    5. ')' → logprob: -11.50642204284668
    6. '^' → logprob: -12.56892204284668
    7. '```' → logprob: -12.56892204284668
    8. '20' → logprob: -13.19392204284668
    9. '14' → logprob: -13.69392204284668
    10. 'int' → logprob: -13.81892204284668

Token 426: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.19742175936698914
    2. '4' → logprob: -2.3224217891693115
    3. ')' → logprob: -2.8224217891693115
    4. '**' → logprob: -4.322421550750732
    5. '```' → logprob: -5.697421550750732
    6. ',' → logprob: -6.822421550750732
    7. '^)' → logprob: -6.947421550750732
    8. '[' → logprob: -7.447421550750732
    9. '')' → logprob: -7.822421550750732
    10. '\xe2\x81' → logprob: -8.07242202758789

Token 427: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.006306292489171028
    2. '12' → logprob: -5.381306171417236
    3. '4' → logprob: -6.631306171417236
    4. '0' → logprob: -8.256306648254395
    5. ' ' → logprob: -9.381306648254395
    6. '```' → logprob: -11.506306648254395
    7. ')' → logprob: -12.631306648254395
    8. '
' → logprob: -12.756306648254395
    9. '[' → logprob: -14.006306648254395
    10. '16' → logprob: -14.256306648254395

Token 428: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.0085400342941284
    2. '       ' → logprob: -1.7585400342941284
    3. ')]' → logprob: -2.008540153503418
    4. ')' → logprob: -2.508540153503418
    5. ']' → logprob: -2.758540153503418
    6. ',' → logprob: -2.883540153503418
    7. '],' → logprob: -3.008540153503418
    8. '   ' → logprob: -3.508540153503418
    9. '           ' → logprob: -4.008540153503418
    10. '])' → logprob: -4.508540153503418

Token 429: ' '' (ID: 461)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20148926973342896
    2. ''' → logprob: -2.326489210128784
    3. '       ' → logprob: -2.951489210128784
    4. '   ' → logprob: -4.826489448547363
    5. ' '' → logprob: -5.201489448547363
    6. 'Number' → logprob: -5.451489448547363
    7. '          ' → logprob: -5.576489448547363
    8. '#' → logprob: -6.451489448547363
    9. 'Unit' → logprob: -6.451489448547363
    10. ']' → logprob: -6.701489448547363

Token 430: 'Cho' (ID: 12058)
  Prédit: 'Cho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cho' → logprob: -0.5690610408782959
    2. ''' → logprob: -1.194061040878296
    3. 'Ch' → logprob: -2.944061040878296
    4. 'Se' → logprob: -4.444061279296875
    5. 'Ke' → logprob: -4.444061279296875
    6. 'Ten' → logprob: -4.694061279296875
    7. 'Kan' → logprob: -5.444061279296875
    8. 'J' → logprob: -5.444061279296875
    9. 'Jo' → logprob: -5.694061279296875
    10. ' Cho' → logprob: -5.944061279296875

Token 431: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -1.2541011571884155
    2. ''),' → logprob: -1.2541011571884155
    3. '',' → logprob: -1.3791011571884155
    4. ''' → logprob: -2.504101276397705
    5. ')' → logprob: -3.129101276397705
    6. '']' → logprob: -4.129101276397705
    7. '')]' → logprob: -5.004101276397705
    8. ''),
' → logprob: -5.504101276397705
    9. '),' → logprob: -5.754101276397705
    10. '[' → logprob: -5.879101276397705

Token 432: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6163797378540039
    2. '(' → logprob: -1.741379737854004
    3. '',' → logprob: -1.866379737854004
    4. ' (' → logprob: -3.116379737854004
    5. ')' → logprob: -3.616379737854004
    6. ''' → logprob: -4.491379737854004
    7. '[' → logprob: -4.616379737854004
    8. '12' → logprob: -4.616379737854004
    9. '=' → logprob: -5.491379737854004
    10. '<|end|>' → logprob: -5.491379737854004

Token 433: '兆' (ID: 164969)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '16' → logprob: -0.7103000283241272
    2. '20' → logprob: -0.9603000283241272
    3. ' ' → logprob: -2.0852999687194824
    4. ')' → logprob: -8.21030044555664
    5. '24' → logprob: -8.21030044555664
    6. '18' → logprob: -8.46030044555664
    7. ',' → logprob: -8.71030044555664
    8. '(' → logprob: -9.21030044555664
    9. '28' → logprob: -9.33530044555664
    10. '10' → logprob: -9.46030044555664

Token 434: ',' (ID: 11)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.30688801407814026
    2. ',' → logprob: -2.4318881034851074
    3. ')' → logprob: -2.6818881034851074
    4. '')' → logprob: -3.6818881034851074
    5. ''),' → logprob: -4.181888103485107
    6. '12' → logprob: -4.431888103485107
    7. ''' → logprob: -4.556888103485107
    8. '),' → logprob: -4.556888103485107
    9. '       ' → logprob: -5.056888103485107
    10. '   ' → logprob: -5.306888103485107

Token 435: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4395783841609955
    2. '16' → logprob: -1.0645784139633179
    3. '20' → logprob: -5.064578533172607
    4. '24' → logprob: -5.939578533172607
    5. '18' → logprob: -7.064578533172607
    6. ')' → logprob: -7.814578533172607
    7. '<|end|>' → logprob: -8.56457805633545
    8. '17' → logprob: -9.50207805633545
    9. ' 
' → logprob: -9.56457805633545
    10. '```' → logprob: -10.50207805633545

Token 436: '10' (ID: 702)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '16' → logprob: -0.0013469000114127994
    2. ' ' → logprob: -6.626347064971924
    3. '12' → logprob: -10.876346588134766
    4. '```' → logprob: -14.126346588134766
    5. '20' → logprob: -15.001346588134766
    6. 'int' → logprob: -15.563846588134766
    7. '14' → logprob: -15.938846588134766
    8. '24' → logprob: -16.626346588134766
    9. '   ' → logprob: -16.813846588134766
    10. '4' → logprob: -17.001346588134766

Token 437: '^' (ID: 61)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.38037192821502686
    2. '^' → logprob: -1.2553719282150269
    3. ')' → logprob: -3.8803720474243164
    4. '16' → logprob: -5.505372047424316
    5. '12' → logprob: -6.505372047424316
    6. '**' → logprob: -6.755372047424316
    7. '[' → logprob: -7.755372047424316
    8. ' ' → logprob: -7.880372047424316
    9. '^)' → logprob: -7.880372047424316
    10. '0' → logprob: -7.880372047424316

Token 438: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0162856113165617
    2. '16' → logprob: -4.141285419464111
    3. ' ' → logprob: -9.51628589630127
    4. '4' → logprob: -9.76628589630127
    5. '```' → logprob: -10.14128589630127
    6. '0' → logprob: -11.01628589630127
    7. '``' → logprob: -11.26628589630127
    8. '
' → logprob: -11.45378589630127
    9. '   ' → logprob: -12.32878589630127
    10. '(' → logprob: -12.39128589630127

Token 439: '),' (ID: 936)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3244790732860565
    2. ')]' → logprob: -2.324479103088379
    3. '       ' → logprob: -2.699479103088379
    4. ')' → logprob: -2.699479103088379
    5. '   ' → logprob: -3.699479103088379
    6. ',' → logprob: -5.449479103088379
    7. '           ' → logprob: -5.449479103088379
    8. ']
' → logprob: -6.324479103088379
    9. '],' → logprob: -6.324479103088379
    10. '])' → logprob: -6.324479103088379

Token 440: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7391078472137451
    2. '           ' → logprob: -1.3641078472137451
    3. '   ' → logprob: -1.9891078472137451
    4. '...' → logprob: -3.239107847213745
    5. ']' → logprob: -3.364107847213745
    6. 'Number' → logprob: -4.864108085632324
    7. '#' → logprob: -4.864108085632324
    8. ''' → logprob: -5.114108085632324
    9. ')' → logprob: -5.114108085632324
    10. 'def' → logprob: -5.989108085632324

Token 441: 'Ke' (ID: 15640)
  Prédit: 'Ke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ke' → logprob: -0.006592809222638607
    2. 'Ei' → logprob: -6.131592750549316
    3. 'kei' → logprob: -6.631592750549316
    4. 'Se' → logprob: -7.006592750549316
    5. 'Kan' → logprob: -7.506592750549316
    6. 'Te' → logprob: -7.756592750549316
    7. 'G' → logprob: -8.006592750549316
    8. 'Hei' → logprob: -8.756592750549316
    9. 'T' → logprob: -8.881592750549316
    10. 'J' → logprob: -9.381592750549316

Token 442: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00016074994346126914
    2. 'y' → logprob: -10.125161170959473
    3. '   ' → logprob: -10.375161170959473
    4. 'I' → logprob: -11.000161170959473
    5. 'is' → logprob: -11.500161170959473
    6. '```' → logprob: -11.625161170959473
    7. 'iy' → logprob: -11.750161170959473
    8. '       ' → logprob: -12.000161170959473
    9. '    ' → logprob: -12.500161170959473
    10. '
' → logprob: -12.625161170959473

Token 443: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.7409019470214844
    2. ''' → logprob: -1.1159019470214844
    3. '   ' → logprob: -2.3659019470214844
    4. '')' → logprob: -3.1159019470214844
    5. '       ' → logprob: -3.9909019470214844
    6. ''),' → logprob: -4.740901947021484
    7. '=' → logprob: -5.365901947021484
    8. ' ' → logprob: -5.990901947021484
    9. ' =' → logprob: -6.115901947021484
    10. ')' → logprob: -6.240901947021484

Token 444: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2099740505218506
    2. '',' → logprob: -1.5849740505218506
    3. '=' → logprob: -1.9599740505218506
    4. ',' → logprob: -2.0849740505218506
    5. '(' → logprob: -2.5849740505218506
    6. ' (' → logprob: -2.7099740505218506
    7. ''' → logprob: -3.8349740505218506
    8. '<|end|>' → logprob: -3.9599740505218506
    9. ')' → logprob: -4.45997428894043
    10. '[' → logprob: -4.95997428894043

Token 445: '京' (ID: 3017)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0242522954940796
    2. '20' → logprob: -1.0242522954940796
    3. '16' → logprob: -1.2742522954940796
    4. '24' → logprob: -6.774252414703369
    5. '18' → logprob: -7.899252414703369
    6. ')' → logprob: -8.024251937866211
    7. ',' → logprob: -8.649251937866211
    8. '<|end|>' → logprob: -10.024251937866211
    9. '(' → logprob: -10.149251937866211
    10. '...' → logprob: -10.274251937866211

Token 446: ',' (ID: 11)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.1260802000761032
    2. ',' → logprob: -3.126080274581909
    3. ''' → logprob: -3.626080274581909
    4. ')' → logprob: -4.50108003616333
    5. '')' → logprob: -4.50108003616333
    6. '   ' → logprob: -5.25108003616333
    7. ''),' → logprob: -5.25108003616333
    8. '16' → logprob: -6.00108003616333
    9. ')',' → logprob: -6.12608003616333
    10. '(' → logprob: -6.50108003616333

Token 447: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.049811311066150665
    2. ' ' → logprob: -3.174811363220215
    3. '20' → logprob: -5.049811363220215
    4. '18' → logprob: -8.049811363220215
    5. ')' → logprob: -11.049811363220215
    6. '17' → logprob: -11.799811363220215
    7. '(' → logprob: -11.799811363220215
    8. '24' → logprob: -12.174811363220215
    9. '
' → logprob: -12.299811363220215
    10. ' 
' → logprob: -12.612311363220215

Token 448: '10' (ID: 702)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '16' → logprob: -0.0038908147253096104
    2. '20' → logprob: -6.1288909912109375
    3. ' ' → logprob: -6.3788909912109375
    4. '<|end|>' → logprob: -13.628890991210938
    5. '' → logprob: -14.253890991210938
    6. '24' → logprob: -14.566390991210938
    7. '```' → logprob: -14.753890991210938
    8. ' sixteen' → logprob: -14.816390991210938
    9. ' 
' → logprob: -15.066390991210938
    10. '   ' → logprob: -15.066390991210938

Token 449: '^' (ID: 61)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.49042391777038574
    2. '18' → logprob: -1.7404239177703857
    3. '4' → logprob: -2.8654239177703857
    4. ' ' → logprob: -2.8654239177703857
    5. '^' → logprob: -3.2404239177703857
    6. '24' → logprob: -3.8654239177703857
    7. '20' → logprob: -3.9904239177703857
    8. '17' → logprob: -5.365424156188965
    9. '8' → logprob: -5.740424156188965
    10. '**' → logprob: -5.740424156188965

Token 450: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -12.000014305114746
    3. '20' → logprob: -12.500014305114746
    4. '4' → logprob: -13.625014305114746
    5. '```' → logprob: -13.625014305114746
    6. '016' → logprob: -15.187514305114746
    7. '
' → logprob: -15.375014305114746
    8. '``' → logprob: -15.625014305114746
    9. '8' → logprob: -15.687514305114746
    10. '   ' → logprob: -15.687514305114746

Token 451: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29912182688713074
    2. '       ' → logprob: -1.9241218566894531
    3. ')]' → logprob: -2.924121856689453
    4. ']' → logprob: -3.549121856689453
    5. '   ' → logprob: -4.049121856689453
    6. '),' → logprob: -5.174121856689453
    7. '])' → logprob: -6.049121856689453
    8. '           ' → logprob: -6.299121856689453
    9. ')])' → logprob: -6.799121856689453
    10. ')
' → logprob: -7.674121856689453

Token 452: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08555641770362854
    2. '       ' → logprob: -3.5855565071105957
    3. '<|end|>' → logprob: -3.5855565071105957
    4. ']' → logprob: -4.585556507110596
    5. 'Number' → logprob: -5.210556507110596
    6. ')' → logprob: -6.210556507110596
    7. '#' → logprob: -6.335556507110596
    8. '...' → logprob: -6.335556507110596
    9. '<|end|>' → logprob: -6.460556507110596
    10. '   ' → logprob: -7.335556507110596

Token 453: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16314011812210083
    2. 'Number' → logprob: -2.288140058517456
    3. '       ' → logprob: -3.413140058517456
    4. ' Number' → logprob: -4.788140296936035
    5. ']' → logprob: -5.538140296936035
    6. '   ' → logprob: -6.663140296936035
    7. 'Unit' → logprob: -6.663140296936035
    8. '          ' → logprob: -7.913140296936035
    9. ' ]' → logprob: -8.788140296936035
    10. '#' (adapté à ' #') → logprob: -8.788140296936035

Token 454: ' '' (ID: 461)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.21253636479377747
    2. '           ' → logprob: -1.962536334991455
    3. ']' → logprob: -3.712536334991455
    4. '       ' → logprob: -4.212536334991455
    5. '<|end|>' → logprob: -5.587536334991455
    6. ' Number' → logprob: -6.087536334991455
    7. '#' → logprob: -6.337536334991455
    8. '   ' → logprob: -6.837536334991455
    9. 'Unit' → logprob: -7.087536334991455
    10. 'J' → logprob: -8.462536811828613

Token 455: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.04822392761707306
    2. 'Number' → logprob: -3.6732239723205566
    3. 'Unit' → logprob: -4.673223972320557
    4. 'J' → logprob: -5.548223972320557
    5. 'unit' → logprob: -6.548223972320557
    6. '#' → logprob: -6.673223972320557
    7. 'Jo' → logprob: -6.798223972320557
    8. 'Da' → logprob: -7.173223972320557
    9. ']' → logprob: -7.673223972320557
    10. 'def' → logprob: -7.923223972320557

Token 456: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0059370906092226505
    2. 'AI' → logprob: -6.130937099456787
    3. ')' → logprob: -7.380937099456787
    4. ']' → logprob: -7.755937099456787
    5. 'a' → logprob: -7.880937099456787
    6. 'ail' → logprob: -7.880937099456787
    7. '#' → logprob: -8.255936622619629
    8. ''ai' → logprob: -8.630936622619629
    9. 'u' → logprob: -9.005936622619629
    10. '```' → logprob: -9.255936622619629

Token 457: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.04244624078273773
    2. ''' → logprob: -4.167446136474609
    3. ')',' → logprob: -4.917446136474609
    4. ',' → logprob: -5.167446136474609
    5. ':' → logprob: -5.792446136474609
    6. '=' → logprob: -6.667446136474609
    7. ''',' → logprob: -6.667446136474609
    8. ')' → logprob: -6.667446136474609
    9. '':' → logprob: -6.792446136474609
    10. '')' → logprob: -6.792446136474609

Token 458: ' (' (ID: 350)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5088272094726562
    2. ',' → logprob: -1.2588272094726562
    3. '=' → logprob: -3.0088272094726562
    4. ':' → logprob: -4.133827209472656
    5. ''' → logprob: -4.133827209472656
    6. ' =' → logprob: -4.633827209472656
    7. '[' → logprob: -4.758827209472656
    8. '(' → logprob: -5.133827209472656
    9. ' (' → logprob: -6.383827209472656
    10. '   ' → logprob: -6.883827209472656

Token 459: '�' (ID: 13493)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5429297685623169
    2. '24' → logprob: -1.042929768562317
    3. '20' → logprob: -3.0429296493530273
    4. ',' → logprob: -4.542929649353027
    5. ')' → logprob: -5.042929649353027
    6. '```' → logprob: -8.542929649353027
    7. ' ,' → logprob: -8.917929649353027
    8. '28' → logprob: -9.042929649353027
    9. ''' → logprob: -9.105429649353027
    10. '(' → logprob: -9.167929649353027

Token 460: '�' (ID: 241)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.174778699874878
    2. ',' → logprob: -1.299778699874878
    3. ')' → logprob: -1.549778699874878
    4. '24' → logprob: -3.299778699874878
    5. '),' → logprob: -3.424778699874878
    6. ']' → logprob: -3.424778699874878
    7. ' ' → logprob: -4.049778938293457
    8. '],' → logprob: -4.549778938293457
    9. '[]' → logprob: -4.674778938293457
    10. ')]' → logprob: -4.799778938293457

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15277428925037384
    2. '',' → logprob: -2.0277743339538574
    3. ' ' → logprob: -6.652774333953857
    4. '20' → logprob: -6.652774333953857
    5. ' ,' → logprob: -6.777774333953857
    6. ''',' → logprob: -6.777774333953857
    7. ':' → logprob: -7.152774333953857
    8. ''' → logprob: -7.402774333953857
    9. ')' → logprob: -7.652774333953857
    10. '),' → logprob: -7.902774333953857

Token 462: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28572404384613037
    2. '20' → logprob: -1.4107240438461304
    3. '24' → logprob: -5.41072416305542
    4. ')' → logprob: -10.285723686218262
    5. '22' → logprob: -11.410723686218262
    6. '18' → logprob: -11.785723686218262
    7. '<|end|>' → logprob: -12.285723686218262
    8. 'import' → logprob: -12.410723686218262
    9. ' 
' → logprob: -12.660723686218262
    10. ',' → logprob: -12.660723686218262

Token 463: '10' (ID: 702)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.04731554165482521
    2. ' ' → logprob: -3.1723155975341797
    3. '24' → logprob: -5.54731559753418
    4. ')' → logprob: -8.79731559753418
    5. ',' → logprob: -8.92231559753418
    6. '28' → logprob: -10.04731559753418
    7. '32' → logprob: -11.17231559753418
    8. '
' → logprob: -11.29731559753418
    9. '(' → logprob: -12.23481559753418
    10. ' 
' → logprob: -12.29731559753418

Token 464: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.22786204516887665
    2. '20' → logprob: -2.1028621196746826
    3. ',' → logprob: -3.3528621196746826
    4. '24' → logprob: -4.1028618812561035
    5. '**' → logprob: -4.7278618812561035
    6. '=' → logprob: -4.7278618812561035
    7. ')' → logprob: -5.9778618812561035
    8. ' ' → logprob: -5.9778618812561035
    9. '```' → logprob: -6.7278618812561035
    10. '4' → logprob: -7.1028618812561035

Token 465: '20' (ID: 455)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.034702118486166
    2. '20' → logprob: -3.4097020626068115
    3. ' ' → logprob: -6.909702301025391
    4. '4' → logprob: -10.28470230102539
    5. '0' → logprob: -12.03470230102539
    6. '(' → logprob: -12.78470230102539
    7. '```' → logprob: -12.90970230102539
    8. '   ' → logprob: -13.22220230102539
    9. '8' → logprob: -13.34720230102539
    10. '2' → logprob: -13.84720230102539

Token 466: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4264776408672333
    2. '),' → logprob: -1.1764776706695557
    3. '),
' → logprob: -3.8014776706695557
    4. ')]' → logprob: -5.301477432250977
    5. '       ' → logprob: -5.551477432250977
    6. '   ' → logprob: -6.426477432250977
    7. ')
' → logprob: -6.676477432250977
    8. ',' → logprob: -6.926477432250977
    9. ']' → logprob: -7.051477432250977
    10. ')])' → logprob: -7.301477432250977

Token 467: ' '' (ID: 461)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8769645690917969
    2. '       ' → logprob: -1.0019645690917969
    3. ']' → logprob: -2.626964569091797
    4. '   ' → logprob: -3.126964569091797
    5. ')' → logprob: -3.751964569091797
    6. '...' → logprob: -4.001964569091797
    7. '<|end|>' → logprob: -4.376964569091797
    8. '[' → logprob: -5.251964569091797
    9. '#' → logprob: -5.501964569091797
    10. '.' → logprob: -5.626964569091797

Token 468: 'Jo' (ID: 32698)
  Prédit: 'Da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Da' → logprob: -0.9564891457557678
    2. 'Number' → logprob: -1.706489086151123
    3. 'J' → logprob: -2.206489086151123
    4. 'Unit' → logprob: -2.331489086151123
    5. 'Jo' → logprob: -3.081489086151123
    6. 'D' → logprob: -3.206489086151123
    7. 'Dan' → logprob: -3.456489086151123
    8. 'unit' → logprob: -4.581489086151123
    9. 'Num' → logprob: -5.206489086151123
    10. 'H' → logprob: -5.206489086151123

Token 469: ''' (ID: 6)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.12639573216438293
    2. ''' → logprob: -2.3763957023620605
    3. ',' → logprob: -4.8763957023620605
    4. '')' → logprob: -5.1263957023620605
    5. ')' → logprob: -5.7513957023620605
    6. ')',' → logprob: -6.0013957023620605
    7. ''',' → logprob: -7.1263957023620605
    8. '[' → logprob: -7.1263957023620605
    9. ''),' → logprob: -7.3763957023620605
    10. '(' → logprob: -7.8763957023620605

Token 470: ' (' (ID: 350)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.188288152217865
    2. '[' → logprob: -3.1882882118225098
    3. ' =' → logprob: -3.4382882118225098
    4. ',' → logprob: -3.4382882118225098
    5. '=' → logprob: -4.68828821182251
    6. ''' → logprob: -4.68828821182251
    7. '<|end|>' → logprob: -4.93828821182251
    8. ')' → logprob: -5.06328821182251
    9. ']' → logprob: -5.06328821182251
    10. '   ' → logprob: -5.31328821182251

Token 471: '�' (ID: 10160)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '24' → logprob: -0.02359798178076744
    2. ' ' → logprob: -4.1485981941223145
    3. '20' → logprob: -6.0235981941223145
    4. ')' → logprob: -6.0235981941223145
    5. '28' → logprob: -6.6485981941223145
    6. ',' → logprob: -7.3985981941223145
    7. '10' → logprob: -9.148597717285156
    8. '
' → logprob: -9.273597717285156
    9. '4' → logprob: -9.523597717285156
    10. '32' → logprob: -9.523597717285156

Token 472: '�' (ID: 96)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0901477336883545
    2. '',' → logprob: -1.0901477336883545
    3. ')' → logprob: -1.9651477336883545
    4. '24' → logprob: -3.0901477336883545
    5. ''' → logprob: -3.3401477336883545
    6. '')' → logprob: -3.9651477336883545
    7. '<|end|>' → logprob: -4.465147972106934
    8. '[' → logprob: -4.715147972106934
    9. ':' → logprob: -5.215147972106934
    10. '^' → logprob: -5.340147972106934

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3273460865020752
    2. '',' → logprob: -1.3273460865020752
    3. '24' → logprob: -5.702345848083496
    4. ')' → logprob: -5.952345848083496
    5. ''',' → logprob: -6.702345848083496
    6. '21' → logprob: -7.077345848083496
    7. '23' → logprob: -7.202345848083496
    8. '20' → logprob: -7.327345848083496
    9. ''' → logprob: -7.452345848083496
    10. ' ' → logprob: -7.452345848083496

Token 474: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3870517611503601
    2. '24' → logprob: -1.1370518207550049
    3. ')' → logprob: -9.387051582336426
    4. '20' → logprob: -11.137051582336426
    5. '28' → logprob: -11.262051582336426
    6. ',' → logprob: -11.512051582336426
    7. '
' → logprob: -11.512051582336426
    8. ' 
' → logprob: -11.637051582336426
    9. '26' → logprob: -12.137051582336426
    10. '16' → logprob: -12.699551582336426

Token 475: '10' (ID: 702)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '24' → logprob: -0.0011740362970158458
    2. ' ' → logprob: -6.751173973083496
    3. '   ' → logprob: -14.376173973083496
    4. '```' → logprob: -14.376173973083496
    5. '28' → logprob: -14.501173973083496
    6. '
' → logprob: -15.126173973083496
    7. 'int' → logprob: -15.188673973083496
    8. '  ' → logprob: -15.501173973083496
    9. '4' → logprob: -15.938673973083496
    10. ')' → logprob: -16.063674926757812

Token 476: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.24015623331069946
    2. '24' → logprob: -1.6151561737060547
    3. '**' → logprob: -4.615156173706055
    4. '4' → logprob: -6.490156173706055
    5. '^{' → logprob: -7.240156173706055
    6. '0' → logprob: -7.740156173706055
    7. ' ' → logprob: -7.990156173706055
    8. ')' → logprob: -8.240156173706055
    9. '^)' → logprob: -8.240156173706055
    10. '```' → logprob: -8.990156173706055

Token 477: '24' (ID: 1494)
  Prédit: '24'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -1.2233183042553719e-05
    2. '4' → logprob: -12.375012397766113
    3. ' ' → logprob: -13.125012397766113
    4. '28' → logprob: -13.500012397766113
    5. '20' → logprob: -13.750012397766113
    6. '8' → logprob: -14.250012397766113
    7. '```' → logprob: -14.500012397766113
    8. '
' → logprob: -14.500012397766113
    9. '0' → logprob: -14.875012397766113
    10. '(' → logprob: -15.562512397766113

Token 478: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6948674321174622
    2. '       ' → logprob: -1.5698673725128174
    3. ')' → logprob: -1.9448673725128174
    4. ')]' → logprob: -2.0698673725128174
    5. '   ' → logprob: -4.5698676109313965
    6. '           ' → logprob: -5.4448676109313965
    7. ']
' → logprob: -6.3198676109313965
    8. '])' → logprob: -6.5698676109313965
    9. ',' → logprob: -6.9448676109313965
    10. '],' → logprob: -7.0698676109313965

Token 479: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5321009159088135
    2. '   ' → logprob: -1.2821009159088135
    3. '       ' → logprob: -2.7821009159088135
    4. '<|end|>' → logprob: -2.9071009159088135
    5. '[' → logprob: -5.282100677490234
    6. ',' → logprob: -6.032100677490234
    7. '[
' → logprob: -6.282100677490234
    8. '<|end|>' → logprob: -6.407100677490234
    9. ' ' → logprob: -6.532100677490234
    10. ')' → logprob: -6.657100677490234

Token 480: ' #' (ID: 1069)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07811181992292404
    2. '<|end|>' → logprob: -2.7031118869781494
    3. '}' → logprob: -5.57811164855957
    4. '   ' → logprob: -5.82811164855957
    5. '       ' → logprob: -7.70311164855957
    6. '<|end|>' → logprob: -8.07811164855957
    7. ' ]' → logprob: -8.95311164855957
    8. ')' → logprob: -9.07811164855957
    9. ']
' → logprob: -9.20311164855957
    10. ' ' → logprob: -9.20311164855957

Token 481: ' These' (ID: 5006)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7153843641281128
    2. '<|end|>' → logprob: -0.7153843641281128
    3. 'def' → logprob: -4.840384483337402
    4. '   ' → logprob: -5.090384483337402
    5. '<|end|>' → logprob: -5.840384483337402
    6. '}' → logprob: -6.090384483337402
    7. '       ' → logprob: -6.840384483337402
    8. ')' → logprob: -8.090384483337402
    9. ' ' → logprob: -8.215384483337402
    10. ']
' → logprob: -9.090384483337402

Token 482: ' are' (ID: 553)
  Prédit: '.units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.units' → logprob: -0.3797166049480438
    2. ']' → logprob: -1.8797166347503662
    3. 'units' → logprob: -2.504716634750366
    4. '.' → logprob: -3.379716634750366
    5. ' are' → logprob: -3.879716634750366
    6. '   ' → logprob: -5.004716396331787
    7. ' units' → logprob: -5.629716396331787
    8. ']
' → logprob: -5.879716396331787
    9. '_units' → logprob: -6.254716396331787
    10. ')' → logprob: -6.379716396331787

Token 483: ' ' (ID: 220)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.3604177236557007
    2. '[
' → logprob: -1.4854177236557007
    3. 'correct' → logprob: -1.8604177236557007
    4. '#' → logprob: -2.6104178428649902
    5. '[' → logprob: -2.7354178428649902
    6. 'trim' → logprob: -3.8604178428649902
    7. '[]' → logprob: -4.11041784286499
    8. 'used' → logprob: -4.11041784286499
    9. 'self' → logprob: -4.23541784286499
    10. 'sorted' → logprob: -4.36041784286499

Token 484: '7' (ID: 22)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.44850048422813416
    2. '[' → logprob: -1.9485005140304565
    3. 'sorted' → logprob: -2.823500394821167
    4. '['' → logprob: -3.448500394821167
    5. 'correct' → logprob: -3.448500394821167
    6. ']' → logprob: -4.323500633239746
    7. '       ' → logprob: -4.448500633239746
    8. 'self' → logprob: -4.573500633239746
    9. '[]' → logprob: -4.823500633239746
    10. '   ' → logprob: -5.073500633239746

Token 485: ' units' (ID: 13306)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11029364913702011
    2. '<|end|>' → logprob: -2.3602936267852783
    3. '<|end|>' → logprob: -5.235293865203857
    4. ' ]' → logprob: -6.360293865203857
    5. '   ' → logprob: -7.360293865203857
    6. '...' → logprob: -7.610293865203857
    7. '#' → logprob: -8.3602933883667
    8. ']
' → logprob: -8.3602933883667
    9. '       ' → logprob: -8.4852933883667
    10. '[' → logprob: -8.4852933883667

Token 486: ' indexed' (ID: 44010)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.659307062625885
    2. '<|end|>' → logprob: -0.909307062625885
    3. '   ' → logprob: -2.9093070030212402
    4. '<|end|>' → logprob: -4.65930700302124
    5. '       ' → logprob: -5.03430700302124
    6. '[' → logprob: -5.53430700302124
    7. ' ' → logprob: -6.53430700302124
    8. ')' → logprob: -7.28430700302124
    9. 'def' → logprob: -7.40930700302124
    10. '.' → logprob: -7.90930700302124

Token 487: ' ' (ID: 220)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5412389039993286
    2. '[' → logprob: -1.7912389039993286
    3. '<|end|>' → logprob: -2.416238784790039
    4. '   ' → logprob: -2.791238784790039
    5. '       ' → logprob: -3.541238784790039
    6. '[
' → logprob: -4.416238784790039
    7. '[:' → logprob: -4.916238784790039
    8. '<|end|>' → logprob: -5.041238784790039
    9. ' ' → logprob: -5.166238784790039
    10. ',' → logprob: -5.291238784790039

Token 488: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09689462184906006
    2. '=' → logprob: -3.5968947410583496
    3. 'from' → logprob: -3.8468947410583496
    4. ' ' → logprob: -4.84689474105835
    5. ' =' → logprob: -4.84689474105835
    6. ':' → logprob: -5.22189474105835
    7. '7' → logprob: -5.22189474105835
    8. '[' → logprob: -5.84689474105835
    9. '6' → logprob: -5.97189474105835
    10. ' up' → logprob: -6.09689474105835

Token 489: ' to' (ID: 316)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016416611149907112
    2. '[' → logprob: -4.891416549682617
    3. '0' → logprob: -6.016416549682617
    4. '   ' → logprob: -6.391416549682617
    5. '<|end|>' → logprob: -6.641416549682617
    6. ')' → logprob: -7.766416549682617
    7. '[
' → logprob: -7.766416549682617
    8. '       ' → logprob: -7.891416549682617
    9. ' ]' → logprob: -8.266416549682617
    10. ' ' → logprob: -8.391416549682617

Token 490: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0006324975984171033
    2. ' ' → logprob: -7.625632286071777
    3. '7' → logprob: -8.875632286071777
    4. '10' → logprob: -13.000632286071777
    5. 'len' → logprob: -13.875632286071777
    6. '5' → logprob: -15.125632286071777
    7. '1' → logprob: -15.375632286071777
    8. '```' → logprob: -15.500632286071777
    9. '11' → logprob: -15.750632286071777
    10. '   ' → logprob: -15.813132286071777

Token 491: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -8.590104698669165e-05
    2. '7' → logprob: -9.375085830688477
    3. ' ' → logprob: -14.125085830688477
    4. '10' → logprob: -16.625085830688477
    5. '```' → logprob: -16.875085830688477
    6. 'len' → logprob: -17.125085830688477
    7. '5' → logprob: -17.187585830688477
    8. '
' → logprob: -17.750085830688477
    9. '   ' → logprob: -18.062585830688477
    10. '06' → logprob: -18.187585830688477

Token 492: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7057235836982727
    2. '   ' → logprob: -0.9557235836982727
    3. '[' → logprob: -2.830723524093628
    4. '<|end|>' → logprob: -3.330723524093628
    5. '       ' → logprob: -4.705723762512207
    6. '[
' → logprob: -5.080723762512207
    7. ')' → logprob: -6.080723762512207
    8. '.' → logprob: -6.330723762512207
    9. '<|end|>' → logprob: -6.455723762512207
    10. ',' → logprob: -6.830723762512207

Token 493: '0' (ID: 15)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07417666912078857
    2. '7' → logprob: -3.449176788330078
    3. '       ' → logprob: -3.824176788330078
    4. '   ' → logprob: -4.949176788330078
    5. '           ' → logprob: -5.074176788330078
    6. '0' → logprob: -6.449176788330078
    7. '[' → logprob: -7.449176788330078
    8. ')' → logprob: -7.699176788330078
    9. '6' → logprob: -8.074176788330078
    10. ']
' → logprob: -8.199176788330078

Token 494: ':' (ID: 25)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02723076194524765
    2. '7' → logprob: -3.902230739593506
    3. ' ]' → logprob: -6.652230739593506
    4. '       ' → logprob: -6.902230739593506
    5. ']
' → logprob: -7.152230739593506
    6. ':' → logprob: -7.402230739593506
    7. '   ' → logprob: -7.402230739593506
    8. '.' → logprob: -7.777230739593506
    9. '           ' → logprob: -8.152231216430664
    10. ')' → logprob: -8.652231216430664

Token 495: ' no' (ID: 860)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.41587674617767334
    2. ')' → logprob: -2.165876865386963
    3. '6' → logprob: -2.790876865386963
    4. ''' → logprob: -3.290876865386963
    5. ' ' → logprob: -3.290876865386963
    6. 'len' → logprob: -4.040876865386963
    7. ']' → logprob: -4.165876865386963
    8. 'Man' → logprob: -4.540876865386963
    9. '10' → logprob: -5.165876865386963
    10. '```' → logprob: -5.165876865386963

Token 496: ' unit' (ID: 7670)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0809767246246338
    2. ')' → logprob: -1.4559767246246338
    3. ',' → logprob: -1.8309767246246338
    4. 'Unit' → logprob: -2.455976724624634
    5. ' unit' → logprob: -3.205976724624634
    6. 'unit' → logprob: -3.580976724624634
    7. ',
' → logprob: -4.330976486206055
    8. 'index' → logprob: -4.330976486206055
    9. '_unit' → logprob: -4.830976486206055
    10. ' ' → logprob: -4.955976486206055

Token 497: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10731933265924454
    2. '[' → logprob: -2.8573193550109863
    3. '7' → logprob: -3.4823193550109863
    4. '0' → logprob: -4.982319355010986
    5. '[:' → logprob: -6.732319355010986
    6. ')' → logprob: -6.857319355010986
    7. '   ' → logprob: -7.232319355010986
    8. ',' → logprob: -7.357319355010986
    9. '])' → logprob: -7.482319355010986
    10. '6' → logprob: -7.607319355010986

Token 498: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10519684106111526
    2. '   ' → logprob: -2.980196952819824
    3. '       ' → logprob: -3.230196952819824
    4. '[' → logprob: -5.980196952819824
    5. '<|end|>' → logprob: -5.980196952819824
    6. '0' → logprob: -6.605196952819824
    7. '           ' → logprob: -6.980196952819824
    8. ' ' → logprob: -8.480196952819824
    9. ' ]' → logprob: -8.480196952819824
    10. ')' → logprob: -8.480196952819824

Token 499: ' self' (ID: 1051)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028331294655799866
    2. '       ' → logprob: -4.153331279754639
    3. '   ' → logprob: -5.403331279754639
    4. '][:' → logprob: -6.153331279754639
    5. '.' → logprob: -6.903331279754639
    6. '           ' → logprob: -7.153331279754639
    7. '<|end|>' → logprob: -7.528331279754639
    8. '[:' → logprob: -7.653331279754639
    9. '[' → logprob: -7.778331279754639
    10. '0' → logprob: -7.903331279754639

Token 500: '.units' (ID: 121284)
  Prédit: '.units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.units' → logprob: -2.248469718324486e-05
    2. 'units' → logprob: -10.750022888183594
    3. '.' → logprob: -15.125022888183594
    4. '.tokens' → logprob: -15.625022888183594
    5. '_units' → logprob: -16.125022888183594
    6. '.users' → logprob: -16.375022888183594
    7. ' .' → logprob: -16.500022888183594
    8. '.unit' → logprob: -16.625022888183594
    9. '.classes' → logprob: -17.625022888183594
    10. 'Units' → logprob: -18.000022888183594

Token 501: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005236479919403791
    2. ' =' → logprob: -5.255236625671387
    3. '[:' → logprob: -13.505236625671387
    4. ':' → logprob: -14.755236625671387
    5. '=self' → logprob: -14.755236625671387
    6. '[' → logprob: -15.255236625671387
    7. '=
' → logprob: -16.00523567199707
    8. '[:]' → logprob: -16.13023567199707
    9. '＝' → logprob: -17.13023567199707
    10. '[
' → logprob: -17.88023567199707

Token 502: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.006873433478176594
    2. '[' → logprob: -5.006873607635498
    3. '[self' → logprob: -9.00687313079834
    4. 'self' → logprob: -10.50687313079834
    5. ' [
' → logprob: -11.75687313079834
    6. '   ' → logprob: -15.88187313079834
    7. '       ' → logprob: -16.381874084472656
    8. ' [' → logprob: -16.506874084472656
    9. ' ' → logprob: -17.506874084472656
    10. '[]' → logprob: -18.381874084472656

Token 503: '           ' (ID: 352)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.03066141903400421
    2. '           ' → logprob: -3.5306613445281982
    3. ' Number' → logprob: -7.030661582946777
    4. '       ' → logprob: -11.155661582946777
    5. '   ' → logprob: -11.530661582946777
    6. '               ' → logprob: -13.780661582946777
    7. ' ' → logprob: -14.030661582946777
    8. '          ' → logprob: -16.78066062927246
    9. '(Number' → logprob: -16.90566062927246
    10. '            ' → logprob: -16.90566062927246

Token 504: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -4.024604277219623e-05
    2. ' Number' → logprob: -10.250040054321289
    3. '           ' → logprob: -12.250040054321289
    4. '   ' → logprob: -16.87504005432129
    5. '       ' → logprob: -18.00004005432129
    6. '               ' → logprob: -18.87504005432129
    7. ' ' → logprob: -19.25004005432129
    8. '         ' → logprob: -20.87504005432129
    9. '             ' → logprob: -20.87504005432129
    10. '(Number' → logprob: -21.12504005432129

Token 505: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.2664456789934775e-06
    2. 'Token' → logprob: -14.750000953674316
    3. 'unit' → logprob: -15.125000953674316
    4. '('',' → logprob: -15.375000953674316
    5. '('' → logprob: -15.625000953674316
    6. ' Unit' → logprob: -16.500001907348633
    7. '<Unit' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '(Unit' → logprob: -17.750001907348633
    10. '''' → logprob: -17.750001907348633

Token 506: '('',' (ID: 53836)
  Prédit: '('','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.0009237268241122365
    2. ''',' → logprob: -7.0009236335754395
    3. '''' → logprob: -11.750924110412598
    4. '('' → logprob: -13.250924110412598
    5. '("",' → logprob: -13.250924110412598
    6. ' '',' → logprob: -15.125924110412598
    7. '(' → logprob: -15.875924110412598
    8. ' ('' → logprob: -15.875924110412598
    9. '('')
' → logprob: -16.75092315673828
    10. '''
' → logprob: -16.87592315673828

Token 507: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003600544296205044
    2. ' ' → logprob: -5.628600597381592
    3. '           ' → logprob: -15.003600120544434
    4. '   ' → logprob: -16.25360107421875
    5. ')' → logprob: -17.87860107421875
    6. '               ' → logprob: -18.12860107421875
    7. '            ' → logprob: -18.12860107421875
    8. '       ' → logprob: -18.50360107421875
    9. '  ' → logprob: -19.00360107421875
    10. ',' → logprob: -19.00360107421875

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.500001907348633
    4. '=' → logprob: -19.875001907348633
    5. '           ' → logprob: -21.000001907348633
    6. '       ' → logprob: -21.250001907348633
    7. ')' → logprob: -21.375001907348633
    8. '```' → logprob: -21.375001907348633
    9. '۰' → logprob: -21.625001907348633
    10. '  ' → logprob: -21.750001907348633

Token 509: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.3874165117740631
    2. '),' → logprob: -1.1374164819717407
    3. ')' → logprob: -8.38741683959961
    4. '       ' → logprob: -8.76241683959961
    5. '           ' → logprob: -9.26241683959961
    6. '),
' → logprob: -10.26241683959961
    7. '),

' → logprob: -10.51241683959961
    8. ')
' → logprob: -13.38741683959961
    9. '   ' → logprob: -14.26241683959961
    10. ' ),
' → logprob: -15.01241683959961

Token 510: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.062044546008110046
    2. 'Number' → logprob: -2.812044620513916
    3. ' Number' → logprob: -9.562044143676758
    4. '       ' → logprob: -12.312044143676758
    5. '   ' → logprob: -13.812044143676758
    6. '               ' → logprob: -14.437044143676758
    7. '          ' → logprob: -15.437044143676758
    8. '		' → logprob: -16.312044143676758
    9. 'Unit' → logprob: -16.312044143676758
    10. ' ' → logprob: -16.437044143676758

Token 511: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -2.7848862373502925e-05
    2. ' Number' → logprob: -10.750027656555176
    3. '           ' → logprob: -12.000027656555176
    4. 'Man' → logprob: -16.625028610229492
    5. '   ' → logprob: -17.375028610229492
    6. ' ' → logprob: -19.000028610229492
    7. 'Unit' → logprob: -19.375028610229492
    8. '(Number' → logprob: -19.375028610229492
    9. '               ' → logprob: -19.500028610229492
    10. '       ' → logprob: -19.500028610229492

Token 512: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -3.8889261304575484e-06
    2. ''' → logprob: -12.750003814697266
    3. '('' → logprob: -14.750003814697266
    4. 'unit' → logprob: -15.250003814697266
    5. 'Number' → logprob: -15.500003814697266
    6. '`' → logprob: -18.500003814697266
    7. '_unit' → logprob: -19.125003814697266
    8. ' Unit' → logprob: -19.125003814697266
    9. ''s' → logprob: -19.250003814697266
    10. '(Unit' → logprob: -19.375003814697266

Token 513: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.026320040225982666
    2. ''' → logprob: -3.651319980621338
    3. '(' → logprob: -11.526320457458496
    4. ' '' → logprob: -12.401320457458496
    5. ' ('' → logprob: -13.026320457458496
    6. '   ' → logprob: -14.026320457458496
    7. 'Man' → logprob: -14.151320457458496
    8. '("' → logprob: -14.651320457458496
    9. '(
' → logprob: -15.276320457458496
    10. ' ' → logprob: -15.526320457458496

Token 514: 'Man' (ID: 2246)
  Prédit: 'Man'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Man' → logprob: -0.02325211651623249
    2. ''' → logprob: -3.773252010345459
    3. '"' → logprob: -12.273252487182617
    4. ''M' → logprob: -14.023252487182617
    5. '`' → logprob: -15.023252487182617
    6. 'Ман' → logprob: -15.148252487182617
    7. 'Mana' → logprob: -15.398252487182617
    8. ' Man' → logprob: -15.648252487182617
    9. 'man' → logprob: -16.398252487182617
    10. 'マン' → logprob: -17.148252487182617

Token 515: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -4.6087021473795176e-05
    2. ',' → logprob: -10.125045776367188
    3. ''' → logprob: -12.625045776367188
    4. '",' → logprob: -13.750045776367188
    5. ' ',' → logprob: -14.250045776367188
    6. ''',' → logprob: -14.500045776367188
    7. '   ' → logprob: -15.625045776367188
    8. 'Man' → logprob: -16.750045776367188
    9. '',
' → logprob: -18.000045776367188
    10. '4' → logprob: -18.125045776367188

Token 516: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06994155049324036
    2. ' ' → logprob: -2.694941520690918
    3. ''' → logprob: -12.694941520690918
    4. ')' → logprob: -13.444941520690918
    5. '```' → logprob: -16.132442474365234
    6. '   ' → logprob: -16.444942474365234
    7. ' ' → logprob: -16.444942474365234
    8. ',' → logprob: -16.694942474365234
    9. '' → logprob: -17.257442474365234
    10. '"' → logprob: -17.569942474365234

Token 517: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -20.00006675720215
    4. ''' → logprob: -20.87506675720215
    5. '```' → logprob: -21.00006675720215
    6. '４' → logprob: -21.50006675720215
    7. ')' → logprob: -21.62506675720215
    8. '' → logprob: -21.75006675720215
    9. '۴' → logprob: -22.50006675720215
    10. '04' → logprob: -22.62506675720215

Token 518: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5761364102363586
    2. '),
' → logprob: -0.8261364102363586
    3. ')' → logprob: -8.701136589050293
    4. '),
' → logprob: -11.076136589050293
    5. '),

' → logprob: -11.826136589050293
    6. '           ' → logprob: -11.951136589050293
    7. '       ' → logprob: -14.451136589050293
    8. '   ' → logprob: -15.451136589050293
    9. ' ),
' → logprob: -16.076135635375977
    10. '          ' → logprob: -16.326135635375977

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1602330505847931
    2. 'Number' → logprob: -1.9102330207824707
    3. ' Number' → logprob: -12.535233497619629
    4. 'Unit' → logprob: -13.285233497619629
    5. '          ' → logprob: -13.535233497619629
    6. '       ' → logprob: -13.660233497619629
    7. '               ' → logprob: -14.285233497619629
    8. '   ' → logprob: -15.660233497619629
    9. '         ' → logprob: -16.035232543945312
    10. '            ' → logprob: -16.285232543945312

Token 520: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -3.128163257315464e-07
    2. '           ' → logprob: -15.75
    3. ' Number' → logprob: -17.125
    4. 'Unit' → logprob: -20.25
    5. '   ' → logprob: -20.625
    6. '               ' → logprob: -21.125
    7. 'number' → logprob: -21.5
    8. '       ' → logprob: -21.625
    9. 'Optional' → logprob: -22.625
    10. '_Number' → logprob: -23.0

Token 521: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -9.472211968386546e-05
    2. 'Number' → logprob: -9.625094413757324
    3. 'Optional' → logprob: -10.625094413757324
    4. '('' → logprob: -12.625094413757324
    5. ''' → logprob: -14.750094413757324
    6. 'unit' → logprob: -15.625094413757324
    7. '<Unit' → logprob: -15.625094413757324
    8. 'Tuple' → logprob: -16.75009536743164
    9. 'Option' → logprob: -16.75009536743164
    10. 'Uint' → logprob: -17.62509536743164

Token 522: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8648989796638489
    2. ''' → logprob: -1.114898920059204
    3. ''O' → logprob: -1.864898920059204
    4. '(' → logprob: -2.489898920059204
    5. '8' → logprob: -4.489899158477783
    6. '   ' → logprob: -7.364899158477783
    7. ''ok' → logprob: -7.989899158477783
    8. ''o' → logprob: -8.114898681640625
    9. ',' → logprob: -8.989898681640625
    10. 'Oku' → logprob: -8.989898681640625

Token 523: 'Oku' (ID: 190512)
  Prédit: 'Oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Oku' → logprob: -0.00010115911572938785
    2. ''O' → logprob: -9.250101089477539
    3. ''' → logprob: -13.375101089477539
    4. ' Oku' → logprob: -13.875101089477539
    5. 'oku' → logprob: -14.375101089477539
    6. 'Ok' → logprob: -14.375101089477539
    7. 'O' → logprob: -14.500101089477539
    8. 'Aku' → logprob: -14.500101089477539
    9. 'Uku' → logprob: -17.12510108947754
    10. '`' → logprob: -17.12510108947754

Token 524: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4743853509426117
    2. '',' → logprob: -0.9743853807449341
    3. '8' → logprob: -8.224385261535645
    4. ' ,' → logprob: -11.099385261535645
    5. ''' → logprob: -12.349385261535645
    6. '",' → logprob: -12.599385261535645
    7. ''',' → logprob: -12.849385261535645
    8. '4' → logprob: -12.974385261535645
    9. '18' → logprob: -13.474385261535645
    10. ''),' → logprob: -13.474385261535645

Token 525: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.026301106438040733
    2. ' ' → logprob: -3.651301145553589
    3. '9' → logprob: -15.401301383972168
    4. ''' → logprob: -16.40130043029785
    5. ')' → logprob: -16.83880043029785
    6. ' ' → logprob: -16.90130043029785
    7. '   ' → logprob: -17.08880043029785
    8. '7' → logprob: -17.15130043029785
    9. '08' → logprob: -17.27630043029785
    10. '８' → logprob: -17.33880043029785

Token 526: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۸' → logprob: -17.062515258789062
    4. '８' → logprob: -17.375015258789062
    5. '८' → logprob: -17.937515258789062
    6. '৮' → logprob: -18.000015258789062
    7. '   ' → logprob: -18.750015258789062
    8. '٨' → logprob: -18.937515258789062
    9. '
' → logprob: -19.125015258789062
    10. '```' → logprob: -19.125015258789062

Token 527: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5771176815032959
    2. '),
' → logprob: -0.8271176815032959
    3. ')' → logprob: -7.202117919921875
    4. '           ' → logprob: -7.827117919921875
    5. '       ' → logprob: -11.077117919921875
    6. '),
' → logprob: -11.577117919921875
    7. '),

' → logprob: -12.577117919921875
    8. '   ' → logprob: -13.202117919921875
    9. '          ' → logprob: -14.202117919921875
    10. '               ' → logprob: -14.577117919921875

Token 528: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023301614448428154
    2. 'Number' → logprob: -3.773301601409912
    3. 'Unit' → logprob: -10.02330207824707
    4. '       ' → logprob: -11.77330207824707
    5. ' Number' → logprob: -13.14830207824707
    6. '          ' → logprob: -13.64830207824707
    7. '               ' → logprob: -14.52330207824707
    8. '         ' → logprob: -15.27330207824707
    9. '   ' → logprob: -15.77330207824707
    10. '		' → logprob: -17.39830207824707

Token 529: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -5.872261317563243e-05
    2. '           ' → logprob: -9.750059127807617
    3. ' Number' → logprob: -14.750059127807617
    4. 'Unit' → logprob: -18.250059127807617
    5. '   ' → logprob: -20.250059127807617
    6. '       ' → logprob: -20.375059127807617
    7. 'number' → logprob: -21.250059127807617
    8. '               ' → logprob: -21.750059127807617
    9. '          ' → logprob: -21.875059127807617
    10. '_number' → logprob: -22.250059127807617

Token 530: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.00012713817704934627
    2. 'Number' → logprob: -9.125126838684082
    3. 'unit' → logprob: -11.250126838684082
    4. '('' → logprob: -12.625126838684082
    5. '(' → logprob: -15.000126838684082
    6. 'uint' → logprob: -15.875126838684082
    7. 'int' → logprob: -15.875126838684082
    8. 'System' → logprob: -16.0001277923584
    9. 'Token' → logprob: -16.0001277923584
    10. '<Unit' → logprob: -16.1251277923584

Token 531: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08933069556951523
    2. ''' → logprob: -2.4643306732177734
    3. '(' → logprob: -7.964330673217773
    4. '12' → logprob: -11.464330673217773
    5. ',' → logprob: -11.589330673217773
    6. '',' → logprob: -11.839330673217773
    7. '           ' → logprob: -12.214330673217773
    8. '   ' → logprob: -12.589330673217773
    9. '(
' → logprob: -13.714330673217773
    10. '       ' → logprob: -13.714330673217773

Token 532: 'Cho' (ID: 12058)
  Prédit: 'Cho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cho' → logprob: -0.0005562512087635696
    2. ''' → logprob: -7.500556468963623
    3. '"' → logprob: -13.250555992126465
    4. 'cho' → logprob: -14.000555992126465
    5. '`' → logprob: -15.375555992126465
    6. '('' → logprob: -15.625555992126465
    7. 'Ch' → logprob: -16.25055694580078
    8. ' Cho' → logprob: -16.62555694580078
    9. '   ' → logprob: -18.00055694580078
    10. 'Choice' → logprob: -18.12555694580078

Token 533: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.008697538636624813
    2. ',' → logprob: -4.758697509765625
    3. ''',' → logprob: -10.258697509765625
    4. '12' → logprob: -10.883697509765625
    5. ''' → logprob: -11.508697509765625
    6. '           ' → logprob: -12.633697509765625
    7. '",' → logprob: -12.633697509765625
    8. '14' → logprob: -13.383697509765625
    9. ')',' → logprob: -13.508697509765625
    10. '   ' → logprob: -13.633697509765625

Token 534: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.00011152983643114567
    2. ' ' → logprob: -9.12511157989502
    3. '16' → logprob: -12.87511157989502
    4. '           ' → logprob: -17.875110626220703
    5. '   ' → logprob: -18.375110626220703
    6. '[' → logprob: -20.000110626220703
    7. '```' → logprob: -20.000110626220703
    8. '14' → logprob: -20.375110626220703
    9. '               ' → logprob: -20.625110626220703
    10. '１２' → logprob: -20.750110626220703

Token 535: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -18.0
    4. '[' → logprob: -18.5
    5. '16' → logprob: -19.0
    6. '   ' → logprob: -19.625
    7. '１２' → logprob: -20.25
    8. '(' → logprob: -20.75
    9. '           ' → logprob: -21.0
    10. '۱۲' → logprob: -21.0

Token 536: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.16364096105098724
    2. '),' → logprob: -1.9136409759521484
    3. '           ' → logprob: -5.788640975952148
    4. '       ' → logprob: -8.163640975952148
    5. '),
' → logprob: -10.913640975952148
    6. '```' → logprob: -11.163640975952148
    7. '   ' → logprob: -11.538640975952148
    8. '          ' → logprob: -12.413640975952148
    9. '),

' → logprob: -12.788640975952148
    10. '               ' → logprob: -12.788640975952148

Token 537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10022015124559402
    2. 'Number' → logprob: -2.350220203399658
    3. 'Unit' → logprob: -12.2252197265625
    4. '       ' → logprob: -12.2252197265625
    5. '               ' → logprob: -12.8502197265625
    6. ' Number' → logprob: -14.4752197265625
    7. '   ' → logprob: -15.4752197265625
    8. '          ' → logprob: -15.4752197265625
    9. '```' → logprob: -16.6002197265625
    10. '[' → logprob: -17.2252197265625

Token 538: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -2.8206473871250637e-05
    2. '           ' → logprob: -10.500028610229492
    3. 'Unit' → logprob: -14.500028610229492
    4. ' Number' → logprob: -16.000028610229492
    5. '               ' → logprob: -21.000028610229492
    6. '       ' → logprob: -21.125028610229492
    7. '   ' → logprob: -21.500028610229492
    8. 'number' → logprob: -21.625028610229492
    9. '(Number' → logprob: -22.500028610229492
    10. '_number' → logprob: -22.625028610229492

Token 539: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.6286106983898208e-05
    2. 'Number' → logprob: -11.125016212463379
    3. 'unit' → logprob: -13.875016212463379
    4. 'System' → logprob: -15.500016212463379
    5. '('' → logprob: -15.625016212463379
    6. '(Unit' → logprob: -17.125017166137695
    7. '           ' → logprob: -17.625017166137695
    8. '<Unit' → logprob: -17.750017166137695
    9. 'Variable' → logprob: -18.000017166137695
    10. '(' → logprob: -18.000017166137695

Token 540: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0026342803612351418
    2. ''' → logprob: -6.002634048461914
    3. '(' → logprob: -8.877634048461914
    4. '16' → logprob: -11.502634048461914
    5. '   ' → logprob: -12.127634048461914
    6. '           ' → logprob: -14.252634048461914
    7. '       ' → logprob: -14.502634048461914
    8. ',' → logprob: -14.502634048461914
    9. '(
' → logprob: -15.002634048461914
    10. '(',' → logprob: -15.127634048461914

Token 541: 'Ke' (ID: 15640)
  Prédit: 'Ke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ke' → logprob: -0.001173917087726295
    2. ''' → logprob: -6.751173973083496
    3. '"' → logprob: -12.626173973083496
    4. '`' → logprob: -15.251173973083496
    5. 'ke' → logprob: -16.37617301940918
    6. 'kei' → logprob: -17.37617301940918
    7. '   ' → logprob: -17.50117301940918
    8. '('' → logprob: -18.00117301940918
    9. '
' → logprob: -18.25117301940918
    10. '‘' → logprob: -18.25117301940918

Token 542: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011617878044489771
    2. 'y' → logprob: -9.250116348266602
    3. 'iy' → logprob: -10.875116348266602
    4. '   ' → logprob: -15.625116348266602
    5. '16' → logprob: -15.625116348266602
    6. 'is' → logprob: -15.875116348266602
    7. 'ik' → logprob: -16.3751163482666
    8. 'ir' → logprob: -16.5001163482666
    9. ' ' → logprob: -16.8751163482666
    10. 'I' → logprob: -17.0001163482666

Token 543: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008815585635602474
    2. '',' → logprob: -4.758815765380859
    3. '16' → logprob: -9.13381576538086
    4. ' ,' → logprob: -10.25881576538086
    5. '14' → logprob: -11.00881576538086
    6. '           ' → logprob: -11.00881576538086
    7. '18' → logprob: -11.13381576538086
    8. '17' → logprob: -13.38381576538086
    9. '24' → logprob: -13.50881576538086
    10. '4' → logprob: -13.63381576538086

Token 544: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.125019073486328
    4. ' sixteen' → logprob: -18.500019073486328
    5. '           ' → logprob: -19.750019073486328
    6. '016' → logprob: -20.125019073486328
    7. '１６' → logprob: -20.125019073486328
    8. '20' → logprob: -20.625019073486328
    9. '```' → logprob: -20.625019073486328
    10. '               ' → logprob: -21.000019073486328

Token 545: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '016' → logprob: -19.75
    4. ' sixteen' → logprob: -20.25
    5. '   ' → logprob: -20.5
    6. '１６' → logprob: -20.625
    7. '
' → logprob: -21.5
    8. '```' → logprob: -22.375
    9. '\
' → logprob: -22.625
    10. '20' → logprob: -22.75

Token 546: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.010180763900279999
    2. '),' → logprob: -4.760180950164795
    3. '           ' → logprob: -6.635180950164795
    4. '       ' → logprob: -8.385180473327637
    5. '6' → logprob: -12.010180473327637
    6. '),
' → logprob: -12.510180473327637
    7. ')' → logprob: -12.760180473327637
    8. '   ' → logprob: -13.135180473327637
    9. '```' → logprob: -13.135180473327637
    10. '),

' → logprob: -13.260180473327637

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10021615028381348
    2. 'Number' → logprob: -2.3502161502838135
    3. '               ' → logprob: -12.725215911865234
    4. 'Unit' → logprob: -12.850215911865234
    5. '       ' → logprob: -12.975215911865234
    6. ' Number' → logprob: -13.975215911865234
    7. '          ' → logprob: -14.725215911865234
    8. '   ' → logprob: -15.475215911865234
    9. '6' → logprob: -15.975215911865234
    10. '            ' → logprob: -16.850215911865234

Token 548: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -8.2994620242971e-06
    2. '           ' → logprob: -11.750008583068848
    3. 'Unit' → logprob: -15.500008583068848
    4. ' Number' → logprob: -15.875008583068848
    5. 'self' → logprob: -19.75000762939453
    6. '               ' → logprob: -20.87500762939453
    7. 'number' → logprob: -21.50000762939453
    8. '       ' → logprob: -21.62500762939453
    9. '   ' → logprob: -21.87500762939453
    10. '(Number' → logprob: -22.62500762939453

Token 549: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.00023083435371518135
    2. 'Number' → logprob: -8.37523078918457
    3. '(Unit' → logprob: -17.00023078918457
    4. '<Unit' → logprob: -17.75023078918457
    5. 'unit' → logprob: -17.87523078918457
    6. 'System' → logprob: -18.00023078918457
    7. ' Unit' → logprob: -18.00023078918457
    8. 'Units' → logprob: -18.75023078918457
    9. 'User' → logprob: -18.75023078918457
    10. '[' → logprob: -19.12523078918457

Token 550: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.372294698550832e-06
    2. ''' → logprob: -11.750009536743164
    3. 'Number' → logprob: -14.125009536743164
    4. '(' → logprob: -14.625009536743164
    5. '(
' → logprob: -16.250009536743164
    6. '   ' → logprob: -16.875009536743164
    7. 'G' → logprob: -17.625009536743164
    8. '("' → logprob: -17.750009536743164
    9. ' ('' → logprob: -18.125009536743164
    10. '(G' → logprob: -18.125009536743164

Token 551: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: 0.0
    2. ' G' → logprob: -17.125
    3. ''' → logprob: -17.25
    4. '"G' → logprob: -17.625
    5. 'g' → logprob: -17.875
    6. '"' → logprob: -18.875
    7. 'Unit' → logprob: -19.125
    8. 'Number' → logprob: -19.125
    9. '   ' → logprob: -19.125
    10. 'Ga' → logprob: -19.375

Token 552: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -6.64708495605737e-05
    2. 'a' → logprob: -9.625066757202148
    3. ''ai' → logprob: -16.00006675720215
    4. 'AI' → logprob: -16.37506675720215
    5. 'i' → logprob: -17.37506675720215
    6. ''' → logprob: -17.50006675720215
    7. 'ail' → logprob: -17.50006675720215
    8. 'ait' → logprob: -17.75006675720215
    9. '`' → logprob: -18.50006675720215
    10. 'oi' → logprob: -18.50006675720215

Token 553: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04940861091017723
    2. '',' → logprob: -3.0494086742401123
    3. '20' → logprob: -7.174408435821533
    4. ' ,' → logprob: -11.299408912658691
    5. '18' → logprob: -11.299408912658691
    6. '=' → logprob: -12.049408912658691
    7. '19' → logprob: -12.424408912658691
    8. '21' → logprob: -12.674408912658691
    9. ''' → logprob: -12.799408912658691
    10. '(' → logprob: -12.924408912658691

Token 554: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.500709533691406
    4. '202' → logprob: -19.000709533691406
    5. '24' → logprob: -19.250709533691406
    6. '２０' → logprob: -19.250709533691406
    7. '  ' → logprob: -19.375709533691406
    8. '```' → logprob: -20.000709533691406
    9. '    ' → logprob: -20.125709533691406
    10. '2' → logprob: -20.438209533691406

Token 555: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.625
    4. '
' → logprob: -21.5
    5. '202' → logprob: -21.5
    6. '２０' → logprob: -21.5
    7. '24' → logprob: -22.25
    8. '2' → logprob: -22.625
    9. '```' → logprob: -22.75
    10. '020' → logprob: -23.25

Token 556: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.14441852271556854
    2. '),' → logprob: -2.019418478012085
    3. ')' → logprob: -7.144418716430664
    4. '           ' → logprob: -7.519418716430664
    5. '       ' → logprob: -8.144418716430664
    6. '6' → logprob: -9.644418716430664
    7. '),

' → logprob: -11.269418716430664
    8. '   ' → logprob: -11.519418716430664
    9. '),
' → logprob: -11.894418716430664
    10. '```' → logprob: -12.144418716430664

Token 557: '           ' (ID: 352)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.04862665385007858
    2. '           ' → logprob: -3.048626661300659
    3. ' Number' → logprob: -11.048626899719238
    4. 'Unit' → logprob: -11.423626899719238
    5. '6' → logprob: -12.548626899719238
    6. '               ' → logprob: -12.923626899719238
    7. '       ' → logprob: -13.048626899719238
    8. '[' → logprob: -13.173626899719238
    9. '7' → logprob: -13.798626899719238
    10. '12' → logprob: -15.048626899719238

Token 558: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' (adapté à ' Number') → logprob: -5.512236498361744e-07
    2. '           ' → logprob: -15.000000953674316
    3. 'Unit' → logprob: -15.750000953674316
    4. ' Number' → logprob: -16.875
    5. '   ' → logprob: -22.125
    6. '               ' → logprob: -22.375
    7. '(Number' → logprob: -22.375
    8. 'number' → logprob: -22.625
    9. 'self' → logprob: -23.25
    10. '       ' → logprob: -23.625

Token 559: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.3856492842023727e-06
    2. 'Number' → logprob: -13.750000953674316
    3. 'unit' → logprob: -16.625001907348633
    4. '(Unit' → logprob: -16.625001907348633
    5. 'System' → logprob: -17.875001907348633
    6. '('' → logprob: -17.875001907348633
    7. '<Unit' → logprob: -18.500001907348633
    8. 'User' → logprob: -18.875001907348633
    9. 'Token' → logprob: -19.125001907348633
    10. ' Unit' → logprob: -19.250001907348633

Token 560: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.4855663721391466e-05
    2. ''' → logprob: -11.125015258789062
    3. '(' → logprob: -16.375015258789062
    4. ' ('' → logprob: -17.625015258789062
    5. '("' → logprob: -19.000015258789062
    6. '(
' → logprob: -19.000015258789062
    7. '(Unit' → logprob: -19.625015258789062
    8. ')' → logprob: -19.875015258789062
    9. '   ' → logprob: -20.125015258789062
    10. ''S' → logprob: -20.125015258789062

Token 561: 'Jo' (ID: 32698)
  Prédit: 'Jo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Jo' → logprob: -7.493430894101039e-05
    2. ''' → logprob: -9.500075340270996
    3. 'J' → logprob: -16.75007438659668
    4. '"' → logprob: -19.12507438659668
    5. 'jo' → logprob: -19.25007438659668
    6. ' Jo' → logprob: -20.12507438659668
    7. '`' → logprob: -20.75007438659668
    8. 'Join' → logprob: -20.75007438659668
    9. 'Joy' → logprob: -20.87507438659668
    10. 'Jos' → logprob: -21.37507438659668

Token 562: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -2.546478935983032e-05
    2. ',' → logprob: -10.750025749206543
    3. ''' → logprob: -13.125025749206543
    4. '",' → logprob: -14.000025749206543
    5. ''',' → logprob: -14.125025749206543
    6. '24' → logprob: -16.000024795532227
    7. '23' → logprob: -17.125024795532227
    8. ' ',' → logprob: -17.250024795532227
    9. '27' → logprob: -17.500024795532227
    10. '',
' → logprob: -17.500024795532227

Token 563: ' ' (ID: 220)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '26' → logprob: -18.502805709838867
    4. '25' → logprob: -18.627805709838867
    5. '   ' → logprob: -18.752805709838867
    6. '28' → logprob: -19.565305709838867
    7. '  ' → logprob: -19.627805709838867
    8. '```' → logprob: -20.377805709838867
    9. ')' → logprob: -20.440305709838867
    10. ' ' → logprob: -20.877805709838867

Token 564: '24' (ID: 1494)
  Prédit: '24'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.375017166137695
    4. '```' → logprob: -20.625017166137695
    5. '25' → logprob: -21.500017166137695
    6. '  ' → logprob: -21.500017166137695
    7. '२४' → logprob: -21.875017166137695
    8. '26' → logprob: -22.062517166137695
    9. '
' → logprob: -22.812517166137695
    10. '২৪' → logprob: -23.062517166137695

Token 565: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.379464328289032
    2. '),
' → logprob: -1.3794643878936768
    3. ')' → logprob: -3.2544643878936768
    4. ')]' → logprob: -3.7544643878936768
    5. '       ' → logprob: -6.504464149475098
    6. ')
' → logprob: -8.379464149475098
    7. '           ' → logprob: -8.504464149475098
    8. ')],' → logprob: -10.379464149475098
    9. ')])' → logprob: -10.629464149475098
    10. ']' → logprob: -11.129464149475098

Token 566: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2015061229467392
    2. '       ' → logprob: -1.7015061378479004
    3. '   ' → logprob: -10.201505661010742
    4. ']
' → logprob: -10.701505661010742
    5. ')' → logprob: -11.576505661010742
    6. ']}' → logprob: -11.701505661010742
    7. ' ]' → logprob: -12.201505661010742
    8. '}' → logprob: -13.326505661010742
    9. '`]' → logprob: -13.326505661010742
    10. '<|end|>' → logprob: -13.326505661010742

Token 567: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006129291374236345
    2. '       ' → logprob: -5.506129264831543
    3. '   ' → logprob: -6.256129264831543
    4. '<|end|>' → logprob: -9.881129264831543
    5. ' ]' → logprob: -10.131129264831543
    6. ']
' → logprob: -11.256129264831543
    7. '```' → logprob: -11.756129264831543
    8. '}' → logprob: -12.256129264831543
    9. ')' → logprob: -12.881129264831543
    10. '<|end|>' → logprob: -13.131129264831543

Token 568: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5398837327957153
    2. '   ' → logprob: -1.6648837327957153
    3. '<|end|>' → logprob: -1.6648837327957153
    4. ')' → logprob: -3.789883613586426
    5. '```' → logprob: -4.914883613586426
    6. '<|end|>' → logprob: -5.289883613586426
    7. ' ' → logprob: -6.539883613586426
    8. 'class' → logprob: -7.289883613586426
    9. ' def' → logprob: -7.789883613586426
    10. '#' → logprob: -8.289883613586426

Token 569: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00035727277281694114
    2. ' def' → logprob: -8.000357627868652
    3. '   ' → logprob: -10.875357627868652
    4. '```' → logprob: -13.625357627868652
    5. '	def' → logprob: -14.375357627868652
    6. ')' → logprob: -15.125357627868652
    7. '<|end|>' → logprob: -15.500357627868652
    8. '@property' → logprob: -15.500357627868652
    9. ':' → logprob: -16.375356674194336
    10. '@' → logprob: -16.500356674194336

Token 570: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.288229763507843
    2. 'get' → logprob: -2.0382297039031982
    3. ' __' → logprob: -2.2882297039031982
    4. 'iter' → logprob: -4.788229942321777
    5. ' get' → logprob: -5.288229942321777
    6. 'unit' → logprob: -5.663229942321777
    7. 'iterate' → logprob: -6.913229942321777
    8. 'iterator' → logprob: -8.538229942321777
    9. 'find' → logprob: -9.038229942321777
    10. ' iter' → logprob: -9.413229942321777

Token 571: '_unit' (ID: 33866)
  Prédit: '_unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unit' → logprob: -0.008265743963420391
    2. 'unit' → logprob: -5.633265972137451
    3. '_units' → logprob: -5.633265972137451
    4. '_names' → logprob: -7.633265972137451
    5. '_next' → logprob: -8.633265495300293
    6. '_name' → logprob: -9.133265495300293
    7. '(self' → logprob: -9.133265495300293
    8. 'Unit' → logprob: -10.008265495300293
    9. '_power' → logprob: -10.133265495300293
    10. '_by' → logprob: -10.508265495300293

Token 572: '_for' (ID: 11903)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.038564082235097885
    2. 's' → logprob: -3.5385639667510986
    3. '_by' → logprob: -5.038564205169678
    4. '(' → logprob: -6.663564205169678
    5. '_names' → logprob: -7.663564205169678
    6. '_name' → logprob: -8.03856372833252
    7. 'self' → logprob: -9.66356372833252
    8. '(s' → logprob: -10.16356372833252
    9. '   ' → logprob: -10.16356372833252
    10. 'by' → logprob: -11.03856372833252

Token 573: '_power' (ID: 51623)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0016486376989632845
    2. 'self' → logprob: -6.501648426055908
    3. '_power' → logprob: -9.501648902893066
    4. '(self' → logprob: -10.751648902893066
    5. 'index' → logprob: -10.876648902893066
    6. 'pow' → logprob: -11.376648902893066
    7. ' power' → logprob: -11.626648902893066
    8. 'value' → logprob: -12.876648902893066
    9. 'ex' → logprob: -13.001648902893066
    10. 'powers' → logprob: -13.001648902893066

Token 574: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007123126997612417
    2. '(' → logprob: -7.2507123947143555
    3. 'self' → logprob: -13.500712394714355
    4. '(
' → logprob: -14.125712394714355
    5. ' (' → logprob: -16.50071144104004
    6. '   ' → logprob: -18.00071144104004
    7. '(Self' → logprob: -18.00071144104004
    8. '[self' → logprob: -18.25071144104004
    9. '	self' → logprob: -18.62571144104004
    10. 'def' → logprob: -18.62571144104004

Token 575: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.056634217500686646
    2. 'self' → logprob: -3.3066341876983643
    3. ',' → logprob: -4.181634426116943
    4. '(' → logprob: -6.431634426116943
    5. ')' → logprob: -7.056634426116943
    6. ',self' → logprob: -8.931633949279785
    7. '   ' → logprob: -9.431633949279785
    8. ' self' → logprob: -9.556633949279785
    9. '[self' → logprob: -9.556633949279785
    10. ' (' → logprob: -9.681633949279785

Token 576: ' power' (ID: 3470)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02976345270872116
    2. 'power' → logprob: -3.5297634601593018
    3. 'pow' → logprob: -12.029763221740723
    4. ' self' → logprob: -12.904763221740723
    5. '       ' → logprob: -13.279763221740723
    6. '   ' → logprob: -13.529763221740723
    7. 'Power' → logprob: -14.154763221740723
    8. 'powers' → logprob: -14.779763221740723
    9. ' power' → logprob: -15.404763221740723
    10. '(self' → logprob: -16.90476417541504

Token 577: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023127729073166847
    2. ':int' → logprob: -4.523127555847168
    3. '):' → logprob: -4.523127555847168
    4. ')' → logprob: -7.398127555847168
    5. '):
' → logprob: -7.773127555847168
    6. 'self' → logprob: -10.148127555847168
    7. '   ' → logprob: -10.273127555847168
    8. 'int' → logprob: -11.148127555847168
    9. ' :' → logprob: -12.273127555847168
    10. '       ' → logprob: -12.273127555847168

Token 578: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. ' int' → logprob: -15.625
    3. '[int' → logprob: -16.875
    4. ')' → logprob: -18.375
    5. '4' → logprob: -19.0
    6. ':int' → logprob: -19.125
    7. '=int' → logprob: -20.5
    8. '   ' → logprob: -20.75
    9. 'Optional' → logprob: -21.125
    10. '```' → logprob: -21.25

Token 579: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009544557542540133
    2. '):' → logprob: -7.125954627990723
    3. '):
' → logprob: -9.500954627990723
    4. ')->' → logprob: -9.625954627990723
    5. ':' → logprob: -11.750954627990723
    6. '   ' → logprob: -14.500954627990723
    7. '):
' → logprob: -15.250954627990723
    8. ' )' → logprob: -15.375954627990723
    9. '->' → logprob: -16.125953674316406
    10. '       ' → logprob: -16.375953674316406

Token 580: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.19893218576908112
    2. ':' → logprob: -1.94893217086792
    3. ' ->' → logprob: -3.32393217086792
    4. ')->' → logprob: -6.94893217086792
    5. ')' → logprob: -7.07393217086792
    6. '   ' → logprob: -9.573932647705078
    7. '       ' → logprob: -10.948932647705078
    8. '->____' → logprob: -11.323932647705078
    9. ':
' → logprob: -11.448932647705078
    10. '()->' → logprob: -11.823932647705078

Token 581: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.0001907855912577361
    2. 'Number' → logprob: -9.000190734863281
    3. ' Optional' → logprob: -9.625190734863281
    4. 'optional' → logprob: -14.500190734863281
    5. '(Optional' → logprob: -14.500190734863281
    6. '	Optional' → logprob: -15.750190734863281
    7. 'str' → logprob: -17.00019073486328
    8. '   ' → logprob: -17.75019073486328
    9. '_optional' → logprob: -17.87519073486328
    10. '.Optional' → logprob: -19.12519073486328

Token 582: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.774276774493046e-05
    2. '[int' → logprob: -10.500038146972656
    3. '[
' → logprob: -12.750038146972656
    4. '[Int' → logprob: -13.000038146972656
    5. '[Index' → logprob: -13.375038146972656
    6. 'Number' → logprob: -13.750038146972656
    7. '['' → logprob: -14.375038146972656
    8. '[List' → logprob: -14.875038146972656
    9. '[str' → logprob: -15.375038146972656
    10. '[...]' → logprob: -15.500038146972656

Token 583: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -3.128163257315464e-07
    2. 'str' → logprob: -15.75
    3. ' Number' → logprob: -16.25
    4. 'int' → logprob: -21.375
    5. 'number' → logprob: -22.75
    6. 'Name' → logprob: -23.25
    7. 'String' → logprob: -23.25
    8. '_number' → logprob: -23.75
    9. '_Number' → logprob: -23.875
    10. 'List' → logprob: -24.375

Token 584: 'Unit' (ID: 6728)
  Prédit: 'Unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -1.9361264946837764e-07
    2. '<Unit' → logprob: -16.875
    3. 'unit' → logprob: -17.125
    4. '_unit' → logprob: -18.375
    5. '[' → logprob: -19.375
    6. 'Uint' → logprob: -20.25
    7. '_UNIT' → logprob: -20.25
    8. '[int' → logprob: -20.25
    9. ' Unit' → logprob: -20.25
    10. '[str' → logprob: -20.5

Token 585: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4395868182182312
    2. '):
' → logprob: -1.064586877822876
    3. ':' → logprob: -5.189586639404297
    4. '   ' → logprob: -5.939586639404297
    5. ':
' → logprob: -6.439586639404297
    6. ']:' → logprob: -8.189586639404297
    7. ')' → logprob: -8.439586639404297
    8. '       ' → logprob: -8.564586639404297
    9. ']:
' → logprob: -8.814586639404297
    10. '():
' → logprob: -9.689586639404297

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012430864153429866
    2. 'if' → logprob: -8.001242637634277
    3. 'for' → logprob: -8.126242637634277
    4. ' for' → logprob: -8.376242637634277
    5. '   ' → logprob: -8.751242637634277
    6. ':' → logprob: -9.251242637634277
    7. ' if' → logprob: -9.876242637634277
    8. '```' → logprob: -10.251242637634277
    9. 'return' → logprob: -11.001242637634277
    10. '#' → logprob: -11.751242637634277

Token 587: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6227132081985474
    2. 'for' → logprob: -0.8727132081985474
    3. ' for' → logprob: -3.122713088989258
    4. 'if' → logprob: -6.622713088989258
    5. 'return' → logprob: -9.122713088989258
    6. 'space' → logprob: -9.497713088989258
    7. ' if' → logprob: -9.622713088989258
    8. '   ' → logprob: -10.497713088989258
    9. '```' → logprob: -11.122713088989258
    10. '#' (adapté à ' #') → logprob: -12.122713088989258

Token 588: ' Given' (ID: 29844)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13305267691612244
    2. 'if' → logprob: -2.1330525875091553
    3. '       ' → logprob: -5.883052825927734
    4. 'index' → logprob: -5.883052825927734
    5. 'return' → logprob: -7.633052825927734
    6. 'idx' → logprob: -10.383052825927734
    7. 'power' → logprob: -11.508052825927734
    8. '   ' → logprob: -13.008052825927734
    9. ' for' → logprob: -13.133052825927734
    10. '#' → logprob: -13.758052825927734

Token 589: ' the' (ID: 290)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0008195152622647583
    2. ' power' → logprob: -7.375819683074951
    3. '   ' → logprob: -10.000819206237793
    4. '(power' → logprob: -10.125819206237793
    5. 'pow' → logprob: -10.375819206237793
    6. 'self' → logprob: -10.875819206237793
    7. 'None' → logprob: -11.000819206237793
    8. '       ' → logprob: -11.125819206237793
    9. 'next' → logprob: -11.250819206237793
    10. 'unit' → logprob: -12.250819206237793

Token 590: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0024821963161230087
    2. ' power' → logprob: -6.0024824142456055
    3. '   ' → logprob: -13.377482414245605
    4. 'pow' → logprob: -13.377482414245605
    5. 'next' → logprob: -13.752482414245605
    6. 'unit' → logprob: -14.627482414245605
    7. ' ' → logprob: -14.627482414245605
    8. '  ' → logprob: -15.002482414245605
    9. '(power' → logprob: -15.252482414245605
    10. '       ' → logprob: -15.252482414245605

Token 591: ' (' (ID: 350)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9302979707717896
    2. '=' → logprob: -2.1802978515625
    3. ',' → logprob: -2.3052978515625
    4. 'of' → logprob: -2.8052978515625
    5. 'if' → logprob: -2.9302978515625
    6. '       ' → logprob: -3.0552978515625
    7. ' ==' → logprob: -3.3052978515625
    8. 'in' → logprob: -3.4302978515625
    9. '   ' → logprob: -3.4302978515625
    10. ' in' → logprob: -3.4302978515625

Token 592: 'multiple' (ID: 76466)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.001572471926920116
    2. ' power' → logprob: -6.501572608947754
    3. '4' → logprob: -9.876572608947754
    4. 'pow' → logprob: -11.876572608947754
    5. '   ' → logprob: -12.376572608947754
    6. ')' → logprob: -12.876572608947754
    7. '       ' → logprob: -13.126572608947754
    8. '(power' → logprob: -14.251572608947754
    9. 'return' → logprob: -14.626572608947754
    10. '```' → logprob: -14.751572608947754

Token 593: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.1688181608915329
    2. ' of' → logprob: -1.9188181161880493
    3. '==' → logprob: -5.79381799697876
    4. '=' → logprob: -5.91881799697876
    5. '   ' → logprob: -6.54381799697876
    6. '_of' → logprob: -6.66881799697876
    7. 'Of' → logprob: -10.668818473815918
    8. '_' → logprob: -11.168818473815918
    9. ' ==' → logprob: -11.293818473815918
    10. '	of' → logprob: -11.418818473815918

Token 594: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.125017166137695
    3. '   ' → logprob: -13.125017166137695
    4. '10' → logprob: -18.125017166137695
    5. '  ' → logprob: -19.750017166137695
    6. '1' → logprob: -20.125017166137695
    7. '100' → logprob: -20.125017166137695
    8. 'def' → logprob: -20.250017166137695
    9. '```' → logprob: -20.375017166137695
    10. '400' → logprob: -20.625017166137695

Token 595: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.250001907348633
    5. '' → logprob: -20.125001907348633
    6. '۴' → logprob: -20.750001907348633
    7. '４' → logprob: -21.125001907348633
    8. '٤' → logprob: -22.000001907348633
    9. '৪' → logprob: -22.125001907348633
    10. 'def' → logprob: -22.250001907348633

Token 596: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5628731846809387
    2. '):
' → logprob: -0.9378731846809387
    3. '):' → logprob: -3.437873125076294
    4. ')' → logprob: -5.812873363494873
    5. '   ' → logprob: -5.937873363494873
    6. '):

' → logprob: -7.687873363494873
    7. ',' → logprob: -8.562872886657715
    8. '       ' → logprob: -8.812872886657715
    9. '),
' → logprob: -9.062872886657715
    10. ' ),' → logprob: -9.562872886657715

Token 597: ' return' (ID: 622)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.1382959485054016
    2. 'for' → logprob: -2.638295888900757
    3. ' index' → logprob: -3.763295888900757
    4. 'if' → logprob: -4.388296127319336
    5. '       ' → logprob: -4.638296127319336
    6. 'return' → logprob: -5.138296127319336
    7. ' for' → logprob: -5.388296127319336
    8. 'idx' → logprob: -6.513296127319336
    9. ' if' → logprob: -8.138296127319336
    10. ' return' → logprob: -9.513296127319336

Token 598: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019594402983784676
    2. 'next' → logprob: -6.251959323883057
    3. ' self' → logprob: -11.001959800720215
    4. ' next' → logprob: -11.251959800720215
    5. '       ' → logprob: -14.626959800720215
    6. 'None' → logprob: -14.626959800720215
    7. '   ' → logprob: -15.376959800720215
    8. 'Next' → logprob: -17.3769588470459
    9. '(self' → logprob: -17.5019588470459
    10. '[self' → logprob: -19.0019588470459

Token 599: ' corresponding' (ID: 21824)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6457620859146118
    2. 'self' → logprob: -1.2707620859146118
    3. 'unit' → logprob: -1.6457620859146118
    4. ' next' → logprob: -6.770761966705322
    5. 'Number' → logprob: -6.895761966705322
    6. ' self' → logprob: -10.77076244354248
    7. ' unit' → logprob: -11.14576244354248
    8. 'Next' → logprob: -11.52076244354248
    9. 'Unit' → logprob: -11.52076244354248
    10. 'token' → logprob: -12.14576244354248

Token 600: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.07930359989404678
    2. 'Number' → logprob: -2.954303503036499
    3. 'self' → logprob: -4.079303741455078
    4. 'for' → logprob: -5.329303741455078
    5. 'next' → logprob: -6.329303741455078
    6. 'token' → logprob: -8.204303741455078
    7. ' unit' → logprob: -9.579303741455078
    8. 'return' → logprob: -9.829303741455078
    9. 'if' → logprob: -10.079303741455078
    10. 'Unit' → logprob: -10.329303741455078

Token 601: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23664550483226776
    2. 'for' → logprob: -1.7366454601287842
    3. ' for' → logprob: -3.986645460128784
    4. ':' → logprob: -5.111645698547363
    5. 'if' → logprob: -5.486645698547363
    6. 'index' → logprob: -6.111645698547363
    7. ',' → logprob: -6.736645698547363
    8. ' if' → logprob: -7.611645698547363
    9. ' or' → logprob: -7.986645698547363
    10. '[' → logprob: -8.111645698547363

Token 602: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011767742689698935
    2. 'next' → logprob: -6.751176834106445
    3. '[self' → logprob: -13.001176834106445
    4. '
' → logprob: -13.751176834106445
    5. '       ' → logprob: -13.876176834106445
    6. ' self' → logprob: -13.876176834106445
    7. 'the' → logprob: -14.626176834106445
    8. ' next' → logprob: -14.626176834106445
    9. '(self' → logprob: -15.626176834106445
    10. '[next' → logprob: -15.751176834106445

Token 603: ' table' (ID: 3293)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0072453683242201805
    2. 'units' → logprob: -5.0072455406188965
    3. 'unit' → logprob: -8.132245063781738
    4. '.units' → logprob: -9.757245063781738
    5. 'next' → logprob: -10.007245063781738
    6. '       ' → logprob: -10.632245063781738
    7. 'Unit' → logprob: -10.882245063781738
    8. '
' → logprob: -11.007245063781738
    9. 'for' → logprob: -11.132245063781738
    10. '   ' → logprob: -11.632245063781738

Token 604: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011652224930003285
    2. ' for' → logprob: -7.501165390014648
    3. 'for' → logprob: -8.126165390014648
    4. ',' → logprob: -9.626165390014648
    5. '<|end|>' → logprob: -9.751165390014648
    6. ':' → logprob: -10.126165390014648
    7. '   ' → logprob: -10.626165390014648
    8. '<|end|>' → logprob: -11.001165390014648
    9. 'index' → logprob: -11.501165390014648
    10. 'tokens' → logprob: -11.501165390014648

Token 605: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09291279315948486
    2. 'for' → logprob: -2.7179126739501953
    3. 'if' → logprob: -4.217912673950195
    4. ' for' → logprob: -5.842912673950195
    5. 'return' → logprob: -5.967912673950195
    6. ' if' → logprob: -7.592912673950195
    7. '```' → logprob: -7.717912673950195
    8. '<|end|>' → logprob: -7.717912673950195
    9. 'token' → logprob: -7.967912673950195
    10. 'index' → logprob: -8.217912673950195

Token 606: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3608762323856354
    2. 'for' (adapté à ' for') → logprob: -1.610876202583313
    3. 'index' → logprob: -2.8608763217926025
    4. 'if' → logprob: -3.2358763217926025
    5. 'return' → logprob: -5.360876083374023
    6. ' for' → logprob: -6.860876083374023
    7. 'power' → logprob: -7.485876083374023
    8. 'idx' → logprob: -8.610876083374023
    9. ' if' → logprob: -9.610876083374023
    10. ' index' → logprob: -10.235876083374023

Token 607: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -7.52919222577475e-05
    2. 'u' → logprob: -9.500075340270996
    3. ' unit' → logprob: -15.000075340270996
    4. '	unit' → logprob: -19.75007438659668
    5. 'units' → logprob: -19.75007438659668
    6. '(unit' → logprob: -20.00007438659668
    7. 'uni' → logprob: -20.00007438659668
    8. 'ut' → logprob: -20.75007438659668
    9. 'un' → logprob: -20.75007438659668
    10. 'Unit' → logprob: -21.50007438659668

Token 608: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0788925439119339
    2. 'in' → logprob: -2.578892469406128
    3. '	in' → logprob: -13.328892707824707
    4. ' ' → logprob: -14.953892707824707
    5. '_in' → logprob: -15.578892707824707
    6. 'import' → logprob: -16.07889175415039
    7. '   ' → logprob: -16.45389175415039
    8. 'self' → logprob: -17.07889175415039
    9. '       ' → logprob: -17.20389175415039
    10. ' ' → logprob: -17.20389175415039

Token 609: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.320199877838604e-07
    2. ' self' → logprob: -14.75
    3. '       ' → logprob: -19.75
    4. '   ' → logprob: -20.125
    5. '(self' → logprob: -20.375
    6. '[self' → logprob: -21.0
    7. '	self' → logprob: -22.5
    8. '
' → logprob: -22.625
    9. ' ' → logprob: -23.125
    10. '=self' → logprob: -23.125

Token 610: '.units' (ID: 121284)
  Prédit: '.units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.units' → logprob: -7.493430894101039e-05
    2. 'units' → logprob: -9.500075340270996
    3. 'self' → logprob: -16.87507438659668
    4. 'Units' → logprob: -18.00007438659668
    5. '_units' → logprob: -18.87507438659668
    6. '.' → logprob: -18.87507438659668
    7. ' .' → logprob: -19.00007438659668
    8. ' units' → logprob: -19.50007438659668
    9. '.users' → logprob: -19.75007438659668
    10. '.unit' → logprob: -19.87507438659668

Token 611: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5146673917770386
    2. '       ' → logprob: -1.3896673917770386
    3. ' if' → logprob: -2.389667510986328
    4. ':
' → logprob: -3.139667510986328
    5. '   ' → logprob: -4.889667510986328
    6. 'if' → logprob: -5.514667510986328
    7. '<|end|>' → logprob: -6.014667510986328
    8. '           ' → logprob: -6.764667510986328
    9. '<|end|>' → logprob: -7.639667510986328
    10. ',' → logprob: -7.639667510986328

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006686006207019091
    2. ' if' → logprob: -5.256686210632324
    3. 'if' → logprob: -6.756686210632324
    4. '       ' → logprob: -8.631686210632324
    5. '	       ' → logprob: -9.631686210632324
    6. ',' → logprob: -11.631686210632324
    7. ':' → logprob: -11.631686210632324
    8. '	   ' → logprob: -12.256686210632324
    9. '<|end|>' → logprob: -12.381686210632324
    10. '   ' → logprob: -12.631686210632324

Token 613: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015645764768123627
    2. '           ' → logprob: -4.265645980834961
    3. ' if' → logprob: -6.515645980834961
    4. '   ' → logprob: -14.265645980834961
    5. '	if' → logprob: -15.390645980834961
    6. 'If' → logprob: -15.890645980834961
    7. '	       ' → logprob: -17.14064598083496
    8. '       ' → logprob: -17.51564598083496
    9. '               ' → logprob: -17.89064598083496
    10. ' ' → logprob: -17.89064598083496

Token 614: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -2.4391956685576588e-05
    2. ' unit' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.750024795532227
    4. '	unit' → logprob: -18.875024795532227
    5. '           ' → logprob: -19.000024795532227
    6. '(unit' → logprob: -20.500024795532227
    7. 'power' → logprob: -20.750024795532227
    8. '       ' → logprob: -21.125024795532227
    9. '.unit' → logprob: -21.250024795532227
    10. ' ' → logprob: -21.375024795532227

Token 615: '.power' (ID: 81878)
  Prédit: '.power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.power' → logprob: -5.796184723294573e-06
    2. '.pow' → logprob: -12.125005722045898
    3. 'power' → logprob: -15.625005722045898
    4. '.' → logprob: -16.8750057220459
    5. '.Power' → logprob: -17.6250057220459
    6. '.name' → logprob: -18.6250057220459
    7. '.password' → logprob: -18.8750057220459
    8. ' power' → logprob: -19.3750057220459
    9. '.p' → logprob: -19.5000057220459
    10. '.property' → logprob: -19.6250057220459

Token 616: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014164687134325504
    2. ' ==' → logprob: -4.264164924621582
    3. '=' → logprob: -14.764164924621582
    4. '==
' → logprob: -15.014164924621582
    5. '===' → logprob: -15.264164924621582
    6. ')==' → logprob: -16.389163970947266
    7. '           ' → logprob: -16.389163970947266
    8. ']==' → logprob: -16.639163970947266
    9. '()==' → logprob: -17.139163970947266
    10. '<=' → logprob: -17.264163970947266

Token 617: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0015024791937321424
    2. ' power' → logprob: -6.501502513885498
    3. 'pow' → logprob: -15.87650203704834
    4. '   ' → logprob: -19.876502990722656
    5. 'Power' → logprob: -21.376502990722656
    6. '(power' → logprob: -21.626502990722656
    7. 'powers' → logprob: -22.126502990722656
    8. '_power' → logprob: -22.251502990722656
    9. '       ' → logprob: -22.751502990722656
    10. ' ' → logprob: -22.751502990722656

Token 618: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37962067127227783
    2. ':' → logprob: -1.3796206712722778
    3. '               ' → logprob: -3.0046205520629883
    4. ':return' → logprob: -4.504620552062988
    5. '           ' → logprob: -5.879620552062988
    6. ' and' → logprob: -8.004620552062988
    7. 'return' → logprob: -8.504620552062988
    8. 'and' → logprob: -9.754620552062988
    9. '):
' → logprob: -9.754620552062988
    10. ' return' → logprob: -10.379620552062988

Token 619: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14765509963035583
    2. '           ' → logprob: -2.0226550102233887
    3. 'return' → logprob: -5.397655010223389
    4. ' return' → logprob: -8.147655487060547
    5. ':return' → logprob: -9.147655487060547
    6. ':' → logprob: -11.272655487060547
    7. '	       ' → logprob: -12.022655487060547
    8. '              ' → logprob: -12.397655487060547
    9. ':
' → logprob: -12.647655487060547
    10. '                       ' → logprob: -12.897655487060547

Token 620: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000181372175575234
    2. '               ' → logprob: -9.125181198120117
    3. ' return' → logprob: -9.750181198120117
    4. '           ' → logprob: -11.500181198120117
    5. ':return' → logprob: -12.875181198120117
    6. '	return' → logprob: -14.000181198120117
    7. '{return' → logprob: -15.125181198120117
    8. '                   ' → logprob: -15.625181198120117
    9. '@return' → logprob: -17.250181198120117
    10. ')return' → logprob: -17.625181198120117

Token 621: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -3.128163257315464e-07
    2. ' unit' → logprob: -15.125
    3. '(unit' → logprob: -21.875
    4. '	unit' → logprob: -22.5
    5. '   ' → logprob: -23.375
    6. 'Unit' → logprob: -25.0
    7. '.unit' → logprob: -25.0
    8. 'user' → logprob: -25.375
    9. '           ' → logprob: -26.0
    10. 'units' → logprob: -26.125

Token 622: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3618096113204956
    2. '<|end|>' → logprob: -1.2368096113204956
    3. 'return' → logprob: -4.986809730529785
    4. '<|end|>' → logprob: -5.486809730529785
    5. '
' → logprob: -7.611809730529785
    6. ' return' → logprob: -7.861809730529785
    7. '[' → logprob: -8.111809730529785
    8. '```' → logprob: -8.111809730529785
    9. '.' → logprob: -9.236809730529785
    10. '<Token' → logprob: -9.611809730529785

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007641532924026251
    2. 'return' → logprob: -5.007641315460205
    3. '<|end|>' → logprob: -7.632641315460205
    4. ' return' → logprob: -8.257641792297363
    5. '[' → logprob: -9.757641792297363
    6. '
' → logprob: -10.632641792297363
    7. 'None' → logprob: -11.132641792297363
    8. '```' → logprob: -11.507641792297363
    9. '   ' → logprob: -11.507641792297363
    10. '[]' → logprob: -11.882641792297363

Token 624: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00021021578868385404
    2. 'None' → logprob: -8.50020980834961
    3. ' return' → logprob: -12.00020980834961
    4. '       ' → logprob: -14.62520980834961
    5. '```' → logprob: -17.37520980834961
    6. '	return' → logprob: -18.12520980834961
    7. '   ' → logprob: -18.25020980834961
    8. ':return' → logprob: -19.12520980834961
    9. 'Return' → logprob: -19.25020980834961
    10. '
' → logprob: -19.25020980834961

Token 625: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.676292231422849e-05
    2. ' None' → logprob: -11.000017166137695
    3. '(None' → logprob: -23.000017166137695
    4. '_None' → logprob: -23.500017166137695
    5. '=None' → logprob: -24.125017166137695
    6. 'none' → logprob: -24.375017166137695
    7. '   ' → logprob: -25.125017166137695
    8. '```' → logprob: -26.000017166137695
    9. '       ' → logprob: -26.250017166137695
    10. ',None' → logprob: -26.250017166137695

Token 626: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 627: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5797846913337708
    2. '   ' → logprob: -1.079784631729126
    3. '\' → logprob: -3.704784631729126
    4. ' def' → logprob: -3.954784631729126
    5. ':' → logprob: -4.204784870147705
    6. ' 
' → logprob: -4.954784870147705
    7. ' ' → logprob: -5.079784870147705
    8. '```' → logprob: -5.204784870147705
    9. '\n' → logprob: -5.204784870147705
    10. ')' → logprob: -5.454784870147705

Token 628: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006899728439748287
    2. '   ' → logprob: -5.006899833679199
    3. ' def' → logprob: -8.8818998336792
    4. 'class' → logprob: -10.1318998336792
    5. '```' → logprob: -13.0068998336792
    6. ' ' → logprob: -13.5068998336792
    7. '	def' → logprob: -13.6318998336792
    8. '    ' → logprob: -15.2568998336792
    9. '    
' → logprob: -15.8818998336792
    10. '
' → logprob: -16.006898880004883

Token 629: ' max' (ID: 2999)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -1.3678830862045288
    2. 'iterate' → logprob: -1.6178830862045288
    3. 'units' → logprob: -2.1178832054138184
    4. '__' → logprob: -2.2428832054138184
    5. 'get' → logprob: -2.2428832054138184
    6. 'unit' → logprob: -2.4928832054138184
    7. 'max' → logprob: -3.2428832054138184
    8. 'parse' → logprob: -4.742883205413818
    9. ' iterate' → logprob: -4.742883205413818
    10. 'iterator' → logprob: -4.742883205413818

Token 630: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.0015264061512425542
    2. '_unit' → logprob: -6.501526355743408
    3. 'power' → logprob: -11.876526832580566
    4. '_number' → logprob: -12.876526832580566
    5. '_supported' → logprob: -12.876526832580566
    6. '_pow' → logprob: -12.876526832580566
    7. 'Power' → logprob: -13.001526832580566
    8. '_ex' → logprob: -13.001526832580566
    9. '_index' → logprob: -14.001526832580566
    10. '_scale' → logprob: -14.126526832580566

Token 631: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002656271681189537
    2. '(' → logprob: -8.375266075134277
    3. 'self' → logprob: -10.750266075134277
    4. '   ' → logprob: -12.625266075134277
    5. '(
' → logprob: -12.625266075134277
    6. ' (' → logprob: -13.125266075134277
    7. ' self' → logprob: -13.750266075134277
    8. '<|end|>' → logprob: -14.000266075134277
    9. '()' → logprob: -14.125266075134277
    10. ')' → logprob: -14.625266075134277

Token 632: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015077205607667565
    2. '):
' → logprob: -6.876507759094238
    3. '):' → logprob: -8.751507759094238
    4. '()' → logprob: -9.126507759094238
    5. ')->' → logprob: -9.501507759094238
    6. ')return' → logprob: -10.001507759094238
    7. '(self' → logprob: -10.376507759094238
    8. 'self' → logprob: -11.001507759094238
    9. '():
' → logprob: -11.501507759094238
    10. '())' → logprob: -11.751507759094238

Token 633: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006000251974910498
    2. '   ' → logprob: -6.13100004196167
    3. '       ' → logprob: -6.13100004196167
    4. 'self' → logprob: -7.25600004196167
    5. '(' → logprob: -8.006000518798828
    6. ':' → logprob: -8.506000518798828
    7. '->' → logprob: -8.756000518798828
    8. ')' → logprob: -10.256000518798828
    9. '(
' → logprob: -10.256000518798828
    10. ' ->' → logprob: -10.506000518798828

Token 634: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01053624041378498
    2. '24' → logprob: -4.760536193847656
    3. ' int' → logprob: -6.260536193847656
    4. ' ' → logprob: -12.135536193847656
    5. '   ' → logprob: -13.635536193847656
    6. '(int' → logprob: -14.260536193847656
    7. 'Int' → logprob: -14.885536193847656
    8. 'property' → logprob: -15.010536193847656
    9. ':int' → logprob: -15.135536193847656
    10. '[int' → logprob: -15.260536193847656

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7073342800140381
    2. '       ' → logprob: -1.582334280014038
    3. ':
' → logprob: -1.957334280014038
    4. '   ' → logprob: -2.082334280014038
    5. '->' → logprob: -4.457334518432617
    6. ')' → logprob: -5.207334518432617
    7. '):
' → logprob: -5.457334518432617
    8. '(self' → logprob: -5.707334518432617
    9. ':return' → logprob: -5.707334518432617
    10. '():
' → logprob: -6.332334518432617

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014951115474104881
    2. '24' → logprob: -4.264951229095459
    3. 'return' → logprob: -7.264951229095459
    4. '25' → logprob: -10.5149507522583
    5. ' return' → logprob: -10.6399507522583
    6. '26' → logprob: -11.7649507522583
    7. '   ' → logprob: -11.8899507522583
    8. '23' → logprob: -12.1399507522583
    9. '(self' → logprob: -13.0149507522583
    10. '28' → logprob: -13.1399507522583

Token 637: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2994968891143799
    2. 'return' → logprob: -1.7994968891143799
    3. '24' → logprob: -2.54949688911438
    4. '       ' → logprob: -4.424496650695801
    5. ' self' → logprob: -6.424496650695801
    6. ' return' → logprob: -7.049496650695801
    7. '28' → logprob: -7.799496650695801
    8. '   ' → logprob: -8.2994966506958
    9. '```' → logprob: -9.7994966506958
    10. '26' → logprob: -10.0494966506958

Token 638: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002514658262953162
    2. '       ' → logprob: -6.752514839172363
    3. ' return' → logprob: -7.252514839172363
    4. 'self' → logprob: -7.752514839172363
    5. '24' → logprob: -8.502514839172363
    6. '   ' → logprob: -13.627514839172363
    7. '28' → logprob: -14.752514839172363
    8. ' self' → logprob: -15.252514839172363
    9. '	return' → logprob: -15.627514839172363
    10. ' ' → logprob: -15.627514839172363

Token 639: ' maximum' (ID: 10562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.518582762917504e-05
    2. ' self' → logprob: -9.50008487701416
    3. '24' → logprob: -11.50008487701416
    4. '   ' → logprob: -17.000085830688477
    5. '       ' → logprob: -17.500085830688477
    6. '(self' → logprob: -17.750085830688477
    7. 'max' → logprob: -17.750085830688477
    8. '28' → logprob: -17.750085830688477
    9. '	self' → logprob: -18.500085830688477
    10. '26' → logprob: -19.500085830688477

Token 640: ' power' (ID: 3470)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00798276998102665
    2. 'power' → logprob: -5.2579827308654785
    3. ' self' → logprob: -6.0079827308654785
    4. '(self' → logprob: -8.632983207702637
    5. '24' → logprob: -9.507983207702637
    6. 'unit' → logprob: -11.007983207702637
    7. ' power' → logprob: -11.632983207702637
    8. '_power' → logprob: -12.382983207702637
    9. '   ' → logprob: -13.507983207702637
    10. '4' → logprob: -13.507983207702637

Token 641: ' defined' (ID: 9113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10364880412817001
    2. '()' → logprob: -3.1036489009857178
    3. '24' → logprob: -3.9786489009857178
    4. 'return' → logprob: -4.353648662567139
    5. '(self' → logprob: -4.353648662567139
    6. ':' → logprob: -6.228648662567139
    7. '():
' → logprob: -6.228648662567139
    8. ' =' → logprob: -6.478648662567139
    9. '=' → logprob: -6.728648662567139
    10. ')' → logprob: -7.853648662567139

Token 642: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29373499751091003
    2. '()' → logprob: -1.4187350273132324
    3. '24' → logprob: -5.418735027313232
    4. '   ' → logprob: -6.168735027313232
    5. '()
' → logprob: -6.543735027313232
    6. 'return' → logprob: -6.668735027313232
    7. '(self' → logprob: -6.793735027313232
    8. 'in' → logprob: -7.793735027313232
    9. '():
' → logprob: -8.168734550476074
    10. ' in' → logprob: -8.168734550476074

Token 643: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04685279726982117
    2. '       ' → logprob: -3.1718528270721436
    3. '()
' → logprob: -6.4218525886535645
    4. '24' → logprob: -6.9218525886535645
    5. '   ' → logprob: -7.2968525886535645
    6. '():
' → logprob: -8.546853065490723
    7. '():' → logprob: -9.046853065490723
    8. '(self' → logprob: -9.796853065490723
    9. ' ()' → logprob: -10.171853065490723
    10. ')' → logprob: -10.796853065490723

Token 644: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11248317360877991
    2. '24' → logprob: -2.362483263015747
    3. '       ' → logprob: -4.987483024597168
    4. ' return' → logprob: -5.237483024597168
    5. '   ' → logprob: -11.362483024597168
    6. ' ' → logprob: -11.362483024597168
    7. '25' → logprob: -11.612483024597168
    8. 'self' → logprob: -11.862483024597168
    9. '28' → logprob: -12.112483024597168
    10. '26' → logprob: -12.112483024597168

Token 645: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023555360734462738
    2. '24' → logprob: -3.773555278778076
    3. ' self' → logprob: -8.148555755615234
    4. 'max' → logprob: -11.023555755615234
    5. ' ' → logprob: -12.898555755615234
    6. '(self' → logprob: -14.023555755615234
    7. '   ' → logprob: -14.148555755615234
    8. '	self' → logprob: -15.398555755615234
    9. '28' → logprob: -16.273555755615234
    10. '       ' → logprob: -17.523555755615234

Token 646: '.units' (ID: 121284)
  Prédit: '.units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.units' → logprob: -5.68153518543113e-05
    2. '.' → logprob: -10.875057220458984
    3. 'units' → logprob: -11.125057220458984
    4. '.max' → logprob: -11.500057220458984
    5. '.power' → logprob: -11.750057220458984
    6. '.tokens' → logprob: -13.250057220458984
    7. '.un' → logprob: -13.875057220458984
    8. '.pow' → logprob: -14.250057220458984
    9. '.unit' → logprob: -14.500057220458984
    10. ' .' → logprob: -14.625057220458984

Token 647: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.875004768371582
    3. '[len' → logprob: -13.375004768371582
    4. '```' → logprob: -15.250004768371582
    5. '][-' → logprob: -16.000003814697266
    6. '-' → logprob: -16.625003814697266
    7. '   ' → logprob: -17.125003814697266
    8. '[
' → logprob: -17.625003814697266
    9. '[max' → logprob: -17.875003814697266
    10. '.__' → logprob: -18.750003814697266

Token 648: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '.' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.187501907348633
    5. '-' → logprob: -17.375001907348633
    6. '```' → logprob: -18.062501907348633
    7. '１' → logprob: -18.437501907348633
    8. '  ' → logprob: -18.437501907348633
    9. '0' → logprob: -18.562501907348633
    10. '`' → logprob: -19.062501907348633

Token 649: '].' (ID: 1651)
  Prédit: '.power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.power' → logprob: -0.0015587854431942105
    2. '].' → logprob: -6.751558780670166
    3. ').' → logprob: -8.876559257507324
    4. '.pow' → logprob: -9.376559257507324
    5. '.' → logprob: -10.126559257507324
    6. ' .' → logprob: -10.251559257507324
    7. '.value' → logprob: -11.376559257507324
    8. '.unit' → logprob: -11.751559257507324
    9. '.code' → logprob: -12.126559257507324
    10. '}.' → logprob: -12.501559257507324

Token 650: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: 0.0
    2. ' power' → logprob: -19.625
    3. 'pow' → logprob: -19.75
    4. '.power' → logprob: -23.25
    5. 'powers' → logprob: -24.5
    6. '_power' → logprob: -24.75
    7. 'powered' → logprob: -25.5
    8. '(power' → logprob: -25.75
    9. 'Power' → logprob: -26.0
    10. '`' → logprob: -27.375

Token 651: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 652: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001052103703841567
    2. '   ' → logprob: -7.001051902770996
    3. ' def' → logprob: -8.876051902770996
    4. '```' → logprob: -15.126051902770996
    5. '	def' → logprob: -15.126051902770996
    6. '    
' → logprob: -15.626051902770996
    7. ' ' → logprob: -16.126052856445312
    8. '
' → logprob: -17.126052856445312
    9. ')' → logprob: -17.376052856445312
    10. '    ' → logprob: -17.376052856445312

Token 654: ' powers' (ID: 27742)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3745585083961487
    2. 'unit' → logprob: -2.374558448791504
    3. 'get' → logprob: -2.499558448791504
    4. 'iter' → logprob: -3.124558448791504
    5. ' __' → logprob: -3.124558448791504
    6. 'units' → logprob: -4.124558448791504
    7. 'iterate' → logprob: -4.374558448791504
    8. 'iterator' → logprob: -5.249558448791504
    9. 'find' → logprob: -5.499558448791504
    10. 'def' → logprob: -6.124558448791504

Token 655: '_desc' (ID: 26683)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004961982485838234
    2. '(' → logprob: -7.7504963874816895
    3. '()' → logprob: -10.375495910644531
    4. 'self' → logprob: -11.125495910644531
    5. 's' → logprob: -12.625495910644531
    6. '   ' → logprob: -12.625495910644531
    7. 'def' → logprob: -12.875495910644531
    8. '(
' → logprob: -13.250495910644531
    9. '_for' → logprob: -13.250495910644531
    10. '_list' → logprob: -13.750495910644531

Token 656: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.008065787144005299
    2. '(self' → logprob: -5.383065700531006
    3. '()' → logprob: -6.008065700531006
    4. '```' → logprob: -7.508065700531006
    5. '():' → logprob: -9.383066177368164
    6. '():
' → logprob: -9.508066177368164
    7. '   ' → logprob: -9.883066177368164
    8. '_' → logprob: -10.258066177368164
    9. 'ENDING' → logprob: -10.258066177368164
    10. 'def' → logprob: -10.258066177368164

Token 657: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.75001049041748
    3. 'self' → logprob: -13.12501049041748
    4. '   ' → logprob: -15.37501049041748
    5. '(
' → logprob: -16.000009536743164
    6. ' (' → logprob: -16.375009536743164
    7. '       ' → logprob: -16.875009536743164
    8. '```' → logprob: -17.875009536743164
    9. 'def' → logprob: -18.250009536743164
    10. 's' → logprob: -18.375009536743164

Token 658: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012052309466525912
    2. ')' → logprob: -7.2512054443359375
    3. 'self' → logprob: -7.7512054443359375
    4. '   ' → logprob: -10.751205444335938
    5. '(' → logprob: -10.876205444335938
    6. '):
' → logprob: -11.126205444335938
    7. '       ' → logprob: -12.126205444335938
    8. '):' → logprob: -13.751205444335938
    9. ' self' → logprob: -14.501205444335938
    10. '```' → logprob: -14.751205444335938

Token 659: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001732179312966764
    2. 'self' → logprob: -7.126732349395752
    3. '->' → logprob: -7.501732349395752
    4. '(' → logprob: -9.126731872558594
    5. '   ' → logprob: -9.376731872558594
    6. ' ->' → logprob: -9.751731872558594
    7. '       ' → logprob: -9.876731872558594
    8. ')' → logprob: -9.876731872558594
    9. ' self' → logprob: -11.876731872558594
    10. '	self' → logprob: -12.251731872558594

Token 660: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.2521001398563385
    2. 'Iterator' → logprob: -1.5021001100540161
    3. ' Iterator' → logprob: -9.002099990844727
    4. ' List' → logprob: -10.002099990844727
    5. '   ' → logprob: -13.877099990844727
    6. 'list' → logprob: -13.877099990844727
    7. 'Generator' → logprob: -15.502099990844727
    8. 'Iterable' → logprob: -16.002099990844727
    9. '	Iterator' → logprob: -16.377099990844727
    10. 'Iter' → logprob: -16.377099990844727

Token 661: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.538490950129926e-05
    2. '[' → logprob: -10.250055313110352
    3. '[Int' → logprob: -11.250055313110352
    4. '[
' → logprob: -12.875055313110352
    5. 'int' → logprob: -13.375055313110352
    6. '<int' → logprob: -13.625055313110352
    7. '=int' → logprob: -14.500055313110352
    8. '[List' → logprob: -15.125055313110352
    9. ':
' → logprob: -15.250055313110352
    10. '[self' → logprob: -15.625055313110352

Token 662: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5904662609100342
    2. '():
' → logprob: -0.9654662609100342
    3. ']:
' → logprob: -2.965466260910034
    4. '       ' → logprob: -5.340466499328613
    5. '):
' → logprob: -5.840466499328613
    6. '   ' → logprob: -5.840466499328613
    7. '()' → logprob: -6.465466499328613
    8. 'self' → logprob: -7.215466499328613
    9. ']' → logprob: -8.340466499328613
    10. ':
' → logprob: -8.965466499328613

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14839725196361542
    2. '(self' → logprob: -2.023397207260132
    3. 'self' → logprob: -5.773397445678711
    4. '   ' → logprob: -6.148397445678711
    5. '(' → logprob: -8.023397445678711
    6. 'return' → logprob: -10.523397445678711
    7. '->' → logprob: -10.898397445678711
    8. '[self' → logprob: -11.273397445678711
    9. '[' → logprob: -11.398397445678711
    10. '(
' → logprob: -11.523397445678711

Token 664: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7334396839141846
    2. 'return' → logprob: -0.7334396839141846
    3. ' return' → logprob: -3.7334396839141846
    4. '[::-' → logprob: -4.4834394454956055
    5. '[' → logprob: -5.8584394454956055
    6. '   ' → logprob: -7.8584394454956055
    7. '[
' → logprob: -8.108439445495605
    8. '=' → logprob: -8.733439445495605
    9. ' =' → logprob: -9.233439445495605
    10. ':
' → logprob: -9.483439445495605

Token 665: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009075401350855827
    2. ' return' → logprob: -4.759075164794922
    3. '   ' → logprob: -8.259075164794922
    4. '       ' → logprob: -8.509075164794922
    5. '	return' → logprob: -16.384075164794922
    6. 'Return' → logprob: -17.509075164794922
    7. 'result' → logprob: -17.634075164794922
    8. '```' → logprob: -18.009075164794922
    9. ' ' → logprob: -18.259075164794922
    10. '[' → logprob: -18.259075164794922

Token 666: ' all' (ID: 722)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4047100245952606
    2. 'sorted' → logprob: -2.154710054397583
    3. '[p' → logprob: -2.404710054397583
    4. '[self' → logprob: -2.654710054397583
    5. 'list' → logprob: -3.404710054397583
    6. '[list' → logprob: -4.529709815979004
    7. '[i' → logprob: -5.279709815979004
    8. ' [' → logprob: -5.654709815979004
    9. '   ' → logprob: -6.654709815979004
    10. '[max' → logprob: -7.654709815979004

Token 667: ' powers' (ID: 27742)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04486968740820885
    2. '[p' → logprob: -4.169869899749756
    3. 'powers' → logprob: -4.794869899749756
    4. 'power' → logprob: -5.169869899749756
    5. 'unit' → logprob: -5.294869899749756
    6. '[i' → logprob: -5.669869899749756
    7. '[self' → logprob: -6.169869899749756
    8. ' [' → logprob: -6.794869899749756
    9. 'p' → logprob: -7.294869899749756
    10. '[
' → logprob: -7.794869899749756

Token 668: ' in' (ID: 306)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.10308647900819778
    2. 'in' → logprob: -2.728086471557617
    3. '[' → logprob: -4.728086471557617
    4. '()[' → logprob: -4.978086471557617
    5. ' in' → logprob: -5.728086471557617
    6. '       ' → logprob: -5.853086471557617
    7. 'sorted' → logprob: -5.853086471557617
    8. 'descending' → logprob: -6.103086471557617
    9. '=' → logprob: -6.228086471557617
    10. '(self' → logprob: -7.103086471557617

Token 669: ' descending' (ID: 89489)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2771011292934418
    2. 'sorted' → logprob: -1.5271011590957642
    3. '[' → logprob: -3.7771010398864746
    4. 'reverse' → logprob: -6.777101039886475
    5. '[::-' → logprob: -7.777101039886475
    6. 'descending' → logprob: -8.652101516723633
    7. '[list' → logprob: -9.027101516723633
    8. '[
' → logprob: -9.902101516723633
    9. 're' → logprob: -10.152101516723633
    10. '[self' → logprob: -11.527101516723633

Token 670: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.03458720073103905
    2. ' order' → logprob: -3.7845871448516846
    3. '[::-' → logprob: -5.409587383270264
    4. 'list' → logprob: -6.034587383270264
    5. '_order' → logprob: -6.784587383270264
    6. '[' → logprob: -7.159587383270264
    7. '()' → logprob: -7.409587383270264
    8. '_list' → logprob: -7.909587383270264
    9. '[
' → logprob: -8.034586906433105
    10. 'List' → logprob: -8.409586906433105

Token 671: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9896631240844727
    2. '(self' → logprob: -1.2396631240844727
    3. '()' → logprob: -1.6146631240844727
    4. '[::-' → logprob: -2.8646631240844727
    5. '()[' → logprob: -3.1146631240844727
    6. 'self' → logprob: -4.614663124084473
    7. '[' → logprob: -5.114663124084473
    8. '   ' → logprob: -5.364663124084473
    9. '():
' → logprob: -5.489663124084473
    10. '=' → logprob: -5.489663124084473

Token 672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6252432465553284
    2. '(self' → logprob: -1.7502431869506836
    3. '=' → logprob: -2.3752431869506836
    4. '()' → logprob: -2.5002431869506836
    5. '[::-' → logprob: -3.1252431869506836
    6. 'self' → logprob: -3.7502431869506836
    7. '[' → logprob: -4.000243186950684
    8. '   ' → logprob: -5.000243186950684
    9. '()[' → logprob: -5.250243186950684
    10. '[self' → logprob: -5.375243186950684

Token 673: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014227792620658875
    2. '       ' → logprob: -4.764227867126465
    3. ' return' → logprob: -5.389227867126465
    4. '[::-' → logprob: -7.514227867126465
    5. '[' → logprob: -7.889227867126465
    6. '   ' → logprob: -9.514227867126465
    7. '=' → logprob: -11.639227867126465
    8. 'sorted' → logprob: -11.764227867126465
    9. '[
' → logprob: -12.264227867126465
    10. ' =' → logprob: -12.639227867126465

Token 674: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7576422691345215
    2. 'sorted' → logprob: -0.7576422691345215
    3. '[self' → logprob: -3.5076422691345215
    4. 'list' → logprob: -4.2576422691345215
    5. '[list' → logprob: -4.5076422691345215
    6. ' [' → logprob: -5.1326422691345215
    7. ' sorted' → logprob: -7.7576422691345215
    8. '   ' → logprob: -8.13264274597168
    9. '[max' → logprob: -8.50764274597168
    10. '[p' → logprob: -9.63264274597168

Token 675: 'unit' (ID: 5400)
  Prédit: 'unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.005243122112005949
    2. 'u' → logprob: -5.255243301391602
    3. ' unit' → logprob: -11.630243301391602
    4. 'units' → logprob: -15.880243301391602
    5. ' u' → logprob: -16.2552433013916
    6. '(unit' → logprob: -16.5052433013916
    7. 'x' → logprob: -17.3802433013916
    8. '	unit' → logprob: -18.0052433013916
    9. 'self' → logprob: -18.2552433013916
    10. 'user' → logprob: -18.5052433013916

Token 676: '.power' (ID: 81878)
  Prédit: '.power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.power' → logprob: -1.7120533811976202e-05
    2. '.' → logprob: -11.500017166137695
    3. ' .' → logprob: -12.625017166137695
    4. '.pow' → logprob: -12.875017166137695
    5. '.unit' → logprob: -14.250017166137695
    6. '.Power' → logprob: -15.625017166137695
    7. '.p' → logprob: -16.250017166137695
    8. '.level' → logprob: -16.875017166137695
    9. 'power' → logprob: -17.125017166137695
    10. '.token' → logprob: -17.250017166137695

Token 677: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868755102157593
    2. 'for' → logprob: -1.1368755102157593
    3. '[::-' → logprob: -13.01187515258789
    4. '	for' → logprob: -13.26187515258789
    5. '           ' → logprob: -15.51187515258789
    6. '   ' → logprob: -16.26187515258789
    7. ' ' → logprob: -16.76187515258789
    8. '       ' → logprob: -16.76187515258789
    9. '    ' → logprob: -17.63687515258789
    10. '        ' → logprob: -17.88687515258789

Token 678: ' unit' (ID: 7670)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.036418378353118896
    2. 'unit' → logprob: -3.6614184379577637
    3. 're' → logprob: -5.036418437957764
    4. ' self' → logprob: -5.911418437957764
    5. ' reversed' → logprob: -7.161418437957764
    6. ' unit' → logprob: -9.411417961120605
    7. 'rev' → logprob: -13.536417961120605
    8. 'u' → logprob: -13.911417961120605
    9. 'reverse' → logprob: -14.536417961120605
    10. '	self' → logprob: -15.536417961120605

Token 679: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0650411918759346
    2. 'in' → logprob: -2.8150413036346436
    3. 'unit' → logprob: -5.8150410652160645
    4. ' unit' → logprob: -9.440041542053223
    5. 'self' → logprob: -12.315041542053223
    6. ' ' → logprob: -14.190041542053223
    7. '	in' → logprob: -14.440041542053223
    8. 's' → logprob: -14.565041542053223
    9. '	unit' → logprob: -16.065040588378906
    10. 'In' → logprob: -16.440040588378906

Token 680: ' reversed' (ID: 57184)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07890862971544266
    2. 're' → logprob: -2.578908681869507
    3. ' reversed' → logprob: -11.078908920288086
    4. ' self' → logprob: -13.203908920288086
    5. 'sorted' → logprob: -13.703908920288086
    6. 'reverse' → logprob: -15.578908920288086
    7. '(re' → logprob: -16.078908920288086
    8. 'rev' → logprob: -16.953908920288086
    9. '(self' → logprob: -17.203908920288086
    10. '[::-' → logprob: -17.703908920288086

Token 681: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033558503491804004
    2. 'self' → logprob: -8.000335693359375
    3. '(' → logprob: -16.250335693359375
    4. ' self' → logprob: -16.875335693359375
    5. '[self' → logprob: -18.750335693359375
    6. ' (' → logprob: -19.625335693359375
    7. '	self' → logprob: -19.875335693359375
    8. '=self' → logprob: -21.250335693359375
    9. ':self' → logprob: -21.375335693359375
    10. ',self' → logprob: -22.000335693359375

Token 682: '.units' (ID: 121284)
  Prédit: '.units'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.units' → logprob: -7.941850526549388e-06
    2. 'units' → logprob: -11.750007629394531
    3. '.' → logprob: -17.12500762939453
    4. ').' → logprob: -19.25000762939453
    5. '.users' → logprob: -19.50000762939453
    6. ' .' → logprob: -20.37500762939453
    7. '.unit' → logprob: -20.62500762939453
    8. '.tokens' → logprob: -21.00000762939453
    9. 'Units' → logprob: -21.12500762939453
    10. ' units' → logprob: -21.37500762939453

Token 683: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.045823566731997e-05
    2. ']' → logprob: -10.875020027160645
    3. '])]' → logprob: -14.750020027160645
    4. '])' → logprob: -15.500020027160645
    5. ' )' → logprob: -15.625020027160645
    6. ')]
' → logprob: -15.875020027160645
    7. '   ' → logprob: -16.12502098083496
    8. '()]' → logprob: -16.12502098083496
    9. ' ]' → logprob: -16.25002098083496
    10. ']]' → logprob: -16.62502098083496

Token 684: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 685: ' Large' (ID: 27976)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.322113037109375
    2. ' Number' → logprob: -1.322113037109375
    3. ' Large' → logprob: -1.822113037109375
    4. ' J' → logprob: -1.947113037109375
    5. 'Large' → logprob: -2.447113037109375
    6. 'J' → logprob: -2.822113037109375
    7. 'Unit' → logprob: -4.947113037109375
    8. ' Unit' → logprob: -5.572113037109375
    9. 'Big' → logprob: -6.447113037109375
    10. ' Big' → logprob: -6.947113037109375

Token 686: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -8.180258191714529e-06
    2. 'Integer' → logprob: -12.000008583068848
    3. ' Number' → logprob: -13.500008583068848
    4. ' number' → logprob: -15.750008583068848
    5. 'Numberish' → logprob: -16.00000762939453
    6. '_number' → logprob: -16.50000762939453
    7. '_Number' → logprob: -16.62500762939453
    8. 'Num' → logprob: -16.62500762939453
    9. 'Large' → logprob: -17.12500762939453
    10. 'umber' → logprob: -17.50000762939453

Token 687: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003939728485420346
    2. ':
' → logprob: -8.250393867492676
    3. '(' → logprob: -9.375393867492676
    4. '():' → logprob: -11.000393867492676
    5. '):' → logprob: -11.875393867492676
    6. '<|end|>' → logprob: -12.625393867492676
    7. '(Number' → logprob: -13.125393867492676
    8. ':

' → logprob: -13.125393867492676
    9. 'Unit' → logprob: -13.250393867492676
    10. ' :' → logprob: -13.375393867492676

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00714121712371707
    2. ':' → logprob: -5.00714111328125
    3. ':
' → logprob: -8.38214111328125
    4. '<|end|>' → logprob: -9.50714111328125
    5. '```' → logprob: -9.63214111328125
    6. '    ' → logprob: -11.00714111328125
    7. 'class' → logprob: -11.38214111328125
    8. '    
' → logprob: -12.00714111328125
    9. 'def' → logprob: -12.00714111328125
    10. '):
' → logprob: -12.88214111328125

Token 689: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02987382747232914
    2. ':
' → logprob: -5.154873847961426
    3. '):
' → logprob: -5.279873847961426
    4. ' def' → logprob: -5.404873847961426
    5. 'def' → logprob: -5.529873847961426
    6. 'class' → logprob: -6.029873847961426
    7. ':' → logprob: -6.154873847961426
    8. ' 
' → logprob: -6.904873847961426
    9. '
' → logprob: -7.279873847961426
    10. ' ' → logprob: -7.404873847961426

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01559753343462944
    2. 'class' → logprob: -4.390597343444824
    3. '"""
' → logprob: -6.390597343444824
    4. 'from' → logprob: -7.890597343444824
    5. 'def' → logprob: -7.890597343444824
    6. '"""' → logprob: -8.015597343444824
    7. '```' → logprob: -9.015597343444824
    8. '    ' → logprob: -10.140597343444824
    9. '"' → logprob: -10.265597343444824
    10. ')' → logprob: -11.015597343444824

Token 691: ' Handles' (ID: 47620)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06561864912509918
    2. 'class' → logprob: -3.1906187534332275
    3. 'def' → logprob: -4.940618515014648
    4. '"""
' → logprob: -5.065618515014648
    5. 'from' → logprob: -5.815618515014648
    6. ':
' → logprob: -6.565618515014648
    7. 'Represent' → logprob: -7.065618515014648
    8. '
' → logprob: -7.440618515014648
    9. ' """
' → logprob: -7.690618515014648
    10. '):
' → logprob: -7.815618515014648

Token 692: ' large' (ID: 4410)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2923226356506348
    2. ':
' → logprob: -1.6673226356506348
    3. ' parsing' → logprob: -1.6673226356506348
    4. 'par' → logprob: -2.1673226356506348
    5. 'large' → logprob: -2.9173226356506348
    6. ' large' → logprob: -3.1673226356506348
    7. 'the' → logprob: -3.5423226356506348
    8. ' the' → logprob: -3.5423226356506348
    9. 'def' → logprob: -4.292322635650635
    10. 'from' → logprob: -4.542322635650635

Token 693: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.36690425872802734
    2. 'Number' → logprob: -1.6169042587280273
    3. ' number' → logprob: -3.3669042587280273
    4. ' integers' → logprob: -3.8669042587280273
    5. 'numbers' → logprob: -3.9919042587280273
    6. 'number' → logprob: -3.9919042587280273
    7. '   ' → logprob: -4.866904258728027
    8. '_number' → logprob: -6.116904258728027
    9. ' integer' → logprob: -6.616904258728027
    10. 'int' → logprob: -6.741904258728027

Token 694: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19524364173412323
    2. ' that' → logprob: -3.0702435970306396
    3. ':' → logprob: -3.5702435970306396
    4. ':
' → logprob: -3.8202435970306396
    5. ' represented' → logprob: -3.9452435970306396
    6. ',' → logprob: -4.195243835449219
    7. '
' → logprob: -4.695243835449219
    8. 'with' → logprob: -4.945243835449219
    9. ' (' → logprob: -5.070243835449219
    10. ' with' → logprob: -5.320243835449219

Token 695: ' their' (ID: 1043)
  Prédit: ' their'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.4856991171836853
    2. 'their' → logprob: -0.9856991171836853
    3. 'formats' → logprob: -4.61069917678833
    4. ' converts' → logprob: -7.98569917678833
    5. 'def' → logprob: -8.235698699951172
    6. 'con' → logprob: -8.485698699951172
    7. 'supports' → logprob: -8.860698699951172
    8. 'de' → logprob: -8.985698699951172
    9. ' formats' → logprob: -9.360698699951172
    10. 'units' → logprob: -10.235698699951172

Token 696: ' decomposition' (ID: 124780)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.9634253978729248
    2. ' decomposition' → logprob: -1.4634253978729248
    3. 'de' → logprob: -2.213425397872925
    4. 'units' → logprob: -2.588425397872925
    5. 'representation' → logprob: -2.588425397872925
    6. 'conversion' → logprob: -3.588425397872925
    7. 'j' → logprob: -3.838425397872925
    8. 'break' → logprob: -3.963425397872925
    9. 'component' → logprob: -4.213425636291504
    10. 'J' → logprob: -4.838425636291504

Token 697: ' into' (ID: 1511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4355369806289673
    2. ' into' → logprob: -1.4355369806289673
    3. 'into' → logprob: -3.1855368614196777
    4. ':' → logprob: -3.3105368614196777
    5. ',' → logprob: -3.8105368614196777
    6. ':
' → logprob: -5.310536861419678
    7. ' in' → logprob: -6.560536861419678
    8. ')' → logprob: -6.685536861419678
    9. '```' → logprob: -6.935536861419678
    10. 'in' → logprob: -7.060536861419678

Token 698: ' segments' (ID: 33749)
  Prédit: 'units'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'units' → logprob: -0.5684391260147095
    2. 'Number' → logprob: -1.1934391260147095
    3. 'unit' → logprob: -2.81843900680542
    4. ' units' → logprob: -3.06843900680542
    5. ' Number' → logprob: -4.94343900680542
    6. 'J' → logprob: -5.56843900680542
    7. 'Unit' → logprob: -5.56843900680542
    8. 'j' → logprob: -6.31843900680542
    9. 'number' → logprob: -6.69343900680542
    10. ' unit' → logprob: -6.81843900680542

Token 699: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1095544770359993
    2. ' of' → logprob: -2.3595545291900635
    3. ',' → logprob: -5.734554290771484
    4. 'of' → logprob: -5.984554290771484
    5. ':' → logprob: -6.359554290771484
    6. ' for' → logprob: -7.734554290771484
    7. ' by' → logprob: -7.734554290771484
    8. ' that' → logprob: -8.359554290771484
    9. ' based' → logprob: -8.859554290771484
    10. ' (' → logprob: -9.109554290771484

Token 700: ' units' (ID: 13306)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4730215072631836
    2. ' ' → logprob: -2.4730215072631836
    3. 'powers' → logprob: -2.4730215072631836
    4. '10' → logprob: -2.5980215072631836
    5. '100' → logprob: -3.2230215072631836
    6. ' four' → logprob: -3.8480215072631836
    7. 'power' → logprob: -4.098021507263184
    8. 'units' → logprob: -4.223021507263184
    9. ' powers' → logprob: -4.598021507263184
    10. 'four' → logprob: -4.723021507263184

Token 701: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22709766030311584
    2. ':' → logprob: -1.7270976305007935
    3. '.' → logprob: -4.102097511291504
    4. ',' → logprob: -5.477097511291504
    5. ':
' → logprob: -5.977097511291504
    6. '4' → logprob: -8.352097511291504
    7. '(' → logprob: -8.727097511291504
    8. '.
' → logprob: -8.977097511291504
    9. ' based' → logprob: -8.977097511291504
    10. '```' → logprob: -8.977097511291504

Token 702: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4651442766189575
    2. '4' → logprob: -1.8401442766189575
    3. 'power' → logprob: -2.715144157409668
    4. ' ' → logprob: -3.215144157409668
    5. 'four' → logprob: -3.590144157409668
    6. 'powers' → logprob: -3.590144157409668
    7. '100' → logprob: -3.715144157409668
    8. 'ten' → logprob: -5.590144157409668
    9. ' four' → logprob: -5.715144157409668
    10. 'value' → logprob: -5.715144157409668

Token 703: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.32163193821907043
    2. '10' → logprob: -1.821631908416748
    3. '100' → logprob: -3.196631908416748
    4. 'four' → logprob: -3.321631908416748
    5. 'power' → logprob: -3.946631908416748
    6. 'value' → logprob: -5.196631908416748
    7. 'Large' → logprob: -5.821631908416748
    8. 'powers' → logprob: -5.946631908416748
    9. 'Number' → logprob: -6.446631908416748
    10. 'digits' → logprob: -7.446631908416748

Token 704: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.20528343319892883
    2. ' digits' → logprob: -1.7052834033966064
    3. '   ' → logprob: -6.7052836418151855
    4. '_digits' → logprob: -6.9552836418151855
    5. ' spaces' → logprob: -8.080283164978027
    6. 'powers' → logprob: -8.580283164978027
    7. 'igits' → logprob: -8.830283164978027
    8. 'ex' → logprob: -9.205283164978027
    9. 'def' → logprob: -9.205283164978027
    10. ' ' → logprob: -9.330283164978027

Token 705: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04676292836666107
    2. ',' → logprob: -3.6717629432678223
    3. '.' → logprob: -4.421762943267822
    4. ' each' → logprob: -5.671762943267822
    5. ':' → logprob: -6.546762943267822
    6. 'each' → logprob: -6.546762943267822
    7. ' at' → logprob: -8.296762466430664
    8. ' for' → logprob: -8.296762466430664
    9. ',
' → logprob: -8.671762466430664
    10. 'for' → logprob: -8.796762466430664

Token 706: 'up' (ID: 817)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1336701661348343
    2. 'digits' → logprob: -2.2586700916290283
    3. '   ' → logprob: -4.758670330047607
    4. ' digits' → logprob: -5.633670330047607
    5. '10' → logprob: -6.008670330047607
    6. ' )' → logprob: -6.258670330047607
    7. ')
' → logprob: -6.508670330047607
    8. '4' → logprob: -6.883670330047607
    9. 'digit' → logprob: -8.88366985321045
    10. 'class' → logprob: -9.00866985321045

Token 707: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.12939158082008362
    2. ' to' → logprob: -2.879391670227051
    3. 'ntil' → logprob: -3.254391670227051
    4. ':' → logprob: -4.754391670227051
    5. ')' → logprob: -5.254391670227051
    6. 'To' → logprob: -5.504391670227051
    7. '_to' → logprob: -6.629391670227051
    8. '   ' → logprob: -6.629391670227051
    9. '<|end|>' → logprob: -6.879391670227051
    10. 'nt' → logprob: -7.379391670227051

Token 708: ' ' (ID: 220)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '28' → logprob: -0.683468759059906
    2. ' ' → logprob: -1.3084688186645508
    3. '   ' → logprob: -2.183468818664551
    4. '7' → logprob: -3.558468818664551
    5. ')' → logprob: -3.933468818664551
    6. '10' → logprob: -4.058468818664551
    7. '32' → logprob: -4.183468818664551
    8. '24' → logprob: -4.558468818664551
    9. 'powers' → logprob: -5.683468818664551
    10. '25' → logprob: -5.933468818664551

Token 709: '999' (ID: 9130)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '28' → logprob: -0.028641339391469955
    2. ' ' → logprob: -4.278641223907471
    3. '24' → logprob: -4.653641223907471
    4. '25' → logprob: -5.903641223907471
    5. '   ' → logprob: -7.528641223907471
    6. '32' → logprob: -8.528641700744629
    7. '26' → logprob: -8.653641700744629
    8. '8' → logprob: -8.903641700744629
    9. 'class' → logprob: -8.903641700744629
    10. 'max' → logprob: -8.903641700744629

Token 710: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.007405481301248074
    2. ')' → logprob: -5.6324052810668945
    3. '999' → logprob: -5.7574052810668945
    4. ',' → logprob: -8.757405281066895
    5. '   ' → logprob: -8.757405281066895
    6. '99' → logprob: -9.382405281066895
    7. '```' → logprob: -9.507405281066895
    8. '),' → logprob: -10.007405281066895
    9. ')]' → logprob: -10.257405281066895
    10. '])' → logprob: -11.257405281066895

Token 711: ' per' (ID: 777)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1354762315750122
    2. 'digits' → logprob: -2.7604761123657227
    3. ').' → logprob: -3.2604761123657227
    4. ' digits' → logprob: -4.260476112365723
    5. ')
' → logprob: -4.760476112365723
    6. '   ' → logprob: -7.385476112365723
    7. ').
' → logprob: -7.885476112365723
    8. '),' → logprob: -8.260476112365723
    9. '):
' → logprob: -8.760476112365723
    10. 'Digits' → logprob: -9.260476112365723

Token 712: ' unit' (ID: 7670)
  Prédit: ' unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unit' → logprob: -1.0668447017669678
    2. 'unit' → logprob: -1.4418447017669678
    3. ' segment' → logprob: -1.6918447017669678
    4. 'segment' → logprob: -2.1918447017669678
    5. ')' → logprob: -2.5668447017669678
    6. 'digit' → logprob: -4.191844940185547
    7. '4' → logprob: -5.441844940185547
    8. ' block' → logprob: -5.566844940185547
    9. '_unit' → logprob: -5.941844940185547
    10. ' power' → logprob: -5.941844940185547

Token 713: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017861690372228622
    2. '   ' → logprob: -4.267861843109131
    3. ')
' → logprob: -6.392861843109131
    4. ').' → logprob: -6.517861843109131
    5. ',' → logprob: -7.892861843109131
    6. ' )' → logprob: -10.517861366271973
    7. '):
' → logprob: -10.767861366271973
    8. '`)' → logprob: -11.142861366271973
    9. '),' → logprob: -11.267861366271973
    10. '.)' → logprob: -11.392861366271973

Token 714: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010660359403118491
    2. ')' → logprob: -7.626066207885742
    3. ':' → logprob: -8.751066207885742
    4. '```' → logprob: -8.751066207885742
    5. '    
' → logprob: -9.126066207885742
    6. '
' → logprob: -9.501066207885742
    7. '):
' → logprob: -11.251066207885742
    8. '):' → logprob: -11.376066207885742
    9. '<|end|>' → logprob: -11.376066207885742
    10. 'def' → logprob: -11.626066207885742

Token 715: ' Used' (ID: 21420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007287504617124796
    2. '
' → logprob: -5.007287502288818
    3. 'def' → logprob: -8.007287979125977
    4. ')' → logprob: -9.382287979125977
    5. '    
' → logprob: -9.507287979125977
    6. '```' → logprob: -10.382287979125977
    7. ' def' → logprob: -11.382287979125977
    8. '):
' → logprob: -11.507287979125977
    9. 'class' → logprob: -12.257287979125977
    10. ':' → logprob: -12.757287979125977

Token 716: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13285470008850098
    2. ' to' → logprob: -3.007854700088501
    3. ':' → logprob: -3.382854700088501
    4. ' for' → logprob: -4.007854461669922
    5. 'for' → logprob: -4.757854461669922
    6. 'to' → logprob: -4.882854461669922
    7. '<|end|>' → logprob: -6.757854461669922
    8. '    ' → logprob: -6.882854461669922
    9. 'def' → logprob: -7.132854461669922
    10. '<|end|>' → logprob: -7.257854461669922

Token 717: ' format' (ID: 6011)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.4163248538970947
    2. ' store' → logprob: -1.9163248538970947
    3. 'parse' → logprob: -3.0413248538970947
    4. 'convert' → logprob: -3.2913248538970947
    5. 'continue' → logprob: -3.6663248538970947
    6. 'represent' → logprob: -3.9163248538970947
    7. 'process' → logprob: -4.541324615478516
    8. 'support' → logprob: -4.916324615478516
    9. 'def' → logprob: -5.041324615478516
    10. ' parse' → logprob: -5.166324615478516

Token 718: ' numbers' (ID: 8663)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3536703884601593
    2. ')' → logprob: -2.478670358657837
    3. ' numbers' → logprob: -2.853670358657837
    4. 'the' → logprob: -3.228670358657837
    5. '<|end|>' → logprob: -3.228670358657837
    6. '<|end|>' → logprob: -3.603670358657837
    7. 'numbers' → logprob: -4.478670597076416
    8. ' large' → logprob: -5.103670597076416
    9. 'def' → logprob: -5.228670597076416
    10. ' them' → logprob: -5.728670597076416

Token 719: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5187839865684509
    2. ' for' → logprob: -1.7687840461730957
    3. ' into' → logprob: -2.2687840461730957
    4. 'for' → logprob: -3.2687840461730957
    5. ' as' → logprob: -4.018784046173096
    6. 'into' → logprob: -4.268784046173096
    7. ' up' → logprob: -4.393784046173096
    8. ' in' → logprob: -4.393784046173096
    9. 'as' → logprob: -4.893784046173096
    10. 'in' → logprob: -5.143784046173096

Token 720: ' J' (ID: 643)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6548500061035156
    2. 'J' → logprob: -1.1548500061035156
    3. ' the' → logprob: -2.4048500061035156
    4. ' J' → logprob: -3.4048500061035156
    5. 'Japanese' → logprob: -4.154850006103516
    6. 'a' → logprob: -4.779850006103516
    7. 'terms' → logprob: -5.279850006103516
    8. 'this' → logprob: -5.279850006103516
    9. ' a' → logprob: -6.279850006103516
    10. ' terms' → logprob: -6.779850006103516

Token 721: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.009968327358365059
    2. 'apanese' → logprob: -5.384968280792236
    3. '   ' → logprob: -6.259968280792236
    4. '
' → logprob: -7.384968280792236
    5. 'inko' → logprob: -7.884968280792236
    6. '```' → logprob: -8.134968757629395
    7. 'in' → logprob: -8.134968757629395
    8. '_' → logprob: -8.259968757629395
    9. 'ik' → logprob: -8.509968757629395
    10. 'apan' → logprob: -8.884968757629395

Token 722: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0002448893792461604
    2. 'ouk' → logprob: -9.750245094299316
    3. 'oki' → logprob: -10.000245094299316
    4. '__' → logprob: -10.000245094299316
    5. 'kou' → logprob: -10.375245094299316
    6. 'o' → logprob: -10.375245094299316
    7. '```' → logprob: -11.875245094299316
    8. '_' → logprob: -12.250245094299316
    9. 'ok' → logprob: -12.625245094299316
    10. 'ō' → logprob: -12.750245094299316

Token 723: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -1.0802738870552275e-05
    2. 'uki' → logprob: -12.62501049041748
    3. 'k' → logprob: -13.75001049041748
    4. ' ki' → logprob: -14.00001049041748
    5. 'kip' → logprob: -14.12501049041748
    6. '-' → logprob: -14.50001049041748
    7. '   ' → logprob: -14.75001049041748
    8. 'ки' → logprob: -15.00001049041748
    9. 'oki' → logprob: -15.12501049041748
    10. 'u' → logprob: -15.12501049041748

Token 724: ' style' (ID: 2713)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.6914098262786865
    2. 'large' → logprob: -1.9414098262786865
    3. 'style' → logprob: -2.0664098262786865
    4. ' format' → logprob: -2.4414098262786865
    5. ' large' → logprob: -2.5664098262786865
    6. 'notation' → logprob: -3.1914098262786865
    7. 'units' → logprob: -3.1914098262786865
    8. 'system' → logprob: -3.3164098262786865
    9. ' style' → logprob: -3.4414098262786865
    10. ' units' → logprob: -3.6914098262786865

Token 725: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024852784350514412
    2. ')' → logprob: -4.649852752685547
    3. '):' → logprob: -4.774852752685547
    4. '.' → logprob: -5.774852752685547
    5. ':' → logprob: -6.149852752685547
    6. ',' → logprob: -7.274852752685547
    7. '):
' → logprob: -8.274852752685547
    8. '
' → logprob: -9.899852752685547
    9. ').' → logprob: -9.899852752685547
    10. '>' → logprob: -10.149852752685547

Token 726: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030256023164838552
    2. '```' → logprob: -7.253025531768799
    3. '    
' → logprob: -7.628025531768799
    4. ')' → logprob: -7.628025531768799
    5. '
' → logprob: -7.628025531768799
    6. '<|end|>' → logprob: -7.878025531768799
    7. ':' → logprob: -8.503026008605957
    8. 'class' → logprob: -9.503026008605957
    9. '<|end|>' → logprob: -9.878026008605957
    10. 'def' → logprob: -10.628026008605957

Token 727: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005406880751252174
    2. ')' → logprob: -5.505406856536865
    3. '```' → logprob: -7.380406856536865
    4. '):
' → logprob: -8.130407333374023
    5. 'def' → logprob: -9.255407333374023
    6. '
' → logprob: -9.380407333374023
    7. '):' → logprob: -9.630407333374023
    8. '    
' → logprob: -10.130407333374023
    9. '    ' → logprob: -10.505407333374023
    10. ':' → logprob: -11.130407333374023

Token 728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005243193008936942
    2. 'def' → logprob: -8.125524520874023
    3. '```' → logprob: -9.125524520874023
    4. ' def' → logprob: -10.250524520874023
    5. 'class' → logprob: -10.375524520874023
    6. '    ' → logprob: -10.750524520874023
    7. 'indent' → logprob: -11.625524520874023
    8. '    
' → logprob: -11.750524520874023
    9. ' indent' → logprob: -13.500524520874023
    10. ')' → logprob: -13.625524520874023

Token 729: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6337773203849792
    2. ' def' → logprob: -0.8837773203849792
    3. '   ' → logprob: -2.883777379989624
    4. '__' → logprob: -9.133777618408203
    5. 'class' → logprob: -9.133777618408203
    6. 'MAX' → logprob: -10.508777618408203
    7. ' __' → logprob: -12.133777618408203
    8. '_MAX' → logprob: -12.383777618408203
    9. ' MAX' → logprob: -12.508777618408203
    10. '```' → logprob: -12.633777618408203

Token 730: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03376775607466698
    2. ' __' → logprob: -3.4087677001953125
    3. 'def' → logprob: -9.533767700195312
    4. 'init' → logprob: -10.783767700195312
    5. '_init' → logprob: -11.908767700195312
    6. 'from' → logprob: -12.033767700195312
    7. '___' → logprob: -12.033767700195312
    8. '```' → logprob: -12.283767700195312
    9. '.__' → logprob: -13.283767700195312
    10. '____' → logprob: -13.908767700195312

Token 731: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -17.25
    3. ' init' → logprob: -17.875
    4. 'int' → logprob: -19.5
    5. 'str' → logprob: -20.375
    6. '```' → logprob: -21.0
    7. '__' → logprob: -21.875
    8. '`' → logprob: -22.0
    9. '(init' → logprob: -22.625
    10. 'class' → logprob: -22.625

Token 732: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03179343044757843
    2. '(self' → logprob: -3.5317933559417725
    3. '__' → logprob: -6.406793594360352
    4. '__(
' → logprob: -7.906793594360352
    5. '(' → logprob: -11.531793594360352
    6. 'self' → logprob: -12.281793594360352
    7. '_(' → logprob: -12.656793594360352
    8. ' (' → logprob: -12.781793594360352
    9. '   ' → logprob: -14.906793594360352
    10. '(
' → logprob: -15.406793594360352

Token 733: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017044597771018744
    2. ' self' → logprob: -6.376704692840576
    3. '   ' → logprob: -14.126704216003418
    4. '0' → logprob: -14.251704216003418
    5. '(self' → logprob: -15.126704216003418
    6. '	self' → logprob: -15.626704216003418
    7. '       ' → logprob: -15.751704216003418
    8. '
' → logprob: -16.251705169677734
    9. ')' → logprob: -16.626705169677734
    10. ' ' → logprob: -16.876705169677734

Token 734: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012427325127646327
    2. 'value' → logprob: -7.501242637634277
    3. 'self' → logprob: -8.126242637634277
    4. ',value' → logprob: -8.376242637634277
    5. ' ,' → logprob: -9.126242637634277
    6. 'number' → logprob: -11.126242637634277
    7. '   ' → logprob: -11.376242637634277
    8. '):' → logprob: -11.751242637634277
    9. ',
' → logprob: -12.251242637634277
    10. ',num' → logprob: -12.751242637634277

Token 735: ' number' (ID: 2086)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.013203052803874016
    2. 'number' → logprob: -4.513203144073486
    3. 'self' → logprob: -6.388203144073486
    4. ' value' → logprob: -8.013202667236328
    5. 'num' → logprob: -9.888202667236328
    6. 'raw' → logprob: -10.138202667236328
    7. 'digits' → logprob: -10.388202667236328
    8. 'amount' → logprob: -11.763202667236328
    9. ' number' → logprob: -12.263202667236328
    10. 'int' → logprob: -12.888202667236328

Token 736: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001721934968372807
    2. '=' → logprob: -9.62517261505127
    3. '):' → logprob: -9.87517261505127
    4. '_:' → logprob: -10.50017261505127
    5. ' :' → logprob: -11.00017261505127
    6. '_value' → logprob: -12.50017261505127
    7. '):
' → logprob: -13.50017261505127
    8. ')' → logprob: -13.62517261505127
    9. ':int' → logprob: -13.75017261505127
    10. '_str' → logprob: -14.12517261505127

Token 737: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031033270061016083
    2. 'str' → logprob: -6.128103256225586
    3. ' int' → logprob: -7.003103256225586
    4. ' str' → logprob: -12.253103256225586
    5. 'Optional' → logprob: -13.128103256225586
    6. '[int' → logprob: -14.128103256225586
    7. '   ' → logprob: -15.253103256225586
    8. ')' → logprob: -15.253103256225586
    9. ' ' → logprob: -15.503103256225586
    10. '(int' → logprob: -15.628103256225586

Token 738: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6940892338752747
    2. '):' → logprob: -0.6940892338752747
    3. '):
' → logprob: -7.569089412689209
    4. ')' → logprob: -8.19408893585205
    5. ':' → logprob: -8.94408893585205
    6. '=' → logprob: -12.19408893585205
    7. ' ):' → logprob: -12.31908893585205
    8. '   ' → logprob: -12.44408893585205
    9. ' ):
' → logprob: -12.69408893585205
    10. '):

' → logprob: -14.44408893585205

Token 739: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.0028904674109071493
    2. ' unit' → logprob: -6.002890586853027
    3. 'units' → logprob: -8.002890586853027
    4. 'system' → logprob: -9.627890586853027
    5. 'max' → logprob: -12.002890586853027
    6. 'base' → logprob: -12.752890586853027
    7. ' units' → logprob: -13.627890586853027
    8. ' system' → logprob: -13.627890586853027
    9. 'number' → logprob: -14.252890586853027
    10. ' ' → logprob: -14.877890586853027

Token 740: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -0.02129756659269333
    2. 'system' → logprob: -4.021297454833984
    3. 'System' → logprob: -5.771297454833984
    4. ' system' → logprob: -11.146297454833984
    5. ':' → logprob: -11.771297454833984
    6. 's' → logprob: -12.646297454833984
    7. 'sys' → logprob: -14.896297454833984
    8. 'SYSTEM' → logprob: -15.021297454833984
    9. ' System' → logprob: -15.646297454833984
    10. '_sys' → logprob: -15.771297454833984

Token 741: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0073155430145561695
    2. '):
' → logprob: -5.257315635681152
    3. '):' → logprob: -6.257315635681152
    4. '=None' → logprob: -9.382315635681152
    5. '=' → logprob: -9.632315635681152
    6. ' :' → logprob: -12.257315635681152
    7. ' ):
' → logprob: -13.007315635681152
    8. ' =' → logprob: -13.257315635681152
    9. ' ):' → logprob: -13.382315635681152
    10. ')' → logprob: -14.132315635681152

Token 742: ' Unit' (ID: 14856)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.04859009385108948
    2. ' Unit' → logprob: -3.0485901832580566
    3. 'unit' → logprob: -13.173589706420898
    4. ' unit' → logprob: -14.548589706420898
    5. '(Unit' → logprob: -16.0485897064209
    6. '_unit' → logprob: -16.1735897064209
    7. '<Unit' → logprob: -16.7985897064209
    8. ')' → logprob: -18.1735897064209
    9. '.Unit' → logprob: -18.4235897064209
    10. 'UNIT' → logprob: -18.5485897064209

Token 743: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.750000953674316
    3. 'system' → logprob: -16.0
    4. '):' → logprob: -16.5
    5. ' System' → logprob: -17.0
    6. '_system' → logprob: -17.25
    7. '):
' → logprob: -17.375
    8. '<System' → logprob: -18.25
    9. 'Systems' → logprob: -18.25
    10. ' system' → logprob: -18.375

Token 744: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.575968861579895
    2. '):' → logprob: -0.825968861579895
    3. ')' → logprob: -11.450968742370605
    4. '):
' → logprob: -11.450968742370605
    5. '   ' → logprob: -12.325968742370605
    6. ':' → logprob: -13.450968742370605
    7. ' ):
' → logprob: -14.200968742370605
    8. ' ):' → logprob: -14.700968742370605
    9. '):

' → logprob: -14.825968742370605
    10. '       ' → logprob: -14.950968742370605

Token 745: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006519131129607558
    2. 'self' → logprob: -7.375651836395264
    3. ' self' → logprob: -11.125652313232422
    4. '   ' → logprob: -12.000652313232422
    5. ':' → logprob: -13.000652313232422
    6. ')' → logprob: -14.625652313232422
    7. 'assert' → logprob: -14.875652313232422
    8. '```' → logprob: -15.375652313232422
    9. '      ' → logprob: -15.750652313232422
    10. '):' → logprob: -15.750652313232422

Token 746: ' """
' (ID: 7037)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.031209301203489304
    2. '       ' → logprob: -3.5312092304229736
    3. ' self' → logprob: -6.531209468841553
    4. '   ' → logprob: -14.781208992004395
    5. '	self' → logprob: -16.28120994567871
    6. '#' → logprob: -18.28120994567871
    7. ' ' → logprob: -18.40620994567871
    8. '(self' → logprob: -19.28120994567871
    9. 'import' → logprob: -19.53120994567871
    10. 'super' → logprob: -20.03120994567871

Token 747: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0512654110789299
    2. '       ' → logprob: -3.0512654781341553
    3. ' self' → logprob: -5.926265239715576
    4. '   ' → logprob: -12.676265716552734
    5. ' ' → logprob: -13.676265716552734
    6. '(self' → logprob: -14.801265716552734
    7. '	self' → logprob: -14.926265716552734
    8. 'def' → logprob: -15.301265716552734
    9. 'super' → logprob: -15.801265716552734
    10. '        
' → logprob: -15.926265716552734

Token 748: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6210846900939941
    2. '       ' → logprob: -0.8710846900939941
    3. ' self' → logprob: -3.121084690093994
    4. '   ' → logprob: -10.746084213256836
    5. '#' → logprob: -13.746084213256836
    6. '	self' → logprob: -13.996084213256836
    7. '           ' → logprob: -13.996084213256836
    8. '        ' → logprob: -14.121084213256836
    9. 'number' (adapté à ' number') → logprob: -14.121084213256836
    10. ')' → logprob: -14.121084213256836

Token 749: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08114214986562729
    2. ':' → logprob: -2.7061421871185303
    3. ' =' → logprob: -5.206141948699951
    4. ')' → logprob: -6.081141948699951
    5. '):' → logprob: -6.081141948699951
    6. ',' → logprob: -7.581141948699951
    7. '=int' → logprob: -8.95614242553711
    8. '):
' → logprob: -9.45614242553711
    9. '   ' → logprob: -9.45614242553711
    10. '       ' → logprob: -9.58114242553711

Token 750: ' the' (ID: 290)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04044581204652786
    2. ' int' → logprob: -3.2904458045959473
    3. 'number' → logprob: -6.665445804595947
    4. '       ' → logprob: -6.915445804595947
    5. ' number' → logprob: -9.290446281433105
    6. 'The' → logprob: -10.540446281433105
    7. '   ' → logprob: -11.790446281433105
    8. 'integer' → logprob: -13.540446281433105
    9. '[int' → logprob: -13.665446281433105
    10. '        ' → logprob: -13.665446281433105

Token 751: ' integer' (ID: 16336)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.38742944598197937
    2. 'number' → logprob: -1.1374294757843018
    3. ' large' → logprob: -8.512429237365723
    4. ' given' → logprob: -8.637429237365723
    5. 'unit' → logprob: -9.887429237365723
    6. ' integer' → logprob: -10.262429237365723
    7. ' unit' → logprob: -10.387429237365723
    8. 'large' → logprob: -10.637429237365723
    9. 'integer' → logprob: -11.637429237365723
    10. 'int' → logprob: -12.012429237365723

Token 752: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.605223536491394
    2. ')' → logprob: -0.980223536491394
    3. '<|end|>' → logprob: -3.3552236557006836
    4. ',' → logprob: -4.480223655700684
    5. ' =' → logprob: -4.730223655700684
    6. ' )' → logprob: -5.355223655700684
    7. ' ' → logprob: -5.355223655700684
    8. '       ' → logprob: -5.480223655700684
    9. '<|end|>' → logprob: -5.480223655700684
    10. '   ' → logprob: -5.980223655700684

Token 753: ' represent' (ID: 5188)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.19492802023887634
    2. 'store' → logprob: -2.319927930831909
    3. 'process' → logprob: -3.569927930831909
    4. 'de' → logprob: -3.569927930831909
    5. 'format' → logprob: -4.319928169250488
    6. ' represent' → logprob: -5.069928169250488
    7. 'convert' → logprob: -7.069928169250488
    8. 'handle' → logprob: -7.069928169250488
    9. ' store' → logprob: -7.694928169250488
    10. 'parse' → logprob: -8.819928169250488

Token 754: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44084522128105164
    2. ')' → logprob: -1.690845251083374
    3. ',' → logprob: -1.940845251083374
    4. '        
' → logprob: -4.940845012664795
    5. ':' → logprob: -5.190845012664795
    6. '=' → logprob: -5.440845012664795
    7. ')
' → logprob: -5.815845012664795
    8. '):
' → logprob: -6.315845012664795
    9. '
' → logprob: -6.440845012664795
    10. '<|end|>' → logprob: -6.690845012664795

Token 755: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014912365935742855
    2. '=' → logprob: -4.889912128448486
    3. ' =' → logprob: -5.639912128448486
    4. ',' → logprob: -6.264912128448486
    5. ':' → logprob: -6.889912128448486
    6. ')' → logprob: -7.764912128448486
    7. '        
' → logprob: -9.139912605285645
    8. '        ' → logprob: -9.639912605285645
    9. '           ' → logprob: -10.139912605285645
    10. ' )' → logprob: -10.639912605285645

Token 756: ' unit' (ID: 7670)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12451967597007751
    2. 'self' → logprob: -2.3745195865631104
    3. ' self' → logprob: -3.8745195865631104
    4. 'unit' (adapté à ' unit') → logprob: -5.8745198249816895
    5. ' unit' → logprob: -8.499519348144531
    6. ',' → logprob: -9.624519348144531
    7. '        
' → logprob: -9.624519348144531
    8. '        ' → logprob: -9.999519348144531
    9. ')' → logprob: -11.249519348144531
    10. '           ' → logprob: -11.874519348144531

Token 757: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -1.8670179997570813e-05
    2. 'System' → logprob: -11.500019073486328
    3. 'system' → logprob: -11.750019073486328
    4. ' system' → logprob: -15.250019073486328
    5. '_' → logprob: -16.625019073486328
    6. '_System' → logprob: -17.000019073486328
    7. '_SYSTEM' → logprob: -17.125019073486328
    8. '_s' → logprob: -17.125019073486328
    9. '   ' → logprob: -17.500019073486328
    10. '=' → logprob: -17.875019073486328

Token 758: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0602148063480854
    2. '=' → logprob: -3.8102147579193115
    3. '):' → logprob: -3.9352147579193115
    4. ')' → logprob: -4.310214996337891
    5. '<|end|>' → logprob: -6.810214996337891
    6. '<|end|>' → logprob: -6.935214996337891
    7. '):
' → logprob: -7.310214996337891
    8. ',' → logprob: -8.31021499633789
    9. ' is' → logprob: -9.43521499633789
    10. ' =' → logprob: -9.56021499633789

Token 759: ' the' (ID: 290)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.023246407508850098
    2. ' unit' → logprob: -3.7732462882995605
    3. '       ' → logprob: -14.023246765136719
    4. '	unit' → logprob: -16.89824676513672
    5. '(unit' → logprob: -17.89824676513672
    6. 'self' → logprob: -19.77324676513672
    7. '   ' → logprob: -20.14824676513672
    8. '.unit' → logprob: -20.39824676513672
    9. 'Unit' → logprob: -20.52324676513672
    10. '        ' → logprob: -20.77324676513672

Token 760: ' Unit' (ID: 14856)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.03963550925254822
    2. ' unit' → logprob: -3.289635419845581
    3. 'Unit' → logprob: -6.66463565826416
    4. ' Unit' → logprob: -8.53963565826416
    5. '_unit' → logprob: -9.53963565826416
    6. '.unit' → logprob: -10.03963565826416
    7. '	unit' → logprob: -12.53963565826416
    8. ' ' → logprob: -14.53963565826416
    9. 'provided' → logprob: -14.53963565826416
    10. '   ' → logprob: -14.91463565826416

Token 761: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.5759711265563965
    2. '_system' → logprob: -0.8259711265563965
    3. '_System' → logprob: -11.200971603393555
    4. 'system' → logprob: -11.825971603393555
    5. '   ' → logprob: -12.450971603393555
    6. ')' → logprob: -12.700971603393555
    7. '<System' → logprob: -14.200971603393555
    8. ' system' → logprob: -14.450971603393555
    9. '_SYSTEM' → logprob: -14.700971603393555
    10. 'Systems' → logprob: -14.700971603393555

Token 762: ' to' (ID: 316)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6439146399497986
    2. '):' → logprob: -1.2689146995544434
    3. ':' → logprob: -1.7689146995544434
    4. '=' → logprob: -4.518914699554443
    5. ')' → logprob: -4.768914699554443
    6. '       ' → logprob: -6.768914699554443
    7. '   ' → logprob: -6.768914699554443
    8. ',' → logprob: -7.893914699554443
    9. '
' → logprob: -8.893914222717285
    10. '        
' → logprob: -8.893914222717285

Token 763: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.07639805227518082
    2. ' use' → logprob: -2.8263981342315674
    3. 'represent' → logprob: -4.826397895812988
    4. 'store' → logprob: -6.326397895812988
    5. 'associate' → logprob: -6.326397895812988
    6. 'format' → logprob: -6.826397895812988
    7. 'interpret' → logprob: -8.076397895812988
    8. 'support' → logprob: -8.326397895812988
    9. 'convert' → logprob: -8.576397895812988
    10. 'de' → logprob: -8.701397895812988

Token 764: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07571100443601608
    2. '):
' → logprob: -2.7007110118865967
    3. ')' → logprob: -5.825710773468018
    4. ')
' → logprob: -6.325710773468018
    5. '   ' → logprob: -7.825710773468018
    6. '):' → logprob: -7.825710773468018
    7. ':' → logprob: -9.950711250305176
    8. '
' → logprob: -10.075711250305176
    9. ',' → logprob: -10.325711250305176
    10. 'self' → logprob: -10.950711250305176

Token 765: ' formatting' (ID: 61348)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7609415054321289
    2. 'unit' → logprob: -0.8859415054321289
    3. 'format' → logprob: -2.510941505432129
    4. 'de' → logprob: -4.260941505432129
    5. 'number' → logprob: -4.510941505432129
    6. 'par' → logprob: -5.135941505432129
    7. 'segment' → logprob: -6.135941505432129
    8. ' self' → logprob: -6.510941505432129
    9. 'representation' → logprob: -6.760941505432129
    10. 'units' → logprob: -7.010941505432129

Token 766: ' output' (ID: 4733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05768251046538353
    2. '):
' → logprob: -3.182682514190674
    3. ')' → logprob: -4.432682514190674
    4. '):' → logprob: -6.682682514190674
    5. '   ' → logprob: -7.182682514190674
    6. ')
' → logprob: -7.682682514190674
    7. '
' → logprob: -9.807682037353516
    8. 'self' → logprob: -10.307682037353516
    9. ',' → logprob: -10.682682037353516
    10. ':' → logprob: -11.307682037353516

Token 767: '
' (ID: 198)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14766940474510193
    2. '       ' → logprob: -2.0226693153381348
    3. '   ' → logprob: -5.772669315338135
    4. '):' → logprob: -6.772669315338135
    5. ')' → logprob: -7.647669315338135
    6. ')
' → logprob: -9.022669792175293
    7. ' ):
' → logprob: -10.022669792175293
    8. '
' → logprob: -10.272669792175293
    9. '):
' → logprob: -10.397669792175293
    10. ',' → logprob: -12.147669792175293

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019485579803586006
    2. '):
' → logprob: -4.0194854736328125
    3. '   ' → logprob: -7.3944854736328125
    4. '):' → logprob: -7.8944854736328125
    5. ')' → logprob: -9.144485473632812
    6. '
' → logprob: -9.394485473632812
    7. 'self' → logprob: -9.894485473632812
    8. ':' → logprob: -10.644485473632812
    9. '```' → logprob: -10.769485473632812
    10. ',' → logprob: -10.894485473632812

Token 769: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009260025806725025
    2. 'self' → logprob: -4.759260177612305
    3. '):
' → logprob: -7.759260177612305
    4. ')' → logprob: -9.259260177612305
    5. ' self' → logprob: -9.884260177612305
    6. '):' → logprob: -10.384260177612305
    7. '
' → logprob: -11.259260177612305
    8. '"""' → logprob: -11.384260177612305
    9. '   ' → logprob: -12.759260177612305
    10. '"""
' (adapté à ' """
') → logprob: -13.259260177612305

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017839208885561675
    2. 'self' → logprob: -8.750178337097168
    3. '   ' → logprob: -11.500178337097168
    4. ' self' → logprob: -11.625178337097168
    5. '```' → logprob: -14.750178337097168
    6. 'def' → logprob: -16.375179290771484
    7. '        
' → logprob: -16.375179290771484
    8. '	self' → logprob: -16.625179290771484
    9. ' ' → logprob: -17.000179290771484
    10. '           ' → logprob: -17.000179290771484

Token 771: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006895224563777447
    2. '       ' → logprob: -5.006895065307617
    3. ' self' → logprob: -8.631895065307617
    4. 'import' → logprob: -13.881895065307617
    5. '   ' → logprob: -14.881895065307617
    6. '#' → logprob: -16.131895065307617
    7. 'super' → logprob: -16.506895065307617
    8. '	self' → logprob: -16.756895065307617
    9. 'def' → logprob: -17.756895065307617
    10. 'if' → logprob: -17.756895065307617

Token 772: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.0001334559783572331
    2. '.value' → logprob: -10.000133514404297
    3. '._' → logprob: -10.125133514404297
    4. 'number' → logprob: -10.250133514404297
    5. '.unit' → logprob: -11.625133514404297
    6. '.original' → logprob: -12.875133514404297
    7. '.' → logprob: -14.500133514404297
    8. '.raw' → logprob: -15.125133514404297
    9. ' number' → logprob: -16.375133514404297
    10. '_number' → logprob: -16.750133514404297

Token 773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3486652076244354
    2. ' =' → logprob: -1.2236652374267578
    3. ':' → logprob: -8.973665237426758
    4. '   ' → logprob: -9.473665237426758
    5. ')' → logprob: -12.473665237426758
    6. '       ' → logprob: -12.973665237426758
    7. '=self' → logprob: -13.098665237426758
    8. ' ' → logprob: -13.348665237426758
    9. '=int' → logprob: -13.473665237426758
    10. '    ' → logprob: -13.473665237426758

Token 774: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.008614808320999146
    2. ' number' → logprob: -4.758615016937256
    3. 'int' → logprob: -15.383614540100098
    4. '       ' → logprob: -17.383615493774414
    5. '   ' → logprob: -17.508615493774414
    6. '	number' → logprob: -17.508615493774414
    7. '(number' → logprob: -19.258615493774414
    8. 'num' → logprob: -19.633615493774414
    9. ' int' → logprob: -20.008615493774414
    10. ' ' → logprob: -20.008615493774414

Token 775: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032116996590048075
    2. '   ' → logprob: -6.128211498260498
    3. '
' → logprob: -7.253211498260498
    4. ',' → logprob: -8.878211975097656
    5. '<|end|>' → logprob: -9.628211975097656
    6. 'def' → logprob: -10.378211975097656
    7. '    
' → logprob: -11.003211975097656
    8. '        
' → logprob: -11.503211975097656
    9. ')' → logprob: -11.628211975097656
    10. 'self' → logprob: -11.628211975097656

Token 776: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001292735687457025
    2. 'self' → logprob: -6.751292705535889
    3. '<|end|>' → logprob: -10.376293182373047
    4. '   ' → logprob: -10.626293182373047
    5. ',' → logprob: -11.001293182373047
    6. ' self' → logprob: -11.126293182373047
    7. '
' → logprob: -11.751293182373047
    8. '        
' → logprob: -11.876293182373047
    9. 'def' → logprob: -12.251293182373047
    10. 'import' → logprob: -12.876293182373047

Token 777: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001953133614733815
    2. '       ' → logprob: -6.876953125
    3. ' self' → logprob: -7.001953125
    4. 'unit' → logprob: -11.751953125
    5. 'import' → logprob: -14.751953125
    6. '   ' → logprob: -14.876953125
    7. 'assert' → logprob: -15.251953125
    8. '	self' → logprob: -15.626953125
    9. 'if' → logprob: -15.751953125
    10. '0' → logprob: -16.376953125

Token 778: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.0006426189211197197
    2. 'unit' → logprob: -7.750642776489258
    3. '._' → logprob: -8.875642776489258
    4. '_unit' → logprob: -10.000642776489258
    5. '.' → logprob: -11.125642776489258
    6. '.units' → logprob: -12.125642776489258
    7. '.number' → logprob: -13.125642776489258
    8. ' .' → logprob: -14.500642776489258
    9. 'Unit' → logprob: -14.625642776489258
    10. '.value' → logprob: -14.750642776489258

Token 779: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -7.941850526549388e-06
    2. 'System' → logprob: -12.250007629394531
    3. 'system' → logprob: -12.750007629394531
    4. '_SYSTEM' → logprob: -16.62500762939453
    5. '_System' → logprob: -17.25000762939453
    6. 'SYSTEM' → logprob: -17.62500762939453
    7. ' system' → logprob: -17.87500762939453
    8. '_' → logprob: -18.00000762939453
    9. '_power' → logprob: -18.25000762939453
    10. '_s' → logprob: -18.37500762939453

Token 780: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1572371870279312
    2. ' =' → logprob: -2.0322372913360596
    3. '.' → logprob: -5.0322370529174805
    4. '.get' → logprob: -5.2822370529174805
    5. ')' → logprob: -7.0322370529174805
    6. '   ' → logprob: -7.9072370529174805
    7. 'def' → logprob: -8.53223705291748
    8. ':' → logprob: -8.78223705291748
    9. 'import' → logprob: -9.15723705291748
    10. '.validate' → logprob: -9.28223705291748

Token 781: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.029750604182481766
    2. ' unit' → logprob: -3.5297505855560303
    3. '(unit' → logprob: -17.27975082397461
    4. '	unit' → logprob: -18.02975082397461
    5. 'Unit' → logprob: -18.52975082397461
    6. '.unit' → logprob: -18.90475082397461
    7. '       ' → logprob: -19.27975082397461
    8. '   ' → logprob: -19.40475082397461
    9. ' ' → logprob: -20.27975082397461
    10. '_unit' → logprob: -20.77975082397461

Token 782: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -1.6405310816480778e-05
    2. 'system' → logprob: -11.500016212463379
    3. 'System' → logprob: -12.000016212463379
    4. 'ystem' → logprob: -18.000017166137695
    5. 'SYSTEM' → logprob: -18.625017166137695
    6. '_SYSTEM' → logprob: -19.125017166137695
    7. ' system' → logprob: -19.875017166137695
    8. '.system' → logprob: -20.375017166137695
    9. 'ssystem' → logprob: -20.750017166137695
    10. '-system' → logprob: -20.750017166137695

Token 783: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01985728181898594
    2. 'def' → logprob: -4.394857406616211
    3. '
' → logprob: -5.394857406616211
    4. '       ' → logprob: -6.019857406616211
    5. ' def' → logprob: -8.644857406616211
    6. '    
' → logprob: -9.894857406616211
    7. '

' → logprob: -9.894857406616211
    8. 'import' → logprob: -10.269857406616211
    9. '	def' → logprob: -11.394857406616211
    10. '        
' → logprob: -12.019857406616211

Token 784: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4004453420639038
    2. '       ' → logprob: -1.1504453420639038
    3. 'def' → logprob: -4.400445461273193
    4. '
' → logprob: -7.275445461273193
    5. 'self' → logprob: -8.900444984436035
    6. '        
' → logprob: -8.900444984436035
    7. ' def' → logprob: -9.400444984436035
    8. '    
' → logprob: -9.775444984436035
    9. '```' → logprob: -10.150444984436035
    10. '<|end|>' → logprob: -10.650444984436035

Token 785: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05261651426553726
    2. 'self' (adapté à ' self') → logprob: -3.427616596221924
    3. '   ' → logprob: -4.177616596221924
    4. '       ' → logprob: -6.052616596221924
    5. ' def' → logprob: -6.927616596221924
    6. ' self' → logprob: -9.302616119384766
    7. ')' → logprob: -11.802616119384766
    8. '
' → logprob: -12.177616119384766
    9. ' ' → logprob: -12.677616119384766
    10. '```' → logprob: -12.802616119384766

Token 786: '.se' (ID: 5877)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.7506977915763855
    2. '_parts' → logprob: -1.3756978511810303
    3. '._' → logprob: -1.7506978511810303
    4. '_digits' → logprob: -3.1256978511810303
    5. '_units' → logprob: -3.8756978511810303
    6. '.parts' → logprob: -4.125697612762451
    7. '.se' → logprob: -5.750697612762451
    8. '.units' → logprob: -5.875697612762451
    9. '_str' → logprob: -6.500697612762451
    10. 'segments' → logprob: -6.500697612762451

Token 787: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -0.00012094692647224292
    2. 'g' → logprob: -9.750121116638184
    3. 'lf' → logprob: -10.375121116638184
    4. 'gements' → logprob: -11.000121116638184
    5. 'gment' → logprob: -11.500121116638184
    6. 'gs' → logprob: -13.375121116638184
    7. '_g' → logprob: -14.500121116638184
    8. '__' → logprob: -14.875121116638184
    9. 'ments' → logprob: -14.875121116638184
    10. 'parated' → logprob: -15.500121116638184

Token 788: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7711189389228821
    2. '=' → logprob: -1.1461188793182373
    3. ':' → logprob: -1.5211188793182373
    4. '=[]' → logprob: -6.771119117736816
    5. ' :' → logprob: -11.521119117736816
    6. '=[]
' → logprob: -12.521119117736816
    7. '   ' → logprob: -12.771119117736816
    8. '[:]' → logprob: -13.146119117736816
    9. '[]' → logprob: -13.771119117736816
    10. ')' → logprob: -14.771119117736816

Token 789: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00627465546131134
    2. 'self' → logprob: -5.256274700164795
    3. '[]
' → logprob: -7.006274700164795
    4. '[]

' → logprob: -9.006274223327637
    5. '{}' → logprob: -12.256274223327637
    6. '[self' → logprob: -12.631274223327637
    7. '[]}' → logprob: -13.256274223327637
    8. '[])' → logprob: -14.256274223327637
    9. ' []' → logprob: -15.006274223327637
    10. '[]"' → logprob: -15.006274223327637

Token 790: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0152095602825284
    2. '.de' → logprob: -4.890209674835205
    3. '.split' → logprob: -5.890209674835205
    4. '.number' → logprob: -5.890209674835205
    5. '.segment' → logprob: -7.140209674835205
    6. '.se' → logprob: -7.390209674835205
    7. '.divide' → logprob: -8.390209197998047
    8. '.break' → logprob: -8.765209197998047
    9. '.extract' → logprob: -9.140209197998047
    10. '.convert' → logprob: -10.765209197998047

Token 791: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.005894784349948168
    2. 'segment' → logprob: -5.630894660949707
    3. 'split' → logprob: -6.255894660949707
    4. 'compute' → logprob: -8.130894660949707
    5. 'segments' → logprob: -10.755894660949707
    6. 'break' → logprob: -11.130894660949707
    7. 'generate' → logprob: -11.880894660949707
    8. 'calculate' → logprob: -11.880894660949707
    9. 'build' → logprob: -12.255894660949707
    10. 'extract' → logprob: -12.255894660949707

Token 792: 'compose' (ID: 65322)
  Prédit: 'compose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -9.13388703338569e-06
    2. '_' → logprob: -12.125009536743164
    3. 'f' → logprob: -14.125009536743164
    4. 'code' → logprob: -14.250009536743164
    5. 'segment' → logprob: -14.500009536743164
    6. '.compose' → logprob: -15.125009536743164
    7. '-compose' → logprob: -15.750009536743164
    8. 'com' → logprob: -15.875009536743164
    9. '_code' → logprob: -16.000009536743164
    10. ' compose' → logprob: -16.125009536743164

Token 793: '_to' (ID: 5089)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.15805655717849731
    2. '_number' → logprob: -2.2830564975738525
    3. '(' → logprob: -3.7830564975738525
    4. 'number' → logprob: -4.658056735992432
    5. '_segments' → logprob: -5.408056735992432
    6. '(self' → logprob: -6.283056735992432
    7. '(int' → logprob: -6.408056735992432
    8. 'd' → logprob: -6.658056735992432
    9. '(
' → logprob: -7.033056735992432
    10. '_numbers' → logprob: -8.158056259155273

Token 794: '_segments' (ID: 142925)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.01642305962741375
    2. 'units' → logprob: -4.266423225402832
    3. '4' → logprob: -6.391423225402832
    4. 'powers' → logprob: -7.891423225402832
    5. 'digits' → logprob: -10.016423225402832
    6. 'tokens' → logprob: -10.141423225402832
    7. 'list' → logprob: -10.391423225402832
    8. '_segments' → logprob: -10.641423225402832
    9. '[' → logprob: -11.266423225402832
    10. ' segments' → logprob: -11.391423225402832

Token 795: '()

' (ID: 5874)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.3025556802749634
    2. '()' → logprob: -1.4275556802749634
    3. '(' → logprob: -3.927555561065674
    4. '(self' → logprob: -6.677555561065674
    5. '[number' → logprob: -9.052556037902832
    6. '(
' → logprob: -10.302556037902832
    7. '()
' → logprob: -11.052556037902832
    8. '[]' → logprob: -11.427556037902832
    9. ')' → logprob: -12.302556037902832
    10. '([]' → logprob: -12.302556037902832

Token 796: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14791002869606018
    2. ' def' → logprob: -2.5229101181030273
    3. '   ' → logprob: -2.8979101181030273
    4. ':' → logprob: -7.022910118103027
    5. '
' → logprob: -7.897910118103027
    6. '(' → logprob: -8.397910118103027
    7. '[' → logprob: -8.772910118103027
    8. '	def' → logprob: -8.897910118103027
    9. '```' → logprob: -9.272910118103027
    10. '    
' → logprob: -10.397910118103027

Token 797: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01134076714515686
    2. ' def' → logprob: -4.636340618133545
    3. '   ' → logprob: -6.511340618133545
    4. ':' → logprob: -10.386341094970703
    5. '
' → logprob: -10.386341094970703
    6. ':def' → logprob: -11.511341094970703
    7. '	def' → logprob: -12.261341094970703
    8. '[' → logprob: -12.386341094970703
    9. '```' → logprob: -12.511341094970703
    10. ')' → logprob: -12.761341094970703

Token 798: ' _' (ID: 1175)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -6.909333023941144e-05
    2. '_def' → logprob: -10.625068664550781
    3. '_segments' → logprob: -10.625068664550781
    4. 'def' → logprob: -11.375068664550781
    5. ' _' → logprob: -12.000068664550781
    6. 'de' → logprob: -13.625068664550781
    7. '_d' → logprob: -14.750068664550781
    8. '_' → logprob: -15.250068664550781
    9. '_number' → logprob: -15.250068664550781
    10. '_define' → logprob: -15.500068664550781

Token 799: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -2.176947600673884e-05
    2. '_de' → logprob: -10.750021934509277
    3. ' de' → logprob: -15.750021934509277
    4. 'def' → logprob: -15.875021934509277
    5. 'segments' → logprob: -18.37502098083496
    6. 'decode' → logprob: -18.87502098083496
    7. '_' → logprob: -19.00002098083496
    8. '	de' → logprob: -19.00002098083496
    9. 'token' → logprob: -19.12502098083496
    10. '```' → logprob: -19.37502098083496

Token 800: 'compose' (ID: 65322)
  Prédit: 'compose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -0.0012578530004248023
    2. '_comp' → logprob: -7.12625789642334
    3. '_com' → logprob: -8.75125789642334
    4. 'com' → logprob: -9.00125789642334
    5. 'comp' → logprob: -9.25125789642334
    6. '_de' → logprob: -10.25125789642334
    7. 'f' → logprob: -11.00125789642334
    8. '_' → logprob: -11.12625789642334
    9. 'c' → logprob: -12.87625789642334
    10. 'de' → logprob: -13.37625789642334

Token 801: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.128163257315464e-07
    2. '_into' → logprob: -15.5
    3. '_segments' → logprob: -17.625
    4. '_number' → logprob: -18.25
    5. '_' → logprob: -18.375
    6. '_numbers' → logprob: -18.5
    7. '(self' → logprob: -18.625
    8. 'To' → logprob: -18.75
    9. '_tokens' → logprob: -19.375
    10. '```' → logprob: -19.625

Token 802: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.05493464693427086
    2. 'segments' → logprob: -2.9299347400665283
    3. '_digits' → logprob: -11.05493450164795
    4. '_list' → logprob: -11.55493450164795
    5. 'int' → logprob: -12.30493450164795
    6. '_tokens' → logprob: -13.05493450164795
    7. 'digits' → logprob: -13.05493450164795
    8. ' segments' → logprob: -13.17993450164795
    9. '_chunks' → logprob: -13.55493450164795
    10. 'segment' → logprob: -13.55493450164795

Token 803: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.7385154428193346e-05
    2. '(' → logprob: -10.25003719329834
    3. ' (' → logprob: -13.37503719329834
    4. 'self' → logprob: -15.37503719329834
    5. '(
' → logprob: -15.50003719329834
    6. '(sel' → logprob: -17.875038146972656
    7. '   ' → logprob: -18.125038146972656
    8. '(s' → logprob: -18.125038146972656
    9. '(Self' → logprob: -18.250038146972656
    10. '	self' → logprob: -18.625038146972656

Token 804: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.047022491693496704
    2. 'self' → logprob: -3.422022581100464
    3. ')' → logprob: -4.547022342681885
    4. ')(' → logprob: -6.797022342681885
    5. '):
' → logprob: -7.547022342681885
    6. '   ' → logprob: -7.672022342681885
    7. '):' → logprob: -9.047022819519043
    8. '(' → logprob: -9.172022819519043
    9. '
' → logprob: -9.672022819519043
    10. '       ' → logprob: -9.797022819519043

Token 805: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006582272471860051
    2. '(' → logprob: -7.37565803527832
    3. 'self' → logprob: -10.87565803527832
    4. '   ' → logprob: -12.25065803527832
    5. 'def' → logprob: -13.00065803527832
    6. ' (' → logprob: -13.25065803527832
    7. '       ' → logprob: -13.50065803527832
    8. '(
' → logprob: -13.50065803527832
    9. '[self' → logprob: -14.87565803527832
    10. '(Self' → logprob: -15.75065803527832

Token 806: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.0206720617134124e-05
    2. 'list' → logprob: -12.12501049041748
    3. ' List' → logprob: -12.37501049041748
    4. '[List' → logprob: -14.87501049041748
    5. 'Iterator' → logprob: -16.875009536743164
    6. '   ' → logprob: -18.000009536743164
    7. 'dict' → logprob: -18.125009536743164
    8. 'Dict' → logprob: -18.375009536743164
    9. '	List' → logprob: -18.500009536743164
    10. '_list' → logprob: -19.500009536743164

Token 807: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.9875325708417222e-05
    2. 'int' → logprob: -10.625029563903809
    3. '[' → logprob: -12.750029563903809
    4. '[List' → logprob: -13.000029563903809
    5. '[Int' → logprob: -15.500029563903809
    6. '[(' → logprob: -16.625030517578125
    7. '[
' → logprob: -17.250030517578125
    8. '   ' → logprob: -17.375030517578125
    9. '<int' → logprob: -17.750030517578125
    10. '(int' → logprob: -18.125030517578125

Token 808: 'Tuple' (ID: 40048)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.3458322731312364e-06
    2. '[int' → logprob: -12.125007629394531
    3. 'Tuple' → logprob: -13.750007629394531
    4. ' int' → logprob: -14.625007629394531
    5. 'Optional' → logprob: -14.875007629394531
    6. '(int' → logprob: -18.50000762939453
    7. '   ' → logprob: -18.87500762939453
    8. '	int' → logprob: -19.50000762939453
    9. '<int' → logprob: -20.25000762939453
    10. '```' → logprob: -20.37500762939453

Token 809: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.910643762443215e-05
    2. 'int' → logprob: -9.500079154968262
    3. '[str' → logprob: -12.500079154968262
    4. ',int' → logprob: -15.250079154968262
    5. '[' → logprob: -16.500078201293945
    6. '(int' → logprob: -16.625078201293945
    7. ' int' → logprob: -17.875078201293945
    8. '<int' → logprob: -18.625078201293945
    9. '[
' → logprob: -18.750078201293945
    10. ']int' → logprob: -18.750078201293945

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003626081394031644
    2. ',int' → logprob: -5.628625869750977
    3. ' ,' → logprob: -11.378625869750977
    4. '[int' → logprob: -11.753625869750977
    5. 'int' → logprob: -12.253625869750977
    6. '   ' → logprob: -14.128625869750977
    7. ',List' → logprob: -15.378625869750977
    8. ',str' → logprob: -15.628625869750977
    9. '[' → logprob: -15.628625869750977
    10. ',
' → logprob: -15.753625869750977

Token 811: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03134528547525406
    2. 'Number' → logprob: -3.5313453674316406
    3. 'Optional' → logprob: -7.031345367431641
    4. 'str' → logprob: -7.531345367431641
    5. ' int' → logprob: -9.15634536743164
    6. 'Unit' → logprob: -10.03134536743164
    7. 'List' → logprob: -12.15634536743164
    8. ' Number' → logprob: -12.53134536743164
    9. '[int' → logprob: -13.03134536743164
    10. ' ' → logprob: -13.15634536743164

Token 812: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2150743156671524
    2. ']:' → logprob: -1.9650743007659912
    3. ']]:
' → logprob: -2.965074300765991
    4. ']:
' → logprob: -7.09007453918457
    5. ',' → logprob: -7.71507453918457
    6. ']' → logprob: -8.34007453918457
    7. ']:

' → logprob: -9.09007453918457
    8. '"]:
' → logprob: -10.21507453918457
    9. ']]' → logprob: -10.34007453918457
    10. '       ' → logprob: -10.71507453918457

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015010076574981213
    2. '[]' → logprob: -4.640009880065918
    3. 'segments' → logprob: -5.765009880065918
    4. 'tokens' → logprob: -6.515009880065918
    5. '[' → logprob: -8.640009880065918
    6. 'result' → logprob: -8.640009880065918
    7. '```' → logprob: -9.765009880065918
    8. '[]
' → logprob: -10.140009880065918
    9. '[
' → logprob: -10.390009880065918
    10. '#' → logprob: -10.515009880065918

Token 814: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12872175872325897
    2. 'segments' → logprob: -2.1287217140197754
    3. 'number' → logprob: -6.878721714019775
    4. 'result' → logprob: -8.003722190856934
    5. ' segments' → logprob: -9.003722190856934
    6. '[]' → logprob: -9.003722190856934
    7. '```' → logprob: -10.003722190856934
    8. 'num' → logprob: -10.378722190856934
    9. '#' → logprob: -10.628722190856934
    10. '[' → logprob: -10.628722190856934

Token 815: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029797237366437912
    2. 'segments' → logprob: -3.529797315597534
    3. 'result' → logprob: -11.154797554016113
    4. '   ' → logprob: -11.279797554016113
    5. 'number' → logprob: -12.029797554016113
    6. 'tokens' → logprob: -12.904797554016113
    7. '```' → logprob: -12.904797554016113
    8. ' segments' → logprob: -13.154797554016113
    9. '#' → logprob: -13.654797554016113
    10. 'seg' → logprob: -13.654797554016113

Token 816: ' De' (ID: 1516)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.007401346229016781
    2. '       ' → logprob: -5.507401466369629
    3. 'result' → logprob: -6.507401466369629
    4. '#' → logprob: -7.257401466369629
    5. 'power' → logprob: -7.757401466369629
    6. '"""
' → logprob: -8.507401466369629
    7. 'powers' → logprob: -8.632401466369629
    8. '"""' → logprob: -9.132401466369629
    9. 'results' → logprob: -9.882401466369629
    10. '   ' → logprob: -10.132401466369629

Token 817: 'compose' (ID: 65322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005334197543561459
    2. 'compose' → logprob: -5.255334377288818
    3. 'com' → logprob: -9.88033390045166
    4. '   ' → logprob: -10.88033390045166
    5. 'def' → logprob: -11.63033390045166
    6. '       ' → logprob: -11.75533390045166
    7. 'flate' → logprob: -13.00533390045166
    8. '```' → logprob: -13.13033390045166
    9. '...' → logprob: -13.63033390045166
    10. '
' → logprob: -13.63033390045166

Token 818: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6524655818939209
    2. 'number' → logprob: -1.277465581893921
    3. '       ' → logprob: -3.027465581893921
    4. 'the' → logprob: -3.402465581893921
    5. '[]' → logprob: -3.902465581893921
    6. ')' → logprob: -4.1524658203125
    7. ' the' → logprob: -4.4024658203125
    8. 'n' → logprob: -4.5274658203125
    9. 'num' → logprob: -4.6524658203125
    10. 'result' → logprob: -4.9024658203125

Token 819: ' integer' (ID: 16336)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.1699933558702469
    2. 'num' → logprob: -2.1699934005737305
    3. 'n' → logprob: -3.2949934005737305
    4. 'segments' → logprob: -5.9199934005737305
    5. 'self' → logprob: -7.0449934005737305
    6. 'value' → logprob: -7.2949934005737305
    7. 'result' → logprob: -7.2949934005737305
    8. 'remaining' → logprob: -9.79499340057373
    9. ' number' → logprob: -10.16999340057373
    10. 'res' → logprob: -11.41999340057373

Token 820: ' number' (ID: 2086)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8797781467437744
    2. 'self' → logprob: -1.8797781467437744
    3. 'number' → logprob: -2.1297781467437744
    4. '       ' → logprob: -2.3797781467437744
    5. '```' → logprob: -2.7547781467437744
    6. '(self' → logprob: -3.2547781467437744
    7. ' into' → logprob: -3.3797781467437744
    8. 'into' → logprob: -3.7547781467437744
    9. '
' → logprob: -4.254777908325195
    10. 'num' → logprob: -5.129777908325195

Token 821: ' into' (ID: 1511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33718743920326233
    2. '(self' → logprob: -1.96218740940094
    3. 'self' → logprob: -2.4621875286102295
    4. 'into' → logprob: -3.3371875286102295
    5. ' into' → logprob: -4.21218729019165
    6. '```' → logprob: -5.21218729019165
    7. '   ' → logprob: -6.46218729019165
    8. ',' → logprob: -6.83718729019165
    9. ')' → logprob: -7.46218729019165
    10. ' self' → logprob: -8.212187767028809

Token 822: ' segments' (ID: 33749)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2092231661081314
    2. 'segments' → logprob: -1.7092231512069702
    3. '[(' → logprob: -4.95922327041626
    4. '[],' → logprob: -8.709222793579102
    5. 'List' → logprob: -8.959222793579102
    6. '[])' → logprob: -9.209222793579102
    7. '[]
' → logprob: -9.334222793579102
    8. '[
' → logprob: -9.709222793579102
    9. 'self' → logprob: -9.959222793579102
    10. 'list' → logprob: -10.209222793579102

Token 823: ' corresponding' (ID: 21824)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7372732162475586
    2. '       ' → logprob: -1.1122732162475586
    3. '=' → logprob: -2.7372732162475586
    4. ' =' → logprob: -3.4872732162475586
    5. ' of' → logprob: -3.6122732162475586
    6. ',' → logprob: -3.9872732162475586
    7. ':' → logprob: -4.237273216247559
    8. 'by' → logprob: -4.487273216247559
    9. 'of' → logprob: -4.862273216247559
    10. ' separated' → logprob: -5.112273216247559

Token 824: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5768385529518127
    2. ' to' → logprob: -0.8268385529518127
    3. '       ' → logprob: -7.326838493347168
    4. '           ' → logprob: -9.076838493347168
    5. '=' → logprob: -9.576838493347168
    6. ',' → logprob: -10.451838493347168
    7. '```' → logprob: -11.576838493347168
    8. ' of' → logprob: -12.326838493347168
    9. 'tokens' → logprob: -13.451838493347168
    10. '_tokens' → logprob: -13.576838493347168

Token 825: ' units' (ID: 13306)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6217771172523499
    2. 'self' → logprob: -0.9967771172523499
    3. 'powers' → logprob: -2.746777057647705
    4. '(' → logprob: -4.871777057647705
    5. '10' → logprob: -5.121777057647705
    6. 'each' → logprob: -5.871777057647705
    7. 'segments' → logprob: -5.871777057647705
    8. 'the' → logprob: -5.871777057647705
    9. 'div' → logprob: -6.746777057647705
    10. '[(' → logprob: -6.871777057647705

Token 826: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5140600204467773
    2. '       ' → logprob: -1.5140600204467773
    3. ' of' → logprob: -3.0140600204467773
    4. '=' → logprob: -3.2640600204467773
    5. 'of' → logprob: -3.5140600204467773
    6. ' by' → logprob: -4.014060020446777
    7. ' separated' → logprob: -4.639060020446777
    8. '.' → logprob: -4.889060020446777
    9. ':' → logprob: -5.014060020446777
    10. 'based' → logprob: -5.264060020446777

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034822316374629736
    2. '           ' → logprob: -6.503482341766357
    3. 'tokens' → logprob: -7.003482341766357
    4. ' tokens' → logprob: -8.6284818649292
    5. 'each' → logprob: -9.0034818649292
    6. 'self' → logprob: -9.2534818649292
    7. 'starting' → logprob: -9.2534818649292
    8. 'indent' → logprob: -9.5034818649292
    9. '   ' → logprob: -9.7534818649292
    10. ' starting' → logprob: -9.7534818649292

Token 828: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025972450152039528
    2. 'each' → logprob: -4.900972366333008
    3. ' where' → logprob: -5.400972366333008
    4. ' separated' → logprob: -5.650972366333008
    5. ' each' → logprob: -5.775972366333008
    6. 'starting' → logprob: -6.150972366333008
    7. '#' → logprob: -6.775972366333008
    8. 'multip' → logprob: -7.400972366333008
    9. ' starting' → logprob: -7.525972366333008
    10. 'split' → logprob: -7.900972366333008

Token 829: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.2714518308639526
    2. 'most' → logprob: -1.7714518308639526
    3. 'powers' → logprob: -1.7714518308639526
    4. 'least' → logprob: -2.021451950073242
    5. 'multip' → logprob: -2.146451950073242
    6. '4' → logprob: -3.396451950073242
    7. ' ' → logprob: -4.146451950073242
    8. '   ' → logprob: -4.271451950073242
    9. ' multiples' → logprob: -4.396451950073242
    10. ' least' → logprob: -4.646451950073242

Token 830: ' segment' (ID: 14806)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.19514736533164978
    2. ' ' → logprob: -2.8201472759246826
    3. 'segment' → logprob: -3.0701472759246826
    4. ' step' → logprob: -3.8201472759246826
    5. ' segment' → logprob: -3.9451472759246826
    6. 'step' → logprob: -3.9451472759246826
    7. 'index' → logprob: -5.695147514343262
    8. '   ' → logprob: -6.070147514343262
    9. 'power' → logprob: -6.820147514343262
    10. 'level' → logprob: -7.445147514343262

Token 831: ' is' (ID: 382)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44739264249801636
    2. '=' → logprob: -1.8223927021026611
    3. ' =' → logprob: -2.697392702102661
    4. ':' → logprob: -2.822392702102661
    5. ' of' → logprob: -4.322392463684082
    6. '.' → logprob: -5.072392463684082
    7. ' for' → logprob: -5.197392463684082
    8. '```' → logprob: -5.322392463684082
    9. '(self' → logprob: -5.322392463684082
    10. ' (' → logprob: -5.572392463684082

Token 832: ' an' (ID: 448)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8577507734298706
    2. '(' → logprob: -2.10775089263916
    3. 'ed' → logprob: -2.10775089263916
    4. ' least' → logprob: -2.23275089263916
    5. 'ion' → logprob: -3.10775089263916
    6. '4' → logprob: -3.23275089263916
    7. '(self' → logprob: -3.23275089263916
    8. ' the' → logprob: -4.23275089263916
    9. '(number' → logprob: -4.60775089263916
    10. 'self' → logprob: -4.73275089263916

Token 833: ' integer' (ID: 16336)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2019137144088745
    2. ' (' → logprob: -1.4519137144088745
    3. '(self' → logprob: -2.701913833618164
    4. 'integer' → logprob: -2.951913833618164
    5. 'index' → logprob: -3.076913833618164
    6. '4' → logprob: -3.201913833618164
    7. '   ' → logprob: -3.326913833618164
    8. ' int' → logprob: -3.326913833618164
    9. ' ' → logprob: -3.451913833618164
    10. 'ex' → logprob: -3.451913833618164

Token 834: ' between' (ID: 2870)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05431801453232765
    2. ' =' → logprob: -4.179317951202393
    3. ' ,' → logprob: -4.679317951202393
    4. '       ' → logprob: -4.929317951202393
    5. '=' → logprob: -5.929317951202393
    6. 'value' → logprob: -6.179317951202393
    7. ' (' → logprob: -6.179317951202393
    8. 'div' → logprob: -6.554317951202393
    9. '(' → logprob: -6.679317951202393
    10. ' and' → logprob: -6.679317951202393

Token 835: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038467496051453054
    2. '(' → logprob: -8.375384330749512
    3. ' ' → logprob: -9.000384330749512
    4. '   ' → logprob: -11.000384330749512
    5. '1' → logprob: -12.500384330749512
    6. '```' → logprob: -12.750384330749512
    7. ' (' → logprob: -12.875384330749512
    8. '100' → logprob: -13.375384330749512
    9. '4' → logprob: -13.500384330749512
    10. '[' → logprob: -14.250384330749512

Token 836: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.875012397766113
    3. '   ' → logprob: -12.750012397766113
    4. '4' → logprob: -14.125012397766113
    5. '1' → logprob: -14.625012397766113
    6. '(' → logprob: -15.000012397766113
    7. '000' → logprob: -15.625012397766113
    8. '100' → logprob: -15.625012397766113
    9. '```' → logprob: -15.875012397766113
    10. '[' → logprob: -16.000011444091797

Token 837: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16060662269592285
    2. ' and' → logprob: -1.9106066226959229
    3. ',' → logprob: -8.035606384277344
    4. '   ' → logprob: -10.160606384277344
    5. ' to' → logprob: -12.285606384277344
    6. 'to' → logprob: -12.410606384277344
    7. '```' → logprob: -12.785606384277344
    8. '100' → logprob: -13.160606384277344
    9. ' и' → logprob: -13.410606384277344
    10. ' ,' → logprob: -13.660606384277344

Token 838: ' ' (ID: 220)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -9.007317567011341e-05
    2. ' ' → logprob: -9.375089645385742
    3. '9' → logprob: -12.375089645385742
    4. '   ' → logprob: -14.250089645385742
    5. '100' → logprob: -16.250089645385742
    6. '  ' → logprob: -16.375089645385742
    7. '4' → logprob: -16.500089645385742
    8. '```' → logprob: -17.125089645385742
    9. '10' → logprob: -17.500089645385742
    10. '899' → logprob: -18.000089645385742

Token 839: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.750006675720215
    3. '9' → logprob: -13.500006675720215
    4. '100' → logprob: -13.875006675720215
    5. '10' → logprob: -14.500006675720215
    6. '4' → logprob: -14.875006675720215
    7. '   ' → logprob: -16.5000057220459
    8. '0' → logprob: -16.6250057220459
    9. '```' → logprob: -17.0000057220459
    10. '99' → logprob: -17.1250057220459

Token 840: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0003314129135105759
    2. ',' → logprob: -8.62533187866211
    3. '999' → logprob: -9.50033187866211
    4. '   ' → logprob: -10.25033187866211
    5. '99' → logprob: -10.50033187866211
    6. '```' → logprob: -12.25033187866211
    7. ' ' → logprob: -12.87533187866211
    8. '       ' → logprob: -13.12533187866211
    9. '    ' → logprob: -14.12533187866211
    10. '_' → logprob: -14.12533187866211

Token 841: ' inclusive' (ID: 29482)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5969334840774536
    2. '       ' → logprob: -1.0969334840774536
    3. ' (' → logprob: -3.096933364868164
    4. '
' → logprob: -3.096933364868164
    5. '.' → logprob: -5.096933364868164
    6. ' that' → logprob: -5.221933364868164
    7. ',
' → logprob: -5.846933364868164
    8. '.
' → logprob: -5.971933364868164
    9. '```' → logprob: -6.596933364868164
    10. ' and' → logprob: -6.721933364868164

Token 842: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46973493695259094
    2. ',' → logprob: -1.0947349071502686
    3. ' and' → logprob: -4.469735145568848
    4. '.' → logprob: -4.844735145568848
    5. ' (' → logprob: -4.969735145568848
    6. ':' → logprob: -5.219735145568848
    7. ' with' → logprob: -6.344735145568848
    8. ' that' → logprob: -6.594735145568848
    9. '
' → logprob: -6.844735145568848
    10. ' ,' → logprob: -6.844735145568848

Token 843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039230400579981506
    2. 'segments' → logprob: -8.125391960144043
    3. '```' → logprob: -10.625391960144043
    4. '        
' → logprob: -10.875391960144043
    5. '
' → logprob: -11.000391960144043
    6. ',' → logprob: -11.500391960144043
    7. 'de' → logprob: -11.875391960144043
    8. '   ' → logprob: -12.125391960144043
    9. 'tokens' → logprob: -12.750391960144043
    10. 'def' → logprob: -13.375391960144043

Token 844: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02065330371260643
    2. 'segments' → logprob: -3.895653247833252
    3. ' segments' → logprob: -10.39565372467041
    4. '```' → logprob: -11.02065372467041
    5. 'number' → logprob: -11.27065372467041
    6. 'result' → logprob: -11.27065372467041
    7. 'tokens' → logprob: -11.52065372467041
    8. 'seg' → logprob: -12.39565372467041
    9. '   ' → logprob: -12.39565372467041
    10. '        
' → logprob: -12.39565372467041

Token 845: ' list' (ID: 1562)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.026242008432745934
    2. '[
' → logprob: -4.401241779327393
    3. '[]' → logprob: -4.901241779327393
    4. ' [(' → logprob: -5.901241779327393
    5. 'List' → logprob: -6.401241779327393
    6. '[' → logprob: -6.901241779327393
    7. '[List' → logprob: -7.776241779327393
    8. 'a' → logprob: -8.77624225616455
    9. ' [
' → logprob: -9.77624225616455
    10. ' a' → logprob: -10.02624225616455

Token 846: ' of' (ID: 328)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.35905721783638
    2. '[' → logprob: -1.4840571880340576
    3. '[(' → logprob: -2.8590571880340576
    4. ' of' → logprob: -4.234057426452637
    5. 'of' → logprob: -6.359057426452637
    6. '[int' → logprob: -8.109057426452637
    7. '[List' → logprob: -8.359057426452637
    8. '[]' → logprob: -8.859057426452637
    9. '=' → logprob: -8.984057426452637
    10. '       ' → logprob: -9.234057426452637

Token 847: ' tuples' (ID: 112464)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.030126599594950676
    2. 'Tu' → logprob: -4.530126571655273
    3. 'tu' → logprob: -4.780126571655273
    4. 'segments' → logprob: -5.280126571655273
    5. ' tuples' → logprob: -6.155126571655273
    6. '(' → logprob: -6.155126571655273
    7. '[' → logprob: -8.155126571655273
    8. '[int' → logprob: -8.405126571655273
    9. '(int' → logprob: -8.405126571655273
    10. ' Tuple' → logprob: -8.405126571655273

Token 848: ':' (ID: 25)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.600843071937561
    2. '[int' → logprob: -0.850843071937561
    3. '[' → logprob: -4.3508429527282715
    4. '[
' → logprob: -5.2258429527282715
    5. '(int' → logprob: -6.1008429527282715
    6. '[List' → logprob: -6.6008429527282715
    7. ' (' → logprob: -7.7258429527282715
    8. '(' → logprob: -7.9758429527282715
    9. '[]' → logprob: -8.47584342956543
    10. '[str' → logprob: -8.60084342956543

Token 849: ' (' (ID: 350)
  Prédit: '(power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.6799433827400208
    2. '[(' → logprob: -0.9299433827400208
    3. '[int' → logprob: -2.929943323135376
    4. '[List' → logprob: -4.054943561553955
    5. '[' → logprob: -4.554943561553955
    6. 'List' → logprob: -4.929943561553955
    7. '(List' → logprob: -5.679943561553955
    8. '(unit' → logprob: -6.304943561553955
    9. '[
' → logprob: -6.804943561553955
    10. '(segment' → logprob: -6.929943561553955

Token 850: 'segment' (ID: 45362)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.39019903540611267
    2. 'segment' → logprob: -1.390199065208435
    3. 'value' → logprob: -2.6401989459991455
    4. ' power' → logprob: -7.140199184417725
    5. 'unit' → logprob: -7.265199184417725
    6. ' segment' → logprob: -8.015198707580566
    7. '(power' → logprob: -8.140198707580566
    8. 'number' → logprob: -8.765198707580566
    9. '(segment' → logprob: -9.015198707580566
    10. 'index' → logprob: -9.765198707580566

Token 851: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.008294579572975636
    2. 'value' → logprob: -4.883294582366943
    3. ',' → logprob: -8.008294105529785
    4. ' value' → logprob: -8.883294105529785
    5. 'Value' → logprob: -9.383294105529785
    6. '_amount' → logprob: -9.633294105529785
    7. '_power' → logprob: -11.008294105529785
    8. '_index' → logprob: -11.008294105529785
    9. '_number' → logprob: -11.258294105529785
    10. '_count' → logprob: -11.883294105529785

Token 852: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.662937372922897e-05
    2. ' ,' → logprob: -10.375096321105957
    3. ',
' → logprob: -10.750096321105957
    4. '<|end|>' → logprob: -11.500096321105957
    5. '<|end|>' → logprob: -11.750096321105957
    6. ')' → logprob: -12.625096321105957
    7. '),' → logprob: -12.625096321105957
    8. '[' → logprob: -12.625096321105957
    9. '       ' → logprob: -12.750096321105957
    10. ',int' → logprob: -12.750096321105957

Token 853: ' unit' (ID: 7670)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.08169092983007431
    2. 'unit' → logprob: -2.581691026687622
    3. ' power' → logprob: -5.956690788269043
    4. ' unit' → logprob: -8.956690788269043
    5. 'segment' → logprob: -10.331690788269043
    6. 'self' → logprob: -10.706690788269043
    7. 'cor' → logprob: -12.081690788269043
    8. 'int' → logprob: -12.456690788269043
    9. 'associated' → logprob: -12.581690788269043
    10. 'current' → logprob: -12.706690788269043

Token 854: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.0067337267100811005
    2. 'power' → logprob: -5.5067338943481445
    3. '_index' → logprob: -6.2567338943481445
    4. ' power' → logprob: -7.8817338943481445
    5. '.power' → logprob: -8.756733894348145
    6. ')' → logprob: -8.881733894348145
    7. 'Power' → logprob: -10.881733894348145
    8. 'index' → logprob: -11.756733894348145
    9. '(power' → logprob: -11.881733894348145
    10. '   ' → logprob: -12.006733894348145

Token 855: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007805473171174526
    2. ')
' → logprob: -4.882805347442627
    3. ')`' → logprob: -10.132805824279785
    4. '   ' → logprob: -10.257805824279785
    5. '),' → logprob: -10.757805824279785
    6. '       ' → logprob: -10.757805824279785
    7. ')`
' → logprob: -11.132805824279785
    8. ')

' → logprob: -11.632805824279785
    9. 'self' → logprob: -11.757805824279785
    10. ' )' → logprob: -11.757805824279785

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010926496179308742
    2. ':' → logprob: -10.250109672546387
    3. '```' → logprob: -10.750109672546387
    4. ')' → logprob: -11.000109672546387
    5. ',' → logprob: -11.125109672546387
    6. '[]' → logprob: -12.375109672546387
    7. '[' → logprob: -12.750109672546387
    8. '           ' → logprob: -12.875109672546387
    9. '):
' → logprob: -13.250109672546387
    10. '   ' → logprob: -13.875109672546387

Token 857: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013763030292466283
    2. '```' → logprob: -7.251376152038574
    3. ':' → logprob: -8.001376152038574
    4. ':
' → logprob: -9.001376152038574
    5. '):
' → logprob: -9.001376152038574
    6. ')' → logprob: -11.126376152038574
    7. '
' → logprob: -11.251376152038574
    8. '):' → logprob: -11.501376152038574
    9. '[]' → logprob: -12.251376152038574
    10. '():' → logprob: -12.501376152038574

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018406866118311882
    2. 'segments' → logprob: -4.018406867980957
    3. '```' → logprob: -8.893406867980957
    4. 'de' → logprob: -9.643406867980957
    5. 'result' → logprob: -10.768406867980957
    6. ' segments' → logprob: -11.018406867980957
    7. 'seg' → logprob: -12.268406867980957
    8. 'tokens' → logprob: -12.893406867980957
    9. 'num' → logprob: -13.518406867980957
    10. '   ' → logprob: -13.643406867980957

Token 859: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.0005790081340819597
    2. 'result' → logprob: -7.875578880310059
    3. '       ' → logprob: -8.875578880310059
    4. 'number' → logprob: -11.000578880310059
    5. 'num' → logprob: -11.125578880310059
    6. ' segments' → logprob: -11.875578880310059
    7. 'power' → logprob: -12.000578880310059
    8. 'results' → logprob: -12.875578880310059
    9. 'res' → logprob: -12.875578880310059
    10. 'value' → logprob: -13.125578880310059

Token 860: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06214066222310066
    2. '=' → logprob: -2.812140703201294
    3. ':' → logprob: -9.312140464782715
    4. '=[]' → logprob: -9.687140464782715
    5. '=[]
' → logprob: -11.437140464782715
    6. '       ' → logprob: -11.687140464782715
    7. ',' → logprob: -14.812140464782715
    8. '[]' → logprob: -15.312140464782715
    9. '=[]
' → logprob: -15.312140464782715
    10. '   ' → logprob: -15.437140464782715

Token 861: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014164329506456852
    2. '[]
' → logprob: -4.264164447784424
    3. '[]

' → logprob: -14.014163970947266
    4. '[]"' → logprob: -17.639163970947266
    5. '[]}' → logprob: -18.389163970947266
    6. ' []' → logprob: -18.514163970947266
    7. '[])' → logprob: -19.014163970947266
    8. '[])
' → logprob: -19.139163970947266
    9. '[],' → logprob: -20.014163970947266
    10. '[]>' → logprob: -20.514163970947266

Token 862: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05070748180150986
    2. 'num' → logprob: -3.8007075786590576
    3. 'number' → logprob: -4.5507073402404785
    4. 'n' → logprob: -4.5507073402404785
    5. ' n' → logprob: -5.6757073402404785
    6. ' number' → logprob: -7.0507073402404785
    7. 'value' → logprob: -7.0507073402404785
    8. ' num' → logprob: -7.4257073402404785
    9. '```' → logprob: -9.675707817077637
    10. ' value' → logprob: -9.800707817077637

Token 863: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2205408811569214
    2. 'n' (adapté à ' n') → logprob: -2.095541000366211
    3. 'value' → logprob: -3.720541000366211
    4. 'remaining' → logprob: -3.720541000366211
    5. 'number' → logprob: -4.095541000366211
    6. 'power' → logprob: -5.720541000366211
    7. '       ' → logprob: -5.970541000366211
    8. 'temp' → logprob: -6.345541000366211
    9. 're' → logprob: -6.720541000366211
    10. 'rem' → logprob: -7.970541000366211

Token 864: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044021349400281906
    2. '=' → logprob: -4.169021129608154
    3. 'umber' → logprob: -4.294021129608154
    4. 'um' → logprob: -4.294021129608154
    5. '        ' → logprob: -8.419021606445312
    6. '       ' → logprob: -10.419021606445312
    7. ',' → logprob: -11.169021606445312
    8. 'ow' → logprob: -12.169021606445312
    9. '   ' → logprob: -12.294021606445312
    10. 'o' → logprob: -12.794021606445312

Token 865: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.56102097814437e-05
    2. ' self' → logprob: -10.000045776367188
    3. '	self' → logprob: -17.250045776367188
    4. '       ' → logprob: -17.625045776367188
    5. '   ' → logprob: -18.875045776367188
    6. 'abs' → logprob: -19.500045776367188
    7. '=self' → logprob: -20.625045776367188
    8. '(self' → logprob: -20.625045776367188
    9. '
' → logprob: -21.375045776367188
    10. '$self' → logprob: -21.500045776367188

Token 866: '.number' (ID: 25737)
  Prédit: '.number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.number' → logprob: -0.008913070894777775
    2. 'umber' → logprob: -4.758913040161133
    3. 'number' → logprob: -8.133913040161133
    4. '.' → logprob: -12.383913040161133
    5. 'umbers' → logprob: -15.508913040161133
    6. '	number' → logprob: -16.383913040161133
    7. ' .' → logprob: -16.508913040161133
    8. ' number' → logprob: -16.883913040161133
    9. '._' → logprob: -17.008913040161133
    10. 'ber' → logprob: -17.133913040161133

Token 867: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2380317598581314
    2. '       ' → logprob: -1.6130317449569702
    3. ' while' → logprob: -4.48803186416626
    4. '        
' → logprob: -7.23803186416626
    5. '
' → logprob: -8.363031387329102
    6. 'While' → logprob: -9.363031387329102
    7. ',' → logprob: -9.488031387329102
    8. '#' → logprob: -10.238031387329102
    9. '```' → logprob: -10.238031387329102
    10. '	while' → logprob: -10.488031387329102

Token 868: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10444500297307968
    2. 'power' → logprob: -2.604444980621338
    3. 'while' → logprob: -3.854444980621338
    4. 'unit' → logprob: -6.104444980621338
    5. 'index' → logprob: -6.479444980621338
    6. '4' → logprob: -9.854445457458496
    7. 'segment' → logprob: -10.104445457458496
    8. 'i' → logprob: -10.229445457458496
    9. 'pow' → logprob: -10.604445457458496
    10. 'for' → logprob: -10.604445457458496

Token 869: ' #' (ID: 1069)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.2097930610179901
    2. 'while' → logprob: -2.3347930908203125
    3. 'unit' → logprob: -2.7097930908203125
    4. '       ' → logprob: -4.4597930908203125
    5. 'index' → logprob: -4.7097930908203125
    6. 'for' → logprob: -6.4597930908203125
    7. 'idx' → logprob: -6.4597930908203125
    8. 'current' → logprob: -7.2097930908203125
    9. 'i' → logprob: -7.9597930908203125
    10. 'pow' → logprob: -8.084793090820312

Token 870: ' Process' (ID: 12482)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.2648620307445526
    2. 'unit' → logprob: -2.014862060546875
    3. 'while' → logprob: -2.764862060546875
    4. 'for' → logprob: -4.139862060546875
    5. 'max' → logprob: -5.014862060546875
    6. 'powers' → logprob: -5.764862060546875
    7. 'segment' → logprob: -5.889862060546875
    8. 'current' → logprob: -5.889862060546875
    9. 'index' → logprob: -6.264862060546875
    10. 'pow' → logprob: -7.014862060546875

Token 871: ' segments' (ID: 33749)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004677187651395798
    2. ' while' → logprob: -5.5046772956848145
    3. '4' → logprob: -7.6296772956848145
    4. '       ' → logprob: -10.379676818847656
    5. 'power' → logprob: -10.379676818847656
    6. 'unit' → logprob: -11.379676818847656
    7. '0' → logprob: -11.629676818847656
    8. 'for' → logprob: -11.879676818847656
    9. '10' → logprob: -12.004676818847656
    10. '```' → logprob: -12.504676818847656

Token 872: ' from' (ID: 591)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009190576151013374
    2. ' while' → logprob: -4.759190559387207
    3. '       ' → logprob: -8.259190559387207
    4. '4' → logprob: -9.259190559387207
    5. '
' → logprob: -9.634190559387207
    6. 'for' → logprob: -9.759190559387207
    7. ',' → logprob: -11.134190559387207
    8. 'power' → logprob: -11.259190559387207
    9. '[' → logprob: -11.509190559387207
    10. ':' → logprob: -11.634190559387207

Token 873: ' largest' (ID: 10574)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.4881126284599304
    2. '0' → logprob: -1.2381126880645752
    3. 'least' → logprob: -2.488112688064575
    4. 'the' → logprob: -5.238112449645996
    5. 'power' → logprob: -6.113112449645996
    6. 'right' → logprob: -6.363112449645996
    7. 'small' → logprob: -6.488112449645996
    8. 'low' → logprob: -7.113112449645996
    9. 'lower' → logprob: -7.613112449645996
    10. 'unit' → logprob: -7.613112449645996

Token 874: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.0658232644200325
    2. 'power' → logprob: -2.8158233165740967
    3. 'to' → logprob: -6.440823078155518
    4. ' unit' → logprob: -6.565823078155518
    5. '_unit' → logprob: -8.315823554992676
    6. ' power' → logprob: -8.815823554992676
    7. 'pow' → logprob: -9.065823554992676
    8. 'possible' → logprob: -9.815823554992676
    9. 'powers' → logprob: -9.815823554992676
    10. ' to' → logprob: -9.940823554992676

Token 875: ' down' (ID: 1917)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.16543814539909363
    2. 'to' → logprob: -3.165438175201416
    3. '_power' → logprob: -3.165438175201416
    4. ' to' → logprob: -3.665438175201416
    5. ' power' → logprob: -4.040438175201416
    6. '       ' → logprob: -4.540438175201416
    7. ' =' → logprob: -5.165438175201416
    8. 'down' → logprob: -5.665438175201416
    9. 'pow' → logprob: -6.540438175201416
    10. '=' → logprob: -6.915438175201416

Token 876: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5631076693534851
    2. 'to' → logprob: -1.5631077289581299
    3. ' to' → logprob: -1.8131077289581299
    4. 'wards' → logprob: -3.06310772895813
    5. 'ward' → logprob: -5.813107490539551
    6. 'while' → logprob: -6.188107490539551
    7. 'power' → logprob: -6.313107490539551
    8. '   ' → logprob: -7.063107490539551
    9. '_to' → logprob: -7.563107490539551
    10. ' =' → logprob: -7.813107490539551

Token 877: ' smallest' (ID: 42173)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1270761340856552
    2. 'self' → logprob: -2.1270761489868164
    3. ' ' → logprob: -10.002076148986816
    4. ' self' → logprob: -10.627076148986816
    5. 'lowest' → logprob: -10.627076148986816
    6. '4' → logprob: -10.877076148986816
    7. 'the' → logprob: -11.377076148986816
    8. 'unit' → logprob: -11.627076148986816
    9. 'zero' → logprob: -12.627076148986816
    10. '   ' → logprob: -13.002076148986816

Token 878: ' unit' (ID: 7670)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.901816725730896
    2. 'power' → logprob: -1.276816725730896
    3. 'max' → logprob: -1.651816725730896
    4. 'unit' → logprob: -3.1518168449401855
    5. 'powers' → logprob: -3.2768168449401855
    6. 'for' → logprob: -4.5268168449401855
    7. 'while' → logprob: -5.1518168449401855
    8. 'units' → logprob: -5.6518168449401855
    9. ' power' → logprob: -5.7768168449401855
    10. ',' → logprob: -5.9018168449401855

Token 879: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0517093800008297
    2. 'for' → logprob: -3.8017094135284424
    3. 'powers' → logprob: -4.301709175109863
    4. 'power' → logprob: -4.801709175109863
    5. ' for' → logprob: -5.801709175109863
    6. ',' → logprob: -6.426709175109863
    7. 'max' → logprob: -7.676709175109863
    8. 'current' → logprob: -8.426709175109863
    9. '        
' → logprob: -8.551709175109863
    10. 'unit' → logprob: -8.801709175109863

Token 880: 'power' (ID: 22295)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05192364379763603
    2. 'max' → logprob: -3.5519237518310547
    3. 'for' → logprob: -4.051923751831055
    4. 'power' → logprob: -6.301923751831055
    5. ')' → logprob: -7.176923751831055
    6. '24' → logprob: -7.426923751831055
    7. ' self' → logprob: -7.676923751831055
    8. 'powers' → logprob: -8.551923751831055
    9. '       ' → logprob: -8.801923751831055
    10. 'while' → logprob: -9.676923751831055

Token 881: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06211993843317032
    2. ' =' → logprob: -3.187119960784912
    3. '       ' → logprob: -4.812119960784912
    4. '=self' → logprob: -5.062119960784912
    5. ' in' → logprob: -6.187119960784912
    6. ':' → logprob: -7.312119960784912
    7. 'in' → logprob: -7.937119960784912
    8. ')' → logprob: -8.437119483947754
    9. 's' → logprob: -8.937119483947754
    10. '):
' → logprob: -9.062119483947754

Token 882: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026288805529475212
    2. '=max' → logprob: -4.776288986206055
    3. '=self' → logprob: -5.026288986206055
    4. '0' → logprob: -5.901288986206055
    5. 'self' → logprob: -6.026288986206055
    6. '24' → logprob: -6.401288986206055
    7. 'max' → logprob: -6.901288986206055
    8. 'in' → logprob: -7.151288986206055
    9. 's' → logprob: -7.776288986206055
    10. '4' → logprob: -8.026288986206055

Token 883: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6481978297233582
    2. '):
' → logprob: -1.273197889328003
    3. ',' → logprob: -2.398197889328003
    4. ')' → logprob: -2.648197889328003
    5. '       ' → logprob: -3.523197889328003
    6. ')
' → logprob: -6.148197650909424
    7. '):

' → logprob: -6.773197650909424
    8. ':' → logprob: -7.273197650909424
    9. '   ' → logprob: -7.398197650909424
    10. ' for' → logprob: -9.023198127746582

Token 884: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01931605488061905
    2. 'for' → logprob: -4.14431619644165
    3. 'powers' → logprob: -5.89431619644165
    4. 'power' → logprob: -8.019315719604492
    5. 'max' → logprob: -9.019315719604492
    6. ' for' → logprob: -10.144315719604492
    7. '```' → logprob: -11.519315719604492
    8. 'current' → logprob: -12.144315719604492
    9. 'pow' → logprob: -12.644315719604492
    10. '   ' → logprob: -12.894315719604492

Token 885: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2510676085948944
    2. 'max' → logprob: -2.126067638397217
    3. 'powers' → logprob: -2.626067638397217
    4. '       ' → logprob: -3.626067638397217
    5. 'current' → logprob: -6.501067638397217
    6. 'power' → logprob: -6.626067638397217
    7. 'unit' → logprob: -8.001067161560059
    8. 'remaining' → logprob: -9.001067161560059
    9. 'units' → logprob: -9.751067161560059
    10. 'pow' → logprob: -9.751067161560059

Token 886: ' Each' (ID: 11555)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7809141874313354
    2. 'for' → logprob: -0.9059141874313354
    3. 'powers' → logprob: -2.280914306640625
    4. 'power' → logprob: -4.030914306640625
    5. '       ' → logprob: -4.655914306640625
    6. 'current' → logprob: -5.530914306640625
    7. 'unit' → logprob: -5.905914306640625
    8. 'remaining' → logprob: -7.530914306640625
    9. 'units' → logprob: -8.405914306640625
    10. 'pow' → logprob: -8.530914306640625

Token 887: ' segment' (ID: 14806)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.9383640289306641
    2. 'while' → logprob: -1.188364028930664
    3. 'power' → logprob: -1.688364028930664
    4. 'segment' → logprob: -2.563364028930664
    5. ' while' → logprob: -4.063364028930664
    6. ' unit' → logprob: -4.813364028930664
    7. ' power' → logprob: -5.188364028930664
    8. ' segment' → logprob: -5.313364028930664
    9. 'div' → logprob: -5.813364028930664
    10. 'step' → logprob: -7.188364028930664

Token 888: ' corresponds' (ID: 66938)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.9930855631828308
    2. '_power' → logprob: -1.1180856227874756
    3. 'div' → logprob: -2.9930856227874756
    4. 'rep' → logprob: -3.1180856227874756
    5. 'size' → logprob: -3.6180856227874756
    6. '_value' → logprob: -3.7430856227874756
    7. 'segment' → logprob: -3.7430856227874756
    8. 'is' → logprob: -3.7430856227874756
    9. '_size' → logprob: -4.1180853843688965
    10. '=' → logprob: -4.2430853843688965

Token 889: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.12011716514825821
    2. '       ' → logprob: -2.7451171875
    3. ' to' → logprob: -3.1201171875
    4. '           ' → logprob: -6.6201171875
    5. 'for' → logprob: -6.9951171875
    6. '4' → logprob: -7.4951171875
    7. '=' → logprob: -7.4951171875
    8. '   ' → logprob: -8.1201171875
    9. '0' → logprob: -8.1201171875
    10. '#' → logprob: -8.3701171875

Token 890: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5354769229888916
    2. '10' → logprob: -1.5354769229888916
    3. '4' → logprob: -2.0354769229888916
    4. 'unit' → logprob: -3.9104769229888916
    5. 'max' → logprob: -4.2854766845703125
    6. '100' → logprob: -4.4104766845703125
    7. 'segment' → logprob: -4.5354766845703125
    8. 'power' → logprob: -5.5354766845703125
    9. 'pow' → logprob: -6.1604766845703125
    10. '(' → logprob: -6.9104766845703125

Token 891: '10' (ID: 702)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.05907583609223366
    2. 'self' → logprob: -3.0590758323669434
    3. '100' → logprob: -5.684075832366943
    4. 'segment' → logprob: -6.309075832366943
    5. '10' → logprob: -6.559075832366943
    6. '999' → logprob: -6.684075832366943
    7. 'max' → logprob: -7.434075832366943
    8. 'unit' → logprob: -7.434075832366943
    9. 'pow' → logprob: -8.434076309204102
    10. '(self' → logprob: -8.809076309204102

Token 892: '^(' (ID: 32612)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18842551112174988
    2. '**' → logprob: -1.8134255409240723
    3. '^' → logprob: -5.313425540924072
    4. '000' → logprob: -6.438425540924072
    5. ' ' → logprob: -6.563425540924072
    6. '   ' → logprob: -8.438425064086914
    7. '_' → logprob: -8.563425064086914
    8. '```' → logprob: -9.188425064086914
    9. ' **' → logprob: -9.438425064086914
    10. ',' → logprob: -10.563425064086914

Token 893: 'unit' (ID: 5400)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.006976436823606491
    2. '((' → logprob: -6.25697660446167
    3. '(unit' → logprob: -6.63197660446167
    4. '0' → logprob: -6.75697660446167
    5. '(' → logprob: -7.25697660446167
    6. '(segment' → logprob: -8.006976127624512
    7. ' ' → logprob: -8.131976127624512
    8. '(power' → logprob: -8.631976127624512
    9. '   ' → logprob: -9.006976127624512
    10. 'segments' → logprob: -9.131976127624512

Token 894: '_power' (ID: 51623)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1514110565185547
    2. '   ' → logprob: -3.0264110565185547
    3. 'self' → logprob: -4.651411056518555
    4. 'unit' → logprob: -4.776411056518555
    5. '_segments' → logprob: -4.901411056518555
    6. '_segment' → logprob: -5.026411056518555
    7. '_system' → logprob: -5.276411056518555
    8. '_power' → logprob: -5.401411056518555
    9. 'system' → logprob: -5.401411056518555
    10. '_unit' → logprob: -5.526411056518555

Token 895: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6396350264549255
    2. ' *' → logprob: -1.7646350860595703
    3. ')
' → logprob: -2.1396350860595703
    4. '   ' → logprob: -2.3896350860595703
    5. '*' → logprob: -3.2646350860595703
    6. '       ' → logprob: -3.5146350860595703
    7. ' )' → logprob: -4.76463508605957
    8. ' )
' → logprob: -5.51463508605957
    9. '//' → logprob: -6.01463508605957
    10. ' ' → logprob: -6.26463508605957

Token 896: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046439285506494343
    2. 'powers' → logprob: -8.50046443939209
    3. 'for' → logprob: -9.37546443939209
    4. 'power' → logprob: -9.87546443939209
    5. ',' → logprob: -10.25046443939209
    6. 'max' → logprob: -10.62546443939209
    7. ' for' → logprob: -11.12546443939209
    8. '        
' → logprob: -11.37546443939209
    9. 'pow' → logprob: -12.12546443939209
    10. 'current' → logprob: -12.12546443939209

Token 897: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8097404837608337
    2. 'max' → logprob: -1.0597405433654785
    3. 'power' → logprob: -2.4347405433654785
    4. 'powers' → logprob: -2.5597405433654785
    5. 'unit' → logprob: -3.8097405433654785
    6. 'for' → logprob: -4.5597405433654785
    7. 'current' → logprob: -5.0597405433654785
    8. 'pow' → logprob: -7.1847405433654785
    9. 'segment' → logprob: -7.5597405433654785
    10. 'units' → logprob: -7.6847405433654785

Token 898: ' Each' (ID: 11555)
  Prédit: 'powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'powers' → logprob: -0.9787692427635193
    2. 'max' → logprob: -1.228769302368164
    3. 'for' → logprob: -1.478769302368164
    4. 'power' → logprob: -2.853769302368164
    5. '       ' → logprob: -4.103769302368164
    6. 'current' → logprob: -4.228769302368164
    7. 'unit' → logprob: -4.603769302368164
    8. 'segment' → logprob: -7.103769302368164
    9. 'remaining' → logprob: -7.103769302368164
    10. 'pow' → logprob: -7.228769302368164

Token 899: ' segment' (ID: 14806)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.3109239637851715
    2. 'power' → logprob: -2.1859240531921387
    3. 'while' → logprob: -2.4359240531921387
    4. 'segment' → logprob: -3.4359240531921387
    5. 'div' → logprob: -3.6859240531921387
    6. ' unit' → logprob: -5.810924053192139
    7. ' while' → logprob: -6.185924053192139
    8. ' power' → logprob: -6.435924053192139
    9. 'base' → logprob: -6.935924053192139
    10. ' segment' → logprob: -8.06092357635498

Token 900: ' value' (ID: 1432)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.3710956573486328
    2. '_power' → logprob: -2.371095657348633
    3. 'while' → logprob: -2.871095657348633
    4. 'div' → logprob: -3.121095657348633
    5. '=' → logprob: -3.621095657348633
    6. '#' → logprob: -3.746095657348633
    7. 'unit' → logprob: -3.996095657348633
    8. 'size' → logprob: -5.121095657348633
    9. 'pow' → logprob: -5.371095657348633
    10. 'segment' → logprob: -5.496095657348633

Token 901: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011193889193236828
    2. ' =' → logprob: -4.636193752288818
    3. ',' → logprob: -7.136193752288818
    4. 'div' → logprob: -7.886193752288818
    5. ' is' → logprob: -10.011194229125977
    6. '   ' → logprob: -10.261194229125977
    7. 'is' → logprob: -10.386194229125977
    8. '=
' → logprob: -11.136194229125977
    9. 'while' → logprob: -11.261194229125977
    10. '#' → logprob: -11.261194229125977

Token 902: ' most' (ID: 1645)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.24961870908737183
    2. 'power' → logprob: -2.3746187686920166
    3. 'each' → logprob: -2.6246187686920166
    4. 'self' → logprob: -3.9996187686920166
    5. 'the' → logprob: -4.3746185302734375
    6. 'segment' → logprob: -4.6246185302734375
    7. 'current' → logprob: -6.2496185302734375
    8. 'most' → logprob: -6.2496185302734375
    9. 'segments' → logprob: -6.4996185302734375
    10. 'max' → logprob: -6.7496185302734375

Token 903: ' ' (ID: 220)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.05774349346756935
    2. '   ' → logprob: -3.807743549346924
    3. '100' → logprob: -4.432743549346924
    4. '=' → logprob: -4.432743549346924
    5. ' ' → logprob: -5.182743549346924
    6. '4' → logprob: -6.557743549346924
    7. ' =' → logprob: -6.932743549346924
    8. ' is' → logprob: -7.307743549346924
    9. 'is' → logprob: -8.057743072509766
    10. '10' → logprob: -8.182743072509766

Token 904: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -1.1517960956552997e-05
    2. '4' → logprob: -12.000011444091797
    3. '10' → logprob: -13.000011444091797
    4. '100' → logprob: -13.375011444091797
    5. ' ' → logprob: -14.000011444091797
    6. '9' → logprob: -14.750011444091797
    7. '   ' → logprob: -16.750011444091797
    8. '0' → logprob: -17.750011444091797
    9. '(' → logprob: -18.125011444091797
    10. '  ' → logprob: -18.375011444091797

Token 905: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.157039049663581e-05
    2. '999' → logprob: -10.125051498413086
    3. '   ' → logprob: -12.125051498413086
    4. '```' → logprob: -13.250051498413086
    5. '99' → logprob: -13.875051498413086
    6. ' ' → logprob: -13.875051498413086
    7. ' +' → logprob: -14.875051498413086
    8. '+' → logprob: -15.000051498413086
    9. '９' → logprob: -15.375051498413086
    10. ',' → logprob: -15.625051498413086

Token 906: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017236312851309776
    2. '
' → logprob: -5.392236232757568
    3. '        
' → logprob: -6.017236232757568
    4. 'while' → logprob: -6.017236232757568
    5. 'div' → logprob: -6.142236232757568
    6. ',' → logprob: -6.267236232757568
    7. 'unit' → logprob: -6.892236232757568
    8. 'power' → logprob: -7.267236232757568
    9. 'segment' → logprob: -7.767236232757568
    10. 'current' → logprob: -8.517236709594727

Token 907: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015955790877342224
    2. 'power' → logprob: -9.62515926361084
    3. '        
' → logprob: -10.50015926361084
    4. 'current' → logprob: -11.62515926361084
    5. 'unit' → logprob: -11.62515926361084
    6. ',' → logprob: -11.75015926361084
    7. 'step' → logprob: -11.75015926361084
    8. 'div' → logprob: -12.12515926361084
    9. '   ' → logprob: -12.87515926361084
    10. 'max' → logprob: -13.00015926361084

Token 908: ' #' (ID: 1069)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -1.2418962717056274
    2. 'powers' → logprob: -1.3668962717056274
    3. 'max' → logprob: -1.4918962717056274
    4. 'unit' → logprob: -2.616896152496338
    5. 'for' → logprob: -2.741896152496338
    6. '       ' → logprob: -3.116896152496338
    7. 'current' → logprob: -3.991896152496338
    8. 'segment' → logprob: -4.366896152496338
    9. 'segments' → logprob: -4.991896152496338
    10. 'div' → logprob: -5.741896152496338

Token 909: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1355948448181152
    2. 'for' → logprob: -1.5105948448181152
    3. 'powers' → logprob: -1.6355948448181152
    4. 'power' → logprob: -1.8855948448181152
    5. 'unit' → logprob: -3.1355948448181152
    6. '       ' → logprob: -3.3855948448181152
    7. 'remaining' → logprob: -4.635594844818115
    8. 'current' → logprob: -4.760594844818115
    9. 'segment' → logprob: -5.510594844818115
    10. 'div' → logprob: -5.760594844818115

Token 910: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7609135508537292
    2. 'power' → logprob: -1.885913610458374
    3. 'powers' → logprob: -1.885913610458374
    4. 'unit' → logprob: -2.135913610458374
    5. 'for' → logprob: -2.760913610458374
    6. 'remaining' → logprob: -4.135913372039795
    7. 'current' → logprob: -4.260913372039795
    8. 'segment' → logprob: -5.010913372039795
    9. 'units' → logprob: -6.135913372039795
    10. 'segments' → logprob: -6.385913372039795

Token 911: ' Man' (ID: 3265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.051043517887592316
    2. '000' → logprob: -3.3010435104370117
    3. 'while' → logprob: -5.426043510437012
    4. 'power' → logprob: -6.176043510437012
    5. '       ' → logprob: -6.426043510437012
    6. '   ' → logprob: -6.676043510437012
    7. 'e' → logprob: -7.176043510437012
    8. 'unit' → logprob: -8.051043510437012
    9. '_' → logprob: -8.426043510437012
    10. '
' → logprob: -8.551043510437012

Token 912: ' =' (ID: 314)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.009218339808285236
    2. ' =' → logprob: -5.759218215942383
    3. '0' → logprob: -5.884218215942383
    4. ',' → logprob: -6.384218215942383
    5. '=' → logprob: -7.884218215942383
    6. '
' → logprob: -8.759218215942383
    7. '   ' → logprob: -9.009218215942383
    8. '```' → logprob: -9.259218215942383
    9. '00' → logprob: -9.384218215942383
    10. '004' → logprob: -9.509218215942383

Token 913: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20573273301124573
    2. '100' → logprob: -1.7057327032089233
    3. '4' → logprob: -6.080732822418213
    4. ' ' → logprob: -6.455732822418213
    5. '1' → logprob: -8.205732345581055
    6. '   ' → logprob: -8.830732345581055
    7. '104' → logprob: -11.455732345581055
    8. '  ' → logprob: -12.580732345581055
    9. '```' → logprob: -12.705732345581055
    10. '0' → logprob: -12.830732345581055

Token 914: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.43932801485061646
    2. '100' → logprob: -1.0643279552459717
    3. '4' → logprob: -4.564328193664551
    4. '1' → logprob: -9.68932819366455
    5. ' ' → logprob: -10.18932819366455
    6. '104' → logprob: -10.68932819366455
    7. '   ' → logprob: -11.06432819366455
    8. '999' → logprob: -13.06432819366455
    9. '```' → logprob: -13.31432819366455
    10. '[' → logprob: -13.43932819366455

Token 915: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7404758334159851
    2. '000' → logprob: -1.2404758930206299
    3. '4' → logprob: -1.4904758930206299
    4. ' **' → logprob: -5.365475654602051
    5. '^' → logprob: -6.865475654602051
    6. '0' → logprob: -7.115475654602051
    7. '_' → logprob: -7.615475654602051
    8. ' ' → logprob: -7.990475654602051
    9. '004' → logprob: -8.11547565460205
    10. '   ' → logprob: -8.36547565460205

Token 916: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.875012397766113
    4. '' → logprob: -16.250011444091797
    5. '[' → logprob: -17.000011444091797
    6. '   ' → logprob: -17.125011444091797
    7. '0' → logprob: -17.312511444091797
    8. '(' → logprob: -17.875011444091797
    9. '４' → logprob: -17.875011444091797
    10. '{' → logprob: -18.125011444091797

Token 917: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009996416047215462
    2. '
' → logprob: -4.88499641418457
    3. 'while' → logprob: -6.88499641418457
    4. '        
' → logprob: -7.25999641418457
    5. ',' → logprob: -8.25999641418457
    6. '```' → logprob: -9.75999641418457
    7. '#' → logprob: -9.88499641418457
    8. '   ' → logprob: -10.50999641418457
    9. '10' → logprob: -10.50999641418457
    10. '4' → logprob: -10.50999641418457

Token 918: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045772403478622437
    2. '10' → logprob: -4.170772552490234
    3. 'unit' → logprob: -4.420772552490234
    4. '   ' → logprob: -5.420772552490234
    5. ' ' → logprob: -5.670772552490234
    6. 'max' → logprob: -6.795772552490234
    7. '1' → logprob: -6.795772552490234
    8. 'n' → logprob: -7.045772552490234
    9. '```' → logprob: -7.045772552490234
    10. 'for' → logprob: -7.170772552490234

Token 919: ' segments' (ID: 33749)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.3598523736000061
    2. '       ' → logprob: -1.9848523139953613
    3. 'power' → logprob: -2.2348523139953613
    4. 'segment' → logprob: -3.6098523139953613
    5. 'div' → logprob: -4.484852313995361
    6. 'while' → logprob: -4.984852313995361
    7. 'base' → logprob: -5.859852313995361
    8. 'pow' → logprob: -6.484852313995361
    9. 'for' → logprob: -6.484852313995361
    10. 'max' → logprob: -6.609852313995361

Token 920: ' correspond' (ID: 11095)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5922303199768066
    2. ' =' → logprob: -0.9672303199768066
    3. '=[]' → logprob: -4.342230319976807
    4. '       ' → logprob: -4.967230319976807
    5. '=[]
' → logprob: -5.092230319976807
    6. '_power' → logprob: -5.342230319976807
    7. ':' → logprob: -5.592230319976807
    8. '.append' → logprob: -5.717230319976807
    9. '#' → logprob: -5.842230319976807
    10. 'powers' → logprob: -6.092230319976807

Token 921: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8441228270530701
    2. 'to' → logprob: -0.8441228270530701
    3. '       ' → logprob: -2.094122886657715
    4. '           ' → logprob: -4.344122886657715
    5. '   ' → logprob: -5.844122886657715
    6. '        ' → logprob: -8.344122886657715
    7. '4' → logprob: -8.344122886657715
    8. '=' → logprob: -8.969122886657715
    9. '    ' → logprob: -9.219122886657715
    10. '               ' → logprob: -9.969122886657715

Token 922: ' groups' (ID: 8896)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.02501045912504196
    2. 'powers' → logprob: -4.150010585784912
    3. '[' → logprob: -5.650010585784912
    4. ' ' → logprob: -6.275010585784912
    5. 'multip' → logprob: -7.275010585784912
    6. 'segments' → logprob: -7.775010585784912
    7. 'unit' → logprob: -7.900010585784912
    8. 'self' → logprob: -7.900010585784912
    9. '0' → logprob: -8.025010108947754
    10. 'power' → logprob: -8.400010108947754

Token 923: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.16534458100795746
    2. ' of' → logprob: -1.9153445959091187
    3. '=' → logprob: -5.540344715118408
    4. '       ' → logprob: -7.915344715118408
    5. '   ' → logprob: -8.41534423828125
    6. ' =' → logprob: -8.91534423828125
    7. '           ' → logprob: -8.91534423828125
    8. '_of' → logprob: -9.04034423828125
    9. '4' → logprob: -9.66534423828125
    10. '[' → logprob: -10.04034423828125

Token 924: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00011129142512800172
    2. ' ' → logprob: -9.25011157989502
    3. 'four' → logprob: -11.75011157989502
    4. 'digits' → logprob: -12.50011157989502
    5. ' four' → logprob: -13.75011157989502
    6. '   ' → logprob: -15.00011157989502
    7. '' → logprob: -15.25011157989502
    8. '14' → logprob: -15.25011157989502
    9. 'powers' → logprob: -15.37511157989502
    10. '```' → logprob: -15.50011157989502

Token 925: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.625016212463379
    3. 'digits' → logprob: -12.750016212463379
    4. 'four' → logprob: -13.500016212463379
    5. '```' → logprob: -14.625016212463379
    6. '' → logprob: -14.625016212463379
    7. 'tokens' → logprob: -14.750016212463379
    8. 'segments' → logprob: -15.625016212463379
    9. '   ' → logprob: -15.625016212463379
    10. 'powers' → logprob: -15.875016212463379

Token 926: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5594637393951416
    2. '   ' → logprob: -1.0594637393951416
    3. ' digits' → logprob: -3.5594637393951416
    4. '       ' → logprob: -4.3094635009765625
    5. '4' → logprob: -4.3094635009765625
    6. '_digits' → logprob: -5.4344635009765625
    7. ')' → logprob: -5.8094635009765625
    8. '0' → logprob: -6.1844635009765625
    9. ' spaces' → logprob: -6.1844635009765625
    10. '
' → logprob: -6.3094635009765625

Token 927: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014563052682206035
    2. '        
' → logprob: -7.751456260681152
    3. 'power' → logprob: -8.126456260681152
    4. 'powers' → logprob: -8.251456260681152
    5. '
' → logprob: -8.376456260681152
    6. ',' → logprob: -9.376456260681152
    7. 'while' → logprob: -10.626456260681152
    8. 'for' → logprob: -11.001456260681152
    9. '<|end|>' → logprob: -11.251456260681152
    10. '<|end|>' → logprob: -11.626456260681152

Token 928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003649017889983952
    2. 'power' → logprob: -8.375365257263184
    3. 'while' → logprob: -10.875365257263184
    4. 'max' → logprob: -10.875365257263184
    5. 'powers' → logprob: -11.000365257263184
    6. 'unit' → logprob: -11.125365257263184
    7. '
' → logprob: -11.125365257263184
    8. '        
' → logprob: -11.125365257263184
    9. 'pow' → logprob: -12.000365257263184
    10. 'segment' → logprob: -12.500365257263184

Token 929: ' powers' (ID: 27742)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.6389911770820618
    2. '       ' → logprob: -1.888991117477417
    3. 'powers' (adapté à ' powers') → logprob: -2.138991117477417
    4. 'unit' → logprob: -2.513991117477417
    5. 'segments' → logprob: -3.513991117477417
    6. 'max' → logprob: -3.513991117477417
    7. 'segment' → logprob: -3.888991117477417
    8. 'for' → logprob: -4.513991355895996
    9. 'div' → logprob: -4.763991355895996
    10. 'pow' → logprob: -5.513991355895996

Token 930: '_desc' (ID: 26683)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05504058673977852
    2. '=' → logprob: -2.9300405979156494
    3. '       ' → logprob: -9.30504035949707
    4. ':' → logprob: -10.30504035949707
    5. '   ' → logprob: -10.80504035949707
    6. '<|end|>' → logprob: -12.30504035949707
    7. '=self' → logprob: -12.80504035949707
    8. '=[]' → logprob: -14.05504035949707
    9. 's' → logprob: -14.18004035949707
    10. '        ' → logprob: -14.30504035949707

Token 931: ' =' (ID: 314)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.0053708371706306934
    2. '=' → logprob: -5.630370616912842
    3. ' =' → logprob: -6.505370616912842
    4. '=[' → logprob: -9.38037109375
    5. 'ENDING' → logprob: -10.13037109375
    6. '_' → logprob: -10.50537109375
    7. '   ' → logprob: -10.63037109375
    8. 'inding' → logprob: -11.00537109375
    9. 'ing' → logprob: -11.38037109375
    10. 'e' → logprob: -11.38037109375

Token 932: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009263493702746928
    2. ' self' → logprob: -7.000926494598389
    3. '[self' → logprob: -11.37592601776123
    4. '[' → logprob: -12.87592601776123
    5. '(self' → logprob: -15.12592601776123
    6. '	self' → logprob: -15.37592601776123
    7. '   ' → logprob: -16.375926971435547
    8. ' [' → logprob: -16.375926971435547
    9. '=self' → logprob: -16.500926971435547
    10. 'list' → logprob: -16.750926971435547

Token 933: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.02975395694375038
    2. 'unit' → logprob: -3.5297539234161377
    3. '.' → logprob: -13.654753684997559
    4. 'self' → logprob: -14.029753684997559
    5. '	unit' → logprob: -15.029753684997559
    6. '.number' → logprob: -15.154753684997559
    7. ' unit' → logprob: -15.404753684997559
    8. ' .' → logprob: -15.904753684997559
    9. '_unit' → logprob: -16.529754638671875
    10. '
' → logprob: -16.779754638671875

Token 934: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -5.438573680294212e-06
    2. 'system' → logprob: -12.375005722045898
    3. 'System' → logprob: -14.375005722045898
    4. 's' → logprob: -14.500005722045898
    5. 'ystem' → logprob: -17.2500057220459
    6. '_SYSTEM' → logprob: -17.2500057220459
    7. '.system' → logprob: -17.7500057220459
    8. 'ssystem' → logprob: -18.0000057220459
    9. ' system' → logprob: -18.3750057220459
    10. 'SYSTEM' → logprob: -18.7500057220459

Token 935: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.4060561776859686e-05
    2. 'powers' → logprob: -10.875043869018555
    3. '().' → logprob: -11.125043869018555
    4. ' .' → logprob: -12.125043869018555
    5. 's' → logprob: -13.250043869018555
    6. '.pow' → logprob: -14.000043869018555
    7. '```' → logprob: -14.375043869018555
    8. '.' → logprob: -14.500043869018555
    9. '   ' → logprob: -15.000043869018555
    10. '.power' → logprob: -15.750043869018555

Token 936: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -2.2127087504486553e-05
    2. 'powers' → logprob: -10.750021934509277
    3. 'wers' → logprob: -15.125021934509277
    4. 'ow' → logprob: -15.875021934509277
    5. 'ows' → logprob: -16.875022888183594
    6. '#' → logprob: -17.500022888183594
    7. ']' → logprob: -17.875022888183594
    8. '   ' → logprob: -18.000022888183594
    9. '[' → logprob: -18.125022888183594
    10. '>' → logprob: -18.500022888183594

Token 937: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.0032585193403065205
    2. 'descending' → logprob: -5.75325870513916
    3. '       ' → logprob: -10.50325870513916
    4. 'Descending' → logprob: -11.00325870513916
    5. 's' → logprob: -11.12825870513916
    6. 'desc' → logprob: -11.37825870513916
    7. '_DESC' → logprob: -12.87825870513916
    8. '           ' → logprob: -13.12825870513916
    9. '_des' → logprob: -13.50325870513916
    10. ' descending' → logprob: -13.87825870513916

Token 938: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.00015836587408557534
    2. 'inding' → logprob: -9.625158309936523
    3. 'ENDING' → logprob: -10.750158309936523
    4. 'encing' → logprob: -11.375158309936523
    5. '   ' → logprob: -11.875158309936523
    6. '_' → logprob: -12.000158309936523
    7. '
' → logprob: -12.125158309936523
    8. 'ing' → logprob: -12.250158309936523
    9. '()' → logprob: -12.250158309936523
    10. '[' → logprob: -12.375158309936523

Token 939: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5769785642623901
    2. '()' → logprob: -0.8269785642623901
    3. '       ' → logprob: -7.07697868347168
    4. '()
' → logprob: -9.32697868347168
    5. '()[' → logprob: -10.20197868347168
    6. '()

' → logprob: -10.20197868347168
    7. '():
' → logprob: -11.45197868347168
    8. '
' → logprob: -12.70197868347168
    9. '())' → logprob: -12.70197868347168
    10. '[]
' → logprob: -13.45197868347168

Token 940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08935664594173431
    2. 'for' → logprob: -2.5893566608428955
    3. ' for' → logprob: -4.589356422424316
    4. 'div' → logprob: -9.839356422424316
    5. '        
' → logprob: -10.089356422424316
    6. 'mult' → logprob: -10.589356422424316
    7. ',' → logprob: -10.839356422424316
    8. '```' → logprob: -10.964356422424316
    9. 'segment' → logprob: -11.589356422424316
    10. '   ' → logprob: -11.714356422424316

Token 941: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09270941466093063
    2. '       ' → logprob: -2.5927093029022217
    3. ' for' → logprob: -4.717709541320801
    4. 'div' → logprob: -6.217709541320801
    5. 'mult' → logprob: -6.842709541320801
    6. 'pow' → logprob: -8.3427095413208
    7. 'power' → logprob: -8.5927095413208
    8. 'segment' → logprob: -8.7177095413208
    9. 'divider' → logprob: -8.7177095413208
    10. 'while' → logprob: -9.2177095413208

Token 942: ' p' (ID: 275)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0018106024945154786
    2. 'p' → logprob: -7.376810550689697
    3. ' power' → logprob: -7.376810550689697
    4. 'pow' → logprob: -7.501810550689697
    5. '   ' → logprob: -12.751811027526855
    6. 'pw' → logprob: -14.001811027526855
    7. ' p' → logprob: -14.751811027526855
    8. 'powers' → logprob: -14.876811027526855
    9. '(power' → logprob: -15.251811027526855
    10. 'unit' → logprob: -15.251811027526855

Token 943: 'wr' (ID: 16085)
  Prédit: 'ower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ower' → logprob: -0.3043466806411743
    2. ' in' → logprob: -1.5543466806411743
    3. 'in' → logprob: -3.5543465614318848
    4. 'ow' → logprob: -3.8043465614318848
    5. '   ' → logprob: -9.804347038269043
    6. 'OWER' → logprob: -10.054347038269043
    7. 'w' → logprob: -10.554347038269043
    8. 'wer' → logprob: -11.429347038269043
    9. ' ' → logprob: -11.554347038269043
    10. 'owered' → logprob: -11.804347038269043

Token 944: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048617683351039886
    2. 'in' → logprob: -3.0486176013946533
    3. '_in' → logprob: -11.298617362976074
    4. ',' → logprob: -12.298617362976074
    5. ' ' → logprob: -12.673617362976074
    6. 'p' → logprob: -13.798617362976074
    7. '	in' → logprob: -14.173617362976074
    8. '_' → logprob: -14.173617362976074
    9. ' ,' → logprob: -14.298617362976074
    10. ' =' → logprob: -14.298617362976074

Token 945: ' powers' (ID: 27742)
  Prédit: 'powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'powers' → logprob: -2.4034345187828876e-05
    2. 'p' → logprob: -10.75002384185791
    3. ' powers' → logprob: -13.87502384185791
    4. '   ' → logprob: -13.87502384185791
    5. 'pow' → logprob: -15.00002384185791
    6. '[' → logprob: -16.375024795532227
    7. '[p' → logprob: -16.625024795532227
    8. 'power' → logprob: -17.125024795532227
    9. ' ' → logprob: -17.500024795532227
    10. '           ' → logprob: -17.625024795532227

Token 946: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.000386105413781479
    2. 'desc' → logprob: -8.625386238098145
    3. 'descending' → logprob: -9.375386238098145
    4. '       ' → logprob: -9.875386238098145
    5. '_DESC' → logprob: -10.875386238098145
    6. '-desc' → logprob: -11.750386238098145
    7. 'Descending' → logprob: -12.250386238098145
    8. '):
' → logprob: -12.250386238098145
    9. '	desc' → logprob: -12.250386238098145
    10. 'Desc' → logprob: -12.375386238098145

Token 947: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6610570549964905
    2. ':' → logprob: -0.7860570549964905
    3. '           ' → logprob: -3.7860569953918457
    4. '[::-' → logprob: -6.161056995391846
    5. ',' → logprob: -6.536056995391846
    6. '):
' → logprob: -6.786056995391846
    7. '=' → logprob: -8.411057472229004
    8. '[' → logprob: -8.786057472229004
    9. '       ' → logprob: -9.036057472229004
    10. ':
' → logprob: -10.286057472229004

Token 948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024869535118341446
    2. 'div' → logprob: -7.0024871826171875
    3. ',' → logprob: -8.002487182617188
    4. ':' → logprob: -8.252487182617188
    5. ' divider' → logprob: -9.002487182617188
    6. 'divider' → logprob: -9.002487182617188
    7. 'while' → logprob: -9.127487182617188
    8. 'value' → logprob: -9.252487182617188
    9. '            
' → logprob: -9.252487182617188
    10. ' while' → logprob: -9.877487182617188

Token 949: ' divisor' (ID: 100482)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6045186519622803
    2. 'seg' → logprob: -1.6045186519622803
    3. 'div' → logprob: -1.7295186519622803
    4. 'unit' → logprob: -2.9795186519622803
    5. ' segment' → logprob: -4.979518890380859
    6. 'value' → logprob: -5.479518890380859
    7. ' divisor' → logprob: -5.979518890380859
    8. ' div' → logprob: -6.354518890380859
    9. ' seg' → logprob: -6.354518890380859
    10. 'base' → logprob: -6.354518890380859

Token 950: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. '   ' → logprob: -16.001930236816406
    4. ',' → logprob: -16.626930236816406
    5. ':' → logprob: -17.001930236816406
    6. '=int' → logprob: -17.251930236816406
    7. ')' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.626930236816406
    9. '    ' → logprob: -17.876930236816406
    10. '＝' → logprob: -18.376930236816406

Token 951: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.500001907348633
    4. '100' → logprob: -18.500001907348633
    5. 'pow' → logprob: -18.500001907348633
    6. '1' → logprob: -19.375001907348633
    7. '(' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.375001907348633
    9. '```' → logprob: -21.375001907348633
    10. '`' → logprob: -21.500001907348633

Token 952: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '100' → logprob: -15.500000953674316
    4. 'pow' → logprob: -15.750000953674316
    5. '   ' → logprob: -18.500001907348633
    6. '1' → logprob: -18.750001907348633
    7. '(' → logprob: -18.750001907348633
    8. '```' → logprob: -19.125001907348633
    9. '4' → logprob: -19.375001907348633
    10. '`' → logprob: -20.000001907348633

Token 953: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.000629279064014554
    2. ' **' → logprob: -7.875629425048828
    3. '^' → logprob: -8.750629425048828
    4. '4' → logprob: -10.750629425048828
    5. '[p' → logprob: -11.000629425048828
    6. '****' → logprob: -11.125629425048828
    7. '```' → logprob: -11.375629425048828
    8. 'p' → logprob: -11.625629425048828
    9. '*p' → logprob: -12.125629425048828
    10. '\xe2\x81' → logprob: -12.375629425048828

Token 954: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.786196975852363e-05
    2. '(p' → logprob: -10.250038146972656
    3. '(' → logprob: -13.625038146972656
    4. '4' → logprob: -13.875038146972656
    5. ' p' → logprob: -15.125038146972656
    6. '24' → logprob: -16.750038146972656
    7. ' (' → logprob: -18.625038146972656
    8. '16' → logprob: -18.625038146972656
    9. '{' → logprob: -19.125038146972656
    10. '   ' → logprob: -19.625038146972656

Token 955: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -7.386147626675665e-05
    2. '4' → logprob: -10.000073432922363
    3. 'w' → logprob: -11.000073432922363
    4. '   ' → logprob: -12.125073432922363
    5. ' wr' → logprob: -12.750073432922363
    6. '_wr' → logprob: -14.000073432922363
    7. 'wrk' → logprob: -14.125073432922363
    8. ' ' → logprob: -14.500073432922363
    9. 'WR' → logprob: -15.625073432922363
    10. '  ' → logprob: -15.875073432922363

Token 956: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11378845572471619
    2. '           ' → logprob: -2.863788366317749
    3. '<|end|>' → logprob: -4.238788604736328
    4. '       ' → logprob: -4.363788604736328
    5. '            
' → logprob: -4.738788604736328
    6. ',' → logprob: -5.488788604736328
    7. '<|end|>' → logprob: -5.738788604736328
    8. ' 
' → logprob: -6.988788604736328
    9. '        
' → logprob: -7.113788604736328
    10. '   ' → logprob: -7.113788604736328

Token 957: '           ' (ID: 352)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.529191792011261
    2. '           ' → logprob: -1.0291917324066162
    3. 'value' → logprob: -4.029191970825195
    4. ' segment' → logprob: -4.279191970825195
    5. 'seg' → logprob: -4.529191970825195
    6. 'if' → logprob: -5.154191970825195
    7. ' if' → logprob: -6.404191970825195
    8. 'val' → logprob: -7.029191970825195
    9. 'segments' → logprob: -7.279191970825195
    10. '.segment' → logprob: -8.029191970825195

Token 958: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.10202009230852127
    2. 'seg' → logprob: -2.727020025253296
    3. 'value' → logprob: -3.727020025253296
    4. ' segment' → logprob: -5.602020263671875
    5. 'val' → logprob: -5.977020263671875
    6. ' seg' → logprob: -6.977020263671875
    7. 'count' → logprob: -9.727020263671875
    8. ' value' → logprob: -9.852020263671875
    9. 'quot' → logprob: -9.977020263671875
    10. 'digit' → logprob: -10.352020263671875

Token 959: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.003993154037743807
    2. 'value' → logprob: -6.253993034362793
    3. '_val' → logprob: -6.503993034362793
    4. ',' → logprob: -8.003993034362793
    5. '=' → logprob: -8.628993034362793
    6. ' =' → logprob: -10.253993034362793
    7. 'Value' → logprob: -11.878993034362793
    8. 'val' → logprob: -12.753993034362793
    9. ',value' → logprob: -13.503993034362793
    10. '_values' → logprob: -14.128993034362793

Token 960: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25201416015625
    2. ' =' → logprob: -1.50201416015625
    3. ',' → logprob: -9.37701416015625
    4. '   ' → logprob: -16.25201416015625
    5. '=n' → logprob: -16.25201416015625
    6. '           ' → logprob: -16.50201416015625
    7. ' ' → logprob: -16.87701416015625
    8. '=p' → logprob: -17.00201416015625
    9. '=int' → logprob: -17.50201416015625
    10. ' ,' → logprob: -18.12701416015625

Token 961: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11336356401443481
    2. ' n' → logprob: -2.23836350440979
    3. '(n' → logprob: -7.863363742828369
    4. ' (' → logprob: -9.238363265991211
    5. '           ' → logprob: -10.113363265991211
    6. '   ' → logprob: -11.988363265991211
    7. '       ' → logprob: -12.613363265991211
    8. '	n' → logprob: -12.863363265991211
    9. '0' → logprob: -13.363363265991211
    10. '               ' → logprob: -13.863363265991211

Token 962: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.02345627173781395
    2. '//' → logprob: -3.773456335067749
    3. '//=' → logprob: -8.898456573486328
    4. '=' → logprob: -11.273456573486328
    5. '           ' → logprob: -11.773456573486328
    6. ' //
' → logprob: -12.023456573486328
    7. '%' → logprob: -12.023456573486328
    8. '   ' → logprob: -12.148456573486328
    9. ')' → logprob: -12.273456573486328
    10. ' ' → logprob: -12.398456573486328

Token 963: ' divisor' (ID: 100482)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -2.339278580620885e-06
    2. ' divisor' → logprob: -13.500001907348633
    3. '(div' → logprob: -14.250001907348633
    4. '	div' → logprob: -15.750001907348633
    5. 'divider' → logprob: -17.875001907348633
    6. '<div' → logprob: -18.000001907348633
    7. '10' → logprob: -18.125001907348633
    8. '```' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.375001907348633
    10. ' div' → logprob: -19.500001907348633

Token 964: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8749274611473083
    2. '
' → logprob: -1.3749275207519531
    3. '            
' → logprob: -1.9999275207519531
    4. '<|end|>' → logprob: -1.9999275207519531
    5. '<|end|>' → logprob: -3.499927520751953
    6. ' 
' → logprob: -4.749927520751953
    7. ')' → logprob: -5.999927520751953
    8. '  
' → logprob: -6.499927520751953
    9. ',' → logprob: -6.624927520751953
    10. '       ' → logprob: -6.874927520751953

Token 965: '           ' (ID: 352)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7454784512519836
    2. '%' → logprob: -0.9954784512519836
    3. '%n' → logprob: -2.995478391647339
    4. '           ' → logprob: -3.870478391647339
    5. '
' → logprob: -3.870478391647339
    6. '```' → logprob: -4.370478630065918
    7. ')' → logprob: -4.620478630065918
    8. 'if' → logprob: -4.620478630065918
    9. 'n' → logprob: -5.245478630065918
    10. '`' → logprob: -5.370478630065918

Token 966: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4117295742034912
    2. 'segments' → logprob: -1.1617295742034912
    3. '           ' → logprob: -4.41172981262207
    4. 'segment' → logprob: -5.16172981262207
    5. 'if' (adapté à ' if') → logprob: -5.53672981262207
    6. ' n' → logprob: -6.03672981262207
    7. ' segments' → logprob: -8.78672981262207
    8. ' if' → logprob: -9.28672981262207
    9. '       ' → logprob: -10.16172981262207
    10. '```' → logprob: -10.66172981262207

Token 967: ' p' (ID: 275)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.00924916286021471
    2. ' segment' → logprob: -4.759249210357666
    3. 'p' → logprob: -7.759249210357666
    4. 'segments' → logprob: -9.259248733520508
    5. 'not' → logprob: -10.134248733520508
    6. '(segment' → logprob: -10.759248733520508
    7. ' p' → logprob: -11.009248733520508
    8. 'len' → logprob: -11.509248733520508
    9. 'n' → logprob: -12.009248733520508
    10. ' not' → logprob: -12.134248733520508

Token 968: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -0.4832765460014343
    2. 'segment' → logprob: -0.9832765460014343
    3. '_segment' → logprob: -5.8582763671875
    4. 'w' → logprob: -6.1082763671875
    5. '(segment' → logprob: -6.9832763671875
    6. '>' → logprob: -6.9832763671875
    7. ' segment' → logprob: -7.6082763671875
    8. 'rev' → logprob: -7.9832763671875
    9. 'r' → logprob: -8.6082763671875
    10. '.segment' → logprob: -8.9832763671875

Token 969: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.050828456878662
    2. ' >' → logprob: -1.175828456878662
    3. '==' → logprob: -1.800828456878662
    4. '>' → logprob: -1.925828456878662
    5. ' !=' → logprob: -3.800828456878662
    6. ' <' → logprob: -5.675828456878662
    7. '!=' → logprob: -5.925828456878662
    8. '0' → logprob: -6.675828456878662
    9. ':' → logprob: -7.925828456878662
    10. '<' → logprob: -8.17582893371582

Token 970: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03775971755385399
    2. 'powers' → logprob: -3.412759780883789
    3. 'self' → logprob: -5.662759780883789
    4. 'max' → logprob: -8.287759780883789
    5. ' ' → logprob: -8.787759780883789
    6. 'pow' → logprob: -9.037759780883789
    7. 'p' → logprob: -10.725259780883789
    8. ' powers' → logprob: -11.225259780883789
    9. 'power' → logprob: -11.412759780883789
    10. '```' → logprob: -11.850259780883789

Token 971: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002605856629088521
    2. 'powers' → logprob: -6.00260591506958
    3. 'self' → logprob: -9.627605438232422
    4. ' ' → logprob: -10.752605438232422
    5. 'max' → logprob: -11.002605438232422
    6. 'pow' → logprob: -11.252605438232422
    7. 'power' → logprob: -13.190105438232422
    8. ' powers' → logprob: -13.252605438232422
    9. 'p' → logprob: -13.502605438232422
    10. '#' → logprob: -14.190105438232422

Token 972: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2773134410381317
    2. ':' → logprob: -2.152313470840454
    3. '               ' → logprob: -2.402313470840454
    4. ' and' → logprob: -3.527313470840454
    5. 'and' → logprob: -5.402313232421875
    6. '):
' → logprob: -7.027313232421875
    7. '           ' → logprob: -7.777313232421875
    8. ':
' → logprob: -10.277313232421875
    9. ' :
' → logprob: -10.402313232421875
    10. ')' → logprob: -10.652313232421875

Token 973: '               ' (ID: 506)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.21626776456832886
    2. ' segment' → logprob: -2.2162678241729736
    3. '           ' → logprob: -2.4662678241729736
    4. '               ' → logprob: -7.9662675857543945
    5. '(segment' → logprob: -10.091267585754395
    6. 'n' → logprob: -10.216267585754395
    7. 'segments' → logprob: -10.466267585754395
    8. '   ' → logprob: -10.716267585754395
    9. '.segment' → logprob: -10.966267585754395
    10. ' n' → logprob: -11.091267585754395

Token 974: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' (adapté à ' segment') → logprob: -0.0025105008389800787
    2. ' segment' → logprob: -6.0025105476379395
    3. '           ' → logprob: -10.502510070800781
    4. 'n' → logprob: -12.627510070800781
    5. '               ' → logprob: -13.252510070800781
    6. 'segments' → logprob: -14.252510070800781
    7. '(segment' → logprob: -14.627510070800781
    8. '.segment' → logprob: -15.002510070800781
    9. '_segment' → logprob: -15.377510070800781
    10. ' n' → logprob: -15.627510070800781

Token 975: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.3795937522663735e-05
    2. 'value' → logprob: -10.75002384185791
    3. '_re' → logprob: -14.12502384185791
    4. 'Value' → logprob: -14.87502384185791
    5. '_val' → logprob: -15.75002384185791
    6. '_values' → logprob: -15.87502384185791
    7. 're' → logprob: -15.87502384185791
    8. '_' → logprob: -16.125022888183594
    9. 's' → logprob: -16.500022888183594
    10. '_segment' → logprob: -16.625022888183594

Token 976: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.7201406359672546
    2. '%=' → logprob: -1.2201406955718994
    3. '=' → logprob: -1.5951406955718994
    4. ' =' → logprob: -4.22014045715332
    5. '%' → logprob: -7.72014045715332
    6. '//=' → logprob: -9.84514045715332
    7. ',' → logprob: -10.34514045715332
    8. ' %' → logprob: -11.22014045715332
    9. '=%' → logprob: -13.22014045715332
    10. '-=' → logprob: -13.72014045715332

Token 977: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0620131678879261
    2. '10' → logprob: -2.8120131492614746
    3. ' ' → logprob: -10.187013626098633
    4. '   ' → logprob: -12.312013626098633
    5. '(' → logprob: -12.687013626098633
    6. '  ' → logprob: -16.312013626098633
    7. '１００' → logprob: -16.937013626098633
    8. '    ' → logprob: -17.312013626098633
    9. '１０' → logprob: -18.687013626098633
    10. '=' → logprob: -18.937013626098633

Token 978: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.014167862012982368
    2. '10' → logprob: -4.264167785644531
    3. ' ' → logprob: -12.514167785644531
    4. '   ' → logprob: -14.389167785644531
    5. '(' → logprob: -16.76416778564453
    6. '１００' → logprob: -17.38916778564453
    7. '  ' → logprob: -18.26416778564453
    8. '    ' → logprob: -19.13916778564453
    9. '[' → logprob: -19.26416778564453
    10. ' ten' → logprob: -20.13916778564453

Token 979: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.004749438259750605
    2. '**' → logprob: -6.004749298095703
    3. '4' → logprob: -6.129749298095703
    4. '```' → logprob: -10.254749298095703
    5. '004' → logprob: -10.504749298095703
    6. '_' → logprob: -11.129749298095703
    7. '   ' → logprob: -12.129749298095703
    8. '00' → logprob: -12.879749298095703
    9. '****' → logprob: -12.879749298095703
    10. ')' → logprob: -13.754749298095703

Token 980: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '４' → logprob: -19.125
    4. '```' → logprob: -19.75
    5. '04' → logprob: -20.125
    6. '۴' → logprob: -20.375
    7. '   ' → logprob: -20.5
    8. '' → logprob: -21.0
    9. 'four' → logprob: -21.0
    10. '{' → logprob: -21.25

Token 981: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019308457151055336
    2. '
' → logprob: -4.394308567047119
    3. '            
' → logprob: -5.644308567047119
    4. ' 
' → logprob: -6.144308567047119
    5. ' else' → logprob: -7.769308567047119
    6. '    
' → logprob: -9.269308090209961
    7. 'else' → logprob: -9.269308090209961
    8. '  
' → logprob: -9.394308090209961
    9. '<|end|>' → logprob: -9.519308090209961
    10. '        
' → logprob: -9.894308090209961

Token 982: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019530590623617172
    2. '
' → logprob: -4.144530773162842
    3. '       ' → logprob: -6.769530773162842
    4. 'else' → logprob: -6.894530773162842
    5. ' else' → logprob: -8.519530296325684
    6. '            
' → logprob: -8.644530296325684
    7. 'if' → logprob: -8.644530296325684
    8. 'segments' → logprob: -8.769530296325684
    9. '```' → logprob: -8.894530296325684
    10. ' if' → logprob: -8.894530296325684

Token 983: ' else' (ID: 1203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10116782039403915
    2. '           ' → logprob: -2.351167917251587
    3. 'segments' → logprob: -7.476167678833008
    4. '       ' → logprob: -8.351167678833008
    5. ' if' → logprob: -8.976167678833008
    6. '   ' → logprob: -11.101167678833008
    7. '```' → logprob: -11.226167678833008
    8. '               ' → logprob: -13.726167678833008
    9. 'for' → logprob: -14.476167678833008
    10. '         ' → logprob: -14.976167678833008

Token 984: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4735843539237976
    2. ':
' → logprob: -1.3485844135284424
    3. '
' → logprob: -3.2235844135284424
    4. '               ' → logprob: -3.3485844135284424
    5. 'return' → logprob: -3.5985844135284424
    6. 'n' → logprob: -5.098584175109863
    7. ' return' → logprob: -5.348584175109863
    8. '0' → logprob: -6.723584175109863
    9. ' n' → logprob: -6.723584175109863
    10. '       ' → logprob: -7.723584175109863

Token 985: '               ' (ID: 506)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.029865847900509834
    2. ' segments' → logprob: -4.154865741729736
    3. '           ' → logprob: -4.779865741729736
    4. '       ' → logprob: -5.279865741729736
    5. 'n' → logprob: -9.654866218566895
    6. ' n' → logprob: -9.654866218566895
    7. '
' → logprob: -10.279866218566895
    8. 'segment' → logprob: -11.529866218566895
    9. '            
' → logprob: -11.654866218566895
    10. '        ' → logprob: -11.779866218566895

Token 986: ' #' (ID: 1069)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.11138180643320084
    2. 'n' → logprob: -2.486381769180298
    3. 'segments' → logprob: -3.861381769180298
    4. '           ' → logprob: -7.861382007598877
    5. 'return' → logprob: -8.486381530761719
    6. ' segment' → logprob: -8.611381530761719
    7. '#' (adapté à ' #') → logprob: -9.236381530761719
    8. ' n' → logprob: -9.361381530761719
    9. 'pass' → logprob: -9.986381530761719
    10. 'continue' → logprob: -10.611381530761719

Token 987: ' p' (ID: 275)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.05271105840802193
    2. '#' → logprob: -3.302711009979248
    3. 'segment' → logprob: -4.302711009979248
    4. 'pass' → logprob: -7.927711009979248
    5. 'n' → logprob: -8.177711486816406
    6. 'continue' → logprob: -9.177711486816406
    7. ' segments' → logprob: -9.552711486816406
    8. 'No' → logprob: -9.677711486816406
    9. 'Continue' → logprob: -10.677711486816406
    10. 'return' → logprob: -10.802711486816406

Token 988: 'wr' (ID: 16085)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5599960684776306
    2. '           ' → logprob: -2.3099961280822754
    3. '       ' → logprob: -2.5599961280822754
    4. '_segment' → logprob: -3.1849961280822754
    5. 'r' → logprob: -3.3099961280822754
    6. 'n' → logprob: -3.4349961280822754
    7. 'ower' → logprob: -3.4349961280822754
    8. ' segment' → logprob: -3.6849961280822754
    9. 'ow' → logprob: -4.309996128082275
    10. '   ' → logprob: -4.809996128082275

Token 989: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29204419255256653
    2. ' ==' → logprob: -1.4170441627502441
    3. '=' → logprob: -5.042044162750244
    4. ' !=' → logprob: -6.167044162750244
    5. '!=' → logprob: -6.292044162750244
    6. ':' → logprob: -9.292044639587402
    7. ' =' → logprob: -9.792044639587402
    8. ' ' → logprob: -9.917044639587402
    9. '```' → logprob: -10.167044639587402
    10. ')' → logprob: -10.417044639587402

Token 990: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '=' → logprob: -16.625030517578125
    4. '4' → logprob: -16.875030517578125
    5. '```' → logprob: -17.625030517578125
    6. '1' → logprob: -17.875030517578125
    7. 'p' → logprob: -18.000030517578125
    8. '   ' → logprob: -18.687530517578125
    9. '#' → logprob: -18.875030517578125
    10. '`' → logprob: -18.875030517578125

Token 991: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '=' → logprob: -17.500001907348633
    4. '```' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.625001907348633
    6. 'p' → logprob: -19.750001907348633
    7. '#' → logprob: -20.000001907348633
    8. ')' → logprob: -20.187501907348633
    9. '4' → logprob: -20.437501907348633
    10. '1' → logprob: -20.625001907348633

Token 992: ' means' (ID: 4748)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.88895583152771
    2. 'segment' → logprob: -0.88895583152771
    3. '           ' → logprob: -1.76395583152771
    4. ' segment' → logprob: -5.888956069946289
    5. ':
' → logprob: -6.263956069946289
    6. '#' → logprob: -7.513956069946289
    7. '               ' → logprob: -8.513956069946289
    8. 'return' → logprob: -8.763956069946289
    9. 'segments' → logprob: -9.138956069946289
    10. 'n' → logprob: -9.263956069946289

Token 993: ' digits' (ID: 37806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.23967137932777405
    2. 'n' → logprob: -1.6146713495254517
    3. ' n' → logprob: -5.114671230316162
    4. ' segment' → logprob: -5.364671230316162
    5. 'the' → logprob: -7.239671230316162
    6. 'remaining' → logprob: -7.614671230316162
    7. 'continue' → logprob: -8.11467170715332
    8. 'no' → logprob: -8.23967170715332
    9. ' remainder' → logprob: -8.61467170715332
    10. 'last' → logprob: -8.61467170715332

Token 994: ' below' (ID: 4895)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7589316368103027
    2. '=' → logprob: -1.5089316368103027
    3. '       ' → logprob: -1.7589316368103027
    4. ':' → logprob: -3.7589316368103027
    5. '
' → logprob: -3.7589316368103027
    6. '                   ' → logprob: -4.383931636810303
    7. '   ' → logprob: -4.508931636810303
    8. '           ' → logprob: -4.633931636810303
    9. '0' → logprob: -4.883931636810303
    10. '               ' → logprob: -4.883931636810303

Token 995: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6673047542572021
    2. '100' → logprob: -0.7923047542572021
    3. '1' → logprob: -3.542304754257202
    4. ' ' → logprob: -6.042304992675781
    5. '4' → logprob: -6.042304992675781
    6. '=' → logprob: -8.917304992675781
    7. '0' → logprob: -9.542304992675781
    8. 'segment' → logprob: -10.042304992675781
    9. '   ' → logprob: -10.417304992675781
    10. '999' → logprob: -10.667304992675781

Token 996: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3595507740974426
    2. '100' → logprob: -1.3595507144927979
    3. '4' → logprob: -3.234550714492798
    4. '1' → logprob: -5.234550952911377
    5. ' ' → logprob: -8.359550476074219
    6. 'div' → logprob: -9.484550476074219
    7. 'powers' → logprob: -9.859550476074219
    8. 'power' → logprob: -10.859550476074219
    9. 'Man' → logprob: -11.109550476074219
    10. '=' → logprob: -11.109550476074219

Token 997: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6400812268257141
    2. '0' → logprob: -0.7650812268257141
    3. '^' → logprob: -5.640081405639648
    4. '000' → logprob: -6.765081405639648
    5. '00' → logprob: -7.390081405639648
    6. '```' → logprob: -7.640081405639648
    7. ' **' → logprob: -7.765081405639648
    8. '
' → logprob: -7.890081405639648
    9. '4' → logprob: -8.015081405639648
    10. '       ' → logprob: -8.890081405639648

Token 998: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.10037381201982498
    2. '0' → logprob: -2.3503737449645996
    3. '1' → logprob: -8.850374221801758
    4. '3' → logprob: -11.850374221801758
    5. ' ' → logprob: -12.100374221801758
    6. '```' → logprob: -12.350374221801758
    7. '-' → logprob: -12.600374221801758
    8. '   ' → logprob: -13.225374221801758
    9. '
' → logprob: -15.100374221801758
    10. '**' → logprob: -15.475374221801758

Token 999: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15126575529575348
    2. '
' → logprob: -2.026265859603882
    3. '               ' → logprob: -5.026265621185303
    4. '       ' → logprob: -6.526265621185303
    5. '            
' → logprob: -9.026266098022461
    6. 'n' → logprob: -9.526266098022461
    7. ',' → logprob: -9.651266098022461
    8. 'return' → logprob: -10.526266098022461
    9. '```' → logprob: -10.651266098022461
    10. '                
' → logprob: -10.776266098022461

Token 1000: 'i' (ID: 72)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.24520337581634521
    2. '10' → logprob: -1.6202033758163452
    3. '999' → logprob: -4.995203495025635
    4. 'segment' → logprob: -5.870203495025635
    5. ')
' → logprob: -6.245203495025635
    6. 'n' → logprob: -6.370203495025635
    7. ')' → logprob: -6.620203495025635
    8. '               ' → logprob: -6.745203495025635
    9. '):
' → logprob: -6.995203495025635
    10. '                   ' → logprob: -7.245203495025635

Token 1001: '.e' (ID: 2560)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27774563431739807
    2. 'n' → logprob: -1.9027456045150757
    3. '00' → logprob: -3.0277457237243652
    4. '000' → logprob: -3.6527457237243652
    5. '999' → logprob: -5.027745723724365
    6. 'nd' → logprob: -5.902745723724365
    7. 'm' → logprob: -6.277745723724365
    8. 's' → logprob: -6.402745723724365
    9. 'f' → logprob: -6.652745723724365
    10. '   ' → logprob: -7.027745723724365

Token 1002: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4661165773868561
    2. '999' → logprob: -1.8411165475845337
    3. '000' → logprob: -2.2161166667938232
    4. '   ' → logprob: -3.7161166667938232
    5. '       ' → logprob: -4.341116428375244
    6. '```' → logprob: -4.591116428375244
    7. '00' → logprob: -4.716116428375244
    8. '4' → logprob: -5.216116428375244
    9. '           ' → logprob: -5.341116428375244
    10. 'digits' → logprob: -5.466116428375244

Token 1003: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.550563633441925
    2. '1' → logprob: -1.1755635738372803
    3. 'segment' → logprob: -2.9255635738372803
    4. 'n' → logprob: -3.5505635738372803
    5. '10' → logprob: -4.300563812255859
    6. 'self' → logprob: -5.050563812255859
    7. '999' → logprob: -5.300563812255859
    8. '0' → logprob: -5.550563812255859
    9. 'number' → logprob: -6.925563812255859
    10. '4' → logprob: -7.675563812255859

Token 1004: '0' (ID: 15)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6702456474304199
    2. 'segment' → logprob: -1.79524564743042
    3. '1' → logprob: -1.92024564743042
    4. '10' → logprob: -2.29524564743042
    5. '999' → logprob: -2.79524564743042
    6. 'n' → logprob: -5.29524564743042
    7. '4' → logprob: -5.67024564743042
    8. '0' → logprob: -6.04524564743042
    9. 'div' → logprob: -7.17024564743042
    10. 'segments' → logprob: -7.54524564743042

Token 1005: '-' (ID: 12)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9005584120750427
    2. 'to' → logprob: -1.6505584716796875
    3. ')
' → logprob: -1.6505584716796875
    4. ')' → logprob: -2.7755584716796875
    5. '):
' → logprob: -3.0255584716796875
    6. '0' → logprob: -4.1505584716796875
    7. '```' → logprob: -4.2755584716796875
    8. '...' → logprob: -4.4005584716796875
    9. '-' → logprob: -4.6505584716796875
    10. '   ' → logprob: -5.4005584716796875

Token 1006: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -9.496052371105179e-05
    2. '100' → logprob: -9.50009536743164
    3. '10' → logprob: -11.12509536743164
    4. '9' → logprob: -12.75009536743164
    5. ' ' → logprob: -14.62509536743164
    6. '3' → logprob: -14.62509536743164
    7. '4' → logprob: -15.25009536743164
    8. '0' → logprob: -15.37509536743164
    9. '
' → logprob: -15.62509536743164
    10. '   ' → logprob: -15.62509536743164

Token 1007: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.02687699720263481
    2. ')' → logprob: -3.651876926422119
    3. ')
' → logprob: -8.276877403259277
    4. '```' → logprob: -8.776877403259277
    5. '999' → logprob: -9.526877403259277
    6. '   ' → logprob: -10.401877403259277
    7. '))' → logprob: -11.276877403259277
    8. '):
' → logprob: -11.526877403259277
    9. '99' → logprob: -12.026877403259277
    10. ')+' → logprob: -12.401877403259277

Token 1008: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07710140943527222
    2. '       ' → logprob: -2.952101469039917
    3. '           ' → logprob: -4.327101230621338
    4. ')' → logprob: -5.077101230621338
    5. '               ' → logprob: -6.452101230621338
    6. '):
' → logprob: -7.827101230621338
    7. '
' → logprob: -8.577101707458496
    8. ' )
' → logprob: -9.452101707458496
    9. '```' → logprob: -9.577101707458496
    10. '),' → logprob: -9.827101707458496

Token 1009: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6116904020309448
    2. '       ' → logprob: -0.9866904020309448
    3. 'return' → logprob: -2.9866905212402344
    4. '
' → logprob: -3.7366905212402344
    5. 'n' → logprob: -5.111690521240234
    6. '               ' → logprob: -6.361690521240234
    7. 'segment' → logprob: -6.861690521240234
    8. 'segments' → logprob: -7.236690521240234
    9. '```' → logprob: -7.861690521240234
    10. ' return' → logprob: -8.611690521240234

Token 1010: ' segment' (ID: 14806)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.19375930726528168
    2. 'return' → logprob: -1.8187593221664429
    3. 'segment' (adapté à ' segment') → logprob: -5.068759441375732
    4. '           ' → logprob: -5.943759441375732
    5. 'n' → logprob: -6.318759441375732
    6. '       ' → logprob: -6.443759441375732
    7. '#' → logprob: -7.318759441375732
    8. 'continue' → logprob: -7.818759441375732
    9. 'pass' → logprob: -8.318758964538574
    10. ' segments' → logprob: -8.818758964538574

Token 1011: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0003729966701939702
    2. '_values' → logprob: -8.750372886657715
    3. 'value' → logprob: -9.000372886657715
    4. '_segments' → logprob: -9.500372886657715
    5. 'Value' → logprob: -12.500372886657715
    6. 's' → logprob: -12.625372886657715
    7. '_' → logprob: -13.250372886657715
    8. '_val' → logprob: -13.500372886657715
    9. '<|end|>' → logprob: -13.500372886657715
    10. '_VALUE' → logprob: -14.125372886657715

Token 1012: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013635702198371291
    2. ' =' → logprob: -6.626363754272461
    3. '%=' → logprob: -10.501363754272461
    4. '+=' → logprob: -11.751363754272461
    5. ' %=' → logprob: -13.876363754272461
    6. '=n' → logprob: -15.001363754272461
    7. ' +=' → logprob: -15.626363754272461
    8. '=
' → logprob: -15.876363754272461
    9. '.=' → logprob: -16.12636375427246
    10. '=int' → logprob: -16.25136375427246

Token 1013: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002557369298301637
    2. ' n' → logprob: -8.375255584716797
    3. 'segment' → logprob: -10.625255584716797
    4. 'int' → logprob: -15.500255584716797
    5. 'number' → logprob: -15.625255584716797
    6. '           ' → logprob: -15.875255584716797
    7. '   ' → logprob: -16.000255584716797
    8. '	n' → logprob: -16.875255584716797
    9. '       ' → logprob: -17.000255584716797
    10. ' segment' → logprob: -17.125255584716797

Token 1014: ' %' (ID: 1851)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1535944938659668
    2. '           ' → logprob: -1.1535944938659668
    3. ' %' → logprob: -1.6535944938659668
    4. '       ' → logprob: -2.778594493865967
    5. ' if' → logprob: -3.403594493865967
    6. '%' → logprob: -3.528594493865967
    7. ' //' → logprob: -4.903594493865967
    8. '_segment' → logprob: -5.153594493865967
    9. 'if' → logprob: -5.153594493865967
    10. '_segments' → logprob: -5.153594493865967

Token 1015: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02326923981308937
    2. '10' → logprob: -3.7732691764831543
    3. '(' → logprob: -10.773269653320312
    4. ' ' → logprob: -12.898269653320312
    5. '1' → logprob: -15.398269653320312
    6. '   ' → logprob: -16.273269653320312
    7. '１００' → logprob: -18.523269653320312
    8. '  ' → logprob: -18.648269653320312
    9. ' (' → logprob: -18.773269653320312
    10. '[' → logprob: -19.398269653320312

Token 1016: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.12693093717098236
    2. '10' → logprob: -2.1269309520721436
    3. '(' → logprob: -12.876931190490723
    4. '1' → logprob: -15.876931190490723
    5. ' ' → logprob: -16.001930236816406
    6. '   ' → logprob: -18.376930236816406
    7. '１００' → logprob: -18.376930236816406
    8. '[' → logprob: -18.501930236816406
    9. '104' → logprob: -18.751930236816406
    10. '`' → logprob: -19.126930236816406

Token 1017: '**' (ID: 410)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0024889763444662094
    2. '**' → logprob: -6.12748908996582
    3. '000' → logprob: -8.37748908996582
    4. ' ' → logprob: -10.50248908996582
    5. '```' → logprob: -10.75248908996582
    6. '04' → logprob: -12.00248908996582
    7. '^' → logprob: -12.50248908996582
    8. '+' → logprob: -12.50248908996582
    9. '004' → logprob: -12.75248908996582
    10. '0' → logprob: -13.50248908996582

Token 1018: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '' → logprob: -19.25
    4. '４' → logprob: -19.25
    5. '```' → logprob: -19.5
    6. '0' → logprob: -19.75
    7. '04' → logprob: -19.875
    8. '۴' → logprob: -20.375
    9. '{' → logprob: -20.5
    10. '৪' → logprob: -20.8125

Token 1019: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.219262624857947e-05
    2. '
' → logprob: -10.000072479248047
    3. '       ' → logprob: -11.250072479248047
    4. '<|end|>' → logprob: -13.000072479248047
    5. '```' → logprob: -13.125072479248047
    6. '               ' → logprob: -13.250072479248047
    7. '          ' → logprob: -13.375072479248047
    8. ',' → logprob: -13.500072479248047
    9. '<|end|>' → logprob: -13.875072479248047
    10. '            
' → logprob: -14.250072479248047

Token 1020: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042102107545360923
    2. '       ' → logprob: -8.750420570373535
    3. '```' → logprob: -9.125420570373535
    4. 'if' → logprob: -9.250420570373535
    5. '   ' → logprob: -11.375420570373535
    6. 'segments' → logprob: -11.625420570373535
    7. 'return' → logprob: -11.875420570373535
    8. 'for' → logprob: -12.000420570373535
    9. '               ' → logprob: -12.125420570373535
    10. ' if' → logprob: -12.375420570373535

Token 1021: ' segments' (ID: 33749)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015055041760206223
    2. 'segments' (adapté à ' segments') → logprob: -4.765055179595947
    3. 'if' → logprob: -5.265055179595947
    4. '       ' → logprob: -6.765055179595947
    5. '   ' → logprob: -10.265054702758789
    6. ' if' → logprob: -10.390054702758789
    7. ' segments' → logprob: -10.890054702758789
    8. '               ' → logprob: -12.640054702758789
    9. '
' → logprob: -13.015054702758789
    10. '```' → logprob: -13.140054702758789

Token 1022: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010446012020111084
    2. '.' → logprob: -6.876044750213623
    3. 'append' → logprob: -12.376044273376465
    4. '.app' → logprob: -13.001044273376465
    5. ' .' → logprob: -13.001044273376465
    6. '.extend' → logprob: -14.126044273376465
    7. '.Append' → logprob: -14.501044273376465
    8. '.add' → logprob: -15.001044273376465
    9. '_append' → logprob: -15.126044273376465
    10. 'Append' → logprob: -15.251044273376465

Token 1023: '((' (ID: 2054)
  Prédit: '(segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.02080882340669632
    2. '(' → logprob: -4.270808696746826
    3. '((' → logprob: -5.020808696746826
    4. ' (' → logprob: -11.395809173583984
    5. '(seg' → logprob: -11.520809173583984
    6. '   ' → logprob: -13.770809173583984
    7. '(tuple' → logprob: -14.645809173583984
    8. '(section' → logprob: -14.770809173583984
    9. '(session' → logprob: -15.645809173583984
    10. '(token' → logprob: -15.770809173583984

Token 1024: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.4855663721391466e-05
    2. ' segment' → logprob: -11.125015258789062
    3. '(segment' → logprob: -17.875015258789062
    4. '   ' → logprob: -19.750015258789062
    5. 'seg' → logprob: -20.000015258789062
    6. '           ' → logprob: -20.750015258789062
    7. 'segments' → logprob: -20.750015258789062
    8. 'section' → logprob: -20.875015258789062
    9. 'Segment' → logprob: -21.000015258789062
    10. '.segment' → logprob: -21.000015258789062

Token 1025: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.935296834039036e-06
    2. 'value' → logprob: -12.75000286102295
    3. 'Value' → logprob: -18.000003814697266
    4. 'alue' → logprob: -18.125003814697266
    5. '_' → logprob: -18.250003814697266
    6. '_values' → logprob: -18.875003814697266
    7. '_VALUE' → logprob: -19.375003814697266
    8. ' _' → logprob: -19.500003814697266
    9. '[' → logprob: -19.625003814697266
    10. ')' → logprob: -20.375003814697266

Token 1026: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.927930654550437e-05
    2. ',
' → logprob: -11.125029563903809
    3. ')' → logprob: -12.500029563903809
    4. ',)' → logprob: -12.500029563903809
    5. ',p' → logprob: -13.375029563903809
    6. '<|end|>' → logprob: -13.375029563903809
    7. ' ,' → logprob: -13.500029563903809
    8. '),' → logprob: -14.375029563903809
    9. ',),' → logprob: -14.375029563903809
    10. '           ' → logprob: -15.000029563903809

Token 1027: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004078401252627373
    2. ' p' → logprob: -5.504078388214111
    3. ')p' → logprob: -17.379077911376953
    4. ')' → logprob: -18.254077911376953
    5. '(p' → logprob: -19.254077911376953
    6. '	p' → logprob: -19.504077911376953
    7. '```' → logprob: -19.879077911376953
    8. '   ' → logprob: -20.129077911376953
    9. ' ' → logprob: -20.129077911376953
    10. ' ' → logprob: -20.254077911376953

Token 1028: 'wr' (ID: 16085)
  Prédit: 'wr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wr' → logprob: -3.380904672667384e-05
    2. 'w' → logprob: -10.375033378601074
    3. '_wr' → logprob: -14.000033378601074
    4. 'awr' → logprob: -14.250033378601074
    5. ' wr' → logprob: -15.375033378601074
    6. 'WR' → logprob: -15.750033378601074
    7. 'wrk' → logprob: -16.00003433227539
    8. 'ow' → logprob: -16.00003433227539
    9. 'rw' → logprob: -16.37503433227539
    10. 'p' → logprob: -16.50003433227539

Token 1029: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07018294930458069
    2. ')' → logprob: -2.820183038711548
    3. '))
' → logprob: -5.070182800292969
    4. '           ' → logprob: -6.945182800292969
    5. '       ' → logprob: -7.820182800292969
    6. '),' → logprob: -7.945182800292969
    7. ')
' → logprob: -9.445182800292969
    8. ',' → logprob: -10.070182800292969
    9. '));' → logprob: -11.320182800292969
    10. ')),' → logprob: -11.570182800292969

Token 1030: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023545583710074425
    2. 'return' → logprob: -4.148545742034912
    3. '
' → logprob: -5.023545742034912
    4. '```' → logprob: -7.398545742034912
    5. ' return' → logprob: -8.523545265197754
    6. '        
' → logprob: -10.148545265197754
    7. '<|end|>' → logprob: -11.273545265197754
    8. '
' → logprob: -11.898545265197754
    9. '           ' → logprob: -11.898545265197754
    10. '	return' → logprob: -13.148545265197754

Token 1031: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3187565505504608
    2. 'return' → logprob: -1.3187565803527832
    3. ' return' → logprob: -5.443756580352783
    4. '
' → logprob: -7.193756580352783
    5. '   ' → logprob: -8.568756103515625
    6. '	return' → logprob: -9.318756103515625
    7. '```' → logprob: -9.818756103515625
    8. '        
' → logprob: -10.568756103515625
    9. '<|end|>' → logprob: -11.693756103515625
    10. '           ' → logprob: -11.943756103515625

Token 1032: ' Filter' (ID: 20308)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009951218962669373
    2. '#' → logprob: -5.134951114654541
    3. 'segments' → logprob: -5.634951114654541
    4. '       ' → logprob: -7.884951114654541
    5. ' return' → logprob: -10.0099515914917
    6. '
' → logprob: -12.2599515914917
    7. 'filtered' → logprob: -12.2599515914917
    8. 'while' → logprob: -12.2599515914917
    9. '   ' → logprob: -12.5099515914917
    10. 'Return' → logprob: -13.2599515914917

Token 1033: ' out' (ID: 842)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44497042894363403
    2. ' =' → logprob: -1.3199703693389893
    3. 'segments' → logprob: -2.8199703693389893
    4. '[
' → logprob: -4.444970607757568
    5. '[' → logprob: -5.319970607757568
    6. '=lambda' → logprob: -5.319970607757568
    7. '_segments' → logprob: -5.944970607757568
    8. '=[' → logprob: -6.069970607757568
    9. '(lambda' → logprob: -6.194970607757568
    10. '[(' → logprob: -7.444970607757568

Token 1034: ' leading' (ID: 8117)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.008986209519207478
    2. 'segment' → logprob: -5.758985996246338
    3. 'lambda' → logprob: -5.883985996246338
    4. '[
' → logprob: -6.258985996246338
    5. 'segments' → logprob: -7.758985996246338
    6. '[s' → logprob: -8.508986473083496
    7. '[' → logprob: -8.758986473083496
    8. 'seg' → logprob: -9.633986473083496
    9. '[token' → logprob: -10.008986473083496
    10. '(lambda' → logprob: -10.383986473083496

Token 1035: ' segments' (ID: 33749)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7833915948867798
    2. 'segments' → logprob: -1.0333915948867798
    3. '[(' → logprob: -2.0333914756774902
    4. ' while' → logprob: -4.28339147567749
    5. '(' → logprob: -4.78339147567749
    6. 'zeros' → logprob: -5.28339147567749
    7. ' (' → logprob: -5.40839147567749
    8. '0' → logprob: -5.53339147567749
    9. ' segments' → logprob: -5.53339147567749
    10. '[
' → logprob: -5.53339147567749

Token 1036: ' that' (ID: 484)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05175488442182541
    2. ' while' → logprob: -3.551754951477051
    3. '       ' → logprob: -4.051754951477051
    4. '
' → logprob: -6.051754951477051
    5. '        
' → logprob: -7.426754951477051
    6. 'segments' → logprob: -7.426754951477051
    7. '```' → logprob: -8.55175495147705
    8. 'While' → logprob: -9.05175495147705
    9. '#' → logprob: -9.42675495147705
    10. '[::-' → logprob: -9.92675495147705

Token 1037: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.6302028298377991
    2. 'have' → logprob: -1.0052027702331543
    3. ' are' → logprob: -2.6302027702331543
    4. ' have' → logprob: -4.380202770233154
    5. '==' → logprob: -5.130202770233154
    6. 'all' → logprob: -5.505202770233154
    7. 'segment' → logprob: -5.880202770233154
    8. '[' → logprob: -6.755202770233154
    9. 'while' → logprob: -7.505202770233154
    10. '_are' → logprob: -7.505202770233154

Token 1038: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006689918227493763
    2. '0' → logprob: -5.25669002532959
    3. ' (' → logprob: -7.25669002532959
    4. 'zero' → logprob: -7.25669002532959
    5. 'zeros' → logprob: -11.00669002532959
    6. 'empty' → logprob: -11.75669002532959
    7. 'all' → logprob: -11.75669002532959
    8. ' zero' → logprob: -12.00669002532959
    9. 'while' → logprob: -12.63169002532959
    10. '```' → logprob: -14.25669002532959

Token 1039: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06995599716901779
    2. '0' → logprob: -2.819956064224243
    3. 'segment' → logprob: -5.694955825805664
    4. 'while' → logprob: -6.069955825805664
    5. 'segments' → logprob: -6.819955825805664
    6. ' (' → logprob: -7.319955825805664
    7. '(segment' → logprob: -8.569955825805664
    8. 'zero' → logprob: -9.194955825805664
    9. 'lambda' → logprob: -9.319955825805664
    10. '(lambda' → logprob: -9.694955825805664

Token 1040: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2761593461036682
    2. 'while' → logprob: -1.9011592864990234
    3. '
' → logprob: -2.4011592864990234
    4. ' while' → logprob: -7.026159286499023
    5. 'segments' → logprob: -8.401159286499023
    6. '        
' → logprob: -9.026159286499023
    7. '
' → logprob: -10.526159286499023
    8. '```' → logprob: -10.651159286499023
    9. '   ' → logprob: -12.776159286499023
    10. 'While' → logprob: -12.901159286499023

Token 1041: ' avoid' (ID: 8397)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -1.2096893787384033
    2. 'the' → logprob: -1.5846893787384033
    3. 'keep' → logprob: -1.5846893787384033
    4. 'return' → logprob: -2.2096893787384033
    5. 'reverse' → logprob: -3.2096893787384033
    6. ' avoid' → logprob: -3.5846893787384033
    7. 'skip' → logprob: -4.084689140319824
    8. 'ensure' → logprob: -4.209689140319824
    9. ' the' → logprob: -4.334689140319824
    10. 'not' → logprob: -4.834689140319824

Token 1042: ' extra' (ID: 5018)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5092331767082214
    2. '#' → logprob: -2.259233236312866
    3. 'leading' → logprob: -2.509233236312866
    4. 'empty' → logprob: -2.884233236312866
    5. '[]
' → logprob: -3.384233236312866
    6. '[(' → logprob: -3.509233236312866
    7. 'segments' → logprob: -3.634233236312866
    8. ' while' → logprob: -4.134232997894287
    9. '[' → logprob: -4.634232997894287
    10. ' leading' → logprob: -4.884232997894287

Token 1043: ' zeros' (ID: 42274)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6168610453605652
    2. 'segments' → logprob: -1.11686110496521
    3. ' while' → logprob: -2.61686110496521
    4. ' segments' → logprob: -3.11686110496521
    5. 'zeros' → logprob: -4.741860866546631
    6. ' zeros' → logprob: -6.241860866546631
    7. '#' → logprob: -6.491860866546631
    8. '```' → logprob: -7.241860866546631
    9. 'digits' → logprob: -7.741860866546631
    10. '0' → logprob: -8.116861343383789

Token 1044: ' on' (ID: 402)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5494611859321594
    2. '       ' → logprob: -0.9244611859321594
    3. 'segments' → logprob: -4.299461364746094
    4. '
' → logprob: -4.924461364746094
    5. ' while' → logprob: -5.299461364746094
    6. '        
' → logprob: -10.424461364746094
    7. '   ' → logprob: -10.799461364746094
    8. ' segments' → logprob: -10.799461364746094
    9. '```' → logprob: -10.799461364746094
    10. '	while' → logprob: -11.174461364746094

Token 1045: ' head' (ID: 3189)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.00784912146627903
    2. 'left' → logprob: -5.382849216461182
    3. ' the' → logprob: -5.882849216461182
    4. 'output' → logprob: -8.007848739624023
    5. '#' → logprob: -11.007848739624023
    6. 'start' → logprob: -11.132848739624023
    7. 'return' → logprob: -11.132848739624023
    8. 'segments' → logprob: -11.257848739624023
    9. 'leading' → logprob: -11.382848739624023
    10. 'front' → logprob: -11.882848739624023

Token 1046: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2813050448894501
    2. '       ' → logprob: -1.5313050746917725
    3. '
' → logprob: -4.281304836273193
    4. ' while' → logprob: -4.531304836273193
    5. 'segments' → logprob: -5.531304836273193
    6. '```' → logprob: -8.781305313110352
    7. '        
' → logprob: -9.906305313110352
    8. '``' → logprob: -10.156305313110352
    9. '   ' → logprob: -10.406305313110352
    10. '	while' → logprob: -10.781305313110352

Token 1047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01303068920969963
    2. 'while' → logprob: -4.388030529022217
    3. '
' → logprob: -8.138031005859375
    4. ' while' → logprob: -8.888031005859375
    5. 'segments' → logprob: -9.638031005859375
    6. '```' → logprob: -11.388031005859375
    7. '   ' → logprob: -12.013031005859375
    8. '           ' → logprob: -12.263031005859375
    9. '        
' → logprob: -14.138031005859375
    10. 'for' → logprob: -14.763031005859375

Token 1048: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.016769394278526306
    2. '       ' → logprob: -4.2667694091796875
    3. ' while' → logprob: -6.0167694091796875
    4. 'segments' → logprob: -9.766769409179688
    5. 'i' → logprob: -10.266769409179688
    6. 'index' → logprob: -10.891769409179688
    7. '
' → logprob: -11.016769409179688
    8. '   ' → logprob: -11.766769409179688
    9. '```' → logprob: -11.766769409179688
    10. '	while' → logprob: -12.266769409179688

Token 1049: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.09274102002382278
    2. 'len' → logprob: -2.467741012573242
    3. ' segments' → logprob: -5.967741012573242
    4. ' len' → logprob: -6.717741012573242
    5. '(len' → logprob: -11.967741012573242
    6. '   ' → logprob: -12.092741012573242
    7. 'se' → logprob: -12.717741012573242
    8. ' ' → logprob: -13.467741012573242
    9. '```' → logprob: -13.467741012573242
    10. 'seg' → logprob: -13.717741012573242

Token 1050: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.0189918652176857
    2. ' and' → logprob: -4.018991947174072
    3. '[' → logprob: -7.268991947174072
    4. '[-' → logprob: -8.893991470336914
    5. '```' → logprob: -12.768991470336914
    6. '	and' → logprob: -13.518991470336914
    7. '       ' → logprob: -14.393991470336914
    8. '1' → logprob: -14.643991470336914
    9. 'len' → logprob: -14.643991470336914
    10. '           ' → logprob: -14.768991470336914

Token 1051: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.1517960956552997e-05
    2. ' segments' → logprob: -11.375011444091797
    3. 'se' → logprob: -19.250011444091797
    4. 'sections' → logprob: -20.000011444091797
    5. 'seg' → logprob: -20.250011444091797
    6. '0' → logprob: -21.500011444091797
    7. '```' → logprob: -21.750011444091797
    8. '   ' → logprob: -22.125011444091797
    9. 'len' → logprob: -22.625011444091797
    10. '_segments' → logprob: -22.750011444091797

Token 1052: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6936882138252258
    2. 'and' → logprob: -0.6936882138252258
    3. ' and' → logprob: -8.06868839263916
    4. '[-' → logprob: -8.44368839263916
    5. '```' → logprob: -11.69368839263916
    6. '0' → logprob: -13.44368839263916
    7. '[
' → logprob: -14.06868839263916
    8. '``' → logprob: -14.81868839263916
    9. '\[' → logprob: -15.44368839263916
    10. '.' → logprob: -15.44368839263916

Token 1053: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031865055207163095
    2. 'segments' → logprob: -5.7531867027282715
    3. ' segments' → logprob: -12.503186225891113
    4. ' ' → logprob: -13.253186225891113
    5. '[' → logprob: -13.503186225891113
    6. '```' → logprob: -14.878186225891113
    7. '(' → logprob: -15.253186225891113
    8. '-' → logprob: -15.378186225891113
    9. 'len' → logprob: -15.378186225891113
    10. 'Segments' → logprob: -15.378186225891113

Token 1054: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009798115119338036
    2. '][' → logprob: -4.634798049926758
    3. 'and' → logprob: -11.009798049926758
    4. '==' → logprob: -11.384798049926758
    5. ' [' → logprob: -12.759798049926758
    6. '```' → logprob: -12.759798049926758
    7. ' ==' → logprob: -13.384798049926758
    8. ' ][' → logprob: -14.134798049926758
    9. '[][' → logprob: -14.134798049926758
    10. '__[' → logprob: -14.259798049926758

Token 1055: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. '1' → logprob: -12.250006675720215
    3. '[' → logprob: -14.125006675720215
    4. ' ' → logprob: -14.625006675720215
    5. '
' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.0000057220459
    7. '==' → logprob: -17.1250057220459
    8. '```' → logprob: -17.2500057220459
    9. '(' → logprob: -17.6250057220459
    10. '=' → logprob: -18.8125057220459

Token 1056: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18062499165534973
    2. ' ==' → logprob: -1.8056249618530273
    3. ']==' → logprob: -7.180624961853027
    4. ')==' → logprob: -9.805624961853027
    5. ']' → logprob: -11.180624961853027
    6. '```' → logprob: -11.430624961853027
    7. '()==' → logprob: -11.555624961853027
    8. '[' → logprob: -11.680624961853027
    9. '=' → logprob: -11.680624961853027
    10. ')' → logprob: -12.180624961853027

Token 1057: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005953805986791849
    2. ' ==' → logprob: -5.130953788757324
    3. '0' → logprob: -11.630953788757324
    4. '=' → logprob: -11.755953788757324
    5. '==
' → logprob: -12.880953788757324
    6. '()==' → logprob: -13.130953788757324
    7. '```' → logprob: -13.255953788757324
    8. ']==' → logprob: -13.755953788757324
    9. ')==' → logprob: -14.755953788757324
    10. '===' → logprob: -14.880953788757324

Token 1058: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -19.75
    4. '۰' → logprob: -21.375
    5. '```' → logprob: -23.125
    6. '00' → logprob: -23.375
    7. '０' → logprob: -24.25
    8. '  ' → logprob: -24.5
    9. '000' → logprob: -25.0
    10. '০' → logprob: -25.25

Token 1059: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -19.125
    4. '   ' → logprob: -19.5
    5. '```' → logprob: -21.0
    6. '00' → logprob: -21.375
    7. '０' → logprob: -22.125
    8. '০' → logprob: -22.25
    9. '=' → logprob: -22.375
    10. '000' → logprob: -22.875

Token 1060: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19153663516044617
    2. ':' → logprob: -2.4415366649627686
    3. ' and' → logprob: -2.5665366649627686
    4. '       ' → logprob: -5.0665364265441895
    5. 'and' → logprob: -5.6915364265441895
    6. '   ' → logprob: -7.9415364265441895
    7. '):
' → logprob: -8.316536903381348
    8. '           ' → logprob: -8.941536903381348
    9. ',' → logprob: -11.066536903381348
    10. ' :
' → logprob: -11.816536903381348

Token 1061: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9662719964981079
    2. '       ' → logprob: -1.216271996498108
    3. '           ' → logprob: -1.466271996498108
    4. '<|end|>' → logprob: -3.3412718772888184
    5. '<|end|>' → logprob: -4.341271877288818
    6. '```' → logprob: -4.841271877288818
    7. ' del' → logprob: -5.091271877288818
    8. '	   ' → logprob: -5.091271877288818
    9. ':' → logprob: -5.466271877288818
    10. '	       ' → logprob: -5.966271877288818

Token 1062: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -1.9266199160483666e-05
    2. ' segments' → logprob: -11.250019073486328
    3. '           ' → logprob: -12.125019073486328
    4. '```' → logprob: -14.750019073486328
    5. 'del' → logprob: -15.750019073486328
    6. '_segments' → logprob: -16.625019073486328
    7. 'se' → logprob: -16.625019073486328
    8. '   ' → logprob: -16.875019073486328
    9. '``' → logprob: -17.750019073486328
    10. '       ' → logprob: -17.875019073486328

Token 1063: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.000959700730163604
    2. '=' → logprob: -7.250959873199463
    3. 'pop' → logprob: -8.500959396362305
    4. 'segments' → logprob: -10.500959396362305
    5. '.' → logprob: -11.250959396362305
    6. '	pop' → logprob: -12.875959396362305
    7. '(pop' → logprob: -14.125959396362305
    8. '_segments' → logprob: -14.625959396362305
    9. '```' → logprob: -14.875959396362305
    10. ':' → logprob: -15.000959396362305

Token 1064: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.500000953674316
    3. '()' → logprob: -16.375
    4. '()
' → logprob: -20.5
    5. ' (' → logprob: -20.875
    6. '(
' → logprob: -21.0
    7. 'def' → logprob: -21.125
    8. '(-' → logprob: -21.5
    9. 'from' → logprob: -21.75
    10. '[' → logprob: -21.875

Token 1065: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. ')' → logprob: -20.0
    4. ' ' → logprob: -20.0
    5. '۰' → logprob: -20.25
    6. '```' → logprob: -20.875
    7. '[' → logprob: -21.5
    8. '-' → logprob: -21.875
    9. '#' → logprob: -22.5
    10. '   ' → logprob: -22.75

Token 1066: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.539801688631997e-05
    2. ')
' → logprob: -10.125065803527832
    3. '       ' → logprob: -10.750065803527832
    4. '())' → logprob: -14.000065803527832
    5. '<|end|>' → logprob: -14.375065803527832
    6. ')return' → logprob: -15.000065803527832
    7. '   ' → logprob: -15.000065803527832
    8. '),' → logprob: -15.375065803527832
    9. '<|end|>' → logprob: -15.500065803527832
    10. '()' → logprob: -15.500065803527832

Token 1067: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004052871838212013
    2. '
' → logprob: -6.129052639007568
    3. '<|end|>' → logprob: -6.879052639007568
    4. '        
' → logprob: -7.879052639007568
    5. 'return' → logprob: -8.879053115844727
    6. '   ' → logprob: -9.129053115844727
    7. '           ' → logprob: -10.129053115844727
    8. '        ' → logprob: -10.379053115844727
    9. '```' → logprob: -10.504053115844727
    10. ' return' → logprob: -10.629053115844727

Token 1068: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006839453242719173
    2. 'return' → logprob: -5.006839275360107
    3. '
' → logprob: -9.756839752197266
    4. '   ' → logprob: -10.256839752197266
    5. ' return' → logprob: -10.506839752197266
    6. '           ' → logprob: -13.006839752197266
    7. '        
' → logprob: -14.256839752197266
    8. '	return' → logprob: -15.006839752197266
    9. '```' → logprob: -15.631839752197266
    10. 'if' → logprob: -15.756839752197266

Token 1069: ' But' (ID: 3072)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07997885346412659
    2. 'if' → logprob: -2.5799789428710938
    3. '       ' → logprob: -6.829978942871094
    4. ' return' → logprob: -12.704978942871094
    5. ' if' → logprob: -13.329978942871094
    6. '   ' → logprob: -13.454978942871094
    7. '#' → logprob: -13.579978942871094
    8. '
' → logprob: -15.954978942871094
    9. 'If' → logprob: -16.329978942871094
    10. '	return' → logprob: -17.454978942871094

Token 1070: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08055193722248077
    2. ' if' → logprob: -2.580551862716675
    3. '#' → logprob: -6.705552101135254
    4. ' at' → logprob: -8.330552101135254
    5. 'segments' → logprob: -9.455552101135254
    6. 'at' → logprob: -10.205552101135254
    7. '
' → logprob: -10.955552101135254
    8. ' segments' → logprob: -11.080552101135254
    9. '   ' → logprob: -11.705552101135254
    10. ' #' → logprob: -11.705552101135254

Token 1071: ' no' (ID: 860)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.008615754544734955
    2. ' not' → logprob: -4.758615970611572
    3. 'len' → logprob: -14.133615493774414
    4. '(not' → logprob: -14.758615493774414
    5. 'segments' → logprob: -16.258615493774414
    6. '	not' → logprob: -19.258615493774414
    7. '
' → logprob: -20.008615493774414
    8. '_not' → logprob: -21.133615493774414
    9. '!' → logprob: -21.133615493774414
    10. 'no' → logprob: -21.258615493774414

Token 1072: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.029756972566246986
    2. ' segments' → logprob: -3.529757022857666
    3. 'segment' → logprob: -12.779756546020508
    4. 's' → logprob: -12.779756546020508
    5. 'len' → logprob: -14.904756546020508
    6. 'seg' → logprob: -16.029756546020508
    7. '_segments' → logprob: -16.154756546020508
    8. 'se' → logprob: -16.154756546020508
    9. 't' → logprob: -16.779756546020508
    10. '[' → logprob: -16.779756546020508

Token 1073: ' remain' (ID: 12760)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3033715784549713
    2. 'left' → logprob: -1.928371548652649
    3. ' or' → logprob: -3.0533716678619385
    4. ':
' → logprob: -3.1783716678619385
    5. ':' → logprob: -4.553371429443359
    6. '==' → logprob: -5.303371429443359
    7. 'remain' → logprob: -5.428371429443359
    8. 'remaining' → logprob: -5.678371429443359
    9. ' left' → logprob: -6.303371429443359
    10. '   ' → logprob: -7.178371429443359

Token 1074: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9415039420127869
    2. '       ' → logprob: -1.0665040016174316
    3. ':' → logprob: -2.1915040016174316
    4. ' or' → logprob: -2.5665040016174316
    5. 'or' → logprob: -3.0665040016174316
    6. ',' → logprob: -4.066504001617432
    7. 'segments' → logprob: -4.816504001617432
    8. '           ' → logprob: -5.566504001617432
    9. 'if' → logprob: -7.816504001617432
    10. '):
' → logprob: -8.316503524780273

Token 1075: ' the' (ID: 290)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.007512449286878109
    2. ' segments' → logprob: -5.38251256942749
    3. '       ' → logprob: -6.25751256942749
    4. '#' → logprob: -7.38251256942749
    5. '           ' → logprob: -8.007512092590332
    6. 'return' → logprob: -11.382512092590332
    7. ' #' → logprob: -12.757512092590332
    8. ' return' → logprob: -13.757512092590332
    9. '   ' → logprob: -14.632512092590332
    10. '_segments' → logprob: -14.882512092590332

Token 1076: ' number' (ID: 2086)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.044231560081243515
    2. 'if' → logprob: -3.669231653213501
    3. ' segments' → logprob: -4.169231414794922
    4. ' if' → logprob: -6.669231414794922
    5. '#' → logprob: -6.919231414794922
    6. '   ' → logprob: -10.919231414794922
    7. 'return' → logprob: -11.419231414794922
    8. ' #' → logprob: -12.294231414794922
    9. '       ' → logprob: -12.669231414794922
    10. 'segment' → logprob: -13.044231414794922

Token 1077: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21237798035144806
    2. ' =' → logprob: -2.3373780250549316
    3. 'segments' → logprob: -3.3373780250549316
    4. ' is' → logprob: -3.8373780250549316
    5. 'is' → logprob: -4.462378025054932
    6. '_segments' → logprob: -4.587378025054932
    7. '==' → logprob: -4.962378025054932
    8. ' ==' → logprob: -6.337378025054932
    9. ' segments' → logprob: -6.587378025054932
    10. '0' → logprob: -6.837378025054932

Token 1078: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001967457792488858
    2. 'zero' → logprob: -8.87519645690918
    3. ' ' → logprob: -10.62519645690918
    4. '(' → logprob: -11.50019645690918
    5. '[(' → logprob: -11.62519645690918
    6. ' zero' → logprob: -12.00019645690918
    7. '```' → logprob: -12.50019645690918
    8. 'exact' → logprob: -13.62519645690918
    9. '   ' → logprob: -14.37519645690918
    10. ' (' → logprob: -14.75019645690918

Token 1079: ' (' (ID: 350)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.14854976534843445
    2. '       ' → logprob: -2.773549795150757
    3. 'if' → logprob: -2.773549795150757
    4. ' if' → logprob: -4.773549556732178
    5. ',' → logprob: -5.648549556732178
    6. ' segments' → logprob: -7.398549556732178
    7. '```' → logprob: -9.023550033569336
    8. '           ' → logprob: -9.148550033569336
    9. ':
' → logprob: -9.148550033569336
    10. 'return' → logprob: -10.273550033569336

Token 1080: 'should' (ID: 10618)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.0016668500611558557
    2. '[(' → logprob: -6.501667022705078
    3. ' segments' → logprob: -8.751667022705078
    4. '[' → logprob: -12.876667022705078
    5. 'return' → logprob: -13.001667022705078
    6. ' [(' → logprob: -13.876667022705078
    7. '   ' → logprob: -15.376667022705078
    8. 'if' → logprob: -16.126667022705078
    9. '       ' → logprob: -16.751667022705078
    10. 'append' → logprob: -17.626667022705078

Token 1081: ' not' (ID: 625)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.7367093563079834
    2. 'segments' → logprob: -0.7367093563079834
    3. 'append' → logprob: -4.1117095947265625
    4. 'if' → logprob: -4.6117095947265625
    5. 'not' → logprob: -5.1117095947265625
    6. 'return' → logprob: -5.3617095947265625
    7. ' be' → logprob: -6.2367095947265625
    8. ' segments' → logprob: -6.4867095947265625
    9. 'remain' → logprob: -7.2367095947265625
    10. '.append' → logprob: -7.4867095947265625

Token 1082: ' happen' (ID: 5659)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.04748038947582245
    2. 'segments' → logprob: -3.422480344772339
    3. 'append' → logprob: -4.922480583190918
    4. ' be' → logprob: -5.422480583190918
    5. 'pop' → logprob: -6.797480583190918
    6. 'allow' → logprob: -7.922480583190918
    7. 'return' → logprob: -8.672480583190918
    8. ' segments' → logprob: -8.672480583190918
    9. 'remain' → logprob: -9.797480583190918
    10. '#' → logprob: -10.672480583190918

Token 1083: ' since' (ID: 3630)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8459585905075073
    2. '       ' → logprob: -1.0959585905075073
    3. 'or' → logprob: -1.9709585905075073
    4. ',' → logprob: -2.720958709716797
    5. ')' → logprob: -4.470958709716797
    6. 'segments' → logprob: -5.220958709716797
    7. 'if' → logprob: -5.470958709716797
    8. '
' → logprob: -5.845958709716797
    9. '           ' → logprob: -6.220958709716797
    10. '):
' → logprob: -6.970958709716797

Token 1084: ' input' (ID: 3422)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4920462369918823
    2. 'self' → logprob: -1.1170462369918823
    3. 'len' → logprob: -2.867046356201172
    4. 'number' → logprob: -5.492046356201172
    5. 'n' → logprob: -8.617046356201172
    6. 'not' → logprob: -9.617046356201172
    7. ' segments' → logprob: -10.117046356201172
    8. ' self' → logprob: -10.367046356201172
    9. '
' → logprob: -10.867046356201172
    10. ' len' → logprob: -11.117046356201172

Token 1085: ' ≥' (ID: 99731)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -1.8033822774887085
    2. 'segments' → logprob: -1.9283822774887085
    3. '_segments' → logprob: -2.303382396697998
    4. ' is' → logprob: -2.678382396697998
    5. ' !=' → logprob: -2.803382396697998
    6. ')' → logprob: -2.803382396697998
    7. ',' → logprob: -3.053382396697998
    8. '!=' → logprob: -3.303382396697998
    9. '==' → logprob: -3.303382396697998
    10. '[' → logprob: -3.303382396697998

Token 1086: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -14.750007629394531
    4. '   ' → logprob: -16.87500762939453
    5. '```' → logprob: -17.00000762939453
    6. '=' → logprob: -18.12500762939453
    7. 'zero' → logprob: -18.25000762939453
    8. 'from' → logprob: -18.75000762939453
    9. '
' → logprob: -19.00000762939453
    10. ')' → logprob: -19.50000762939453

Token 1087: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14729848504066467
    2. ',' → logprob: -2.522298574447632
    3. ' or' → logprob: -3.397298574447632
    4. '),' → logprob: -4.772298336029053
    5. ')' → logprob: -5.022298336029053
    6. 'segments' → logprob: -5.897298336029053
    7. 'or' → logprob: -6.022298336029053
    8. 'if' → logprob: -7.397298336029053
    9. '):
' → logprob: -7.772298336029053
    10. ' if' → logprob: -7.772298336029053

Token 1088: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05775608867406845
    2. 'if' → logprob: -2.932756185531616
    3. '```' → logprob: -6.307755947113037
    4. ' if' → logprob: -7.057755947113037
    5. '   ' → logprob: -9.182756423950195
    6. 'return' → logprob: -9.807756423950195
    7. '
' → logprob: -11.057756423950195
    8. '``' → logprob: -12.182756423950195
    9. '           ' → logprob: -12.432756423950195
    10. 'If' → logprob: -13.307756423950195

Token 1089: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16077928245067596
    2. '       ' → logprob: -1.9107792377471924
    3. 'return' → logprob: -8.160778999328613
    4. ' if' → logprob: -8.410778999328613
    5. '```' → logprob: -10.535778999328613
    6. '   ' → logprob: -11.035778999328613
    7. 'while' → logprob: -13.660778999328613
    8. '
' → logprob: -13.910778999328613
    9. 'If' → logprob: -14.035778999328613
    10. '           ' → logprob: -14.535778999328613

Token 1090: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014364934526383877
    2. ' not' → logprob: -4.264364719390869
    3. 'len' → logprob: -8.514365196228027
    4. '
' → logprob: -15.264365196228027
    5. '   ' → logprob: -15.514365196228027
    6. 'segments' → logprob: -15.514365196228027
    7. '(not' → logprob: -16.38936424255371
    8. ' len' → logprob: -16.63936424255371
    9. '	not' → logprob: -16.76436424255371
    10. '!' → logprob: -17.51436424255371

Token 1091: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.0001490716531407088
    2. ' segments' → logprob: -9.12514877319336
    3. 'self' → logprob: -10.12514877319336
    4. 'se' → logprob: -17.12514877319336
    5. ' self' → logprob: -18.00014877319336
    6. 'sections' → logprob: -18.87514877319336
    7. 'segment' → logprob: -19.37514877319336
    8. '   ' → logprob: -19.50014877319336
    9. 'Segments' → logprob: -19.87514877319336
    10. 'seg' → logprob: -20.25014877319336

Token 1092: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5217031836509705
    2. '.append' → logprob: -1.2717032432556152
    3. ':' → logprob: -2.5217032432556152
    4. '=' → logprob: -3.8967032432556152
    5. '           ' → logprob: -4.396703243255615
    6. '       ' → logprob: -4.771703243255615
    7. '[' → logprob: -6.521703243255615
    8. 'append' → logprob: -6.896703243255615
    9. '):
' → logprob: -7.521703243255615
    10. 'Append' → logprob: -7.646703243255615

Token 1093: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02406487800180912
    2. '       ' → logprob: -4.024065017700195
    3. 'segments' → logprob: -5.649065017700195
    4. 'return' → logprob: -6.649065017700195
    5. '   ' → logprob: -7.274065017700195
    6. ' segments' → logprob: -8.274065017700195
    7. ' return' → logprob: -10.149065017700195
    8. '<|end|>' → logprob: -11.524065017700195
    9. '_segments' → logprob: -11.649065017700195
    10. '```' → logprob: -11.649065017700195

Token 1094: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.00013512482109945267
    2. 'return' → logprob: -9.00013542175293
    3. '           ' → logprob: -12.25013542175293
    4. ' segments' → logprob: -12.37513542175293
    5. '       ' → logprob: -12.87513542175293
    6. 'self' → logprob: -16.75013542175293
    7. '   ' → logprob: -17.50013542175293
    8. '#' → logprob: -18.25013542175293
    9. 'seg' → logprob: -18.75013542175293
    10. ' return' → logprob: -18.75013542175293

Token 1095: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007853295537643135
    2. '=' → logprob: -7.2507853507995605
    3. 'append' → logprob: -9.750784873962402
    4. ' =' → logprob: -11.125784873962402
    5. '.' → logprob: -13.250784873962402
    6. '=[' → logprob: -15.375784873962402
    7. '           ' → logprob: -15.750784873962402
    8. '.extend' → logprob: -15.875784873962402
    9. 'Append' → logprob: -16.75078582763672
    10. '=
' → logprob: -17.25078582763672

Token 1096: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.127333340875339e-06
    2. '[((' → logprob: -12.500003814697266
    3. ' [(' → logprob: -15.000003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '[' → logprob: -19.625003814697266
    6. '([(' → logprob: -20.625003814697266
    7. '[
' → logprob: -23.250003814697266
    8. '       ' → logprob: -23.625003814697266
    9. '[]' → logprob: -23.750003814697266
    10. '[-' → logprob: -24.000003814697266

Token 1097: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750952497124672
    2. '(' → logprob: -3.5297510623931885
    3. ' (' → logprob: -14.90475082397461
    4. ' ' → logprob: -15.90475082397461
    5. '   ' → logprob: -18.90475082397461
    6. '[(' → logprob: -19.15475082397461
    7. '```' → logprob: -19.52975082397461
    8. '[' → logprob: -19.52975082397461
    9. '۰' → logprob: -20.02975082397461
    10. '０' → logprob: -20.27975082397461

Token 1098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.374227425316349e-05
    2. '0' → logprob: -10.000073432922363
    3. ' ,' → logprob: -10.500073432922363
    4. ',
' → logprob: -15.500073432922363
    5. '```' → logprob: -15.875073432922363
    6. '
' → logprob: -15.875073432922363
    7. '(' → logprob: -16.87507438659668
    8. '           ' → logprob: -17.00007438659668
    9. '[' → logprob: -17.12507438659668
    10. '   ' → logprob: -17.25007438659668

Token 1099: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -19.625015258789062
    4. ',' → logprob: -20.125015258789062
    5. '(' → logprob: -20.250015258789062
    6. '```' → logprob: -20.375015258789062
    7. '   ' → logprob: -20.625015258789062
    8. '۰' → logprob: -20.750015258789062
    9. '[' → logprob: -21.937515258789062
    10. '...' → logprob: -22.062515258789062

Token 1100: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008639389649033546
    2. ')]
' → logprob: -4.758639335632324
    3. '),' → logprob: -11.883639335632324
    4. ')]

' → logprob: -12.008639335632324
    5. ')]
' → logprob: -12.133639335632324
    6. ')],' → logprob: -13.133639335632324
    7. ')' → logprob: -13.758639335632324
    8. ')].' → logprob: -14.508639335632324
    9. ' )' → logprob: -14.758639335632324
    10. '(' → logprob: -14.758639335632324

Token 1101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017946491425391287
    2. 'return' → logprob: -8.875179290771484
    3. '```' → logprob: -11.375179290771484
    4. '           ' → logprob: -11.875179290771484
    5. '<|end|>' → logprob: -11.875179290771484
    6. ' return' → logprob: -12.250179290771484
    7. '   ' → logprob: -12.625179290771484
    8. '
' → logprob: -13.500179290771484
    9. '<|end|>' → logprob: -13.750179290771484
    10. '	return' → logprob: -14.375179290771484

Token 1102: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000737442634999752
    2. 'return' (adapté à ' return') → logprob: -7.25073766708374
    3. '   ' → logprob: -11.375737190246582
    4. ' return' → logprob: -11.875737190246582
    5. '	' → logprob: -12.500737190246582
    6. '	return' → logprob: -12.875737190246582
    7. '```' → logprob: -14.000737190246582
    8. '           ' → logprob: -14.125737190246582
    9. '
' → logprob: -15.375737190246582
    10. '	   ' → logprob: -15.375737190246582

Token 1103: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.7432603272027336e-06
    2. '[(' → logprob: -13.500001907348633
    3. ' segments' → logprob: -15.125001907348633
    4. '[' → logprob: -19.250001907348633
    5. '   ' → logprob: -19.750001907348633
    6. 'sections' → logprob: -19.875001907348633
    7. '[
' → logprob: -20.000001907348633
    8. 'se' → logprob: -20.375001907348633
    9. '```' → logprob: -20.500001907348633
    10. '[]' → logprob: -20.875001907348633

Token 1104: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044871971011161804
    2. '<|end|>' → logprob: -3.4198720455169678
    3. 'def' → logprob: -5.294871807098389
    4. '```' → logprob: -6.169871807098389
    5. '<|end|>' → logprob: -6.294871807098389
    6. '
' → logprob: -6.669871807098389
    7. '    
' → logprob: -8.794872283935547
    8. '       ' → logprob: -9.044872283935547
    9. ')' → logprob: -9.044872283935547
    10. ' ' → logprob: -9.044872283935547

Token 1105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006861062138341367
    2. '<|end|>' → logprob: -8.375685691833496
    3. '    
' → logprob: -8.750685691833496
    4. 'def' → logprob: -9.375685691833496
    5. '
' → logprob: -9.500685691833496
    6. '```' → logprob: -9.875685691833496
    7. '<|end|>' → logprob: -9.875685691833496
    8. ')' → logprob: -11.625685691833496
    9. '        
' → logprob: -12.250685691833496
    10. '       ' → logprob: -12.500685691833496

Token 1106: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5761827826499939
    2. 'def' (adapté à ' def') → logprob: -0.8261827826499939
    3. ' def' → logprob: -8.57618236541748
    4. '```' → logprob: -10.07618236541748
    5. '
' → logprob: -11.82618236541748
    6. '    
' → logprob: -13.45118236541748
    7. '	def' → logprob: -14.20118236541748
    8. '`' → logprob: -14.32618236541748
    9. ' ' → logprob: -14.57618236541748
    10. '@' → logprob: -14.82618236541748

Token 1107: ' format' (ID: 6011)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005244429688900709
    2. ' __' → logprob: -6.255244255065918
    3. 'format' → logprob: -6.380244255065918
    4. 'to' → logprob: -6.880244255065918
    5. 'iter' → logprob: -8.130244255065918
    6. 'str' → logprob: -9.630244255065918
    7. 'segments' → logprob: -9.630244255065918
    8. '_iter' → logprob: -10.130244255065918
    9. 'get' → logprob: -10.255244255065918
    10. '_to' → logprob: -10.630244255065918

Token 1108: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5848532915115356
    2. '(' → logprob: -0.9598532915115356
    3. '()' → logprob: -3.959853172302246
    4. '_number' → logprob: -4.084853172302246
    5. '(
' → logprob: -4.459853172302246
    6. '   ' → logprob: -5.584853172302246
    7. '_' → logprob: -5.584853172302246
    8. '_to' → logprob: -7.459853172302246
    9. 'self' → logprob: -7.584853172302246
    10. 'number' → logprob: -7.584853172302246

Token 1109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35171496868133545
    2. '):' → logprob: -1.2267149686813354
    3. '):
' → logprob: -6.226715087890625
    4. '   ' → logprob: -7.976715087890625
    5. '(self' → logprob: -8.351715087890625
    6. 'self' → logprob: -8.476715087890625
    7. ')_' → logprob: -8.601715087890625
    8. '_number' → logprob: -9.851715087890625
    9. '():' → logprob: -10.601715087890625
    10. '()' → logprob: -10.851715087890625

Token 1110: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14872626960277557
    2. '(' → logprob: -2.023726224899292
    3. '(
' → logprob: -5.898726463317871
    4. 'self' → logprob: -7.148726463317871
    5. '   ' → logprob: -7.148726463317871
    6. 'def' → logprob: -7.398726463317871
    7. ':' → logprob: -8.398726463317871
    8. '("("' → logprob: -8.648726463317871
    9. '```' → logprob: -8.773726463317871
    10. '       ' → logprob: -9.023726463317871

Token 1111: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -7.576873758807778e-05
    2. ' str' → logprob: -9.500075340270996
    3. 'List' → logprob: -14.625075340270996
    4. '[str' → logprob: -14.875075340270996
    5. 'string' → logprob: -17.500076293945312
    6. '   ' → logprob: -18.000076293945312
    7. 'Optional' → logprob: -18.125076293945312
    8. '(str' → logprob: -18.250076293945312
    9. 'Str' → logprob: -19.125076293945312
    10. ' ' → logprob: -19.375076293945312

Token 1112: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006117436569184065
    2. '       ' → logprob: -5.881117343902588
    3. '(
' → logprob: -6.506117343902588
    4. '(' → logprob: -6.506117343902588
    5. '   ' → logprob: -8.381117820739746
    6. 'self' → logprob: -10.131117820739746
    7. ':' → logprob: -11.381117820739746
    8. ':
' → logprob: -12.381117820739746
    9. '```' → logprob: -12.381117820739746
    10. '{' → logprob: -12.506117820739746

Token 1113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.176947600673884e-05
    2. '```' → logprob: -11.125021934509277
    3. '   ' → logprob: -12.375021934509277
    4. 'self' → logprob: -13.250021934509277
    5. '(self' → logprob: -15.375021934509277
    6. '`' → logprob: -15.750021934509277
    7. '           ' → logprob: -16.37502098083496
    8. '[' → logprob: -16.87502098083496
    9. 'def' → logprob: -16.87502098083496
    10. '      ' → logprob: -17.00002098083496

Token 1114: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02335437200963497
    2. 'result' → logprob: -3.7733542919158936
    3. 'parts' → logprob: -10.398354530334473
    4. 'output' → logprob: -10.523354530334473
    5. ' result' → logprob: -11.023354530334473
    6. 's' → logprob: -11.398354530334473
    7. 'res' → logprob: -12.273354530334473
    8. 'text' → logprob: -12.398354530334473
    9. 'tokens' → logprob: -12.398354530334473
    10. '```' → logprob: -12.398354530334473

Token 1115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06354750692844391
    2. 'result' → logprob: -2.8135476112365723
    3. 'if' → logprob: -6.938547611236572
    4. 'parts' → logprob: -7.563547611236572
    5. 'output' → logprob: -10.313547134399414
    6. 'res' → logprob: -10.938547134399414
    7. 's' → logprob: -11.063547134399414
    8. 'pieces' → logprob: -12.188547134399414
    9. 'text' → logprob: -12.563547134399414
    10. 'r' → logprob: -12.563547134399414

Token 1116: ' Format' (ID: 26193)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8348270058631897
    2. 'parts' → logprob: -0.8348270058631897
    3. '       ' → logprob: -2.834826946258545
    4. 'segments' → logprob: -3.209826946258545
    5. 'if' → logprob: -3.834826946258545
    6. 'pieces' → logprob: -5.709826946258545
    7. '   ' → logprob: -6.209826946258545
    8. '#' → logprob: -6.584826946258545
    9. 'tokens' → logprob: -6.959826946258545
    10. 'output' → logprob: -7.334826946258545

Token 1117: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07722998410463333
    2. 'the' → logprob: -2.9522299766540527
    3. '       ' → logprob: -4.202229976654053
    4. ' the' → logprob: -5.702229976654053
    5. ' self' → logprob: -6.077229976654053
    6. 'return' → logprob: -7.827229976654053
    7. '(self' → logprob: -8.077230453491211
    8. '```' → logprob: -8.202230453491211
    9. 'result' → logprob: -8.827230453491211
    10. '
' → logprob: -8.827230453491211

Token 1118: ' large' (ID: 4410)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011262968182563782
    2. 'parts' → logprob: -4.886262893676758
    3. 'number' → logprob: -6.261262893676758
    4. 'res' → logprob: -7.386262893676758
    5. 'output' → logprob: -7.886262893676758
    6. 'segments' → logprob: -8.636262893676758
    7. '   ' → logprob: -8.886262893676758
    8. '       ' → logprob: -9.136262893676758
    9. 'pieces' → logprob: -9.261262893676758
    10. '"' → logprob: -9.886262893676758

Token 1119: ' number' (ID: 2086)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.011452495120465755
    2. 'number' → logprob: -4.886452674865723
    3. '_number' → logprob: -5.636452674865723
    4. ' number' → logprob: -8.386452674865723
    5. '   ' → logprob: -10.886452674865723
    6. '```' → logprob: -11.761452674865723
    7. '
' → logprob: -12.011452674865723
    8. ' Number' → logprob: -12.636452674865723
    9. '       ' → logprob: -12.886452674865723
    10. ')' → logprob: -13.386452674865723

Token 1120: ' segments' (ID: 33749)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030556796118617058
    2. '       ' → logprob: -3.5305566787719727
    3. 'self' → logprob: -7.530556678771973
    4. '   ' → logprob: -8.905556678771973
    5. '
' → logprob: -10.405556678771973
    6. '```' → logprob: -10.530556678771973
    7. '(' → logprob: -11.155556678771973
    8. ')' → logprob: -11.405556678771973
    9. '(
' → logprob: -11.905556678771973
    10. '           ' → logprob: -11.905556678771973

Token 1121: ' into' (ID: 1511)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47097665071487427
    2. '       ' → logprob: -1.0959765911102295
    3. 'self' → logprob: -3.2209765911102295
    4. '```' → logprob: -7.095976829528809
    5. '(' → logprob: -8.845976829528809
    6. ' self' → logprob: -9.220976829528809
    7. 'def' → logprob: -9.345976829528809
    8. '   ' → logprob: -9.470976829528809
    9. 'return' → logprob: -10.220976829528809
    10. ' into' → logprob: -10.595976829528809

Token 1122: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.053326189517974854
    2. 'str' → logprob: -3.05332612991333
    3. 'the' → logprob: -6.05332612991333
    4. ' a' → logprob: -6.42832612991333
    5. 'human' → logprob: -8.178326606750488
    6. 'string' → logprob: -8.553326606750488
    7. ''' → logprob: -9.303326606750488
    8. 'their' → logprob: -10.053326606750488
    9. '''.' → logprob: -10.553326606750488
    10. '```' → logprob: -10.928326606750488

Token 1123: ' J' (ID: 643)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.1426927149295807
    2. 'human' → logprob: -3.517692804336548
    3. 'full' → logprob: -3.642692804336548
    4. 'final' → logprob: -3.767692804336548
    5. 'formatted' → logprob: -4.392692565917969
    6. 'str' → logprob: -4.642692565917969
    7. 'J' → logprob: -5.017692565917969
    8. 'Japanese' → logprob: -5.017692565917969
    9. 'combined' → logprob: -5.517692565917969
    10. 'result' → logprob: -5.642692565917969

Token 1124: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.013640359975397587
    2. '   ' → logprob: -5.138640403747559
    3. '```' → logprob: -5.388640403747559
    4. ' ink' → logprob: -7.513640403747559
    5. '``' → logprob: -7.638640403747559
    6. '`' → logprob: -7.763640403747559
    7. '"' → logprob: -7.888640403747559
    8. 'inko' → logprob: -8.013640403747559
    9. '_str' → logprob: -9.138640403747559
    10. '    ' → logprob: -9.138640403747559

Token 1125: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.004361048340797424
    2. 'ouk' → logprob: -5.504361152648926
    3. 'kou' → logprob: -9.504361152648926
    4. '   ' → logprob: -9.629361152648926
    5. '       ' → logprob: -10.379361152648926
    6. 'oki' → logprob: -10.754361152648926
    7. '```' → logprob: -10.754361152648926
    8. 'out' → logprob: -11.004361152648926
    9. 'oui' → logprob: -11.254361152648926
    10. 'ok' → logprob: -11.504361152648926

Token 1126: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.005297196563333273
    2. 'uki' → logprob: -5.2552971839904785
    3. 'u' → logprob: -10.755297660827637
    4. 'k' → logprob: -11.505297660827637
    5. 'oki' → logprob: -11.505297660827637
    6. 'uk' → logprob: -11.630297660827637
    7. '   ' → logprob: -13.255297660827637
    8. '`' → logprob: -13.505297660827637
    9. 'ku' → logprob: -13.505297660827637
    10. '_' → logprob: -14.005297660827637

Token 1127: ' styled' (ID: 17536)
  Prédit: ' style'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' style' → logprob: -0.31381356716156006
    2. 'style' → logprob: -1.56381356716156
    3. '-style' → logprob: -3.3138136863708496
    4. 'string' → logprob: -5.18881368637085
    5. ' representation' → logprob: -5.31381368637085
    6. '_style' → logprob: -5.43881368637085
    7. ' string' → logprob: -5.93881368637085
    8. ' format' → logprob: -6.31381368637085
    9. 'number' → logprob: -6.56381368637085
    10. ' number' → logprob: -7.43881368637085

Token 1128: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.009111789055168629
    2. ' string' → logprob: -4.8841118812561035
    3. 'representation' → logprob: -7.5091118812561035
    4. 'str' → logprob: -7.8841118812561035
    5. 'number' → logprob: -8.134111404418945
    6. ' representation' → logprob: -8.759111404418945
    7. 'format' → logprob: -10.259111404418945
    8. 'notation' → logprob: -10.509111404418945
    9. 'text' → logprob: -10.759111404418945
    10. 'return' → logprob: -11.134111404418945

Token 1129: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027351634576916695
    2. '(self' → logprob: -3.9023516178131104
    3. 'self' → logprob: -5.0273518562316895
    4. 'return' → logprob: -9.527351379394531
    5. '   ' → logprob: -10.527351379394531
    6. '```' → logprob: -10.652351379394531
    7. '(' → logprob: -10.777351379394531
    8. ':' → logprob: -10.777351379394531
    9. 'result' → logprob: -11.027351379394531
    10. ',' → logprob: -11.402351379394531

Token 1130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8670179997570813e-05
    2. '```' → logprob: -11.250019073486328
    3. 'result' → logprob: -12.125019073486328
    4. 'output' → logprob: -16.250019073486328
    5. 'tokens' → logprob: -16.500019073486328
    6. '   ' → logprob: -17.375019073486328
    7. 's' → logprob: -17.750019073486328
    8. '           ' → logprob: -17.750019073486328
    9. 'return' → logprob: -18.125019073486328
    10. '	' → logprob: -18.375019073486328

Token 1131: ' Conditions' (ID: 39333)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010962257510982454
    2. 'result' → logprob: -9.500109672546387
    3. '```' → logprob: -10.375109672546387
    4. 'tokens' → logprob: -13.500109672546387
    5. '   ' → logprob: -14.500109672546387
    6. 'segments' → logprob: -15.000109672546387
    7. 'parts' → logprob: -15.250109672546387
    8. 'text' → logprob: -15.375109672546387
    9. 'output' → logprob: -15.375109672546387
    10. 'res' → logprob: -16.00010871887207

Token 1132: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17143301665782928
    2. ':' → logprob: -1.9214329719543457
    3. '```' → logprob: -4.796432971954346
    4. ':
' → logprob: -6.921432971954346
    5. ' for' → logprob: -7.171432971954346
    6. '        
' → logprob: -8.421433448791504
    7. '
' → logprob: -8.546433448791504
    8. ' that' → logprob: -9.296433448791504
    9. '           ' → logprob: -9.546433448791504
    10. 'for' → logprob: -9.796433448791504

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001278534036828205
    2. '```' → logprob: -9.000127792358398
    3. '           ' → logprob: -13.125127792358398
    4. '`' → logprob: -14.500127792358398
    5. '>' → logprob: -15.000127792358398
    6. '        ' → logprob: -15.750127792358398
    7. '      ' → logprob: -15.750127792358398
    8. 'The' → logprob: -16.1251277923584
    9. '``' → logprob: -16.1251277923584
    10. ':' → logprob: -16.2501277923584

Token 1134: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014297490939497948
    2. '```' → logprob: -4.2642974853515625
    3. '           ' → logprob: -10.014297485351562
    4. '"""' → logprob: -10.764297485351562
    5. 'The' → logprob: -11.264297485351562
    6. '`' → logprob: -11.389297485351562
    7. '``' → logprob: -11.639297485351562
    8. ')' → logprob: -11.764297485351562
    9. '#' → logprob: -12.014297485351562
    10. '-' (adapté à ' -') → logprob: -12.264297485351562

Token 1135: ' Each' (ID: 11555)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18444880843162537
    2. 'segments' → logprob: -2.559448719024658
    3. '       ' → logprob: -3.434448719024658
    4. 'parts' → logprob: -3.934448719024658
    5. 'res' → logprob: -4.934448719024658
    6. 'If' → logprob: -5.059448719024658
    7. ' result' → logprob: -5.684448719024658
    8. 'segment' → logprob: -5.934448719024658
    9. 'No' → logprob: -6.059448719024658
    10. 'formatted' → logprob: -6.059448719024658

Token 1136: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.062409382313489914
    2. ' segment' → logprob: -2.8124094009399414
    3. 'seg' → logprob: -8.937409400939941
    4. ' (' → logprob: -9.312409400939941
    5. '(segment' → logprob: -9.937409400939941
    6. '`' → logprob: -10.062409400939941
    7. '_segment' → logprob: -10.437409400939941
    8. '(' → logprob: -10.812409400939941
    9. 'token' → logprob: -11.562409400939941
    10. 'Segment' → logprob: -11.687409400939941

Token 1137: ' value' (ID: 1432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8202573657035828
    2. '_value' → logprob: -1.1952574253082275
    3. '           ' → logprob: -3.4452574253082275
    4. 'should' → logprob: -3.8202574253082275
    5. ' should' → logprob: -3.8202574253082275
    6. '_str' → logprob: -3.8202574253082275
    7. ' is' → logprob: -4.070257186889648
    8. 'value' → logprob: -4.070257186889648
    9. 'starts' → logprob: -4.070257186889648
    10. ':' → logprob: -4.195257186889648

Token 1138: ' is' (ID: 382)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9102086424827576
    2. '```' → logprob: -1.0352087020874023
    3. '           ' → logprob: -2.4102087020874023
    4. ' must' → logprob: -3.4102087020874023
    5. ' !=' → logprob: -3.6602087020874023
    6. ' should' → logprob: -4.285208702087402
    7. '       ' → logprob: -4.410208702087402
    8. ' >' → logprob: -4.410208702087402
    9. 'must' → logprob: -4.410208702087402
    10. ',' → logprob: -4.910208702087402

Token 1139: ' from' (ID: 591)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6542358994483948
    2. '```' → logprob: -2.27923583984375
    3. '           ' → logprob: -2.40423583984375
    4. ' >' → logprob: -2.90423583984375
    5. ' appended' → logprob: -3.40423583984375
    6. ' app' → logprob: -3.40423583984375
    7. ' either' → logprob: -3.77923583984375
    8. ' formatted' → logprob: -3.77923583984375
    9. 'formatted' → logprob: -4.27923583984375
    10. ' separated' → logprob: -4.40423583984375

Token 1140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05098484456539154
    2. '0' → logprob: -3.8009848594665527
    3. ' ' → logprob: -3.8009848594665527
    4. ''' → logprob: -6.425984859466553
    5. '4' → logprob: -6.925984859466553
    6. '`' → logprob: -6.925984859466553
    7. '   ' → logprob: -7.800984859466553
    8. '```' → logprob: -8.050984382629395
    9. '100' → logprob: -8.550984382629395
    10. '       ' → logprob: -9.050984382629395

Token 1141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21029213070869446
    2. '0' → logprob: -1.835292100906372
    3. ''' → logprob: -4.585292339324951
    4. ' ' → logprob: -4.960292339324951
    5. '100' → logprob: -5.460292339324951
    6. '   ' → logprob: -5.835292339324951
    7. '4' → logprob: -6.960292339324951
    8. '```' → logprob: -7.085292339324951
    9. '`' → logprob: -7.585292339324951
    10. '>' → logprob: -7.585292339324951

Token 1142: '-' (ID: 12)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10631754249334335
    2. ' to' → logprob: -4.231317520141602
    3. '```' → logprob: -4.231317520141602
    4. ',' → logprob: -4.481317520141602
    5. ':' → logprob: -4.606317520141602
    6. '
' → logprob: -4.606317520141602
    7. '       ' → logprob: -4.731317520141602
    8. '4' → logprob: -5.356317520141602
    9. ' if' → logprob: -5.606317520141602
    10. '6' → logprob: -6.231317520141602

Token 1143: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.03357918933033943
    2. '100' → logprob: -3.908579111099243
    3. '4' → logprob: -5.033579349517822
    4. '9' → logprob: -6.158579349517822
    5. '   ' → logprob: -6.908579349517822
    6. '```' → logprob: -6.908579349517822
    7. '000' → logprob: -7.158579349517822
    8. ' ' → logprob: -7.283579349517822
    9. '10' → logprob: -8.283578872680664
    10. 'to' → logprob: -8.408578872680664

Token 1144: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.01953176036477089
    2. '   ' → logprob: -4.394531726837158
    3. '```' → logprob: -6.394531726837158
    4. '       ' → logprob: -6.769531726837158
    5. '4' → logprob: -6.894531726837158
    6. ')' → logprob: -7.269531726837158
    7. ':' → logprob: -7.644531726837158
    8. '
' → logprob: -7.644531726837158
    9. ':
' → logprob: -8.019532203674316
    10. '_' → logprob: -8.894532203674316

Token 1145: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3360433280467987
    2. '           ' → logprob: -2.711043357849121
    3. '
' → logprob: -3.086043357849121
    4. ' or' → logprob: -3.086043357849121
    5. ':' → logprob: -3.211043357849121
    6. ':
' → logprob: -3.586043357849121
    7. ' +' → logprob: -4.086043357849121
    8. ' if' → logprob: -4.836043357849121
    9. ',' → logprob: -4.961043357849121
    10. '               ' → logprob: -5.211043357849121

Token 1146: 'except' (ID: 25035)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6974736452102661
    2. ' except' → logprob: -1.8224736452102661
    3. 'except' → logprob: -1.8224736452102661
    4. '):
' → logprob: -3.0724735260009766
    5. ' or' → logprob: -3.8224735260009766
    6. ')
' → logprob: -4.197473526000977
    7. '):' → logprob: -4.322473526000977
    8. '```' → logprob: -4.447473526000977
    9. '),' → logprob: -4.572473526000977
    10. 'excluding' → logprob: -4.572473526000977

Token 1147: ' possibly' (ID: 14836)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1511439085006714
    2. ' ' → logprob: -3.026144027709961
    3. ' the' → logprob: -3.026144027709961
    4. ' possibly' → logprob: -4.151144027709961
    5. ' for' → logprob: -4.401144027709961
    6. 'the' → logprob: -5.276144027709961
    7. '```' → logprob: -6.276144027709961
    8. '           ' → logprob: -6.526144027709961
    9. 'possibly' → logprob: -7.026144027709961
    10. 'for' → logprob: -7.026144027709961

Token 1148: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011657407507300377
    2. 'zero' → logprob: -5.136657238006592
    3. 'the' → logprob: -6.261657238006592
    4. ' ' → logprob: -7.136657238006592
    5. ' zero' → logprob: -7.136657238006592
    6. 'for' → logprob: -7.511657238006592
    7. '```' → logprob: -7.761657238006592
    8. ' the' → logprob: -8.13665771484375
    9. ' for' → logprob: -8.51165771484375
    10. 'last' → logprob: -8.76165771484375

Token 1149: ')
' (ID: 446)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9764804840087891
    2. ')' → logprob: -1.476480484008789
    3. ')
' → logprob: -2.101480484008789
    4. ' if' → logprob: -2.226480484008789
    5. '):
' → logprob: -2.601480484008789
    6. '       ' → logprob: -2.851480484008789
    7. '):' → logprob: -4.976480484008789
    8. '           ' → logprob: -5.226480484008789
    9. ' for' → logprob: -5.476480484008789
    10. ',' → logprob: -5.601480484008789

Token 1150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000885134213604033
    2. '```' → logprob: -7.375885009765625
    3. '           ' → logprob: -8.875885009765625
    4. ',' → logprob: -9.750885009765625
    5. ':' → logprob: -10.875885009765625
    6. ')' → logprob: -11.500885009765625
    7. '`' → logprob: -12.250885009765625
    8. '   ' → logprob: -12.625885009765625
    9. '):
' → logprob: -13.000885009765625
    10. '      ' → logprob: -13.000885009765625

Token 1151: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005460034008137882
    2. '           ' → logprob: -8.2505464553833
    3. '
' → logprob: -9.2505464553833
    4. '```' → logprob: -9.3755464553833
    5. ':' → logprob: -10.8755464553833
    6. ',' → logprob: -11.0005464553833
    7. '`' → logprob: -11.2505464553833
    8. ')' → logprob: -11.6255464553833
    9. '):
' → logprob: -11.7505464553833
    10. '   ' → logprob: -12.1255464553833

Token 1152: ' segments' (ID: 33749)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4750068485736847
    2. '       ' → logprob: -1.6000068187713623
    3. 'segments' → logprob: -2.2250068187713623
    4. ' result' → logprob: -3.6000068187713623
    5. 'segment' → logprob: -3.9750068187713623
    6. 'parts' → logprob: -4.975007057189941
    7. 'res' → logprob: -6.225007057189941
    8. ' segments' → logprob: -6.350007057189941
    9. '```' → logprob: -6.600007057189941
    10. 'return' → logprob: -6.600007057189941

Token 1153: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5521906614303589
    2. '       ' → logprob: -1.4271906614303589
    3. '=' → logprob: -2.5521907806396484
    4. '_str' → logprob: -3.8021907806396484
    5. 's' → logprob: -3.9271907806396484
    6. ' are' → logprob: -4.177190780639648
    7. ':' → logprob: -4.302190780639648
    8. 'with' → logprob: -4.927190780639648
    9. '   ' → logprob: -5.552190780639648
    10. 'str' → logprob: -5.802190780639648

Token 1154: ' zero' (ID: 12421)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.4409399628639221
    2. '0' → logprob: -1.5659399032592773
    3. 'value' → logprob: -2.9409399032592773
    4. ' segment' → logprob: -2.9409399032592773
    5. 'self' → logprob: -3.5659399032592773
    6. ' value' → logprob: -4.690939903259277
    7. ' self' → logprob: -6.440939903259277
    8. ' ' → logprob: -6.690939903259277
    9. '```' → logprob: -7.690939903259277
    10. 'seg' → logprob: -7.940939903259277

Token 1155: ' values' (ID: 4824)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8423778414726257
    2. '_value' → logprob: -1.3423779010772705
    3. '.value' → logprob: -2.7173779010772705
    4. ' ==' → logprob: -2.7173779010772705
    5. 'value' → logprob: -3.0923779010772705
    6. '==' → logprob: -3.4673779010772705
    7. '           ' → logprob: -3.8423779010772705
    8. '!=' → logprob: -3.8423779010772705
    9. '       ' → logprob: -3.9673779010772705
    10. ' or' → logprob: -4.342377662658691

Token 1156: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8110625743865967
    2. ' or' → logprob: -1.8110625743865967
    3. ' !=' → logprob: -2.4360625743865967
    4. '       ' → logprob: -2.9360625743865967
    5. ' continue' → logprob: -3.3110625743865967
    6. ' should' → logprob: -3.5610625743865967
    7. '           ' → logprob: -3.8110625743865967
    8. 'continue' → logprob: -3.8110625743865967
    9. ' ==' → logprob: -4.061062812805176
    10. ' are' → logprob: -4.061062812805176

Token 1157: ' skipped' (ID: 72521)
  Prédit: ' skipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' skipped' → logprob: -0.11022670567035675
    2. ' omitted' → logprob: -2.360226631164551
    3. ' not' → logprob: -5.235226631164551
    4. 'sk' → logprob: -6.110226631164551
    5. ' included' → logprob: -7.360226631164551
    6. ' om' → logprob: -7.860226631164551
    7. 'excluded' → logprob: -8.11022663116455
    8. ' excluded' → logprob: -8.48522663116455
    9. 'included' → logprob: -8.61022663116455
    10. 'ignored' → logprob: -8.98522663116455

Token 1158: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018675910541787744
    2. '
' → logprob: -7.001867771148682
    3. '```' → logprob: -8.126867294311523
    4. '           ' → logprob: -8.751867294311523
    5. '   ' → logprob: -8.751867294311523
    6. ':' → logprob: -9.751867294311523
    7. ':
' → logprob: -10.001867294311523
    8. 'except' → logprob: -10.751867294311523
    9. ',' → logprob: -10.876867294311523
    10. '`' → logprob: -11.126867294311523

Token 1159: 'no' (ID: 1750)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7774720788002014
    2. 'except' → logprob: -1.5274720191955566
    3. ')' → logprob: -1.7774720191955566
    4. '       ' → logprob: -2.2774720191955566
    5. '):
' → logprob: -3.6524720191955566
    6. ' except' → logprob: -4.777472019195557
    7. '           ' → logprob: -4.777472019195557
    8. '):' → logprob: -5.777472019195557
    9. 'unless' → logprob: -7.027472019195557
    10. 'and' → logprob: -7.777472019195557

Token 1160: ' zeros' (ID: 42274)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8306533098220825
    2. ')' → logprob: -1.5806533098220825
    3. '_' → logprob: -1.8306533098220825
    4. ' space' → logprob: -2.330653190612793
    5. '_space' → logprob: -2.955653190612793
    6. ''' → logprob: -4.830653190612793
    7. '`' → logprob: -5.205653190612793
    8. ' output' → logprob: -5.455653190612793
    9. ' _' → logprob: -5.955653190612793
    10. 'output' → logprob: -6.205653190612793

Token 1161: ' printed' (ID: 22774)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6879575252532959
    2. ')' → logprob: -1.312957525253296
    3. ' or' → logprob: -2.437957525253296
    4. '           ' → logprob: -3.437957525253296
    5. 'except' → logprob: -3.937957525253296
    6. ')
' → logprob: -4.062957763671875
    7. ' in' → logprob: -4.187957763671875
    8. '```' → logprob: -4.312957763671875
    9. ' except' → logprob: -4.687957763671875
    10. 'or' → logprob: -5.312957763671875

Token 1162: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02990923821926117
    2. ')' → logprob: -4.279909133911133
    3. ')
' → logprob: -4.404909133911133
    4. '           ' → logprob: -6.029909133911133
    5. '```' → logprob: -8.279909133911133
    6. '):
' → logprob: -8.904909133911133
    7. '               ' → logprob: -9.029909133911133
    8. ',' → logprob: -9.154909133911133
    9. ' except' → logprob: -9.154909133911133
    10. ')
' → logprob: -10.154909133911133

Token 1163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.704065213445574e-05
    2. '```' → logprob: -10.125046730041504
    3. '           ' → logprob: -12.250046730041504
    4. '``' → logprob: -14.625046730041504
    5. '   ' → logprob: -14.875046730041504
    6. ',' → logprob: -15.000046730041504
    7. '`' → logprob: -15.625046730041504
    8. '        
' → logprob: -15.625046730041504
    9. '      ' → logprob: -16.00004768371582
    10. 'return' → logprob: -16.00004768371582

Token 1164: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.68153518543113e-05
    2. '
' → logprob: -10.500057220458984
    3. '```' → logprob: -11.375057220458984
    4. '           ' → logprob: -11.500057220458984
    5. '   ' → logprob: -12.500057220458984
    6. ')' → logprob: -13.500057220458984
    7. '        
' → logprob: -14.375057220458984
    8. '               ' → logprob: -15.375057220458984
    9. ',' → logprob: -15.500057220458984
    10. '`' → logprob: -15.625057220458984

Token 1165: ' unit' (ID: 7670)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5791267156600952
    2. '       ' → logprob: -1.3291267156600952
    3. 'parts' → logprob: -2.0791268348693848
    4. ' result' → logprob: -3.4541268348693848
    5. ' parts' → logprob: -4.579126834869385
    6. 'output' → logprob: -5.829126834869385
    7. 'pieces' → logprob: -7.204126834869385
    8. 'segments' → logprob: -7.204126834869385
    9. 'units' → logprob: -7.329126834869385
    10. 'res' → logprob: -7.704126834869385

Token 1166: ' string' (ID: 1621)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42043212056159973
    2. '_name' → logprob: -1.5454320907592773
    3. 's' → logprob: -3.0454320907592773
    4. '_str' → logprob: -3.5454320907592773
    5. '=' → logprob: -4.045432090759277
    6. 'name' → logprob: -4.420432090759277
    7. '   ' → logprob: -5.670432090759277
    8. '_text' → logprob: -5.920432090759277
    9. '_string' → logprob: -6.045432090759277
    10. '       ' → logprob: -6.170432090759277

Token 1167: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4514920115470886
    2. ' =' → logprob: -2.0764920711517334
    3. ':' → logprob: -2.4514920711517334
    4. ' +' → logprob: -2.8264920711517334
    5. 's' → logprob: -3.7014920711517334
    6. ')' → logprob: -4.576491832733154
    7. '+' → logprob: -4.576491832733154
    8. '       ' → logprob: -4.826491832733154
    9. ' is' → logprob: -4.826491832733154
    10. '_name' → logprob: -5.451491832733154

Token 1168: ' appended' (ID: 114467)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.13687777519226074
    2. '''' → logprob: -2.8868777751922607
    3. ' appended' → logprob: -3.5118777751922607
    4. 'attached' → logprob: -4.38687801361084
    5. ''' → logprob: -4.63687801361084
    6. ' app' → logprob: -4.63687801361084
    7. ''app' → logprob: -5.01187801361084
    8. 'added' → logprob: -6.01187801361084
    9. ' attached' → logprob: -8.13687801361084
    10. ' concaten' → logprob: -8.38687801361084

Token 1169: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10374271124601364
    2. 'for' → logprob: -3.7287425994873047
    3. ' for' → logprob: -3.8537425994873047
    4. '           ' → logprob: -3.9787425994873047
    5. '
' → logprob: -4.728742599487305
    6. ' =' → logprob: -4.978742599487305
    7. 'self' → logprob: -5.728742599487305
    8. '```' → logprob: -5.978742599487305
    9. '               ' → logprob: -6.478742599487305
    10. ' if' → logprob: -6.478742599487305

Token 1170: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.10889387130737305
    2. 'str' → logprob: -2.608893871307373
    3. 'the' → logprob: -4.608893871307373
    4. ' segment' → logprob: -4.858893871307373
    5. 'token' → logprob: -5.858893871307373
    6. 'each' → logprob: -6.108893871307373
    7. 'value' → logprob: -6.358893871307373
    8. 'f' → logprob: -6.608893871307373
    9. ' str' → logprob: -7.108893871307373
    10. 'seg' → logprob: -7.233893871307373

Token 1171: ' value' (ID: 1432)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025387441739439964
    2. '
' → logprob: -4.150387287139893
    3. 'for' → logprob: -6.275387287139893
    4. '   ' → logprob: -6.525387287139893
    5. 'def' → logprob: -6.650387287139893
    6. '(self' → logprob: -7.275387287139893
    7. '           ' → logprob: -7.525387287139893
    8. 'return' → logprob: -7.775387287139893
    9. 'self' → logprob: -8.02538776397705
    10. ':' → logprob: -8.15038776397705

Token 1172: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006442877347581089
    2. '   ' → logprob: -8.37564468383789
    3. '
' → logprob: -8.62564468383789
    4. '(self' → logprob: -9.50064468383789
    5. '()
' → logprob: -10.50064468383789
    6. '```' → logprob: -10.50064468383789
    7. '           ' → logprob: -11.12564468383789
    8. '`' → logprob: -11.12564468383789
    9. 'def' → logprob: -11.25064468383789
    10. '(' → logprob: -11.25064468383789

Token 1173: ' for' (ID: 395)
  Prédit: ' when'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' when' → logprob: -0.6184329390525818
    2. 'when' → logprob: -0.9934329390525818
    3. 'for' → logprob: -2.7434329986572266
    4. ' for' → logprob: -3.7434329986572266
    5. ' if' → logprob: -6.618432998657227
    6. 'if' → logprob: -6.993432998657227
    7. '<|end|>' → logprob: -8.993432998657227
    8. ' in' → logprob: -9.368432998657227
    9. ' (' → logprob: -9.368432998657227
    10. '(' → logprob: -9.868432998657227

Token 1174: ' the' (ID: 290)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.011092856526374817
    2. 'self' → logprob: -5.511092662811279
    3. ' segments' → logprob: -5.886092662811279
    4. '0' → logprob: -6.386092662811279
    5. '''' → logprob: -6.761092662811279
    6. 'segment' → logprob: -7.636092662811279
    7. 'the' → logprob: -7.886092662811279
    8. 'units' → logprob: -8.761093139648438
    9. '```' → logprob: -9.511093139648438
    10. ' the' → logprob: -9.886093139648438

Token 1175: ' smallest' (ID: 42173)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25438669323921204
    2. 'segments' → logprob: -1.7543866634368896
    3. 'last' → logprob: -3.1293866634368896
    4. ' last' → logprob: -6.004386901855469
    5. 'first' → logprob: -6.629386901855469
    6. 'lowest' → logprob: -6.879386901855469
    7. 'segment' → logprob: -7.129386901855469
    8. ' segments' → logprob: -7.254386901855469
    9. '```' → logprob: -7.879386901855469
    10. ' ' → logprob: -8.254386901855469

Token 1176: ' unit' (ID: 7670)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.6295921802520752
    2. '`' → logprob: -2.004592180252075
    3. 'segment' → logprob: -2.129592180252075
    4. '
' → logprob: -2.129592180252075
    5. ''' → logprob: -2.254592180252075
    6. '   ' → logprob: -2.254592180252075
    7. ' segment' → logprob: -3.129592180252075
    8. '       ' → logprob: -3.379592180252075
    9. '``' → logprob: -3.754592180252075
    10. ':' → logprob: -4.129591941833496

Token 1177: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009309518150985241
    2. '
' → logprob: -5.6343092918396
    3. '```' → logprob: -6.5093092918396
    4. ':
' → logprob: -6.7593092918396
    5. ',' → logprob: -7.3843092918396
    6. ':' → logprob: -7.5093092918396
    7. '   ' → logprob: -8.259309768676758
    8. '           ' → logprob: -8.384309768676758
    9. ' (' → logprob: -8.634309768676758
    10. '(' → logprob: -8.759309768676758

Token 1178: 'power' (ID: 22295)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2206285446882248
    2. '''' → logprob: -2.345628499984741
    3. ''' → logprob: -3.095628499984741
    4. 'segment' → logprob: -3.970628499984741
    5. ' ' → logprob: -4.97062873840332
    6. 'segments' → logprob: -5.09562873840332
    7. 'p' → logprob: -5.34562873840332
    8. ')' → logprob: -5.34562873840332
    9. '```' → logprob: -6.09562873840332
    10. 'power' → logprob: -6.47062873840332

Token 1179: '=' (ID: 28)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029612204059958458
    2. '==' → logprob: -3.7796123027801514
    3. '=' → logprob: -5.904612064361572
    4. ' ==' → logprob: -6.029612064361572
    5. ' ' → logprob: -7.029612064361572
    6. '```' → logprob: -8.90461254119873
    7. '>' → logprob: -9.27961254119873
    8. ')' → logprob: -10.27961254119873
    9. ' !=' → logprob: -11.52961254119873
    10. '   ' → logprob: -11.65461254119873

Token 1180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.125007629394531
    3. '```' → logprob: -13.875007629394531
    4. '4' → logprob: -14.875007629394531
    5. '   ' → logprob: -15.750007629394531
    6. '`' → logprob: -16.25000762939453
    7. '``' → logprob: -16.25000762939453
    8. '       ' → logprob: -17.87500762939453
    9. '           ' → logprob: -18.12500762939453
    10. ')' → logprob: -18.62500762939453

Token 1181: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6185514330863953
    2. ')
' → logprob: -0.8685514330863953
    3. ')' → logprob: -3.99355149269104
    4. '):
' → logprob: -4.118551254272461
    5. '           ' → logprob: -5.618551254272461
    6. '):' → logprob: -6.618551254272461
    7. '   ' → logprob: -7.493551254272461
    8. '```' → logprob: -8.368551254272461
    9. ']
' → logprob: -8.618551254272461
    10. ')
' → logprob: -8.618551254272461

Token 1182: ' which' (ID: 1118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006347587914206088
    2. '(self' → logprob: -8.625635147094727
    3. '```' → logprob: -8.750635147094727
    4. 'self' → logprob: -9.000635147094727
    5. '
' → logprob: -10.125635147094727
    6. ':' → logprob: -10.375635147094727
    7. '(' → logprob: -10.500635147094727
    8. '`' → logprob: -10.875635147094727
    9. '           ' → logprob: -11.250635147094727
    10. '   ' → logprob: -11.375635147094727

Token 1183: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.19306538999080658
    2. ' has' → logprob: -2.4430654048919678
    3. 'does' → logprob: -3.4430654048919678
    4. 'is' → logprob: -3.6930654048919678
    5. '```' → logprob: -3.9430654048919678
    6. ' is' → logprob: -5.568065166473389
    7. ' does' → logprob: -6.193065166473389
    8. ' om' → logprob: -6.443065166473389
    9. 'om' → logprob: -7.568065166473389
    10. '``' → logprob: -7.568065166473389

Token 1184: ' no' (ID: 860)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.3179864287376404
    2. 'no' → logprob: -1.3179864883422852
    3. ' no' → logprob: -6.442986488342285
    4. 'none' → logprob: -6.942986488342285
    5. 'empty' → logprob: -7.067986488342285
    6. '```' → logprob: -7.067986488342285
    7. '""' → logprob: -8.817986488342285
    8. 'an' → logprob: -9.317986488342285
    9. ''''' → logprob: -9.442986488342285
    10. '=''' → logprob: -10.192986488342285

Token 1185: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.0028687084559351206
    2. ' unit' → logprob: -5.87786865234375
    3. 'suffix' → logprob: -10.12786865234375
    4. '```' → logprob: -11.37786865234375
    5. 'space' → logprob: -12.00286865234375
    6. 'name' → logprob: -12.87786865234375
    7. 'append' → logprob: -14.12786865234375
    8. ' appended' → logprob: -14.50286865234375
    9. ' suffix' → logprob: -14.75286865234375
    10. '`' → logprob: -14.87786865234375

Token 1186: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014082171022891998
    2. '
' → logprob: -4.639081954956055
    3. '(self' → logprob: -6.264081954956055
    4. '   ' → logprob: -7.639081954956055
    5. 'self' → logprob: -7.639081954956055
    6. '```' → logprob: -8.139081954956055
    7. '()
' → logprob: -8.389081954956055
    8. ')
' → logprob: -8.764081954956055
    9. 'def' → logprob: -8.889081954956055
    10. '`' → logprob: -9.014081954956055

Token 1187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.146429223008454e-05
    2. '```' → logprob: -9.75006103515625
    3. '           ' → logprob: -13.00006103515625
    4. '   ' → logprob: -15.12506103515625
    5. '``' → logprob: -15.25006103515625
    6. ',' → logprob: -16.75006103515625
    7. '      ' → logprob: -17.12506103515625
    8. ')' → logprob: -17.12506103515625
    9. '`' → logprob: -17.25006103515625
    10. '               ' → logprob: -17.37506103515625

Token 1188: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003986144147347659
    2. ')' → logprob: -9.000398635864258
    3. '
' → logprob: -9.375398635864258
    4. '```' → logprob: -9.375398635864258
    5. '           ' → logprob: -10.250398635864258
    6. '):
' → logprob: -11.250398635864258
    7. '   ' → logprob: -11.375398635864258
    8. '        
' → logprob: -11.625398635864258
    9. '`' → logprob: -12.250398635864258
    10. ')
' → logprob: -12.250398635864258

Token 1189: ' no' (ID: 860)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.24813486635684967
    2. 'parts' → logprob: -1.9981348514556885
    3. '       ' → logprob: -2.4981348514556885
    4. ' result' → logprob: -7.248135089874268
    5. 'pieces' → logprob: -8.12313461303711
    6. ' parts' → logprob: -8.24813461303711
    7. 'output' → logprob: -8.37313461303711
    8. 'formatted' → logprob: -8.74813461303711
    9. 'res' → logprob: -9.24813461303711
    10. 'results' → logprob: -9.87313461303711

Token 1190: ' leading' (ID: 8117)
  Prédit: ' leading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leading' → logprob: -1.3993384838104248
    2. ' trailing' → logprob: -1.5243384838104248
    3. ' spaces' → logprob: -1.7743384838104248
    4. 'space' → logprob: -2.649338483810425
    5. 'newline' → logprob: -3.149338483810425
    6. 'n' → logprob: -3.399338483810425
    7. ' newline' → logprob: -3.399338483810425
    8. 's' → logprob: -3.399338483810425
    9. 'spaces' → logprob: -3.524338483810425
    10. ' space' → logprob: -4.024338722229004

Token 1191: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.7144719958305359
    2. ' zeros' → logprob: -1.0894720554351807
    3. '0' → logprob: -2.3394720554351807
    4. 'zero' → logprob: -3.3394720554351807
    5. 's' → logprob: -5.214471817016602
    6. '_' → logprob: -5.214471817016602
    7. ' zero' → logprob: -5.214471817016602
    8. '```' → logprob: -5.214471817016602
    9. 'spaces' → logprob: -5.589471817016602
    10. 'space' → logprob: -5.714471817016602

Token 1192: ' printed' (ID: 22774)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001192371710203588
    2. ':' → logprob: -6.876192569732666
    3. '   ' → logprob: -9.751192092895508
    4. '           ' → logprob: -10.251192092895508
    5. '```' → logprob: -10.501192092895508
    6. '        
' → logprob: -11.751192092895508
    7. '`' → logprob: -12.251192092895508
    8. '[' → logprob: -12.501192092895508
    9. ')' → logprob: -12.751192092895508
    10. ':
' → logprob: -13.001192092895508

Token 1193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045617512660101056
    2. '   ' → logprob: -8.375455856323242
    3. ':' → logprob: -8.875455856323242
    4. '           ' → logprob: -10.375455856323242
    5. '
' → logprob: -11.000455856323242
    6. '```' → logprob: -11.375455856323242
    7. 'def' → logprob: -11.625455856323242
    8. ':
' → logprob: -12.250455856323242
    9. '        
' → logprob: -12.750455856323242
    10. '`' → logprob: -13.625455856323242

Token 1194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5570885807392187e-05
    2. '```' → logprob: -11.750015258789062
    3. '
' → logprob: -12.375015258789062
    4. '           ' → logprob: -13.500015258789062
    5. '   ' → logprob: -13.500015258789062
    6. '        
' → logprob: -15.500015258789062
    7. ')' → logprob: -16.625015258789062
    8. ',' → logprob: -16.625015258789062
    9. '      ' → logprob: -16.750015258789062
    10. 'result' → logprob: -17.000015258789062

Token 1195: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.697387966094539e-05
    2. '```' → logprob: -9.500086784362793
    3. ')' → logprob: -12.375086784362793
    4. '   ' → logprob: -12.625086784362793
    5. '           ' → logprob: -13.375086784362793
    6. 'result' → logprob: -14.125086784362793
    7. ':' → logprob: -14.500086784362793
    8. 's' → logprob: -15.500086784362793
    9. '
' → logprob: -15.500086784362793
    10. '):' → logprob: -15.875086784362793

Token 1196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.183501293184236e-05
    2. '```' → logprob: -10.12507152557373
    3. 'result' → logprob: -10.87507152557373
    4. 'tokens' → logprob: -11.75007152557373
    5. '   ' → logprob: -12.75007152557373
    6. 'output' → logprob: -15.12507152557373
    7. 'return' → logprob: -15.12507152557373
    8. '``' → logprob: -15.62507152557373
    9. 'token' → logprob: -16.000072479248047
    10. ' result' → logprob: -16.125072479248047

Token 1197: ' parts' (ID: 7881)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18284325301647186
    2. '       ' → logprob: -2.4328432083129883
    3. 'parts' (adapté à ' parts') → logprob: -2.6828432083129883
    4. 'if' → logprob: -4.682843208312988
    5. 'output' → logprob: -6.557843208312988
    6. 'res' → logprob: -9.432843208312988
    7. 'pieces' → logprob: -9.557843208312988
    8. 'formatted' → logprob: -9.682843208312988
    9. 'segments' → logprob: -11.307843208312988
    10. 'tokens' → logprob: -11.807843208312988

Token 1198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2881656885147095
    2. '=' → logprob: -1.5381656885147095
    3. '.append' → logprob: -3.78816556930542
    4. '=[]' → logprob: -4.41316556930542
    5. ':' → logprob: -8.038166046142578
    6. '[]' → logprob: -8.538166046142578
    7. '=[]
' → logprob: -9.038166046142578
    8. '.' → logprob: -10.038166046142578
    9. '   ' → logprob: -10.288166046142578
    10. '=[' → logprob: -10.913166046142578

Token 1199: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003178544342517853
    2. '[]
' → logprob: -5.753178596496582
    3. '[]

' → logprob: -14.753178596496582
    4. '[]"' → logprob: -15.503178596496582
    5. '[' → logprob: -16.003177642822266
    6. '[
' → logprob: -16.878177642822266
    7. ' []' → logprob: -17.878177642822266
    8. '[])' → logprob: -17.878177642822266
    9. '[]}' → logprob: -18.628177642822266
    10. '["' → logprob: -18.753177642822266

Token 1200: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16383841633796692
    2. '       ' → logprob: -1.9138383865356445
    3. ' for' → logprob: -5.6638383865356445
    4. '```' → logprob: -8.913838386535645
    5. '   ' → logprob: -12.788838386535645
    6. '`' → logprob: -14.913838386535645
    7. '``' → logprob: -14.913838386535645
    8. '	for' → logprob: -15.413838386535645
    9. '           ' → logprob: -16.16383934020996
    10. '
' → logprob: -16.91383934020996

Token 1201: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.203409844194539e-05
    2. '       ' → logprob: -10.250041961669922
    3. ' for' → logprob: -12.000041961669922
    4. '```' → logprob: -14.875041961669922
    5. 'prev' → logprob: -16.500041961669922
    6. 'last' → logprob: -18.125041961669922
    7. '``' → logprob: -18.500041961669922
    8. 'current' → logprob: -18.875041961669922
    9. '	for' → logprob: -19.750041961669922
    10. '#' → logprob: -20.125041961669922

Token 1202: ' value' (ID: 1432)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.010051179677248001
    2. 'value' → logprob: -4.760051250457764
    3. 'seg' → logprob: -7.260051250457764
    4. '(segment' → logprob: -7.385051250457764
    5. ' segment' → logprob: -9.635050773620605
    6. '(value' → logprob: -11.010050773620605
    7. 'val' → logprob: -11.385050773620605
    8. '(' → logprob: -11.510050773620605
    9. '(seg' → logprob: -11.885050773620605
    10. ' seg' → logprob: -14.510050773620605

Token 1203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008903791895136237
    2. ',value' → logprob: -7.125890254974365
    3. ',p' → logprob: -10.500890731811523
    4. ' ,' → logprob: -10.750890731811523
    5. ',v' → logprob: -11.375890731811523
    6. 'in' → logprob: -12.250890731811523
    7. ',
' → logprob: -12.625890731811523
    8. ',val' → logprob: -12.875890731811523
    9. '_,' → logprob: -13.500890731811523
    10. ',in' → logprob: -13.750890731811523

Token 1204: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0032379592303186655
    2. 'unit' → logprob: -6.253237724304199
    3. 'p' → logprob: -6.753237724304199
    4. 'pow' → logprob: -9.2532377243042
    5. ' power' → logprob: -10.0032377243042
    6. 'pw' → logprob: -16.378238677978516
    7. ' unit' → logprob: -16.503238677978516
    8. ' p' → logprob: -17.003238677978516
    9. 'powers' → logprob: -17.378238677978516
    10. '   ' → logprob: -17.628238677978516

Token 1205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021423548460007
    2. 'in' → logprob: -2.3502142429351807
    3. ',' → logprob: -13.100214004516602
    4. '       ' → logprob: -13.475214004516602
    5. '        ' → logprob: -13.850214004516602
    6. '_in' → logprob: -13.975214004516602
    7. '	in' → logprob: -14.600214004516602
    8. '           ' → logprob: -14.850214004516602
    9. '```' → logprob: -15.350214004516602
    10. ' ' → logprob: -15.350214004516602

Token 1206: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005943018011748791
    2. ' self' → logprob: -5.1309428215026855
    3. '(self' → logprob: -12.005943298339844
    4. '       ' → logprob: -12.130943298339844
    5. '   ' → logprob: -14.255943298339844
    6. 'segments' → logprob: -14.380943298339844
    7. '[self' → logprob: -14.380943298339844
    8. '           ' → logprob: -14.755943298339844
    9. '	self' → logprob: -16.005943298339844
    10. 'parts' → logprob: -16.505943298339844

Token 1207: '.se' (ID: 5877)
  Prédit: '.unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.001419876585714519
    2. '.se' → logprob: -7.001420021057129
    3. 'unit' → logprob: -7.626420021057129
    4. '.units' → logprob: -11.501420021057129
    5. '.segment' → logprob: -11.626420021057129
    6. 'segments' → logprob: -14.626420021057129
    7. '._' → logprob: -15.376420021057129
    8. '.s' → logprob: -15.751420021057129
    9. ' .' → logprob: -15.751420021057129
    10. '.' → logprob: -15.751420021057129

Token 1208: 'gments' (ID: 59025)
  Prédit: 'gments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gments' → logprob: -2.248469718324486e-05
    2. 'g' → logprob: -11.500022888183594
    3. 'gements' → logprob: -12.500022888183594
    4. 'gment' → logprob: -12.625022888183594
    5. 'ments' → logprob: -13.000022888183594
    6. '```' → logprob: -14.125022888183594
    7. 'segments' → logprob: -14.625022888183594
    8. 'gs' → logprob: -14.750022888183594
    9. 'gm' → logprob: -15.000022888183594
    10. '__' → logprob: -15.500022888183594

Token 1209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07203708589076996
    2. ':
' → logprob: -2.6970369815826416
    3. '           ' → logprob: -6.447037220001221
    4. '):
' → logprob: -7.947037220001221
    5. ',' → logprob: -10.197036743164062
    6. '):' → logprob: -10.572036743164062
    7. '       ' → logprob: -10.822036743164062
    8. '=' → logprob: -11.072036743164062
    9. '():
' → logprob: -11.072036743164062
    10. ' in' → logprob: -11.322036743164062

Token 1210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.35837464465294e-05
    2. 'if' → logprob: -11.000043869018555
    3. ' if' → logprob: -11.125043869018555
    4. '	       ' → logprob: -12.250043869018555
    5. '```' → logprob: -12.875043869018555
    6. '   ' → logprob: -14.125043869018555
    7. '<|end|>' → logprob: -14.500043869018555
    8. '               ' → logprob: -14.500043869018555
    9. '<|end|>' → logprob: -14.500043869018555
    10. '          ' → logprob: -14.625043869018555

Token 1211: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17571642994880676
    2. '           ' → logprob: -1.9257164001464844
    3. ' if' → logprob: -4.175716400146484
    4. '               ' → logprob: -12.175716400146484
    5. '   ' → logprob: -13.675716400146484
    6. '	       ' → logprob: -14.050716400146484
    7. '```' → logprob: -14.550716400146484
    8. '	if' → logprob: -14.800716400146484
    9. ' ' → logprob: -15.300716400146484
    10. '		' → logprob: -15.800716400146484

Token 1212: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.20142211019992828
    2. ' value' → logprob: -1.701422095298767
    3. ' not' → logprob: -12.201421737670898
    4. '           ' → logprob: -13.076421737670898
    5. 'not' → logprob: -13.826421737670898
    6. '   ' → logprob: -14.826421737670898
    7. '0' → logprob: -16.5764217376709
    8. ' ' → logprob: -16.8264217376709
    9. '	value' → logprob: -16.8264217376709
    10. '               ' → logprob: -17.3264217376709

Token 1213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4788143038749695
    2. '==' → logprob: -0.9788143038749695
    3. '>' → logprob: -6.353814125061035
    4. ' !=' → logprob: -6.353814125061035
    5. '!=' → logprob: -7.103814125061035
    6. ' >' → logprob: -7.853814125061035
    7. '```' → logprob: -10.853814125061035
    8. '           ' → logprob: -12.103814125061035
    9. ')' → logprob: -12.978814125061035
    10. ':' → logprob: -13.103814125061035

Token 1214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '           ' → logprob: -19.500059127807617
    4. '=' → logprob: -20.625059127807617
    5. '۰' → logprob: -20.750059127807617
    6. '   ' → logprob: -20.875059127807617
    7. '<|end|>' → logprob: -21.000059127807617
    8. '>' → logprob: -21.375059127807617
    9. ')' → logprob: -21.500059127807617
    10. '```' → logprob: -21.625059127807617

Token 1215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.250003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '۰' → logprob: -20.750003814697266
    6. '>' → logprob: -21.375003814697266
    7. '=' → logprob: -21.625003814697266
    8. '       ' → logprob: -21.625003814697266
    9. '00' → logprob: -22.000003814697266
    10. '０' → logprob: -22.125003814697266

Token 1216: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016041524708271027
    2. ':' → logprob: -4.2660417556762695
    3. ':
' → logprob: -7.2660417556762695
    4. 'continue' → logprob: -7.5160417556762695
    5. ' continue' → logprob: -7.7660417556762695
    6. '           ' → logprob: -8.64104175567627
    7. ' or' → logprob: -11.89104175567627
    8. '_continue' → logprob: -12.51604175567627
    9. '                   ' → logprob: -12.64104175567627
    10. '	continue' → logprob: -12.76604175567627

Token 1217: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002470350591465831
    2. 'continue' → logprob: -8.50024700164795
    3. ' continue' → logprob: -10.25024700164795
    4. '           ' → logprob: -12.00024700164795
    5. '                   ' → logprob: -13.87524700164795
    6. '	           ' → logprob: -15.00024700164795
    7. '   ' → logprob: -15.37524700164795
    8. '       ' → logprob: -16.125247955322266
    9. '	continue' → logprob: -16.125247955322266
    10. '```' → logprob: -16.750247955322266

Token 1218: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.015069834887981415
    2. '               ' → logprob: -4.265069961547852
    3. ' continue' → logprob: -7.015069961547852
    4. '	continue' → logprob: -12.390069961547852
    5. '           ' → logprob: -13.515069961547852
    6. '_continue' → logprob: -13.890069961547852
    7. '                   ' → logprob: -14.890069961547852
    8. 'contin' → logprob: -15.140069961547852
    9. '```' → logprob: -15.515069961547852
    10. '   ' → logprob: -15.765069961547852

Token 1219: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012155943550169468
    2. ' parts' → logprob: -7.37621545791626
    3. '               ' → logprob: -8.626215934753418
    4. '            
' → logprob: -9.251215934753418
    5. '       ' → logprob: -9.501215934753418
    6. 'parts' → logprob: -9.751215934753418
    7. '<|end|>' → logprob: -10.001215934753418
    8. '(parts' → logprob: -10.501215934753418
    9. ')' → logprob: -11.001215934753418
    10. '          ' → logprob: -11.126215934753418

Token 1220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010778261348605156
    2. 'parts' → logprob: -7.501077651977539
    3. ' parts' → logprob: -7.626077651977539
    4. '               ' → logprob: -11.626077651977539
    5. '       ' → logprob: -11.751077651977539
    6. '            
' → logprob: -12.126077651977539
    7. '(parts' → logprob: -12.501077651977539
    8. 'part' → logprob: -13.126077651977539
    9. '          ' → logprob: -13.251077651977539
    10. 'tokens' → logprob: -13.501077651977539

Token 1221: ' unit' (ID: 7670)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8085051774978638
    2. 'parts' → logprob: -0.9335051774978638
    3. ' parts' → logprob: -2.683505058288574
    4. 'if' → logprob: -3.183505058288574
    5. ' if' → logprob: -3.558505058288574
    6. 'part' → logprob: -3.933505058288574
    7. ' part' → logprob: -6.183505058288574
    8. 'unit' (adapté à ' unit') → logprob: -7.808505058288574
    9. 'token' → logprob: -8.308505058288574
    10. 's' → logprob: -8.308505058288574

Token 1222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35154804587364197
    2. '=' → logprob: -1.2265480756759644
    3. '_str' → logprob: -5.851548194885254
    4. '_name' → logprob: -8.851548194885254
    5. 'str' → logprob: -10.851548194885254
    6. '=str' → logprob: -11.101548194885254
    7. '_string' → logprob: -11.601548194885254
    8. '```' → logprob: -12.101548194885254
    9. '='' → logprob: -12.726548194885254
    10. ',' → logprob: -12.726548194885254

Token 1223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000627610192168504
    2. ' self' → logprob: -7.375627517700195
    3. 'next' → logprob: -14.500627517700195
    4. '(self' → logprob: -14.750627517700195
    5. 'str' → logprob: -16.750627517700195
    6. '       ' → logprob: -18.000627517700195
    7. '[self' → logprob: -18.000627517700195
    8. '           ' → logprob: -18.125627517700195
    9. '''' → logprob: -18.625627517700195
    10. '   ' → logprob: -18.875627517700195

Token 1224: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.0011708177626132965
    2. 'unit' → logprob: -6.751170635223389
    3. '_unit' → logprob: -16.251171112060547
    4. '.user' → logprob: -16.251171112060547
    5. '.' → logprob: -16.376171112060547
    6. ' unit' → logprob: -16.751171112060547
    7. ' .' → logprob: -16.751171112060547
    8. '.system' → logprob: -17.126171112060547
    9. '	unit' → logprob: -17.251171112060547
    10. '._' → logprob: -18.001171112060547

Token 1225: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -0.004881604108959436
    2. ' =' → logprob: -5.504881381988525
    3. '.system' → logprob: -7.629881381988525
    4. 'system' → logprob: -8.879881858825684
    5. '._' → logprob: -9.754881858825684
    6. '=' → logprob: -9.879881858825684
    7. 'System' → logprob: -10.379881858825684
    8. 's' → logprob: -12.129881858825684
    9. '.name' → logprob: -12.129881858825684
    10. '.unit' → logprob: -12.379881858825684

Token 1226: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.005234594456851482
    2. 'get' → logprob: -5.380234718322754
    3. 'for' → logprob: -7.505234718322754
    4. '.' → logprob: -11.005234718322754
    5. '
' → logprob: -11.630234718322754
    6. '   ' → logprob: -11.755234718322754
    7. 'For' → logprob: -12.130234718322754
    8. '#get' → logprob: -12.130234718322754
    9. '_for' → logprob: -13.005234718322754
    10. '           ' → logprob: -13.130234718322754

Token 1227: '_unit' (ID: 33866)
  Prédit: '_unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unit' → logprob: -0.00028302724240347743
    2. '_for' → logprob: -8.375283241271973
    3. '```' → logprob: -10.875283241271973
    4. 'unit' → logprob: -11.250283241271973
    5. 'Unit' → logprob: -11.875283241271973
    6. '`' → logprob: -12.000283241271973
    7. 'for' → logprob: -12.875283241271973
    8. ''_' → logprob: -14.250283241271973
    9. 'For' → logprob: -14.750283241271973
    10. ')_' → logprob: -14.875283241271973

Token 1228: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.011772874742746353
    2. 'for' → logprob: -4.511773109436035
    3. 'For' → logprob: -8.136773109436035
    4. '('_' → logprob: -8.761773109436035
    5. ' for' → logprob: -9.386773109436035
    6. '(' → logprob: -9.761773109436035
    7. '('' → logprob: -10.386773109436035
    8. ''' → logprob: -10.886773109436035
    9. ')' → logprob: -11.261773109436035
    10. '   ' → logprob: -11.511773109436035

Token 1229: '_power' (ID: 51623)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.1003563329577446
    2. '_power' → logprob: -2.350356340408325
    3. '(power' → logprob: -9.225356101989746
    4. ' power' → logprob: -9.975356101989746
    5. 'pow' → logprob: -12.725356101989746
    6. 'Power' → logprob: -14.850356101989746
    7. 'powers' → logprob: -15.225356101989746
    8. '_pow' → logprob: -15.475356101989746
    9. '   ' → logprob: -15.600356101989746
    10. '`' → logprob: -15.725356101989746

Token 1230: '(power' (ID: 168790)
  Prédit: '(power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.0006566775846295059
    2. '(p' → logprob: -7.500656604766846
    3. '(' → logprob: -9.375657081604004
    4. '(pow' → logprob: -11.000657081604004
    5. 'power' → logprob: -13.375657081604004
    6. ' (' → logprob: -15.000657081604004
    7. '(
' → logprob: -15.750657081604004
    8. '(pop' → logprob: -16.250656127929688
    9. ' power' → logprob: -16.500656127929688
    10. '(payment' → logprob: -17.875656127929688

Token 1231: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02416192553937435
    2. ')' → logprob: -3.7741618156433105
    3. '           ' → logprob: -7.0241618156433105
    4. ')
' → logprob: -10.774162292480469
    5. ')`
' → logprob: -13.274162292480469
    6. ' )
' → logprob: -14.024162292480469
    7. ')

' → logprob: -14.524162292480469
    8. '       ' → logprob: -14.649162292480469
    9. '               ' → logprob: -15.149162292480469
    10. ')'
' → logprob: -15.274162292480469

Token 1232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.919942486798391e-05
    2. ' if' → logprob: -10.625059127807617
    3. 'if' → logprob: -11.250059127807617
    4. 'parts' → logprob: -11.625059127807617
    5. ' parts' → logprob: -11.625059127807617
    6. '               ' → logprob: -13.250059127807617
    7. '       ' → logprob: -14.125059127807617
    8. 'tokens' → logprob: -14.625059127807617
    9. '(parts' → logprob: -15.250059127807617
    10. '   ' → logprob: -16.250059127807617

Token 1233: ' if' (ID: 538)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.600469708442688
    2. 'if' (adapté à ' if') → logprob: -1.350469708442688
    3. ' if' → logprob: -2.2254695892333984
    4. '           ' → logprob: -3.1004695892333984
    5. ' parts' → logprob: -3.3504695892333984
    6. 'part' → logprob: -5.600469589233398
    7. ' part' → logprob: -8.725469589233398
    8. 's' → logprob: -8.975469589233398
    9. 'token' → logprob: -9.350469589233398
    10. ' s' → logprob: -10.475469589233398

Token 1234: ' power' (ID: 3470)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.6484463810920715
    2. 'value' → logprob: -1.0234463214874268
    3. 'power' → logprob: -2.1484463214874268
    4. ' value' → logprob: -7.523446559906006
    5. ' unit' → logprob: -8.023446083068848
    6. ' power' → logprob: -8.898446083068848
    7. 'not' → logprob: -9.398446083068848
    8. 'pow' → logprob: -11.273446083068848
    9. '(unit' → logprob: -12.898446083068848
    10. '   ' → logprob: -13.023446083068848

Token 1235: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9250558614730835
    2. ' >' → logprob: -1.1750558614730835
    3. ' !=' → logprob: -2.050055980682373
    4. ' ==' → logprob: -2.300055980682373
    5. '==' → logprob: -2.925055980682373
    6. '!=' → logprob: -4.425055980682373
    7. '           ' → logprob: -10.800055503845215
    8. '```' → logprob: -11.550055503845215
    9. '               ' → logprob: -11.675055503845215
    10. '0' → logprob: -12.175055503845215

Token 1236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '           ' → logprob: -17.75010871887207
    4. '=' → logprob: -18.00010871887207
    5. '```' → logprob: -18.12510871887207
    6. '   ' → logprob: -18.75010871887207
    7. '                   ' → logprob: -18.87510871887207
    8. '               ' → logprob: -19.62510871887207
    9. ' ' → logprob: -20.75010871887207
    10. '۰' → logprob: -20.87510871887207

Token 1237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '=' → logprob: -15.875015258789062
    4. '>' → logprob: -18.375015258789062
    5. '```' → logprob: -18.875015258789062
    6. '   ' → logprob: -19.125015258789062
    7. '۰' → logprob: -19.750015258789062
    8. '<|end|>' → logprob: -20.625015258789062
    9. '4' → logprob: -20.750015258789062
    10. ' ' → logprob: -21.125015258789062

Token 1238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7240743637084961
    2. '               ' → logprob: -0.7240743637084961
    3. ':
' → logprob: -3.974074363708496
    4. ' and' → logprob: -5.224074363708496
    5. 'and' → logprob: -6.224074363708496
    6. ' or' → logprob: -6.474074363708496
    7. '           ' → logprob: -6.474074363708496
    8. '==' → logprob: -8.224074363708496
    9. 'or' → logprob: -8.349074363708496
    10. '```' → logprob: -9.224074363708496

Token 1239: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003408263437449932
    2. ' parts' → logprob: -8.375340461730957
    3. 'parts' → logprob: -10.625340461730957
    4. '(parts' → logprob: -10.625340461730957
    5. '                   ' → logprob: -10.750340461730957
    6. '           ' → logprob: -11.125340461730957
    7. '```' → logprob: -11.750340461730957
    8. '   ' → logprob: -12.375340461730957
    9. '       ' → logprob: -13.000340461730957
    10. '{' → logprob: -13.250340461730957

Token 1240: ' #' (ID: 1069)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0003397535183466971
    2. ' parts' → logprob: -8.00033950805664
    3. '           ' → logprob: -13.37533950805664
    4. '                   ' → logprob: -14.37533950805664
    5. '               ' → logprob: -14.37533950805664
    6. 'part' → logprob: -14.50033950805664
    7. '(parts' → logprob: -14.75033950805664
    8. 'f' → logprob: -14.87533950805664
    9. '```' → logprob: -16.37533950805664
    10. 'str' → logprob: -16.75033950805664

Token 1241: ' no' (ID: 860)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.00023405285901390016
    2. ' parts' → logprob: -8.50023365020752
    3. '           ' → logprob: -10.87523365020752
    4. 'part' → logprob: -11.62523365020752
    5. '               ' → logprob: -14.00023365020752
    6. '                   ' → logprob: -14.37523365020752
    7. '#' → logprob: -14.50023365020752
    8. '(parts' → logprob: -15.00023365020752
    9. '   ' → logprob: -16.125234603881836
    10. '_parts' → logprob: -16.625234603881836

Token 1242: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.12704706192016602
    2. ' unit' → logprob: -2.127047061920166
    3. 'str' → logprob: -10.002046585083008
    4. 'suffix' → logprob: -11.002046585083008
    5. '(unit' → logprob: -11.127046585083008
    6. '           ' → logprob: -11.502046585083008
    7. '_unit' → logprob: -11.877046585083008
    8. '```' → logprob: -12.252046585083008
    9. 'append' → logprob: -12.627046585083008
    10. '-unit' → logprob: -13.002046585083008

Token 1243: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9743117094039917
    2. ':
' → logprob: -1.3493117094039917
    3. '           ' → logprob: -1.7243117094039917
    4. '
' → logprob: -2.3493118286132812
    5. ':' → logprob: -2.8493118286132812
    6. '(parts' → logprob: -4.599311828613281
    7. ' parts' → logprob: -5.349311828613281
    8. 'parts' → logprob: -5.974311828613281
    9. '""' → logprob: -6.349311828613281
    10. ' =' → logprob: -6.599311828613281

Token 1244: ' smallest' (ID: 42173)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.03585899621248245
    2. 'value' → logprob: -3.9108591079711914
    3. 'the' → logprob: -5.160859107971191
    4. ''' → logprob: -5.535859107971191
    5. '""' → logprob: -6.785859107971191
    6. ' ''' → logprob: -6.785859107971191
    7. '''
' → logprob: -6.910859107971191
    8. 'segment' → logprob: -7.160859107971191
    9. ''value' → logprob: -7.410859107971191
    10. 'str' → logprob: -8.660859107971191

Token 1245: ' segment' (ID: 14806)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -1.1949235200881958
    2. ' unit' → logprob: -1.3199235200881958
    3. ' value' → logprob: -2.3199234008789062
    4. 'value' → logprob: -2.4449234008789062
    5. 'segment' → logprob: -2.4449234008789062
    6. ' segment' → logprob: -2.6949234008789062
    7. ' 
' → logprob: -4.194923400878906
    8. '           ' → logprob: -4.444923400878906
    9. '            
' → logprob: -4.819923400878906
    10. '               ' → logprob: -5.069923400878906

Token 1246: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04380630701780319
    2. '           ' → logprob: -3.793806314468384
    3. 'parts' → logprob: -5.168806076049805
    4. '(parts' → logprob: -5.293806076049805
    5. ' parts' → logprob: -5.418806076049805
    6. ':
' → logprob: -6.168806076049805
    7. '                   ' → logprob: -6.668806076049805
    8. ':' → logprob: -6.918806076049805
    9. '):
' → logprob: -8.543806076049805
    10. ',' → logprob: -9.043806076049805

Token 1247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.453752338886261
    2. 'parts' → logprob: -1.2037522792816162
    3. ' parts' → logprob: -3.203752279281616
    4. '           ' → logprob: -4.328752517700195
    5. '(parts' → logprob: -5.078752517700195
    6. '                   ' → logprob: -6.578752517700195
    7. 'tokens' → logprob: -6.953752517700195
    8. '```' → logprob: -7.078752517700195
    9. '{' → logprob: -8.453752517700195
    10. '.parts' → logprob: -8.703752517700195

Token 1248: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.008176463656127453
    2. ' parts' → logprob: -4.883176326751709
    3. '                   ' → logprob: -8.133176803588867
    4. '               ' → logprob: -9.008176803588867
    5. '           ' → logprob: -9.133176803588867
    6. 'part' → logprob: -10.758176803588867
    7. '(parts' → logprob: -11.258176803588867
    8. '                       ' → logprob: -12.383176803588867
    9. '   ' → logprob: -12.883176803588867
    10. '_parts' → logprob: -13.258176803588867

Token 1249: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.250001907348633
    3. 'append' → logprob: -14.750001907348633
    4. ' .' → logprob: -18.000001907348633
    5. '.app' → logprob: -19.500001907348633
    6. '.extend' → logprob: -20.375001907348633
    7. '_append' → logprob: -20.875001907348633
    8. '.ap' → logprob: -21.250001907348633
    9. ' append' → logprob: -21.375001907348633
    10. '           ' → logprob: -21.500001907348633

Token 1250: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00821489654481411
    2. 'f' → logprob: -5.008214950561523
    3. '(str' → logprob: -6.508214950561523
    4. '(f' → logprob: -12.008214950561523
    5. ' str' → logprob: -14.008214950561523
    6. '=str' → logprob: -16.008214950561523
    7. '	str' → logprob: -16.258214950561523
    8. '[str' → logprob: -16.383214950561523
    9. ' f' → logprob: -18.258214950561523
    10. '           ' → logprob: -18.258214950561523

Token 1251: '(value' (ID: 6333)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5760025978088379
    2. '(value' → logprob: -0.8260025978088379
    3. ')value' → logprob: -10.20100212097168
    4. ' value' → logprob: -10.95100212097168
    5. ')' → logprob: -11.95100212097168
    6. '"value' → logprob: -14.57600212097168
    7. '(' → logprob: -15.07600212097168
    8. '=value' → logprob: -15.20100212097168
    9. ''value' → logprob: -15.20100212097168
    10. '[value' → logprob: -15.20100212097168

Token 1252: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03235079348087311
    2. ')' → logprob: -3.532350778579712
    3. '))
' → logprob: -6.032351016998291
    4. '           ' → logprob: -8.907350540161133
    5. ')+' → logprob: -10.282350540161133
    6. '               ' → logprob: -11.657350540161133
    7. ')
' → logprob: -11.782350540161133
    8. '+' → logprob: -12.532350540161133
    9. ' ))' → logprob: -13.282350540161133
    10. ')))' → logprob: -13.532350540161133

Token 1253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032068457221612334
    2. 'else' → logprob: -8.125320434570312
    3. '               ' → logprob: -11.000320434570312
    4. ' else' → logprob: -12.500320434570312
    5. 'elif' → logprob: -13.375320434570312
    6. 'continue' → logprob: -13.750320434570312
    7. '       ' → logprob: -14.250320434570312
    8. '
' → logprob: -15.125320434570312
    9. 'return' → logprob: -15.500320434570312
    10. '```' → logprob: -15.625320434570312

Token 1254: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2018083781003952
    2. 'else' (adapté à ' else') → logprob: -1.7018083333969116
    3. ' else' → logprob: -7.951808452606201
    4. 'elif' → logprob: -10.076807975769043
    5. '       ' → logprob: -15.076807975769043
    6. '		' → logprob: -15.451807975769043
    7. '               ' → logprob: -15.701807975769043
    8. ' elif' → logprob: -15.826807975769043
    9. '          ' → logprob: -16.20180892944336
    10. '   ' → logprob: -16.95180892944336

Token 1255: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09622885286808014
    2. ':
' → logprob: -2.971228837966919
    3. '           ' → logprob: -3.971228837966919
    4. 'parts' → logprob: -4.221229076385498
    5. ' parts' → logprob: -5.471229076385498
    6. ':' → logprob: -6.221229076385498
    7. '(parts' → logprob: -7.846229076385498
    8. '              ' → logprob: -9.72122859954834
    9. '```' → logprob: -9.97122859954834
    10. '            ' → logprob: -10.22122859954834

Token 1256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003542813006788492
    2. 'parts' → logprob: -6.128542900085449
    3. ' parts' → logprob: -6.628542900085449
    4. '   ' → logprob: -11.37854290008545
    5. '           ' → logprob: -11.37854290008545
    6. '(parts' → logprob: -12.25354290008545
    7. '              ' → logprob: -13.50354290008545
    8. ' ' → logprob: -13.50354290008545
    9. '	           ' → logprob: -13.62854290008545
    10. '                   ' → logprob: -14.00354290008545

Token 1257: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.0017108784522861242
    2. ' parts' → logprob: -6.626710891723633
    3. '               ' → logprob: -8.501710891723633
    4. '           ' → logprob: -8.626710891723633
    5. '   ' → logprob: -13.751710891723633
    6. '(parts' → logprob: -14.001710891723633
    7. '                   ' → logprob: -15.001710891723633
    8. '.parts' → logprob: -16.126710891723633
    9. '_parts' → logprob: -16.751710891723633
    10. '       ' → logprob: -17.001710891723633

Token 1258: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.25
    3. 'append' → logprob: -16.5
    4. '[-' → logprob: -17.375
    5. ' .' → logprob: -18.125
    6. '.extend' → logprob: -19.5
    7. '
' → logprob: -20.5
    8. '   ' → logprob: -20.625
    9. '.app' → logprob: -20.625
    10. '.
' → logprob: -21.25

Token 1259: '(f' (ID: 1526)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0015034328680485487
    2. 'str' → logprob: -6.5015034675598145
    3. ' f' → logprob: -14.251502990722656
    4. '(f' → logprob: -15.126502990722656
    5. '   ' → logprob: -16.126502990722656
    6. '       ' → logprob: -17.001502990722656
    7. '           ' → logprob: -18.251502990722656
    8. '(str' → logprob: -18.251502990722656
    9. '               ' → logprob: -19.626502990722656
    10. '	f' → logprob: -20.126502990722656

Token 1260: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.02861875668168068
    2. '{' → logprob: -3.778618812561035
    3. ''{' → logprob: -5.653618812561035
    4. 'f' → logprob: -6.403618812561035
    5. 'value' → logprob: -9.528618812561035
    6. '"' → logprob: -9.653618812561035
    7. 'str' → logprob: -9.903618812561035
    8. '"value' → logprob: -12.278618812561035
    9. '   ' → logprob: -13.528618812561035
    10. ' f' → logprob: -13.528618812561035

Token 1261: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -2.696889623621246e-06
    2. 'str' → logprob: -13.12500286102295
    3. ' value' → logprob: -14.25000286102295
    4. '(value' → logprob: -19.000001907348633
    5. ''value' → logprob: -20.000001907348633
    6. '{' → logprob: -20.125001907348633
    7. 'val' → logprob: -20.375001907348633
    8. '"value' → logprob: -20.500001907348633
    9. '.value' → logprob: -20.625001907348633
    10. '$value' → logprob: -20.625001907348633

Token 1262: '}{' (ID: 29124)
  Prédit: '}{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}{' → logprob: -0.0005563704180531204
    2. '}' → logprob: -7.500556468963623
    3. '{' → logprob: -12.750555992126465
    4. '}${' → logprob: -15.500555992126465
    5. ' }' → logprob: -16.75055694580078
    6. '}:{' → logprob: -18.12555694580078
    7. '   ' → logprob: -18.12555694580078
    8. 'd' → logprob: -18.25055694580078
    9. '},{' → logprob: -18.37555694580078
    10. '}{
' → logprob: -18.87555694580078

Token 1263: 'unit' (ID: 5400)
  Prédit: 'unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -1.3856492842023727e-06
    2. 'str' → logprob: -13.625000953674316
    3. ' unit' → logprob: -16.000001907348633
    4. '{' → logprob: -19.250001907348633
    5. '(unit' → logprob: -19.875001907348633
    6. '	unit' → logprob: -21.750001907348633
    7. '.unit' → logprob: -22.125001907348633
    8. 'units' → logprob: -22.625001907348633
    9. '}' → logprob: -22.875001907348633
    10. 'Unit' → logprob: -23.375001907348633

Token 1264: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.003501361235976219
    2. '.name' → logprob: -5.8785014152526855
    3. '}' → logprob: -7.5035014152526855
    4. '}")
' → logprob: -9.503500938415527
    5. 'name' → logprob: -10.003500938415527
    6. '}"' → logprob: -11.378500938415527
    7. '")' → logprob: -12.003500938415527
    8. '})' → logprob: -12.878500938415527
    9. 'str' → logprob: -13.128500938415527
    10. '}')' → logprob: -14.128500938415527

Token 1265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15963409841060638
    2. '           ' → logprob: -2.6596341133117676
    3. ')' → logprob: -3.4096341133117676
    4. '<|end|>' → logprob: -4.284634113311768
    5. '"' → logprob: -4.409634113311768
    6. '+' → logprob: -5.159634113311768
    7. 'return' → logprob: -5.659634113311768
    8. ''' → logprob: -5.784634113311768
    9. ' +' → logprob: -6.284634113311768
    10. ' )' → logprob: -7.409634113311768

Token 1266: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5455166101455688
    2. 'return' → logprob: -0.9205166101455688
    3. ' return' → logprob: -4.045516490936279
    4. '
' → logprob: -5.420516490936279
    5. '	return' → logprob: -9.420516967773438
    6. '           ' → logprob: -9.920516967773438
    7. '        
' → logprob: -10.545516967773438
    8. '   ' → logprob: -11.170516967773438
    9. '	' → logprob: -11.670516967773438
    10. ' 
' → logprob: -12.420516967773438

Token 1267: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2525666654109955
    2. ' not' → logprob: -1.5025666952133179
    3. 'parts' → logprob: -7.502566814422607
    4. 'len' → logprob: -9.62756633758545
    5. ' parts' → logprob: -11.12756633758545
    6. ' len' → logprob: -12.87756633758545
    7. '!' → logprob: -14.00256633758545
    8. ' ' → logprob: -14.50256633758545
    9. ' ' → logprob: -15.12756633758545
    10. '   ' → logprob: -15.50256633758545

Token 1268: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.006716674659401178
    2. ' parts' → logprob: -5.006716728210449
    3. '(parts' → logprob: -14.75671672821045
    4. ' ' → logprob: -15.13171672821045
    5. 'pieces' → logprob: -16.381715774536133
    6. '
' → logprob: -16.381715774536133
    7. '   ' → logprob: -16.756715774536133
    8. '_parts' → logprob: -16.756715774536133
    9. 'Parts' → logprob: -16.881715774536133
    10. 'part' → logprob: -17.256715774536133

Token 1269: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4807385504245758
    2. ':
' → logprob: -1.3557385206222534
    3. ':return' → logprob: -2.230738639831543
    4. 'return' → logprob: -4.480738639831543
    5. '.append' → logprob: -5.605738639831543
    6. '[' → logprob: -7.730738639831543
    7. '           ' → logprob: -7.980738639831543
    8. '   ' → logprob: -9.105738639831543
    9. 'parts' → logprob: -9.355738639831543
    10. '       ' → logprob: -9.355738639831543

Token 1270: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5784753561019897
    2. '           ' → logprob: -0.8284753561019897
    3. ' return' → logprob: -6.078475475311279
    4. '       ' → logprob: -8.453474998474121
    5. 'parts' → logprob: -11.703474998474121
    6. '{return' → logprob: -11.953474998474121
    7. '   ' → logprob: -12.203474998474121
    8. ' parts' → logprob: -13.453474998474121
    9. '	return' → logprob: -14.203474998474121
    10. '          ' → logprob: -14.203474998474121

Token 1271: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004617864731699228
    2. ' return' → logprob: -6.254617691040039
    3. '"' → logprob: -6.379617691040039
    4. 'parts' → logprob: -7.379617691040039
    5. ''' → logprob: -8.004617691040039
    6. '           ' → logprob: -10.754617691040039
    7. '       ' → logprob: -12.004617691040039
    8. ' parts' → logprob: -13.129617691040039
    9. '`' → logprob: -14.254617691040039
    10. '   ' → logprob: -14.379617691040039

Token 1272: ' number' (ID: 2086)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00042149791261181235
    2. 'parts' → logprob: -8.000421524047852
    3. ' return' → logprob: -9.500421524047852
    4. '       ' → logprob: -11.500421524047852
    5. '           ' → logprob: -14.750421524047852
    6. '#' → logprob: -15.000421524047852
    7. ' parts' → logprob: -15.625421524047852
    8. '   ' → logprob: -15.750421524047852
    9. '"' → logprob: -17.12542152404785
    10. 'Return' → logprob: -18.25042152404785

Token 1273: ' is' (ID: 382)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1335307359695435
    2. ' =' → logprob: -1.5085307359695435
    3. ''' → logprob: -2.008530616760254
    4. '=' → logprob: -2.008530616760254
    5. '"' → logprob: -2.258530616760254
    6. '0' → logprob: -3.383530616760254
    7. 'parts' → logprob: -3.633530616760254
    8. '.append' → logprob: -5.258530616760254
    9. ' return' → logprob: -5.633530616760254
    10. '
' → logprob: -5.758530616760254

Token 1274: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020914296328555793
    2. '"' → logprob: -8.500208854675293
    3. '           ' → logprob: -12.625208854675293
    4. ''' → logprob: -13.250208854675293
    5. ' ' → logprob: -15.500208854675293
    6. '   ' → logprob: -15.500208854675293
    7. '               ' → logprob: -16.50020980834961
    8. 'zero' → logprob: -16.50020980834961
    9. '       ' → logprob: -16.62520980834961
    10. '`' → logprob: -17.37520980834961

Token 1275: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1602047234773636
    2. '           ' → logprob: -2.1602046489715576
    3. '
' → logprob: -4.535204887390137
    4. 'parts' → logprob: -4.785204887390137
    5. '       ' → logprob: -5.035204887390137
    6. ':
' → logprob: -5.535204887390137
    7. ' return' → logprob: -6.285204887390137
    8. ' parts' → logprob: -7.535204887390137
    9. ':' → logprob: -8.535204887390137
    10. '(parts' → logprob: -8.910204887390137

Token 1276: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33370402455329895
    2. '           ' → logprob: -1.3337039947509766
    3. ' return' → logprob: -4.208703994750977
    4. '       ' → logprob: -5.333703994750977
    5. '
' → logprob: -7.708703994750977
    6. '   ' → logprob: -9.833703994750977
    7. '	return' → logprob: -12.083703994750977
    8. '{return' → logprob: -12.083703994750977
    9. ' parts' → logprob: -12.458703994750977
    10. '```' → logprob: -12.583703994750977

Token 1277: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08074086159467697
    2. '"' → logprob: -2.9557409286499023
    3. ''' → logprob: -3.9557409286499023
    4. 'parts' → logprob: -5.205740928649902
    5. ' return' → logprob: -7.455740928649902
    6. '           ' → logprob: -8.455740928649902
    7. '       ' → logprob: -9.580740928649902
    8. '`' → logprob: -11.455740928649902
    9. ' parts' → logprob: -11.705740928649902
    10. ' '' → logprob: -12.330740928649902

Token 1278: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06198202446103096
    2. ''' → logprob: -2.8119819164276123
    3. '`' → logprob: -11.811982154846191
    4. '0' → logprob: -12.186982154846191
    5. ' "' → logprob: -13.561982154846191
    6. ' '' → logprob: -14.811982154846191
    7. '   ' → logprob: -17.061981201171875
    8. '```' → logprob: -17.436981201171875
    9. '“' → logprob: -17.811981201171875
    10. '
' → logprob: -18.186981201171875

Token 1279: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9743012671824545e-05
    2. ''' → logprob: -10.875020027160645
    3. '"' → logprob: -15.000020027160645
    4. '０' → logprob: -15.375020027160645
    5. ' ' → logprob: -16.000019073486328
    6. '`' → logprob: -18.750019073486328
    7. '1' → logprob: -19.000019073486328
    8. '00' → logprob: -19.125019073486328
    9. '012' → logprob: -20.250019073486328
    10. '01' → logprob: -20.500019073486328

Token 1280: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0622134804725647
    2. ''
' → logprob: -2.81221342086792
    3. '')' → logprob: -8.562213897705078
    4. '0' → logprob: -10.437213897705078
    5. ''
' → logprob: -11.937213897705078
    6. '"' → logprob: -12.062213897705078
    7. ')' → logprob: -12.187213897705078
    8. '')
' → logprob: -13.062213897705078
    9. ')'' → logprob: -13.562213897705078
    10. ')'
' → logprob: -14.312213897705078

Token 1281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10079541802406311
    2. 'return' → logprob: -2.3507955074310303
    3. ' return' → logprob: -7.725795269012451
    4. '   ' → logprob: -9.47579574584961
    5. '	return' → logprob: -10.72579574584961
    6. '
' → logprob: -10.85079574584961
    7. '	' → logprob: -11.22579574584961
    8. '<|end|>' → logprob: -12.35079574584961
    9. '```' → logprob: -12.60079574584961
    10. '           ' → logprob: -12.85079574584961

Token 1282: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5863228440284729
    2. '       ' → logprob: -0.8363228440284729
    3. ' return' → logprob: -4.586322784423828
    4. '	return' → logprob: -9.836322784423828
    5. '
' → logprob: -10.336322784423828
    6. '   ' → logprob: -10.336322784423828
    7. '	' → logprob: -11.086322784423828
    8. '{return' → logprob: -13.711322784423828
    9. '           ' → logprob: -13.836322784423828
    10. ')return' → logprob: -13.961322784423828

Token 1283: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.011782770976424217
    2. ''' → logprob: -4.511782646179199
    3. '"' → logprob: -7.511782646179199
    4. ' ''.' → logprob: -8.8867826461792
    5. '''' → logprob: -10.0117826461792
    6. ''',' → logprob: -12.7617826461792
    7. '''
' → logprob: -13.7617826461792
    8. ' "".' → logprob: -14.7617826461792
    9. '','.' → logprob: -15.6367826461792
    10. ' ' → logprob: -15.6367826461792

Token 1284: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -8.2994620242971e-06
    2. '''.' → logprob: -12.125008583068848
    3. ''' → logprob: -13.500008583068848
    4. ' join' → logprob: -13.625008583068848
    5. '"' → logprob: -16.12500762939453
    6. '`' → logprob: -17.25000762939453
    7. '```' → logprob: -17.62500762939453
    8. 'j' → logprob: -17.62500762939453
    9. '.join' → logprob: -18.00000762939453
    10. 'empty' → logprob: -18.25000762939453

Token 1285: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -4.842555426876061e-06
    2. 'parts' → logprob: -12.250004768371582
    3. '(' → logprob: -17.6250057220459
    4. 'Parts' → logprob: -19.6250057220459
    5. '(part' → logprob: -19.7500057220459
    6. '_parts' → logprob: -20.2500057220459
    7. '(points' → logprob: -20.8750057220459
    8. '(p' → logprob: -21.0000057220459
    9. ' parts' → logprob: -21.1250057220459
    10. '.parts' → logprob: -21.2500057220459

Token 1286: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. ')
' → logprob: -11.750015258789062
    3. '       ' → logprob: -13.000015258789062
    4. '[' → logprob: -13.375015258789062
    5. '<|end|>' → logprob: -13.500015258789062
    6. '   ' → logprob: -14.500015258789062
    7. ')`' → logprob: -15.375015258789062
    8. '<|end|>' → logprob: -15.375015258789062
    9. ')return' → logprob: -16.000015258789062
    10. '}' → logprob: -16.625015258789062

Token 1287: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1288: ' J' (ID: 643)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -0.6759454607963562
    2. 'Number' → logprob: -1.050945520401001
    3. 'Large' → logprob: -2.300945520401001
    4. 'Test' → logprob: -4.050945281982422
    5. 'J' → logprob: -5.050945281982422
    6. 'Big' → logprob: -5.800945281982422
    7. 'Calculator' → logprob: -5.925945281982422
    8. 'Converter' → logprob: -6.425945281982422
    9. 'Formatter' → logprob: -6.800945281982422
    10. 'Counter' → logprob: -6.925945281982422

Token 1289: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.014195947907865047
    2. 'inko' → logprob: -4.764195919036865
    3. 'Ink' → logprob: -5.889195919036865
    4. '```' → logprob: -7.139195919036865
    5. 'inkgo' → logprob: -7.264195919036865
    6. 'in' → logprob: -7.639195919036865
    7. 'Large' → logprob: -8.389196395874023
    8. 'inkle' → logprob: -9.264196395874023
    9. 'inku' → logprob: -9.764196395874023
    10. '``' → logprob: -10.264196395874023

Token 1290: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.00010509284038562328
    2. 'ouk' → logprob: -9.500104904174805
    3. 'o' → logprob: -10.625104904174805
    4. 'oui' → logprob: -12.875104904174805
    5. 'oki' → logprob: -13.250104904174805
    6. 'ook' → logprob: -14.000104904174805
    7. 'oku' → logprob: -16.000104904174805
    8. 'kou' → logprob: -16.125104904174805
    9. 'u' → logprob: -16.625104904174805
    10. 'ous' → logprob: -16.750104904174805

Token 1291: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.02052624523639679
    2. 'Number' → logprob: -4.52052640914917
    3. 'Ki' → logprob: -5.27052640914917
    4. 'u' → logprob: -7.39552640914917
    5. 'Large' → logprob: -7.52052640914917
    6. 'uki' → logprob: -7.52052640914917
    7. 'class' → logprob: -7.52052640914917
    8. 'K' → logprob: -8.020525932312012
    9. 'Class' → logprob: -8.395525932312012
    10. '
' → logprob: -8.520525932312012

Token 1292: 'Formatter' (ID: 22956)
  Prédit: 'Large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Large' → logprob: -0.7674311995506287
    2. 'Formatter' → logprob: -1.1424312591552734
    3. 'Number' → logprob: -1.8924312591552734
    4. 'Converter' → logprob: -3.8924312591552734
    5. 'Format' → logprob: -4.267431259155273
    6. ':' → logprob: -4.392431259155273
    7. ':
' → logprob: -5.017431259155273
    8. 'Unit' → logprob: -5.267431259155273
    9. 'Parser' → logprob: -6.767431259155273
    10. 'Writer' → logprob: -7.267431259155273

Token 1293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014467834262177348
    2. ':
' → logprob: -6.751446723937988
    3. '<|end|>' → logprob: -9.376446723937988
    4. '():' → logprob: -9.876446723937988
    5. '(' → logprob: -10.001446723937988
    6. '```' → logprob: -11.126446723937988
    7. ':def' → logprob: -11.251446723937988
    8. '):' → logprob: -11.376446723937988
    9. 'def' → logprob: -11.876446723937988
    10. ' :' → logprob: -12.001446723937988

Token 1294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007409269921481609
    2. 'class' → logprob: -5.00740909576416
    3. '```' → logprob: -7.38240909576416
    4. ' class' → logprob: -10.75740909576416
    5. 'def' → logprob: -11.00740909576416
    6. ':' → logprob: -12.50740909576416
    7. '<|end|>' → logprob: -12.50740909576416
    8. '``' → logprob: -12.63240909576416
    9. '    
' → logprob: -12.75740909576416
    10. '
' → logprob: -13.00740909576416

Token 1295: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10656382888555527
    2. 'def' → logprob: -2.3565638065338135
    3. 'class' → logprob: -5.231564044952393
    4. ' def' → logprob: -7.481564044952393
    5. '```' → logprob: -7.856564044952393
    6. '	def' → logprob: -10.856563568115234
    7. '``' → logprob: -11.106563568115234
    8. '    
' → logprob: -13.356563568115234
    9. '    ' → logprob: -13.731563568115234
    10. '
' → logprob: -14.106563568115234

Token 1296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001650421996600926
    2. 'class' → logprob: -6.876650333404541
    3. '```' → logprob: -7.501650333404541
    4. 'def' → logprob: -11.0016508102417
    5. ':
' → logprob: -11.3766508102417
    6. ':' → logprob: -11.3766508102417
    7. '``' → logprob: -12.1266508102417
    8. '"""
' → logprob: -12.2516508102417
    9. '
' → logprob: -12.5016508102417
    10. '       ' → logprob: -13.1266508102417

Token 1297: ' Main' (ID: 7956)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02695777267217636
    2. 'def' → logprob: -4.276957988739014
    3. 'class' → logprob: -4.401957988739014
    4. '```' → logprob: -8.151957511901855
    5. ' def' → logprob: -9.151957511901855
    6. '"""
' → logprob: -10.776957511901855
    7. '"""' → logprob: -11.526957511901855
    8. ':' → logprob: -11.651957511901855
    9. '
' → logprob: -12.151957511901855
    10. '``' → logprob: -12.276957511901855

Token 1298: ' controller' (ID: 12220)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.009856310673058033
    2. ' class' → logprob: -4.884856224060059
    3. 'def' → logprob: -6.384856224060059
    4. '   ' → logprob: -8.134856224060059
    5. ' def' → logprob: -9.134856224060059
    6. ':' → logprob: -9.759856224060059
    7. ':
' → logprob: -10.384856224060059
    8. 'formatter' → logprob: -10.509856224060059
    9. '_formatter' → logprob: -11.759856224060059
    10. 'classmethod' → logprob: -11.759856224060059

Token 1299: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6098392605781555
    2. ':' → logprob: -1.1098392009735107
    3. ':
' → logprob: -2.2348392009735107
    4. '```' → logprob: -5.48483943939209
    5. ' for' → logprob: -5.60983943939209
    6. 'class' → logprob: -6.23483943939209
    7. 'def' → logprob: -6.35983943939209
    8. '():
' → logprob: -6.35983943939209
    9. 'for' → logprob: -6.85983943939209
    10. '<|end|>' → logprob: -6.98483943939209

Token 1300: ' that' (ID: 484)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6598374843597412
    2. '   ' → logprob: -1.1598374843597412
    3. ':' → logprob: -1.7848374843597412
    4. 'class' → logprob: -7.53483772277832
    5. '```' → logprob: -7.78483772277832
    6. '):
' → logprob: -8.78483772277832
    7. '<|end|>' → logprob: -9.03483772277832
    8. '<|end|>' → logprob: -9.28483772277832
    9. '
' → logprob: -9.40983772277832
    10. 'def' → logprob: -9.40983772277832

Token 1301: ' computes' (ID: 144619)
  Prédit: 'formats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'formats' → logprob: -0.0445084348320961
    2. 'provid' → logprob: -3.919508457183838
    3. ' formats' → logprob: -4.419508457183838
    4. 'def' → logprob: -5.669508457183838
    5. ' provides' → logprob: -5.794508457183838
    6. '   ' → logprob: -6.919508457183838
    7. '_formats' → logprob: -6.919508457183838
    8. '
' → logprob: -7.044508457183838
    9. ' def' → logprob: -7.669508457183838
    10. ' converts' → logprob: -8.29450798034668

Token 1302: ' m' (ID: 284)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.781690239906311
    2. 'the' → logprob: -1.031690239906311
    3. ' the' → logprob: -2.5316901206970215
    4. 'format' → logprob: -2.5316901206970215
    5. '   ' → logprob: -5.5316901206970215
    6. 'formats' → logprob: -5.5316901206970215
    7. '
' → logprob: -5.6566901206970215
    8. 'formatted' → logprob: -5.9066901206970215
    9. ' def' → logprob: -6.1566901206970215
    10. '```' → logprob: -6.6566901206970215

Token 1303: '^' (ID: 61)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.62007075548172
    2. 'ethod' → logprob: -1.2450706958770752
    3. 'def' → logprob: -2.120070695877075
    4. '=' → logprob: -4.495070934295654
    5. '   ' → logprob: -4.745070934295654
    6. 'ultiply' → logprob: -5.120070934295654
    7. ',' → logprob: -5.245070934295654
    8. 'a' → logprob: -5.620070934295654
    9. ' =' → logprob: -6.120070934295654
    10. 'ap' → logprob: -6.120070934295654

Token 1304: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37126168608665466
    2. 'e' → logprob: -1.246261715888977
    3. 'p' → logprob: -4.6212615966796875
    4. '2' → logprob: -5.9962615966796875
    5. 'k' → logprob: -5.9962615966796875
    6. '   ' → logprob: -6.2462615966796875
    7. ' n' → logprob: -6.7462615966796875
    8. '```' → logprob: -7.1212615966796875
    9. ' e' → logprob: -7.6212615966796875
    10. 'd' → logprob: -7.8712615966796875

Token 1305: ' and' (ID: 326)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7610489726066589
    2. ':' → logprob: -0.8860489726066589
    3. '(
' → logprob: -2.3860490322113037
    4. '**' → logprob: -4.386048793792725
    5. ':
' → logprob: -5.011048793792725
    6. '^' → logprob: -5.511048793792725
    7. '   ' → logprob: -6.636048793792725
    8. '_' → logprob: -7.261048793792725
    9. ' (' → logprob: -7.636048793792725
    10. ',' → logprob: -8.011049270629883

Token 1306: ' formats' (ID: 30694)
  Prédit: 'formats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formats' → logprob: -0.00036834771162830293
    2. ' formats' → logprob: -8.375368118286133
    3. 'returns' → logprob: -9.375368118286133
    4. 'format' → logprob: -10.625368118286133
    5. 'provid' → logprob: -10.750368118286133
    6. '   ' → logprob: -13.000368118286133
    7. 'then' → logprob: -13.375368118286133
    8. '_formats' → logprob: -14.000368118286133
    9. 'outputs' → logprob: -14.125368118286133
    10. 'renders' → logprob: -14.500368118286133

Token 1307: ' into' (ID: 1511)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5205845832824707
    2. '   ' → logprob: -1.5205845832824707
    3. 'self' → logprob: -2.7705845832824707
    4. '
' → logprob: -3.2705845832824707
    5. 'number' → logprob: -3.3955845832824707
    6. ' the' → logprob: -3.5205845832824707
    7. '(self' → logprob: -4.020584583282471
    8. '```' → logprob: -5.770584583282471
    9. 'def' → logprob: -7.645584583282471
    10. 'numbers' → logprob: -7.645584583282471

Token 1308: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.06385353207588196
    2. 'Large' → logprob: -2.9388535022735596
    3. 'the' → logprob: -5.438853740692139
    4. 'large' → logprob: -5.563853740692139
    5. 'a' → logprob: -7.938853740692139
    6. 'j' → logprob: -8.06385326385498
    7. 'string' → logprob: -9.93885326385498
    8. ' J' → logprob: -12.18885326385498
    9. '```' → logprob: -12.18885326385498
    10. '
' → logprob: -12.31385326385498

Token 1309: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.018433663994073868
    2. 'Large' → logprob: -4.393433570861816
    3. '_large' → logprob: -6.393433570861816
    4. '```' → logprob: -6.643433570861816
    5. 'large' → logprob: -7.018433570861816
    6. '`' → logprob: -8.268433570861816
    7. ' large' → logprob: -8.268433570861816
    8. '   ' → logprob: -8.393433570861816
    9. 'inko' → logprob: -8.768433570861816
    10. '``' → logprob: -9.018433570861816

Token 1310: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -4.36574100604048e-06
    2. 'o' → logprob: -13.625004768371582
    3. 'oki' → logprob: -13.625004768371582
    4. 'ouk' → logprob: -13.625004768371582
    5. '
' → logprob: -16.250003814697266
    6. '```' → logprob: -16.500003814697266
    7. '#' → logprob: -16.875003814697266
    8. '=' → logprob: -17.000003814697266
    9. '`' → logprob: -17.000003814697266
    10. '"' → logprob: -17.125003814697266

Token 1311: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -1.1279553291387856e-05
    2. 'Number' → logprob: -12.125011444091797
    3. 'k' → logprob: -14.000011444091797
    4. '
' → logprob: -14.375011444091797
    5. 'uki' → logprob: -14.500011444091797
    6. 'u' → logprob: -14.625011444091797
    7. '```' → logprob: -14.750011444091797
    8. 'oki' → logprob: -15.375011444091797
    9. ' ki' → logprob: -15.625011444091797
    10. '`' → logprob: -15.750011444091797

Token 1312: ' units' (ID: 13306)
  Prédit: 'Large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Large' → logprob: -1.1894813776016235
    2. 'style' → logprob: -1.5644813776016235
    3. ' style' → logprob: -2.064481258392334
    4. 'large' → logprob: -2.189481258392334
    5. ' large' → logprob: -2.564481258392334
    6. 'Number' → logprob: -2.689481258392334
    7. 'Style' → logprob: -3.064481258392334
    8. 'number' → logprob: -4.814481258392334
    9. '_style' → logprob: -5.189481258392334
    10. '
' → logprob: -5.189481258392334

Token 1313: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3918726444244385
    2. ':
' → logprob: -1.5168726444244385
    3. ':' → logprob: -2.2668726444244385
    4. '```' → logprob: -7.516872406005859
    5. '):
' → logprob: -8.39187240600586
    6. '():
' → logprob: -8.39187240600586
    7. '
' → logprob: -10.39187240600586
    8. '(' → logprob: -10.51687240600586
    9. '():' → logprob: -11.01687240600586
    10. 'with' → logprob: -11.26687240600586

Token 1314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012234434252604842
    2. '```' → logprob: -6.751223564147949
    3. 'class' → logprob: -10.37622356414795
    4. ':' → logprob: -12.25122356414795
    5. ')' → logprob: -12.37622356414795
    6. '
' → logprob: -12.62622356414795
    7. '``' → logprob: -13.00122356414795
    8. '    ' → logprob: -13.50122356414795
    9. 'def' → logprob: -13.62622356414795
    10. '    
' → logprob: -13.75122356414795

Token 1315: ' Designed' (ID: 53706)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003416607796680182
    2. ':' → logprob: -9.000341415405273
    3. 'def' → logprob: -9.250341415405273
    4. '```' → logprob: -9.750341415405273
    5. ':
' → logprob: -10.250341415405273
    6. '
' → logprob: -11.875341415405273
    7. ' def' → logprob: -12.000341415405273
    8. '(' → logprob: -12.125341415405273
    9. '):
' → logprob: -12.500341415405273
    10. 'class' → logprob: -13.750341415405273

Token 1316: ' with' (ID: 483)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.215974360704422
    2. 'to' → logprob: -2.3409743309020996
    3. '   ' → logprob: -2.5909743309020996
    4. 'for' → logprob: -4.3409743309021
    5. ' for' → logprob: -4.9659743309021
    6. 'def' → logprob: -6.7159743309021
    7. '```' → logprob: -6.9659743309021
    8. '
' → logprob: -7.2159743309021
    9. 'class' → logprob: -9.340974807739258
    10. '_to' → logprob: -10.715974807739258

Token 1317: ' extens' (ID: 34241)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1752376556396484
    2. 'methods' → logprob: -2.1752376556396484
    3. 'def' → logprob: -2.6752376556396484
    4. 'an' → logprob: -2.6752376556396484
    5. 'precision' → logprob: -2.8002376556396484
    6. 'the' → logprob: -2.9252376556396484
    7. 'static' → logprob: -3.1752376556396484
    8. 'large' → logprob: -3.6752376556396484
    9. 'minimal' → logprob: -3.8002376556396484
    10. 'staticmethod' → logprob: -3.8002376556396484

Token 1318: 'ibility' (ID: 4295)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.1319124698638916
    2. 'ed' → logprob: -2.1319124698638916
    3. 'ions' → logprob: -6.6319122314453125
    4. 'eded' → logprob: -6.6319122314453125
    5. 'e' → logprob: -6.8819122314453125
    6. '   ' → logprob: -7.3819122314453125
    7. 'class' → logprob: -8.631912231445312
    8. 'ibility' → logprob: -8.756912231445312
    9. 'def' → logprob: -8.756912231445312
    10. 'ible' → logprob: -9.631912231445312

Token 1319: ' for' (ID: 395)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.2495496273040771
    2. '   ' → logprob: -1.3745496273040771
    3. ' for' → logprob: -1.4995496273040771
    4. ':' → logprob: -2.124549627304077
    5. '
' → logprob: -3.124549627304077
    6. ' to' → logprob: -3.624549627304077
    7. ' and' → logprob: -3.874549627304077
    8. '):
' → logprob: -5.124549865722656
    9. '():
' → logprob: -5.374549865722656
    10. 'for' → logprob: -5.874549865722656

Token 1320: ' other' (ID: 1273)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.4775051772594452
    2. 'large' → logprob: -1.6025052070617676
    3. 'future' → logprob: -2.7275052070617676
    4. 'handling' → logprob: -3.9775052070617676
    5. 'possible' → logprob: -4.102505207061768
    6. 'additional' → logprob: -4.602505207061768
    7. 'support' → logprob: -4.727505207061768
    8. '   ' → logprob: -4.852505207061768
    9. 'var' → logprob: -5.102505207061768
    10. 'def' → logprob: -5.102505207061768

Token 1321: ' unit' (ID: 7670)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bases' → logprob: -0.5386756658554077
    2. 'number' → logprob: -2.1636757850646973
    3. 'ex' → logprob: -3.1636757850646973
    4. '   ' → logprob: -3.2886757850646973
    5. 'large' → logprob: -3.2886757850646973
    6. 'powers' → logprob: -3.2886757850646973
    7. '"""
' → logprob: -3.5386757850646973
    8. 'power' → logprob: -3.9136757850646973
    9. 'numbers' → logprob: -4.038675785064697
    10. 'methods' → logprob: -4.288675785064697

Token 1322: ' systems' (ID: 7511)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.037242092192173004
    2. 'systems' → logprob: -4.1622419357299805
    3. '   ' → logprob: -4.4122419357299805
    4. ' systems' → logprob: -5.2872419357299805
    5. 'def' → logprob: -6.9122419357299805
    6. '_system' → logprob: -7.1622419357299805
    7. '"""
' → logprob: -7.6622419357299805
    8. ' s' → logprob: -8.16224193572998
    9. '_s' → logprob: -8.53724193572998
    10. 'suffix' → logprob: -9.41224193572998

Token 1323: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012180665507912636
    2. ':
' → logprob: -4.637180805206299
    3. ':' → logprob: -6.137180805206299
    4. '
' → logprob: -9.76218032836914
    5. '```' → logprob: -9.76218032836914
    6. '):
' → logprob: -9.88718032836914
    7. 'def' → logprob: -10.13718032836914
    8. '(' → logprob: -11.01218032836914
    9. '():
' → logprob: -11.38718032836914
    10. ' def' → logprob: -12.26218032836914

Token 1324: ' output' (ID: 4733)
  Prédit: 'formats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'formats' → logprob: -1.1706098318099976
    2. 'number' → logprob: -1.2956098318099976
    3. 'large' → logprob: -1.4206098318099976
    4. 'format' → logprob: -2.920609951019287
    5. 'represent' → logprob: -3.670609951019287
    6. 'calcul' → logprob: -3.795609951019287
    7. '   ' → logprob: -4.795609951019287
    8. 'custom' → logprob: -4.920609951019287
    9. 'numbers' → logprob: -4.920609951019287
    10. 'output' → logprob: -5.045609951019287

Token 1325: ' formats' (ID: 30694)
  Prédit: 'formats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formats' → logprob: -0.09149044007062912
    2. '_formats' → logprob: -3.3414905071258545
    3. ' formats' → logprob: -4.341490268707275
    4. 'format' → logprob: -4.466490268707275
    5. 'methods' → logprob: -4.466490268707275
    6. '_format' → logprob: -5.091490268707275
    7. '   ' → logprob: -5.216490268707275
    8. 's' → logprob: -7.216490268707275
    9. ' formatting' → logprob: -7.341490268707275
    10. 'styles' → logprob: -7.966490268707275

Token 1326: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19176961481571198
    2. ':
' → logprob: -2.066769599914551
    3. ':' → logprob: -3.191769599914551
    4. '```' → logprob: -5.191769599914551
    5. '):
' → logprob: -7.441769599914551
    6. 'class' → logprob: -8.69176959991455
    7. '
' → logprob: -8.94176959991455
    8. '():
' → logprob: -8.94176959991455
    9. '.' → logprob: -10.06676959991455
    10. ',' → logprob: -10.06676959991455

Token 1327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011164903844473884
    2. '```' → logprob: -9.62511157989502
    3. '
' → logprob: -11.37511157989502
    4. 'class' → logprob: -11.37511157989502
    5. '    
' → logprob: -11.87511157989502
    6. 'def' → logprob: -12.62511157989502
    7. ')' → logprob: -12.87511157989502
    8. ':' → logprob: -13.00011157989502
    9. '):
' → logprob: -13.50011157989502
    10. '    ' → logprob: -13.75011157989502

Token 1328: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007536433404311538
    2. 'def' → logprob: -7.625753879547119
    3. ':' → logprob: -9.625753402709961
    4. ' def' → logprob: -9.750753402709961
    5. '```' → logprob: -10.000753402709961
    6. ':
' → logprob: -10.125753402709961
    7. '):
' → logprob: -10.750753402709961
    8. '
' → logprob: -11.500753402709961
    9. '	def' → logprob: -11.750753402709961
    10. 'class' → logprob: -12.125753402709961

Token 1329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004332914482802153
    2. 'def' → logprob: -6.129333019256592
    3. '```' → logprob: -6.254333019256592
    4. 'class' → logprob: -9.004332542419434
    5. ' def' → logprob: -9.254332542419434
    6. '	def' → logprob: -13.629332542419434
    7. '    ' → logprob: -14.254332542419434
    8. ' class' → logprob: -14.504332542419434
    9. '``' → logprob: -14.754332542419434
    10. ' ' → logprob: -14.754332542419434

Token 1330: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00748795410618186
    2. ' def' → logprob: -5.257487773895264
    3. '   ' → logprob: -6.132487773895264
    4. 'class' → logprob: -10.382488250732422
    5. '```' → logprob: -10.382488250732422
    6. '__' → logprob: -11.132488250732422
    7. '
' → logprob: -13.007488250732422
    8. '	def' → logprob: -14.507488250732422
    9. ' __' → logprob: -14.757488250732422
    10. ' ' → logprob: -15.257488250732422

Token 1331: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.13765187561511993
    2. '__' → logprob: -2.1376519203186035
    3. '_init' → logprob: -4.6376519203186035
    4. 'def' → logprob: -7.0126519203186035
    5. ' __' → logprob: -9.637651443481445
    6. '`' → logprob: -11.887651443481445
    7. '```' → logprob: -12.637651443481445
    8. '\' → logprob: -13.512651443481445
    9. 'compute' → logprob: -13.637651443481445
    10. '_' → logprob: -13.762651443481445

Token 1332: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -17.625
    3. ' init' → logprob: -18.125
    4. '```' → logprob: -18.875
    5. 'def' → logprob: -21.5
    6. '`' → logprob: -22.125
    7. 'int' → logprob: -22.25
    8. '.init' → logprob: -22.375
    9. '__' → logprob: -22.375
    10. '	init' → logprob: -22.5

Token 1333: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4383081793785095
    2. '(self' → logprob: -1.0633082389831543
    3. '__(
' → logprob: -5.063308238983154
    4. '(' → logprob: -6.688308238983154
    5. '   ' → logprob: -7.063308238983154
    6. ' (' → logprob: -8.063307762145996
    7. 'self' → logprob: -8.063307762145996
    8. '__' → logprob: -8.188307762145996
    9. '(
' → logprob: -9.938307762145996
    10. '_(' → logprob: -10.313307762145996

Token 1334: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011796683247666806
    2. ' self' → logprob: -9.500118255615234
    3. ')' → logprob: -10.750118255615234
    4. '   ' → logprob: -11.750118255615234
    5. '
' → logprob: -12.250118255615234
    6. 'unit' → logprob: -12.875118255615234
    7. 'm' → logprob: -13.125118255615234
    8. '0' → logprob: -13.250118255615234
    9. '(self' → logprob: -13.875118255615234
    10. 'number' → logprob: -14.875118255615234

Token 1335: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14310379326343536
    2. 'self' → logprob: -2.268103837966919
    3. '(self' → logprob: -3.893103837966919
    4. '   ' → logprob: -5.76810359954834
    5. '):
' → logprob: -5.76810359954834
    6. ')' → logprob: -7.64310359954834
    7. '):' → logprob: -7.89310359954834
    8. '(number' → logprob: -7.89310359954834
    9. 'def' → logprob: -8.01810359954834
    10. ',
' → logprob: -8.14310359954834

Token 1336: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004098585341125727
    2. '       ' → logprob: -6.129098415374756
    3. ' self' → logprob: -6.754098415374756
    4. '   ' → logprob: -7.254098415374756
    5. '(self' → logprob: -10.504098892211914
    6. '```' → logprob: -12.379098892211914
    7. 'def' → logprob: -13.129098892211914
    8. '
' → logprob: -13.504098892211914
    9. '	self' → logprob: -14.004098892211914
    10. ' ' → logprob: -14.254098892211914

Token 1337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5760149955749512
    2. '       ' → logprob: -0.8260149955749512
    3. ' self' → logprob: -9.82601547241211
    4. 'def' → logprob: -11.57601547241211
    5. '   ' → logprob: -12.07601547241211
    6. '(self' → logprob: -13.07601547241211
    7. '
' → logprob: -13.45101547241211
    8. 'Unit' → logprob: -13.70101547241211
    9. '```' → logprob: -13.82601547241211
    10. 'unit' → logprob: -15.20101547241211

Token 1338: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.0003811025235336274
    2. 'unit' → logprob: -8.000381469726562
    3. '.number' → logprob: -10.125381469726562
    4. '._' → logprob: -13.000381469726562
    5. '.units' → logprob: -13.125381469726562
    6. '.large' → logprob: -15.375381469726562
    7. '.value' → logprob: -15.500381469726562
    8. 'number' → logprob: -16.000381469726562
    9. '_unit' → logprob: -16.250381469726562
    10. '.Unit' → logprob: -16.250381469726562

Token 1339: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -6.098748053773306e-05
    2. 'System' → logprob: -9.75006103515625
    3. 'system' → logprob: -12.87506103515625
    4. 'SYSTEM' → logprob: -16.87506103515625
    5. '_SYSTEM' → logprob: -18.25006103515625
    6. 'ssystem' → logprob: -19.00006103515625
    7. '_System' → logprob: -19.50006103515625
    8. '系统' → logprob: -19.75006103515625
    9. 's' → logprob: -20.00006103515625
    10. ' system' → logprob: -20.25006103515625

Token 1340: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048590321093797684
    2. ' =' → logprob: -3.0485904216766357
    3. ':' → logprob: -13.423590660095215
    4. '=self' → logprob: -14.923590660095215
    5. '       ' → logprob: -15.173590660095215
    6. '   ' → logprob: -15.298590660095215
    7. '=
' → logprob: -15.423590660095215
    8. '=None' → logprob: -15.798590660095215
    9. ')' → logprob: -16.1735897064209
    10. '<|end|>' → logprob: -16.7985897064209

Token 1341: ' Unit' (ID: 14856)
  Prédit: 'Unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unit' → logprob: -4.320199877838604e-07
    2. ' Unit' → logprob: -14.75
    3. 'unit' → logprob: -20.875
    4. '(Unit' → logprob: -23.125
    5. '<Unit' → logprob: -23.5
    6. '_unit' → logprob: -25.625
    7. '   ' → logprob: -26.25
    8. '.Unit' → logprob: -26.25
    9. 'UNIT' → logprob: -26.75
    10. 'User' → logprob: -27.625

Token 1342: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: 0.0
    2. 'system' → logprob: -18.125
    3. '_system' → logprob: -18.375
    4. ' System' → logprob: -19.625
    5. 'Systems' → logprob: -21.0
    6. '_System' → logprob: -22.0
    7. 'ystem' → logprob: -22.625
    8. '_SYSTEM' → logprob: -23.125
    9. 'Sys' → logprob: -23.375
    10. '<System' → logprob: -23.625

Token 1343: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01765839196741581
    2. '
' → logprob: -4.517658233642578
    3. '<|end|>' → logprob: -5.642658233642578
    4. '    
' → logprob: -6.517658233642578
    5. 'def' → logprob: -7.392658233642578
    6. '```' → logprob: -8.017658233642578
    7. '<|end|>' → logprob: -8.392658233642578
    8. '       ' → logprob: -9.517658233642578
    9. ' def' → logprob: -9.517658233642578
    10. ')' → logprob: -10.267658233642578

Token 1344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026877112686634064
    2. 'def' → logprob: -3.6518771648406982
    3. ' def' → logprob: -8.151877403259277
    4. '```' → logprob: -8.276877403259277
    5. '
' → logprob: -10.526877403259277
    6. 'import' → logprob: -12.651877403259277
    7. '       ' → logprob: -13.401877403259277
    8. '	def' → logprob: -14.276877403259277
    9. 'from' → logprob: -14.401877403259277
    10. '`' → logprob: -14.901877403259277

Token 1345: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.836499985889532e-05
    2. ' def' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.125059127807617
    4. '```' → logprob: -19.375059127807617
    5. 'class' → logprob: -21.250059127807617
    6. '
' → logprob: -21.625059127807617
    7. '@' → logprob: -21.625059127807617
    8. '	def' → logprob: -22.625059127807617
    9. 'from' → logprob: -22.875059127807617
    10. 'import' → logprob: -22.875059127807617

Token 1346: ' compute' (ID: 23864)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.13333803415298462
    2. 'compute' → logprob: -2.13333797454834
    3. 'pow' → logprob: -5.88333797454834
    4. 'calculate' → logprob: -5.88333797454834
    5. 'power' → logprob: -7.13333797454834
    6. 'raise' → logprob: -11.63333797454834
    7. ' format' → logprob: -11.75833797454834
    8. ' compute' → logprob: -13.00833797454834
    9. '_format' → logprob: -14.63333797454834
    10. 'calc' → logprob: -14.75833797454834

Token 1347: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.13487140834331512
    2. '(self' → logprob: -2.384871482849121
    3. '_pow' → logprob: -3.509871482849121
    4. '_m' → logprob: -6.509871482849121
    5. '(' → logprob: -6.884871482849121
    6. '_' → logprob: -7.009871482849121
    7. '_value' → logprob: -8.009871482849121
    8. '_exp' → logprob: -9.259871482849121
    9. '_result' → logprob: -9.384871482849121
    10. '_base' → logprob: -10.384871482849121

Token 1348: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16193941235542297
    2. '(self' → logprob: -1.9119393825531006
    3. '(
' → logprob: -6.41193962097168
    4. ' (' → logprob: -9.91193962097168
    5. 'self' → logprob: -12.41193962097168
    6. '(

' → logprob: -12.53693962097168
    7. '   ' → logprob: -12.66193962097168
    8. '       ' → logprob: -12.91193962097168
    9. '_(' → logprob: -13.03693962097168
    10. '_' → logprob: -13.16193962097168

Token 1349: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12901990115642548
    2. '(self' → logprob: -2.2540199756622314
    3. '(
' → logprob: -5.004019737243652
    4. ' (' → logprob: -5.379019737243652
    5. ')' → logprob: -5.629019737243652
    6. ',' → logprob: -7.754019737243652
    7. '   ' → logprob: -8.379019737243652
    8. ')(' → logprob: -9.129019737243652
    9. ')(
' → logprob: -9.629019737243652
    10. '       ' → logprob: -9.629019737243652

Token 1350: ' base' (ID: 3611)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00987980142235756
    2. 'base' → logprob: -4.7598795890808105
    3. 'self' → logprob: -6.7598795890808105
    4. ' m' → logprob: -9.634880065917969
    5. '       ' → logprob: -11.384880065917969
    6. ' base' → logprob: -11.509880065917969
    7. '   ' → logprob: -11.509880065917969
    8. ')' → logprob: -12.259880065917969
    9. ')m' → logprob: -13.634880065917969
    10. '           ' → logprob: -14.259880065917969

Token 1351: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08878906071186066
    2. '=' → logprob: -3.5887889862060547
    3. ':' → logprob: -3.9637889862060547
    4. '**' → logprob: -4.213788986206055
    5. '):' → logprob: -4.963788986206055
    6. ' ,' → logprob: -5.213788986206055
    7. '   ' → logprob: -5.838788986206055
    8. ')' → logprob: -6.088788986206055
    9. '):
' → logprob: -6.338788986206055
    10. ' **' → logprob: -6.463788986206055

Token 1352: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0436822734773159
    2. ' int' → logprob: -3.168682336807251
    3. ')' → logprob: -8.043682098388672
    4. '2' → logprob: -9.668682098388672
    5. '10' → logprob: -9.668682098388672
    6. ' ' → logprob: -10.168682098388672
    7. ':int' → logprob: -10.293682098388672
    8. 'self' → logprob: -10.418682098388672
    9. ' )' → logprob: -10.668682098388672
    10. '<int' → logprob: -11.168682098388672

Token 1353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016206118743866682
    2. ' ,' → logprob: -8.875162124633789
    3. ',n' → logprob: -12.125162124633789
    4. ',
' → logprob: -12.125162124633789
    5. '**' → logprob: -12.625162124633789
    6. '   ' → logprob: -12.750162124633789
    7. '       ' → logprob: -12.875162124633789
    8. '**,' → logprob: -14.125162124633789
    9. ')' → logprob: -14.750162124633789
    10. '           ' → logprob: -15.000162124633789

Token 1354: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07915151119232178
    2. ' exponent' → logprob: -2.5791516304016113
    3. 'exp' → logprob: -8.329151153564453
    4. '   ' → logprob: -11.579151153564453
    5. ' ' → logprob: -12.454151153564453
    6. ' exp' → logprob: -13.079151153564453
    7. 'expo' → logprob: -13.329151153564453
    8. '       ' → logprob: -13.454151153564453
    9. '           ' → logprob: -14.329151153564453
    10. '  ' → logprob: -15.079151153564453

Token 1355: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32112279534339905
    2. ',' → logprob: -1.3211227655410767
    3. '):' → logprob: -4.946122646331787
    4. ')' → logprob: -7.946122646331787
    5. '):
' → logprob: -8.696123123168945
    6. ':int' → logprob: -9.071123123168945
    7. '   ' → logprob: -10.196123123168945
    8. '=' → logprob: -11.446123123168945
    9. ' ,' → logprob: -11.821123123168945
    10. '       ' → logprob: -12.446123123168945

Token 1356: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06207176670432091
    2. ' int' → logprob: -2.8120718002319336
    3. ')' → logprob: -9.187071800231934
    4. ':int' → logprob: -14.562071800231934
    5. ' )' → logprob: -14.687071800231934
    6. ' ' → logprob: -15.062071800231934
    7. '   ' → logprob: -16.187070846557617
    8. '):
' → logprob: -16.312070846557617
    9. '<int' → logprob: -16.687070846557617
    10. '2' → logprob: -17.062070846557617

Token 1357: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016384923947043717
    2. '):' → logprob: -9.125164031982422
    3. '):
' → logprob: -10.000164031982422
    4. '   ' → logprob: -12.000164031982422
    5. ' )' → logprob: -13.750164031982422
    6. ')->' → logprob: -13.750164031982422
    7. '       ' → logprob: -14.250164031982422
    8. ':' → logprob: -15.000164031982422
    9. '):
' → logprob: -17.500164031982422
    10. '`)' → logprob: -17.500164031982422

Token 1358: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.1245250329375267
    2. ' ->' → logprob: -2.7495250701904297
    3. ':' → logprob: -3.2495250701904297
    4. '       ' → logprob: -4.62452507019043
    5. ')->' → logprob: -5.74952507019043
    6. ')' → logprob: -6.99952507019043
    7. '   ' → logprob: -8.87452507019043
    8. '()->' → logprob: -9.12452507019043
    9. ':
' → logprob: -9.49952507019043
    10. ':return' → logprob: -10.49952507019043

Token 1359: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.517272024415433e-05
    2. ' int' → logprob: -9.500075340270996
    3. 'pow' → logprob: -15.750075340270996
    4. '[int' → logprob: -17.12507438659668
    5. '(int' → logprob: -17.75007438659668
    6. 'Optional' → logprob: -17.87507438659668
    7. 'Large' → logprob: -18.50007438659668
    8. ':int' → logprob: -19.00007438659668
    9. '   ' → logprob: -19.12507438659668
    10. '	int' → logprob: -19.12507438659668

Token 1360: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04451185464859009
    2. '       ' → logprob: -3.2945117950439453
    3. ':
' → logprob: -5.794511795043945
    4. '**' → logprob: -6.169511795043945
    5. '):' → logprob: -8.044511795043945
    6. ',' → logprob: -8.169511795043945
    7. '*' → logprob: -8.294511795043945
    8. '   ' → logprob: -8.669511795043945
    9. ':return' → logprob: -10.044511795043945
    10. '{' → logprob: -10.044511795043945

Token 1361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04289858043193817
    2. ' return' → logprob: -3.792898654937744
    3. 'return' → logprob: -4.542898654937744
    4. ' base' → logprob: -5.667898654937744
    5. '   ' → logprob: -6.542898654937744
    6. '    ' → logprob: -7.167898654937744
    7. 'base' → logprob: -7.167898654937744
    8. ' 
' → logprob: -7.667898654937744
    9. '        ' → logprob: -8.042898178100586
    10. ':' → logprob: -8.042898178100586

Token 1362: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.020858684554696083
    2. ' return' → logprob: -4.2708587646484375
    3. '       ' → logprob: -5.0208587646484375
    4. 'pow' → logprob: -10.020858764648438
    5. 'base' → logprob: -11.145858764648438
    6. '```' → logprob: -11.395858764648438
    7. 'result' → logprob: -13.520858764648438
    8. '   ' → logprob: -14.270858764648438
    9. ' base' → logprob: -14.520858764648438
    10. ' pow' → logprob: -15.020858764648438

Token 1363: '       ' (ID: 309)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.7111659646034241
    2. 'base' → logprob: -0.9611659646034241
    3. 'return' → logprob: -2.7111659049987793
    4. '       ' → logprob: -3.0861659049987793
    5. ' return' → logprob: -4.586165904998779
    6. '   ' → logprob: -5.711165904998779
    7. 'pow' → logprob: -7.586165904998779
    8. '    ' → logprob: -9.086166381835938
    9. '(base' → logprob: -10.586166381835938
    10. ' pow' → logprob: -10.711166381835938

Token 1364: ' Compute' (ID: 45438)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10065734386444092
    2. '       ' → logprob: -2.3506574630737305
    3. ' return' → logprob: -8.10065746307373
    4. 'result' → logprob: -8.85065746307373
    5. '```' → logprob: -12.97565746307373
    6. '   ' → logprob: -14.10065746307373
    7. 'if' → logprob: -14.97565746307373
    8. '
' → logprob: -15.22565746307373
    9. '	return' → logprob: -16.600656509399414
    10. '``' → logprob: -16.600656509399414

Token 1365: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.12715287506580353
    2. 'base' → logprob: -2.127152919769287
    3. 'pow' → logprob: -8.627152442932129
    4. '(base' → logprob: -10.377152442932129
    5. ' pow' → logprob: -11.502152442932129
    6. '```' → logprob: -13.127152442932129
    7. '	base' → logprob: -14.252152442932129
    8. 'power' → logprob: -14.752152442932129
    9. ' ' → logprob: -15.127152442932129
    10. ' power' → logprob: -15.502152442932129

Token 1366: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.4741590917110443
    2. '**' → logprob: -0.9741591215133667
    3. '<|end|>' → logprob: -9.974159240722656
    4. ' ' → logprob: -11.724159240722656
    5. '_' → logprob: -12.224159240722656
    6. '*' → logprob: -12.349159240722656
    7. ',' → logprob: -12.474159240722656
    8. ' ' → logprob: -12.849159240722656
    9. ' *' → logprob: -12.974159240722656
    10. ')' → logprob: -13.474159240722656

Token 1367: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.3805832266807556
    2. '_' → logprob: -2.0055832862854004
    3. ' ' → logprob: -2.8805832862854004
    4. ')' → logprob: -3.3805832862854004
    5. ' exponent' → logprob: -3.5055832862854004
    6. '```' → logprob: -4.0055832862854
    7. '_ex' → logprob: -4.7555832862854
    8. '(' → logprob: -5.1305832862854
    9. ' )' → logprob: -5.2555832862854
    10. '(ex' → logprob: -5.7555832862854

Token 1368: '.
' (ID: 558)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4433656334877014
    2. '   ' → logprob: -2.3183655738830566
    3. '(' → logprob: -2.4433655738830566
    4. '       ' → logprob: -2.4433655738830566
    5. ':' → logprob: -3.8183655738830566
    6. '*' → logprob: -4.318365573883057
    7. 'return' → logprob: -4.693365573883057
    8. ')' → logprob: -5.068365573883057
    9. '(
' → logprob: -5.068365573883057
    10. '
' → logprob: -5.443365573883057

Token 1369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2451764941215515
    2. ':' → logprob: -2.1201765537261963
    3. '   ' → logprob: -2.7451765537261963
    4. ':
' → logprob: -4.745176315307617
    5. ' return' → logprob: -4.745176315307617
    6. 'return' → logprob: -5.120176315307617
    7. ':return' → logprob: -5.120176315307617
    8. '```' → logprob: -7.370176315307617
    9. ')' → logprob: -7.620176315307617
    10. '`' → logprob: -8.245176315307617

Token 1370: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0199250690639019
    2. ' return' → logprob: -4.394925117492676
    3. 'return' → logprob: -5.019925117492676
    4. '```' → logprob: -8.769925117492676
    5. ' 
' → logprob: -8.894925117492676
    6. '   ' → logprob: -9.144925117492676
    7. ':return' → logprob: -9.269925117492676
    8. '        ' → logprob: -9.894925117492676
    9. '\n' → logprob: -10.144925117492676
    10. '
' → logprob: -10.394925117492676

Token 1371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20949865877628326
    2. 'return' → logprob: -1.709498643875122
    3. ' return' → logprob: -4.834498882293701
    4. '   ' → logprob: -9.459498405456543
    5. '```' → logprob: -11.709498405456543
    6. '	' → logprob: -12.334498405456543
    7. ' ' → logprob: -12.834498405456543
    8. '	return' → logprob: -13.209498405456543
    9. ':return' → logprob: -13.209498405456543
    10. '{return' → logprob: -13.834498405456543

Token 1372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019298245897516608
    2. '       ' → logprob: -6.251929759979248
    3. ' return' → logprob: -14.001930236816406
    4. 'result' → logprob: -15.251930236816406
    5. '```' → logprob: -16.126930236816406
    6. '   ' → logprob: -18.626930236816406
    7. '	return' → logprob: -18.876930236816406
    8. '{return' → logprob: -19.876930236816406
    9. 'if' → logprob: -20.876930236816406
    10. '	' → logprob: -21.001930236816406

Token 1373: ' pow' (ID: 9779)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.04452906548976898
    2. 'pow' → logprob: -3.2945289611816406
    3. ' base' → logprob: -5.044528961181641
    4. ' pow' → logprob: -10.79452896118164
    5. '(base' → logprob: -13.41952896118164
    6. '	base' → logprob: -16.66952896118164
    7. 'power' → logprob: -17.54452896118164
    8. '_base' → logprob: -17.79452896118164
    9. '1' → logprob: -18.29452896118164
    10. 'Base' → logprob: -18.79452896118164

Token 1374: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.01888238452374935
    2. '(' → logprob: -4.0188822746276855
    3. 'base' → logprob: -7.2688822746276855
    4. '(
' → logprob: -10.268882751464844
    5. ' base' → logprob: -15.643882751464844
    6. '	base' → logprob: -15.768882751464844
    7. '(

' → logprob: -16.643882751464844
    8. '(
' → logprob: -17.018882751464844
    9. '```' → logprob: -17.143882751464844
    10. '.base' → logprob: -17.393882751464844

Token 1375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005569627974182367
    2. ' ,' → logprob: -7.875556945800781
    3. ')' → logprob: -9.000556945800781
    4. '**' → logprob: -11.250556945800781
    5. '<|end|>' → logprob: -11.375556945800781
    6. ',
' → logprob: -12.875556945800781
    7. ',b' → logprob: -13.000556945800781
    8. '```' → logprob: -13.000556945800781
    9. ',end' → logprob: -13.125556945800781
    10. ',int' → logprob: -13.500556945800781

Token 1376: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -2.935296834039036e-06
    2. ' exponent' → logprob: -12.75000286102295
    3. '(ex' → logprob: -20.000003814697266
    4. ' ex' → logprob: -20.500003814697266
    5. 'Exponent' → logprob: -20.750003814697266
    6. 'exp' → logprob: -21.375003814697266
    7. '
' → logprob: -21.500003814697266
    8. '	ex' → logprob: -21.750003814697266
    9. 'base' → logprob: -22.125003814697266
    10. 'export' → logprob: -22.250003814697266

Token 1377: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028376842383295298
    2. ',' → logprob: -5.877837657928467
    3. ')
' → logprob: -11.002838134765625
    4. ' )' → logprob: -12.627838134765625
    5. '**' → logprob: -12.877838134765625
    6. '[' → logprob: -13.377838134765625
    7. '   ' → logprob: -13.627838134765625
    8. '),' → logprob: -13.877838134765625
    9. '<|end|>' → logprob: -13.877838134765625
    10. ',
' → logprob: -14.377838134765625

Token 1378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016990570351481438
    2. '```' → logprob: -4.266990661621094
    3. '
' → logprob: -6.141990661621094
    4. '    
' → logprob: -8.016990661621094
    5. 'def' → logprob: -8.766990661621094
    6. '<|end|>' → logprob: -8.891990661621094
    7. '`' → logprob: -11.266990661621094
    8. '<|end|>' → logprob: -11.266990661621094
    9. '>' → logprob: -12.266990661621094
    10. ' def' → logprob: -12.391990661621094

Token 1379: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003231878508813679
    2. '   ' → logprob: -8.625323295593262
    3. ' def' → logprob: -8.875323295593262
    4. '
' → logprob: -13.000323295593262
    5. '```' → logprob: -13.500323295593262
    6. '	def' → logprob: -16.125322341918945
    7. '    
' → logprob: -17.500322341918945
    8. ' ' → logprob: -18.625322341918945
    9. 'class' → logprob: -19.375322341918945
    10. 'from' → logprob: -19.375322341918945

Token 1380: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.00014692598779220134
    2. ' format' → logprob: -8.875146865844727
    3. 'large' → logprob: -13.000146865844727
    4. 'to' → logprob: -13.625146865844727
    5. '_format' → logprob: -13.750146865844727
    6. 'compute' → logprob: -14.000146865844727
    7. 'convert' → logprob: -14.125146865844727
    8. 'number' → logprob: -15.125146865844727
    9. 'create' → logprob: -15.750146865844727
    10. 'from' → logprob: -15.875146865844727

Token 1381: '_power' (ID: 51623)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.14875586330890656
    2. '_power' → logprob: -2.7737557888031006
    3. '(self' → logprob: -3.2737557888031006
    4. '(' → logprob: -4.02375602722168
    5. '_result' → logprob: -4.27375602722168
    6. 'number' → logprob: -5.77375602722168
    7. '_large' → logprob: -6.77375602722168
    8. '_value' → logprob: -7.39875602722168
    9. '(number' → logprob: -7.52375602722168
    10. 'power' → logprob: -8.64875602722168

Token 1382: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005271230358630419
    2. '(' → logprob: -5.2552714347839355
    3. '(
' → logprob: -10.255270957946777
    4. ' (' → logprob: -13.505270957946777
    5. '   ' → logprob: -15.005270957946777
    6. 'self' → logprob: -15.005270957946777
    7. '       ' → logprob: -16.005271911621094
    8. '(base' → logprob: -16.005271911621094
    9. '(

' → logprob: -16.630271911621094
    10. '```' → logprob: -17.380271911621094

Token 1383: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02628961205482483
    2. ',' → logprob: -3.901289701461792
    3. '(' → logprob: -6.151289463043213
    4. ')' → logprob: -6.651289463043213
    5. ')(' → logprob: -7.026289463043213
    6. 'self' → logprob: -7.026289463043213
    7. '       ' → logprob: -8.526289939880371
    8. '   ' → logprob: -8.651289939880371
    9. ')(
' → logprob: -10.026289939880371
    10. ',self' → logprob: -10.526289939880371

Token 1384: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.015176217071712017
    2. ' base' → logprob: -4.515176296234131
    3. 'number' → logprob: -5.515176296234131
    4. 'result' → logprob: -9.765175819396973
    5. 'value' → logprob: -10.390175819396973
    6. ' number' → logprob: -12.265175819396973
    7. 'self' → logprob: -14.515175819396973
    8. '   ' → logprob: -15.265175819396973
    9. 'power' → logprob: -15.265175819396973
    10. '(base' → logprob: -15.265175819396973

Token 1385: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00157437555026263
    2. ' ,' → logprob: -6.501574516296387
    3. ':' → logprob: -10.751574516296387
    4. '   ' → logprob: -11.001574516296387
    5. '**' → logprob: -11.376574516296387
    6. ',
' → logprob: -11.751574516296387
    7. ')' → logprob: -12.876574516296387
    8. ',int' → logprob: -12.876574516296387
    9. '       ' → logprob: -13.126574516296387
    10. '=' → logprob: -13.626574516296387

Token 1386: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011170427314937115
    2. ' int' → logprob: -4.511170387268066
    3. 'ex' → logprob: -9.261170387268066
    4. ':int' → logprob: -11.136170387268066
    5. ')' → logprob: -12.511170387268066
    6. '<int' → logprob: -13.386170387268066
    7. ',' → logprob: -13.511170387268066
    8. 'n' → logprob: -13.761170387268066
    9. '[int' → logprob: -13.761170387268066
    10. 'number' → logprob: -14.386170387268066

Token 1387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.763666947837919e-05
    2. ' ,' → logprob: -10.00004768371582
    3. ',
' → logprob: -13.37504768371582
    4. '       ' → logprob: -15.12504768371582
    5. '   ' → logprob: -16.37504768371582
    6. '           ' → logprob: -16.50004768371582
    7. ',n' → logprob: -16.62504768371582
    8. '               ' → logprob: -17.75004768371582
    9. '**,' → logprob: -18.00004768371582
    10. ')' → logprob: -18.25004768371582

Token 1388: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.008628644980490208
    2. ' exponent' → logprob: -4.758628845214844
    3. '   ' → logprob: -12.008628845214844
    4. '       ' → logprob: -12.133628845214844
    5. '           ' → logprob: -13.508628845214844
    6. '     ' → logprob: -15.258628845214844
    7. ' ' → logprob: -15.508628845214844
    8. ' ex' → logprob: -15.883628845214844
    9. 'exp' → logprob: -15.883628845214844
    10. '               ' → logprob: -16.258628845214844

Token 1389: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001005419879220426
    2. ' ,' → logprob: -7.87600564956665
    3. ')' → logprob: -8.126005172729492
    4. ':' → logprob: -8.376005172729492
    5. '   ' → logprob: -9.876005172729492
    6. '):' → logprob: -10.501005172729492
    7. ',
' → logprob: -12.376005172729492
    8. '```' → logprob: -12.501005172729492
    9. '):
' → logprob: -13.126005172729492
    10. '       ' → logprob: -13.251005172729492

Token 1390: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13434772193431854
    2. ')' → logprob: -2.509347677230835
    3. '1' → logprob: -3.634347677230835
    4. '2' → logprob: -4.509347915649414
    5. ' int' → logprob: -5.884347915649414
    6. '<|end|>' → logprob: -6.759347915649414
    7. ' ' → logprob: -6.884347915649414
    8. ' )' → logprob: -7.634347915649414
    9. '0' → logprob: -7.884347915649414
    10. ':int' → logprob: -8.134347915649414

Token 1391: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.041768160182983e-05
    2. '):
' → logprob: -10.000080108642578
    3. '):' → logprob: -11.000080108642578
    4. '   ' → logprob: -11.250080108642578
    5. '       ' → logprob: -12.375080108642578
    6. ' )' → logprob: -14.750080108642578
    7. ':' → logprob: -15.125080108642578
    8. ')->' → logprob: -16.250080108642578
    9. ',' → logprob: -16.375080108642578
    10. '`)' → logprob: -16.375080108642578

Token 1392: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5571097731590271
    2. ')' → logprob: -1.4321098327636719
    3. ' ->' → logprob: -2.932109832763672
    4. '->' → logprob: -3.057109832763672
    5. ')->' → logprob: -3.307109832763672
    6. '   ' → logprob: -4.182109832763672
    7. ',' → logprob: -4.182109832763672
    8. '       ' → logprob: -4.182109832763672
    9. '):' → logprob: -6.432109832763672
    10. ':
' → logprob: -6.432109832763672

Token 1393: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6531448364257812
    2. 'int' → logprob: -0.7781448364257812
    3. 'Large' → logprob: -4.028144836425781
    4. ' str' → logprob: -6.653144836425781
    5. 'Number' → logprob: -7.528144836425781
    6. ' int' → logprob: -7.528144836425781
    7. ' Large' → logprob: -10.153144836425781
    8. 'Int' → logprob: -10.278144836425781
    9. 'Optional' → logprob: -11.028144836425781
    10. '(str' → logprob: -11.778144836425781

Token 1394: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3181857168674469
    2. '(self' → logprob: -1.4431856870651245
    3. '(' → logprob: -4.068185806274414
    4. ':' → logprob: -4.443185806274414
    5. '(
' → logprob: -6.693185806274414
    6. ',' → logprob: -6.818185806274414
    7. '   ' → logprob: -7.193185806274414
    8. '```' → logprob: -7.318185806274414
    9. '<|end|>' → logprob: -7.318185806274414
    10. '<|end|>' → logprob: -7.568185806274414

Token 1395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.085517113911919e-05
    2. '```' → logprob: -10.62505054473877
    3. '(' → logprob: -11.87505054473877
    4. '(self' → logprob: -12.00005054473877
    5. '`' → logprob: -12.12505054473877
    6. '        
' → logprob: -13.25005054473877
    7. '      ' → logprob: -14.25005054473877
    8. '   ' → logprob: -14.50005054473877
    9. '``' → logprob: -14.50005054473877
    10. '#' → logprob: -14.50005054473877

Token 1396: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1912042796611786
    2. 'number' → logprob: -2.191204309463501
    3. ' number' → logprob: -2.816204309463501
    4. '```' → logprob: -6.566204071044922
    5. 'result' → logprob: -7.816204071044922
    6. 'n' → logprob: -8.441204071044922
    7. 'num' → logprob: -8.441204071044922
    8. '``' → logprob: -9.566204071044922
    9. ' result' → logprob: -10.566204071044922
    10. 'value' → logprob: -10.941204071044922

Token 1397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04411294311285019
    2. 'number' → logprob: -3.1691129207611084
    3. ' number' → logprob: -7.2941131591796875
    4. '```' → logprob: -8.669113159179688
    5. 'n' → logprob: -8.919113159179688
    6. 'result' → logprob: -10.294113159179688
    7. 'power' → logprob: -10.794113159179688
    8. 'self' → logprob: -11.044113159179688
    9. 'num' → logprob: -11.044113159179688
    10. '   ' → logprob: -11.419113159179688

Token 1398: ' Compute' (ID: 45438)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.12881797552108765
    2. 'result' → logprob: -2.3788180351257324
    3. 'num' → logprob: -3.6288180351257324
    4. '       ' → logprob: -6.753818035125732
    5. 'power' → logprob: -8.503817558288574
    6. 'value' → logprob: -8.503817558288574
    7. 'n' → logprob: -10.378817558288574
    8. 'pow' → logprob: -11.003817558288574
    9. 'res' → logprob: -11.378817558288574
    10. '   ' → logprob: -11.753817558288574

Token 1399: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.7321189045906067
    2. 'base' → logprob: -1.732118844985962
    3. ' self' → logprob: -1.857118844985962
    4. 'self' → logprob: -1.857118844985962
    5. 'pow' → logprob: -3.732118844985962
    6. '(base' → logprob: -5.857119083404541
    7. 'power' → logprob: -7.232119083404541
    8. ' pow' → logprob: -7.357119083404541
    9. '(self' → logprob: -7.982119083404541
    10. ' f' → logprob: -8.107118606567383

Token 1400: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.20700067281723022
    2. '**' → logprob: -1.832000732421875
    3. ',' → logprob: -3.707000732421875
    4. ' ,' → logprob: -6.207000732421875
    5. '**,' → logprob: -8.832000732421875
    6. ' ' → logprob: -9.707000732421875
    7. ')' → logprob: -10.957000732421875
    8. '   ' → logprob: -11.332000732421875
    9. '       ' → logprob: -11.457000732421875
    10. '```' → logprob: -11.457000732421875

Token 1401: 'ex' (ID: 490)
  Prédit: ' exponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exponent' → logprob: -0.35219472646713257
    2. 'ex' → logprob: -1.2271947860717773
    3. ',' → logprob: -6.352194786071777
    4. ' ex' → logprob: -6.602194786071777
    5. ' ,' → logprob: -8.227194786071777
    6. '{' → logprob: -9.227194786071777
    7. ' ' → logprob: -9.727194786071777
    8. '
' → logprob: -9.852194786071777
    9. ' ' → logprob: -10.352194786071777
    10. ' {' → logprob: -10.727194786071777

Token 1402: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -5.438573680294212e-06
    2. '```' → logprob: -13.375005722045898
    3. 'pon' → logprob: -13.625005722045898
    4. 'p' → logprob: -13.750005722045898
    5. '{
' → logprob: -14.750005722045898
    6. '**' → logprob: -15.000005722045898
    7. 'ponential' → logprob: -16.2500057220459
    8. 'ponents' → logprob: -16.3750057220459
    9. '``' → logprob: -16.5000057220459
    10. 'pone' → logprob: -16.7500057220459

Token 1403: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.05682373046875
    2. ',' → logprob: -1.30682373046875
    3. ')' → logprob: -1.43182373046875
    4. '**' → logprob: -2.55682373046875
    5. ' and' → logprob: -4.55682373046875
    6. ' +' → logprob: -4.68182373046875
    7. '   ' → logprob: -4.93182373046875
    8. ')
' → logprob: -4.93182373046875
    9. '
' → logprob: -5.55682373046875
    10. '(' → logprob: -5.80682373046875

Token 1404: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.03924105316400528
    2. 'return' → logprob: -3.289241075515747
    3. ' format' → logprob: -6.914240837097168
    4. ' return' → logprob: -8.914240837097168
    5. '
' → logprob: -10.289240837097168
    6. 'Large' → logprob: -11.164240837097168
    7. 'convert' → logprob: -11.664240837097168
    8. ' Large' → logprob: -12.039240837097168
    9. '       ' → logprob: -12.789240837097168
    10. '   ' → logprob: -12.914240837097168

Token 1405: ' in' (ID: 306)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.002491595223546028
    2. '(self' → logprob: -6.752491474151611
    3. '(' → logprob: -6.877491474151611
    4. '       ' → logprob: -8.37749195098877
    5. ' (' → logprob: -9.87749195098877
    6. '(
' → logprob: -12.25249195098877
    7. 'return' → logprob: -14.25249195098877
    8. '
' → logprob: -14.25249195098877
    9. '```' → logprob: -14.50249195098877
    10. 'base' → logprob: -14.62749195098877

Token 1406: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.046922747045755386
    2. 'self' → logprob: -3.7969226837158203
    3. ' J' → logprob: -3.9219226837158203
    4. 'the' → logprob: -6.42192268371582
    5. ' the' → logprob: -7.42192268371582
    6. ' self' → logprob: -7.54692268371582
    7. 'j' → logprob: -7.92192268371582
    8. '   ' → logprob: -8.29692268371582
    9. ' j' → logprob: -9.29692268371582
    10. ')' → logprob: -10.79692268371582

Token 1407: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -0.00029041420202702284
    2. 'inko' → logprob: -8.750290870666504
    3. '```' → logprob: -10.125290870666504
    4. ' ink' → logprob: -10.250290870666504
    5. '   ' → logprob: -11.375290870666504
    6. '_' → logprob: -11.875290870666504
    7. '``' → logprob: -12.250290870666504
    8. 'in' → logprob: -12.375290870666504
    9. 'inku' → logprob: -12.375290870666504
    10. 'ank' → logprob: -13.125290870666504

Token 1408: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -1.1041145626222715e-05
    2. 'ouk' → logprob: -11.875011444091797
    3. 'kou' → logprob: -12.500011444091797
    4. '```' → logprob: -16.750011444091797
    5. ' kou' → logprob: -17.125011444091797
    6. 'ok' → logprob: -17.250011444091797
    7. 'o' → logprob: -17.500011444091797
    8. '_' → logprob: -17.625011444091797
    9. 'oui' → logprob: -17.750011444091797
    10. '   ' → logprob: -18.125011444091797

Token 1409: 'ki' (ID: 3129)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0003361774142831564
    2. 'oki' → logprob: -8.125336647033691
    3. 'uki' → logprob: -10.750336647033691
    4. 'ki' → logprob: -11.875336647033691
    5. 'kou' → logprob: -12.250336647033691
    6. ' ou' → logprob: -12.625336647033691
    7. 'o' → logprob: -13.750336647033691
    8. 'ouk' → logprob: -13.875336647033691
    9. 'ok' → logprob: -14.500336647033691
    10. '_' → logprob: -15.250336647033691

Token 1410: ' style' (ID: 2713)
  Prédit: ' style'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' style' → logprob: -0.5941725373268127
    2. 'style' → logprob: -1.094172477722168
    3. '_style' → logprob: -2.219172477722168
    4. ' format' → logprob: -7.844172477722168
    5. '_large' → logprob: -7.844172477722168
    6. '_units' → logprob: -7.844172477722168
    7. '```' → logprob: -7.844172477722168
    8. '(' → logprob: -7.969172477722168
    9. 'Style' → logprob: -8.219172477722168
    10. 'styled' → logprob: -8.219172477722168

Token 1411: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005742729641497135
    2. '(self' → logprob: -5.63074254989624
    3. '   ' → logprob: -7.13074254989624
    4. '(' → logprob: -7.38074254989624
    5. ':' → logprob: -8.255743026733398
    6. ',' → logprob: -8.755743026733398
    7. ':
' → logprob: -9.630743026733398
    8. '(base' → logprob: -9.880743026733398
    9. '.' → logprob: -10.005743026733398
    10. '
' → logprob: -10.130743026733398

Token 1412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012094692647224292
    2. '```' → logprob: -9.625121116638184
    3. 'number' → logprob: -10.750121116638184
    4. ' number' → logprob: -11.625121116638184
    5. '`' → logprob: -12.500121116638184
    6. '
' → logprob: -12.750121116638184
    7. '   ' → logprob: -12.750121116638184
    8. '``' → logprob: -13.125121116638184
    9. 'Number' → logprob: -13.250121116638184
    10. '      ' → logprob: -13.625121116638184

Token 1413: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013836124911904335
    2. 'number' → logprob: -4.763835906982422
    3. ' number' → logprob: -5.888835906982422
    4. '
' → logprob: -6.388835906982422
    5. '```' → logprob: -7.638835906982422
    6. '`
' → logprob: -9.888835906982422
    7. '`' → logprob: -10.013835906982422
    8. '``' → logprob: -10.263835906982422
    9. 'n' → logprob: -10.513835906982422
    10. 'Number' → logprob: -11.013835906982422

Token 1414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012361186556518078
    2. 'number' → logprob: -4.5123610496521
    3. ' number' → logprob: -7.1373610496521
    4. 'n' → logprob: -8.387361526489258
    5. '```' → logprob: -8.387361526489258
    6. 'num' → logprob: -10.387361526489258
    7. 'result' → logprob: -10.887361526489258
    8. 'return' → logprob: -13.387361526489258
    9. '``' → logprob: -13.387361526489258
    10. 'value' → logprob: -13.762361526489258

Token 1415: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.12669435143470764
    2. 'result' → logprob: -2.376694440841675
    3. 'num' → logprob: -3.876694440841675
    4. 'value' → logprob: -5.626694202423096
    5. 'power' → logprob: -6.376694202423096
    6. '       ' → logprob: -9.501694679260254
    7. 'pow' → logprob: -10.751694679260254
    8. 'large' → logprob: -11.751694679260254
    9. 'res' → logprob: -12.126694679260254
    10. 'val' → logprob: -13.126694679260254

Token 1416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132895827293396
    2. ' =' → logprob: -1.3132896423339844
    3. '=self' → logprob: -10.688289642333984
    4. ')' → logprob: -12.813289642333984
    5. '       ' → logprob: -14.063289642333984
    6. '_' → logprob: -15.313289642333984
    7. '        ' → logprob: -15.313289642333984
    8. '   ' → logprob: -15.313289642333984
    9. '=
' → logprob: -15.438289642333984
    10. '    ' → logprob: -16.438289642333984

Token 1417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008239132352173328
    2. ' self' → logprob: -4.883239269256592
    3. 'pow' → logprob: -7.383239269256592
    4. '       ' → logprob: -11.758238792419434
    5. ' pow' → logprob: -13.008238792419434
    6. 'base' → logprob: -14.508238792419434
    7. '(self' → logprob: -14.633238792419434
    8. '	self' → logprob: -16.00823974609375
    9. '1' → logprob: -18.50823974609375
    10. ' base' → logprob: -18.50823974609375

Token 1418: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.0037194383330643177
    2. '.' → logprob: -6.128719329833984
    3. ' .' → logprob: -6.628719329833984
    4. 'compute' → logprob: -9.003719329833984
    5. '.unit' → logprob: -9.878719329833984
    6. '.format' → logprob: -11.628719329833984
    7. '.com' → logprob: -12.253719329833984
    8. '   ' → logprob: -12.378719329833984
    9. 'unit' → logprob: -12.378719329833984
    10. '._' → logprob: -12.628719329833984

Token 1419: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.00018089536752086133
    2. 'power' → logprob: -8.625181198120117
    3. 'Power' → logprob: -14.500181198120117
    4. '_pow' → logprob: -15.125181198120117
    5. '_POWER' → logprob: -15.500181198120117
    6. ' power' → logprob: -16.375181198120117
    7. '(power' → logprob: -16.500181198120117
    8. 'pow' → logprob: -16.625181198120117
    9. 'base' → logprob: -16.750181198120117
    10. '_' → logprob: -17.125181198120117

Token 1420: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -11.125019073486328
    3. 'base' → logprob: -12.625019073486328
    4. '(
' → logprob: -14.250019073486328
    5. ' (' → logprob: -14.750019073486328
    6. ' base' → logprob: -16.750019073486328
    7. '(b' → logprob: -17.000019073486328
    8. '   ' → logprob: -17.375019073486328
    9. '```' → logprob: -17.750019073486328
    10. '       ' → logprob: -19.125019073486328

Token 1421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003160393098369241
    2. ' ,' → logprob: -8.25031566619873
    3. ')' → logprob: -10.50031566619873
    4. '       ' → logprob: -11.50031566619873
    5. ',
' → logprob: -11.50031566619873
    6. '   ' → logprob: -13.37531566619873
    7. '**' → logprob: -13.50031566619873
    8. '           ' → logprob: -14.00031566619873
    9. ',n' → logprob: -14.37531566619873
    10. '<|end|>' → logprob: -15.12531566619873

Token 1422: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0007099286303855479
    2. ' exponent' → logprob: -7.2507100105285645
    3. ' ex' → logprob: -17.125709533691406
    4. ')' → logprob: -19.375709533691406
    5. '(ex' → logprob: -19.500709533691406
    6. '	ex' → logprob: -20.500709533691406
    7. ' ' → logprob: -20.875709533691406
    8. '
' → logprob: -20.875709533691406
    9. 'Exponent' → logprob: -20.875709533691406
    10. '   ' → logprob: -21.000709533691406

Token 1423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16136763989925385
    2. ')
' → logprob: -1.911367654800415
    3. '       ' → logprob: -6.786367416381836
    4. ')
' → logprob: -11.536367416381836
    5. '**' → logprob: -13.911367416381836
    6. '   ' → logprob: -14.286367416381836
    7. ')

' → logprob: -14.536367416381836
    8. ')`
' → logprob: -14.536367416381836
    9. ')`' → logprob: -14.661367416381836
    10. ' )' → logprob: -15.286367416381836

Token 1424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.08944896562025e-05
    2. '
' → logprob: -10.125081062316895
    3. 'return' → logprob: -10.750081062316895
    4. '   ' → logprob: -11.750081062316895
    5. ' return' → logprob: -12.625081062316895
    6. ' large' → logprob: -12.875081062316895
    7. '```' → logprob: -13.625081062316895
    8. 'large' → logprob: -13.750081062316895
    9. 'Large' → logprob: -13.750081062316895
    10. ')' → logprob: -14.250081062316895

Token 1425: ' #' (ID: 1069)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.09059309214353561
    2. 'ln' → logprob: -2.590593099594116
    3. '       ' → logprob: -4.715592861175537
    4. ' large' → logprob: -5.965592861175537
    5. ' ln' → logprob: -10.090593338012695
    6. 'l' → logprob: -10.340593338012695
    7. 'larg' → logprob: -10.465593338012695
    8. 'lg' → logprob: -12.590593338012695
    9. 'LN' → logprob: -13.090593338012695
    10. 'num' → logprob: -13.465593338012695

Token 1426: ' number' (ID: 2086)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.1002689003944397
    2. 'ln' → logprob: -2.350268840789795
    3. 'larg' → logprob: -10.975269317626953
    4. ' large' → logprob: -10.975269317626953
    5. '       ' → logprob: -11.725269317626953
    6. 'lg' → logprob: -11.975269317626953
    7. '   ' → logprob: -12.225269317626953
    8. ' ln' → logprob: -12.725269317626953
    9. 'LN' → logprob: -13.600269317626953
    10. 'l' → logprob: -13.725269317626953

Token 1427: ' <' (ID: 464)
  Prédit: '_large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_large' → logprob: -0.8251562118530273
    2. '_l' → logprob: -1.3251562118530273
    3. '_obj' → logprob: -1.4501562118530273
    4. ' =' → logprob: -3.4501562118530273
    5. '_str' → logprob: -4.075156211853027
    6. '=' → logprob: -5.950156211853027
    7. 'obj' → logprob: -5.950156211853027
    8. '_segments' → logprob: -6.450156211853027
    9. '_object' → logprob: -6.575156211853027
    10. '_repr' → logprob: -6.575156211853027

Token 1428: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10386936366558075
    2. '100' → logprob: -2.3538694381713867
    3. '1' → logprob: -6.228869438171387
    4. 'self' → logprob: -6.978869438171387
    5. '0' → logprob: -7.978869438171387
    6. '(' → logprob: -8.353869438171387
    7. ' ' → logprob: -9.603869438171387
    8. '=' → logprob: -10.353869438171387
    9. '   ' → logprob: -10.353869438171387
    10. '999' → logprob: -10.603869438171387

Token 1429: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003832445072475821
    2. '100' → logprob: -8.125383377075195
    3. 'self' → logprob: -9.750383377075195
    4. '1' → logprob: -10.875383377075195
    5. '(' → logprob: -11.625383377075195
    6. '0' → logprob: -15.375383377075195
    7. '999' → logprob: -15.750383377075195
    8. '```' → logprob: -16.250383377075195
    9. '2' → logprob: -16.375383377075195
    10. ' ' → logprob: -16.625383377075195

Token 1430: '^' (ID: 61)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.024501195177435875
    2. '**' → logprob: -4.399501323699951
    3. '0' → logprob: -5.024501323699951
    4. '00' → logprob: -5.899501323699951
    5. '4' → logprob: -6.399501323699951
    6. '   ' → logprob: -7.524501323699951
    7. '^' → logprob: -8.274500846862793
    8. '       ' → logprob: -10.024500846862793
    9. '```' → logprob: -10.899500846862793
    10. ' ' → logprob: -11.024500846862793

Token 1431: '72' (ID: 8540)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '16' → logprob: -0.5839858055114746
    2. '24' → logprob: -1.7089858055114746
    3. '4' → logprob: -1.8339858055114746
    4. '20' → logprob: -3.0839858055114746
    5. '18' → logprob: -4.208985805511475
    6. '12' → logprob: -4.333985805511475
    7. '8' → logprob: -5.083985805511475
    8. '15' → logprob: -5.458985805511475
    9. '9' → logprob: -5.583985805511475
    10. '19' → logprob: -5.708985805511475

Token 1432: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11747635900974274
    2. ' if' → logprob: -2.367476463317871
    3. 'if' → logprob: -4.117476463317871
    4. '
' → logprob: -7.867476463317871
    5. ',' → logprob: -8.742476463317871
    6. ' and' → logprob: -9.117476463317871
    7. ':' → logprob: -10.742476463317871
    8. 'If' → logprob: -10.742476463317871
    9. '```' → logprob: -10.992476463317871
    10. ')' → logprob: -10.992476463317871

Token 1433: 'from' (ID: 2845)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '28' → logprob: -0.7043877243995667
    2. '       ' → logprob: -2.579387664794922
    3. '7' → logprob: -2.829387664794922
    4. '   ' → logprob: -2.954387664794922
    5. ')' → logprob: -3.204387664794922
    6. '72' → logprob: -3.329387664794922
    7. ' ' → logprob: -3.454387664794922
    8. 'self' → logprob: -3.579387664794922
    9. '24' → logprob: -3.704387664794922
    10. '25' → logprob: -4.079387664794922

Token 1434: ' problem' (ID: 4792)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.687172532081604
    2. '72' → logprob: -1.187172532081604
    3. ' ' → logprob: -3.3121724128723145
    4. ')' → logprob: -4.3121724128723145
    5. '24' → logprob: -4.3121724128723145
    6. '36' → logprob: -4.4371724128723145
    7. '10' → logprob: -4.5621724128723145
    8. ''' → logprob: -4.6871724128723145
    9. '7' → logprob: -4.9371724128723145
    10. ' self' → logprob: -4.9371724128723145

Token 1435: ' constraint' (ID: 44762)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6305590867996216
    2. '       ' → logprob: -1.0055590867996216
    3. '
' → logprob: -3.505558967590332
    4. ')
' → logprob: -3.630558967590332
    5. '**' → logprob: -4.630558967590332
    6. ':' → logprob: -5.505558967590332
    7. ' or' → logprob: -5.505558967590332
    8. ' and' → logprob: -5.755558967590332
    9. '):' → logprob: -5.755558967590332
    10. ' if' → logprob: -5.880558967590332

Token 1436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09346329420804977
    2. ')
' → logprob: -2.968463182449341
    3. '       ' → logprob: -3.343463182449341
    4. ' or' → logprob: -7.46846342086792
    5. '
' → logprob: -7.59346342086792
    6. '):
' → logprob: -7.96846342086792
    7. ' and' → logprob: -8.593462944030762
    8. '):' → logprob: -8.593462944030762
    9. ',' → logprob: -9.218462944030762
    10. ' )' → logprob: -9.468462944030762

Token 1437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10276094079017639
    2. ' large' → logprob: -2.8527610301971436
    3. 'large' → logprob: -3.2277610301971436
    4. ' if' → logprob: -8.852761268615723
    5. 'if' → logprob: -9.477761268615723
    6. 'return' → logprob: -10.352761268615723
    7. '   ' → logprob: -10.727761268615723
    8. 'larg' → logprob: -11.852761268615723
    9. '```' → logprob: -11.852761268615723
    10. '_large' → logprob: -11.977761268615723

Token 1438: ' ln' (ID: 68859)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.12453724443912506
    2. 'ln' (adapté à ' ln') → logprob: -2.499537229537964
    3. ' large' → logprob: -3.624537229537964
    4. '       ' → logprob: -4.874537467956543
    5. ' ln' → logprob: -8.249537467956543
    6. 'larg' → logprob: -9.249537467956543
    7. 'lg' → logprob: -9.499537467956543
    8. 'return' → logprob: -9.624537467956543
    9. 'LN' → logprob: -10.249537467956543
    10. 'l' → logprob: -10.499537467956543

Token 1439: ' =' (ID: 314)
  Prédit: 'umber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umber' → logprob: -0.07312817871570587
    2. 'large' → logprob: -3.9481282234191895
    3. 'number' → logprob: -4.1981282234191895
    4. 'um' → logprob: -4.5731282234191895
    5. '_large' → logprob: -4.8231282234191895
    6. ' =' → logprob: -5.3231282234191895
    7. '   ' → logprob: -5.4481282234191895
    8. 'arge' → logprob: -5.9481282234191895
    9. '=' → logprob: -6.4481282234191895
    10. 'g' → logprob: -6.6981282234191895

Token 1440: ' Large' (ID: 27976)
  Prédit: 'Large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Large' → logprob: -3.7697225252486533e-06
    2. ' Large' → logprob: -12.500003814697266
    3. '       ' → logprob: -20.250003814697266
    4. '   ' → logprob: -22.125003814697266
    5. '           ' → logprob: -23.375003814697266
    6. '  ' → logprob: -23.750003814697266
    7. 'Largest' → logprob: -23.875003814697266
    8. '_large' → logprob: -23.875003814697266
    9. 'large' → logprob: -24.125003814697266
    10. 'L' → logprob: -24.375003814697266

Token 1441: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -1.306760805164231e-05
    2. 'umber' → logprob: -11.25001335144043
    3. ' Number' → logprob: -18.00001335144043
    4. '(Number' → logprob: -18.00001335144043
    5. '_Number' → logprob: -19.12501335144043
    6. '_number' → logprob: -19.50001335144043
    7. 'number' → logprob: -20.00001335144043
    8. '_NUMBER' → logprob: -20.00001335144043
    9. 'Numbers' → logprob: -20.37501335144043
    10. '   ' → logprob: -20.50001335144043

Token 1442: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.004070209339261055
    2. '(' → logprob: -6.004070281982422
    3. '(
' → logprob: -6.504070281982422
    4. 'number' → logprob: -9.379070281982422
    5. '=' → logprob: -12.004070281982422
    6. '(n' → logprob: -13.379070281982422
    7. ' (' → logprob: -14.504070281982422
    8. ' =' → logprob: -14.504070281982422
    9. '(
' → logprob: -15.129070281982422
    10. '```' → logprob: -15.254070281982422

Token 1443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040815072134137154
    2. ')' → logprob: -8.125408172607422
    3. ',self' → logprob: -9.500408172607422
    4. ',
' → logprob: -10.500408172607422
    5. 'self' → logprob: -12.125408172607422
    6. '<|end|>' → logprob: -13.625408172607422
    7. ' ,' → logprob: -14.125408172607422
    8. '       ' → logprob: -14.500408172607422
    9. ',)' → logprob: -14.500408172607422
    10. ')
' → logprob: -15.125408172607422

Token 1444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00091217877343297
    2. ' self' → logprob: -7.000912189483643
    3. '       ' → logprob: -15.000911712646484
    4. '           ' → logprob: -15.125911712646484
    5. '(self' → logprob: -16.500911712646484
    6. '	self' → logprob: -16.750911712646484
    7. '               ' → logprob: -17.875911712646484
    8. '   ' → logprob: -18.125911712646484
    9. '[self' → logprob: -18.500911712646484
    10. '=self' → logprob: -18.875911712646484

Token 1445: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.005234002135694027
    2. 'unit' → logprob: -5.2552337646484375
    3. '.' → logprob: -16.130233764648438
    4. ' unit' → logprob: -16.130233764648438
    5. '	unit' → logprob: -17.380233764648438
    6. 'Unit' → logprob: -18.505233764648438
    7. '           ' → logprob: -18.755233764648438
    8. '.Unit' → logprob: -18.880233764648438
    9. '.user' → logprob: -19.005233764648438
    10. '   ' → logprob: -19.505233764648438

Token 1446: '_system' (ID: 39303)
  Prédit: '_system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_system' → logprob: -0.002513712039217353
    2. 'system' → logprob: -6.002513885498047
    3. 'System' → logprob: -10.252513885498047
    4. 'SYSTEM' → logprob: -13.377513885498047
    5. 'ystem' → logprob: -14.377513885498047
    6. '.system' → logprob: -14.627513885498047
    7. 'ssystem' → logprob: -16.502513885498047
    8. 'unit' → logprob: -16.752513885498047
    9. '-system' → logprob: -16.877513885498047
    10. ' system' → logprob: -17.127513885498047

Token 1447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009939651004970074
    2. ')
' → logprob: -4.634939670562744
    3. '       ' → logprob: -8.759939193725586
    4. ').' → logprob: -10.759939193725586
    5. ')
' → logprob: -12.384939193725586
    6. ' )' → logprob: -15.009939193725586
    7. '   ' → logprob: -15.384939193725586
    8. ')

' → logprob: -15.759939193725586
    9. '),' → logprob: -15.759939193725586
    10. ')return' → logprob: -16.009939193725586

Token 1448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006932401098310947
    2. 'return' → logprob: -5.006932258605957
    3. ' return' → logprob: -8.506932258605957
    4. '<|end|>' → logprob: -12.131932258605957
    5. '   ' → logprob: -12.881932258605957
    6. '	return' → logprob: -13.256932258605957
    7. ')return' → logprob: -13.881932258605957
    8. '```' → logprob: -13.881932258605957
    9. ':return' → logprob: -14.131932258605957
    10. '{return' → logprob: -14.256932258605957

Token 1449: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006839334033429623
    2. '       ' → logprob: -5.006839275360107
    3. ' return' → logprob: -9.006839752197266
    4. '```' → logprob: -14.006839752197266
    5. '	return' → logprob: -15.256839752197266
    6. ')return' → logprob: -15.881839752197266
    7. '{return' → logprob: -15.881839752197266
    8. ':return' → logprob: -16.631839752197266
    9. '   ' → logprob: -16.756839752197266
    10. '`' → logprob: -17.506839752197266

Token 1450: ' ln' (ID: 68859)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ln' → logprob: -2.935296834039036e-06
    2. ' ln' → logprob: -12.75000286102295
    3. '_ln' → logprob: -20.125003814697266
    4. '-ln' → logprob: -21.875003814697266
    5. 'Ln' → logprob: -21.875003814697266
    6. 'LN' → logprob: -23.375003814697266
    7. '```' → logprob: -23.875003814697266
    8. '`' → logprob: -25.000003814697266
    9. 'lt' → logprob: -25.000003814697266
    10. 'l' → logprob: -25.250003814697266

Token 1451: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.0009213464800268412
    2. '.' → logprob: -7.000921249389648
    3. ' .' → logprob: -12.750921249389648
    4. 'format' → logprob: -12.875921249389648
    5. '.form' → logprob: -14.375921249389648
    6. '.to' → logprob: -15.000921249389648
    7. ').' → logprob: -15.250921249389648
    8. '(format' → logprob: -15.250921249389648
    9. ')' → logprob: -15.375921249389648
    10. '._' → logprob: -15.375921249389648

Token 1452: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1453: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1454: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08027263730764389
    2. 'main' → logprob: -3.330272674560547
    3. ' test' → logprob: -3.830272674560547
    4. ' __' → logprob: -5.580272674560547
    5. '__' → logprob: -5.830272674560547
    6. ' J' → logprob: -6.080272674560547
    7. ' solve' → logprob: -6.080272674560547
    8. ' run' → logprob: -6.330272674560547
    9. '_main' → logprob: -6.955272674560547
    10. ' solution' → logprob: -6.955272674560547

Token 1455: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0054608583450317
    2. '_int' → logprob: -2.005460739135742
    3. '_integer' → logprob: -2.130460739135742
    4. '_number' → logprob: -2.505460739135742
    5. 'int' → logprob: -2.880460739135742
    6. '_' → logprob: -3.130460739135742
    7. '_token' → logprob: -3.505460739135742
    8. ')' → logprob: -3.880460739135742
    9. '_base' → logprob: -4.505460739135742
    10. '_args' → logprob: -4.505460739135742

Token 1456: '(input' (ID: 10054)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004431778099387884
    2. '():
' → logprob: -6.12943172454834
    3. '()' → logprob: -6.37943172454834
    4. '(prompt' → logprob: -8.25443172454834
    5. '(line' → logprob: -8.62943172454834
    6. '(input' → logprob: -10.25443172454834
    7. '(' → logprob: -10.37943172454834
    8. '_line' → logprob: -11.12943172454834
    9. ' ():' → logprob: -11.50443172454834
    10. '(s' → logprob: -11.75443172454834

Token 1457: '_str' (ID: 6182)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06643830239772797
    2. '():' → logprob: -3.8164381980895996
    3. '_str' → logprob: -4.5664381980896
    4. '())' → logprob: -4.5664381980896
    5. '_line' → logprob: -4.8164381980896
    6. '_string' → logprob: -5.4414381980896
    7. '().' → logprob: -5.6914381980896
    8. '_' → logprob: -6.8164381980896
    9. '()):
' → logprob: -7.1914381980896
    10. '():
' → logprob: -7.5664381980896

Token 1458: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00814560055732727
    2. '):' → logprob: -5.383145809173584
    3. '):
' → logprob: -6.383145809173584
    4. ')' → logprob: -7.133145809173584
    5. ':str' → logprob: -7.383145809173584
    6. '   ' → logprob: -8.633145332336426
    7. ' :' → logprob: -9.883145332336426
    8. '_:' → logprob: -9.883145332336426
    9. '```' → logprob: -10.008145332336426
    10. '__:' → logprob: -11.633145332336426

Token 1459: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0004754751571454108
    2. ')' → logprob: -8.250475883483887
    3. ' str' → logprob: -9.000475883483887
    4. 'input' → logprob: -9.375475883483887
    5. '[str' → logprob: -12.625475883483887
    6. ':str' → logprob: -14.250475883483887
    7. '   ' → logprob: -15.000475883483887
    8. '=str' → logprob: -15.125475883483887
    9. '):
' → logprob: -15.125475883483887
    10. '(str' → logprob: -15.250475883483887

Token 1460: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017290872347075492
    2. '):
' → logprob: -9.62517261505127
    3. ')->' → logprob: -10.12517261505127
    4. '   ' → logprob: -10.50017261505127
    5. '):' → logprob: -10.75017261505127
    6. ',' → logprob: -11.87517261505127
    7. ':' → logprob: -12.12517261505127
    8. ' )' → logprob: -13.00017261505127
    9. '       ' → logprob: -13.62517261505127
    10. ')throws' → logprob: -15.12517261505127

Token 1461: ' ->' (ID: 2747)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.9637213349342346
    2. '->' → logprob: -1.3387212753295898
    3. ')' → logprob: -1.7137212753295898
    4. '(' → logprob: -2.96372127532959
    5. ' ->' → logprob: -3.21372127532959
    6. ':' → logprob: -3.71372127532959
    7. '   ' → logprob: -3.71372127532959
    8. '(line' → logprob: -4.33872127532959
    9. '()' → logprob: -5.33872127532959
    10. ')->' → logprob: -5.46372127532959

Token 1462: ' Iterator' (ID: 41994)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.47495681833243e-05
    2. 'Optional' → logprob: -11.500024795532227
    3. ' Tuple' → logprob: -11.500024795532227
    4. 'tuple' → logprob: -12.875024795532227
    5. 'List' → logprob: -13.500024795532227
    6. 'Iterator' → logprob: -15.125024795532227
    7. 'str' → logprob: -15.625024795532227
    8. 'int' → logprob: -17.125024795532227
    9. '_tuple' → logprob: -20.625024795532227
    10. '[' → logprob: -21.000024795532227

Token 1463: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.20156985521316528
    2. '[str' → logprob: -1.7015697956085205
    3. 'int' → logprob: -9.701569557189941
    4. '[' → logprob: -10.326569557189941
    5. ':' → logprob: -10.701569557189941
    6. '[token' → logprob: -10.951569557189941
    7. ':
' → logprob: -12.076569557189941
    8. '[
' → logprob: -12.951569557189941
    9. '[List' → logprob: -12.951569557189941
    10. 'tokens' → logprob: -13.201569557189941

Token 1464: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.01184639148414135
    2. 'int' → logprob: -4.761846542358398
    3. 'str' → logprob: -6.261846542358398
    4. 'tuple' → logprob: -6.636846542358398
    5. ' Tuple' → logprob: -11.886846542358398
    6. 'List' → logprob: -15.261846542358398
    7. '[int' → logprob: -15.261846542358398
    8. '[str' → logprob: -17.0118465423584
    9. 'Tu' → logprob: -17.1368465423584
    10. 'tu' → logprob: -17.2618465423584

Token 1465: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.3870018422603607
    2. 'int' → logprob: -1.137001872062683
    3. '[
' → logprob: -9.762001991271973
    4. '   ' → logprob: -10.887001991271973
    5. '
' → logprob: -11.387001991271973
    6. '(int' → logprob: -11.387001991271973
    7. ']' → logprob: -11.887001991271973
    8. ',int' → logprob: -12.012001991271973
    9. '[str' → logprob: -12.012001991271973
    10. ' int' → logprob: -12.262001991271973

Token 1466: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007734634447842836
    2. ',int' → logprob: -4.882734775543213
    3. 'int' → logprob: -9.507734298706055
    4. '[int' → logprob: -10.632734298706055
    5. '[' → logprob: -12.132734298706055
    6. ',
' → logprob: -12.382734298706055
    7. ',str' → logprob: -12.757734298706055
    8. ',bool' → logprob: -12.757734298706055
    9. ',Integer' → logprob: -12.882734298706055
    10. ' ,' → logprob: -13.007734298706055

Token 1467: ']]:
' (ID: 183340)
  Prédit: ']>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>' → logprob: -0.15197667479515076
    2. ']' → logprob: -2.0269765853881836
    3. ',' → logprob: -4.901976585388184
    4. ']>
' → logprob: -6.526976585388184
    5. ']:' → logprob: -8.151976585388184
    6. ']>=' → logprob: -10.901976585388184
    7. ']]:
' → logprob: -11.026976585388184
    8. ']:
' → logprob: -11.651976585388184
    9. ']}>
' → logprob: -11.776976585388184
    10. '],' → logprob: -12.276976585388184

Token 1468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01372784934937954
    2. 'import' → logprob: -5.01372766494751
    3. '```' → logprob: -5.01372766494751
    4. '       ' → logprob: -8.763728141784668
    5. ':' → logprob: -10.013728141784668
    6. '``' → logprob: -11.013728141784668
    7. ' import' → logprob: -11.013728141784668
    8. ' for' → logprob: -11.138728141784668
    9. '    
' → logprob: -11.138728141784668
    10. '...' → logprob: -11.138728141784668

Token 1469: ' """
' (ID: 7037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13463304936885834
    2. '   ' → logprob: -2.1346330642700195
    3. 'import' → logprob: -5.2596330642700195
    4. ' for' → logprob: -6.6346330642700195
    5. 'line' → logprob: -7.3846330642700195
    6. '```' → logprob: -8.38463306427002
    7. 'from' → logprob: -9.38463306427002
    8. 'yield' → logprob: -9.38463306427002
    9. '       ' → logprob: -9.63463306427002
    10. 'def' → logprob: -10.25963306427002

Token 1470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8684223890304565
    2. 'for' → logprob: -1.2434223890304565
    3. 'line' → logprob: -1.6184223890304565
    4. 'import' → logprob: -3.368422508239746
    5. '```' → logprob: -3.368422508239746
    6. '       ' → logprob: -4.368422508239746
    7. 'yield' → logprob: -4.743422508239746
    8. ' for' → logprob: -6.868422508239746
    9. ' line' → logprob: -7.118422508239746
    10. 'token' → logprob: -7.743422508239746

Token 1471: ' Parse' (ID: 26701)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05940590798854828
    2. 'import' → logprob: -4.05940580368042
    3. 'def' → logprob: -4.05940580368042
    4. '   ' → logprob: -4.55940580368042
    5. 'line' → logprob: -5.18440580368042
    6. 'lines' → logprob: -5.43440580368042
    7. 'from' → logprob: -6.55940580368042
    8. 'yield' → logprob: -7.18440580368042
    9. '```' → logprob: -7.93440580368042
    10. 'while' → logprob: -9.059406280517578

Token 1472: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0616544708609581
    2. 'line' → logprob: -3.311654567718506
    3. ' input' → logprob: -3.811654567718506
    4. ' line' → logprob: -7.061654567718506
    5. '   ' → logprob: -9.311654090881348
    6. 'iter' → logprob: -9.686654090881348
    7. ' iter' → logprob: -10.061654090881348
    8. 'int' → logprob: -10.186654090881348
    9. 'i' → logprob: -10.311654090881348
    10. 'for' → logprob: -10.686654090881348

Token 1473: ' lines' (ID: 8698)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.5348342657089233
    2. '   ' → logprob: -1.1598342657089233
    3. 'line' → logprob: -3.159834384918213
    4. '(lines' → logprob: -3.659834384918213
    5. 'lines' → logprob: -4.034834384918213
    6. '(input' → logprob: -5.159834384918213
    7. 'for' → logprob: -6.034834384918213
    8. ' line' → logprob: -6.909834384918213
    9. 'def' → logprob: -7.159834384918213
    10. '       ' → logprob: -7.284834384918213

Token 1474: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6939899325370789
    2. '(line' → logprob: -0.8189899325370789
    3. '       ' → logprob: -3.9439899921417236
    4. '(input' → logprob: -4.5689897537231445
    5. '(lines' → logprob: -4.5689897537231445
    6. 'line' → logprob: -4.9439897537231445
    7. 'for' → logprob: -6.1939897537231445
    8. '(' → logprob: -6.3189897537231445
    9. 'input' → logprob: -6.5689897537231445
    10. ':' → logprob: -7.0689897537231445

Token 1475: ' yield' (ID: 14376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2231299877166748
    2. 'for' → logprob: -1.5981299877166748
    3. 'def' → logprob: -1.7231299877166748
    4. '```' → logprob: -2.098129987716675
    5. ' for' → logprob: -2.598129987716675
    6. 'yield' → logprob: -2.598129987716675
    7. '       ' → logprob: -4.223130226135254
    8. '
' → logprob: -4.473130226135254
    9. 'strip' → logprob: -4.598130226135254
    10. 'line' → logprob: -5.473130226135254

Token 1476: ' tuples' (ID: 112464)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2099331021308899
    2. '   ' → logprob: -2.959933042526245
    3. '(int' → logprob: -3.209933042526245
    4. 'line' → logprob: -3.834933042526245
    5. 'base' → logprob: -4.084933280944824
    6. 'tuple' → logprob: -4.209933280944824
    7. 'tokens' → logprob: -4.334933280944824
    8. '(line' → logprob: -4.959933280944824
    9. '
' → logprob: -4.959933280944824
    10. 'from' → logprob: -5.209933280944824

Token 1477: ' (' (ID: 350)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.3561233878135681
    2. '(int' → logprob: -2.356123447418213
    3. ' of' → logprob: -2.981123447418213
    4. 'of' → logprob: -2.981123447418213
    5. '(' → logprob: -3.106123447418213
    6. '   ' → logprob: -3.106123447418213
    7. '[int' → logprob: -5.356123447418213
    8. 'for' → logprob: -5.981123447418213
    9. '(
' → logprob: -6.731123447418213
    10. '(str' → logprob: -7.231123447418213

Token 1478: 'm' (ID: 76)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012696358608081937
    2. 'base' → logprob: -7.001269817352295
    3. ')' → logprob: -8.626269340515137
    4. '   ' → logprob: -9.001269340515137
    5. '[int' → logprob: -10.376269340515137
    6. '
' → logprob: -11.751269340515137
    7. ' int' → logprob: -12.626269340515137
    8. '),' → logprob: -13.126269340515137
    9. '    
' → logprob: -13.501269340515137
    10. '       ' → logprob: -13.626269340515137

Token 1479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001968839205801487
    2. ',n' → logprob: -6.501968860626221
    3. ',int' → logprob: -8.126968383789062
    4. ',
' → logprob: -9.251968383789062
    5. ' ,' → logprob: -10.751968383789062
    6. 'n' → logprob: -11.876968383789062
    7. '   ' → logprob: -11.876968383789062
    8. 'int' → logprob: -12.001968383789062
    9. ')' → logprob: -12.251968383789062
    10. ':int' → logprob: -12.376968383789062

Token 1480: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.953082341467962e-05
    2. ' n' → logprob: -10.500039100646973
    3. 'e' → logprob: -12.125039100646973
    4. 'ex' → logprob: -12.500039100646973
    5. '   ' → logprob: -13.625039100646973
    6. 'int' → logprob: -15.000039100646973
    7. ',' → logprob: -15.125039100646973
    8. ')' → logprob: -15.375039100646973
    9. ',n' → logprob: -15.375039100646973
    10. '           ' → logprob: -15.875039100646973

Token 1481: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7616676688194275
    2. '):' → logprob: -0.7616676688194275
    3. ')' → logprob: -2.7616677284240723
    4. '   ' → logprob: -5.886667728424072
    5. '):
' → logprob: -8.886667251586914
    6. '       ' → logprob: -10.136667251586914
    7. ',' → logprob: -10.386667251586914
    8. ':' → logprob: -11.386667251586914
    9. ')`' → logprob: -12.136667251586914
    10. ')**' → logprob: -12.761667251586914

Token 1482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029847444966435432
    2. '```' → logprob: -4.279847621917725
    3. ':
' → logprob: -5.029847621917725
    4. ':' → logprob: -5.154847621917725
    5. '       ' → logprob: -7.029847621917725
    6. 'def' → logprob: -7.279847621917725
    7. 'for' → logprob: -7.779847621917725
    8. '():' → logprob: -7.904847621917725
    9. '():
' → logprob: -8.154847145080566
    10. '(line' → logprob: -8.404847145080566

Token 1483: ' Stops' (ID: 187600)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005681091919541359
    2. 'for' → logprob: -5.755681037902832
    3. '```' → logprob: -6.380681037902832
    4. '       ' → logprob: -7.880681037902832
    5. ' for' → logprob: -8.005681037902832
    6. 'import' → logprob: -10.755681037902832
    7. 'def' → logprob: -11.005681037902832
    8. ' line' → logprob: -11.505681037902832
    9. ' lines' → logprob: -11.630681037902832
    10. 'from' → logprob: -11.880681037902832

Token 1484: ' when' (ID: 1261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09453575313091278
    2. '   ' → logprob: -2.9695358276367188
    3. 'while' → logprob: -4.344535827636719
    4. ' for' → logprob: -4.594535827636719
    5. 'if' → logprob: -5.719535827636719
    6. '
' → logprob: -5.969535827636719
    7. '```' → logprob: -5.969535827636719
    8. 'import' → logprob: -6.594535827636719
    9. ' at' → logprob: -6.844535827636719
    10. 'from' → logprob: -7.094535827636719

Token 1485: ' a' (ID: 261)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.15030673146247864
    2. 'not' → logprob: -2.0253067016601562
    3. ' not' → logprob: -5.400306701660156
    4. 'False' → logprob: -6.025306701660156
    5. ' input' → logprob: -7.525306701660156
    6. 'len' → logprob: -10.150306701660156
    7. 'line' → logprob: -10.150306701660156
    8. ' False' → logprob: -10.650306701660156
    9. '''' → logprob: -11.275306701660156
    10. '(input' → logprob: -12.025306701660156

Token 1486: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6690795421600342
    2. 'line' → logprob: -0.9190795421600342
    3. '\n' → logprob: -3.294079542160034
    4. 'm' → logprob: -4.419079780578613
    5. ''\' → logprob: -4.794079780578613
    6. 'n' → logprob: -5.419079780578613
    7. 'def' → logprob: -5.919079780578613
    8. '''' → logprob: -5.919079780578613
    9. 'b' → logprob: -6.044079780578613
    10. 'empty' → logprob: -6.294079780578613

Token 1487: ' with' (ID: 483)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020147308707237244
    2. '.strip' → logprob: -4.520147323608398
    3. ' ==' → logprob: -4.770147323608398
    4. 'strip' → logprob: -8.395147323608398
    5. '```' → logprob: -8.895147323608398
    6. '   ' → logprob: -10.145147323608398
    7. '.startswith' → logprob: -10.395147323608398
    8. '.endswith' → logprob: -10.645147323608398
    9. 'startswith' → logprob: -10.895147323608398
    10. '=' → logprob: -10.895147323608398

Token 1488: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8082194328308105
    2. 'input' → logprob: -1.3082194328308105
    3. 'm' → logprob: -2.5582194328308105
    4. 'not' → logprob: -2.9332194328308105
    5. '"' → logprob: -3.4332194328308105
    6. '''' → logprob: -3.5582194328308105
    7. '==' → logprob: -3.8082194328308105
    8. ''m' → logprob: -3.9332194328308105
    9. ' not' → logprob: -4.4332194328308105
    10. '""' → logprob: -4.4332194328308105

Token 1489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28259041905403137
    2. ''' → logprob: -1.532590389251709
    3. '')' → logprob: -3.782590389251709
    4. '"' → logprob: -5.907590389251709
    5. '''' → logprob: -7.157590389251709
    6. ' ' → logprob: -7.157590389251709
    7. '```' → logprob: -7.282590389251709
    8. '\n' → logprob: -8.032590866088867
    9. '(' → logprob: -8.157590866088867
    10. ' '' → logprob: -8.407590866088867

Token 1490: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4777780771255493
    2. '0' → logprob: -1.6027780771255493
    3. ' ' → logprob: -1.9777780771255493
    4. ' '' → logprob: -3.2277779579162598
    5. '\n' → logprob: -8.352778434753418
    6. '')' → logprob: -9.352778434753418
    7. '```' → logprob: -9.977778434753418
    8. ''''' → logprob: -10.602778434753418
    9. ' ' → logprob: -11.602778434753418
    10. '   ' → logprob: -11.727778434753418

Token 1491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013553926721215248
    2. ''' → logprob: -4.388554096221924
    3. ' ' → logprob: -7.513554096221924
    4. '')' → logprob: -8.263553619384766
    5. '\n' → logprob: -8.513553619384766
    6. '```' → logprob: -11.513553619384766
    7. ''''' → logprob: -12.388553619384766
    8. ''\' → logprob: -12.513553619384766
    9. '"' → logprob: -12.638553619384766
    10. '\r' → logprob: -12.888553619384766

Token 1492: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03012879379093647
    2. '\n' → logprob: -3.5301287174224854
    3. '')' → logprob: -8.405128479003906
    4. ''):
' → logprob: -9.780128479003906
    5. ')'' → logprob: -10.155128479003906
    6. ''''' → logprob: -11.280128479003906
    7. ''
' → logprob: -11.655128479003906
    8. '':
' → logprob: -11.655128479003906
    9. ''\' → logprob: -11.780128479003906
    10. '"'' → logprob: -12.030128479003906

Token 1493: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4131101667881012
    2. '   ' → logprob: -1.6631101369857788
    3. '(input' → logprob: -2.9131102561950684
    4. '(line' → logprob: -3.0381102561950684
    5. '(' → logprob: -4.413110256195068
    6. '(lines' → logprob: -4.788110256195068
    7. ':' → logprob: -5.413110256195068
    8. '():' → logprob: -5.413110256195068
    9. '(str' → logprob: -5.663110256195068
    10. 'for' → logprob: -5.913110256195068

Token 1494: ' encountered' (ID: 41065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5504828691482544
    2. 'def' → logprob: -1.6754828691482544
    3. ':
' → logprob: -1.9254828691482544
    4. '
' → logprob: -3.425482749938965
    5. '\n' → logprob: -4.050482749938965
    6. '       ' → logprob: -4.175482749938965
    7. ':' → logprob: -5.300482749938965
    8. '():
' → logprob: -5.675482749938965
    9. 'for' → logprob: -5.925482749938965
    10. '):
' → logprob: -6.175482749938965

Token 1495: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005093070212751627
    2. ':' → logprob: -8.375509262084961
    3. 'def' → logprob: -9.500509262084961
    4. '():' → logprob: -10.000509262084961
    5. '(' → logprob: -10.125509262084961
    6. ':
' → logprob: -10.625509262084961
    7. '
' → logprob: -11.125509262084961
    8. 'for' → logprob: -11.125509262084961
    9. '(lines' → logprob: -11.250509262084961
    10. '       ' → logprob: -11.875509262084961

Token 1496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00540521927177906
    2. '```' → logprob: -5.380405426025391
    3. 'for' → logprob: -7.505405426025391
    4. '
' → logprob: -9.38040542602539
    5. ' for' → logprob: -10.00540542602539
    6. '       ' → logprob: -10.13040542602539
    7. '    
' → logprob: -10.75540542602539
    8. 'def' → logprob: -10.88040542602539
    9. ':' → logprob: -11.63040542602539
    10. '``' → logprob: -11.88040542602539

Token 1497: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06577805429697037
    2. 'for' → logprob: -3.3157780170440674
    3. 'def' → logprob: -3.6907780170440674
    4. '```' → logprob: -6.8157782554626465
    5. ' for' → logprob: -7.0657782554626465
    6. '
' → logprob: -8.065777778625488
    7. '       ' → logprob: -10.065777778625488
    8. '    
' → logprob: -10.440777778625488
    9. '	for' → logprob: -11.315777778625488
    10. 'yield' → logprob: -11.440777778625488

Token 1498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014947010204195976
    2. 'for' → logprob: -4.264946937561035
    3. '```' → logprob: -8.014946937561035
    4. ' for' → logprob: -8.264946937561035
    5. '       ' → logprob: -9.014946937561035
    6. 'import' → logprob: -9.764946937561035
    7. 'from' → logprob: -12.139946937561035
    8. '	for' → logprob: -12.639946937561035
    9. 'def' → logprob: -13.014946937561035
    10. 'yield' → logprob: -13.389946937561035

Token 1499: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038073740899562836
    2. '   ' → logprob: -3.288073778152466
    3. ' for' → logprob: -10.663073539733887
    4. 'lines' → logprob: -12.038073539733887
    5. '	for' → logprob: -13.788073539733887
    6. 'from' → logprob: -14.038073539733887
    7. '       ' → logprob: -14.913073539733887
    8. '
' → logprob: -15.038073539733887
    9. '```' → logprob: -15.163073539733887
    10. 'import' → logprob: -16.288074493408203

Token 1500: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0002613358374219388
    2. ' line' → logprob: -8.250261306762695
    3. '	line' → logprob: -18.000261306762695
    4. '   ' → logprob: -18.250261306762695
    5. 'input' → logprob: -20.250261306762695
    6. 'raw' → logprob: -20.625261306762695
    7. '(line' → logprob: -20.625261306762695
    8. ' ' → logprob: -20.750261306762695
    9. '
' → logprob: -21.000261306762695
    10. '_line' → logprob: -21.750261306762695

Token 1501: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01969062350690365
    2. 'in' → logprob: -4.01969051361084
    3. '       ' → logprob: -6.51969051361084
    4. '   ' → logprob: -10.64469051361084
    5. '.strip' → logprob: -10.64469051361084
    6. '.rstrip' → logprob: -12.51969051361084
    7. 'line' → logprob: -13.64469051361084
    8. '```' → logprob: -13.76969051361084
    9. '[line' → logprob: -13.89469051361084
    10. 'tokens' → logprob: -13.89469051361084

Token 1502: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011765359668061137
    2. ' input' → logprob: -6.751176357269287
    3. 'iter' → logprob: -12.501176834106445
    4. 'line' → logprob: -13.376176834106445
    5. '(input' → logprob: -14.251176834106445
    6. '<input' → logprob: -16.376176834106445
    7. '   ' → logprob: -16.626176834106445
    8. '```' → logprob: -17.376176834106445
    9. ' ' → logprob: -17.626176834106445
    10. '	input' → logprob: -17.751176834106445

Token 1503: '_str' (ID: 6182)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5768923759460449
    2. '.strip' → logprob: -1.951892375946045
    3. '():
' → logprob: -2.326892375946045
    4. 'in' → logprob: -3.576892375946045
    5. 'strip' → logprob: -3.576892375946045
    6. '   ' → logprob: -3.826892375946045
    7. '.split' → logprob: -4.201892375946045
    8. '```' → logprob: -4.451892375946045
    9. '_strip' → logprob: -4.576892375946045
    10. ' in' → logprob: -4.576892375946045

Token 1504: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.2251151204109192
    2. '.split' → logprob: -2.1001150608062744
    3. '.rstrip' → logprob: -2.9751150608062744
    4. '().' → logprob: -4.2251152992248535
    5. '   ' → logprob: -5.1001152992248535
    6. '       ' → logprob: -5.3501152992248535
    7. ' in' → logprob: -6.6001152992248535
    8. ':
' → logprob: -8.475114822387695
    9. '():
' → logprob: -8.600114822387695
    10. '.' → logprob: -8.725114822387695

Token 1505: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1322917342185974
    2. '():' → logprob: -2.382291793823242
    3. '():
' → logprob: -3.507291793823242
    4. '()' → logprob: -6.882291793823242
    5. '()==' → logprob: -9.257291793823242
    6. '.split' → logprob: -9.507291793823242
    7. '()[' → logprob: -9.882291793823242
    8. '   ' → logprob: -10.007291793823242
    9. '('\' → logprob: -10.132291793823242
    10. '()
' → logprob: -10.132291793823242

Token 1506: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016039233014453202
    2. 'lines' → logprob: -8.750160217285156
    3. 'line' → logprob: -13.625160217285156
    4. ' split' → logprob: -15.500160217285156
    5. '(split' → logprob: -16.000160217285156
    6. 'strip' → logprob: -16.000160217285156
    7. '_split' → logprob: -17.250160217285156
    8. '.split' → logprob: -17.500160217285156
    9. 'rstrip' → logprob: -17.750160217285156
    10. 'spl' → logprob: -18.000160217285156

Token 1507: 'lines' (ID: 10105)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.4766519367694855
    2. 'lines' → logprob: -0.9766519069671631
    3. '()' → logprob: -6.101652145385742
    4. ''\' → logprob: -8.601652145385742
    5. '()\' → logprob: -9.726652145385742
    6. '()
' → logprob: -10.101652145385742
    7. '()[' → logprob: -10.851652145385742
    8. '("\' → logprob: -10.976652145385742
    9. '():' → logprob: -12.476652145385742
    10. '():
' → logprob: -12.726652145385742

Token 1508: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.41177546977996826
    2. '       ' → logprob: -1.7867754697799683
    3. '():' → logprob: -2.036775588989258
    4. ':
' → logprob: -4.036775588989258
    5. ':' → logprob: -4.411775588989258
    6. '   ' → logprob: -5.036775588989258
    7. '```' → logprob: -6.411775588989258
    8. '()' → logprob: -7.286775588989258
    9. ',' → logprob: -9.036775588989258
    10. '('' → logprob: -9.161775588989258

Token 1509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.811348480870947e-05
    2. '   ' → logprob: -10.25004768371582
    3. 'tokens' → logprob: -12.12504768371582
    4. '```' → logprob: -13.00004768371582
    5. 'yield' → logprob: -14.00004768371582
    6. '    ' → logprob: -14.37504768371582
    7. '           ' → logprob: -14.37504768371582
    8. '	   ' → logprob: -14.37504768371582
    9. ' if' → logprob: -14.50004768371582
    10. 'token' → logprob: -14.87504768371582

Token 1510: ' line' (ID: 2543)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.24827799201011658
    2. 'if' → logprob: -1.998278021812439
    3. '       ' → logprob: -2.4982779026031494
    4. ' if' → logprob: -7.2482781410217285
    5. 'line' (adapté à ' line') → logprob: -7.7482781410217285
    6. 'tokens' → logprob: -8.24827766418457
    7. '   ' → logprob: -8.37327766418457
    8. 'parts' → logprob: -8.62327766418457
    9. ' m' → logprob: -8.99827766418457
    10. '           ' → logprob: -9.37327766418457

Token 1511: ' =' (ID: 314)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.8567789793014526
    2. '=' → logprob: -1.4817789793014526
    3. '_tokens' → logprob: -1.7317789793014526
    4. ' =' → logprob: -2.981779098510742
    5. 'tokens' → logprob: -3.481779098510742
    6. '.split' → logprob: -3.606779098510742
    7. '.rstrip' → logprob: -3.606779098510742
    8. '==' → logprob: -4.481779098510742
    9. '.startswith' → logprob: -5.356779098510742
    10. '       ' → logprob: -5.981779098510742

Token 1512: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0009122979827225208
    2. ' line' → logprob: -7.000912189483643
    3. '           ' → logprob: -15.2509126663208
    4. '(line' → logprob: -15.5009126663208
    5. '	line' → logprob: -15.8759126663208
    6. '=line' → logprob: -16.000911712646484
    7. '#line' → logprob: -16.750911712646484
    8. '[line' → logprob: -17.250911712646484
    9. '       ' → logprob: -17.875911712646484
    10. '   ' → logprob: -18.750911712646484

Token 1513: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.000331055314745754
    2. '.rstrip' → logprob: -9.125330924987793
    3. '.split' → logprob: -9.375330924987793
    4. '().' → logprob: -9.500330924987793
    5. '.' → logprob: -10.375330924987793
    6. 'strip' → logprob: -10.625330924987793
    7. '.replace' → logprob: -12.875330924987793
    8. 'if' → logprob: -14.250330924987793
    9. '.l' → logprob: -14.500330924987793
    10. '       ' → logprob: -14.625330924987793

Token 1514: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09332789480686188
    2. 'if' → logprob: -2.4683279991149902
    3. ' if' → logprob: -5.46832799911499
    4. '           ' → logprob: -9.218327522277832
    5. ',' → logprob: -10.218327522277832
    6. '<|end|>' → logprob: -12.093327522277832
    7. '   ' → logprob: -12.843327522277832
    8. '	if' → logprob: -13.093327522277832
    9. '<|end|>' → logprob: -13.093327522277832
    10. '=' → logprob: -13.468327522277832

Token 1515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.102239228785038
    2. 'if' → logprob: -2.3522391319274902
    3. ' if' → logprob: -6.22723913192749
    4. '   ' → logprob: -9.977239608764648
    5. '           ' → logprob: -12.977239608764648
    6. '	if' → logprob: -13.352239608764648
    7. '```' → logprob: -13.727239608764648
    8. '<|end|>' → logprob: -13.852239608764648
    9. 'If' → logprob: -14.477239608764648
    10. ',' → logprob: -14.602239608764648

Token 1516: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.008129963040119e-06
    2. ' if' → logprob: -12.750003814697266
    3. '       ' → logprob: -13.750003814697266
    4. '           ' → logprob: -19.625003814697266
    5. 'If' → logprob: -19.625003814697266
    6. '   ' → logprob: -20.000003814697266
    7. '#' → logprob: -20.125003814697266
    8. '```' → logprob: -21.000003814697266
    9. '	if' → logprob: -21.250003814697266
    10. ';if' → logprob: -21.625003814697266

Token 1517: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02618010900914669
    2. 'not' → logprob: -3.7761800289154053
    3. ' not' → logprob: -6.526180267333984
    4. ' line' → logprob: -6.526180267333984
    5. '(line' → logprob: -14.776180267333984
    6. 'len' → logprob: -15.026180267333984
    7. '   ' → logprob: -15.401180267333984
    8. '	line' → logprob: -16.401180267333984
    9. '#line' → logprob: -17.401180267333984
    10. '!' → logprob: -18.401180267333984

Token 1518: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.7610454708337784e-05
    2. ' line' → logprob: -10.500027656555176
    3. '(line' → logprob: -17.50002670288086
    4. '	line' → logprob: -20.37502670288086
    5. '
' → logprob: -21.75002670288086
    6. '#line' → logprob: -21.87502670288086
    7. '0' → logprob: -22.00002670288086
    8. 'len' → logprob: -22.25002670288086
    9. '[line' → logprob: -22.87502670288086
    10. 'lines' → logprob: -23.25002670288086

Token 1519: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8529713749885559
    2. '==' → logprob: -0.8529713749885559
    3. '.startswith' → logprob: -2.477971315383911
    4. 'or' → logprob: -3.227971315383911
    5. ':' → logprob: -4.47797155380249
    6. ':
' → logprob: -4.72797155380249
    7. ' ==' → logprob: -5.97797155380249
    8. 'startswith' → logprob: -7.97797155380249
    9. '```' → logprob: -8.352971076965332
    10. '       ' → logprob: -8.602971076965332

Token 1520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04038100689649582
    2. 'if' → logprob: -3.5403809547424316
    3. 'continue' → logprob: -4.790380954742432
    4. ':' → logprob: -6.790380954742432
    5. '==' → logprob: -8.16538143157959
    6. ' continue' → logprob: -8.29038143157959
    7. ' if' → logprob: -8.41538143157959
    8. '       ' → logprob: -8.79038143157959
    9. ':
' → logprob: -9.91538143157959
    10. '               ' → logprob: -10.16538143157959

Token 1521: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.41836848855018616
    2. 'if' → logprob: -1.6683684587478638
    3. '           ' → logprob: -1.9183684587478638
    4. 'break' → logprob: -5.293368339538574
    5. ' continue' → logprob: -7.043368339538574
    6. '               ' → logprob: -7.793368339538574
    7. ' if' → logprob: -9.418368339538574
    8. 'yield' → logprob: -9.668368339538574
    9. 'return' → logprob: -11.543368339538574
    10. '       ' → logprob: -12.293368339538574

Token 1522: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05618917569518089
    2. 'if' → logprob: -2.9311890602111816
    3. ' if' → logprob: -6.931189060211182
    4. 'tokens' → logprob: -8.30618953704834
    5. '           ' → logprob: -10.55618953704834
    6. 'token' → logprob: -10.68118953704834
    7. '```' → logprob: -11.18118953704834
    8. 'yield' → logprob: -11.55618953704834
    9. ',' → logprob: -12.93118953704834
    10. 'parts' → logprob: -13.18118953704834

Token 1523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4012516438961029
    2. 'if' → logprob: -1.1512516736984253
    3. 'm' → logprob: -4.526251792907715
    4. 'tokens' → logprob: -6.151251792907715
    5. 'parts' → logprob: -7.151251792907715
    6. '```' → logprob: -8.276251792907715
    7. ' if' → logprob: -8.526251792907715
    8. 'yield' → logprob: -10.026251792907715
    9. '           ' → logprob: -10.776251792907715
    10. 'token' → logprob: -11.901251792907715

Token 1524: ' parts' (ID: 7881)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10299067199230194
    2. 'if' → logprob: -2.6029906272888184
    3. 'tokens' → logprob: -4.352990627288818
    4. '       ' → logprob: -4.727990627288818
    5. 'parts' (adapté à ' parts') → logprob: -6.227990627288818
    6. '```' → logprob: -10.102991104125977
    7. 'yield' → logprob: -11.102991104125977
    8. 'values' → logprob: -11.352991104125977
    9. ' if' → logprob: -11.602991104125977
    10. ' m' → logprob: -11.602991104125977

Token 1525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.127333340875339e-06
    2. '=line' → logprob: -12.625003814697266
    3. ' =' → logprob: -14.125003814697266
    4. '＝' → logprob: -17.750003814697266
    5. 'tokens' → logprob: -18.875003814697266
    6. '.=' → logprob: -19.500003814697266
    7. '==' → logprob: -19.875003814697266
    8. '=[]' → logprob: -19.875003814697266
    9. '=
' → logprob: -19.875003814697266
    10. '=}' → logprob: -20.500003814697266

Token 1526: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.5048530030981055e-06
    2. ' line' → logprob: -13.500001907348633
    3. '[line' → logprob: -19.000001907348633
    4. '(line' → logprob: -20.500001907348633
    5. 'list' → logprob: -21.750001907348633
    6. '	line' → logprob: -23.000001907348633
    7. '=line' → logprob: -23.125001907348633
    8. 'Line' → logprob: -24.250001907348633
    9. '[' → logprob: -24.625001907348633
    10. '_line' → logprob: -25.250001907348633

Token 1527: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.822646693966817e-06
    2. ' =' → logprob: -12.125007629394531
    3. '=line' → logprob: -13.125007629394531
    4. '.split' → logprob: -15.250007629394531
    5. 'split' → logprob: -17.00000762939453
    6. '==' → logprob: -17.25000762939453
    7. 'tokens' → logprob: -17.62500762939453
    8. '＝' → logprob: -17.75000762939453
    9. '.=' → logprob: -18.37500762939453
    10. 'spl' → logprob: -19.25000762939453

Token 1528: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9721373915672302
    2. '1' → logprob: -1.222137451171875
    3. '2' → logprob: -1.472137451171875
    4. '[' → logprob: -2.972137451171875
    5. '['' → logprob: -4.347137451171875
    6. '('' → logprob: -4.472137451171875
    7. '<|end|>' → logprob: -5.097137451171875
    8. '0' → logprob: -5.722137451171875
    9. '(max' → logprob: -6.222137451171875
    10. '[
' → logprob: -6.222137451171875

Token 1529: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012140735983848572
    2. '       ' → logprob: -4.51214075088501
    3. ' if' → logprob: -7.13714075088501
    4. '           ' → logprob: -8.637140274047852
    5. '```' → logprob: -10.012140274047852
    6. 'yield' → logprob: -10.137140274047852
    7. '[' → logprob: -10.637140274047852
    8. 'for' → logprob: -12.512140274047852
    9. '0' → logprob: -13.137140274047852
    10. '               ' → logprob: -13.512140274047852

Token 1530: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06456578522920609
    2. 'm' → logprob: -2.814565896987915
    3. 'yield' → logprob: -6.564565658569336
    4. '       ' → logprob: -6.814565658569336
    5. ' if' → logprob: -9.939565658569336
    6. 'for' → logprob: -11.189565658569336
    7. 'int' → logprob: -11.314565658569336
    8. '           ' → logprob: -12.189565658569336
    9. '```' → logprob: -12.689565658569336
    10. 'i' → logprob: -12.814565658569336

Token 1531: ' len' (ID: 4631)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.023275531828403473
    2. 'len' → logprob: -3.77327561378479
    3. ' parts' → logprob: -10.523275375366211
    4. 'int' → logprob: -13.523275375366211
    5. ' len' → logprob: -13.523275375366211
    6. '(parts' → logprob: -14.773275375366211
    7. '(len' → logprob: -17.52327537536621
    8. '   ' → logprob: -17.64827537536621
    9. '       ' → logprob: -17.89827537536621
    10. 'Parts' → logprob: -19.27327537536621

Token 1532: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0003365350130479783
    2. 'parts' → logprob: -8.000336647033691
    3. '==' → logprob: -14.750336647033691
    4. ' parts' → logprob: -15.125336647033691
    5. '(' → logprob: -15.375336647033691
    6. '_parts' → logprob: -17.000335693359375
    7. '(tokens' → logprob: -18.000335693359375
    8. '```' → logprob: -18.125335693359375
    9. '(
' → logprob: -18.375335693359375
    10. '[' → logprob: -18.875335693359375

Token 1533: ')' (ID: 8)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.44514763355255127
    2. '==' → logprob: -1.5701476335525513
    3. '<' → logprob: -1.9451476335525513
    4. ' !=' → logprob: -4.945147514343262
    5. '[' → logprob: -7.570147514343262
    6. ' ==' → logprob: -8.070147514343262
    7. '```' → logprob: -9.445147514343262
    8. '>' → logprob: -10.320147514343262
    9. '>=' → logprob: -10.320147514343262
    10. ' <' → logprob: -10.445147514343262

Token 1534: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07844506949186325
    2. '<' → logprob: -2.9534449577331543
    3. '==' → logprob: -3.8284449577331543
    4. ' !=' → logprob: -6.578444957733154
    5. '```' → logprob: -9.453445434570312
    6. '!==' → logprob: -11.078445434570312
    7. '[' → logprob: -11.203445434570312
    8. '>' → logprob: -11.453445434570312
    9. '1' → logprob: -11.703445434570312
    10. ' ==' → logprob: -12.078445434570312

Token 1535: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۲' → logprob: -18.875001907348633
    4. '２' → logprob: -19.125001907348633
    5. '```' → logprob: -19.750001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '=' → logprob: -19.875001907348633
    8. '٢' → logprob: -21.000001907348633
    9. '२' → logprob: -21.500001907348633
    10. '২' → logprob: -21.500001907348633

Token 1536: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.1250057220459
    4. '۲' → logprob: -19.0000057220459
    5. '２' → logprob: -19.6250057220459
    6. '=' → logprob: -19.6250057220459
    7. '```' → logprob: -19.6250057220459
    8. '२' → logprob: -20.9375057220459
    9. '২' → logprob: -20.9375057220459
    10. '1' → logprob: -21.1875057220459

Token 1537: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6869800090789795
    2. ' and' → logprob: -1.4369800090789795
    3. ':' → logprob: -2.1869800090789795
    4. ' or' → logprob: -2.5619800090789795
    5. '           ' → logprob: -3.0619800090789795
    6. 'or' → logprob: -4.186980247497559
    7. ':
' → logprob: -5.186980247497559
    8. 'if' → logprob: -7.186980247497559
    9. '[' → logprob: -8.311980247497559
    10. '               ' → logprob: -8.311980247497559

Token 1538: '           ' (ID: 352)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5994459986686707
    2. 'if' → logprob: -0.8494459986686707
    3. '           ' → logprob: -3.8494460582733154
    4. 'continue' → logprob: -6.974445819854736
    5. ' if' → logprob: -8.349446296691895
    6. 'int' → logprob: -8.349446296691895
    7. 'yield' → logprob: -8.349446296691895
    8. 'return' → logprob: -9.474446296691895
    9. ' m' → logprob: -9.724446296691895
    10. '               ' → logprob: -9.724446296691895

Token 1539: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.14391592144966125
    2. 'return' → logprob: -2.143915891647339
    3. '           ' → logprob: -4.393916130065918
    4. 'yield' → logprob: -5.893916130065918
    5. '               ' → logprob: -6.893916130065918
    6. 'break' → logprob: -7.393916130065918
    7. 'raise' → logprob: -10.018916130065918
    8. ' continue' → logprob: -10.393916130065918
    9. '```' → logprob: -10.643916130065918
    10. '                   ' → logprob: -12.018916130065918

Token 1540: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3213866353034973
    2. '       ' → logprob: -2.0713865756988525
    3. 'if' → logprob: -2.0713865756988525
    4. ' if' → logprob: -4.696386814117432
    5. 'continue' → logprob: -4.696386814117432
    6. 'yield' → logprob: -5.946386814117432
    7. '               ' → logprob: -7.446386814117432
    8. ' continue' → logprob: -7.571386814117432
    9. '```' → logprob: -7.821386814117432
    10. '   ' → logprob: -8.821386337280273

Token 1541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6223349571228027
    2. 'if' → logprob: -0.8723349571228027
    3. 'm' → logprob: -3.4973349571228027
    4. '           ' → logprob: -5.247334957122803
    5. 'yield' → logprob: -5.372334957122803
    6. ' if' → logprob: -5.747334957122803
    7. 'try' → logprob: -7.247334957122803
    8. 'token' → logprob: -7.247334957122803
    9. '```' → logprob: -8.747335433959961
    10. 'int' → logprob: -8.872335433959961

Token 1542: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.0009677992202341557
    2. 'try' → logprob: -7.000967979431152
    3. '       ' → logprob: -10.125967979431152
    4. 'if' → logprob: -11.125967979431152
    5. 'yield' → logprob: -13.875967979431152
    6. ' m' → logprob: -15.000967979431152
    7. '           ' → logprob: -15.875967979431152
    8. '```' → logprob: -16.250967025756836
    9. 'a' → logprob: -17.000967025756836
    10. '_m' → logprob: -17.250967025756836

Token 1543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6439523100852966
    2. '==' → logprob: -0.8939523100852966
    3. ' ==' → logprob: -3.1439523696899414
    4. '[' → logprob: -4.893952369689941
    5. '=' → logprob: -5.768952369689941
    6. ')' → logprob: -6.143952369689941
    7. '[int' → logprob: -6.268952369689941
    8. '=int' → logprob: -6.893952369689941
    9. ' =' → logprob: -7.143952369689941
    10. 'm' → logprob: -7.393952369689941

Token 1544: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170225441455841
    2. ' n' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.751171112060547
    4. '   ' → logprob: -18.751171112060547
    5. 'int' → logprob: -19.626171112060547
    6. '_n' → logprob: -20.626171112060547
    7. '	n' → logprob: -20.626171112060547
    8. ',n' → logprob: -20.626171112060547
    9. '  ' → logprob: -21.501171112060547
    10. '    ' → logprob: -21.751171112060547

Token 1545: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1881859451532364
    2. ' =' → logprob: -1.8131859302520752
    3. ',' → logprob: -4.813186168670654
    4. '=int' → logprob: -8.688185691833496
    5. '<|end|>' → logprob: -10.188185691833496
    6. 'int' → logprob: -10.813185691833496
    7. ')' → logprob: -10.938185691833496
    8. '=
' → logprob: -11.938185691833496
    9. '<|end|>' → logprob: -12.188185691833496
    10. '       ' → logprob: -12.438185691833496

Token 1546: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002840418368577957
    2. 'int' → logprob: -6.252840518951416
    3. ' map' → logprob: -7.002840518951416
    4. '(map' → logprob: -13.752840042114258
    5. '[int' → logprob: -14.002840042114258
    6. ' int' → logprob: -16.502840042114258
    7. '   ' → logprob: -17.502840042114258
    8. '(int' → logprob: -18.127840042114258
    9. '[' → logprob: -18.377840042114258
    10. '.map' → logprob: -18.877840042114258

Token 1547: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004078878089785576
    2. '(int' → logprob: -5.5040788650512695
    3. '[int' → logprob: -15.25407886505127
    4. ' int' → logprob: -16.004079818725586
    5. 'str' → logprob: -16.504079818725586
    6. '=int' → logprob: -17.879079818725586
    7. '<int' → logprob: -18.254079818725586
    8. '   ' → logprob: -19.129079818725586
    9. '	int' → logprob: -19.129079818725586
    10. ',int' → logprob: -19.504079818725586

Token 1548: ',' (ID: 11)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.31546449661254883
    2. '(parts' → logprob: -1.3154644966125488
    3. ' parts' → logprob: -6.815464496612549
    4. ',' → logprob: -6.815464496612549
    5. 'tokens' → logprob: -12.56546401977539
    6. ')' → logprob: -12.81546401977539
    7. '(' → logprob: -14.94046401977539
    8. '_parts' → logprob: -15.94046401977539
    9. '[' → logprob: -16.56546401977539
    10. 'Parts' → logprob: -16.94046401977539

Token 1549: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.00043281487887725234
    2. ' parts' → logprob: -7.750432968139648
    3. '(parts' → logprob: -13.125432968139648
    4. '           ' → logprob: -16.25043296813965
    5. '   ' → logprob: -18.25043296813965
    6. '       ' → logprob: -18.37543296813965
    7. 'part' → logprob: -19.50043296813965
    8. '               ' → logprob: -19.87543296813965
    9. '_parts' → logprob: -20.50043296813965
    10. '         ' → logprob: -20.50043296813965

Token 1550: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38846248388290405
    2. ')
' → logprob: -1.1384625434875488
    3. '       ' → logprob: -6.513462543487549
    4. ')
' → logprob: -10.26346206665039
    5. ')`
' → logprob: -11.26346206665039
    6. '[:' → logprob: -11.38846206665039
    7. '           ' → logprob: -11.38846206665039
    8. '[:-' → logprob: -12.26346206665039
    9. ')`' → logprob: -12.26346206665039
    10. '[' → logprob: -12.76346206665039

Token 1551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.228561349213123e-05
    2. 'if' → logprob: -10.250052452087402
    3. ' if' → logprob: -11.875052452087402
    4. '           ' → logprob: -12.000052452087402
    5. '<|end|>' → logprob: -13.375052452087402
    6. '   ' → logprob: -13.875052452087402
    7. '```' → logprob: -15.250052452087402
    8. '	' → logprob: -15.500052452087402
    9. '	   ' → logprob: -15.750052452087402
    10. '      ' → logprob: -15.750052452087402

Token 1552: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20280705392360687
    2. '       ' → logprob: -1.702807068824768
    3. ' if' → logprob: -6.5778069496154785
    4. '```' → logprob: -13.952807426452637
    5. 'yield' → logprob: -14.702807426452637
    6. '   ' → logprob: -15.577807426452637
    7. '	if' → logprob: -15.577807426452637
    8. '           ' → logprob: -16.32780647277832
    9. '	' → logprob: -16.70280647277832
    10. ';if' → logprob: -17.07780647277832

Token 1553: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00011796683247666806
    2. '(m' → logprob: -9.625118255615234
    3. ' m' → logprob: -9.875118255615234
    4. ' (' → logprob: -15.250118255615234
    5. '   ' → logprob: -16.000118255615234
    6. '0' → logprob: -17.375118255615234
    7. '	m' → logprob: -18.125118255615234
    8. '(' → logprob: -18.875118255615234
    9. ')m' → logprob: -19.250118255615234
    10. '[m' → logprob: -19.625118255615234

Token 1554: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759565830230713
    2. '==' → logprob: -0.8259565830230713
    3. ',' → logprob: -11.825956344604492
    4. '```' → logprob: -12.950956344604492
    5. '=' → logprob: -13.075956344604492
    6. '0' → logprob: -13.200956344604492
    7. '        ' → logprob: -14.575956344604492
    8. ' ' → logprob: -14.825956344604492
    9. '==
' → logprob: -14.825956344604492
    10. '       ' → logprob: -15.075956344604492

Token 1555: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -21.250001907348633
    4. '```' → logprob: -23.000001907348633
    5. '=' → logprob: -23.750001907348633
    6. '۰' → logprob: -23.875001907348633
    7. '  ' → logprob: -24.000001907348633
    8. '       ' → logprob: -24.125001907348633
    9. '
' → logprob: -24.250001907348633
    10. 'and' → logprob: -24.250001907348633

Token 1556: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. 'and' → logprob: -22.125
    4. '۰' → logprob: -23.625
    5. '```' → logprob: -23.75
    6. '   ' → logprob: -23.875
    7. '０' → logprob: -24.0
    8. 'n' → logprob: -24.375
    9. '
' → logprob: -24.875
    10. '=' → logprob: -25.25

Token 1557: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20142436027526855
    2. 'and' → logprob: -1.7014243602752686
    3. '           ' → logprob: -12.201424598693848
    4. ',' → logprob: -13.076424598693848
    5. '0' → logprob: -13.076424598693848
    6. '       ' → logprob: -14.701424598693848
    7. ' or' → logprob: -14.951424598693848
    8. '        ' → logprob: -15.326424598693848
    9. ' ' → logprob: -15.826424598693848
    10. '&&' → logprob: -15.951424598693848

Token 1558: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040793512016534805
    2. ' n' → logprob: -5.504079341888428
    3. '       ' → logprob: -14.754079818725586
    4. '   ' → logprob: -15.004079818725586
    5. '           ' → logprob: -16.129079818725586
    6. '0' → logprob: -16.254079818725586
    7. '     ' → logprob: -18.129079818725586
    8. '	n' → logprob: -18.129079818725586
    9. '    ' → logprob: -18.629079818725586
    10. ' ' → logprob: -18.879079818725586

Token 1559: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4743611514568329
    2. ' ==' → logprob: -0.9743611812591553
    3. '0' → logprob: -8.224361419677734
    4. '=' → logprob: -12.724361419677734
    5. ')==' → logprob: -12.724361419677734
    6. ' ' → logprob: -12.849361419677734
    7. '===' → logprob: -13.474361419677734
    8. '           ' → logprob: -13.724361419677734
    9. ']==' → logprob: -13.849361419677734
    10. ',' → logprob: -13.849361419677734

Token 1560: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.6250057220459
    4. '  ' → logprob: -20.5000057220459
    5. '       ' → logprob: -21.0000057220459
    6. '```' → logprob: -21.1250057220459
    7. '           ' → logprob: -21.2500057220459
    8. '۰' → logprob: -21.3750057220459
    9. ' ' → logprob: -21.8750057220459
    10. '    ' → logprob: -22.4375057220459

Token 1561: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.750003814697266
    4. '  ' → logprob: -20.250003814697266
    5. '۰' → logprob: -20.625003814697266
    6. '```' → logprob: -20.625003814697266
    7. '=' → logprob: -21.500003814697266
    8. '1' → logprob: -22.000003814697266
    9. '`' → logprob: -22.062503814697266
    10. '<|end|>' → logprob: -22.250003814697266

Token 1562: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46490758657455444
    2. ':
' → logprob: -1.4649076461791992
    3. ':' → logprob: -1.9649076461791992
    4. ':return' → logprob: -8.4649076461792
    5. ',' → logprob: -9.7149076461792
    6. '       ' → logprob: -9.7149076461792
    7. '          ' → logprob: -10.5899076461792
    8. '               ' → logprob: -10.7149076461792
    9. '():
' → logprob: -10.7149076461792
    10. '<|end|>' → logprob: -10.7149076461792

Token 1563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016599490481894463
    2. '               ' → logprob: -9.375165939331055
    3. ':' → logprob: -11.000165939331055
    4. '       ' → logprob: -11.250165939331055
    5. '		' → logprob: -11.500165939331055
    6. '                       ' → logprob: -11.625165939331055
    7. '                   ' → logprob: -11.750165939331055
    8. '	       ' → logprob: -11.750165939331055
    9. ' break' → logprob: -12.750165939331055
    10. ':
' → logprob: -12.875165939331055

Token 1564: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06412279605865479
    2. '           ' → logprob: -2.8141226768493652
    3. 'return' → logprob: -6.564122676849365
    4. ' break' → logprob: -7.564122676849365
    5. '               ' → logprob: -8.439123153686523
    6. '	break' → logprob: -12.189123153686523
    7. '```' → logprob: -14.189123153686523
    8. ' return' → logprob: -14.314123153686523
    9. '_break' → logprob: -14.439123153686523
    10. '		' → logprob: -15.064123153686523

Token 1565: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012024929746985435
    2. '<|end|>' → logprob: -7.751202583312988
    3. '           ' → logprob: -8.251202583312988
    4. ',' → logprob: -8.626202583312988
    5. ':' → logprob: -9.751202583312988
    6. ')' → logprob: -10.001202583312988
    7. '   ' → logprob: -10.376202583312988
    8. 'yield' → logprob: -10.376202583312988
    9. '<|end|>' → logprob: -10.626202583312988
    10. '               ' → logprob: -10.751202583312988

Token 1566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026896485360339284
    2. 'yield' → logprob: -8.250268936157227
    3. ' yield' → logprob: -12.000268936157227
    4. '	yield' → logprob: -14.625268936157227
    5. '```' → logprob: -15.000268936157227
    6. '   ' → logprob: -15.000268936157227
    7. '           ' → logprob: -15.500268936157227
    8. 'else' → logprob: -17.250268936157227
    9. '<|end|>' → logprob: -17.750268936157227
    10. 'Yield' → logprob: -17.750268936157227

Token 1567: ' yield' (ID: 14376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5763127207756042
    2. 'yield' (adapté à ' yield') → logprob: -0.8263127207756042
    3. ' yield' → logprob: -8.076313018798828
    4. '	yield' → logprob: -9.826313018798828
    5. '```' → logprob: -12.076313018798828
    6. '   ' → logprob: -13.451313018798828
    7. 'Yield' → logprob: -13.951313018798828
    8. '`' → logprob: -16.076313018798828
    9. '           ' → logprob: -17.451313018798828
    10. '      ' → logprob: -17.576313018798828

Token 1568: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06227564439177513
    2. '(m' → logprob: -2.8122756481170654
    3. ' m' → logprob: -8.562275886535645
    4. ' (' → logprob: -9.062275886535645
    5. '   ' → logprob: -14.687275886535645
    6. '	m' → logprob: -15.062275886535645
    7. '_m' → logprob: -17.062274932861328
    8. '(' → logprob: -17.312274932861328
    9. '[m' → logprob: -17.937274932861328
    10. '(
' → logprob: -18.312274932861328

Token 1569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2643164098262787
    2. '<|end|>' → logprob: -1.514316439628601
    3. ' ,' → logprob: -5.264316558837891
    4. '[' → logprob: -5.764316558837891
    5. '<|end|>' → logprob: -5.889316558837891
    6. ' ' → logprob: -8.38931655883789
    7. '_,' → logprob: -8.38931655883789
    8. ',n' → logprob: -9.01431655883789
    9. ',
' → logprob: -9.51431655883789
    10. '   ' → logprob: -9.88931655883789

Token 1570: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.836499985889532e-05
    2. ' n' → logprob: -9.7500581741333
    3. '	n' → logprob: -20.625059127807617
    4. '
' → logprob: -21.875059127807617
    5. '_n' → logprob: -22.125059127807617
    6. '0' → logprob: -22.625059127807617
    7. '```' → logprob: -23.375059127807617
    8. '   ' → logprob: -23.750059127807617
    9. ')n' → logprob: -23.750059127807617
    10. '$n' → logprob: -24.000059127807617

Token 1571: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1572: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8073552250862122
    2. '<|end|>' → logprob: -0.8073552250862122
    3. 'def' → logprob: -2.5573551654815674
    4. '<|end|>' → logprob: -4.3073554039001465
    5. '#' → logprob: -4.5573554039001465
    6. '``' → logprob: -6.5573554039001465
    7. 'import' → logprob: -6.8073554039001465
    8. 'class' → logprob: -7.0573554039001465
    9. 'for' → logprob: -7.6823554039001465
    10. ')' → logprob: -7.8073554039001465

Token 1573: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.505351095460355e-05
    2. ' main' → logprob: -9.500075340270996
    3. 'run' → logprob: -16.50007438659668
    4. 'solve' → logprob: -16.50007438659668
    5. 'process' → logprob: -18.25007438659668
    6. '_main' → logprob: -18.62507438659668
    7. 'read' → logprob: -19.25007438659668
    8. 'j' → logprob: -20.25007438659668
    9. '	main' → logprob: -20.50007438659668
    10. 'solution' → logprob: -22.00007438659668

Token 1574: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1269688457250595
    2. '():
' → logprob: -2.1269688606262207
    3. '()' → logprob: -10.251968383789062
    4. '():
' → logprob: -12.626968383789062
    5. '():

' → logprob: -14.376968383789062
    6. '()->' → logprob: -14.876968383789062
    7. ' ():' → logprob: -14.876968383789062
    8. '()>' → logprob: -15.501968383789062
    9. 'def' → logprob: -15.501968383789062
    10. '(argv' → logprob: -15.626968383789062

Token 1575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038505515549331903
    2. 'import' → logprob: -6.00385046005249
    3. '```' → logprob: -7.00385046005249
    4. 'formatter' → logprob: -8.003850936889648
    5. 'input' → logprob: -9.878850936889648
    6. 'jf' → logprob: -10.628850936889648
    7. 'j' → logprob: -10.628850936889648
    8. 'unit' → logprob: -11.878850936889648
    9. ' formatter' → logprob: -12.253850936889648
    10. '	import' → logprob: -12.628850936889648

Token 1576: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.012384849600493908
    2. 'formatter' → logprob: -5.01238489151001
    3. '   ' → logprob: -5.51238489151001
    4. 'jf' → logprob: -6.76238489151001
    5. 'j' → logprob: -8.262384414672852
    6. 'input' → logprob: -9.387384414672852
    7. '```' → logprob: -9.512384414672852
    8. ' import' → logprob: -11.262384414672852
    9. ' formatter' → logprob: -12.262384414672852
    10. 'unit' → logprob: -12.512384414672852

Token 1577: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.8624639324116288e-06
    2. ' sys' → logprob: -13.250001907348633
    3. '=sys' → logprob: -20.875001907348633
    4. '	sys' → logprob: -22.125001907348633
    5. '```' → logprob: -22.250001907348633
    6. 'stdin' → logprob: -23.625001907348633
    7. '(sys' → logprob: -24.000001907348633
    8. '
' → logprob: -24.500001907348633
    9. 'math' → logprob: -24.500001907348633
    10. '   ' → logprob: -24.500001907348633

Token 1578: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001518907374702394
    2. 'for' → logprob: -6.626518726348877
    3. '
' → logprob: -9.501519203186035
    4. ' for' → logprob: -9.876519203186035
    5. 'input' → logprob: -10.126519203186035
    6. '```' → logprob: -11.126519203186035
    7. '    
' → logprob: -11.626519203186035
    8. ' lines' → logprob: -13.626519203186035
    9. 'lines' → logprob: -14.501519203186035
    10. '`' → logprob: -14.626519203186035

Token 1579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.610702363715973e-06
    2. 'input' → logprob: -12.375009536743164
    3. 'for' → logprob: -12.750009536743164
    4. '```' → logprob: -13.125009536743164
    5. '    
' → logprob: -16.125009536743164
    6. '   ' → logprob: -16.250009536743164
    7. '
' → logprob: -16.750009536743164
    8. '	input' → logprob: -17.125009536743164
    9. '	for' → logprob: -17.125009536743164
    10. ' for' → logprob: -17.125009536743164

Token 1580: ' formatter' (ID: 50323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008321654051542282
    2. 'for' → logprob: -5.008321762084961
    3. 'input' → logprob: -6.508321762084961
    4. ' for' → logprob: -9.383321762084961
    5. 'lines' → logprob: -11.383321762084961
    6. 'line' → logprob: -12.383321762084961
    7. '```' → logprob: -12.508321762084961
    8. '	for' → logprob: -13.008321762084961
    9. ' lines' → logprob: -13.008321762084961
    10. 'stdin' → logprob: -13.508321762084961

Token 1581: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5010325908660889
    2. '=' → logprob: -1.0010325908660889
    3. '.' → logprob: -4.376032829284668
    4. '   ' → logprob: -4.376032829284668
    5. '.py' → logprob: -8.001032829284668
    6. '_formatter' → logprob: -8.376032829284668
    7. '.format' → logprob: -9.251032829284668
    8. '.readline' → logprob: -9.376032829284668
    9. '=format' → logprob: -9.376032829284668
    10. '       ' → logprob: -9.626032829284668

Token 1582: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.0002036595979006961
    2. ' J' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.750204086303711
    4. '	J' → logprob: -21.50020408630371
    5. ' ' → logprob: -21.87520408630371
    6. '  ' → logprob: -22.75020408630371
    7. '<J' → logprob: -23.50020408630371
    8. '```' → logprob: -24.62520408630371
    9. '    ' → logprob: -24.75020408630371
    10. '_J' → logprob: -25.00020408630371

Token 1583: 'ink' (ID: 881)
  Prédit: 'ink'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ink' → logprob: -7.896309739408025e-07
    2. 'ank' → logprob: -14.875000953674316
    3. 'inkgo' → logprob: -15.750000953674316
    4. 'inko' → logprob: -16.0
    5. 'Ink' → logprob: -16.375
    6. ' ink' → logprob: -17.5
    7. '```' → logprob: -17.875
    8. 'format' → logprob: -18.75
    9. '   ' → logprob: -19.125
    10. 'INK' → logprob: -19.125

Token 1584: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -3.128163257315464e-07
    2. 'ouk' → logprob: -15.75
    3. 'kou' → logprob: -16.625
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -19.375
    6. 'o' → logprob: -19.5
    7. 'sou' → logprob: -19.875
    8. 'oui' → logprob: -20.0
    9. '\' → logprob: -21.0
    10. '#' → logprob: -21.125

Token 1585: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.0001217813478433527
    2. 'uki' → logprob: -9.6251220703125
    3. 'oki' → logprob: -10.5001220703125
    4. 'i' → logprob: -11.2501220703125
    5. 'Formatter' → logprob: -11.6251220703125
    6. 'u' → logprob: -13.2501220703125
    7. 'Format' → logprob: -14.5001220703125
    8. 'k' → logprob: -14.8751220703125
    9. 'kip' → logprob: -15.0001220703125
    10. ' ki' → logprob: -15.2501220703125

Token 1586: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -0.00015860427811276168
    2. 'formatter' → logprob: -8.750158309936523
    3. '_formatter' → logprob: -15.875158309936523
    4. '   ' → logprob: -17.750158309936523
    5. ' Formatter' → logprob: -17.750158309936523
    6. '
' → logprob: -18.625158309936523
    7. 'format' → logprob: -19.250158309936523
    8. ' formatter' → logprob: -19.625158309936523
    9. 'f' → logprob: -20.000158309936523
    10. 'Format' → logprob: -20.250158309936523

Token 1587: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019561098888516426
    2. 'for' → logprob: -6.251955986022949
    3. ' for' → logprob: -10.87695598602295
    4. '
' → logprob: -12.37695598602295
    5. '    
' → logprob: -12.62695598602295
    6. '	for' → logprob: -14.50195598602295
    7. '```' → logprob: -15.50195598602295
    8. '<|end|>' → logprob: -15.87695598602295
    9. 'while' → logprob: -16.376956939697266
    10. 'input' → logprob: -16.626956939697266

Token 1588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004362718027550727
    2. 'for' → logprob: -7.750436305999756
    3. '```' → logprob: -12.625435829162598
    4. ' for' → logprob: -13.125435829162598
    5. '
' → logprob: -15.750435829162598
    6. '    
' → logprob: -17.625436782836914
    7. '	for' → logprob: -18.000436782836914
    8. 'input' → logprob: -18.500436782836914
    9. '`' → logprob: -18.625436782836914
    10. '       ' → logprob: -19.000436782836914

Token 1589: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011383073404431343
    2. '   ' → logprob: -4.511383056640625
    3. ' for' → logprob: -8.011383056640625
    4. 'lines' → logprob: -12.886383056640625
    5. 'input' → logprob: -14.761383056640625
    6. '	for' → logprob: -15.011383056640625
    7. 'line' → logprob: -16.511383056640625
    8. '```' → logprob: -16.636383056640625
    9. '
' → logprob: -17.261383056640625
    10. ' lines' → logprob: -17.386383056640625

Token 1590: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16025641560554504
    2. ' line' → logprob: -1.9102563858032227
    3. 'm' → logprob: -11.285256385803223
    4. '	line' → logprob: -11.660256385803223
    5. '   ' → logprob: -11.910256385803223
    6. 'input' → logprob: -13.160256385803223
    7. '```' → logprob: -13.910256385803223
    8. ' m' → logprob: -14.535256385803223
    9. '(line' → logprob: -14.785256385803223
    10. ' ' → logprob: -15.785256385803223

Token 1591: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006078110076487064
    2. 'in' → logprob: -5.131078243255615
    3. '       ' → logprob: -9.131077766418457
    4. '   ' → logprob: -10.631077766418457
    5. ' =' → logprob: -12.881077766418457
    6. '_in' → logprob: -12.881077766418457
    7. 'line' → logprob: -13.131077766418457
    8. '    ' → logprob: -13.256077766418457
    9. '_line' → logprob: -13.631077766418457
    10. '	in' → logprob: -14.006077766418457

Token 1592: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02975129522383213
    2. ' sys' → logprob: -3.5297513008117676
    3. '=sys' → logprob: -14.77975082397461
    4. '(sys' → logprob: -14.90475082397461
    5. '	sys' → logprob: -16.40475082397461
    6. 'stdin' → logprob: -17.65475082397461
    7. '   ' → logprob: -18.52975082397461
    8. 'import' → logprob: -18.77975082397461
    9. 'in' → logprob: -19.52975082397461
    10. 'input' → logprob: -19.52975082397461

Token 1593: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003942112671211362
    2. '.stdout' → logprob: -8.500393867492676
    3. 'stdin' → logprob: -9.625393867492676
    4. '.' → logprob: -9.875393867492676
    5. '.argv' → logprob: -10.375393867492676
    6. '.readline' → logprob: -10.625393867492676
    7. ' stdin' → logprob: -12.125393867492676
    8. '(stdin' → logprob: -12.125393867492676
    9. '   ' → logprob: -12.500393867492676
    10. ' .' → logprob: -13.125393867492676

Token 1594: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15532876551151276
    2. '.readline' → logprob: -2.5303287506103516
    3. '       ' → logprob: -3.7803287506103516
    4. 'in' → logprob: -4.155328750610352
    5. ':' → logprob: -4.655328750610352
    6. '   ' → logprob: -4.905328750610352
    7. '.strip' → logprob: -5.655328750610352
    8. ':
' → logprob: -5.655328750610352
    9. '.rstrip' → logprob: -6.905328750610352
    10. '.readlines' → logprob: -8.655328750610352

Token 1595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011248346709180623
    2. '```' → logprob: -9.375112533569336
    3. '   ' → logprob: -11.500112533569336
    4. '<|end|>' → logprob: -12.500112533569336
    5. '`' → logprob: -12.875112533569336
    6. ',' → logprob: -13.250112533569336
    7. '<|end|>' → logprob: -13.500112533569336
    8. '>' → logprob: -13.625112533569336
    9. '           ' → logprob: -14.375112533569336
    10. ')' → logprob: -14.625112533569336

Token 1596: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00200738781131804
    2. 'line' (adapté à ' line') → logprob: -6.377007484436035
    3. ' line' → logprob: -8.377007484436035
    4. '   ' → logprob: -9.752007484436035
    5. '	line' → logprob: -11.502007484436035
    6. 'm' → logprob: -13.377007484436035
    7. '           ' → logprob: -13.877007484436035
    8. '```' → logprob: -14.002007484436035
    9. '	' → logprob: -14.127007484436035
    10. '	   ' → logprob: -14.127007484436035

Token 1597: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1698784977197647
    2. '=line' → logprob: -2.1698784828186035
    3. ' =' → logprob: -3.1698784828186035
    4. '       ' → logprob: -10.669878959655762
    5. '.strip' → logprob: -12.169878959655762
    6. 'strip' → logprob: -14.294878959655762
    7. '   ' → logprob: -14.294878959655762
    8. '           ' → logprob: -14.419878959655762
    9. '_strip' → logprob: -14.419878959655762
    10. 'line' → logprob: -14.544878959655762

Token 1598: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004817430395632982
    2. '.rstrip' → logprob: -6.129817485809326
    3. 'strip' → logprob: -6.254817485809326
    4. '=' → logprob: -7.879817485809326
    5. '.' → logprob: -9.379817008972168
    6. '().' → logprob: -9.504817008972168
    7. 'rstrip' → logprob: -9.504817008972168
    8. '=line' → logprob: -10.004817008972168
    9. '.readline' → logprob: -11.004817008972168
    10. '(strip' → logprob: -11.504817008972168

Token 1599: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005090733524411917
    2. 'if' → logprob: -5.880090713500977
    3. ' if' → logprob: -7.630090713500977
    4. '()' → logprob: -7.880090713500977
    5. ':
' → logprob: -8.005090713500977
    6. '()
' → logprob: -8.505090713500977
    7. '           ' → logprob: -8.755090713500977
    8. 'and' → logprob: -9.005090713500977
    9. ',' → logprob: -9.255090713500977
    10. '():
' → logprob: -9.630090713500977

Token 1600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001719446387141943
    2. 'if' → logprob: -6.5017194747924805
    3. '   ' → logprob: -9.00171947479248
    4. ' if' → logprob: -9.37671947479248
    5. '<|end|>' → logprob: -12.25171947479248
    6. '```' → logprob: -12.75171947479248
    7. ' ' → logprob: -14.50171947479248
    8. '           ' → logprob: -14.75171947479248
    9. 'import' → logprob: -15.75171947479248
    10. '<|end|>' → logprob: -15.87671947479248

Token 1601: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011150928912684321
    2. '       ' → logprob: -7.001115322113037
    3. ' if' → logprob: -8.501114845275879
    4. '	if' → logprob: -15.251114845275879
    5. '   ' → logprob: -16.251115798950195
    6. 'If' → logprob: -18.126115798950195
    7. '```' → logprob: -19.126115798950195
    8. '           ' → logprob: -19.626115798950195
    9. ';if' → logprob: -19.626115798950195
    10. '	' → logprob: -19.876115798950195

Token 1602: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2544863224029541
    2. 'not' → logprob: -1.504486322402954
    3. ' not' → logprob: -6.004486083984375
    4. ' line' → logprob: -9.379486083984375
    5. '   ' → logprob: -13.754486083984375
    6. '(line' → logprob: -15.629486083984375
    7. 'len' → logprob: -15.629486083984375
    8. '       ' → logprob: -16.379486083984375
    9. 'Line' → logprob: -16.754486083984375
    10. 'Not' → logprob: -16.754486083984375

Token 1603: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.128163257315464e-07
    2. ' line' → logprob: -15.25
    3. '(line' → logprob: -23.875
    4. '	line' → logprob: -23.875
    5. '#line' → logprob: -25.125
    6. 'lines' → logprob: -26.875
    7. '=line' → logprob: -26.875
    8. '[line' → logprob: -27.25
    9. 'len' → logprob: -27.5
    10. '
' → logprob: -27.625

Token 1604: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.638185977935791
    2. ' or' → logprob: -1.388185977935791
    3. ':' → logprob: -1.888185977935791
    4. 'or' → logprob: -3.263185977935791
    5. '==' → logprob: -3.763185977935791
    6. '       ' → logprob: -6.013185977935791
    7. '           ' → logprob: -6.013185977935791
    8. '.startswith' → logprob: -6.263185977935791
    9. ':return' → logprob: -7.888185977935791
    10. '   ' → logprob: -8.263185501098633

Token 1605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16152304410934448
    2. '       ' → logprob: -1.9115231037139893
    3. 'continue' → logprob: -6.91152286529541
    4. 'if' → logprob: -8.91152286529541
    5. '   ' → logprob: -9.41152286529541
    6. 'break' → logprob: -10.03652286529541
    7. ' continue' → logprob: -11.53652286529541
    8. '```' → logprob: -11.66152286529541
    9. '               ' → logprob: -12.03652286529541
    10. ':' → logprob: -12.66152286529541

Token 1606: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34344518184661865
    2. 'break' → logprob: -1.3434451818466187
    3. 'continue' (adapté à ' continue') → logprob: -3.593445301055908
    4. '       ' → logprob: -6.343445301055908
    5. ' break' → logprob: -8.71844482421875
    6. '               ' → logprob: -8.84344482421875
    7. 'if' → logprob: -9.21844482421875
    8. ' continue' → logprob: -9.84344482421875
    9. '   ' → logprob: -12.34344482421875
    10. '	break' → logprob: -13.21844482421875

Token 1607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011224505578866228
    2. 'if' → logprob: -9.500112533569336
    3. '   ' → logprob: -10.750112533569336
    4. '```' → logprob: -12.000112533569336
    5. ' if' → logprob: -12.125112533569336
    6. '           ' → logprob: -13.375112533569336
    7. '<|end|>' → logprob: -14.000112533569336
    8. 'tokens' → logprob: -14.250112533569336
    9. 'm' → logprob: -15.250112533569336
    10. 'import' → logprob: -15.625112533569336

Token 1608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006033109966665506
    2. 'if' → logprob: -7.750603199005127
    3. 'm' → logprob: -9.000603675842285
    4. '   ' → logprob: -10.250603675842285
    5. '```' → logprob: -12.125603675842285
    6. ' if' → logprob: -12.500603675842285
    7. 'tokens' → logprob: -12.875603675842285
    8. '           ' → logprob: -13.875603675842285
    9. 'parts' → logprob: -14.625603675842285
    10. 'token' → logprob: -15.500603675842285

Token 1609: ' parts' (ID: 7881)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.015256877057254314
    2. 'if' → logprob: -4.265256881713867
    3. 'parts' (adapté à ' parts') → logprob: -6.890256881713867
    4. '       ' → logprob: -9.890256881713867
    5. 'tokens' → logprob: -10.765256881713867
    6. 'try' → logprob: -13.265256881713867
    7. ' if' → logprob: -14.265256881713867
    8. ' m' → logprob: -14.390256881713867
    9. 'vals' → logprob: -16.640256881713867
    10. 'values' → logprob: -16.640256881713867

Token 1610: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008800194482319057
    2. ' =' → logprob: -7.125880241394043
    3. '=line' → logprob: -9.500880241394043
    4. 'tokens' → logprob: -15.625880241394043
    5. '=m' → logprob: -16.000879287719727
    6. '==' → logprob: -16.375879287719727
    7. '＝' → logprob: -16.500879287719727
    8. '=
' → logprob: -16.750879287719727
    9. '=len' → logprob: -16.875879287719727
    10. '=input' → logprob: -17.750879287719727

Token 1611: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008218993316404521
    2. '=line' → logprob: -7.125822067260742
    3. ' =' → logprob: -11.000822067260742
    4. '=
' → logprob: -15.000822067260742
    5. '==' → logprob: -15.500822067260742
    6. '＝' → logprob: -16.000822067260742
    7. '=[]' → logprob: -17.125822067260742
    8. '_=' → logprob: -17.500822067260742
    9. '.=' → logprob: -17.750822067260742
    10. '=

' → logprob: -17.875822067260742

Token 1612: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05892546847462654
    2. 'if' → logprob: -2.9339253902435303
    3. ' if' → logprob: -5.558925628662109
    4. '=' → logprob: -9.80892562866211
    5. '<|end|>' → logprob: -10.30892562866211
    6. 'm' → logprob: -10.68392562866211
    7. ',' → logprob: -11.05892562866211
    8. '[' → logprob: -11.43392562866211
    9. 'tokens' → logprob: -11.55892562866211
    10. '	if' → logprob: -11.93392562866211

Token 1613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16204504668712616
    2. 'if' → logprob: -1.9120450019836426
    3. ' if' → logprob: -6.412045001983643
    4. 'm' → logprob: -8.6620454788208
    5. '	if' → logprob: -13.7870454788208
    6. '```' → logprob: -13.9120454788208
    7. '   ' → logprob: -14.2870454788208
    8. '[' → logprob: -14.6620454788208
    9. '<|end|>' → logprob: -15.0370454788208
    10. '           ' → logprob: -15.0370454788208

Token 1614: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0027186875231564045
    2. '       ' → logprob: -6.002718925476074
    3. 'm' → logprob: -8.502718925476074
    4. ' if' → logprob: -10.127718925476074
    5. '	if' → logprob: -15.752718925476074
    6. 'If' → logprob: -17.377717971801758
    7. 'try' → logprob: -17.502717971801758
    8. '```' → logprob: -18.127717971801758
    9. '   ' → logprob: -18.877717971801758
    10. '           ' → logprob: -19.377717971801758

Token 1615: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00016301481809932739
    2. ' len' → logprob: -8.750163078308105
    3. 'parts' → logprob: -13.000163078308105
    4. '           ' → logprob: -13.875163078308105
    5. '(len' → logprob: -14.375163078308105
    6. '       ' → logprob: -14.375163078308105
    7. '	len' → logprob: -16.87516212463379
    8. '=len' → logprob: -17.12516212463379
    9. '2' → logprob: -17.87516212463379
    10. '   ' → logprob: -17.87516212463379

Token 1616: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0007105246186256409
    2. 'parts' → logprob: -7.250710487365723
    3. ' parts' → logprob: -14.625710487365723
    4. '_parts' → logprob: -17.25071144104004
    5. '==' → logprob: -18.00071144104004
    6. '(tokens' → logprob: -18.00071144104004
    7. '(' → logprob: -19.00071144104004
    8. '```' → logprob: -19.00071144104004
    9. '!=' → logprob: -19.25071144104004
    10. '[' → logprob: -19.37571144104004

Token 1617: ')!=' (ID: 86517)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.038344062864780426
    2. ' !=' → logprob: -3.538344144821167
    3. '==' → logprob: -5.163343906402588
    4. ')' → logprob: -6.788343906402588
    5. ')!=' → logprob: -6.788343906402588
    6. '()!=' → logprob: -7.913343906402588
    7. '<' → logprob: -9.038344383239746
    8. '           ' → logprob: -10.788344383239746
    9. '!==' → logprob: -10.788344383239746
    10. ' ==' → logprob: -11.038344383239746

Token 1618: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.750003814697266
    4. '```' → logprob: -18.250003814697266
    5. '=' → logprob: -19.500003814697266
    6. '0' → logprob: -20.125003814697266
    7. '           ' → logprob: -20.375003814697266
    8. '２' → logprob: -21.500003814697266
    9. '       ' → logprob: -21.625003814697266
    10. '۲' → logprob: -21.625003814697266

Token 1619: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9717212319374084
    2. '           ' → logprob: -1.0967211723327637
    3. ':
' → logprob: -1.7217211723327637
    4. ' or' → logprob: -2.4717211723327637
    5. '       ' → logprob: -4.346721172332764
    6. ' and' → logprob: -5.221721172332764
    7. ',' → logprob: -5.471721172332764
    8. 'and' → logprob: -7.471721172332764
    9. '               ' → logprob: -7.971721172332764
    10. '<|end|>' → logprob: -8.596721649169922

Token 1620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022075187414884567
    2. '       ' → logprob: -3.8970751762390137
    3. 'continue' → logprob: -6.772075176239014
    4. 'm' → logprob: -8.272075653076172
    5. ' continue' → logprob: -9.897075653076172
    6. '```' → logprob: -10.022075653076172
    7. '   ' → logprob: -10.897075653076172
    8. '               ' → logprob: -12.147075653076172
    9. '		' → logprob: -12.772075653076172
    10. '	       ' → logprob: -12.897075653076172

Token 1621: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2027207314968109
    2. '           ' → logprob: -1.7027207612991333
    3. '       ' → logprob: -7.202720642089844
    4. '               ' → logprob: -7.827720642089844
    5. ' continue' → logprob: -8.827720642089844
    6. '   ' → logprob: -11.827720642089844
    7. 'break' → logprob: -12.702720642089844
    8. '	continue' → logprob: -12.952720642089844
    9. '```' → logprob: -13.202720642089844
    10. 'return' → logprob: -13.702720642089844

Token 1622: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02055882103741169
    2. 'm' → logprob: -3.8955588340759277
    3. '   ' → logprob: -12.14555835723877
    4. '           ' → logprob: -12.27055835723877
    5. ' m' → logprob: -12.52055835723877
    6. '```' → logprob: -14.27055835723877
    7. '	' → logprob: -14.39555835723877
    8. '<|end|>' → logprob: -14.39555835723877
    9. ',' → logprob: -14.89555835723877
    10. ' ' → logprob: -15.14555835723877

Token 1623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5762768387794495
    2. 'm' → logprob: -0.8262768387794495
    3. '   ' → logprob: -8.201276779174805
    4. ' m' → logprob: -10.326276779174805
    5. '```' → logprob: -10.701276779174805
    6. '           ' → logprob: -12.076276779174805
    7. ' ' → logprob: -14.201276779174805
    8. '	m' → logprob: -14.576276779174805
    9. '`' → logprob: -15.951276779174805
    10. '	' → logprob: -16.076276779174805

Token 1624: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -3.5954712075181305e-05
    2. '       ' → logprob: -10.250036239624023
    3. ' m' → logprob: -14.750036239624023
    4. 'try' → logprob: -15.875036239624023
    5. '   ' → logprob: -17.250036239624023
    6. '```' → logprob: -19.000036239624023
    7. '	m' → logprob: -19.375036239624023
    8. '           ' → logprob: -19.750036239624023
    9. 'if' → logprob: -21.000036239624023
    10. '_m' → logprob: -22.125036239624023

Token 1625: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008339387364685535
    2. ',n' → logprob: -4.8833394050598145
    3. ',m' → logprob: -8.008338928222656
    4. ' ,' → logprob: -8.633338928222656
    5. ',int' → logprob: -9.508338928222656
    6. '       ' → logprob: -10.133338928222656
    7. '==' → logprob: -10.508338928222656
    8. '_,' → logprob: -11.258338928222656
    9. '<|end|>' → logprob: -11.633338928222656
    10. ',p' → logprob: -11.758338928222656

Token 1626: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08095109462738037
    2. ' =' → logprob: -2.70595121383667
    3. '=int' → logprob: -4.83095121383667
    4. '       ' → logprob: -6.20595121383667
    5. '=m' → logprob: -7.33095121383667
    6. '=
' → logprob: -8.830950736999512
    7. '=line' → logprob: -9.955950736999512
    8. '           ' → logprob: -10.330950736999512
    9. '   ' → logprob: -11.205950736999512
    10. ',' → logprob: -11.580950736999512

Token 1627: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -5.200166469876422e-06
    2. 'int' → logprob: -12.750004768371582
    3. ' map' → logprob: -13.000004768371582
    4. 'm' → logprob: -17.2500057220459
    5. '0' → logprob: -20.6250057220459
    6. '	map' → logprob: -21.0000057220459
    7. '   ' → logprob: -21.0000057220459
    8. '.map' → logprob: -21.6250057220459
    9. '(map' → logprob: -22.2500057220459
    10. '           ' → logprob: -23.1250057220459

Token 1628: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.219262624857947e-05
    2. '[int' → logprob: -9.875072479248047
    3. '(int' → logprob: -11.125072479248047
    4. 'str' → logprob: -12.250072479248047
    5. '<int' → logprob: -14.250072479248047
    6. ' int' → logprob: -15.000072479248047
    7. ':int' → logprob: -16.625072479248047
    8. '=int' → logprob: -17.125072479248047
    9. '```' → logprob: -17.750072479248047
    10. ']int' → logprob: -17.875072479248047

Token 1629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31190916895866394
    2. ',line' → logprob: -1.6869091987609863
    3. '(line' → logprob: -3.3119091987609863
    4. ',int' → logprob: -4.436909198760986
    5. '(parts' → logprob: -4.436909198760986
    6. ' ,' → logprob: -5.311909198760986
    7. ',input' → logprob: -5.686909198760986
    8. '       ' → logprob: -5.936909198760986
    9. '[line' → logprob: -5.936909198760986
    10. ',m' → logprob: -6.186909198760986

Token 1630: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -3.054500666621607e-06
    2. ' parts' → logprob: -12.75000286102295
    3. 'line' → logprob: -16.750003814697266
    4. '(parts' → logprob: -16.750003814697266
    5. 'lines' → logprob: -19.375003814697266
    6. '           ' → logprob: -19.875003814697266
    7. 'part' → logprob: -20.250003814697266
    8. '       ' → logprob: -20.500003814697266
    9. 'pieces' → logprob: -21.000003814697266
    10. '   ' → logprob: -21.000003814697266

Token 1631: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6010154485702515
    2. ')
' → logprob: -0.9760154485702515
    3. '       ' → logprob: -2.601015567779541
    4. '):
' → logprob: -7.726015567779541
    5. '<|end|>' → logprob: -9.351015090942383
    6. ')
' → logprob: -9.601015090942383
    7. '<|end|>' → logprob: -10.726015090942383
    8. ')return' → logprob: -11.101015090942383
    9. '),' → logprob: -11.226015090942383
    10. ')>
' → logprob: -11.476015090942383

Token 1632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.03521392197581e-05
    2. '<|end|>' → logprob: -10.875030517578125
    3. '   ' → logprob: -12.000030517578125
    4. '```' → logprob: -12.750030517578125
    5. '<|end|>' → logprob: -14.000030517578125
    6. '           ' → logprob: -14.500030517578125
    7. '	' → logprob: -15.125030517578125
    8. 'if' → logprob: -15.875030517578125
    9. '      ' → logprob: -16.000030517578125
    10. '	   ' → logprob: -16.500030517578125

Token 1633: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04868002608418465
    2. '       ' → logprob: -3.048680067062378
    3. ' if' → logprob: -9.298680305480957
    4. '   ' → logprob: -14.423680305480957
    5. '	if' → logprob: -14.423680305480957
    6. '	' → logprob: -17.92367935180664
    7. '```' → logprob: -17.92367935180664
    8. 'If' → logprob: -18.42367935180664
    9. '           ' → logprob: -18.67367935180664
    10. 'import' → logprob: -18.92367935180664

Token 1634: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2352385965641588e-05
    2. ' m' → logprob: -11.375012397766113
    3. '0' → logprob: -14.750012397766113
    4. '(m' → logprob: -15.375012397766113
    5. '       ' → logprob: -16.125011444091797
    6. '   ' → logprob: -17.000011444091797
    7. '```' → logprob: -18.500011444091797
    8. ')m' → logprob: -19.000011444091797
    9. '	m' → logprob: -19.375011444091797
    10. '           ' → logprob: -20.750011444091797

Token 1635: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01416398212313652
    2. ' ==' → logprob: -4.264163970947266
    3. '==
' → logprob: -15.764163970947266
    4. ')==' → logprob: -16.514163970947266
    5. '=' → logprob: -16.639163970947266
    6. ']==' → logprob: -17.264163970947266
    7. '()==' → logprob: -17.514163970947266
    8. '```' → logprob: -17.639163970947266
    9. '   ' → logprob: -17.764163970947266
    10. '===' → logprob: -18.014163970947266

Token 1636: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -23.0
    4. '=' → logprob: -23.25
    5. '   ' → logprob: -23.375
    6. '```' → logprob: -23.625
    7. '۰' → logprob: -23.875
    8. '０' → logprob: -24.75
    9. '  ' → logprob: -25.0
    10. '       ' → logprob: -25.25

Token 1637: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10025876015424728
    2. 'and' → logprob: -2.3502588272094727
    3. '0' → logprob: -10.600258827209473
    4. '       ' → logprob: -11.475258827209473
    5. '           ' → logprob: -11.725258827209473
    6. ' ' → logprob: -12.850258827209473
    7. '&&' → logprob: -13.850258827209473
    8. '        ' → logprob: -14.100258827209473
    9. '	and' → logprob: -14.225258827209473
    10. ' n' → logprob: -14.350258827209473

Token 1638: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002613358374219388
    2. ' n' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.000261306762695
    4. '       ' → logprob: -17.250261306762695
    5. '0' → logprob: -17.625261306762695
    6. '	n' → logprob: -19.000261306762695
    7. '     ' → logprob: -20.375261306762695
    8. '    ' → logprob: -20.750261306762695
    9. '           ' → logprob: -20.875261306762695
    10. '  ' → logprob: -21.250261306762695

Token 1639: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14917759597301483
    2. '0' → logprob: -2.1491775512695312
    3. ' ==' → logprob: -3.8991775512695312
    4. '=' → logprob: -6.899177551269531
    5. ' ' → logprob: -7.274177551269531
    6. '   ' → logprob: -11.149177551269531
    7. ')==' → logprob: -12.149177551269531
    8. '           ' → logprob: -12.399177551269531
    9. ' ' → logprob: -13.024177551269531
    10. ' =' → logprob: -13.024177551269531

Token 1640: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -19.875
    4. '۰' → logprob: -23.0
    5. '       ' → logprob: -23.625
    6. '  ' → logprob: -23.875
    7. '           ' → logprob: -24.75
    8. '```' → logprob: -24.75
    9. '０' → logprob: -25.0
    10. '    ' → logprob: -25.875

Token 1641: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034456152468919754
    2. ':
' → logprob: -3.909456253051758
    3. ':' → logprob: -4.284456253051758
    4. '       ' → logprob: -11.534456253051758
    5. '          ' → logprob: -11.909456253051758
    6. '		' → logprob: -11.909456253051758
    7. '               ' → logprob: -12.034456253051758
    8. ':return' → logprob: -13.409456253051758
    9. '                   ' → logprob: -13.909456253051758
    10. '():
' → logprob: -14.034456253051758

Token 1642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.173704271830502e-06
    2. '       ' → logprob: -13.37500286102295
    3. '               ' → logprob: -14.37500286102295
    4. '		' → logprob: -14.75000286102295
    5. 'break' → logprob: -15.12500286102295
    6. '	       ' → logprob: -15.25000286102295
    7. '                   ' → logprob: -16.500003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '          ' → logprob: -17.375003814697266
    10. '```' → logprob: -18.000003814697266

Token 1643: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014196764677762985
    2. 'break' (adapté à ' break') → logprob: -4.264196872711182
    3. ' break' → logprob: -10.764196395874023
    4. 'return' → logprob: -12.014196395874023
    5. '               ' → logprob: -12.764196395874023
    6. '		' → logprob: -13.514196395874023
    7. '	break' → logprob: -13.639196395874023
    8. '       ' → logprob: -15.264196395874023
    9. '	       ' → logprob: -15.389196395874023
    10. '   ' → logprob: -16.514196395874023

Token 1644: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003175889723934233
    2. '   ' → logprob: -8.125317573547363
    3. '<|end|>' → logprob: -11.125317573547363
    4. '        
' → logprob: -13.125317573547363
    5. '<|end|>' → logprob: -13.250317573547363
    6. '           ' → logprob: -14.250317573547363
    7. '
' → logprob: -14.375317573547363
    8. ',' → logprob: -14.875317573547363
    9. '```' → logprob: -15.250317573547363
    10. ')' → logprob: -15.750317573547363

Token 1645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005790081340819597
    2. '   ' → logprob: -7.500578880310059
    3. '<|end|>' → logprob: -11.375578880310059
    4. ',' → logprob: -12.875578880310059
    5. '```' → logprob: -12.875578880310059
    6. '<|end|>' → logprob: -13.375578880310059
    7. '           ' → logprob: -13.625578880310059
    8. '
' → logprob: -13.625578880310059
    9. 'number' → logprob: -13.625578880310059
    10. '        
' → logprob: -13.875578880310059

Token 1646: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.399512380361557
    2. '       ' → logprob: -1.1495124101638794
    3. 'output' → logprob: -4.77451229095459
    4. 'result' → logprob: -5.52451229095459
    5. ' print' → logprob: -9.52451229095459
    6. '   ' → logprob: -10.02451229095459
    7. ' output' → logprob: -12.27451229095459
    8. 'out' → logprob: -13.02451229095459
    9. ' result' → logprob: -13.14951229095459
    10. '	print' → logprob: -13.14951229095459

Token 1647: '(format' (ID: 39668)
  Prédit: 'formatter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formatter' → logprob: -0.03824206814169884
    2. '(format' → logprob: -3.2882421016693115
    3. 'format' → logprob: -8.53824234008789
    4. ' formatter' → logprob: -12.41324234008789
    5. '   ' → logprob: -14.78824234008789
    6. '_formatter' → logprob: -16.28824234008789
    7. 'Formatter' → logprob: -16.91324234008789
    8. '=format' → logprob: -17.28824234008789
    9. 'formatted' → logprob: -17.78824234008789
    10. '(' → logprob: -18.03824234008789

Token 1648: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -2.8087270038668066e-05
    2. '(f' → logprob: -11.125027656555176
    3. '(format' → logprob: -11.750027656555176
    4. 'er' → logprob: -13.000027656555176
    5. '(' → logprob: -13.625027656555176
    6. 'TER' → logprob: -14.375027656555176
    7. '_power' → logprob: -15.250027656555176
    8. 'term' → logprob: -15.500027656555176
    9. 'terr' → logprob: -15.625027656555176
    10. 'tern' → logprob: -16.000028610229492

Token 1649: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.034087877720594406
    2. '_format' → logprob: -4.034087657928467
    3. 'format' → logprob: -4.159087657928467
    4. '=format' → logprob: -9.534088134765625
    5. '(format' → logprob: -10.409088134765625
    6. '_power' → logprob: -10.659088134765625
    7. ')' → logprob: -10.784088134765625
    8. ').' → logprob: -11.409088134765625
    9. '._' → logprob: -11.659088134765625
    10. ' format' → logprob: -12.034088134765625

Token 1650: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.10098400712013245
    2. '(m' → logprob: -2.3509840965270996
    3. 'power' → logprob: -7.3509840965271
    4. 'Power' → logprob: -10.225983619689941
    5. '(n' → logprob: -10.725983619689941
    6. ')' → logprob: -10.725983619689941
    7. '(power' → logprob: -10.850983619689941
    8. '_pow' → logprob: -11.350983619689941
    9. '(' → logprob: -11.850983619689941
    10. 'pow' → logprob: -12.225983619689941

Token 1651: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.990154047845863e-05
    2. 'm' → logprob: -10.000049591064453
    3. ')' → logprob: -13.375049591064453
    4. ')m' → logprob: -13.375049591064453
    5. '(' → logprob: -14.125049591064453
    6. ')(' → logprob: -15.875049591064453
    7. ',m' → logprob: -16.000049591064453
    8. ' (' → logprob: -16.125049591064453
    9. '(
' → logprob: -16.625049591064453
    10. ' m' → logprob: -16.750049591064453

Token 1652: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31336626410484314
    2. ',n' → logprob: -1.3133662939071655
    3. ' ,' → logprob: -9.313365936279297
    4. ',
' → logprob: -11.688365936279297
    5. '       ' → logprob: -13.438365936279297
    6. '   ' → logprob: -13.438365936279297
    7. '(n' → logprob: -14.063365936279297
    8. 'n' → logprob: -14.188365936279297
    9. '[n' → logprob: -15.188365936279297
    10. '[' → logprob: -15.188365936279297

Token 1653: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3553164601325989
    2. ')' → logprob: -1.605316400527954
    3. '())' → logprob: -2.605316400527954
    4. '()))' → logprob: -3.730316400527954
    5. '()' → logprob: -8.980316162109375
    6. '))
' → logprob: -9.355316162109375
    7. '       ' → logprob: -9.605316162109375
    8. '   ' → logprob: -10.855316162109375
    9. '()))
' → logprob: -10.855316162109375
    10. '())
' → logprob: -11.230316162109375

Token 1654: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001149867384810932
    2. '```' → logprob: -9.375115394592285
    3. ' if' → logprob: -10.875115394592285
    4. '<|end|>' → logprob: -12.125115394592285
    5. '#' → logprob: -13.000115394592285
    6. '
' → logprob: -13.625115394592285
    7. '__' → logprob: -14.500115394592285
    8. 'main' → logprob: -15.125115394592285
    9. '    
' → logprob: -15.250115394592285
    10. '``' → logprob: -15.375115394592285

Token 1655: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2007883671903983e-05
    2. ' __' → logprob: -11.000021934509277
    3. 'name' → logprob: -12.250021934509277
    4. '```' → logprob: -14.750021934509277
    5. 'if' → logprob: -17.000022888183594
    6. '___' → logprob: -17.375022888183594
    7. '_name' → logprob: -18.250022888183594
    8. '/__' → logprob: -18.625022888183594
    9. '____' → logprob: -19.125022888183594
    10. '.__' → logprob: -19.125022888183594

Token 1656: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.028657788410782814
    2. '==' → logprob: -3.6536576747894287
    3. ' ==' → logprob: -6.403657913208008
    4. '```' → logprob: -7.653657913208008
    5. '=="' → logprob: -9.278657913208008
    6. 'if' → logprob: -9.403657913208008
    7. '=='' → logprob: -10.778657913208008
    8. '__.__' → logprob: -11.528657913208008
    9. 'name' → logprob: -13.028657913208008
    10. '__":
' → logprob: -13.153657913208008

Token 1657: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006521033588796854
    2. '==' → logprob: -5.381521224975586
    3. '=="' → logprob: -6.756521224975586
    4. '=='' → logprob: -8.006521224975586
    5. '__.__' → logprob: -8.506521224975586
    6. '```' → logprob: -9.631521224975586
    7. ' ==' → logprob: -9.756521224975586
    8. '__":
' → logprob: -11.256521224975586
    9. '__('' → logprob: -11.256521224975586
    10. '__["' → logprob: -11.506521224975586

Token 1658: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16934575140476227
    2. '=="' → logprob: -2.6693458557128906
    3. ' ==' → logprob: -3.1693458557128906
    4. '=='' → logprob: -3.2943458557128906
    5. '__' → logprob: -4.919345855712891
    6. '```' → logprob: -10.79434585571289
    7. '==
' → logprob: -11.16934585571289
    8. '['' → logprob: -11.79434585571289
    9. '==='' → logprob: -12.41934585571289
    10. '[' → logprob: -13.16934585571289

Token 1659: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47418949007987976
    2. '"' → logprob: -0.9741895198822021
    3. '__' → logprob: -9.099189758300781
    4. ''m' → logprob: -15.724189758300781
    5. ''post' → logprob: -16.47418975830078
    6. ' "__' → logprob: -16.72418975830078
    7. ''default' → logprob: -16.72418975830078
    8. ''name' → logprob: -16.84918975830078
    9. ''user' → logprob: -16.84918975830078
    10. ''s' → logprob: -17.09918975830078

Token 1660: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014171387068927288
    2. '__' → logprob: -4.264171600341797
    3. 'name' → logprob: -12.389171600341797
    4. '_main' → logprob: -13.514171600341797
    5. ' main' → logprob: -13.639171600341797
    6. '__':
' → logprob: -15.264171600341797
    7. ''' → logprob: -15.389171600341797
    8. 'm' → logprob: -15.889171600341797
    9. '__":
' → logprob: -16.264171600341797
    10. '"' → logprob: -16.389171600341797

Token 1661: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.01907316781580448
    2. '__' → logprob: -4.144073009490967
    3. '__":
' → logprob: -6.019073009490967
    4. ':' → logprob: -7.894073009490967
    5. '__:' → logprob: -9.519073486328125
    6. '():
' → logprob: -10.144073486328125
    7. '('__' → logprob: -10.644073486328125
    8. ':
' → logprob: -10.894073486328125
    9. '==' → logprob: -11.019073486328125
    10. '':
' → logprob: -11.144073486328125

Token 1662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002527979901060462
    2. 'main' → logprob: -6.002528190612793
    3. '	main' → logprob: -9.877528190612793
    4. '   ' → logprob: -14.627528190612793
    5. ' main' → logprob: -15.502528190612793
    6. '```' → logprob: -15.877528190612793
    7. '_main' → logprob: -16.127527236938477
    8. '(main' → logprob: -17.252527236938477
    9. '       ' → logprob: -17.627527236938477
    10. ' ' → logprob: -18.502527236938477

Token 1663: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '   ' → logprob: -17.75
    4. '	main' → logprob: -19.0
    5. '_main' → logprob: -22.375
    6. 'import' → logprob: -22.5
    7. '(main' → logprob: -23.875
    8. '.main' → logprob: -24.5
    9. 'Main' → logprob: -26.375
    10. '主' → logprob: -27.375

Token 1664: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1662
Tokens correctement prédits (1ère position, stricte): 549
Tokens correctement prédits (1ère position, avec adaptation): 622
Tokens correctement prédits (top 10): 1201
Précision stricte (1ère position): 33.03%
Précision adaptée (1ère position): 37.42%
Précision (top 10): 72.26%
================================================================================
