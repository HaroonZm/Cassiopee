================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A = input()
B = input()

lenA = len(A)
lenB = len(B)

result = "No"
for i in range(lenA - lenB + 1):
    match = True
    for j in range(lenB):
        if B[j] != '_' and A[i + j] != B[j]:
            match = False
            break
    if match:
        result = "Yes"
        break

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007731780642643571
    2. ''' → logprob: -8.250773429870605
    3. '('' → logprob: -8.375773429870605
    4. '[' → logprob: -9.375773429870605
    5. '.' → logprob: -9.750773429870605
    6. '(
' → logprob: -10.000773429870605
    7. '"' → logprob: -10.250773429870605
    8. '("("' → logprob: -10.875773429870605
    9. '()' → logprob: -11.250773429870605
    10. ' (' → logprob: -12.500773429870605

Token 4: 'B' (ID: 33)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6397415995597839
    2. '.' → logprob: -0.8897415995597839
    3. '\n' → logprob: -3.7647416591644287
    4. '```' → logprob: -4.51474142074585
    5. '*' → logprob: -5.38974142074585
    6. '\' → logprob: -5.63974142074585
    7. '.strip' → logprob: -5.88974142074585
    8. '#' → logprob: -5.88974142074585
    9. '[' → logprob: -6.13974142074585
    10. '%' → logprob: -6.51474142074585

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5117207765579224
    2. '=' → logprob: -1.0117207765579224
    3. '+' → logprob: -4.136720657348633
    4. '.' → logprob: -4.261720657348633
    5. ' ' → logprob: -6.136720657348633
    6. ')' → logprob: -6.511720657348633
    7. '[' → logprob: -6.636720657348633
    8. '(' → logprob: -7.761720657348633
    9. '=input' → logprob: -8.011720657348633
    10. ' +' → logprob: -8.136720657348633

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47602561116218567
    2. ' input' → logprob: -0.9760255813598633
    3. 'int' → logprob: -6.601025581359863
    4. ' int' → logprob: -7.726025581359863
    5. 'A' → logprob: -9.726025581359863
    6. ' A' → logprob: -9.726025581359863
    7. ' ' → logprob: -10.851025581359863
    8. '	input' → logprob: -13.726025581359863
    9. '<input' → logprob: -13.976025581359863
    10. '(input' → logprob: -13.976025581359863

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04388366639614105
    2. '()' → logprob: -3.1688835620880127
    3. ')' → logprob: -7.918883800506592
    4. '(
' → logprob: -8.918883323669434
    5. ' (' → logprob: -9.293883323669434
    6. '.' → logprob: -9.793883323669434
    7. ''' → logprob: -9.793883323669434
    8. '```' → logprob: -9.918883323669434
    9. '(

' → logprob: -10.293883323669434
    10. '"' → logprob: -11.168883323669434

Token 8: 'len' (ID: 3303)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17296509444713593
    2. 'print' → logprob: -2.2979650497436523
    3. 'C' → logprob: -3.1729650497436523
    4. 'for' → logprob: -5.422965049743652
    5. 'result' → logprob: -6.172965049743652
    6. 'c' → logprob: -6.422965049743652
    7. 'A' → logprob: -6.422965049743652
    8. 'i' → logprob: -6.672965049743652
    9. '=' → logprob: -6.672965049743652
    10. 'try' → logprob: -6.797965049743652

Token 9: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03836539760231972
    2. '(A' → logprob: -3.288365364074707
    3. '(B' → logprob: -8.663365364074707
    4. '(len' → logprob: -9.538365364074707
    5. '()' → logprob: -10.038365364074707
    6. '(a' → logprob: -11.163365364074707
    7. 'A' → logprob: -11.413365364074707
    8. '(
' → logprob: -13.163365364074707
    9. '((' → logprob: -13.288365364074707
    10. '('' → logprob: -13.663365364074707

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014099973486736417
    2. '(A' → logprob: -7.001410007476807
    3. '()' → logprob: -7.876410007476807
    4. ')' → logprob: -10.251409530639648
    5. 'A' → logprob: -10.626409530639648
    6. '(
' → logprob: -10.876409530639648
    7. '(len' → logprob: -11.501409530639648
    8. '('' → logprob: -11.751409530639648
    9. ' (' → logprob: -12.376409530639648
    10. '(B' → logprob: -13.001409530639648

Token 11: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.693223774433136
    2. ' len' → logprob: -0.693223774433136
    3. '(len' → logprob: -10.56822395324707
    4. ' ' → logprob: -10.94322395324707
    5. ' int' → logprob: -10.94322395324707
    6. 'int' → logprob: -11.56822395324707
    7. '[len' → logprob: -13.06822395324707
    8. '=len' → logprob: -13.56822395324707
    9. ' A' → logprob: -13.94322395324707
    10. ',len' → logprob: -14.94322395324707

Token 12: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.576221227645874
    2. '(' → logprob: -0.826221227645874
    3. '(len' → logprob: -8.451221466064453
    4. '(B' → logprob: -10.076221466064453
    5. '(
' → logprob: -11.201221466064453
    6. 'A' → logprob: -12.451221466064453
    7. '()' → logprob: -13.326221466064453
    8. '((' → logprob: -13.451221466064453
    9. '('' → logprob: -13.576221466064453
    10. '(

' → logprob: -13.701221466064453

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -13.875004768371582
    3. ')
' → logprob: -14.000004768371582
    4. '+' → logprob: -14.875004768371582
    5. ')>' → logprob: -15.250004768371582
    6. '#' → logprob: -15.625004768371582
    7. '<|end|>' → logprob: -15.625004768371582
    8. '))' → logprob: -15.750004768371582
    9. ')+' → logprob: -15.750004768371582
    10. ')#' → logprob: -15.875004768371582

Token 14: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11559871584177017
    2. '+' → logprob: -2.490598678588867
    3. 'if' → logprob: -4.740598678588867
    4. '*' → logprob: -5.365598678588867
    5. ' if' → logprob: -5.990598678588867
    6. '+
' → logprob: -6.240598678588867
    7. '<len' → logprob: -6.740598678588867
    8. ' len' → logprob: -6.740598678588867
    9. '[len' → logprob: -6.865598678588867
    10. '-' → logprob: -7.115598678588867

Token 15: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004668287932872772
    2. '(B' → logprob: -5.379668235778809
    3. 'A' → logprob: -10.504668235778809
    4. '(' → logprob: -11.129668235778809
    5. ' B' → logprob: -12.629668235778809
    6. '(A' → logprob: -13.254668235778809
    7. ')' → logprob: -14.754668235778809
    8. 'a' → logprob: -15.504668235778809
    9. '_B' → logprob: -16.504669189453125
    10. '<B' → logprob: -16.754669189453125

Token 16: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2297309786081314
    2. '<|end|>' → logprob: -1.8547309637069702
    3. ' ' → logprob: -3.2297310829162598
    4. ' )' → logprob: -5.22973108291626
    5. '[' → logprob: -6.60473108291626
    6. '<|end|>' → logprob: -6.85473108291626
    7. '(' → logprob: -7.72973108291626
    8. '=' → logprob: -8.229730606079102
    9. '()' → logprob: -9.354730606079102
    10. '+' → logprob: -9.479730606079102

Token 17: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.47421056032180786
    2. 'len' → logprob: -0.9742105603218079
    3. '(len' → logprob: -8.974210739135742
    4. '=len' → logprob: -13.349210739135742
    5. ' B' → logprob: -13.599210739135742
    6. '[len' → logprob: -13.974210739135742
    7. ' ' → logprob: -13.974210739135742
    8. 'B' → logprob: -14.724210739135742
    9. '	len' → logprob: -14.974210739135742
    10. '<len' → logprob: -15.224210739135742

Token 18: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.023728957399725914
    2. '(' → logprob: -3.773728847503662
    3. '(A' → logprob: -7.648728847503662
    4. 'B' → logprob: -12.89872932434082
    5. ')' → logprob: -13.77372932434082
    6. '(
' → logprob: -14.39872932434082
    7. '\(' → logprob: -14.77372932434082
    8. '(b' → logprob: -14.89872932434082
    9. ' (' → logprob: -15.27372932434082
    10. '((' → logprob: -15.39872932434082

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. '()' → logprob: -13.125006675720215
    3. ')
' → logprob: -13.125006675720215
    4. '))' → logprob: -14.250006675720215
    5. ' )' → logprob: -14.625006675720215
    6. '')' → logprob: -15.375006675720215
    7. '#' → logprob: -15.500006675720215
    8. '())' → logprob: -16.0000057220459
    9. '`)' → logprob: -16.1250057220459
    10. '),' → logprob: -16.5000057220459

Token 20: 'result' (ID: 2521)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19661709666252136
    2. 'i' → logprob: -2.0716171264648438
    3. 'for' → logprob: -3.1966171264648438
    4. 'result' → logprob: -5.071617126464844
    5. 'min' → logprob: -6.946617126464844
    6. 'max' → logprob: -7.071617126464844
    7. 'sum' → logprob: -7.821617126464844
    8. '
' → logprob: -7.946617126464844
    9. 'c' → logprob: -7.946617126464844
    10. 'C' → logprob: -7.946617126464844

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21930725872516632
    2. '=' → logprob: -1.71930730342865
    3. '_' → logprob: -4.0943074226379395
    4. 's' → logprob: -7.0943074226379395
    5. ' ' → logprob: -8.969306945800781
    6. ')' → logprob: -10.844306945800781
    7. ',' → logprob: -11.344306945800781
    8. 'A' → logprob: -11.469306945800781
    9. '_=' → logprob: -11.469306945800781
    10. '.' → logprob: -11.969306945800781

Token 22: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0230077505111694
    2. '""' → logprob: -1.0230077505111694
    3. '[]' → logprob: -2.273007869720459
    4. 'max' → logprob: -3.148007869720459
    5. '''' → logprob: -3.148007869720459
    6. '"' → logprob: -4.023007869720459
    7. 'len' → logprob: -4.148007869720459
    8. '[' → logprob: -4.273007869720459
    9. '[max' → logprob: -4.648007869720459
    10. '[len' → logprob: -4.898007869720459

Token 23: 'No' (ID: 3160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07356983423233032
    2. '")' → logprob: -2.8235697746276855
    3. '0' → logprob: -5.1985697746276855
    4. '""' → logprob: -5.4485697746276855
    5. ''' → logprob: -7.6985697746276855
    6. 'A' → logprob: -7.9485697746276855
    7. 'a' → logprob: -8.573570251464844
    8. ' "' → logprob: -9.198570251464844
    9. '"A' → logprob: -9.823570251464844
    10. '"""' → logprob: -10.073570251464844

Token 24: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0065971864387393
    2. ' "' → logprob: -5.63159704208374
    3. '\n' → logprob: -6.00659704208374
    4. 'if' → logprob: -8.381597518920898
    5. '")' → logprob: -9.256597518920898
    6. 't' → logprob: -9.881597518920898
    7. ' if' → logprob: -10.506597518920898
    8. ')' → logprob: -11.256597518920898
    9. '"""' → logprob: -11.381597518920898
    10. '"\' → logprob: -11.631597518920898

Token 25: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11622007191181183
    2. '
' → logprob: -2.991219997406006
    3. 'if' → logprob: -3.241219997406006
    4. '```' → logprob: -4.116219997406006
    5. 'for' → logprob: -6.366219997406006
    6. '\' → logprob: -6.491219997406006
    7. '``' → logprob: -8.866220474243164
    8. ' 
' → logprob: -8.866220474243164
    9. ' if' → logprob: -9.116220474243164
    10. '  
' → logprob: -9.366220474243164

Token 26: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.432138055562973
    2. ' i' → logprob: -1.0571380853652954
    3. '  ' → logprob: -6.432137966156006
    4. ' _' → logprob: -7.057137966156006
    5. 'i' → logprob: -7.432137966156006
    6. '_' → logprob: -8.182138442993164
    7. ' ‌' → logprob: -10.932138442993164
    8. ' ' → logprob: -11.057138442993164
    9. ' "' → logprob: -11.307138442993164
    10. ' `' → logprob: -11.807138442993164

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019450625404715538
    2. 'in' → logprob: -4.019450664520264
    3. ' ' → logprob: -6.769450664520264
    4. '  ' → logprob: -9.644450187683105
    5. 'n' → logprob: -10.269450187683105
    6. ' i' → logprob: -10.894450187683105
    7. ' n' → logprob: -11.644450187683105
    8. ')' → logprob: -12.394450187683105
    9. '	in' → logprob: -12.519450187683105
    10. ' "' → logprob: -13.394450187683105

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002208069898188114
    2. 'range' → logprob: -6.127208232879639
    3. ' ' → logprob: -10.75220775604248
    4. '(range' → logprob: -14.87720775604248
    5. '  ' → logprob: -15.00220775604248
    6. '	range' → logprob: -15.12720775604248
    7. ' len' → logprob: -15.50220775604248
    8. ' xrange' → logprob: -16.002208709716797
    9. '"' → logprob: -16.877208709716797
    10. ' ra' → logprob: -16.877208709716797

Token 29: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.20200125873088837
    2. '(' → logprob: -1.7020012140274048
    3. ' (' → logprob: -7.452001094818115
    4. '(max' → logprob: -13.452001571655273
    5. '(min' → logprob: -13.702001571655273
    6. ' len' → logprob: -13.827001571655273
    7. '(length' → logprob: -14.077001571655273
    8. '(
' → logprob: -14.327001571655273
    9. '(l' → logprob: -14.702001571655273
    10. '(range' → logprob: -15.077001571655273

Token 30: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.350514680147171
    2. 'B' → logprob: -1.2255146503448486
    3. '(A' → logprob: -6.475514888763428
    4. '(B' → logprob: -7.600514888763428
    5. '(' → logprob: -10.97551441192627
    6. ')' → logprob: -12.85051441192627
    7. 'a' → logprob: -13.22551441192627
    8. ' A' → logprob: -13.22551441192627
    9. ' B' → logprob: -14.10051441192627
    10. '(a' → logprob: -14.60051441192627

Token 31: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3045004606246948
    2. '-' → logprob: -1.5545004606246948
    3. '):' → logprob: -3.1795005798339844
    4. '-l' → logprob: -5.429500579833984
    5. ' ):' → logprob: -6.304500579833984
    6. '+' → logprob: -6.804500579833984
    7. '-length' → logprob: -7.804500579833984
    8. '-m' → logprob: -8.054500579833984
    9. ')' → logprob: -8.054500579833984
    10. '):
' → logprob: -8.679500579833984

Token 32: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0006130746915005147
    2. ' len' → logprob: -7.625613212585449
    3. '1' → logprob: -9.50061321258545
    4. '(len' → logprob: -10.50061321258545
    5. '<len' → logprob: -11.62561321258545
    6. '	len' → logprob: -12.00061321258545
    7. 'leni' → logprob: -13.62561321258545
    8. '[len' → logprob: -13.62561321258545
    9. '=len' → logprob: -13.87561321258545
    10. '-' → logprob: -13.87561321258545

Token 33: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.4881879400927573e-05
    2. '(' → logprob: -11.250035285949707
    3. ' B' → logprob: -11.375035285949707
    4. '(B' → logprob: -12.000035285949707
    5. ')' → logprob: -12.875035285949707
    6. 'A' → logprob: -14.250035285949707
    7. ' ' → logprob: -15.875035285949707
    8. '1' → logprob: -16.62503433227539
    9. 'b' → logprob: -16.62503433227539
    10. '<B' → logprob: -16.81253433227539

Token 34: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759979486465454
    2. '+' → logprob: -0.8259979486465454
    3. ' ' → logprob: -10.075998306274414
    4. ')' → logprob: -11.450998306274414
    5. '1' → logprob: -13.450998306274414
    6. ')+' → logprob: -13.700998306274414
    7. ' plus' → logprob: -14.575998306274414
    8. '```' → logprob: -14.700998306274414
    9. ' +
' → logprob: -15.075998306274414
    10. '+i' → logprob: -15.325998306274414

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364811837673187
    2. ' ' → logprob: -3.4086480140686035
    3. ')' → logprob: -13.783648490905762
    4. '```' → logprob: -14.408648490905762
    5. '   ' → logprob: -15.033648490905762
    6. '  ' → logprob: -16.158647537231445
    7. '１' → logprob: -16.283647537231445
    8. '`' → logprob: -17.096147537231445
    9. '<|end|>' → logprob: -17.158647537231445
    10. ' ' → logprob: -17.221147537231445

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.240481914370321e-05
    2. ' ' → logprob: -9.875052452087402
    3. ')' → logprob: -15.250052452087402
    4. '{' → logprob: -15.750052452087402
    5. '```' → logprob: -15.875052452087402
    6. '１' → logprob: -16.500051498413086
    7. '   ' → logprob: -16.687551498413086
    8. '<|end|>' → logprob: -16.750051498413086
    9. '१' → logprob: -17.500051498413086
    10. '۱' → logprob: -17.562551498413086

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031981545034796
    2. ')' → logprob: -6.378198146820068
    3. ':' → logprob: -6.878198146820068
    4. ' ):' → logprob: -7.753198146820068
    5. '):
' → logprob: -10.503198623657227
    6. ' )' → logprob: -12.878198623657227
    7. ' ' → logprob: -13.378198623657227
    8. '   ' → logprob: -13.503198623657227
    9. '```' → logprob: -15.128198623657227
    10. '():' → logprob: -15.253198623657227

Token 38: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5280203819274902
    2. '   ' → logprob: -0.9030203819274902
    3. ' ' → logprob: -6.15302038192749
    4. 'if' → logprob: -6.40302038192749
    5. '	if' → logprob: -8.153020858764648
    6. '<|end|>' → logprob: -8.653020858764648
    7. '    
' → logprob: -8.903020858764648
    8. ' 
' → logprob: -9.403020858764648
    9. '    ' → logprob: -9.403020858764648
    10. ' for' → logprob: -9.653020858764648

Token 39: ' match' (ID: 3981)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.186284601688385
    2. 'if' → logprob: -1.8112845420837402
    3. '   ' → logprob: -5.06128454208374
    4. ' for' → logprob: -9.811285018920898
    5. '    ' → logprob: -9.936285018920898
    6. 'for' → logprob: -10.561285018920898
    7. '	if' → logprob: -11.061285018920898
    8. ' ' → logprob: -11.436285018920898
    9. ' i' → logprob: -12.311285018920898
    10. '  ' → logprob: -12.436285018920898

Token 40: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9101883172988892
    2. 'es' → logprob: -0.9101883172988892
    3. ' =' → logprob: -2.0351881980895996
    4. '=' → logprob: -3.7851881980895996
    5. 'ing' → logprob: -3.9101881980895996
    6. '(' → logprob: -5.2851881980896
    7. '_found' → logprob: -5.4101881980896
    8. '=True' → logprob: -5.9101881980896
    9. ':' → logprob: -6.1601881980896
    10. '(s' → logprob: -6.6601881980896

Token 41: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.023032676428556442
    2. ' True' → logprob: -3.8980326652526855
    3. 'A' → logprob: -6.1480326652526855
    4. '   ' → logprob: -8.273033142089844
    5. ' A' → logprob: -10.273033142089844
    6. '(True' → logprob: -10.398033142089844
    7. 'False' → logprob: -10.773033142089844
    8. '=True' → logprob: -13.148033142089844
    9. '1' → logprob: -13.398033142089844
    10. 'true' → logprob: -13.898033142089844

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10660380125045776
    2. '<|end|>' → logprob: -2.4816038608551025
    3. '       ' → logprob: -4.856603622436523
    4. ' ' → logprob: -6.231603622436523
    5. '    
' → logprob: -6.231603622436523
    6. '    ' → logprob: -6.231603622436523
    7. ' for' → logprob: -6.731603622436523
    8. ':' → logprob: -7.481603622436523
    9. '  ' → logprob: -8.106603622436523
    10. '<|end|>' → logprob: -8.231603622436523

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6312344670295715
    2. '<|end|>' → logprob: -1.3812344074249268
    3. ' ' → logprob: -2.1312344074249268
    4. ' for' → logprob: -2.6312344074249268
    5. ' 
' → logprob: -5.006234645843506
    6. '    ' → logprob: -5.256234645843506
    7. '    
' → logprob: -5.256234645843506
    8. '  ' → logprob: -6.131234645843506
    9. 'for' → logprob: -6.506234645843506
    10. '<|end|>' → logprob: -6.631234645843506

Token 44: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5174089074134827
    2. '   ' → logprob: -1.392408847808838
    3. 'for' (adapté à ' for') → logprob: -1.892408847808838
    4. ' ' → logprob: -5.767408847808838
    5. '	for' → logprob: -6.642408847808838
    6. '<|end|>' → logprob: -9.392409324645996
    7. '  ' → logprob: -9.517409324645996
    8. ' if' → logprob: -10.017409324645996
    9. '    ' → logprob: -10.392409324645996
    10. 'if' → logprob: -10.892409324645996

Token 45: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25192928314208984
    2. ' j' → logprob: -1.5019292831420898
    3. '	j' → logprob: -16.001930236816406
    4. ' ' → logprob: -16.126930236816406
    5. '_j' → logprob: -18.501930236816406
    6. ' range' → logprob: -19.126930236816406
    7. 'k' → logprob: -19.376930236816406
    8. '```' → logprob: -19.376930236816406
    9. ',j' → logprob: -19.626930236816406
    10. 'range' → logprob: -19.876930236816406

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02987035922706127
    2. 'in' → logprob: -3.5298702716827393
    3. '   ' → logprob: -9.52987003326416
    4. '<|end|>' → logprob: -10.52987003326416
    5. ' ' → logprob: -11.65487003326416
    6. '    ' → logprob: -11.90487003326416
    7. '	in' → logprob: -13.90487003326416
    8. 'range' → logprob: -13.90487003326416
    9. '<|end|>' → logprob: -14.27987003326416
    10. '  ' → logprob: -14.52987003326416

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868745267391205
    2. 'range' → logprob: -1.1368745565414429
    3. '(range' → logprob: -13.011874198913574
    4. '	range' → logprob: -14.136874198913574
    5. ' ' → logprob: -14.761874198913574
    6. ' xrange' → logprob: -16.76187515258789
    7. ')' → logprob: -17.13687515258789
    8. '<|end|>' → logprob: -18.01187515258789
    9. '   ' → logprob: -18.13687515258789
    10. '.range' → logprob: -18.38687515258789

Token 48: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00026062061078846455
    2. ' (' → logprob: -9.500260353088379
    3. '(' → logprob: -9.875260353088379
    4. ' len' → logprob: -10.000260353088379
    5. 'len' → logprob: -10.250260353088379
    6. '<len' → logprob: -10.500260353088379
    7. '[len' → logprob: -11.000260353088379
    8. '	len' → logprob: -12.000260353088379
    9. ',len' → logprob: -14.000260353088379
    10. '=len' → logprob: -14.125260353088379

Token 49: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -8.061054359131958e-06
    2. '(B' → logprob: -12.250007629394531
    3. ' B' → logprob: -13.500007629394531
    4. ')' → logprob: -14.125007629394531
    5. '(' → logprob: -14.500007629394531
    6. 'A' → logprob: -15.375007629394531
    7. '_B' → logprob: -16.00000762939453
    8. 'b' → logprob: -16.12500762939453
    9. '   ' → logprob: -17.43750762939453
    10. '<B' → logprob: -17.68750762939453

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017752613639459014
    2. '):
' → logprob: -6.87677526473999
    3. '   ' → logprob: -7.87677526473999
    4. ':' → logprob: -8.501774787902832
    5. ')' → logprob: -8.876774787902832
    6. '       ' → logprob: -12.376774787902832
    7. ' ):' → logprob: -12.751774787902832
    8. '<|end|>' → logprob: -12.751774787902832
    9. ' ' → logprob: -12.876774787902832
    10. '():' → logprob: -13.376774787902832

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013248002156615257
    2. '<|end|>' → logprob: -4.388247966766357
    3. '   ' → logprob: -8.013248443603516
    4. ' if' → logprob: -8.888248443603516
    5. '    ' → logprob: -9.388248443603516
    6. ' ' → logprob: -10.138248443603516
    7. '<|end|>' → logprob: -10.388248443603516
    8. ':' → logprob: -10.513248443603516
    9. ',' → logprob: -11.013248443603516
    10. 'if' → logprob: -11.513248443603516

Token 52: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06538517773151398
    2. '<|end|>' → logprob: -3.065385103225708
    3. ' if' → logprob: -4.315385341644287
    4. ' ' → logprob: -7.065385341644287
    5. 'if' (adapté à ' if') → logprob: -7.190385341644287
    6. '   ' → logprob: -7.690385341644287
    7. '<|end|>' → logprob: -7.690385341644287
    8. '           ' → logprob: -8.940384864807129
    9. ':' → logprob: -9.065384864807129
    10. '```' → logprob: -9.565384864807129

Token 53: ' B' (ID: 418)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0336589552462101
    2. 'A' → logprob: -3.408658981323242
    3. ' ' → logprob: -11.908658981323242
    4. '   ' → logprob: -13.158658981323242
    5. '	A' → logprob: -13.158658981323242
    6. ' not' → logprob: -14.283658981323242
    7. ' B' → logprob: -14.283658981323242
    8. 'B' → logprob: -15.033658981323242
    9. '>A' → logprob: -15.158658981323242
    10. '    ' → logprob: -15.158658981323242

Token 54: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03939462825655937
    2. '[i' → logprob: -3.4143946170806885
    3. '[' → logprob: -5.164394855499268
    4. '```' → logprob: -12.28939437866211
    5. '[I' → logprob: -13.28939437866211
    6. '   ' → logprob: -13.41439437866211
    7. '[A' → logprob: -13.53939437866211
    8. '[int' → logprob: -13.66439437866211
    9. '[js' → logprob: -13.78939437866211
    10. '[input' → logprob: -14.16439437866211

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038774196058511734
    2. '!=' → logprob: -3.663774251937866
    3. ']!=' → logprob: -4.913774013519287
    4. ' !=' → logprob: -5.413774013519287
    5. ' ]' → logprob: -8.163774490356445
    6. ' not' → logprob: -9.038774490356445
    7. '']' → logprob: -9.288774490356445
    8. ')' → logprob: -10.413774490356445
    9. '   ' → logprob: -11.538774490356445
    10. '"]' → logprob: -11.538774490356445

Token 56: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.19186653196811676
    2. ' !=' → logprob: -1.8168665170669556
    3. ' not' → logprob: -4.441866397857666
    4. 'not' → logprob: -8.816866874694824
    5. '==' → logprob: -10.691866874694824
    6. ']!=' → logprob: -10.816866874694824
    7. '!==' → logprob: -10.941866874694824
    8. ')' → logprob: -11.191866874694824
    9. '()!=' → logprob: -11.316866874694824
    10. ']' → logprob: -11.441866874694824

Token 57: ' '_'' (ID: 86115)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001038287067785859
    2. ' A' → logprob: -6.876038074493408
    3. ''A' → logprob: -13.501038551330566
    4. ' ' → logprob: -13.501038551330566
    5. '   ' → logprob: -13.751038551330566
    6. ')' → logprob: -15.126038551330566
    7. '	A' → logprob: -15.251038551330566
    8. '<|end|>' → logprob: -15.501038551330566
    9. '  ' → logprob: -15.626038551330566
    10. '>A' → logprob: -15.876038551330566

Token 58: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14379431307315826
    2. 'and' → logprob: -2.018794298171997
    3. 'A' → logprob: -7.143794536590576
    4. ' A' → logprob: -9.893794059753418
    5. ' or' → logprob: -9.893794059753418
    6. ':' → logprob: -10.018794059753418
    7. ')' → logprob: -10.143794059753418
    8. ' ' → logprob: -10.393794059753418
    9. '   ' → logprob: -10.643794059753418
    10. '_' → logprob: -11.018794059753418

Token 59: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.34863296151161194
    2. ' A' → logprob: -1.2236329317092896
    3. 'B' → logprob: -8.9736328125
    4. ' B' → logprob: -10.3486328125
    5. ' ' → logprob: -11.2236328125
    6. '   ' → logprob: -12.0986328125
    7. '	A' → logprob: -12.5986328125
    8. '  ' → logprob: -13.4736328125
    9. '>A' → logprob: -14.2861328125
    10. ''A' → logprob: -14.4111328125

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0029902977403253317
    2. '[j' → logprob: -5.877990245819092
    3. '[' → logprob: -8.62799072265625
    4. '[A' → logprob: -12.87799072265625
    5. '[I' → logprob: -13.37799072265625
    6. '[len' → logprob: -13.62799072265625
    7. '```' → logprob: -15.25299072265625
    8. '[
' → logprob: -15.37799072265625
    9. ' [' → logprob: -15.62799072265625
    10. 'i' → logprob: -16.12799072265625

Token 61: ' +' (ID: 659)
  Prédit: '+j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.23548266291618347
    2. ' +' → logprob: -1.7354826927185059
    3. '+' → logprob: -3.610482692718506
    4. '[j' → logprob: -5.110482692718506
    5. ']' → logprob: -8.985482215881348
    6. '+i' → logprob: -8.985482215881348
    7. 'j' → logprob: -9.985482215881348
    8. '][' → logprob: -10.110482215881348
    9. '[' → logprob: -10.860482215881348
    10. '[i' → logprob: -11.110482215881348

Token 62: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0003361774142831564
    2. ' j' → logprob: -8.000336647033691
    3. ' ' → logprob: -14.500336647033691
    4. '	j' → logprob: -15.625336647033691
    5. '   ' → logprob: -17.750335693359375
    6. '```' → logprob: -18.000335693359375
    7. '<|end|>' → logprob: -18.375335693359375
    8. '[j' → logprob: -18.750335693359375
    9. '$j' → logprob: -18.750335693359375
    10. '  ' → logprob: -18.875335693359375

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004539892543107271
    2. ']!=' → logprob: -5.504539966583252
    3. ' ]' → logprob: -7.879539966583252
    4. '!=' → logprob: -10.004539489746094
    5. '']' → logprob: -10.754539489746094
    6. ' !=' → logprob: -11.754539489746094
    7. '`]' → logprob: -12.504539489746094
    8. '"]' → logprob: -13.629539489746094
    9. '   ' → logprob: -13.879539489746094
    10. ']!='' → logprob: -14.254539489746094

Token 64: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.062149737030267715
    2. ' !=' → logprob: -2.8121497631073
    3. ']!=' → logprob: -9.437150001525879
    4. ')!=' → logprob: -9.937150001525879
    5. ')' → logprob: -10.562150001525879
    6. '()!=' → logprob: -11.687150001525879
    7. '!==' → logprob: -11.937150001525879
    8. '```' → logprob: -12.312150001525879
    9. ']' → logprob: -12.937150001525879
    10. '<|end|>' → logprob: -13.812150001525879

Token 65: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.08894447982311249
    2. ' B' → logprob: -2.463944435119629
    3. ' ' → logprob: -12.463944435119629
    4. '   ' → logprob: -15.088944435119629
    5. '	B' → logprob: -15.713944435119629
    6. '>B' → logprob: -16.213945388793945
    7. '  ' → logprob: -16.338945388793945
    8. '_B' → logprob: -16.588945388793945
    9. ')' → logprob: -16.838945388793945
    10. '    ' → logprob: -17.213945388793945

Token 66: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002610974188428372
    2. '[' → logprob: -8.375261306762695
    3. '[i' → logprob: -10.750261306762695
    4. 'j' → logprob: -12.250261306762695
    5. '```' → logprob: -13.375261306762695
    6. '[
' → logprob: -14.125261306762695
    7. ' [' → logprob: -14.500261306762695
    8. ']' → logprob: -14.875261306762695
    9. '   ' → logprob: -15.625261306762695
    10. ' ' → logprob: -15.750261306762695

Token 67: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28799131512641907
    2. '):' → logprob: -1.4129912853240967
    3. '):
' → logprob: -5.537991523742676
    4. ':
' → logprob: -6.287991523742676
    5. ']:' → logprob: -7.162991523742676
    6. '   ' → logprob: -9.287991523742676
    7. ')' → logprob: -9.662991523742676
    8. '       ' → logprob: -10.037991523742676
    9. '```' → logprob: -11.787991523742676
    10. '}:' → logprob: -12.162991523742676

Token 68: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05058123543858528
    2. '       ' → logprob: -3.175581216812134
    3. '           ' → logprob: -5.550581455230713
    4. ':
' → logprob: -5.675581455230713
    5. '```' → logprob: -9.425580978393555
    6. '   ' → logprob: -9.925580978393555
    7. ' match' → logprob: -10.175580978393555
    8. '):' → logprob: -10.675580978393555
    9. 'match' → logprob: -10.925580978393555
    10. '=' → logprob: -11.800580978393555

Token 69: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.9594452977180481
    2. '               ' → logprob: -1.2094452381134033
    3. 'match' (adapté à ' match') → logprob: -1.9594452381134033
    4. '           ' → logprob: -2.0844452381134033
    5. '
' → logprob: -3.8344452381134033
    6. '   ' → logprob: -4.459445476531982
    7. '       ' → logprob: -4.584445476531982
    8. ' 
' → logprob: -5.959445476531982
    9. '```' → logprob: -6.084445476531982
    10. '                
' → logprob: -6.709445476531982

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142951607704163
    2. '=' → logprob: -1.7014294862747192
    3. '=False' → logprob: -11.57642936706543
    4. ' ' → logprob: -12.07642936706543
    5. '=True' → logprob: -14.20142936706543
    6. '   ' → logprob: -15.32642936706543
    7. 's' → logprob: -15.57642936706543
    8. '  ' → logprob: -16.82642936706543
    9. ')' → logprob: -17.07642936706543
    10. '       ' → logprob: -17.82642936706543

Token 71: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.4740770161151886
    2. 'False' → logprob: -0.9740769863128662
    3. '(False' → logprob: -18.224077224731445
    4. '=False' → logprob: -18.224077224731445
    5. ' false' → logprob: -19.849077224731445
    6. ' ' → logprob: -20.724077224731445
    7. ' True' → logprob: -20.724077224731445
    8. '_false' → logprob: -21.099077224731445
    9. '.False' → logprob: -21.224077224731445
    10. 'True' → logprob: -21.724077224731445

Token 72: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007338665891438723
    2. '               ' → logprob: -7.625733852386475
    3. '       ' → logprob: -8.875734329223633
    4. '		' → logprob: -9.750734329223633
    5. '<|end|>' → logprob: -11.000734329223633
    6. '          ' → logprob: -12.375734329223633
    7. '            
' → logprob: -12.500734329223633
    8. '   ' → logprob: -12.625734329223633
    9. '	       ' → logprob: -12.625734329223633
    10. 'break' → logprob: -13.125734329223633

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.231182826217264e-05
    2. '       ' → logprob: -10.000072479248047
    3. '		' → logprob: -11.375072479248047
    4. '               ' → logprob: -11.875072479248047
    5. '   ' → logprob: -13.250072479248047
    6. '<|end|>' → logprob: -13.250072479248047
    7. '            
' → logprob: -13.625072479248047
    8. '          ' → logprob: -13.875072479248047
    9. '```' → logprob: -14.125072479248047
    10. '	       ' → logprob: -14.375072479248047

Token 74: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01707143895328045
    2. '           ' → logprob: -4.51707124710083
    3. ' break' → logprob: -5.26707124710083
    4. '       ' → logprob: -7.64207124710083
    5. '	break' → logprob: -8.517071723937988
    6. '   ' → logprob: -9.142071723937988
    7. '               ' → logprob: -10.392071723937988
    8. '```' → logprob: -11.017071723937988
    9. 'b' → logprob: -11.642071723937988
    10. ' ' → logprob: -14.392071723937988

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24904493987560272
    2. '    
' → logprob: -2.374044895172119
    3. '
' → logprob: -2.874044895172119
    4. ' 
' → logprob: -3.374044895172119
    5. '  
' → logprob: -4.624044895172119
    6. '   
' → logprob: -5.124044895172119
    7. '\n' → logprob: -5.374044895172119
    8. '<|end|>' → logprob: -5.749044895172119
    9. '  ' → logprob: -6.124044895172119
    10. '    ' → logprob: -6.249044895172119

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005959495436400175
    2. '    
' → logprob: -5.255959510803223
    3. ' if' → logprob: -9.005959510803223
    4. ' 
' → logprob: -9.130959510803223
    5. '
' → logprob: -9.380959510803223
    6. '   
' → logprob: -9.755959510803223
    7. '        
' → logprob: -9.880959510803223
    8. '<|end|>' → logprob: -10.005959510803223
    9. '```' → logprob: -10.130959510803223
    10. '    ' → logprob: -10.130959510803223

Token 77: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01955069974064827
    2. 'if' (adapté à ' if') → logprob: -4.644550800323486
    3. ' if' → logprob: -4.769550800323486
    4. ' ' → logprob: -7.394550800323486
    5. '    
' → logprob: -8.144550323486328
    6. '<|end|>' → logprob: -9.519550323486328
    7. '    ' → logprob: -9.769550323486328
    8. '  ' → logprob: -9.769550323486328
    9. '```' → logprob: -9.769550323486328
    10. '       ' → logprob: -10.269550323486328

Token 78: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.000205566844670102
    2. 'match' → logprob: -8.500205993652344
    3. ' ' → logprob: -13.625205993652344
    4. '	match' → logprob: -14.750205993652344
    5. '(match' → logprob: -15.375205993652344
    6. ' not' → logprob: -16.000205993652344
    7. ' ' → logprob: -16.875205993652344
    8. ' m' → logprob: -18.000205993652344
    9. '_match' → logprob: -18.000205993652344
    10. ' math' → logprob: -18.875205993652344

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015085970517247915
    2. ':
' → logprob: -9.250150680541992
    3. '==' → logprob: -10.250150680541992
    4. '=' → logprob: -11.750150680541992
    5. ' ==' → logprob: -12.000150680541992
    6. '):' → logprob: -12.500150680541992
    7. ' =' → logprob: -14.375150680541992
    8. ' :' → logprob: -15.500150680541992
    9. '=True' → logprob: -15.625150680541992
    10. '   ' → logprob: -16.250150680541992

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007121934904716909
    2. ' result' → logprob: -8.000712394714355
    3. 'result' → logprob: -8.000712394714355
    4. '   ' → logprob: -10.375712394714355
    5. '```' → logprob: -11.750712394714355
    6. '           ' → logprob: -14.625712394714355
    7. '      ' → logprob: -15.125712394714355
    8. '	result' → logprob: -15.125712394714355
    9. '<|end|>' → logprob: -15.125712394714355
    10. '        
' → logprob: -15.500712394714355

Token 81: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.375000953674316
    3. ' result' → logprob: -14.625000953674316
    4. '```' → logprob: -18.125001907348633
    5. '	result' → logprob: -19.125001907348633
    6. '       ' → logprob: -20.750001907348633
    7. ' ' → logprob: -21.625001907348633
    8. 'results' → logprob: -21.625001907348633
    9. '$result' → logprob: -21.750001907348633
    10. '_result' → logprob: -21.875001907348633

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692831456661224
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.876928329467773
    4. '＝' → logprob: -17.376928329467773
    5. ' ="' → logprob: -17.626928329467773
    6. 's' → logprob: -18.626928329467773
    7. ')' → logprob: -18.876928329467773
    8. '=

' → logprob: -19.001928329467773
    9. ' =
' → logprob: -19.251928329467773
    10. ' ='' → logprob: -19.376928329467773

Token 83: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.016240457072854042
    2. ' "' → logprob: -4.14124059677124
    3. ''' → logprob: -9.141240119934082
    4. '"No' → logprob: -9.391240119934082
    5. ' ' → logprob: -12.266240119934082
    6. '   ' → logprob: -12.391240119934082
    7. '"I' → logprob: -13.516240119934082
    8. ' ' → logprob: -13.891240119934082
    9. ' '' → logprob: -13.891240119934082
    10. '	' → logprob: -14.391240119934082

Token 84: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -9.746380237629637e-05
    2. 'Ye' → logprob: -9.375097274780273
    3. '"' → logprob: -11.500097274780273
    4. 'Y' → logprob: -13.500097274780273
    5. 'YES' → logprob: -14.500097274780273
    6. ' Yes' → logprob: -15.875097274780273
    7. 'Ok' → logprob: -16.250097274780273
    8. 'True' → logprob: -16.500097274780273
    9. ''' → logprob: -17.125097274780273
    10. 'Ya' → logprob: -17.375097274780273

Token 85: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068039484322071075
    2. '<|end|>' → logprob: -5.8818039894104
    3. 'print' → logprob: -6.3818039894104
    4. '           ' → logprob: -7.1318039894104
    5. ')' → logprob: -7.2568039894104
    6. '
' → logprob: -8.631803512573242
    7. '   ' → logprob: -8.881803512573242
    8. 'break' → logprob: -9.006803512573242
    9. '```' → logprob: -9.256803512573242
    10. '<|end|>' → logprob: -9.256803512573242

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2520982623100281
    2. 'print' → logprob: -1.5020983219146729
    3. '<|end|>' → logprob: -9.252098083496094
    4. ' print' → logprob: -10.877098083496094
    5. '```' → logprob: -11.252098083496094
    6. 'break' → logprob: -11.502098083496094
    7. '        
' → logprob: -11.502098083496094
    8. '           ' → logprob: -11.752098083496094
    9. '   ' → logprob: -12.002098083496094
    10. '      ' → logprob: -13.502098083496094

Token 87: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0012165444204583764
    2. ' break' → logprob: -7.251216411590576
    3. '       ' → logprob: -7.751216411590576
    4. '   ' → logprob: -9.876216888427734
    5. 'print' → logprob: -11.251216888427734
    6. '	break' → logprob: -11.501216888427734
    7. '```' → logprob: -13.501216888427734
    8. '           ' → logprob: -15.376216888427734
    9. '_break' → logprob: -16.751216888427734
    10. '    ' → logprob: -17.751216888427734

Token 88: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6286106983898208e-05
    2. '
' → logprob: -11.500016212463379
    3. '```' → logprob: -12.500016212463379
    4. ' print' → logprob: -13.625016212463379
    5. '<|end|>' → logprob: -14.500016212463379
    6. '\n' → logprob: -15.375016212463379
    7. '  
' → logprob: -16.250017166137695
    8. ' 
' → logprob: -16.375017166137695
    9. ')' → logprob: -16.750017166137695
    10. '\' → logprob: -17.000017166137695

Token 89: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.999452772201039e-05
    2. '
' → logprob: -10.500029563903809
    3. ' print' → logprob: -13.375029563903809
    4. '```' → logprob: -14.750029563903809
    5. '\n' → logprob: -16.250030517578125
    6. ' 
' → logprob: -16.625030517578125
    7. '  
' → logprob: -16.875030517578125
    8. ')' → logprob: -16.875030517578125
    9. 'pr' → logprob: -17.000030517578125
    10. '
' → logprob: -17.125030517578125

Token 90: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008622493594884872
    2. '(result' → logprob: -4.758622646331787
    3. '('' → logprob: -12.633622169494629
    4. '("("' → logprob: -12.633622169494629
    5. '()' → logprob: -14.508622169494629
    6. '((' → logprob: -15.758622169494629
    7. '(
' → logprob: -15.883622169494629
    8. '(

' → logprob: -16.008623123168945
    9. ' (' → logprob: -16.133623123168945
    10. 'result' → logprob: -16.258623123168945

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.125
    3. '))' → logprob: -18.0
    4. ')
' → logprob: -18.25
    5. ')`' → logprob: -18.25
    6. '()' → logprob: -18.5
    7. '(' → logprob: -20.0
    8. '),' → logprob: -20.875
    9. '())' → logprob: -21.0
    10. ')

' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 72
Précision stricte (1ère position): 44.94%
Précision adaptée (1ère position): 48.31%
Précision (top 10): 80.90%
================================================================================
