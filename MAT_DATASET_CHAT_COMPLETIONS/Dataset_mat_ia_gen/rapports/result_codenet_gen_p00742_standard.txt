================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from itertools import permutations

def solve_case(words):
    first_letters = set(word[0] for word in words if len(word) > 1)
    letters = set(''.join(words))
    letters = list(letters)
    n = len(letters)
    if n > 10:
        return 0
    indices = {c:i for i,c in enumerate(letters)}
    nums = [[indices[c] for c in word] for word in words]

    count = 0
    digits = tuple(range(10))
    for perm in permutations(digits, n):
        if any(perm[indices[c]] == 0 for c in first_letters):
            continue
        total = 0
        for i in range(len(words)-1):
            val = 0
            for d in nums[i]:
                val = val*10 + perm[d]
            total += val
        val = 0
        for d in nums[-1]:
            val = val*10 + perm[d]
        if total == val:
            count += 1
    return count

def main():
    lines = sys.stdin.read().strip().split('\n')
    i = 0
    while True:
        if i >= len(lines):
            break
        n = lines[i]
        i += 1
        if n == '0':
            break
        n = int(n)
        words = lines[i:i+n]
        i += n
        print(solve_case(words))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183328330516815
    2. '.' → logprob: -2.3368332386016846
    3. '<|end|>' → logprob: -2.8368332386016846
    4. '\' → logprob: -4.711833477020264
    5. 'newline' → logprob: -5.086833477020264
    6. 'import' → logprob: -5.086833477020264
    7. '
' → logprob: -5.711833477020264
    8. '' → logprob: -5.836833477020264
    9. '<|end|>' → logprob: -5.836833477020264
    10. '\r' → logprob: -6.336833477020264

Token 4: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.009480515494942665
    2. 'os' → logprob: -5.2594804763793945
    3. ' collections' → logprob: -7.0094804763793945
    4. ' ' → logprob: -7.2594804763793945
    5. ' math' → logprob: -7.3844804763793945
    6. ' pathlib' → logprob: -7.6344804763793945
    7. ' Py' → logprob: -8.509480476379395
    8. ' typing' → logprob: -8.759480476379395
    9. 'collections' → logprob: -8.759480476379395
    10. ' ' → logprob: -9.009480476379395

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0561082549393177
    2. 'import' → logprob: -2.931108236312866
    3. '.' → logprob: -6.806108474731445
    4. '.import' → logprob: -10.056108474731445
    5. '	import' → logprob: -10.181108474731445
    6. '<|end|>' → logprob: -11.806108474731445
    7. ' ' → logprob: -11.931108474731445
    8. ' .' → logprob: -12.056108474731445
    9. ' itertools' → logprob: -12.556108474731445
    10. '_import' → logprob: -12.806108474731445

Token 6: ' permutations' (ID: 174595)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9246225357055664
    2. 'com' → logprob: -2.2996225357055664
    3. 'chain' → logprob: -2.5496225357055664
    4. 'product' → logprob: -2.5496225357055664
    5. 'group' → logprob: -2.6746225357055664
    6. ' group' → logprob: -3.0496225357055664
    7. ' chain' → logprob: -3.2996225357055664
    8. 'cycle' → logprob: -3.2996225357055664
    9. ' product' → logprob: -3.4246225357055664
    10. 'per' → logprob: -3.6746225357055664

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018912676721811295
    2. '.' → logprob: -4.3939127922058105
    3. '\' → logprob: -6.1439127922058105
    4. '(
' → logprob: -6.6439127922058105
    5. '\(' → logprob: -6.8939127922058105
    6. '\n' → logprob: -7.1439127922058105
    7. ',' → logprob: -8.518912315368652
    8. '```' → logprob: -8.643912315368652
    9. 'import' → logprob: -8.768912315368652
    10. '(

' → logprob: -8.893912315368652

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018313119187951088
    2. '(
' → logprob: -5.018312931060791
    3. '.' → logprob: -5.518312931060791
    4. 'def' → logprob: -5.893312931060791
    5. '\' → logprob: -6.518312931060791
    6. 'import' → logprob: -6.768312931060791
    7. '\(' → logprob: -7.893312931060791
    8. '(

' → logprob: -8.01831340789795
    9. 'for' → logprob: -8.14331340789795
    10. '```' → logprob: -8.64331340789795

Token 9: ' solve' (ID: 17722)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.4843229651451111
    2. ' ' → logprob: -1.4843230247497559
    3. ' factorial' → logprob: -2.609323024749756
    4. ' generate' → logprob: -3.734323024749756
    5. ' calculate' → logprob: -4.484323024749756
    6. ' permutation' → logprob: -4.609323024749756
    7. ' perm' → logprob: -4.984323024749756
    8. ' factor' → logprob: -5.109323024749756
    9. ' process' → logprob: -5.109323024749756
    10. '_' → logprob: -5.609323024749756

Token 10: '_case' (ID: 43667)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004450177773833275
    2. '():' → logprob: -5.87945032119751
    3. '_' → logprob: -7.25445032119751
    4. '(:' → logprob: -8.629449844360352
    5. '```' → logprob: -8.629449844360352
    6. ' (' → logprob: -9.254449844360352
    7. '):' → logprob: -9.754449844360352
    8. ':' → logprob: -9.879449844360352
    9. '(":' → logprob: -9.879449844360352
    10. '(
' → logprob: -10.004449844360352

Token 11: '(words' (ID: 80550)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004556983185466379
    2. '_' → logprob: -8.000455856323242
    3. ' (' → logprob: -9.625455856323242
    4. '(_' → logprob: -11.625455856323242
    5. '("("' → logprob: -11.750455856323242
    6. '():' → logprob: -12.000455856323242
    7. '(
' → logprob: -12.750455856323242
    8. '_(' → logprob: -12.875455856323242
    9. '(user' → logprob: -13.000455856323242
    10. '('' → logprob: -13.000455856323242

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028442218899726868
    2. ')' → logprob: -6.627844333648682
    3. ',' → logprob: -6.752844333648682
    4. '[' → logprob: -8.377843856811523
    5. '):
' → logprob: -10.252843856811523
    6. ':' → logprob: -10.377843856811523
    7. '   ' → logprob: -11.252843856811523
    8. '(' → logprob: -11.502843856811523
    9. ' ):' → logprob: -11.502843856811523
    10. '[]):' → logprob: -12.002843856811523

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6570087671279907
    2. ':' → logprob: -0.7820087671279907
    3. '(' → logprob: -4.407008647918701
    4. '    ' → logprob: -5.782008647918701
    5. ':
' → logprob: -5.782008647918701
    6. '):' → logprob: -6.407008647918701
    7. '    
' → logprob: -6.782008647918701
    8. '[' → logprob: -7.657008647918701
    9. ' :' → logprob: -7.782008647918701
    10. ' ' → logprob: -7.907008647918701

Token 14: ' first' (ID: 1577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012004595249891281
    2. '    
' → logprob: -6.012004375457764
    3. '```' → logprob: -6.887004375457764
    4. ' possible' → logprob: -7.012004375457764
    5. '    ' → logprob: -7.137004375457764
    6. 'result' → logprob: -7.262004375457764
    7. ' words' → logprob: -7.387004375457764
    8. 'possible' → logprob: -7.512004375457764
    9. ' permutations' → logprob: -7.512004375457764
    10. 'words' → logprob: -7.762004375457764

Token 15: '_letters' (ID: 175934)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.5686438083648682
    2. '_' → logprob: -1.4436438083648682
    3. ' =' → logprob: -2.693643808364868
    4. '_letter' → logprob: -3.068643808364868
    5. '_char' → logprob: -3.818643808364868
    6. '=' → logprob: -3.818643808364868
    7. '_letters' → logprob: -3.818643808364868
    8. '_chars' → logprob: -4.693643569946289
    9. '_words' → logprob: -5.568643569946289
    10. 's' → logprob: -7.068643569946289

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0700266882777214
    2. '=' → logprob: -2.6950266361236572
    3. '_' → logprob: -10.195026397705078
    4. '   ' → logprob: -10.695026397705078
    5. '[' → logprob: -11.195026397705078
    6. ' ' → logprob: -12.070026397705078
    7. '_counts' → logprob: -12.695026397705078
    8. '  ' → logprob: -13.570026397705078
    9. '.' → logprob: -13.695026397705078
    10. '_count' → logprob: -13.820026397705078

Token 17: ' set' (ID: 920)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.1685715913772583
    2. '[word' → logprob: -1.2935715913772583
    3. ' {' → logprob: -1.4185715913772583
    4. '{' → logprob: -2.4185714721679688
    5. ' set' → logprob: -2.7935714721679688
    6. '[' → logprob: -4.168571472167969
    7. 'set' → logprob: -5.293571472167969
    8. '[w' → logprob: -7.293571472167969
    9. '[len' → logprob: -7.668571472167969
    10. '[i' → logprob: -8.668571472167969

Token 18: '(word' (ID: 35459)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15692095458507538
    2. '(word' → logprob: -2.406920909881592
    3. '(words' → logprob: -3.531920909881592
    4. '(w' → logprob: -3.781920909881592
    5. '()' → logprob: -6.531920909881592
    6. '([' → logprob: -6.656920909881592
    7. '((' → logprob: -8.53192138671875
    8. '('' → logprob: -10.03192138671875
    9. ' (' → logprob: -10.28192138671875
    10. '(
' → logprob: -10.78192138671875

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024651905987411737
    2. '[:' → logprob: -6.50246524810791
    3. '(' → logprob: -7.75246524810791
    4. '()[' → logprob: -8.50246524810791
    5. ')' → logprob: -8.87746524810791
    6. '()' → logprob: -9.75246524810791
    7. '([' → logprob: -10.37746524810791
    8. '(word' → logprob: -11.50246524810791
    9. '(s' → logprob: -11.62746524810791
    10. '{' → logprob: -11.62746524810791

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '[' → logprob: -16.000019073486328
    4. '   ' → logprob: -16.437519073486328
    5. '-' → logprob: -16.937519073486328
    6. '
' → logprob: -17.500019073486328
    7. ')' → logprob: -17.500019073486328
    8. '  ' → logprob: -17.812519073486328
    9. '۰' → logprob: -17.812519073486328
    10. '```' → logprob: -17.875019073486328

Token 21: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011385081335902214
    2. '])' → logprob: -4.761384963989258
    3. ')' → logprob: -6.011384963989258
    4. ' ]' → logprob: -8.886384963989258
    5. ' for' → logprob: -9.261384963989258
    6. 'for' → logprob: -10.011384963989258
    7. ']])' → logprob: -11.761384963989258
    8. ' ])' → logprob: -11.886384963989258
    9. ']))' → logprob: -12.011384963989258
    10. ')]' → logprob: -12.636384963989258

Token 22: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1222919300198555
    2. ' for' → logprob: -2.3722920417785645
    3. 'for' → logprob: -3.8722920417785645
    4. ' )' → logprob: -7.1222920417785645
    5. '   ' → logprob: -9.122291564941406
    6. '))' → logprob: -10.122291564941406
    7. ' ' → logprob: -10.622291564941406
    8. '])' → logprob: -11.997291564941406
    9. '`)' → logprob: -11.997291564941406
    10. '```' → logprob: -12.247291564941406

Token 23: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.03806191310286522
    2. 'word' → logprob: -3.2880618572235107
    3. '	word' → logprob: -11.41306209564209
    4. ' ' → logprob: -12.03806209564209
    5. '_word' → logprob: -14.03806209564209
    6. ' words' → logprob: -14.03806209564209
    7. ' w' → logprob: -14.16306209564209
    8. ' in' → logprob: -15.16306209564209
    9. 'w' → logprob: -15.78806209564209
    10. '(word' → logprob: -15.78806209564209

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029811467975378036
    2. 'in' → logprob: -3.529811382293701
    3. '<|end|>' → logprob: -11.02981185913086
    4. '<|end|>' → logprob: -11.15481185913086
    5. 's' → logprob: -11.65481185913086
    6. ')' → logprob: -11.90481185913086
    7. 'import' → logprob: -12.52981185913086
    8. ' ' → logprob: -12.52981185913086
    9. 'def' → logprob: -13.27981185913086
    10. '	in' → logprob: -13.90481185913086

Token 25: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.4741251468658447
    2. 'words' → logprob: -0.9741251468658447
    3. '(words' → logprob: -10.349124908447266
    4. '.words' → logprob: -11.849124908447266
    5. ' ' → logprob: -12.849124908447266
    6. '_words' → logprob: -13.224124908447266
    7. 'word' → logprob: -13.849124908447266
    8. '<|end|>' → logprob: -14.099124908447266
    9. ' palabras' → logprob: -14.224124908447266
    10. ')' → logprob: -14.474124908447266

Token 26: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.824579784530215e-05
    2. ' )' → logprob: -10.1250581741333
    3. '   ' → logprob: -11.1250581741333
    4. ')
' → logprob: -12.8750581741333
    5. '))' → logprob: -15.6250581741333
    6. ' ' → logprob: -16.375059127807617
    7. 'if' → logprob: -16.375059127807617
    8. ' if' → logprob: -16.625059127807617
    9. ')

' → logprob: -16.625059127807617
    10. '):' → logprob: -16.875059127807617

Token 27: ' len' (ID: 4631)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.21372051537036896
    2. 'word' → logprob: -1.8387205600738525
    3. ' len' → logprob: -3.7137205600738525
    4. 'len' → logprob: -4.713720321655273
    5. ' ' → logprob: -10.713720321655273
    6. '	word' → logprob: -11.713720321655273
    7. ' words' → logprob: -12.463720321655273
    8. 'words' → logprob: -13.088720321655273
    9. '(word' → logprob: -13.213720321655273
    10. '  ' → logprob: -13.463720321655273

Token 28: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.0014039215166121721
    2. '(' → logprob: -6.62640380859375
    3. 'word' → logprob: -10.25140380859375
    4. ' word' → logprob: -10.37640380859375
    5. '(words' → logprob: -12.62640380859375
    6. ')' → logprob: -13.12640380859375
    7. '>' → logprob: -13.12640380859375
    8. ' (' → logprob: -13.75140380859375
    9. '	word' → logprob: -13.75140380859375
    10. '[word' → logprob: -13.87640380859375

Token 29: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.33749207854270935
    2. ')' → logprob: -1.4624921083450317
    3. ')>' → logprob: -3.337491989135742
    4. ' >' → logprob: -3.962491989135742
    5. ' )' → logprob: -9.837491989135742
    6. ')>=' → logprob: -9.837491989135742
    7. '[' → logprob: -10.587491989135742
    8. '>=' → logprob: -10.712491989135742
    9. '>)' → logprob: -11.462491989135742
    10. '">' → logprob: -11.462491989135742

Token 30: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.32286277413368225
    2. ' >' → logprob: -1.3228627443313599
    3. ')' → logprob: -4.94786262512207
    4. ')>' → logprob: -6.32286262512207
    5. '>=' → logprob: -8.32286262512207
    6. ' >=' → logprob: -8.57286262512207
    7. ' )' → logprob: -9.57286262512207
    8. '>)' → logprob: -9.69786262512207
    9. ' ' → logprob: -10.07286262512207
    10. '==' → logprob: -11.44786262512207

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13639776408672333
    2. ' ' → logprob: -2.2613978385925293
    3. '1' → logprob: -3.7613978385925293
    4. '>' → logprob: -10.261397361755371
    5. '2' → logprob: -12.573897361755371
    6. '```' → logprob: -13.448897361755371
    7. '=' → logprob: -13.573897361755371
    8. '3' → logprob: -13.886397361755371
    9. '   ' → logprob: -14.011397361755371
    10. '

' → logprob: -14.323897361755371

Token 32: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005175408907234669
    2. '1' → logprob: -5.380175590515137
    3. ' ' → logprob: -7.505175590515137
    4. '2' → logprob: -13.130175590515137
    5. '>' → logprob: -14.005175590515137
    6. '3' → logprob: -14.442675590515137
    7. '```' → logprob: -14.692675590515137
    8. '   ' → logprob: -15.567675590515137
    9. '4' → logprob: -15.755175590515137
    10. '5' → logprob: -16.00517463684082

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.591415437171236e-05
    2. ' )' → logprob: -9.375096321105957
    3. ')
' → logprob: -12.000096321105957
    4. '   ' → logprob: -13.250096321105957
    5. '))' → logprob: -13.750096321105957
    6. ' ' → logprob: -14.250096321105957
    7. ')

' → logprob: -15.000096321105957
    8. '),' → logprob: -15.375096321105957
    9. '`)' → logprob: -16.12509536743164
    10. ',' → logprob: -16.25009536743164

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1317502111196518
    2. ')' → logprob: -3.1317501068115234
    3. '    
' → logprob: -3.6317501068115234
    4. '<|end|>' → logprob: -3.7567501068115234
    5. '
' → logprob: -4.256750106811523
    6. ' ' → logprob: -5.131750106811523
    7. '  
' → logprob: -5.756750106811523
    8. ':' → logprob: -6.881750106811523
    9. '\n' → logprob: -7.006750106811523
    10. ' 
' → logprob: -7.006750106811523

Token 35: ' letters' (ID: 18151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14597631990909576
    2. ' 
' → logprob: -3.2709763050079346
    3. '    
' → logprob: -3.3959763050079346
    4. ' ' → logprob: -3.3959763050079346
    5. '\n' → logprob: -5.020976543426514
    6. '  
' → logprob: -5.645976543426514
    7. ')' → logprob: -5.645976543426514
    8. '    ' → logprob: -6.270976543426514
    9. '   
' → logprob: -6.395976543426514
    10. '
' → logprob: -6.520976543426514

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00047773998812772334
    2. '=' → logprob: -7.7504777908325195
    3. ' ' → logprob: -10.62547779083252
    4. '_' → logprob: -12.00047779083252
    5. '   ' → logprob: -12.12547779083252
    6. '  ' → logprob: -13.12547779083252
    7. '    ' → logprob: -13.50047779083252
    8. '.' → logprob: -14.12547779083252
    9. ' |=' → logprob: -14.25047779083252
    10. '_to' → logprob: -14.37547779083252

Token 37: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.07185304164886475
    2. ' list' → logprob: -2.9468531608581543
    3. ' sorted' → logprob: -4.321853160858154
    4. 'set' → logprob: -6.696853160858154
    5. ' ' → logprob: -6.946853160858154
    6. ' {' → logprob: -7.321853160858154
    7. ' [' → logprob: -8.196852684020996
    8. ' '' → logprob: -9.446852684020996
    9. 'sorted' → logprob: -9.821852684020996
    10. 'list' → logprob: -9.821852684020996

Token 38: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42614105343818665
    2. '(word' → logprob: -2.0511410236358643
    3. '('' → logprob: -2.4261410236358643
    4. '(' → logprob: -2.9261410236358643
    5. '(letter' → logprob: -3.0511410236358643
    6. '().' → logprob: -5.051141262054443
    7. '(c' → logprob: -5.301141262054443
    8. '(ch' → logprob: -5.426141262054443
    9. '(char' → logprob: -5.551141262054443
    10. '("' → logprob: -5.926141262054443

Token 39: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.29824620485305786
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.673246145248413
    3. 'w' → logprob: -3.923246145248413
    4. 'word' → logprob: -4.548246383666992
    5. ''.' → logprob: -4.673246383666992
    6. ' ''.' → logprob: -5.548246383666992
    7. '''' → logprob: -5.798246383666992
    8. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -5.798246383666992
    9. ''' → logprob: -5.923246383666992
    10. 'words' → logprob: -6.048246383666992

Token 40: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.40512815117836
    2. 'ascii' → logprob: -1.1551281213760376
    3. 'as' → logprob: -4.780128002166748
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.280128002166748
    5. 'letters' → logprob: -6.780128002166748
    6. 'set' → logprob: -7.155128002166748
    7. 'from' → logprob: -7.780128002166748
    8. 'import' → logprob: -8.405128479003906
    9. 'upper' → logprob: -8.530128479003906
    10. '''.' → logprob: -8.655128479003906

Token 41: '(words' (ID: 80550)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.18034321069717407
    2. '(words' → logprob: -1.8053431510925293
    3. ' words' → logprob: -7.555343151092529
    4. ')' → logprob: -9.930343627929688
    5. 'word' → logprob: -11.055343627929688
    6. '(word' → logprob: -12.555343627929688
    7. '.words' → logprob: -12.930343627929688
    8. '_words' → logprob: -13.305343627929688
    9. '(' → logprob: -14.555343627929688
    10. 'Words' → logprob: -14.805343627929688

Token 42: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014503523707389832
    2. ')' → logprob: -7.126450538635254
    3. '))
' → logprob: -7.751450538635254
    4. ' ))' → logprob: -9.126450538635254
    5. ')))' → logprob: -10.251450538635254
    6. ')).' → logprob: -11.126450538635254
    7. ').' → logprob: -11.251450538635254
    8. ''))' → logprob: -11.251450538635254
    9. '()))' → logprob: -11.626450538635254
    10. '   ' → logprob: -12.001450538635254

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3712051808834076
    2. '<|end|>' → logprob: -2.1212050914764404
    3. '    
' → logprob: -2.7462050914764404
    4. '
' → logprob: -3.3712050914764404
    5. ' ' → logprob: -3.4962050914764404
    6. ')' → logprob: -3.4962050914764404
    7. '<|end|>' → logprob: -4.4962053298950195
    8. '    ' → logprob: -5.2462053298950195
    9. '  ' → logprob: -5.9962053298950195
    10. '  
' → logprob: -5.9962053298950195

Token 44: ' letters' (ID: 18151)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24128156900405884
    2. '    
' → logprob: -2.491281509399414
    3. '
' → logprob: -2.866281509399414
    4. '<|end|>' → logprob: -3.991281509399414
    5. ' 
' → logprob: -4.366281509399414
    6. ' ' → logprob: -4.491281509399414
    7. ')' → logprob: -4.866281509399414
    8. '    ' → logprob: -5.491281509399414
    9. ' letters' → logprob: -5.616281509399414
    10. '<|end|>' → logprob: -6.116281509399414

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21733778715133667
    2. ' -' → logprob: -2.8423378467559814
    3. '=' → logprob: -2.9673378467559814
    4. ' -=' → logprob: -3.2173378467559814
    5. '-' → logprob: -3.7173378467559814
    6. '.' → logprob: -4.342337608337402
    7. '.remove' → logprob: -6.217337608337402
    8. '.update' → logprob: -6.467337608337402
    9. '<|end|>' → logprob: -6.842337608337402
    10. ')' → logprob: -7.217337608337402

Token 46: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.25713494420051575
    2. ' letters' → logprob: -1.6321349143981934
    3. 'list' → logprob: -4.507134914398193
    4. ' sorted' → logprob: -4.632134914398193
    5. 'letters' → logprob: -4.757134914398193
    6. ' first' → logprob: -6.757134914398193
    7. 'sorted' → logprob: -7.757134914398193
    8. ' ' → logprob: -9.257135391235352
    9. 'first' → logprob: -10.007135391235352
    10. ' set' → logprob: -10.257135391235352

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003131784324068576
    2. '(set' → logprob: -8.250312805175781
    3. '((' → logprob: -10.625312805175781
    4. '(sorted' → logprob: -11.250312805175781
    5. '(words' → logprob: -12.375312805175781
    6. 'letters' → logprob: -13.375312805175781
    7. '(
' → logprob: -13.375312805175781
    8. ' (' → logprob: -13.500312805175781
    9. '('' → logprob: -13.750312805175781
    10. '(let' → logprob: -13.875312805175781

Token 48: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.0013696423266083002
    2. ' letters' → logprob: -6.626369476318359
    3. ')' → logprob: -10.50136947631836
    4. '(' → logprob: -11.37636947631836
    5. '_letters' → logprob: -12.75136947631836
    6. 'Letters' → logprob: -15.12636947631836
    7. ' ' → logprob: -15.50136947631836
    8. 'letter' → logprob: -15.50136947631836
    9. '   ' → logprob: -15.50136947631836
    10. 'set' → logprob: -15.62636947631836

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012083302717655897
    2. ' )' → logprob: -6.751208305358887
    3. ')
' → logprob: -10.501208305358887
    4. '))' → logprob: -12.376208305358887
    5. ').' → logprob: -14.001208305358887
    6. '())' → logprob: -14.001208305358887
    7. '-' → logprob: -14.001208305358887
    8. ' -' → logprob: -14.376208305358887
    9. ')set' → logprob: -14.876208305358887
    10. ')-' → logprob: -15.001208305358887

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23504088819026947
    2. '<|end|>' → logprob: -1.9850409030914307
    3. '
' → logprob: -3.7350409030914307
    4. '    
' → logprob: -4.110040664672852
    5. ',' → logprob: -4.985040664672852
    6. '<|end|>' → logprob: -5.235040664672852
    7. ' ' → logprob: -5.485040664672852
    8. ')' → logprob: -5.485040664672852
    9. ':' → logprob: -5.610040664672852
    10. '  
' → logprob: -6.860040664672852

Token 51: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.580417275428772
    2. ' letters' → logprob: -2.3304171562194824
    3. ' for' → logprob: -2.4554171562194824
    4. 'letters' → logprob: -3.4554171562194824
    5. ' n' → logprob: -3.8304171562194824
    6. 'def' → logprob: -4.080417156219482
    7. 'n' (adapté à ' n') → logprob: -4.205417156219482
    8. ':' → logprob: -4.330417156219482
    9. 'possible' → logprob: -4.330417156219482
    10. ' permutations' → logprob: -4.330417156219482

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049296051263809204
    2. '=' → logprob: -3.1742961406707764
    3. '_' → logprob: -6.049295902252197
    4. '_letters' → logprob: -6.174295902252197
    5. ' ' → logprob: -7.424295902252197
    6. 'ext' → logprob: -8.299296379089355
    7. 'um' → logprob: -8.549296379089355
    8. '<|end|>' → logprob: -9.049296379089355
    9. '=len' → logprob: -9.174296379089355
    10. '_per' → logprob: -9.299296379089355

Token 53: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.00034595211036503315
    2. 'len' → logprob: -8.000346183776855
    3. ' ' → logprob: -11.625346183776855
    4. '(len' → logprob: -14.250346183776855
    5. '=len' → logprob: -14.625346183776855
    6. '	len' → logprob: -15.625346183776855
    7. '[len' → logprob: -15.750346183776855
    8. ' n' → logprob: -16.00034523010254
    9. ',len' → logprob: -18.00034523010254
    10. '<len' → logprob: -18.00034523010254

Token 54: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.2994620242971e-06
    2. '(words' → logprob: -11.750008583068848
    3. '(letter' → logprob: -16.50000762939453
    4. ' (' → logprob: -16.62500762939453
    5. 'letters' → logprob: -16.75000762939453
    6. '(lines' → logprob: -17.37500762939453
    7. '(`' → logprob: -17.75000762939453
    8. '(tokens' → logprob: -17.87500762939453
    9. '(numbers' → logprob: -18.25000762939453
    10. '(
' → logprob: -18.50000762939453

Token 55: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.00231547630392015
    2. ' letters' → logprob: -6.127315521240234
    3. '(' → logprob: -9.002315521240234
    4. ')' → logprob: -12.252315521240234
    5. '_letters' → logprob: -13.752315521240234
    6. 'Letters' → logprob: -14.752315521240234
    7. 'words' → logprob: -14.877315521240234
    8. 'letter' → logprob: -15.252315521240234
    9. ' )' → logprob: -16.627315521240234
    10. '```' → logprob: -16.752315521240234

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7954958821064793e-05
    2. ' )' → logprob: -11.250018119812012
    3. ')
' → logprob: -12.375018119812012
    4. '   ' → logprob: -15.625018119812012
    5. '))' → logprob: -16.000017166137695
    6. ' ' → logprob: -16.875017166137695
    7. ')

' → logprob: -16.875017166137695
    8. ')n' → logprob: -16.875017166137695
    9. ')return' → logprob: -17.125017166137695
    10. ')#' → logprob: -17.125017166137695

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22482413053512573
    2. '<|end|>' → logprob: -2.0998241901397705
    3. ')' → logprob: -3.7248241901397705
    4. '
' → logprob: -4.224823951721191
    5. ':' → logprob: -4.599823951721191
    6. '    
' → logprob: -4.974823951721191
    7. ' ' → logprob: -5.099823951721191
    8. ' for' → logprob: -5.224823951721191
    9. '<|end|>' → logprob: -5.474823951721191
    10. ',' → logprob: -5.974823951721191

Token 58: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14522765576839447
    2. 'for' → logprob: -2.1452276706695557
    3. '   ' → logprob: -5.270227432250977
    4. '=' → logprob: -5.645227432250977
    5. ' ' → logprob: -6.645227432250977
    6. 'digits' → logprob: -6.770227432250977
    7. ' digits' → logprob: -7.520227432250977
    8. ' if' → logprob: -7.520227432250977
    9. ' letters' → logprob: -7.520227432250977
    10. ' =' → logprob: -7.520227432250977

Token 59: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00432887626811862
    2. ' ' → logprob: -5.879328727722168
    3. 'n' → logprob: -6.754328727722168
    4. ' not' → logprob: -8.129328727722168
    5. ' len' → logprob: -9.879328727722168
    6. ' ' → logprob: -11.879328727722168
    7. '  ' → logprob: -14.254328727722168
    8. 'not' → logprob: -14.691828727722168
    9. '	n' → logprob: -14.691828727722168
    10. ' any' → logprob: -14.691828727722168

Token 60: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03166027367115021
    2. '>' → logprob: -3.531660318374634
    3. ' <=' → logprob: -6.906660079956055
    4. ' <' → logprob: -7.406660079956055
    5. ' !=' → logprob: -9.406660079956055
    6. ' ==' → logprob: -9.406660079956055
    7. '<' → logprob: -10.281660079956055
    8. '<=' → logprob: -10.281660079956055
    9. ' ' → logprob: -10.406660079956055
    10. '==' → logprob: -10.656660079956055

Token 61: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1002846211194992
    2. ' ' → logprob: -2.3502845764160156
    3. '9' → logprob: -10.475284576416016
    4. '8' → logprob: -10.475284576416016
    5. '1' → logprob: -11.725284576416016
    6. '   ' → logprob: -12.975284576416016
    7. '26' → logprob: -13.100284576416016
    8. '  ' → logprob: -13.412784576416016
    9. '```' → logprob: -13.850284576416016
    10. '11' → logprob: -14.225284576416016

Token 62: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00034273360506631434
    2. ' ' → logprob: -8.62534236907959
    3. '8' → logprob: -9.62534236907959
    4. 'len' → logprob: -11.00034236907959
    5. '9' → logprob: -11.12534236907959
    6. '1' → logprob: -11.12534236907959
    7. '```' → logprob: -11.62534236907959
    8. '7' → logprob: -11.75034236907959
    9. '11' → logprob: -12.56284236907959
    10. '0' → logprob: -12.62534236907959

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005004259757697582
    2. ':return' → logprob: -5.380004405975342
    3. ' :' → logprob: -8.005003929138184
    4. ':
' → logprob: -10.380003929138184
    5. '):' → logprob: -11.005003929138184
    6. ' or' → logprob: -14.380003929138184
    7. ' return' → logprob: -14.505003929138184
    8. ',' → logprob: -15.380003929138184
    9. ':**' → logprob: -15.630003929138184
    10. ')' → logprob: -15.755003929138184

Token 64: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6819718480110168
    2. ' return' → logprob: -1.181971788406372
    3. '       ' → logprob: -1.806971788406372
    4. ':return' → logprob: -5.056972026824951
    5. '    ' → logprob: -5.556972026824951
    6. 'return' → logprob: -5.806972026824951
    7. ' 
' → logprob: -5.806972026824951
    8. ':' → logprob: -6.056972026824951
    9. '    
' → logprob: -6.306972026824951
    10. '
' → logprob: -6.681972026824951

Token 65: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07774098217487335
    2. 'return' (adapté à ' return') → logprob: -3.4527409076690674
    3. ' print' → logprob: -3.7027409076690674
    4. '    ' → logprob: -4.9527411460876465
    5. '   ' → logprob: -5.2027411460876465
    6. '       ' → logprob: -5.9527411460876465
    7. ' ' → logprob: -6.5777411460876465
    8. 'print' → logprob: -6.9527411460876465
    9. ' raise' → logprob: -8.077740669250488
    10. ' 
' → logprob: -8.702740669250488

Token 66: ' ' (ID: 220)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3819381892681122
    2. 'None' → logprob: -1.2569382190704346
    3. ' ' → logprob: -4.0069379806518555
    4. ' -' → logprob: -4.7569379806518555
    5. '-' → logprob: -5.3819379806518555
    6. '0' → logprob: -7.5069379806518555
    7. 'False' → logprob: -7.8819379806518555
    8. ' False' → logprob: -9.006937980651855
    9. ' 

' → logprob: -9.256937980651855
    10. ' 
' → logprob: -9.506937980651855

Token 67: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029447855427861214
    2. '-' → logprob: -4.02944803237915
    3. 'False' → logprob: -5.02944803237915
    4. ' None' → logprob: -5.77944803237915
    5. '0' → logprob: -6.90444803237915
    6. '"' → logprob: -8.154447555541992
    7. ' -' → logprob: -9.404447555541992
    8. 'int' → logprob: -9.654447555541992
    9. 'float' → logprob: -10.279447555541992
    10. 'sys' → logprob: -10.654447555541992

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18565458059310913
    2. '<|end|>' → logprob: -2.060654640197754
    3. '\n' → logprob: -3.935654640197754
    4. '    
' → logprob: -4.810654640197754
    5. '   ' → logprob: -5.310654640197754
    6. '<|end|>' → logprob: -6.060654640197754
    7. ' 
' → logprob: -6.685654640197754
    8. '

' → logprob: -6.810654640197754
    9. '0' → logprob: -7.185654640197754
    10. ' ' → logprob: -7.435654640197754

Token 69: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2314518690109253
    2. '   ' → logprob: -1.3564518690109253
    3. '\n' → logprob: -1.4814518690109253
    4. '    
' → logprob: -2.106451988220215
    5. ' 
' → logprob: -2.731451988220215
    6. '  
' → logprob: -4.731451988220215
    7. '<|end|>' → logprob: -5.356451988220215
    8. '   
' → logprob: -5.606451988220215
    9. '\' → logprob: -5.606451988220215
    10. ')' → logprob: -5.856451988220215

Token 70: ' indices' (ID: 30378)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08442290872335434
    2. '<|end|>' → logprob: -3.3344228267669678
    3. ' 
' → logprob: -4.209423065185547
    4. ' ' → logprob: -4.834423065185547
    5. '    
' → logprob: -5.209423065185547
    6. '   ' → logprob: -5.209423065185547
    7. '\n' → logprob: -6.584423065185547
    8. ')' → logprob: -6.834423065185547
    9. '  
' → logprob: -6.834423065185547
    10. '\' → logprob: -6.959423065185547

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001783821964636445
    2. '=' → logprob: -6.376783847808838
    3. '_' → logprob: -10.00178337097168
    4. '_map' → logprob: -11.50178337097168
    5. 's' → logprob: -12.50178337097168
    6. '_to' → logprob: -12.62678337097168
    7. ')' → logprob: -12.62678337097168
    8. '_mapping' → logprob: -12.87678337097168
    9. ' ' → logprob: -13.37678337097168
    10. '_indices' → logprob: -13.87678337097168

Token 72: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.3705686926841736
    2. '{' → logprob: -1.2455687522888184
    3. ' list' → logprob: -4.495568752288818
    4. ' dict' → logprob: -5.745568752288818
    5. ' range' → logprob: -5.870568752288818
    6. 'list' → logprob: -6.245568752288818
    7. 'range' → logprob: -6.745568752288818
    8. 'dict' → logprob: -7.495568752288818
    9. '{}' → logprob: -7.870568752288818
    10. ' [' → logprob: -8.37056827545166

Token 73: 'c' (ID: 66)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0749383196234703
    2. 'letters' → logprob: -3.3249382972717285
    3. 'l' → logprob: -3.5749382972717285
    4. 'c' → logprob: -5.5749382972717285
    5. 'ltr' → logprob: -6.5749382972717285
    6. 'ch' → logprob: -6.9499382972717285
    7. ' letter' → logprob: -7.1999382972717285
    8. 'char' → logprob: -7.8249382972717285
    9. 'let' → logprob: -7.8249382972717285
    10. '}' → logprob: -8.699938774108887

Token 74: ':i' (ID: 34041)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008659131824970245
    2. ':i' → logprob: -4.758659362792969
    3. ':index' → logprob: -10.633659362792969
    4. ' :' → logprob: -11.508659362792969
    5. ':c' → logprob: -11.758659362792969
    6. ':k' → logprob: -14.008659362792969
    7. ':l' → logprob: -14.008659362792969
    8. ':n' → logprob: -14.883659362792969
    9. ':j' → logprob: -15.758659362792969
    10. ':v' → logprob: -16.75865936279297

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06149239465594292
    2. 'for' → logprob: -2.936492443084717
    3. '}' → logprob: -5.061492443084717
    4. ')' → logprob: -9.311491966247559
    5. ' ' → logprob: -9.436491966247559
    6. ' }' → logprob: -10.436491966247559
    7. '   ' → logprob: -10.686491966247559
    8. ',' → logprob: -11.686491966247559
    9. '  ' → logprob: -12.061491966247559
    10. '    ' → logprob: -12.561491966247559

Token 76: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.005343805067241192
    2. 'c' → logprob: -5.255343914031982
    3. ' letters' → logprob: -9.630343437194824
    4. ' range' → logprob: -11.255343437194824
    5. ' i' → logprob: -11.380343437194824
    6. 'range' → logprob: -12.255343437194824
    7. 'letters' → logprob: -12.630343437194824
    8. 'i' → logprob: -12.755343437194824
    9. ' ' → logprob: -13.130343437194824
    10. ' in' → logprob: -13.505343437194824

Token 77: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06904933601617813
    2. ',c' → logprob: -3.19404935836792
    3. 'in' → logprob: -4.31904935836792
    4. ' in' → logprob: -4.44404935836792
    5. 'c' → logprob: -8.194048881530762
    6. ' ,' → logprob: -8.319048881530762
    7. ',n' → logprob: -10.319048881530762
    8. ',in' → logprob: -10.694048881530762
    9. 'n' → logprob: -11.069048881530762
    10. ' c' → logprob: -11.444048881530762

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42891040444374084
    2. 'in' → logprob: -1.0539103746414185
    3. 'n' → logprob: -8.553910255432129
    4. 'import' → logprob: -12.428910255432129
    5. ',' → logprob: -13.053910255432129
    6. ' ' → logprob: -13.178910255432129
    7. 's' → logprob: -13.678910255432129
    8. 'In' → logprob: -13.678910255432129
    9. '<|end|>' → logprob: -13.928910255432129
    10. '	in' → logprob: -14.553910255432129

Token 79: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.20141665637493134
    2. 'enumer' → logprob: -1.7014166116714478
    3. 'en' → logprob: -13.201416969299316
    4. '```' → logprob: -13.951416969299316
    5. ' zip' → logprob: -15.951416969299316
    6. '(en' → logprob: -16.076416015625
    7. ' ' → logprob: -16.201416015625
    8. ' enumer' → logprob: -16.826416015625
    9. 'Enumer' → logprob: -16.951416015625
    10. 'zip' → logprob: -16.951416015625

Token 80: '(' (ID: 7)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.6328794956207275
    2. ' letters' → logprob: -0.7578794956207275
    3. '(' → logprob: -8.257879257202148
    4. '_letters' → logprob: -11.382879257202148
    5. ')' → logprob: -12.382879257202148
    6. 'Letters' → logprob: -14.007879257202148
    7. '```' → logprob: -14.007879257202148
    8. '}' → logprob: -14.132879257202148
    9. ' letras' → logprob: -14.507879257202148
    10. ' (' → logprob: -14.632879257202148

Token 81: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.007626864593476057
    2. ' letters' → logprob: -4.882627010345459
    3. ')' → logprob: -10.8826265335083
    4. '_letters' → logprob: -14.6326265335083
    5. '   ' → logprob: -15.2576265335083
    6. 'Letters' → logprob: -15.5076265335083
    7. 'letter' → logprob: -15.6326265335083
    8. '```' → logprob: -15.8826265335083
    9. ' ' → logprob: -16.382627487182617
    10. 'let' → logprob: -16.757627487182617

Token 82: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00042292833677493036
    2. '}' → logprob: -8.125422477722168
    3. ')' → logprob: -9.125422477722168
    4. '})' → logprob: -11.750422477722168
    5. ' )' → logprob: -13.125422477722168
    6. ')}
' → logprob: -13.125422477722168
    7. ')}
' → logprob: -13.125422477722168
    8. ');}' → logprob: -14.000422477722168
    9. '")}' → logprob: -14.250422477722168
    10. ')}

' → logprob: -14.375422477722168

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10818181186914444
    2. '    
' → logprob: -4.108181953430176
    3. 'def' → logprob: -4.483181953430176
    4. 'result' → logprob: -4.608181953430176
    5. ' 
' → logprob: -4.733181953430176
    6. '<|end|>' → logprob: -4.733181953430176
    7. ' ' → logprob: -4.983181953430176
    8. '
' → logprob: -4.983181953430176
    9. ' result' → logprob: -5.733181953430176
    10. ' def' → logprob: -5.858181953430176

Token 84: ' nums' (ID: 18117)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.6416484117507935
    2. 'result' → logprob: -1.7666484117507935
    3. 'def' → logprob: -1.8916484117507935
    4. 'max' → logprob: -2.266648292541504
    5. 'count' → logprob: -2.516648292541504
    6. ' total' → logprob: -2.766648292541504
    7. 'digits' → logprob: -3.141648292541504
    8. 'from' → logprob: -3.266648292541504
    9. 'factor' → logprob: -4.266648292541504
    10. ' max' → logprob: -4.391648292541504

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040987045504152775
    2. '=' → logprob: -5.504098892211914
    3. 's' → logprob: -12.754098892211914
    4. 'for' → logprob: -13.129098892211914
    5. '   ' → logprob: -13.254098892211914
    6. 'per' → logprob: -13.379098892211914
    7. '=[]' → logprob: -13.504098892211914
    8. ' ' → logprob: -13.754098892211914
    9. 'import' → logprob: -14.129098892211914
    10. '_' → logprob: -14.379098892211914

Token 86: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4492672383785248
    2. ' [' → logprob: -1.3242672681808472
    3. ' list' → logprob: -3.4492671489715576
    4. '[list' → logprob: -3.9492671489715576
    5. '[]' → logprob: -4.199267387390137
    6. 'list' → logprob: -4.324267387390137
    7. '[len' → logprob: -4.699267387390137
    8. 'range' → logprob: -5.949267387390137
    9. ' range' → logprob: -6.074267387390137
    10. '[-' → logprob: -7.324267387390137

Token 87: 'indices' (ID: 30992)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7778335213661194
    2. 'indices' → logprob: -0.7778335213661194
    3. '10' → logprob: -3.9028334617614746
    4. '-' → logprob: -4.027833461761475
    5. 'int' → logprob: -4.152833461761475
    6. '[' → logprob: -5.027833461761475
    7. ' indices' → logprob: -5.527833461761475
    8. 'digits' → logprob: -5.777833461761475
    9. '9' → logprob: -6.027833461761475
    10. '(indices' → logprob: -6.652833461761475

Token 88: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.06511558592319489
    2. '[word' → logprob: -3.4401156902313232
    3. '[ch' → logprob: -3.5651156902313232
    4. '[' → logprob: -6.190115451812744
    5. '(c' → logprob: -7.940115451812744
    6. '[w' → logprob: -8.565115928649902
    7. '(word' → logprob: -11.315115928649902
    8. 'c' → logprob: -11.440115928649902
    9. '[l' → logprob: -11.565115928649902
    10. '(ch' → logprob: -11.690115928649902

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000743399141356349
    2. ' ]' → logprob: -7.375743389129639
    3. ']]' → logprob: -9.375743865966797
    4. '[' → logprob: -12.000743865966797
    5. '   ' → logprob: -12.375743865966797
    6. '']' → logprob: -12.875743865966797
    7. ' for' → logprob: -13.000743865966797
    8. ']*' → logprob: -13.125743865966797
    9. ']+' → logprob: -13.375743865966797
    10. 'for' → logprob: -13.375743865966797

Token 90: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06289666891098022
    2. 'for' → logprob: -2.937896728515625
    3. ']' → logprob: -4.937896728515625
    4. ' ' → logprob: -7.312896728515625
    5. ' ]' → logprob: -10.187896728515625
    6. '   ' → logprob: -10.187896728515625
    7. ')' → logprob: -10.562896728515625
    8. '	for' → logprob: -11.437896728515625
    9. '    ' → logprob: -11.687896728515625
    10. '  ' → logprob: -12.062896728515625

Token 91: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5734927654266357
    2. ' word' → logprob: -1.5734927654266357
    3. 'word' → logprob: -1.9484927654266357
    4. ' c' → logprob: -2.4484927654266357
    5. ' w' → logprob: -9.073493003845215
    6. 'w' → logprob: -9.698493003845215
    7. ' ' → logprob: -10.698493003845215
    8. 'char' → logprob: -12.448493003845215
    9. ' letter' → logprob: -13.448493003845215
    10. '	word' → logprob: -13.448493003845215

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010026630945503712
    2. ' word' → logprob: -4.760026454925537
    3. 'word' → logprob: -7.010026454925537
    4. 'in' → logprob: -7.635026454925537
    5. ' ' → logprob: -10.885026931762695
    6. 's' → logprob: -13.385026931762695
    7. '(word' → logprob: -14.385026931762695
    8. '[word' → logprob: -14.635026931762695
    9. 'w' → logprob: -14.885026931762695
    10. ' w' → logprob: -14.885026931762695

Token 93: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.2584960460662842
    2. ' word' → logprob: -1.5084960460662842
    3. 'w' → logprob: -5.258496284484863
    4. ' w' → logprob: -6.633496284484863
    5. ' ' → logprob: -12.383496284484863
    6. '	word' → logprob: -12.508496284484863
    7. '
' → logprob: -12.883496284484863
    8. 'list' → logprob: -12.883496284484863
    9. 'wo' → logprob: -13.008496284484863
    10. 'row' → logprob: -13.508496284484863

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030030198395252228
    2. ' ]' → logprob: -6.253003120422363
    3. '   ' → logprob: -7.378003120422363
    4. ']]' → logprob: -7.878003120422363
    5. '    ' → logprob: -11.128003120422363
    6. ' if' → logprob: -11.253003120422363
    7. '       ' → logprob: -11.378003120422363
    8. '  ' → logprob: -11.878003120422363
    9. ' ]]' → logprob: -11.878003120422363
    10. ']]]' → logprob: -12.753003120422363

Token 95: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01933043822646141
    2. '   ' → logprob: -4.5193305015563965
    3. 'for' → logprob: -5.5193305015563965
    4. '    ' → logprob: -6.2693305015563965
    5. ']' → logprob: -6.6443305015563965
    6. '       ' → logprob: -8.144330024719238
    7. ' ' → logprob: -8.394330024719238
    8. '        ' → logprob: -8.894330024719238
    9. ' ]' → logprob: -9.269330024719238
    10. ' in' → logprob: -9.519330024719238

Token 96: ' word' (ID: 2195)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.25198933482170105
    2. 'words' → logprob: -1.5019893646240234
    3. 'word' → logprob: -10.626989364624023
    4. '(words' → logprob: -11.501989364624023
    5. ' word' → logprob: -12.001989364624023
    6. '   ' → logprob: -12.251989364624023
    7. ' ' → logprob: -12.501989364624023
    8. '_words' → logprob: -12.751989364624023
    9. '.words' → logprob: -12.751989364624023
    10. '    ' → logprob: -13.626989364624023

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005421938840299845
    2. 'in' → logprob: -5.255422115325928
    3. 's' → logprob: -8.63042163848877
    4. 'words' → logprob: -12.38042163848877
    5. '   ' → logprob: -12.88042163848877
    6. ']' → logprob: -13.88042163848877
    7. ' ' → logprob: -13.88042163848877
    8. ' words' → logprob: -14.88042163848877
    9. '    ' → logprob: -15.88042163848877
    10. '  ' → logprob: -16.255422592163086

Token 98: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.14300945401191711
    2. ' words' → logprob: -2.0180094242095947
    3. '   ' → logprob: -8.518009185791016
    4. '(words' → logprob: -9.518009185791016
    5. ']' → logprob: -11.393009185791016
    6. ' ' → logprob: -11.518009185791016
    7. '.words' → logprob: -11.768009185791016
    8. ')' → logprob: -12.268009185791016
    9. '```' → logprob: -12.643009185791016
    10. '       ' → logprob: -12.705509185791016

Token 99: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006583464564755559
    2. ']
' → logprob: -8.00065803527832
    3. ' ]' → logprob: -8.75065803527832
    4. '   ' → logprob: -8.87565803527832
    5. ']
' → logprob: -11.25065803527832
    6. ']

' → logprob: -12.00065803527832
    7. ')' → logprob: -12.75065803527832
    8. ')]' → logprob: -13.75065803527832
    9. ']

' → logprob: -14.75065803527832
    10. 'def' → logprob: -15.25065803527832

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02482546493411064
    2. 'def' → logprob: -4.524825572967529
    3. '
' → logprob: -5.649825572967529
    4. 'result' → logprob: -6.274825572967529
    5. ' def' → logprob: -6.399825572967529
    6. '    
' → logprob: -6.649825572967529
    7. '```' → logprob: -6.899825572967529
    8. 'count' → logprob: -7.149825572967529
    9. ' result' → logprob: -7.399825572967529
    10. 'from' → logprob: -8.149825096130371

Token 101: ' count' (ID: 3605)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7191283106803894
    2. 'result' → logprob: -1.8441283702850342
    3. 'max' → logprob: -2.594128370285034
    4. 'count' (adapté à ' count') → logprob: -2.719128370285034
    5. '   ' → logprob: -2.844128370285034
    6. 'res' → logprob: -2.969128370285034
    7. 'from' → logprob: -3.344128370285034
    8. 'for' → logprob: -3.719128370285034
    9. 'total' → logprob: -4.594128131866455
    10. 'answer' → logprob: -4.969128131866455

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004691661335527897
    2. '=' → logprob: -5.3796916007995605
    3. ' ' → logprob: -10.254692077636719
    4. '_' → logprob: -11.629692077636719
    5. '  ' → logprob: -11.754692077636719
    6. '(' → logprob: -11.879692077636719
    7. '   ' → logprob: -12.129692077636719
    8. ')' → logprob: -13.879692077636719
    9. ' =)' → logprob: -14.004692077636719
    10. ',' → logprob: -14.254692077636719

Token 103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038044705986976624
    2. ' ' → logprob: -3.2880446910858154
    3. ' [' → logprob: -13.788044929504395
    4. '   ' → logprob: -14.163044929504395
    5. '[' → logprob: -14.663044929504395
    6. ' ' → logprob: -15.725544929504395
    7. '  ' → logprob: -15.788044929504395
    8. '1' → logprob: -15.850544929504395
    9. 'sum' → logprob: -16.725543975830078
    10. 'int' → logprob: -16.788043975830078

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020067949662916362
    2. '[' → logprob: -9.125200271606445
    3. ' ' → logprob: -9.375200271606445
    4. '1' → logprob: -13.000200271606445
    5. ' [' → logprob: -13.750200271606445
    6. '   ' → logprob: -14.437700271606445
    7. 'sum' → logprob: -14.750200271606445
    8. 'int' → logprob: -15.000200271606445
    9. '100' → logprob: -15.000200271606445
    10. 'def' → logprob: -15.312700271606445

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1281980276107788
    2. '<|end|>' → logprob: -1.3781980276107788
    3. ' ' → logprob: -2.1281981468200684
    4. '    ' → logprob: -2.3781981468200684
    5. ' for' → logprob: -2.7531981468200684
    6. ' 
' → logprob: -2.8781981468200684
    7. 'for' → logprob: -3.7531981468200684
    8. '
' → logprob: -3.7531981468200684
    9. '    
' → logprob: -4.128198146820068
    10. '  ' → logprob: -4.878198146820068

Token 106: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7813495397567749
    2. '    ' → logprob: -1.781349539756775
    3. '<|end|>' → logprob: -2.2813496589660645
    4. ' 
' → logprob: -2.4063496589660645
    5. '   ' → logprob: -2.5313496589660645
    6. ' for' → logprob: -3.0313496589660645
    7. '     
' → logprob: -3.7813496589660645
    8. 'for' → logprob: -4.4063496589660645
    9. '    
' → logprob: -5.1563496589660645
    10. '
' → logprob: -5.7813496589660645

Token 107: ' digits' (ID: 37806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2175050675868988
    2. '   ' → logprob: -2.7175049781799316
    3. ' for' → logprob: -2.7175049781799316
    4. 'def' → logprob: -2.9675049781799316
    5. 'digits' (adapté à ' digits') → logprob: -4.842504978179932
    6. ' def' → logprob: -6.092504978179932
    7. ' digits' → logprob: -7.967504978179932
    8. 'perm' → logprob: -8.09250545501709
    9. 'from' → logprob: -8.34250545501709
    10. 'used' → logprob: -8.84250545501709

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019457289949059486
    2. '=' → logprob: -4.0194573402404785
    3. ' permutations' → logprob: -8.01945686340332
    4. '_per' → logprob: -8.14445686340332
    5. ' ' → logprob: -8.51945686340332
    6. '   ' → logprob: -8.89445686340332
    7. '_used' → logprob: -9.39445686340332
    8. 'per' → logprob: -9.76945686340332
    9. '_range' → logprob: -10.89445686340332
    10. '    ' → logprob: -11.01945686340332

Token 109: ' tuple' (ID: 31311)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6175469756126404
    2. '[' → logprob: -0.9925469756126404
    3. ' list' → logprob: -2.492547035217285
    4. 'list' → logprob: -5.367547035217285
    5. '[-' → logprob: -6.742547035217285
    6. '[list' → logprob: -7.367547035217285
    7. ' [-' → logprob: -7.742547035217285
    8. ' range' → logprob: -7.992547035217285
    9. 'range' → logprob: -9.242547035217285
    10. '[]' → logprob: -11.117547035217285

Token 110: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -8.08944896562025e-05
    2. 'range' → logprob: -9.750081062316895
    3. '(' → logprob: -11.125081062316895
    4. '([' → logprob: -12.125081062316895
    5. '(i' → logprob: -13.375081062316895
    6. '()' → logprob: -14.750081062316895
    7. ' range' → logprob: -15.875081062316895
    8. '	range' → logprob: -16.375080108642578
    9. '((' → logprob: -16.750080108642578
    10. '(sorted' → logprob: -17.250080108642578

Token 111: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07928818464279175
    2. '(' → logprob: -2.5792882442474365
    3. ' ' → logprob: -7.954288005828857
    4. '9' → logprob: -11.079288482666016
    5. ')' → logprob: -11.204288482666016
    6. '0' → logprob: -11.704288482666016
    7. '{' → logprob: -13.204288482666016
    8. '   ' → logprob: -13.329288482666016
    9. ' (' → logprob: -13.329288482666016
    10. '=' → logprob: -13.829288482666016

Token 112: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.125008583068848
    3. '9' → logprob: -13.375008583068848
    4. '0' → logprob: -13.500008583068848
    5. '1' → logprob: -15.500008583068848
    6. ')' → logprob: -16.625009536743164
    7. '   ' → logprob: -17.125009536743164
    8. '(' → logprob: -18.000009536743164
    9. '```' → logprob: -18.125009536743164
    10. '
' → logprob: -18.375009536743164

Token 113: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014208877459168434
    2. ')' → logprob: -4.264208793640137
    3. ')))' → logprob: -11.014208793640137
    4. '))
' → logprob: -11.389208793640137
    5. ' ))' → logprob: -11.389208793640137
    6. '),' → logprob: -13.264208793640137
    7. '):' → logprob: -14.264208793640137
    8. ')
' → logprob: -14.514208793640137
    9. '));' → logprob: -14.639208793640137
    10. '))

' → logprob: -14.764208793640137

Token 114: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4319543242454529
    2. '   ' → logprob: -1.4319543838500977
    3. 'for' → logprob: -2.6819543838500977
    4. '<|end|>' → logprob: -3.4319543838500977
    5. ' 
' → logprob: -5.806954383850098
    6. '
' → logprob: -6.306954383850098
    7. ' ' → logprob: -6.306954383850098
    8. '  
' → logprob: -7.181954383850098
    9. '    
' → logprob: -7.181954383850098
    10. '```' → logprob: -7.431954383850098

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15018251538276672
    2. 'for' (adapté à ' for') → logprob: -2.0251824855804443
    3. '   ' → logprob: -4.900182723999023
    4. ' ' → logprob: -12.025182723999023
    5. '```' → logprob: -12.025182723999023
    6. '    
' → logprob: -12.150182723999023
    7. '
' → logprob: -12.525182723999023
    8. ' 
' → logprob: -12.900182723999023
    9. '	for' → logprob: -12.900182723999023
    10. 'def' → logprob: -13.650182723999023

Token 116: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.549911379814148
    2. ' perm' → logprob: -0.924911379814148
    3. ' p' → logprob: -4.0499114990234375
    4. 'p' → logprob: -4.7999114990234375
    5. '_perm' → logprob: -8.049911499023438
    6. 'per' → logprob: -9.549911499023438
    7. '   ' → logprob: -9.549911499023438
    8. ' permutation' → logprob: -9.674911499023438
    9. ' perms' → logprob: -9.799911499023438
    10. ' digits' → logprob: -10.299911499023438

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025203691329807043
    2. 'in' → logprob: -6.002520561218262
    3. ' ' → logprob: -10.627520561218262
    4. 'ination' → logprob: -11.877520561218262
    5. 's' → logprob: -12.627520561218262
    6. '  ' → logprob: -12.877520561218262
    7. ',' → logprob: -13.627520561218262
    8. 'utation' → logprob: -14.002520561218262
    9. 'ation' → logprob: -14.127520561218262
    10. 'uation' → logprob: -14.252520561218262

Token 118: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.006727445870637894
    2. 'per' → logprob: -5.00672721862793
    3. '(per' → logprob: -11.63172721862793
    4. '	per' → logprob: -13.75672721862793
    5. '.per' → logprob: -14.63172721862793
    6. ' perm' → logprob: -14.63172721862793
    7. 'perm' → logprob: -14.88172721862793
    8. '_per' → logprob: -15.00672721862793
    9. ' ' → logprob: -15.50672721862793
    10. '   ' → logprob: -16.25672721862793

Token 119: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.006928731221705675
    2. ' (' → logprob: -5.00692892074585
    3. '(' → logprob: -8.881928443908691
    4. ' digits' → logprob: -10.256928443908691
    5. 'digits' → logprob: -10.506928443908691
    6. ')(' → logprob: -12.256928443908691
    7. ')' → logprob: -12.506928443908691
    8. ' ' → logprob: -14.256928443908691
    9. '```' → logprob: -14.256928443908691
    10. '   ' → logprob: -14.506928443908691

Token 120: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0023787387181073427
    2. 'digits' → logprob: -6.127378940582275
    3. 'ig' → logprob: -9.752378463745117
    4. 'igts' → logprob: -9.877378463745117
    5. ')' → logprob: -10.252378463745117
    6. 'igit' → logprob: -11.127378463745117
    7. 'its' → logprob: -11.627378463745117
    8. ' digits' → logprob: -12.002378463745117
    9. 'd' → logprob: -12.627378463745117
    10. 'g' → logprob: -12.877378463745117

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014756857417523861
    2. ',n' → logprob: -4.264756679534912
    3. ' ,' → logprob: -7.514756679534912
    4. 'n' → logprob: -10.13975715637207
    5. '[:' → logprob: -12.88975715637207
    6. ' n' → logprob: -13.01475715637207
    7. '(n' → logprob: -13.63975715637207
    8. '   ' → logprob: -14.01475715637207
    9. ')' → logprob: -14.01475715637207
    10. '[n' → logprob: -15.26475715637207

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014165272004902363
    2. ' n' → logprob: -4.26416540145874
    3. '	n' → logprob: -14.139164924621582
    4. ')n' → logprob: -14.764164924621582
    5. '10' → logprob: -15.389164924621582
    6. '   ' → logprob: -15.514164924621582
    7. ')' → logprob: -15.639164924621582
    8. ' ' → logprob: -15.889164924621582
    9. 'len' → logprob: -17.3891658782959
    10. '(n' → logprob: -17.6391658782959

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010342398309148848
    2. '):
' → logprob: -9.625102996826172
    3. ')' → logprob: -10.500102996826172
    4. ':' → logprob: -11.750102996826172
    5. ' ):' → logprob: -13.625102996826172
    6. '   ' → logprob: -15.000102996826172
    7. '):

' → logprob: -15.875102996826172
    8. '():' → logprob: -16.875102996826172
    9. '):
' → logprob: -17.000102996826172
    10. '}:' → logprob: -17.375102996826172

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024345656856894493
    2. '<|end|>' → logprob: -4.774345874786377
    3. ':' → logprob: -5.149345874786377
    4. '        
' → logprob: -5.399345874786377
    5. '        ' → logprob: -6.649345874786377
    6. '    ' → logprob: -6.774345874786377
    7. '```' → logprob: -7.899345874786377
    8. ' :' → logprob: -8.149345397949219
    9. '   ' → logprob: -8.274345397949219
    10. ':
' → logprob: -8.274345397949219

Token 125: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19037467241287231
    2. ' if' → logprob: -2.4403746128082275
    3. '           ' → logprob: -3.6903746128082275
    4. '        
' → logprob: -3.8153746128082275
    5. '        ' → logprob: -4.940374851226807
    6. '   ' → logprob: -5.315374851226807
    7. '    ' → logprob: -5.440374851226807
    8. ' for' → logprob: -5.565374851226807
    9. ' valid' → logprob: -5.565374851226807
    10. '
' → logprob: -5.815374851226807

Token 126: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.016274238005280495
    2. ' any' → logprob: -4.141274452209473
    3. 'all' → logprob: -8.766274452209473
    4. '   ' → logprob: -10.391274452209473
    5. '(any' → logprob: -11.141274452209473
    6. '0' → logprob: -11.391274452209473
    7. ' ' → logprob: -11.641274452209473
    8. 'perm' → logprob: -11.766274452209473
    9. '    ' → logprob: -13.516274452209473
    10. 'not' → logprob: -13.641274452209473

Token 127: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8630878329277039
    2. 'perm' → logprob: -1.3630878925323486
    3. '[' → logprob: -1.7380878925323486
    4. 'digits' → logprob: -2.3630878925323486
    5. 'indices' → logprob: -3.3630878925323486
    6. '(indices' → logprob: -5.3630876541137695
    7. '(d' → logprob: -5.9880876541137695
    8. 'd' → logprob: -6.1130876541137695
    9. 'nums' → logprob: -6.3630876541137695
    10. ' perm' → logprob: -6.9880876541137695

Token 128: 'perm' (ID: 34794)
  Prédit: 'perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.0036246657837182283
    2. ' perm' → logprob: -5.628624439239502
    3. '   ' → logprob: -11.37862491607666
    4. ' ' → logprob: -13.00362491607666
    5. 'per' → logprob: -13.12862491607666
    6. '
' → logprob: -13.50362491607666
    7. '           ' → logprob: -13.75362491607666
    8. '[' → logprob: -14.12862491607666
    9. 'not' → logprob: -14.12862491607666
    10. '  ' → logprob: -14.25362491607666

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001609481987543404
    2. '[idx' → logprob: -7.1266093254089355
    3. 'indices' → logprob: -7.8766093254089355
    4. '[i' → logprob: -8.751609802246094
    5. '[index' → logprob: -9.501609802246094
    6. '(indices' → logprob: -9.626609802246094
    7. '"indices' → logprob: -9.876609802246094
    8. '[ind' → logprob: -10.751609802246094
    9. '
' → logprob: -11.751609802246094
    10. '[c' → logprob: -12.126609802246094

Token 130: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -9.305326966568828e-05
    2. ' indices' → logprob: -9.750093460083008
    3. '(indices' → logprob: -11.625093460083008
    4. '
' → logprob: -11.875093460083008
    5. '[' → logprob: -12.250093460083008
    6. 'i' → logprob: -12.375093460083008
    7. 'indexes' → logprob: -12.500093460083008
    8. '"indices' → logprob: -13.375093460083008
    9. ']' → logprob: -13.875093460083008
    10. 'idx' → logprob: -14.000093460083008

Token 131: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.07107636332511902
    2. '[first' → logprob: -2.6960763931274414
    3. '[' → logprob: -7.696076393127441
    4. 'c' → logprob: -8.196076393127441
    5. '[word' → logprob: -8.446076393127441
    6. ']' → logprob: -10.071076393127441
    7. 'first' → logprob: -10.321076393127441
    8. '(c' → logprob: -10.446076393127441
    9. '[ch' → logprob: -10.571076393127441
    10. '][' → logprob: -10.821076393127441

Token 132: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0005518406978808343
    2. 'first' → logprob: -8.1255521774292
    3. ']' → logprob: -9.1255521774292
    4. '[' → logprob: -10.2505521774292
    5. '(first' → logprob: -11.2505521774292
    6. '[first' → logprob: -11.2505521774292
    7. '']]' → logprob: -11.5005521774292
    8. 'First' → logprob: -11.5005521774292
    9. ')]' → logprob: -11.6255521774292
    10. '_first' → logprob: -11.6255521774292

Token 133: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03690782189369202
    2. ' ==' → logprob: -3.911907911300659
    3. ']==' → logprob: -4.28690767288208
    4. ']' → logprob: -6.66190767288208
    5. '[' → logprob: -6.91190767288208
    6. '0' → logprob: -9.661908149719238
    7. '```' → logprob: -9.911908149719238
    8. ')==' → logprob: -10.411908149719238
    9. '=' → logprob: -11.036908149719238
    10. '()==' → logprob: -11.536908149719238

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '۰' → logprob: -16.375158309936523
    4. 'zero' → logprob: -17.375158309936523
    5. '   ' → logprob: -17.687658309936523
    6. '
' → logprob: -18.000158309936523
    7. '  ' → logprob: -18.062658309936523
    8. '০' → logprob: -18.062658309936523
    9. '٠' → logprob: -18.500158309936523
    10. '０' → logprob: -18.625158309936523

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -17.250003814697266
    4. '
' → logprob: -18.000003814697266
    5. 'zero' → logprob: -18.000003814697266
    6. '০' → logprob: -19.125003814697266
    7. '０' → logprob: -19.250003814697266
    8. '٠' → logprob: -19.625003814697266
    9. '```' → logprob: -19.687503814697266
    10. '०' → logprob: -19.937503814697266

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2262076735496521
    2. ' and' → logprob: -1.7262077331542969
    3. 'for' → logprob: -3.976207733154297
    4. 'and' → logprob: -5.476207733154297
    5. ' ' → logprob: -6.726207733154297
    6. '<|end|>' → logprob: -8.726207733154297
    7. ')' → logprob: -9.476207733154297
    8. ' or' → logprob: -10.476207733154297
    9. '  ' → logprob: -11.226207733154297
    10. ' if' → logprob: -11.351207733154297

Token 137: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03485594317317009
    2. ' c' → logprob: -3.409855842590332
    3. 'first' → logprob: -6.909855842590332
    4. ' first' → logprob: -8.784855842590332
    5. ' ' → logprob: -10.909855842590332
    6. '	c' → logprob: -11.409855842590332
    7. ')c' → logprob: -11.909855842590332
    8. '
' → logprob: -12.534855842590332
    9. '   ' → logprob: -13.159855842590332
    10. '

' → logprob: -13.534855842590332

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03473585471510887
    2. 'in' → logprob: -3.409735918045044
    3. 'c' → logprob: -7.159735679626465
    4. ' c' → logprob: -8.284735679626465
    5. ' ' → logprob: -10.159735679626465
    6. '
' → logprob: -12.034735679626465
    7. ')' → logprob: -12.784735679626465
    8. '  ' → logprob: -12.784735679626465
    9. ',c' → logprob: -13.534735679626465
    10. 'In' → logprob: -13.784735679626465

Token 139: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.014170562848448753
    2. ' first' → logprob: -4.2641706466674805
    3. '[first' → logprob: -12.63917064666748
    4. '	first' → logprob: -13.26417064666748
    5. '
' → logprob: -14.51417064666748
    6. '   ' → logprob: -15.01417064666748
    7. ' ' → logprob: -15.26417064666748
    8. '(first' → logprob: -15.26417064666748
    9. 'First' → logprob: -15.38917064666748
    10. ':first' → logprob: -16.014169692993164

Token 140: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -8.180258191714529e-06
    2. 'letters' → logprob: -12.375008583068848
    3. '_' → logprob: -12.875008583068848
    4. '_letter' → logprob: -14.375008583068848
    5. '```' → logprob: -15.375008583068848
    6. 'Letters' → logprob: -15.375008583068848
    7. '_le' → logprob: -16.75000762939453
    8. '_indices' → logprob: -17.12500762939453
    9. '_tokens' → logprob: -17.25000762939453
    10. ' _' → logprob: -17.37500762939453

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23510657250881195
    2. '):
' → logprob: -1.6101065874099731
    3. ')' → logprob: -4.985106468200684
    4. '       ' → logprob: -5.985106468200684
    5. '           ' → logprob: -8.610106468200684
    6. ' ):' → logprob: -10.610106468200684
    7. ':' → logprob: -10.860106468200684
    8. '):
' → logprob: -10.985106468200684
    9. '):

' → logprob: -11.485106468200684
    10. ')==' → logprob: -11.610106468200684

Token 142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01475744228810072
    2. ' continue' → logprob: -4.3897576332092285
    3. 'continue' → logprob: -6.1397576332092285
    4. ' continues' → logprob: -10.26475715637207
    5. ' continued' → logprob: -11.38975715637207
    6. 'Continue' → logprob: -11.63975715637207
    7. ':
' → logprob: -12.13975715637207
    8. '_continue' → logprob: -12.13975715637207
    9. '               ' → logprob: -12.51475715637207
    10. '
' → logprob: -12.88975715637207

Token 143: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13389833271503448
    2. ' continue' → logprob: -2.5088982582092285
    3. 'continue' (adapté à ' continue') → logprob: -3.1338982582092285
    4. '               ' → logprob: -7.8838982582092285
    5. '
' → logprob: -11.133898735046387
    6. '       ' → logprob: -12.133898735046387
    7. '_continue' → logprob: -12.133898735046387
    8. '	continue' → logprob: -12.883898735046387
    9. '   ' → logprob: -13.008898735046387
    10. 'Continue' → logprob: -13.133898735046387

Token 144: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001648399163968861
    2. '<|end|>' → logprob: -7.251648426055908
    3. ')' → logprob: -7.751648426055908
    4. '        
' → logprob: -8.25164794921875
    5. ':' → logprob: -9.87664794921875
    6. ',' → logprob: -10.37664794921875
    7. '        ' → logprob: -10.75164794921875
    8. '           ' → logprob: -10.87664794921875
    9. '   ' → logprob: -11.12664794921875
    10. ':
' → logprob: -11.37664794921875

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006035494152456522
    2. '<|end|>' → logprob: -8.375603675842285
    3. '   ' → logprob: -9.125603675842285
    4. '
' → logprob: -9.500603675842285
    5. '        
' → logprob: -9.625603675842285
    6. ')' → logprob: -9.750603675842285
    7. '           ' → logprob: -11.375603675842285
    8. '[' → logprob: -12.000603675842285
    9. '        ' → logprob: -12.125603675842285
    10. '      ' → logprob: -12.375603675842285

Token 146: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03292469307780266
    2. ' total' → logprob: -4.407924652099609
    3. ' sum' → logprob: -5.032924652099609
    4. 'sum' → logprob: -5.407924652099609
    5. 'total' (adapté à ' total') → logprob: -5.907924652099609
    6. '   ' → logprob: -6.532924652099609
    7. ' for' → logprob: -7.532924652099609
    8. ' value' → logprob: -7.657924652099609
    9. ' s' → logprob: -7.782924652099609
    10. 'value' → logprob: -8.03292465209961

Token 147: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.054497189819812775
    2. ' =' → logprob: -3.304497241973877
    3. '+=' → logprob: -4.679497241973877
    4. '=' → logprob: -5.054497241973877
    5. '+' → logprob: -7.679497241973877
    6. ' +' → logprob: -9.304496765136719
    7. ')' → logprob: -9.679496765136719
    8. '   ' → logprob: -11.804496765136719
    9. 's' → logprob: -12.054496765136719
    10. '_' → logprob: -12.054496765136719

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03228200599551201
    2. 'sum' → logprob: -3.9072821140289307
    3. ' sum' → logprob: -4.782281875610352
    4. ' ' → logprob: -5.782281875610352
    5. '   ' → logprob: -8.532281875610352
    6. '       ' → logprob: -12.657281875610352
    7. '  ' → logprob: -12.782281875610352
    8. '    ' → logprob: -13.469781875610352
    9. '(sum' → logprob: -13.657281875610352
    10. '	sum' → logprob: -14.094781875610352

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03814798593521118
    2. 'sum' → logprob: -3.2881479263305664
    3. '[' → logprob: -10.163147926330566
    4. ' sum' → logprob: -10.288147926330566
    5. ' ' → logprob: -10.788147926330566
    6. '   ' → logprob: -11.663147926330566
    7. '1' → logprob: -14.413147926330566
    8. '
' → logprob: -14.788147926330566
    9. '(sum' → logprob: -14.913147926330566
    10. '[]' → logprob: -15.163147926330566

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32745108008384705
    2. '+' → logprob: -2.45245099067688
    3. '<|end|>' → logprob: -2.45245099067688
    4. ' for' → logprob: -3.32745099067688
    5. ' +' → logprob: -4.202451229095459
    6. '=' → logprob: -4.202451229095459
    7. 'for' → logprob: -4.327451229095459
    8. '        ' → logprob: -4.827451229095459
    9. ',' → logprob: -5.202451229095459
    10. '<|end|>' → logprob: -5.952451229095459

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019254541024565697
    2. ' for' → logprob: -4.644254684448242
    3. '+' → logprob: -6.144254684448242
    4. '<|end|>' → logprob: -6.144254684448242
    5. 'for' → logprob: -6.394254684448242
    6. '        ' → logprob: -6.394254684448242
    7. ' +' → logprob: -7.769254684448242
    8. '   ' → logprob: -8.269254684448242
    9. '        
' → logprob: -8.769254684448242
    10. '
' → logprob: -8.894254684448242

Token 152: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4764918386936188
    2. ' for' → logprob: -0.9764918088912964
    3. '   ' → logprob: -6.226491928100586
    4. '       ' → logprob: -7.851491928100586
    5. ' i' → logprob: -11.226491928100586
    6. '    ' → logprob: -11.726491928100586
    7. 'i' → logprob: -12.226491928100586
    8. ' ' → logprob: -12.851491928100586
    9. '           ' → logprob: -12.976491928100586
    10. '```' → logprob: -13.101491928100586

Token 153: ' i' (ID: 575)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.5193782448768616
    2. 'word' → logprob: -1.0193781852722168
    3. 'num' → logprob: -3.394378185272217
    4. ' num' → logprob: -5.394378185272217
    5. 'nums' → logprob: -5.769378185272217
    6. 'i' → logprob: -7.019378185272217
    7. ' i' → logprob: -7.144378185272217
    8. ' nums' → logprob: -7.769378185272217
    9. 'perm' → logprob: -8.269378662109375
    10. ' perm' → logprob: -8.644378662109375

Token 154: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4423752427101135
    2. ' in' → logprob: -1.3173751831054688
    3. ' ,' → logprob: -2.8173751831054688
    4. 'in' → logprob: -3.9423751831054688
    5. ',num' → logprob: -5.817375183105469
    6. '   ' → logprob: -5.942375183105469
    7. '       ' → logprob: -6.692375183105469
    8. ',len' → logprob: -7.067375183105469
    9. 'word' → logprob: -8.192375183105469
    10. ',n' → logprob: -8.192375183105469

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0298176072537899
    2. ' range' → logprob: -3.904817581176758
    3. 'nums' → logprob: -4.779817581176758
    4. 'words' → logprob: -7.154817581176758
    5. ' nums' → logprob: -10.154817581176758
    6. 'num' → logprob: -12.029817581176758
    7. 'len' → logprob: -12.904817581176758
    8. ' words' → logprob: -13.404817581176758
    9. 'numbers' → logprob: -13.779817581176758
    10. 'digits' → logprob: -13.904817581176758

Token 156: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2067381888628006
    2. ' len' → logprob: -2.206738233566284
    3. '(len' → logprob: -2.581738233566284
    4. '   ' → logprob: -6.956737995147705
    5. '       ' → logprob: -10.581738471984863
    6. ',len' → logprob: -10.831738471984863
    7. '=len' → logprob: -11.456738471984863
    8. ' ' → logprob: -11.706738471984863
    9. '	len' → logprob: -11.706738471984863
    10. '(' → logprob: -11.956738471984863

Token 157: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.12722395360469818
    2. '(nums' → logprob: -2.1272239685058594
    3. 'words' → logprob: -9.37722396850586
    4. '(numbers' → logprob: -9.37722396850586
    5. 'nums' → logprob: -10.37722396850586
    6. '(word' → logprob: -10.75222396850586
    7. '(' → logprob: -10.87722396850586
    8. '(per' → logprob: -11.50222396850586
    9. '(num' → logprob: -11.75222396850586
    10. ' words' → logprob: -12.12722396850586

Token 158: ')-' (ID: 14080)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01089076790958643
    2. '):' → logprob: -4.635890960693359
    3. ')):
' → logprob: -7.135890960693359
    4. '       ' → logprob: -8.38589096069336
    5. '):
' → logprob: -10.51089096069336
    6. ')' → logprob: -11.13589096069336
    7. ')):' → logprob: -11.26089096069336
    8. ' ):
' → logprob: -11.38589096069336
    9. '):

' → logprob: -11.38589096069336
    10. '   ' → logprob: -11.88589096069336

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004972951021045446
    2. ' ' → logprob: -5.3799729347229
    3. ')' → logprob: -8.504973411560059
    4. 'len' → logprob: -9.879973411560059
    5. '   ' → logprob: -11.004973411560059
    6. '):
' → logprob: -11.129973411560059
    7. '0' → logprob: -11.504973411560059
    8. ' len' → logprob: -11.504973411560059
    9. ',' → logprob: -11.754973411560059
    10. '2' → logprob: -11.879973411560059

Token 160: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030413880944252014
    2. '):' → logprob: -3.655413866043091
    3. ',' → logprob: -6.65541410446167
    4. '       ' → logprob: -6.65541410446167
    5. '   ' → logprob: -7.53041410446167
    6. ' ):
' → logprob: -8.280413627624512
    7. '           ' → logprob: -8.530413627624512
    8. '-' → logprob: -8.655413627624512
    9. '):
' → logprob: -9.530413627624512
    10. ' -' → logprob: -9.780413627624512

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40130630135536194
    2. 'total' → logprob: -1.7763062715530396
    3. ' total' → logprob: -2.151306390762329
    4. '       ' → logprob: -4.15130615234375
    5. '        ' → logprob: -4.27630615234375
    6. '(total' → logprob: -6.02630615234375
    7. '0' → logprob: -6.27630615234375
    8. '+' → logprob: -6.27630615234375
    9. '            ' → logprob: -6.27630615234375
    10. ')' → logprob: -6.65130615234375

Token 162: ' val' (ID: 1459)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.48064905405044556
    2. 'total' → logprob: -0.9806490540504456
    3. '       ' → logprob: -5.730648994445801
    4. '           ' → logprob: -7.230648994445801
    5. '   ' → logprob: -7.480648994445801
    6. '(total' → logprob: -7.855648994445801
    7. ' if' → logprob: -8.3556489944458
    8. '        ' → logprob: -8.6056489944458
    9. ' for' → logprob: -8.7306489944458
    10. ' ' → logprob: -8.8556489944458

Token 163: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6994757056236267
    2. '+=' → logprob: -1.4494757652282715
    3. ' =' → logprob: -2.0744757652282715
    4. '=' → logprob: -2.0744757652282715
    5. '   ' → logprob: -4.6994757652282715
    6. '       ' → logprob: -5.5744757652282715
    7. 's' → logprob: -5.6994757652282715
    8. ' ' → logprob: -8.824475288391113
    9. '+' → logprob: -8.949475288391113
    10. '  ' → logprob: -9.324475288391113

Token 164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00352084101177752
    2. 'val' → logprob: -5.753520965576172
    3. ' ' → logprob: -8.628520965576172
    4. 'sum' → logprob: -9.253520965576172
    5. ' val' → logprob: -10.503520965576172
    6. '   ' → logprob: -11.253520965576172
    7. 'perm' → logprob: -12.003520965576172
    8. '       ' → logprob: -12.253520965576172
    9. '           ' → logprob: -12.503520965576172
    10. ' sum' → logprob: -13.503520965576172

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001029000268317759
    2. 'val' → logprob: -7.376029014587402
    3. 'sum' → logprob: -7.876029014587402
    4. ' ' → logprob: -11.126029014587402
    5. '   ' → logprob: -12.751029014587402
    6. 'total' → logprob: -14.251029014587402
    7. '
' → logprob: -14.251029014587402
    8. 'perm' → logprob: -14.626029014587402
    9. 'vals' → logprob: -14.751029014587402
    10. ' sum' → logprob: -15.126029014587402

Token 166: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016078714281320572
    2. '       ' → logprob: -5.766078948974609
    3. '
' → logprob: -6.016078948974609
    4. '<|end|>' → logprob: -6.016078948974609
    5. '            ' → logprob: -6.266078948974609
    6. '            
' → logprob: -7.391078948974609
    7. ',' → logprob: -7.391078948974609
    8. ' <<=' → logprob: -7.516078948974609
    9. '<|end|>' → logprob: -7.516078948974609
    10. '+' → logprob: -7.641078948974609

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15302525460720062
    2. '       ' → logprob: -2.9030251502990723
    3. '*' → logprob: -3.4030251502990723
    4. ' for' → logprob: -3.9030251502990723
    5. 'for' → logprob: -4.778025150299072
    6. ' *' → logprob: -4.903025150299072
    7. '+' → logprob: -5.903025150299072
    8. '
' → logprob: -6.403025150299072
    9. '               ' → logprob: -6.778025150299072
    10. '        ' → logprob: -6.778025150299072

Token 168: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9527319669723511
    2. ' val' → logprob: -0.9527319669723511
    3. 'for' (adapté à ' for') → logprob: -1.952731966972351
    4. 'val' → logprob: -2.5777320861816406
    5. '           ' → logprob: -5.452732086181641
    6. '            ' → logprob: -6.077732086181641
    7. '   ' → logprob: -7.452732086181641
    8. '1' → logprob: -7.452732086181641
    9. ' ' → logprob: -7.702732086181641
    10. '    ' → logprob: -7.702732086181641

Token 169: ' d' (ID: 272)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6579596996307373
    2. ' digits' → logprob: -1.6579596996307373
    3. 'j' → logprob: -1.9079596996307373
    4. 'digits' → logprob: -2.7829596996307373
    5. ' indices' → logprob: -3.1579596996307373
    6. ' nums' → logprob: -4.782959938049316
    7. 'indices' → logprob: -5.032959938049316
    8. ' idx' → logprob: -5.407959938049316
    9. 'nums' → logprob: -5.532959938049316
    10. ' digit' → logprob: -5.907959938049316

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08148514479398727
    2. 'igits' → logprob: -2.7064850330352783
    3. 'in' → logprob: -4.706485271453857
    4. '   ' → logprob: -7.831485271453857
    5. ' val' → logprob: -7.831485271453857
    6. '       ' → logprob: -8.0814847946167
    7. '        ' → logprob: -8.3314847946167
    8. '           ' → logprob: -8.7064847946167
    9. ' ' → logprob: -8.8314847946167
    10. '    ' → logprob: -9.0814847946167

Token 171: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.02833488956093788
    2. ' nums' → logprob: -3.778334856033325
    3. 'words' → logprob: -6.153335094451904
    4. 'digits' → logprob: -7.278335094451904
    5. 'range' → logprob: -7.403335094451904
    6. 'indices' → logprob: -7.653335094451904
    7. 'num' → logprob: -8.028334617614746
    8. ' range' → logprob: -8.653334617614746
    9. '   ' → logprob: -9.153334617614746
    10. '[' → logprob: -9.278334617614746

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0038085037376731634
    2. '[' → logprob: -5.628808498382568
    3. 'words' → logprob: -9.753808975219727
    4. '[word' → logprob: -10.378808975219727
    5. 'i' → logprob: -11.003808975219727
    6. '           ' → logprob: -11.628808975219727
    7. 'perm' → logprob: -11.628808975219727
    8. '               ' → logprob: -11.753808975219727
    9. ' [' → logprob: -12.003808975219727
    10. 's' → logprob: -12.378808975219727

Token 173: ']:
' (ID: 22152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002599437953904271
    2. '][' → logprob: -6.002599239349365
    3. 'i' → logprob: -10.377599716186523
    4. '[' → logprob: -10.752599716186523
    5. ']:
' → logprob: -10.877599716186523
    6. '           ' → logprob: -11.252599716186523
    7. ']' → logprob: -11.877599716186523
    8. '       ' → logprob: -12.252599716186523
    9. '   ' → logprob: -12.502599716186523
    10. '[c' → logprob: -12.877599716186523

Token 174: '               ' (ID: 506)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.03584451228380203
    2. '               ' → logprob: -3.535844564437866
    3. 'val' → logprob: -5.160844326019287
    4. '           ' → logprob: -9.535844802856445
    5. ' ' → logprob: -9.785844802856445
    6. '```' → logprob: -10.285844802856445
    7. '[val' → logprob: -10.285844802856445
    8. ' ' → logprob: -10.910844802856445
    9. '            ' → logprob: -11.285844802856445
    10. ',val' → logprob: -11.410844802856445

Token 175: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.07902947068214417
    2. 'val' (adapté à ' val') → logprob: -2.5790295600891113
    3. '               ' → logprob: -9.204029083251953
    4. '                   ' → logprob: -11.204029083251953
    5. '[val' → logprob: -11.579029083251953
    6. '```' → logprob: -12.079029083251953
    7. ',val' → logprob: -13.329029083251953
    8. '_val' → logprob: -13.454029083251953
    9. 'v' → logprob: -13.579029083251953
    10. '	val' → logprob: -13.579029083251953

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742598533630371
    2. ' =' → logprob: -0.9742598533630371
    3. '           ' → logprob: -9.349260330200195
    4. 'val' → logprob: -10.599260330200195
    5. '*=' → logprob: -10.974260330200195
    6. '               ' → logprob: -11.474260330200195
    7. '            ' → logprob: -11.474260330200195
    8. ' *=' → logprob: -11.599260330200195
    9. ' val' → logprob: -12.099260330200195
    10. ' <<=' → logprob: -12.099260330200195

Token 177: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.20141734182834625
    2. ' val' → logprob: -1.701417326927185
    3. '10' → logprob: -13.576416969299316
    4. '	val' → logprob: -13.951416969299316
    5. '   ' → logprob: -14.451416969299316
    6. '(val' → logprob: -14.701416969299316
    7. '[val' → logprob: -15.201416969299316
    8. '```' → logprob: -15.576416969299316
    9. '           ' → logprob: -16.201417922973633
    10. ' ' → logprob: -16.451417922973633

Token 178: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5771795511245728
    2. ' *' → logprob: -0.8271795511245728
    3. ' val' → logprob: -7.202179431915283
    4. 'val' → logprob: -7.702179431915283
    5. '[val' → logprob: -11.077179908752441
    6. ' ' → logprob: -11.577179908752441
    7. '           ' → logprob: -12.327179908752441
    8. '               ' → logprob: -12.952179908752441
    9. '0' → logprob: -12.952179908752441
    10. '
' → logprob: -13.327179908752441

Token 179: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.250007629394531
    3. '```' → logprob: -13.000007629394531
    4. 'perm' → logprob: -15.375007629394531
    5. '   ' → logprob: -16.50000762939453
    6. '
' → logprob: -17.12500762939453
    7. '``' → logprob: -17.62500762939453
    8. 'per' → logprob: -18.12500762939453
    9. '100' → logprob: -18.50000762939453
    10. '           ' → logprob: -19.12500762939453

Token 180: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021097958087921
    2. ' +' → logprob: -2.3502109050750732
    3. '+d' → logprob: -12.725211143493652
    4. ' ' → logprob: -14.350211143493652
    5. '0' → logprob: -15.850211143493652
    6. '+
' → logprob: -16.475210189819336
    7. '[' → logprob: -16.725210189819336
    8. '```' → logprob: -16.725210189819336
    9. ' ' → logprob: -16.850210189819336
    10. '        ' → logprob: -17.225210189819336

Token 181: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.0008266602526418865
    2. ' perm' → logprob: -7.125826835632324
    3. 'd' → logprob: -11.375826835632324
    4. 'per' → logprob: -12.000826835632324
    5. '   ' → logprob: -12.750826835632324
    6. 'perf' → logprob: -15.250826835632324
    7. ' ' → logprob: -15.500826835632324
    8. '           ' → logprob: -15.500826835632324
    9. '
' → logprob: -15.750826835632324
    10. 'digits' → logprob: -16.000825881958008

Token 182: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.008116398938000202
    2. '(d' → logprob: -5.133116245269775
    3. '[' → logprob: -6.383116245269775
    4. 'd' → logprob: -8.008116722106934
    5. '[
' → logprob: -9.758116722106934
    6. '[(' → logprob: -10.508116722106934
    7. '(' → logprob: -10.508116722106934
    8. 'indices' → logprob: -10.883116722106934
    9. '([' → logprob: -12.758116722106934
    10. '[i' → logprob: -13.008116722106934

Token 183: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01582072675228119
    2. ']
' → logprob: -4.640820503234863
    3. ')]' → logprob: -6.140820503234863
    4. ')' → logprob: -6.640820503234863
    5. '])' → logprob: -7.390820503234863
    6. '           ' → logprob: -7.390820503234863
    7. ' ]' → logprob: -7.765820503234863
    8. '[' → logprob: -8.015820503234863
    9. '               ' → logprob: -8.140820503234863
    10. '       ' → logprob: -9.265820503234863

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1949390172958374
    2. '       ' → logprob: -1.8199390172958374
    3. '
' → logprob: -5.569939136505127
    4. '               ' → logprob: -5.819939136505127
    5. '        
' → logprob: -5.944939136505127
    6. ' 
' → logprob: -6.944939136505127
    7. '\n' → logprob: -7.069939136505127
    8. '            
' → logprob: -7.319939136505127
    9. '<|end|>' → logprob: -7.694939136505127
    10. '  
' → logprob: -7.819939136505127

Token 185: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008427338674664497
    2. '           ' → logprob: -5.383427143096924
    3. '+' → logprob: -7.383427143096924
    4. ' total' → logprob: -7.508427143096924
    5. '   ' → logprob: -7.758427143096924
    6. '
' → logprob: -7.758427143096924
    7. ' if' → logprob: -8.008427619934082
    8. 'total' (adapté à ' total') → logprob: -8.258427619934082
    9. '```' → logprob: -8.383427619934082
    10. '\n' → logprob: -8.883427619934082

Token 186: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006993603892624378
    2. '+=' → logprob: -5.006993770599365
    3. ' -=' → logprob: -8.256993293762207
    4. '=' → logprob: -12.006993293762207
    5. ' =' → logprob: -12.506993293762207
    6. '    ' → logprob: -12.756993293762207
    7. '   ' → logprob: -13.381993293762207
    8. '+' → logprob: -13.881993293762207
    9. ' +' → logprob: -14.506993293762207
    10. ' <<=' → logprob: -14.506993293762207

Token 187: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1426815539598465
    2. ' val' → logprob: -2.01768159866333
    3. '1' → logprob: -13.767681121826172
    4. '(val' → logprob: -14.017681121826172
    5. '_val' → logprob: -14.142681121826172
    6. '	val' → logprob: -14.392681121826172
    7. ' ' → logprob: -14.517681121826172
    8. '           ' → logprob: -14.892681121826172
    9. 'total' → logprob: -15.267681121826172
    10. '   ' → logprob: -15.267681121826172

Token 188: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041566334664821625
    2. '
' → logprob: -3.6665663719177246
    3. '<|end|>' → logprob: -5.041566371917725
    4. '   ' → logprob: -6.041566371917725
    5. '```' → logprob: -7.041566371917725
    6. '        
' → logprob: -7.041566371917725
    7. '  
' → logprob: -7.291566371917725
    8. '+' → logprob: -7.416566371917725
    9. '           ' → logprob: -7.666566371917725
    10. '+
' → logprob: -7.791566371917725

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02051643282175064
    2. '
' → logprob: -5.520516395568848
    3. '        
' → logprob: -5.645516395568848
    4. '   ' → logprob: -5.895516395568848
    5. '+' → logprob: -6.145516395568848
    6. '<|end|>' → logprob: -6.145516395568848
    7. '           ' → logprob: -7.520516395568848
    8. '    
' → logprob: -7.520516395568848
    9. '\n' → logprob: -7.520516395568848
    10. '  
' → logprob: -7.645516395568848

Token 190: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.609301209449768
    2. ' for' → logprob: -1.859301209449768
    3. '```' → logprob: -2.2343010902404785
    4. ' if' → logprob: -2.3593010902404785
    5. '
' → logprob: -2.4843010902404785
    6. ' ' → logprob: -2.8593010902404785
    7. '   ' → logprob: -2.9843010902404785
    8. ' val' → logprob: -2.9843010902404785
    9. 'for' → logprob: -3.2343010902404785
    10. 'val' (adapté à ' val') → logprob: -3.7343010902404785

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895004540681839
    2. '=' → logprob: -2.4639501571655273
    3. '_' → logprob: -12.213950157165527
    4. ' ' → logprob: -13.088950157165527
    5. ' =
' → logprob: -14.213950157165527
    6. '   ' → logprob: -14.463950157165527
    7. 's' → logprob: -14.713950157165527
    8. ')' → logprob: -15.338950157165527
    9. '    ' → logprob: -15.463950157165527
    10. ' _' → logprob: -15.588950157165527

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804631531238556
    2. ' ' → logprob: -3.288046360015869
    3. '   ' → logprob: -13.413045883178711
    4. 'val' → logprob: -14.475545883178711
    5. 'sum' → logprob: -14.538045883178711
    6. ' ' → logprob: -14.663045883178711
    7. '  ' → logprob: -15.288045883178711
    8. '
' → logprob: -15.288045883178711
    9. ' val' → logprob: -15.850545883178711
    10. ' sum' → logprob: -15.975545883178711

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023619852436240762
    2. ' ' → logprob: -8.375236511230469
    3. 'val' → logprob: -12.750236511230469
    4. '   ' → logprob: -14.625236511230469
    5. 'sum' → logprob: -14.750236511230469
    6. 'nums' → logprob: -14.875236511230469
    7. '
' → logprob: -15.125236511230469
    8. 'total' → logprob: -15.250236511230469
    9. '       ' → logprob: -16.31273651123047
    10. '```' → logprob: -16.50023651123047

Token 194: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6216576099395752
    2. '       ' → logprob: -1.2466576099395752
    3. ' for' → logprob: -1.7466576099395752
    4. '   ' → logprob: -7.746657371520996
    5. '	for' → logprob: -8.621657371520996
    6. '
' → logprob: -8.621657371520996
    7. '           ' → logprob: -8.746657371520996
    8. ' ' → logprob: -9.371657371520996
    9. '               ' → logprob: -10.996657371520996
    10. 'For' → logprob: -11.371657371520996

Token 195: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12217588722705841
    2. ' for' → logprob: -2.747175931930542
    3. '       ' → logprob: -2.997175931930542
    4. '           ' → logprob: -7.747175693511963
    5. '   ' → logprob: -8.122176170349121
    6. '	for' → logprob: -8.497176170349121
    7. '```' → logprob: -11.247176170349121
    8. '               ' → logprob: -12.247176170349121
    9. 'For' → logprob: -12.372176170349121
    10. '
' → logprob: -12.622176170349121

Token 196: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011909411987289786
    2. '       ' → logprob: -7.001191139221191
    3. ' for' → logprob: -8.251191139221191
    4. '   ' → logprob: -11.126191139221191
    5. '	for' → logprob: -12.751191139221191
    6. '           ' → logprob: -14.501191139221191
    7. '
' → logprob: -15.626191139221191
    8. '```' → logprob: -15.751191139221191
    9. ' ' → logprob: -16.501190185546875
    10. '	' → logprob: -17.876190185546875

Token 197: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31369954347610474
    2. ' d' → logprob: -1.31369948387146
    3. 'nums' → logprob: -8.438699722290039
    4. ' nums' → logprob: -9.313699722290039
    5. 'num' → logprob: -10.313699722290039
    6. 'c' → logprob: -10.438699722290039
    7. 'i' → logprob: -11.313699722290039
    8. ' num' → logprob: -11.313699722290039
    9. 'digits' → logprob: -11.688699722290039
    10. ' c' → logprob: -11.688699722290039

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20143623650074005
    2. 'in' → logprob: -1.7014362812042236
    3. 'd' → logprob: -12.451436042785645
    4. '  ' → logprob: -12.826436042785645
    5. ' ' → logprob: -12.826436042785645
    6. '   ' → logprob: -12.826436042785645
    7. '=' → logprob: -13.076436042785645
    8. 's' → logprob: -13.201436042785645
    9. '[' → logprob: -13.326436042785645
    10. '
' → logprob: -14.201436042785645

Token 199: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.061984043568372726
    2. ' nums' → logprob: -2.811984062194824
    3. '(nums' → logprob: -11.561984062194824
    4. 'num' → logprob: -12.311984062194824
    5. 'digits' → logprob: -14.061984062194824
    6. '_nums' → logprob: -15.061984062194824
    7. ' ' → logprob: -15.811984062194824
    8. 'tokens' → logprob: -15.811984062194824
    9. '[num' → logprob: -15.936984062194824
    10. 'Nums' → logprob: -15.936984062194824

Token 200: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.811348480870947e-05
    2. '[len' → logprob: -10.00004768371582
    3. '-' → logprob: -13.62504768371582
    4. '[' → logprob: -13.87504768371582
    5. '```' → logprob: -15.50004768371582
    6. '[i' → logprob: -15.62504768371582
    7. ' [-' → logprob: -17.25004768371582
    8. '(-' → logprob: -18.25004768371582
    9. 's' → logprob: -18.37504768371582
    10. '`' → logprob: -18.37504768371582

Token 201: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.34083831310272217
    2. 'i' → logprob: -1.4658383131027222
    3. '[i' → logprob: -3.8408384323120117
    4. '[-' → logprob: -4.090838432312012
    5. ']' → logprob: -4.715838432312012
    6. '])' → logprob: -5.465838432312012
    7. '-' → logprob: -5.465838432312012
    8. '[d' → logprob: -6.590838432312012
    9. '   ' → logprob: -9.090838432312012
    10. ' i' → logprob: -9.590838432312012

Token 202: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.016938310116529465
    2. ':
' → logprob: -4.766938209533691
    3. ']:' → logprob: -5.016938209533691
    4. ':' → logprob: -7.266938209533691
    5. 'd' → logprob: -7.516938209533691
    6. ']:
' → logprob: -8.891938209533691
    7. '       ' → logprob: -9.391938209533691
    8. '           ' → logprob: -10.141938209533691
    9. ']]:
' → logprob: -10.391938209533691
    10. ']:

' → logprob: -10.641938209533691

Token 203: '           ' (ID: 352)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.34518352150917053
    2. 'val' → logprob: -1.3451834917068481
    3. '           ' → logprob: -3.4701836109161377
    4. '       ' → logprob: -8.720183372497559
    5. '	val' → logprob: -10.220183372497559
    6. '```' → logprob: -10.595183372497559
    7. '               ' → logprob: -10.845183372497559
    8. '   ' → logprob: -11.095183372497559
    9. '[val' → logprob: -11.095183372497559
    10. '_val' → logprob: -11.470183372497559

Token 204: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.31326475739479065
    2. ' val' → logprob: -1.3132647275924683
    3. '_val' → logprob: -13.938264846801758
    4. '```' → logprob: -14.313264846801758
    5. '[val' → logprob: -14.313264846801758
    6. '           ' → logprob: -15.188264846801758
    7. '	val' → logprob: -15.438264846801758
    8. '.val' → logprob: -16.188264846801758
    9. ',val' → logprob: -16.563264846801758
    10. 'Val' → logprob: -16.688264846801758

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868718445301056
    2. ' =' → logprob: -1.1368718147277832
    3. '   ' → logprob: -14.886872291564941
    4. 'val' → logprob: -16.261871337890625
    5. '           ' → logprob: -16.636871337890625
    6. '*=' → logprob: -16.886871337890625
    7. ' ' → logprob: -17.011871337890625
    8. ' val' → logprob: -17.511871337890625
    9. '```' → logprob: -17.636871337890625
    10. ' +=' → logprob: -17.636871337890625

Token 206: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.16022492945194244
    2. ' val' → logprob: -1.9102249145507812
    3. '(val' → logprob: -15.285224914550781
    4. '[val' → logprob: -15.285224914550781
    5. '	val' → logprob: -15.910224914550781
    6. '0' → logprob: -16.66022491455078
    7. ',val' → logprob: -17.78522491455078
    8. '   ' → logprob: -17.91022491455078
    9. '_val' → logprob: -18.16022491455078
    10. 'v' → logprob: -18.41022491455078

Token 207: '*' (ID: 9)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12128528207540512
    2. '*' → logprob: -2.3712852001190186
    3. ' val' → logprob: -3.8712852001190186
    4. ' *' → logprob: -10.746285438537598
    5. '[val' → logprob: -12.746285438537598
    6. '_val' → logprob: -14.496285438537598
    7. '(val' → logprob: -14.746285438537598
    8. '.val' → logprob: -14.746285438537598
    9. '0' → logprob: -15.496285438537598
    10. ',val' → logprob: -15.621285438537598

Token 208: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.845798710244708e-05
    2. 'perm' → logprob: -10.500038146972656
    3. ' ' → logprob: -11.625038146972656
    4. '0' → logprob: -14.375038146972656
    5. '
' → logprob: -15.250038146972656
    6. '   ' → logprob: -15.250038146972656
    7. '```' → logprob: -15.375038146972656
    8. 'per' → logprob: -15.750038146972656
    9. '

' → logprob: -15.875038146972656
    10. ' perm' → logprob: -16.750038146972656

Token 209: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0485873706638813
    2. ' +' → logprob: -3.0485873222351074
    3. '+
' → logprob: -18.673587799072266
    4. '```' → logprob: -18.673587799072266
    5. '＋' → logprob: -19.798587799072266
    6. ' ' → logprob: -20.548587799072266
    7. ' ' → logprob: -20.673587799072266
    8. '[' → logprob: -20.923587799072266
    9. 'perm' → logprob: -21.548587799072266
    10. '0' → logprob: -21.548587799072266

Token 210: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.0024762547109276056
    2. ' perm' → logprob: -6.002476215362549
    3. 'per' → logprob: -14.377476692199707
    4. 'perf' → logprob: -17.25247573852539
    5. '   ' → logprob: -18.62747573852539
    6. ' ' → logprob: -19.62747573852539
    7. '
' → logprob: -20.00247573852539
    8. '           ' → logprob: -20.12747573852539
    9. 'pert' → logprob: -20.25247573852539
    10. 'permit' → logprob: -20.37747573852539

Token 211: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -6.2729995988775045e-06
    2. 'd' → logprob: -12.000006675720215
    3. '[' → logprob: -17.6250057220459
    4. '(d' → logprob: -18.3750057220459
    5. '[
' → logprob: -20.3750057220459
    6. '\[' → logprob: -21.3750057220459
    7. '	d' → logprob: -21.5000057220459
    8. '[c' → logprob: -22.0000057220459
    9. ' d' → logprob: -22.0000057220459
    10. '```' → logprob: -22.1250057220459

Token 212: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.47429677844047546
    2. ']' → logprob: -0.9742968082427979
    3. '       ' → logprob: -8.599296569824219
    4. ']
' → logprob: -11.349296569824219
    5. ']

' → logprob: -12.224296569824219
    6. '           ' → logprob: -12.349296569824219
    7. '[' → logprob: -12.849296569824219
    8. 'd' → logprob: -12.974296569824219
    9. '[d' → logprob: -12.974296569824219
    10. ' ]
' → logprob: -13.599296569824219

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018433310091495514
    2. ' if' → logprob: -4.643433094024658
    3. 'if' → logprob: -5.143433094024658
    4. '
' → logprob: -7.143433094024658
    5. '   ' → logprob: -7.268433094024658
    6. ' total' → logprob: -7.393433094024658
    7. 'total' → logprob: -8.018433570861816
    8. '           ' → logprob: -8.893433570861816
    9. '```' → logprob: -9.268433570861816
    10. '<|end|>' → logprob: -9.893433570861816

Token 214: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02184380777180195
    2. ' if' → logprob: -4.271843910217285
    3. '       ' → logprob: -5.146843910217285
    4. 'total' → logprob: -6.396843910217285
    5. ' total' → logprob: -9.396843910217285
    6. '   ' → logprob: -10.146843910217285
    7. '```' → logprob: -10.521843910217285
    8. '
' → logprob: -11.771843910217285
    9. 'count' → logprob: -12.771843910217285
    10. ' ' → logprob: -13.271843910217285

Token 215: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.14269095659255981
    2. 'total' → logprob: -2.017690896987915
    3. '(total' → logprob: -11.517690658569336
    4. '   ' → logprob: -12.517690658569336
    5. ' ' → logprob: -14.017690658569336
    6. ' val' → logprob: -14.767690658569336
    7. '	total' → logprob: -15.017690658569336
    8. ' ' → logprob: -15.517690658569336
    9. 'val' → logprob: -15.642690658569336
    10. ' (' → logprob: -16.767690658569336

Token 216: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1602589637041092
    2. '==' → logprob: -1.9102590084075928
    3. ' <=' → logprob: -11.035259246826172
    4. '=' → logprob: -12.035259246826172
    5. '<=' → logprob: -12.660259246826172
    6. ' !=' → logprob: -12.660259246826172
    7. ')==' → logprob: -13.535259246826172
    8. '!=' → logprob: -13.910259246826172
    9. '==
' → logprob: -14.035259246826172
    10. ' ' → logprob: -14.160259246826172

Token 217: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3868716359138489
    2. 'val' → logprob: -1.136871576309204
    3. '(val' → logprob: -16.011871337890625
    4. 'total' → logprob: -16.011871337890625
    5. '	val' → logprob: -16.136871337890625
    6. '           ' → logprob: -16.761871337890625
    7. '_val' → logprob: -16.886871337890625
    8. ' total' → logprob: -17.136871337890625
    9. '       ' → logprob: -17.261871337890625
    10. '[val' → logprob: -17.511871337890625

Token 218: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03821224346756935
    2. ':
' → logprob: -3.288212299346924
    3. '           ' → logprob: -9.038211822509766
    4. ':return' → logprob: -10.288211822509766
    5. '       ' → logprob: -11.538211822509766
    6. '):' → logprob: -13.038211822509766
    7. ':
' → logprob: -13.288211822509766
    8. '):
' → logprob: -13.663211822509766
    9. '<|end|>' → logprob: -14.413211822509766
    10. ' :' → logprob: -14.538211822509766

Token 219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019138160860165954
    2. '               ' → logprob: -9.750191688537598
    3. '       ' → logprob: -10.000191688537598
    4. '```' → logprob: -10.500191688537598
    5. 'count' → logprob: -10.875191688537598
    6. ' return' → logprob: -11.000191688537598
    7. 'return' → logprob: -11.875191688537598
    8. ' count' → logprob: -12.125191688537598
    9. '	       ' → logprob: -12.500191688537598
    10. '		' → logprob: -13.625191688537598

Token 220: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.055021077394485474
    2. ' count' → logprob: -3.555021047592163
    3. '           ' → logprob: -3.805021047592163
    4. '       ' → logprob: -6.430021286010742
    5. '               ' → logprob: -7.055021286010742
    6. '   ' → logprob: -8.680021286010742
    7. 'return' → logprob: -10.680021286010742
    8. '	count' → logprob: -11.555021286010742
    9. ' return' → logprob: -12.305021286010742
    10. '
' → logprob: -12.555021286010742

Token 221: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.28136080503463745
    2. '+=' → logprob: -1.4063608646392822
    3. ']+=' → logprob: -9.281360626220703
    4. '+' → logprob: -9.781360626220703
    5. '   ' → logprob: -10.656360626220703
    6. '    ' → logprob: -11.531360626220703
    7. '<|end|>' → logprob: -11.656360626220703
    8. '           ' → logprob: -12.406360626220703
    9. '[' → logprob: -12.531360626220703
    10. '            ' → logprob: -12.906360626220703

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -17.750139236450195
    4. '   ' → logprob: -18.000139236450195
    5. '+' → logprob: -19.250139236450195
    6. '１' → logprob: -20.125139236450195
    7. ' ' → logprob: -20.125139236450195
    8. '  ' → logprob: -20.187639236450195
    9. '۱' → logprob: -20.187639236450195
    10. '
' → logprob: -20.625139236450195

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.375001907348633
    4. '   ' → logprob: -18.500001907348633
    5. 'count' → logprob: -19.625001907348633
    6. '<|end|>' → logprob: -20.437501907348633
    7. '۱' → logprob: -20.562501907348633
    8. '+' → logprob: -20.750001907348633
    9. '
' → logprob: -20.937501907348633
    10. '１' → logprob: -21.062501907348633

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8825499415397644
    2. '       ' → logprob: -1.2575500011444092
    3. '<|end|>' → logprob: -1.3825500011444092
    4. '```' → logprob: -3.882550001144409
    5. ' return' → logprob: -4.88254976272583
    6. ')' → logprob: -5.13254976272583
    7. '<|end|>' → logprob: -6.00754976272583
    8. ':return' → logprob: -6.00754976272583
    9. ',' → logprob: -6.13254976272583
    10. '[' → logprob: -6.63254976272583

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049508001655340195
    2. 'return' → logprob: -3.7995080947875977
    3. '```' → logprob: -4.424508094787598
    4. ' return' → logprob: -4.924508094787598
    5. '       ' → logprob: -5.549508094787598
    6. '	return' → logprob: -7.174508094787598
    7. '    
' → logprob: -7.299508094787598
    8. '
' → logprob: -7.799508094787598
    9. '<|end|>' → logprob: -7.799508094787598
    10. '[' → logprob: -9.174508094787598

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024265140295028687
    2. '   ' → logprob: -3.7742650508880615
    3. ' return' → logprob: -7.024265289306641
    4. '```' → logprob: -9.02426528930664
    5. '
' → logprob: -12.64926528930664
    6. '	return' → logprob: -13.14926528930664
    7. ':return' → logprob: -13.39926528930664
    8. '    
' → logprob: -14.77426528930664
    9. '{return' → logprob: -15.02426528930664
    10. '@return' → logprob: -15.77426528930664

Token 227: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006715370807796717
    2. ' count' → logprob: -5.006715297698975
    3. '(count' → logprob: -18.881715774536133
    4. '	count' → logprob: -19.631715774536133
    5. '   ' → logprob: -20.131715774536133
    6. '[count' → logprob: -20.506715774536133
    7. '$count' → logprob: -20.631715774536133
    8. '<count' → logprob: -21.256715774536133
    9. '_count' → logprob: -22.006715774536133
    10. 'code' → logprob: -22.381715774536133

Token 228: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4744719862937927
    2. ' solve' → logprob: -0.9744719862937927
    3. ' solution' → logprob: -8.849472045898438
    4. ' test' → logprob: -9.849472045898438
    5. 'solve' → logprob: -10.349472045898438
    6. ' solver' → logprob: -10.474472045898438
    7. ' process' → logprob: -10.599472045898438
    8. ' parse' → logprob: -10.724472045898438
    9. ' find' → logprob: -10.849472045898438
    10. ' run' → logprob: -11.349472045898438

Token 231: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04308643192052841
    2. '():
' → logprob: -3.168086528778076
    3. '()' → logprob: -10.543086051940918
    4. '_' → logprob: -10.668086051940918
    5. '():
' → logprob: -11.043086051940918
    6. ' ():' → logprob: -11.918086051940918
    7. '():

' → logprob: -12.043086051940918
    8. '(' → logprob: -12.293086051940918
    9. '()>' → logprob: -13.668086051940918
    10. '()):
' → logprob: -14.793086051940918

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1868407130241394
    2. '():
' → logprob: -2.686840772628784
    3. '()' → logprob: -3.061840772628784
    4. '():' → logprob: -3.811840772628784
    5. 'def' → logprob: -4.561840534210205
    6. '```' → logprob: -4.561840534210205
    7. 'import' → logprob: -6.061840534210205
    8. '<|end|>' → logprob: -6.186840534210205
    9. '
' → logprob: -6.311840534210205
    10. '()
' → logprob: -6.686840534210205

Token 233: ' lines' (ID: 8698)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.031814560294151306
    2. 'import' → logprob: -4.0318145751953125
    3. ' n' → logprob: -4.6568145751953125
    4. '   ' → logprob: -6.4068145751953125
    5. 'n' → logprob: -6.6568145751953125
    6. ' input' → logprob: -8.156814575195312
    7. ' for' → logprob: -8.156814575195312
    8. ' lines' → logprob: -8.406814575195312
    9. ' t' → logprob: -8.781814575195312
    10. ' T' → logprob: -9.656814575195312

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27989888191223145
    2. ' =' → logprob: -1.5298988819122314
    3. '()' → logprob: -3.6548988819122314
    4. '   ' → logprob: -6.779898643493652
    5. '=[]' → logprob: -8.654898643493652
    6. '(' → logprob: -9.279898643493652
    7. '=sys' → logprob: -9.779898643493652
    8. '=[]
' → logprob: -9.904898643493652
    9. '=line' → logprob: -10.529898643493652
    10. '=input' → logprob: -10.529898643493652

Token 235: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6932303309440613
    2. 'sys' → logprob: -0.6932303309440613
    3. '[' → logprob: -10.318230628967285
    4. ' [' → logprob: -11.068230628967285
    5. '[]' → logprob: -11.318230628967285
    6. '=sys' → logprob: -11.318230628967285
    7. '(sys' → logprob: -12.193230628967285
    8. '	sys' → logprob: -13.693230628967285
    9. '   ' → logprob: -13.818230628967285
    10. '[]
' → logprob: -13.943230628967285

Token 236: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -6.098748053773306e-05
    2. '.argv' → logprob: -10.62506103515625
    3. '.' → logprob: -11.00006103515625
    4. 'stdin' → logprob: -11.12506103515625
    5. '.stdout' → logprob: -13.37506103515625
    6. ' stdin' → logprob: -13.50006103515625
    7. '.readline' → logprob: -13.75006103515625
    8. '(stdin' → logprob: -14.12506103515625
    9. ' .' → logprob: -15.75006103515625
    10. '.std' → logprob: -16.25006103515625

Token 237: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.39041537046432495
    2. '.readlines' → logprob: -1.1404154300689697
    3. '.read' → logprob: -6.140415191650391
    4. '.' → logprob: -6.640415191650391
    5. 'read' → logprob: -10.64041519165039
    6. '   ' → logprob: -10.64041519165039
    7. '```' → logprob: -11.76541519165039
    8. ' =' → logprob: -12.01541519165039
    9. '=' → logprob: -12.14041519165039
    10. '.strip' → logprob: -12.76541519165039

Token 238: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10022003948688507
    2. '()' → logprob: -2.350219964981079
    3. '()
' → logprob: -12.4752197265625
    4. '()\' → logprob: -12.4752197265625
    5. '()

' → logprob: -12.9752197265625
    6. 'lines' → logprob: -14.3502197265625
    7. '()`' → logprob: -14.4752197265625
    8. '())' → logprob: -14.4752197265625
    9. '()).' → logprob: -15.2252197265625
    10. ' ()' → logprob: -15.3502197265625

Token 239: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3139471411705017
    2. 'split' → logprob: -1.3139472007751465
    3. 'read' → logprob: -7.3139472007751465
    4. 'decode' → logprob: -11.313946723937988
    5. 'rstrip' → logprob: -11.938946723937988
    6. '```' → logprob: -16.438947677612305
    7. ' split' → logprob: -16.563947677612305
    8. ' strip' → logprob: -16.938947677612305
    9. 'replace' → logprob: -17.063947677612305
    10. 'lines' → logprob: -17.313947677612305

Token 240: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018209176138043404
    2. '()' → logprob: -4.018208980560303
    3. 'split' → logprob: -10.143209457397461
    4. '()
' → logprob: -11.643209457397461
    5. '.split' → logprob: -12.393209457397461
    6. '('' → logprob: -12.893209457397461
    7. '(' → logprob: -13.518209457397461
    8. '()\' → logprob: -14.518209457397461
    9. '()`' → logprob: -14.893209457397461
    10. ' ().' → logprob: -15.018209457397461

Token 241: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. ' split' → logprob: -13.750000953674316
    3. 'lines' → logprob: -15.750000953674316
    4. '(split' → logprob: -16.125001907348633
    5. '```' → logprob: -18.375001907348633
    6. 'spl' → logprob: -19.750001907348633
    7. 'strip' → logprob: -20.000001907348633
    8. 'decode' → logprob: -20.750001907348633
    9. '.split' → logprob: -21.375001907348633
    10. 'rstrip' → logprob: -21.875001907348633

Token 242: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3650692403316498
    2. '('\' → logprob: -1.3650692701339722
    3. '('' → logprob: -3.1150691509246826
    4. 'lines' → logprob: -5.490069389343262
    5. '(' → logprob: -6.365069389343262
    6. '("\' → logprob: -8.865069389343262
    7. '()\' → logprob: -9.990069389343262
    8. '()
' → logprob: -10.615069389343262
    9. '()[' → logprob: -10.990069389343262
    10. '(['' → logprob: -11.365069389343262

Token 243: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. '\n' → logprob: -15.5
    3. ' n' → logprob: -17.375
    4. 'newline' → logprob: -20.25
    5. 'ndef' → logprob: -20.75
    6. '
' → logprob: -21.5
    7. '```' → logprob: -21.5
    8. '	n' → logprob: -22.125
    9. 'b' → logprob: -22.125
    10. ')n' → logprob: -22.625

Token 244: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005274907220155001
    2. ')
' → logprob: -5.380274772644043
    3. '   ' → logprob: -7.630274772644043
    4. '')' → logprob: -8.755274772644043
    5. ')
' → logprob: -12.380274772644043
    6. '')
' → logprob: -13.005274772644043
    7. '")' → logprob: -13.505274772644043
    8. '[' → logprob: -13.880274772644043
    9. '`)' → logprob: -14.630274772644043
    10. ' )' → logprob: -15.005274772644043

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07548132538795471
    2. ' for' → logprob: -3.325481414794922
    3. 'for' → logprob: -3.325481414794922
    4. '```' → logprob: -7.575481414794922
    5. 'n' → logprob: -8.950481414794922
    6. ' n' → logprob: -10.575481414794922
    7. 'idx' → logprob: -10.825481414794922
    8. 'i' → logprob: -10.950481414794922
    9. '    
' → logprob: -10.950481414794922
    10. 'num' → logprob: -11.325481414794922

Token 246: ' i' (ID: 575)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009620321914553642
    2. ' t' → logprob: -5.509620189666748
    3. 'T' → logprob: -5.759620189666748
    4. '   ' → logprob: -6.759620189666748
    5. 'i' (adapté à ' i') → logprob: -7.259620189666748
    6. 'n' → logprob: -8.759620666503906
    7. 'num' → logprob: -9.009620666503906
    8. 'for' → logprob: -9.134620666503906
    9. ' T' → logprob: -10.384620666503906
    10. 'idx' → logprob: -10.509620666503906

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12786290049552917
    2. '=' → logprob: -2.1278629302978516
    3. ' +=' → logprob: -7.377862930297852
    4. 'f' → logprob: -8.377862930297852
    5. '+=' → logprob: -10.002862930297852
    6. 'n' → logprob: -11.377862930297852
    7. '   ' → logprob: -11.752862930297852
    8. 'x' → logprob: -12.377862930297852
    9. ' ' → logprob: -12.502862930297852
    10. '  ' → logprob: -13.502862930297852

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016157887876033783
    2. ' ' → logprob: -4.766158103942871
    3. '1' → logprob: -4.891158103942871
    4. '2' → logprob: -13.141158103942871
    5. '```' → logprob: -16.141157150268555
    6. '   ' → logprob: -16.266157150268555
    7. 'i' → logprob: -17.016157150268555
    8. ' i' → logprob: -17.828657150268555
    9. '  ' → logprob: -18.328657150268555
    10. '`' → logprob: -18.703657150268555

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008180848672054708
    2. '1' → logprob: -7.125818252563477
    3. ' ' → logprob: -11.250818252563477
    4. '2' → logprob: -14.375818252563477
    5. '   ' → logprob: -17.000818252563477
    6. 'i' → logprob: -17.750818252563477
    7. '```' → logprob: -18.375818252563477
    8. '=' → logprob: -20.125818252563477
    9. ' i' → logprob: -20.875818252563477
    10. '  ' → logprob: -21.313318252563477

Token 250: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18756425380706787
    2. '   ' → logprob: -1.9375642538070679
    3. 'while' → logprob: -4.437564373016357
    4. ' while' → logprob: -4.687564373016357
    5. '```' → logprob: -6.062564373016357
    6. '<|end|>' → logprob: -6.437564373016357
    7. '    
' → logprob: -7.187564373016357
    8. '	while' → logprob: -7.937564373016357
    9. '  
' → logprob: -7.937564373016357
    10. ' 
' → logprob: -8.9375638961792

Token 251: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9732789993286133
    2. '   ' → logprob: -1.4732789993286133
    3. '```' → logprob: -1.7232789993286133
    4. ' while' → logprob: -1.8482789993286133
    5. '
' → logprob: -3.3482789993286133
    6. '<|end|>' → logprob: -4.348278999328613
    7. '	while' → logprob: -6.098278999328613
    8. 'n' → logprob: -6.348278999328613
    9. ' ' → logprob: -6.723278999328613
    10. '``' → logprob: -7.223278999328613

Token 252: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.18152226507663727
    2. ' while' → logprob: -1.806522250175476
    3. 'n' → logprob: -7.431522369384766
    4. '   ' → logprob: -7.556522369384766
    5. '```' → logprob: -7.681522369384766
    6. ' n' → logprob: -8.806522369384766
    7. '
' → logprob: -10.431522369384766
    8. '	while' → logprob: -11.681522369384766
    9. 't' → logprob: -12.306522369384766
    10. '``' → logprob: -13.306522369384766

Token 253: ' True' (ID: 6432)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.038044363260269165
    2. 'i' → logprob: -3.2880444526672363
    3. ' True' → logprob: -13.163043975830078
    4. 'True' → logprob: -14.538043975830078
    5. '   ' → logprob: -15.163043975830078
    6. ' ' → logprob: -15.538043975830078
    7. '(i' → logprob: -17.413043975830078
    8. '	i' → logprob: -17.538043975830078
    9. '    ' → logprob: -18.163043975830078
    10. ' ' → logprob: -18.288043975830078

Token 254: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14264032244682312
    2. ':' → logprob: -3.0176403522491455
    3. '   ' → logprob: -3.2676403522491455
    4. ':
' → logprob: -3.3926403522491455
    5. '<|end|>' → logprob: -5.267640113830566
    6. '<|end|>' → logprob: -6.517640113830566
    7. ' and' → logprob: -6.892640113830566
    8. ',' → logprob: -7.267640113830566
    9. '[' → logprob: -7.517640113830566
    10. '```' → logprob: -7.517640113830566

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00545252813026309
    2. '```' → logprob: -5.755452632904053
    3. '   ' → logprob: -6.380452632904053
    4. 'if' → logprob: -8.505452156066895
    5. '<|end|>' → logprob: -8.755452156066895
    6. ' if' → logprob: -8.880452156066895
    7. '``' → logprob: -11.130452156066895
    8. '[' → logprob: -11.755452156066895
    9. 'i' → logprob: -12.005452156066895
    10. '     ' → logprob: -12.130452156066895

Token 256: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.046767134219408035
    2. 'line' → logprob: -3.546767234802246
    3. ' if' → logprob: -4.296767234802246
    4. '   ' → logprob: -6.171767234802246
    5. 'n' → logprob: -7.296767234802246
    6. ' line' → logprob: -8.296767234802246
    7. '       ' → logprob: -8.921767234802246
    8. 'num' → logprob: -10.546767234802246
    9. 'len' → logprob: -10.921767234802246
    10. 'lines' → logprob: -10.921767234802246

Token 257: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04859725013375282
    2. 'i' → logprob: -3.0485973358154297
    3. ' ' → logprob: -11.67359733581543
    4. '	i' → logprob: -15.17359733581543
    5. ' ' → logprob: -15.17359733581543
    6. ' not' → logprob: -15.54859733581543
    7. '  ' → logprob: -15.79859733581543
    8. '_i' → logprob: -15.79859733581543
    9. '   ' → logprob: -16.17359733581543
    10. '(i' → logprob: -16.79859733581543

Token 258: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5233290791511536
    2. '>=' → logprob: -0.8983290791511536
    3. '==' → logprob: -9.14832878112793
    4. ' ==' → logprob: -9.77332878112793
    5. ']>=' → logprob: -10.89832878112793
    6. ')>=' → logprob: -11.39832878112793
    7. '+' → logprob: -12.89832878112793
    8. '   ' → logprob: -13.02332878112793
    9. '*' → logprob: -13.64832878112793
    10. ' <' → logprob: -13.64832878112793

Token 259: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.392202976712724e-06
    2. ' len' → logprob: -12.000006675720215
    3. 'lines' → logprob: -16.1250057220459
    4. '(len' → logprob: -20.0000057220459
    5. 'length' → logprob: -20.2500057220459
    6. '   ' → logprob: -20.6250057220459
    7. '=len' → logprob: -20.7500057220459
    8. '<len' → logprob: -21.3750057220459
    9. '[len' → logprob: -21.8750057220459
    10. '	len' → logprob: -22.1250057220459

Token 260: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00010640407708706334
    2. 'lines' → logprob: -9.250106811523438
    3. ' lines' → logprob: -11.500106811523438
    4. '	lines' → logprob: -16.250106811523438
    5. '_lines' → logprob: -17.750106811523438
    6. 'Lines' → logprob: -18.125106811523438
    7. '.lines' → logprob: -18.250106811523438
    8. 's' → logprob: -21.500106811523438
    9. '-lines' → logprob: -21.875106811523438
    10. '```' → logprob: -22.125106811523438

Token 261: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6151816844940186
    2. ':' → logprob: -1.3651816844940186
    3. ':
' → logprob: -2.6151816844940186
    4. '):
' → logprob: -2.8651816844940186
    5. '       ' → logprob: -3.3651816844940186
    6. ')' → logprob: -3.8651816844940186
    7. '):' → logprob: -4.740181922912598
    8. ' and' → logprob: -5.740181922912598
    9. '   ' → logprob: -5.740181922912598
    10. '<|end|>' → logprob: -6.990181922912598

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003448792558629066
    2. '       ' → logprob: -8.625345230102539
    3. '   ' → logprob: -9.125345230102539
    4. 'break' → logprob: -10.750345230102539
    5. ' break' → logprob: -10.875345230102539
    6. '```' → logprob: -12.375345230102539
    7. ' ' → logprob: -13.250345230102539
    8. ':' → logprob: -13.625345230102539
    9. '<|end|>' → logprob: -13.625345230102539
    10. ':
' → logprob: -13.750345230102539

Token 263: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6267399191856384
    2. '       ' → logprob: -1.3767399787902832
    3. '           ' → logprob: -1.7517399787902832
    4. ' break' → logprob: -3.751739978790283
    5. 'return' → logprob: -4.251739978790283
    6. '   ' → logprob: -6.501739978790283
    7. '	break' → logprob: -8.001739501953125
    8. ' return' → logprob: -8.751739501953125
    9. '```' → logprob: -10.251739501953125
    10. ' ' → logprob: -10.751739501953125

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035113340709358454
    2. '<|end|>' → logprob: -6.003511428833008
    3. '   ' → logprob: -7.378511428833008
    4. '        
' → logprob: -8.878511428833008
    5. '<|end|>' → logprob: -10.128511428833008
    6. '           ' → logprob: -10.128511428833008
    7. ',' → logprob: -10.253511428833008
    8. ')' → logprob: -11.003511428833008
    9. ' ' → logprob: -11.003511428833008
    10. '      ' → logprob: -11.378511428833008

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003211342031136155
    2. '   ' → logprob: -6.253211498260498
    3. '<|end|>' → logprob: -6.878211498260498
    4. '[' → logprob: -9.87821102142334
    5. '```' → logprob: -10.12821102142334
    6. '<|end|>' → logprob: -10.62821102142334
    7. '        
' → logprob: -10.75321102142334
    8. '[i' → logprob: -10.87821102142334
    9. '	' → logprob: -11.25321102142334
    10. ':' → logprob: -11.25321102142334

Token 266: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4185098707675934
    2. '       ' → logprob: -2.4185099601745605
    3. ' n' → logprob: -2.4185099601745605
    4. 'k' → logprob: -3.1685099601745605
    5. '   ' → logprob: -3.4185099601745605
    6. 't' → logprob: -3.7935099601745605
    7. 'num' → logprob: -4.0435099601745605
    8. 'line' → logprob: -4.1685099601745605
    9. ' k' → logprob: -4.5435099601745605
    10. ' line' → logprob: -4.7935099601745605

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1604059934616089
    2. '=' → logprob: -1.9104059934616089
    3. '=int' → logprob: -9.660406112670898
    4. '   ' → logprob: -9.785406112670898
    5. ')' → logprob: -10.160406112670898
    6. ' ' → logprob: -12.660406112670898
    7. '=line' → logprob: -12.660406112670898
    8. '    ' → logprob: -13.035406112670898
    9. ' +=' → logprob: -13.410406112670898
    10. '  ' → logprob: -13.535406112670898

Token 268: ' lines' (ID: 8698)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022422909736633
    2. ' int' → logprob: -1.910224199295044
    3. '=int' → logprob: -17.03522491455078
    4. '[int' → logprob: -19.53522491455078
    5. '(int' → logprob: -19.66022491455078
    6. ' ' → logprob: -19.91022491455078
    7. '	int' → logprob: -20.53522491455078
    8. '<int' → logprob: -20.78522491455078
    9. 'len' → logprob: -21.03522491455078
    10. '   ' → logprob: -21.41022491455078

Token 269: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.375000953674316
    3. '```' → logprob: -14.625000953674316
    4. ' [' → logprob: -16.750001907348633
    5. '[n' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '\[' → logprob: -17.250001907348633
    8. '[I' → logprob: -17.750001907348633
    9. 'i' → logprob: -18.625001907348633
    10. '[int' → logprob: -18.625001907348633

Token 270: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7060220241546631
    2. '].' → logprob: -0.7060220241546631
    3. ']
' → logprob: -5.081022262573242
    4. '.strip' → logprob: -5.331022262573242
    5. ']+' → logprob: -7.331022262573242
    6. '])' → logprob: -7.331022262573242
    7. '.split' → logprob: -9.206022262573242
    8. ']int' → logprob: -9.956022262573242
    9. '.readline' → logprob: -10.081022262573242
    10. ')' → logprob: -10.456022262573242

Token 271: '       ' (ID: 309)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -1.017893671989441
    2. '<|end|>' → logprob: -1.017893671989441
    3. '       ' → logprob: -2.5178937911987305
    4. '
' → logprob: -2.5178937911987305
    5. '<|end|>' → logprob: -4.0178937911987305
    6. '        
' → logprob: -4.1428937911987305
    7. '```' → logprob: -4.2678937911987305
    8. '\n' → logprob: -4.5178937911987305
    9. ' =' → logprob: -4.6428937911987305
    10. '[i' → logprob: -4.6428937911987305

Token 272: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10030566155910492
    2. '=' → logprob: -3.1003055572509766
    3. '=i' → logprob: -4.100305557250977
    4. '=int' → logprob: -4.725305557250977
    5. 'i' (adapté à ' i') → logprob: -4.975305557250977
    6. ' i' → logprob: -5.100305557250977
    7. '       ' → logprob: -5.475305557250977
    8. '[i' → logprob: -5.850305557250977
    9. '
' → logprob: -6.225305557250977
    10. ' 
' → logprob: -7.600305557250977

Token 273: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06210056319832802
    2. ' +=' → logprob: -2.812100648880005
    3. '=' → logprob: -9.187100410461426
    4. '+' → logprob: -10.562100410461426
    5. ' =' → logprob: -12.687100410461426
    6. ']+=' → logprob: -14.312100410461426
    7. '+='' → logprob: -15.187100410461426
    8. '+="' → logprob: -15.437100410461426
    9. '```' → logprob: -15.812100410461426
    10. '=i' → logprob: -16.312101364135742

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -19.375709533691406
    4. 'int' → logprob: -21.625709533691406
    5. ' ' → logprob: -21.625709533691406
    6. '１' → logprob: -22.125709533691406
    7. '`' → logprob: -23.125709533691406
    8. '   ' → logprob: -24.125709533691406
    9. '``' → logprob: -24.250709533691406
    10. '
' → logprob: -24.500709533691406

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -21.375
    4. 'int' → logprob: -23.375
    5. '１' → logprob: -24.25
    6. '
' → logprob: -24.375
    7. '   ' → logprob: -24.75
    8. '``' → logprob: -25.375
    9. '`' → logprob: -25.5
    10. '0' → logprob: -26.0

Token 276: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03615061938762665
    2. 'if' → logprob: -5.0361504554748535
    3. '<|end|>' → logprob: -5.0361504554748535
    4. ' if' → logprob: -5.1611504554748535
    5. '```' → logprob: -5.2861504554748535
    6. ' =' → logprob: -5.6611504554748535
    7. '        
' → logprob: -5.9111504554748535
    8. '=' → logprob: -5.9111504554748535
    9. '
' → logprob: -6.7861504554748535
    10. '  
' → logprob: -8.536150932312012

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03664996102452278
    2. ' if' → logprob: -4.53665018081665
    3. '<|end|>' → logprob: -4.78665018081665
    4. 'if' → logprob: -5.28665018081665
    5. '        
' → logprob: -5.66165018081665
    6. 'n' → logprob: -6.28665018081665
    7. '```' → logprob: -6.41165018081665
    8. ' =' → logprob: -6.78665018081665
    9. '   ' → logprob: -7.28665018081665
    10. '=' → logprob: -7.28665018081665

Token 278: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0031042734626680613
    2. ' if' → logprob: -6.253104209899902
    3. 'n' → logprob: -6.753104209899902
    4. 'try' → logprob: -12.128104209899902
    5. '       ' → logprob: -13.503104209899902
    6. ' n' → logprob: -14.503104209899902
    7. 'num' → logprob: -15.003104209899902
    8. '```' → logprob: -16.75310516357422
    9. '
' → logprob: -17.87810516357422
    10. '   ' → logprob: -18.62810516357422

Token 279: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4987722933292389
    2. 'n' → logprob: -1.2487722635269165
    3. ' not' → logprob: -2.248772382736206
    4. 'not' → logprob: -7.998772144317627
    5. 'n't' → logprob: -13.373772621154785
    6. ' ' → logprob: -13.748772621154785
    7. '	n' → logprob: -15.623772621154785
    8. ' n't' → logprob: -17.49877166748047
    9. '   ' → logprob: -17.87377166748047
    10. '0' → logprob: -17.87377166748047

Token 280: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020561860874295235
    2. '==' → logprob: -3.895561933517456
    3. '.strip' → logprob: -11.770562171936035
    4. '=' → logprob: -12.145562171936035
    5. ' =' → logprob: -12.645562171936035
    6. ' ' → logprob: -13.270562171936035
    7. ' ===' → logprob: -15.020562171936035
    8. '()==' → logprob: -15.145562171936035
    9. '=='' → logprob: -15.270562171936035
    10. '===' → logprob: -15.520562171936035

Token 281: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00015335931675508618
    2. '"' → logprob: -9.125153541564941
    3. '0' → logprob: -10.625153541564941
    4. ' '' → logprob: -10.875153541564941
    5. '''' → logprob: -14.000153541564941
    6. ' ' → logprob: -15.250153541564941
    7. '`' → logprob: -16.750152587890625
    8. '   ' → logprob: -16.875152587890625
    9. ''O' → logprob: -18.375152587890625
    10. ''''' → logprob: -18.500152587890625

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006283254479058087
    2. ''' → logprob: -7.375628471374512
    3. '''' → logprob: -14.250628471374512
    4. ' ' → logprob: -14.625628471374512
    5. '':' → logprob: -14.625628471374512
    6. '"' → logprob: -16.875627517700195
    7. '':
' → logprob: -16.875627517700195
    8. '```' → logprob: -17.750627517700195
    9. '\n' → logprob: -18.625627517700195
    10. '')' → logprob: -18.750627517700195

Token 283: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.5282877683639526
    2. '':' → logprob: -0.9032877683639526
    3. ''' → logprob: -5.778287887573242
    4. '\n' → logprob: -6.403287887573242
    5. '':
' → logprob: -8.278287887573242
    6. ''):
' → logprob: -9.903287887573242
    7. ':' → logprob: -10.278287887573242
    8. ':
' → logprob: -10.528287887573242
    9. '<|end|>' → logprob: -12.403287887573242
    10. '':

' → logprob: -12.653287887573242

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.166338137816638e-05
    2. '       ' → logprob: -11.375031471252441
    3. '		' → logprob: -11.500031471252441
    4. '          ' → logprob: -13.125031471252441
    5. '	       ' → logprob: -13.250031471252441
    6. '   ' → logprob: -13.375031471252441
    7. ' break' → logprob: -13.750031471252441
    8. '<|end|>' → logprob: -14.125031471252441
    9. '               ' → logprob: -14.375031471252441
    10. '	   ' → logprob: -14.750031471252441

Token 285: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.515180230140686
    2. 'break' (adapté à ' break') → logprob: -1.015180230140686
    3. '           ' → logprob: -3.2651801109313965
    4. '       ' → logprob: -6.3901801109313965
    5. 'return' → logprob: -8.390180587768555
    6. '	break' → logprob: -9.265180587768555
    7. ' return' → logprob: -10.265180587768555
    8. '               ' → logprob: -10.265180587768555
    9. '   ' → logprob: -12.390180587768555
    10. '```' → logprob: -12.765180587768555

Token 286: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001745392568409443
    2. '<|end|>' → logprob: -6.876745223999023
    3. 'n' → logprob: -8.001745223999023
    4. '	' → logprob: -9.251745223999023
    5. '        
' → logprob: -9.376745223999023
    6. ' n' → logprob: -10.126745223999023
    7. '   ' → logprob: -10.501745223999023
    8. '	n' → logprob: -10.626745223999023
    9. '​' → logprob: -10.876745223999023
    10. '```' → logprob: -11.251745223999023

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01027456670999527
    2. 'n' → logprob: -4.760274410247803
    3. '```' → logprob: -7.010274410247803
    4. ' n' → logprob: -7.510274410247803
    5. '   ' → logprob: -9.385274887084961
    6. '<|end|>' → logprob: -10.010274887084961
    7. '        
' → logprob: -11.385274887084961
    8. '	n' → logprob: -11.635274887084961
    9. '           ' → logprob: -12.135274887084961
    10. 'num' → logprob: -12.260274887084961

Token 288: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16061048209667206
    2. 'n' (adapté à ' n') → logprob: -1.9106104373931885
    3. '       ' → logprob: -7.910610675811768
    4. '	n' → logprob: -11.91061019897461
    5. '```' → logprob: -12.16061019897461
    6. 'num' → logprob: -13.28561019897461
    7. 'count' → logprob: -13.66061019897461
    8. ' num' → logprob: -13.91061019897461
    9. ',n' → logprob: -14.16061019897461
    10. '   ' → logprob: -14.28561019897461

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2015431523323059
    2. ' =' → logprob: -1.7015430927276611
    3. '=int' → logprob: -8.951542854309082
    4. 'int' → logprob: -15.451542854309082
    5. '```' → logprob: -17.4515438079834
    6. '=n' → logprob: -17.5765438079834
    7. '＝' → logprob: -17.8265438079834
    8. ')' → logprob: -17.9515438079834
    9. '_int' → logprob: -18.3265438079834
    10. 'n' → logprob: -18.8265438079834

Token 290: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007099286303855479
    2. ' int' → logprob: -7.2507100105285645
    3. '=int' → logprob: -22.250709533691406
    4. '<int' → logprob: -22.375709533691406
    5. '	int' → logprob: -22.500709533691406
    6. '[int' → logprob: -23.125709533691406
    7. '(int' → logprob: -24.375709533691406
    8. '   ' → logprob: -24.500709533691406
    9. '```' → logprob: -24.625709533691406
    10. ':int' → logprob: -24.625709533691406

Token 291: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005308346822857857
    2. '(lines' → logprob: -5.255308151245117
    3. 'n' → logprob: -9.630308151245117
    4. 'lines' → logprob: -12.005308151245117
    5. '(' → logprob: -13.255308151245117
    6. ' lines' → logprob: -14.630308151245117
    7. '```' → logprob: -15.880308151245117
    8. ' n' → logprob: -15.880308151245117
    9. '[n' → logprob: -17.005308151245117
    10. '`' → logprob: -17.130308151245117

Token 292: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.249780638725497e-05
    2. '<|end|>' → logprob: -11.000032424926758
    3. ')
' → logprob: -11.750032424926758
    4. '       ' → logprob: -12.250032424926758
    5. ' )' → logprob: -13.500032424926758
    6. '<|end|>' → logprob: -14.250032424926758
    7. '`)' → logprob: -15.750032424926758
    8. '')' → logprob: -15.750032424926758
    9. '   ' → logprob: -16.000032424926758
    10. '))' → logprob: -16.500032424926758

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0883132591843605
    2. 'words' → logprob: -2.588313341140747
    3. ' words' → logprob: -5.588313102722168
    4. '```' → logprob: -5.713313102722168
    5. '   ' → logprob: -6.338313102722168
    6. '<|end|>' → logprob: -8.713313102722168
    7. '(words' → logprob: -9.088313102722168
    8. '        
' → logprob: -9.838313102722168
    9. 'lines' → logprob: -10.213313102722168
    10. '_words' → logprob: -10.463313102722168

Token 294: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' (adapté à ' words') → logprob: -0.06342701613903046
    2. ' words' → logprob: -2.813426971435547
    3. '       ' → logprob: -6.563426971435547
    4. '```' → logprob: -10.563426971435547
    5. '(words' → logprob: -11.688426971435547
    6. '   ' → logprob: -11.938426971435547
    7. '_words' → logprob: -12.813426971435547
    8. '.words' → logprob: -12.938426971435547
    9. '        
' → logprob: -14.938426971435547
    10. '``' → logprob: -15.063426971435547

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146772265434265
    2. '=' → logprob: -1.701467752456665
    3. '   ' → logprob: -10.576467514038086
    4. '=[]' → logprob: -10.951467514038086
    5. '[' → logprob: -12.576467514038086
    6. ' =[' → logprob: -13.701467514038086
    7. ',' → logprob: -13.701467514038086
    8. 's' → logprob: -13.951467514038086
    9. '[]' → logprob: -14.076467514038086
    10. ' ' → logprob: -14.576467514038086

Token 296: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4750857353210449
    2. ' lines' → logprob: -0.9750857353210449
    3. '[]' → logprob: -7.600085735321045
    4. '[' → logprob: -7.850085735321045
    5. '(lines' → logprob: -9.600086212158203
    6. ' [' → logprob: -10.725086212158203
    7. ' []' → logprob: -11.350086212158203
    8. '[line' → logprob: -12.100086212158203
    9. '[]
' → logprob: -12.225086212158203
    10. '	lines' → logprob: -12.600086212158203

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.625000953674316
    3. 'i' → logprob: -16.5
    4. '[' → logprob: -16.5
    5. '   ' → logprob: -17.0
    6. '[
' → logprob: -17.125
    7. ' [' → logprob: -17.75
    8. '[j' → logprob: -18.0
    9. '[start' → logprob: -19.25
    10. '[I' → logprob: -19.375

Token 298: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.0001049736310960725
    2. ' :' → logprob: -9.750104904174805
    3. ':' → logprob: -10.250104904174805
    4. '[i' → logprob: -12.250104904174805
    5. '   ' → logprob: -13.250104904174805
    6. ';i' → logprob: -13.500104904174805
    7. ',i' → logprob: -13.625104904174805
    8. 'i' → logprob: -13.750104904174805
    9. '(i' → logprob: -15.000104904174805
    10. ' i' → logprob: -16.000104904174805

Token 299: '+n' (ID: 87683)
  Prédit: ':i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.4415184259414673
    2. 'i' → logprob: -1.4415184259414673
    3. '+i' → logprob: -2.1915183067321777
    4. '+n' → logprob: -6.191518306732178
    5. '+' → logprob: -6.316518306732178
    6. ',i' → logprob: -6.691518306732178
    7. ' i' → logprob: -7.066518306732178
    8. ' +' → logprob: -7.191518306732178
    9. '   ' → logprob: -7.816518306732178
    10. 'n' → logprob: -7.816518306732178

Token 300: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001070919563062489
    2. ']
' → logprob: -6.876070976257324
    3. ' ]' → logprob: -10.876070976257324
    4. '()]' → logprob: -12.251070976257324
    5. '<|end|>' → logprob: -12.501070976257324
    6. '])' → logprob: -12.876070976257324
    7. ']()' → logprob: -13.501070976257324
    8. '```' → logprob: -14.126070976257324
    9. ']
' → logprob: -14.376070976257324
    10. ')]' → logprob: -14.501070976257324

Token 301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3373278081417084
    2. 'i' → logprob: -1.4623278379440308
    3. '
' → logprob: -3.587327718734741
    4. '```' → logprob: -4.21232795715332
    5. '   ' → logprob: -5.08732795715332
    6. ' i' → logprob: -6.33732795715332
    7. '	i' → logprob: -6.46232795715332
    8. '<|end|>' → logprob: -7.33732795715332
    9. '[i' → logprob: -7.46232795715332
    10. '``' → logprob: -8.08732795715332

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.001875086221843958
    2. '       ' → logprob: -6.751874923706055
    3. ' i' → logprob: -7.626874923706055
    4. '   ' → logprob: -8.501874923706055
    5. '	i' → logprob: -12.501874923706055
    6. '```' → logprob: -12.501874923706055
    7. '
' → logprob: -12.626874923706055
    8. ' ' → logprob: -14.126874923706055
    9. '<|end|>' → logprob: -14.501874923706055
    10. '  ' → logprob: -14.626874923706055

Token 303: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006725437473505735
    2. ' +=' → logprob: -5.006725311279297
    3. '+' → logprob: -11.881725311279297
    4. '```' → logprob: -13.256725311279297
    5. ']+=' → logprob: -14.381725311279297
    6. '=' → logprob: -15.006725311279297
    7. '+='' → logprob: -15.631725311279297
    8. '   ' → logprob: -15.756725311279297
    9. '+="' → logprob: -16.006725311279297
    10. '+=(' → logprob: -16.006725311279297

Token 304: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2664456789934775e-06
    2. ' n' → logprob: -13.625000953674316
    3. 'len' → logprob: -19.250001907348633
    4. '	n' → logprob: -19.250001907348633
    5. '+n' → logprob: -19.875001907348633
    6. '10' → logprob: -20.250001907348633
    7. '(n' → logprob: -20.625001907348633
    8. '$n' → logprob: -21.125001907348633
    9. '_n' → logprob: -23.000001907348633
    10. '0' → logprob: -23.250001907348633

Token 305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032332904636859894
    2. 'count' → logprob: -4.657332897186279
    3. '```' → logprob: -4.657332897186279
    4. '<|end|>' → logprob: -5.032332897186279
    5. 'words' → logprob: -6.282332897186279
    6. '        
' → logprob: -6.532332897186279
    7. '   ' → logprob: -6.657332897186279
    8. 'tokens' → logprob: -8.032333374023438
    9. 'result' → logprob: -8.657333374023438
    10. ',' → logprob: -8.782333374023438

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045841265469789505
    2. '```' → logprob: -3.9208412170410156
    3. 'count' → logprob: -4.420841217041016
    4. 'result' → logprob: -4.920841217041016
    5. 'words' → logprob: -5.670841217041016
    6. 'counts' → logprob: -7.670841217041016
    7. '   ' → logprob: -7.670841217041016
    8. ' result' → logprob: -8.420841217041016
    9. '<|end|>' → logprob: -8.420841217041016
    10. '``' → logprob: -9.170841217041016

Token 307: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03169688954949379
    2. 'result' → logprob: -3.5316967964172363
    3. 'count' → logprob: -6.281696796417236
    4. 'answer' → logprob: -10.031697273254395
    5. ' print' → logprob: -11.156697273254395
    6. 'res' → logprob: -12.281697273254395
    7. '```' → logprob: -12.531697273254395
    8. '       ' → logprob: -12.531697273254395
    9. ' result' → logprob: -13.281697273254395
    10. 'results' → logprob: -14.281697273254395

Token 308: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0017082560807466507
    2. '(' → logprob: -6.876708030700684
    3. '(count' → logprob: -7.376708030700684
    4. 'solve' → logprob: -10.376708030700684
    5. '(sum' → logprob: -11.751708030700684
    6. '()' → logprob: -12.626708030700684
    7. '(len' → logprob: -13.376708030700684
    8. '(solution' → logprob: -13.501708030700684
    9. '(f' → logprob: -13.751708030700684
    10. '(sol' → logprob: -14.001708030700684

Token 309: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -6.704273118884885e-07
    2. 'solve' → logprob: -14.375000953674316
    3. 'ol' → logprob: -17.625
    4. 'ove' → logprob: -17.875
    5. 'olv' → logprob: -18.875
    6. 'olver' → logprob: -19.25
    7. 'OLVE' → logprob: -19.25
    8. 'erve' → logprob: -20.875
    9. 'ole' → logprob: -21.875
    10. '_' → logprob: -21.875

Token 310: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: 0.0
    2. '_code' → logprob: -18.5
    3. '_cases' → logprob: -18.5
    4. '_' → logprob: -18.875
    5. '_word' → logprob: -19.0
    6. 'case' → logprob: -19.125
    7. '(words' → logprob: -19.75
    8. '_count' → logprob: -20.0
    9. '_CASE' → logprob: -20.25
    10. '_c' → logprob: -20.25

Token 311: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.500000953674316
    3. ' (' → logprob: -14.750000953674316
    4. ')(' → logprob: -17.000001907348633
    5. '(' → logprob: -17.375001907348633
    6. 'words' → logprob: -17.500001907348633
    7. '(word' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '(lines' → logprob: -18.875001907348633
    10. ' words' → logprob: -19.250001907348633

Token 312: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10020958632230759
    2. ')' → logprob: -2.3502094745635986
    3. '())' → logprob: -13.97520923614502
    4. ')))' → logprob: -14.47520923614502
    5. '()))' → logprob: -14.47520923614502
    6. '))
' → logprob: -14.60020923614502
    7. '   ' → logprob: -15.47520923614502
    8. ' ))' → logprob: -15.85020923614502
    9. ')
' → logprob: -16.225210189819336
    10. '()' → logprob: -17.225210189819336

Token 313: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001215356052853167
    2. '```' → logprob: -6.75121545791626
    3. ' if' → logprob: -10.126214981079102
    4. '
' → logprob: -13.376214981079102
    5. '``' → logprob: -13.376214981079102
    6. 'main' → logprob: -13.626214981079102
    7. 'print' → logprob: -15.251214981079102
    8. 'for' → logprob: -16.0012149810791
    9. '\' → logprob: -16.1262149810791
    10. '#' → logprob: -16.1262149810791

Token 314: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1602308303117752
    2. '__' → logprob: -1.9102308750152588
    3. 'name' → logprob: -12.28523063659668
    4. '_name' → logprob: -14.16023063659668
    5. ' ' → logprob: -15.03523063659668
    6. '/__' → logprob: -15.16023063659668
    7. '```' → logprob: -15.28523063659668
    8. ' name' → logprob: -15.91023063659668
    9. 'Name' → logprob: -16.16023063659668
    10. '(__' → logprob: -16.28523063659668

Token 315: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04676952213048935
    2. ' ==' → logprob: -3.421769618988037
    3. '==' → logprob: -4.421769618988037
    4. ' __' → logprob: -7.171769618988037
    5. 'name' → logprob: -8.796769142150879
    6. '=="' → logprob: -10.171769142150879
    7. '.__' → logprob: -10.671769142150879
    8. '__.__' → logprob: -10.921769142150879
    9. '=='' → logprob: -11.921769142150879
    10. '[' → logprob: -12.546769142150879

Token 316: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00018065694894175977
    2. '__.__' → logprob: -9.1251802444458
    3. '==' → logprob: -9.7501802444458
    4. '__.' → logprob: -12.5001802444458
    5. '=="' → logprob: -12.6251802444458
    6. ' ==' → logprob: -12.6251802444458
    7. '__["' → logprob: -13.5001802444458
    8. '__
' → logprob: -15.2501802444458
    9. '__[' → logprob: -15.2501802444458
    10. '__":
' → logprob: -15.5001802444458

Token 317: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5422025322914124
    2. '__' → logprob: -1.2922024726867676
    3. ' ==' → logprob: -2.0422024726867676
    4. '=='' → logprob: -4.792202472686768
    5. '=="' → logprob: -5.167202472686768
    6. '===' → logprob: -10.417202949523926
    7. '=' → logprob: -10.792202949523926
    8. '_' → logprob: -11.292202949523926
    9. '__.__' → logprob: -11.292202949523926
    10. '___' → logprob: -11.917202949523926

Token 318: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10032592713832855
    2. ''' → logprob: -2.3503258228302
    3. '__' → logprob: -9.100325584411621
    4. ' "__' → logprob: -12.100325584411621
    5. '"name' → logprob: -14.850325584411621
    6. ' '__' → logprob: -14.850325584411621
    7. '"user' → logprob: -15.225325584411621
    8. ''s' → logprob: -15.350325584411621
    9. ''name' → logprob: -15.725325584411621
    10. '`' → logprob: -16.100326538085938

Token 319: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0001916200271807611
    2. '__' → logprob: -8.750191688537598
    3. 'name' → logprob: -10.625191688537598
    4. 'm' → logprob: -12.125191688537598
    5. '_main' → logprob: -13.250191688537598
    6. '__':
' → logprob: -13.750191688537598
    7. ' main' → logprob: -14.875191688537598
    8. 'built' → logprob: -17.37519073486328
    9. '(main' → logprob: -17.50019073486328
    10. '('__' → logprob: -18.12519073486328

Token 320: '__':
' (ID: 39314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6031816005706787
    2. '__':
' → logprob: -1.1031816005706787
    3. '__' → logprob: -2.4781816005706787
    4. '__:' → logprob: -3.7281816005706787
    5. '':' → logprob: -5.603181838989258
    6. '__":
' → logprob: -5.853181838989258
    7. '():
' → logprob: -5.853181838989258
    8. ':
' → logprob: -6.978181838989258
    9. '():' → logprob: -7.103181838989258
    10. '_' → logprob: -7.853181838989258

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8873459696769714
    2. 'solve' → logprob: -1.5123460292816162
    3. 'main' → logprob: -1.6373460292816162
    4. ' solve' → logprob: -2.387346029281616
    5. ' main' → logprob: -2.512346029281616
    6. '	main' → logprob: -8.262346267700195
    7. '.solve' → logprob: -10.387346267700195
    8. '__' → logprob: -10.762346267700195
    9. '_main' → logprob: -11.012346267700195
    10. '(main' → logprob: -11.012346267700195

Token 322: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.842555426876061e-06
    2. ' main' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.6250057220459
    4. '	main' → logprob: -18.7500057220459
    5. 'solve' → logprob: -21.7500057220459
    6. '(main' → logprob: -23.2500057220459
    7. '_main' → logprob: -23.3750057220459
    8. 'import' → logprob: -23.5000057220459
    9. '.main' → logprob: -24.5000057220459
    10. ' ' → logprob: -26.1250057220459

Token 323: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 321
Tokens correctement prédits (1ère position, stricte): 151
Tokens correctement prédits (1ère position, avec adaptation): 166
Tokens correctement prédits (top 10): 293
Précision stricte (1ère position): 47.04%
Précision adaptée (1ère position): 51.71%
Précision (top 10): 91.28%
================================================================================
