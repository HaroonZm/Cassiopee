================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Token:
    def __init__(self, value):
        self.value = value

class NumberToken(Token):
    def __init__(self, value: int):
        super().__init__(value)

class OperatorToken(Token):
    def __init__(self, symbol: str):
        if symbol not in ['+', '-', '*', '/', '=']:
            raise ValueError(f"Invalid operator: {symbol}")
        super().__init__(symbol)

class TokenStream:
    def __init__(self):
        self._tokens = []
        self._index = 0

    def append(self, token: Token):
        self._tokens.append(token)

    def next(self) -> Token:
        if self._index >= len(self._tokens):
            raise IndexError("Read past end of tokens")
        token = self._tokens[self._index]
        self._index += 1
        return token

    def has_next(self) -> bool:
        return self._index < len(self._tokens)

class CalculatorState:
    def __init__(self):
        self.current_value = None
        self.pending_operator = None

    def reset(self):
        self.current_value = None
        self.pending_operator = None

class CalculatorEngine:
    def __init__(self):
        self.state = CalculatorState()

    def apply_operation(self, left: int, operator: str, right: int) -> int:
        if operator == '+':
            return left + right
        elif operator == '-':
            return left - right
        elif operator == '*':
            return left * right
        elif operator == '/':
            # Integer division with truncation toward zero
            if right == 0:
                raise ZeroDivisionError("Division by zero")
            # Python's int division truncates towards negative, need truncation toward zero
            sign = (left < 0) ^ (right < 0)
            quotient = abs(left) // abs(right)
            return -quotient if sign else quotient
        else:
            raise ValueError(f"Unknown operator: {operator}")

    def process_tokens(self, token_stream: TokenStream) -> int:
        # Initialize the current value with the first number
        if not token_stream.has_next():
            raise ValueError("Empty input stream")
        first_token = token_stream.next()
        if not isinstance(first_token, NumberToken):
            raise ValueError("First token must be a number")
        self.state.current_value = first_token.value
        
        while token_stream.has_next():
            op_token = token_stream.next()
            if not isinstance(op_token, OperatorToken):
                raise ValueError("Expected operator token")

            if op_token.value == '=':
                # End of expression
                return self.state.current_value

            num_token = token_stream.next()
            if not isinstance(num_token, NumberToken):
                raise ValueError("Expected number token after operator")

            # Apply operation immediately (no precedence)
            self.state.current_value = self.apply_operation(self.state.current_value, op_token.value, num_token.value)

        raise ValueError("Input does not end with '=' operator")

class InputParser:
    def __init__(self, lines):
        self.lines = lines

    def parse(self) -> TokenStream:
        tokens = TokenStream()
        # We expect alternating lines number/operator starting with number.
        expected_number = True
        for line in self.lines:
            stripped = line.strip()
            if expected_number:
                try:
                    val = int(stripped)
                except ValueError:
                    raise ValueError(f"Expected number but got: {stripped}")
                tokens.append(NumberToken(val))
                expected_number = False
            else:
                if stripped not in ['+', '-', '*', '/', '=']:
                    raise ValueError(f"Expected operator but got: {stripped}")
                tokens.append(OperatorToken(stripped))
                expected_number = True
        if expected_number:
            raise ValueError("Expression ended unexpectedly with operator (no trailing number)")
        return tokens

class IOController:
    def __init__(self, input_lines):
        self.input_lines = input_lines

    def execute(self):
        parser = InputParser(self.input_lines)
        tokens = parser.parse()
        engine = CalculatorEngine()
        result = engine.process_tokens(tokens)
        # Output with newline as requested
        print(result)

if __name__ == '__main__':
    import sys
    lines = [line for line in sys.stdin if line.strip() != '']
    io_controller = IOController(lines)
    io_controller.execute()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Token' (ID: 17951)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27336370944976807
    2. ':' → logprob: -1.523363709449768
    3. '.' → logprob: -4.0233635902404785
    4. '```' → logprob: -6.6483635902404785
    5. ''' → logprob: -7.2733635902404785
    6. '\' → logprob: -8.773364067077637
    7. '[' → logprob: -8.773364067077637
    8. ' (' → logprob: -8.898364067077637
    9. '():' → logprob: -9.148364067077637
    10. '(space' → logprob: -9.273364067077637

Token 4: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4281004071235657
    2. '   ' → logprob: -1.428100347518921
    3. 'def' (adapté à ' def') → logprob: -3.303100347518921
    4. ':' → logprob: -4.0531005859375
    5. '_' → logprob: -4.0531005859375
    6. ' ' → logprob: -4.0531005859375
    7. '```' → logprob: -5.4281005859375
    8. ' def' → logprob: -5.9281005859375
    9. '    ' → logprob: -6.0531005859375
    10. ''' → logprob: -6.1781005859375

Token 5: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3539380431175232
    2. ' ' → logprob: -1.478938102722168
    3. '__' → logprob: -2.978938102722168
    4. ' ' → logprob: -4.103938102722168
    5. ' init' → logprob: -6.853938102722168
    6. '    ' → logprob: -7.978938102722168
    7. ' def' → logprob: -8.228938102722168
    8. ' tokenize' → logprob: -8.853938102722168
    9. '  ' → logprob: -9.103938102722168
    10. ' ​' → logprob: -9.228938102722168

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.981667537620524e-06
    2. ' init' → logprob: -13.875001907348633
    3. 'i' → logprob: -14.250001907348633
    4. 'ini' → logprob: -15.250001907348633
    5. 'in' → logprob: -16.000001907348633
    6. '_init' → logprob: -16.875001907348633
    7. '	init' → logprob: -19.000001907348633
    8. 'int' → logprob: -19.750001907348633
    9. 'inite' → logprob: -20.000001907348633
    10. 'innit' → logprob: -20.750001907348633

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1038999855518341
    2. '__' → logprob: -2.3538999557495117
    3. '(' → logprob: -6.228899955749512
    4. '__(
' → logprob: -6.853899955749512
    5. '_' → logprob: -7.603899955749512
    6. '__((' → logprob: -9.853899955749512
    7. '_(' → logprob: -10.228899955749512
    8. '__('' → logprob: -10.728899955749512
    9. '(self' → logprob: -10.853899955749512
    10. '__(*' → logprob: -11.603899955749512

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00408884696662426
    2. ' self' → logprob: -5.504088878631592
    3. ')' → logprob: -12.129088401794434
    4. '(self' → logprob: -13.504088401794434
    5. '_self' → logprob: -14.004088401794434
    6. ' ' → logprob: -14.129088401794434
    7. 'token' → logprob: -14.254088401794434
    8. ' )' → logprob: -15.004088401794434
    9. 's' → logprob: -15.129088401794434
    10. '       ' → logprob: -15.879088401794434

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19637174904346466
    2. '(' → logprob: -2.1963717937469482
    3. '_' → logprob: -3.9463717937469482
    4. '.' → logprob: -4.321371555328369
    5. '<|end|>' → logprob: -4.571371555328369
    6. ' ' → logprob: -4.696371555328369
    7. ' )' → logprob: -4.696371555328369
    8. ',' → logprob: -6.696371555328369
    9. ' (' → logprob: -7.071371555328369
    10. 's' → logprob: -7.196371555328369

Token 10: ' value' (ID: 1432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5289825797080994
    2. ' )' → logprob: -1.5289826393127441
    3. ' self' → logprob: -2.153982639312744
    4. ')' → logprob: -2.778982639312744
    5. 's' → logprob: -4.403982639312744
    6. 'token' → logprob: -6.403982639312744
    7. ' token' → logprob: -7.528982639312744
    8. ' ' → logprob: -8.028982162475586
    9. 'space' → logprob: -8.153982162475586
    10. ' s' → logprob: -8.653982162475586

Token 11: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4046783745288849
    2. '):' → logprob: -1.1546783447265625
    3. ',' → logprob: -4.2796783447265625
    4. ':' → logprob: -5.9046783447265625
    5. '.' → logprob: -7.4046783447265625
    6. '=' → logprob: -9.279678344726562
    7. '_' → logprob: -9.404678344726562
    8. '(' → logprob: -9.779678344726562
    9. '):
' → logprob: -10.279678344726562
    10. ' )' → logprob: -10.654678344726562

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4231855869293213
    2. ' ' → logprob: -1.9231855869293213
    3. '    ' → logprob: -2.1731855869293213
    4. '   ' → logprob: -3.1731855869293213
    5. '_' → logprob: -4.048185348510742
    6. '        ' → logprob: -4.798185348510742
    7. ')' → logprob: -5.923185348510742
    8. '<|end|>' → logprob: -6.048185348510742
    9. '     ' → logprob: -6.173185348510742
    10. '‌' → logprob: -6.423185348510742

Token 13: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4607810080051422
    2. ' self' → logprob: -1.0857809782028198
    3. ' ' → logprob: -3.9607810974121094
    4. '       ' → logprob: -4.710781097412109
    5. '        ' → logprob: -6.585781097412109
    6. 's' → logprob: -6.585781097412109
    7. ' ' → logprob: -8.83578109741211
    8. '   ' → logprob: -9.08578109741211
    9. '_' → logprob: -9.46078109741211
    10. '    ' → logprob: -9.58578109741211

Token 14: '.value' (ID: 4683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0023513841442763805
    2. '.value' → logprob: -6.8773512840271
    3. ' .' → logprob: -7.1273512840271
    4. ' ' → logprob: -7.7523512840271
    5. '.token' → logprob: -10.127351760864258
    6. 'value' → logprob: -11.502351760864258
    7. '.space' → logprob: -12.127351760864258
    8. ' value' → logprob: -12.127351760864258
    9. '_' → logprob: -12.377351760864258
    10. '=' → logprob: -13.002351760864258

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741859436035156
    2. ' =' → logprob: -0.9741859436035156
    3. ' ' → logprob: -9.474185943603516
    4. ' =)' → logprob: -11.599185943603516
    5. ' =
' → logprob: -11.724185943603516
    6. '<|end|>' → logprob: -12.099185943603516
    7. '_' → logprob: -13.724185943603516
    8. ')' → logprob: -14.224185943603516
    9. '.' → logprob: -14.224185943603516
    10. ' is' → logprob: -14.349185943603516

Token 16: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20142698287963867
    2. 'value' → logprob: -1.7014269828796387
    3. '"value' → logprob: -12.076427459716797
    4. ''value' → logprob: -12.701427459716797
    5. ' ' → logprob: -12.951427459716797
    6. '(value' → logprob: -13.326427459716797
    7. '=value' → logprob: -15.326427459716797
    8. ')value' → logprob: -15.451427459716797
    9. '	value' → logprob: -15.951427459716797
    10. '$value' → logprob: -15.951427459716797

Token 17: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06420363485813141
    2. '\n' → logprob: -3.6892037391662598
    3. '\' → logprob: -4.18920373916626
    4. ':' → logprob: -5.06420373916626
    5. '
' → logprob: -5.06420373916626
    6. '.
' → logprob: -6.18920373916626
    7. '' → logprob: -6.81420373916626
    8. ' ' → logprob: -6.81420373916626
    9. '<|end|>' → logprob: -6.93920373916626
    10. '(' → logprob: -7.18920373916626

Token 18: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.042467836290597916
    2. ':' → logprob: -4.042468070983887
    3. '\' → logprob: -4.542468070983887
    4. ',' → logprob: -5.542468070983887
    5. '\n' → logprob: -5.917468070983887
    6. '
' → logprob: -6.667468070983887
    7. '.
' → logprob: -7.292468070983887
    8. '   ' → logprob: -7.292468070983887
    9. '_' → logprob: -7.292468070983887
    10. '(' → logprob: -7.542468070983887

Token 19: ' Number' (ID: 9184)
  Prédit: ' Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Token' → logprob: -0.4385986924171448
    2. ' ' → logprob: -1.0635986328125
    3. ' ' → logprob: -5.5635986328125
    4. ' Space' → logprob: -5.6885986328125
    5. ' User' → logprob: -7.3135986328125
    6. ' space' → logprob: -8.1885986328125
    7. ''' → logprob: -8.1885986328125
    8. 'Token' → logprob: -8.6885986328125
    9. '`' → logprob: -9.0635986328125
    10. ' ​' → logprob: -9.0635986328125

Token 20: 'Token' (ID: 4421)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06220295652747154
    2. ':' → logprob: -2.8122029304504395
    3. '(:' → logprob: -9.437203407287598
    4. '(Token' → logprob: -10.062203407287598
    5. ')' → logprob: -10.312203407287598
    6. '):' → logprob: -10.562203407287598
    7. ' :' → logprob: -11.187203407287598
    8. '():' → logprob: -11.937203407287598
    9. '(T' → logprob: -12.812203407287598
    10. '(object' → logprob: -12.812203407287598

Token 21: '(Token' (ID: 78497)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2257828712463379
    2. ':' → logprob: -1.600782871246338
    3. ' :' → logprob: -8.97578239440918
    4. '(:' → logprob: -9.10078239440918
    5. '(Token' → logprob: -10.22578239440918
    6. '():' → logprob: -11.10078239440918
    7. '(object' → logprob: -11.47578239440918
    8. ')' → logprob: -11.60078239440918
    9. '):' → logprob: -11.85078239440918
    10. ' (' → logprob: -12.22578239440918

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4369058310985565
    2. ')' → logprob: -1.061905860900879
    3. ':' → logprob: -4.811905860900879
    4. ' ):' → logprob: -11.686905860900879
    5. ':)' → logprob: -11.811905860900879
    6. ' )' → logprob: -12.186905860900879
    7. '(' → logprob: -12.686905860900879
    8. ' ' → logprob: -12.811905860900879
    9. '   ' → logprob: -12.936905860900879
    10. '):
' → logprob: -12.936905860900879

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3840509355068207
    2. '    ' → logprob: -1.259050965309143
    3. ' ' → logprob: -3.7590508460998535
    4. '(' → logprob: -4.7590508460998535
    5. ' (' → logprob: -7.8840508460998535
    6. '  ' → logprob: -8.134051322937012
    7. '       ' → logprob: -8.259051322937012
    8. ')' → logprob: -8.384051322937012
    9. ' def' → logprob: -8.384051322937012
    10. '0' → logprob: -8.509051322937012

Token 24: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10934077203273773
    2. '    ' → logprob: -3.3593406677246094
    3. 'def' (adapté à ' def') → logprob: -3.4843406677246094
    4. ' def' → logprob: -3.9843406677246094
    5. ' pass' → logprob: -4.734340667724609
    6. ' ' → logprob: -4.859340667724609
    7. 'pass' → logprob: -6.734340667724609
    8. '       ' → logprob: -7.734340667724609
    9. '  ' → logprob: -7.734340667724609
    10. '(' → logprob: -7.734340667724609

Token 25: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20260527729988098
    2. ' __' → logprob: -1.7026052474975586
    3. '__' → logprob: -7.952605247497559
    4. '_' → logprob: -8.327605247497559
    5. ' _' → logprob: -8.327605247497559
    6. ' init' → logprob: -8.952605247497559
    7. ' ```' → logprob: -10.327605247497559
    8. ' ' → logprob: -10.452605247497559
    9. '  ' → logprob: -10.452605247497559
    10. ' ___' → logprob: -10.702605247497559

Token 26: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.8889261304575484e-06
    2. 'ini' → logprob: -13.625003814697266
    3. ' init' → logprob: -13.625003814697266
    4. 'i' → logprob: -14.000003814697266
    5. 'in' → logprob: -14.500003814697266
    6. 'int' → logprob: -17.000003814697266
    7. ' ' → logprob: -17.375003814697266
    8. '   ' → logprob: -17.625003814697266
    9. '```' → logprob: -18.250003814697266
    10. '	init' → logprob: -18.625003814697266

Token 27: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35955101251602173
    2. '_' → logprob: -2.109550952911377
    3. '__(' → logprob: -2.234550952911377
    4. '__' → logprob: -2.984550952911377
    5. ' (' → logprob: -4.109550952911377
    6. '(self' → logprob: -6.109550952911377
    7. ' ' → logprob: -6.484550952911377
    8. '_(' → logprob: -7.484550952911377
    9. '<|end|>' → logprob: -7.484550952911377
    10. '_space' → logprob: -8.109551429748535

Token 28: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05760541930794716
    2. 'value' → logprob: -3.307605504989624
    3. ' self' → logprob: -4.057605266571045
    4. ' value' → logprob: -6.182605266571045
    5. ' ' → logprob: -12.057605743408203
    6. '   ' → logprob: -12.432605743408203
    7. '       ' → logprob: -13.307605743408203
    8. ')' → logprob: -13.682605743408203
    9. 'se' → logprob: -13.682605743408203
    10. '  ' → logprob: -14.682605743408203

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25430265069007874
    2. ' ,' → logprob: -1.5043026208877563
    3. ',value' → logprob: -6.504302501678467
    4. ' value' → logprob: -7.879302501678467
    5. 'value' → logprob: -7.879302501678467
    6. ' ' → logprob: -9.129302978515625
    7. ' )' → logprob: -12.879302978515625
    8. 'self' → logprob: -13.129302978515625
    9. ' self' → logprob: -14.129302978515625
    10. '  ' → logprob: -14.254302978515625

Token 30: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20143389701843262
    2. 'value' → logprob: -1.7014338970184326
    3. ' ' → logprob: -11.701434135437012
    4. '    ' → logprob: -12.451434135437012
    5. '   ' → logprob: -13.576434135437012
    6. ' number' → logprob: -13.701434135437012
    7. ' val' → logprob: -14.326434135437012
    8. ')value' → logprob: -14.326434135437012
    9. '"value' → logprob: -14.576434135437012
    10. 'v' → logprob: -14.701434135437012

Token 31: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008399325422942638
    2. ',' → logprob: -5.008399486541748
    3. ' ):' → logprob: -7.008399486541748
    4. '       ' → logprob: -8.25839900970459
    5. ':' → logprob: -8.88339900970459
    6. ')' → logprob: -8.88339900970459
    7. '   ' → logprob: -9.13339900970459
    8. '):
' → logprob: -9.38339900970459
    9. ' ,' → logprob: -10.63339900970459
    10. '):
' → logprob: -12.25839900970459

Token 32: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09373121708631516
    2. ' ' → logprob: -2.593731164932251
    3. 'int' → logprob: -4.59373140335083
    4. ' float' → logprob: -5.59373140335083
    5. ' )' → logprob: -7.71873140335083
    6. ' str' → logprob: -8.468730926513672
    7. ')' → logprob: -9.468730926513672
    8. 'float' → logprob: -9.718730926513672
    9. '  ' → logprob: -10.718730926513672
    10. ' in' → logprob: -10.718730926513672

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010725847678259015
    2. ')' → logprob: -7.001072406768799
    3. ' ):' → logprob: -9.376072883605957
    4. '   ' → logprob: -10.376072883605957
    5. '):
' → logprob: -10.626072883605957
    6. ',' → logprob: -11.501072883605957
    7. '       ' → logprob: -12.001072883605957
    8. ':' → logprob: -13.626072883605957
    9. ' ' → logprob: -13.751072883605957
    10. ' )' → logprob: -14.126072883605957

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04341556131839752
    2. ' super' → logprob: -3.2934155464172363
    3. '        ' → logprob: -6.043415546417236
    4. 'super' → logprob: -6.168415546417236
    5. ' ' → logprob: -8.043416023254395
    6. '    ' → logprob: -8.418416023254395
    7. ' 
' → logprob: -9.793416023254395
    8. '        
' → logprob: -9.793416023254395
    9. '   ' → logprob: -9.918416023254395
    10. '      ' → logprob: -9.918416023254395

Token 35: ' super' (ID: 2539)
  Prédit: ' super'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' super' → logprob: -0.04014879837632179
    2. 'super' (adapté à ' super') → logprob: -3.2901487350463867
    3. '       ' → logprob: -6.165148735046387
    4. '        ' → logprob: -14.040148735046387
    5. '	super' → logprob: -14.165148735046387
    6. '_super' → logprob: -14.415148735046387
    7. 'Super' → logprob: -14.790148735046387
    8. ' ' → logprob: -15.790148735046387
    9. '(super' → logprob: -15.790148735046387
    10. '   ' → logprob: -15.915148735046387

Token 36: '().__' (ID: 57377)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5864629149436951
    2. '().__' → logprob: -0.8364629149436951
    3. '()' → logprob: -4.58646297454834
    4. '.' → logprob: -8.46146297454834
    5. '(' → logprob: -10.08646297454834
    6. '().'' → logprob: -11.33646297454834
    7. '```' → logprob: -12.33646297454834
    8. '.__' → logprob: -12.71146297454834
    9. ' .' → logprob: -13.58646297454834
    10. '())' → logprob: -13.83646297454834

Token 37: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.031865715980529785
    2. '__' → logprob: -3.6568655967712402
    3. '_init' → logprob: -5.78186559677124
    4. 'nit' → logprob: -6.03186559677124
    5. '____' → logprob: -11.031866073608398
    6. 't' → logprob: -11.156866073608398
    7. 'it' → logprob: -11.906866073608398
    8. 'int' → logprob: -12.281866073608398
    9. 'def' → logprob: -12.406866073608398
    10. '___' → logprob: -12.531866073608398

Token 38: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.33004873991012573
    2. '(' → logprob: -1.7050487995147705
    3. '__' → logprob: -2.4550487995147705
    4. '__('' → logprob: -4.955048561096191
    5. '__((' → logprob: -5.455048561096191
    6. '__(
' → logprob: -6.705048561096191
    7. '(__' → logprob: -7.830048561096191
    8. '__("' → logprob: -8.705048561096191
    9. ')(' → logprob: -9.205048561096191
    10. '(value' → logprob: -9.830048561096191

Token 39: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -9.627176768844947e-05
    2. ' value' → logprob: -9.250096321105957
    3. ')value' → logprob: -17.25009536743164
    4. 'valu' → logprob: -17.75009536743164
    5. '"value' → logprob: -18.50009536743164
    6. ''value' → logprob: -19.37509536743164
    7. 'val' → logprob: -20.12509536743164
    8. ')' → logprob: -20.12509536743164
    9. 'alue' → logprob: -20.25009536743164
    10. ' ' → logprob: -20.25009536743164

Token 40: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.250003814697266
    3. ' )' → logprob: -13.250003814697266
    4. '       ' → logprob: -15.500003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '))' → logprob: -17.750003814697266
    7. '}' → logprob: -17.750003814697266
    8. ')return' → logprob: -18.000003814697266
    9. ')n' → logprob: -18.000003814697266
    10. ')#' → logprob: -18.375003814697266

Token 41: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10179778933525085
    2. '   ' → logprob: -3.2267978191375732
    3. ' 
' → logprob: -4.476797580718994
    4. 'def' → logprob: -4.476797580718994
    5. ':' → logprob: -4.726797580718994
    6. '    
' → logprob: -5.101797580718994
    7. '<|end|>' → logprob: -5.601797580718994
    8. ')' → logprob: -5.726797580718994
    9. '\n' → logprob: -6.226797580718994
    10. '#' → logprob: -6.351797580718994

Token 42: ' Operator' (ID: 52567)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2163804769515991
    2. ' Plus' → logprob: -1.3413804769515991
    3. ' Operator' → logprob: -1.4663804769515991
    4. ' ' → logprob: -1.9663804769515991
    5. ' Identifier' → logprob: -3.4663805961608887
    6. 'Plus' → logprob: -4.716380596160889
    7. 'Operator' → logprob: -5.216380596160889
    8. ' Space' → logprob: -5.841380596160889
    9. 'plus' → logprob: -5.966380596160889
    10. ' Token' → logprob: -6.091380596160889

Token 43: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -0.0005398084758780897
    2. '(Token' → logprob: -8.625539779663086
    3. '	Token' → logprob: -8.625539779663086
    4. ' Token' → logprob: -9.000539779663086
    5. '<Token' → logprob: -10.250539779663086
    6. 'Tokenizer' → logprob: -11.125539779663086
    7. '(' → logprob: -12.875539779663086
    8. 'T' → logprob: -13.250539779663086
    9. 'To' → logprob: -13.375539779663086
    10. 'Tok' → logprob: -14.750539779663086

Token 44: '(Token' (ID: 78497)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04919447377324104
    2. ':' → logprob: -3.049194574356079
    3. '(:' → logprob: -8.0491943359375
    4. '(Token' → logprob: -8.2991943359375
    5. '(T' → logprob: -11.6741943359375
    6. ' :' → logprob: -12.4241943359375
    7. '(Task' → logprob: -12.7991943359375
    8. '):' → logprob: -12.9241943359375
    9. ')' → logprob: -12.9241943359375
    10. '(
' → logprob: -12.9241943359375

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004293630365282297
    2. ':' → logprob: -5.754293441772461
    3. ')' → logprob: -7.004293441772461
    4. ',' → logprob: -8.754293441772461
    5. ' ):' → logprob: -11.129293441772461
    6. '):
' → logprob: -11.129293441772461
    7. '(' → logprob: -11.379293441772461
    8. ':)' → logprob: -12.504293441772461
    9. '():' → logprob: -13.754293441772461
    10. '):

' → logprob: -14.129293441772461

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29838481545448303
    2. '(' → logprob: -1.4233847856521606
    3. 'def' → logprob: -5.173384666442871
    4. ' ' → logprob: -5.673384666442871
    5. ' (' → logprob: -5.673384666442871
    6. '    ' → logprob: -6.798384666442871
    7. '  ' → logprob: -6.923384666442871
    8. ':' → logprob: -7.173384666442871
    9. ')' → logprob: -8.048384666442871
    10. '(value' → logprob: -8.173384666442871

Token 47: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7741929888725281
    2. 'def' (adapté à ' def') → logprob: -1.1491930484771729
    3. ' def' → logprob: -1.5241930484771729
    4. ' ' → logprob: -6.274192810058594
    5. '(' → logprob: -6.899192810058594
    6. '  ' → logprob: -8.024192810058594
    7. '    ' → logprob: -8.149192810058594
    8. ' (' → logprob: -8.774192810058594
    9. '	def' → logprob: -9.399192810058594
    10. '<|end|>' → logprob: -9.399192810058594

Token 48: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0004218554822728038
    2. '__' → logprob: -8.000421524047852
    3. '_init' → logprob: -10.375421524047852
    4. ' ' → logprob: -10.625421524047852
    5. ' init' → logprob: -11.375421524047852
    6. ' ' → logprob: -11.625421524047852
    7. ' _' → logprob: -11.875421524047852
    8. '_' → logprob: -13.500421524047852
    9. 'init' → logprob: -13.750421524047852
    10. '  ' → logprob: -14.875421524047852

Token 49: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00034416402922943234
    2. 'i' → logprob: -8.250344276428223
    3. '_init' → logprob: -9.625344276428223
    4. '__' → logprob: -11.500344276428223
    5. '_' → logprob: -13.500344276428223
    6. '```' → logprob: -13.625344276428223
    7. '_i' → logprob: -14.000344276428223
    8. 'ini' → logprob: -14.000344276428223
    9. 'def' → logprob: -14.000344276428223
    10. '(init' → logprob: -14.625344276428223

Token 50: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01639045588672161
    2. '__' → logprob: -4.141390323638916
    3. '__(
' → logprob: -8.266390800476074
    4. '_(' → logprob: -10.766390800476074
    5. '__((' → logprob: -10.766390800476074
    6. '(self' → logprob: -10.766390800476074
    7. '_' → logprob: -11.016390800476074
    8. '(' → logprob: -12.016390800476074
    9. '__('' → logprob: -12.141390800476074
    10. ' (' → logprob: -12.891390800476074

Token 51: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002619318547658622
    2. ' self' → logprob: -8.500262260437012
    3. 'value' → logprob: -10.000262260437012
    4. ',' → logprob: -11.500262260437012
    5. 'operator' → logprob: -13.875262260437012
    6. ',self' → logprob: -13.875262260437012
    7. ')' → logprob: -15.000262260437012
    8. '(self' → logprob: -15.375262260437012
    9. ' ' → logprob: -16.125261306762695
    10. '	self' → logprob: -16.750261306762695

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05505932494997978
    2. ' ,' → logprob: -2.9300594329833984
    3. ',value' → logprob: -9.055059432983398
    4. ' ' → logprob: -10.430059432983398
    5. 'value' → logprob: -10.805059432983398
    6. ')' → logprob: -12.930059432983398
    7. ' value' → logprob: -13.430059432983398
    8. ' )' → logprob: -13.805059432983398
    9. '(' → logprob: -13.930059432983398
    10. '  ' → logprob: -14.055059432983398

Token 53: ' symbol' (ID: 10038)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.3028131425380707
    2. 'value' → logprob: -1.927813172340393
    3. 'self' → logprob: -3.5528130531311035
    4. ' self' → logprob: -3.8028130531311035
    5. ' symbol' → logprob: -3.8028130531311035
    6. ' operator' → logprob: -3.9278130531311035
    7. 'operator' → logprob: -4.3028130531311035
    8. 'symbol' → logprob: -5.4278130531311035
    9. ' op' → logprob: -5.5528130531311035
    10. 'op' → logprob: -7.1778130531311035

Token 54: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15899939835071564
    2. ':' → logprob: -2.283999443054199
    3. ' ):' → logprob: -3.783999443054199
    4. ')' → logprob: -4.283999443054199
    5. ',' → logprob: -5.283999443054199
    6. ' :' → logprob: -5.908999443054199
    7. ' )' → logprob: -8.1589994430542
    8. '   ' → logprob: -9.0339994430542
    9. ' ' → logprob: -9.1589994430542
    10. '=' → logprob: -9.2839994430542

Token 55: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.04238808527588844
    2. 'str' → logprob: -3.2923882007598877
    3. ' ' → logprob: -5.542387962341309
    4. ')' → logprob: -8.667387962341309
    5. ' )' → logprob: -9.292387962341309
    6. ' '' → logprob: -9.542387962341309
    7. 's' → logprob: -11.167387962341309
    8. '  ' → logprob: -11.167387962341309
    9. ' s' → logprob: -11.667387962341309
    10. ' ' → logprob: -11.667387962341309

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02341003715991974
    2. ')' → logprob: -3.7734100818634033
    3. ',' → logprob: -9.648409843444824
    4. ' ):' → logprob: -10.273409843444824
    5. '):
' → logprob: -10.273409843444824
    6. ':' → logprob: -11.023409843444824
    7. '   ' → logprob: -11.523409843444824
    8. ' )' → logprob: -13.523409843444824
    9. '       ' → logprob: -14.148409843444824
    10. ' ' → logprob: -14.148409843444824

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034033842384815216
    2. 'super' → logprob: -3.65903377532959
    3. ' super' → logprob: -5.15903377532959
    4. 'symbol' → logprob: -7.28403377532959
    5. ' ' → logprob: -8.03403377532959
    6. ' symbol' → logprob: -8.28403377532959
    7. '   ' → logprob: -8.78403377532959
    8. ' ' → logprob: -9.65903377532959
    9. 'self' → logprob: -9.65903377532959
    10. '        ' → logprob: -9.78403377532959

Token 58: ' if' (ID: 538)
  Prédit: ' super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' super' → logprob: -0.04888097569346428
    2. 'super' → logprob: -3.0488810539245605
    3. '       ' → logprob: -8.173880577087402
    4. ' ' → logprob: -12.298880577087402
    5. '        ' → logprob: -13.298880577087402
    6. '	super' → logprob: -13.548880577087402
    7. ' ' → logprob: -13.548880577087402
    8. ' sup' → logprob: -14.298880577087402
    9. '   ' → logprob: -14.423880577087402
    10. '           ' → logprob: -15.173880577087402

Token 59: ' symbol' (ID: 10038)
  Prédit: ' symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.041277993470430374
    2. 'symbol' → logprob: -3.2912778854370117
    3. ' not' → logprob: -5.916277885437012
    4. ' isinstance' → logprob: -8.291277885437012
    5. ' symbole' → logprob: -9.541277885437012
    6. '(symbol' → logprob: -9.791277885437012
    7. ' ' → logprob: -9.916277885437012
    8. ' sym' → logprob: -10.416277885437012
    9. '_symbol' → logprob: -10.541277885437012
    10. ' simbol' → logprob: -11.291277885437012

Token 60: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5011151432991028
    2. ' not' → logprob: -1.001115083694458
    3. ' ==' → logprob: -3.751115083694458
    4. '==' → logprob: -6.751115322113037
    5. 'not' → logprob: -7.001115322113037
    6. ' ' → logprob: -7.876115322113037
    7. 'in' → logprob: -9.001114845275879
    8. ' )' → logprob: -9.126114845275879
    9. '.' → logprob: -9.251114845275879
    10. ')' → logprob: -9.251114845275879

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03595595061779022
    2. '<|end|>' → logprob: -3.6609559059143066
    3. 'in' → logprob: -5.285955905914307
    4. ' ' → logprob: -5.535955905914307
    5. '  ' → logprob: -8.910956382751465
    6. '<|end|>' → logprob: -9.035956382751465
    7. ' ['' → logprob: -9.785956382751465
    8. ' (' → logprob: -9.910956382751465
    9. ' '' → logprob: -10.660956382751465
    10. ' {'' → logprob: -10.660956382751465

Token 62: ' ['' (ID: 5140)
  Prédit: ' [''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.9929571151733398
    2. ' {'' → logprob: -0.9929571151733398
    3. '['' → logprob: -2.11795711517334
    4. ''+' → logprob: -2.74295711517334
    5. ' '+' → logprob: -3.36795711517334
    6. ' "+' → logprob: -4.61795711517334
    7. '"+' → logprob: -4.61795711517334
    8. ' ('' → logprob: -5.11795711517334
    9. '{'' → logprob: -5.24295711517334
    10. ''' → logprob: -6.24295711517334

Token 63: '+',' (ID: 141314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015359314857050776
    2. '+',' → logprob: -7.251535892486572
    3. ''+' → logprob: -7.376535892486572
    4. '+-' → logprob: -9.37653636932373
    5. '+,' → logprob: -9.62653636932373
    6. '+
' → logprob: -10.25153636932373
    7. ''' → logprob: -11.62653636932373
    8. '+'' → logprob: -12.62653636932373
    9. '',' → logprob: -14.37653636932373
    10. '+

' → logprob: -14.62653636932373

Token 64: ' '-',' (ID: 124266)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.4163639545440674
    2. ' '-',' → logprob: -1.2913639545440674
    3. '-' → logprob: -3.5413639545440674
    4. ' '-' → logprob: -4.041363716125488
    5. ' '-'' → logprob: -4.291363716125488
    6. ' ' → logprob: -6.041363716125488
    7. '-,' → logprob: -6.916363716125488
    8. ''' → logprob: -7.166363716125488
    9. ' '' → logprob: -7.666363716125488
    10. ' '-')' → logprob: -8.291363716125488

Token 65: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.3653958737850189
    2. ' '*' → logprob: -1.2403959035873413
    3. ' '*'' → logprob: -4.115396022796631
    4. ''' → logprob: -8.240395545959473
    5. '*' → logprob: -9.365395545959473
    6. ' '' → logprob: -9.615395545959473
    7. '"*' → logprob: -9.990395545959473
    8. '*,' → logprob: -11.490395545959473
    9. '('*' → logprob: -12.365395545959473
    10. ' ' → logprob: -12.490395545959473

Token 66: '',' (ID: 787)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.26994457840919495
    2. ',' → logprob: -1.6449445486068726
    3. '',' → logprob: -3.894944667816162
    4. '/,' → logprob: -4.269944667816162
    5. '/',' → logprob: -5.519944667816162
    6. ' ,' → logprob: -6.394944667816162
    7. ''/' → logprob: -6.769944667816162
    8. ''' → logprob: -7.144944667816162
    9. ' '/',' → logprob: -7.394944667816162
    10. '','' → logprob: -7.894944667816162

Token 67: ' '/',' (ID: 144914)
  Prédit: ' '/','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '/',' → logprob: -1.0073819160461426
    2. ''' → logprob: -1.1323819160461426
    3. ''/' → logprob: -1.6323819160461426
    4. ' '/'' → logprob: -2.5073819160461426
    5. ' '/' → logprob: -3.3823819160461426
    6. ' '' → logprob: -7.882381916046143
    7. '/' → logprob: -8.007381439208984
    8. ' ' → logprob: -8.007381439208984
    9. ' '/')' → logprob: -9.257381439208984
    10. '   ' → logprob: -9.632381439208984

Token 68: ' '=' (ID: 132311)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8092138171195984
    2. ' '%' → logprob: -1.3092138767242432
    3. ''%' → logprob: -1.5592138767242432
    4. ''^' → logprob: -3.684213876724243
    5. ' '' → logprob: -3.809213876724243
    6. ' '^' → logprob: -4.684213638305664
    7. ' '**' → logprob: -5.059213638305664
    8. '**' → logprob: -5.684213638305664
    9. ' '%'' → logprob: -6.559213638305664
    10. ''s' → logprob: -7.059213638305664

Token 69: '']:
' (ID: 44766)
  Prédit: '']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:' → logprob: -0.9379180669784546
    2. '']' → logprob: -1.4379180669784546
    3. '']:
' → logprob: -1.5629180669784546
    4. '',' → logprob: -2.312918186187744
    5. ''' → logprob: -2.937918186187744
    6. ' '' → logprob: -5.437918186187744
    7. '>' → logprob: -6.312918186187744
    8. '*' → logprob: -7.562918186187744
    9. ' ']' → logprob: -7.562918186187744
    10. '"]:' → logprob: -7.937918186187744

Token 70: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09584084153175354
    2. '           ' → logprob: -2.5958409309387207
    3. '       ' → logprob: -4.845840930938721
    4. ':
' → logprob: -5.470840930938721
    5. '):' → logprob: -6.095840930938721
    6. ' raise' → logprob: -7.220840930938721
    7. ' :' → logprob: -7.845840930938721
    8. '        ' → logprob: -8.345840454101562
    9. '
' → logprob: -8.470840454101562
    10. 'raise' → logprob: -8.845840454101562

Token 71: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.023726973682641983
    2. 'raise' (adapté à ' raise') → logprob: -3.7737269401550293
    3. '           ' → logprob: -7.773726940155029
    4. '	raise' → logprob: -10.773727416992188
    5. '            ' → logprob: -11.648727416992188
    6. '
' → logprob: -11.773727416992188
    7. '        ' → logprob: -12.148727416992188
    8. '       ' → logprob: -12.398727416992188
    9. '_raise' → logprob: -12.648727416992188
    10. '               ' → logprob: -12.773727416992188

Token 72: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0003231878508813679
    2. ' Val' → logprob: -8.625323295593262
    3. ' ' → logprob: -9.000323295593262
    4. ' Va' → logprob: -11.500323295593262
    5. 'Value' → logprob: -11.750323295593262
    6. '	Value' → logprob: -13.500323295593262
    7. ' V' → logprob: -15.125323295593262
    8. '  ' → logprob: -15.625323295593262
    9. ' ' → logprob: -15.875323295593262
    10. '<Value' → logprob: -16.875322341918945

Token 73: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00861669983714819
    2. 'rror' → logprob: -4.758616924285889
    3. 'n' → logprob: -14.13361644744873
    4. 'r' → logprob: -14.25861644744873
    5. 'Value' → logprob: -14.63361644744873
    6. 'ror' → logprob: -16.008617401123047
    7. 'error' → logprob: -16.258617401123047
    8. 'SError' → logprob: -17.758617401123047
    9. 'Er' → logprob: -17.883617401123047
    10. 'LError' → logprob: -18.633617401123047

Token 74: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6248778104782104
    2. '(' → logprob: -0.8748778104782104
    3. '('' → logprob: -3.4998779296875
    4. '(f' → logprob: -4.1248779296875
    5. '(
' → logprob: -6.6248779296875
    6. '("'' → logprob: -11.1248779296875
    7. '(

' → logprob: -11.4998779296875
    8. '("("' → logprob: -11.4998779296875
    9. '()' → logprob: -11.9998779296875
    10. '       ' → logprob: -12.2498779296875

Token 75: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01803591474890709
    2. '("' → logprob: -4.643035888671875
    3. '(f' → logprob: -5.268035888671875
    4. ''' → logprob: -6.018035888671875
    5. '(' → logprob: -8.268035888671875
    6. 'f' → logprob: -8.518035888671875
    7. '('' → logprob: -9.643035888671875
    8. '"The' → logprob: -10.268035888671875
    9. 'Invalid' → logprob: -10.393035888671875
    10. '"In' → logprob: -10.518035888671875

Token 76: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.04169760271906853
    2. '"' → logprob: -3.2916975021362305
    3. 'Unsupported' → logprob: -6.4166975021362305
    4. 'Unknown' → logprob: -6.9166975021362305
    5. 'Unexpected' → logprob: -7.2916975021362305
    6. 'Un' → logprob: -9.04169750213623
    7. ''' → logprob: -9.41669750213623
    8. 'I' → logprob: -9.66669750213623
    9. 'Illegal' → logprob: -10.79169750213623
    10. ' Invalid' → logprob: -10.79169750213623

Token 77: ' operator' (ID: 11019)
  Prédit: ' symbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.4853382706642151
    2. ' operator' → logprob: -0.9853382706642151
    3. 'symbol' → logprob: -4.98533821105957
    4. 'operator' → logprob: -6.11033821105957
    5. 'Operator' → logprob: -7.48533821105957
    6. ' ' → logprob: -7.61033821105957
    7. ' Operator' → logprob: -7.86033821105957
    8. ' token' → logprob: -7.98533821105957
    9. '(symbol' → logprob: -9.36033821105957
    10. '	operator' → logprob: -9.98533821105957

Token 78: ':' (ID: 25)
  Prédit: ' symbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.06964660435914993
    2. 'symbol' → logprob: -3.1946465969085693
    3. ':' → logprob: -3.6946465969085693
    4. ' operator' → logprob: -7.569646835327148
    5. ' '{' → logprob: -8.444646835327148
    6. ' token' → logprob: -9.069646835327148
    7. '(symbol' → logprob: -9.069646835327148
    8. ''{' → logprob: -9.194646835327148
    9. ''' → logprob: -9.444646835327148
    10. 'operator' → logprob: -9.444646835327148

Token 79: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10109090059995651
    2. ' {' → logprob: -2.351090908050537
    3. '{s' → logprob: -7.476090908050537
    4. 'symbol' → logprob: -8.351090431213379
    5. ' symbol' → logprob: -9.601090431213379
    6. ''{' → logprob: -12.476090431213379
    7. '(symbol' → logprob: -12.851090431213379
    8. '"{' → logprob: -13.226090431213379
    9. ' '{' → logprob: -14.226090431213379
    10. '{name' → logprob: -14.351090431213379

Token 80: 'symbol' (ID: 33821)
  Prédit: 'symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -0.0001968649885384366
    2. 'sym' → logprob: -8.75019645690918
    3. ' symbol' → logprob: -10.50019645690918
    4. '{' → logprob: -12.00019645690918
    5. 's' → logprob: -13.12519645690918
    6. 'ymbol' → logprob: -13.50019645690918
    7. 'symbols' → logprob: -14.37519645690918
    8. '(symbol' → logprob: -15.87519645690918
    9. ' символ' → logprob: -16.00019645690918
    10. ' symbole' → logprob: -16.00019645690918

Token 81: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6119151711463928
    2. '}")' → logprob: -1.111915111541748
    3. ')")' → logprob: -2.111915111541748
    4. '')' → logprob: -5.236915111541748
    5. ')' → logprob: -6.236915111541748
    6. ')")
' → logprob: -8.861915588378906
    7. '}' → logprob: -9.361915588378906
    8. '}")
' → logprob: -9.611915588378906
    9. '")
' → logprob: -9.861915588378906
    10. ']' → logprob: -10.361915588378906

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031305922311730683
    2. '
' → logprob: -8.250312805175781
    3. 'super' → logprob: -10.500312805175781
    4. '        
' → logprob: -11.750312805175781
    5. ' super' → logprob: -12.375312805175781
    6. '   ' → logprob: -12.750312805175781
    7. '```' → logprob: -13.000312805175781
    8. 'self' → logprob: -13.125312805175781
    9. 'else' → logprob: -13.500312805175781
    10. '           ' → logprob: -13.625312805175781

Token 83: ' super' (ID: 2539)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30161675810813904
    2. 'super' (adapté à ' super') → logprob: -1.9266167879104614
    3. ' super' → logprob: -2.176616668701172
    4. 'self' → logprob: -7.051616668701172
    5. ' self' → logprob: -8.301616668701172
    6. '        
' → logprob: -9.426616668701172
    7. '	super' → logprob: -10.051616668701172
    8. '   ' → logprob: -10.801616668701172
    9. '
' → logprob: -11.301616668701172
    10. ' ' → logprob: -11.301616668701172

Token 84: '().__' (ID: 57377)
  Prédit: '().__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().__' → logprob: -0.0005570820067077875
    2. '().' → logprob: -8.125556945800781
    3. '.__' → logprob: -9.000556945800781
    4. '()' → logprob: -9.125556945800781
    5. '__.__' → logprob: -11.125556945800781
    6. '__' → logprob: -11.875556945800781
    7. ').__' → logprob: -12.250556945800781
    8. '.' → logprob: -13.500556945800781
    9. '```' → logprob: -14.625556945800781
    10. '(' → logprob: -15.125556945800781

Token 85: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.01776367612183094
    2. '__' → logprob: -4.142763614654541
    3. '_init' → logprob: -6.392763614654541
    4. '__(' → logprob: -10.8927640914917
    5. 'nit' → logprob: -11.1427640914917
    6. '(init' → logprob: -11.3927640914917
    7. 'it' → logprob: -12.1427640914917
    8. 'int' → logprob: -14.0177640914917
    9. 'def' → logprob: -14.3927640914917
    10. '-init' → logprob: -14.6427640914917

Token 86: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02396513894200325
    2. '_(' → logprob: -4.148965358734131
    3. '__' → logprob: -5.148965358734131
    4. '(' → logprob: -6.773965358734131
    5. '_' → logprob: -8.023964881896973
    6. '__(
' → logprob: -8.523964881896973
    7. '(symbol' → logprob: -8.773964881896973
    8. '(s' → logprob: -9.398964881896973
    9. '__((' → logprob: -9.523964881896973
    10. '__('' → logprob: -9.773964881896973

Token 87: 'symbol' (ID: 33821)
  Prédit: 'symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -8.506661833962426e-05
    2. ' symbol' → logprob: -9.37508487701416
    3. 'sym' → logprob: -15.50008487701416
    4. 'value' → logprob: -17.625085830688477
    5. '   ' → logprob: -18.000085830688477
    6. '(symbol' → logprob: -18.625085830688477
    7. ')' → logprob: -19.250085830688477
    8. ' ' → logprob: -19.375085830688477
    9. 'symbols' → logprob: -19.500085830688477
    10. 'Symbol' → logprob: -19.750085830688477

Token 88: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.064297824399546e-05
    2. ')
' → logprob: -10.000070571899414
    3. ' )' → logprob: -10.625070571899414
    4. ')

' → logprob: -15.500070571899414
    5. '   ' → logprob: -16.125070571899414
    6. '       ' → logprob: -16.125070571899414
    7. ')return' → logprob: -16.250070571899414
    8. '<|end|>' → logprob: -16.250070571899414
    9. ')#' → logprob: -16.750070571899414
    10. ')view' → logprob: -17.000070571899414

Token 89: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8292897343635559
    2. '
' → logprob: -1.4542896747589111
    3. '<|end|>' → logprob: -1.7042896747589111
    4. 'class' → logprob: -2.454289674758911
    5. 'def' → logprob: -3.704289674758911
    6. '    
' → logprob: -3.829289674758911
    7. ')' → logprob: -5.95428991317749
    8. '<|end|>' → logprob: -6.07928991317749
    9. ' 
' → logprob: -6.45428991317749
    10. ' ' → logprob: -6.57928991317749

Token 90: ' Token' (ID: 17951)
  Prédit: ' Identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Identifier' → logprob: -0.3575286269187927
    2. ' Variable' → logprob: -1.9825286865234375
    3. ' Parent' → logprob: -3.1075286865234375
    4. ' Wh' → logprob: -3.2325286865234375
    5. ' Parser' → logprob: -3.3575286865234375
    6. ' Expression' → logprob: -3.9825286865234375
    7. ' Token' → logprob: -4.2325286865234375
    8. ' Space' → logprob: -6.1075286865234375
    9. 'Whitespace' → logprob: -6.2325286865234375
    10. ' ' → logprob: -6.7325286865234375

Token 91: 'Stream' (ID: 4193)
  Prédit: 'izer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.015543309040367603
    2. 'Stream' → logprob: -4.265543460845947
    3. 'Type' → logprob: -7.765543460845947
    4. 's' → logprob: -8.265542984008789
    5. 'IZER' → logprob: -8.765542984008789
    6. 'List' → logprob: -8.890542984008789
    7. 'ize' → logprob: -9.015542984008789
    8. 'Iterator' → logprob: -9.640542984008789
    9. ':' → logprob: -9.890542984008789
    10. 'Reader' → logprob: -10.390542984008789

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015815204242244363
    2. ' :' → logprob: -6.50158166885376
    3. '(' → logprob: -10.126581192016602
    4. '():' → logprob: -10.501581192016602
    5. ':
' → logprob: -12.126581192016602
    6. '(object' → logprob: -13.126581192016602
    7. '(":' → logprob: -14.001581192016602
    8. ':def' → logprob: -14.501581192016602
    9. ':**' → logprob: -14.501581192016602
    10. '):' → logprob: -14.626581192016602

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043858665972948074
    2. '    
' → logprob: -3.543858766555786
    3. '    ' → logprob: -5.043858528137207
    4. ' def' → logprob: -5.418858528137207
    5. ' 
' → logprob: -6.418858528137207
    6. '     
' → logprob: -7.543858528137207
    7. '
' → logprob: -7.918858528137207
    8. ' ' → logprob: -8.793858528137207
    9. '(' → logprob: -9.043858528137207
    10. 'def' → logprob: -9.543858528137207

Token 94: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0077837081626057625
    2. 'def' (adapté à ' def') → logprob: -5.007783889770508
    3. '   ' → logprob: -6.882783889770508
    4. '    ' → logprob: -10.257783889770508
    5. ' ' → logprob: -12.632783889770508
    6. ' ' → logprob: -13.882783889770508
    7. '	def' → logprob: -13.882783889770508
    8. 'class' → logprob: -14.882783889770508
    9. '  ' → logprob: -15.132783889770508
    10. ' class' → logprob: -15.382783889770508

Token 95: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -9.424530435353518e-05
    2. '__' → logprob: -9.625094413757324
    3. '_init' → logprob: -11.500094413757324
    4. ' ' → logprob: -12.125094413757324
    5. ' _' → logprob: -12.375094413757324
    6. ' init' → logprob: -12.625094413757324
    7. ' ___' → logprob: -13.500094413757324
    8. '_' → logprob: -13.750094413757324
    9. ' ' → logprob: -13.750094413757324
    10. 'init' → logprob: -14.125094413757324

Token 96: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.2830866873264313
    2. 'it' → logprob: -1.4080866575241089
    3. 'nit' → logprob: -6.908086776733398
    4. 'iter' → logprob: -7.533086776733398
    5. '_init' → logprob: -9.283086776733398
    6. 't' → logprob: -9.283086776733398
    7. '   ' → logprob: -9.783086776733398
    8. '```' → logprob: -10.158086776733398
    9. 'def' → logprob: -10.408086776733398
    10. 'int' → logprob: -10.658086776733398

Token 97: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009964903816580772
    2. '__' → logprob: -4.634964942932129
    3. '__(
' → logprob: -8.884964942932129
    4. '__((' → logprob: -9.759964942932129
    5. '(self' → logprob: -12.634964942932129
    6. '__('' → logprob: -12.634964942932129
    7. '__(*' → logprob: -12.759964942932129
    8. '(' → logprob: -13.634964942932129
    9. '___' → logprob: -14.259964942932129
    10. '__("' → logprob: -14.509964942932129

Token 98: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001487600733526051
    2. ')' → logprob: -6.876487731933594
    3. ' self' → logprob: -7.751487731933594
    4. '):
' → logprob: -11.376487731933594
    5. '
' → logprob: -12.626487731933594
    6. '(self' → logprob: -12.876487731933594
    7. '   ' → logprob: -13.626487731933594
    8. '<|end|>' → logprob: -13.876487731933594
    9. '	self' → logprob: -14.126487731933594
    10. 'tokens' → logprob: -14.251487731933594

Token 99: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4174800515174866
    2. '):' → logprob: -1.2924799919128418
    3. ' ):' → logprob: -3.292479991912842
    4. ' ,' → logprob: -4.292479991912842
    5. 'self' → logprob: -4.542479991912842
    6. '):
' → logprob: -5.792479991912842
    7. ' self' → logprob: -7.417479991912842
    8. '   ' → logprob: -8.29248046875
    9. ' ' → logprob: -8.41748046875
    10. ')' → logprob: -8.54248046875

Token 100: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23577407002449036
    2. ' self' → logprob: -1.735774040222168
    3. '   ' → logprob: -4.110774040222168
    4. ' []' → logprob: -4.860774040222168
    5. '[]' → logprob: -4.860774040222168
    6. '       ' → logprob: -6.985774040222168
    7. ' tokens' → logprob: -7.610774040222168
    8. ')' → logprob: -9.235774040222168
    9. 'tokens' → logprob: -9.235774040222168
    10. ' ' → logprob: -9.360774040222168

Token 101: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931617259979248
    2. 'self' (adapté à ' self') → logprob: -0.6931617259979248
    3. '       ' → logprob: -11.693161964416504
    4. '   ' → logprob: -12.318161964416504
    5. ' ' → logprob: -13.943161964416504
    6. '	self' → logprob: -14.068161964416504
    7. '  ' → logprob: -17.068161010742188
    8. '(self' → logprob: -18.068161010742188
    9. ' ' → logprob: -18.193161010742188
    10. '    ' → logprob: -18.318161010742188

Token 102: '._' (ID: 2697)
  Prédit: '.tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.2578321397304535
    2. '.' → logprob: -1.5078321695327759
    3. ' .' → logprob: -5.382832050323486
    4. '.token' → logprob: -7.007832050323486
    5. '.value' → logprob: -9.132832527160645
    6. '.items' → logprob: -9.632832527160645
    7. '._' → logprob: -9.882832527160645
    8. '.values' → logprob: -10.007832527160645
    9. '.t' → logprob: -10.132832527160645
    10. '.data' → logprob: -11.007832527160645

Token 103: 'tokens' (ID: 64329)
  Prédit: 'tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.0007830646354705095
    2. 'position' → logprob: -8.25078296661377
    3. 'stream' → logprob: -9.00078296661377
    4. 'index' → logprob: -9.25078296661377
    5. 'token' → logprob: -9.25078296661377
    6. '_tokens' → logprob: -9.37578296661377
    7. 'pos' → logprob: -9.75078296661377
    8. 'queue' → logprob: -11.12578296661377
    9. 'buffer' → logprob: -11.37578296661377
    10. 'current' → logprob: -11.50078296661377

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1273173689842224
    2. '=' → logprob: -2.127317428588867
    3. '=[]' → logprob: -7.877317428588867
    4. '[]' → logprob: -12.377317428588867
    5. ' ' → logprob: -13.502317428588867
    6. '[' → logprob: -13.752317428588867
    7. '[:]' → logprob: -14.002317428588867
    8. ':' → logprob: -14.127317428588867
    9. ' []' → logprob: -14.252317428588867
    10. '=[]
' → logprob: -15.252317428588867

Token 105: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0004317420825827867
    2. ' []' → logprob: -7.750431537628174
    3. '[' → logprob: -14.625432014465332
    4. '[]
' → logprob: -14.625432014465332
    5. '[]}' → logprob: -15.750432014465332
    6. '[]

' → logprob: -17.000431060791016
    7. '[]>' → logprob: -18.000431060791016
    8. '[]"' → logprob: -18.625431060791016
    9. ' ' → logprob: -19.250431060791016
    10. '[],' → logprob: -19.375431060791016

Token 106: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030911846086382866
    2. '       ' → logprob: -3.780911922454834
    3. ' self' → logprob: -5.530911922454834
    4. '   ' → logprob: -5.780911922454834
    5. 'def' → logprob: -7.655911922454834
    6. '0' → logprob: -10.280911445617676
    7. '	self' → logprob: -10.530911445617676
    8. ' ' → logprob: -10.780911445617676
    9. '
' → logprob: -11.030911445617676
    10. '  ' → logprob: -12.905911445617676

Token 108: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11573611944913864
    2. '.' → logprob: -2.2407360076904297
    3. '_index' → logprob: -6.36573600769043
    4. '_idx' → logprob: -8.36573600769043
    5. '.index' → logprob: -8.36573600769043
    6. '.current' → logprob: -8.74073600769043
    7. '_pos' → logprob: -8.86573600769043
    8. '.__' → logprob: -9.24073600769043
    9. '_pointer' → logprob: -10.24073600769043
    10. '.pos' → logprob: -10.36573600769043

Token 109: 'index' (ID: 2257)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.634057343006134
    2. 'pos' → logprob: -1.0090572834014893
    3. 'index' → logprob: -2.3840572834014893
    4. 'current' → logprob: -4.384057521820068
    5. 'next' → logprob: -9.25905704498291
    6. 'p' → logprob: -10.25905704498291
    7. '_pos' → logprob: -10.38405704498291
    8. 'idx' → logprob: -10.63405704498291
    9. '_position' → logprob: -10.63405704498291
    10. 'tokens' → logprob: -11.00905704498291

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006729457061737776
    2. '=' → logprob: -5.006729602813721
    3. ' ' → logprob: -11.256729125976562
    4. '0' → logprob: -14.131729125976562
    5. ' +=' → logprob: -15.506729125976562
    6. '<|end|>' → logprob: -16.006729125976562
    7. ' =
' → logprob: -16.381729125976562
    8. '   ' → logprob: -16.756729125976562
    9. ' =)' → logprob: -17.881729125976562
    10. '    ' → logprob: -18.131729125976562

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868718445301056
    2. ' ' → logprob: -1.1368718147277832
    3. ' ' → logprob: -15.136872291564941
    4. '  ' → logprob: -15.261872291564941
    5. '   ' → logprob: -15.636872291564941
    6. ' -' → logprob: -16.699371337890625
    7. '<|end|>' → logprob: -16.949371337890625
    8. '۰' → logprob: -17.261871337890625
    9. '	' → logprob: -17.574371337890625
    10. '-' → logprob: -18.199371337890625

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '-' → logprob: -15.000008583068848
    4. ' -' → logprob: -17.62500762939453
    5. '۰' → logprob: -18.25000762939453
    6. '   ' → logprob: -18.25000762939453
    7. '  ' → logprob: -18.50000762939453
    8. '00' → logprob: -19.43750762939453
    9. '000' → logprob: -19.56250762939453
    10. '```' → logprob: -19.62500762939453

Token 113: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3910438120365143
    2. 'def' → logprob: -1.141043782234192
    3. ' def' → logprob: -5.641043663024902
    4. '    
' → logprob: -7.641043663024902
    5. '<|end|>' → logprob: -9.641043663024902
    6. '	def' → logprob: -11.266043663024902
    7. '        
' → logprob: -11.266043663024902
    8. ' ' → logprob: -11.516043663024902
    9. '
' → logprob: -11.766043663024902
    10. ' 
' → logprob: -12.266043663024902

Token 115: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0008614383405074477
    2. '   ' → logprob: -7.750861644744873
    3. ' def' → logprob: -7.750861644744873
    4. 'd' → logprob: -15.625861167907715
    5. 'de' → logprob: -16.12586212158203
    6. '	def' → logprob: -16.50086212158203
    7. ' ' → logprob: -17.75086212158203
    8. '    
' → logprob: -18.25086212158203
    9. '```' → logprob: -18.62586212158203
    10. '       ' → logprob: -19.37586212158203

Token 116: ' append' (ID: 17147)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -1.015906572341919
    2. 'peek' → logprob: -1.015906572341919
    3. 'next' → logprob: -2.015906572341919
    4. ' has' → logprob: -2.265906572341919
    5. ' peek' → logprob: -4.39090633392334
    6. ' next' → logprob: -4.39090633392334
    7. 'get' → logprob: -6.01590633392334
    8. 'append' → logprob: -6.26590633392334
    9. 'advance' → logprob: -6.26590633392334
    10. '   ' → logprob: -6.76590633392334

Token 117: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009832827374339104
    2. '(self' → logprob: -4.634832859039307
    3. '(token' → logprob: -9.884832382202148
    4. ' (' → logprob: -11.509832382202148
    5. '_token' → logprob: -11.884832382202148
    6. '(s' → logprob: -13.259832382202148
    7. '(
' → logprob: -13.384832382202148
    8. 'self' → logprob: -13.634832382202148
    9. '(Token' → logprob: -14.009832382202148
    10. 'token' → logprob: -14.384832382202148

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006953967968001962
    2. ' ,' → logprob: -7.37569522857666
    3. '(token' → logprob: -10.25069522857666
    4. 'token' → logprob: -10.87569522857666
    5. ',t' → logprob: -12.75069522857666
    6. '_token' → logprob: -12.75069522857666
    7. '(' → logprob: -12.87569522857666
    8. ')' → logprob: -13.00069522857666
    9. ' ' → logprob: -14.00069522857666
    10. '   ' → logprob: -14.12569522857666

Token 119: ' token' (ID: 6602)
  Prédit: ' token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.16023477911949158
    2. 'token' → logprob: -1.910234808921814
    3. ')' → logprob: -12.535234451293945
    4. ' )' → logprob: -12.910234451293945
    5. '	token' → logprob: -13.535234451293945
    6. '_token' → logprob: -14.160234451293945
    7. ' ' → logprob: -14.285234451293945
    8. '(token' → logprob: -14.785234451293945
    9. 't' → logprob: -14.785234451293945
    10. ' t' → logprob: -15.285234451293945

Token 120: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07904918491840363
    2. '):' → logprob: -2.5790491104125977
    3. '):
' → logprob: -9.829049110412598
    4. ',' → logprob: -9.954049110412598
    5. ' )' → logprob: -10.704049110412598
    6. ':' → logprob: -11.204049110412598
    7. '(token' → logprob: -11.829049110412598
    8. ' ):' → logprob: -12.704049110412598
    9. '   ' → logprob: -13.204049110412598
    10. '_token' → logprob: -13.454049110412598

Token 121: ' Token' (ID: 17951)
  Prédit: ' Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Token' → logprob: -0.029804181307554245
    2. 'Token' → logprob: -3.529804229736328
    3. '	Token' → logprob: -10.279804229736328
    4. ')' → logprob: -12.279804229736328
    5. ' )' → logprob: -12.529804229736328
    6. ' ' → logprob: -12.529804229736328
    7. ' token' → logprob: -12.779804229736328
    8. '(Token' → logprob: -13.529804229736328
    9. '<Token' → logprob: -13.779804229736328
    10. '_token' → logprob: -13.904804229736328

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018863093107938766
    2. ')' → logprob: -4.018863201141357
    3. '):
' → logprob: -7.268863201141357
    4. ' ):' → logprob: -11.3938627243042
    5. '   ' → logprob: -13.7688627243042
    6. ':' → logprob: -13.8938627243042
    7. ',' → logprob: -13.8938627243042
    8. ' )' → logprob: -14.3938627243042
    9. '):
' → logprob: -14.7688627243042
    10. '       ' → logprob: -15.2688627243042

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011898103170096874
    2. '
' → logprob: -4.886898040771484
    3. ' 
' → logprob: -6.636898040771484
    4. '        
' → logprob: -7.261898040771484
    5. ')' → logprob: -7.886898040771484
    6. '\' → logprob: -8.011898040771484
    7. 'self' → logprob: -8.011898040771484
    8. ' self' → logprob: -8.261898040771484
    9. '    
' → logprob: -8.511898040771484
    10. '<|end|>' → logprob: -8.511898040771484

Token 124: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6005690097808838
    2. 'self' (adapté à ' self') → logprob: -0.9755690097808838
    3. '       ' → logprob: -2.600569009780884
    4. ' 
' → logprob: -9.350568771362305
    5. '```' → logprob: -10.225568771362305
    6. '        
' → logprob: -10.350568771362305
    7. '
' → logprob: -10.725568771362305
    8. ' ' → logprob: -10.725568771362305
    9. '	self' → logprob: -10.975568771362305
    10. '   ' → logprob: -10.975568771362305

Token 125: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0009313485352322459
    2. '.' → logprob: -7.000931262969971
    3. ' .' → logprob: -11.125931739807129
    4. ')._' → logprob: -13.250931739807129
    5. '.append' → logprob: -14.500931739807129
    6. ']._' → logprob: -14.625931739807129
    7. '       ' → logprob: -14.750931739807129
    8. ' ' → logprob: -15.000931739807129
    9. '.
' → logprob: -15.125931739807129
    10. '   ' → logprob: -15.250931739807129

Token 126: 'tokens' (ID: 64329)
  Prédit: 'tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -4.036524842376821e-05
    2. '_tokens' → logprob: -10.375040054321289
    3. 'token' → logprob: -13.250040054321289
    4. 'append' → logprob: -13.250040054321289
    5. ' tokens' → logprob: -13.375040054321289
    6. 'okens' → logprob: -13.375040054321289
    7. '.tokens' → logprob: -13.500040054321289
    8. 't' → logprob: -14.500040054321289
    9. '(tokens' → logprob: -16.00004005432129
    10. 'tok' → logprob: -16.37504005432129

Token 127: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011078944429755211
    2. '.' → logprob: -4.511078834533691
    3. '.app' → logprob: -11.261078834533691
    4. '.extend' → logprob: -11.761078834533691
    5. ' .' → logprob: -12.136078834533691
    6. ').' → logprob: -13.136078834533691
    7. '.setdefault' → logprob: -14.386078834533691
    8. 'append' → logprob: -14.636078834533691
    9. '.ap' → logprob: -14.636078834533691
    10. '.Append' → logprob: -14.636078834533691

Token 128: '(token' (ID: 23460)
  Prédit: '(token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(token' → logprob: -0.0019295861711725593
    2. '(' → logprob: -6.251929759979248
    3. ' (' → logprob: -14.62692928314209
    4. '(tokens' → logprob: -15.62692928314209
    5. 'token' → logprob: -15.75192928314209
    6. '(
' → logprob: -16.001930236816406
    7. '(ticket' → logprob: -16.376930236816406
    8. '(tok' → logprob: -17.001930236816406
    9. '(Token' → logprob: -18.001930236816406
    10. ' token' → logprob: -18.376930236816406

Token 129: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4656579120783135e-05
    2. ' )' → logprob: -10.250044822692871
    3. ')
' → logprob: -11.750044822692871
    4. ')return' → logprob: -14.625044822692871
    5. '<|end|>' → logprob: -15.250044822692871
    6. ')

' → logprob: -15.875044822692871
    7. '
' → logprob: -16.375043869018555
    8. ' ' → logprob: -16.375043869018555
    9. '   ' → logprob: -16.625043869018555
    10. '}' → logprob: -17.500043869018555

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6911324858665466
    2. '
' → logprob: -0.8161324858665466
    3. '    
' → logprob: -3.6911325454711914
    4. 'def' → logprob: -4.316132545471191
    5. ' 
' → logprob: -5.316132545471191
    6. '<|end|>' → logprob: -5.691132545471191
    7. '  
' → logprob: -5.816132545471191
    8. '```' → logprob: -5.941132545471191
    9. ' def' → logprob: -6.816132545471191
    10. ' ' → logprob: -6.941132545471191

Token 131: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015920029545668513
    2. ' def' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.37515926361084
    4. 'de' → logprob: -18.250158309936523
    5. '	def' → logprob: -18.375158309936523
    6. ' ' → logprob: -18.875158309936523
    7. '    
' → logprob: -18.875158309936523
    8. '@' → logprob: -19.000158309936523
    9. 'd' → logprob: -19.250158309936523
    10. '```' → logprob: -19.500158309936523

Token 132: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6923404335975647
    2. 'peek' → logprob: -1.31734037399292
    3. ' next' → logprob: -2.69234037399292
    4. 'has' → logprob: -2.94234037399292
    5. ' peek' → logprob: -2.94234037399292
    6. ' has' → logprob: -3.81734037399292
    7. '__' → logprob: -4.69234037399292
    8. 'current' → logprob: -4.81734037399292
    9. ' current' → logprob: -5.06734037399292
    10. 'reset' → logprob: -5.31734037399292

Token 133: '(self' (ID: 2402)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.23043373227119446
    2. '()' → logprob: -1.605433702468872
    3. '(' → logprob: -6.230433940887451
    4. '(self' → logprob: -6.355433940887451
    5. '_' → logprob: -6.730433940887451
    6. 'token' → logprob: -9.605433464050293
    7. 'Token' → logprob: -11.730433464050293
    8. '()`' → logprob: -11.980433464050293
    9. '```' → logprob: -12.730433464050293
    10. '`()' → logprob: -13.230433464050293

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2815622389316559
    2. '_token' → logprob: -1.5315622091293335
    3. ' )' → logprob: -4.531562328338623
    4. '()' → logprob: -4.781562328338623
    5. '())' → logprob: -5.031562328338623
    6. 'token' → logprob: -6.281562328338623
    7. '_' → logprob: -7.656562328338623
    8. ' ' → logprob: -8.656561851501465
    9. ']()' → logprob: -8.781561851501465
    10. ' ())' → logprob: -9.031561851501465

Token 135: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.656477689743042
    2. '():' → logprob: -0.781477689743042
    3. '(' → logprob: -4.531477928161621
    4. '(self' → logprob: -4.656477928161621
    5. ':' → logprob: -6.031477928161621
    6. ' ()' → logprob: -8.281477928161621
    7. '_token' → logprob: -8.406477928161621
    8. 'self' → logprob: -9.781477928161621
    9. '():
' → logprob: -9.781477928161621
    10. ' ():' → logprob: -10.031477928161621

Token 136: ' Token' (ID: 17951)
  Prédit: 'Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -0.1130649745464325
    2. ' Token' → logprob: -2.238065004348755
    3. '	Token' → logprob: -8.613064765930176
    4. 'None' → logprob: -10.613064765930176
    5. '(Token' → logprob: -11.988064765930176
    6. 'object' → logprob: -12.113064765930176
    7. 'Optional' → logprob: -12.113064765930176
    8. '_token' → logprob: -12.613064765930176
    9. '<Token' → logprob: -12.613064765930176
    10. 'token' → logprob: -12.738064765930176

Token 137: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07015193998813629
    2. ':' → logprob: -2.9451520442962646
    3. '():
' → logprob: -4.8201518058776855
    4. '(self' → logprob: -5.4451518058776855
    5. '()' → logprob: -6.3201518058776855
    6. '(' → logprob: -7.5701518058776855
    7. ':
' → logprob: -8.445152282714844
    8. '):' → logprob: -8.945152282714844
    9. '(
' → logprob: -10.820152282714844
    10. '       ' → logprob: -10.945152282714844

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004098195640835911
    2. ' if' → logprob: -8.625410079956055
    3. '   ' → logprob: -9.625410079956055
    4. 'if' → logprob: -10.000410079956055
    5. '
' → logprob: -10.125410079956055
    6. '        
' → logprob: -11.375410079956055
    7. '    ' → logprob: -11.625410079956055
    8. '      ' → logprob: -11.625410079956055
    9. ' ' → logprob: -11.875410079956055
    10. ',' → logprob: -12.000410079956055

Token 139: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04225587844848633
    2. ' if' → logprob: -3.6672558784484863
    3. '       ' → logprob: -4.542255878448486
    4. 'token' → logprob: -5.292255878448486
    5. ' token' → logprob: -9.042255401611328
    6. 't' → logprob: -11.542255401611328
    7. 'try' → logprob: -11.917255401611328
    8. 'while' → logprob: -12.167255401611328
    9. 'tok' → logprob: -12.667255401611328
    10. 'result' → logprob: -13.417255401611328

Token 140: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11289811879396439
    2. 'self' → logprob: -2.237898111343384
    3. ' ' → logprob: -9.987897872924805
    4. '	self' → logprob: -11.362897872924805
    5. ' ' → logprob: -11.862897872924805
    6. '   ' → logprob: -12.612897872924805
    7. '_self' → logprob: -12.862897872924805
    8. ' not' → logprob: -13.612897872924805
    9. '
' → logprob: -14.487897872924805
    10. '  ' → logprob: -14.487897872924805

Token 141: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.79811754100956e-05
    2. '.' → logprob: -11.000038146972656
    3. ' .' → logprob: -11.000038146972656
    4. '_' → logprob: -13.625038146972656
    5. ' _' → logprob: -13.625038146972656
    6. ' ' → logprob: -14.250038146972656
    7. '_index' → logprob: -14.625038146972656
    8. '.__' → logprob: -15.750038146972656
    9. '

' → logprob: -15.875038146972656
    10. ']._' → logprob: -15.875038146972656

Token 142: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -5.538490950129926e-05
    2. '_index' → logprob: -10.250055313110352
    3. ' index' → logprob: -11.250055313110352
    4. 'tokens' → logprob: -12.250055313110352
    5. '	index' → logprob: -14.500055313110352
    6. ' ' → logprob: -14.875055313110352
    7. 'inde' → logprob: -15.375055313110352
    8. '
' → logprob: -15.625055313110352
    9. '_tokens' → logprob: -15.750055313110352
    10. '   ' → logprob: -16.31255531311035

Token 143: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.18377670645713806
    2. ' <' → logprob: -1.9337767362594604
    3. '>=' → logprob: -3.933776617050171
    4. '<' → logprob: -5.80877685546875
    5. ' ' → logprob: -7.30877685546875
    6. '<len' → logprob: -10.93377685546875
    7. '   ' → logprob: -12.30877685546875
    8. ' ' → logprob: -12.68377685546875
    9. '[' → logprob: -12.93377685546875
    10. '  ' → logprob: -13.43377685546875

Token 144: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.575939953327179
    2. ' len' → logprob: -0.825939953327179
    3. '	len' → logprob: -15.325940132141113
    4. '(len' → logprob: -15.575940132141113
    5. '<len' → logprob: -17.075939178466797
    6. '=len' → logprob: -17.450939178466797
    7. '[len' → logprob: -17.700939178466797
    8. '   ' → logprob: -18.575939178466797
    9. ' ' → logprob: -19.700939178466797
    10. '<|end|>' → logprob: -19.950939178466797

Token 145: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018157554790377617
    2. '(' → logprob: -4.018157482147217
    3. 'self' → logprob: -12.393157958984375
    4. ' (' → logprob: -13.143157958984375
    5. '(
' → logprob: -13.768157958984375
    6. ' self' → logprob: -15.518157958984375
    7. '(s' → logprob: -15.643157958984375
    8. '(this' → logprob: -16.518157958984375
    9. '(

' → logprob: -16.518157958984375
    10. '()' → logprob: -17.643157958984375

Token 146: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.6405310816480778e-05
    2. '_tokens' → logprob: -11.625016212463379
    3. '.' → logprob: -12.375016212463379
    4. ' .' → logprob: -13.750016212463379
    5. ')._' → logprob: -14.250016212463379
    6. '   ' → logprob: -15.000016212463379
    7. ']._' → logprob: -15.250016212463379
    8. '.tokens' → logprob: -15.250016212463379
    9. '._
' → logprob: -15.875016212463379
    10. '_' → logprob: -16.125017166137695

Token 147: 'tokens' (ID: 64329)
  Prédit: 'tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00019388488726690412
    2. '_tokens' → logprob: -8.62519359588623
    3. ' tokens' → logprob: -11.62519359588623
    4. '.tokens' → logprob: -13.12519359588623
    5. 'okens' → logprob: -13.50019359588623
    6. 'token' → logprob: -14.00019359588623
    7. '(tokens' → logprob: -15.00019359588623
    8. '_token' → logprob: -15.37519359588623
    9. 't' → logprob: -15.87519359588623
    10. 'tok' → logprob: -16.375194549560547

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20412002503871918
    2. '):
' → logprob: -1.7041200399398804
    3. ')' → logprob: -6.20412015914917
    4. ' ):' → logprob: -7.57912015914917
    5. ' ):
' → logprob: -9.329119682312012
    6. '       ' → logprob: -9.954119682312012
    7. '):
' → logprob: -11.079119682312012
    8. '   ' → logprob: -11.954119682312012
    9. ':' → logprob: -12.329119682312012
    10. '):

' → logprob: -13.329119682312012

Token 149: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000599976978264749
    2. '
' → logprob: -8.62559986114502
    3. 'raise' → logprob: -8.87559986114502
    4. ' raise' → logprob: -9.00059986114502
    5. 'return' → logprob: -9.75059986114502
    6. '            
' → logprob: -10.00059986114502
    7. '\n' → logprob: -10.75059986114502
    8. ' return' → logprob: -11.50059986114502
    9. 'None' → logprob: -12.25059986114502
    10. '       ' → logprob: -12.62559986114502

Token 150: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.965573787689209
    2. '           ' → logprob: -1.340573787689209
    3. 'raise' (adapté à ' raise') → logprob: -1.465573787689209
    4. 'None' → logprob: -2.590573787689209
    5. ' return' → logprob: -3.715573787689209
    6. ' raise' → logprob: -3.840573787689209
    7. ' None' → logprob: -5.215573787689209
    8. '   ' → logprob: -9.340574264526367
    9. '
' → logprob: -9.465574264526367
    10. '               ' → logprob: -10.340574264526367

Token 151: ' Index' (ID: 14580)
  Prédit: ' Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Stop' → logprob: -0.02448607049882412
    2. ' Index' → logprob: -3.7744860649108887
    3. 'Stop' → logprob: -6.774486064910889
    4. ' EOF' → logprob: -9.649486541748047
    5. 'Index' → logprob: -10.524486541748047
    6. 'EOF' → logprob: -12.274486541748047
    7. ' ' → logprob: -14.149486541748047
    8. '(Index' → logprob: -15.399486541748047
    9. '_Stop' → logprob: -15.899486541748047
    10. ' Exception' → logprob: -16.399486541748047

Token 152: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.320199877838604e-07
    2. 'rror' → logprob: -15.5
    3. 'Erro' → logprob: -15.75
    4. '   ' → logprob: -18.0
    5. 'Er' → logprob: -18.125
    6. 'Out' → logprob: -18.5
    7. '```' → logprob: -19.0
    8. '
' → logprob: -19.5
    9. ' Error' → logprob: -19.625
    10. '	Error' → logprob: -19.625

Token 153: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007308445405215025
    2. '('' → logprob: -5.007308483123779
    3. '()' → logprob: -7.507308483123779
    4. '(' → logprob: -10.132308006286621
    5. '("")' → logprob: -12.507308006286621
    6. '()
' → logprob: -15.757308006286621
    7. '("'' → logprob: -16.882308959960938
    8. '(None' → logprob: -17.007308959960938
    9. '"' → logprob: -17.132308959960938
    10. '(
' → logprob: -17.382308959960938

Token 154: 'Read' (ID: 4455)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0031584687530994415
    2. 'End' → logprob: -6.3781585693359375
    3. ' No' → logprob: -7.1281585693359375
    4. 'Token' → logprob: -8.503158569335938
    5. 'no' → logprob: -9.378158569335938
    6. 'Reached' → logprob: -9.503158569335938
    7. ' no' → logprob: -9.628158569335938
    8. 'Next' → logprob: -9.753158569335938
    9. 'Index' → logprob: -10.378158569335938
    10. 'EOF' → logprob: -10.503158569335938

Token 155: ' past' (ID: 4241)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.1369103044271469
    2. 'ing' → logprob: -2.6369102001190186
    3. ' beyond' → logprob: -3.8869102001190186
    4. 'out' → logprob: -4.136910438537598
    5. ' past' → logprob: -4.636910438537598
    6. ' index' → logprob: -6.011910438537598
    7. 'EOF' → logprob: -6.761910438537598
    8. 'Error' → logprob: -7.011910438537598
    9. 'er' → logprob: -7.136910438537598
    10. ' EOF' → logprob: -7.386910438537598

Token 156: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.048523999750614166
    2. ' the' → logprob: -3.5485239028930664
    3. 'end' → logprob: -4.048523902893066
    4. 'the' → logprob: -6.798523902893066
    5. ' available' → logprob: -11.798523902893066
    6. ' ' → logprob: -12.173523902893066
    7. ' token' → logprob: -12.423523902893066
    8. '_end' → logprob: -12.798523902893066
    9. 'EOF' → logprob: -12.923523902893066
    10. 'e' → logprob: -13.048523902893066

Token 157: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.005305858328938484
    2. 'of' → logprob: -5.255305767059326
    3. '")' → logprob: -9.880306243896484
    4. '       ' → logprob: -11.505306243896484
    5. '   ' → logprob: -12.505306243896484
    6. ' ' → logprob: -13.005306243896484
    7. '  ' → logprob: -14.380306243896484
    8. '")
' → logprob: -14.505306243896484
    9. '           ' → logprob: -14.505306243896484
    10. '"' → logprob: -14.630306243896484

Token 158: ' tokens' (ID: 20290)
  Prédit: ' tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.33520209789276123
    2. 'tokens' → logprob: -1.7102020978927612
    3. ' token' → logprob: -3.460202217102051
    4. '_tokens' → logprob: -3.710202217102051
    5. ' stream' → logprob: -3.835202217102051
    6. '_token' → logprob: -4.085202217102051
    7. ' Token' → logprob: -5.585202217102051
    8. 'token' → logprob: -5.585202217102051
    9. 'stream' → logprob: -6.835202217102051
    10. ' the' → logprob: -7.960202217102051

Token 159: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.07900677621364594
    2. '")' → logprob: -2.5790066719055176
    3. '")
' → logprob: -9.704007148742676
    4. '.")
' → logprob: -10.579007148742676
    5. ')")
' → logprob: -11.829007148742676
    6. ''")
' → logprob: -11.829007148742676
    7. '")

' → logprob: -12.454007148742676
    8. '.")' → logprob: -12.954007148742676
    9. ' ")
' → logprob: -13.579007148742676
    10. '"' → logprob: -13.579007148742676

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002561268862336874
    2. '        
' → logprob: -6.627561092376709
    3. '
' → logprob: -6.752561092376709
    4. '    
' → logprob: -10.377561569213867
    5. '  
' → logprob: -11.502561569213867
    6. '   ' → logprob: -11.877561569213867
    7. ' 
' → logprob: -12.752561569213867
    8. '```' → logprob: -12.877561569213867
    9. '       
' → logprob: -12.877561569213867
    10. '\n' → logprob: -13.002561569213867

Token 161: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' (adapté à ' token') → logprob: -0.2989748418331146
    2. ' token' → logprob: -1.798974871635437
    3. '       ' → logprob: -2.4239747524261475
    4. 'result' → logprob: -6.548974990844727
    5. 't' → logprob: -6.673974990844727
    6. 'tok' → logprob: -6.673974990844727
    7. ' t' → logprob: -8.673974990844727
    8. ' tok' → logprob: -8.923974990844727
    9. ' result' → logprob: -9.548974990844727
    10. '	token' → logprob: -11.298974990844727

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029755467548966408
    2. '=' → logprob: -3.5297553539276123
    3. ' =
' → logprob: -13.279755592346191
    4. ' ' → logprob: -14.029755592346191
    5. '   ' → logprob: -14.154755592346191
    6. '=self' → logprob: -14.279755592346191
    7. '       ' → logprob: -14.904755592346191
    8. '    ' → logprob: -15.404755592346191
    9. '=
' → logprob: -16.154754638671875
    10. '  ' → logprob: -16.154754638671875

Token 163: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47407805919647217
    2. ' self' → logprob: -0.9740780591964722
    3. '       ' → logprob: -14.849078178405762
    4. '	self' → logprob: -14.974078178405762
    5. '(self' → logprob: -15.974078178405762
    6. '[self' → logprob: -16.474077224731445
    7. '_self' → logprob: -17.224077224731445
    8. ' ' → logprob: -17.474077224731445
    9. '=self' → logprob: -17.724077224731445
    10. '```' → logprob: -17.974077224731445

Token 164: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.339776832144707e-05
    2. '_tokens' → logprob: -9.875082969665527
    3. '.' → logprob: -10.625082969665527
    4. '.tokens' → logprob: -12.375082969665527
    5. ' .' → logprob: -13.750082969665527
    6. '_token' → logprob: -13.750082969665527
    7. '       ' → logprob: -15.625082969665527
    8. '   ' → logprob: -15.875082969665527
    9. 'tokens' → logprob: -16.125083923339844
    10. ']._' → logprob: -16.125083923339844

Token 165: 'tokens' (ID: 64329)
  Prédit: 'tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -5.204720582696609e-05
    2. '_tokens' → logprob: -10.000052452087402
    3. ' tokens' → logprob: -13.000052452087402
    4. 'okens' → logprob: -13.125052452087402
    5. '.tokens' → logprob: -14.000052452087402
    6. 'token' → logprob: -14.625052452087402
    7. '(tokens' → logprob: -14.750052452087402
    8. '   ' → logprob: -15.750052452087402
    9. ' ' → logprob: -15.750052452087402
    10. 'index' → logprob: -16.625051498413086

Token 166: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.00020401719666551799
    2. '[' → logprob: -8.500204086303711
    3. 'self' → logprob: -15.250204086303711
    4. '[
' → logprob: -15.500204086303711
    5. ' [' → logprob: -16.75020408630371
    6. ' self' → logprob: -18.12520408630371
    7. '[this' → logprob: -18.50020408630371
    8. '[token' → logprob: -18.50020408630371
    9. '```' → logprob: -18.75020408630371
    10. '   ' → logprob: -19.75020408630371

Token 167: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.64839569455944e-05
    2. '_index' → logprob: -10.125076293945312
    3. '.' → logprob: -10.625076293945312
    4. '       ' → logprob: -13.250076293945312
    5. '_tokens' → logprob: -13.250076293945312
    6. ')._' → logprob: -13.625076293945312
    7. '.index' → logprob: -13.875076293945312
    8. ']._' → logprob: -14.250076293945312
    9. '_idx' → logprob: -14.250076293945312
    10. '.
' → logprob: -14.250076293945312

Token 168: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -5.3120038501219824e-05
    2. 'tokens' → logprob: -10.000053405761719
    3. ' index' → logprob: -12.250053405761719
    4. '_index' → logprob: -14.000053405761719
    5. '1' → logprob: -15.375053405761719
    6. ' ' → logprob: -15.500053405761719
    7. 'inde' → logprob: -15.625053405761719
    8. '[index' → logprob: -15.625053405761719
    9. 'token' → logprob: -16.00005340576172
    10. '	index' → logprob: -16.12505340576172

Token 169: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016058888286352158
    2. ')
' → logprob: -4.141058921813965
    3. ']' → logprob: -11.391058921813965
    4. '       ' → logprob: -12.641058921813965
    5. ')
' → logprob: -13.141058921813965
    6. ')

' → logprob: -13.266058921813965
    7. '<|end|>' → logprob: -13.266058921813965
    8. ' )' → logprob: -13.891058921813965
    9. ')return' → logprob: -14.266058921813965
    10. ' ' → logprob: -14.266058921813965

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18011096119880676
    2. '
' → logprob: -1.8051109313964844
    3. 'self' → logprob: -8.805110931396484
    4. '        
' → logprob: -9.680110931396484
    5. '
' → logprob: -9.930110931396484
    6. '\n' → logprob: -9.930110931396484
    7. ' self' → logprob: -11.055110931396484
    8. '\' → logprob: -11.305110931396484
    9. ' 
' → logprob: -11.430110931396484
    10. '' → logprob: -12.305110931396484

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1406148374080658
    2. '       ' → logprob: -2.5156147480010986
    3. ' self' → logprob: -3.0156147480010986
    4. '
' → logprob: -6.640614986419678
    5. '	self' → logprob: -10.76561450958252
    6. '\' → logprob: -12.26561450958252
    7. '        
' → logprob: -12.64061450958252
    8. '   ' → logprob: -12.64061450958252
    9. ' 
' → logprob: -13.39061450958252
    10. '\n' → logprob: -13.64061450958252

Token 172: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.68153518543113e-05
    2. '.' → logprob: -9.875057220458984
    3. '._
' → logprob: -13.250057220458984
    4. ']._' → logprob: -13.750057220458984
    5. ')._' → logprob: -13.750057220458984
    6. '_' → logprob: -14.375057220458984
    7. ' .' → logprob: -15.500057220458984
    8. '.__' → logprob: -15.500057220458984
    9. '."_' → logprob: -16.375057220458984
    10. '.
' → logprob: -16.375057220458984

Token 173: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.4974866644479334e-05
    2. '_index' → logprob: -11.250015258789062
    3. ' index' → logprob: -13.875015258789062
    4. 'tokens' → logprob: -14.750015258789062
    5. ' ' → logprob: -16.500015258789062
    6. '   ' → logprob: -16.500015258789062
    7. '_tokens' → logprob: -16.750015258789062
    8. 'increment' → logprob: -16.875015258789062
    9. '
' → logprob: -17.250015258789062
    10. '	index' → logprob: -17.250015258789062

Token 174: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014817696064710617
    2. '+=' → logprob: -4.264817714691162
    3. '+' → logprob: -7.389817714691162
    4. ' +' → logprob: -10.264817237854004
    5. '<|end|>' → logprob: -14.389817237854004
    6. ' ' → logprob: -14.889817237854004
    7. '1' → logprob: -15.514817237854004
    8. '++' → logprob: -15.764817237854004
    9. '+="' → logprob: -16.38981819152832
    10. ']+=' → logprob: -16.88981819152832

Token 175: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -20.12510871887207
    4. '   ' → logprob: -21.25010871887207
    5. '１' → logprob: -22.50010871887207
    6. '0' → logprob: -23.12510871887207
    7. ' ' → logprob: -23.25010871887207
    8. '۱' → logprob: -23.37510871887207
    9. '`' → logprob: -23.50010871887207
    10. '  ' → logprob: -23.75010871887207

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -21.25
    4. '１' → logprob: -22.5
    5. '۱' → logprob: -23.5
    6. '
' → logprob: -23.5
    7. '   ' → logprob: -23.75
    8. '0' → logprob: -24.25
    9. '' → logprob: -24.5
    10. '

' → logprob: -25.0625

Token 177: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02678833343088627
    2. 'return' → logprob: -3.6517882347106934
    3. ' return' → logprob: -7.776788234710693
    4. '   ' → logprob: -10.026788711547852
    5. '	return' → logprob: -11.276788711547852
    6. '```' → logprob: -12.651788711547852
    7. '<|end|>' → logprob: -13.401788711547852
    8. '	' → logprob: -13.401788711547852
    9. ':return' → logprob: -13.901788711547852
    10. '        
' → logprob: -14.276788711547852

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10454937070608139
    2. 'return' → logprob: -2.3545494079589844
    3. ' return' → logprob: -5.479549407958984
    4. '   ' → logprob: -8.979549407958984
    5. '	return' → logprob: -10.979549407958984
    6. '
' → logprob: -11.979549407958984
    7. '        
' → logprob: -12.729549407958984
    8. '```' → logprob: -13.104549407958984
    9. 'token' → logprob: -13.479549407958984
    10. '	' → logprob: -13.479549407958984

Token 179: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.804671233519912e-05
    2. ' return' → logprob: -9.50008773803711
    3. '       ' → logprob: -11.25008773803711
    4. '   ' → logprob: -16.87508773803711
    5. 'token' → logprob: -17.37508773803711
    6. '	return' → logprob: -18.00008773803711
    7. ':return' → logprob: -19.25008773803711
    8. '
' → logprob: -19.62508773803711
    9. '```' → logprob: -19.62508773803711
    10. 'eturn' → logprob: -20.25008773803711

Token 180: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0031777136027812958
    2. ' token' → logprob: -5.753177642822266
    3. '	token' → logprob: -17.878177642822266
    4. '(token' → logprob: -19.128177642822266
    5. 't' → logprob: -20.378177642822266
    6. 'Token' → logprob: -20.878177642822266
    7. 'tok' → logprob: -20.878177642822266
    8. '[token' → logprob: -21.378177642822266
    9. '_token' → logprob: -21.628177642822266
    10. '.token' → logprob: -21.753177642822266

Token 181: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13796648383140564
    2. 'def' → logprob: -2.1379663944244385
    3. '#' → logprob: -5.887966632843018
    4. ' ' → logprob: -6.012966632843018
    5. 'class' → logprob: -6.887966632843018
    6. '[' → logprob: -7.012966632843018
    7. ' def' → logprob: -7.137966632843018
    8. '```' → logprob: -7.512966632843018
    9. '    
' → logprob: -8.01296615600586
    10. '    ' → logprob: -8.01296615600586

Token 183: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00028529210248962045
    2. '   ' → logprob: -8.750285148620605
    3. ' def' → logprob: -9.000285148620605
    4. 'class' → logprob: -13.125285148620605
    5. '	def' → logprob: -14.375285148620605
    6. 'peek' → logprob: -14.875285148620605
    7. ' ' → logprob: -16.125286102294922
    8. '@property' → logprob: -16.250286102294922
    9. 'reset' → logprob: -17.000286102294922
    10. 'de' → logprob: -17.125286102294922

Token 184: ' has' (ID: 853)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.05790257826447487
    2. 'has' → logprob: -3.5579025745391846
    3. ' peek' → logprob: -3.9329025745391846
    4. 'reset' → logprob: -5.557902812957764
    5. ' has' → logprob: -5.682902812957764
    6. 'rew' → logprob: -8.057902336120605
    7. '   ' → logprob: -8.932902336120605
    8. '__' → logprob: -9.182902336120605
    9. ' reset' → logprob: -9.182902336120605
    10. 'current' → logprob: -9.557902336120605

Token 185: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.5768771767616272
    2. '_more' → logprob: -1.0768771171569824
    3. '_' → logprob: -2.3268771171569824
    4. ' _' → logprob: -9.95187759399414
    5. '_token' → logprob: -10.82687759399414
    6. '_tokens' → logprob: -12.32687759399414
    7. '__' → logprob: -13.07687759399414
    8. '_remaining' → logprob: -13.20187759399414
    9. '_current' → logprob: -13.32687759399414
    10. '_n' → logprob: -13.57687759399414

Token 186: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05352067947387695
    2. '()' → logprob: -3.303520679473877
    3. '(' → logprob: -4.178520679473877
    4. 'self' → logprob: -10.553520202636719
    5. '():' → logprob: -12.053520202636719
    6. ' (' → logprob: -13.053520202636719
    7. ' ()' → logprob: -13.928520202636719
    8. '(s' → logprob: -14.553520202636719
    9. '(
' → logprob: -14.553520202636719
    10. ')' → logprob: -14.678520202636719

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2051135003566742
    2. '):' → logprob: -1.7051135301589966
    3. '()' → logprob: -6.080113410949707
    4. '):
' → logprob: -7.830113410949707
    5. ' )' → logprob: -8.205113410949707
    6. '():' → logprob: -8.455113410949707
    7. 'self' → logprob: -8.705113410949707
    8. '())' → logprob: -9.080113410949707
    9. ' ):' → logprob: -9.080113410949707
    10. '(self' → logprob: -9.205113410949707

Token 188: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003752694232389331
    2. '():' → logprob: -6.378752708435059
    3. '(' → logprob: -6.628752708435059
    4. 'self' → logprob: -8.003752708435059
    5. '()' → logprob: -8.128752708435059
    6. ':' → logprob: -10.378752708435059
    7. '():
' → logprob: -11.128752708435059
    8. ' (' → logprob: -11.128752708435059
    9. ' ->' → logprob: -11.378752708435059
    10. '->' → logprob: -11.878752708435059

Token 189: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.49344512820243835
    2. 'bool' → logprob: -0.9934451580047607
    3. ' True' → logprob: -4.493444919586182
    4. '()' → logprob: -5.743444919586182
    5. 'True' → logprob: -6.118444919586182
    6. ' ' → logprob: -6.743444919586182
    7. ')' → logprob: -7.993444919586182
    8. '_bool' → logprob: -8.11844539642334
    9. ' ()' → logprob: -8.24344539642334
    10. '(bool' → logprob: -8.61844539642334

Token 190: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004918854683637619
    2. '(' → logprob: -5.879919052124023
    3. '():' → logprob: -6.504919052124023
    4. ':' → logprob: -8.129919052124023
    5. 'self' → logprob: -8.754919052124023
    6. '       ' → logprob: -10.004919052124023
    7. '   ' → logprob: -10.379919052124023
    8. '(
' → logprob: -10.504919052124023
    9. '()' → logprob: -10.629919052124023
    10. '():
' → logprob: -11.004919052124023

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012881716713309288
    2. ' return' → logprob: -4.387881755828857
    3. 'return' → logprob: -8.3878812789917
    4. '
' → logprob: -9.6378812789917
    5. '   ' → logprob: -10.0128812789917
    6. ' 
' → logprob: -11.0128812789917
    7. '    ' → logprob: -12.0128812789917
    8. '        
' → logprob: -12.7628812789917
    9. '    
' → logprob: -13.0128812789917
    10. ' ' → logprob: -13.3878812789917

Token 192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00283899181522429
    2. ' return' → logprob: -6.252839088439941
    3. '       ' → logprob: -7.002839088439941
    4. '   ' → logprob: -14.627839088439941
    5. '
' → logprob: -16.127838134765625
    6. 'self' → logprob: -17.127838134765625
    7. '	return' → logprob: -17.127838134765625
    8. '{return' → logprob: -17.502838134765625
    9. ':return' → logprob: -19.002838134765625
    10. '        
' → logprob: -19.127838134765625

Token 193: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.02975395694375038
    2. 'self' → logprob: -3.5297539234161377
    3. ' ' → logprob: -13.904753684997559
    4. ' ' → logprob: -14.029753684997559
    5. ' len' → logprob: -14.029753684997559
    6. '	self' → logprob: -14.654753684997559
    7. '_self' → logprob: -15.529753684997559
    8. '(self' → logprob: -16.279754638671875
    9. 'len' → logprob: -16.279754638671875
    10. '   ' → logprob: -17.654754638671875

Token 194: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -12.500004768371582
    3. ' .' → logprob: -14.500004768371582
    4. ')._' → logprob: -17.000003814697266
    5. '.__' → logprob: -17.250003814697266
    6. ']._' → logprob: -17.375003814697266
    7. '_' → logprob: -17.500003814697266
    8. '._
' → logprob: -17.875003814697266
    9. '_index' → logprob: -18.125003814697266
    10. '."_' → logprob: -18.500003814697266

Token 195: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -6.408677290892228e-05
    2. '_index' → logprob: -10.2500638961792
    3. 'tokens' → logprob: -10.6250638961792
    4. ' index' → logprob: -12.8750638961792
    5. '_tokens' → logprob: -14.7500638961792
    6. 'nd' → logprob: -14.7500638961792
    7. 'inde' → logprob: -16.000064849853516
    8. 'ind' → logprob: -16.000064849853516
    9. 'x' → logprob: -16.125064849853516
    10. '	index' → logprob: -16.250064849853516

Token 196: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3868895173072815
    2. '<' → logprob: -1.1368894577026367
    3. '<len' → logprob: -11.761889457702637
    4. ' ' → logprob: -11.886889457702637
    5. '<size' → logprob: -12.886889457702637
    6. '<int' → logprob: -15.136889457702637
    7. ' ' → logprob: -15.511889457702637
    8. '<num' → logprob: -15.636889457702637
    9. '<class' → logprob: -16.136890411376953
    10. '<std' → logprob: -16.636890411376953

Token 197: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1602243334054947
    2. 'len' → logprob: -1.9102243185043335
    3. '(len' → logprob: -16.53522491455078
    4. '=len' → logprob: -17.16022491455078
    5. '	len' → logprob: -17.28522491455078
    6. ' ' → logprob: -17.66022491455078
    7. '[len' → logprob: -18.28522491455078
    8. '   ' → logprob: -18.41022491455078
    9. '<len' → logprob: -19.16022491455078
    10. ',len' → logprob: -19.91022491455078

Token 198: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009119403548538685
    2. '(' → logprob: -7.000911712646484
    3. 'self' → logprob: -15.375911712646484
    4. '(s' → logprob: -15.875911712646484
    5. '(
' → logprob: -16.500911712646484
    6. '(sel' → logprob: -17.875911712646484
    7. '(this' → logprob: -18.125911712646484
    8. ' (' → logprob: -18.375911712646484
    9. '()' → logprob: -19.875911712646484
    10. '(se' → logprob: -20.125911712646484

Token 199: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.002487903693690896
    2. '_tokens' → logprob: -6.002488136291504
    3. '_' → logprob: -12.877488136291504
    4. '.tokens' → logprob: -13.127488136291504
    5. '.' → logprob: -13.252488136291504
    6. '_token' → logprob: -13.877488136291504
    7. '   ' → logprob: -13.877488136291504
    8. ')._' → logprob: -14.002488136291504
    9. ' .' → logprob: -14.252488136291504
    10. '```' → logprob: -14.877488136291504

Token 200: 'tokens' (ID: 64329)
  Prédit: 'tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00862426683306694
    2. '_tokens' → logprob: -4.758624076843262
    3. ' tokens' → logprob: -12.508624076843262
    4. '.tokens' → logprob: -12.758624076843262
    5. 'okens' → logprob: -13.008624076843262
    6. 'token' → logprob: -15.133624076843262
    7. '(tokens' → logprob: -15.883624076843262
    8. 't' → logprob: -15.883624076843262
    9. '_token' → logprob: -16.508625030517578
    10. 'Tokens' → logprob: -16.633625030517578

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.625003814697266
    4. '   ' → logprob: -16.125003814697266
    5. '}' → logprob: -16.375003814697266
    6. ')return' → logprob: -17.000003814697266
    7. '))' → logprob: -17.625003814697266
    8. ')

' → logprob: -17.750003814697266
    9. '())' → logprob: -18.000003814697266
    10. '()' → logprob: -18.250003814697266

Token 202: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010740288533270359
    2. '   ' → logprob: -4.635740280151367
    3. ' def' → logprob: -7.635740280151367
    4. 'class' → logprob: -8.635740280151367
    5. '
' → logprob: -9.010740280151367
    6. 'd' → logprob: -9.510740280151367
    7. '```' → logprob: -9.885740280151367
    8. '    
' → logprob: -11.010740280151367
    9. ' ' → logprob: -11.510740280151367
    10. '[' → logprob: -11.510740280151367

Token 203: ' Calculator' (ID: 41921)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.5456594228744507
    2. ' Parser' → logprob: -2.0456595420837402
    3. 'Tokenizer' → logprob: -2.2956595420837402
    4. 'Token' → logprob: -2.6706595420837402
    5. 'Expression' → logprob: -2.6706595420837402
    6. 'Calculator' → logprob: -3.7956595420837402
    7. ' Token' → logprob: -4.92065954208374
    8. 'Lexer' → logprob: -4.92065954208374
    9. 'Evaluator' → logprob: -5.17065954208374
    10. ' Calculator' → logprob: -5.54565954208374

Token 204: 'State' (ID: 1881)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003442832676228136
    2. ':
' → logprob: -8.000344276428223
    3. ' :' → logprob: -12.375344276428223
    4. '():' → logprob: -13.375344276428223
    5. '(' → logprob: -13.500344276428223
    6. ':

' → logprob: -14.375344276428223
    7. ':def' → logprob: -14.625344276428223
    8. '):' → logprob: -15.375344276428223
    9. ':**' → logprob: -16.12534523010254
    10. '<|end|>' → logprob: -16.37534523010254

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004889304982498288
    2. ':
' → logprob: -7.875488758087158
    3. ' :' → logprob: -9.375489234924316
    4. '(' → logprob: -11.875489234924316
    5. '(Enum' → logprob: -12.000489234924316
    6. '():' → logprob: -12.500489234924316
    7. 'State' → logprob: -13.750489234924316
    8. '(State' → logprob: -14.000489234924316
    9. ':

' → logprob: -14.250489234924316
    10. 'States' → logprob: -14.250489234924316

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16129978001117706
    2. ' def' → logprob: -1.9112998247146606
    3. 'def' → logprob: -7.036299705505371
    4. '    ' → logprob: -8.661299705505371
    5. ' pass' → logprob: -11.911299705505371
    6. 'class' → logprob: -12.036299705505371
    7. '	def' → logprob: -13.286299705505371
    8. '   ' → logprob: -13.286299705505371
    9. '(' → logprob: -13.536299705505371
    10. ' class' → logprob: -13.786299705505371

Token 207: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07889870554208755
    2. 'def' (adapté à ' def') → logprob: -2.5788986682891846
    3. '   ' → logprob: -12.203898429870605
    4. 'class' → logprob: -13.078898429870605
    5. ' pass' → logprob: -14.203898429870605
    6. '	def' → logprob: -14.703898429870605
    7. ' ' → logprob: -15.203898429870605
    8. 'pass' → logprob: -15.828898429870605
    9. '    ' → logprob: -16.328899383544922
    10. '  ' → logprob: -16.328899383544922

Token 208: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0030832362826913595
    2. ' def' → logprob: -6.503083229064941
    3. '__' → logprob: -6.628083229064941
    4. ' ' → logprob: -9.628083229064941
    5. '_init' → logprob: -9.628083229064941
    6. ' init' → logprob: -9.628083229064941
    7. 'def' → logprob: -10.503083229064941
    8. 'init' → logprob: -11.253083229064941
    9. '_' → logprob: -12.503083229064941
    10. ' initialize' → logprob: -12.753083229064941

Token 209: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.700132997939363e-05
    2. 'nit' → logprob: -12.625017166137695
    3. '```' → logprob: -12.625017166137695
    4. ' init' → logprob: -12.875017166137695
    5. 'int' → logprob: -13.125017166137695
    6. '_init' → logprob: -13.625017166137695
    7. '   ' → logprob: -14.000017166137695
    8. '
' → logprob: -14.500017166137695
    9. 'in' → logprob: -14.500017166137695
    10. 'new' → logprob: -14.500017166137695

Token 210: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00010127831774298102
    2. '__' → logprob: -9.250101089477539
    3. '__(
' → logprob: -12.500101089477539
    4. '_(' → logprob: -13.875101089477539
    5. '(self' → logprob: -14.875101089477539
    6. '_' → logprob: -16.87510108947754
    7. '__((' → logprob: -17.62510108947754
    8. '__('' → logprob: -17.87510108947754
    9. '(' → logprob: -17.87510108947754
    10. '__("' → logprob: -18.25010108947754

Token 211: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005668530357070267
    2. '):
' → logprob: -7.8755669593811035
    3. ')' → logprob: -8.750566482543945
    4. ' self' → logprob: -11.000566482543945
    5. '
' → logprob: -12.125566482543945
    6. '   ' → logprob: -12.875566482543945
    7. ')(' → logprob: -14.125566482543945
    8. '0' → logprob: -14.375566482543945
    9. '):

' → logprob: -14.375566482543945
    10. '       ' → logprob: -14.500566482543945

Token 212: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8400295376777649
    2. '):' → logprob: -0.9650295376777649
    3. ',' → logprob: -1.7150294780731201
    4. ' ):' → logprob: -5.840029716491699
    5. ' ,' → logprob: -6.715029716491699
    6. ')' → logprob: -6.715029716491699
    7. ' ):
' → logprob: -6.715029716491699
    8. 'self' → logprob: -8.0900297164917
    9. '):
' → logprob: -8.9650297164917
    10. '   ' → logprob: -9.0900297164917

Token 213: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009270301088690758
    2. ' self' → logprob: -4.884270191192627
    3. '       ' → logprob: -6.884270191192627
    4. '   ' → logprob: -7.509270191192627
    5. '	self' → logprob: -10.259270668029785
    6. '0' → logprob: -10.759270668029785
    7. '(self' → logprob: -11.384270668029785
    8. '
' → logprob: -12.134270668029785
    9. '):
' → logprob: -12.509270668029785
    10. ' ' → logprob: -12.509270668029785

Token 214: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.034208957105875015
    2. ' self' → logprob: -3.4092090129852295
    3. '       ' → logprob: -7.65920877456665
    4. '   ' → logprob: -9.409209251403809
    5. 'super' → logprob: -12.534209251403809
    6. '	self' → logprob: -13.409209251403809
    7. ' ' → logprob: -13.784209251403809
    8. '  ' → logprob: -14.034209251403809
    9. '    ' → logprob: -14.534209251403809
    10. 'pass' → logprob: -14.909209251403809

Token 215: '.current' (ID: 8357)
  Prédit: '.value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.6592301726341248
    2. '.current' → logprob: -1.1592302322387695
    3. '.result' → logprob: -3.0342302322387695
    4. '.' → logprob: -3.1592302322387695
    5. '.values' → logprob: -3.7842302322387695
    6. '.stack' → logprob: -4.6592302322387695
    7. '._' → logprob: -4.7842302322387695
    8. '.variables' → logprob: -4.7842302322387695
    9. '.expression' → logprob: -4.7842302322387695
    10. '.tokens' → logprob: -5.0342302322387695

Token 216: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.003961212933063507
    2. '_result' → logprob: -6.003961086273193
    3. '_token' → logprob: -7.003961086273193
    4. '_number' → logprob: -8.378961563110352
    5. '_' → logprob: -8.503961563110352
    6. '_operand' → logprob: -10.128961563110352
    7. '_operator' → logprob: -10.503961563110352
    8. 'Value' → logprob: -11.003961563110352
    9. '=' → logprob: -11.128961563110352
    10. '_expression' → logprob: -11.253961563110352

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931495666503906
    2. ' =' → logprob: -0.6931495666503906
    3. ':' → logprob: -13.44314956665039
    4. '=None' → logprob: -15.06814956665039
    5. ' ' → logprob: -15.19314956665039
    6. '<|end|>' → logprob: -16.06814956665039
    7. '  ' → logprob: -16.94314956665039
    8. ':int' → logprob: -17.31814956665039
    9. '=int' → logprob: -17.56814956665039
    10. 's' → logprob: -18.19314956665039

Token 218: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005304908379912376
    2. ' ' → logprob: -5.25530481338501
    3. ' None' → logprob: -10.130305290222168
    4. 'None' → logprob: -10.380305290222168
    5. ' ' → logprob: -16.25530433654785
    6. '   ' → logprob: -16.88030433654785
    7. '  ' → logprob: -17.75530433654785
    8. '۰' → logprob: -17.81780433654785
    9. '(None' → logprob: -18.44280433654785
    10. '```' → logprob: -19.25530433654785

Token 219: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.588108479976654
    2. 'self' (adapté à ' self') → logprob: -0.838108479976654
    3. '0' → logprob: -4.713108539581299
    4. 'None' → logprob: -6.713108539581299
    5. ' None' → logprob: -6.963108539581299
    6. ' ' → logprob: -7.713108539581299
    7. '   ' → logprob: -8.33810806274414
    8. '       ' → logprob: -9.21310806274414
    9. 'False' → logprob: -10.21310806274414
    10. ' operator' → logprob: -10.83810806274414

Token 222: '.pending' (ID: 110126)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8056882619857788
    2. ' =' → logprob: -1.1806882619857788
    3. '._' → logprob: -2.8056883811950684
    4. '=' → logprob: -3.5556883811950684
    5. '.operator' → logprob: -3.5556883811950684
    6. ' .' → logprob: -4.055688381195068
    7. '_operator' → logprob: -4.180688381195068
    8. '.current' → logprob: -4.305688381195068
    9. ' operator' → logprob: -4.430688381195068
    10. '.tokens' → logprob: -4.680688381195068

Token 223: '_operator' (ID: 97926)
  Prédit: '_operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operator' → logprob: -0.024803485721349716
    2. '_operation' → logprob: -3.774803400039673
    3. '_value' → logprob: -7.274803638458252
    4. '_token' → logprob: -7.524803638458252
    5. 'operator' → logprob: -9.524803161621094
    6. '_op' → logprob: -9.524803161621094
    7. '_' → logprob: -9.524803161621094
    8. '_operand' → logprob: -9.649803161621094
    9. 'Operator' → logprob: -10.524803161621094
    10. '_result' → logprob: -13.274803161621094

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695583701133728
    2. '=' → logprob: -2.12695574760437
    3. ':' → logprob: -11.37695598602295
    4. '=None' → logprob: -11.50195598602295
    5. ' ' → logprob: -12.50195598602295
    6. '<|end|>' → logprob: -13.50195598602295
    7. '_' → logprob: -14.25195598602295
    8. 's' → logprob: -16.001955032348633
    9. '  ' → logprob: -16.001955032348633
    10. ',' → logprob: -16.626955032348633

Token 225: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16022492945194244
    2. ' None' → logprob: -1.9102249145507812
    3. '_None' → logprob: -15.160224914550781
    4. '(None' → logprob: -15.535224914550781
    5. '=None' → logprob: -15.535224914550781
    6. 'none' → logprob: -16.91022491455078
    7. ' ' → logprob: -17.28522491455078
    8. '_none' → logprob: -18.28522491455078
    9. '.None' → logprob: -18.53522491455078
    10. '  ' → logprob: -18.78522491455078

Token 226: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2988535463809967
    2. 'def' → logprob: -2.048853635787964
    3. ' def' → logprob: -2.048853635787964
    4. '<|end|>' → logprob: -8.673853874206543
    5. '	def' → logprob: -8.798853874206543
    6. ' 
' → logprob: -9.548853874206543
    7. '
' → logprob: -9.673853874206543
    8. '    
' → logprob: -9.798853874206543
    9. '    ' → logprob: -11.173853874206543
    10. ' ' → logprob: -11.548853874206543

Token 228: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000206401280593127
    2. ' def' → logprob: -8.500205993652344
    3. '   ' → logprob: -12.750205993652344
    4. '	def' → logprob: -18.000205993652344
    5. 'de' → logprob: -21.250205993652344
    6. ' ' → logprob: -21.375205993652344
    7. 'class' → logprob: -22.500205993652344
    8. '```' → logprob: -22.625205993652344
    9. '  ' → logprob: -23.500205993652344
    10. ')' → logprob: -23.750205993652344

Token 229: ' reset' (ID: 12820)
  Prédit: ' reset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reset' → logprob: -0.2682279944419861
    2. ' apply' → logprob: -2.268228054046631
    3. ' def' → logprob: -3.018228054046631
    4. 'reset' → logprob: -3.393228054046631
    5. 'def' → logprob: -4.143228054046631
    6. ' process' → logprob: -4.143228054046631
    7. 'apply' → logprob: -4.393228054046631
    8. 'process' → logprob: -6.393228054046631
    9. ' clear' → logprob: -6.518228054046631
    10. ' evaluate' → logprob: -7.268228054046631

Token 230: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003596029244363308
    2. '()' → logprob: -6.62859582901001
    3. '():' → logprob: -6.87859582901001
    4. '(' → logprob: -6.87859582901001
    5. ' (' → logprob: -8.753596305847168
    6. 'self' → logprob: -10.753596305847168
    7. '   ' → logprob: -11.753596305847168
    8. '():
' → logprob: -12.253596305847168
    9. '(s' → logprob: -12.753596305847168
    10. '(
' → logprob: -12.753596305847168

Token 231: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0112268952652812
    2. '):
' → logprob: -4.511227130889893
    3. ')' → logprob: -8.761226654052734
    4. ' ):' → logprob: -11.511226654052734
    5. '():' → logprob: -12.261226654052734
    6. 'self' → logprob: -13.011226654052734
    7. '   ' → logprob: -13.261226654052734
    8. ' ' → logprob: -14.261226654052734
    9. '()' → logprob: -14.386226654052734
    10. '       ' → logprob: -14.386226654052734

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00048143533058464527
    2. 'self' → logprob: -7.875481605529785
    3. ' self' → logprob: -9.250481605529785
    4. '
' → logprob: -12.750481605529785
    5. '(self' → logprob: -13.625481605529785
    6. '   ' → logprob: -14.625481605529785
    7. '```' → logprob: -15.125481605529785
    8. '	self' → logprob: -15.375481605529785
    9. '        
' → logprob: -16.62548065185547
    10. '\' → logprob: -17.62548065185547

Token 233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10247166454792023
    2. ' self' → logprob: -2.3524715900421143
    3. '       ' → logprob: -6.102471828460693
    4. '   ' → logprob: -10.852471351623535
    5. '	self' → logprob: -12.227471351623535
    6. '```' → logprob: -14.852471351623535
    7. ' ' → logprob: -15.602471351623535
    8. '(self' → logprob: -15.977471351623535
    9. '
' → logprob: -16.10247230529785
    10. 'Self' → logprob: -17.35247230529785

Token 234: '.current' (ID: 8357)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1603703498840332
    2. '.current' → logprob: -1.9103703498840332
    3. 'current' → logprob: -9.285369873046875
    4. ' .' → logprob: -10.535369873046875
    5. ' current' → logprob: -11.160369873046875
    6. ' ' → logprob: -11.910369873046875
    7. '._' → logprob: -13.285369873046875
    8. '.cur' → logprob: -13.785369873046875
    9. '_current' → logprob: -13.910369873046875
    10. '.
' → logprob: -14.785369873046875

Token 235: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.435139898210764e-05
    2. '_' → logprob: -9.625083923339844
    3. '_val' → logprob: -11.000083923339844
    4. ' _' → logprob: -14.250083923339844
    5. 'value' → logprob: -14.500083923339844
    6. '_values' → logprob: -15.375083923339844
    7. '_state' → logprob: -16.750083923339844
    8. '=_' → logprob: -17.000083923339844
    9. '_Value' → logprob: -17.125083923339844
    10. '_VALUE' → logprob: -17.125083923339844

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023257357999682426
    2. '=' → logprob: -3.773257255554199
    3. '=None' → logprob: -11.3982572555542
    4. ' None' → logprob: -15.0232572555542
    5. 'None' → logprob: -15.7732572555542
    6. ' is' → logprob: -16.023258209228516
    7. ' ' → logprob: -16.273258209228516
    8. '(None' → logprob: -18.523258209228516
    9. ',' → logprob: -19.273258209228516
    10. ')' → logprob: -19.523258209228516

Token 237: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4740777611732483
    2. ' None' → logprob: -0.9740777611732483
    3. '0' → logprob: -15.224078178405762
    4. '_None' → logprob: -15.224078178405762
    5. '(None' → logprob: -15.599078178405762
    6. '=None' → logprob: -17.099077224731445
    7. ',None' → logprob: -18.224077224731445
    8. 'none' → logprob: -18.474077224731445
    9. '.None' → logprob: -18.849077224731445
    10. '_none' → logprob: -19.599077224731445

Token 238: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02981274574995041
    2. '
' → logprob: -3.529812812805176
    3. '<|end|>' → logprob: -9.904812812805176
    4. '   ' → logprob: -12.029812812805176
    5. 'self' → logprob: -13.154812812805176
    6. '
' → logprob: -14.654812812805176
    7. '        
' → logprob: -14.654812812805176
    8. ',' → logprob: -14.654812812805176
    9. '           ' → logprob: -14.904812812805176
    10. ',
' → logprob: -15.029812812805176

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013405199570115656
    2. '   ' → logprob: -9.625134468078613
    3. 'self' → logprob: -9.625134468078613
    4. ' self' → logprob: -13.375134468078613
    5. '           ' → logprob: -15.750134468078613
    6. '
' → logprob: -16.875133514404297
    7. '	' → logprob: -17.125133514404297
    8. ',' → logprob: -17.375133514404297
    9. '      ' → logprob: -17.375133514404297
    10. '	self' → logprob: -17.375133514404297

Token 240: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002090184949338436
    2. '       ' → logprob: -6.877089977264404
    3. ' self' → logprob: -6.877089977264404
    4. '   ' → logprob: -10.752090454101562
    5. '	self' → logprob: -13.127090454101562
    6. '           ' → logprob: -13.752090454101562
    7. ' ' → logprob: -15.002090454101562
    8. '[self' → logprob: -15.877090454101562
    9. 'Self' → logprob: -16.252090454101562
    10. '  ' → logprob: -16.502090454101562

Token 241: '.pending' (ID: 110126)
  Prédit: '.pending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pending' → logprob: -0.0006751431501470506
    2. '.' → logprob: -7.375675201416016
    3. '.p' → logprob: -10.375675201416016
    4. ' .' → logprob: -11.500675201416016
    5. 'pending' → logprob: -12.750675201416016
    6. '.current' → logprob: -14.125675201416016
    7. '._' → logprob: -14.125675201416016
    8. '​.' → logprob: -14.375675201416016
    9. '.previous' → logprob: -15.250675201416016
    10. '.Pending' → logprob: -15.625675201416016

Token 242: '_operator' (ID: 97926)
  Prédit: '_operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operator' → logprob: -1.1041145626222715e-05
    2. '_' → logprob: -11.500011444091797
    3. '_operation' → logprob: -14.750011444091797
    4. 'operator' → logprob: -16.000011444091797
    5. '_operand' → logprob: -16.375011444091797
    6. '_op' → logprob: -16.625011444091797
    7. '_OPERATOR' → logprob: -17.375011444091797
    8. ' _' → logprob: -17.375011444091797
    9. '_optimizer' → logprob: -18.000011444091797
    10. '_opcode' → logprob: -18.625011444091797

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869067430496216
    2. ' =' → logprob: -1.1369067430496216
    3. '=None' → logprob: -10.261906623840332
    4. 'None' → logprob: -15.136906623840332
    5. ' None' → logprob: -15.386906623840332
    6. ' ' → logprob: -15.886906623840332
    7. '<|end|>' → logprob: -16.63690757751465
    8. ' is' → logprob: -18.13690757751465
    9. '=

' → logprob: -18.88690757751465
    10. '=False' → logprob: -18.88690757751465

Token 244: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005234002135694027
    2. ' None' → logprob: -5.2552337646484375
    3. 'none' → logprob: -16.380233764648438
    4. '_None' → logprob: -16.380233764648438
    5. '(None' → logprob: -17.130233764648438
    6. '=None' → logprob: -18.505233764648438
    7. '.None' → logprob: -19.130233764648438
    8. '_none' → logprob: -19.505233764648438
    9. '0' → logprob: -19.630233764648438
    10. ',None' → logprob: -20.380233764648438

Token 245: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6460198760032654
    2. '   ' → logprob: -0.8960198760032654
    3. '<|end|>' → logprob: -2.89601993560791
    4. 'def' → logprob: -4.64601993560791
    5. '<|end|>' → logprob: -6.77101993560791
    6. '    
' → logprob: -6.77101993560791
    7. ' def' → logprob: -8.77101993560791
    8. 'class' → logprob: -9.27101993560791
    9. '  
' → logprob: -9.52101993560791
    10. ' 
' → logprob: -9.52101993560791

Token 246: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.052317894995212555
    2. '   ' → logprob: -3.1773178577423096
    3. 'class' → logprob: -4.802318096160889
    4. ' def' → logprob: -6.927318096160889
    5. '<|end|>' → logprob: -10.42731761932373
    6. ' class' → logprob: -11.17731761932373
    7. ' ' → logprob: -11.30231761932373
    8. '	def' → logprob: -11.92731761932373
    9. '  ' → logprob: -12.55231761932373
    10. '.' → logprob: -12.55231761932373

Token 247: ' Calculator' (ID: 41921)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.13158415257930756
    2. ' Calculator' → logprob: -2.3815841674804688
    3. 'Simple' → logprob: -4.631584167480469
    4. 'Evaluator' → logprob: -4.756584167480469
    5. 'Parser' → logprob: -5.256584167480469
    6. 'Basic' → logprob: -6.131584167480469
    7. ' Simple' → logprob: -6.256584167480469
    8. 'Expression' → logprob: -6.381584167480469
    9. ' Parser' → logprob: -7.631584167480469
    10. 'Interpreter' → logprob: -8.131584167480469

Token 248: 'Engine' (ID: 7286)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007268482004292309
    2. ':
' → logprob: -7.375726699829102
    3. ' :' → logprob: -9.500726699829102
    4. '():' → logprob: -11.625726699829102
    5. '>:' → logprob: -12.625726699829102
    6. '):' → logprob: -12.750726699829102
    7. 'State' → logprob: -13.000726699829102
    8. '(' → logprob: -13.125726699829102
    9. ':

' → logprob: -13.375726699829102
    10. ':def' → logprob: -14.125726699829102

Token 249: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03385407477617264
    2. ' :' → logprob: -3.4088540077209473
    3. ':
' → logprob: -8.658854484558105
    4. ' :
' → logprob: -10.533854484558105
    5. '):' → logprob: -13.158854484558105
    6. ':def' → logprob: -13.283854484558105
    7. '(' → logprob: -13.908854484558105
    8. '():' → logprob: -14.158854484558105
    9. ':

' → logprob: -14.283854484558105
    10. '<|end|>' → logprob: -14.658854484558105

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030144991353154182
    2. ' def' → logprob: -3.5301449298858643
    3. 'def' → logprob: -8.155144691467285
    4. '    ' → logprob: -10.030144691467285
    5. ' class' → logprob: -10.530144691467285
    6. 'class' → logprob: -10.655144691467285
    7. '(' → logprob: -12.780144691467285
    8. '    
' → logprob: -13.155144691467285
    9. '	def' → logprob: -13.405144691467285
    10. '   ' → logprob: -13.405144691467285

Token 251: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.029823746532201767
    2. 'def' (adapté à ' def') → logprob: -3.5298237800598145
    3. '   ' → logprob: -9.529823303222656
    4. '    ' → logprob: -14.404823303222656
    5. 'class' → logprob: -17.029823303222656
    6. ' ' → logprob: -17.529823303222656
    7. '	def' → logprob: -17.654823303222656
    8. ' __' → logprob: -19.029823303222656
    9. '```' → logprob: -19.029823303222656
    10. '  ' → logprob: -19.529823303222656

Token 252: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023513099178671837
    2. ' init' → logprob: -4.523513317108154
    3. ' def' → logprob: -5.523513317108154
    4. '_init' → logprob: -5.773513317108154
    5. ' _' → logprob: -6.023513317108154
    6. ' ' → logprob: -6.773513317108154
    7. '__' → logprob: -6.773513317108154
    8. '_' → logprob: -8.273512840270996
    9. ' ' → logprob: -9.023512840270996
    10. 'init' → logprob: -9.398512840270996

Token 253: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.020657507702708244
    2. '__' → logprob: -4.395657539367676
    3. 'it' → logprob: -5.395657539367676
    4. '_init' → logprob: -6.020657539367676
    5. 'def' → logprob: -7.270657539367676
    6. ' init' → logprob: -8.020657539367676
    7. '(init' → logprob: -10.395657539367676
    8. ' def' → logprob: -10.520657539367676
    9. ' __' → logprob: -10.895657539367676
    10. '```' → logprob: -11.020657539367676

Token 254: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003490514063742012
    2. '__' → logprob: -8.000349044799805
    3. '_(' → logprob: -11.875349044799805
    4. '(self' → logprob: -12.125349044799805
    5. '__(
' → logprob: -13.875349044799805
    6. ' (' → logprob: -16.625349044799805
    7. '__('' → logprob: -16.625349044799805
    8. '_' → logprob: -16.750349044799805
    9. '___' → logprob: -17.500349044799805
    10. ' __(' → logprob: -17.750349044799805

Token 255: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.836499985889532e-05
    2. ' self' → logprob: -10.0000581741333
    3. ')' → logprob: -11.7500581741333
    4. '):
' → logprob: -12.6250581741333
    5. '
' → logprob: -13.5000581741333
    6. '   ' → logprob: -15.6250581741333
    7. '(self' → logprob: -16.875059127807617
    8. '):

' → logprob: -17.000059127807617
    9. ')(' → logprob: -17.375059127807617
    10. ' ' → logprob: -18.000059127807617

Token 256: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13379332423210144
    2. '):
' → logprob: -2.258793354034424
    3. ',' → logprob: -4.008793354034424
    4. ' ):' → logprob: -6.508793354034424
    5. 'self' → logprob: -7.133793354034424
    6. '   ' → logprob: -9.633792877197266
    7. ' ):
' → logprob: -9.633792877197266
    8. '():' → logprob: -9.883792877197266
    9. ' ,' → logprob: -10.758792877197266
    10. ')' → logprob: -10.758792877197266

Token 257: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10253287851810455
    2. '       ' → logprob: -2.3525328636169434
    3. '):
' → logprob: -6.727532863616943
    4. ' self' → logprob: -6.977532863616943
    5. '   ' → logprob: -8.977533340454102
    6. ')' → logprob: -10.602533340454102
    7. '
' → logprob: -10.977533340454102
    8. 'Calculator' → logprob: -11.852533340454102
    9. '```' → logprob: -12.102533340454102
    10. '(self' → logprob: -12.477533340454102

Token 258: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005952088395133615
    2. ' self' → logprob: -7.7505950927734375
    3. '       ' → logprob: -8.750595092773438
    4. '   ' → logprob: -12.375595092773438
    5. '
' → logprob: -13.250595092773438
    6. '        
' → logprob: -16.750595092773438
    7. '	self' → logprob: -17.500595092773438
    8. '(self' → logprob: -18.125595092773438
    9. 'super' → logprob: -18.250595092773438
    10. 'def' → logprob: -19.000595092773438

Token 259: '.state' (ID: 6696)
  Prédit: '.state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -0.0687963142991066
    2. 'state' → logprob: -2.943796396255493
    3. '.' → logprob: -4.943796157836914
    4. '._' → logprob: -5.693796157836914
    5. ' state' → logprob: -6.318796157836914
    6. ' .' → logprob: -6.818796157836914
    7. '   ' → logprob: -8.693796157836914
    8. '_state' → logprob: -9.443796157836914
    9. '.token' → logprob: -9.818796157836914
    10. '.states' → logprob: -10.318796157836914

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164102263748646
    2. '=' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.139163970947266
    4. ' ' → logprob: -15.639163970947266
    5. '  ' → logprob: -16.639163970947266
    6. '    ' → logprob: -18.889163970947266
    7. ' =
' → logprob: -19.264163970947266
    8. ':' → logprob: -19.889163970947266
    9. 'import' → logprob: -20.139163970947266
    10. '	' → logprob: -20.639163970947266

Token 261: ' Calculator' (ID: 41921)
  Prédit: ' Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Calculator' → logprob: -0.008615161292254925
    2. 'Calculator' → logprob: -4.758615016937256
    3. ' Calcul' → logprob: -14.633615493774414
    4. 'Calcul' → logprob: -17.508615493774414
    5. ' Calc' → logprob: -18.133615493774414
    6. '   ' → logprob: -18.133615493774414
    7. ' ' → logprob: -18.258615493774414
    8. ' calculator' → logprob: -18.508615493774414
    9. '    ' → logprob: -18.883615493774414
    10. 'Calc' → logprob: -19.258615493774414

Token 262: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -2.696889623621246e-06
    2. 'Engine' → logprob: -12.87500286102295
    3. 'state' → logprob: -17.125001907348633
    4. 'St' → logprob: -19.250001907348633
    5. 'Stat' → logprob: -19.625001907348633
    6. 'S' → logprob: -19.750001907348633
    7. '_state' → logprob: -20.125001907348633
    8. '	State' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.750001907348633
    10. ' State' → logprob: -20.875001907348633

Token 263: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0576553344726562
    2. '<|end|>' → logprob: -1.0576553344726562
    3. 'def' → logprob: -1.5576553344726562
    4. ' def' → logprob: -3.1826553344726562
    5. '   ' → logprob: -3.3076553344726562
    6. '

' → logprob: -5.182655334472656
    7. '<|end|>' → logprob: -5.557655334472656
    8. '()' → logprob: -6.432655334472656
    9. '	def' → logprob: -6.557655334472656
    10. '    
' → logprob: -6.557655334472656

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32370367646217346
    2. ' def' → logprob: -1.448703646659851
    3. 'def' → logprob: -3.1987037658691406
    4. '    ' → logprob: -8.32370376586914
    5. '    
' → logprob: -8.44870376586914
    6. '<|end|>' → logprob: -8.82370376586914
    7. '
' → logprob: -9.57370376586914
    8. ' ' → logprob: -9.94870376586914
    9. ' 
' → logprob: -10.19870376586914
    10. '	def' → logprob: -10.69870376586914

Token 265: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004330532974563539
    2. ' def' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.000432968139648
    4. 'de' → logprob: -18.25043296813965
    5. 'd' → logprob: -18.37543296813965
    6. '	def' → logprob: -19.75043296813965
    7. ' ' → logprob: -22.12543296813965
    8. '```' → logprob: -22.37543296813965
    9. 'async' → logprob: -22.50043296813965
    10. '  ' → logprob: -23.25043296813965

Token 266: ' apply' (ID: 6096)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.48593267798423767
    2. ' evaluate' → logprob: -1.48593270778656
    3. ' reset' → logprob: -2.2359325885772705
    4. ' calculate' → logprob: -3.2359325885772705
    5. 'process' → logprob: -5.36093282699585
    6. 'evaluate' → logprob: -5.86093282699585
    7. ' def' → logprob: -6.73593282699585
    8. 'calculate' → logprob: -7.48593282699585
    9. 'reset' → logprob: -7.61093282699585
    10. ' input' → logprob: -7.61093282699585

Token 267: '_operation' (ID: 77985)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7096337676048279
    2. '_operator' → logprob: -0.7096337676048279
    3. '(' → logprob: -4.209633827209473
    4. '_operation' → logprob: -7.709633827209473
    5. ' (' → logprob: -8.084633827209473
    6. '_operand' → logprob: -8.334633827209473
    7. '(operator' → logprob: -8.584633827209473
    8. '_' → logprob: -9.209633827209473
    9. 'operator' → logprob: -9.709633827209473
    10. '(
' → logprob: -10.084633827209473

Token 268: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015099779702723026
    2. '(' → logprob: -6.501510143280029
    3. ' (' → logprob: -12.376509666442871
    4. '(
' → logprob: -12.751509666442871
    5. '   ' → logprob: -15.626509666442871
    6. '(s' → logprob: -16.001510620117188
    7. 'self' → logprob: -16.001510620117188
    8. '(sel' → logprob: -16.501510620117188
    9. '       ' → logprob: -16.751510620117188
    10. '(this' → logprob: -18.376510620117188

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00891259778290987
    2. '(self' → logprob: -5.383912563323975
    3. ' ,' → logprob: -5.758912563323975
    4. ' (' → logprob: -7.383912563323975
    5. 'self' → logprob: -8.008913040161133
    6. '(' → logprob: -9.508913040161133
    7. ',self' → logprob: -10.383913040161133
    8. ')' → logprob: -11.008913040161133
    9. 'operator' → logprob: -11.133913040161133
    10. '(operator' → logprob: -11.508913040161133

Token 270: ' left' (ID: 3561)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.6336050033569336
    2. 'self' → logprob: -1.8836050033569336
    3. ' operator' → logprob: -1.8836050033569336
    4. 'left' → logprob: -2.6336050033569336
    5. ' left' → logprob: -3.6336050033569336
    6. ' self' → logprob: -3.8836050033569336
    7. 'operand' → logprob: -3.8836050033569336
    8. 'value' → logprob: -5.258605003356934
    9. ' operand' → logprob: -5.383605003356934
    10. 'op' → logprob: -5.383605003356934

Token 271: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006334475474432111
    2. ' ,' → logprob: -7.375633239746094
    3. ')' → logprob: -13.000633239746094
    4. ',value' → logprob: -13.375633239746094
    5. ':' → logprob: -14.375633239746094
    6. '_value' → logprob: -14.500633239746094
    7. '_token' → logprob: -14.500633239746094
    8. ',
' → logprob: -15.125633239746094
    9. '_,' → logprob: -15.250633239746094
    10. 'value' → logprob: -15.250633239746094

Token 272: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011110661551356316
    2. ' int' → logprob: -4.511110782623291
    3. ')' → logprob: -10.136110305786133
    4. 'float' → logprob: -11.761110305786133
    5. '[int' → logprob: -12.136110305786133
    6. ',' → logprob: -12.636110305786133
    7. ':int' → logprob: -13.011110305786133
    8. ',int' → logprob: -13.886110305786133
    9. ' ' → logprob: -14.261110305786133
    10. '=int' → logprob: -14.386110305786133

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040785204619169235
    2. ' ,' → logprob: -5.504078388214111
    3. ',
' → logprob: -16.504077911376953
    4. '‌,' → logprob: -17.879077911376953
    5. ' ,
' → logprob: -18.129077911376953
    6. ' ' → logprob: -18.129077911376953
    7. ')' → logprob: -18.254077911376953
    8. '<|end|>' → logprob: -18.879077911376953
    9. '_,' → logprob: -19.129077911376953
    10. '   ' → logprob: -19.254077911376953

Token 274: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.5341818928718567
    2. 'right' → logprob: -1.659181833267212
    3. ' right' → logprob: -2.159181833267212
    4. ' operator' → logprob: -2.409181833267212
    5. ' op' → logprob: -4.534182071685791
    6. 'op' → logprob: -4.909182071685791
    7. 'operation' → logprob: -9.534181594848633
    8. '	operator' → logprob: -11.284181594848633
    9. '(operator' → logprob: -11.409181594848633
    10. ' operation' → logprob: -12.284181594848633

Token 275: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04769885540008545
    2. ' ,' → logprob: -3.672698974609375
    3. ':' → logprob: -4.047698974609375
    4. '<|end|>' → logprob: -5.797698974609375
    5. ')' → logprob: -8.172698974609375
    6. '_token' → logprob: -8.922698974609375
    7. '<|end|>' → logprob: -9.297698974609375
    8. '):' → logprob: -9.797698974609375
    9. ' :' → logprob: -10.547698974609375
    10. ' ' → logprob: -10.922698974609375

Token 276: ' str' (ID: 989)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8394528031349182
    2. ' '' → logprob: -0.9644528031349182
    3. ' ' → logprob: -1.9644527435302734
    4. ' str' → logprob: -4.589452743530273
    5. ' "' → logprob: -4.839452743530273
    6. '"' → logprob: -4.964452743530273
    7. '<|end|>' → logprob: -5.339452743530273
    8. ')' → logprob: -5.464452743530273
    9. ' Operator' → logprob: -5.589452743530273
    10. 'Operator' → logprob: -5.839452743530273

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023083435371518135
    2. ' ,' → logprob: -8.37523078918457
    3. ')' → logprob: -15.62523078918457
    4. ',int' → logprob: -17.00023078918457
    5. '‌,' → logprob: -17.75023078918457
    6. ',right' → logprob: -18.75023078918457
    7. '<|end|>' → logprob: -19.00023078918457
    8. ',
' → logprob: -19.12523078918457
    9. ',input' → logprob: -19.12523078918457
    10. ' ' → logprob: -19.25023078918457

Token 278: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.2519298195838928
    2. 'right' → logprob: -1.501929759979248
    3. '	right' → logprob: -14.876930236816406
    4. '   ' → logprob: -15.751930236816406
    5. ',right' → logprob: -15.876930236816406
    6. ',' → logprob: -16.751930236816406
    7. ' ' → logprob: -17.376930236816406
    8. '_right' → logprob: -17.501930236816406
    9. 'Right' → logprob: -18.001930236816406
    10. ')' → logprob: -18.626930236816406

Token 279: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001246348983841017
    2. ':int' → logprob: -9.62512493133545
    3. ')' → logprob: -10.37512493133545
    4. '):' → logprob: -10.75012493133545
    5. ' :' → logprob: -12.37512493133545
    6. ',' → logprob: -14.12512493133545
    7. '):
' → logprob: -15.37512493133545
    8. '<|end|>' → logprob: -15.37512493133545
    9. '<|end|>' → logprob: -16.250123977661133
    10. '=' → logprob: -16.500123977661133

Token 280: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31326326727867126
    2. ' int' → logprob: -1.3132632970809937
    3. ':int' → logprob: -14.313262939453125
    4. '[int' → logprob: -15.063262939453125
    5. ')' → logprob: -15.438262939453125
    6. ' ' → logprob: -15.688262939453125
    7. '(int' → logprob: -16.438262939453125
    8. '=int' → logprob: -16.563262939453125
    9. '<int' → logprob: -16.688262939453125
    10. '	int' → logprob: -16.938262939453125

Token 281: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741842448711395
    2. '):' → logprob: -0.9741842746734619
    3. '):
' → logprob: -9.474184036254883
    4. ' ):' → logprob: -11.224184036254883
    5. ' )' → logprob: -11.599184036254883
    6. ')->' → logprob: -12.099184036254883
    7. ':' → logprob: -13.724184036254883
    8. '   ' → logprob: -14.724184036254883
    9. '):
' → logprob: -15.099184036254883
    10. '):

' → logprob: -15.474184036254883

Token 282: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005984273157082498
    2. ' :' → logprob: -7.875598430633545
    3. '):' → logprob: -9.250597953796387
    4. ' ->' → logprob: -9.500597953796387
    5. ':return' → logprob: -11.000597953796387
    6. ':
' → logprob: -11.250597953796387
    7. '->' → logprob: -11.875597953796387
    8. '   ' → logprob: -12.625597953796387
    9. ')' → logprob: -12.875597953796387
    10. ':int' → logprob: -13.625597953796387

Token 283: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3868713676929474
    2. ' int' → logprob: -1.136871337890625
    3. '	int' → logprob: -16.261871337890625
    4. '[int' → logprob: -16.261871337890625
    5. '   ' → logprob: -17.011871337890625
    6. '(int' → logprob: -17.136871337890625
    7. '=int' → logprob: -17.636871337890625
    8. ':int' → logprob: -17.886871337890625
    9. ' ' → logprob: -18.261871337890625
    10. '<int' → logprob: -18.636871337890625

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003024537581950426
    2. ':
' → logprob: -8.3753023147583
    3. '):' → logprob: -10.2503023147583
    4. '       ' → logprob: -11.6253023147583
    5. ' :' → logprob: -11.8753023147583
    6. ':return' → logprob: -11.8753023147583
    7. '   ' → logprob: -12.2503023147583
    8. '<|end|>' → logprob: -12.7503023147583
    9. '():' → logprob: -13.0003023147583
    10. ':def' → logprob: -13.6253023147583

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00223471294157207
    2. ':' → logprob: -6.627234935760498
    3. '   ' → logprob: -8.00223445892334
    4. ':
' → logprob: -8.50223445892334
    5. '    ' → logprob: -9.12723445892334
    6. ' if' → logprob: -9.12723445892334
    7. ' ' → logprob: -10.87723445892334
    8. ' 
' → logprob: -11.00223445892334
    9. '      ' → logprob: -11.25223445892334
    10. '        
' → logprob: -11.25223445892334

Token 286: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2591654062271118
    2. ' if' → logprob: -1.7591654062271118
    3. 'if' (adapté à ' if') → logprob: -2.8841652870178223
    4. '   ' → logprob: -9.50916576385498
    5. '        ' → logprob: -10.00916576385498
    6. '    ' → logprob: -10.13416576385498
    7. '```' → logprob: -11.13416576385498
    8. '      ' → logprob: -11.75916576385498
    9. '{' → logprob: -12.38416576385498
    10. '	if' → logprob: -12.38416576385498

Token 287: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.31326621770858765
    2. 'operator' → logprob: -1.3132662773132324
    3. '	operator' → logprob: -12.563265800476074
    4. '(operator' → logprob: -14.438265800476074
    5. '.operator' → logprob: -15.938265800476074
    6. '   ' → logprob: -16.31326675415039
    7. ' ' → logprob: -16.43826675415039
    8. ' operador' → logprob: -16.43826675415039
    9. '_operator' → logprob: -16.68826675415039
    10. 'op' → logprob: -17.06326675415039

Token 288: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008630995638668537
    2. '==' → logprob: -4.758631229400635
    3. ' ' → logprob: -12.383630752563477
    4. '=' → logprob: -12.633630752563477
    5. '[' → logprob: -13.258630752563477
    6. ' =' → logprob: -13.258630752563477
    7. ' =='' → logprob: -13.758630752563477
    8. ' ===' → logprob: -13.883630752563477
    9. '=='' → logprob: -13.883630752563477
    10. '===' → logprob: -14.633630752563477

Token 289: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5891842246055603
    2. ''+' → logprob: -0.8391842246055603
    3. ' '+'' → logprob: -4.589184284210205
    4. '"+"' → logprob: -6.089184284210205
    5. ' '+' → logprob: -7.839184284210205
    6. '"+' → logprob: -8.839183807373047
    7. '+' → logprob: -8.964183807373047
    8. '"' → logprob: -10.714183807373047
    9. ''>' → logprob: -10.964183807373047
    10. '('+' → logprob: -12.214183807373047

Token 290: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04847494512796402
    2. '':
' → logprob: -3.2984750270843506
    3. ''' → logprob: -5.2984747886657715
    4. ' '' → logprob: -5.5484747886657715
    5. ' ':' → logprob: -6.9234747886657715
    6. ':' → logprob: -7.6734747886657715
    7. '':
' → logprob: -10.79847526550293
    8. '+' → logprob: -12.29847526550293
    9. '':

' → logprob: -12.79847526550293
    10. '       ' → logprob: -13.42347526550293

Token 291: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6273286938667297
    2. ' left' → logprob: -1.377328634262085
    3. '           ' → logprob: -2.002328634262085
    4. 'return' → logprob: -2.752328634262085
    5. 'left' → logprob: -4.377328872680664
    6. ':' → logprob: -7.002328872680664
    7. '            ' → logprob: -7.502328872680664
    8. '               ' → logprob: -8.252328872680664
    9. ':
' → logprob: -8.752328872680664
    10. ':return' → logprob: -9.002328872680664

Token 292: ' return' (ID: 622)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.2740826904773712
    2. ' return' → logprob: -1.5240826606750488
    3. 'return' (adapté à ' return') → logprob: -4.399082660675049
    4. 'left' → logprob: -4.649082660675049
    5. ' lef' → logprob: -10.274083137512207
    6. '       ' → logprob: -12.024083137512207
    7. '           ' → logprob: -13.024083137512207
    8. ' 
' → logprob: -13.774083137512207
    9. ' ' → logprob: -13.774083137512207
    10. '        ' → logprob: -13.899083137512207

Token 293: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.1269291490316391
    2. 'left' → logprob: -2.1269290447235107
    3. ' lef' → logprob: -14.50192928314209
    4. '	left' → logprob: -15.00192928314209
    5. ' ' → logprob: -16.751928329467773
    6. ' ' → logprob: -16.876928329467773
    7. '_left' → logprob: -17.001928329467773
    8. '   ' → logprob: -17.126928329467773
    9. '左' → logprob: -17.626928329467773
    10. 'Left' → logprob: -17.876928329467773

Token 294: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01815052703022957
    2. '+' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.268150329589844
    4. ' ' → logprob: -15.268150329589844
    5. ' +
' → logprob: -16.518150329589844
    6. ' plus' → logprob: -17.643150329589844
    7. ' +
' → logprob: -18.268150329589844
    8. ' +

' → logprob: -19.643150329589844
    9. '+b' → logprob: -19.643150329589844
    10. ')' → logprob: -20.143150329589844

Token 295: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3868717551231384
    2. ' right' → logprob: -1.1368718147277832
    3. '	right' → logprob: -14.261871337890625
    4. '(right' → logprob: -17.011871337890625
    5. 'Right' → logprob: -17.761871337890625
    6. ' ' → logprob: -17.886871337890625
    7. ',right' → logprob: -18.011871337890625
    8. 'rhs' → logprob: -18.136871337890625
    9. '_right' → logprob: -18.386871337890625
    10. '[right' → logprob: -18.511871337890625

Token 296: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10636802762746811
    2. '
' → logprob: -2.731368064880371
    3. 'elif' → logprob: -3.606368064880371
    4. '<|end|>' → logprob: -4.856368064880371
    5. '\n' → logprob: -8.731368064880371
    6. '        
' → logprob: -8.856368064880371
    7. ' elif' → logprob: -9.106368064880371
    8. ' 
' → logprob: -9.606368064880371
    9. '   ' → logprob: -9.606368064880371
    10. '    
' → logprob: -9.856368064880371

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2961777448654175
    2. '<|end|>' → logprob: -2.171177864074707
    3. 'elif' → logprob: -2.671177864074707
    4. ' elif' → logprob: -3.296177864074707
    5. ' ' → logprob: -3.671177864074707
    6. '    ' → logprob: -5.171177864074707
    7. '        ' → logprob: -6.421177864074707
    8. '   ' → logprob: -6.671177864074707
    9. '  ' → logprob: -7.046177864074707
    10. '      ' → logprob: -8.296177864074707

Token 298: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.00651522958651185
    2. '       ' → logprob: -5.256515026092529
    3. ' elif' → logprob: -6.881515026092529
    4. '
' → logprob: -8.756515502929688
    5. 'if' → logprob: -9.381515502929688
    6. '        
' → logprob: -12.756515502929688
    7. '   ' → logprob: -12.881515502929688
    8. '	elif' → logprob: -13.006515502929688
    9. 'else' → logprob: -14.381515502929688
    10. '```' → logprob: -14.756515502929688

Token 299: ' operator' (ID: 11019)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06953563541173935
    2. ''-' → logprob: -2.944535732269287
    3. ' '' → logprob: -4.694535732269287
    4. ' '-'' → logprob: -6.069535732269287
    5. 'operator' → logprob: -6.444535732269287
    6. ' operator' → logprob: -7.444535732269287
    7. '"' → logprob: -8.194535255432129
    8. '-' → logprob: -8.444535255432129
    9. ' ' → logprob: -8.694535255432129
    10. ''s' → logprob: -9.569535255432129

Token 300: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005257833749055862
    2. '==' → logprob: -5.255257606506348
    3. ' -' → logprob: -11.630257606506348
    4. '-' → logprob: -11.880257606506348
    5. '=='' → logprob: -12.505257606506348
    6. ' ' → logprob: -13.130257606506348
    7. '[' → logprob: -15.005257606506348
    8. ' ===' → logprob: -15.005257606506348
    9. ' =='' → logprob: -15.130257606506348
    10. '=' → logprob: -15.255257606506348

Token 301: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.026506733149290085
    2. ' '-'' → logprob: -3.6515066623687744
    3. ' '-' → logprob: -8.901506423950195
    4. '-' → logprob: -10.026506423950195
    5. ''' → logprob: -10.776506423950195
    6. '"-' → logprob: -13.526506423950195
    7. '('-' → logprob: -13.651506423950195
    8. ' ' → logprob: -14.026506423950195
    9. ' '' → logprob: -14.651506423950195
    10. ' '-')' → logprob: -15.026506423950195

Token 302: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06813572347164154
    2. '           ' → logprob: -3.0681357383728027
    3. ':
' → logprob: -4.568135738372803
    4. ' :' → logprob: -5.568135738372803
    5. '<|end|>' → logprob: -6.068135738372803
    6. '       ' → logprob: -6.818135738372803
    7. ' :
' → logprob: -7.943135738372803
    8. ':return' → logprob: -8.068135261535645
    9. ' ' → logprob: -8.193135261535645
    10. '            ' → logprob: -8.443135261535645

Token 303: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6104850769042969
    2. '           ' → logprob: -1.4854850769042969
    3. ' left' → logprob: -1.6104850769042969
    4. 'return' → logprob: -3.985485076904297
    5. 'left' → logprob: -4.485485076904297
    6. '       ' → logprob: -8.235485076904297
    7. ':return' → logprob: -9.235485076904297
    8. ' ' → logprob: -9.360485076904297
    9. ':left' → logprob: -9.485485076904297
    10. '            ' → logprob: -9.485485076904297

Token 304: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23920084536075592
    2. 'return' (adapté à ' return') → logprob: -1.9892008304595947
    3. ' left' → logprob: -2.7392008304595947
    4. 'left' → logprob: -4.489201068878174
    5. '           ' → logprob: -9.489200592041016
    6. '       ' → logprob: -12.114200592041016
    7. ' ' → logprob: -13.864200592041016
    8. '   ' → logprob: -13.989200592041016
    9. '        ' → logprob: -14.114200592041016
    10. '            ' → logprob: -14.364200592041016

Token 305: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.023245826363563538
    2. 'left' → logprob: -3.7732458114624023
    3. '	left' → logprob: -15.148245811462402
    4. ' ' → logprob: -17.89824676513672
    5. ' lef' → logprob: -18.14824676513672
    6. '(left' → logprob: -18.39824676513672
    7. ' ' → logprob: -18.77324676513672
    8. '[left' → logprob: -18.89824676513672
    9. '   ' → logprob: -19.39824676513672
    10. '.left' → logprob: -19.52324676513672

Token 306: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -5.240481914370321e-05
    2. '-' → logprob: -9.875052452087402
    3. ' ' → logprob: -14.125052452087402
    4. ' ' → logprob: -16.125051498413086
    5. ' -
' → logprob: -17.375051498413086
    6. ' -

' → logprob: -19.875051498413086
    7. ' –' → logprob: -19.875051498413086
    8. '<|end|>' → logprob: -20.250051498413086
    9. '  ' → logprob: -20.500051498413086
    10. '   ' → logprob: -20.812551498413086

Token 307: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.07889000326395035
    2. 'right' → logprob: -2.578890085220337
    3. '	right' → logprob: -15.703889846801758
    4. ' ' → logprob: -18.328889846801758
    5. '(right' → logprob: -19.328889846801758
    6. '[right' → logprob: -19.328889846801758
    7. 'r' → logprob: -20.203889846801758
    8. ',right' → logprob: -20.453889846801758
    9. '_right' → logprob: -20.578889846801758
    10. 'Right' → logprob: -20.953889846801758

Token 308: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008937132079154253
    2. '
' → logprob: -7.750893592834473
    3. 'elif' → logprob: -8.000893592834473
    4. '<|end|>' → logprob: -9.125893592834473
    5. ' elif' → logprob: -12.250893592834473
    6. '<|end|>' → logprob: -12.750893592834473
    7. '	elif' → logprob: -13.250893592834473
    8. '        
' → logprob: -13.625893592834473
    9. '```' → logprob: -13.625893592834473
    10. '	' → logprob: -13.750893592834473

Token 309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007320931763388216
    2. 'elif' → logprob: -7.250731945037842
    3. '
' → logprob: -11.250732421875
    4. ' elif' → logprob: -12.625732421875
    5. '	' → logprob: -13.625732421875
    6. '	elif' → logprob: -13.750732421875
    7. '   ' → logprob: -13.875732421875
    8. '<|end|>' → logprob: -13.875732421875
    9. '```' → logprob: -15.000732421875
    10. '        
' → logprob: -15.500732421875

Token 310: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32670825719833374
    2. 'elif' (adapté à ' elif') → logprob: -1.3267083168029785
    3. ' elif' → logprob: -4.3267083168029785
    4. '   ' → logprob: -9.70170783996582
    5. '
' → logprob: -9.82670783996582
    6. '	elif' → logprob: -10.82670783996582
    7. '```' → logprob: -13.07670783996582
    8. '    ' → logprob: -14.07670783996582
    9. ' ' → logprob: -14.07670783996582
    10. '           ' → logprob: -14.20170783996582

Token 311: ' operator' (ID: 11019)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.9524152874946594
    2. ''' → logprob: -1.7024152278900146
    3. 'operator' → logprob: -1.8274152278900146
    4. ' '' → logprob: -2.4524152278900146
    5. ' operator' → logprob: -2.5774152278900146
    6. ' '*'' → logprob: -2.7024152278900146
    7. ' '*' → logprob: -3.2024152278900146
    8. ' ' → logprob: -8.077415466308594
    9. '(operator' → logprob: -8.202415466308594
    10. ''op' → logprob: -8.577415466308594

Token 312: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030310725793242455
    2. ' '*' → logprob: -4.65531063079834
    3. ' '*'' → logprob: -4.90531063079834
    4. '==' → logprob: -5.15531063079834
    5. ' '' → logprob: -5.53031063079834
    6. ''*' → logprob: -6.28031063079834
    7. ' ' → logprob: -8.03031063079834
    8. ''' → logprob: -8.03031063079834
    9. '=='' → logprob: -8.28031063079834
    10. ' *' → logprob: -8.90531063079834

Token 313: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.0006205809186212718
    2. ' '*' → logprob: -7.875620365142822
    3. ' '*'' → logprob: -8.37562084197998
    4. '"*' → logprob: -12.00062084197998
    5. '*' → logprob: -13.00062084197998
    6. '('*' → logprob: -13.62562084197998
    7. ''' → logprob: -14.87562084197998
    8. ' ' → logprob: -16.750619888305664
    9. ''m' → logprob: -17.625619888305664
    10. ''s' → logprob: -18.000619888305664

Token 314: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12721596658229828
    2. ':' → logprob: -2.62721586227417
    3. '       ' → logprob: -4.50221586227417
    4. '':
' → logprob: -4.87721586227417
    5. '':' → logprob: -4.87721586227417
    6. ''' → logprob: -5.12721586227417
    7. ':
' → logprob: -5.50221586227417
    8. '<|end|>' → logprob: -5.87721586227417
    9. ',' → logprob: -6.87721586227417
    10. '               ' → logprob: -7.00221586227417

Token 315: '           ' (ID: 352)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.35640957951545715
    2. 'left' → logprob: -1.6064095497131348
    3. '           ' → logprob: -2.4814095497131348
    4. ' return' → logprob: -4.606409549713135
    5. 'return' → logprob: -5.231409549713135
    6. '               ' → logprob: -9.981410026550293
    7. '(left' → logprob: -9.981410026550293
    8. '            ' → logprob: -10.356410026550293
    9. ' ' → logprob: -10.731410026550293
    10. '       ' → logprob: -10.981410026550293

Token 316: ' return' (ID: 622)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.7073186635971069
    2. 'left' → logprob: -0.7073186635971069
    3. ' return' → logprob: -4.9573187828063965
    4. 'return' (adapté à ' return') → logprob: -4.9573187828063965
    5. '           ' → logprob: -13.207318305969238
    6. ' ' → logprob: -13.332318305969238
    7. '   ' → logprob: -13.332318305969238
    8. '       ' → logprob: -13.457318305969238
    9. ' lef' → logprob: -14.082318305969238
    10. '	left' → logprob: -15.082318305969238

Token 317: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.38687121868133545
    2. ' left' → logprob: -1.1368712186813354
    3. '	left' → logprob: -15.886871337890625
    4. '   ' → logprob: -17.761871337890625
    5. ' ' → logprob: -18.011871337890625
    6. '(left' → logprob: -18.886871337890625
    7. ' lef' → logprob: -19.011871337890625
    8. '左' → logprob: -19.511871337890625
    9. '[left' → logprob: -19.511871337890625
    10. '_left' → logprob: -20.261871337890625

Token 318: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01506772544234991
    2. '*' → logprob: -4.3900675773620605
    3. ' ' → logprob: -6.0150675773620605
    4. '  ' → logprob: -10.390068054199219
    5. ' -' → logprob: -10.515068054199219
    6. '-' → logprob: -11.515068054199219
    7. 'ight' → logprob: -12.015068054199219
    8. '   ' → logprob: -12.140068054199219
    9. ' ' → logprob: -12.140068054199219
    10. ')' → logprob: -12.265068054199219

Token 319: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06196824833750725
    2. ' right' → logprob: -2.8119683265686035
    3. '	right' → logprob: -15.186967849731445
    4. 'r' → logprob: -15.686967849731445
    5. ' ' → logprob: -15.811967849731445
    6. 'rig' → logprob: -17.311967849731445
    7. 'ight' → logprob: -17.936967849731445
    8. '[right' → logprob: -18.436967849731445
    9. 'rhs' → logprob: -18.561967849731445
    10. ' r' → logprob: -19.186967849731445

Token 320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009755438077263534
    2. 'elif' → logprob: -7.000975608825684
    3. '<|end|>' → logprob: -10.250975608825684
    4. ' elif' → logprob: -11.375975608825684
    5. '
' → logprob: -11.875975608825684
    6. '	elif' → logprob: -12.500975608825684
    7. '   ' → logprob: -12.625975608825684
    8. '	' → logprob: -14.125975608825684
    9. '<|end|>' → logprob: -14.250975608825684
    10. '      ' → logprob: -14.500975608825684

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00133595522493124
    2. 'elif' → logprob: -6.626336097717285
    3. ' elif' → logprob: -12.251336097717285
    4. '
' → logprob: -12.626336097717285
    5. '   ' → logprob: -13.751336097717285
    6. '	elif' → logprob: -15.251336097717285
    7. '        
' → logprob: -15.376336097717285
    8. '```' → logprob: -16.37633514404297
    9. '           ' → logprob: -16.50133514404297
    10. '    
' → logprob: -16.87633514404297

Token 322: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.387516587972641
    2. 'elif' (adapté à ' elif') → logprob: -1.1375166177749634
    3. ' elif' → logprob: -7.637516498565674
    4. '   ' → logprob: -9.262516975402832
    5. '
' → logprob: -10.137516975402832
    6. '	elif' → logprob: -11.137516975402832
    7. 'else' → logprob: -12.637516975402832
    8. 'return' → logprob: -12.762516975402832
    9. '           ' → logprob: -13.387516975402832
    10. '```' → logprob: -13.512516975402832

Token 323: ' operator' (ID: 11019)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5532962083816528
    2. ''/' → logprob: -1.6782962083816528
    3. ' '/'' → logprob: -1.9282962083816528
    4. 'operator' → logprob: -2.9282960891723633
    5. '/' → logprob: -4.178296089172363
    6. ' operator' → logprob: -4.553296089172363
    7. ' '/' → logprob: -5.178296089172363
    8. ' '' → logprob: -5.303296089172363
    9. ' ' → logprob: -6.553296089172363
    10. ' /' → logprob: -8.178296089172363

Token 324: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006736215204000473
    2. '==' → logprob: -5.0067362785339355
    3. '=='' → logprob: -11.756735801696777
    4. ' ' → logprob: -12.256735801696777
    5. '/' → logprob: -13.131735801696777
    6. ' '/'' → logprob: -13.881735801696777
    7. ' /' → logprob: -14.006735801696777
    8. ' =='' → logprob: -14.006735801696777
    9. ''' → logprob: -14.256735801696777
    10. ' =' → logprob: -14.381735801696777

Token 325: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.39995288848876953
    2. ''' → logprob: -1.8999528884887695
    3. ' '/' → logprob: -1.8999528884887695
    4. ' '/'' → logprob: -3.5249528884887695
    5. '/' → logprob: -7.2749528884887695
    6. ' '' → logprob: -8.52495288848877
    7. ' ' → logprob: -9.64995288848877
    8. ' /' → logprob: -10.14995288848877
    9. ' '/'
' → logprob: -10.89995288848877
    10. '"/' → logprob: -11.52495288848877

Token 326: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.342072457075119
    2. ':
' → logprob: -1.4670724868774414
    3. '           ' → logprob: -3.3420724868774414
    4. ' and' → logprob: -4.467072486877441
    5. '       ' → logprob: -5.342072486877441
    6. '   ' → logprob: -6.592072486877441
    7. '<|end|>' → logprob: -6.717072486877441
    8. '':
' → logprob: -7.092072486877441
    9. ':return' → logprob: -7.342072486877441
    10. ' :
' → logprob: -7.717072486877441

Token 327: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5877609848976135
    2. ' left' → logprob: -1.7127609252929688
    3. '           ' → logprob: -1.9627609252929688
    4. ' if' → logprob: -2.7127609252929688
    5. 'return' → logprob: -3.0877609252929688
    6. 'left' → logprob: -4.837760925292969
    7. 'if' → logprob: -6.337760925292969
    8. '       ' → logprob: -6.462760925292969
    9. '        ' → logprob: -8.962760925292969
    10. '            ' → logprob: -9.087760925292969

Token 328: ' #' (ID: 1069)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.20174367725849152
    2. 'left' → logprob: -1.701743721961975
    3. ' if' → logprob: -8.576744079589844
    4. 'if' → logprob: -9.451744079589844
    5. ' return' → logprob: -10.451744079589844
    6. 'return' → logprob: -11.201744079589844
    7. '0' → logprob: -11.451744079589844
    8. ' right' → logprob: -13.201744079589844
    9. 'right' → logprob: -13.326744079589844
    10. '   ' → logprob: -13.451744079589844

Token 329: ' Integer' (ID: 6611)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38917750120162964
    2. 'if' → logprob: -1.1391775608062744
    3. 'return' → logprob: -6.764177322387695
    4. ' return' → logprob: -7.139177322387695
    5. '           ' → logprob: -8.014177322387695
    6. '       ' → logprob: -11.639177322387695
    7. '#' → logprob: -12.014177322387695
    8. 'If' → logprob: -12.264177322387695
    9. ' #' → logprob: -13.514177322387695
    10. 'Return' → logprob: -14.014177322387695

Token 330: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.576751708984375
    2. 'division' → logprob: -0.826751708984375
    3. 'div' → logprob: -7.576751708984375
    4. '           ' → logprob: -8.576751708984375
    5. 'return' → logprob: -10.076751708984375
    6. '       ' → logprob: -10.326751708984375
    7. 'divide' → logprob: -11.076751708984375
    8. ' return' → logprob: -12.076751708984375
    9. '_div' → logprob: -12.576751708984375
    10. '   ' → logprob: -12.576751708984375

Token 331: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29988807439804077
    2. 'return' → logprob: -2.1748881340026855
    3. ' if' → logprob: -2.7998881340026855
    4. '       ' → logprob: -2.7998881340026855
    5. 'if' → logprob: -4.2998881340026855
    6. ' return' → logprob: -4.9248881340026855
    7. '
' → logprob: -6.5498881340026855
    8. '            
' → logprob: -7.7998881340026855
    9. '        
' → logprob: -8.174887657165527
    10. ',' → logprob: -8.424887657165527

Token 332: ' trunc' (ID: 132880)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.722683846950531
    2. 'zero' → logprob: -1.4726839065551758
    3. 'tr' → logprob: -1.9726839065551758
    4. '0' → logprob: -3.847683906555176
    5. 'flo' → logprob: -3.847683906555176
    6. 'assert' → logprob: -3.972683906555176
    7. 'check' → logprob: -4.097683906555176
    8. 'int' → logprob: -4.222683906555176
    9. 'if' → logprob: -4.472683906555176
    10. ' floor' → logprob: -5.097683906555176

Token 333: 'ation' (ID: 387)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -1.0596215724945068
    2. 'ating' → logprob: -1.4346215724945068
    3. 'ation' → logprob: -2.184621572494507
    4. 'ates' → logprob: -2.309621572494507
    5. '```' → logprob: -3.059621572494507
    6. '<|end|>' → logprob: -3.434621572494507
    7. 'div' → logprob: -4.184621810913086
    8. 'tow' → logprob: -4.309621810913086
    9. '}' → logprob: -4.559621810913086
    10. '://' → logprob: -4.934621810913086

Token 334: ' toward' (ID: 15256)
  Prédit: ' towards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' towards' → logprob: -0.7975601553916931
    2. 'tow' → logprob: -1.297560214996338
    3. ' toward' → logprob: -1.297560214996338
    4. '           ' → logprob: -5.797560214996338
    5. ' to' → logprob: -10.29755973815918
    6. '       ' → logprob: -10.29755973815918
    7. 'return' → logprob: -11.17255973815918
    8. 'Tow' → logprob: -11.29755973815918
    9. 'Towards' → logprob: -11.29755973815918
    10. '            ' → logprob: -12.17255973815918

Token 335: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06691282987594604
    2. 'zero' → logprob: -2.816912889480591
    3. ' zero' → logprob: -5.316912651062012
    4. '_zero' → logprob: -10.941912651062012
    5. ' ' → logprob: -12.316912651062012
    6. 'Zero' → logprob: -12.816912651062012
    7. '-zero' → logprob: -16.441913604736328
    8. ' صفر' → logprob: -16.941913604736328
    9. '_' → logprob: -17.191913604736328
    10. 'ZERO' → logprob: -17.441913604736328

Token 336: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30195993185043335
    2. '       ' → logprob: -2.051959991455078
    3. 'return' → logprob: -2.551959991455078
    4. '
' → logprob: -3.676959991455078
    5. ' return' → logprob: -5.051959991455078
    6. '\n' → logprob: -5.551959991455078
    7. '            
' → logprob: -5.551959991455078
    8. ':
' → logprob: -5.676959991455078
    9. '        
' → logprob: -5.801959991455078
    10. ',' → logprob: -6.176959991455078

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21005283296108246
    2. ' if' → logprob: -2.460052728652954
    3. 'if' → logprob: -3.085052728652954
    4. '       ' → logprob: -3.085052728652954
    5. 'return' → logprob: -4.710052967071533
    6. ' return' → logprob: -5.960052967071533
    7. '0' → logprob: -7.960052967071533
    8. '        ' → logprob: -8.335052490234375
    9. ',' → logprob: -9.460052490234375
    10. '            
' → logprob: -9.585052490234375

Token 338: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0904231145977974
    2. 'if' (adapté à ' if') → logprob: -2.965423107147217
    3. ' return' → logprob: -3.715423107147217
    4. ' if' → logprob: -4.590423107147217
    5. '       ' → logprob: -8.340423583984375
    6. 'result' → logprob: -9.215423583984375
    7. '           ' → logprob: -9.465423583984375
    8. 'try' → logprob: -12.715423583984375
    9. 'quot' → logprob: -13.715423583984375
    10. '```' → logprob: -14.215423583984375

Token 339: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3132658004760742
    2. ' right' → logprob: -1.3132658004760742
    3. '	right' → logprob: -13.188265800476074
    4. 'rig' → logprob: -14.063265800476074
    5. 'r' → logprob: -14.813265800476074
    6. 'Right' → logprob: -14.938265800476074
    7. ' rig' → logprob: -15.563265800476074
    8. '_right' → logprob: -16.43826675415039
    9. '[right' → logprob: -16.43826675415039
    10. ' ' → logprob: -16.81326675415039

Token 340: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5760376453399658
    2. ' ==' → logprob: -0.8260376453399658
    3. '=' → logprob: -9.451037406921387
    4. '0' → logprob: -11.951037406921387
    5. ')==' → logprob: -12.076037406921387
    6. ' ' → logprob: -12.451037406921387
    7. ']==' → logprob: -13.451037406921387
    8. '===' → logprob: -14.326037406921387
    9. '()==' → logprob: -14.451037406921387
    10. '==
' → logprob: -15.076037406921387

Token 341: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740770161151886
    2. ' ' → logprob: -0.9740769863128662
    3. ' ' → logprob: -17.724077224731445
    4. '۰' → logprob: -18.099077224731445
    5. '  ' → logprob: -18.849077224731445
    6. '   ' → logprob: -19.599077224731445
    7. '	' → logprob: -19.599077224731445
    8. '<|end|>' → logprob: -19.849077224731445
    9. '```' → logprob: -20.224077224731445
    10. ' ' → logprob: -20.349077224731445

Token 342: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -18.0
    4. '٠' → logprob: -20.0
    5. '０' → logprob: -20.125
    6. '  ' → logprob: -20.625
    7. 'zero' → logprob: -21.0
    8. '00' → logprob: -21.0
    9. ' ' → logprob: -21.375
    10. '০' → logprob: -21.375

Token 343: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03806525096297264
    2. ':
' → logprob: -3.288065195083618
    3. '):' → logprob: -12.038064956665039
    4. '           ' → logprob: -12.288064956665039
    5. ')' → logprob: -12.663064956665039
    6. '):
' → logprob: -13.288064956665039
    7. ' :' → logprob: -13.538064956665039
    8. ',' → logprob: -13.663064956665039
    9. ':

' → logprob: -13.663064956665039
    10. ':return' → logprob: -13.913064956665039

Token 344: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002690748078748584
    2. '           ' → logprob: -6.00269079208374
    3. ' raise' → logprob: -9.252690315246582
    4. ',' → logprob: -9.627690315246582
    5. 'raise' → logprob: -10.877690315246582
    6. ':' → logprob: -11.877690315246582
    7. '                   ' → logprob: -12.127690315246582
    8. '              ' → logprob: -12.502690315246582
    9. ' /' → logprob: -12.752690315246582
    10. ':
' → logprob: -13.002690315246582

Token 345: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.5765450596809387
    2. ' raise' → logprob: -0.8265450596809387
    3. '	raise' → logprob: -7.951545238494873
    4. '           ' → logprob: -9.451544761657715
    5. '                   ' → logprob: -9.826544761657715
    6. '               ' → logprob: -10.076544761657715
    7. '_raise' → logprob: -10.326544761657715
    8. 'Raise' → logprob: -10.951544761657715
    9. '   ' → logprob: -11.701544761657715
    10. 'raises' → logprob: -11.701544761657715

Token 346: ' Zero' (ID: 32533)
  Prédit: ' Zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Zero' → logprob: -0.07892691344022751
    2. 'Zero' → logprob: -2.5789268016815186
    3. ' Value' → logprob: -10.328927040100098
    4. 'Value' → logprob: -12.328927040100098
    5. ' zero' → logprob: -18.45392608642578
    6. '_zero' → logprob: -18.70392608642578
    7. '.Zero' → logprob: -18.82892608642578
    8. 'zero' → logprob: -21.20392608642578
    9. 'ZERO' → logprob: -21.20392608642578
    10. 'ゼ' → logprob: -21.70392608642578

Token 347: 'Division' (ID: 78154)
  Prédit: 'Division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Division' → logprob: 0.0
    2. 'Divide' → logprob: -18.5
    3. 'division' → logprob: -18.625
    4. 'Div' → logprob: -19.25
    5. '   ' → logprob: -20.25
    6. ' Division' → logprob: -20.25
    7. ' division' → logprob: -21.0
    8. 'Divider' → logprob: -21.25
    9. '
' → logprob: -21.75
    10. '``' → logprob: -21.875

Token 348: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.2664456789934775e-06
    2. 'rror' → logprob: -13.625000953674316
    3. 'error' → logprob: -16.875001907348633
    4. 'Er' → logprob: -19.250001907348633
    5. 'Erro' → logprob: -19.750001907348633
    6. 'ERROR' → logprob: -20.000001907348633
    7. ' Error' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.250001907348633
    9. 'Warning' → logprob: -20.500001907348633
    10. '
' → logprob: -20.750001907348633

Token 349: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00015598179015796632
    2. '(' → logprob: -9.12515640258789
    3. '('' → logprob: -10.50015640258789
    4. '()' → logprob: -10.87515640258789
    5. '"' → logprob: -15.12515640258789
    6. '("")' → logprob: -16.25015640258789
    7. '(
' → logprob: -17.12515640258789
    8. '("'' → logprob: -17.75015640258789
    9. '(",' → logprob: -18.87515640258789
    10. '()
' → logprob: -18.87515640258789

Token 350: 'Division' (ID: 78154)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.267540842294693
    2. ' division' → logprob: -2.01754093170166
    3. 'Division' → logprob: -2.51754093170166
    4. '"' → logprob: -3.89254093170166
    5. 'integer' → logprob: -8.14254093170166
    6. ' Division' → logprob: -8.76754093170166
    7. ''' → logprob: -9.01754093170166
    8. ' "' → logprob: -9.76754093170166
    9. ''d' → logprob: -10.39254093170166
    10. ' integer' → logprob: -10.64254093170166

Token 351: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.0005549400229938328
    2. 'by' → logprob: -7.500555038452148
    3. ' ' → logprob: -14.500555038452148
    4. '   ' → logprob: -14.875555038452148
    5. 'error' → logprob: -15.625555038452148
    6. ' or' → logprob: -16.00055503845215
    7. 'division' → logprob: -16.00055503845215
    8. ' error' → logprob: -16.12555503845215
    9. ' is' → logprob: -16.37555503845215
    10. 'undefined' → logprob: -16.62555503845215

Token 352: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.12699519097805023
    2. ' zero' → logprob: -2.126995086669922
    3. '0' → logprob: -9.626995086669922
    4. '_zero' → logprob: -14.501995086669922
    5. 'Zero' → logprob: -15.001995086669922
    6. ' ' → logprob: -15.876995086669922
    7. '   ' → logprob: -16.251995086669922
    8. '-zero' → logprob: -16.251995086669922
    9. '
' → logprob: -17.001995086669922
    10. '零' → logprob: -17.376995086669922

Token 353: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.027592986822128296
    2. '")' → logprob: -4.15259313583374
    3. ' is' → logprob: -4.52759313583374
    4. '")
' → logprob: -7.65259313583374
    5. ' ")
' → logprob: -9.777592658996582
    6. ' not' → logprob: -10.027592658996582
    7. '.")
' → logprob: -10.777592658996582
    8. '           ' → logprob: -11.152592658996582
    9. '       ' → logprob: -11.152592658996582
    10. '")

' → logprob: -11.402592658996582

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010786604834720492
    2. 'return' → logprob: -7.1260786056518555
    3. ' return' → logprob: -8.376078605651855
    4. '
' → logprob: -10.501078605651855
    5. '            
' → logprob: -11.501078605651855
    6. '               ' → logprob: -12.376078605651855
    7. '       ' → logprob: -13.876078605651855
    8. '          ' → logprob: -15.251078605651855
    9. '		' → logprob: -15.626078605651855
    10. ',' → logprob: -16.251079559326172

Token 355: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3613894581794739
    2. ' return' → logprob: -1.361389398574829
    3. '           ' → logprob: -3.111389398574829
    4. 'result' → logprob: -6.361389636993408
    5. ' if' → logprob: -8.86138916015625
    6. '       ' → logprob: -8.98638916015625
    7. 'if' → logprob: -8.98638916015625
    8. 'quot' → logprob: -9.23638916015625
    9. ' result' → logprob: -9.48638916015625
    10. ' quotient' → logprob: -10.48638916015625

Token 356: ' Python' (ID: 26534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5194894075393677
    2. ' return' → logprob: -1.0194894075393677
    3. 'result' → logprob: -4.019489288330078
    4. 'quot' → logprob: -4.894489288330078
    5. 'sign' → logprob: -5.144489288330078
    6. ' result' → logprob: -5.519489288330078
    7. ' quotient' → logprob: -5.769489288330078
    8. '           ' → logprob: -6.019489288330078
    9. ' sign' → logprob: -6.894489288330078
    10. 'if' → logprob: -7.019489288330078

Token 357: ''s' (ID: 885)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5150416493415833
    2. '3' → logprob: -1.8900415897369385
    3. 'int' → logprob: -2.8900415897369385
    4. ' ' → logprob: -3.1400415897369385
    5. ''s' → logprob: -3.3900415897369385
    6. '
' → logprob: -3.6400415897369385
    7. 'return' → logprob: -3.7650415897369385
    8. ' result' → logprob: -4.265041828155518
    9. 'div' → logprob: -4.265041828155518
    10. 'tr' → logprob: -5.265041828155518

Token 358: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.028462927788496017
    2. ' int' → logprob: -3.6534628868103027
    3. '//' → logprob: -6.403462886810303
    4. 'tr' → logprob: -7.778462886810303
    5. ' //' → logprob: -11.403463363647461
    6. '/tr' → logprob: -11.403463363647461
    7. 'result' → logprob: -11.778463363647461
    8. '(int' → logprob: -11.778463363647461
    9. '```' → logprob: -12.028463363647461
    10. '=int' → logprob: -12.403463363647461

Token 359: ' division' (ID: 21629)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.007897029630839825
    2. 'left' → logprob: -5.382896900177002
    3. 'div' → logprob: -6.132896900177002
    4. 'division' → logprob: -7.382896900177002
    5. '(' → logprob: -8.13289737701416
    6. 'tr' → logprob: -9.50789737701416
    7. '(div' → logprob: -10.75789737701416
    8. '```' → logprob: -10.88289737701416
    9. '(float' → logprob: -11.50789737701416
    10. ':left' → logprob: -12.00789737701416

Token 360: ' trunc' (ID: 132880)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.844694972038269
    2. 'return' → logprob: -1.844694972038269
    3. '//' → logprob: -2.3446950912475586
    4. 'tr' → logprob: -3.4696950912475586
    5. ' result' → logprob: -3.5946950912475586
    6. 'int' → logprob: -3.7196950912475586
    7. 'operator' → logprob: -3.8446950912475586
    8. ' and' → logprob: -4.219695091247559
    9. 'left' → logprob: -4.344695091247559
    10. '           ' → logprob: -4.344695091247559

Token 361: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.030794987455010414
    2. 'tow' → logprob: -3.780795097351074
    3. '       ' → logprob: -5.655795097351074
    4. 'ate' → logprob: -6.655795097351074
    5. ' towards' → logprob: -6.780795097351074
    6. '           ' → logprob: -7.155795097351074
    7. ' toward' → logprob: -7.655795097351074
    8. '//' → logprob: -9.530795097351074
    9. '        ' → logprob: -9.905795097351074
    10. '   ' → logprob: -10.405795097351074

Token 362: ' towards' (ID: 9979)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.039062101393938065
    2. '_t' → logprob: -3.789062023162842
    3. ' toward' → logprob: -4.289062023162842
    4. ' towards' → logprob: -6.539062023162842
    5. 'Tow' → logprob: -8.1640625
    6. '-t' → logprob: -9.4140625
    7. '0' → logprob: -9.5390625
    8. ' ' → logprob: -11.1640625
    9. '_' → logprob: -11.2890625
    10. 't' → logprob: -11.9140625

Token 363: ' negative' (ID: 12626)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07312574237585068
    2. 'zero' → logprob: -2.8231258392333984
    3. ' zero' → logprob: -4.573125839233398
    4. '_zero' → logprob: -7.948125839233398
    5. ' ' → logprob: -8.073125839233398
    6. 'Zero' → logprob: -9.323125839233398
    7. '-zero' → logprob: -12.198125839233398
    8. '_' → logprob: -13.198125839233398
    9. '  ' → logprob: -13.323125839233398
    10. '```' → logprob: -13.823125839233398

Token 364: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.43071916699409485
    2. 'zero' → logprob: -1.3057191371917725
    3. ' infinity' → logprob: -3.3057191371917725
    4. 'inf' → logprob: -3.8057191371917725
    5. '0' → logprob: -4.430719375610352
    6. 'int' → logprob: -5.805719375610352
    7. ' zero' → logprob: -6.555719375610352
    8. 'Infinity' → logprob: -6.680719375610352
    9. 'import' → logprob: -7.055719375610352
    10. '1' → logprob: -7.180719375610352

Token 365: ' need' (ID: 1309)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.030303440988063812
    2. ' but' → logprob: -3.655303478240967
    3. ' not' → logprob: -6.030303478240967
    4. '           ' → logprob: -7.530303478240967
    5. ' ' → logprob: -8.405303001403809
    6. '0' → logprob: -8.405303001403809
    7. ' return' → logprob: -8.530303001403809
    8. 'so' → logprob: -9.280303001403809
    9. ' which' → logprob: -9.530303001403809
    10. 'but' → logprob: -10.030303001403809

Token 366: ' trunc' (ID: 132880)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08205340802669525
    2. 'to' → logprob: -2.5820534229278564
    3. 'int' → logprob: -5.957053184509277
    4. ' int' → logprob: -8.957053184509277
    5. '   ' → logprob: -9.832053184509277
    6. 'if' → logprob: -10.082053184509277
    7. '_to' → logprob: -10.082053184509277
    8. 'return' → logprob: -10.457053184509277
    9. 'def' → logprob: -10.582053184509277
    10. ':' → logprob: -10.707053184509277

Token 367: 'ation' (ID: 387)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.10858667641878128
    2. '(int' → logprob: -2.9835867881774902
    3. 'left' → logprob: -3.7335867881774902
    4. '(' → logprob: -4.60858678817749
    5. '(right' → logprob: -5.35858678817749
    6. '(self' → logprob: -5.60858678817749
    7. 'int' → logprob: -5.60858678817749
    8. 'self' → logprob: -6.85858678817749
    9. '           ' → logprob: -6.85858678817749
    10. '       ' → logprob: -6.98358678817749

Token 368: ' toward' (ID: 15256)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.13306844234466553
    2. ' toward' → logprob: -2.258068561553955
    3. ' towards' → logprob: -4.258068561553955
    4. '=' → logprob: -6.008068561553955
    5. 'to' → logprob: -6.758068561553955
    6. '   ' → logprob: -6.883068561553955
    7. '_to' → logprob: -8.508068084716797
    8. '.' → logprob: -8.758068084716797
    9. ' to' → logprob: -9.008068084716797
    10. 'import' → logprob: -9.008068084716797

Token 369: ' zero' (ID: 12421)
  Prédit: ' zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zero' → logprob: -0.3901286721229553
    2. 'zero' → logprob: -1.1401286125183105
    3. '0' → logprob: -5.7651286125183105
    4. ' ' → logprob: -9.390129089355469
    5. '_zero' → logprob: -10.390129089355469
    6. '<|end|>' → logprob: -14.515129089355469
    7. '-zero' → logprob: -14.640129089355469
    8. 'Zero' → logprob: -15.015129089355469
    9. '_' → logprob: -15.265129089355469
    10. ' cero' → logprob: -15.390129089355469

Token 370: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12846986949443817
    2. 'return' → logprob: -2.753469944000244
    3. ' if' → logprob: -4.128469944000244
    4. '
' → logprob: -4.503469944000244
    5. 'result' → logprob: -5.128469944000244
    6. ' return' → logprob: -5.128469944000244
    7. 'if' → logprob: -5.128469944000244
    8. '       ' → logprob: -5.753469944000244
    9. ':' → logprob: -6.128469944000244
    10. '            
' → logprob: -6.128469944000244

Token 371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8661817908287048
    2. 'return' → logprob: -1.6161818504333496
    3. 'result' → logprob: -1.8661818504333496
    4. '       ' → logprob: -1.9911818504333496
    5. '
' → logprob: -3.6161818504333496
    6. 'if' → logprob: -4.36618185043335
    7. ' return' → logprob: -4.36618185043335
    8. ' if' → logprob: -4.36618185043335
    9. '```' → logprob: -6.11618185043335
    10. ':return' → logprob: -6.11618185043335

Token 372: ' sign' (ID: 2232)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.649487316608429
    2. ' return' → logprob: -1.1494872570037842
    3. 'result' → logprob: -2.149487257003784
    4. ' result' → logprob: -4.149487495422363
    5. '           ' → logprob: -4.399487495422363
    6. ' if' → logprob: -4.899487495422363
    7. 'quot' → logprob: -5.524487495422363
    8. 'if' → logprob: -6.149487495422363
    9. ' quotient' → logprob: -7.274487495422363
    10. 'sign' (adapté à ' sign') → logprob: -7.524487495422363

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015339636243879795
    2. '=' → logprob: -4.3903398513793945
    3. '_left' → logprob: -5.8903398513793945
    4. '_' → logprob: -10.765339851379395
    5. 'left' → logprob: -11.390339851379395
    6. 's' → logprob: -11.890339851379395
    7. '_result' → logprob: -12.390339851379395
    8. ' ' → logprob: -12.765339851379395
    9. '_l' → logprob: -12.890339851379395
    10. 'um' → logprob: -13.140339851379395

Token 374: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2951936423778534
    2. '-' → logprob: -1.9201936721801758
    3. '(' → logprob: -2.795193672180176
    4. ' (' → logprob: -3.795193672180176
    5. '(left' → logprob: -3.920193672180176
    6. ' ' → logprob: -5.795193672180176
    7. ' -' → logprob: -7.045193672180176
    8. '((' → logprob: -7.295193672180176
    9. '(-' → logprob: -7.545193672180176
    10. 'left' → logprob: -8.170193672180176

Token 375: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.600088894367218
    2. '1' → logprob: -1.2250888347625732
    3. '-' → logprob: -1.9750888347625732
    4. '(left' → logprob: -4.225089073181152
    5. '(' → logprob: -6.225089073181152
    6. '-left' → logprob: -6.975089073181152
    7. '(-' → logprob: -7.850089073181152
    8. ' left' → logprob: -7.975089073181152
    9. ' (' → logprob: -8.600089073181152
    10. ' -' → logprob: -9.475089073181152

Token 376: ' <' (ID: 464)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1120450347661972
    2. ' >' → logprob: -2.7370450496673584
    3. '>' → logprob: -4.362044811248779
    4. ' ' → logprob: -5.112044811248779
    5. ' and' → logprob: -5.237044811248779
    6. ' <' → logprob: -5.487044811248779
    7. '*' → logprob: -5.487044811248779
    8. ' ==' → logprob: -6.112044811248779
    9. ' >=' → logprob: -6.612044811248779
    10. 'and' → logprob: -6.737044811248779

Token 377: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036349925212562084
    2. ' ' → logprob: -5.628634929656982
    3. '=' → logprob: -10.37863540649414
    4. '>' → logprob: -13.50363540649414
    5. '=>' → logprob: -14.00363540649414
    6. ')' → logprob: -15.44113540649414
    7. '==' → logprob: -15.69113540649414
    8. '

' → logprob: -16.00363540649414
    9. '>)' → logprob: -16.00363540649414
    10. '
' → logprob: -16.19113540649414

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014132341311778873
    2. ' ' → logprob: -8.875141143798828
    3. '=' → logprob: -14.500141143798828
    4. '>' → logprob: -15.125141143798828
    5. '
' → logprob: -15.500141143798828
    6. '

' → logprob: -16.375141143798828
    7. '۰' → logprob: -17.062641143798828
    8. ')' → logprob: -17.250141143798828
    9. '(' → logprob: -17.375141143798828
    10. '   ' → logprob: -17.437641143798828

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5094070477061905e-05
    2. ' )' → logprob: -11.375015258789062
    3. ')==' → logprob: -12.875015258789062
    4. ')!=' → logprob: -15.000015258789062
    5. ',' → logprob: -15.875015258789062
    6. '   ' → logprob: -16.000015258789062
    7. '^)' → logprob: -16.625015258789062
    8. 'and' → logprob: -16.625015258789062
    9. '==' → logprob: -16.875015258789062
    10. '```' → logprob: -16.875015258789062

Token 380: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045976534485816956
    2. '!=' → logprob: -3.9209766387939453
    3. '==' → logprob: -4.170976638793945
    4. 'is' → logprob: -5.545976638793945
    5. '^' → logprob: -6.170976638793945
    6. '^(' → logprob: -7.045976638793945
    7. ' !=' → logprob: -7.545976638793945
    8. 'if' → logprob: -8.045976638793945
    9. ')!=' → logprob: -8.045976638793945
    10. '^)' → logprob: -8.170976638793945

Token 381: ' (' (ID: 350)
  Prédit: '(right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.03385672718286514
    2. ' (' → logprob: -3.4088566303253174
    3. '(sign' → logprob: -9.283856391906738
    4. '(' → logprob: -10.408856391906738
    5. '(left' → logprob: -10.658856391906738
    6. '(True' → logprob: -10.908856391906738
    7. '(r' → logprob: -11.533856391906738
    8. '(not' → logprob: -11.658856391906738
    9. '(rhs' → logprob: -11.908856391906738
    10. '[right' → logprob: -12.908856391906738

Token 382: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0011450991732999682
    2. ' right' → logprob: -6.876144886016846
    3. '(right' → logprob: -9.126145362854004
    4. '	right' → logprob: -13.751145362854004
    5. '[right' → logprob: -13.876145362854004
    6. '   ' → logprob: -14.751145362854004
    7. '           ' → logprob: -15.126145362854004
    8. '
' → logprob: -15.626145362854004
    9. ' (' → logprob: -16.001144409179688
    10. ' ' → logprob: -16.251144409179688

Token 383: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3487679958343506
    2. ' <' → logprob: -1.2237679958343506
    3. ')' → logprob: -8.84876823425293
    4. ')<' → logprob: -9.09876823425293
    5. ' ' → logprob: -10.34876823425293
    6. '>' → logprob: -11.34876823425293
    7. '<|end|>' → logprob: -12.09876823425293
    8. '<int' → logprob: -12.84876823425293
    9. '<class' → logprob: -13.09876823425293
    10. '[' → logprob: -13.22376823425293

Token 384: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۰' → logprob: -16.375036239624023
    4. '1' → logprob: -17.250036239624023
    5. '   ' → logprob: -17.250036239624023
    6. ')' → logprob: -17.500036239624023
    7. '```' → logprob: -17.500036239624023
    8. '[' → logprob: -17.625036239624023
    9. '=' → logprob: -17.937536239624023
    10. '  ' → logprob: -18.250036239624023

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. 'False' → logprob: -16.00000762939453
    4. '   ' → logprob: -16.56250762939453
    5. 'false' → logprob: -16.62500762939453
    6. '```' → logprob: -16.75000762939453
    7. '1' → logprob: -17.00000762939453
    8. '[' → logprob: -17.12500762939453
    9. '
' → logprob: -17.25000762939453
    10. ')' → logprob: -17.62500762939453

Token 386: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024666830897331238
    2. ')
' → logprob: -4.024666786193848
    3. ' )' → logprob: -5.274666786193848
    4. ' )
' → logprob: -7.649666786193848
    5. ',' → logprob: -8.399666786193848
    6. ' and' → logprob: -9.274666786193848
    7. '       ' → logprob: -9.399666786193848
    8. '):' → logprob: -9.524666786193848
    9. ':' → logprob: -10.024666786193848
    10. '),' → logprob: -10.149666786193848

Token 387: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01137588545680046
    2. '       ' → logprob: -5.011375904083252
    3. 'return' → logprob: -6.636375904083252
    4. '
' → logprob: -7.011375904083252
    5. ' if' → logprob: -7.636375904083252
    6. 'result' → logprob: -7.636375904083252
    7. ',' → logprob: -7.886375904083252
    8. ' return' → logprob: -8.011375427246094
    9. '            
' → logprob: -8.886375427246094
    10. 'if' → logprob: -9.011375427246094

Token 388: ' quotient' (ID: 169302)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.39415687322616577
    2. ' result' → logprob: -1.2691569328308105
    3. '           ' → logprob: -4.3941569328308105
    4. 'return' → logprob: -5.0191569328308105
    5. ' return' → logprob: -5.1441569328308105
    6. 'res' → logprob: -5.1441569328308105
    7. ' quotient' → logprob: -5.1441569328308105
    8. 'quot' → logprob: -5.8941569328308105
    9. ' res' → logprob: -6.0191569328308105
    10. 'div' → logprob: -7.0191569328308105

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806169703602791
    2. '=' → logprob: -3.2880616188049316
    3. ',' → logprob: -11.41306209564209
    4. '=int' → logprob: -11.78806209564209
    5. ' ' → logprob: -13.78806209564209
    6. ' =
' → logprob: -15.91306209564209
    7. '   ' → logprob: -16.538061141967773
    8. ' =(' → logprob: -16.538061141967773
    9. ' ,' → logprob: -17.163061141967773
    10. ' ' → logprob: -17.163061141967773

Token 390: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.003191970521584153
    2. ' abs' → logprob: -5.753191947937012
    3. 'int' → logprob: -11.378191947937012
    4. '(abs' → logprob: -13.378191947937012
    5. '   ' → logprob: -14.128191947937012
    6. 'left' → logprob: -15.378191947937012
    7. '    ' → logprob: -16.128192901611328
    8. '
' → logprob: -16.128192901611328
    9. '  ' → logprob: -16.878192901611328
    10. '_abs' → logprob: -17.128192901611328

Token 391: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.001502598519437015
    2. 'left' → logprob: -6.501502513885498
    3. ':left' → logprob: -16.126502990722656
    4. ',left' → logprob: -16.376502990722656
    5. '[left' → logprob: -17.126502990722656
    6. ' left' → logprob: -17.251502990722656
    7. '(' → logprob: -18.001502990722656
    8. '	left' → logprob: -18.376502990722656
    9. 'int' → logprob: -19.376502990722656
    10. '(
' → logprob: -20.251502990722656

Token 392: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013836899306625128
    2. ')//' → logprob: -6.7513837814331055
    3. '//' → logprob: -9.001383781433105
    4. 'int' → logprob: -10.251383781433105
    5. ' //' → logprob: -10.751383781433105
    6. '   ' → logprob: -11.501383781433105
    7. '()' → logprob: -12.251383781433105
    8. ' )' → logprob: -12.251383781433105
    9. 'div' → logprob: -12.626383781433105
    10. '`)' → logprob: -13.501383781433105

Token 393: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.03835736960172653
    2. ' //' → logprob: -3.2883572578430176
    3. 'int' → logprob: -9.538357734680176
    4. '/' → logprob: -9.663357734680176
    5. 'div' → logprob: -9.663357734680176
    6. '()' → logprob: -9.663357734680176
    7. '```' → logprob: -10.913357734680176
    8. ')' → logprob: -11.413357734680176
    9. '   ' → logprob: -11.913357734680176
    10. '//=' → logprob: -12.913357734680176

Token 394: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.9146995327901095e-05
    2. ' abs' → logprob: -10.875019073486328
    3. '           ' → logprob: -16.750019073486328
    4. '(abs' → logprob: -17.000019073486328
    5. '   ' → logprob: -17.375019073486328
    6. '       ' → logprob: -18.875019073486328
    7. 'absolute' → logprob: -19.750019073486328
    8. '.abs' → logprob: -20.250019073486328
    9. 'right' → logprob: -20.500019073486328
    10. '               ' → logprob: -21.125019073486328

Token 395: '(right' (ID: 52104)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6932359933853149
    2. '(right' → logprob: -0.6932359933853149
    3. ' right' → logprob: -9.943236351013184
    4. '[right' → logprob: -10.318236351013184
    5. ',right' → logprob: -12.693236351013184
    6. ':right' → logprob: -13.193236351013184
    7. '	right' → logprob: -13.318236351013184
    8. '(' → logprob: -14.568236351013184
    9. '(rhs' → logprob: -14.693236351013184
    10. '.right' → logprob: -16.443235397338867

Token 396: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16951671242713928
    2. ')
' → logprob: -1.919516682624817
    3. ' if' → logprob: -5.419516563415527
    4. '       ' → logprob: -5.794516563415527
    5. 'if' → logprob: -7.544516563415527
    6. '           ' → logprob: -7.669516563415527
    7. '<|end|>' → logprob: -8.294516563415527
    8. ')return' → logprob: -8.794516563415527
    9. ' )' → logprob: -8.794516563415527
    10. ' )
' → logprob: -9.794516563415527

Token 397: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2050782442092896
    2. ' if' → logprob: -1.5800782442092896
    3. 'return' → logprob: -1.8300782442092896
    4. '       ' → logprob: -1.8300782442092896
    5. ' return' → logprob: -1.9550782442092896
    6. '
' → logprob: -3.955078125
    7. 'if' → logprob: -5.080078125
    8. '-' → logprob: -5.705078125
    9. '   ' → logprob: -6.080078125
    10. '            
' → logprob: -8.705078125

Token 398: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15296654403209686
    2. ' return' → logprob: -2.0279664993286133
    3. 'if' → logprob: -5.027966499328613
    4. ' if' → logprob: -5.902966499328613
    5. '           ' → logprob: -7.527966499328613
    6. '       ' → logprob: -8.152966499328613
    7. 'result' → logprob: -9.652966499328613
    8. '
' → logprob: -10.652966499328613
    9. '   ' → logprob: -11.527966499328613
    10. 'quot' → logprob: -11.527966499328613

Token 399: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15482640266418457
    2. ' -' → logprob: -2.0298264026641846
    3. '-sign' → logprob: -5.2798261642456055
    4. '-qu' → logprob: -5.4048261642456055
    5. 'quot' → logprob: -7.4048261642456055
    6. '-int' → logprob: -7.5298261642456055
    7. '-c' → logprob: -8.029826164245605
    8. '(-' → logprob: -8.904826164245605
    9. '-q' → logprob: -8.904826164245605
    10. ' quotient' → logprob: -9.029826164245605

Token 400: 'quot' (ID: 17555)
  Prédit: 'quot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -4.961759259458631e-06
    2. ' quotient' → logprob: -13.000004768371582
    3. 'quote' → logprob: -13.125004768371582
    4. 'quotation' → logprob: -15.500004768371582
    5. 'qu' → logprob: -16.0000057220459
    6. 'quo' → logprob: -16.1250057220459
    7. '1' → logprob: -16.8750057220459
    8. 'quin' → logprob: -17.0000057220459
    9. 'quota' → logprob: -17.0000057220459
    10. '```' → logprob: -17.2500057220459

Token 401: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00175419170409441
    2. 'ot' → logprob: -6.376754283905029
    3. 'ent' → logprob: -9.876753807067871
    4. 'uent' → logprob: -15.501753807067871
    5. 'quot' → logprob: -16.626754760742188
    6. '
' → logprob: -16.751754760742188
    7. 'cient' → logprob: -16.876754760742188
    8. 'ien' → logprob: -17.251754760742188
    9. '1' → logprob: -17.251754760742188
    10. '       ' → logprob: -17.501754760742188

Token 402: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02939784899353981
    2. 'if' → logprob: -3.654397964477539
    3. '       ' → logprob: -6.654397964477539
    4. 'else' → logprob: -7.529397964477539
    5. '           ' → logprob: -8.029397964477539
    6. ' else' → logprob: -8.029397964477539
    7. '<|end|>' → logprob: -8.654397964477539
    8. '+' → logprob: -9.279397964477539
    9. '        ' → logprob: -9.404397964477539
    10. ' +' → logprob: -9.779397964477539

Token 403: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.12693293392658234
    2. ' sign' → logprob: -2.1269328594207764
    3. '	sign' → logprob: -12.751933097839355
    4. '(sign' → logprob: -13.876933097839355
    5. 'sig' → logprob: -14.876933097839355
    6. ' ' → logprob: -15.001933097839355
    7. 'not' → logprob: -16.12693214416504
    8. ' not' → logprob: -16.75193214416504
    9. '_sign' → logprob: -17.00193214416504
    10. ' sig' → logprob: -17.12693214416504

Token 404: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03804183006286621
    2. 'else' → logprob: -3.288041830062866
    3. '	else' → logprob: -15.788042068481445
    4. ' ' → logprob: -16.538042068481445
    5. '=True' → logprob: -17.663042068481445
    6. ' True' → logprob: -17.663042068481445
    7. '<|end|>' → logprob: -18.038042068481445
    8. 'True' → logprob: -18.538042068481445
    9. '_else' → logprob: -18.663042068481445
    10. '1' → logprob: -19.538042068481445

Token 405: ' quotient' (ID: 169302)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -0.038047004491090775
    2. ' quotient' → logprob: -3.2880470752716064
    3. 'quote' → logprob: -12.788046836853027
    4. 'quota' → logprob: -14.163046836853027
    5. 'quotation' → logprob: -14.538046836853027
    6. 'qu' → logprob: -14.913046836853027
    7. 'quo' → logprob: -15.288046836853027
    8. ' ' → logprob: -15.288046836853027
    9. ' quot' → logprob: -15.788046836853027
    10. 'quest' → logprob: -16.038047790527344

Token 406: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14101578295230865
    2. '       ' → logprob: -2.7660157680511475
    3. '<|end|>' → logprob: -2.7660157680511475
    4. '\n' → logprob: -6.266016006469727
    5. '   ' → logprob: -6.391016006469727
    6. '<|end|>' → logprob: -7.391016006469727
    7. '        
' → logprob: -8.141016006469727
    8. '    
' → logprob: -8.141016006469727
    9. '
' → logprob: -8.516016006469727
    10. '' → logprob: -9.016016006469727

Token 407: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4146058261394501
    2. '   ' → logprob: -1.1646058559417725
    3. '       ' → logprob: -4.164605617523193
    4. '<|end|>' → logprob: -5.539605617523193
    5. '    
' → logprob: -5.914605617523193
    6. '\n' → logprob: -6.289605617523193
    7. '  
' → logprob: -7.039605617523193
    8. ' 
' → logprob: -7.414605617523193
    9. '```' → logprob: -8.039606094360352
    10. '' → logprob: -8.539606094360352

Token 408: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 409: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03847380727529526
    2. '           ' → logprob: -3.5384738445281982
    3. ':
' → logprob: -5.038473606109619
    4. ' raise' → logprob: -7.038473606109619
    5. '       ' → logprob: -7.538473606109619
    6. 'raise' → logprob: -7.538473606109619
    7. '        ' → logprob: -9.788474082946777
    8. ' :' → logprob: -10.288474082946777
    9. '   ' → logprob: -10.413474082946777
    10. '	raise' → logprob: -10.663474082946777

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49834442138671875
    2. 'raise' → logprob: -0.9983444213867188
    3. ' raise' → logprob: -3.7483444213867188
    4. 'None' → logprob: -8.123344421386719
    5. '       ' → logprob: -10.123344421386719
    6. '	raise' → logprob: -10.623344421386719
    7. 'Raise' → logprob: -11.123344421386719
    8. '          ' → logprob: -11.498344421386719
    9. '0' → logprob: -11.998344421386719
    10. '   ' → logprob: -12.123344421386719

Token 411: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0015191456768661737
    2. ' raise' → logprob: -6.501519203186035
    3. '   ' → logprob: -11.626519203186035
    4. 'None' → logprob: -12.876519203186035
    5. '           ' → logprob: -13.001519203186035
    6. '       ' → logprob: -14.126519203186035
    7. '	raise' → logprob: -14.251519203186035
    8. 'Value' → logprob: -14.501519203186035
    9. 'Raise' → logprob: -14.626519203186035
    10. 'return' → logprob: -15.126519203186035

Token 412: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.3870986998081207
    2. ' Value' → logprob: -1.1370986700057983
    3. 'Not' → logprob: -8.76209831237793
    4. ' Not' → logprob: -9.63709831237793
    5. '_value' → logprob: -12.76209831237793
    6. '_Value' → logprob: -14.01209831237793
    7. '	Value' → logprob: -14.51209831237793
    8. 'value' → logprob: -15.01209831237793
    9. ' ' → logprob: -15.01209831237793
    10. '(Value' → logprob: -15.13709831237793

Token 413: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.04876131936907768
    2. 'rror' → logprob: -3.0487613677978516
    3. 'ror' → logprob: -8.673761367797852
    4. 'or' → logprob: -13.798761367797852
    5. 'Value' → logprob: -13.923761367797852
    6. 'SError' → logprob: -15.298761367797852
    7. 'n' → logprob: -15.673761367797852
    8. 'alue' → logprob: -15.923761367797852
    9. 'error' → logprob: -15.923761367797852
    10. 'LError' → logprob: -16.17376136779785

Token 414: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.030120812356472015
    2. '("' → logprob: -3.530120849609375
    3. '(' → logprob: -7.905120849609375
    4. '('' → logprob: -14.405120849609375
    5. '(F' → logprob: -14.780120849609375
    6. '()' → logprob: -15.155120849609375
    7. 'f' → logprob: -15.405120849609375
    8. '(
' → logprob: -16.530120849609375
    9. '("")' → logprob: -17.530120849609375
    10. '"' → logprob: -18.530120849609375

Token 415: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.015128899365663528
    2. ' f' → logprob: -4.640129089355469
    3. 'f' → logprob: -5.515129089355469
    4. 'Invalid' → logprob: -7.140129089355469
    5. 'Unknown' → logprob: -8.390129089355469
    6. '(f' → logprob: -9.265129089355469
    7. 'Unsupported' → logprob: -9.640129089355469
    8. 'Unexpected' → logprob: -10.015129089355469
    9. ' Invalid' → logprob: -10.765129089355469
    10. '("' → logprob: -11.265129089355469

Token 416: 'Unknown' (ID: 24560)
  Prédit: 'Unknown'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unknown' → logprob: -0.3361204266548157
    2. 'Invalid' → logprob: -1.961120367050171
    3. 'Unsupported' → logprob: -1.961120367050171
    4. '"' → logprob: -5.83612060546875
    5. 'Unexpected' → logprob: -7.33612060546875
    6. 'Un' → logprob: -8.21112060546875
    7. 'f' → logprob: -9.08612060546875
    8. 'Unhandled' → logprob: -9.58612060546875
    9. 'Operator' → logprob: -11.33612060546875
    10. 'Undefined' → logprob: -11.83612060546875

Token 417: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.029774438589811325
    2. 'operator' → logprob: -3.5297744274139404
    3. ' operation' → logprob: -11.27977466583252
    4. '	operator' → logprob: -12.27977466583252
    5. '(operator' → logprob: -13.27977466583252
    6. ' ' → logprob: -13.27977466583252
    7. 'operation' → logprob: -13.65477466583252
    8. '_operator' → logprob: -14.15477466583252
    9. ' operador' → logprob: -14.27977466583252
    10. '.operator' → logprob: -15.27977466583252

Token 418: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001979072345420718
    2. '{' → logprob: -7.126978874206543
    3. 'operator' → logprob: -8.001978874206543
    4. ' operator' → logprob: -8.251978874206543
    5. ' :' → logprob: -8.251978874206543
    6. ' {' → logprob: -8.626978874206543
    7. '(operator' → logprob: -10.001978874206543
    8. ''' → logprob: -10.501978874206543
    9. ' ' → logprob: -10.501978874206543
    10. ''{' → logprob: -11.626978874206543

Token 419: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.3622671663761139
    2. ' operator' → logprob: -1.6122671365737915
    3. 'operator' → logprob: -2.737267255783081
    4. '{' → logprob: -3.237267255783081
    5. ''' → logprob: -8.86226749420166
    6. ' '' → logprob: -9.11226749420166
    7. '(operator' → logprob: -9.61226749420166
    8. ' ' → logprob: -9.86226749420166
    9. ' {'' → logprob: -10.86226749420166
    10. '"' → logprob: -11.36226749420166

Token 420: 'operator' (ID: 15184)
  Prédit: 'operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.00044914212776347995
    2. ' operator' → logprob: -7.750449180603027
    3. '{' → logprob: -11.000449180603027
    4. '	operator' → logprob: -14.500449180603027
    5. '(operator' → logprob: -14.625449180603027
    6. '           ' → logprob: -15.625449180603027
    7. '.operator' → logprob: -16.50044822692871
    8. '   ' → logprob: -16.62544822692871
    9. '}' → logprob: -16.87544822692871
    10. 'operation' → logprob: -17.00044822692871

Token 421: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.3894011378288269
    2. '")' → logprob: -1.1394011974334717
    3. ')")' → logprob: -6.014400959014893
    4. ')' → logprob: -9.76440143585205
    5. '}' → logprob: -11.63940143585205
    6. '}")
' → logprob: -11.88940143585205
    7. '')' → logprob: -12.51440143585205
    8. '")
' → logprob: -14.13940143585205
    9. '")}' → logprob: -14.13940143585205
    10. ' }' → logprob: -14.26440143585205

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06919095665216446
    2. 'def' → logprob: -2.9441909790039062
    3. ' def' → logprob: -4.319190979003906
    4. '
' → logprob: -7.694190979003906
    5. ' ' → logprob: -8.819190979003906
    6. '    
' → logprob: -9.194190979003906
    7. '	def' → logprob: -9.944190979003906
    8. '<|end|>' → logprob: -10.444190979003906
    9. '```' → logprob: -10.819190979003906
    10. ')' → logprob: -10.819190979003906

Token 423: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03016950935125351
    2. '   ' → logprob: -3.5301694869995117
    3. ' def' → logprob: -7.780169486999512
    4. '	def' → logprob: -13.905169486999512
    5. '
' → logprob: -17.030170440673828
    6. '    
' → logprob: -17.155170440673828
    7. '```' → logprob: -17.655170440673828
    8. ' ' → logprob: -18.155170440673828
    9. '`' → logprob: -18.780170440673828
    10. '  ' → logprob: -18.905170440673828

Token 424: ' process' (ID: 2273)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.40737447142601013
    2. 'process' → logprob: -1.1573745012283325
    3. 'calculate' → logprob: -5.032374382019043
    4. ' evaluate' → logprob: -5.532374382019043
    5. 'execute' → logprob: -5.532374382019043
    6. ' process' → logprob: -6.157374382019043
    7. 'consume' → logprob: -6.782374382019043
    8. 'parse' → logprob: -6.907374382019043
    9. 'eval' → logprob: -6.907374382019043
    10. 'compute' → logprob: -7.782374382019043

Token 425: '_tokens' (ID: 65830)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5909221172332764
    2. '_token' → logprob: -1.3409221172332764
    3. '(' → logprob: -1.7159221172332764
    4. '_tokens' → logprob: -5.9659223556518555
    5. '(token' → logprob: -6.9659223556518555
    6. 'token' → logprob: -7.3409223556518555
    7. ' (' → logprob: -8.465922355651855
    8. '(Token' → logprob: -9.090922355651855
    9. '(tokens' → logprob: -9.465922355651855
    10. 'tokens' → logprob: -9.715922355651855

Token 426: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006726383697241545
    2. '(' → logprob: -5.006726264953613
    3. ' (' → logprob: -11.506726264953613
    4. '(
' → logprob: -14.256726264953613
    5. 'self' → logprob: -15.131726264953613
    6. ' self' → logprob: -17.50672721862793
    7. '(token' → logprob: -17.50672721862793
    8. '   ' → logprob: -17.75672721862793
    9. '(s' → logprob: -17.75672721862793
    10. '(tokens' → logprob: -18.13172721862793

Token 427: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002810344099998474
    2. '(' → logprob: -6.752810478210449
    3. 'self' → logprob: -7.252810478210449
    4. ',' → logprob: -7.627810478210449
    5. ' (' → logprob: -8.00281047821045
    6. ')' → logprob: -10.25281047821045
    7. ' self' → logprob: -10.37781047821045
    8. '(
' → logprob: -11.12781047821045
    9. ')(' → logprob: -11.87781047821045
    10. '   ' → logprob: -11.87781047821045

Token 428: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.5308284759521484
    2. 'self' → logprob: -1.2808284759521484
    3. ' token' → logprob: -2.5308284759521484
    4. 'tokens' → logprob: -3.5308284759521484
    5. ' self' → logprob: -3.9058284759521484
    6. ' tokens' → logprob: -5.530828475952148
    7. 'stream' → logprob: -7.155828475952148
    8. ' stream' → logprob: -8.155828475952148
    9. '   ' → logprob: -10.655828475952148
    10. 'Token' → logprob: -12.030828475952148

Token 429: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.6632662415504456
    2. 's' → logprob: -0.7882662415504456
    3. 'Stream' → logprob: -4.038266181945801
    4. 'stream' → logprob: -4.413266181945801
    5. ':' → logprob: -8.5382661819458
    6. ' stream' → logprob: -9.2882661819458
    7. ')' → logprob: -9.5382661819458
    8. '):' → logprob: -10.0382661819458
    9. '_Stream' → logprob: -10.9132661819458
    10. '   ' → logprob: -11.7882661819458

Token 430: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3172670304775238
    2. ':' → logprob: -1.3172670602798462
    3. '):
' → logprob: -6.192266941070557
    4. ' ):' → logprob: -6.817266941070557
    5. ')' → logprob: -7.692266941070557
    6. ' :' → logprob: -8.817267417907715
    7. ',' → logprob: -9.067267417907715
    8. '   ' → logprob: -9.442267417907715
    9. '       ' → logprob: -10.567267417907715
    10. '(token' → logprob: -12.067267417907715

Token 431: ' Token' (ID: 17951)
  Prédit: 'Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -0.07896767556667328
    2. ' Token' → logprob: -2.578967571258545
    3. 'token' → logprob: -10.078968048095703
    4. ' token' → logprob: -10.953968048095703
    5. ')' → logprob: -11.578968048095703
    6. '	Token' → logprob: -13.203968048095703
    7. '_token' → logprob: -13.328968048095703
    8. '<Token' → logprob: -13.453968048095703
    9. '(Token' → logprob: -13.578968048095703
    10. 'Tokenizer' → logprob: -14.203968048095703

Token 432: 'Stream' (ID: 4193)
  Prédit: 'Stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stream' → logprob: -0.03151775151491165
    2. '):' → logprob: -3.531517744064331
    3. '):
' → logprob: -6.40651798248291
    4. ')' → logprob: -10.15651798248291
    5. '   ' → logprob: -10.15651798248291
    6. 'stream' → logprob: -11.03151798248291
    7. '       ' → logprob: -11.65651798248291
    8. '_stream' → logprob: -12.53151798248291
    9. '[]):' → logprob: -13.03151798248291
    10. ' stream' → logprob: -13.28151798248291

Token 433: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25524890422821045
    2. ')' → logprob: -1.5052489042282104
    3. '):
' → logprob: -5.8802490234375
    4. '   ' → logprob: -8.0052490234375
    5. '       ' → logprob: -9.5052490234375
    6. ',' → logprob: -9.6302490234375
    7. ' ):' → logprob: -11.3802490234375
    8. '):
' → logprob: -11.5052490234375
    9. ')->' → logprob: -11.5052490234375
    10. ':' → logprob: -12.2552490234375

Token 434: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002656512660905719
    2. ':
' → logprob: -6.87765645980835
    3. '():' → logprob: -7.37765645980835
    4. '):' → logprob: -8.002656936645508
    5. '       ' → logprob: -8.127656936645508
    6. '(self' → logprob: -8.627656936645508
    7. '   ' → logprob: -9.127656936645508
    8. '(' → logprob: -10.752656936645508
    9. ' :' → logprob: -11.127656936645508
    10. 'def' → logprob: -11.377656936645508

Token 435: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009600485675036907
    2. ' int' → logprob: -4.759600639343262
    3. 'None' → logprob: -7.009600639343262
    4. ' None' → logprob: -9.509600639343262
    5. '   ' → logprob: -12.759600639343262
    6. ' ' → logprob: -13.134600639343262
    7. '[int' → logprob: -14.009600639343262
    8. 'bool' → logprob: -14.384600639343262
    9. '  ' → logprob: -14.634600639343262
    10. '	int' → logprob: -14.759600639343262

Token 436: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02085191383957863
    2. '       ' → logprob: -4.145852088928223
    3. ':
' → logprob: -5.645852088928223
    4. '():' → logprob: -7.520852088928223
    5. '   ' → logprob: -7.645852088928223
    6. '(self' → logprob: -9.270852088928223
    7. '):' → logprob: -9.395852088928223
    8. 'self' → logprob: -11.020852088928223
    9. ',' → logprob: -11.395852088928223
    10. ':def' → logprob: -11.645852088928223

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005228186957538128
    2. ' current' → logprob: -6.880228042602539
    3. ' result' → logprob: -7.255228042602539
    4. ' while' → logprob: -7.255228042602539
    5. 'result' → logprob: -7.505228042602539
    6. ' value' → logprob: -7.630228042602539
    7. 'value' → logprob: -7.755228042602539
    8. 'current' → logprob: -8.130228042602539
    9. 'while' → logprob: -8.755228042602539
    10. 'self' → logprob: -8.755228042602539

Token 438: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.368572860956192
    2. 'self' → logprob: -1.3685728311538696
    3. 'result' → logprob: -3.618572950363159
    4. ' while' → logprob: -4.24357271194458
    5. ' self' → logprob: -5.49357271194458
    6. 'value' → logprob: -5.61857271194458
    7. '       ' → logprob: -5.74357271194458
    8. 'state' → logprob: -6.99357271194458
    9. ' result' → logprob: -8.243573188781738
    10. 'current' → logprob: -8.743573188781738

Token 439: ' Initialize' (ID: 19496)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21181824803352356
    2. 'while' → logprob: -1.9618182182312012
    3. 'result' → logprob: -3.336818218231201
    4. 'value' → logprob: -4.711818218231201
    5. ' self' → logprob: -6.461818218231201
    6. 'state' → logprob: -6.461818218231201
    7. ' while' → logprob: -7.086818218231201
    8. 'acc' → logprob: -7.461818218231201
    9. 'current' → logprob: -7.836818218231201
    10. 'While' → logprob: -8.96181869506836

Token 440: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006894154939800501
    2. 'result' → logprob: -5.756894111633301
    3. 'value' → logprob: -6.506894111633301
    4. ' self' → logprob: -6.756894111633301
    5. 'while' → logprob: -7.256894111633301
    6. 'state' → logprob: -8.7568941116333
    7. 'current' → logprob: -9.2568941116333
    8. '       ' → logprob: -10.2568941116333
    9. 'total' → logprob: -11.3818941116333
    10. 'token' → logprob: -11.6318941116333

Token 441: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7520175576210022
    2. 'state' → logprob: -1.1270174980163574
    3. 'while' → logprob: -1.8770174980163574
    4. 'result' → logprob: -3.5020174980163574
    5. 'value' → logprob: -4.127017498016357
    6. 'current' → logprob: -6.252017498016357
    7. 'token' → logprob: -6.252017498016357
    8. 'tokens' → logprob: -7.627017498016357
    9. ' while' → logprob: -8.002017974853516
    10. '   ' → logprob: -8.877017974853516

Token 442: ' value' (ID: 1432)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.2524399757385254
    2. '_token' → logprob: -2.1274399757385254
    3. 'token' → logprob: -2.5024399757385254
    4. 'value' → logprob: -4.127439975738525
    5. ' token' → logprob: -5.502439975738525
    6. ' value' → logprob: -7.127439975738525
    7. 'self' → logprob: -7.752439975738525
    8. '       ' → logprob: -8.627439498901367
    9. '_' → logprob: -9.377439498901367
    10. '_number' → logprob: -10.002439498901367

Token 443: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6050465106964111
    2. '=' → logprob: -0.8550465106964111
    3. '       ' → logprob: -3.730046510696411
    4. ':' → logprob: -5.855046272277832
    5. ' with' → logprob: -7.605046272277832
    6. 'self' → logprob: -8.105046272277832
    7. 'token' → logprob: -8.480046272277832
    8. '=None' → logprob: -8.605046272277832
    9. ' to' → logprob: -8.980046272277832
    10. ',' → logprob: -9.605046272277832

Token 444: ' the' (ID: 290)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1264062374830246
    2. '0' → logprob: -2.501406192779541
    3. 'self' → logprob: -3.751406192779541
    4. 'token' → logprob: -4.501406192779541
    5. ' None' → logprob: -6.501406192779541
    6. 'the' → logprob: -7.751406192779541
    7. 'next' → logprob: -8.5014066696167
    8. ' self' → logprob: -11.2514066696167
    9. ' token' → logprob: -11.5014066696167
    10. 'a' → logprob: -12.1264066696167

Token 445: ' first' (ID: 1577)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12404350191354752
    2. 'next' → logprob: -2.9990434646606445
    3. 'self' → logprob: -3.3740434646606445
    4. 'token' → logprob: -4.1240434646606445
    5. 'first' → logprob: -4.8740434646606445
    6. ' None' → logprob: -5.7490434646606445
    7. '0' → logprob: -5.7490434646606445
    8. ' next' → logprob: -6.3740434646606445
    9. ' first' → logprob: -7.9990434646606445
    10. ' token' → logprob: -9.749043464660645

Token 446: ' number' (ID: 2086)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.008037405088543892
    2. ' token' → logprob: -5.008037567138672
    3. 'number' → logprob: -7.133037567138672
    4. 'Number' → logprob: -7.633037567138672
    5. 'Token' → logprob: -10.508037567138672
    6. ' number' → logprob: -11.633037567138672
    7. ' Number' → logprob: -13.883037567138672
    8. 'value' → logprob: -14.758037567138672
    9. 'num' → logprob: -15.008037567138672
    10. '_token' → logprob: -15.758037567138672

Token 447: '
' (ID: 198)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.6060273051261902
    2. ' token' → logprob: -0.8560273051261902
    3. '       ' → logprob: -3.731027364730835
    4. ' Token' → logprob: -6.606027126312256
    5. 'Token' → logprob: -6.606027126312256
    6. '   ' → logprob: -6.856027126312256
    7. ' if' → logprob: -7.356027126312256
    8. '_token' → logprob: -7.481027126312256
    9. '	token' → logprob: -8.731027603149414
    10. ',' → logprob: -9.231027603149414

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0066411253064870834
    2. ' token' → logprob: -5.506640911102295
    3. 'token' → logprob: -6.006640911102295
    4. ' if' → logprob: -10.131641387939453
    5. '        
' → logprob: -11.631641387939453
    6. '   ' → logprob: -11.756641387939453
    7. ',' → logprob: -12.006641387939453
    8. '      ' → logprob: -12.631641387939453
    9. ' while' → logprob: -12.631641387939453
    10. '```' → logprob: -12.756641387939453

Token 449: ' if' (ID: 538)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.10204172134399414
    2. ' token' → logprob: -2.852041721343994
    3. 'if' (adapté à ' if') → logprob: -3.977041721343994
    4. ' if' → logprob: -4.352041721343994
    5. '       ' → logprob: -5.102041721343994
    6. 'number' → logprob: -7.477041721343994
    7. 'first' → logprob: -8.227041244506836
    8. 'current' → logprob: -8.727041244506836
    9. 'while' → logprob: -9.102041244506836
    10. 'num' → logprob: -9.227041244506836

Token 450: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.012577584944665432
    2. ' not' → logprob: -4.387577533721924
    3. '       ' → logprob: -10.512578010559082
    4. '   ' → logprob: -11.262578010559082
    5. '	not' → logprob: -11.512578010559082
    6. 'token' → logprob: -11.887578010559082
    7. 'self' → logprob: -12.012578010559082
    8. '

' → logprob: -13.512578010559082
    9. '           ' → logprob: -13.762578010559082
    10. '(not' → logprob: -13.887578010559082

Token 451: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.05489661172032356
    2. ' token' → logprob: -2.929896593093872
    3. '(token' → logprob: -11.304896354675293
    4. '	token' → logprob: -14.179896354675293
    5. ' isinstance' → logprob: -15.429896354675293
    6. 'self' → logprob: -15.679896354675293
    7. 'is' → logprob: -15.929896354675293
    8. '   ' → logprob: -16.17989730834961
    9. '[token' → logprob: -16.67989730834961
    10. 'Token' → logprob: -16.67989730834961

Token 452: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.0002619318547658622
    2. 'Stream' → logprob: -8.500262260437012
    3. 'stream' → logprob: -10.875262260437012
    4. 's' → logprob: -11.250262260437012
    5. '_STREAM' → logprob: -12.250262260437012
    6. '.Stream' → logprob: -12.500262260437012
    7. '_Stream' → logprob: -12.625262260437012
    8. '.' → logprob: -12.750262260437012
    9. '._' → logprob: -13.000262260437012
    10. '_' → logprob: -13.125262260437012

Token 453: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.0001254693343071267
    2. '.' → logprob: -9.000125885009766
    3. '.have' → logprob: -14.125125885009766
    4. ' .' → logprob: -14.375125885009766
    5. 'has' → logprob: -15.375125885009766
    6. '   ' → logprob: -15.625125885009766
    7. '.next' → logprob: -16.500125885009766
    8. '	has' → logprob: -16.625125885009766
    9. '.Has' → logprob: -17.750125885009766
    10. '().' → logprob: -18.375125885009766

Token 454: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.00012809180771000683
    2. '_' → logprob: -9.125127792358398
    3. 'next' → logprob: -11.750127792358398
    4. '_token' → logprob: -12.125127792358398
    5. ' _' → logprob: -12.875127792358398
    6. '_n' → logprob: -14.375127792358398
    7. '```' → logprob: -15.000127792358398
    8. '_any' → logprob: -15.250127792358398
    9. '()' → logprob: -15.375127792358398
    10. '
' → logprob: -15.500127792358398

Token 455: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06324821710586548
    2. '():
' → logprob: -2.8132481575012207
    3. '()' → logprob: -6.688248157501221
    4. '():
' → logprob: -11.063248634338379
    5. ' ():' → logprob: -11.188248634338379
    6. ':' → logprob: -13.563248634338379
    7. '(' → logprob: -13.563248634338379
    8. '()):
' → logprob: -14.063248634338379
    9. '():

' → logprob: -14.313248634338379
    10. '().' → logprob: -15.813248634338379

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6636890769004822
    2. ':
' → logprob: -1.038689136505127
    3. ':' → logprob: -2.038689136505127
    4. ' or' → logprob: -7.788689136505127
    5. '       ' → logprob: -8.163688659667969
    6. ':return' → logprob: -9.413688659667969
    7. '():
' → logprob: -10.038688659667969
    8. '.' → logprob: -10.788688659667969
    9. '          ' → logprob: -11.163688659667969
    10. '               ' → logprob: -11.413688659667969

Token 457: ' raise' (ID: 9338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5951663851737976
    2. 'raise' (adapté à ' raise') → logprob: -1.0951664447784424
    3. 'return' → logprob: -2.7201664447784424
    4. '0' → logprob: -3.7201664447784424
    5. ' raise' → logprob: -3.8451664447784424
    6. ' return' → logprob: -6.470166206359863
    7. '
' → logprob: -7.970166206359863
    8. '       ' → logprob: -8.595166206359863
    9. ' ' → logprob: -9.345166206359863
    10. '               ' → logprob: -9.470166206359863

Token 458: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.4741232693195343
    2. ' Value' → logprob: -0.9741232395172119
    3. 'EOF' → logprob: -10.599123001098633
    4. 'Stop' → logprob: -12.474123001098633
    5. ' value' → logprob: -12.724123001098633
    6. 'Index' → logprob: -12.974123001098633
    7. '	Value' → logprob: -12.974123001098633
    8. ' EOF' → logprob: -13.349123001098633
    9. '(Value' → logprob: -13.474123001098633
    10. 'Runtime' → logprob: -13.474123001098633

Token 459: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.512236498361744e-07
    2. 'Value' → logprob: -15.000000953674316
    3. 'rror' → logprob: -17.25
    4. 'Token' → logprob: -17.875
    5. 'Warning' → logprob: -19.25
    6. '("' → logprob: -19.375
    7. 'Input' → logprob: -19.875
    8. '```' → logprob: -20.25
    9. '	Error' → logprob: -20.25
    10. '   ' → logprob: -20.375

Token 460: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0004311460361350328
    2. '(' → logprob: -7.750431060791016
    3. '('' → logprob: -15.125431060791016
    4. '("")' → logprob: -15.875431060791016
    5. '()' → logprob: -16.625431060791016
    6. '(
' → logprob: -16.875431060791016
    7. '("'' → logprob: -18.875431060791016
    8. '"' → logprob: -19.375431060791016
    9. '("("' → logprob: -20.000431060791016
    10. '(f' → logprob: -20.250431060791016

Token 461: 'Empty' (ID: 5692)
  Prédit: 'Empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Empty' → logprob: -0.7542161345481873
    2. 'No' → logprob: -1.004216194152832
    3. 'Input' → logprob: -2.504216194152832
    4. '"' → logprob: -2.879216194152832
    5. '"No' → logprob: -4.754216194152832
    6. 'Expression' → logprob: -4.879216194152832
    7. ''' → logprob: -5.754216194152832
    8. 'Expected' → logprob: -6.379216194152832
    9. 'Token' → logprob: -6.379216194152832
    10. ' No' → logprob: -6.629216194152832

Token 462: ' input' (ID: 3422)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.04757462814450264
    2. 'token' → logprob: -3.797574520111084
    3. ' Token' → logprob: -4.172574520111084
    4. ' input' → logprob: -5.047574520111084
    5. 'Token' → logprob: -6.797574520111084
    6. ' stream' → logprob: -7.297574520111084
    7. 'input' → logprob: -9.172574996948242
    8. '_token' → logprob: -9.297574996948242
    9. ')' → logprob: -9.422574996948242
    10. 'stream' → logprob: -10.672574996948242

Token 463: ' stream' (ID: 6855)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06266346573829651
    2. '")
' → logprob: -2.8126635551452637
    3. ' stream' → logprob: -8.312663078308105
    4. ')' → logprob: -8.812663078308105
    5. 'stream' → logprob: -9.437663078308105
    6. ' ")' → logprob: -9.687663078308105
    7. 'token' → logprob: -9.937663078308105
    8. ' token' → logprob: -9.937663078308105
    9. '")

' → logprob: -10.812663078308105
    10. ' ")
' → logprob: -11.437663078308105

Token 464: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.47775065898895264
    2. '")' → logprob: -0.9777506589889526
    3. ')' → logprob: -6.477750778198242
    4. '       ' → logprob: -6.602750778198242
    5. ')")
' → logprob: -7.852750778198242
    6. ')
' → logprob: -8.852750778198242
    7. ')")' → logprob: -9.227750778198242
    8. ' ")
' → logprob: -10.227750778198242
    9. '")
' → logprob: -10.352750778198242
    10. '   ' → logprob: -10.727750778198242

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0470355749130249
    2. '
' → logprob: -3.9220356941223145
    3. '        
' → logprob: -4.6720356941223145
    4. 'token' → logprob: -4.7970356941223145
    5. ' token' → logprob: -5.5470356941223145
    6. '    
' → logprob: -6.1720356941223145
    7. '   ' → logprob: -6.5470356941223145
    8. ' 
' → logprob: -8.422035217285156
    9. '  
' → logprob: -8.672035217285156
    10. '	' → logprob: -8.672035217285156

Token 466: ' first' (ID: 1577)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.01326575968414545
    2. ' token' → logprob: -4.388265609741211
    3. '       ' → logprob: -7.513265609741211
    4. 'first' (adapté à ' first') → logprob: -9.263265609741211
    5. 'next' → logprob: -9.763265609741211
    6. 'current' → logprob: -11.138265609741211
    7. 'number' → logprob: -11.138265609741211
    8. ' first' → logprob: -11.888265609741211
    9. '```' → logprob: -12.138265609741211
    10. 't' → logprob: -12.263265609741211

Token 467: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.004626172594726086
    2. '_number' → logprob: -5.504626274108887
    3. '_' → logprob: -7.754626274108887
    4. 'token' → logprob: -9.879626274108887
    5. '_num' → logprob: -10.129626274108887
    6. '_value' → logprob: -11.629626274108887
    7. 'Token' → logprob: -11.879626274108887
    8. ' token' → logprob: -12.504626274108887
    9. ' _' → logprob: -12.754626274108887
    10. ' =' → logprob: -13.129626274108887

Token 468: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519291639328003
    2. '=' → logprob: -1.5019291639328003
    3. ':' → logprob: -16.376928329467773
    4. ' ' → logprob: -18.001928329467773
    5. 'token' → logprob: -19.751928329467773
    6. '=
' → logprob: -19.876928329467773
    7. '       ' → logprob: -20.126928329467773
    8. ' =
' → logprob: -20.251928329467773
    9. ' token' → logprob: -20.251928329467773
    10. ',' → logprob: -20.376928329467773

Token 469: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.25192928314208984
    2. ' token' → logprob: -1.5019292831420898
    3. '	token' → logprob: -16.626930236816406
    4. '(token' → logprob: -16.876930236816406
    5. '[token' → logprob: -17.376930236816406
    6. '   ' → logprob: -18.501930236816406
    7. '.token' → logprob: -18.751930236816406
    8. 'Token' → logprob: -19.251930236816406
    9. '       ' → logprob: -19.501930236816406
    10. '_token' → logprob: -19.626930236816406

Token 470: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -8.895480277715251e-06
    2. 'stream' → logprob: -11.750008583068848
    3. 'Stream' → logprob: -14.500008583068848
    4. '_STREAM' → logprob: -14.875008583068848
    5. '=' → logprob: -16.750009536743164
    6. 's' → logprob: -17.375009536743164
    7. ' =' → logprob: -17.875009536743164
    8. '_Stream' → logprob: -17.875009536743164
    9. ' stream' → logprob: -18.125009536743164
    10. '	stream' → logprob: -18.750009536743164

Token 471: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -2.8206473871250637e-05
    2. '.' → logprob: -10.500028610229492
    3. 'next' → logprob: -14.375028610229492
    4. ' .' → logprob: -17.375028610229492
    5. ' next' → logprob: -20.625028610229492
    6. '	next' → logprob: -21.250028610229492
    7. '   ' → logprob: -21.375028610229492
    8. '_next' → logprob: -21.875028610229492
    9. '.current' → logprob: -21.875028610229492
    10. '.first' → logprob: -22.375028610229492

Token 472: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20363108813762665
    2. '       ' → logprob: -1.953631043434143
    3. '()
' → logprob: -3.7036311626434326
    4. 'if' → logprob: -4.2036309242248535
    5. '        
' → logprob: -6.7036309242248535
    6. 'assert' → logprob: -7.4536309242248535
    7. '()' → logprob: -7.9536309242248535
    8. ' if' → logprob: -8.578631401062012
    9. ' 
' → logprob: -8.578631401062012
    10. '  
' → logprob: -9.328631401062012

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022690063633490354
    2. ' if' → logprob: -9.625226974487305
    3. '<|end|>' → logprob: -10.250226974487305
    4. '        
' → logprob: -10.500226974487305
    5. 'if' → logprob: -10.500226974487305
    6. '
' → logprob: -11.125226974487305
    7. '           ' → logprob: -11.500226974487305
    8. '.' → logprob: -11.500226974487305
    9. '[' → logprob: -11.625226974487305
    10. '   ' → logprob: -11.750226974487305

Token 474: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20181061327457428
    2. ' if' → logprob: -1.951810598373413
    3. '       ' → logprob: -3.201810598373413
    4. 'assert' → logprob: -10.076810836791992
    5. ' assert' → logprob: -12.951810836791992
    6. 'If' → logprob: -15.326810836791992
    7. '	if' → logprob: -15.951810836791992
    8. '        
' → logprob: -16.076810836791992
    9. '
' → logprob: -16.076810836791992
    10. '   ' → logprob: -16.326810836791992

Token 475: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.030503610149025917
    2. ' not' → logprob: -3.530503511428833
    3. '           ' → logprob: -7.530503749847412
    4. '       ' → logprob: -8.780503273010254
    5. '   ' → logprob: -10.030503273010254
    6. 'is' → logprob: -12.155503273010254
    7. 'type' → logprob: -12.155503273010254
    8. '
' → logprob: -12.780503273010254
    9. '	not' → logprob: -13.780503273010254
    10. '        ' → logprob: -14.155503273010254

Token 476: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.018190091475844383
    2. ' isinstance' → logprob: -4.018189907073975
    3. '(is' → logprob: -10.143190383911133
    4. '
' → logprob: -14.893190383911133
    5. '   ' → logprob: -15.143190383911133
    6. '       ' → logprob: -16.393190383911133
    7. '           ' → logprob: -16.643190383911133
    8. 'type' → logprob: -17.268190383911133
    9. '  ' → logprob: -17.768190383911133
    10. '               ' → logprob: -18.018190383911133

Token 477: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.00026407750556245446
    2. 'first' → logprob: -8.250264167785645
    3. '(' → logprob: -13.125264167785645
    4. ' first' → logprob: -14.625264167785645
    5. '[first' → logprob: -16.000263214111328
    6. 'First' → logprob: -16.375263214111328
    7. '(
' → logprob: -18.000263214111328
    8. '	first' → logprob: -18.125263214111328
    9. ' (' → logprob: -18.750263214111328
    10. ':first' → logprob: -19.750263214111328

Token 478: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.4462670087814331
    2. '(first' → logprob: -1.071267008781433
    3. 'Token' → logprob: -5.071267127990723
    4. 'first' → logprob: -5.071267127990723
    5. '(' → logprob: -5.821267127990723
    6. 'token' → logprob: -6.321267127990723
    7. '_number' → logprob: -10.571267127990723
    8. '[first' → logprob: -10.696267127990723
    9. '(Token' → logprob: -11.571267127990723
    10. '<Token' → logprob: -11.946267127990723

Token 479: ',' (ID: 11)
  Prédit: '(Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Number' → logprob: -0.15698982775211334
    2. ',' → logprob: -2.406989812850952
    3. '(' → logprob: -2.906989812850952
    4. 'Number' → logprob: -8.281990051269531
    5. '(first' → logprob: -9.156990051269531
    6. '(Token' → logprob: -9.531990051269531
    7. '(
' → logprob: -9.906990051269531
    8. ')' → logprob: -10.406990051269531
    9. ' (' → logprob: -11.281990051269531
    10. ' ,' → logprob: -11.281990051269531

Token 480: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.0040785204619169235
    2. ' Number' → logprob: -5.504078388214111
    3. '(Number' → logprob: -17.754077911376953
    4. '_Number' → logprob: -18.004077911376953
    5. ')' → logprob: -19.379077911376953
    6. ' ' → logprob: -19.629077911376953
    7. '   ' → logprob: -19.629077911376953
    8. '_number' → logprob: -21.004077911376953
    9. 'Num' → logprob: -21.254077911376953
    10. 'Numer' → logprob: -21.379077911376953

Token 481: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -1.9361264946837764e-07
    2. '	Token' → logprob: -16.875
    3. 'To' → logprob: -17.625
    4. '<Token' → logprob: -17.625
    5. 'Tok' → logprob: -17.75
    6. 'token' → logprob: -17.875
    7. ' Token' → logprob: -17.875
    8. 'Tokenizer' → logprob: -19.0
    9. '_token' → logprob: -19.625
    10. ')' → logprob: -19.75

Token 482: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033721547573804855
    2. '):
' → logprob: -3.533721446990967
    3. ')' → logprob: -5.533721446990967
    4. ' ):' → logprob: -11.908721923828125
    5. '):
' → logprob: -13.158721923828125
    6. '):

' → logprob: -13.408721923828125
    7. ':' → logprob: -14.033721923828125
    8. '   ' → logprob: -15.783721923828125
    9. '       ' → logprob: -15.908721923828125
    10. ' ):
' → logprob: -15.908721923828125

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.612634362885728e-05
    2. ' raise' → logprob: -9.875076293945312
    3. 'raise' → logprob: -10.875076293945312
    4. '       ' → logprob: -12.875076293945312
    5. '               ' → logprob: -13.375076293945312
    6. '   ' → logprob: -13.875076293945312
    7. '          ' → logprob: -15.375076293945312
    8. '	raise' → logprob: -15.625076293945312
    9. '            
' → logprob: -17.500076293945312
    10. '```' → logprob: -17.625076293945312

Token 484: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.3590346574783325
    2. 'raise' (adapté à ' raise') → logprob: -1.3590346574783325
    3. '           ' → logprob: -3.109034538269043
    4. '	raise' → logprob: -10.109034538269043
    5. '            ' → logprob: -10.484034538269043
    6. 'Raise' → logprob: -11.234034538269043
    7. '   ' → logprob: -12.109034538269043
    8. '               ' → logprob: -12.109034538269043
    9. '       ' → logprob: -13.609034538269043
    10. '_raise' → logprob: -14.609034538269043

Token 485: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0010295925894752145
    2. ' Value' → logprob: -7.0010294914245605
    3. 'Type' → logprob: -9.251029968261719
    4. 'Syntax' → logprob: -10.751029968261719
    5. 'value' → logprob: -15.751029968261719
    6. '_value' → logprob: -16.00102996826172
    7. '_Value' → logprob: -16.87602996826172
    8. '	Value' → logprob: -17.12602996826172
    9. '(Value' → logprob: -17.25102996826172
    10. ' value' → logprob: -17.37602996826172

Token 486: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0008451257599517703
    2. 'Value' → logprob: -7.250844955444336
    3. 'Type' → logprob: -9.500844955444336
    4. 'rror' → logprob: -9.875844955444336
    5. 'alue' → logprob: -11.750844955444336
    6. 'ype' → logprob: -15.625844955444336
    7. 'SError' → logprob: -15.625844955444336
    8. 'error' → logprob: -16.000844955444336
    9. '   ' → logprob: -16.125844955444336
    10. 'ror' → logprob: -16.250844955444336

Token 487: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001195467310026288
    2. '(' → logprob: -6.751195430755615
    3. '(f' → logprob: -10.876195907592773
    4. '(
' → logprob: -12.001195907592773
    5. '('' → logprob: -16.626195907592773
    6. '(

' → logprob: -17.751195907592773
    7. '("'' → logprob: -17.876195907592773
    8. '       ' → logprob: -18.876195907592773
    9. ' ("' → logprob: -18.876195907592773
    10. '           ' → logprob: -19.001195907592773

Token 488: 'First' (ID: 7127)
  Prédit: 'Expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expected' → logprob: -0.08359254151582718
    2. 'Expression' → logprob: -2.708592653274536
    3. 'First' → logprob: -4.458592414855957
    4. '"' → logprob: -6.833592414855957
    5. ' Expected' → logprob: -7.958592414855957
    6. 'Input' → logprob: -8.958592414855957
    7. 'Unexpected' → logprob: -8.958592414855957
    8. 'Invalid' → logprob: -8.958592414855957
    9. 'Expect' → logprob: -9.708592414855957
    10. 'Number' → logprob: -9.833592414855957

Token 489: ' token' (ID: 6602)
  Prédit: ' token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.005540258716791868
    2. ' Token' → logprob: -5.755540370941162
    3. 'token' → logprob: -7.255540370941162
    4. ' number' → logprob: -7.505540370941162
    5. 'Token' → logprob: -7.505540370941162
    6. '_token' → logprob: -7.755540370941162
    7. ' tokens' → logprob: -9.755539894104004
    8. ' ' → logprob: -10.130539894104004
    9. ' value' → logprob: -12.380539894104004
    10. ')' → logprob: -13.005539894104004

Token 490: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.004808653611689806
    2. 'must' → logprob: -5.37980842590332
    3. ' should' → logprob: -8.62980842590332
    4. ' is' → logprob: -12.00480842590332
    5. 'should' → logprob: -12.75480842590332
    6. '.must' → logprob: -15.25480842590332
    7. ' Must' → logprob: -16.25480842590332
    8. ' was' → logprob: -16.37980842590332
    9. 'Must' → logprob: -17.00480842590332
    10. ')' → logprob: -17.25480842590332

Token 491: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.001502598519437015
    2. 'be' → logprob: -6.501502513885498
    3. ' always' → logprob: -15.751502990722656
    4. '	be' → logprob: -16.876502990722656
    5. ' ' → logprob: -17.126502990722656
    6. '_be' → logprob: -17.751502990722656
    7. 'always' → logprob: -18.251502990722656
    8. ' is' → logprob: -18.501502990722656
    9. '<|end|>' → logprob: -18.501502990722656
    10. ' have' → logprob: -18.751502990722656

Token 492: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04904409870505333
    2. 'Number' → logprob: -3.299044132232666
    3. ' a' → logprob: -4.549044132232666
    4. ' Number' → logprob: -7.924044132232666
    5. 'an' → logprob: -13.299043655395508
    6. 'number' → logprob: -14.299043655395508
    7. '(Number' → logprob: -15.049043655395508
    8. '_Number' → logprob: -15.424043655395508
    9. '_number' → logprob: -15.924043655395508
    10. ' number' → logprob: -16.174043655395508

Token 493: ' number' (ID: 2086)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.003237601602450013
    2. 'number' → logprob: -6.253237724304199
    3. ' Number' → logprob: -6.753237724304199
    4. ' number' → logprob: -8.8782377243042
    5. '_number' → logprob: -13.5032377243042
    6. '_Number' → logprob: -15.3782377243042
    7. 'umber' → logprob: -16.628236770629883
    8. 'NUMBER' → logprob: -17.378236770629883
    9. '_NUMBER' → logprob: -18.003236770629883
    10. '`' → logprob: -19.378236770629883

Token 494: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.10482409596443176
    2. ')' → logprob: -2.9798240661621094
    3. '")
' → logprob: -3.8548240661621094
    4. '.")' → logprob: -3.9798240661621094
    5. ' ")' → logprob: -5.854824066162109
    6. '.")
' → logprob: -6.354824066162109
    7. '       ' → logprob: -6.354824066162109
    8. ')")' → logprob: -6.479824066162109
    9. ')
' → logprob: -8.22982406616211
    10. '.' → logprob: -8.22982406616211

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03792981803417206
    2. '
' → logprob: -3.9129297733306885
    3. 'self' → logprob: -4.162930011749268
    4. '        
' → logprob: -6.537930011749268
    5. ' self' → logprob: -8.66292953491211
    6. '   ' → logprob: -11.66292953491211
    7. '```' → logprob: -11.66292953491211
    8. '    
' → logprob: -11.78792953491211
    9. ',' → logprob: -12.41292953491211
    10. '           ' → logprob: -12.41292953491211

Token 496: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.039465803653001785
    2. '       ' → logprob: -3.41446590423584
    3. ' self' → logprob: -5.16446590423584
    4. '   ' → logprob: -10.03946590423584
    5. 'value' → logprob: -11.16446590423584
    6. 'current' → logprob: -11.53946590423584
    7. '```' → logprob: -12.16446590423584
    8. '
' → logprob: -12.53946590423584
    9. 'result' → logprob: -12.66446590423584
    10. '           ' → logprob: -13.16446590423584

Token 497: '.state' (ID: 6696)
  Prédit: '.state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -0.0004243587900418788
    2. 'state' → logprob: -8.0004243850708
    3. '.' → logprob: -9.5004243850708
    4. ' .' → logprob: -11.6254243850708
    5. ' state' → logprob: -12.8754243850708
    6. '`.' → logprob: -14.2504243850708
    7. '   ' → logprob: -15.0004243850708
    8. '	state' → logprob: -15.3754243850708
    9. '.states' → logprob: -15.5004243850708
    10. '```' → logprob: -15.8754243850708

Token 498: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -6.511406809295295e-06
    2. '.' → logprob: -12.500006675720215
    3. 'current' → logprob: -13.000006675720215
    4. ' .' → logprob: -15.750006675720215
    5. '=current' → logprob: -16.6250057220459
    6. '.state' → logprob: -16.8750057220459
    7. '.previous' → logprob: -17.1250057220459
    8. '.reset' → logprob: -17.2500057220459
    9. '.next' → logprob: -17.5000057220459
    10. ').' → logprob: -17.7500057220459

Token 499: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.77627644513268e-06
    2. '_' → logprob: -11.750008583068848
    3. '_val' → logprob: -14.375008583068848
    4. ' _' → logprob: -16.250009536743164
    5. 'value' → logprob: -16.750009536743164
    6. '_token' → logprob: -17.250009536743164
    7. 'Value' → logprob: -18.000009536743164
    8. '\' → logprob: -18.500009536743164
    9. '_Value' → logprob: -18.875009536743164
    10. '_VALUE' → logprob: -19.000009536743164

Token 500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.876928329467773
    4. ',' → logprob: -18.876928329467773
    5. '=

' → logprob: -19.376928329467773
    6. '=self' → logprob: -19.626928329467773
    7. ')' → logprob: -20.001928329467773
    8. 's' → logprob: -20.126928329467773
    9. '＝' → logprob: -20.126928329467773
    10. '=
' → logprob: -20.376928329467773

Token 501: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.02975083328783512
    2. ' first' → logprob: -3.5297508239746094
    3. '	first' → logprob: -16.02975082397461
    4. 'f' → logprob: -16.52975082397461
    5. '(first' → logprob: -17.40475082397461
    6. 'First' → logprob: -17.52975082397461
    7. '[first' → logprob: -17.77975082397461
    8. '   ' → logprob: -18.65475082397461
    9. ' ' → logprob: -19.27975082397461
    10. '       ' → logprob: -19.27975082397461

Token 502: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.0280383548888494e-06
    2. 'token' → logprob: -14.125000953674316
    3. 'Token' → logprob: -15.500000953674316
    4. '_TOKEN' → logprob: -18.125001907348633
    5. '_tok' → logprob: -18.875001907348633
    6. '_tokens' → logprob: -19.125001907348633
    7. '._' → logprob: -19.250001907348633
    8. '_value' → logprob: -19.375001907348633
    9. '_' → logprob: -19.625001907348633
    10. '```' → logprob: -20.125001907348633

Token 503: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00037025497294962406
    2. '.' → logprob: -8.500370025634766
    3. 'value' → logprob: -9.000370025634766
    4. ' .' → logprob: -10.250370025634766
    5. '.token' → logprob: -13.250370025634766
    6. '
' → logprob: -13.500370025634766
    7. ').' → logprob: -13.875370025634766
    8. '`.' → logprob: -14.625370025634766
    9. '```' → logprob: -14.750370025634766
    10. '_value' → logprob: -15.250370025634766

Token 504: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5133569836616516
    2. ' while' → logprob: -1.3883569240570068
    3. '
' → logprob: -2.388356924057007
    4. 'while' → logprob: -2.888356924057007
    5. '        
' → logprob: -5.763357162475586
    6. ' 
' → logprob: -7.013357162475586
    7. '    
' → logprob: -8.638357162475586
    8. '   ' → logprob: -8.763357162475586
    9. ' operator' → logprob: -9.888357162475586
    10. '```' → logprob: -10.763357162475586

Token 505: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02125369757413864
    2. '       ' → logprob: -4.27125358581543
    3. 'self' → logprob: -5.27125358581543
    4. ' while' → logprob: -6.39625358581543
    5. 'operator' → logprob: -9.02125358581543
    6. 'current' → logprob: -9.64625358581543
    7. '   ' → logprob: -10.64625358581543
    8. ' self' → logprob: -11.39625358581543
    9. '
' → logprob: -11.64625358581543
    10. 'next' → logprob: -11.89625358581543

Token 506: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.008999200537800789
    2. 'self' → logprob: -4.758999347686768
    3. ' while' → logprob: -8.13399887084961
    4. '       ' → logprob: -9.50899887084961
    5. '        
' → logprob: -12.75899887084961
    6. 'current' → logprob: -12.75899887084961
    7. '#' → logprob: -12.75899887084961
    8. ' self' → logprob: -12.88399887084961
    9. 'operator' → logprob: -13.63399887084961
    10. 'prev' → logprob: -14.13399887084961

Token 507: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.25195279717445374
    2. ' token' → logprob: -1.5019527673721313
    3. 'True' → logprob: -11.001953125
    4. ' True' → logprob: -12.626953125
    5. '(token' → logprob: -13.126953125
    6. '	token' → logprob: -13.626953125
    7. 't' → logprob: -15.626953125
    8. '_token' → logprob: -16.501953125
    9. '[token' → logprob: -17.126953125
    10. 'self' → logprob: -17.126953125

Token 508: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -5.9153885558771435e-06
    2. 'stream' → logprob: -12.375005722045898
    3. '.' → logprob: -14.750005722045898
    4. '_.' → logprob: -14.875005722045898
    5. '._' → logprob: -15.000005722045898
    6. '_STREAM' → logprob: -15.625005722045898
    7. 'Stream' → logprob: -15.625005722045898
    8. '.has' → logprob: -15.750005722045898
    9. '_' → logprob: -17.3750057220459
    10. '.stream' → logprob: -17.5000057220459

Token 509: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -1.1279553291387856e-05
    2. '.' → logprob: -11.500011444091797
    3. ' .' → logprob: -13.875011444091797
    4. '.have' → logprob: -16.000011444091797
    5. '.Has' → logprob: -17.750011444091797
    6. '().' → logprob: -18.125011444091797
    7. 'has' → logprob: -18.125011444091797
    8. '_has' → logprob: -18.500011444091797
    9. '	has' → logprob: -19.125011444091797
    10. '   ' → logprob: -19.375011444091797

Token 510: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -8.061054359131958e-06
    2. 'next' → logprob: -11.750007629394531
    3. '_' → logprob: -17.37500762939453
    4. ' next' → logprob: -18.50000762939453
    5. '(next' → logprob: -18.50000762939453
    6. 'Next' → logprob: -19.25000762939453
    7. '_token' → logprob: -19.37500762939453
    8. '_NEXT' → logprob: -19.50000762939453
    9. '[next' → logprob: -20.37500762939453
    10. '_n' → logprob: -20.75000762939453

Token 511: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.999452772201039e-05
    2. '()' → logprob: -10.875029563903809
    3. ' ():' → logprob: -11.625029563903809
    4. '():
' → logprob: -13.375029563903809
    5. ':' → logprob: -15.000029563903809
    6. '(' → logprob: -15.875029563903809
    7. '():
' → logprob: -17.875030517578125
    8. '(),' → logprob: -18.375030517578125
    9. '()>' → logprob: -18.625030517578125
    10. '):' → logprob: -19.000030517578125

Token 512: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4996635615825653
    2. ' token' → logprob: -1.4996635913848877
    3. 'token' → logprob: -1.9996635913848877
    4. '           ' → logprob: -3.4996635913848877
    5. ' operator' → logprob: -6.499663352966309
    6. '```' → logprob: -6.624663352966309
    7. '   ' → logprob: -8.124663352966309
    8. '	token' → logprob: -8.249663352966309
    9. 'operator' → logprob: -8.499663352966309
    10. '
' → logprob: -8.624663352966309

Token 513: ' op' (ID: 991)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.2286626696586609
    2. 'op' (adapté à ' op') → logprob: -1.7286627292633057
    3. 'token' → logprob: -4.728662490844727
    4. ' op' → logprob: -4.978662490844727
    5. '           ' → logprob: -5.228662490844727
    6. ' operator' → logprob: -5.478662490844727
    7. 'next' → logprob: -6.478662490844727
    8. ' token' → logprob: -10.853662490844727
    9. 'try' → logprob: -11.228662490844727
    10. ' next' → logprob: -11.728662490844727

Token 514: '_token' (ID: 13535)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.011740239337086678
    2. '_token' → logprob: -4.511740207672119
    3. 'token' → logprob: -8.261740684509277
    4. 'en' → logprob: -9.011740684509277
    5. '=' → logprob: -9.261740684509277
    6. ' =' → logprob: -9.386740684509277
    7. 'ERATOR' → logprob: -9.511740684509277
    8. 'Token' → logprob: -10.886740684509277
    9. 'oken' → logprob: -12.136740684509277
    10. '```' → logprob: -12.136740684509277

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888978719711304
    2. '=' → logprob: -2.578889846801758
    3. ':' → logprob: -17.703889846801758
    4. ' ' → logprob: -18.078889846801758
    5. ',' → logprob: -18.078889846801758
    6. ')' → logprob: -18.453889846801758
    7. '       ' → logprob: -18.953889846801758
    8. '    ' → logprob: -19.328889846801758
    9. '.' → logprob: -19.328889846801758
    10. '        ' → logprob: -19.828889846801758

Token 516: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.023246755823493004
    2. ' token' → logprob: -3.7732467651367188
    3. '	token' → logprob: -14.148246765136719
    4. '(token' → logprob: -15.648246765136719
    5. 'operator' → logprob: -15.648246765136719
    6. 'Token' → logprob: -16.14824676513672
    7. '[token' → logprob: -17.02324676513672
    8. '_token' → logprob: -17.27324676513672
    9. 'oken' → logprob: -17.27324676513672
    10. '           ' → logprob: -18.14824676513672

Token 517: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -2.47495681833243e-05
    2. 'stream' → logprob: -11.125024795532227
    3. '_token' → logprob: -12.500024795532227
    4. 'Stream' → logprob: -12.750024795532227
    5. 'token' → logprob: -14.000024795532227
    6. '_STREAM' → logprob: -14.250024795532227
    7. '_tokens' → logprob: -14.375024795532227
    8. '.next' → logprob: -14.625024795532227
    9. 'tokens' → logprob: -15.250024795532227
    10. '.stream' → logprob: -16.125024795532227

Token 518: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -11.750007629394531
    3. 'next' → logprob: -17.37500762939453
    4. ' .' → logprob: -18.62500762939453
    5. ' next' → logprob: -22.25000762939453
    6. '	next' → logprob: -22.62500762939453
    7. '.previous' → logprob: -23.37500762939453
    8. '.n' → logprob: -23.37500762939453
    9. ').' → logprob: -23.50000762939453
    10. '.Next' → logprob: -24.00000762939453

Token 519: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5732216835021973
    2. '       ' → logprob: -1.1982216835021973
    3. ' if' → logprob: -2.0732216835021973
    4. '<|end|>' → logprob: -5.323221683502197
    5. 'if' → logprob: -6.698221683502197
    6. '        ' → logprob: -7.323221683502197
    7. ' ' → logprob: -7.698221683502197
    8. '        
' → logprob: -8.073221206665039
    9. '   ' → logprob: -8.323221206665039
    10. '[' → logprob: -8.573221206665039

Token 521: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029759978875517845
    2. ' if' → logprob: -3.5297598838806152
    3. '       ' → logprob: -12.279760360717773
    4. '           ' → logprob: -12.779760360717773
    5. 'assert' → logprob: -13.279760360717773
    6. 'If' → logprob: -16.529760360717773
    7. '
' → logprob: -17.029760360717773
    8. '#' → logprob: -17.029760360717773
    9. '        ' → logprob: -17.154760360717773
    10. '	if' → logprob: -17.904760360717773

Token 522: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.007721725385636091
    2. ' not' → logprob: -4.882721900939941
    3. '           ' → logprob: -9.132721900939941
    4. '   ' → logprob: -12.882721900939941
    5. '               ' → logprob: -12.882721900939941
    6. 'is' → logprob: -14.007721900939941
    7. '       ' → logprob: -14.382721900939941
    8. '
' → logprob: -14.882721900939941
    9. '            
' → logprob: -15.507721900939941
    10. '                   ' → logprob: -15.632721900939941

Token 523: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0009120595059357584
    2. ' isinstance' → logprob: -7.000912189483643
    3. '(is' → logprob: -14.375911712646484
    4. '   ' → logprob: -18.125911712646484
    5. '       ' → logprob: -20.125911712646484
    6. '           ' → logprob: -20.250911712646484
    7. 'Is' → logprob: -21.375911712646484
    8. '    ' → logprob: -21.625911712646484
    9. '  ' → logprob: -22.125911712646484
    10. '               ' → logprob: -22.125911712646484

Token 524: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -2.47495681833243e-05
    2. 'op' → logprob: -10.625024795532227
    3. ' op' → logprob: -15.500024795532227
    4. '(Op' → logprob: -16.375024795532227
    5. '	op' → logprob: -16.750024795532227
    6. '(operator' → logprob: -17.375024795532227
    7. '(' → logprob: -17.875024795532227
    8. 'Operator' → logprob: -18.125024795532227
    9. 'Op' → logprob: -18.125024795532227
    10. 'operator' → logprob: -19.500024795532227

Token 525: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -2.2603901015827432e-05
    2. 'er' → logprob: -11.250022888183594
    3. '_operator' → logprob: -12.250022888183594
    4. 'en' → logprob: -13.125022888183594
    5. 'token' → logprob: -13.750022888183594
    6. 'o' → logprob: -14.625022888183594
    7. '\' → logprob: -15.625022888183594
    8. '<Token' → logprob: -16.125022888183594
    9. '_tensor' → logprob: -16.250022888183594
    10. '_tokens' → logprob: -16.500022888183594

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.875012397766113
    3. ' ,' → logprob: -12.875012397766113
    4. '(op' → logprob: -13.500012397766113
    5. ',
' → logprob: -13.750012397766113
    6. '(Op' → logprob: -16.000011444091797
    7. ')' → logprob: -17.500011444091797
    8. '(),' → logprob: -17.500011444091797
    9. '(operator' → logprob: -17.625011444091797
    10. 'Operator' → logprob: -17.750011444091797

Token 527: ' Operator' (ID: 52567)
  Prédit: 'Operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operator' → logprob: -5.512236498361744e-07
    2. ' Operator' → logprob: -14.750000953674316
    3. 'operator' → logprob: -17.5
    4. '_operator' → logprob: -21.5
    5. 'Token' → logprob: -21.625
    6. '.Operator' → logprob: -23.0
    7. '   ' → logprob: -23.375
    8. 'Operand' → logprob: -24.125
    9. ' operator' → logprob: -24.125
    10. 'Operation' → logprob: -24.125

Token 528: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -1.9361264946837764e-07
    2. 'token' → logprob: -16.625
    3. '	Token' → logprob: -17.625
    4. 'Tokenizer' → logprob: -18.25
    5. '<Token' → logprob: -18.25
    6. '```' → logprob: -18.5
    7. '_token' → logprob: -18.625
    8. ' Token' → logprob: -18.625
    9. 'To' → logprob: -18.875
    10. 'Tok' → logprob: -19.5

Token 529: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2751922011375427
    2. '):
' → logprob: -1.5251922607421875
    3. ')' → logprob: -3.7751922607421875
    4. '):
' → logprob: -10.525192260742188
    5. ' ):' → logprob: -11.650192260742188
    6. ' or' → logprob: -11.775192260742188
    7. '):

' → logprob: -12.025192260742188
    8. ':' → logprob: -12.650192260742188
    9. '       ' → logprob: -12.775192260742188
    10. ' ):
' → logprob: -13.275192260742188

Token 530: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008661959320306778
    2. '           ' → logprob: -5.00866174697876
    3. ' raise' → logprob: -6.63366174697876
    4. 'raise' → logprob: -7.75866174697876
    5. '                ' → logprob: -9.883662223815918
    6. '                
' → logprob: -10.383662223815918
    7. '                   ' → logprob: -10.633662223815918
    8. '              ' → logprob: -10.758662223815918
    9. '            ' → logprob: -10.883662223815918
    10. '            
' → logprob: -11.383662223815918

Token 531: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0015186689561232924
    2. 'raise' (adapté à ' raise') → logprob: -6.501518726348877
    3. ' break' → logprob: -11.126518249511719
    4. '	raise' → logprob: -14.376518249511719
    5. '               ' → logprob: -14.501518249511719
    6. '            ' → logprob: -15.251518249511719
    7. ' return' → logprob: -16.00151824951172
    8. '                ' → logprob: -16.37651824951172
    9. '           ' → logprob: -16.62651824951172
    10. 'Raise' → logprob: -17.75151824951172

Token 532: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -2.7848862373502925e-05
    2. ' Value' → logprob: -10.500027656555176
    3. '	Value' → logprob: -16.500028610229492
    4. '_value' → logprob: -17.000028610229492
    5. 'Type' → logprob: -17.000028610229492
    6. 'value' → logprob: -17.250028610229492
    7. '(Value' → logprob: -18.000028610229492
    8. '_Value' → logprob: -18.250028610229492
    9. '<Value' → logprob: -18.250028610229492
    10. 'Val' → logprob: -18.375028610229492

Token 533: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.03865251690149307
    2. 'Value' → logprob: -3.2886524200439453
    3. 'rror' → logprob: -7.663652420043945
    4. 'alue' → logprob: -8.913652420043945
    5. 'Type' → logprob: -12.413652420043945
    6. '(Value' → logprob: -14.538652420043945
    7. 'Val' → logprob: -14.663652420043945
    8. 'error' → logprob: -15.163652420043945
    9. ' Value' → logprob: -15.538652420043945
    10. 'ror' → logprob: -16.163652420043945

Token 534: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007623542100191116
    2. '(' → logprob: -5.007623672485352
    3. '(f' → logprob: -7.007623672485352
    4. '('' → logprob: -13.507623672485352
    5. '(
' → logprob: -14.132623672485352
    6. '("("' → logprob: -15.257623672485352
    7. '("(' → logprob: -16.00762367248535
    8. '"' → logprob: -16.38262367248535
    9. '(",' → logprob: -17.00762367248535
    10. '(("' → logprob: -17.50762367248535

Token 535: 'Expected' (ID: 28041)
  Prédit: 'Expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expected' → logprob: -0.31959766149520874
    2. '"' → logprob: -2.0695977210998535
    3. 'Number' → logprob: -3.0695977210998535
    4. 'Operator' → logprob: -3.6945977210998535
    5. ' Expected' → logprob: -3.6945977210998535
    6. 'Unexpected' → logprob: -3.9445977210998535
    7. 'Operand' → logprob: -4.3195977210998535
    8. 'Next' → logprob: -4.6945977210998535
    9. ' Number' → logprob: -6.5695977210998535
    10. ' f' → logprob: -6.8195977210998535

Token 536: ' operator' (ID: 11019)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.0028461257461458445
    2. ' operator' → logprob: -6.2528462409973145
    3. 'an' → logprob: -7.7528462409973145
    4. ' a' → logprob: -7.7528462409973145
    5. 'operator' → logprob: -10.252845764160156
    6. ' Operator' → logprob: -11.877845764160156
    7. 'Operator' → logprob: -11.877845764160156
    8. 'a' → logprob: -12.377845764160156
    9. ' number' → logprob: -13.252845764160156
    10. ' token' → logprob: -13.252845764160156

Token 537: ' token' (ID: 6602)
  Prédit: ' token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.4569986164569855
    2. ',' → logprob: -1.081998586654663
    3. 'Token' → logprob: -4.581998825073242
    4. ' Token' → logprob: -4.706998825073242
    5. 'token' → logprob: -5.206998825073242
    6. ' after' → logprob: -6.706998825073242
    7. '")' → logprob: -7.581998825073242
    8. '_token' → logprob: -7.956998825073242
    9. ' but' → logprob: -8.081998825073242
    10. '.' → logprob: -8.831998825073242

Token 538: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.051520075649023056
    2. ',' → logprob: -3.1765201091766357
    3. '")
' → logprob: -5.551519870758057
    4. ' after' → logprob: -5.676519870758057
    5. ' ")' → logprob: -7.426519870758057
    6. ' but' → logprob: -9.051520347595215
    7. '           ' → logprob: -9.301520347595215
    8. ')' → logprob: -9.426520347595215
    9. ' before' → logprob: -9.426520347595215
    10. '       ' → logprob: -9.551520347595215

Token 539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33920684456825256
    2. 'num' → logprob: -2.3392069339752197
    3. 'next' → logprob: -3.3392069339752197
    4. '            
' → logprob: -3.4642069339752197
    5. 'operand' → logprob: -3.4642069339752197
    6. 'number' → logprob: -3.5892069339752197
    7. ' next' → logprob: -3.9642069339752197
    8. ' number' → logprob: -4.464206695556641
    9. ' operand' → logprob: -4.464206695556641
    10. ' num' → logprob: -4.964206695556641

Token 540: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22602948546409607
    2. 'num' → logprob: -1.8510295152664185
    3. '           ' → logprob: -3.601029396057129
    4. 'number' → logprob: -4.476029396057129
    5. 'right' → logprob: -5.976029396057129
    6. 'next' → logprob: -6.351029396057129
    7. ' if' → logprob: -6.476029396057129
    8. 'val' → logprob: -8.101029396057129
    9. 'value' → logprob: -8.601029396057129
    10. 'try' → logprob: -8.976029396057129

Token 541: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.01255191769450903
    2. ' op' → logprob: -4.387551784515381
    3. 'self' → logprob: -11.262552261352539
    4. '	op' → logprob: -11.762552261352539
    5. 'opf' → logprob: -12.262552261352539
    6. '   ' → logprob: -12.387552261352539
    7. '(op' → logprob: -12.762552261352539
    8. 'operator' → logprob: -13.137552261352539
    9. '           ' → logprob: -13.137552261352539
    10. ' self' → logprob: -13.762552261352539

Token 542: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -2.0219828002154827e-05
    2. '_tokens' → logprob: -11.375020027160645
    3. 'o' → logprob: -12.750020027160645
    4. '_tok' → logprob: -13.375020027160645
    5. 'ot' → logprob: -14.250020027160645
    6. 'op' → logprob: -14.500020027160645
    7. '_' → logprob: -14.500020027160645
    8. '=' → logprob: -14.625020027160645
    9. 'token' → logprob: -14.875020027160645
    10. 'oken' → logprob: -15.000020027160645

Token 543: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.06211131438612938
    2. '.symbol' → logprob: -2.8121113777160645
    3. 'symbol' → logprob: -9.062110900878906
    4. 'value' → logprob: -11.062110900878906
    5. '.operator' → logprob: -12.062110900878906
    6. '.' → logprob: -12.562110900878906
    7. '.token' → logprob: -13.812110900878906
    8. '.sym' → logprob: -14.187110900878906
    9. ' .' → logprob: -15.562110900878906
    10. 'Symbol' → logprob: -15.937110900878906

Token 544: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5770622491836548
    2. '==' → logprob: -0.8270622491836548
    3. '=='' → logprob: -6.952062129974365
    4. '=' → logprob: -9.327062606811523
    5. '=="' → logprob: -11.452062606811523
    6. ' in' → logprob: -11.577062606811523
    7. ' ' → logprob: -11.577062606811523
    8. '==
' → logprob: -11.702062606811523
    9. '===' → logprob: -12.327062606811523
    10. ' =='' → logprob: -12.577062606811523

Token 545: ' '='' (ID: 98780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0163600891828537
    2. ''=' → logprob: -4.141360282897949
    3. '"' → logprob: -8.64136028289795
    4. '=' → logprob: -9.01636028289795
    5. ' '='' → logprob: -11.64136028289795
    6. ''=>' → logprob: -12.14136028289795
    7. ''>' → logprob: -12.14136028289795
    8. '('='' → logprob: -12.76636028289795
    9. '='' → logprob: -13.14136028289795
    10. ''=>'' → logprob: -13.76636028289795

Token 546: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47161760926246643
    2. ':
' → logprob: -1.096617579460144
    3. '               ' → logprob: -3.2216176986694336
    4. '           ' → logprob: -6.346617698669434
    5. ':return' → logprob: -8.846617698669434
    6. ' and' → logprob: -10.096617698669434
    7. '   ' → logprob: -10.096617698669434
    8. ' break' → logprob: -11.096617698669434
    9. ' :
' → logprob: -11.096617698669434
    10. '                   ' → logprob: -11.221617698669434

Token 547: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.901345038088039e-05
    2. '           ' → logprob: -9.625099182128906
    3. ' break' → logprob: -11.500099182128906
    4. ' return' → logprob: -12.000099182128906
    5. '   ' → logprob: -12.375099182128906
    6. '                   ' → logprob: -12.750099182128906
    7. 'return' → logprob: -13.000099182128906
    8. 'break' → logprob: -13.250099182128906
    9. '              ' → logprob: -13.375099182128906
    10. '
' → logprob: -13.500099182128906

Token 548: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40283191204071045
    2. ' return' → logprob: -2.02783203125
    3. 'break' → logprob: -2.40283203125
    4. '               ' → logprob: -2.77783203125
    5. ' break' → logprob: -3.52783203125
    6. '           ' → logprob: -4.02783203125
    7. '   ' → logprob: -10.27783203125
    8. '                   ' → logprob: -10.40283203125
    9. '
' → logprob: -10.77783203125
    10. '       ' → logprob: -11.15283203125

Token 549: ' End' (ID: 6437)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2657506465911865
    2. 'return' → logprob: -1.5157506465911865
    3. ' break' → logprob: -4.515750885009766
    4. '           ' → logprob: -6.640750885009766
    5. ' return' → logprob: -6.640750885009766
    6. '               ' → logprob: -8.765750885009766
    7. 'self' → logprob: -12.015750885009766
    8. 'result' → logprob: -12.265750885009766
    9. '#' → logprob: -12.390750885009766
    10. '       ' → logprob: -12.765750885009766

Token 550: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: ' expression' (ID: 12973)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.39893561601638794
    2. 'cal' → logprob: -1.6489355564117432
    3. 'evaluation' → logprob: -2.273935556411743
    4. 'processing' → logprob: -4.398935794830322
    5. 'input' → logprob: -4.398935794830322
    6. 'com' → logprob: -5.523935794830322
    7. ' calculation' → logprob: -6.148935794830322
    8. ' expression' → logprob: -6.398935794830322
    9. ' evaluation' → logprob: -7.648935794830322
    10. ' computation' → logprob: -7.773935794830322

Token 552: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013468073680996895
    2. '           ' → logprob: -4.388468265533447
    3. ' break' → logprob: -7.763468265533447
    4. '                   ' → logprob: -8.388467788696289
    5. 'break' → logprob: -8.388467788696289
    6. '                ' → logprob: -10.763467788696289
    7. '            ' → logprob: -11.513467788696289
    8. '            
' → logprob: -11.763467788696289
    9. '              ' → logprob: -11.888467788696289
    10. '                       ' → logprob: -12.013467788696289

Token 553: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003196727717295289
    2. '           ' → logprob: -5.753196716308594
    3. '                   ' → logprob: -11.253196716308594
    4. '       ' → logprob: -13.378196716308594
    5. ' return' → logprob: -14.003196716308594
    6. '              ' → logprob: -14.003196716308594
    7. ' break' → logprob: -14.003196716308594
    8. ',' → logprob: -15.003196716308594
    9. '                       ' → logprob: -15.003196716308594
    10. 'return' → logprob: -15.128196716308594

Token 554: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28349778056144714
    2. 'break' → logprob: -2.0334978103637695
    3. ' return' → logprob: -2.5334978103637695
    4. ' break' → logprob: -3.9084978103637695
    5. '               ' → logprob: -4.5334978103637695
    6. '           ' → logprob: -5.1584978103637695
    7. '                   ' → logprob: -10.78349781036377
    8. '                       ' → logprob: -12.53349781036377
    9. '	break' → logprob: -13.28349781036377
    10. '       ' → logprob: -13.28349781036377

Token 555: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234356038272381
    2. ' self' → logprob: -5.255234241485596
    3. '           ' → logprob: -14.505234718322754
    4. '               ' → logprob: -16.755233764648438
    5. '(self' → logprob: -16.880233764648438
    6. '	self' → logprob: -18.380233764648438
    7. '[self' → logprob: -18.880233764648438
    8. '
' → logprob: -19.755233764648438
    9. '       ' → logprob: -19.755233764648438
    10. '   ' → logprob: -20.630233764648438

Token 556: '.state' (ID: 6696)
  Prédit: '.state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -0.0041028582490980625
    2. 'state' → logprob: -5.50410270690918
    3. '.' → logprob: -10.87910270690918
    4. ' .' → logprob: -12.50410270690918
    5. ' state' → logprob: -13.87910270690918
    6. '[state' → logprob: -15.12910270690918
    7. '.states' → logprob: -16.00410270690918
    8. '	state' → logprob: -16.50410270690918
    9. '.s' → logprob: -16.87910270690918
    10. ',state' → logprob: -16.87910270690918

Token 557: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -8.280175097752362e-05
    2. '.' → logprob: -9.500082969665527
    3. 'current' → logprob: -12.000082969665527
    4. ' .' → logprob: -14.125082969665527
    5. ' ' → logprob: -15.375082969665527
    6. ' current' → logprob: -16.12508201599121
    7. '.previous' → logprob: -16.12508201599121
    8. '.value' → logprob: -16.25008201599121
    9. '[current' → logprob: -16.75008201599121
    10. '.cur' → logprob: -16.75008201599121

Token 558: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0001593195047462359
    2. 'value' → logprob: -8.75015926361084
    3. 'alue' → logprob: -14.50015926361084
    4. 'Value' → logprob: -15.37515926361084
    5. '_token' → logprob: -17.250160217285156
    6. '_VALUE' → logprob: -17.375160217285156
    7. '.value' → logprob: -19.125160217285156
    8. '_Value' → logprob: -19.500160217285156
    9. '_val' → logprob: -19.625160217285156
    10. ' value' → logprob: -19.625160217285156

Token 559: '

' (ID: 279)
  Prédit: '            
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '            
' → logprob: -0.14597231149673462
    2. '           ' → logprob: -2.27097225189209
    3. '
' → logprob: -3.89597225189209
    4. ' 
' → logprob: -4.64597225189209
    5. '           
' → logprob: -6.89597225189209
    6. '    
' → logprob: -7.89597225189209
    7. '  
' → logprob: -8.27097225189209
    8. '<|end|>' → logprob: -8.52097225189209
    9. '            

' → logprob: -8.64597225189209
    10. '            ' → logprob: -9.14597225189209

Token 560: '           ' (ID: 352)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.13097229599952698
    2. 'number' → logprob: -2.880972385406494
    3. 'next' → logprob: -3.130972385406494
    4. '           ' → logprob: -5.005972385406494
    5. 'if' → logprob: -5.005972385406494
    6. ' number' → logprob: -5.630972385406494
    7. ' num' → logprob: -6.130972385406494
    8. ' next' → logprob: -6.880972385406494
    9. '            
' → logprob: -7.005972385406494
    10. 'right' → logprob: -7.630972385406494

Token 561: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.021297095343470573
    2. 'next' → logprob: -4.021296977996826
    3. 'if' → logprob: -6.271296977996826
    4. 'number' → logprob: -7.271296977996826
    5. 'right' → logprob: -7.521296977996826
    6. 'val' → logprob: -12.396297454833984
    7. 'rhs' → logprob: -12.396297454833984
    8. 'second' → logprob: -13.021297454833984
    9. 'value' → logprob: -13.146297454833984
    10. ' num' → logprob: -13.771297454833984

Token 562: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.000916935910936445
    2. 'ber' → logprob: -7.125916957855225
    3. 'token' → logprob: -9.125916481018066
    4. 'er' → logprob: -14.125916481018066
    5. '_tokens' → logprob: -14.125916481018066
    6. '_' → logprob: -14.250916481018066
    7. 'Token' → logprob: -14.500916481018066
    8. '_TOKEN' → logprob: -15.875916481018066
    9. ' token' → logprob: -16.125917434692383
    10. ' Token' → logprob: -16.375917434692383

Token 563: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193002820014954
    2. '=' → logprob: -1.5019299983978271
    3. ' ' → logprob: -14.251930236816406
    4. ':' → logprob: -17.001930236816406
    5. 'space' → logprob: -17.126930236816406
    6. ')' → logprob: -17.251930236816406
    7. 'token' → logprob: -17.626930236816406
    8. '_' → logprob: -17.751930236816406
    9. ' ' → logprob: -17.876930236816406
    10. '.' → logprob: -17.876930236816406

Token 564: ' token' (ID: 6602)
  Prédit: ' token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.10020990669727325
    2. 'token' → logprob: -2.350209951400757
    3. '	token' → logprob: -12.850210189819336
    4. '(token' → logprob: -15.475210189819336
    5. 'Token' → logprob: -15.600210189819336
    6. ' Token' → logprob: -15.850210189819336
    7. '_token' → logprob: -16.600210189819336
    8. ' ' → logprob: -17.725210189819336
    9. '[token' → logprob: -17.725210189819336
    10. 't' → logprob: -17.850210189819336

Token 565: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.1783183515071869
    2. '.next' → logprob: -3.0533182621002197
    3. '_token' → logprob: -3.1783182621002197
    4. '.' → logprob: -3.5533182621002197
    5. 'token' → logprob: -4.178318500518799
    6. '.token' → logprob: -4.678318500518799
    7. 'next' → logprob: -5.428318500518799
    8. 'Stream' → logprob: -5.553318500518799
    9. 'stream' → logprob: -5.553318500518799
    10. '_tokens' → logprob: -6.428318500518799

Token 566: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -5.836499985889532e-05
    2. '.' → logprob: -9.7500581741333
    3. ' .' → logprob: -17.750059127807617
    4. 'next' → logprob: -18.000059127807617
    5. '().' → logprob: -21.000059127807617
    6. '._' → logprob: -21.125059127807617
    7. '.Next' → logprob: -21.625059127807617
    8. ' next' → logprob: -21.750059127807617
    9. '	next' → logprob: -21.750059127807617
    10. '[next' → logprob: -22.125059127807617

Token 567: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014178573619574308
    2. '<|end|>' → logprob: -7.376417636871338
    3. '()
' → logprob: -7.876417636871338
    4. '(' → logprob: -8.001418113708496
    5. ')' → logprob: -11.626418113708496
    6. '(
' → logprob: -11.751418113708496
    7. '<|end|>' → logprob: -11.751418113708496
    8. '(),' → logprob: -12.001418113708496
    9. '()<' → logprob: -12.126418113708496
    10. '(None' → logprob: -12.251418113708496

Token 568: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5737828612327576
    2. '<|end|>' → logprob: -1.0737829208374023
    3. '           ' → logprob: -2.5737829208374023
    4. 'if' → logprob: -5.073782920837402
    5. '       ' → logprob: -5.573782920837402
    6. '            ' → logprob: -5.948782920837402
    7. '        ' → logprob: -5.948782920837402
    8. ' ' → logprob: -6.698782920837402
    9. '          ' → logprob: -7.573782920837402
    10. '               ' → logprob: -7.823782920837402

Token 569: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038648732006549835
    2. 'if' (adapté à ' if') → logprob: -3.913648843765259
    3. '           ' → logprob: -4.03864860534668
    4. '       ' → logprob: -8.66364860534668
    5. '            ' → logprob: -9.53864860534668
    6. '        ' → logprob: -10.53864860534668
    7. '<|end|>' → logprob: -10.78864860534668
    8. '          ' → logprob: -11.53864860534668
    9. 'If' → logprob: -12.03864860534668
    10. '               ' → logprob: -12.41364860534668

Token 570: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03804194927215576
    2. 'not' → logprob: -3.2880420684814453
    3. '(not' → logprob: -15.413042068481445
    4. '	not' → logprob: -16.163042068481445
    5. '   ' → logprob: -16.913042068481445
    6. ' ' → logprob: -17.038042068481445
    7. '           ' → logprob: -17.163042068481445
    8. ' isinstance' → logprob: -18.038042068481445
    9. '_not' → logprob: -18.538042068481445
    10. ':not' → logprob: -18.538042068481445

Token 571: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004080420359969139
    2. ' isinstance' → logprob: -5.504080295562744
    3. '(is' → logprob: -13.129080772399902
    4. '   ' → logprob: -18.504079818725586
    5. '
' → logprob: -20.379079818725586
    6. 'type' → logprob: -20.754079818725586
    7. '  ' → logprob: -20.879079818725586
    8. '.is' → logprob: -21.004079818725586
    9. ' ' → logprob: -21.129079818725586
    10. '           ' → logprob: -21.129079818725586

Token 572: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.000712670327629894
    2. 'num' → logprob: -7.250712871551514
    3. ' num' → logprob: -13.750712394714355
    4. ',num' → logprob: -14.625712394714355
    5. '<num' → logprob: -14.625712394714355
    6. '[num' → logprob: -15.125712394714355
    7. '=num' → logprob: -15.375712394714355
    8. 'Number' → logprob: -16.000713348388672
    9. '	num' → logprob: -17.375713348388672
    10. ':num' → logprob: -17.500713348388672

Token 573: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.1472419600977446e-06
    2. 'token' → logprob: -14.375000953674316
    3. 'num' → logprob: -15.500000953674316
    4. '(num' → logprob: -16.125001907348633
    5. 'Token' → logprob: -16.250001907348633
    6. '_number' → logprob: -17.250001907348633
    7. '_num' → logprob: -17.750001907348633
    8. '_TOKEN' → logprob: -18.750001907348633
    9. '(_' → logprob: -19.500001907348633
    10. '_' → logprob: -19.500001907348633

Token 574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -13.750001907348633
    3. 'Number' → logprob: -15.250001907348633
    4. ',
' → logprob: -16.000001907348633
    5. '(Number' → logprob: -16.625001907348633
    6. ',num' → logprob: -17.875001907348633
    7. '(),' → logprob: -19.000001907348633
    8. 's' → logprob: -19.750001907348633
    9. '‌,' → logprob: -19.750001907348633
    10. '(' → logprob: -19.750001907348633

Token 575: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.0009114635176956654
    2. ' Number' → logprob: -7.000911235809326
    3. '_Number' → logprob: -18.625911712646484
    4. '(Number' → logprob: -19.125911712646484
    5. 'Token' → logprob: -19.875911712646484
    6. ' ' → logprob: -20.750911712646484
    7. 'number' → logprob: -21.375911712646484
    8. '_number' → logprob: -21.625911712646484
    9. '.Number' → logprob: -21.750911712646484
    10. '   ' → logprob: -22.000911712646484

Token 576: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -2.1008713702030946e-06
    2. 'token' → logprob: -13.125001907348633
    3. '_token' → logprob: -18.000001907348633
    4. '	Token' → logprob: -18.125001907348633
    5. '<Token' → logprob: -18.750001907348633
    6. ' Token' → logprob: -19.625001907348633
    7. 'oken' → logprob: -20.250001907348633
    8. 'Tokenizer' → logprob: -20.375001907348633
    9. '```' → logprob: -20.875001907348633
    10. '-token' → logprob: -21.125001907348633

Token 577: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03807603940367699
    2. '):' → logprob: -3.2880759239196777
    3. ')' → logprob: -11.913076400756836
    4. ':' → logprob: -11.913076400756836
    5. '):
' → logprob: -11.913076400756836
    6. '       ' → logprob: -12.413076400756836
    7. ':
' → logprob: -12.913076400756836
    8. '           ' → logprob: -12.913076400756836
    9. '):

' → logprob: -13.413076400756836
    10. '   ' → logprob: -13.663076400756836

Token 578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.5252596464706585e-05
    2. '           ' → logprob: -10.875044822692871
    3. ' raise' → logprob: -11.500044822692871
    4. '                   ' → logprob: -11.625044822692871
    5. 'raise' → logprob: -12.500044822692871
    6. '   ' → logprob: -13.125044822692871
    7. 'Raise' → logprob: -14.875044822692871
    8. '       ' → logprob: -15.000044822692871
    9. '              ' → logprob: -15.000044822692871
    10. '                       ' → logprob: -15.125044822692871

Token 579: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.4882670044898987
    2. 'raise' (adapté à ' raise') → logprob: -1.238266944885254
    3. '               ' → logprob: -2.363266944885254
    4. '                   ' → logprob: -6.738266944885254
    5. '           ' → logprob: -7.488266944885254
    6. '	raise' → logprob: -8.738266944885254
    7. 'Raise' → logprob: -8.738266944885254
    8. '   ' → logprob: -9.113266944885254
    9. '                ' → logprob: -9.488266944885254
    10. '            ' → logprob: -10.988266944885254

Token 580: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -3.5716304410016164e-05
    2. ' Value' → logprob: -10.250035285949707
    3. '	Value' → logprob: -16.000036239624023
    4. '(Value' → logprob: -16.250036239624023
    5. 'raise' → logprob: -17.000036239624023
    6. '_Value' → logprob: -18.000036239624023
    7. '_value' → logprob: -18.125036239624023
    8. 'Raise' → logprob: -18.250036239624023
    9. '<Value' → logprob: -18.250036239624023
    10. '.Value' → logprob: -18.500036239624023

Token 581: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0003955224819947034
    2. 'Value' → logprob: -7.87539529800415
    3. 'rror' → logprob: -11.125395774841309
    4. 'alue' → logprob: -15.500395774841309
    5. 'Val' → logprob: -16.500394821166992
    6. '
' → logprob: -16.625394821166992
    7. 'LError' → logprob: -16.750394821166992
    8. '(Value' → logprob: -17.000394821166992
    9. 'SError' → logprob: -17.500394821166992
    10. 'error' → logprob: -17.625394821166992

Token 582: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00020401719666551799
    2. '(' → logprob: -8.500204086303711
    3. '(
' → logprob: -15.375204086303711
    4. '('' → logprob: -16.37520408630371
    5. '(f' → logprob: -16.50020408630371
    6. '("("' → logprob: -18.25020408630371
    7. '"' → logprob: -18.75020408630371
    8. '           ' → logprob: -19.75020408630371
    9. ' ("' → logprob: -19.87520408630371
    10. '   ' → logprob: -20.00020408630371

Token 583: 'Expected' (ID: 28041)
  Prédit: 'Expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expected' → logprob: -0.01246162224560976
    2. '"' → logprob: -4.7624616622924805
    3. 'Number' → logprob: -5.7624616622924805
    4. ' Expected' → logprob: -7.3874616622924805
    5. 'Operand' → logprob: -10.01246166229248
    6. 'Unexpected' → logprob: -11.63746166229248
    7. 'Expect' → logprob: -12.51246166229248
    8. ' expected' → logprob: -13.01246166229248
    9. 'Invalid' → logprob: -13.13746166229248
    10. 'Second' → logprob: -13.26246166229248

Token 584: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.3148998022079468
    2. 'number' → logprob: -1.3148998022079468
    3. 'Number' → logprob: -6.439899921417236
    4. ' Number' → logprob: -11.314899444580078
    5. 'num' → logprob: -11.564899444580078
    6. 'a' → logprob: -11.814899444580078
    7. ' a' → logprob: -11.939899444580078
    8. '_number' → logprob: -14.064899444580078
    9. 'token' → logprob: -14.314899444580078
    10. '(number' → logprob: -14.564899444580078

Token 585: ' token' (ID: 6602)
  Prédit: ' token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.14421410858631134
    2. 'token' → logprob: -2.144214153289795
    3. 'Token' → logprob: -4.144214153289795
    4. '_token' → logprob: -6.769214153289795
    5. ' Token' → logprob: -9.019213676452637
    6. '	token' → logprob: -12.144213676452637
    7. '-token' → logprob: -13.269213676452637
    8. '<Token' → logprob: -13.394213676452637
    9. '(token' → logprob: -14.144213676452637
    10. '	Token' → logprob: -14.394213676452637

Token 586: ' after' (ID: 1934)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0024554417468607426
    2. '")
' → logprob: -6.377455234527588
    3. ')' → logprob: -7.377455234527588
    4. ' ")' → logprob: -10.127455711364746
    5. ')")' → logprob: -10.377455711364746
    6. ' after' → logprob: -10.627455711364746
    7. ',' → logprob: -11.752455711364746
    8. '"' → logprob: -12.252455711364746
    9. ' for' → logprob: -12.752455711364746
    10. '.")' → logprob: -13.002455711364746

Token 587: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.20174163579940796
    2. 'operator' → logprob: -1.7017416954040527
    3. ' an' → logprob: -8.326741218566895
    4. 'an' → logprob: -10.326741218566895
    5. '(operator' → logprob: -10.951741218566895
    6. 'op' → logprob: -11.201741218566895
    7. '	operator' → logprob: -11.826741218566895
    8. ' op' → logprob: -12.326741218566895
    9. '.operator' → logprob: -13.326741218566895
    10. ' ' → logprob: -13.451741218566895

Token 588: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01731657236814499
    2. ' ")' → logprob: -4.1423163414001465
    3. '")
' → logprob: -7.0173163414001465
    4. ',' → logprob: -9.267316818237305
    5. 'token' → logprob: -9.392316818237305
    6. ' token' → logprob: -10.142316818237305
    7. ' ")
' → logprob: -10.142316818237305
    8. '.")' → logprob: -10.517316818237305
    9. ')' → logprob: -10.642316818237305
    10. '_token' → logprob: -10.767316818237305

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5335166454315186
    2. 'result' → logprob: -1.0335166454315186
    3. 'self' → logprob: -3.6585166454315186
    4. ' result' → logprob: -4.033516883850098
    5. '
' → logprob: -4.658516883850098
    6. '       ' → logprob: -6.158516883850098
    7. ' self' → logprob: -6.533516883850098
    8. 'value' → logprob: -7.908516883850098
    9. '            
' → logprob: -8.033516883850098
    10. '```' → logprob: -8.533516883850098

Token 590: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7042044401168823
    2. 'result' → logprob: -0.7042044401168823
    3. 'left' → logprob: -5.454204559326172
    4. '           ' → logprob: -6.204204559326172
    5. 'new' → logprob: -6.579204559326172
    6. 'try' → logprob: -6.704204559326172
    7. 'if' → logprob: -6.704204559326172
    8. 'current' → logprob: -8.329204559326172
    9. 'res' → logprob: -8.829204559326172
    10. 'op' → logprob: -9.079204559326172

Token 591: ' Apply' (ID: 28921)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.43987107276916504
    2. 'self' → logprob: -1.189871072769165
    3. 'if' → logprob: -3.439871072769165
    4. 'left' → logprob: -4.314870834350586
    5. 'new' → logprob: -5.814870834350586
    6. 'current' → logprob: -7.564870834350586
    7. 'operation' → logprob: -7.564870834350586
    8. 'res' → logprob: -7.689870834350586
    9. 'try' → logprob: -7.689870834350586
    10. '#' → logprob: -7.939870834350586

Token 592: ' operation' (ID: 9506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0419236421585083
    2. 'operation' → logprob: -1.0419236421585083
    3. '_operation' → logprob: -1.2919236421585083
    4. 'the' → logprob: -5.041923522949219
    5. ' operation' → logprob: -5.041923522949219
    6. ' self' → logprob: -5.541923522949219
    7. ' the' → logprob: -6.416923522949219
    8. '(self' → logprob: -7.416923522949219
    9. '(operation' → logprob: -8.916923522949219
    10. '           ' → logprob: -9.166923522949219

Token 593: ' immediately' (ID: 10731)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36080631613731384
    2. 'self' → logprob: -1.6108063459396362
    3. '(self' → logprob: -2.9858062267303467
    4. ' self' → logprob: -3.9858062267303467
    5. '
' → logprob: -5.110806465148926
    6. '            
' → logprob: -5.235806465148926
    7. '       ' → logprob: -5.485806465148926
    8. 'result' → logprob: -5.485806465148926
    9. '(
' → logprob: -5.485806465148926
    10. ',' → logprob: -6.235806465148926

Token 594: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2548002600669861
    2. 'self' → logprob: -2.129800319671631
    3. 'result' → logprob: -2.379800319671631
    4. ' self' → logprob: -5.129800319671631
    5. ' result' → logprob: -6.004800319671631
    6. ',' → logprob: -6.504800319671631
    7. '(self' → logprob: -6.754800319671631
    8. '            
' → logprob: -7.754800319671631
    9. 'value' → logprob: -7.879800319671631
    10. 'operation' → logprob: -8.504799842834473

Token 595: 'no' (ID: 1750)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8555638790130615
    2. ')' → logprob: -1.2305638790130615
    3. 'left' → logprob: -1.8555638790130615
    4. ')
' → logprob: -3.4805638790130615
    5. '           ' → logprob: -3.7305638790130615
    6. 'result' → logprob: -4.105564117431641
    7. 'if' → logprob: -4.980564117431641
    8. 'right' → logprob: -5.230564117431641
    9. 'the' → logprob: -5.230564117431641
    10. 'because' → logprob: -5.355564117431641

Token 596: ' precedence' (ID: 120000)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0759487971663475
    2. ' operator' → logprob: -3.325948715209961
    3. 'preced' → logprob: -3.575948715209961
    4. 'parent' → logprob: -5.325948715209961
    5. ' parentheses' → logprob: -6.075948715209961
    6. 'support' → logprob: -8.075948715209961
    7. ' precedence' → logprob: -8.075948715209961
    8. '   ' → logprob: -8.450948715209961
    9. 'def' → logprob: -8.950948715209961
    10. 'token' → logprob: -9.325948715209961

Token 597: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07389361411333084
    2. '           ' → logprob: -2.9488935470581055
    3. '<|end|>' → logprob: -5.3238935470581055
    4. ',' → logprob: -5.9488935470581055
    5. ' rules' → logprob: -5.9488935470581055
    6. '),' → logprob: -6.0738935470581055
    7. ' or' → logprob: -6.4488935470581055
    8. '               ' → logprob: -6.6988935470581055
    9. ').' → logprob: -7.4488935470581055
    10. ' since' → logprob: -7.8238935470581055

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026188241317868233
    2. '
' → logprob: -6.252618789672852
    3. '            
' → logprob: -7.627618789672852
    4. '       ' → logprob: -9.502618789672852
    5. '```' → logprob: -10.627618789672852
    6. '        
' → logprob: -10.752618789672852
    7. ' 
' → logprob: -10.752618789672852
    8. '    
' → logprob: -10.752618789672852
    9. '               ' → logprob: -11.377618789672852
    10. '  
' → logprob: -11.627618789672852

Token 599: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00614658510312438
    2. '           ' → logprob: -6.006146430969238
    3. ' self' → logprob: -6.006146430969238
    4. 'result' → logprob: -6.756146430969238
    5. 'new' → logprob: -12.006146430969238
    6. '       ' → logprob: -12.006146430969238
    7. '               ' → logprob: -12.131146430969238
    8. '   ' → logprob: -12.631146430969238
    9. ' result' → logprob: -12.756146430969238
    10. 'left' → logprob: -13.256146430969238

Token 600: '.state' (ID: 6696)
  Prédit: '.state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -0.007636327762156725
    2. 'state' → logprob: -4.882636547088623
    3. '.' → logprob: -10.632636070251465
    4. ' state' → logprob: -13.882636070251465
    5. ' .' → logprob: -13.882636070251465
    6. '`.' → logprob: -14.382636070251465
    7. 'apply' → logprob: -14.382636070251465
    8. ').' → logprob: -14.882636070251465
    9. '.apply' → logprob: -14.882636070251465
    10. '	state' → logprob: -14.882636070251465

Token 601: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.00016921341011766344
    2. 'current' → logprob: -8.750168800354004
    3. '.' → logprob: -11.625168800354004
    4. '=current' → logprob: -14.375168800354004
    5. '	current' → logprob: -15.625168800354004
    6. '_current' → logprob: -15.750168800354004
    7. '$current' → logprob: -15.750168800354004
    8. '.apply' → logprob: -16.00016975402832
    9. 'Current' → logprob: -16.12516975402832
    10. ').' → logprob: -16.75016975402832

Token 602: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1756367712223437e-05
    2. 'value' → logprob: -11.375011444091797
    3. 'Value' → logprob: -16.500011444091797
    4. '_token' → logprob: -16.625011444091797
    5. '_' → logprob: -17.375011444091797
    6. '_val' → logprob: -18.000011444091797
    7. '_operation' → logprob: -18.500011444091797
    8. '.value' → logprob: -18.625011444091797
    9. '_VALUE' → logprob: -18.750011444091797
    10. '=' → logprob: -18.875011444091797

Token 603: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. '=self' → logprob: -16.03522491455078
    4. ',' → logprob: -17.41022491455078
    5. ' ' → logprob: -17.78522491455078
    6. '=
' → logprob: -17.78522491455078
    7. '.=' → logprob: -18.66022491455078
    8. '=

' → logprob: -18.91022491455078
    9. 'self' → logprob: -19.28522491455078
    10. '    ' → logprob: -19.28522491455078

Token 604: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001502598519437015
    2. ' self' → logprob: -6.501502513885498
    3. '           ' → logprob: -16.251502990722656
    4. '(self' → logprob: -16.251502990722656
    5. '[self' → logprob: -18.126502990722656
    6. '=self' → logprob: -18.501502990722656
    7. '	self' → logprob: -18.626502990722656
    8. '   ' → logprob: -18.876502990722656
    9. '```' → logprob: -19.126502990722656
    10. '
' → logprob: -19.501502990722656

Token 605: '.apply' (ID: 23624)
  Prédit: '.apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.apply' → logprob: -3.833878508885391e-05
    2. 'apply' → logprob: -10.250038146972656
    3. '.' → logprob: -12.875038146972656
    4. ' .' → logprob: -15.625038146972656
    5. '.process' → logprob: -16.875038146972656
    6. '   ' → logprob: -17.250038146972656
    7. '.calculate' → logprob: -17.625038146972656
    8. 'self' → logprob: -17.750038146972656
    9. '`.' → logprob: -17.750038146972656
    10. '().' → logprob: -18.125038146972656

Token 606: '_operation' (ID: 77985)
  Prédit: '_operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operation' → logprob: -7.896309739408025e-07
    2. 'operation' → logprob: -14.125000953674316
    3. '_OPERATION' → logprob: -17.375
    4. '_operator' → logprob: -17.625
    5. '(operation' → logprob: -17.875
    6. 'Operation' → logprob: -18.25
    7. '_operations' → logprob: -18.75
    8. '_op' → logprob: -19.25
    9. '_' → logprob: -19.5
    10. '_operand' → logprob: -19.75

Token 607: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0027417545206844807
    2. '(' → logprob: -6.002741813659668
    3. '(
' → logprob: -8.252741813659668
    4. 'self' → logprob: -12.127741813659668
    5. '(

' → logprob: -17.12774085998535
    6. ' self' → logprob: -17.87774085998535
    7. '(s' → logprob: -17.87774085998535
    8. '(this' → logprob: -18.00274085998535
    9. '(
' → logprob: -18.12774085998535
    10. ' (' → logprob: -19.00274085998535

Token 608: '.state' (ID: 6696)
  Prédit: '.state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.state' → logprob: -0.0022200802341103554
    2. 'state' → logprob: -6.127220153808594
    3. '.' → logprob: -10.377220153808594
    4. 'self' → logprob: -14.127220153808594
    5. ',state' → logprob: -14.127220153808594
    6. '(state' → logprob: -14.877220153808594
    7. ').' → logprob: -15.002220153808594
    8. ' state' → logprob: -15.252220153808594
    9. ' .' → logprob: -15.377220153808594
    10. '[state' → logprob: -15.502220153808594

Token 609: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.00010783452307805419
    2. '.' → logprob: -9.625107765197754
    3. 'current' → logprob: -10.125107765197754
    4. '.previous' → logprob: -15.000107765197754
    5. ' .' → logprob: -15.250107765197754
    6. ').' → logprob: -15.500107765197754
    7. ' ' → logprob: -16.00010871887207
    8. '.
' → logprob: -16.25010871887207
    9. '	current' → logprob: -16.37510871887207
    10. '[current' → logprob: -16.37510871887207

Token 610: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0002715873415581882
    2. 'value' → logprob: -8.375271797180176
    3. '._' → logprob: -10.750271797180176
    4. '.value' → logprob: -11.125271797180176
    5. 'alue' → logprob: -13.125271797180176
    6. '_' → logprob: -14.000271797180176
    7. '_val' → logprob: -15.000271797180176
    8. '__' → logprob: -15.125271797180176
    9. '_.' → logprob: -15.125271797180176
    10. '.' → logprob: -15.750271797180176

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003820524725597352
    2. ' ,' → logprob: -7.875381946563721
    3. ',
' → logprob: -13.750382423400879
    4. 'op' → logprob: -15.875382423400879
    5. ')' → logprob: -15.875382423400879
    6. ' op' → logprob: -16.125381469726562
    7. '```' → logprob: -16.500381469726562
    8. '           ' → logprob: -16.750381469726562
    9. '            ' → logprob: -16.750381469726562
    10. '‌,' → logprob: -16.875381469726562

Token 612: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.3133455216884613
    2. 'op' → logprob: -1.3133455514907837
    3. ''op' → logprob: -10.813345909118652
    4. '(op' → logprob: -11.063345909118652
    5. ''' → logprob: -11.313345909118652
    6. ')' → logprob: -11.313345909118652
    7. 'f' → logprob: -12.063345909118652
    8. '	op' → logprob: -12.313345909118652
    9. '"' → logprob: -12.688345909118652
    10. ' '' → logprob: -13.313345909118652

Token 613: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -1.0445127372804563e-05
    2. 'token' → logprob: -11.75001049041748
    3. '_op' → logprob: -14.00001049041748
    4. 'op' → logprob: -14.87501049041748
    5. 'o' → logprob: -15.00001049041748
    6. '_tok' → logprob: -15.00001049041748
    7. '_operator' → logprob: -15.50001049041748
    8. '_TOKEN' → logprob: -16.375009536743164
    9. '.token' → logprob: -16.625009536743164
    10. 'Token' → logprob: -16.875009536743164

Token 614: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.00861729308962822
    2. '.' → logprob: -4.758617401123047
    3. ' .' → logprob: -13.008617401123047
    4. '.Value' → logprob: -16.008617401123047
    5. 'value' → logprob: -16.133617401123047
    6. ').' → logprob: -16.383617401123047
    7. '.val' → logprob: -16.633617401123047
    8. '._' → logprob: -16.758617401123047
    9. '`.' → logprob: -17.758617401123047
    10. '"value' → logprob: -17.758617401123047

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006770553067326546
    2. ',num' → logprob: -5.631770610809326
    3. ' ,' → logprob: -5.756770610809326
    4. ' num' → logprob: -13.006770133972168
    5. 'num' → logprob: -13.881770133972168
    6. ',n' → logprob: -15.256770133972168
    7. ',
' → logprob: -15.256770133972168
    8. ')' → logprob: -15.881770133972168
    9. '[num' → logprob: -16.506771087646484
    10. '```' → logprob: -16.631771087646484

Token 616: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.004078401252627373
    2. ' num' → logprob: -5.504078388214111
    3. 'n' → logprob: -19.379077911376953
    4. '(num' → logprob: -19.379077911376953
    5. '	num' → logprob: -19.754077911376953
    6. '[num' → logprob: -20.129077911376953
    7. '=num' → logprob: -20.379077911376953
    8. ',num' → logprob: -21.129077911376953
    9. 'Num' → logprob: -21.254077911376953
    10. '_num' → logprob: -21.629077911376953

Token 617: '_token' (ID: 13535)
  Prédit: '_token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_token' → logprob: -7.896309739408025e-07
    2. 'token' → logprob: -14.125000953674316
    3. 'Token' → logprob: -18.5
    4. '_TOKEN' → logprob: -19.0
    5. '_' → logprob: -19.75
    6. '_tokens' → logprob: -20.125
    7. '.token' → logprob: -20.375
    8. '_t' → logprob: -21.5
    9. '_tok' → logprob: -21.75
    10. '-token' → logprob: -22.0

Token 618: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -5.204720582696609e-05
    2. '.' → logprob: -9.875052452087402
    3. ').' → logprob: -15.125052452087402
    4. ' .' → logprob: -16.125051498413086
    5. 'value' → logprob: -16.125051498413086
    6. '.val' → logprob: -18.375051498413086
    7. '.values' → logprob: -18.750051498413086
    8. '.
' → logprob: -19.125051498413086
    9. '.Value' → logprob: -19.375051498413086
    10. ')' → logprob: -19.750051498413086

Token 619: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018065694894175977
    2. ')
' → logprob: -8.6251802444458
    3. ')return' → logprob: -14.5001802444458
    4. ' )' → logprob: -15.2501802444458
    5. '<|end|>' → logprob: -16.000181198120117
    6. ')

' → logprob: -16.125181198120117
    7. '       ' → logprob: -17.250181198120117
    8. '),' → logprob: -18.000181198120117
    9. ')
' → logprob: -18.125181198120117
    10. '
' → logprob: -18.625181198120117

Token 620: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40462052822113037
    2. '<|end|>' → logprob: -1.1546205282211304
    3. '
' → logprob: -4.27962064743042
    4. 'return' → logprob: -6.77962064743042
    5. '   ' → logprob: -7.27962064743042
    6. '        ' → logprob: -7.65462064743042
    7. '<|end|>' → logprob: -8.154620170593262
    8. '        
' → logprob: -8.279620170593262
    9. '	' → logprob: -8.779620170593262
    10. '      ' → logprob: -9.279620170593262

Token 621: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.28242164850234985
    2. 'raise' (adapté à ' raise') → logprob: -1.532421588897705
    3. '       ' → logprob: -3.532421588897705
    4. ' raise' → logprob: -7.782421588897705
    5. ' return' → logprob: -8.407422065734863
    6. '<|end|>' → logprob: -9.407422065734863
    7. '   ' → logprob: -11.032422065734863
    8. 'if' → logprob: -11.532422065734863
    9. '	raise' → logprob: -11.782422065734863
    10. '#' → logprob: -11.782422065734863

Token 622: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.09740173071622849
    2. ' Value' → logprob: -2.5974016189575195
    3. 'EOF' → logprob: -4.0974016189575195
    4. ' EOF' → logprob: -6.9724016189575195
    5. 'Stop' → logprob: -7.2224016189575195
    6. ' Stop' → logprob: -10.47240161895752
    7. 'Index' → logprob: -11.22240161895752
    8. 'Runtime' → logprob: -12.22240161895752
    9. '(Value' → logprob: -12.72240161895752
    10. '_value' → logprob: -13.09740161895752

Token 623: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.512236498361744e-07
    2. 'rror' → logprob: -14.625000953674316
    3. 'SError' → logprob: -19.25
    4. 'EOF' → logprob: -19.25
    5. 'Value' → logprob: -19.875
    6. '(Error' → logprob: -19.875
    7. '```' → logprob: -20.25
    8. '_Error' → logprob: -20.375
    9. '	Error' → logprob: -20.5
    10. 'LError' → logprob: -20.625

Token 624: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0041197193786501884
    2. '(' → logprob: -5.504119873046875
    3. '('' → logprob: -10.254119873046875
    4. '("("' → logprob: -12.629119873046875
    5. '("(' → logprob: -12.879119873046875
    6. '("")' → logprob: -16.129119873046875
    7. '(
' → logprob: -16.879119873046875
    8. '(f' → logprob: -17.254119873046875
    9. '("'' → logprob: -17.254119873046875
    10. '('"' → logprob: -17.629119873046875

Token 625: 'Input' (ID: 3275)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7165546417236328
    2. 'Incomplete' → logprob: -1.7165546417236328
    3. 'Expression' → logprob: -1.9665546417236328
    4. 'Expected' → logprob: -2.216554641723633
    5. 'Unexpected' → logprob: -3.341554641723633
    6. 'Missing' → logprob: -3.591554641723633
    7. 'No' → logprob: -4.841554641723633
    8. ''' → logprob: -4.966554641723633
    9. 'Input' → logprob: -6.216554641723633
    10. '"No' → logprob: -6.591554641723633

Token 626: ' does' (ID: 2226)
  Prédit: ' ended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ended' → logprob: -0.14883126318454742
    2. ' stream' → logprob: -2.648831367492676
    3. 'stream' → logprob: -2.773831367492676
    4. ' does' → logprob: -5.898831367492676
    5. 'ended' → logprob: -6.648831367492676
    6. ' did' → logprob: -7.898831367492676
    7. ' ends' → logprob: -8.648831367492676
    8. ' terminated' → logprob: -9.023831367492676
    9. '_stream' → logprob: -9.148831367492676
    10. 'terminated' → logprob: -9.648831367492676

Token 627: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2520071864128113
    2. ' not' → logprob: -1.502007246017456
    3. 'n't' → logprob: -9.502007484436035
    4. '_not' → logprob: -13.627007484436035
    5. '   ' → logprob: -14.252007484436035
    6. 'n' → logprob: -14.377007484436035
    7. '	not' → logprob: -14.377007484436035
    8. 'nt' → logprob: -16.25200653076172
    9. 't' → logprob: -16.37700653076172
    10. ' ' → logprob: -16.50200653076172

Token 628: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.10028991103172302
    2. 'end' → logprob: -2.350289821624756
    3. ' contain' → logprob: -10.100290298461914
    4. 'terminate' → logprob: -11.100290298461914
    5. 'contain' → logprob: -11.225290298461914
    6. '_end' → logprob: -11.850290298461914
    7. '	end' → logprob: -13.600290298461914
    8. ' terminate' → logprob: -13.600290298461914
    9. '[end' → logprob: -13.850290298461914
    10. '=end' → logprob: -14.475290298461914

Token 629: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.3132634460926056
    2. ' with' → logprob: -1.3132634162902832
    3. '=' → logprob: -13.938263893127441
    4. 'in' → logprob: -15.063263893127441
    5. ' in' → logprob: -15.563263893127441
    6. '	with' → logprob: -16.438262939453125
    7. ' ' → logprob: -16.438262939453125
    8. '<|end|>' → logprob: -16.938262939453125
    9. '_with' → logprob: -17.313262939453125
    10. '   ' → logprob: -17.438262939453125

Token 630: ' '='' (ID: 98780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19870403409004211
    2. '=' → logprob: -2.4487040042877197
    3. '"' → logprob: -2.8237040042877197
    4. 'an' → logprob: -3.6987040042877197
    5. 'equal' → logprob: -5.198704242706299
    6. ' an' → logprob: -6.698704242706299
    7. 'operator' → logprob: -7.073704242706299
    8. 'equals' → logprob: -7.698704242706299
    9. ' equal' → logprob: -7.948704242706299
    10. 'Operator' → logprob: -8.07370376586914

Token 631: ' operator' (ID: 11019)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.012462913990020752
    2. '"' → logprob: -4.512463092803955
    3. ')' → logprob: -6.637463092803955
    4. ')")' → logprob: -9.762462615966797
    5. ')"' → logprob: -10.512462615966797
    6. '\"' → logprob: -12.137462615966797
    7. '}")' → logprob: -12.762462615966797
    8. '")
' → logprob: -12.762462615966797
    9. ''' → logprob: -13.012462615966797
    10. '')' → logprob: -13.762462615966797

Token 632: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14129042625427246
    2. '")' → logprob: -2.1412904262542725
    3. '<|end|>' → logprob: -4.891290664672852
    4. '"' → logprob: -5.141290664672852
    5. '```' → logprob: -7.766290664672852
    6. '
' → logprob: -8.891290664672852
    7. '')' → logprob: -9.391290664672852
    8. '">' → logprob: -10.016290664672852
    9. '\n' → logprob: -10.641290664672852
    10. ']' → logprob: -10.766290664672852

Token 633: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 634: ' Input' (ID: 10090)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.40637779235839844
    2. ' Calculator' → logprob: -2.1563777923583984
    3. 'Parser' → logprob: -2.2813777923583984
    4. 'Test' → logprob: -4.031377792358398
    5. 'Evaluator' → logprob: -4.031377792358398
    6. 'Token' → logprob: -4.156377792358398
    7. 'Expression' → logprob: -4.281377792358398
    8. 'Tokenizer' → logprob: -4.531377792358398
    9. 'Interactive' → logprob: -4.656377792358398
    10. ' Parser' → logprob: -5.156377792358398

Token 635: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.1048862934112549
    2. 'Processor' → logprob: -1.2298862934112549
    3. 'Handler' → logprob: -1.3548862934112549
    4. 'Tokenizer' → logprob: -3.104886293411255
    5. 'Buffer' → logprob: -3.229886293411255
    6. 'Stream' → logprob: -3.854886293411255
    7. 'Reader' → logprob: -5.354886054992676
    8. 'Lexer' → logprob: -5.729886054992676
    9. 'Evaluator' → logprob: -6.479886054992676
    10. 'Provider' → logprob: -6.979886054992676

Token 636: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001046743243932724
    2. ':
' → logprob: -6.876046657562256
    3. ' :' → logprob: -11.626047134399414
    4. ':def' → logprob: -13.501047134399414
    5. '(' → logprob: -14.001047134399414
    6. ':

' → logprob: -14.126047134399414
    7. '):' → logprob: -14.501047134399414
    8. '<|end|>' → logprob: -15.001047134399414
    9. '(object' → logprob: -15.501047134399414
    10. '():' → logprob: -15.626047134399414

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011307409033179283
    2. ' def' → logprob: -4.636307239532471
    3. ' class' → logprob: -6.761307239532471
    4. 'class' → logprob: -8.261307716369629
    5. 'def' → logprob: -9.886307716369629
    6. '    ' → logprob: -11.261307716369629
    7. '```' → logprob: -11.261307716369629
    8. 'import' → logprob: -11.511307716369629
    9. '<|end|>' → logprob: -11.636307716369629
    10. ' ' → logprob: -12.511307716369629

Token 638: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.38978588581085205
    2. 'def' (adapté à ' def') → logprob: -1.139785885810852
    3. '   ' → logprob: -5.8897857666015625
    4. ' @' → logprob: -9.389785766601562
    5. '@' → logprob: -10.389785766601562
    6. 'class' → logprob: -10.889785766601562
    7. 'import' → logprob: -11.639785766601562
    8. ' class' → logprob: -14.514785766601562
    9. '	def' → logprob: -15.139785766601562
    10. ' import' → logprob: -15.764785766601562

Token 639: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.02226581610739231
    2. 'def' → logprob: -3.897265911102295
    3. ' def' → logprob: -6.772265911102295
    4. 'classmethod' → logprob: -8.022265434265137
    5. 'init' → logprob: -9.147265434265137
    6. 'static' → logprob: -9.272265434265137
    7. '__' → logprob: -10.897265434265137
    8. ' __' → logprob: -11.397265434265137
    9. '```' → logprob: -11.522265434265137
    10. 'class' → logprob: -13.147265434265137

Token 640: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.68153518543113e-05
    2. 'class' → logprob: -10.000057220458984
    3. '__' → logprob: -12.625057220458984
    4. 'new' → logprob: -12.625057220458984
    5. 'iter' → logprob: -13.750057220458984
    6. 'def' → logprob: -13.875057220458984
    7. '```' → logprob: -14.250057220458984
    8. 'it' → logprob: -14.375057220458984
    9. '_init' → logprob: -14.750057220458984
    10. 'Init' → logprob: -14.750057220458984

Token 641: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06245586648583412
    2. '(' → logprob: -2.937455892562866
    3. '(self' → logprob: -4.937455654144287
    4. '_(' → logprob: -8.437456130981445
    5. ' (' → logprob: -9.437456130981445
    6. 'self' → logprob: -10.687456130981445
    7. '__(
' → logprob: -10.812456130981445
    8. '__' → logprob: -11.312456130981445
    9. '   ' → logprob: -12.187456130981445
    10. ')(' → logprob: -12.687456130981445

Token 642: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00027968952781520784
    2. ')' → logprob: -8.250279426574707
    3. ' self' → logprob: -11.625279426574707
    4. '):
' → logprob: -12.500279426574707
    5. '
' → logprob: -12.625279426574707
    6. '   ' → logprob: -13.500279426574707
    7. '(self' → logprob: -14.625279426574707
    8. '	self' → logprob: -15.375279426574707
    9. '       ' → logprob: -16.250280380249023
    10. ')
' → logprob: -16.750280380249023

Token 643: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.41157034039497375
    2. 'self' → logprob: -1.4115703105926514
    3. '):' → logprob: -2.5365703105926514
    4. ',' → logprob: -4.6615705490112305
    5. '(self' → logprob: -6.0365705490112305
    6. '   ' → logprob: -6.9115705490112305
    7. ' self' → logprob: -7.5365705490112305
    8. ')' → logprob: -7.7865705490112305
    9. '
' → logprob: -7.7865705490112305
    10. '):
' → logprob: -9.53657054901123

Token 644: ' lines' (ID: 8698)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17970110476016998
    2. 'input' → logprob: -2.304701089859009
    3. 'expression' → logprob: -3.304701089859009
    4. ')' → logprob: -4.054701328277588
    5. 'text' → logprob: -5.054701328277588
    6. ' self' → logprob: -6.429701328277588
    7. '):
' → logprob: -7.054701328277588
    8. '):' → logprob: -7.304701328277588
    9. 'source' → logprob: -7.804701328277588
    10. ' expression' → logprob: -8.80470085144043

Token 645: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8337544202804565
    2. '):' → logprob: -1.0837544202804565
    3. '):
' → logprob: -1.9587544202804565
    4. '=None' → logprob: -2.708754539489746
    5. '=' → logprob: -4.583754539489746
    6. '=[]' → logprob: -4.708754539489746
    7. '):
' → logprob: -8.958754539489746
    8. '   ' → logprob: -9.458754539489746
    9. ')' → logprob: -10.083754539489746
    10. ':list' → logprob: -10.708754539489746

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005226647946983576
    2. ' lines' → logprob: -5.7552266120910645
    3. ' self' → logprob: -7.5052266120910645
    4. 'self' → logprob: -7.6302266120910645
    5. '   ' → logprob: -7.7552266120910645
    6. '(lines' → logprob: -8.255227088928223
    7. ':' → logprob: -8.630227088928223
    8. 'lines' → logprob: -9.755227088928223
    9. ',' → logprob: -10.505227088928223
    10. '	lines' → logprob: -11.505227088928223

Token 647: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013290488859638572
    2. ' self' → logprob: -6.751328945159912
    3. '       ' → logprob: -8.75132942199707
    4. '   ' → logprob: -14.87632942199707
    5. '	self' → logprob: -16.00132942199707
    6. '[self' → logprob: -17.50132942199707
    7. 'lines' → logprob: -17.87632942199707
    8. '        ' → logprob: -18.25132942199707
    9. '(self' → logprob: -18.50132942199707
    10. '
' → logprob: -19.75132942199707

Token 648: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.09926854819059372
    2. 'lines' → logprob: -2.8492684364318848
    3. '_lines' → logprob: -3.3492684364318848
    4. ' lines' → logprob: -6.849268436431885
    5. '	lines' → logprob: -8.349268913269043
    6. '._' → logprob: -8.974268913269043
    7. '.' → logprob: -9.724268913269043
    8. '(lines' → logprob: -11.099268913269043
    9. '_LINES' → logprob: -13.349268913269043
    10. '   ' → logprob: -14.474268913269043

Token 649: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01611659862101078
    2. ' =' → logprob: -4.141116619110107
    3. '=[]' → logprob: -9.76611614227295
    4. '=None' → logprob: -12.01611614227295
    5. '=self' → logprob: -12.51611614227295
    6. '.extend' → logprob: -12.89111614227295
    7. ')' → logprob: -13.01611614227295
    8. '=[]
' → logprob: -13.14111614227295
    9. '   ' → logprob: -13.51611614227295
    10. '=line' → logprob: -13.64111614227295

Token 650: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.004134918563067913
    2. ' lines' → logprob: -5.5041351318359375
    3. '[' → logprob: -10.254135131835938
    4. '(lines' → logprob: -11.254135131835938
    5. '[line' → logprob: -12.504135131835938
    6. 'iter' → logprob: -13.629135131835938
    7. ' [' → logprob: -13.879135131835938
    8. '	lines' → logprob: -13.879135131835938
    9. 'list' → logprob: -14.879135131835938
    10. '[]' → logprob: -15.129135131835938

Token 651: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2637209892272949
    2. '   ' → logprob: -1.638720989227295
    3. 'def' → logprob: -3.763720989227295
    4. '    
' → logprob: -5.013720989227295
    5. '<|end|>' → logprob: -5.638720989227295
    6. ' def' → logprob: -6.388720989227295
    7. ' 
' → logprob: -7.638720989227295
    8. '  
' → logprob: -8.013721466064453
    9. '<|end|>' → logprob: -8.138721466064453
    10. '

' → logprob: -8.263721466064453

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24277889728546143
    2. 'def' → logprob: -1.6177788972854614
    3. '
' → logprob: -4.117778778076172
    4. ' def' → logprob: -7.242778778076172
    5. '    
' → logprob: -8.617778778076172
    6. '	def' → logprob: -10.867778778076172
    7. '       ' → logprob: -12.867778778076172
    8. ' ' → logprob: -13.242778778076172
    9. '```' → logprob: -13.367778778076172
    10. 'import' → logprob: -13.367778778076172

Token 653: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003740694955922663
    2. ' def' → logprob: -8.250373840332031
    3. '   ' → logprob: -9.125373840332031
    4. '
' → logprob: -12.500373840332031
    5. '	def' → logprob: -16.87537384033203
    6. 'current' → logprob: -17.87537384033203
    7. '    
' → logprob: -18.00037384033203
    8. 'import' → logprob: -18.00037384033203
    9. ' ' → logprob: -19.00037384033203
    10. 'tokens' → logprob: -19.00037384033203

Token 654: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.12398304790258408
    2. '__' → logprob: -2.623983144760132
    3. 'token' → logprob: -3.123983144760132
    4. '_token' → logprob: -9.623983383178711
    5. '_parse' → logprob: -10.748983383178711
    6. 'generate' → logprob: -11.748983383178711
    7. 'tokens' → logprob: -11.873983383178711
    8. ' tokenize' → logprob: -13.123983383178711
    9. ' __' → logprob: -13.498983383178711
    10. '_tokens' → logprob: -13.498983383178711

Token 655: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017878903076052666
    2. '(' → logprob: -4.142879009246826
    3. '_line' → logprob: -6.767879009246826
    4. '_tokens' → logprob: -7.892879009246826
    5. 'self' → logprob: -9.267878532409668
    6. '_token' → logprob: -9.392878532409668
    7. '_' → logprob: -9.517878532409668
    8. '_lines' → logprob: -10.767878532409668
    9. '_expression' → logprob: -11.267878532409668
    10. '_input' → logprob: -11.392878532409668

Token 656: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6143762469291687
    2. '):' → logprob: -1.7393763065338135
    3. '_lines' → logprob: -2.1143763065338135
    4. ')' → logprob: -2.6143763065338135
    5. '_line' → logprob: -2.8643763065338135
    6. '_tokens' → logprob: -4.364376068115234
    7. ',' → logprob: -5.239376068115234
    8. '):
' → logprob: -5.864376068115234
    9. '_token' → logprob: -5.989376068115234
    10. '(self' → logprob: -5.989376068115234

Token 657: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003136247396469116
    2. 'self' → logprob: -6.253136157989502
    3. '(' → logprob: -7.003136157989502
    4. '   ' → logprob: -9.12813663482666
    5. '       ' → logprob: -9.87813663482666
    6. ':' → logprob: -10.00313663482666
    7. ' self' → logprob: -10.50313663482666
    8. '(
' → logprob: -10.75313663482666
    9. 'def' → logprob: -11.75313663482666
    10. ' (' → logprob: -12.12813663482666

Token 658: ' Token' (ID: 17951)
  Prédit: 'Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -0.08255460113286972
    2. 'list' → logprob: -2.582554578781128
    3. ' Token' → logprob: -6.082554817199707
    4. ' list' → logprob: -7.082554817199707
    5. 'List' → logprob: -8.707554817199707
    6. '[list' → logprob: -8.707554817199707
    7. '[' → logprob: -8.832554817199707
    8. '[]' → logprob: -10.582554817199707
    9. 'token' → logprob: -11.832554817199707
    10. '[]
' → logprob: -12.082554817199707

Token 659: 'Stream' (ID: 4193)
  Prédit: 'Stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stream' → logprob: -0.0017839411739259958
    2. '[]' → logprob: -7.126783847808838
    3. '_stream' → logprob: -7.376783847808838
    4. '[' → logprob: -8.876784324645996
    5. 'Streams' → logprob: -8.876784324645996
    6. 'stream' → logprob: -10.376784324645996
    7. 's' → logprob: -11.126784324645996
    8. 'List' → logprob: -11.501784324645996
    9. '[]
' → logprob: -11.751784324645996
    10. '_Stream' → logprob: -13.001784324645996

Token 660: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1310904622077942
    2. '       ' → logprob: -2.6310904026031494
    3. '   ' → logprob: -4.1310906410217285
    4. '(' → logprob: -4.5060906410217285
    5. '(
' → logprob: -4.5060906410217285
    6. ':' → logprob: -5.1310906410217285
    7. 'self' → logprob: -5.7560906410217285
    8. ':
' → logprob: -6.1310906410217285
    9. '	self' → logprob: -8.38109016418457
    10. '():
' → logprob: -8.63109016418457

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005963526200503111
    2. ' token' → logprob: -5.505963325500488
    3. 'token' → logprob: -6.380963325500488
    4. 'tokens' → logprob: -9.880963325500488
    5. '```' → logprob: -10.005963325500488
    6. '	token' → logprob: -10.505963325500488
    7. ' tokens' → logprob: -10.880963325500488
    8. 't' → logprob: -11.505963325500488
    9. '   ' → logprob: -11.880963325500488
    10. 'ts' → logprob: -12.380963325500488

Token 662: ' tokens' (ID: 20290)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.674592137336731
    2. ' token' → logprob: -1.424592137336731
    3. 'stream' → logprob: -1.924592137336731
    4. 'ts' → logprob: -2.9245920181274414
    5. ' stream' → logprob: -3.1745920181274414
    6. ' ts' → logprob: -5.049592018127441
    7. '       ' → logprob: -6.549592018127441
    8. 'tokens' (adapté à ' tokens') → logprob: -7.799592018127441
    9. ' tokens' → logprob: -8.049592018127441
    10. '   ' → logprob: -11.299592018127441

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0488455593585968
    2. '=' → logprob: -3.0488455295562744
    3. '_stream' → logprob: -8.548845291137695
    4. '_' → logprob: -10.548845291137695
    5. '   ' → logprob: -11.298845291137695
    6. ' ' → logprob: -11.298845291137695
    7. '=[]' → logprob: -12.298845291137695
    8. '	' → logprob: -13.798845291137695
    9. '_token' → logprob: -13.798845291137695
    10. '        ' → logprob: -14.048845291137695

Token 664: ' Token' (ID: 17951)
  Prédit: 'Token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -0.0015024791937321424
    2. ' Token' → logprob: -6.501502513885498
    3. '	Token' → logprob: -16.251502990722656
    4. 'Tokenizer' → logprob: -18.376502990722656
    5. '[]' → logprob: -19.001502990722656
    6. '(Token' → logprob: -20.876502990722656
    7. '   ' → logprob: -21.376502990722656
    8. '<Token' → logprob: -21.751502990722656
    9. 'token' → logprob: -21.876502990722656
    10. ' ' → logprob: -21.876502990722656

Token 665: 'Stream' (ID: 4193)
  Prédit: 'Stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stream' → logprob: 0.0
    2. 'stream' → logprob: -17.375
    3. '[]' → logprob: -18.0
    4. '_stream' → logprob: -18.75
    5. '_Stream' → logprob: -19.25
    6. ' Stream' → logprob: -19.375
    7. '[' → logprob: -19.5
    8. 'Streams' → logprob: -20.0
    9. 's' → logprob: -20.125
    10. 'Steam' → logprob: -20.25

Token 666: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18088416755199432
    2. '()
' → logprob: -1.8058841228485107
    3. '       ' → logprob: -7.43088436126709
    4. '()\' → logprob: -8.80588436126709
    5. '()
' → logprob: -9.05588436126709
    6. '
' → logprob: -9.05588436126709
    7. '()

' → logprob: -10.18088436126709
    8. '(' → logprob: -10.55588436126709
    9. '();' → logprob: -10.68088436126709
    10. 'for' → logprob: -11.05588436126709

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013619766104966402
    2. '        
' → logprob: -10.000136375427246
    3. ' for' → logprob: -10.125136375427246
    4. '	' → logprob: -10.375136375427246
    5. 'for' → logprob: -11.750136375427246
    6. '   ' → logprob: -13.000136375427246
    7. ' ' → logprob: -13.125136375427246
    8. '
' → logprob: -13.625136375427246
    9. '	   ' → logprob: -14.125136375427246
    10. '		
' → logprob: -14.375136375427246

Token 668: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009301012381911278
    2. ' for' → logprob: -5.25930118560791
    3. '       ' → logprob: -5.50930118560791
    4. '	for' → logprob: -12.13430118560791
    5. '   ' → logprob: -12.38430118560791
    6. 'import' → logprob: -15.25930118560791
    7. ' ' → logprob: -16.134300231933594
    8. '```' → logprob: -16.259300231933594
    9. '           ' → logprob: -17.634300231933594
    10. 'token' → logprob: -18.009300231933594

Token 669: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005444939713925123
    2. ' for' → logprob: -5.2554450035095215
    3. '       ' → logprob: -8.755444526672363
    4. 'import' → logprob: -9.880444526672363
    5. 'current' → logprob: -14.505444526672363
    6. 'token' → logprob: -14.505444526672363
    7. '   ' → logprob: -14.880444526672363
    8. 'tokens' → logprob: -15.380444526672363
    9. ' import' → logprob: -15.630444526672363
    10. 'from' → logprob: -15.755444526672363

Token 670: ' expect' (ID: 2665)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.060004450380802155
    2. ' for' → logprob: -3.435004472732544
    3. 'import' → logprob: -3.685004472732544
    4. '   ' → logprob: -7.435004234313965
    5. 'def' → logprob: -9.060004234313965
    6. '	for' → logprob: -9.185004234313965
    7. ' ' → logprob: -10.060004234313965
    8. '       ' → logprob: -11.060004234313965
    9. '=' → logprob: -11.560004234313965
    10. ' import' → logprob: -11.685004234313965

Token 671: ' alternating' (ID: 125099)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5878634452819824
    2. ' for' → logprob: -0.8378634452819824
    3. '       ' → logprob: -5.212863445281982
    4. ' that' → logprob: -6.087863445281982
    5. ' to' → logprob: -6.712863445281982
    6. ' the' → logprob: -7.462863445281982
    7. ' each' → logprob: -7.462863445281982
    8. ' a' → logprob: -8.21286392211914
    9. 'to' → logprob: -8.46286392211914
    10. 'each' → logprob: -8.46286392211914

Token 672: ' lines' (ID: 8698)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.4723433256149292
    2. 'numbers' → logprob: -2.0973434448242188
    3. 'for' → logprob: -2.4723434448242188
    4. 'number' → logprob: -2.5973434448242188
    5. ' tokens' → logprob: -2.9723434448242188
    6. ' numbers' → logprob: -4.097343444824219
    7. ' for' → logprob: -5.097343444824219
    8. 'token' → logprob: -5.847343444824219
    9. 'values' → logprob: -5.972343444824219
    10. ' number' → logprob: -5.972343444824219

Token 673: ' number' (ID: 2086)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36134791374206543
    2. ' for' → logprob: -1.2363479137420654
    3. 'for' → logprob: -4.8613481521606445
    4. '           ' → logprob: -6.9863481521606445
    5. ' of' → logprob: -7.1113481521606445
    6. ' in' → logprob: -7.3613481521606445
    7. ' between' → logprob: -7.4863481521606445
    8. ' that' → logprob: -7.6113481521606445
    9. ' with' → logprob: -7.7363481521606445
    10. ':' → logprob: -7.8613481521606445

Token 674: '/operator' (ID: 181648)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1211736723780632
    2. '       ' → logprob: -2.996173620223999
    3. 'and' → logprob: -2.996173620223999
    4. ' or' → logprob: -4.371173858642578
    5. ',' → logprob: -7.371173858642578
    6. 'or' → logprob: -7.746173858642578
    7. '   ' → logprob: -8.496173858642578
    8. '
' → logprob: -9.996173858642578
    9. '           ' → logprob: -10.246173858642578
    10. '        
' → logprob: -10.246173858642578

Token 675: ' starting' (ID: 8601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05068209767341614
    2. ' for' → logprob: -3.3006820678710938
    3. 'for' → logprob: -5.175682067871094
    4. '
' → logprob: -5.925682067871094
    5. ',' → logprob: -6.800682067871094
    6. '   ' → logprob: -7.300682067871094
    7. ':' → logprob: -7.675682067871094
    8. '        
' → logprob: -7.800682067871094
    9. '	' → logprob: -7.925682067871094
    10. 'tokens' → logprob: -8.925682067871094

Token 676: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.16705115139484406
    2. 'from' → logprob: -1.9170511960983276
    3. ' with' → logprob: -5.167051315307617
    4. 'at' → logprob: -7.542051315307617
    5. ' from' → logprob: -8.292051315307617
    6. '   ' → logprob: -8.542051315307617
    7. '=' → logprob: -10.042051315307617
    8. ' at' → logprob: -10.542051315307617
    9. '_' → logprob: -10.792051315307617
    10. '_from' → logprob: -11.792051315307617

Token 677: ' number' (ID: 2086)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1338183581829071
    2. 'number' → logprob: -2.1338183879852295
    3. 'Number' → logprob: -5.88381814956665
    4. 'numbers' → logprob: -6.50881814956665
    5. ''' → logprob: -7.00881814956665
    6. '"' → logprob: -7.13381814956665
    7. ' a' → logprob: -7.63381814956665
    8. ''a' → logprob: -8.508818626403809
    9. ' number' → logprob: -9.633818626403809
    10. 'True' → logprob: -9.883818626403809

Token 678: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019241800531744957
    2. ' for' → logprob: -4.394241809844971
    3. 'for' → logprob: -5.144241809844971
    4. '        
' → logprob: -8.019241333007812
    5. '   ' → logprob: -8.394241333007812
    6. '	' → logprob: -9.769241333007812
    7. '
' → logprob: -9.894241333007812
    8. '```' → logprob: -10.269241333007812
    9. '' → logprob: -10.644241333007812
    10. 'next' → logprob: -10.894241333007812

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012048733187839389
    2. ' for' → logprob: -7.001204967498779
    3. 'for' → logprob: -8.501204490661621
    4. '   ' → logprob: -10.001204490661621
    5. '	' → logprob: -10.251204490661621
    6. '           ' → logprob: -13.001204490661621
    7. '      ' → logprob: -13.876204490661621
    8. ' ' → logprob: -13.876204490661621
    9. ' current' → logprob: -14.001204490661621
    10. '	for' → logprob: -14.126204490661621

Token 680: ' expected' (ID: 5930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3332919478416443
    2. 'index' → logprob: -2.083292007446289
    3. 'expect' → logprob: -2.833292007446289
    4. 'for' → logprob: -3.083292007446289
    5. 'expected' (adapté à ' expected') → logprob: -3.708292007446289
    6. 'next' → logprob: -4.458292007446289
    7. 'current' → logprob: -5.208292007446289
    8. ' for' → logprob: -5.583292007446289
    9. 'i' → logprob: -5.833292007446289
    10. ' index' → logprob: -6.083292007446289

Token 681: '_number' (ID: 11733)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.039962563663721085
    2. '_token' → logprob: -3.2899625301361084
    3. '_is' → logprob: -7.0399627685546875
    4. '_' → logprob: -7.6649627685546875
    5. '_line' → logprob: -7.6649627685546875
    6. '_next' → logprob: -9.539962768554688
    7. '_kind' → logprob: -11.414962768554688
    8. '=' → logprob: -12.289962768554688
    9. ' =' → logprob: -12.414962768554688
    10. '_number' → logprob: -12.664962768554688

Token 682: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761065483093262
    2. ' =' → logprob: -0.8261065483093262
    3. '=True' → logprob: -8.951107025146484
    4. '_index' → logprob: -11.701107025146484
    5. '_line' → logprob: -11.951107025146484
    6. '_idx' → logprob: -11.951107025146484
    7. '   ' → logprob: -11.951107025146484
    8. '_' → logprob: -12.576107025146484
    9. '_=' → logprob: -13.326107025146484
    10. '=
' → logprob: -13.451107025146484

Token 683: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.50007438659668
    4. '(True' → logprob: -20.50007438659668
    5. '=True' → logprob: -21.62507438659668
    6. 'true' → logprob: -22.87507438659668
    7. '  ' → logprob: -24.50007438659668
    8. ' ' → logprob: -24.62507438659668
    9. 'False' → logprob: -25.00007438659668
    10. '       ' → logprob: -25.62507438659668

Token 684: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47618186473846436
    2. '       ' → logprob: -0.9761818647384644
    3. 'for' → logprob: -6.851181983947754
    4. ' for' → logprob: -7.851181983947754
    5. '        
' → logprob: -8.101181983947754
    6. '   ' → logprob: -9.601181983947754
    7. '
' → logprob: -9.726181983947754
    8. '	' → logprob: -9.726181983947754
    9. '<|end|>' → logprob: -10.226181983947754
    10. '  
' → logprob: -10.601181983947754

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056392475962638855
    2. 'for' → logprob: -5.88063907623291
    3. ' for' → logprob: -6.13063907623291
    4. '	' → logprob: -8.00563907623291
    5. '   ' → logprob: -9.13063907623291
    6. '
' → logprob: -9.88063907623291
    7. '	for' → logprob: -9.88063907623291
    8. '<|end|>' → logprob: -10.63063907623291
    9. '        
' → logprob: -10.75563907623291
    10. '	   ' → logprob: -11.13063907623291

Token 686: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01715932972729206
    2. '       ' → logprob: -4.767159461975098
    3. ' for' → logprob: -4.767159461975098
    4. '   ' → logprob: -13.892159461975098
    5. 'tokens' → logprob: -14.267159461975098
    6. '
' → logprob: -14.392159461975098
    7. '```' → logprob: -14.642159461975098
    8. '	for' → logprob: -14.892159461975098
    9. 'token' → logprob: -15.017159461975098
    10. ' ' → logprob: -15.392159461975098

Token 687: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.008614808320999146
    2. ' line' → logprob: -4.758615016937256
    3. '	line' → logprob: -16.008615493774414
    4. '   ' → logprob: -16.383615493774414
    5. '(line' → logprob: -17.133615493774414
    6. '_line' → logprob: -18.258615493774414
    7. ' ' → logprob: -18.508615493774414
    8. 'lin' → logprob: -18.633615493774414
    9. 'raw' → logprob: -18.758615493774414
    10. '
' → logprob: -19.258615493774414

Token 688: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005587508203461766
    2. 'in' → logprob: -7.500558853149414
    3. ' ' → logprob: -13.125558853149414
    4. '        ' → logprob: -13.625558853149414
    5. '       ' → logprob: -14.625558853149414
    6. '	in' → logprob: -14.875558853149414
    7. '    ' → logprob: -15.250558853149414
    8. '   ' → logprob: -15.375558853149414
    9. 's' → logprob: -15.500558853149414
    10. '_in' → logprob: -15.750558853149414

Token 689: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012356207298580557
    2. ' self' → logprob: -9.000123977661133
    3. '       ' → logprob: -16.500123977661133
    4. '   ' → logprob: -16.625123977661133
    5. '(self' → logprob: -18.000123977661133
    6. '	self' → logprob: -19.000123977661133
    7. '
' → logprob: -19.125123977661133
    8. '[self' → logprob: -19.125123977661133
    9. '           ' → logprob: -19.500123977661133
    10. '```' → logprob: -20.375123977661133

Token 690: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -7.135819760151207e-05
    2. 'lines' → logprob: -10.00007152557373
    3. '.' → logprob: -11.00007152557373
    4. '	lines' → logprob: -12.12507152557373
    5. '(lines' → logprob: -13.50007152557373
    6. ' lines' → logprob: -14.50007152557373
    7. '.readlines' → logprob: -14.62507152557373
    8. 'ines' → logprob: -14.75007152557373
    9. '_lines' → logprob: -15.62507152557373
    10. ' .' → logprob: -15.62507152557373

Token 691: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15439508855342865
    2. ':
' → logprob: -2.02939510345459
    3. '           ' → logprob: -4.65439510345459
    4. '.strip' → logprob: -7.02939510345459
    5. ',' → logprob: -7.90439510345459
    6. '):
' → logprob: -8.90439510345459
    7. '       ' → logprob: -8.90439510345459
    8. '():
' → logprob: -9.02939510345459
    9. '.rstrip' → logprob: -9.27939510345459
    10. '<|end|>' → logprob: -9.27939510345459

Token 692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.374227425316349e-05
    2. '            
' → logprob: -10.125073432922363
    3. ' line' → logprob: -11.500073432922363
    4. '	       ' → logprob: -12.750073432922363
    5. ' stripped' → logprob: -12.750073432922363
    6. '       ' → logprob: -13.500073432922363
    7. '               ' → logprob: -13.500073432922363
    8. '.strip' → logprob: -13.500073432922363
    9. '          ' → logprob: -13.625073432922363
    10. '    
' → logprob: -13.875073432922363

Token 693: ' stripped' (ID: 78107)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4946244955062866
    2. ' stripped' → logprob: -1.6196244955062866
    3. '           ' → logprob: -1.9946244955062866
    4. 'line' → logprob: -3.619624614715576
    5. ' token' → logprob: -4.369624614715576
    6. 'token' → logprob: -4.494624614715576
    7. ' text' → logprob: -6.369624614715576
    8. 'text' → logprob: -7.244624614715576
    9. ' value' → logprob: -7.369624614715576
    10. ' content' → logprob: -7.494624614715576

Token 694: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.23208710551261902
    2. '=' → logprob: -1.9820871353149414
    3. 'line' → logprob: -3.4820871353149414
    4. ' =' → logprob: -3.7320871353149414
    5. '=line' → logprob: -4.232087135314941
    6. '(line' → logprob: -9.857087135314941
    7. '_' → logprob: -10.482087135314941
    8. '_=' → logprob: -11.232087135314941
    9. '	line' → logprob: -11.857087135314941
    10. '   ' → logprob: -12.107087135314941

Token 695: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0015023599844425917
    2. ' line' → logprob: -6.501502513885498
    3. '(line' → logprob: -19.626502990722656
    4. '=line' → logprob: -20.626502990722656
    5. '	line' → logprob: -20.751502990722656
    6. '   ' → logprob: -21.626502990722656
    7. 'strip' → logprob: -21.876502990722656
    8. '#line' → logprob: -22.626502990722656
    9. '[line' → logprob: -23.126502990722656
    10. 'str' → logprob: -23.626502990722656

Token 696: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00720677524805069
    2. '().' → logprob: -5.257206916809082
    3. '.' → logprob: -6.257206916809082
    4. ' .' → logprob: -10.632206916809082
    5. '.rstrip' → logprob: -10.632206916809082
    6. '(strip' → logprob: -12.632206916809082
    7. 'strip' → logprob: -13.132206916809082
    8. '.trim' → logprob: -15.007206916809082
    9. '()' → logprob: -15.757206916809082
    10. '_strip' → logprob: -16.007205963134766

Token 697: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25428760051727295
    2. '()
' → logprob: -2.0042877197265625
    3. '()' → logprob: -2.7542877197265625
    4. '               ' → logprob: -5.0042877197265625
    5. 'if' → logprob: -5.2542877197265625
    6. '            
' → logprob: -5.7542877197265625
    7. '
' → logprob: -5.8792877197265625
    8. 'token' → logprob: -6.5042877197265625
    9. 'tokens' → logprob: -7.0042877197265625
    10. '                
' → logprob: -7.5042877197265625

Token 698: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00684798089787364
    2. 'if' → logprob: -5.006847858428955
    3. ' if' → logprob: -9.256848335266113
    4. '            
' → logprob: -11.256848335266113
    5. '```' → logprob: -11.756848335266113
    6. '               ' → logprob: -12.381848335266113
    7. '<|end|>' → logprob: -12.881848335266113
    8. 'token' → logprob: -13.381848335266113
    9. '	       ' → logprob: -13.881848335266113
    10. '       ' → logprob: -13.881848335266113

Token 699: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001757696009008214
    2. '           ' → logprob: -8.750175476074219
    3. ' if' → logprob: -11.500175476074219
    4. 'try' → logprob: -11.875175476074219
    5. '               ' → logprob: -16.37517547607422
    6. 'If' → logprob: -17.12517547607422
    7. '            
' → logprob: -17.62517547607422
    8. '       ' → logprob: -17.62517547607422
    9. '```' → logprob: -17.87517547607422
    10. '   ' → logprob: -18.37517547607422

Token 700: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.03002098575234413
    2. ' expected' → logprob: -3.6550209522247314
    3. 'not' → logprob: -6.1550211906433105
    4. ' not' → logprob: -6.7800211906433105
    5. 'str' → logprob: -7.7800211906433105
    6. '	expected' → logprob: -11.030020713806152
    7. ' stripped' → logprob: -11.530020713806152
    8. '(expected' → logprob: -13.530020713806152
    9. '.expected' → logprob: -13.655020713806152
    10. '''' → logprob: -13.780020713806152

Token 701: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -6.909333023941144e-05
    2. '_' → logprob: -9.625068664550781
    3. 'number' → logprob: -13.125068664550781
    4. '_NUMBER' → logprob: -14.500068664550781
    5. '_
' → logprob: -15.875068664550781
    6. '_Number' → logprob: -16.50006866455078
    7. 'Number' → logprob: -16.62506866455078
    8. '_num' → logprob: -17.00006866455078
    9. '_numbers' → logprob: -17.50006866455078
    10. '_n' → logprob: -17.62506866455078

Token 702: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01615249365568161
    2. ':
' → logprob: -4.141152381896973
    3. 'and' → logprob: -9.766152381896973
    4. ' and' → logprob: -10.266152381896973
    5. '==' → logprob: -11.016152381896973
    6. ':

' → logprob: -12.891152381896973
    7. '=' → logprob: -13.016152381896973
    8. '():
' → logprob: -14.016152381896973
    9. '):' → logprob: -14.266152381896973
    10. '{' → logprob: -14.266152381896973

Token 703: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39915770292282104
    2. ':' → logprob: -1.3991577625274658
    3. '           ' → logprob: -2.774157762527466
    4. ':
' → logprob: -4.274157524108887
    5. 'try' → logprob: -5.649157524108887
    6. 'if' → logprob: -6.399157524108887
    7. ' and' → logprob: -8.774157524108887
    8. '#' → logprob: -8.899157524108887
    9. ',' → logprob: -9.274157524108887
    10. ' if' → logprob: -9.524157524108887

Token 704: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.04902128502726555
    2. 'if' → logprob: -3.0490212440490723
    3. '           ' → logprob: -8.29902172088623
    4. 'tokens' → logprob: -9.42402172088623
    5. 'num' → logprob: -10.29902172088623
    6. '               ' → logprob: -10.54902172088623
    7. '
' → logprob: -11.04902172088623
    8. ' try' → logprob: -11.17402172088623
    9. ' if' → logprob: -13.04902172088623
    10. '#' → logprob: -13.04902172088623

Token 705: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2285291999578476
    2. ':
' → logprob: -1.6035292148590088
    3. '                   ' → logprob: -5.85352897644043
    4. '               ' → logprob: -9.22852897644043
    5. '                       ' → logprob: -9.60352897644043
    6. '   ' → logprob: -10.85352897644043
    7. ':
' → logprob: -11.22852897644043
    8. '           ' → logprob: -11.85352897644043
    9. '<|end|>' → logprob: -11.85352897644043
    10. '):
' → logprob: -11.97852897644043

Token 706: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0021460969001054764
    2. '   ' → logprob: -6.627146244049072
    3. 'value' → logprob: -8.127145767211914
    4. 'token' → logprob: -8.627145767211914
    5. '                       ' → logprob: -8.877145767211914
    6. '               ' → logprob: -9.127145767211914
    7. 'int' → logprob: -10.377145767211914
    8. '           ' → logprob: -11.002145767211914
    9. '       ' → logprob: -11.377145767211914
    10. 'number' → logprob: -11.627145767211914

Token 707: ' val' (ID: 1459)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.06632819771766663
    2. 'num' → logprob: -2.816328287124634
    3. 'number' → logprob: -5.816328048706055
    4. 'val' (adapté à ' val') → logprob: -6.941328048706055
    5. '                   ' → logprob: -8.066328048706055
    6. ' value' → logprob: -10.191328048706055
    7. '                       ' → logprob: -10.441328048706055
    8. 'token' → logprob: -11.191328048706055
    9. 'n' → logprob: -12.566328048706055
    10. '   ' → logprob: -13.066328048706055

Token 708: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5795577168464661
    2. ' =' → logprob: -0.8295577168464661
    3. 'ue' → logprob: -5.7045578956604
    4. 'ues' → logprob: -8.704557418823242
    5. '=int' → logprob: -9.454557418823242
    6. '=
' → logprob: -11.454557418823242
    7. 'u' → logprob: -11.829557418823242
    8. '   ' → logprob: -12.329557418823242
    9. 'alue' → logprob: -12.704557418823242
    10. '       ' → logprob: -13.579557418823242

Token 709: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.842555426876061e-06
    2. ' int' → logprob: -12.250004768371582
    3. '(int' → logprob: -21.0000057220459
    4. '[int' → logprob: -21.1250057220459
    5. '   ' → logprob: -21.2500057220459
    6. 'intval' → logprob: -21.7500057220459
    7. '=int' → logprob: -21.8750057220459
    8. ':int' → logprob: -22.7500057220459
    9. '	int' → logprob: -23.1250057220459
    10. '                   ' → logprob: -23.2500057220459

Token 710: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0003212805895600468
    2. '(' → logprob: -8.250321388244629
    3. 'str' → logprob: -9.750321388244629
    4. '(strip' → logprob: -13.625321388244629
    5. '(
' → logprob: -14.625321388244629
    6. '(Str' → logprob: -17.625320434570312
    7. ' (' → logprob: -17.875320434570312
    8. ':str' → logprob: -18.000320434570312
    9. '$str' → logprob: -18.125320434570312
    10. '	str' → logprob: -18.500320434570312

Token 711: 'ipped' (ID: 8193)
  Prédit: 'ipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipped' → logprob: -0.0003839597338810563
    2. '(str' → logprob: -7.8753838539123535
    3. 'str' → logprob: -12.875384330749512
    4. ' stripped' → logprob: -14.750384330749512
    5. '(' → logprob: -15.000384330749512
    6. 'ipping' → logprob: -16.125383377075195
    7. 'r' → logprob: -16.375383377075195
    8. 'ip' → logprob: -16.750383377075195
    9. 'iped' → logprob: -16.875383377075195
    10. '[str' → logprob: -17.250383377075195

Token 712: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005962691269814968
    2. ')
' → logprob: -5.13096284866333
    3. ')
' → logprob: -10.630962371826172
    4. '               ' → logprob: -12.130962371826172
    5. '                   ' → logprob: -13.130962371826172
    6. ' )' → logprob: -14.130962371826172
    7. ')`' → logprob: -14.505962371826172
    8. ')

' → logprob: -15.255962371826172
    9. '           ' → logprob: -15.630962371826172
    10. ')`
' → logprob: -15.755962371826172

Token 713: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5330095887184143
    2. '               ' → logprob: -0.9080095887184143
    3. ')' → logprob: -5.0330095291137695
    4. 'tokens' → logprob: -6.9080095291137695
    5. '<|end|>' → logprob: -7.6580095291137695
    6. '           ' → logprob: -7.9080095291137695
    7. 'token' → logprob: -8.15800952911377
    8. '<|end|>' → logprob: -8.40800952911377
    9. ',' → logprob: -8.65800952911377
    10. '                       ' → logprob: -9.15800952911377

Token 714: ' except' (ID: 6384)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5021501779556274
    2. '                   ' → logprob: -1.0021501779556274
    3. ')' → logprob: -4.877150058746338
    4. 'except' (adapté à ' except') → logprob: -5.002150058746338
    5. ' except' → logprob: -5.502150058746338
    6. 'tokens' → logprob: -5.877150058746338
    7. ' tokens' → logprob: -6.627150058746338
    8. '           ' → logprob: -6.877150058746338
    9. '<|end|>' → logprob: -7.127150058746338
    10. ',' → logprob: -7.502150058746338

Token 715: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.10781959444284439
    2. '(Value' → logprob: -2.9828195571899414
    3. ' Value' → logprob: -2.9828195571899414
    4. '	Value' → logprob: -7.357819557189941
    5. '_Value' → logprob: -9.482819557189941
    6. '_value' → logprob: -9.607819557189941
    7. '<|end|>' → logprob: -9.732819557189941
    8. '<Value' → logprob: -10.107819557189941
    9. '.Value' → logprob: -11.357819557189941
    10. '(value' → logprob: -12.107819557189941

Token 716: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0009120595059357584
    2. 'rror' → logprob: -7.000912189483643
    3. 'LError' → logprob: -15.750911712646484
    4. 'error' → logprob: -16.000911712646484
    5. 'Value' → logprob: -16.250911712646484
    6. 'SError' → logprob: -16.375911712646484
    7. '	Error' → logprob: -17.750911712646484
    8. ' Error' → logprob: -17.875911712646484
    9. 'Exception' → logprob: -17.875911712646484
    10. '```' → logprob: -18.625911712646484

Token 717: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04331590235233307
    2. ':
' → logprob: -3.168315887451172
    3. '(' → logprob: -8.418315887451172
    4. '(
' → logprob: -10.543315887451172
    5. '):' → logprob: -10.793315887451172
    6. ' as' → logprob: -11.293315887451172
    7. '():' → logprob: -12.293315887451172
    8. '           ' → logprob: -12.293315887451172
    9. '[' → logprob: -12.418315887451172
    10. ',' → logprob: -12.543315887451172

Token 718: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.481510692741722e-05
    2. 'raise' → logprob: -10.00007438659668
    3. '               ' → logprob: -11.12507438659668
    4. '                       ' → logprob: -12.12507438659668
    5. '		           ' → logprob: -12.50007438659668
    6. ' raise' → logprob: -13.37507438659668
    7. '	               ' → logprob: -13.50007438659668
    8. '   ' → logprob: -13.62507438659668
    9. '	raise' → logprob: -14.87507438659668
    10. '           ' → logprob: -15.37507438659668

Token 719: ' raise' (ID: 9338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1615084409713745
    2. 'raise' (adapté à ' raise') → logprob: -1.9115084409713745
    3. '                       ' → logprob: -7.411508560180664
    4. ' raise' → logprob: -7.661508560180664
    5. '               ' → logprob: -9.036508560180664
    6. '   ' → logprob: -10.411508560180664
    7. '	raise' → logprob: -10.411508560180664
    8. '           ' → logprob: -10.911508560180664
    9. '                  ' → logprob: -12.536508560180664
    10. '       ' → logprob: -12.661508560180664

Token 720: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.001170460251159966
    2. ' Value' → logprob: -6.751170635223389
    3. '
' → logprob: -17.251171112060547
    4. '	Value' → logprob: -17.376171112060547
    5. '   ' → logprob: -17.626171112060547
    6. ' ' → logprob: -17.626171112060547
    7. 'Syntax' → logprob: -17.876171112060547
    8. 'Runtime' → logprob: -18.126171112060547
    9. 'value' → logprob: -18.626171112060547
    10. '_value' → logprob: -19.126171112060547

Token 721: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.143808109802194e-05
    2. 'rror' → logprob: -10.250041007995605
    3. '("' → logprob: -12.250041007995605
    4. 'Value' → logprob: -14.125041007995605
    5. 'error' → logprob: -15.750041007995605
    6. '               ' → logprob: -15.750041007995605
    7. '                   ' → logprob: -16.375041961669922
    8. '(f' → logprob: -17.125041961669922
    9. 'SError' → logprob: -17.625041961669922
    10. '('' → logprob: -18.125041961669922

Token 722: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10157553106546402
    2. '(f' → logprob: -2.3515756130218506
    3. '(' → logprob: -6.6015753746032715
    4. '('' → logprob: -12.22657585144043
    5. '(
' → logprob: -13.10157585144043
    6. 'f' → logprob: -13.72657585144043
    7. '("'' → logprob: -13.85157585144043
    8. '("("' → logprob: -15.47657585144043
    9. '               ' → logprob: -16.35157585144043
    10. '("'"' → logprob: -16.72657585144043

Token 723: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7747834920883179
    2. '(f' → logprob: -0.8997834920883179
    3. '("' → logprob: -2.3997836112976074
    4. ' f' → logprob: -3.7747836112976074
    5. 'f' → logprob: -4.149783611297607
    6. 'Invalid' → logprob: -6.899783611297607
    7. 'Expected' → logprob: -7.024783611297607
    8. 'Unexpected' → logprob: -7.524783611297607
    9. '(' → logprob: -8.02478313446045
    10. '           ' → logprob: -9.52478313446045

Token 724: 'Expected' (ID: 28041)
  Prédit: 'Expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expected' → logprob: -0.3841077983379364
    2. '"' → logprob: -1.3841078281402588
    3. 'Invalid' → logprob: -3.259107828140259
    4. 'f' → logprob: -3.759107828140259
    5. 'Unexpected' → logprob: -5.13410758972168
    6. ''' → logprob: -7.88410758972168
    7. 'Expect' → logprob: -8.63410758972168
    8. 'Number' → logprob: -9.38410758972168
    9. 'expected' → logprob: -10.25910758972168
    10. ' f' → logprob: -10.25910758972168

Token 725: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.6462252140045166
    2. ' number' → logprob: -0.8962252140045166
    3. ' a' → logprob: -3.2712252140045166
    4. 'a' → logprob: -3.5212252140045166
    5. '"' → logprob: -9.271224975585938
    6. ' integer' → logprob: -9.521224975585938
    7. 'integer' → logprob: -9.646224975585938
    8. 'int' → logprob: -10.396224975585938
    9. 'an' → logprob: -10.646224975585938
    10. ' an' → logprob: -11.021224975585938

Token 726: ' but' (ID: 889)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.0314452089369297
    2. 'token' → logprob: -4.031445026397705
    3. ',' → logprob: -4.656445026397705
    4. ' but' → logprob: -5.656445026397705
    5. ':' → logprob: -9.656445503234863
    6. ' line' → logprob: -9.906445503234863
    7. 'but' → logprob: -10.156445503234863
    8. ' at' → logprob: -11.281445503234863
    9. '(token' → logprob: -11.406445503234863
    10. ' on' → logprob: -11.531445503234863

Token 727: ' got' (ID: 3508)
  Prédit: ' got'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' got' → logprob: -0.14905619621276855
    2. 'got' → logprob: -2.2740561962127686
    3. ' found' → logprob: -3.5240561962127686
    4. 'found' → logprob: -5.149056434631348
    5. 'received' → logprob: -8.399056434631348
    6. ' received' → logprob: -9.899056434631348
    7. ' encountered' → logprob: -11.524056434631348
    8. '	got' → logprob: -12.524056434631348
    9. 'not' → logprob: -12.899056434631348
    10. ' not' → logprob: -13.024056434631348

Token 728: ':' (ID: 25)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.1327875703573227
    2. 'operator' → logprob: -2.8827874660491943
    3. ' '{' → logprob: -3.0077874660491943
    4. '{' → logprob: -4.882787704467773
    5. ':' → logprob: -5.007787704467773
    6. ' operator' → logprob: -6.257787704467773
    7. '"{' → logprob: -6.882787704467773
    8. ''' → logprob: -7.882787704467773
    9. 'token' → logprob: -7.882787704467773
    10. 'non' → logprob: -8.257787704467773

Token 729: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03920161351561546
    2. ''{' → logprob: -3.289201498031616
    3. ' {' → logprob: -7.289201736450195
    4. ' '{' → logprob: -8.289201736450195
    5. 'str' → logprob: -9.039201736450195
    6. ''' → logprob: -9.414201736450195
    7. '"{' → logprob: -11.789201736450195
    8. '`' → logprob: -12.164201736450195
    9. ''s' → logprob: -12.914201736450195
    10. 'strip' → logprob: -13.039201736450195

Token 730: 'str' (ID: 689)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.07913146167993546
    2. 'str' → logprob: -2.5791313648223877
    3. ''{' → logprob: -8.579131126403809
    4. 'strip' → logprob: -9.954131126403809
    5. 'line' → logprob: -12.704131126403809
    6. 'repr' → logprob: -13.829131126403809
    7. '`' → logprob: -14.579131126403809
    8. '{
' → logprob: -14.954131126403809
    9. ' {' → logprob: -14.954131126403809
    10. ' stripped' → logprob: -15.829131126403809

Token 731: 'ipped' (ID: 8193)
  Prédit: 'ipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipped' → logprob: -0.0007148159202188253
    2. 'ip' → logprob: -7.3757147789001465
    3. 'iped' → logprob: -10.375715255737305
    4. 'ing' → logprob: -11.000715255737305
    5. 'ipping' → logprob: -11.125715255737305
    6. 'ed' → logprob: -11.625715255737305
    7. 'i' → logprob: -12.500715255737305
    8. 'tr' → logprob: -12.625715255737305
    9. 'line' → logprob: -13.375715255737305
    10. '   ' → logprob: -14.125715255737305

Token 732: '}")
' (ID: 23577)
  Prédit: ')")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")
' → logprob: -0.33920738101005554
    2. '")' → logprob: -2.089207410812378
    3. '}")
' → logprob: -2.839207410812378
    4. '")
' → logprob: -3.214207410812378
    5. ')")' → logprob: -3.214207410812378
    6. '}")' → logprob: -4.089207172393799
    7. '')")
' → logprob: -5.589207172393799
    8. ')' → logprob: -5.714207172393799
    9. ''")
' → logprob: -7.714207172393799
    10. '')' → logprob: -8.089207649230957

Token 733: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007623416022397578
    2. '                
' → logprob: -7.875762462615967
    3. '           ' → logprob: -8.500761985778809
    4. '                   ' → logprob: -8.875761985778809
    5. '
' → logprob: -11.250761985778809
    6. ' tokens' → logprob: -12.375761985778809
    7. 'tokens' → logprob: -12.375761985778809
    8. '                    
' → logprob: -12.500761985778809
    9. '            
' → logprob: -13.250761985778809
    10. '               
' → logprob: -13.500761985778809

Token 734: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.10079272091388702
    2. ' tokens' → logprob: -2.350792646408081
    3. '               ' → logprob: -7.60079288482666
    4. 'token' → logprob: -9.60079288482666
    5. '           ' → logprob: -11.35079288482666
    6. 'number' → logprob: -12.72579288482666
    7. ' token' → logprob: -13.72579288482666
    8. '(tokens' → logprob: -14.22579288482666
    9. '.tokens' → logprob: -14.22579288482666
    10. 'numbers' → logprob: -15.10079288482666

Token 735: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008052219054661691
    2. '.' → logprob: -7.125805377960205
    3. ').' → logprob: -14.625804901123047
    4. ' .' → logprob: -16.625804901123047
    5. '.enqueue' → logprob: -16.625804901123047
    6. '.
' → logprob: -16.750804901123047
    7. '.tokens' → logprob: -16.875804901123047
    8. '.app' → logprob: -18.125804901123047
    9. '.extend' → logprob: -18.250804901123047
    10. '._' → logprob: -18.375804901123047

Token 736: '(Number' (ID: 76564)
  Prédit: '(Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Number' → logprob: -0.004079112783074379
    2. 'Number' → logprob: -5.504079341888428
    3. ' Number' → logprob: -14.25407886505127
    4. '_Number' → logprob: -18.254079818725586
    5. '(' → logprob: -19.004079818725586
    6. '   ' → logprob: -19.754079818725586
    7. ':Number' → logprob: -20.004079818725586
    8. '```' → logprob: -20.129079818725586
    9. ' (' → logprob: -21.004079818725586
    10. '
' → logprob: -21.379079818725586

Token 737: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: -1.9361264946837764e-07
    2. '(Token' → logprob: -16.5
    3. '<Token' → logprob: -18.375
    4. 'token' → logprob: -18.75
    5. '	Token' → logprob: -19.0
    6. 'Tok' → logprob: -19.75
    7. 'Tokens' → logprob: -19.75
    8. ' Token' → logprob: -20.0
    9. 'To' → logprob: -20.125
    10. 'Tokenizer' → logprob: -20.625

Token 738: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. '[val' → logprob: -15.500036239624023
    4. ' (' → logprob: -15.875036239624023
    5. 'val' → logprob: -16.375036239624023
    6. '(
' → logprob: -16.625036239624023
    7. ',val' → logprob: -17.250036239624023
    8. ')' → logprob: -17.750036239624023
    9. ' val' → logprob: -18.000036239624023
    10. '(vals' → logprob: -18.250036239624023

Token 739: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47408178448677063
    2. '))' → logprob: -0.9740817546844482
    3. ')
' → logprob: -13.724081993103027
    4. ' ))' → logprob: -13.849081993103027
    5. ' )' → logprob: -13.974081993103027
    6. ')}' → logprob: -14.599081993103027
    7. '))
' → logprob: -14.599081993103027
    8. ')))' → logprob: -14.724081993103027
    9. '));' → logprob: -14.974081993103027
    10. '),' → logprob: -16.97408103942871

Token 740: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011112819192931056
    2. '       ' → logprob: -7.6261115074157715
    3. '<|end|>' → logprob: -8.626111030578613
    4. '               ' → logprob: -9.126111030578613
    5. '            
' → logprob: -9.501111030578613
    6. '
' → logprob: -9.626111030578613
    7. '    
' → logprob: -10.001111030578613
    8. 'else' → logprob: -10.126111030578613
    9. '  
' → logprob: -10.751111030578613
    10. '```' → logprob: -11.126111030578613

Token 741: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' (adapté à ' expected') → logprob: -0.4324294924736023
    2. '           ' → logprob: -1.182429552078247
    3. ' expected' → logprob: -3.182429552078247
    4. '               ' → logprob: -5.807429313659668
    5. '   ' → logprob: -11.182429313659668
    6. '       ' → logprob: -11.307429313659668
    7. '                   ' → logprob: -11.932429313659668
    8. '	expected' → logprob: -12.182429313659668
    9. '
' → logprob: -12.432429313659668
    10. '(expected' → logprob: -13.182429313659668

Token 742: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -2.8087270038668066e-05
    2. '_' → logprob: -10.500027656555176
    3. 'number' → logprob: -15.500027656555176
    4. '_Number' → logprob: -16.625028610229492
    5. '_NUMBER' → logprob: -17.250028610229492
    6. '_num' → logprob: -17.250028610229492
    7. 'Number' → logprob: -17.750028610229492
    8. '=' → logprob: -18.000028610229492
    9. '=_' → logprob: -18.625028610229492
    10. '_numbers' → logprob: -18.750028610229492

Token 743: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011053244583308697
    2. ' =' → logprob: -4.511053085327148
    3. '=False' → logprob: -12.136053085327148
    4. '=True' → logprob: -16.88605308532715
    5. 'False' → logprob: -17.38605308532715
    6. '＝' → logprob: -17.88605308532715
    7. '=
' → logprob: -20.13605308532715
    8. '=false' → logprob: -20.13605308532715
    9. '_=' → logprob: -20.38605308532715
    10. '=!' → logprob: -20.38605308532715

Token 744: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.1888679839321412e-05
    2. ' False' → logprob: -10.750021934509277
    3. 'not' → logprob: -14.750021934509277
    4. '(False' → logprob: -18.12502098083496
    5. 'false' → logprob: -20.25002098083496
    6. 'F' → logprob: -21.37502098083496
    7. ' not' → logprob: -21.50002098083496
    8. '   ' → logprob: -21.50002098083496
    9. '=False' → logprob: -21.62502098083496
    10. '_false' → logprob: -23.12502098083496

Token 745: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004231070168316364
    2. 'else' → logprob: -5.504230976104736
    3. ' else' → logprob: -9.254231452941895
    4. '               ' → logprob: -10.629231452941895
    5. '       ' → logprob: -10.879231452941895
    6. 'elif' → logprob: -12.379231452941895
    7. '
' → logprob: -12.629231452941895
    8. '		' → logprob: -12.879231452941895
    9. '```' → logprob: -14.129231452941895
    10. '   ' → logprob: -14.129231452941895

Token 746: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023861313238739967
    2. 'else' → logprob: -3.7738614082336426
    3. ' else' → logprob: -8.023860931396484
    4. '       ' → logprob: -8.648860931396484
    5. '               ' → logprob: -9.523860931396484
    6. 'elif' → logprob: -11.023860931396484
    7. '		' → logprob: -11.773860931396484
    8. '   ' → logprob: -11.773860931396484
    9. 'continue' → logprob: -13.023860931396484
    10. '```' → logprob: -13.148860931396484

Token 747: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0475897453725338
    2. '           ' → logprob: -3.5475897789001465
    3. ' else' → logprob: -4.0475897789001465
    4. '       ' → logprob: -8.547589302062988
    5. 'elif' → logprob: -10.797589302062988
    6. '   ' → logprob: -14.047589302062988
    7. '	else' → logprob: -14.672589302062988
    8. '		' → logprob: -15.172589302062988
    9. '```' → logprob: -15.422589302062988
    10. '               ' → logprob: -15.547589302062988

Token 748: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03290242701768875
    2. ':
' → logprob: -3.782902479171753
    3. '           ' → logprob: -4.907902240753174
    4. '               ' → logprob: -6.282902240753174
    5. '       ' → logprob: -8.157902717590332
    6. '{' → logprob: -10.907902717590332
    7. 'if' → logprob: -11.907902717590332
    8. '[' → logprob: -12.282902717590332
    9. '   ' → logprob: -12.407902717590332
    10. ',' → logprob: -12.532902717590332

Token 749: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08255887776613235
    2. '               ' → logprob: -3.2075588703155518
    3. 'if' → logprob: -3.3325588703155518
    4. 'try' → logprob: -6.207559108734131
    5. ' if' → logprob: -7.082559108734131
    6. 'token' → logprob: -9.332558631896973
    7. '       ' → logprob: -9.457558631896973
    8. '   ' → logprob: -10.832558631896973
    9. 'operator' → logprob: -11.707558631896973
    10. 'tokens' → logprob: -11.957558631896973

Token 750: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22696685791015625
    2. 'tokens' → logprob: -2.1019668579101562
    3. 'try' → logprob: -2.6019668579101562
    4. 'operator' → logprob: -5.976966857910156
    5. 'op' → logprob: -6.226966857910156
    6. 'token' → logprob: -6.976966857910156
    7. 'symbol' → logprob: -7.351966857910156
    8. '           ' → logprob: -8.351966857910156
    9. 'val' → logprob: -9.476966857910156
    10. ' if' → logprob: -9.476966857910156

Token 751: ' stripped' (ID: 78107)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.009836959652602673
    2. ' stripped' → logprob: -4.6348371505737305
    3. 'len' → logprob: -9.88483715057373
    4. 'strip' → logprob: -11.25983715057373
    5. 'not' → logprob: -11.88483715057373
    6. ' str' → logprob: -12.38483715057373
    7. ' not' → logprob: -12.75983715057373
    8. ' len' → logprob: -13.00983715057373
    9. 'Str' → logprob: -15.50983715057373
    10. '	str' → logprob: -15.75983715057373

Token 752: ' not' (ID: 625)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09074921905994415
    2. ' not' → logprob: -3.0907492637634277
    3. 'not' → logprob: -4.215749263763428
    4. ' in' → logprob: -4.465749263763428
    5. 'in' → logprob: -4.590749263763428
    6. ' ==' → logprob: -5.340749263763428
    7. '=='' → logprob: -10.09074878692627
    8. '===' → logprob: -10.34074878692627
    9. ' ' → logprob: -12.34074878692627
    10. '=' → logprob: -12.84074878692627

Token 753: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09098510444164276
    2. ' in' → logprob: -2.465985059738159
    3. '['' → logprob: -6.215985298156738
    4. ' ['' → logprob: -10.465985298156738
    5. '=['' → logprob: -12.215985298156738
    6. '(['' → logprob: -13.090985298156738
    7. '<|end|>' → logprob: -13.215985298156738
    8. ')' → logprob: -13.465985298156738
    9. '=' → logprob: -13.715985298156738
    10. ''in' → logprob: -13.840985298156738

Token 754: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.00019173922191839665
    2. ''+' → logprob: -8.625191688537598
    3. '["+' → logprob: -12.125191688537598
    4. '{' → logprob: -12.875191688537598
    5. '["' → logprob: -13.125191688537598
    6. ' ['' → logprob: -13.875191688537598
    7. '('+' → logprob: -14.625191688537598
    8. '"+' → logprob: -15.000191688537598
    9. '{'' → logprob: -15.000191688537598
    10. '[' → logprob: -16.500192642211914

Token 755: '+',' (ID: 141314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8761601448059082
    2. ''+' → logprob: -1.1261601448059082
    3. '+,' → logprob: -1.3761601448059082
    4. '+
' → logprob: -5.126160144805908
    5. ''' → logprob: -7.501160144805908
    6. '+',' → logprob: -8.25115966796875
    7. '"+' → logprob: -11.25115966796875
    8. '['' → logprob: -11.50115966796875
    9. '+

' → logprob: -11.75115966796875
    10. '+-' → logprob: -11.75115966796875

Token 756: ' '-',' (ID: 124266)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.0006158163887448609
    2. ' '-',' → logprob: -7.50061559677124
    3. '-' → logprob: -10.125616073608398
    4. '-,' → logprob: -11.250616073608398
    5. '"-' → logprob: -12.500616073608398
    6. '('-',' → logprob: -12.750616073608398
    7. '   ' → logprob: -13.625616073608398
    8. ''' → logprob: -14.125616073608398
    9. ' ' → logprob: -14.875616073608398
    10. '',' → logprob: -15.625616073608398

Token 757: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -5.180879816180095e-05
    2. ' '*' → logprob: -10.000051498413086
    3. '"*' → logprob: -12.500051498413086
    4. ''' → logprob: -13.000051498413086
    5. '*,' → logprob: -15.375051498413086
    6. '*' → logprob: -16.750051498413086
    7. '('*' → logprob: -17.875051498413086
    8. '`' → logprob: -18.000051498413086
    9. '   ' → logprob: -18.375051498413086
    10. '```' → logprob: -18.750051498413086

Token 758: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6056138873100281
    2. ''' → logprob: -1.3556139469146729
    3. ',' → logprob: -1.9806139469146729
    4. '/' → logprob: -2.980613946914673
    5. ''/' → logprob: -6.105613708496094
    6. ' '/',' → logprob: -6.105613708496094
    7. '/',' → logprob: -6.730613708496094
    8. '','' → logprob: -7.230613708496094
    9. '/,' → logprob: -7.605613708496094
    10. ''',' → logprob: -8.355613708496094

Token 759: ' '/',' (ID: 144914)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008655226789414883
    2. ''/' → logprob: -4.758655071258545
    3. ' '/',' → logprob: -10.133655548095703
    4. '('/',' → logprob: -14.758655548095703
    5. '"/' → logprob: -15.383655548095703
    6. '/,' → logprob: -15.883655548095703
    7. '/' → logprob: -16.008655548095703
    8. '   ' → logprob: -16.633655548095703
    9. '',' → logprob: -16.883655548095703
    10. ''',' → logprob: -17.133655548095703

Token 760: ' '=' (ID: 132311)
  Prédit: ''='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''=' → logprob: -0.0015093892579898238
    2. ''' → logprob: -6.501509189605713
    3. '=' → logprob: -12.001509666442871
    4. ' '=' → logprob: -14.126509666442871
    5. '"' → logprob: -15.876509666442871
    6. '='' → logprob: -16.126508712768555
    7. '',' → logprob: -18.501508712768555
    8. ''e' → logprob: -18.626508712768555
    9. '','=' → logprob: -18.751508712768555
    10. ']=' → logprob: -19.376508712768555

Token 761: '']:
' (ID: 44766)
  Prédit: '']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:
' → logprob: -0.008854112587869167
    2. '']:' → logprob: -4.758853912353516
    3. '']' → logprob: -8.758853912353516
    4. '"]:
' → logprob: -10.008853912353516
    5. ']:
' → logprob: -10.508853912353516
    6. '"]:' → logprob: -12.133853912353516
    7. '',' → logprob: -12.758853912353516
    8. ']:' → logprob: -14.258853912353516
    9. '']):
' → logprob: -14.383853912353516
    10. ''' → logprob: -16.008853912353516

Token 762: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09363199770450592
    2. '                   ' → logprob: -2.4686319828033447
    3. 'tokens' → logprob: -6.218632221221924
    4. ' tokens' → logprob: -6.343632221221924
    5. '           ' → logprob: -8.468631744384766
    6. ':' → logprob: -8.718631744384766
    7. '(tokens' → logprob: -8.718631744384766
    8. '_tokens' → logprob: -8.843631744384766
    9. ':
' → logprob: -8.968631744384766
    10. '                       ' → logprob: -10.593631744384766

Token 763: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.03183961659669876
    2. ' raise' → logprob: -3.781839609146118
    3. '                   ' → logprob: -4.781839847564697
    4. '               ' → logprob: -9.281839370727539
    5. '	raise' → logprob: -9.656839370727539
    6. '           ' → logprob: -12.156839370727539
    7. '                       ' → logprob: -12.281839370727539
    8. '                  ' → logprob: -12.781839370727539
    9. '                    ' → logprob: -13.281839370727539
    10. '                ' → logprob: -13.656839370727539

Token 764: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.0325924449716695e-05
    2. ' Value' → logprob: -11.50001049041748
    3. '	Value' → logprob: -16.625009536743164
    4. 'value' → logprob: -18.125009536743164
    5. 'Syntax' → logprob: -18.750009536743164
    6. ' ' → logprob: -19.000009536743164
    7. '
' → logprob: -19.125009536743164
    8. '_value' → logprob: -19.250009536743164
    9. '<Value' → logprob: -19.500009536743164
    10. '   ' → logprob: -19.625009536743164

Token 765: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0001637300301808864
    2. 'Value' → logprob: -9.250164031982422
    3. 'rror' → logprob: -9.625164031982422
    4. 'alue' → logprob: -14.000164031982422
    5. 'error' → logprob: -14.875164031982422
    6. 'SError' → logprob: -16.250164031982422
    7. '               ' → logprob: -16.625164031982422
    8. 'n' → logprob: -17.375164031982422
    9. '           ' → logprob: -17.875164031982422
    10. 'Input' → logprob: -18.000164031982422

Token 766: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.75001049041748
    3. 'f' → logprob: -13.00001049041748
    4. '(
' → logprob: -16.375009536743164
    5. '("' → logprob: -16.875009536743164
    6. ' f' → logprob: -17.125009536743164
    7. '           ' → logprob: -17.500009536743164
    8. '(F' → logprob: -18.500009536743164
    9. '	f' → logprob: -19.250009536743164
    10. '=f' → logprob: -19.375009536743164

Token 767: '"' (ID: 1)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.24453642964363098
    2. '"' → logprob: -2.3695363998413086
    3. 'f' → logprob: -2.6195363998413086
    4. 'Invalid' → logprob: -3.6195363998413086
    5. 'Unexpected' → logprob: -4.619536399841309
    6. '(f' → logprob: -5.369536399841309
    7. '                   ' → logprob: -5.619536399841309
    8. '                       ' → logprob: -5.869536399841309
    9. 'Expected' → logprob: -6.869536399841309
    10. '               ' → logprob: -7.869536399841309

Token 768: 'Expected' (ID: 28041)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.01819981075823307
    2. 'f' → logprob: -4.018199920654297
    3. 'Unexpected' → logprob: -10.143199920654297
    4. ' f' → logprob: -12.518199920654297
    5. 'Unknown' → logprob: -13.143199920654297
    6. 'Expected' → logprob: -13.393199920654297
    7. '"' → logprob: -13.393199920654297
    8. 'Unsupported' → logprob: -14.518199920654297
    9. 'Illegal' → logprob: -14.768199920654297
    10. '           ' → logprob: -15.143199920654297

Token 769: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0013411965919658542
    2. ' operator' → logprob: -6.876341342926025
    3. 'one' → logprob: -8.251340866088867
    4. 'an' → logprob: -10.626340866088867
    5. 'operation' → logprob: -11.751340866088867
    6. ' one' → logprob: -13.001340866088867
    7. '['' → logprob: -13.126340866088867
    8. ''' → logprob: -13.376340866088867
    9. 'invalid' → logprob: -13.626340866088867
    10. '
' → logprob: -13.876340866088867

Token 770: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.5669608116149902
    2. ':' → logprob: -0.9419608116149902
    3. 'but' → logprob: -3.1919608116149902
    4. 'token' → logprob: -6.94196081161499
    5. ' token' → logprob: -7.69196081161499
    6. ',' → logprob: -8.191961288452148
    7. ' or' → logprob: -10.191961288452148
    8. 'operator' → logprob: -11.316961288452148
    9. ' ' → logprob: -11.691961288452148
    10. '<|end|>' → logprob: -12.066961288452148

Token 771: ' got' (ID: 3508)
  Prédit: ' got'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' got' → logprob: -0.4740796387195587
    2. 'got' → logprob: -0.9740796089172363
    3. ' not' → logprob: -14.099080085754395
    4. ' found' → logprob: -14.224080085754395
    5. 'not' → logprob: -14.474080085754395
    6. 'found' → logprob: -14.724080085754395
    7. '	got' → logprob: -16.349079132080078
    8. 'received' → logprob: -16.599079132080078
    9. 'get' → logprob: -16.724079132080078
    10. 'Got' → logprob: -17.224079132080078

Token 772: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.688212614681106e-05
    2. '{' → logprob: -11.000017166137695
    3. ' :' → logprob: -16.125017166137695
    4. '{
' → logprob: -16.750017166137695
    5. ' {' → logprob: -17.750017166137695
    6. ':{' → logprob: -18.000017166137695
    7. '```' → logprob: -18.625017166137695
    8. ':str' → logprob: -19.375017166137695
    9. ':
' → logprob: -19.500017166137695
    10. '{:' → logprob: -19.750017166137695

Token 773: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.004745298996567726
    2. ' {' → logprob: -5.3797454833984375
    3. 'str' → logprob: -9.629745483398438
    4. ''{' → logprob: -10.629745483398438
    5. '"{' → logprob: -10.879745483398438
    6. ' stripped' → logprob: -12.129745483398438
    7. 'strip' → logprob: -12.254745483398438
    8. '{s' → logprob: -12.629745483398438
    9. '{sub' → logprob: -14.379745483398438
    10. ' str' → logprob: -14.629745483398438

Token 774: 'str' (ID: 689)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.160396546125412
    2. 'str' → logprob: -1.9103965759277344
    3. 'strip' → logprob: -9.035396575927734
    4. ' {' → logprob: -10.285396575927734
    5. ' stripped' → logprob: -11.535396575927734
    6. ''{' → logprob: -12.285396575927734
    7. '"{' → logprob: -14.035396575927734
    8. '$str' → logprob: -14.410396575927734
    9. '{s' → logprob: -14.535396575927734
    10. '{
' → logprob: -14.660396575927734

Token 775: 'ipped' (ID: 8193)
  Prédit: 'ipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipped' → logprob: -0.0061563048511743546
    2. 'apped' → logprob: -6.1311564445495605
    3. 'ixed' → logprob: -7.2561564445495605
    4. 'icted' → logprob: -7.5061564445495605
    5. 'ed' → logprob: -7.6311564445495605
    6. 'iped' → logprob: -7.6311564445495605
    7. 'ized' → logprob: -7.6311564445495605
    8. 'opped' → logprob: -8.381155967712402
    9. '+' → logprob: -8.881155967712402
    10. 'ip' → logprob: -9.006155967712402

Token 776: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.9700381755828857
    2. '")
' → logprob: -1.2200381755828857
    3. '}")
' → logprob: -1.9700381755828857
    4. ']")
' → logprob: -2.5950381755828857
    5. ''")
' → logprob: -2.5950381755828857
    6. '}")' → logprob: -3.8450381755828857
    7. ')")
' → logprob: -5.345038414001465
    8. '']")
' → logprob: -5.970038414001465
    9. '')")
' → logprob: -5.970038414001465
    10. ']' → logprob: -6.095038414001465

Token 777: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0980210080742836
    2. 'tokens' → logprob: -2.8480210304260254
    3. ' tokens' → logprob: -3.3480210304260254
    4. '(tokens' → logprob: -9.473020553588867
    5. '.tokens' → logprob: -9.973020553588867
    6. '_tokens' → logprob: -10.098020553588867
    7. '           ' → logprob: -10.473020553588867
    8. '                   ' → logprob: -10.973020553588867
    9. 'Tokens' → logprob: -11.223020553588867
    10. '                
' → logprob: -11.473020553588867

Token 778: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.026354411616921425
    2. ' tokens' → logprob: -3.7763543128967285
    3. '               ' → logprob: -5.7763543128967285
    4. '           ' → logprob: -13.401354789733887
    5. '.tokens' → logprob: -13.651354789733887
    6. '(tokens' → logprob: -13.901354789733887
    7. '                   ' → logprob: -16.27635383605957
    8. 'token' → logprob: -16.27635383605957
    9. 'okens' → logprob: -16.90135383605957
    10. '                
' → logprob: -16.90135383605957

Token 779: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.190178904333152e-05
    2. '.' → logprob: -10.375031471252441
    3. ').' → logprob: -15.625031471252441
    4. '.add' → logprob: -15.750031471252441
    5. '.extend' → logprob: -17.000032424926758
    6. '.enqueue' → logprob: -17.000032424926758
    7. ' .' → logprob: -17.125032424926758
    8. '.ap' → logprob: -17.250032424926758
    9. '.app' → logprob: -17.625032424926758
    10. '   ' → logprob: -18.500032424926758

Token 780: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018155796453356743
    2. 'Operator' → logprob: -4.018155574798584
    3. 'operator' → logprob: -12.518156051635742
    4. ' Operator' → logprob: -14.268156051635742
    5. '[' → logprob: -14.643156051635742
    6. '(operator' → logprob: -15.268156051635742
    7. '.Operator' → logprob: -15.393156051635742
    8. '(Operation' → logprob: -15.393156051635742
    9. '_operator' → logprob: -16.018156051635742
    10. '```' → logprob: -16.518156051635742

Token 781: 'Operator' (ID: 21693)
  Prédit: 'Operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operator' → logprob: 0.0
    2. ' Operator' → logprob: -17.25
    3. 'operator' → logprob: -18.375
    4. '   ' → logprob: -23.0
    5. 'Agent' → logprob: -23.5
    6. '.Operator' → logprob: -23.625
    7. '_operator' → logprob: -24.375
    8. 'Token' → logprob: -24.5
    9. 'Operators' → logprob: -24.625
    10. '```' → logprob: -25.25

Token 782: 'Token' (ID: 4421)
  Prédit: 'Token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Token' → logprob: 0.0
    2. 'token' → logprob: -18.375
    3. 'Tokenizer' → logprob: -19.0
    4. '	Token' → logprob: -19.0
    5. 'Operator' → logprob: -19.5
    6. ' Token' → logprob: -20.0
    7. '<Token' → logprob: -20.625
    8. 'To' → logprob: -20.75
    9. '_token' → logprob: -21.5
    10. 'Tokens' → logprob: -21.625

Token 783: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.000104616025055293
    2. '(' → logprob: -9.375104904174805
    3. '(strip' → logprob: -11.000104904174805
    4. 'str' → logprob: -12.875104904174805
    5. ' (' → logprob: -16.125104904174805
    6. ')' → logprob: -16.625104904174805
    7. '(scr' → logprob: -16.750104904174805
    8. ' stripped' → logprob: -17.000104904174805
    9. '[str' → logprob: -17.000104904174805
    10. '(st' → logprob: -17.250104904174805

Token 784: 'ipped' (ID: 8193)
  Prédit: 'ipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipped' → logprob: -4.320199877838604e-07
    2. 'ip' → logprob: -15.625
    3. 'iped' → logprob: -16.375
    4. 'icted' → logprob: -17.25
    5. 'ipping' → logprob: -17.75
    6. 'ips' → logprob: -17.875
    7. 'ipt' → logprob: -18.25
    8. ' stripped' → logprob: -18.375
    9. 'ipper' → logprob: -18.5
    10. 'ed' → logprob: -18.75

Token 785: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019606323912739754
    2. ')' → logprob: -6.251960754394531
    3. '))
' → logprob: -10.376960754394531
    4. ')
' → logprob: -14.876960754394531
    5. '()))' → logprob: -15.501960754394531
    6. ' ))' → logprob: -15.876960754394531
    7. ')))' → logprob: -16.37696075439453
    8. ''))' → logprob: -17.00196075439453
    9. '))

' → logprob: -17.37696075439453
    10. '"))' → logprob: -17.87696075439453

Token 786: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1603451818227768
    2. '           ' → logprob: -1.910345196723938
    3. '                   ' → logprob: -9.785345077514648
    4. '
' → logprob: -10.910345077514648
    5. '                
' → logprob: -11.160345077514648
    6. '       ' → logprob: -11.285345077514648
    7. '```' → logprob: -11.535345077514648
    8. '   ' → logprob: -12.535345077514648
    9. '            
' → logprob: -12.785345077514648
    10. 'expected' → logprob: -14.035345077514648

Token 787: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' (adapté à ' expected') → logprob: -0.1093592643737793
    2. ' expected' → logprob: -2.3593592643737793
    3. '           ' → logprob: -4.859359264373779
    4. '               ' → logprob: -6.609359264373779
    5. '       ' → logprob: -12.734359741210938
    6. '                   ' → logprob: -13.609359741210938
    7. '(expected' → logprob: -13.734359741210938
    8. '	expected' → logprob: -13.984359741210938
    9. 'Expected' → logprob: -14.359359741210938
    10. '   ' → logprob: -14.484359741210938

Token 788: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.9266199160483666e-05
    2. 'number' → logprob: -10.875019073486328
    3. '_num' → logprob: -16.250019073486328
    4. '_' → logprob: -17.125019073486328
    5. 'Number' → logprob: -17.375019073486328
    6. '_NUMBER' → logprob: -18.000019073486328
    7. '_numbers' → logprob: -18.625019073486328
    8. ' number' → logprob: -19.125019073486328
    9. 'umber' → logprob: -19.500019073486328
    10. '_n' → logprob: -19.625019073486328

Token 789: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018153922632336617
    2. ' =' → logprob: -4.018154144287109
    3. '=True' → logprob: -12.76815414428711
    4. '=False' → logprob: -13.64315414428711
    5. '_=' → logprob: -19.01815414428711
    6. 'False' → logprob: -19.39315414428711
    7. '.=' → logprob: -19.39315414428711
    8. '=
' → logprob: -19.39315414428711
    9. '＝' → logprob: -19.51815414428711
    10. '[' → logprob: -20.64315414428711

Token 790: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.739826181321405e-05
    2. ' True' → logprob: -10.00004768371582
    3. 'not' → logprob: -13.25004768371582
    4. 'true' → logprob: -16.62504768371582
    5. '(True' → logprob: -17.12504768371582
    6. '=True' → logprob: -18.50004768371582
    7. 'False' → logprob: -19.50004768371582
    8. '_true' → logprob: -20.00004768371582
    9. ' not' → logprob: -20.50004768371582
    10. '   ' → logprob: -21.37504768371582

Token 791: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005587094929069281
    2. '
' → logprob: -5.255587100982666
    3. 'return' → logprob: -8.130586624145508
    4. '        
' → logprob: -10.255586624145508
    5. '<|end|>' → logprob: -11.630586624145508
    6. ' return' → logprob: -12.380586624145508
    7. '```' → logprob: -12.505586624145508
    8. '	' → logprob: -13.005586624145508
    9. '\
' → logprob: -13.880586624145508
    10. '	return' → logprob: -14.630586624145508

Token 792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004956104792654514
    2. '
' → logprob: -5.754956245422363
    3. 'return' → logprob: -6.379956245422363
    4. '        
' → logprob: -9.629956245422363
    5. ' return' → logprob: -12.379956245422363
    6. '```' → logprob: -12.879956245422363
    7. '	' → logprob: -13.129956245422363
    8. '   ' → logprob: -13.129956245422363
    9. '    
' → logprob: -13.254956245422363
    10. '	return' → logprob: -14.254956245422363

Token 793: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015359246172010899
    2. 'if' (adapté à ' if') → logprob: -5.140359401702881
    3. '
' → logprob: -5.640359401702881
    4. ' if' → logprob: -5.765359401702881
    5. 'return' → logprob: -6.015359401702881
    6. ' return' → logprob: -9.140358924865723
    7. '        
' → logprob: -9.140358924865723
    8. '#' → logprob: -10.890358924865723
    9. '```' → logprob: -12.265358924865723
    10. '   ' → logprob: -12.265358924865723

Token 794: ' expected' (ID: 5930)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2812784016132355
    2. ' not' → logprob: -1.406278371810913
    3. 'expected' → logprob: -9.031278610229492
    4. ' expected' → logprob: -12.281278610229492
    5. '
' → logprob: -14.156278610229492
    6. '	not' → logprob: -14.281278610229492
    7. '!' → logprob: -14.406278610229492
    8. '(not' → logprob: -14.531278610229492
    9. 'len' → logprob: -14.656278610229492
    10. ' ' → logprob: -15.031278610229492

Token 795: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0033099623396992683
    2. '_' → logprob: -6.003309726715088
    3. '_false' → logprob: -7.503309726715088
    4. 'False' → logprob: -9.378310203552246
    5. '_:' → logprob: -9.503310203552246
    6. ':' → logprob: -10.503310203552246
    7. '_Number' → logprob: -10.628310203552246
    8. '=False' → logprob: -11.128310203552246
    9. '__' → logprob: -11.128310203552246
    10. 'Number' → logprob: -11.503310203552246

Token 796: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2287178635597229
    2. ':
' → logprob: -2.353717803955078
    3. '==' → logprob: -2.603717803955078
    4. '=False' → logprob: -4.103717803955078
    5. 'False' → logprob: -4.603717803955078
    6. ' ==' → logprob: -5.478717803955078
    7. '(False' → logprob: -7.353717803955078
    8. ' is' → logprob: -7.353717803955078
    9. ' False' → logprob: -7.853717803955078
    10. '=' → logprob: -7.853717803955078

Token 797: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022014429792761803
    2. 'raise' → logprob: -3.8970143795013428
    3. ' raise' → logprob: -6.772014617919922
    4. 'tokens' → logprob: -8.272014617919922
    5. '#' → logprob: -11.022014617919922
    6. '       ' → logprob: -11.647014617919922
    7. '	raise' → logprob: -11.647014617919922
    8. '   ' → logprob: -12.272014617919922
    9. 'Raise' → logprob: -12.397014617919922
    10. '               ' → logprob: -12.522014617919922

Token 798: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.012631602585315704
    2. ' raise' → logprob: -4.512631416320801
    3. '           ' → logprob: -6.512631416320801
    4. '	raise' → logprob: -9.7626314163208
    5. 'tokens' → logprob: -10.8876314163208
    6. '#' → logprob: -11.0126314163208
    7. '            ' → logprob: -13.1376314163208
    8. '   ' → logprob: -13.8876314163208
    9. '       ' → logprob: -14.0126314163208
    10. '               ' → logprob: -15.2626314163208

Token 799: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0011703446507453918
    2. ' Value' → logprob: -6.7511701583862305
    3. 'EOF' → logprob: -16.376171112060547
    4. '_value' → logprob: -17.626171112060547
    5. '	Value' → logprob: -17.626171112060547
    6. 'value' → logprob: -17.876171112060547
    7. '_Value' → logprob: -18.376171112060547
    8. 'Index' → logprob: -19.376171112060547
    9. '<Value' → logprob: -20.251171112060547
    10. '.Value' → logprob: -20.251171112060547

Token 800: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0005552975926548243
    2. 'rror' → logprob: -7.500555515289307
    3. 'Value' → logprob: -13.000555038452148
    4. 'SError' → logprob: -18.25055503845215
    5. 'error' → logprob: -18.62555503845215
    6. '	Error' → logprob: -18.62555503845215
    7. 'ror' → logprob: -18.75055503845215
    8. ' Error' → logprob: -18.87555503845215
    9. 'LError' → logprob: -19.12555503845215
    10. '_Error' → logprob: -19.37555503845215

Token 801: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00010068230039905757
    2. '(' → logprob: -9.250101089477539
    3. '("("' → logprob: -13.125101089477539
    4. '('' → logprob: -13.625101089477539
    5. '("(' → logprob: -13.875101089477539
    6. '(f' → logprob: -15.000101089477539
    7. '("")' → logprob: -17.12510108947754
    8. '(
' → logprob: -17.12510108947754
    9. '("""' → logprob: -17.62510108947754
    10. '("'' → logprob: -18.50010108947754

Token 802: 'Expression' (ID: 12633)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.0863069295883179
    2. 'Incomplete' → logprob: -1.2113069295883179
    3. '"' → logprob: -1.4613069295883179
    4. 'Expected' → logprob: -2.5863070487976074
    5. 'Unexpected' → logprob: -3.3363070487976074
    6. 'Expression' → logprob: -4.086307048797607
    7. '"In' → logprob: -6.086307048797607
    8. 'f' → logprob: -6.961307048797607
    9. 'Missing' → logprob: -7.086307048797607
    10. '   ' → logprob: -8.83630657196045

Token 803: ' ended' (ID: 15092)
  Prédit: ' ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ended' → logprob: -0.630077600479126
    2. ' ends' → logprob: -0.880077600479126
    3. ' does' → logprob: -3.630077600479126
    4. ' incomplete' → logprob: -4.005077362060547
    5. ' must' → logprob: -6.005077362060547
    6. ' cannot' → logprob: -6.380077362060547
    7. ' not' → logprob: -7.255077362060547
    8. 'ended' → logprob: -7.255077362060547
    9. 'ends' → logprob: -7.755077362060547
    10. ' unfinished' → logprob: -7.755077362060547

Token 804: ' unexpectedly' (ID: 91164)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.30958858132362366
    2. ' unexpectedly' → logprob: -2.059588670730591
    3. ' without' → logprob: -3.059588670730591
    4. 'with' → logprob: -3.559588670730591
    5. 'unexpected' → logprob: -3.684588670730591
    6. ' abruptly' → logprob: -3.934588670730591
    7. ' prematurely' → logprob: -4.309588432312012
    8. ' unexpected' → logprob: -6.059588432312012
    9. 'without' → logprob: -6.184588432312012
    10. 'Unexpected' → logprob: -8.434588432312012

Token 805: ' with' (ID: 483)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2528640627861023
    2. ' with' → logprob: -1.627864122390747
    3. ':' → logprob: -4.502863883972168
    4. ' without' → logprob: -5.127863883972168
    5. ' at' → logprob: -5.627863883972168
    6. ' after' → logprob: -6.252863883972168
    7. ',' → logprob: -6.877863883972168
    8. ' before' → logprob: -7.377863883972168
    9. ' ")' → logprob: -7.377863883972168
    10. ' (' → logprob: -7.502863883972168

Token 806: ' operator' (ID: 11019)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.1210133507847786
    2. 'operator' → logprob: -2.3710134029388428
    3. 'number' → logprob: -4.371013164520264
    4. 'a' → logprob: -4.871013164520264
    5. ' an' → logprob: -8.496013641357422
    6. 'expected' → logprob: -10.496013641357422
    7. ' operator' → logprob: -10.746013641357422
    8. 'expect' → logprob: -11.121013641357422
    9. 'operand' → logprob: -12.371013641357422
    10. 'missing' → logprob: -12.746013641357422

Token 807: ' (' (ID: 350)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.013506178744137287
    2. ' token' → logprob: -4.3885064125061035
    3. 'token' → logprob: -7.8885064125061035
    4. '")
' → logprob: -8.388505935668945
    5. '.")' → logprob: -9.013505935668945
    6. ' ")' → logprob: -9.513505935668945
    7. ' expected' → logprob: -9.763505935668945
    8. '"' → logprob: -10.638505935668945
    9. 'Token' → logprob: -10.888505935668945
    10. '')' → logprob: -11.013505935668945

Token 808: 'no' (ID: 1750)
  Prédit: ' expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' expected' → logprob: -1.6080448627471924
    2. ' expecting' → logprob: -1.6080448627471924
    3. ')' → logprob: -1.7330448627471924
    4. ' without' → logprob: -1.8580448627471924
    5. 'expected' → logprob: -2.7330448627471924
    6. 'number' → logprob: -3.2330448627471924
    7. ' number' → logprob: -3.3580448627471924
    8. ' missing' → logprob: -3.4830448627471924
    9. 'without' → logprob: -3.8580448627471924
    10. ' at' → logprob: -4.483044624328613

Token 809: ' trailing' (ID: 57985)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.3760494589805603
    2. ' number' → logprob: -1.251049518585205
    3. '=' → logprob: -4.001049518585205
    4. 'final' → logprob: -5.626049518585205
    5. ' final' → logprob: -6.001049518585205
    6. ' trailing' → logprob: -7.376049518585205
    7. 'value' → logprob: -7.376049518585205
    8. 'operand' → logprob: -7.751049518585205
    9. ' value' → logprob: -8.251049041748047
    10. ' operand' → logprob: -9.251049041748047

Token 810: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.018359119072556496
    2. ' number' → logprob: -4.018359184265137
    3. '=' → logprob: -8.893359184265137
    4. 'operand' → logprob: -10.393359184265137
    5. 'token' → logprob: -10.643359184265137
    6. 'Number' → logprob: -12.143359184265137
    7. 'value' → logprob: -12.393359184265137
    8. ' operand' → logprob: -13.018359184265137
    9. '_number' → logprob: -13.768359184265137
    10. ')' → logprob: -13.768359184265137

Token 811: ')")
' (ID: 44059)
  Prédit: ')")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')")' → logprob: -0.003500407561659813
    2. ')' → logprob: -6.003500461578369
    3. ')")
' → logprob: -7.003500461578369
    4. ').' → logprob: -9.628499984741211
    5. '")' → logprob: -10.378499984741211
    6. ')").' → logprob: -11.378499984741211
    7. ' token' → logprob: -12.753499984741211
    8. ')"' → logprob: -13.253499984741211
    9. 'token' → logprob: -13.628499984741211
    10. ' )' → logprob: -14.628499984741211

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.32392441527918e-05
    2. '	' → logprob: -11.250053405761719
    3. '
' → logprob: -11.375053405761719
    4. '<|end|>' → logprob: -11.625053405761719
    5. 'return' → logprob: -11.750053405761719
    6. '   ' → logprob: -12.500053405761719
    7. '        
' → logprob: -12.875053405761719
    8. '           ' → logprob: -13.000053405761719
    9. ' return' → logprob: -14.125053405761719
    10. '	return' → logprob: -14.500053405761719

Token 813: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018001272110268474
    2. 'return' (adapté à ' return') → logprob: -6.376800060272217
    3. ' return' → logprob: -9.876800537109375
    4. '
' → logprob: -10.626800537109375
    5. '   ' → logprob: -12.126800537109375
    6. '        
' → logprob: -12.376800537109375
    7. '           ' → logprob: -12.501800537109375
    8. '	return' → logprob: -12.626800537109375
    9. '	' → logprob: -13.376800537109375
    10. '<|end|>' → logprob: -13.751800537109375

Token 814: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00033558503491804004
    2. ' tokens' → logprob: -8.000335693359375
    3. 'token' → logprob: -16.625335693359375
    4. '(tokens' → logprob: -19.500335693359375
    5. 't' → logprob: -20.500335693359375
    6. 'Tokens' → logprob: -20.625335693359375
    7. 'to' → logprob: -21.750335693359375
    8. '.tokens' → logprob: -22.375335693359375
    9. 'tok' → logprob: -22.500335693359375
    10. 'tickets' → logprob: -22.750335693359375

Token 815: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 816: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 817: ' IO' (ID: 10357)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.8546586036682129
    2. ' Calculator' → logprob: -0.9796586036682129
    3. 'Test' → logprob: -3.104658603668213
    4. 'Evaluator' → logprob: -3.354658603668213
    5. 'Input' → logprob: -3.479658603668213
    6. 'Expression' → logprob: -4.104658603668213
    7. 'Token' → logprob: -4.479658603668213
    8. ' Test' → logprob: -4.479658603668213
    9. 'Parser' → logprob: -4.604658603668213
    10. ' Token' → logprob: -4.979658603668213

Token 818: 'Controller' (ID: 2947)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.019155146554112434
    2. ':' → logprob: -4.394155025482178
    3. 'Interface' → logprob: -6.269155025482178
    4. 'Manager' → logprob: -6.394155025482178
    5. 'Processor' → logprob: -6.644155025482178
    6. 'Stream' → logprob: -7.269155025482178
    7. '():' → logprob: -7.644155025482178
    8. 'Controller' → logprob: -9.019155502319336
    9. 'Helper' → logprob: -9.019155502319336
    10. ':
' → logprob: -9.644155502319336

Token 819: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038598617538809776
    2. ':
' → logprob: -7.875385761260986
    3. ' :' → logprob: -12.750386238098145
    4. ':def' → logprob: -14.000386238098145
    5. '<|end|>' → logprob: -14.500386238098145
    6. '):' → logprob: -14.750386238098145
    7. ':

' → logprob: -15.000386238098145
    8. '():' → logprob: -15.125386238098145
    9. ':**' → logprob: -15.750386238098145
    10. '：' → logprob: -16.000385284423828

Token 820: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009498104336671531
    2. ' def' → logprob: -7.000949859619141
    3. ':' → logprob: -10.87594985961914
    4. 'def' → logprob: -11.87594985961914
    5. '    ' → logprob: -13.00094985961914
    6. '   ' → logprob: -13.25094985961914
    7. '	def' → logprob: -13.62594985961914
    8. '[' → logprob: -13.87594985961914
    9. '```' → logprob: -13.87594985961914
    10. '(' → logprob: -14.12594985961914

Token 821: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12698867917060852
    2. ' def' → logprob: -2.126988649368286
    3. '   ' → logprob: -9.876988410949707
    4. 'import' → logprob: -11.751988410949707
    5. 'class' → logprob: -13.751988410949707
    6. 'de' → logprob: -15.626988410949707
    7. '@' → logprob: -16.626989364624023
    8. '	def' → logprob: -16.751989364624023
    9. '
' → logprob: -17.126989364624023
    10. '```' → logprob: -17.876989364624023

Token 822: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03166558966040611
    2. '__' → logprob: -4.031665802001953
    3. ' def' → logprob: -4.406665802001953
    4. 'def' → logprob: -6.781665802001953
    5. ' _' → logprob: -10.281665802001953
    6. 'init' → logprob: -11.031665802001953
    7. ' ___' → logprob: -11.281665802001953
    8. '___' → logprob: -12.031665802001953
    9. '_init' → logprob: -12.031665802001953
    10. ' init' → logprob: -12.031665802001953

Token 823: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.1054253011243418e-05
    2. 'iter' → logprob: -11.500020980834961
    3. '__' → logprob: -11.875020980834961
    4. '```' → logprob: -13.500020980834961
    5. 'in' → logprob: -14.250020980834961
    6. 'def' → logprob: -14.750020980834961
    7. ' init' → logprob: -15.250020980834961
    8. 'ini' → logprob: -15.375020980834961
    9. '_init' → logprob: -15.625020980834961
    10. 'new' → logprob: -15.750020980834961

Token 824: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002652466995641589
    2. '(self' → logprob: -6.002652645111084
    3. '__' → logprob: -8.752652168273926
    4. '__(
' → logprob: -11.127652168273926
    5. '(' → logprob: -13.377652168273926
    6. ' (' → logprob: -14.002652168273926
    7. '_(' → logprob: -14.627652168273926
    8. '__((' → logprob: -15.127652168273926
    9. 'self' → logprob: -15.627652168273926
    10. '<>(' → logprob: -16.002653121948242

Token 825: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.551721889991313e-05
    2. ')' → logprob: -9.750065803527832
    3. '):
' → logprob: -12.125065803527832
    4. '
' → logprob: -14.500065803527832
    5. ' self' → logprob: -14.625065803527832
    6. '   ' → logprob: -15.125065803527832
    7. '):' → logprob: -15.500065803527832
    8. '       ' → logprob: -16.000064849853516
    9. ')
' → logprob: -17.125064849853516
    10. '),' → logprob: -17.375064849853516

Token 826: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17649143934249878
    2. '):
' → logprob: -1.9264914989471436
    3. ',' → logprob: -4.6764912605285645
    4. 'self' → logprob: -5.1764912605285645
    5. ')' → logprob: -7.3014912605285645
    6. '   ' → logprob: -7.8014912605285645
    7. '(self' → logprob: -10.176491737365723
    8. '       ' → logprob: -11.301491737365723
    9. ' self' → logprob: -12.051491737365723
    10. ',self' → logprob: -12.051491737365723

Token 827: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012831581756472588
    2. 'lines' → logprob: -4.512831687927246
    3. 'self' → logprob: -7.137831687927246
    4. 'reader' → logprob: -7.637831687927246
    5. ')' → logprob: -8.512831687927246
    6. ' input' → logprob: -9.637831687927246
    7. 'inputs' → logprob: -9.762831687927246
    8. 'stdin' → logprob: -10.137831687927246
    9. '):
' → logprob: -10.762831687927246
    10. 'stream' → logprob: -10.762831687927246

Token 828: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.03224310278892517
    2. '):' → logprob: -4.532243251800537
    3. '_stream' → logprob: -4.532243251800537
    4. '_source' → logprob: -5.032243251800537
    5. '):
' → logprob: -6.782243251800537
    6. '_reader' → logprob: -7.782243251800537
    7. 'source' → logprob: -7.907243251800537
    8. '_data' → logprob: -7.907243251800537
    9. '_sources' → logprob: -7.907243251800537
    10. '   ' → logprob: -8.657242774963379

Token 829: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1279643326997757
    2. '):
' → logprob: -2.1279642581939697
    3. ':' → logprob: -7.127964496612549
    4. '=None' → logprob: -9.37796401977539
    5. '   ' → logprob: -9.75296401977539
    6. '=' → logprob: -10.00296401977539
    7. ')' → logprob: -11.00296401977539
    8. '):
' → logprob: -11.50296401977539
    9. '       ' → logprob: -11.50296401977539
    10. '=[]' → logprob: -12.37796401977539

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004323779605329037
    2. 'self' → logprob: -5.504323959350586
    3. ' self' → logprob: -9.004323959350586
    4. '   ' → logprob: -9.379323959350586
    5. 'def' → logprob: -10.754323959350586
    6. ',' → logprob: -11.504323959350586
    7. '(self' → logprob: -13.504323959350586
    8. 'import' → logprob: -13.754323959350586
    9. '<|end|>' → logprob: -14.129323959350586
    10. ':' → logprob: -14.379323959350586

Token 831: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.1279553291387856e-05
    2. '       ' → logprob: -11.500011444091797
    3. ' self' → logprob: -14.125011444091797
    4. 'lines' → logprob: -14.875011444091797
    5. '   ' → logprob: -17.500011444091797
    6. '
' → logprob: -19.125011444091797
    7. 'input' → logprob: -19.250011444091797
    8. 'Input' → logprob: -19.375011444091797
    9. 'def' → logprob: -20.375011444091797
    10. 'parser' → logprob: -20.375011444091797

Token 832: '.input' (ID: 18322)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.510312020778656
    2. '.input' → logprob: -1.2603120803833008
    3. '.lines' → logprob: -2.510312080383301
    4. 'lines' → logprob: -3.510312080383301
    5. 'parser' → logprob: -6.135312080383301
    6. '.parser' → logprob: -6.885312080383301
    7. '_input' → logprob: -7.635312080383301
    8. '.tokens' → logprob: -7.885312080383301
    9. '.token' → logprob: -8.3853120803833
    10. 'inputs' → logprob: -8.6353120803833

Token 833: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.3306015716807451e-05
    2. '=' → logprob: -11.62501335144043
    3. '_tokens' → logprob: -14.12501335144043
    4. 'lines' → logprob: -14.12501335144043
    5. ' =' → logprob: -14.62501335144043
    6. '_stream' → logprob: -14.75001335144043
    7. '=_' → logprob: -14.75001335144043
    8. '_line' → logprob: -14.75001335144043
    9. '_controller' → logprob: -14.75001335144043
    10. 'Lines' → logprob: -15.12501335144043

Token 834: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197351589798927
    2. ' =' → logprob: -2.8119735717773438
    3. '=self' → logprob: -12.811973571777344
    4. '   ' → logprob: -12.936973571777344
    5. '       ' → logprob: -15.061973571777344
    6. 'self' → logprob: -15.811973571777344
    7. '    ' → logprob: -16.686973571777344
    8. '	' → logprob: -16.811973571777344
    9. '<|end|>' → logprob: -16.936973571777344
    10. '        ' → logprob: -17.311973571777344

Token 835: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.000553151941858232
    2. ' input' → logprob: -7.500553131103516
    3. 'list' → logprob: -16.125553131103516
    4. '[input' → logprob: -18.375553131103516
    5. '(input' → logprob: -18.875553131103516
    6. '   ' → logprob: -19.500553131103516
    7. '	input' → logprob: -19.500553131103516
    8. 'Input' → logprob: -19.875553131103516
    9. '[' → logprob: -20.000553131103516
    10. '<input' → logprob: -20.125553131103516

Token 836: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.7014437364414334e-05
    2. 'lines' → logprob: -11.12502670288086
    3. '   ' → logprob: -13.00002670288086
    4. '
' → logprob: -13.25002670288086
    5. '[' → logprob: -13.50002670288086
    6. '_' → logprob: -13.75002670288086
    7. '```' → logprob: -13.87502670288086
    8. '_controller' → logprob: -14.12502670288086
    9. '_LINES' → logprob: -14.25002670288086
    10. '       ' → logprob: -14.75002670288086

Token 837: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3277971148490906
    2. '
' → logprob: -1.3277971744537354
    3. 'def' → logprob: -4.577796936035156
    4. '<|end|>' → logprob: -5.827796936035156
    5. '    
' → logprob: -7.952796936035156
    6. '       ' → logprob: -8.202796936035156
    7. ' def' → logprob: -8.327796936035156
    8. '<|end|>' → logprob: -8.702796936035156
    9. '        
' → logprob: -10.077796936035156
    10. '

' → logprob: -10.202796936035156

Token 838: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05672849714756012
    2. 'def' → logprob: -2.9317286014556885
    3. '
' → logprob: -6.431728363037109
    4. ' def' → logprob: -8.43172836303711
    5. '    
' → logprob: -12.05672836303711
    6. '       ' → logprob: -12.68172836303711
    7. '<|end|>' → logprob: -13.18172836303711
    8. '	def' → logprob: -13.30672836303711
    9. '```' → logprob: -14.05672836303711
    10. 'class' → logprob: -14.18172836303711

Token 839: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.2524021157296374e-05
    2. ' def' → logprob: -9.875052452087402
    3. '
' → logprob: -13.875052452087402
    4. 'de' → logprob: -16.12505340576172
    5. '   ' → logprob: -17.50005340576172
    6. 'class' → logprob: -17.62505340576172
    7. 'd' → logprob: -19.12505340576172
    8. '_def' → logprob: -19.25005340576172
    9. '```' → logprob: -19.75005340576172
    10. 'token' → logprob: -19.75005340576172

Token 840: ' execute' (ID: 15792)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.004354406148195267
    2. 'read' → logprob: -5.504354476928711
    3. 'execute' → logprob: -8.504354476928711
    4. 'process' → logprob: -9.754354476928711
    5. ' run' → logprob: -12.004354476928711
    6. 'calculate' → logprob: -12.879354476928711
    7. 'get' → logprob: -13.504354476928711
    8. '_run' → logprob: -13.754354476928711
    9. '__' → logprob: -13.754354476928711
    10. 'parse' → logprob: -14.129354476928711

Token 841: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014203863975126296
    2. '()' → logprob: -9.375142097473145
    3. '(' → logprob: -10.000142097473145
    4. 'self' → logprob: -11.875142097473145
    5. ' (' → logprob: -13.500142097473145
    6. '():
' → logprob: -14.000142097473145
    7. '   ' → logprob: -14.375142097473145
    8. '():' → logprob: -14.625142097473145
    9. '()(' → logprob: -14.750142097473145
    10. 'def' → logprob: -15.875142097473145

Token 842: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033377676736563444
    2. '):
' → logprob: -6.128337860107422
    3. 'self' → logprob: -7.003337860107422
    4. '(self' → logprob: -9.003337860107422
    5. ',' → logprob: -10.503337860107422
    6. '():' → logprob: -10.753337860107422
    7. '   ' → logprob: -10.878337860107422
    8. ')' → logprob: -11.003337860107422
    9. '_' → logprob: -11.628337860107422
    10. ' ):' → logprob: -11.628337860107422

Token 843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007399422465823591
    2. 'engine' → logprob: -8.125740051269531
    3. 'calculator' → logprob: -8.375740051269531
    4. 'token' → logprob: -9.250740051269531
    5. 'tokens' → logprob: -10.125740051269531
    6. '   ' → logprob: -10.250740051269531
    7. ' engine' → logprob: -11.250740051269531
    8. ' token' → logprob: -11.750740051269531
    9. 'parser' → logprob: -12.250740051269531
    10. 'calc' → logprob: -12.500740051269531

Token 844: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.000845364120323211
    2. ' parser' → logprob: -7.750845432281494
    3. '       ' → logprob: -8.250844955444336
    4. 'try' → logprob: -9.000844955444336
    5. '   ' → logprob: -11.000844955444336
    6. 'tokens' → logprob: -12.250844955444336
    7. 'token' → logprob: -12.625844955444336
    8. 'input' → logprob: -13.125844955444336
    9. 'stream' → logprob: -14.000844955444336
    10. 'lines' → logprob: -14.000844955444336

Token 845: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023247340694069862
    2. '=' → logprob: -3.773247241973877
    3. '.' → logprob: -14.648247718811035
    4. '   ' → logprob: -15.273247718811035
    5. ' ' → logprob: -15.523247718811035
    6. '       ' → logprob: -15.773247718811035
    7. '    ' → logprob: -16.27324676513672
    8. '=parse' → logprob: -16.27324676513672
    9. '_parser' → logprob: -16.27324676513672
    10. '	' → logprob: -16.52324676513672

Token 846: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -7.941850526549388e-06
    2. ' Input' → logprob: -11.750007629394531
    3. '	Input' → logprob: -22.62500762939453
    4. '<Input' → logprob: -24.87500762939453
    5. '_Input' → logprob: -25.25000762939453
    6. '_input' → logprob: -25.37500762939453
    7. '(Input' → logprob: -25.87500762939453
    8. 'INPUT' → logprob: -26.62500762939453
    9. 'input' → logprob: -26.62500762939453
    10. '\Input' → logprob: -26.87500762939453

Token 847: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -18.0
    3. '_parser' → logprob: -19.875
    4. 'Parse' → logprob: -20.375
    5. ' Parser' → logprob: -21.25
    6. 'Parsed' → logprob: -21.375
    7. 'Parsing' → logprob: -21.75
    8. '-parser' → logprob: -21.875
    9. 'Processor' → logprob: -22.25
    10. 'Par' → logprob: -22.625

Token 848: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. 'self' → logprob: -18.875
    4. '(this' → logprob: -19.5
    5. '((' → logprob: -19.625
    6. '(
' → logprob: -20.625
    7. ' (' → logprob: -20.75
    8. '=self' → logprob: -20.875
    9. '(list' → logprob: -21.0
    10. '[self' → logprob: -21.125

Token 849: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -13.125003814697266
    3. 'input' → logprob: -13.625003814697266
    4. ').' → logprob: -16.250003814697266
    5. '.lines' → logprob: -17.875003814697266
    6. '.inputs' → logprob: -19.250003814697266
    7. '.user' → logprob: -19.500003814697266
    8. '.output' → logprob: -19.750003814697266
    9. ' .' → logprob: -20.375003814697266
    10. '	input' → logprob: -20.750003814697266

Token 850: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.7697225252486533e-06
    2. '.lines' → logprob: -13.000003814697266
    3. '._' → logprob: -14.500003814697266
    4. 'lines' → logprob: -14.750003814697266
    5. '.input' → logprob: -15.375003814697266
    6. 'Lines' → logprob: -16.125003814697266
    7. '_.' → logprob: -16.125003814697266
    8. '_LINES' → logprob: -16.875003814697266
    9. 's' → logprob: -17.000003814697266
    10. '_controller' → logprob: -17.375003814697266

Token 851: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012388390488922596
    2. ')
' → logprob: -4.637388229370117
    3. '       ' → logprob: -6.512388229370117
    4. '()' → logprob: -7.262388229370117
    5. '())' → logprob: -8.637388229370117
    6. '()
' → logprob: -8.762388229370117
    7. 'tokens' → logprob: -10.262388229370117
    8. '())
' → logprob: -10.887388229370117
    9. '(tokens' → logprob: -11.262388229370117
    10. '   ' → logprob: -11.387388229370117

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4090566039085388
    2. 'tokens' → logprob: -1.1590566635131836
    3. ' tokens' → logprob: -4.034056663513184
    4. 'token' → logprob: -5.534056663513184
    5. ' token' → logprob: -8.659056663513184
    6. '_tokens' → logprob: -10.159056663513184
    7. '.tokens' → logprob: -10.659056663513184
    8. '(tokens' → logprob: -10.784056663513184
    9. 'stream' → logprob: -12.034056663513184
    10. '        
' → logprob: -12.159056663513184

Token 853: ' tokens' (ID: 20290)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.20395001769065857
    2. 'tokens' (adapté à ' tokens') → logprob: -1.703950047492981
    3. 'try' → logprob: -6.953949928283691
    4. 'stream' → logprob: -7.078949928283691
    5. ' token' → logprob: -7.953949928283691
    6. ' tokens' → logprob: -8.328949928283691
    7. '       ' → logprob: -9.203949928283691
    8. 'ts' → logprob: -10.203949928283691
    9. 'streams' → logprob: -13.453949928283691
    10. ' try' → logprob: -13.703949928283691

Token 854: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022859513759613
    2. ' =' → logprob: -1.9102286100387573
    3. '_stream' → logprob: -12.410228729248047
    4. 'stream' → logprob: -15.910228729248047
    5. '_' → logprob: -16.160228729248047
    6. '.' → logprob: -16.410228729248047
    7. ':' → logprob: -17.410228729248047
    8. ')' → logprob: -17.910228729248047
    9. '.=' → logprob: -18.160228729248047
    10. '＝' → logprob: -18.285228729248047

Token 855: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.6931484937667847
    2. ' parser' → logprob: -0.6931484937667847
    3. '(parser' → logprob: -13.943148612976074
    4. '	parser' → logprob: -14.693148612976074
    5. '.parser' → logprob: -16.318147659301758
    6. 'Parser' → logprob: -17.193147659301758
    7. 'parse' → logprob: -18.693147659301758
    8. 'token' → logprob: -18.943147659301758
    9. '/parser' → logprob: -19.193147659301758
    10. '_parser' → logprob: -19.443147659301758

Token 856: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -1.2233183042553719e-05
    2. '.' → logprob: -11.750012397766113
    3. 'parse' → logprob: -12.375012397766113
    4. '=parse' → logprob: -16.875011444091797
    5. ' .' → logprob: -17.375011444091797
    6. '_parse' → logprob: -19.125011444091797
    7. '.Parse' → logprob: -20.000011444091797
    8. '._' → logprob: -20.500011444091797
    9. ' parse' → logprob: -21.000011444091797
    10. '.generate' → logprob: -21.125011444091797

Token 857: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04456144571304321
    2. '
' → logprob: -3.6695613861083984
    3. 'engine' → logprob: -4.044561386108398
    4. 'calculator' → logprob: -8.294561386108398
    5. '	engine' → logprob: -8.794561386108398
    6. ' engine' → logprob: -9.794561386108398
    7. '        
' → logprob: -9.919561386108398
    8. '   ' → logprob: -10.919561386108398
    9. ',' → logprob: -11.794561386108398
    10. '_engine' → logprob: -11.919561386108398

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.202536940574646
    2. 'engine' → logprob: -1.702536940574646
    3. ' engine' → logprob: -7.0775370597839355
    4. '   ' → logprob: -8.452536582946777
    5. '	engine' → logprob: -10.202536582946777
    6. 'calculator' → logprob: -11.202536582946777
    7. '
' → logprob: -11.702536582946777
    8. '           ' → logprob: -13.077536582946777
    9. '_engine' → logprob: -13.952536582946777
    10. '        
' → logprob: -14.577536582946777

Token 859: ' engine' (ID: 6018)
  Prédit: 'engine'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'engine' (adapté à ' engine') → logprob: -0.00029923528200015426
    2. 'calculator' → logprob: -8.500299453735352
    3. 'calc' → logprob: -9.375299453735352
    4. ' engine' → logprob: -11.750299453735352
    5. '       ' → logprob: -12.875299453735352
    6. 'result' → logprob: -15.750299453735352
    7. '	engine' → logprob: -15.875299453735352
    8. '   ' → logprob: -16.12529945373535
    9. 'cal' → logprob: -17.25029945373535
    10. 'Engine' → logprob: -17.87529945373535

Token 860: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975245751440525
    2. '=' → logprob: -3.529752492904663
    3. '.' → logprob: -13.529752731323242
    4. ' ' → logprob: -15.779752731323242
    5. '   ' → logprob: -15.779752731323242
    6. '.process' → logprob: -16.279752731323242
    7. '  ' → logprob: -16.904752731323242
    8. '    ' → logprob: -16.904752731323242
    9. '.=' → logprob: -17.154752731323242
    10. '	' → logprob: -17.529752731323242

Token 861: ' Calculator' (ID: 41921)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.029750484973192215
    2. ' Calculator' → logprob: -3.5297505855560303
    3. 'Calcul' → logprob: -16.77975082397461
    4. 'Calc' → logprob: -19.15475082397461
    5. 'Calculation' → logprob: -20.27975082397461
    6. ' calculator' → logprob: -20.52975082397461
    7. 'Calculate' → logprob: -21.02975082397461
    8. '
' → logprob: -21.15475082397461
    9. 'calculator' → logprob: -21.15475082397461
    10. ' Calcul' → logprob: -21.27975082397461

Token 862: 'Engine' (ID: 7286)
  Prédit: 'Engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Engine' → logprob: 0.0
    2. 'Engineer' → logprob: -18.5
    3. 'engine' → logprob: -18.75
    4. 'ngine' → logprob: -19.25
    5. 'Eng' → logprob: -19.875
    6. 'Engineering' → logprob: -20.25
    7. ' Engine' → logprob: -20.625
    8. 'Agent' → logprob: -21.25
    9. '```' → logprob: -21.625
    10. '
' → logprob: -22.0

Token 863: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.35727813839912415
    2. '       ' → logprob: -1.4822781085968018
    3. '()' → logprob: -3.2322781085968018
    4. '
' → logprob: -3.7322781085968018
    5. 'result' → logprob: -4.857278347015381
    6. 'tokens' → logprob: -7.232278347015381
    7. '(tokens' → logprob: -8.232277870178223
    8. '()
' → logprob: -8.482277870178223
    9. 'self' → logprob: -8.982277870178223
    10. '        
' → logprob: -9.232277870178223

Token 864: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20302456617355347
    2. '       ' → logprob: -1.7030246257781982
    3. ' result' → logprob: -6.453024387359619
    4. 'return' → logprob: -10.578024864196777
    5. 'value' → logprob: -12.453024864196777
    6. '```' → logprob: -12.953024864196777
    7. 'output' → logprob: -13.828024864196777
    8. '_result' → logprob: -15.078024864196777
    9. '	result' → logprob: -15.453024864196777
    10. 'results' → logprob: -15.453024864196777

Token 865: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -2.4868770196917467e-05
    2. '       ' → logprob: -11.375024795532227
    3. ' result' → logprob: -12.125024795532227
    4. 'return' → logprob: -12.500024795532227
    5. 'try' → logprob: -12.750024795532227
    6. '   ' → logprob: -14.875024795532227
    7. '        
' → logprob: -15.250024795532227
    8. '
' → logprob: -15.500024795532227
    9. '           ' → logprob: -16.000024795532227
    10. 'res' → logprob: -16.750024795532227

Token 866: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192946195602417
    2. '=' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.87692928314209
    4. '=result' → logprob: -16.001930236816406
    5. ')' → logprob: -17.501930236816406
    6. '.' → logprob: -18.001930236816406
    7. ' ' → logprob: -18.251930236816406
    8. '   ' → logprob: -18.626930236816406
    9. '=self' → logprob: -19.001930236816406
    10. '	' → logprob: -19.126930236816406

Token 867: ' engine' (ID: 6018)
  Prédit: 'engine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'engine' → logprob: -0.061967797577381134
    2. ' engine' → logprob: -2.8119678497314453
    3. '	engine' → logprob: -16.186967849731445
    4. '(engine' → logprob: -17.561967849731445
    5. '       ' → logprob: -20.311967849731445
    6. 'Engine' → logprob: -20.936967849731445
    7. '.engine' → logprob: -21.061967849731445
    8. '   ' → logprob: -21.311967849731445
    9. '_engine' → logprob: -21.311967849731445
    10. 'executor' → logprob: -21.561967849731445

Token 868: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.664371848164592e-05
    2. '.' → logprob: -11.125016212463379
    3. 'process' → logprob: -13.500016212463379
    4. '.apply' → logprob: -14.625016212463379
    5. ' .' → logprob: -17.375017166137695
    6. '.perform' → logprob: -17.625017166137695
    7. '.execute' → logprob: -18.125017166137695
    8. '.run' → logprob: -18.375017166137695
    9. '   ' → logprob: -20.125017166137695
    10. '.parse' → logprob: -20.250017166137695

Token 869: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.125000953674316
    3. '(tokens' → logprob: -14.875000953674316
    4. 'tokens' → logprob: -15.750000953674316
    5. '_token' → logprob: -16.250001907348633
    6. '```' → logprob: -16.750001907348633
    7. 'Tokens' → logprob: -18.375001907348633
    8. '(_' → logprob: -18.375001907348633
    9. '_(' → logprob: -18.375001907348633
    10. '(' → logprob: -18.500001907348633

Token 870: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.625003814697266
    3. '(token' → logprob: -14.625003814697266
    4. 'tokens' → logprob: -15.000003814697266
    5. '(t' → logprob: -18.000003814697266
    6. '(
' → logprob: -18.125003814697266
    7. ' (' → logprob: -18.500003814697266
    8. '(tok' → logprob: -18.500003814697266
    9. '(tasks' → logprob: -19.375003814697266
    10. ' tokens' → logprob: -19.625003814697266

Token 871: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14656281471252441
    2. ')' → logprob: -2.0215628147125244
    3. '       ' → logprob: -5.771562576293945
    4. '
' → logprob: -7.396562576293945
    5. ')return' → logprob: -9.896562576293945
    6. ')
' → logprob: -10.021562576293945
    7. '()
' → logprob: -10.646562576293945
    8. '<|end|>' → logprob: -12.271562576293945
    9. '        
' → logprob: -12.521562576293945
    10. 'return' → logprob: -12.521562576293945

Token 872: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006500058807432652
    2. 'return' → logprob: -7.500649929046631
    3. 'print' → logprob: -9.625650405883789
    4. '	' → logprob: -11.625650405883789
    5. '
' → logprob: -11.625650405883789
    6. '   ' → logprob: -11.875650405883789
    7. '```' → logprob: -13.000650405883789
    8. '        
' → logprob: -13.500650405883789
    9. ' return' → logprob: -13.875650405883789
    10. '           ' → logprob: -14.625650405883789

Token 873: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06196869537234306
    2. 'return' → logprob: -2.8119688034057617
    3. '       ' → logprob: -13.811968803405762
    4. ' print' → logprob: -17.186967849731445
    5. ' return' → logprob: -17.811967849731445
    6. '
' → logprob: -18.061967849731445
    7. '```' → logprob: -19.186967849731445
    8. '   ' → logprob: -19.311967849731445
    9. '        
' → logprob: -20.811967849731445
    10. 'self' → logprob: -20.936967849731445

Token 874: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3869405686855316
    2. 'return' → logprob: -1.136940598487854
    3. '       ' → logprob: -9.636940956115723
    4. ' return' → logprob: -13.136940956115723
    5. 'for' → logprob: -14.011940956115723
    6. ' print' → logprob: -14.136940956115723
    7. '
' → logprob: -14.886940956115723
    8. 'import' → logprob: -15.761940956115723
    9. '   ' → logprob: -16.136940002441406
    10. '```' → logprob: -16.886940002441406

Token 875: ' with' (ID: 483)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015046229586005211
    2. '       ' → logprob: -4.265046119689941
    3. ' print' → logprob: -7.515046119689941
    4. 'return' → logprob: -8.390046119689941
    5. '
' → logprob: -9.515046119689941
    6. '```' → logprob: -10.640046119689941
    7. '(print' → logprob: -11.515046119689941
    8. ' return' → logprob: -14.265046119689941
    9. '        
' → logprob: -14.765046119689941
    10. '()
' → logprob: -14.890046119689941

Token 876: ' newline' (ID: 95802)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3856492842023727e-06
    2. ' print' → logprob: -13.750000953674316
    3. '```' → logprob: -15.750000953674316
    4. '
' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '`' → logprob: -18.250001907348633
    7. 'return' → logprob: -19.875001907348633
    8. '(print' → logprob: -20.875001907348633
    9. '``' → logprob: -21.375001907348633
    10. 'println' → logprob: -21.500001907348633

Token 877: ' as' (ID: 472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03911186009645462
    2. '       ' → logprob: -3.414111852645874
    3. '
' → logprob: -5.289112091064453
    4. ' print' → logprob: -8.289112091064453
    5. 'return' → logprob: -9.414112091064453
    6. '\n' → logprob: -11.164112091064453
    7. '\' → logprob: -11.289112091064453
    8. '()
' → logprob: -11.289112091064453
    9. '```' → logprob: -11.664112091064453
    10. '(print' → logprob: -11.789112091064453

Token 878: ' requested' (ID: 17222)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005156210972927511
    2. ' print' → logprob: -7.750515460968018
    3. 'str' → logprob: -10.375515937805176
    4. '
' → logprob: -10.625515937805176
    5. '   ' → logprob: -11.875515937805176
    6. '```' → logprob: -11.875515937805176
    7. '       ' → logprob: -12.375515937805176
    8. '\n' → logprob: -12.500515937805176
    9. 'return' → logprob: -13.500515937805176
    10. '`' → logprob: -13.750515937805176

Token 879: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1608593761920929
    2. '
' → logprob: -2.1608593463897705
    3. '       ' → logprob: -3.4108593463897705
    4. ' print' → logprob: -9.160859107971191
    5. 'return' → logprob: -9.535859107971191
    6. '        
' → logprob: -10.410859107971191
    7. '\n' → logprob: -10.410859107971191
    8. '
' → logprob: -10.410859107971191
    9. '```' → logprob: -10.410859107971191
    10. '\' → logprob: -10.660859107971191

Token 880: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10034739226102829
    2. '       ' → logprob: -2.3503472805023193
    3. '
' → logprob: -9.100347518920898
    4. '```' → logprob: -11.100347518920898
    5. 'return' → logprob: -11.850347518920898
    6. ' print' → logprob: -12.225347518920898
    7. '\' → logprob: -14.725347518920898
    8. '\n' → logprob: -14.725347518920898
    9. '        
' → logprob: -14.850347518920898
    10. '``' → logprob: -14.975347518920898

Token 881: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.941850526549388e-06
    2. '       ' → logprob: -12.250007629394531
    3. 'return' → logprob: -12.750007629394531
    4. ' print' → logprob: -15.750007629394531
    5. '
' → logprob: -18.00000762939453
    6. '```' → logprob: -18.87500762939453
    7. '``' → logprob: -22.00000762939453
    8. 'pr' → logprob: -22.12500762939453
    9. '#print' → logprob: -22.25000762939453
    10. '\' → logprob: -22.25000762939453

Token 882: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0028412528336048126
    2. 'result' → logprob: -6.252841472625732
    3. '(f' → logprob: -7.002841472625732
    4. '(str' → logprob: -13.127840995788574
    5. 'f' → logprob: -13.877840995788574
    6. ' result' → logprob: -17.75284194946289
    7. '(' → logprob: -18.37784194946289
    8. '=result' → logprob: -18.62784194946289
    9. '()' → logprob: -19.00284194946289
    10. '{' → logprob: -19.00284194946289

Token 883: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.500001907348633
    3. '()' → logprob: -15.500001907348633
    4. ')`' → logprob: -16.875001907348633
    5. '\n' → logprob: -17.125001907348633
    6. ' )' → logprob: -17.375001907348633
    7. '())' → logprob: -17.625001907348633
    8. '       ' → logprob: -17.750001907348633
    9. '   ' → logprob: -17.750001907348633
    10. '`)' → logprob: -17.875001907348633

Token 884: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1805814802646637
    2. '#' → logprob: -2.055581569671631
    3. 'i' → logprob: -4.305581569671631
    4. 'import' → logprob: -4.430581569671631
    5. 'input' → logprob: -5.180581569671631
    6. '```' → logprob: -5.930581569671631
    7. 'def' → logprob: -6.805581569671631
    8. '<|end|>' → logprob: -6.805581569671631
    9. 'io' → logprob: -8.305581092834473
    10. 'I' → logprob: -8.805581092834473

Token 885: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007637155242264271
    2. '__' → logprob: -4.882637023925781
    3. 'name' → logprob: -10.632637023925781
    4. '_name' → logprob: -12.632637023925781
    5. ' ' → logprob: -13.007637023925781
    6. ' ' → logprob: -15.007637023925781
    7. 'Name' → logprob: -15.257637023925781
    8. '_' → logprob: -15.382637023925781
    9. ' name' → logprob: -16.00763702392578
    10. '___' → logprob: -16.13263702392578

Token 886: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10539253801107407
    2. ' __' → logprob: -2.4803924560546875
    3. '.__' → logprob: -4.9803924560546875
    4. 'name' → logprob: -5.6053924560546875
    5. ' ==' → logprob: -5.6053924560546875
    6. 'if' → logprob: -6.8553924560546875
    7. '__.' → logprob: -8.355392456054688
    8. '__.__' → logprob: -8.355392456054688
    9. ' if' → logprob: -8.855392456054688
    10. '==' → logprob: -9.230392456054688

Token 887: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1875571544806007e-05
    2. '__.__' → logprob: -11.500011444091797
    3. '__.' → logprob: -13.750011444091797
    4. '___' → logprob: -15.125011444091797
    5. '==' → logprob: -16.375011444091797
    6. '__
' → logprob: -17.125011444091797
    7. 'name' → logprob: -17.125011444091797
    8. '____' → logprob: -17.250011444091797
    9. '__["' → logprob: -17.250011444091797
    10. '_' → logprob: -17.250011444091797

Token 888: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014386557042598724
    2. ' ==' → logprob: -4.6393866539001465
    3. '==' → logprob: -5.5143866539001465
    4. '__.__' → logprob: -8.139386177062988
    5. '=="' → logprob: -8.264386177062988
    6. '.__' → logprob: -10.764386177062988
    7. '__.' → logprob: -11.764386177062988
    8. '=='' → logprob: -12.014386177062988
    9. '_' → logprob: -13.514386177062988
    10. '__":
' → logprob: -13.639386177062988

Token 889: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00862320140004158
    2. ''' → logprob: -4.758623123168945
    3. ' "__' → logprob: -12.258623123168945
    4. '__' → logprob: -12.633623123168945
    5. '"class' → logprob: -15.633623123168945
    6. '"name' → logprob: -15.633623123168945
    7. '"user' → logprob: -15.883623123168945
    8. ' '__' → logprob: -16.383623123168945
    9. '"_' → logprob: -16.758623123168945
    10. '   ' → logprob: -16.883623123168945

Token 890: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.002522149821743369
    2. 'name' → logprob: -6.002521991729736
    3. '__' → logprob: -10.002522468566895
    4. 'm' → logprob: -14.127522468566895
    5. '_main' → logprob: -15.877522468566895
    6. 'if' → logprob: -16.252521514892578
    7. 'built' → logprob: -17.002521514892578
    8. 'MAIN' → logprob: -17.252521514892578
    9. ' main' → logprob: -17.377521514892578
    10. 'code' → logprob: -18.002521514892578

Token 891: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3728581368923187
    2. '__':
' → logprob: -1.3728581666946411
    3. '__:' → logprob: -2.9978580474853516
    4. ':' → logprob: -4.997858047485352
    5. '__":
' → logprob: -7.247858047485352
    6. '':' → logprob: -8.122858047485352
    7. '_' → logprob: -8.997858047485352
    8. '__.' → logprob: -11.372858047485352
    9. '('__' → logprob: -11.372858047485352
    10. ':
' → logprob: -11.747858047485352

Token 892: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6954478621482849
    2. '   ' → logprob: -0.8204478621482849
    3. 'IO' → logprob: -3.3204479217529297
    4. 'input' → logprob: -4.94544792175293
    5. ' lines' → logprob: -5.69544792175293
    6. ' IO' → logprob: -5.82044792175293
    7. ' import' → logprob: -5.82044792175293
    8. 'io' → logprob: -5.82044792175293
    9. '_io' → logprob: -6.69544792175293
    10. ' input' → logprob: -7.32044792175293

Token 893: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.0004929834394715726
    2. ' import' → logprob: -7.625493049621582
    3. '   ' → logprob: -13.000493049621582
    4. 'lines' → logprob: -13.750493049621582
    5. 'input' → logprob: -13.875493049621582
    6. 'controller' → logprob: -15.125493049621582
    7. 'io' → logprob: -15.625493049621582
    8. 'from' → logprob: -15.750493049621582
    9. 'ic' → logprob: -16.375492095947266
    10. ' lines' → logprob: -17.000492095947266

Token 894: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.547789674485102e-05
    2. ' sys' → logprob: -10.250035285949707
    3. '	sys' → logprob: -19.375036239624023
    4. '=sys' → logprob: -19.375036239624023
    5. '(sys' → logprob: -21.250036239624023
    6. '.sys' → logprob: -22.000036239624023
    7. '_sys' → logprob: -22.000036239624023
    8. 'io' → logprob: -23.000036239624023
    9. 'os' → logprob: -23.750036239624023
    10. '__' → logprob: -24.500036239624023

Token 895: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010721182450652122
    2. '
' → logprob: -5.260721206665039
    3. '    
' → logprob: -5.260721206665039
    4. 'input' → logprob: -8.885721206665039
    5. '	
' → logprob: -9.885721206665039
    6. 'lines' → logprob: -10.885721206665039
    7. ' lines' → logprob: -11.010721206665039
    8. '        
' → logprob: -11.510721206665039
    9. '	lines' → logprob: -11.760721206665039
    10. ' 
' → logprob: -12.260721206665039

Token 896: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014260940253734589
    2. 'input' → logprob: -4.764260768890381
    3. 'lines' → logprob: -5.514260768890381
    4. '    
' → logprob: -7.264260768890381
    5. ' lines' → logprob: -7.389260768890381
    6. 'for' → logprob: -9.014261245727539
    7. '
' → logprob: -10.139261245727539
    8. 'import' → logprob: -10.264261245727539
    9. '	lines' → logprob: -11.139261245727539
    10. ' input' → logprob: -11.514261245727539

Token 897: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.046132206916809
    2. '   ' → logprob: -1.296132206916809
    3. 'lines' (adapté à ' lines') → logprob: -1.546132206916809
    4. 'controller' → logprob: -2.5461320877075195
    5. 'io' → logprob: -3.0461320877075195
    6. 'ic' → logprob: -4.2961320877075195
    7. 'ctrl' → logprob: -4.7961320877075195
    8. 'IO' → logprob: -5.5461320877075195
    9. 'ioc' → logprob: -5.7961320877075195
    10. 'if' → logprob: -6.0461320877075195

Token 898: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005976435262709856
    2. ' =' → logprob: -5.13097620010376
    3. '=sys' → logprob: -10.005976676940918
    4. '=[]' → logprob: -14.005976676940918
    5. '=
' → logprob: -14.380976676940918
    6. '   ' → logprob: -15.130976676940918
    7. '=line' → logprob: -15.505976676940918
    8. '=

' → logprob: -15.630976676940918
    9. '	' → logprob: -16.1309757232666
    10. ' ' → logprob: -16.3809757232666

Token 899: ' [' (ID: 723)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5766545534133911
    2. ' sys' → logprob: -0.8266545534133911
    3. '[' → logprob: -7.576654434204102
    4. ' [' → logprob: -9.201654434204102
    5. 'list' → logprob: -9.826654434204102
    6. ' list' → logprob: -10.826654434204102
    7. '   ' → logprob: -11.576654434204102
    8. '(sys' → logprob: -11.826654434204102
    9. '[]' → logprob: -12.076654434204102
    10. '	sys' → logprob: -12.701654434204102

Token 900: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.2617008400848135e-05
    2. ' line' → logprob: -10.750032424926758
    3. 'sys' → logprob: -11.875032424926758
    4. 'l' → logprob: -12.625032424926758
    5. '   ' → logprob: -14.375032424926758
    6. 'input' → logprob: -16.625032424926758
    7. 'ln' → logprob: -17.375032424926758
    8. 'lin' → logprob: -17.875032424926758
    9. '	line' → logprob: -18.000032424926758
    10. '(line' → logprob: -18.250032424926758

Token 901: ' for' (ID: 395)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.0028095098678022623
    2. ' for' → logprob: -6.377809524536133
    3. 'for' → logprob: -7.627809524536133
    4. '.strip' → logprob: -7.877809524536133
    5. 'rstrip' → logprob: -8.377809524536133
    6. '[:-' → logprob: -12.252809524536133
    7. '.' → logprob: -12.627809524536133
    8. '   ' → logprob: -13.127809524536133
    9. '.readline' → logprob: -14.627809524536133
    10. '
' → logprob: -15.627809524536133

Token 902: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.048628129065036774
    2. ' line' → logprob: -3.048628091812134
    3. '_line' → logprob: -10.673627853393555
    4. '_' → logprob: -11.923627853393555
    5. '	line' → logprob: -12.048627853393555
    6. ' in' → logprob: -12.673627853393555
    7. 'in' → logprob: -13.298627853393555
    8. '=line' → logprob: -15.798627853393555
    9. '(line' → logprob: -16.673627853393555
    10. ' _' → logprob: -17.048627853393555

Token 903: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031804447062313557
    2. 'in' → logprob: -5.753180503845215
    3. 'line' → logprob: -13.253180503845215
    4. ' ' → logprob: -15.378180503845215
    5. '   ' → logprob: -15.378180503845215
    6. '_in' → logprob: -15.878180503845215
    7. '	in' → logprob: -16.0031795501709
    8. 'import' → logprob: -16.6281795501709
    9. '<|end|>' → logprob: -16.7531795501709
    10. ' line' → logprob: -16.8781795501709

Token 904: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00020377879263833165
    2. ' sys' → logprob: -8.500204086303711
    3. '	sys' → logprob: -16.62520408630371
    4. 'line' → logprob: -16.87520408630371
    5. 'map' → logprob: -17.12520408630371
    6. '(sys' → logprob: -18.00020408630371
    7. '=sys' → logprob: -18.00020408630371
    8. 'stdin' → logprob: -19.37520408630371
    9. 'import' → logprob: -21.87520408630371
    10. 'open' → logprob: -22.25020408630371

Token 905: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.558399319241289e-05
    2. '.' → logprob: -10.875025749206543
    3. 'stdin' → logprob: -12.625025749206543
    4. '.argv' → logprob: -12.875025749206543
    5. '.stdout' → logprob: -14.625025749206543
    6. '.std' → logprob: -16.125024795532227
    7. '(stdin' → logprob: -16.750024795532227
    8. '.stderr' → logprob: -17.750024795532227
    9. ' stdin' → logprob: -18.125024795532227
    10. '   ' → logprob: -18.125024795532227

Token 906: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017215684056282043
    2. 'in' → logprob: -5.642215728759766
    3. '.readline' → logprob: -5.767215728759766
    4. 'rstrip' → logprob: -5.892215728759766
    5. '.readlines' → logprob: -6.017215728759766
    6. 'if' → logprob: -6.267215728759766
    7. ' in' → logprob: -6.392215728759766
    8. '.rstrip' → logprob: -7.017215728759766
    9. 'import' → logprob: -8.892215728759766
    10. ' if' → logprob: -9.142215728759766

Token 907: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.5048530030981055e-06
    2. ' line' → logprob: -13.500001907348633
    3. 'len' → logprob: -18.000001907348633
    4. '(line' → logprob: -18.125001907348633
    5. '
' → logprob: -20.000001907348633
    6. '=line' → logprob: -21.125001907348633
    7. '[line' → logprob: -21.250001907348633
    8. 'lin' → logprob: -21.250001907348633
    9. '	line' → logprob: -21.375001907348633
    10. '#line' → logprob: -22.000001907348633

Token 908: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.03066709265112877
    2. '.' → logprob: -3.7806670665740967
    3. '.rstrip' → logprob: -5.030667304992676
    4. 'strip' → logprob: -7.655667304992676
    5. 'rstrip' → logprob: -8.530667304992676
    6. '<|end|>' → logprob: -9.530667304992676
    7. '.readline' → logprob: -10.655667304992676
    8. ' .' → logprob: -11.155667304992676
    9. '>' → logprob: -11.155667304992676
    10. '.endswith' → logprob: -12.155667304992676

Token 909: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.019873764365911484
    2. ']' → logprob: -4.01987361907959
    3. '()' → logprob: -6.39487361907959
    4. '()]
' → logprob: -10.01987361907959
    5. '()!=' → logprob: -12.39487361907959
    6. ']()' → logprob: -13.14487361907959
    7. '()>' → logprob: -14.89487361907959
    8. '()][' → logprob: -15.26987361907959
    9. ' ]' → logprob: -15.51987361907959
    10. '']' → logprob: -15.76987361907959

Token 910: ' !=' (ID: 1666)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.771655115589965e-05
    2. '()]' → logprob: -11.625018119812012
    3. ' ]' → logprob: -12.750018119812012
    4. ']
' → logprob: -13.000018119812012
    5. ']!=' → logprob: -14.125018119812012
    6. '<|end|>' → logprob: -14.250018119812012
    7. '!=' → logprob: -14.375018119812012
    8. ']+' → logprob: -15.500018119812012
    9. ']

' → logprob: -15.625018119812012
    10. '']' → logprob: -15.625018119812012

Token 911: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023368701338768005
    2. '''' → logprob: -3.7733685970306396
    3. '"' → logprob: -9.648368835449219
    4. '""' → logprob: -9.773368835449219
    5. '''
' → logprob: -14.023368835449219
    6. ' '' → logprob: -14.148368835449219
    7. ''',' → logprob: -15.773368835449219
    8. ''\' → logprob: -16.77336883544922
    9. '']' → logprob: -16.77336883544922
    10. ']' → logprob: -17.27336883544922

Token 912: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0006515554850921035
    2. '']
' → logprob: -7.3756513595581055
    3. ''' → logprob: -11.500651359558105
    4. '']

' → logprob: -11.750651359558105
    5. '\n' → logprob: -12.375651359558105
    6. '"]' → logprob: -13.375651359558105
    7. ']' → logprob: -14.375651359558105
    8. '']
' → logprob: -14.750651359558105
    9. ''\' → logprob: -15.500651359558105
    10. '''' → logprob: -16.750652313232422

Token 913: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002712297427933663
    2. '
' → logprob: -9.50027084350586
    3. 'print' → logprob: -9.75027084350586
    4. '    
' → logprob: -10.00027084350586
    5. '<|end|>' → logprob: -10.37527084350586
    6. 'for' → logprob: -11.00027084350586
    7. ')' → logprob: -11.25027084350586
    8. 'lines' → logprob: -12.00027084350586
    9. 'if' → logprob: -12.12527084350586
    10. ' lines' → logprob: -12.37527084350586

Token 914: ' io' (ID: 9818)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' → logprob: -0.1468600183725357
    2. 'IO' → logprob: -2.271860122680664
    3. 'io' (adapté à ' io') → logprob: -3.521860122680664
    4. 'ioc' → logprob: -6.271860122680664
    5. 'ctrl' → logprob: -6.396860122680664
    6. 'IOC' → logprob: -9.021860122680664
    7. 'ctl' → logprob: -9.521860122680664
    8. 'Io' → logprob: -9.896860122680664
    9. '   ' → logprob: -10.271860122680664
    10. 'ic' → logprob: -10.896860122680664

Token 915: '_controller' (ID: 49485)
  Prédit: '_controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_controller' → logprob: -0.7381410598754883
    2. '.execute' → logprob: -0.8631410598754883
    3. 'Controller' → logprob: -2.6131410598754883
    4. ' =' → logprob: -4.613141059875488
    5. '=' → logprob: -5.238141059875488
    6. 'controller' → logprob: -5.988141059875488
    7. '.run' → logprob: -5.988141059875488
    8. '().' → logprob: -6.363141059875488
    9. '.' → logprob: -6.613141059875488
    10. '_Controller' → logprob: -6.863141059875488

Token 916: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30635613203048706
    2. '.execute' → logprob: -1.5563561916351318
    3. '=' → logprob: -3.056356191635132
    4. '.' → logprob: -5.556355953216553
    5. '_controller' → logprob: -6.806355953216553
    6. '   ' → logprob: -8.806356430053711
    7. '.controller' → logprob: -9.056356430053711
    8. '.exec' → logprob: -9.431356430053711
    9. '_' → logprob: -9.556356430053711
    10. '_.' → logprob: -9.806356430053711

Token 917: ' IO' (ID: 10357)
  Prédit: 'IO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IO' → logprob: -0.06197071075439453
    2. ' IO' → logprob: -2.8119707107543945
    3. '(IO' → logprob: -13.436970710754395
    4. '_IO' → logprob: -13.811970710754395
    5. 'Input' → logprob: -14.811970710754395
    6. '.IO' → logprob: -15.811970710754395
    7. 'IODevice' → logprob: -17.686969757080078
    8. 'Io' → logprob: -18.061969757080078
    9. ' IOError' → logprob: -18.686969757080078
    10. 'IOC' → logprob: -18.936969757080078

Token 918: 'Controller' (ID: 2947)
  Prédit: 'Controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Controller' → logprob: -7.896309739408025e-07
    2. '_Controller' → logprob: -14.750000953674316
    3. '_controller' → logprob: -16.125
    4. 'CO' → logprob: -16.25
    5. 'C' → logprob: -17.5
    6. 'Control' → logprob: -17.75
    7. 'controller' → logprob: -17.75
    8. 'Cont' → logprob: -17.875
    9. 'IO' → logprob: -18.75
    10. 'CONT' → logprob: -19.125

Token 919: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.1129266619682312
    2. 'io' → logprob: -2.862926721572876
    3. 'lines' → logprob: -3.237926721572876
    4. '(io' → logprob: -4.862926483154297
    5. '(sys' → logprob: -6.237926483154297
    6. 'sys' → logprob: -8.612926483154297
    7. '(input' → logprob: -8.737926483154297
    8. '(' → logprob: -9.237926483154297
    9. '(
' → logprob: -9.237926483154297
    10. '.execute' → logprob: -9.737926483154297

Token 920: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10205517709255219
    2. ')
' → logprob: -2.602055072784424
    3. '   ' → logprob: -3.852055072784424
    4. '()' → logprob: -7.102055072784424
    5. '()
' → logprob: -8.102055549621582
    6. ').' → logprob: -8.477055549621582
    7. '.execute' → logprob: -9.352055549621582
    8. '())' → logprob: -9.477055549621582
    9. '())
' → logprob: -9.727055549621582
    10. ')
' → logprob: -10.977055549621582

Token 921: '   ' (ID: 271)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.17289288341999054
    2. '   ' → logprob: -2.0478928089141846
    3. '.io' → logprob: -3.5478928089141846
    4. '	io' → logprob: -7.422893047332764
    5. '_io' → logprob: -8.672892570495605
    6. '(io' → logprob: -10.047892570495605
    7. '.execute' → logprob: -10.172892570495605
    8. '"io' → logprob: -10.422892570495605
    9. '```' → logprob: -10.547892570495605
    10. ' io' → logprob: -10.672892570495605

Token 922: ' io' (ID: 9818)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' (adapté à ' io') → logprob: -6.034592388459714e-06
    2. 'execute' → logprob: -12.875005722045898
    3. '.io' → logprob: -13.000005722045898
    4. ' io' → logprob: -14.500005722045898
    5. '   ' → logprob: -15.125005722045898
    6. '_io' → logprob: -16.3750057220459
    7. '	io' → logprob: -16.3750057220459
    8. '.' → logprob: -16.6250057220459
    9. '.execute' → logprob: -16.8750057220459
    10. '(io' → logprob: -17.5000057220459

Token 923: '_controller' (ID: 49485)
  Prédit: '_controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_controller' → logprob: -9.968312951968983e-06
    2. '._' → logprob: -11.625009536743164
    3. '_CONTROLLER' → logprob: -14.750009536743164
    4. '_Controller' → logprob: -15.375009536743164
    5. '.execute' → logprob: -16.125009536743164
    6. '_.' → logprob: -16.750009536743164
    7. '_cont' → logprob: -16.875009536743164
    8. 'Controller' → logprob: -17.000009536743164
    9. '_executor' → logprob: -17.000009536743164
    10. 'controller' → logprob: -17.375009536743164

Token 924: '.execute' (ID: 13242)
  Prédit: '.execute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execute' → logprob: -0.0004317420825827867
    2. '.' → logprob: -7.750431537628174
    3. '.run' → logprob: -14.125432014465332
    4. '.exec' → logprob: -15.750432014465332
    5. '.
' → logprob: -16.625431060791016
    6. '.Execute' → logprob: -16.875431060791016
    7. '.perform' → logprob: -17.375431060791016
    8. '.mainloop' → logprob: -17.500431060791016
    9. ' .' → logprob: -17.625431060791016
    10. 'execute' → logprob: -17.750431060791016

Token 925: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 923
Tokens correctement prédits (1ère position, stricte): 416
Tokens correctement prédits (1ère position, avec adaptation): 467
Tokens correctement prédits (top 10): 822
Précision stricte (1ère position): 45.07%
Précision adaptée (1ère position): 50.60%
Précision (top 10): 89.06%
================================================================================
