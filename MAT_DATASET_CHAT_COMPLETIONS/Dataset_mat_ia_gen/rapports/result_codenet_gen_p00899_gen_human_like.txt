================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def compute_overlap(a, b):
    max_olap = 0
    min_len = min(len(a), len(b))
    for l in range(min_len, 0, -1):
        if a[-l:] == b[:l]:
            return l
    return 0

def shortest_superstring_length(words):
    n = len(words)
    # Remove words that are substrings of others
    filtered = []
    for w in words:
        if not any(w != other and w in other for other in words):
            filtered.append(w)
    words = filtered
    n = len(words)

    overlap = [[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if i != j:
                overlap[i][j] = compute_overlap(words[i], words[j])

    full_mask = (1 << n) - 1
    dp = [[float('inf')] * n for _ in range(1 << n)]
    # path reconstruction not needed, only length

    for i in range(n):
        dp[1 << i][i] = len(words[i])

    for mask in range(1 << n):
        for last in range(n):
            if dp[mask][last] == float('inf'):
                continue
            for nxt in range(n):
                if (mask & (1 << nxt)) == 0:
                    new_mask = mask | (1 << nxt)
                    cost = dp[mask][last] + len(words[nxt]) - overlap[last][nxt]
                    if cost < dp[new_mask][nxt]:
                        dp[new_mask][nxt] = cost

    return min(dp[full_mask])

while True:
    n = int(input())
    if n == 0:
        break
    cities = [input().strip() for _ in range(n)]
    print(shortest_superstring_length(cities))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' compute' (ID: 23864)
  → Token d'amorce (pas de prédiction)

Token 2: '_overlap' (ID: 179163)
  → Token d'amorce (pas de prédiction)

Token 3: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.354654997587204
    2. '_' → logprob: -1.2296550273895264
    3. '(_' → logprob: -6.104654788970947
    4. '```' → logprob: -6.729654788970947
    5. '_:' → logprob: -6.979654788970947
    6. '(_:' → logprob: -6.979654788970947
    7. ' (' → logprob: -8.979655265808105
    8. '_(' → logprob: -9.104655265808105
    9. '_overlap' → logprob: -9.104655265808105
    10. '():' → logprob: -9.729655265808105

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7545559406280518
    2. ')' → logprob: -1.1295559406280518
    3. '_' → logprob: -2.0045559406280518
    4. '[' → logprob: -3.7545559406280518
    5. 's' → logprob: -4.129555702209473
    6. '_,' → logprob: -4.129555702209473
    7. '_)' → logprob: -4.754555702209473
    8. '.' → logprob: -5.754555702209473
    9. ',)' → logprob: -6.629555702209473
    10. ')_' → logprob: -8.004555702209473

Token 5: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5188809633255005
    2. 'b' → logprob: -1.0188809633255005
    3. ',' → logprob: -3.393880844116211
    4. ' ,' → logprob: -5.393880844116211
    5. ' ' → logprob: -6.018880844116211
    6. ')' → logprob: -6.143880844116211
    7. ',b' → logprob: -7.393880844116211
    8. ' )' → logprob: -8.143880844116211
    9. 'a' → logprob: -9.893880844116211
    10. '_' → logprob: -10.643880844116211

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16198301315307617
    2. ')' → logprob: -1.9119830131530762
    3. ':' → logprob: -7.536983013153076
    4. '[' → logprob: -7.661983013153076
    5. ',' → logprob: -7.661983013153076
    6. '.' → logprob: -9.411983489990234
    7. '):
' → logprob: -9.411983489990234
    8. '_' → logprob: -11.036983489990234
    9. 's' → logprob: -11.161983489990234
    10. '```' → logprob: -11.161983489990234

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03012104518711567
    2. '   ' → logprob: -4.155120849609375
    3. '():' → logprob: -4.655120849609375
    4. '":' → logprob: -7.030120849609375
    5. '':' → logprob: -7.155120849609375
    6. '):' → logprob: -7.405120849609375
    7. '(' → logprob: -7.905120849609375
    8. '```' → logprob: -8.030120849609375
    9. '(:' → logprob: -8.155120849609375
    10. '_:' → logprob: -8.655120849609375

Token 8: ' max' (ID: 2999)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30507323145866394
    2. '   ' → logprob: -1.8050732612609863
    3. '_' → logprob: -3.0550732612609863
    4. ''' → logprob: -4.180073261260986
    5. ' ' → logprob: -5.055073261260986
    6. '(' → logprob: -5.180073261260986
    7. '"' → logprob: -5.805073261260986
    8. '[' → logprob: -5.805073261260986
    9. '[:]' → logprob: -5.930073261260986
    10. 'return' → logprob: -6.055073261260986

Token 9: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012301115784794092
    2. '_overlap' → logprob: -7.251230239868164
    3. '_space' → logprob: -8.626230239868164
    4. ' _' → logprob: -8.751230239868164
    5. '(' → logprob: -9.751230239868164
    6. '(_' → logprob: -10.376230239868164
    7. '_len' → logprob: -10.876230239868164
    8. '(_)' → logprob: -11.001230239868164
    9. '_size' → logprob: -11.751230239868164
    10. '_s' → logprob: -11.876230239868164

Token 10: 'ol' (ID: 340)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.08217255026102066
    2. 'len' → logprob: -2.7071726322174072
    3. 'length' → logprob: -4.707172393798828
    4. 'start' → logprob: -6.207172393798828
    5. '_overlap' → logprob: -7.332172393798828
    6. '_len' → logprob: -8.457172393798828
    7. 'end' → logprob: -9.582172393798828
    8. 'ov' → logprob: -10.082172393798828
    9. 'index' → logprob: -10.207172393798828
    10. 'pos' → logprob: -11.082172393798828

Token 11: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0036486531607806683
    2. 'apping' → logprob: -6.12864875793457
    3. 'apped' → logprob: -7.75364875793457
    4. 'app' → logprob: -8.00364875793457
    5. 'a' → logprob: -8.25364875793457
    6. '_overlap' → logprob: -8.50364875793457
    7. 'lap' → logprob: -9.50364875793457
    8. 'over' → logprob: -10.62864875793457
    9. ' overlap' → logprob: -10.75364875793457
    10. '   ' → logprob: -11.12864875793457

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6419938802719116
    2. 'd' → logprob: -1.5169938802719116
    3. ' =' → logprob: -1.5169938802719116
    4. 't' → logprob: -3.516993999481201
    5. '_' → logprob: -6.516993999481201
    6. '   ' → logprob: -7.266993999481201
    7. 'f' → logprob: -7.391993999481201
    8. 'p' → logprob: -7.766993999481201
    9. 'e' → logprob: -8.141993522644043
    10. 'w' → logprob: -8.391993522644043

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519645690917969
    2. '0' → logprob: -1.5019645690917969
    3. ' len' → logprob: -11.001964569091797
    4. 'len' → logprob: -11.376964569091797
    5. ' ' → logprob: -13.251964569091797
    6. '  ' → logprob: -13.501964569091797
    7. '   ' → logprob: -14.001964569091797
    8. ' max' → logprob: -14.251964569091797
    9. ' min' → logprob: -14.501964569091797
    10. '1' → logprob: -15.189464569091797

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024953833781182766
    2. ' ' → logprob: -8.375249862670898
    3. 'min' → logprob: -12.000249862670898
    4. 'len' → logprob: -12.250249862670898
    5. 'max' → logprob: -13.250249862670898
    6. '''' → logprob: -13.500249862670898
    7. '""' → logprob: -13.625249862670898
    8. '"' → logprob: -13.750249862670898
    9. '-' → logprob: -14.000249862670898
    10. 'a' → logprob: -15.250249862670898

Token 15: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22698697447776794
    2. '   ' → logprob: -2.351986885070801
    3. '\' → logprob: -2.851986885070801
    4. '\n' → logprob: -4.226986885070801
    5. ',' → logprob: -4.601986885070801
    6. '```' → logprob: -5.726986885070801
    7. '_
' → logprob: -5.726986885070801
    8. '
' → logprob: -5.851986885070801
    9. '   
' → logprob: -5.976986885070801
    10. ' ' → logprob: -6.101986885070801

Token 16: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09536565095186234
    2. '   ' → logprob: -3.2203657627105713
    3. ',' → logprob: -3.8453657627105713
    4. ' ' → logprob: -4.970365524291992
    5. '```' → logprob: -5.345365524291992
    6. '   
' → logprob: -6.095365524291992
    7. '_
' → logprob: -6.220365524291992
    8. '\' → logprob: -6.345365524291992
    9. '\n' → logprob: -6.345365524291992
    10. '
' → logprob: -6.470365524291992

Token 17: ' min' (ID: 1349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6377350687980652
    2. ' for' → logprob: -1.01273512840271
    3. ' ' → logprob: -2.63773512840271
    4. '   ' → logprob: -4.262734889984131
    5. '```' → logprob: -5.262734889984131
    6. '   
' → logprob: -5.762734889984131
    7. ' 
' → logprob: -5.887734889984131
    8. ',' → logprob: -6.012734889984131
    9. '
' → logprob: -6.012734889984131
    10. '\n' → logprob: -6.637734889984131

Token 18: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.05970803275704384
    2. '_' → logprob: -3.6847081184387207
    3. '(len' → logprob: -4.059708118438721
    4. '_length' → logprob: -4.434708118438721
    5. '(' → logprob: -6.309708118438721
    6. 'Len' → logprob: -7.934708118438721
    7. 'en' → logprob: -8.059707641601562
    8. 'len' → logprob: -8.184707641601562
    9. '_s' → logprob: -8.809707641601562
    10. '_overlap' → logprob: -8.934707641601562

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04263954609632492
    2. '_' → logprob: -3.7926394939422607
    3. '=' → logprob: -4.04263973236084
    4. ' ' → logprob: -7.54263973236084
    5. '(' → logprob: -7.66763973236084
    6. '   ' → logprob: -8.29263973236084
    7. '_a' → logprob: -9.29263973236084
    8. ',' → logprob: -9.79263973236084
    9. ')' → logprob: -9.79263973236084
    10. '_=' → logprob: -10.04263973236084

Token 20: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.006239468231797218
    2. 'min' → logprob: -5.131239414215088
    3. ' len' → logprob: -8.256239891052246
    4. ' ' → logprob: -10.756239891052246
    5. 'len' → logprob: -11.381239891052246
    6. '	min' → logprob: -12.006239891052246
    7. '   ' → logprob: -12.256239891052246
    8. '(min' → logprob: -12.756239891052246
    9. '=min' → logprob: -13.881239891052246
    10. '[min' → logprob: -14.131239891052246

Token 21: '(len' (ID: 14990)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6627384424209595
    2. '(' → logprob: -0.7877384424209595
    3. '(len' → logprob: -3.53773832321167
    4. '(b' → logprob: -8.287738800048828
    5. ' (' → logprob: -9.037738800048828
    6. '_len' → logprob: -9.412738800048828
    7. 'len' → logprob: -10.662738800048828
    8. ')' → logprob: -10.787738800048828
    9. '(n' → logprob: -10.912738800048828
    10. '(length' → logprob: -10.912738800048828

Token 22: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0005194319528527558
    2. '(' → logprob: -7.625519275665283
    3. '(b' → logprob: -10.625519752502441
    4. 'a' → logprob: -12.000519752502441
    5. ' (' → logprob: -15.125519752502441
    6. 'b' → logprob: -15.625519752502441
    7. ')' → logprob: -15.875519752502441
    8. '(s' → logprob: -16.250518798828125
    9. '(
' → logprob: -16.375518798828125
    10. 's' → logprob: -17.000518798828125

Token 23: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0002777822664938867
    2. ',' → logprob: -8.375277519226074
    3. ')' → logprob: -11.125277519226074
    4. ' ),' → logprob: -11.375277519226074
    5. 'a' → logprob: -11.625277519226074
    6. '   ' → logprob: -13.000277519226074
    7. '(a' → logprob: -13.000277519226074
    8. '[a' → logprob: -13.000277519226074
    9. '[' → logprob: -13.625277519226074
    10. 'b' → logprob: -14.000277519226074

Token 24: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2520776093006134
    2. 'len' → logprob: -1.502077579498291
    3. 'b' → logprob: -9.37707805633545
    4. '(len' → logprob: -10.37707805633545
    5. '   ' → logprob: -11.62707805633545
    6. '	len' → logprob: -12.12707805633545
    7. ' b' → logprob: -12.25207805633545
    8. ',len' → logprob: -12.50207805633545
    9. '<len' → logprob: -12.87707805633545
    10. '=len' → logprob: -13.00207805633545

Token 25: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0015960339223966002
    2. '(' → logprob: -6.626595973968506
    3. 'b' → logprob: -8.501596450805664
    4. ' (' → logprob: -10.376596450805664
    5. ' b' → logprob: -10.501596450805664
    6. '(len' → logprob: -12.501596450805664
    7. ')' → logprob: -13.626596450805664
    8. '(s' → logprob: -13.751596450805664
    9. '(a' → logprob: -14.126596450805664
    10. ')b' → logprob: -14.626596450805664

Token 26: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007768462877720594
    2. ')' → logprob: -4.882768630981445
    3. '))
' → logprob: -9.632768630981445
    4. ')))' → logprob: -9.757768630981445
    5. ' ))' → logprob: -11.257768630981445
    6. ''))' → logprob: -11.882768630981445
    7. '),' → logprob: -12.132768630981445
    8. '()))' → logprob: -12.757768630981445
    9. ' ' → logprob: -12.882768630981445
    10. '))

' → logprob: -13.132768630981445

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0635780543088913
    2. ' 
' → logprob: -4.188578128814697
    3. '
' → logprob: -4.813578128814697
    4. ' for' → logprob: -4.813578128814697
    5. '\n' → logprob: -4.938578128814697
    6. ' ' → logprob: -4.938578128814697
    7. '    
' → logprob: -5.188578128814697
    8. '<|end|>' → logprob: -5.813578128814697
    9. '  
' → logprob: -5.938578128814697
    10. '```' → logprob: -6.688578128814697

Token 28: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2520880699157715
    2. ' for' → logprob: -1.2520880699157715
    3. '\n' → logprob: -1.3770880699157715
    4. ' 
' → logprob: -3.0020880699157715
    5. 'for' (adapté à ' for') → logprob: -3.0020880699157715
    6. '```' → logprob: -3.7520880699157715
    7. '    
' → logprob: -4.0020880699157715
    8. ' ' → logprob: -4.6270880699157715
    9. '  
' → logprob: -5.1270880699157715
    10. '\' → logprob: -5.3770880699157715

Token 29: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002283241832628846
    2. 'i' → logprob: -6.252283096313477
    3. ' _' → logprob: -8.377283096313477
    4. ' ' → logprob: -9.502283096313477
    5. '_' → logprob: -10.252283096313477
    6. '_i' → logprob: -12.502283096313477
    7. '	i' → logprob: -13.127283096313477
    8. '   ' → logprob: -13.252283096313477
    9. ' overlap' → logprob: -13.252283096313477
    10. ' l' → logprob: -13.377283096313477

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001748246024362743
    2. ' ' → logprob: -6.751748085021973
    3. 'in' → logprob: -7.876748085021973
    4. ' i' → logprob: -9.626748085021973
    5. 'en' → logprob: -10.001748085021973
    6. 'i' → logprob: -10.876748085021973
    7. 'n' → logprob: -10.876748085021973
    8. '   ' → logprob: -11.501748085021973
    9. '  ' → logprob: -11.876748085021973
    10. '_' → logprob: -12.001748085021973

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0028080830816179514
    2. 'range' → logprob: -5.877808094024658
    3. ' ' → logprob: -12.8778076171875
    4. '	range' → logprob: -15.1278076171875
    5. '(range' → logprob: -15.3778076171875
    6. '  ' → logprob: -16.5028076171875
    7. ' xrange' → logprob: -17.0028076171875
    8. '   ' → logprob: -17.1278076171875
    9. 'ange' → logprob: -17.2528076171875
    10. ' ' → logprob: -17.7528076171875

Token 32: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026979928952641785
    2. '(min' → logprob: -8.250269889831543
    3. ' (' → logprob: -11.875269889831543
    4. '(max' → logprob: -13.625269889831543
    5. '(len' → logprob: -15.750269889831543
    6. '1' → logprob: -16.125268936157227
    7. ' ' → logprob: -16.750268936157227
    8. '(i' → logprob: -17.375268936157227
    9. '(l' → logprob: -18.625268936157227
    10. '(
' → logprob: -18.750268936157227

Token 33: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.021128110587596893
    2. '_' → logprob: -3.8961281776428223
    3. '(_' → logprob: -8.271127700805664
    4. '(len' → logprob: -8.896127700805664
    5. '_(' → logprob: -9.396127700805664
    6. '(' → logprob: -9.646127700805664
    7. ' _' → logprob: -11.521127700805664
    8. '_)' → logprob: -11.771127700805664
    9. '_l' → logprob: -12.021127700805664
    10. 'Len' → logprob: -12.146127700805664

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012527424842119217
    2. ' ,' → logprob: -4.3875274658203125
    3. '1' → logprob: -11.887527465820312
    4. ' ' → logprob: -12.012527465820312
    5. '):' → logprob: -13.137527465820312
    6. '+' → logprob: -13.887527465820312
    7. ' ):' → logprob: -14.387527465820312
    8. ' +' → logprob: -15.387527465820312
    9. '+,' → logprob: -15.762527465820312
    10. ')' → logprob: -16.137527465820312

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2534739375114441
    2. '0' → logprob: -1.5034739971160889
    3. '-' → logprob: -7.00347375869751
    4. ' -' → logprob: -7.37847375869751
    5. '  ' → logprob: -13.065974235534668
    6. '1' → logprob: -13.315974235534668
    7. '   ' → logprob: -13.628474235534668
    8. '```' → logprob: -14.003474235534668
    9. ' ' → logprob: -14.065974235534668
    10. '    ' → logprob: -14.690974235534668

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03441997990012169
    2. ' ' → logprob: -3.4094200134277344
    3. '-' → logprob: -7.284420013427734
    4. ' -' → logprob: -9.409420013427734
    5. '1' → logprob: -13.034420013427734
    6. '```' → logprob: -13.784420013427734
    7. '   ' → logprob: -13.846920013427734
    8. '  ' → logprob: -14.596920013427734
    9. '=' → logprob: -15.784420013427734
    10. '    ' → logprob: -16.096920013427734

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020193221047520638
    2. '-' → logprob: -4.020193099975586
    3. ' ,' → logprob: -6.645193099975586
    4. ',-' → logprob: -7.770193099975586
    5. ' -' → logprob: -8.270193099975586
    6. ' ,-' → logprob: -10.395193099975586
    7. ' ' → logprob: -11.145193099975586
    8. '-,' → logprob: -11.645193099975586
    9. '   ' → logprob: -12.145193099975586
    10. '```' → logprob: -13.145193099975586

Token 38: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.061974965035915375
    2. ' -' → logprob: -2.8119750022888184
    3. ' ' → logprob: -12.93697452545166
    4. '```' → logprob: -13.43697452545166
    5. '   ' → logprob: -13.81197452545166
    6. ')' → logprob: -14.31197452545166
    7. ',-' → logprob: -14.81197452545166
    8. '-step' → logprob: -15.31197452545166
    9. '-)' → logprob: -15.43697452545166
    10. '  ' → logprob: -15.68697452545166

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -17.250024795532227
    4. ')' → logprob: -18.500024795532227
    5. '   ' → logprob: -19.000024795532227
    6. ' -' → logprob: -19.125024795532227
    7. '１' → logprob: -19.750024795532227
    8. '  ' → logprob: -20.250024795532227
    9. '-' → logprob: -20.375024795532227
    10. '2' → logprob: -21.000024795532227

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001899959403090179
    2. ')' → logprob: -6.7519001960754395
    3. ':' → logprob: -7.5019001960754395
    4. ' ):' → logprob: -8.876899719238281
    5. '):
' → logprob: -10.501899719238281
    6. '   ' → logprob: -12.001899719238281
    7. ',' → logprob: -13.626899719238281
    8. ' ' → logprob: -14.376899719238281
    9. ' )' → logprob: -14.626899719238281
    10. '():' → logprob: -14.751899719238281

Token 41: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16389335691928864
    2. '   ' → logprob: -2.788893461227417
    3. ' :' → logprob: -3.788893461227417
    4. '<|end|>' → logprob: -3.788893461227417
    5. '):' → logprob: -4.163893222808838
    6. '       ' → logprob: -4.288893222808838
    7. ' ' → logprob: -4.663893222808838
    8. '    ' → logprob: -6.288893222808838
    9. ')' → logprob: -7.038893222808838
    10. ' ):' → logprob: -7.413893222808838

Token 42: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8155408501625061
    2. '       ' → logprob: -1.6905407905578613
    3. '   ' → logprob: -1.6905407905578613
    4. '<|end|>' → logprob: -2.0655407905578613
    5. '    ' → logprob: -3.8155407905578613
    6. ' if' → logprob: -4.440540790557861
    7. ':' → logprob: -4.565540790557861
    8. ' :' → logprob: -4.940540790557861
    9. 'if' (adapté à ' if') → logprob: -6.440540790557861
    10. '        ' → logprob: -6.440540790557861

Token 43: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06498991698026657
    2. ' b' → logprob: -2.8149898052215576
    3. 'a' → logprob: -5.939990043640137
    4. 'b' → logprob: -7.939990043640137
    5. ' ' → logprob: -10.814990043640137
    6. '<|end|>' → logprob: -12.564990043640137
    7. ' ' → logprob: -12.814990043640137
    8. ' `' → logprob: -14.689990043640137
    9. '    ' → logprob: -15.064990043640137
    10. '	a' → logprob: -15.314990043640137

Token 44: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.038291867822408676
    2. '.endswith' → logprob: -3.2882919311523438
    3. '[:' → logprob: -9.038291931152344
    4. '.startswith' → logprob: -9.413291931152344
    5. '[len' → logprob: -10.288291931152344
    6. '[' → logprob: -11.538291931152344
    7. ' [-' → logprob: -12.538291931152344
    8. '.' → logprob: -14.413291931152344
    9. '[:-' → logprob: -14.663291931152344
    10. '```' → logprob: -14.788291931152344

Token 45: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.292907877039397e-06
    2. ' l' → logprob: -13.25000286102295
    3. '1' → logprob: -13.62500286102295
    4. '```' → logprob: -16.500003814697266
    5. ' ' → logprob: -17.000003814697266
    6. '<|end|>' → logprob: -17.500003814697266
    7. '	l' → logprob: -18.250003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '  ' → logprob: -19.250003814697266
    10. '*l' → logprob: -19.375003814697266

Token 46: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.000432695698691532
    2. ':' → logprob: -8.250432968139648
    3. ']' → logprob: -9.250432968139648
    4. ' :]' → logprob: -9.750432968139648
    5. ']==' → logprob: -11.750432968139648
    6. ':].' → logprob: -12.125432968139648
    7. '==' → logprob: -13.125432968139648
    8. ':],' → logprob: -14.625432968139648
    9. ' ]' → logprob: -14.750432968139648
    10. ':]

' → logprob: -15.625432968139648

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011252242140471935
    2. '==' → logprob: -4.511252403259277
    3. ' ' → logprob: -8.511252403259277
    4. '=' → logprob: -13.011252403259277
    5. ' =' → logprob: -14.511252403259277
    6. ' ' → logprob: -16.51125144958496
    7. ']==' → logprob: -16.63625144958496
    8. ')' → logprob: -16.76125144958496
    9. ')==' → logprob: -16.76125144958496
    10. ' ==
' → logprob: -16.88625144958496

Token 48: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12692862749099731
    2. 'b' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.626928329467773
    4. ' ' → logprob: -16.126928329467773
    5. ')b' → logprob: -16.376928329467773
    6. '>b' → logprob: -17.501928329467773
    7. '	b' → logprob: -17.751928329467773
    8. ' б' → logprob: -17.751928329467773
    9. '```' → logprob: -17.751928329467773
    10. '<|end|>' → logprob: -18.251928329467773

Token 49: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -7.123899558791891e-05
    2. '[' → logprob: -9.62507152557373
    3. ' [:' → logprob: -12.37507152557373
    4. ':' → logprob: -14.75007152557373
    5. '[:-' → logprob: -15.87507152557373
    6. '[-' → logprob: -15.87507152557373
    7. ' ' → logprob: -16.375070571899414
    8. '[:]' → logprob: -16.500070571899414
    9. '.startswith' → logprob: -16.875070571899414
    10. '][:' → logprob: -17.375070571899414

Token 50: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.512236498361744e-07
    2. ' l' → logprob: -14.625000953674316
    3. '	l' → logprob: -17.75
    4. '+l' → logprob: -18.0
    5. '-l' → logprob: -18.5
    6. '_l' → logprob: -19.375
    7. '*l' → logprob: -19.375
    8. '```' → logprob: -20.0
    9. '$l' → logprob: -20.0
    10. '   ' → logprob: -20.0

Token 51: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018614033469930291
    2. ':' → logprob: -7.001861572265625
    3. ']:' → logprob: -7.251861572265625
    4. ')' → logprob: -9.251861572265625
    5. '):
' → logprob: -9.501861572265625
    6. '       ' → logprob: -10.876861572265625
    7. ']):' → logprob: -10.876861572265625
    8. ' ):' → logprob: -11.126861572265625
    9. '）：' → logprob: -12.251861572265625
    10. '   ' → logprob: -13.251861572265625

Token 52: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3431156575679779
    2. ':' → logprob: -1.5931156873703003
    3. '       ' → logprob: -2.5931155681610107
    4. ':
' → logprob: -5.84311580657959
    5. ' :' → logprob: -5.96811580657959
    6. '\n' → logprob: -6.21811580657959
    7. ':return' → logprob: -6.59311580657959
    8. '<|end|>' → logprob: -7.46811580657959
    9. '):' → logprob: -7.84311580657959
    10. '\' → logprob: -7.96811580657959

Token 53: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.518770694732666
    2. '           ' → logprob: -1.643770694732666
    3. ' return' → logprob: -2.643770694732666
    4. ' 
' → logprob: -3.143770694732666
    5. '               ' → logprob: -3.143770694732666
    6. 'max' → logprob: -3.768770694732666
    7. ' max' → logprob: -4.393770694732666
    8. '
' → logprob: -4.643770694732666
    9. '            
' → logprob: -6.393770694732666
    10. '\n' → logprob: -6.518770694732666

Token 54: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16022950410842896
    2. ' l' → logprob: -1.9102294445037842
    3. ' ' → logprob: -13.660229682922363
    4. '	l' → logprob: -13.660229682922363
    5. 'a' → logprob: -14.160229682922363
    6. '   ' → logprob: -14.410229682922363
    7. '    ' → logprob: -15.160229682922363
    8. '           ' → logprob: -15.285229682922363
    9. ' ' → logprob: -15.535229682922363
    10. ' a' → logprob: -15.535229682922363

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2528555393218994
    2. '\n' → logprob: -1.3778555393218994
    3. '<|end|>' → logprob: -1.3778555393218994
    4. ' ' → logprob: -2.5028555393218994
    5. ' 
' → logprob: -3.0028555393218994
    6. '   ' → logprob: -3.6278555393218994
    7. '\' → logprob: -4.62785530090332
    8. '    
' → logprob: -4.75285530090332
    9. '       ' → logprob: -5.12785530090332
    10. '0' → logprob: -5.62785530090332

Token 57: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7578905820846558
    2. '\n' → logprob: -1.1328905820846558
    3. ' 
' → logprob: -2.3828907012939453
    4. '\' → logprob: -3.3828907012939453
    5. ' ' → logprob: -3.5078907012939453
    6. '
' → logprob: -4.257890701293945
    7. '    
' → logprob: -4.632890701293945
    8. '   ' → logprob: -4.757890701293945
    9. '  
' → logprob: -4.882890701293945
    10. '<|end|>' → logprob: -6.257890701293945

Token 58: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062353041023015976
    2. ' ' → logprob: -2.8123531341552734
    3. 'max' → logprob: -8.312353134155273
    4. ' max' → logprob: -8.937353134155273
    5. ' ' → logprob: -12.562353134155273
    6. '   ' → logprob: -12.687353134155273
    7. 'None' → logprob: -14.937353134155273
    8. '  ' → logprob: -14.937353134155273
    9. ' None' → logprob: -15.312353134155273
    10. 's' → logprob: -15.374853134155273

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.875008583068848
    3. 'max' → logprob: -13.375008583068848
    4. '   ' → logprob: -18.50000762939453
    5. ' max' → logprob: -19.25000762939453
    6. '۰' → logprob: -19.62500762939453
    7. '  ' → logprob: -19.75000762939453
    8. '０' → logprob: -20.12500762939453
    9. '00' → logprob: -20.25000762939453
    10. 'None' → logprob: -20.68750762939453

Token 60: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' shortest' (ID: 70564)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.1584508717060089
    2. ' ' → logprob: -3.5334508419036865
    3. ' calculate' → logprob: -3.7834508419036865
    4. ' find' → logprob: -3.7834508419036865
    5. ' concatenate' → logprob: -4.158451080322266
    6. ' process' → logprob: -4.408451080322266
    7. ' merge' → logprob: -4.408451080322266
    8. ' combine' → logprob: -4.533451080322266
    9. ' overlap' → logprob: -5.908451080322266
    10. ' join' → logprob: -5.908451080322266

Token 63: '_super' (ID: 81649)
  Prédit: '_super'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_super' → logprob: -0.26226547360420227
    2. '_common' → logprob: -1.8872654438018799
    3. '_' → logprob: -3.38726544380188
    4. '_path' → logprob: -3.51226544380188
    5. '_pal' → logprob: -5.137265682220459
    6. '_overlap' → logprob: -5.512265682220459
    7. '_cycle' → logprob: -6.762265682220459
    8. '_suffix' → logprob: -7.512265682220459
    9. '_bridge' → logprob: -7.762265682220459
    10. '_prefix' → logprob: -8.0122652053833

Token 64: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -6.909333023941144e-05
    2. 'sequence' → logprob: -10.250068664550781
    3. '_string' → logprob: -10.625068664550781
    4. 'tring' → logprob: -11.625068664550781
    5. ' string' → logprob: -15.500068664550781
    6. '```' → logprob: -16.62506866455078
    7. 'substring' → logprob: -16.75006866455078
    8. '_' → logprob: -16.87506866455078
    9. 'per' → logprob: -17.37506866455078
    10. 'print' → logprob: -17.50006866455078

Token 65: '_length' (ID: 11514)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5422419309616089
    2. '(strings' → logprob: -1.2922419309616089
    3. '(a' → logprob: -2.1672420501708984
    4. '(s' → logprob: -4.417242050170898
    5. '(words' → logprob: -5.417242050170898
    6. '(l' → logprob: -6.292242050170898
    7. '(parts' → logprob: -6.417242050170898
    8. '(A' → logprob: -6.417242050170898
    9. '(lst' → logprob: -7.167242050170898
    10. '(ss' → logprob: -7.167242050170898

Token 66: '(words' (ID: 80550)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10550722479820251
    2. '(a' → logprob: -2.7305071353912354
    3. '(strings' → logprob: -3.7305071353912354
    4. ' (' → logprob: -5.1055073738098145
    5. '(s' → logprob: -6.1055073738098145
    6. '(l' → logprob: -7.2305073738098145
    7. '(lst' → logprob: -7.8555073738098145
    8. '(ss' → logprob: -8.980506896972656
    9. '(words' → logprob: -9.105506896972656
    10. '(items' → logprob: -9.105506896972656

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012436654418706894
    2. '(' → logprob: -5.012436866760254
    3. ')' → logprob: -5.637436866760254
    4. '(words' → logprob: -6.887436866760254
    5. ' ):' → logprob: -7.262436866760254
    6. '():' → logprob: -8.887436866760254
    7. '):
' → logprob: -9.637436866760254
    8. '[]):' → logprob: -10.012436866760254
    9. '[' → logprob: -10.512436866760254
    10. ')):' → logprob: -10.637436866760254

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015159068629145622
    2. ' n' → logprob: -4.5151591300964355
    3. ' max' → logprob: -6.2651591300964355
    4. 'n' → logprob: -6.8901591300964355
    5. ' length' → logprob: -7.8901591300964355
    6. 'max' → logprob: -8.890158653259277
    7. '```' → logprob: -8.890158653259277
    8. ' min' → logprob: -9.390158653259277
    9. ' ' → logprob: -9.765158653259277
    10. '    ' → logprob: -9.765158653259277

Token 69: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004265608265995979
    2. 'n' (adapté à ' n') → logprob: -5.504265785217285
    3. '   ' → logprob: -8.629265785217285
    4. ' N' → logprob: -12.754265785217285
    5. ' import' → logprob: -13.004265785217285
    6. ' dp' → logprob: -13.629265785217285
    7. 'import' → logprob: -14.504265785217285
    8. ' from' → logprob: -14.754265785217285
    9. '	n' → logprob: -15.004265785217285
    10. '    ' → logprob: -15.629265785217285

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006297559011727571
    2. '=' → logprob: -7.375629901885986
    3. ' ' → logprob: -13.125629425048828
    4. ' =
' → logprob: -14.375629425048828
    5. ' =)' → logprob: -15.000629425048828
    6. '=len' → logprob: -16.250629425048828
    7. '  ' → logprob: -16.500629425048828
    8. '=int' → logprob: -16.625629425048828
    9. ' =
' → logprob: -17.625629425048828
    10. '   ' → logprob: -17.625629425048828

Token 71: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.006715967319905758
    2. 'len' → logprob: -5.006715774536133
    3. '(len' → logprob: -15.006715774536133
    4. '=len' → logprob: -15.631715774536133
    5. '[len' → logprob: -16.756715774536133
    6. '	len' → logprob: -17.756715774536133
    7. ' ' → logprob: -18.256715774536133
    8. '   ' → logprob: -19.256715774536133
    9. '<len' → logprob: -19.506715774536133
    10. ',len' → logprob: -19.506715774536133

Token 72: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.008615399710834026
    2. '(' → logprob: -4.758615493774414
    3. 'words' → logprob: -15.383615493774414
    4. '(word' → logprob: -15.633615493774414
    5. ' words' → logprob: -15.758615493774414
    6. '(
' → logprob: -15.883615493774414
    7. '(weights' → logprob: -16.258615493774414
    8. ' (' → logprob: -16.508615493774414
    9. '(points' → logprob: -16.883615493774414
    10. '(numbers' → logprob: -17.758615493774414

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02066894620656967
    2. ' )' → logprob: -3.8956689834594727
    3. ')
' → logprob: -9.270668983459473
    4. '   ' → logprob: -10.770668983459473
    5. ' )
' → logprob: -11.770668983459473
    6. ')n' → logprob: -12.895668983459473
    7. ' ' → logprob: -14.395668983459473
    8. '`)' → logprob: -15.645668983459473
    9. '))' → logprob: -15.895668983459473
    10. '    ' → logprob: -15.895668983459473

Token 74: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5116543173789978
    2. 'dp' → logprob: -1.1366543769836426
    3. '    
' → logprob: -3.8866543769836426
    4. '   ' → logprob: -4.011654376983643
    5. ' 
' → logprob: -4.636654376983643
    6. '    ' → logprob: -4.761654376983643
    7. '
' → logprob: -5.511654376983643
    8. '_dp' → logprob: -5.636654376983643
    9. ' ' → logprob: -5.761654376983643
    10. '	dp' → logprob: -6.261654376983643

Token 75: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3964782655239105
    2. 'dp' → logprob: -1.146478295326233
    3. '   ' → logprob: -5.521478176116943
    4. ' overlaps' → logprob: -5.896478176116943
    5. ' overlap' → logprob: -6.771478176116943
    6. ' graph' → logprob: -7.771478176116943
    7. 'over' → logprob: -7.896478176116943
    8. 'dist' → logprob: -8.646478652954102
    9. ' max' → logprob: -8.896478652954102
    10. 'graph' → logprob: -8.896478652954102

Token 76: ' Remove' (ID: 18141)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15134753286838531
    2. ' dp' → logprob: -2.2763476371765137
    3. 'over' → logprob: -3.7763476371765137
    4. ' overlaps' → logprob: -5.401347637176514
    5. 'dist' → logprob: -5.776347637176514
    6. ' overlap' → logprob: -5.901347637176514
    7. 'import' → logprob: -7.026347637176514
    8. ' dist' → logprob: -7.151347637176514
    9. ' import' → logprob: -7.776347637176514
    10. '#' → logprob: -7.901347637176514

Token 77: ' words' (ID: 6391)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.773252010345459
    2. ' duplicate' → logprob: -1.273252010345459
    3. '_duplicates' → logprob: -2.398252010345459
    4. ' redundant' → logprob: -2.648252010345459
    5. '_duplicate' → logprob: -2.898252010345459
    6. ' unnecessary' → logprob: -4.523252010345459
    7. 'duplicate' → logprob: -5.148252010345459
    8. 'duplicates' → logprob: -5.648252010345459
    9. '<|end|>' → logprob: -5.898252010345459
    10. ' ' → logprob: -5.898252010345459

Token 78: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.27437663078308105
    2. '<|end|>' → logprob: -1.899376630783081
    3. 'that' → logprob: -3.399376630783081
    4. '_that' → logprob: -3.774376630783081
    5. ' not' → logprob: -4.77437686920166
    6. ' ' → logprob: -4.89937686920166
    7. '<|end|>' → logprob: -5.64937686920166
    8. '   ' → logprob: -5.77437686920166
    9. '[:]' → logprob: -6.14937686920166
    10. '_subset' → logprob: -7.02437686920166

Token 79: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.02985161356627941
    2. 'are' → logprob: -3.5298516750335693
    3. ' can' → logprob: -9.779851913452148
    4. '   ' → logprob: -10.904851913452148
    5. ' appear' → logprob: -12.279851913452148
    6. '```' → logprob: -12.529851913452148
    7. 'appear' → logprob: -12.904851913452148
    8. '_are' → logprob: -13.029851913452148
    9. ' in' → logprob: -13.154851913452148
    10. ' is' → logprob: -13.279851913452148

Token 80: ' substr' (ID: 29234)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.7400505542755127
    2. ' substr' → logprob: -0.7400505542755127
    3. 'substring' → logprob: -3.7400505542755127
    4. ' sub' → logprob: -4.865050315856934
    5. 'substr' → logprob: -5.615050315856934
    6. ' substring' → logprob: -5.990050315856934
    7. '   ' → logprob: -6.240050315856934
    8. '```' → logprob: -6.240050315856934
    9. 'contained' → logprob: -6.615050315856934
    10. '	sub' → logprob: -7.490050315856934

Token 81: 'ings' (ID: 963)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.026121117174625397
    2. 'ings' → logprob: -4.776121139526367
    3. 'e' → logprob: -5.151121139526367
    4. 'ents' → logprob: -5.526121139526367
    5. 'ent' → logprob: -5.776121139526367
    6. 'ing' → logprob: -5.901121139526367
    7. 'g' → logprob: -7.776121139526367
    8. '_' → logprob: -8.526121139526367
    9. 's' → logprob: -8.526121139526367
    10. 't' → logprob: -8.526121139526367

Token 82: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5082810521125793
    2. ' of' → logprob: -1.0082809925079346
    3. ' (' → logprob: -4.133281230926514
    4. 'of' → logprob: -4.758281230926514
    5. ' ' → logprob: -4.883281230926514
    6. '  ' → logprob: -7.758281230926514
    7. '   ' → logprob: -8.133280754089355
    8. '	of' → logprob: -8.508280754089355
    9. '```' → logprob: -8.883280754089355
    10. '_of' → logprob: -9.508280754089355

Token 83: ' others' (ID: 5036)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.032248418778181076
    2. ' other' → logprob: -3.9072484970092773
    3. 'others' → logprob: -4.532248497009277
    4. 'another' → logprob: -7.657248497009277
    5. ' others' → logprob: -8.532248497009277
    6. '```' → logprob: -9.282248497009277
    7. 'any' → logprob: -9.532248497009277
    8. '   ' → logprob: -11.157248497009277
    9. ' ' → logprob: -11.657248497009277
    10. ' another' → logprob: -12.407248497009277

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7539534568786621
    2. '<|end|>' → logprob: -1.253953456878662
    3. '```' → logprob: -2.878953456878662
    4. '\n' → logprob: -3.253953456878662
    5. '    
' → logprob: -3.503953456878662
    6. '
' → logprob: -3.753953456878662
    7. '\' → logprob: -3.878953456878662
    8. ',' → logprob: -4.253953456878662
    9. ' 
' → logprob: -4.503953456878662
    10. ' for' → logprob: -4.503953456878662

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4158974289894104
    2. '
' → logprob: -1.7908973693847656
    3. '    
' → logprob: -2.1658973693847656
    4. '   
' → logprob: -3.9158973693847656
    5. '  
' → logprob: -4.290897369384766
    6. ' 
' → logprob: -4.540897369384766
    7. '\n' → logprob: -4.915897369384766
    8. '```' → logprob: -6.165897369384766
    9. '<|end|>' → logprob: -6.790897369384766
    10. '     
' → logprob: -7.040897369384766

Token 86: ' filtered' (ID: 31972)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5388882160186768
    2. ' words' → logprob: -2.1638882160186768
    3. ' for' → logprob: -2.5388882160186768
    4. ' ' → logprob: -3.0388882160186768
    5. ' filtered' → logprob: -3.2888882160186768
    6. ' 
' → logprob: -3.6638882160186768
    7. 'for' → logprob: -3.7888882160186768
    8. ' to' → logprob: -3.9138882160186768
    9. ' new' → logprob: -4.038887977600098
    10. '   ' → logprob: -4.288887977600098

Token 87: ' =' (ID: 314)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.025472160428762436
    2. ' =' → logprob: -3.7754721641540527
    3. '_' → logprob: -6.525472164154053
    4. '=' → logprob: -7.275472164154053
    5. '=[]' → logprob: -10.150471687316895
    6. 'words' → logprob: -11.650471687316895
    7. '   ' → logprob: -12.525471687316895
    8. ' ' → logprob: -12.650471687316895
    9. 'Words' → logprob: -12.650471687316895
    10. ' =[' → logprob: -13.775471687316895

Token 88: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7162054777145386
    2. '[' → logprob: -1.2162054777145386
    3. '[word' → logprob: -1.8412054777145386
    4. ' [' → logprob: -3.341205596923828
    5. '[list' → logprob: -4.716205596923828
    6. ' []' → logprob: -4.716205596923828
    7. '[w' → logprob: -6.341205596923828
    8. 'words' → logprob: -7.341205596923828
    9. '[:]' → logprob: -8.591205596923828
    10. ' words' → logprob: -9.216205596923828

Token 89: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2525680661201477
    2. ' for' → logprob: -1.502568006515503
    3. '   ' → logprob: -7.377568244934082
    4. 'i' → logprob: -12.627568244934082
    5. 'f' → logprob: -13.127568244934082
    6. '	for' → logprob: -13.377568244934082
    7. ' ' → logprob: -13.752568244934082
    8. ':' → logprob: -14.377568244934082
    9. '    ' → logprob: -14.502568244934082
    10. ',' → logprob: -14.752568244934082

Token 90: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002476604888215661
    2. ' for' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.252476692199707
    4. 'i' → logprob: -15.877476692199707
    5. 'f' → logprob: -16.00247573852539
    6. '	for' → logprob: -17.12747573852539
    7. 'found' → logprob: -18.25247573852539
    8. '```' → logprob: -18.25247573852539
    9. 'is' → logprob: -19.00247573852539
    10. 'fo' → logprob: -19.25247573852539

Token 91: ' w' (ID: 286)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5834749937057495
    2. 'w' → logprob: -0.8334749937057495
    3. 'word' → logprob: -5.083475112915039
    4. ' i' → logprob: -7.083475112915039
    5. ' w' → logprob: -7.958475112915039
    6. '```' → logprob: -9.583475112915039
    7. ' word' → logprob: -10.208475112915039
    8. '   ' → logprob: -11.958475112915039
    9. 'x' → logprob: -13.458475112915039
    10. 'a' → logprob: -13.458475112915039

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00047809764510020614
    2. 'in' → logprob: -7.750478267669678
    3. ' ' → logprob: -10.00047779083252
    4. ' i' → logprob: -13.87547779083252
    5. '  ' → logprob: -14.12547779083252
    6. 'i' → logprob: -15.25047779083252
    7. '   ' → logprob: -17.000478744506836
    8. 's' → logprob: -17.375478744506836
    9. '	in' → logprob: -17.375478744506836
    10. ' ' → logprob: -17.875478744506836

Token 93: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.00026205103495158255
    2. ' words' → logprob: -8.250262260437012
    3. '(words' → logprob: -14.875262260437012
    4. 'ords' → logprob: -15.625262260437012
    5. '.words' → logprob: -15.875262260437012
    6. ' ' → logprob: -16.125261306762695
    7. '_words' → logprob: -17.375261306762695
    8. 'filtered' → logprob: -17.750261306762695
    9. '   ' → logprob: -18.250261306762695
    10. '[' → logprob: -20.125261306762695

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006178221665322781
    2. ' :' → logprob: -5.131178379058838
    3. ':
' → logprob: -8.50617790222168
    4. '    ' → logprob: -11.25617790222168
    5. '):' → logprob: -11.88117790222168
    6. ' :
' → logprob: -11.88117790222168
    7. ' if' → logprob: -12.25617790222168
    8. '   ' → logprob: -12.38117790222168
    9. ',' → logprob: -13.13117790222168
    10. ' ' → logprob: -13.25617790222168

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043707724660634995
    2. '    ' → logprob: -3.6687076091766357
    3. ' if' → logprob: -4.793707847595215
    4. '   ' → logprob: -6.168707847595215
    5. '        ' → logprob: -6.293707847595215
    6. ' ' → logprob: -6.793707847595215
    7. ' True' → logprob: -6.918707847595215
    8. '        
' → logprob: -7.918707847595215
    9. '=True' → logprob: -8.293707847595215
    10. ':' → logprob: -8.293707847595215

Token 96: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14384354650974274
    2. 'if' (adapté à ' if') → logprob: -2.018843650817871
    3. ' is' → logprob: -8.268843650817871
    4. '   ' → logprob: -8.393843650817871
    5. 'is' → logprob: -8.518843650817871
    6. '    ' → logprob: -8.768843650817871
    7. '       ' → logprob: -9.393843650817871
    8. ' not' → logprob: -10.018843650817871
    9. 'not' → logprob: -10.643843650817871
    10. 'found' → logprob: -10.643843650817871

Token 97: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.25545769929885864
    2. ' not' → logprob: -1.5054576396942139
    3. 'all' → logprob: -6.005457878112793
    4. ' all' → logprob: -7.005457878112793
    5. '   ' → logprob: -8.880457878112793
    6. '!' → logprob: -12.255457878112793
    7. '	not' → logprob: -13.505457878112793
    8. 'n' → logprob: -14.005457878112793
    9. 'no' → logprob: -14.255457878112793
    10. ' ' → logprob: -14.380457878112793

Token 98: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.3132633566856384
    2. 'any' → logprob: -1.3132634162902832
    3. '(any' → logprob: -14.813262939453125
    4. '_any' → logprob: -14.813262939453125
    5. '   ' → logprob: -15.188262939453125
    6. ' ' → logprob: -15.313262939453125
    7. ''any' → logprob: -15.688262939453125
    8. '  ' → logprob: -15.813262939453125
    9. '    ' → logprob: -16.813262939453125
    10. '.any' → logprob: -17.063262939453125

Token 99: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0016600665403530002
    2. '(' → logprob: -6.501659870147705
    3. 'w' → logprob: -9.126660346984863
    4. '((' → logprob: -11.251660346984863
    5. ' w' → logprob: -11.376660346984863
    6. ' (' → logprob: -11.501660346984863
    7. '   ' → logprob: -12.626660346984863
    8. '(
' → logprob: -12.751660346984863
    9. '[w' → logprob: -13.001660346984863
    10. '	w' → logprob: -13.751660346984863

Token 100: ' !=' (ID: 1666)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014202055521309376
    2. 'in' → logprob: -4.264202117919922
    3. ' !=' → logprob: -11.139202117919922
    4. '!=' → logprob: -11.514202117919922
    5. ' ' → logprob: -11.639202117919922
    6. ' w' → logprob: -14.014202117919922
    7. '   ' → logprob: -14.264202117919922
    8. 'w' → logprob: -14.514202117919922
    9. '  ' → logprob: -14.764202117919922
    10. ')' → logprob: -14.889202117919922

Token 101: ' other' (ID: 1273)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6764092445373535
    2. 'o' → logprob: -1.5514092445373535
    3. 'other' → logprob: -1.6764092445373535
    4. 'ow' → logprob: -3.4264092445373535
    5. 'x' → logprob: -3.6764092445373535
    6. ' w' → logprob: -4.9264092445373535
    7. 'fw' → logprob: -5.0514092445373535
    8. 'f' → logprob: -5.3014092445373535
    9. ' ow' → logprob: -5.4264092445373535
    10. 'ww' → logprob: -5.6764092445373535

Token 102: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759493708610535
    2. 'and' → logprob: -0.8259493708610535
    3. 'a' → logprob: -12.200949668884277
    4. ' ' → logprob: -13.200949668884277
    5. '   ' → logprob: -13.825949668884277
    6. 'an' → logprob: -14.325949668884277
    7. ' a' → logprob: -14.450949668884277
    8. 'in' → logprob: -14.950949668884277
    9. '  ' → logprob: -15.450949668884277
    10. '
' → logprob: -16.32594871520996

Token 103: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.428707480430603
    2. ' w' → logprob: -1.053707480430603
    3. '(w' → logprob: -12.303707122802734
    4. '	w' → logprob: -13.678707122802734
    5. ' (' → logprob: -15.053707122802734
    6. '   ' → logprob: -15.428707122802734
    7. ' ' → logprob: -15.553707122802734
    8. '_w' → logprob: -15.991207122802734
    9. '(' → logprob: -16.303707122802734
    10. '
' → logprob: -16.553707122802734

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20142659544944763
    2. 'in' → logprob: -1.70142662525177
    3. '  ' → logprob: -12.20142650604248
    4. ' ' → logprob: -13.07642650604248
    5. '   ' → logprob: -13.20142650604248
    6. 'n' → logprob: -13.82642650604248
    7. '	in' → logprob: -14.07642650604248
    8. '```' → logprob: -14.32642650604248
    9. ')' → logprob: -14.82642650604248
    10. 'i' → logprob: -15.07642650604248

Token 105: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0067154900170862675
    2. ' other' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.756715774536133
    4. '(other' → logprob: -17.006715774536133
    5. '   ' → logprob: -17.131715774536133
    6. '.other' → logprob: -18.381715774536133
    7. '_other' → logprob: -18.631715774536133
    8. 'Other' → logprob: -19.006715774536133
    9. 'others' → logprob: -19.131715774536133
    10. '  ' → logprob: -19.756715774536133

Token 106: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43964874744415283
    2. '):' → logprob: -1.0646487474441528
    3. 'for' → logprob: -5.314648628234863
    4. ')' → logprob: -6.064648628234863
    5. '):
' → logprob: -6.689648628234863
    6. ' ):' → logprob: -6.814648628234863
    7. '       ' → logprob: -7.189648628234863
    8. '   ' → logprob: -8.689648628234863
    9. ':' → logprob: -8.939648628234863
    10. '):

' → logprob: -9.814648628234863

Token 107: ' other' (ID: 1273)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.3995700180530548
    2. 'words' → logprob: -1.1495699882507324
    3. 'filtered' → logprob: -5.024569988250732
    4. ' filtered' → logprob: -5.149569988250732
    5. '(words' → logprob: -9.02457046508789
    6. ' other' → logprob: -9.64957046508789
    7. 'other' → logprob: -10.52457046508789
    8. ' ' → logprob: -11.89957046508789
    9. 'word' → logprob: -12.39957046508789
    10. 'w' → logprob: -12.39957046508789

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10803265124559402
    2. ' words' → logprob: -2.358032703399658
    3. 'words' → logprob: -5.358032703399658
    4. 'in' → logprob: -6.108032703399658
    5. ' filtered' → logprob: -7.358032703399658
    6. 'filtered' → logprob: -8.8580322265625
    7. '(words' → logprob: -10.9830322265625
    8. '_words' → logprob: -11.1080322265625
    9. ')' → logprob: -11.2330322265625
    10. '.words' → logprob: -11.4830322265625

Token 109: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.4224819540977478
    2. ' words' → logprob: -1.2974820137023926
    3. 'filtered' → logprob: -2.9224820137023926
    4. ' filtered' → logprob: -4.047482013702393
    5. '(words' → logprob: -10.422481536865234
    6. '   ' → logprob: -10.672481536865234
    7. ' ' → logprob: -11.297481536865234
    8. 'word' → logprob: -11.797481536865234
    9. 'filter' → logprob: -12.734981536865234
    10. '  ' → logprob: -13.172481536865234

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009263493702746928
    2. '):
' → logprob: -7.000926494598389
    3. ')' → logprob: -12.50092601776123
    4. ':' → logprob: -12.62592601776123
    5. '       ' → logprob: -12.62592601776123
    6. ' ):' → logprob: -13.00092601776123
    7. '   ' → logprob: -13.75092601776123
    8. '):
' → logprob: -14.37592601776123
    9. '):

' → logprob: -14.75092601776123
    10. '           ' → logprob: -17.000926971435547

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15798845887184143
    2. ':' → logprob: -2.1579885482788086
    3. '       ' → logprob: -3.7829885482788086
    4. ':
' → logprob: -5.282988548278809
    5. ' :' → logprob: -6.407988548278809
    6. ' continue' → logprob: -8.782988548278809
    7. '):
' → logprob: -8.907988548278809
    8. '):' → logprob: -8.907988548278809
    9. '               ' → logprob: -9.032988548278809
    10. '   ' → logprob: -9.157988548278809

Token 112: ' filtered' (ID: 31972)
  Prédit: ' filtered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' filtered' → logprob: -0.2683877944946289
    2. 'filtered' (adapté à ' filtered') → logprob: -1.643387794494629
    3. '       ' → logprob: -3.393387794494629
    4. '           ' → logprob: -5.018387794494629
    5. '   ' → logprob: -6.518387794494629
    6. '               ' → logprob: -8.268387794494629
    7. '
' → logprob: -10.518387794494629
    8. 'Filtered' → logprob: -10.643387794494629
    9. '(filtered' → logprob: -10.643387794494629
    10. '.filtered' → logprob: -10.768387794494629

Token 113: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009804090950638056
    2. '.' → logprob: -7.000980377197266
    3. 'append' → logprob: -9.875980377197266
    4. ' .' → logprob: -12.125980377197266
    5. '.add' → logprob: -12.625980377197266
    6. '.extend' → logprob: -12.625980377197266
    7. ').' → logprob: -13.375980377197266
    8. '.insert' → logprob: -13.875980377197266
    9. '.push' → logprob: -14.500980377197266
    10. 'Append' → logprob: -14.625980377197266

Token 114: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. 'w' → logprob: -17.75001335144043
    4. ' (' → logprob: -18.75001335144043
    5. '(word' → logprob: -19.50001335144043
    6. '(s' → logprob: -19.87501335144043
    7. '(x' → logprob: -20.25001335144043
    8. '(
' → logprob: -20.25001335144043
    9. '(v' → logprob: -20.37501335144043
    10. '((' → logprob: -20.37501335144043

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8074162653647363e-05
    2. ')
' → logprob: -11.625018119812012
    3. ' )' → logprob: -11.750018119812012
    4. '   ' → logprob: -14.125018119812012
    5. ')

' → logprob: -15.750018119812012
    6. '       ' → logprob: -16.375017166137695
    7. ')return' → logprob: -16.500017166137695
    8. '))' → logprob: -16.875017166137695
    9. '`)' → logprob: -17.250017166137695
    10. '<|end|>' → logprob: -17.375017166137695

Token 116: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21674412488937378
    2. ' n' → logprob: -2.5917441844940186
    3. '   ' → logprob: -2.8417441844940186
    4. 'dp' → logprob: -3.9667441844940186
    5. '    
' → logprob: -4.8417439460754395
    6. '<|end|>' → logprob: -5.0917439460754395
    7. ' 
' → logprob: -5.3417439460754395
    8. ' dp' → logprob: -5.3417439460754395
    9. ')' → logprob: -5.8417439460754395
    10. ' length' → logprob: -5.9667439460754395

Token 117: ' words' (ID: 6391)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33646270632743835
    2. 'm' → logprob: -1.8364627361297607
    3. 'over' → logprob: -2.7114627361297607
    4. 'n' → logprob: -3.4614627361297607
    5. '   ' → logprob: -3.9614627361297607
    6. 'graph' → logprob: -5.586462497711182
    7. 'dist' → logprob: -6.461462497711182
    8. '    
' → logprob: -6.961462497711182
    9. 'size' → logprob: -7.336462497711182
    10. 'import' → logprob: -7.336462497711182

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246875032782555
    2. '=' → logprob: -3.7732467651367188
    3. '_filtered' → logprob: -14.898246765136719
    4. 'filtered' → logprob: -15.523246765136719
    5. ' =
' → logprob: -15.648246765136719
    6. ',' → logprob: -15.773246765136719
    7. '<|end|>' → logprob: -15.773246765136719
    8. '[:]' → logprob: -16.02324676513672
    9. ')' → logprob: -16.52324676513672
    10. '   ' → logprob: -17.14824676513672

Token 119: ' filtered' (ID: 31972)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.16022473573684692
    2. ' filtered' → logprob: -1.9102246761322021
    3. '(filtered' → logprob: -14.785224914550781
    4. '   ' → logprob: -17.03522491455078
    5. '.filtered' → logprob: -17.16022491455078
    6. '_filtered' → logprob: -17.16022491455078
    7. 'filter' → logprob: -17.66022491455078
    8. 'Filtered' → logprob: -18.66022491455078
    9. 'formatted' → logprob: -19.03522491455078
    10. '```' → logprob: -20.41022491455078

Token 120: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3458915650844574
    2. '
' → logprob: -2.2208914756774902
    3. 'n' → logprob: -2.3458914756774902
    4. '    
' → logprob: -3.0958914756774902
    5. '<|end|>' → logprob: -4.22089147567749
    6. ' n' → logprob: -4.34589147567749
    7. ' 
' → logprob: -5.47089147567749
    8. '(n' → logprob: -5.84589147567749
    9. '  
' → logprob: -6.09589147567749
    10. '	n' → logprob: -6.97089147567749

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16690044105052948
    2. 'n' → logprob: -2.166900396347046
    3. 'dp' → logprob: -3.791900396347046
    4. 'm' → logprob: -4.791900634765625
    5. ' n' → logprob: -5.416900634765625
    6. '    
' → logprob: -6.416900634765625
    7. ' dp' → logprob: -6.916900634765625
    8. 'length' → logprob: -8.416900634765625
    9. '    ' → logprob: -8.541900634765625
    10. ',' → logprob: -9.166900634765625

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.021120993420481682
    2. 'm' → logprob: -4.146121025085449
    3. 'dp' → logprob: -6.021121025085449
    4. 'import' → logprob: -6.396121025085449
    5. '   ' → logprob: -7.646121025085449
    6. 'over' → logprob: -8.77112102508545
    7. 'from' → logprob: -9.02112102508545
    8. '#' → logprob: -9.52112102508545
    9. 'N' → logprob: -9.77112102508545
    10. '    
' → logprob: -10.39612102508545

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020718462765216827
    2. '=' → logprob: -3.895718574523926
    3. '<|end|>' → logprob: -8.770718574523926
    4. '=len' → logprob: -11.895718574523926
    5. ',' → logprob: -12.645718574523926
    6. ' ' → logprob: -12.770718574523926
    7. ')' → logprob: -12.770718574523926
    8. ' =
' → logprob: -13.270718574523926
    9. '=int' → logprob: -14.145718574523926
    10. '.' → logprob: -14.520718574523926

Token 124: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5759400725364685
    2. ' len' → logprob: -0.8259400725364685
    3. '(len' → logprob: -14.325940132141113
    4. '[len' → logprob: -17.325939178466797
    5. '=len' → logprob: -17.575939178466797
    6. '	len' → logprob: -18.450939178466797
    7. '<len' → logprob: -20.075939178466797
    8. ',len' → logprob: -20.575939178466797
    9. ' ' → logprob: -21.075939178466797
    10. '   ' → logprob: -22.200939178466797

Token 125: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -4.320199877838604e-07
    2. 'words' → logprob: -14.75
    3. '(' → logprob: -17.25
    4. '(weights' → logprob: -18.5
    5. '(numbers' → logprob: -19.375
    6. '(points' → logprob: -20.125
    7. '(filtered' → logprob: -20.25
    8. '(word' → logprob: -20.375
    9. '(users' → logprob: -20.5
    10. ' words' → logprob: -21.125

Token 126: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026655502151697874
    2. '<|end|>' → logprob: -6.0026655197143555
    3. ' )' → logprob: -9.127665519714355
    4. '<|end|>' → logprob: -10.377665519714355
    5. ')
' → logprob: -11.252665519714355
    6. '#' → logprob: -11.502665519714355
    7. '
' → logprob: -11.752665519714355
    8. 'def' → logprob: -12.627665519714355
    9. '   ' → logprob: -12.752665519714355
    10. '```' → logprob: -13.252665519714355

Token 127: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11749352514743805
    2. '   ' → logprob: -2.2424936294555664
    3. ' dp' → logprob: -5.867493629455566
    4. 'over' → logprob: -7.242493629455566
    5. '    
' → logprob: -7.367493629455566
    6. 'graph' → logprob: -8.992493629455566
    7. 'import' → logprob: -9.242493629455566
    8. 'dist' → logprob: -9.867493629455566
    9. '	dp' → logprob: -9.867493629455566
    10. '#' → logprob: -10.242493629455566

Token 128: ' overlap' (ID: 56631)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.389797180891037
    2. 'over' → logprob: -1.1397972106933594
    3. '#' → logprob: -6.639797210693359
    4. 'graph' → logprob: -7.139797210693359
    5. 'dist' → logprob: -7.514797210693359
    6. 'import' → logprob: -9.38979721069336
    7. '   ' → logprob: -9.88979721069336
    8. '    
' → logprob: -10.76479721069336
    9. 'ov' → logprob: -10.88979721069336
    10. 'adj' → logprob: -10.88979721069336

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044590290635824203
    2. '=' → logprob: -3.2945902347564697
    3. 's' → logprob: -5.044590473175049
    4. '_matrix' → logprob: -9.54458999633789
    5. ' ' → logprob: -12.16958999633789
    6. '   ' → logprob: -13.41958999633789
    7. 'matrix' → logprob: -13.54458999633789
    8. '=[[' → logprob: -13.79458999633789
    9. '_mat' → logprob: -14.29458999633789
    10. '=len' → logprob: -14.91958999633789

Token 130: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.4743627905845642
    2. '[[' → logprob: -0.9743627905845642
    3. '[' → logprob: -8.47436237335205
    4. ' [' → logprob: -9.47436237335205
    5. ' ' → logprob: -16.974363327026367
    6. '[
' → logprob: -17.724363327026367
    7. '   ' → logprob: -17.849363327026367
    8. '[n' → logprob: -17.974363327026367
    9. '([[' → logprob: -18.599363327026367
    10. '[['' → logprob: -19.099363327026367

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '۰' → logprob: -20.000001907348633
    5. '[' → logprob: -21.625001907348633
    6. '０' → logprob: -21.875001907348633
    7. '
' → logprob: -22.000001907348633
    8. 'False' → logprob: -22.500001907348633
    9. '  ' → logprob: -22.750001907348633
    10. '"' → logprob: -22.750001907348633

Token 132: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5846849679946899
    2. 'for' → logprob: -1.08468496799469
    3. ']*' → logprob: -2.8346848487854004
    4. ']' → logprob: -3.0846848487854004
    5. '   ' → logprob: -8.834685325622559
    6. ']*(' → logprob: -10.459685325622559
    7. '           ' → logprob: -11.334685325622559
    8. '	for' → logprob: -11.834685325622559
    9. ')' → logprob: -11.959685325622559
    10. 'n' → logprob: -12.209685325622559

Token 133: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.5
    3. '(n' → logprob: -16.75
    4. '<|end|>' → logprob: -20.125
    5. '	n' → logprob: -20.25
    6. ')n' → logprob: -20.75
    7. '_n' → logprob: -22.0
    8. '[n' → logprob: -22.0
    9. ',n' → logprob: -22.125
    10. '?n' → logprob: -23.0

Token 134: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07890576124191284
    2. 'for' → logprob: -2.5789058208465576
    3. '	for' → logprob: -11.953906059265137
    4. '   ' → logprob: -12.578906059265137
    5. 'n' → logprob: -12.828906059265137
    6. ' ' → logprob: -12.828906059265137
    7. ']' → logprob: -14.828906059265137
    8. ' ' → logprob: -15.703906059265137
    9. '    ' → logprob: -15.953906059265137
    10. '  ' → logprob: -16.82890510559082

Token 135: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10686275362968445
    2. '_' → logprob: -3.106862783432007
    3. ' _' → logprob: -3.106862783432007
    4. 'range' → logprob: -4.856862545013428
    5. '_range' → logprob: -6.606862545013428
    6. ' i' → logprob: -6.731862545013428
    7. ' ' → logprob: -7.856862545013428
    8. '<|end|>' → logprob: -8.106863021850586
    9. '(range' → logprob: -8.356863021850586
    10. ' in' → logprob: -8.481863021850586

Token 136: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.025393370538949966
    2. ' in' → logprob: -4.525393486022949
    3. 'in' → logprob: -4.775393486022949
    4. ' range' → logprob: -5.150393486022949
    5. 'n' → logprob: -12.77539348602295
    6. 'ange' → logprob: -12.77539348602295
    7. ' ' → logprob: -12.90039348602295
    8. '  ' → logprob: -13.77539348602295
    9. '(range' → logprob: -14.15039348602295
    10. '   ' → logprob: -14.52539348602295

Token 137: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.541112427134067e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -15.125075340270996
    4. '   ' → logprob: -15.750075340270996
    5. ' ' → logprob: -16.125076293945312
    6. 'n' → logprob: -18.375076293945312
    7. '	range' → logprob: -18.500076293945312
    8. '  ' → logprob: -18.875076293945312
    9. ')' → logprob: -19.125076293945312
    10. ']' → logprob: -19.500076293945312

Token 138: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2520478665828705
    2. 'n' → logprob: -1.5020478963851929
    3. ' n' → logprob: -9.252047538757324
    4. '(' → logprob: -11.127047538757324
    5. ' (' → logprob: -12.502047538757324
    6. '	n' → logprob: -12.877047538757324
    7. ')n' → logprob: -13.502047538757324
    8. '   ' → logprob: -15.502047538757324
    9. ')' → logprob: -16.75204849243164
    10. '
' → logprob: -16.87704849243164

Token 139: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004973902832716703
    2. ')' → logprob: -8.000497817993164
    3. ']' → logprob: -8.875497817993164
    4. ' )' → logprob: -10.875497817993164
    5. ' ]' → logprob: -13.375497817993164
    6. '   ' → logprob: -14.250497817993164
    7. '])' → logprob: -15.250497817993164
    8. ' ' → logprob: -15.875497817993164
    9. ')],' → logprob: -16.000497817993164
    10. ')])' → logprob: -16.250497817993164

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03025822527706623
    2. ' for' → logprob: -4.0302581787109375
    3. '
' → logprob: -5.0302581787109375
    4. '<|end|>' → logprob: -5.4052581787109375
    5. 'for' → logprob: -7.4052581787109375
    6. '    
' → logprob: -8.405258178710938
    7. '	for' → logprob: -10.030258178710938
    8. ' 
' → logprob: -10.405258178710938
    9. '  
' → logprob: -10.530258178710938
    10. ' ' → logprob: -10.780258178710938

Token 141: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014863509684801102
    2. ' for' → logprob: -4.26486349105835
    3. '   ' → logprob: -7.26486349105835
    4. '	for' → logprob: -16.014863967895508
    5. ' ' → logprob: -17.389863967895508
    6. '    
' → logprob: -18.889863967895508
    7. '  ' → logprob: -19.264863967895508
    8. '
' → logprob: -19.514863967895508
    9. ')' → logprob: -20.139863967895508
    10. 'i' → logprob: -20.389863967895508

Token 142: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519527077674866
    2. ' i' → logprob: -1.5019526481628418
    3. '	i' → logprob: -11.626953125
    4. '   ' → logprob: -11.876953125
    5. ' ' → logprob: -12.126953125
    6. ' ' → logprob: -13.501953125
    7. '  ' → logprob: -14.751953125
    8. '_i' → logprob: -15.001953125
    9. '```' → logprob: -15.626953125
    10. '    ' → logprob: -16.751953125

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012532494962215424
    2. 'in' → logprob: -4.387532711029053
    3. '<|end|>' → logprob: -11.387532234191895
    4. ' ' → logprob: -11.512532234191895
    5. 'n' → logprob: -14.762532234191895
    6. 'In' → logprob: -15.262532234191895
    7. '	in' → logprob: -15.512532234191895
    8. '  ' → logprob: -15.887532234191895
    9. 'range' → logprob: -16.13753318786621
    10. 'import' → logprob: -16.38753318786621

Token 144: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020752996206284
    2. 'range' → logprob: -2.350207567214966
    3. '(range' → logprob: -14.350207328796387
    4. '	range' → logprob: -15.975207328796387
    5. ' xrange' → logprob: -16.225208282470703
    6. ' ' → logprob: -17.850208282470703
    7. 'n' → logprob: -18.225208282470703
    8. 'ange' → logprob: -18.350208282470703
    9. '.range' → logprob: -18.850208282470703
    10. '_range' → logprob: -19.225208282470703

Token 145: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006143742706626654
    2. '(' → logprob: -5.881143569946289
    3. '(range' → logprob: -6.006143569946289
    4. ' range' → logprob: -7.631143569946289
    5. ' (' → logprob: -8.506143569946289
    6. 'range' → logprob: -8.756143569946289
    7. ' in' → logprob: -11.381143569946289
    8. 'n' → logprob: -12.256143569946289
    9. '<|end|>' → logprob: -12.506143569946289
    10. '(
' → logprob: -13.756143569946289

Token 146: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10586190223693848
    2. '):
' → logprob: -2.3558619022369385
    3. ')' → logprob: -5.355861663818359
    4. '   ' → logprob: -7.980861663818359
    5. '):

' → logprob: -8.85586166381836
    6. ' ):' → logprob: -9.10586166381836
    7. 'for' → logprob: -9.35586166381836
    8. '):
' → logprob: -9.73086166381836
    9. ')]' → logprob: -10.85586166381836
    10. 'n' → logprob: -11.10586166381836

Token 147: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10726655274629593
    2. ' for' → logprob: -2.357266664505005
    3. '       ' → logprob: -4.982266426086426
    4. 'for' → logprob: -9.107266426086426
    5. '	for' → logprob: -9.732266426086426
    6. ' ' → logprob: -12.982266426086426
    7. ' j' → logprob: -13.607266426086426
    8. '	   ' → logprob: -14.232266426086426
    9. '    ' → logprob: -14.482266426086426
    10. ' range' → logprob: -15.357266426086426

Token 148: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13707111775875092
    2. 'for' (adapté à ' for') → logprob: -2.637071132659912
    3. '   ' → logprob: -2.887071132659912
    4. '       ' → logprob: -8.137070655822754
    5. ' range' → logprob: -8.387070655822754
    6. '	for' → logprob: -8.887070655822754
    7. 'range' → logprob: -9.762070655822754
    8. ' in' → logprob: -10.637070655822754
    9. ' ' → logprob: -11.262070655822754
    10. '<|end|>' → logprob: -11.262070655822754

Token 149: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19427889585494995
    2. ' j' → logprob: -1.8192789554595947
    3. ' range' → logprob: -4.569278717041016
    4. 'range' → logprob: -5.569278717041016
    5. '<|end|>' → logprob: -8.694278717041016
    6. ' in' → logprob: -10.819278717041016
    7. '   ' → logprob: -11.444278717041016
    8. 'n' → logprob: -11.694278717041016
    9. ' ' → logprob: -11.944278717041016
    10. 'in' → logprob: -11.944278717041016

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007633720524609089
    2. 'in' → logprob: -4.882633686065674
    3. ' ' → logprob: -10.757634162902832
    4. '<|end|>' → logprob: -12.507634162902832
    5. '	in' → logprob: -13.382634162902832
    6. 'range' → logprob: -15.632634162902832
    7. 'import' → logprob: -16.007633209228516
    8. '  ' → logprob: -16.132633209228516
    9. 'In' → logprob: -16.382633209228516
    10. '   ' → logprob: -16.382633209228516

Token 151: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3869439661502838
    2. 'range' → logprob: -1.1369439363479614
    3. '(range' → logprob: -9.636943817138672
    4. 'n' → logprob: -12.011943817138672
    5. '(n' → logprob: -14.136943817138672
    6. ' n' → logprob: -14.261943817138672
    7. '	range' → logprob: -16.136943817138672
    8. ' xrange' → logprob: -16.511943817138672
    9. ' ' → logprob: -17.761943817138672
    10. 'in' → logprob: -17.886943817138672

Token 152: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002831464516930282
    2. 'n' → logprob: -8.500283241271973
    3. ' (' → logprob: -9.500283241271973
    4. '(' → logprob: -12.875283241271973
    5. ' n' → logprob: -13.125283241271973
    6. 'range' → logprob: -16.250282287597656
    7. '(i' → logprob: -17.375282287597656
    8. '   ' → logprob: -17.750282287597656
    9. '	n' → logprob: -18.125282287597656
    10. ' ' → logprob: -18.250282287597656

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03439533710479736
    2. '):
' → logprob: -3.534395217895508
    3. ' ):' → logprob: -6.284395217895508
    4. ')' → logprob: -6.659395217895508
    5. ':' → logprob: -7.909395217895508
    6. '+' → logprob: -8.159395217895508
    7. ']):' → logprob: -8.284395217895508
    8. 'if' → logprob: -9.159395217895508
    9. ']:' → logprob: -9.284395217895508
    10. ')]' → logprob: -9.659395217895508

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01653679460287094
    2. ' if' → logprob: -5.266536712646484
    3. '<|end|>' → logprob: -5.266536712646484
    4. ':' → logprob: -6.266536712646484
    5. '       ' → logprob: -6.266536712646484
    6. '               ' → logprob: -7.391536712646484
    7. '            ' → logprob: -7.516536712646484
    8. ' ' → logprob: -8.266536712646484
    9. '	       ' → logprob: -8.641536712646484
    10. '        ' → logprob: -8.766536712646484

Token 155: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1419615000486374
    2. '               ' → logprob: -2.1419615745544434
    3. ' overlap' → logprob: -5.016961574554443
    4. 'if' (adapté à ' if') → logprob: -5.391961574554443
    5. '           ' → logprob: -5.641961574554443
    6. 'over' → logprob: -9.516961097717285
    7. '            ' → logprob: -9.766961097717285
    8. '(over' → logprob: -11.266961097717285
    9. '                ' → logprob: -11.891961097717285
    10. ' ' → logprob: -12.016961097717285

Token 156: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12693408131599426
    2. 'i' → logprob: -2.126934051513672
    3. '	i' → logprob: -12.126934051513672
    4. ' ' → logprob: -15.126934051513672
    5. '   ' → logprob: -15.751934051513672
    6. '    ' → logprob: -16.376934051513672
    7. ' ' → logprob: -17.001934051513672
    8. '```' → logprob: -17.126934051513672
    9. 'j' → logprob: -17.876934051513672
    10. 'I' → logprob: -18.501934051513672

Token 157: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11286479234695435
    2. '!=' → logprob: -2.2378647327423096
    3. '<|end|>' → logprob: -11.36286449432373
    4. ' ==' → logprob: -11.61286449432373
    5. ' ' → logprob: -12.36286449432373
    6. '==' → logprob: -12.48786449432373
    7. '()!=' → logprob: -12.61286449432373
    8. ' ' → logprob: -12.86286449432373
    9. ')!=' → logprob: -13.11286449432373
    10. ']!=' → logprob: -13.61286449432373

Token 158: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00020401719666551799
    2. ' j' → logprob: -8.500204086303711
    3. '	j' → logprob: -15.500204086303711
    4. ' ' → logprob: -16.50020408630371
    5. '   ' → logprob: -16.75020408630371
    6. '<|end|>' → logprob: -16.75020408630371
    7. '```' → logprob: -18.87520408630371
    8. '  ' → logprob: -19.12520408630371
    9. '$j' → logprob: -19.37520408630371
    10. ')' → logprob: -19.75020408630371

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2552432715892792
    2. ':
' → logprob: -1.5052433013916016
    3. '):
' → logprob: -6.005243301391602
    4. '):' → logprob: -8.380243301391602
    5. '           ' → logprob: -8.755243301391602
    6. '               ' → logprob: -8.755243301391602
    7. ' and' → logprob: -9.255243301391602
    8. '<|end|>' → logprob: -9.505243301391602
    9. '<|end|>' → logprob: -10.380243301391602
    10. ':

' → logprob: -10.630243301391602

Token 160: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000592947646509856
    2. '           ' → logprob: -8.250593185424805
    3. ' overlap' → logprob: -8.625593185424805
    4. 'over' → logprob: -10.375593185424805
    5. '                   ' → logprob: -10.625593185424805
    6. '                       ' → logprob: -11.000593185424805
    7. '                ' → logprob: -11.125593185424805
    8. '       ' → logprob: -11.125593185424805
    9. ':
' → logprob: -11.750593185424805
    10. ':' → logprob: -11.750593185424805

Token 161: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.4304500222206116
    2. 'over' → logprob: -1.0554499626159668
    3. '               ' → logprob: -6.555449962615967
    4. '                   ' → logprob: -8.680450439453125
    5. ' over' → logprob: -9.430450439453125
    6. '_overlap' → logprob: -10.805450439453125
    7. '                       ' → logprob: -10.930450439453125
    8. '           ' → logprob: -11.430450439453125
    9. '(over' → logprob: -11.555450439453125
    10. '.over' → logprob: -13.055450439453125

Token 162: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -13.125005722045898
    3. ' [' → logprob: -13.500005722045898
    4. '[I' → logprob: -13.500005722045898
    5. '\[' → logprob: -15.500005722045898
    6. '[j' → logprob: -15.875005722045898
    7. ')[' → logprob: -16.1250057220459
    8. '][' → logprob: -16.2500057220459
    9. '}[' → logprob: -16.6250057220459
    10. '[a' → logprob: -17.0000057220459

Token 163: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003891757456585765
    2. '[i' → logprob: -6.128891944885254
    3. ']' → logprob: -6.878891944885254
    4. '[j' → logprob: -7.628891944885254
    5. ' ][' → logprob: -9.378891944885254
    6. '[' → logprob: -10.253891944885254
    7. ']][' → logprob: -10.378891944885254
    8. ']=' → logprob: -11.253891944885254
    9. ')][' → logprob: -11.753891944885254
    10. '=' → logprob: -12.003891944885254

Token 164: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.246537173457909e-06
    2. ' j' → logprob: -12.500003814697266
    3. '[j' → logprob: -15.625003814697266
    4. ']' → logprob: -16.000003814697266
    5. '	j' → logprob: -17.250003814697266
    6. '   ' → logprob: -17.375003814697266
    7. ',j' → logprob: -18.125003814697266
    8. ':j' → logprob: -18.375003814697266
    9. '(j' → logprob: -18.500003814697266
    10. '```' → logprob: -18.500003814697266

Token 165: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000614624354057014
    2. ' ]' → logprob: -7.500614643096924
    3. ']=' → logprob: -9.875614166259766
    4. '=' → logprob: -11.750614166259766
    5. ')' → logprob: -13.250614166259766
    6. ' =' → logprob: -14.500614166259766
    7. '   ' → logprob: -16.750614166259766
    8. '[' → logprob: -17.875614166259766
    9. ')]' → logprob: -18.125614166259766
    10. ']+=' → logprob: -18.375614166259766

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401917457581
    2. ' =' → logprob: -0.8259401917457581
    3. ')' → logprob: -14.950940132141113
    4. ' ' → logprob: -15.450940132141113
    5. ']' → logprob: -16.07594108581543
    6. ' +=' → logprob: -16.95094108581543
    7. 'compute' → logprob: -17.95094108581543
    8. ']=' → logprob: -18.32594108581543
    9. ')=' → logprob: -18.32594108581543
    10. '+=' → logprob: -18.45094108581543

Token 167: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.048587486147880554
    2. ' compute' → logprob: -3.0485875606536865
    3. '   ' → logprob: -17.548587799072266
    4. 'com' → logprob: -17.673587799072266
    5. '.compute' → logprob: -18.548587799072266
    6. ' ' → logprob: -19.048587799072266
    7. '_compute' → logprob: -19.298587799072266
    8. 'comput' → logprob: -19.798587799072266
    9. 'max' → logprob: -19.923587799072266
    10. 'computed' → logprob: -19.923587799072266

Token 168: '_overlap' (ID: 179163)
  Prédit: '_overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.125000953674316
    3. 'over' → logprob: -15.875000953674316
    4. '_over' → logprob: -16.500001907348633
    5. ' overlap' → logprob: -19.500001907348633
    6. '_override' → logprob: -19.750001907348633
    7. '(over' → logprob: -20.250001907348633
    8. '"_' → logprob: -21.000001907348633
    9. 'Overlap' → logprob: -21.000001907348633
    10. '```' → logprob: -21.125001907348633

Token 169: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -14.500005722045898
    4. '(word' → logprob: -15.250005722045898
    5. 'words' → logprob: -18.1250057220459
    6. '(tokens' → logprob: -18.2500057220459
    7. '(users' → logprob: -19.2500057220459
    8. '(strings' → logprob: -19.2500057220459
    9. '(w' → logprob: -19.5000057220459
    10. '(
' → logprob: -19.5000057220459

Token 170: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005763856461271644
    2. '[' → logprob: -8.00057601928711
    3. '[j' → logprob: -8.37557601928711
    4. ' [' → logprob: -12.62557601928711
    5. ')[' → logprob: -13.00057601928711
    6. ')' → logprob: -13.12557601928711
    7. '[
' → logprob: -14.37557601928711
    8. '   ' → logprob: -15.25057601928711
    9. '[I' → logprob: -15.37557601928711
    10. '```' → logprob: -15.50057601928711

Token 171: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.20198558270931244
    2. '[j' → logprob: -1.8269855976104736
    3. '],[' → logprob: -4.2019853591918945
    4. '][' → logprob: -5.3269853591918945
    5. ',' → logprob: -6.3269853591918945
    6. ',j' → logprob: -9.076985359191895
    7. ']' → logprob: -9.201985359191895
    8. '[' → logprob: -9.326985359191895
    9. ' ],' → logprob: -10.076985359191895
    10. '[i' → logprob: -11.326985359191895

Token 172: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.07889816164970398
    2. ' words' → logprob: -2.5788981914520264
    3. '(words' → logprob: -11.953898429870605
    4. '.words' → logprob: -14.203898429870605
    5. ')' → logprob: -14.453898429870605
    6. '_words' → logprob: -15.453898429870605
    7. ' ' → logprob: -15.953898429870605
    8. 'Words' → logprob: -16.32889747619629
    9. 'word' → logprob: -16.57889747619629
    10. '   ' → logprob: -16.57889747619629

Token 173: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.981667537620524e-06
    2. 'j' → logprob: -13.625001907348633
    3. '```' → logprob: -15.125001907348633
    4. '[' → logprob: -15.500001907348633
    5. '][' → logprob: -16.125001907348633
    6. ' [' → logprob: -16.500001907348633
    7. '[i' → logprob: -16.875001907348633
    8. '[
' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '[js' → logprob: -18.250001907348633

Token 174: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5769361853599548
    2. '])' → logprob: -0.8269361853599548
    3. ')]' → logprob: -7.9519362449646
    4. ')])' → logprob: -8.201935768127441
    5. '))' → logprob: -8.326935768127441
    6. ')
' → logprob: -9.951935768127441
    7. ' )' → logprob: -10.826935768127441
    8. '})' → logprob: -11.076935768127441
    9. '])
' → logprob: -11.326935768127441
    10. ']' → logprob: -11.951935768127441

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.146260604262352
    2. 'dp' → logprob: -2.1462604999542236
    3. ' dp' → logprob: -5.021260738372803
    4. 'from' → logprob: -5.021260738372803
    5. '
' → logprob: -5.521260738372803
    6. '    
' → logprob: -7.396260738372803
    7. ' from' → logprob: -7.396260738372803
    8. ' for' → logprob: -9.396260261535645
    9. 'for' → logprob: -9.521260261535645
    10. 'import' → logprob: -9.646260261535645

Token 176: ' full' (ID: 3149)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00024846551241353154
    2. 'from' → logprob: -8.875248908996582
    3. '   ' → logprob: -9.500248908996582
    4. ' dp' → logprob: -11.625248908996582
    5. 'dist' → logprob: -11.625248908996582
    6. '    
' → logprob: -11.750248908996582
    7. 'import' → logprob: -12.375248908996582
    8. '#' → logprob: -13.625248908996582
    9. 'memo' → logprob: -14.500248908996582
    10. '
' → logprob: -14.500248908996582

Token 177: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.005291868932545185
    2. 'mask' → logprob: -5.255291938781738
    3. '_' → logprob: -11.505291938781738
    4. '_masks' → logprob: -11.505291938781738
    5. '=' → logprob: -11.630291938781738
    6. '_path' → logprob: -11.880291938781738
    7. '_set' → logprob: -12.380291938781738
    8. ' =' → logprob: -12.630291938781738
    9. '_bit' → logprob: -12.880291938781738
    10. '_MASK' → logprob: -13.380291938781738

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004620472434908152
    2. '=' → logprob: -5.379620552062988
    3. ')' → logprob: -15.504620552062988
    4. ' =)' → logprob: -17.754619598388672
    5. ' ' → logprob: -18.254619598388672
    6. ',' → logprob: -18.379619598388672
    7. ' =
' → logprob: -18.379619598388672
    8. '.' → logprob: -19.004619598388672
    9. '=int' → logprob: -19.254619598388672
    10. 's' → logprob: -19.254619598388672

Token 179: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25193724036216736
    2. ' (' → logprob: -1.5019372701644897
    3. '1' → logprob: -11.876936912536621
    4. '   ' → logprob: -13.751936912536621
    5. ' ' → logprob: -16.876937866210938
    6. '[' → logprob: -17.501937866210938
    7. '((' → logprob: -18.126937866210938
    8. '2' → logprob: -18.876937866210938
    9. '（' → logprob: -19.376937866210938
    10. '0' → logprob: -19.501937866210938

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.25000286102295
    3. '(' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.75000286102295
    5. ')' → logprob: -18.500001907348633
    6. '2' → logprob: -18.875001907348633
    7. '```' → logprob: -19.625001907348633
    8. '
' → logprob: -19.687501907348633
    9. '0' → logprob: -20.375001907348633
    10. '`' → logprob: -20.625001907348633

Token 181: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.04858771339058876
    2. '<<' → logprob: -3.0485877990722656
    3. ' <<
' → logprob: -16.173587799072266
    4. ')<<' → logprob: -16.923587799072266
    5. '<<(' → logprob: -17.673587799072266
    6. '1' → logprob: -17.673587799072266
    7. ' ' → logprob: -17.798587799072266
    8. '<<<' → logprob: -17.923587799072266
    9. ' <<=' → logprob: -18.173587799072266
    10. '<' → logprob: -18.548587799072266

Token 182: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033546582562848926
    2. ' n' → logprob: -8.000335693359375
    3. ')n' → logprob: -17.125335693359375
    4. '	n' → logprob: -17.750335693359375
    5. '   ' → logprob: -18.375335693359375
    6. '(n' → logprob: -19.750335693359375
    7. '_n' → logprob: -20.625335693359375
    8. '```' → logprob: -21.000335693359375
    9. ')' → logprob: -21.625335693359375
    10. '$n' → logprob: -21.625335693359375

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. ' )' → logprob: -11.125015258789062
    3. ')-' → logprob: -14.375015258789062
    4. ')
' → logprob: -20.125015258789062
    5. '）' → logprob: -20.375015258789062
    6. '   ' → logprob: -20.750015258789062
    7. '")' → logprob: -21.000015258789062
    8. '),' → logprob: -21.125015258789062
    9. ']' → logprob: -21.250015258789062
    10. '()' → logprob: -21.750015258789062

Token 184: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5368481874465942
    2. '-' → logprob: -0.9118481874465942
    3. ')' → logprob: -4.911848068237305
    4. '<|end|>' → logprob: -5.286848068237305
    5. '
' → logprob: -7.161848068237305
    6. ')-' → logprob: -8.786848068237305
    7. ' ' → logprob: -9.411848068237305
    8. '<|end|>' → logprob: -9.661848068237305
    9. '```' → logprob: -10.411848068237305
    10. '   ' → logprob: -10.536848068237305

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -19.125003814697266
    4. '   ' → logprob: -19.750003814697266
    5. '0' → logprob: -20.500003814697266
    6. '

' → logprob: -20.875003814697266
    7. '۱' → logprob: -21.187503814697266
    8. '１' → logprob: -21.250003814697266
    9. ')' → logprob: -21.375003814697266
    10. '
' → logprob: -21.375003814697266

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.375
    4. '<|end|>' → logprob: -19.0
    5. '   ' → logprob: -19.875
    6. '۱' → logprob: -20.125
    7. '１' → logprob: -20.625
    8. '১' → logprob: -21.0
    9. '`' → logprob: -21.6875
    10. '१' → logprob: -21.6875

Token 187: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.422488272190094
    2. 'dp' → logprob: -1.4224882125854492
    3. '   ' → logprob: -2.797488212585449
    4. ' dp' → logprob: -3.297488212585449
    5. '    
' → logprob: -5.797488212585449
    6. ' DP' → logprob: -7.047488212585449
    7. '_dp' → logprob: -7.422488212585449
    8. '	dp' → logprob: -8.42248821258545
    9. '  
' → logprob: -8.79748821258545
    10. 'DP' → logprob: -8.79748821258545

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.813555896282196
    2. 'dp' → logprob: -1.0635559558868408
    3. ' dp' → logprob: -1.5635559558868408
    4. '
' → logprob: -6.563555717468262
    5. '    
' → logprob: -7.688555717468262
    6. '	dp' → logprob: -8.938555717468262
    7. ' DP' → logprob: -10.313555717468262
    8. ' ' → logprob: -11.313555717468262
    9. '_dp' → logprob: -11.563555717468262
    10. ' memo' → logprob: -11.813555717468262

Token 189: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.14968761801719666
    2. 'dp' (adapté à ' dp') → logprob: -2.0246875286102295
    3. '   ' → logprob: -5.024687767028809
    4. '
' → logprob: -8.774687767028809
    5. '    
' → logprob: -9.024687767028809
    6. ' from' → logprob: -10.274687767028809
    7. ' DP' → logprob: -10.274687767028809
    8. ' memo' → logprob: -11.024687767028809
    9. '	dp' → logprob: -11.399687767028809
    10. ' 
' → logprob: -11.399687767028809

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017029138980433345
    2. '=' → logprob: -6.376702785491943
    3. '[' → logprob: -15.251703262329102
    4. ' ' → logprob: -15.501703262329102
    5. '=[' → logprob: -16.5017032623291
    6. '   ' → logprob: -16.7517032623291
    7. ']' → logprob: -16.7517032623291
    8. ' =[' → logprob: -16.7517032623291
    9. '  ' → logprob: -17.2517032623291
    10. ')' → logprob: -17.2517032623291

Token 191: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.03636583685874939
    2. ' [[' → logprob: -3.5363657474517822
    3. '[' → logprob: -5.036365985870361
    4. ' [' → logprob: -9.286365509033203
    5. '[-' → logprob: -13.786365509033203
    6. '[(' → logprob: -13.786365509033203
    7. '{}' → logprob: -14.661365509033203
    8. '{' → logprob: -14.786365509033203
    9. '[n' → logprob: -14.786365509033203
    10. ' ' → logprob: -16.286365509033203

Token 192: 'float' (ID: 7829)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9613444805145264
    2. 'float' → logprob: -0.9613444805145264
    3. '0' → logprob: -1.4613444805145264
    4. '-f' → logprob: -5.9613447189331055
    5. 'False' → logprob: -7.5863447189331055
    6. ' float' → logprob: -9.211344718933105
    7. '(float' → logprob: -10.086344718933105
    8. '-n' → logprob: -10.711344718933105
    9. '(-' → logprob: -10.961344718933105
    10. ' -' → logprob: -11.086344718933105

Token 193: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005932116415351629
    2. ''in' → logprob: -5.255932331085205
    3. ''' → logprob: -7.380932331085205
    4. 'inf' → logprob: -9.630931854248047
    5. '   ' → logprob: -13.130931854248047
    6. '(in' → logprob: -13.630931854248047
    7. '("' → logprob: -13.755931854248047
    8. 'in' → logprob: -14.005931854248047
    9. '('-' → logprob: -14.505931854248047
    10. ''s' → logprob: -14.755931854248047

Token 194: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.1160349458805285e-05
    2. ''in' → logprob: -11.875011444091797
    3. ''' → logprob: -13.000011444091797
    4. 'in' → logprob: -13.625011444091797
    5. '-inf' → logprob: -14.375011444091797
    6. '('' → logprob: -17.375011444091797
    7. '-' → logprob: -17.625011444091797
    8. '   ' → logprob: -17.625011444091797
    9. 'info' → logprob: -18.500011444091797
    10. '0' → logprob: -18.625011444091797

Token 195: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02371370419859886
    2. ')' → logprob: -3.7737135887145996
    3. ']' → logprob: -8.148714065551758
    4. ' )' → logprob: -8.773714065551758
    5. '')]' → logprob: -10.898714065551758
    6. ' ]' → logprob: -13.648714065551758
    7. ')][' → logprob: -14.398714065551758
    8. ')
' → logprob: -14.398714065551758
    9. '")]' → logprob: -14.523714065551758
    10. '   ' → logprob: -14.773714065551758

Token 196: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7152600288391113
    2. ']*(' → logprob: -0.7152600288391113
    3. ' for' → logprob: -4.715260028839111
    4. ']*' → logprob: -4.840260028839111
    5. 'for' → logprob: -5.340260028839111
    6. '*(' → logprob: -8.965259552001953
    7. '   ' → logprob: -9.965259552001953
    8. ' ]' → logprob: -11.590259552001953
    9. '][' → logprob: -11.840259552001953
    10. ']+' → logprob: -12.715259552001953

Token 197: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004962982144206762
    2. '(n' → logprob: -5.504962921142578
    3. '(' → logprob: -7.379962921142578
    4. ' n' → logprob: -8.504962921142578
    5. ' (' → logprob: -10.504962921142578
    6. '   ' → logprob: -10.754962921142578
    7. '
' → logprob: -11.879962921142578
    8. ' ' → logprob: -14.254962921142578
    9. '```' → logprob: -14.379962921142578
    10. '[n' → logprob: -16.254962921142578

Token 198: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010115023702383041
    2. 'for' → logprob: -4.635115146636963
    3. ']' → logprob: -8.260114669799805
    4. '   ' → logprob: -10.635114669799805
    5. ' ]' → logprob: -10.635114669799805
    6. ' ' → logprob: -10.760114669799805
    7. '
' → logprob: -11.385114669799805
    8. '	for' → logprob: -11.510114669799805
    9. ')' → logprob: -12.135114669799805
    10. '    ' → logprob: -13.760114669799805

Token 199: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09917905181646347
    2. '_' → logprob: -2.7241790294647217
    3. ' _' → logprob: -3.5991790294647217
    4. 'range' → logprob: -6.724179267883301
    5. '_range' → logprob: -9.5991792678833
    6. ' in' → logprob: -9.9741792678833
    7. ' i' → logprob: -9.9741792678833
    8. ' n' → logprob: -10.3491792678833
    9. ' ' → logprob: -10.5991792678833
    10. '(range' → logprob: -10.8491792678833

Token 200: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10710622370243073
    2. ' range' → logprob: -2.6071062088012695
    3. 'in' → logprob: -4.1071062088012695
    4. ' in' → logprob: -4.4821062088012695
    5. '(range' → logprob: -9.85710620880127
    6. 'ange' → logprob: -13.60710620880127
    7. '_range' → logprob: -14.10710620880127
    8. '_' → logprob: -14.23210620880127
    9. 'n' → logprob: -14.23210620880127
    10. ' ' → logprob: -14.48210620880127

Token 201: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150877207517624
    2. ' range' → logprob: -4.018150806427002
    3. '(range' → logprob: -14.14315128326416
    4. '   ' → logprob: -16.393150329589844
    5. ' ' → logprob: -16.518150329589844
    6. '	range' → logprob: -16.768150329589844
    7. '  ' → logprob: -19.268150329589844
    8. ')' → logprob: -19.518150329589844
    9. ']' → logprob: -19.768150329589844
    10. '[' → logprob: -20.393150329589844

Token 202: '(' (ID: 7)
  Prédit: '(full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(full' → logprob: -0.03751183673739433
    2. '(' → logprob: -3.7875118255615234
    3. '(n' → logprob: -4.287511825561523
    4. 'full' → logprob: -7.912511825561523
    5. 'n' → logprob: -10.412511825561523
    6. ' full' → logprob: -10.912511825561523
    7. ' (' → logprob: -12.162511825561523
    8. '((' → logprob: -12.787511825561523
    9. '1' → logprob: -13.037511825561523
    10. ' n' → logprob: -14.287511825561523

Token 203: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.792751032160595e-05
    2. ' n' → logprob: -9.50008773803711
    3. '(n' → logprob: -11.50008773803711
    4. '   ' → logprob: -12.87508773803711
    5. ')n' → logprob: -15.62508773803711
    6. ')' → logprob: -16.00008773803711
    7. '(' → logprob: -17.50008773803711
    8. '1' → logprob: -17.50008773803711
    9. ' ' → logprob: -17.75008773803711
    10. '
' → logprob: -17.87508773803711

Token 204: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07890058308839798
    2. ' <<' → logprob: -2.5789005756378174
    3. ' <<=' → logprob: -12.328900337219238
    4. '<<(' → logprob: -13.203900337219238
    5. '<<<' → logprob: -13.453900337219238
    6. ')<<' → logprob: -13.703900337219238
    7. '()<<' → logprob: -13.953900337219238
    8. ']<<' → logprob: -14.953900337219238
    9. '<n' → logprob: -15.828900337219238
    10. '1' → logprob: -15.953900337219238

Token 205: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014025058771949261
    2. ' n' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.000141143798828
    4. ')n' → logprob: -16.000141143798828
    5. '(n' → logprob: -16.000141143798828
    6. '```' → logprob: -17.500141143798828
    7. '	n' → logprob: -17.875141143798828
    8. ')' → logprob: -18.000141143798828
    9. '_n' → logprob: -18.875141143798828
    10. '<n' → logprob: -19.500141143798828

Token 206: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.160971628967673e-05
    2. ')]
' → logprob: -9.875082015991211
    3. ')' → logprob: -10.500082015991211
    4. ')]

' → logprob: -14.125082015991211
    5. ')][' → logprob: -14.250082015991211
    6. ' )' → logprob: -14.375082015991211
    7. ']' → logprob: -15.000082015991211
    8. ')]
' → logprob: -15.875082015991211
    9. '   ' → logprob: -16.87508201599121
    10. ')])' → logprob: -17.00008201599121

Token 207: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8587117195129395
    2. '   ' → logprob: -0.9837117195129395
    3. 'for' → logprob: -1.6087117195129395
    4. '
' → logprob: -6.6087117195129395
    5. '    
' → logprob: -7.7337117195129395
    6. 'dp' → logprob: -9.108711242675781
    7. 'def' → logprob: -10.108711242675781
    8. ' 
' → logprob: -10.233711242675781
    9. '```' → logprob: -10.233711242675781
    10. '<|end|>' → logprob: -10.233711242675781

Token 208: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007153053302317858
    2. ' for' → logprob: -5.257153034210205
    3. '   ' → logprob: -6.257153034210205
    4. '	for' → logprob: -15.007153511047363
    5. '```' → logprob: -15.632153511047363
    6. '    
' → logprob: -16.757152557373047
    7. ' ' → logprob: -17.257152557373047
    8. '
' → logprob: -17.257152557373047
    9. 'For' → logprob: -18.507152557373047
    10. '       ' → logprob: -18.632152557373047

Token 209: ' path' (ID: 3104)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7120533811976202e-05
    2. ' for' → logprob: -11.500017166137695
    3. '   ' → logprob: -11.875017166137695
    4. '    
' → logprob: -17.625017166137695
    5. '	for' → logprob: -18.000017166137695
    6. '#' → logprob: -19.125017166137695
    7. 'For' → logprob: -19.750017166137695
    8. '
' → logprob: -20.000017166137695
    9. '       ' → logprob: -20.375017166137695
    10. 'def' → logprob: -20.500017166137695

Token 210: ' reconstruction' (ID: 68152)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07005058228969574
    2. '=' → logprob: -2.6950504779815674
    3. '=[]' → logprob: -10.320050239562988
    4. '=[' → logprob: -10.445050239562988
    5. 's' → logprob: -10.445050239562988
    6. '[' → logprob: -11.570050239562988
    7. '=[[' → logprob: -12.195050239562988
    8. '   ' → logprob: -12.820050239562988
    9. '```' → logprob: -13.320050239562988
    10. ' ' → logprob: -13.445050239562988

Token 211: ' not' (ID: 625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6693298816680908
    2. '
' → logprob: -1.4193298816680908
    3. ' for' → logprob: -1.4193298816680908
    4. '   ' → logprob: -5.544329643249512
    5. 'dp' → logprob: -9.044329643249512
    6. '    
' → logprob: -9.419329643249512
    7. ' 
' → logprob: -11.044329643249512
    8. '  
' → logprob: -11.169329643249512
    9. '	for' → logprob: -11.419329643249512
    10. '<|end|>' → logprob: -11.669329643249512

Token 212: ' needed' (ID: 6118)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4104277491569519
    2. ' =' → logprob: -1.1604278087615967
    3. '[' → logprob: -4.910427570343018
    4. 'implemented' → logprob: -5.660427570343018
    5. '=[]' → logprob: -6.410427570343018
    6. '.append' → logprob: -6.660427570343018
    7. '_needed' → logprob: -6.660427570343018
    8. '_initialized' → logprob: -6.660427570343018
    9. 'initialized' → logprob: -7.035427570343018
    10. '=[' → logprob: -7.160427570343018

Token 213: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8375270962715149
    2. 'for' → logprob: -1.2125270366668701
    3. ' for' → logprob: -1.7125270366668701
    4. '
' → logprob: -2.46252703666687
    5. '<|end|>' → logprob: -5.587527275085449
    6. '    
' → logprob: -8.58752727508545
    7. '<|end|>' → logprob: -9.21252727508545
    8. '	for' → logprob: -10.33752727508545
    9. ' ' → logprob: -10.33752727508545
    10. '  
' → logprob: -11.58752727508545

Token 214: ' only' (ID: 1606)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5245542526245117
    2. ' for' → logprob: -0.8995542526245117
    3. '<|end|>' → logprob: -7.024554252624512
    4. '   ' → logprob: -8.149554252624512
    5. ' but' → logprob: -9.524554252624512
    6. '
' → logprob: -10.149554252624512
    7. '    
' → logprob: -10.274554252624512
    8. ' ' → logprob: -11.149554252624512
    9. '<|end|>' → logprob: -11.274554252624512
    10. 'but' → logprob: -11.774554252624512

Token 215: ' length' (ID: 5517)
  Prédit: ' lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -0.6113658547401428
    2. 'length' → logprob: -1.236365795135498
    3. ' length' → logprob: -1.861365795135498
    4. ' the' → logprob: -4.611365795135498
    5. 'the' → logprob: -6.861365795135498
    6. ' for' → logprob: -8.861366271972656
    7. ' ' → logprob: -9.986366271972656
    8. 'dp' → logprob: -10.236366271972656
    9. 'def' → logprob: -10.361366271972656
    10. 'for' → logprob: -10.361366271972656

Token 216: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19067686796188354
    2. ' for' → logprob: -1.9406769275665283
    3. '   ' → logprob: -3.6906769275665283
    4. '
' → logprob: -5.315676689147949
    5. '    
' → logprob: -9.44067668914795
    6. '	for' → logprob: -11.06567668914795
    7. ' 
' → logprob: -11.06567668914795
    8. '  
' → logprob: -12.44067668914795
    9. '```' → logprob: -12.69067668914795
    10. ' ' → logprob: -12.94067668914795

Token 217: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7148972749710083
    2. 'for' → logprob: -0.7148972749710083
    3. '   ' → logprob: -3.8398971557617188
    4. '	for' → logprob: -11.464897155761719
    5. '    
' → logprob: -12.214897155761719
    6. ' 
' → logprob: -13.464897155761719
    7. '```' → logprob: -13.714897155761719
    8. ' ' → logprob: -14.464897155761719
    9. '<|end|>' → logprob: -14.964897155761719
    10. '  ' → logprob: -16.08989715576172

Token 218: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003097381442785263
    2. ' for' → logprob: -6.2530975341796875
    3. '   ' → logprob: -6.7530975341796875
    4. '	for' → logprob: -14.128097534179688
    5. '```' → logprob: -16.378097534179688
    6. '    
' → logprob: -17.878097534179688
    7. '
' → logprob: -18.378097534179688
    8. ' ' → logprob: -18.628097534179688
    9. '  ' → logprob: -19.628097534179688
    10. '       ' → logprob: -20.378097534179688

Token 219: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00861468818038702
    2. ' i' → logprob: -4.758614540100098
    3. '	i' → logprob: -16.508615493774414
    4. ' ' → logprob: -18.258615493774414
    5. '(i' → logprob: -18.383615493774414
    6. 'mask' → logprob: -18.633615493774414
    7. '   ' → logprob: -19.258615493774414
    8. '_i' → logprob: -19.383615493774414
    9. 'j' → logprob: -20.133615493774414
    10. '{i' → logprob: -20.258615493774414

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023268891498446465
    2. 'in' → logprob: -3.773268938064575
    3. '   ' → logprob: -11.023268699645996
    4. '(' → logprob: -13.523268699645996
    5. ' ' → logprob: -13.648268699645996
    6. ',' → logprob: -14.023268699645996
    7. '  ' → logprob: -14.273268699645996
    8. '```' → logprob: -14.648268699645996
    9. '[' → logprob: -14.773268699645996
    10. 'In' → logprob: -14.898268699645996

Token 221: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007630057632923126
    2. ' range' → logprob: -4.882629871368408
    3. '(range' → logprob: -11.382630348205566
    4. '   ' → logprob: -11.882630348205566
    5. 'n' → logprob: -13.757630348205566
    6. ' ' → logprob: -14.007630348205566
    7. '
' → logprob: -14.007630348205566
    8. ')' → logprob: -14.632630348205566
    9. '(' → logprob: -14.757630348205566
    10. '```' → logprob: -15.007630348205566

Token 222: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.500015258789062
    3. 'n' → logprob: -12.250015258789062
    4. ' n' → logprob: -15.750015258789062
    5. '   ' → logprob: -17.500015258789062
    6. ' (' → logprob: -17.875015258789062
    7. '	n' → logprob: -18.125015258789062
    8. '(
' → logprob: -18.750015258789062
    9. '(len' → logprob: -19.125015258789062
    10. ')n' → logprob: -19.125015258789062

Token 223: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4741344451904297
    2. '):' → logprob: -0.9741344451904297
    3. '):
' → logprob: -10.59913444519043
    4. '   ' → logprob: -11.22413444519043
    5. ')' → logprob: -11.97413444519043
    6. ' ):' → logprob: -11.97413444519043
    7. ' ):
' → logprob: -12.22413444519043
    8. '):

' → logprob: -13.97413444519043
    9. ':' → logprob: -15.47413444519043
    10. '       ' → logprob: -16.09913444519043

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2390304058790207
    2. ' dp' → logprob: -1.614030361175537
    3. 'dp' → logprob: -4.364030361175537
    4. '   ' → logprob: -7.239030361175537
    5. '	dp' → logprob: -9.864030838012695
    6. '(dp' → logprob: -10.739030838012695
    7. '_dp' → logprob: -13.364030838012695
    8. '           ' → logprob: -14.114030838012695
    9. ' ' → logprob: -14.239030838012695
    10. '     ' → logprob: -14.364030838012695

Token 225: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.029857859015464783
    2. ' dp' → logprob: -3.529857873916626
    3. '   ' → logprob: -9.154857635498047
    4. '	dp' → logprob: -13.529857635498047
    5. '_dp' → logprob: -16.404857635498047
    6. '(dp' → logprob: -16.529857635498047
    7. '       ' → logprob: -17.029857635498047
    8. 'd' → logprob: -17.404857635498047
    9. ' ' → logprob: -17.404857635498047
    10. '```' → logprob: -17.404857635498047

Token 226: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015920029545668513
    2. '[i' → logprob: -8.75015926361084
    3. '][' → logprob: -15.87515926361084
    4. ' [' → logprob: -16.250158309936523
    5. '[s' → logprob: -16.375158309936523
    6. '[state' → logprob: -16.500158309936523
    7. '[[' → logprob: -17.250158309936523
    8. '1' → logprob: -17.375158309936523
    9. '[len' → logprob: -17.875158309936523
    10. '[first' → logprob: -18.000158309936523

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012513063848018646
    2. '(' → logprob: -4.387513160705566
    3. '[' → logprob: -13.137513160705566
    4. '][' → logprob: -14.512513160705566
    5. ' ' → logprob: -15.012513160705566
    6. ' (' → logprob: -15.637513160705566
    7. '{' → logprob: -16.01251220703125
    8. '0' → logprob: -16.63751220703125
    9. '   ' → logprob: -16.63751220703125
    10. ')(' → logprob: -16.76251220703125

Token 228: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.20141403377056122
    2. '<<' → logprob: -1.7014139890670776
    3. '[i' → logprob: -15.951414108276367
    4. ']<<' → logprob: -15.951414108276367
    5. '()<<' → logprob: -16.201414108276367
    6. ')<<' → logprob: -16.326414108276367
    7. '][' → logprob: -16.576414108276367
    8. '<<<' → logprob: -16.701414108276367
    9. ' <<=' → logprob: -17.201414108276367
    10. ' ' → logprob: -17.201414108276367

Token 229: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.250335693359375
    4. '	i' → logprob: -18.125335693359375
    5. ' ' → logprob: -18.250335693359375
    6. '(i' → logprob: -19.625335693359375
    7. '[i' → logprob: -19.625335693359375
    8. '
' → logprob: -19.625335693359375
    9. '```' → logprob: -20.250335693359375
    10. '  ' → logprob: -20.750335693359375

Token 230: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029387136455625296
    2. '][' → logprob: -5.877938747406006
    3. ']=' → logprob: -9.127938270568848
    4. ' ]' → logprob: -10.752938270568848
    5. '[i' → logprob: -12.877938270568848
    6. ' ][' → logprob: -14.877938270568848
    7. 'i' → logprob: -14.877938270568848
    8. ']
' → logprob: -15.877938270568848
    9. ' ' → logprob: -16.627939224243164
    10. 'len' → logprob: -17.002939224243164

Token 231: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.5597102396423e-05
    2. ' i' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.750036239624023
    4. '[i' → logprob: -17.875036239624023
    5. '	i' → logprob: -18.375036239624023
    6. '(i' → logprob: -18.750036239624023
    7. ')i' → logprob: -18.750036239624023
    8. '=i' → logprob: -18.875036239624023
    9. ',i' → logprob: -19.250036239624023
    10. ']' → logprob: -19.375036239624023

Token 232: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.363617962459102e-05
    2. ']=' → logprob: -9.500083923339844
    3. ' ]' → logprob: -11.875083923339844
    4. '=' → logprob: -13.875083923339844
    5. '=len' → logprob: -14.250083923339844
    6. ' =' → logprob: -15.625083923339844
    7. 'len' → logprob: -18.250083923339844
    8. '`]' → logprob: -19.250083923339844
    9. ')' → logprob: -19.375083923339844
    10. ' len' → logprob: -19.750083923339844

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. '=i' → logprob: -15.701414108276367
    4. '=len' → logprob: -15.701414108276367
    5. ']' → logprob: -16.076414108276367
    6. ']=' → logprob: -16.576414108276367
    7. '=int' → logprob: -16.826414108276367
    8. ')' → logprob: -17.701414108276367
    9. ' ' → logprob: -17.951414108276367
    10. '＝' → logprob: -18.076414108276367

Token 234: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1472419600977446e-06
    2. ' len' → logprob: -13.750000953674316
    3. '(len' → logprob: -18.750001907348633
    4. 'length' → logprob: -19.375001907348633
    5. '	len' → logprob: -19.875001907348633
    6. '=len' → logprob: -20.375001907348633
    7. '[len' → logprob: -21.250001907348633
    8. '   ' → logprob: -21.625001907348633
    9. 'leni' → logprob: -23.125001907348633
    10. ',len' → logprob: -23.250001907348633

Token 235: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.750003814697266
    3. 'words' → logprob: -14.625003814697266
    4. '(weights' → logprob: -17.125003814697266
    5. ' (' → logprob: -17.375003814697266
    6. '(word' → logprob: -18.125003814697266
    7. '(parts' → logprob: -18.125003814697266
    8. ' words' → logprob: -18.125003814697266
    9. '(strings' → logprob: -18.625003814697266
    10. '(users' → logprob: -18.625003814697266

Token 236: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0029289720114320517
    2. '(i' → logprob: -5.877928733825684
    3. '(words' → logprob: -9.627928733825684
    4. '[' → logprob: -10.002928733825684
    5. ')' → logprob: -12.127928733825684
    6. 'words' → logprob: -12.877928733825684
    7. ')[' → logprob: -13.627928733825684
    8. '([' → logprob: -13.752928733825684
    9. '(' → logprob: -14.002928733825684
    10. ' [' → logprob: -14.502928733825684

Token 237: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06237298250198364
    2. '])' → logprob: -2.812372922897339
    3. ')]' → logprob: -8.437373161315918
    4. ' )' → logprob: -9.812373161315918
    5. ')])' → logprob: -9.812373161315918
    6. '))' → logprob: -10.562373161315918
    7. ']' → logprob: -10.812373161315918
    8. '())' → logprob: -11.437373161315918
    9. ' ])' → logprob: -12.062373161315918
    10. ')
' → logprob: -12.687373161315918

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7108908295631409
    2. ' for' → logprob: -0.7108908295631409
    3. 'for' → logprob: -4.585890769958496
    4. ' 
' → logprob: -5.210890769958496
    5. '    
' → logprob: -6.835890769958496
    6. '
' → logprob: -8.835890769958496
    7. ' ' → logprob: -8.960890769958496
    8. ')' → logprob: -8.960890769958496
    9. '  
' → logprob: -9.085890769958496
    10. '<|end|>' → logprob: -9.835890769958496

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12557215988636017
    2. ' for' → logprob: -2.2505722045898438
    3. '   ' → logprob: -4.500572204589844
    4. ')' → logprob: -6.500572204589844
    5. 'mask' → logprob: -10.625572204589844
    6. ' )' → logprob: -11.375572204589844
    7. '    
' → logprob: -12.125572204589844
    8. '1' → logprob: -12.500572204589844
    9. '(' → logprob: -12.625572204589844
    10. ' 
' → logprob: -12.750572204589844

Token 240: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.00861669983714819
    2. ' mask' → logprob: -4.758616924285889
    3. '_mask' → logprob: -14.13361644744873
    4. '(mask' → logprob: -14.25861644744873
    5. 'm' → logprob: -15.00861644744873
    6. 'subset' → logprob: -15.63361644744873
    7. '	mask' → logprob: -15.88361644744873
    8. 's' → logprob: -16.883617401123047
    9. 'state' → logprob: -17.133617401123047
    10. 'ms' → logprob: -17.258617401123047

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006757998839020729
    2. 'in' → logprob: -5.006758213043213
    3. '   ' → logprob: -10.381757736206055
    4. ' ' → logprob: -12.131757736206055
    5. '1' → logprob: -13.881757736206055
    6. '+' → logprob: -13.881757736206055
    7. '```' → logprob: -14.006757736206055
    8. '	in' → logprob: -14.131757736206055
    9. 'In' → logprob: -14.506757736206055
    10. '_in' → logprob: -14.881757736206055

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014162540435791
    2. ' range' → logprob: -1.701416254043579
    3. '(range' → logprob: -13.201416015625
    4. '   ' → logprob: -14.701416015625
    5. ' in' → logprob: -15.576416015625
    6. '(' → logprob: -15.951416015625
    7. '	range' → logprob: -16.076416015625
    8. ' ' → logprob: -16.201416015625
    9. '1' → logprob: -16.326416015625
    10. ')' → logprob: -16.701416015625

Token 243: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0921942703134846e-05
    2. '1' → logprob: -12.00001049041748
    3. '((' → logprob: -12.37501049041748
    4. ' (' → logprob: -14.87501049041748
    5. '(full' → logprob: -16.625011444091797
    6. '   ' → logprob: -18.000011444091797
    7. ' ' → logprob: -18.750011444091797
    8. '(
' → logprob: -19.000011444091797
    9. '(n' → logprob: -20.750011444091797
    10. '(len' → logprob: -21.000011444091797

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01818072982132435
    2. '(' → logprob: -4.018180847167969
    3. 'full' → logprob: -10.643180847167969
    4. ' ' → logprob: -12.518180847167969
    5. '   ' → logprob: -13.393180847167969
    6. ' (' → logprob: -13.643180847167969
    7. '(full' → logprob: -15.518180847167969
    8. '
' → logprob: -15.518180847167969
    9. ')' → logprob: -15.643180847167969
    10. ' full' → logprob: -16.64318084716797

Token 245: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4567689001560211
    2. ',' → logprob: -1.0817688703536987
    3. ' <<' → logprob: -3.7067689895629883
    4. '1' → logprob: -6.831768989562988
    5. ' ,' → logprob: -6.956768989562988
    6. '(' → logprob: -7.331768989562988
    7. '+' → logprob: -8.206768989562988
    8. '   ' → logprob: -10.081768989562988
    9. '<<(' → logprob: -10.081768989562988
    10. ' (' → logprob: -10.581768989562988

Token 246: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.318681188422488e-05
    2. ' n' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.75001335144043
    4. '	n' → logprob: -17.50001335144043
    5. ')n' → logprob: -19.25001335144043
    6. '(n' → logprob: -19.75001335144043
    7. '_n' → logprob: -20.25001335144043
    8. '<n' → logprob: -21.00001335144043
    9. ' ' → logprob: -21.62501335144043
    10. '```' → logprob: -21.75001335144043

Token 247: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20159479975700378
    2. '):' → logprob: -1.7015948295593262
    3. '):
' → logprob: -8.701594352722168
    4. ':' → logprob: -12.451594352722168
    5. '):

' → logprob: -12.451594352722168
    6. ')' → logprob: -12.951594352722168
    7. '   ' → logprob: -12.951594352722168
    8. ',' → logprob: -14.326594352722168
    9. ' ):' → logprob: -14.576594352722168
    10. '}:' → logprob: -14.826594352722168

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009356398368254304
    2. ' for' → logprob: -7.2509355545043945
    3. '   ' → logprob: -8.500935554504395
    4. 'for' → logprob: -10.750935554504395
    5. '	   ' → logprob: -15.250935554504395
    6. '	for' → logprob: -15.250935554504395
    7. '           ' → logprob: -15.250935554504395
    8. '    ' → logprob: -16.87593650817871
    9. '	' → logprob: -17.00093650817871
    10. '<|end|>' → logprob: -17.00093650817871

Token 249: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6117103099822998
    2. ' for' → logprob: -0.8617103099822998
    3. 'for' (adapté à ' for') → logprob: -3.7367103099823
    4. '   ' → logprob: -4.486710548400879
    5. ' ' → logprob: -10.861710548400879
    6. '           ' → logprob: -10.986710548400879
    7. '	for' → logprob: -12.486710548400879
    8. '    ' → logprob: -12.861710548400879
    9. '     ' → logprob: -13.486710548400879
    10. '	   ' → logprob: -13.611710548400879

Token 250: ' last' (ID: 2174)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.021605955436825752
    2. 'last' → logprob: -3.896605968475342
    3. 'next' → logprob: -7.646605968475342
    4. 'i' → logprob: -8.396605491638184
    5. ' j' → logprob: -8.896605491638184
    6. 'u' → logprob: -9.271605491638184
    7. 'curr' → logprob: -9.396605491638184
    8. '_j' → logprob: -10.771605491638184
    9. 'cur' → logprob: -12.271605491638184
    10. ' last' → logprob: -12.396605491638184

Token 251: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015106932260096073
    2. 'in' → logprob: -6.5015106201171875
    3. ' ' → logprob: -11.876510620117188
    4. ' i' → logprob: -15.251510620117188
    5. '  ' → logprob: -15.376510620117188
    6. '_in' → logprob: -15.501510620117188
    7. 'i' → logprob: -15.626510620117188
    8. '	in' → logprob: -15.626510620117188
    9. '   ' → logprob: -16.001510620117188
    10. '_' → logprob: -16.376510620117188

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196948140859604
    2. ' range' → logprob: -2.811969518661499
    3. '(range' → logprob: -13.436969757080078
    4. ' ' → logprob: -15.561969757080078
    5. '   ' → logprob: -16.561969757080078
    6. 'n' → logprob: -16.936969757080078
    7. '	range' → logprob: -16.936969757080078
    8. '  ' → logprob: -19.186969757080078
    9. 'in' → logprob: -20.061969757080078
    10. '    ' → logprob: -20.561969757080078

Token 253: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2521167993545532
    2. '(n' → logprob: -1.5021167993545532
    3. ' n' → logprob: -8.877117156982422
    4. '   ' → logprob: -10.752117156982422
    5. '	n' → logprob: -10.752117156982422
    6. '(' → logprob: -12.877117156982422
    7. '<n' → logprob: -14.127117156982422
    8. ')n' → logprob: -14.627117156982422
    9. '_n' → logprob: -14.752117156982422
    10. '       ' → logprob: -15.127117156982422

Token 254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3133451044559479
    2. '):' → logprob: -1.3133450746536255
    3. ' ):
' → logprob: -10.688344955444336
    4. ')' → logprob: -11.313344955444336
    5. '):
' → logprob: -11.313344955444336
    6. ' ):' → logprob: -11.438344955444336
    7. '):

' → logprob: -11.813344955444336
    8. '   ' → logprob: -11.813344955444336
    9. '       ' → logprob: -12.188344955444336
    10. '           ' → logprob: -13.063344955444336

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011496252845972776
    2. ':' → logprob: -7.501149654388428
    3. ' if' → logprob: -8.00114917755127
    4. ':
' → logprob: -9.37614917755127
    5. '               ' → logprob: -10.12614917755127
    6. '<|end|>' → logprob: -10.37614917755127
    7. '            ' → logprob: -10.50114917755127
    8. ' :' → logprob: -10.87614917755127
    9. '          ' → logprob: -11.75114917755127
    10. 'if' → logprob: -11.87614917755127

Token 256: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12142285704612732
    2. ' if' → logprob: -2.37142276763916
    3. 'if' (adapté à ' if') → logprob: -3.87142276763916
    4. '           ' → logprob: -8.87142276763916
    5. '   ' → logprob: -11.87142276763916
    6. '			' → logprob: -12.74642276763916
    7. ' ' → logprob: -12.87142276763916
    8. '                   ' → logprob: -13.49642276763916
    9. ' ' → logprob: -13.74642276763916
    10. '              ' → logprob: -13.99642276763916

Token 257: ' dp' (ID: 21546)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.8760539889335632
    2. ' (' → logprob: -1.251054048538208
    3. ' mask' → logprob: -2.501054048538208
    4. ' not' → logprob: -2.751054048538208
    5. '(dp' → logprob: -2.751054048538208
    6. ' dp' → logprob: -3.126054048538208
    7. 'dp' → logprob: -3.501054048538208
    8. 'mask' → logprob: -4.376053810119629
    9. 'not' → logprob: -7.251053810119629
    10. '(not' → logprob: -9.251053810119629

Token 258: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.0
    3. '   ' → logprob: -17.75
    4. '[m' → logprob: -17.75
    5. '```' → logprob: -17.875
    6. 'mask' → logprob: -18.25
    7. '[
' → logprob: -18.875
    8. '[mem' → logprob: -18.875
    9. '][' → logprob: -19.0
    10. '
' → logprob: -19.625

Token 259: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -7.226628895296017e-06
    2. ' mask' → logprob: -11.875007629394531
    3. '_mask' → logprob: -15.875007629394531
    4. '	mask' → logprob: -16.87500762939453
    5. '(mask' → logprob: -17.00000762939453
    6. '[' → logprob: -17.87500762939453
    7. 'm' → logprob: -18.50000762939453
    8. 'masked' → logprob: -19.25000762939453
    9. '   ' → logprob: -19.87500762939453
    10. ' ' → logprob: -20.25000762939453

Token 260: '][' (ID: 2696)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.00232296041212976
    2. '][' → logprob: -6.502323150634766
    3. '[' → logprob: -7.252323150634766
    4. '[next' → logprob: -9.252323150634766
    5. ' [' → logprob: -12.252323150634766
    6. 'last' → logprob: -13.002323150634766
    7. '[first' → logprob: -13.127323150634766
    8. '[now' → logprob: -13.502323150634766
    9. '
' → logprob: -14.252323150634766
    10. '[end' → logprob: -14.502323150634766

Token 261: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -9.014684110297821e-06
    2. ' last' → logprob: -11.625008583068848
    3. '[last' → logprob: -18.250009536743164
    4. '(last' → logprob: -18.625009536743164
    5. '	last' → logprob: -19.250009536743164
    6. '   ' → logprob: -19.250009536743164
    7. '
' → logprob: -19.250009536743164
    8. '_last' → logprob: -19.750009536743164
    9. 'lasti' → logprob: -20.625009536743164
    10. ':last' → logprob: -21.125009536743164

Token 262: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5011783838272095
    2. ']' → logprob: -1.3761783838272095
    3. '==' → logprob: -3.00117826461792
    4. ' <' → logprob: -3.12617826461792
    5. '!=' → logprob: -3.75117826461792
    6. ']<' → logprob: -5.25117826461792
    7. ']==' → logprob: -5.37617826461792
    8. '<float' → logprob: -5.37617826461792
    9. ']!=' → logprob: -5.50117826461792
    10. ' ==' → logprob: -6.00117826461792

Token 263: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.17978018522262573
    2. ' <' → logprob: -1.9297802448272705
    3. '!=' → logprob: -4.679780006408691
    4. '==' → logprob: -5.429780006408691
    5. ' !=' → logprob: -5.929780006408691
    6. ' ==' → logprob: -6.429780006408691
    7. '<float' → logprob: -6.679780006408691
    8. ' ' → logprob: -9.429780006408691
    9. '<int' → logprob: -10.179780006408691
    10. ' ' → logprob: -11.554780006408691

Token 264: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.014176673255860806
    2. ' float' → logprob: -4.264176845550537
    3. '	float' → logprob: -11.389176368713379
    4. '   ' → logprob: -13.639176368713379
    5. '=float' → logprob: -15.514176368713379
    6. '(float' → logprob: -16.139177322387695
    7. '0' → logprob: -16.264177322387695
    8. '<float' → logprob: -16.389177322387695
    9. '    ' → logprob: -16.639177322387695
    10. ' ' → logprob: -16.764177322387695

Token 265: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. '("' → logprob: -15.25000286102295
    4. ' ('' → logprob: -16.375001907348633
    5. ''s' → logprob: -17.000001907348633
    6. ''in' → logprob: -17.750001907348633
    7. ''' → logprob: -18.000001907348633
    8. '(in' → logprob: -18.000001907348633
    9. '(\'' → logprob: -19.750001907348633
    10. 'inf' → logprob: -20.375001907348633

Token 266: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.9361264946837764e-07
    2. ' inf' → logprob: -15.875
    3. ''' → logprob: -17.625
    4. '')' → logprob: -18.875
    5. ')' → logprob: -20.25
    6. '_inf' → logprob: -20.875
    7. '   ' → logprob: -21.5
    8. '-inf' → logprob: -21.625
    9. '.inf' → logprob: -21.75
    10. ' ' → logprob: -21.875

Token 267: ''):
' (ID: 26539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047737155109643936
    2. ')' → logprob: -3.7977371215820312
    3. '):
' → logprob: -3.7977371215820312
    4. '               ' → logprob: -6.672737121582031
    5. ''):' → logprob: -8.922737121582031
    6. ':' → logprob: -9.047737121582031
    7. '                       ' → logprob: -9.922737121582031
    8. '           ' → logprob: -10.047737121582031
    9. ' ):' → logprob: -10.422737121582031
    10. '                   ' → logprob: -10.422737121582031

Token 268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003992104611825198
    2. ' continue' → logprob: -8.000399589538574
    3. 'continue' → logprob: -9.875399589538574
    4. '           ' → logprob: -12.000399589538574
    5. ':' → logprob: -13.000399589538574
    6. '                   ' → logprob: -13.875399589538574
    7. '                       ' → logprob: -14.750399589538574
    8. ':
' → logprob: -14.875399589538574
    9. '                
' → logprob: -15.250399589538574
    10. '                               ' → logprob: -15.250399589538574

Token 269: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.782067596912384
    2. ' continue' → logprob: -1.0320675373077393
    3. '               ' → logprob: -1.7820675373077393
    4. '                   ' → logprob: -4.032067775726318
    5. '	continue' → logprob: -8.90706729888916
    6. '                       ' → logprob: -9.65706729888916
    7. '_continue' → logprob: -11.15706729888916
    8. '   ' → logprob: -11.90706729888916
    9. '           ' → logprob: -11.90706729888916
    10. '                               ' → logprob: -12.40706729888916

Token 270: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01723502203822136
    2. '               ' → logprob: -4.142234802246094
    3. '            
' → logprob: -7.517234802246094
    4. ' 
' → logprob: -8.642234802246094
    5. '       ' → logprob: -9.267234802246094
    6. '
' → logprob: -9.267234802246094
    7. '                
' → logprob: -9.392234802246094
    8. '<|end|>' → logprob: -9.767234802246094
    9. '    
' → logprob: -10.142234802246094
    10. '            ' → logprob: -10.892234802246094

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007179087493568659
    2. '               ' → logprob: -5.632179260253906
    3. '            
' → logprob: -6.257179260253906
    4. ' 
' → logprob: -6.882179260253906
    5. '
' → logprob: -8.507179260253906
    6. '                
' → logprob: -8.757179260253906
    7. '    
' → logprob: -9.382179260253906
    8. '       ' → logprob: -10.132179260253906
    9. '  
' → logprob: -10.757179260253906
    10. '<|end|>' → logprob: -10.882179260253906

Token 272: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01583727076649666
    2. ' for' → logprob: -4.3908371925354
    3. 'for' (adapté à ' for') → logprob: -6.2658371925354
    4. '
' → logprob: -7.6408371925354
    5. '       ' → logprob: -8.015837669372559
    6. '            
' → logprob: -8.390837669372559
    7. ' 
' → logprob: -8.640837669372559
    8. '               ' → logprob: -9.390837669372559
    9. ' ' → logprob: -9.765837669372559
    10. '   ' → logprob: -10.890837669372559

Token 273: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5571497082710266
    2. ' nxt' → logprob: -1.0571496486663818
    3. 'n' → logprob: -2.557149648666382
    4. ' next' → logprob: -6.932149887084961
    5. 'nj' → logprob: -7.682149887084961
    6. ' nex' → logprob: -7.807149887084961
    7. 'nei' → logprob: -9.057149887084961
    8. 'ne' → logprob: -9.557149887084961
    9. 'j' → logprob: -9.557149887084961
    10. 'k' → logprob: -10.807149887084961

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006278486107476056
    2. 'in' → logprob: -7.3756279945373535
    3. ' ' → logprob: -14.000627517700195
    4. '	in' → logprob: -15.000627517700195
    5. '   ' → logprob: -15.625627517700195
    6. '```' → logprob: -16.750627517700195
    7. 'n' → logprob: -17.375627517700195
    8. '  ' → logprob: -17.625627517700195
    9. 'In' → logprob: -18.875627517700195
    10. 'inthe' → logprob: -19.125627517700195

Token 275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759401321411133
    2. ' range' → logprob: -0.8259401321411133
    3. '(range' → logprob: -14.450940132141113
    4. '	range' → logprob: -17.200939178466797
    5. ' ' → logprob: -17.325939178466797
    6. '   ' → logprob: -17.575939178466797
    7. 'in' → logprob: -19.075939178466797
    8. ' in' → logprob: -19.075939178466797
    9. 'n' → logprob: -19.200939178466797
    10. 'ran' → logprob: -20.075939178466797

Token 276: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3132939338684082
    2. 'n' → logprob: -1.3132939338684082
    3. ' n' → logprob: -10.81329345703125
    4. '(' → logprob: -11.93829345703125
    5. '	n' → logprob: -12.56329345703125
    6. ')n' → logprob: -14.43829345703125
    7. '<n' → logprob: -14.43829345703125
    8. '_n' → logprob: -15.31329345703125
    9. '   ' → logprob: -15.56329345703125
    10. '(
' → logprob: -15.68829345703125

Token 277: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10027524083852768
    2. '):' → logprob: -2.3502752780914307
    3. '):
' → logprob: -10.100275039672852
    4. '):

' → logprob: -11.600275039672852
    5. '               ' → logprob: -12.225275039672852
    6. ' ):
' → logprob: -12.475275039672852
    7. '           ' → logprob: -12.975275039672852
    8. ')' → logprob: -13.225275039672852
    9. ' ):' → logprob: -13.475275039672852
    10. '():
' → logprob: -13.600275039672852

Token 278: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008801387157291174
    2. ' if' → logprob: -7.375880241394043
    3. '                
' → logprob: -9.250880241394043
    4. '<|end|>' → logprob: -9.375880241394043
    5. '                ' → logprob: -10.750880241394043
    6. ',' → logprob: -12.000880241394043
    7. '           ' → logprob: -12.125880241394043
    8. '                               ' → logprob: -12.250880241394043
    9. ' (' → logprob: -12.500880241394043
    10. ' ' → logprob: -12.750880241394043

Token 279: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04171258583664894
    2. 'if' (adapté à ' if') → logprob: -3.291712522506714
    3. '                   ' → logprob: -6.416712760925293
    4. '               ' → logprob: -6.416712760925293
    5. '                ' → logprob: -8.666712760925293
    6. '   ' → logprob: -9.541712760925293
    7. '                               ' → logprob: -10.041712760925293
    8. ' ' → logprob: -10.791712760925293
    9. '                       ' → logprob: -10.916712760925293
    10. '	if' → logprob: -11.541712760925293

Token 280: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.3496907651424408
    2. ' (' → logprob: -1.8496907949447632
    3. ' mask' → logprob: -2.5996906757354736
    4. ' not' → logprob: -2.9746906757354736
    5. 'mask' → logprob: -4.474690914154053
    6. 'not' → logprob: -7.349690914154053
    7. '(' → logprob: -8.474690437316895
    8. '(not' → logprob: -9.099690437316895
    9. ' ' → logprob: -10.349690437316895
    10. '   ' → logprob: -10.974690437316895

Token 281: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0016848169034346938
    2. '(mask' → logprob: -6.501684665679932
    3. ' mask' → logprob: -8.62668514251709
    4. '(' → logprob: -14.00168514251709
    5. 'not' → logprob: -14.12668514251709
    6. '   ' → logprob: -14.50168514251709
    7. ' (' → logprob: -14.87668514251709
    8. '	mask' → logprob: -15.12668514251709
    9. '1' → logprob: -15.62668514251709
    10. '_mask' → logprob: -16.126684188842773

Token 282: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.0009090794483199716
    2. '&' → logprob: -7.250908851623535
    3. '>>' → logprob: -8.875908851623535
    4. ' >>' → logprob: -10.000908851623535
    5. '&(' → logprob: -12.000908851623535
    6. ' ' → logprob: -12.375908851623535
    7. ' &(' → logprob: -13.125908851623535
    8. ' ' → logprob: -14.625908851623535
    9. ' &
' → logprob: -15.125908851623535
    10. '   ' → logprob: -15.250908851623535

Token 283: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14295180141925812
    2. ' (' → logprob: -2.017951726913452
    3. ')' → logprob: -8.892951965332031
    4. '(n' → logprob: -9.017951965332031
    5. '   ' → logprob: -12.017951965332031
    6. ' ' → logprob: -12.142951965332031
    7. 'n' → logprob: -13.017951965332031
    8. '```' → logprob: -14.267951965332031
    9. '
' → logprob: -14.517951965332031
    10. '  ' → logprob: -14.642951965332031

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023340284824371338
    2. '(' → logprob: -3.7733402252197266
    3. ' (' → logprob: -9.523340225219727
    4. ' ' → logprob: -10.898340225219727
    5. ')' → logprob: -13.148340225219727
    6. '(n' → logprob: -13.898340225219727
    7. '   ' → logprob: -15.773340225219727
    8. 'n' → logprob: -16.398340225219727
    9. '{' → logprob: -16.523340225219727
    10. '
' → logprob: -16.773340225219727

Token 285: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.5759440064430237
    2. ' <<' → logprob: -0.8259440064430237
    3. '<' → logprob: -13.450943946838379
    4. ' ' → logprob: -13.700943946838379
    5. ')' → logprob: -13.825943946838379
    6. '<<<' → logprob: -15.325943946838379
    7. ' <<
' → logprob: -15.450943946838379
    8. '   ' → logprob: -16.325944900512695
    9. ')<<' → logprob: -16.325944900512695
    10. '```' → logprob: -16.575944900512695

Token 286: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.672236824873835e-05
    2. ' nxt' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.375076293945312
    4. '	n' → logprob: -14.875076293945312
    5. ' ' → logprob: -15.625076293945312
    6. ' n' → logprob: -16.000076293945312
    7. ')n' → logprob: -16.000076293945312
    8. '```' → logprob: -16.000076293945312
    9. 'n't' → logprob: -16.125076293945312
    10. '(n' → logprob: -16.250076293945312

Token 287: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017078984528779984
    2. ')' → logprob: -6.376708030700684
    3. ' ))' → logprob: -13.001708030700684
    4. '0' → logprob: -13.376708030700684
    5. ')==' → logprob: -14.001708030700684
    6. '==' → logprob: -15.001708030700684
    7. ' )' → logprob: -15.251708030700684
    8. ' ' → logprob: -15.626708030700684
    9. '])' → logprob: -15.751708030700684
    10. '   ' → logprob: -16.126707077026367

Token 288: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10202277451753616
    2. ')==' → logprob: -2.977022886276245
    3. '==' → logprob: -3.102022886276245
    4. ' ==' → logprob: -6.852022647857666
    5. ']==' → logprob: -10.977023124694824
    6. '0' → logprob: -12.227023124694824
    7. '==
' → logprob: -12.727023124694824
    8. ' )' → logprob: -13.352023124694824
    9. '）' → logprob: -13.977023124694824
    10. ']' → logprob: -14.352023124694824

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۰' → logprob: -17.750059127807617
    4. '０' → logprob: -20.375059127807617
    5. ' ' → logprob: -20.625059127807617
    6. '  ' → logprob: -21.125059127807617
    7. '```' → logprob: -21.250059127807617
    8. '   ' → logprob: -21.375059127807617
    9. '٠' → logprob: -21.375059127807617
    10. '০' → logprob: -21.625059127807617

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '                   ' → logprob: -18.75
    4. '۰' → logprob: -19.75
    5. '                       ' → logprob: -20.25
    6. '                           ' → logprob: -20.25
    7. '   ' → logprob: -20.375
    8. '000' → logprob: -20.5
    9. '  ' → logprob: -21.0
    10. '               ' → logprob: -21.375

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05176564306020737
    2. ':
' → logprob: -3.0517656803131104
    3. '):' → logprob: -7.301765441894531
    4. ' and' → logprob: -7.301765441894531
    5. '                   ' → logprob: -7.426765441894531
    6. '):
' → logprob: -7.676765441894531
    7. '                       ' → logprob: -8.301765441894531
    8. '               ' → logprob: -8.301765441894531
    9. ')' → logprob: -9.301765441894531
    10. '                           ' → logprob: -10.301765441894531

Token 292: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7099789977073669
    2. '                   ' → logprob: -0.8349789977073669
    3. '               ' → logprob: -3.7099790573120117
    4. '                       ' → logprob: -3.9599790573120117
    5. ':
' → logprob: -4.334979057312012
    6. ' :' → logprob: -6.209979057312012
    7. ' ' → logprob: -6.209979057312012
    8. '<|end|>' → logprob: -6.334979057312012
    9. '):' → logprob: -6.584979057312012
    10. '                               ' → logprob: -6.584979057312012

Token 293: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.466621994972229
    2. ' cost' → logprob: -1.091621994972229
    3. ' next' → logprob: -4.0916218757629395
    4. ' length' → logprob: -5.0916218757629395
    5. ' dp' → logprob: -5.5916218757629395
    6. ' nd' → logprob: -5.7166218757629395
    7. 'cost' → logprob: -6.0916218757629395
    8. 'new' (adapté à ' new') → logprob: -6.5916218757629395
    9. '                   ' → logprob: -7.0916218757629395
    10. ' candidate' → logprob: -7.9666218757629395

Token 294: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.019262846559286118
    2. '_len' → logprob: -4.019262790679932
    3. '_length' → logprob: -7.394262790679932
    4. '_' → logprob: -7.644262790679932
    5. '_cost' → logprob: -11.76926326751709
    6. 'mask' → logprob: -12.26926326751709
    7. ' _' → logprob: -12.39426326751709
    8. '_size' → logprob: -14.76926326751709
    9. '_dist' → logprob: -14.76926326751709
    10. 'len' → logprob: -15.14426326751709

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407710552215576
    2. '=' → logprob: -0.9740771055221558
    3. ' =
' → logprob: -17.099077224731445
    4. ')' → logprob: -17.724077224731445
    5. '=
' → logprob: -18.099077224731445
    6. ',' → logprob: -19.224077224731445
    7. ' ' → logprob: -19.599077224731445
    8. '＝' → logprob: -19.599077224731445
    9. '=

' → logprob: -19.724077224731445
    10. '.=' → logprob: -20.849077224731445

Token 296: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.01815205067396164
    2. ' mask' → logprob: -4.018152236938477
    3. '(mask' → logprob: -13.143152236938477
    4. '	mask' → logprob: -16.268152236938477
    5. '   ' → logprob: -18.268152236938477
    6. ' ' → logprob: -19.018152236938477
    7. '_mask' → logprob: -20.768152236938477
    8. '               ' → logprob: -21.143152236938477
    9. 'masked' → logprob: -21.143152236938477
    10. '                   ' → logprob: -21.268152236938477

Token 297: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.5759962201118469
    2. ' |' → logprob: -0.8259962201118469
    3. '=' → logprob: -11.075996398925781
    4. ' |=' → logprob: -11.075996398925781
    5. '|(' → logprob: -11.450996398925781
    6. '|
' → logprob: -11.825996398925781
    7. '│' → logprob: -12.575996398925781
    8. ' |
' → logprob: -13.950996398925781
    9. ')' → logprob: -14.200996398925781
    10. ' =' → logprob: -14.325996398925781

Token 298: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014163628220558167
    2. ' (' → logprob: -4.264163494110107
    3. '                   ' → logprob: -15.764163970947266
    4. '1' → logprob: -16.764163970947266
    5. '                    ' → logprob: -17.889163970947266
    6. '                               ' → logprob: -18.639163970947266
    7. '                           ' → logprob: -18.639163970947266
    8. '                       ' → logprob: -18.764163970947266
    9. '```' → logprob: -18.764163970947266
    10. '                        ' → logprob: -19.264163970947266

Token 299: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5761578679084778
    2. '1' → logprob: -0.8261578679084778
    3. ' (' → logprob: -8.451157569885254
    4. ' ' → logprob: -12.576157569885254
    5. '                   ' → logprob: -14.201157569885254
    6. ')' → logprob: -15.701157569885254
    7. '               ' → logprob: -16.32615852355957
    8. '   ' → logprob: -16.57615852355957
    9. '[' → logprob: -16.82615852355957
    10. '```' → logprob: -16.95115852355957

Token 300: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.17984312772750854
    2. ' <<' → logprob: -1.8048431873321533
    3. '<' → logprob: -10.429842948913574
    4. '1' → logprob: -10.554842948913574
    5. ' ' → logprob: -11.054842948913574
    6. ' ' → logprob: -11.804842948913574
    7. '```' → logprob: -12.304842948913574
    8. '
' → logprob: -13.054842948913574
    9. '   ' → logprob: -13.429842948913574
    10. '<<<' → logprob: -13.679842948913574

Token 301: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.1928003813372925e-05
    2. ' nxt' → logprob: -9.875051498413086
    3. '(n' → logprob: -16.375051498413086
    4. '   ' → logprob: -16.500051498413086
    5. '	n' → logprob: -16.625051498413086
    6. 'next' → logprob: -16.750051498413086
    7. '[n' → logprob: -17.000051498413086
    8. 'nj' → logprob: -17.125051498413086
    9. '```' → logprob: -18.000051498413086
    10. '
' → logprob: -18.125051498413086

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10024312138557434
    2. ')
' → logprob: -2.350243091583252
    3. ')
' → logprob: -10.60024356842041
    4. ' )' → logprob: -12.60024356842041
    5. '                   ' → logprob: -12.85024356842041
    6. ' )
' → logprob: -13.22524356842041
    7. ')

' → logprob: -13.47524356842041
    8. '               ' → logprob: -14.47524356842041
    9. '),' → logprob: -15.22524356842041
    10. '                       ' → logprob: -15.47524356842041

Token 303: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1027659922838211
    2. '
' → logprob: -3.2277660369873047
    3. '                    
' → logprob: -3.2277660369873047
    4. ' dp' → logprob: -5.227766036987305
    5. 'dp' → logprob: -5.727766036987305
    6. '               ' → logprob: -6.227766036987305
    7. '                    ' → logprob: -6.477766036987305
    8. ' 
' → logprob: -6.602766036987305
    9. '  
' → logprob: -7.602766036987305
    10. '```' → logprob: -7.602766036987305

Token 304: ' cost' (ID: 3097)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23719821870326996
    2. 'cost' (adapté à ' cost') → logprob: -1.8621982336044312
    3. 'cand' → logprob: -3.8621981143951416
    4. 'new' → logprob: -4.362198352813721
    5. 'curr' → logprob: -4.612198352813721
    6. 'cur' → logprob: -5.362198352813721
    7. '                   ' → logprob: -6.112198352813721
    8. ' dp' → logprob: -6.362198352813721
    9. 'candidate' → logprob: -6.987198352813721
    10. ' cost' → logprob: -7.112198352813721

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022619366645813
    2. '=' → logprob: -2.3502261638641357
    3. ')' → logprob: -11.100226402282715
    4. ']' → logprob: -13.225226402282715
    5. ' ' → logprob: -13.975226402282715
    6. ' =
' → logprob: -14.975226402282715
    7. '[' → logprob: -15.100226402282715
    8. ')=' → logprob: -15.475226402282715
    9. '```' → logprob: -16.2252254486084
    10. ' ' → logprob: -16.3502254486084

Token 306: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008631349541246891
    2. ' dp' → logprob: -4.758631229400635
    3. 'len' → logprob: -11.758631706237793
    4. '	dp' → logprob: -12.383631706237793
    5. '(dp' → logprob: -12.883631706237793
    6. '                   ' → logprob: -13.758631706237793
    7. '   ' → logprob: -14.258631706237793
    8. '                       ' → logprob: -15.758631706237793
    9. '                           ' → logprob: -15.883631706237793
    10. '
' → logprob: -16.508630752563477

Token 307: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.2378600735682994e-05
    2. '[new' → logprob: -10.375032424926758
    3. 'mask' → logprob: -14.875032424926758
    4. 'new' → logprob: -14.875032424926758
    5. ' [' → logprob: -16.125032424926758
    6. '[n' → logprob: -16.625032424926758
    7. '[m' → logprob: -16.625032424926758
    8. '[last' → logprob: -17.000032424926758
    9. '```' → logprob: -17.125032424926758
    10. '[next' → logprob: -17.375032424926758

Token 308: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -4.4849443838757e-06
    2. ' mask' → logprob: -12.500004768371582
    3. '[' → logprob: -14.500004768371582
    4. '(mask' → logprob: -16.625003814697266
    5. '	mask' → logprob: -17.125003814697266
    6. 'new' → logprob: -17.750003814697266
    7. 'last' → logprob: -18.875003814697266
    8. '_mask' → logprob: -19.250003814697266
    9. 'n' → logprob: -20.250003814697266
    10. 'm' → logprob: -20.375003814697266

Token 309: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5254984498023987
    2. '[last' → logprob: -0.9004984498023987
    3. '[new' → logprob: -7.025498390197754
    4. '[next' → logprob: -7.400498390197754
    5. ')[' → logprob: -8.150498390197754
    6. '[' → logprob: -8.650498390197754
    7. '[n' → logprob: -8.900498390197754
    8. ' [' → logprob: -9.775498390197754
    9. ' ][' → logprob: -10.150498390197754
    10. '[current' → logprob: -11.025498390197754

Token 310: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.9862216504407115e-05
    2. ' last' → logprob: -11.375020027160645
    3. 'n' → logprob: -11.875020027160645
    4. 'next' → logprob: -14.250020027160645
    5. '[last' → logprob: -15.000020027160645
    6. '(last' → logprob: -16.000019073486328
    7. '	last' → logprob: -16.625019073486328
    8. '_last' → logprob: -17.000019073486328
    9. 'new' → logprob: -17.000019073486328
    10. '   ' → logprob: -17.500019073486328

Token 311: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15686491131782532
    2. ']+' → logprob: -2.656864881515503
    3. '+' → logprob: -2.781864881515503
    4. ' +' → logprob: -4.531865119934082
    5. ')' → logprob: -6.406865119934082
    6. ')+' → logprob: -8.531865119934082
    7. '>' → logprob: -8.781865119934082
    8. '-' → logprob: -9.781865119934082
    9. ' -' → logprob: -9.781865119934082
    10. '']' → logprob: -9.906865119934082

Token 312: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31579697132110596
    2. '+' → logprob: -1.315796971321106
    3. ' -' → logprob: -6.065796852111816
    4. '-' → logprob: -8.565796852111816
    5. ' ' → logprob: -12.190796852111816
    6. ' plus' → logprob: -13.065796852111816
    7. '```' → logprob: -13.940796852111816
    8. '-length' → logprob: -14.003296852111816
    9. ' ' → logprob: -14.065796852111816
    10. '+
' → logprob: -14.065796852111816

Token 313: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.016616291366518e-05
    2. ' len' → logprob: -9.750070571899414
    3. '(len' → logprob: -11.375070571899414
    4. '[len' → logprob: -15.750070571899414
    5. '	len' → logprob: -16.250070571899414
    6. ',len' → logprob: -17.625070571899414
    7. '
' → logprob: -18.000070571899414
    8. '=len' → logprob: -18.125070571899414
    9. '   ' → logprob: -18.250070571899414
    10. '                   ' → logprob: -18.375070571899414

Token 314: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -1.2664456789934775e-06
    2. 'words' → logprob: -14.000000953674316
    3. '(' → logprob: -14.875000953674316
    4. '(word' → logprob: -19.750001907348633
    5. ' words' → logprob: -20.000001907348633
    6. '(
' → logprob: -21.500001907348633
    7. '(weights' → logprob: -21.875001907348633
    8. '.words' → logprob: -22.125001907348633
    9. '(users' → logprob: -22.625001907348633
    10. ' (' → logprob: -22.875001907348633

Token 315: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0280383548888494e-06
    2. '[next' → logprob: -14.125000953674316
    3. '[j' → logprob: -16.000001907348633
    4. '[' → logprob: -16.625001907348633
    5. '(n' → logprob: -18.125001907348633
    6. 'n' → logprob: -18.125001907348633
    7. ')' → logprob: -18.375001907348633
    8. ')[' → logprob: -18.750001907348633
    9. '```' → logprob: -19.125001907348633
    10. ' [' → logprob: -19.500001907348633

Token 316: 'xt' (ID: 711)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00023095356300473213
    2. 'xt' → logprob: -8.50023078918457
    3. '[' → logprob: -11.87523078918457
    4. 'ext' → logprob: -12.50023078918457
    5. '[x' → logprob: -12.62523078918457
    6. '][' → logprob: -13.00023078918457
    7. '[next' → logprob: -13.00023078918457
    8. ']' → logprob: -13.37523078918457
    9. 'n' → logprob: -13.62523078918457
    10. ')' → logprob: -13.87523078918457

Token 317: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01002840418368578
    2. '])' → logprob: -4.63502836227417
    3. '")' → logprob: -8.635028839111328
    4. ' )' → logprob: -10.385028839111328
    5. ']' → logprob: -10.385028839111328
    6. ')-' → logprob: -11.135028839111328
    7. '])-' → logprob: -12.260028839111328
    8. '')' → logprob: -13.010028839111328
    9. '[n' → logprob: -13.260028839111328
    10. '`)' → logprob: -13.510028839111328

Token 318: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.36587801575660706
    2. '-' → logprob: -1.3658779859542847
    3. '-cost' → logprob: -2.990878105163574
    4. '-c' → logprob: -7.740878105163574
    5. '-code' → logprob: -8.740878105163574
    6. '-length' → logprob: -9.240878105163574
    7. '-ex' → logprob: -9.740878105163574
    8. '                   ' → logprob: -9.990878105163574
    9. '-token' → logprob: -10.615878105163574
    10. '-ignore' → logprob: -10.740878105163574

Token 319: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.00012356207298580557
    2. ' overlap' → logprob: -9.000123977661133
    3. '(over' → logprob: -17.750123977661133
    4. ' over' → logprob: -18.375123977661133
    5. '           ' → logprob: -19.000123977661133
    6. '   ' → logprob: -19.500123977661133
    7. '               ' → logprob: -19.750123977661133
    8. '
' → logprob: -20.375123977661133
    9. ' ' → logprob: -20.500123977661133
    10. '                       ' → logprob: -20.625123977661133

Token 320: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.875003814697266
    3. '[left' → logprob: -15.375003814697266
    4. ' [' → logprob: -15.500003814697266
    5. '[first' → logprob: -16.500003814697266
    6. '[now' → logprob: -16.500003814697266
    7. 'last' → logprob: -16.750003814697266
    8. '[start' → logprob: -17.000003814697266
    9. '[l' → logprob: -17.375003814697266
    10. '[next' → logprob: -17.500003814697266

Token 321: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00019424250058364123
    2. '[n' → logprob: -9.125194549560547
    3. ']' → logprob: -9.875194549560547
    4. '[' → logprob: -10.625194549560547
    5. ' ][' → logprob: -12.875194549560547
    6. '[last' → logprob: -12.875194549560547
    7. '[next' → logprob: -13.000194549560547
    8. '[new' → logprob: -14.625194549560547
    9. 'n' → logprob: -14.625194549560547
    10. '[now' → logprob: -15.000194549560547

Token 322: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.145118848304264e-05
    2. ' nxt' → logprob: -10.250051498413086
    3. 'j' → logprob: -12.000051498413086
    4. '   ' → logprob: -13.000051498413086
    5. '[n' → logprob: -13.500051498413086
    6. 'nj' → logprob: -13.500051498413086
    7. '	n' → logprob: -14.000051498413086
    8. '```' → logprob: -14.125051498413086
    9. 'next' → logprob: -14.375051498413086
    10. ''n' → logprob: -14.500051498413086

Token 323: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.9623810658231378e-05
    2. 'x' → logprob: -10.875020027160645
    3. 't' → logprob: -15.250020027160645
    4. 'ext' → logprob: -16.250019073486328
    5. '```' → logprob: -16.250019073486328
    6. ']' → logprob: -16.750019073486328
    7. 'j' → logprob: -17.375019073486328
    8. '   ' → logprob: -17.750019073486328
    9. '
' → logprob: -18.375019073486328
    10. '[' → logprob: -18.500019073486328

Token 324: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006931356037966907
    2. ']' → logprob: -7.375693321228027
    3. '])' → logprob: -10.125693321228027
    4. ' )' → logprob: -11.875693321228027
    5. ')
' → logprob: -11.875693321228027
    6. ')]' → logprob: -12.000693321228027
    7. '   ' → logprob: -13.500693321228027
    8. '))' → logprob: -14.250693321228027
    9. '[' → logprob: -14.250693321228027
    10. '                   ' → logprob: -14.375693321228027

Token 325: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24265843629837036
    2. '
' → logprob: -1.6176583766937256
    3. '                    
' → logprob: -5.242658615112305
    4. ' if' → logprob: -5.867658615112305
    5. '<|end|>' → logprob: -6.742658615112305
    6. 'if' → logprob: -6.867658615112305
    7. '  
' → logprob: -6.992658615112305
    8. '               ' → logprob: -7.117658615112305
    9. ' 
' → logprob: -7.117658615112305
    10. ')
' → logprob: -7.617658615112305

Token 326: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25479066371917725
    2. ' if' → logprob: -1.5047906637191772
    3. '                   ' → logprob: -6.004790782928467
    4. 'dp' → logprob: -8.129790306091309
    5. '
' → logprob: -9.504790306091309
    6. ' dp' → logprob: -11.129790306091309
    7. '                       ' → logprob: -13.254790306091309
    8. '                    
' → logprob: -13.379790306091309
    9. '```' → logprob: -13.879790306091309
    10. '           ' → logprob: -14.379790306091309

Token 327: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.12930035591125488
    2. 'cost' → logprob: -2.129300355911255
    3. ' dp' → logprob: -6.629300117492676
    4. 'dp' → logprob: -6.879300117492676
    5. '                   ' → logprob: -11.129300117492676
    6. '(cost' → logprob: -13.629300117492676
    7. '                       ' → logprob: -14.004300117492676
    8. '               ' → logprob: -14.379300117492676
    9. '                    ' → logprob: -14.879300117492676
    10. '                           ' → logprob: -15.254300117492676

Token 328: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3132677972316742
    2. '<' → logprob: -1.3132678270339966
    3. '[' → logprob: -13.188267707824707
    4. '<size' → logprob: -14.313267707824707
    5. '<int' → logprob: -14.438267707824707
    6. '<n' → logprob: -14.813267707824707
    7. '<th' → logprob: -15.188267707824707
    8. '<class' → logprob: -15.438267707824707
    9. 'dp' → logprob: -15.563267707824707
    10. '<len' → logprob: -15.563267707824707

Token 329: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.5491004129871726e-05
    2. ' dp' → logprob: -10.000045776367188
    3. '	dp' → logprob: -18.250045776367188
    4. '(dp' → logprob: -20.250045776367188
    5. '                   ' → logprob: -20.875045776367188
    6. '               ' → logprob: -21.250045776367188
    7. '_dp' → logprob: -21.500045776367188
    8. '           ' → logprob: -21.875045776367188
    9. '   ' → logprob: -22.250045776367188
    10. 'd' → logprob: -23.125045776367188

Token 330: '[new' (ID: 89436)
  Prédit: '[new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -3.128163257315464e-07
    2. 'new' → logprob: -15.25
    3. '[' → logprob: -19.375
    4. ' new' → logprob: -21.25
    5. '   ' → logprob: -21.5
    6. '```' → logprob: -21.625
    7. ' [' → logprob: -22.5
    8. '[next' → logprob: -22.875
    9. ')new' → logprob: -23.875
    10. '(new' → logprob: -24.625

Token 331: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00026991849881596863
    2. 'mask' → logprob: -8.250269889831543
    3. '[' → logprob: -11.750269889831543
    4. '_MASK' → logprob: -14.875269889831543
    5. '[new' → logprob: -15.250269889831543
    6. ' mask' → logprob: -16.62527084350586
    7. '	mask' → logprob: -16.87527084350586
    8. 'new' → logprob: -17.37527084350586
    9. '_' → logprob: -18.00027084350586
    10. '_masks' → logprob: -18.37527084350586

Token 332: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.9055099487304688
    2. '[new' → logprob: -0.9055099487304688
    3. '[n' → logprob: -1.6555099487304688
    4. '[next' → logprob: -8.280509948730469
    5. 'new' → logprob: -10.530509948730469
    6. '[' → logprob: -11.280509948730469
    7. '   ' → logprob: -12.155509948730469
    8. ' ][' → logprob: -12.405509948730469
    9. ')[' → logprob: -12.530509948730469
    10. '           ' → logprob: -12.655509948730469

Token 333: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.107425062713446e-06
    2. '[n' → logprob: -12.250006675720215
    3. ' nxt' → logprob: -14.375006675720215
    4. '   ' → logprob: -14.625006675720215
    5. '
' → logprob: -15.000006675720215
    6. '(n' → logprob: -15.625006675720215
    7. '```' → logprob: -15.625006675720215
    8. '][' → logprob: -16.37500762939453
    9. '	n' → logprob: -16.50000762939453
    10. '           ' → logprob: -16.62500762939453

Token 334: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -3.531315314830863e-06
    2. 'x' → logprob: -12.875003814697266
    3. '```' → logprob: -14.625003814697266
    4. 't' → logprob: -15.875003814697266
    5. '   ' → logprob: -16.250003814697266
    6. 'ext' → logprob: -16.250003814697266
    7. ']' → logprob: -16.375003814697266
    8. ' xt' → logprob: -17.250003814697266
    9. '
' → logprob: -17.500003814697266
    10. '>' → logprob: -17.625003814697266

Token 335: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06239381060004234
    2. ']:
' → logprob: -2.8123939037323
    3. ']' → logprob: -7.812393665313721
    4. ']:

' → logprob: -11.562394142150879
    5. ']:
' → logprob: -11.937394142150879
    6. ':' → logprob: -13.062394142150879
    7. ' ]' → logprob: -14.062394142150879
    8. ']:


' → logprob: -15.062394142150879
    9. '                   ' → logprob: -15.187394142150879
    10. '                       ' → logprob: -15.562394142150879

Token 336: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004600773099809885
    2. '                   ' → logprob: -6.254601001739502
    3. '                           ' → logprob: -7.004601001739502
    4. '                               ' → logprob: -7.129601001739502
    5. ' dp' → logprob: -7.504601001739502
    6. 'dp' → logprob: -8.629600524902344
    7. '                        
' → logprob: -9.504600524902344
    8. '(dp' → logprob: -10.379600524902344
    9. '                        ' → logprob: -10.754600524902344
    10. '               ' → logprob: -11.129600524902344

Token 337: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03810403496026993
    2. ' dp' → logprob: -3.2881040573120117
    3. '                           ' → logprob: -10.038104057312012
    4. '                       ' → logprob: -11.163104057312012
    5. '                               ' → logprob: -12.413104057312012
    6. '	dp' → logprob: -14.913104057312012
    7. '(dp' → logprob: -16.163103103637695
    8. '_dp' → logprob: -16.288103103637695
    9. '```' → logprob: -17.163103103637695
    10. '                   ' → logprob: -17.788103103637695

Token 338: '[new' (ID: 89436)
  Prédit: '[new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -5.512236498361744e-07
    2. 'new' → logprob: -14.500000953674316
    3. '[' → logprob: -18.875
    4. ' new' → logprob: -20.125
    5. ')new' → logprob: -20.625
    6. '```' → logprob: -20.625
    7. '=new' → logprob: -21.125
    8. '_new' → logprob: -21.375
    9. '	new' → logprob: -21.5
    10. '[next' → logprob: -21.75

Token 339: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.000253591249929741
    2. 'new' → logprob: -8.875253677368164
    3. 'mask' → logprob: -9.125253677368164
    4. 'Mask' → logprob: -13.000253677368164
    5. '_MASK' → logprob: -13.875253677368164
    6. '[new' → logprob: -14.625253677368164
    7. '_new' → logprob: -15.500253677368164
    8. ' new' → logprob: -15.750253677368164
    9. '
' → logprob: -16.000253677368164
    10. ' mask' → logprob: -16.125253677368164

Token 340: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006761906202882528
    2. '[new' → logprob: -5.2567620277404785
    3. '[n' → logprob: -6.5067620277404785
    4. '"][' → logprob: -11.63176155090332
    5. ']' → logprob: -12.00676155090332
    6. 'new' → logprob: -12.38176155090332
    7. '[' → logprob: -12.38176155090332
    8. ' ][' → logprob: -12.38176155090332
    9. '[next' → logprob: -13.38176155090332
    10. ']][' → logprob: -14.00676155090332

Token 341: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -14.375001907348633
    3. ' nxt' → logprob: -14.750001907348633
    4. ' n' → logprob: -15.625001907348633
    5. ']' → logprob: -16.000001907348633
    6. 'next' → logprob: -16.125001907348633
    7. '   ' → logprob: -17.000001907348633
    8. 'last' → logprob: -17.000001907348633
    9. '```' → logprob: -17.125001907348633
    10. 'n't' → logprob: -17.125001907348633

Token 342: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.004207444377243519
    2. 'x' → logprob: -6.004207611083984
    3. '][' → logprob: -6.629207611083984
    4. 'ext' → logprob: -8.629207611083984
    5. 'txt' → logprob: -10.004207611083984
    6. '[n' → logprob: -10.379207611083984
    7. 'st' → logprob: -10.504207611083984
    8. ']' → logprob: -10.879207611083984
    9. '   ' → logprob: -11.004207611083984
    10. 'n' → logprob: -11.254207611083984

Token 343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016599490481894463
    2. ']=' → logprob: -8.750165939331055
    3. ' ]' → logprob: -11.875165939331055
    4. '=' → logprob: -14.625165939331055
    5. ' =' → logprob: -16.500165939331055
    6. '']' → logprob: -18.000165939331055
    7. ']]' → logprob: -18.625165939331055
    8. ']==' → logprob: -18.875165939331055
    9. '"]' → logprob: -19.250165939331055
    10. ']+=' → logprob: -19.250165939331055

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4749949276447296
    2. ' =' → logprob: -0.9749948978424072
    3. ']' → logprob: -7.349995136260986
    4. ']=' → logprob: -8.224994659423828
    5. '[' → logprob: -12.474994659423828
    6. '[n' → logprob: -13.974994659423828
    7. '                       ' → logprob: -15.224994659423828
    8. '=n' → logprob: -15.724994659423828
    9. '=
' → logprob: -15.724994659423828
    10. '[next' → logprob: -15.724994659423828

Token 345: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.011047814972698689
    2. ' cost' → logprob: -4.511047840118408
    3. '(cost' → logprob: -18.88604736328125
    4. 'Cost' → logprob: -20.38604736328125
    5. '_cost' → logprob: -20.63604736328125
    6. '                   ' → logprob: -21.26104736328125
    7. 'code' → logprob: -21.51104736328125
    8. '.cost' → logprob: -22.26104736328125
    9. 'price' → logprob: -22.51104736328125
    10. 'cos' → logprob: -22.63604736328125

Token 346: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5460195541381836
    2. '   ' → logprob: -0.9210195541381836
    3. '    
' → logprob: -4.296019554138184
    4. '\n' → logprob: -5.671019554138184
    5. '<|end|>' → logprob: -6.796019554138184
    6. '  
' → logprob: -7.046019554138184
    7. '                        
' → logprob: -7.296019554138184
    8. ' return' → logprob: -7.546019554138184
    9. 'return' → logprob: -7.796019554138184
    10. '                    
' → logprob: -8.046019554138184

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024096618872135878
    2. ')' → logprob: -7.2524094581604
    3. '    
' → logprob: -7.3774094581604
    4. '
' → logprob: -7.5024094581604
    5. 'return' → logprob: -8.627409934997559
    6. ' return' → logprob: -8.877409934997559
    7. '       ' → logprob: -9.127409934997559
    8. '  
' → logprob: -10.502409934997559
    9. ')
' → logprob: -11.752409934997559
    10. ' 
' → logprob: -11.877409934997559

Token 348: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011937801726162434
    2. ' return' → logprob: -4.761937618255615
    3. 'result' → logprob: -6.386937618255615
    4. '   ' → logprob: -6.511937618255615
    5. '```' → logprob: -9.261938095092773
    6. 'min' → logprob: -10.886938095092773
    7. '
' → logprob: -11.261938095092773
    8. ' result' → logprob: -11.761938095092773
    9. 'answer' → logprob: -12.386938095092773
    10. '    
' → logprob: -12.761938095092773

Token 349: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10020667314529419
    2. ' min' → logprob: -2.3502066135406494
    3. '[min' → logprob: -18.97520637512207
    4. '(min' → logprob: -19.10020637512207
    5. 'int' → logprob: -19.97520637512207
    6. '	min' → logprob: -20.22520637512207
    7. '   ' → logprob: -20.72520637512207
    8. 'minimum' → logprob: -21.72520637512207
    9. ' ' → logprob: -21.85020637512207
    10. '```' → logprob: -21.85020637512207

Token 350: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.375006675720215
    3. '([' → logprob: -13.000006675720215
    4. 'dp' → logprob: -15.125006675720215
    5. '(
' → logprob: -17.00000762939453
    6. '(df' → logprob: -17.12500762939453
    7. ' (' → logprob: -17.37500762939453
    8. '((' → logprob: -17.87500762939453
    9. ' dp' → logprob: -18.25000762939453
    10. '[' → logprob: -18.62500762939453

Token 351: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5332478142227046e-05
    2. '[-' → logprob: -11.250015258789062
    3. '[(' → logprob: -13.000015258789062
    4. ')[' → logprob: -17.250015258789062
    5. '(full' → logprob: -18.125015258789062
    6. 'full' → logprob: -18.125015258789062
    7. '[last' → logprob: -18.500015258789062
    8. '[F' → logprob: -18.625015258789062
    9. '[first' → logprob: -19.500015258789062
    10. ' [' → logprob: -19.750015258789062

Token 352: 'full' (ID: 15393)
  Prédit: 'full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.000508591765537858
    2. '(full' → logprob: -7.750508785247803
    3. '(' → logprob: -9.500508308410645
    4. ' full' → logprob: -12.750508308410645
    5. '[' → logprob: -17.12550926208496
    6. '_full' → logprob: -17.25050926208496
    7. '
' → logprob: -17.50050926208496
    8. 'Full' → logprob: -17.50050926208496
    9. '-full' → logprob: -17.75050926208496
    10. '((' → logprob: -18.00050926208496

Token 353: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -3.273621405242011e-05
    2. 'mask' → logprob: -10.375032424926758
    3. '_MASK' → logprob: -14.625032424926758
    4. '
' → logprob: -14.875032424926758
    5. 'Mask' → logprob: -15.875032424926758
    6. '[' → logprob: -16.000032424926758
    7. 'n' → logprob: -16.625032424926758
    8. '_' → logprob: -16.750032424926758
    9. '```' → logprob: -16.750032424926758
    10. ' mask' → logprob: -17.250032424926758

Token 354: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5236107707023621
    2. ')' → logprob: -0.8986107707023621
    3. '})' → logprob: -9.148611068725586
    4. '))' → logprob: -9.148611068725586
    5. ')[' → logprob: -9.648611068725586
    6. ')])' → logprob: -9.898611068725586
    7. '][' → logprob: -10.023611068725586
    8. ' )' → logprob: -10.648611068725586
    9. ')
' → logprob: -10.773611068725586
    10. ']' → logprob: -11.023611068725586

Token 355: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0005021584220230579
    2. 'True' → logprob: -7.625502109527588
    3. '(True' → logprob: -11.625502586364746
    4. ' input' → logprob: -12.625502586364746
    5. ' ' → logprob: -13.375502586364746
    6. '_' → logprob: -15.875502586364746
    7. ' true' → logprob: -16.50050163269043
    8. '_true' → logprob: -16.62550163269043
    9. ' not' → logprob: -17.12550163269043
    10. '=True' → logprob: -17.37550163269043

Token 357: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0808156281709671
    2. ' :' → logprob: -3.205815553665161
    3. '():' → logprob: -3.455815553665161
    4. '(' → logprob: -6.45581579208374
    5. '   ' → logprob: -6.70581579208374
    6. ' (' → logprob: -7.20581579208374
    7. 'input' → logprob: -7.58081579208374
    8. ' input' → logprob: -7.83081579208374
    9. ':
' → logprob: -7.95581579208374
    10. '():
' → logprob: -8.830815315246582

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009791270829737186
    2. ' line' → logprob: -5.009791374206543
    3. ' try' → logprob: -7.009791374206543
    4. ' user' → logprob: -7.134791374206543
    5. ' input' → logprob: -7.759791374206543
    6. ' command' → logprob: -8.009791374206543
    7. ':' → logprob: -8.759791374206543
    8. ' True' → logprob: -9.134791374206543
    9. '    
' → logprob: -9.509791374206543
    10. 'try' → logprob: -10.009791374206543

Token 359: ' n' (ID: 297)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.33960047364234924
    2. ' try' → logprob: -1.3396004438400269
    3. ' line' → logprob: -3.8396005630493164
    4. '   ' → logprob: -5.589600563049316
    5. 'line' → logprob: -7.339600563049316
    6. ' inp' → logprob: -10.089600563049316
    7. ' user' → logprob: -11.214600563049316
    8. ' s' → logprob: -11.339600563049316
    9. 'user' → logprob: -11.714600563049316
    10. 's' → logprob: -11.964600563049316

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752103611826897
    2. '=' → logprob: -3.529752016067505
    3. ' ' → logprob: -14.529751777648926
    4. '=int' → logprob: -14.529751777648926
    5. '=input' → logprob: -14.779751777648926
    6. ' =
' → logprob: -15.904751777648926
    7. '   ' → logprob: -16.654752731323242
    8. '  ' → logprob: -16.779752731323242
    9. ',' → logprob: -17.279752731323242
    10. ' =)' → logprob: -18.029752731323242

Token 361: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020678490400314
    2. ' int' → logprob: -2.3502068519592285
    3. '=int' → logprob: -16.85020637512207
    4. 'input' → logprob: -17.35020637512207
    5. '[int' → logprob: -18.60020637512207
    6. ' ' → logprob: -18.85020637512207
    7. ' input' → logprob: -18.85020637512207
    8. '(int' → logprob: -19.60020637512207
    9. '<int' → logprob: -20.22520637512207
    10. '	int' → logprob: -21.97520637512207

Token 362: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.253713218029588e-05
    2. '(' → logprob: -10.000062942504883
    3. 'input' → logprob: -11.000062942504883
    4. '()' → logprob: -15.750062942504883
    5. ' input' → logprob: -16.000062942504883
    6. '=input' → logprob: -16.375062942504883
    7. '(
' → logprob: -17.250062942504883
    8. ' (' → logprob: -18.250062942504883
    9. '	input' → logprob: -19.250062942504883
    10. ',input' → logprob: -19.375062942504883

Token 363: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000810936326161027
    2. '())
' → logprob: -7.2508111000061035
    3. '()' → logprob: -9.250810623168945
    4. '().' → logprob: -12.625810623168945
    5. '())

' → logprob: -14.500810623168945
    6. ' ())' → logprob: -15.125810623168945
    7. '(' → logprob: -15.250810623168945
    8. '()
' → logprob: -15.375810623168945
    9. ')' → logprob: -15.625810623168945
    10. '())
' → logprob: -16.625810623168945

Token 364: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0625961646437645
    2. 'if' → logprob: -2.812596082687378
    3. '   ' → logprob: -8.062596321105957
    4. '<|end|>' → logprob: -8.187596321105957
    5. ' ' → logprob: -10.937596321105957
    6. '	if' → logprob: -12.062596321105957
    7. '    ' → logprob: -12.437596321105957
    8. '  ' → logprob: -13.437596321105957
    9. '<|end|>' → logprob: -14.062596321105957
    10. ',' → logprob: -14.187596321105957

Token 365: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.575943112373352
    2. ' if' → logprob: -0.825943112373352
    3. '   ' → logprob: -12.700942993164062
    4. '<|end|>' → logprob: -15.200942993164062
    5. 'If' → logprob: -15.325942993164062
    6. '	if' → logprob: -15.950942993164062
    7. ' ' → logprob: -17.825942993164062
    8. 'n' → logprob: -18.075942993164062
    9. '    ' → logprob: -18.325942993164062
    10. 'import' → logprob: -18.700942993164062

Token 366: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10023178905248642
    2. 'n' → logprob: -2.350231885910034
    3. ' not' → logprob: -10.600232124328613
    4. '	n' → logprob: -15.975232124328613
    5. 'not' → logprob: -16.725231170654297
    6. '   ' → logprob: -16.975231170654297
    7. ' ' → logprob: -17.350231170654297
    8. ' ' → logprob: -18.225231170654297
    9. 'n't' → logprob: -18.475231170654297
    10. '_n' → logprob: -18.850231170654297

Token 367: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07891501486301422
    2. '==' → logprob: -2.5789151191711426
    3. ' <=' → logprob: -10.953914642333984
    4. '<=' → logprob: -12.203914642333984
    5. '=' → logprob: -13.953914642333984
    6. ')==' → logprob: -14.453914642333984
    7. ')' → logprob: -15.328914642333984
    8. ' ' → logprob: -15.453914642333984
    9. '===' → logprob: -15.578914642333984
    10. ' =' → logprob: -16.203914642333984

Token 368: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.87520408630371
    4. '۰' → logprob: -19.87520408630371
    5. '  ' → logprob: -20.50020408630371
    6. ' ' → logprob: -20.62520408630371
    7. '    ' → logprob: -21.00020408630371
    8. '=' → logprob: -21.87520408630371
    9. '٠' → logprob: -22.00020408630371
    10. ')' → logprob: -22.37520408630371

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -22.000001907348633
    4. '-' → logprob: -22.500001907348633
    5. '   ' → logprob: -22.875001907348633
    6. '
' → logprob: -23.000001907348633
    7. 'o' → logprob: -23.125001907348633
    8. '=' → logprob: -23.500001907348633
    9. ')' → logprob: -23.625001907348633
    10. '  ' → logprob: -23.875001907348633

Token 370: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3887963891029358
    2. ':
' → logprob: -1.138796329498291
    3. '   ' → logprob: -6.263796329498291
    4. '):
' → logprob: -12.13879680633545
    5. '       ' → logprob: -12.13879680633545
    6. ' :
' → logprob: -13.13879680633545
    7. ':return' → logprob: -13.38879680633545
    8. ' :' → logprob: -13.76379680633545
    9. '	break' → logprob: -14.13879680633545
    10. ':
' → logprob: -14.26379680633545

Token 371: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6931619644165039
    2. '       ' → logprob: -0.6931619644165039
    3. ' break' → logprob: -11.693161964416504
    4. '   ' → logprob: -13.068161964416504
    5. '	break' → logprob: -13.568161964416504
    6. '     ' → logprob: -14.318161964416504
    7. 'break' → logprob: -14.443161964416504
    8. ':' → logprob: -14.568161964416504
    9. ':
' → logprob: -15.193161964416504
    10. '    ' → logprob: -15.318161964416504

Token 372: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.33595559000968933
    2. 'break' (adapté à ' break') → logprob: -1.3359556198120117
    3. '   ' → logprob: -3.8359556198120117
    4. '	break' → logprob: -7.085955619812012
    5. '       ' → logprob: -10.835955619812012
    6. ' ' → logprob: -14.835955619812012
    7. '_break' → logprob: -15.335955619812012
    8. '
' → logprob: -15.460955619812012
    9. '   ' → logprob: -16.335954666137695
    10. '           ' → logprob: -16.585954666137695

Token 373: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044796623289585114
    2. 'words' → logprob: -3.7947967052459717
    3. ' words' → logprob: -3.9197967052459717
    4. '    
' → logprob: -7.544796466827393
    5. '(words' → logprob: -7.669796466827393
    6. 'input' → logprob: -8.41979694366455
    7. 'inputs' → logprob: -9.16979694366455
    8. '_words' → logprob: -10.04479694366455
    9. '.words' → logprob: -11.04479694366455
    10. ' input' → logprob: -11.29479694366455

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5268908739089966
    2. ' words' → logprob: -1.5268908739089966
    3. 'words' → logprob: -1.6518908739089966
    4. '(words' → logprob: -8.276890754699707
    5. '    
' → logprob: -8.776890754699707
    6. 'arr' → logprob: -10.401890754699707
    7. 'input' → logprob: -10.526890754699707
    8. 'inputs' → logprob: -10.651890754699707
    9. ' word' → logprob: -10.776890754699707
    10. ' input' → logprob: -11.151890754699707

Token 375: ' cities' (ID: 15636)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.694791853427887
    2. 'words' → logprob: -0.694791853427887
    3. '   ' → logprob: -6.444791793823242
    4. '(words' → logprob: -10.069791793823242
    5. '_words' → logprob: -12.069791793823242
    6. '.words' → logprob: -13.194791793823242
    7. 'arr' → logprob: -14.194791793823242
    8. '```' → logprob: -14.194791793823242
    9. 'word' → logprob: -14.444791793823242
    10. 'input' → logprob: -14.694791793823242

Token 376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031796174589544535
    2. '=' → logprob: -5.753179550170898
    3. ',' → logprob: -14.003179550170898
    4. '=[]' → logprob: -15.503179550170898
    5. ' =[' → logprob: -15.878179550170898
    6. '_input' → logprob: -16.2531795501709
    7. 's' → logprob: -16.6281795501709
    8. ' ' → logprob: -16.7531795501709
    9. ')' → logprob: -16.7531795501709
    10. '_' → logprob: -16.8781795501709

Token 377: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.2752934992313385
    2. '[' → logprob: -1.7752934694290161
    3. ' [' → logprob: -3.2752935886383057
    4. '[]' → logprob: -3.5252935886383057
    5. '[list' → logprob: -6.775293350219727
    6. ' []' → logprob: -6.775293350219727
    7. '[n' → logprob: -7.650293350219727
    8. '[int' → logprob: -7.650293350219727
    9. '[str' → logprob: -8.400293350219727
    10. '[c' → logprob: -9.525293350219727

Token 378: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.572941179503687e-05
    2. ' input' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.375045776367188
    4. '(input' → logprob: -18.000045776367188
    5. '<input' → logprob: -19.500045776367188
    6. '	input' → logprob: -19.875045776367188
    7. '=input' → logprob: -19.875045776367188
    8. '
' → logprob: -20.000045776367188
    9. ' ' → logprob: -20.125045776367188
    10. '           ' → logprob: -20.750045776367188

Token 379: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003184959525242448
    2. '().' → logprob: -5.753184795379639
    3. '()]' → logprob: -12.128185272216797
    4. ' ()' → logprob: -13.378185272216797
    5. '())' → logprob: -15.753185272216797
    6. '()
' → logprob: -16.503185272216797
    7. '()].' → logprob: -17.378185272216797
    8. '(' → logprob: -17.753185272216797
    9. '()`' → logprob: -18.628185272216797
    10. '()"' → logprob: -18.878185272216797

Token 380: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.848420551046729e-05
    2. 'rstrip' → logprob: -9.7500581741333
    3. ' strip' → logprob: -16.500059127807617
    4. '_strip' → logprob: -20.875059127807617
    5. '.strip' → logprob: -22.375059127807617
    6. '-strip' → logprob: -22.625059127807617
    7. 'split' → logprob: -22.875059127807617
    8. '(strip' → logprob: -22.875059127807617
    9. 'str' → logprob: -23.000059127807617
    10. 'Strip' → logprob: -24.750059127807617

Token 381: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.7432603272027336e-06
    2. ' ()' → logprob: -14.000001907348633
    3. '()]' → logprob: -14.750001907348633
    4. '())' → logprob: -15.125001907348633
    5. 'for' → logprob: -16.250001907348633
    6. ')' → logprob: -16.750001907348633
    7. '()
' → logprob: -17.500001907348633
    8. ' for' → logprob: -17.625001907348633
    9. '(' → logprob: -18.875001907348633
    10. '()`' → logprob: -19.875001907348633

Token 382: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7623516917228699
    2. ' for' → logprob: -0.8873516917228699
    3. 'for' → logprob: -2.5123517513275146
    4. ')' → logprob: -3.2623517513275146
    5. '   ' → logprob: -6.2623515129089355
    6. ']' → logprob: -9.012351989746094
    7. '	for' → logprob: -9.137351989746094
    8. ' ' → logprob: -9.762351989746094
    9. ' ()' → logprob: -10.387351989746094
    10. ')]' → logprob: -10.637351989746094

Token 383: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00027218335890211165
    2. ' _' → logprob: -8.500271797180176
    3. ' range' → logprob: -10.000271797180176
    4. '_range' → logprob: -11.125271797180176
    5. 'range' → logprob: -12.250271797180176
    6. ' in' → logprob: -12.625271797180176
    7. '_i' → logprob: -15.500271797180176
    8. 'i' → logprob: -16.125272750854492
    9. 'in' → logprob: -16.625272750854492
    10. '_in' → logprob: -16.625272750854492

Token 384: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.684157026233152e-05
    2. ' range' → logprob: -9.500077247619629
    3. 'in' → logprob: -13.250077247619629
    4. '_' → logprob: -16.625076293945312
    5. '_range' → logprob: -16.875076293945312
    6. '	range' → logprob: -18.125076293945312
    7. ' in' → logprob: -18.250076293945312
    8. '   ' → logprob: -18.500076293945312
    9. '(range' → logprob: -20.500076293945312
    10. '  ' → logprob: -21.125076293945312

Token 385: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.8624639324116288e-06
    2. ' range' → logprob: -13.250001907348633
    3. '(range' → logprob: -21.750001907348633
    4. '   ' → logprob: -22.125001907348633
    5. '	range' → logprob: -22.500001907348633
    6. '```' → logprob: -23.000001907348633
    7. 'r' → logprob: -23.875001907348633
    8. '[' → logprob: -24.625001907348633
    9. '  ' → logprob: -24.750001907348633
    10. '.range' → logprob: -24.750001907348633

Token 386: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04858850687742233
    2. 'n' → logprob: -3.048588514328003
    3. ' n' → logprob: -14.048588752746582
    4. '(' → logprob: -16.048587799072266
    5. '	n' → logprob: -16.298587799072266
    6. '_n' → logprob: -17.173587799072266
    7. ')n' → logprob: -17.548587799072266
    8. ' (' → logprob: -18.673587799072266
    9. '<n' → logprob: -19.048587799072266
    10. ',n' → logprob: -19.548587799072266

Token 387: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.200166469876422e-06
    2. ']' → logprob: -12.750004768371582
    3. ' )' → logprob: -14.375004768371582
    4. '   ' → logprob: -14.375004768371582
    5. ')' → logprob: -14.500004768371582
    6. ')]
' → logprob: -14.750004768371582
    7. ' ]' → logprob: -16.7500057220459
    8. '')]' → logprob: -17.8750057220459
    9. ' ' → logprob: -18.1250057220459
    10. '])' → logprob: -18.2500057220459

Token 388: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0694674625992775
    2. '   ' → logprob: -2.819467544555664
    3. 'result' → logprob: -5.069467544555664
    4. 'length' → logprob: -7.069467544555664
    5. ' print' → logprob: -8.819467544555664
    6. '```' → logprob: -9.694467544555664
    7. 'answer' → logprob: -9.819467544555664
    8. '
' → logprob: -10.694467544555664
    9. '    
' → logprob: -11.319467544555664
    10. 'total' → logprob: -11.944467544555664

Token 389: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006231298204511404
    2. 'result' → logprob: -5.256231307983398
    3. '   ' → logprob: -7.506231307983398
    4. 'length' → logprob: -8.756231307983398
    5. 'res' → logprob: -9.256231307983398
    6. 'answer' → logprob: -9.506231307983398
    7. 'ans' → logprob: -9.631231307983398
    8. ' print' → logprob: -10.131231307983398
    9. '    
' → logprob: -12.381231307983398
    10. 'dist' → logprob: -12.631231307983398

Token 390: '(short' (ID: 78511)
  Prédit: '(short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(short' → logprob: -1.1472419600977446e-06
    2. 'short' → logprob: -13.750000953674316
    3. '(' → logprob: -18.250001907348633
    4. ' shortest' → logprob: -20.250001907348633
    5. 'Shortest' → logprob: -20.750001907348633
    6. '(len' → logprob: -21.875001907348633
    7. '(long' → logprob: -22.000001907348633
    8. '	short' → logprob: -22.000001907348633
    9. '((' → logprob: -22.250001907348633
    10. ' (' → logprob: -22.625001907348633

Token 391: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.0683535037969705e-05
    2. 'test' → logprob: -12.00001049041748
    3. 'ests' → logprob: -13.37501049041748
    4. 'st' → logprob: -13.87501049041748
    5. 'rest' → logprob: -14.12501049041748
    6. '_super' → logprob: -15.37501049041748
    7. 'es' → logprob: -15.75001049041748
    8. '_est' → logprob: -15.75001049041748
    9. 'super' → logprob: -15.87501049041748
    10. '_test' → logprob: -16.125011444091797

Token 392: '_super' (ID: 81649)
  Prédit: '_super'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_super' → logprob: -1.652451464906335e-05
    2. '_' → logprob: -11.750016212463379
    3. '_sup' → logprob: -12.500016212463379
    4. 'super' → logprob: -13.000016212463379
    5. '_s' → logprob: -14.250016212463379
    6. '_sur' → logprob: -14.625016212463379
    7. '_sn' → logprob: -15.250016212463379
    8. '_short' → logprob: -15.250016212463379
    9. ')_' → logprob: -15.500016212463379
    10. ' _' → logprob: -16.000017166137695

Token 393: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -3.8889261304575484e-06
    2. '_string' → logprob: -12.750003814697266
    3. 'strings' → logprob: -15.000003814697266
    4. 'super' → logprob: -15.125003814697266
    5. 'str' → logprob: -16.500003814697266
    6. 'print' → logprob: -16.625003814697266
    7. ' string' → logprob: -16.875003814697266
    8. 'tring' → logprob: -17.125003814697266
    9. '```' → logprob: -17.875003814697266
    10. 's' → logprob: -19.000003814697266

Token 394: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.0280383548888494e-06
    2. '_l' → logprob: -14.625000953674316
    3. '_len' → logprob: -14.625000953674316
    4. 'length' → logprob: -17.500001907348633
    5. '_lengths' → logprob: -18.750001907348633
    6. '_le' → logprob: -19.250001907348633
    7. ' _' → logprob: -19.375001907348633
    8. ')_' → logprob: -19.500001907348633
    9. '_depth' → logprob: -19.625001907348633
    10. 'len' → logprob: -19.750001907348633

Token 395: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.12500286102295
    3. ' (' → logprob: -13.87500286102295
    4. '(city' → logprob: -15.12500286102295
    5. '(n' → logprob: -17.750003814697266
    6. ')' → logprob: -18.000003814697266
    7. ')(' → logprob: -18.125003814697266
    8. 'cities' → logprob: -18.250003814697266
    9. '(cin' → logprob: -18.750003814697266
    10. '(p' → logprob: -19.000003814697266

Token 396: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -1.2233183042553719e-05
    2. 'cities' → logprob: -11.375012397766113
    3. 'ties' → logprob: -14.750012397766113
    4. 'ites' → logprob: -15.625012397766113
    5. 'it' → logprob: -16.750011444091797
    6. 'ountries' → logprob: -16.875011444091797
    7. 'itie' → logprob: -17.875011444091797
    8. 'ity' → logprob: -18.625011444091797
    9. 'ITIES' → logprob: -18.750011444091797
    10. 'itys' → logprob: -19.000011444091797

Token 397: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859213903546333
    2. ')' → logprob: -3.0485920906066895
    3. '()))' → logprob: -13.173592567443848
    4. '())' → logprob: -13.298592567443848
    5. '))
' → logprob: -14.673592567443848
    6. ')))' → logprob: -15.423592567443848
    7. ' ))' → logprob: -15.548592567443848
    8. ')
' → logprob: -16.04859161376953
    9. '])' → logprob: -16.54859161376953
    10. '()' → logprob: -16.79859161376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 395
Tokens correctement prédits (1ère position, stricte): 200
Tokens correctement prédits (1ère position, avec adaptation): 213
Tokens correctement prédits (top 10): 355
Précision stricte (1ère position): 50.63%
Précision adaptée (1ère position): 53.92%
Précision (top 10): 89.87%
================================================================================
