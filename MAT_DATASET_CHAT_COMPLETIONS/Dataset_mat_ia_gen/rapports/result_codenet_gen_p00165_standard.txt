================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect

MP = 999983
primes = []
is_prime = [True] * (MP + 1)
is_prime[0] = False
is_prime[1] = False
for i in range(2, int(MP**0.5) + 1):
    if is_prime[i]:
        for j in range(i*i, MP+1, i):
            is_prime[j] = False
primes = [i for i, val in enumerate(is_prime) if val]

input = sys.stdin.readline
while True:
    n = int(input())
    if n == 0:
        break
    count_by_p = {}
    for _ in range(n):
        p,m = map(int,input().split())
        left = bisect.bisect_left(primes, max(0,p-m))
        right = bisect.bisect_right(primes, min(MP,p+m))
        X = right - left
        if p in count_by_p:
            count_by_p[p] += X
        else:
            count_by_p[p] = X
    king_cost = 0
    for p,total_X in count_by_p.items():
        if total_X == 0:
            # X=0, no payout, 1 prime goes to king’s fund
            king_cost += 1
        else:
            king_cost += total_X - 1
    print(king_cost)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.195421494543552e-05
    2. 't' → logprob: -9.62507152557373
    3. 'ected' → logprob: -12.50007152557373
    4. 'ec' → logprob: -14.12507152557373
    5. 'ection' → logprob: -14.50007152557373
    6. 'e' → logprob: -14.75007152557373
    7. 'ectl' → logprob: -15.87507152557373
    8. 'ector' → logprob: -16.250072479248047
    9. 'ecta' → logprob: -17.250072479248047
    10. 'truct' → logprob: -17.375072479248047

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016111204400658607
    2. '<|end|>' → logprob: -5.516111373901367
    3. '\' → logprob: -6.016111373901367
    4. '\n' → logprob: -6.141111373901367
    5. '' → logprob: -6.391111373901367
    6. '
' → logprob: -6.641111373901367
    7. '

' → logprob: -6.766111373901367
    8. 'import' → logprob: -7.391111373901367
    9. '```' → logprob: -7.766111373901367
    10. ',' → logprob: -8.016111373901367

Token 7: 'MP' (ID: 9125)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5449424386024475
    2. '.' → logprob: -1.7949423789978027
    3. '
' → logprob: -2.1699423789978027
    4. 'import' → logprob: -3.2949423789978027
    5. '' → logprob: -3.6699423789978027
    6. '

' → logprob: -4.169942378997803
    7. 'from' → logprob: -4.669942378997803
    8. ',' → logprob: -4.794942378997803
    9. '```' → logprob: -4.794942378997803
    10. '#' → logprob: -5.419942378997803

Token 8: ' =' (ID: 314)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.5941264033317566
    2. 'L' → logprob: -1.0941264629364014
    3. 'E' → logprob: -2.9691264629364014
    4. '_' → logprob: -4.094126224517822
    5. ' =' → logprob: -4.594126224517822
    6. 'A' → logprob: -4.844126224517822
    7. '=' → logprob: -5.344126224517822
    8. 'M' → logprob: -5.844126224517822
    9. '_i' → logprob: -6.594126224517822
    10. '=[]
' → logprob: -6.719126224517822

Token 9: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.090181864798069
    2. ' ' → logprob: -2.965181827545166
    3. ' {}' → logprob: -3.965181827545166
    4. '100' → logprob: -5.465181827545166
    5. '[]' → logprob: -5.465181827545166
    6. ' [' → logprob: -5.590181827545166
    7. '10' → logprob: -6.090181827545166
    8. '{}' → logprob: -7.715181827545166
    9. '[int' → logprob: -8.465182304382324
    10. 'int' → logprob: -9.590182304382324

Token 10: '999' (ID: 9130)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8716805577278137
    2. '10' → logprob: -1.621680498123169
    3. '{}' → logprob: -1.621680498123169
    4. '100' → logprob: -2.121680498123169
    5. '[' → logprob: -3.121680498123169
    6. '[int' → logprob: -4.496680736541748
    7. '1' → logprob: -5.496680736541748
    8. '{' → logprob: -6.871680736541748
    9. '999' → logprob: -7.121680736541748
    10. '[-' → logprob: -7.496680736541748

Token 11: '983' (ID: 50425)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.010368835180997849
    2. '9' → logprob: -6.260368824005127
    3. '983' → logprob: -6.385368824005127
    4. '99' → logprob: -6.760368824005127
    5. '991' → logprob: -6.760368824005127
    6. '997' → logprob: -6.885368824005127
    7. '993' → logprob: -7.010368824005127
    8. '"""' → logprob: -7.635368824005127
    9. ''''' → logprob: -8.010369300842285
    10. '969' → logprob: -8.260369300842285

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10960105806589127
    2. '<|end|>' → logprob: -2.8596010208129883
    3. '\n' → logprob: -4.359601020812988
    4. '

' → logprob: -5.109601020812988
    5. '```' → logprob: -5.609601020812988
    6. '
' → logprob: -5.859601020812988
    7. '  
' → logprob: -5.859601020812988
    8. '' → logprob: -5.859601020812988
    9. '*' → logprob: -6.109601020812988
    10. '#' → logprob: -6.234601020812988

Token 13: 'pr' (ID: 638)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.174180507659912
    2. '
' → logprob: -1.549180507659912
    3. '```' → logprob: -2.174180507659912
    4. '#' → logprob: -2.299180507659912
    5. ',' → logprob: -2.424180507659912
    6. '*' → logprob: -2.674180507659912
    7. '' → logprob: -4.174180507659912
    8. '

' → logprob: -4.424180507659912
    9. '
' → logprob: -4.924180507659912
    10. ' ' → logprob: -4.924180507659912

Token 14: 'imes' (ID: 2332)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.11971674859523773
    2. 'int' → logprob: -2.9947166442871094
    3. 'import' → logprob: -3.7447166442871094
    4. 'im' → logprob: -4.244716644287109
    5. 'imes' → logprob: -4.369716644287109
    6. 'i' → logprob: -5.494716644287109
    7. '#' → logprob: -5.869716644287109
    8. '```' → logprob: -6.869716644287109
    9. 'ef' → logprob: -7.244716644287109
    10. '[i' → logprob: -7.744716644287109

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20991919934749603
    2. '=' → logprob: -1.7099192142486572
    3. '_' → logprob: -5.209918975830078
    4. '[' → logprob: -6.584918975830078
    5. '_list' → logprob: -6.959918975830078
    6. '.' → logprob: -8.334918975830078
    7. '=[]' → logprob: -8.834918975830078
    8. ',' → logprob: -9.959918975830078
    9. '[]' → logprob: -9.959918975830078
    10. '=[' → logprob: -10.459918975830078

Token 16: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4592100977897644
    2. ' []' → logprob: -1.0842101573944092
    3. '[' → logprob: -3.584210157394409
    4. '[]' → logprob: -6.33420991897583
    5. ' ' → logprob: -7.83420991897583
    6. ' [
' → logprob: -9.334210395812988
    7. '[:]' → logprob: -11.709210395812988
    8. ' [

' → logprob: -11.834210395812988
    9. ' [
' → logprob: -12.584210395812988
    10. '[
' → logprob: -13.334210395812988

Token 17: 'is' (ID: 276)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6502008438110352
    2. '=' → logprob: -1.7752008438110352
    3. 'def' → logprob: -2.025200843811035
    4. ' =' → logprob: -2.025200843811035
    5. ' for' → logprob: -4.025200843811035
    6. '_' → logprob: -4.775200843811035
    7. 'p' → logprob: -5.525200843811035
    8. 'max' → logprob: -5.775200843811035
    9. 'MAX' → logprob: -6.525200843811035
    10. ',' → logprob: -6.650200843811035

Token 18: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.02334750071167946
    2. '_' → logprob: -3.7733476161956787
    3. 'prime' → logprob: -10.398347854614258
    4. ' _' → logprob: -10.523347854614258
    5. 'Prime' → logprob: -11.148347854614258
    6. '_p' → logprob: -11.273347854614258
    7. '_pr' → logprob: -12.148347854614258
    8. 'r' → logprob: -13.023347854614258
    9. '_r' → logprob: -13.273347854614258
    10. '_Pr' → logprob: -13.523347854614258

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.304291695356369
    2. '=' → logprob: -1.4292917251586914
    3. '[' → logprob: -3.8042917251586914
    4. '=[' → logprob: -8.554291725158691
    5. '_' → logprob: -9.054291725158691
    6. '[:]' → logprob: -9.304291725158691
    7. ' ' → logprob: -9.429291725158691
    8. '[]' → logprob: -10.054291725158691
    9. ' =[' → logprob: -10.554291725158691
    10. '```' → logprob: -11.804291725158691

Token 20: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3485097289085388
    2. ' [' → logprob: -1.2235097885131836
    3. ' ' → logprob: -9.973509788513184
    4. '[int' → logprob: -11.848509788513184
    5. '[]' → logprob: -14.098509788513184
    6. '  ' → logprob: -14.223509788513184
    7. ' =' → logprob: -14.223509788513184
    8. '[i' → logprob: -14.223509788513184
    9. '[n' → logprob: -14.473509788513184
    10. '[p' → logprob: -14.473509788513184

Token 21: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2538418471813202
    2. ' True' → logprob: -1.5038418769836426
    3. 'False' → logprob: -6.878841876983643
    4. '1' → logprob: -7.128841876983643
    5. ' False' → logprob: -9.878841400146484
    6. '0' → logprob: -10.878841400146484
    7. ' ' → logprob: -12.128841400146484
    8. '(True' → logprob: -13.128841400146484
    9. ']' → logprob: -14.128841400146484
    10. '   ' → logprob: -14.128841400146484

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2259451150894165
    2. ' for' → logprob: -2.225944995880127
    3. ',' → logprob: -2.475944995880127
    4. '[' → logprob: -5.350944995880127
    5. ' ]' → logprob: -5.850944995880127
    6. ' ' → logprob: -6.850944995880127
    7. ']*' → logprob: -7.475944995880127
    8. ' ,' → logprob: -7.725944995880127
    9. 'for' → logprob: -7.975944995880127
    10. '   ' → logprob: -10.725945472717285

Token 23: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026030870154500008
    2. ',' → logprob: -4.276031017303467
    3. ' for' → logprob: -5.651031017303467
    4. ']' → logprob: -5.901031017303467
    5. ' ' → logprob: -6.651031017303467
    6. ')' → logprob: -6.776031017303467
    7. '(' → logprob: -6.776031017303467
    8. '*' → logprob: -7.026031017303467
    9. '<|end|>' → logprob: -7.901031017303467
    10. '[token' → logprob: -9.026030540466309

Token 24: ' (' (ID: 350)
  Prédit: 'MP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MP' → logprob: -0.24207580089569092
    2. '(M' → logprob: -1.617075800895691
    3. '(' → logprob: -4.2420759201049805
    4. ' MP' → logprob: -7.2420759201049805
    5. '999' → logprob: -7.4920759201049805
    6. '100' → logprob: -7.8670759201049805
    7. ' (' → logprob: -8.11707592010498
    8. '_MP' → logprob: -10.36707592010498
    9. 'MPI' → logprob: -10.36707592010498
    10. 'M' → logprob: -10.86707592010498

Token 25: 'MP' (ID: 9125)
  Prédit: 'MP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MP' → logprob: -0.0006632337463088334
    2. '100' → logprob: -7.7506632804870605
    3. ' MP' → logprob: -8.875662803649902
    4. '999' → logprob: -10.000662803649902
    5. '(' → logprob: -10.500662803649902
    6. '10' → logprob: -11.625662803649902
    7. '(M' → logprob: -12.375662803649902
    8. '_MP' → logprob: -13.500662803649902
    9. 'MPI' → logprob: -13.500662803649902
    10. ' ' → logprob: -13.625662803649902

Token 26: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0117965592071414
    2. '+' → logprob: -4.511796474456787
    3. ')
' → logprob: -7.511796474456787
    4. ' )' → logprob: -8.761796951293945
    5. ')

' → logprob: -11.136796951293945
    6. ' +' → logprob: -11.886796951293945
    7. '-' → logprob: -12.011796951293945
    8. ')
' → logprob: -12.761796951293945
    9. '))' → logprob: -13.011796951293945
    10. '#' → logprob: -13.136796951293945

Token 27: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. '2' → logprob: -15.630233764648438
    4. '  ' → logprob: -16.505233764648438
    5. '0' → logprob: -18.130233764648438
    6. '   ' → logprob: -18.255233764648438
    7. ' ' → logprob: -18.630233764648438
    8. '7' → logprob: -19.255233764648438
    9. '```' → logprob: -19.255233764648438
    10. '１' → logprob: -19.380233764648438

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005542247672565281
    2. ' ' → logprob: -7.500554084777832
    3. '0' → logprob: -14.500554084777832
    4. '2' → logprob: -14.875554084777832
    5. '  ' → logprob: -16.00055503845215
    6. '10' → logprob: -17.00055503845215
    7. '   ' → logprob: -17.06305503845215
    8. '```' → logprob: -17.18805503845215
    9. '7' → logprob: -17.62555503845215
    10. '3' → logprob: -17.68805503845215

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011629798245849088
    2. ')
' → logprob: -9.125116348266602
    3. ')
' → logprob: -12.875116348266602
    4. ')

' → logprob: -13.125116348266602
    5. ' )' → logprob: -13.125116348266602
    6. '[' → logprob: -15.625116348266602
    7. ')

' → logprob: -16.5001163482666
    8. ']' → logprob: -16.7501163482666
    9. '),' → logprob: -16.8751163482666
    10. '))' → logprob: -17.3751163482666

Token 30: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.02192520909011364
    2. 'for' → logprob: -4.27192497253418
    3. '
' → logprob: -5.27192497253418
    4. '' → logprob: -7.27192497253418
    5. '\n' → logprob: -7.27192497253418
    6. 'i' → logprob: -8.14692497253418
    7. '
' → logprob: -8.27192497253418
    8. '```' → logprob: -8.77192497253418
    9. '[' → logprob: -8.89692497253418
    10. ' is' → logprob: -9.14692497253418

Token 31: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5767407417297363
    2. '_prime' → logprob: -0.8267407417297363
    3. ' _' → logprob: -7.576740741729736
    4. '_pr' → logprob: -9.076740264892578
    5. '_

' → logprob: -10.076740264892578
    6. '_false' → logprob: -10.326740264892578
    7. '_true' → logprob: -10.826740264892578
    8. '_Pr' → logprob: -11.576740264892578
    9. '_
' → logprob: -11.576740264892578
    10. '_pal' → logprob: -11.701740264892578

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '\[' → logprob: -13.875000953674316
    3. ' [' → logprob: -15.500000953674316
    4. '[:]' → logprob: -16.750001907348633
    5. '```' → logprob: -17.000001907348633
    6. '[...]' → logprob: -17.375001907348633
    7. '[
' → logprob: -18.125001907348633
    8. '[:' → logprob: -18.500001907348633
    9. '[]' → logprob: -19.250001907348633
    10. ']' → logprob: -19.250001907348633

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000948737608268857
    2. '2' → logprob: -7.250948905944824
    3. ' ' → logprob: -8.625948905944824
    4. '1' → logprob: -9.750948905944824
    5. '   ' → logprob: -14.875948905944824
    6. '  ' → logprob: -15.125948905944824
    7. ')' → logprob: -15.750948905944824
    8. '-' → logprob: -16.563447952270508
    9. ':' → logprob: -16.625947952270508
    10. '```' → logprob: -16.625947952270508

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012258502654731274
    2. ' ]' → logprob: -4.637258529663086
    3. '=' → logprob: -6.512258529663086
    4. ']=' → logprob: -7.012258529663086
    5. ' =' → logprob: -9.887258529663086
    6. ')' → logprob: -10.012258529663086
    7. ',' → logprob: -12.387258529663086
    8. ']==' → logprob: -12.387258529663086
    9. '],' → logprob: -13.137258529663086
    10. ' ' → logprob: -13.387258529663086

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740957021713257
    2. '=' → logprob: -0.9740957021713257
    3. ',' → logprob: -11.849095344543457
    4. ' ' → logprob: -12.349095344543457
    5. '=False' → logprob: -12.724095344543457
    6. ' ==' → logprob: -13.474095344543457
    7. '=True' → logprob: -13.974095344543457
    8. ' |=' → logprob: -14.849095344543457
    9. '=

' → logprob: -14.974095344543457
    10. ' =
' → logprob: -15.099095344543457

Token 36: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004084097687155008
    2. ' False' → logprob: -5.50408411026001
    3. 'is' → logprob: -12.129083633422852
    4. '=False' → logprob: -15.754083633422852
    5. '(False' → logprob: -16.12908363342285
    6. ' is' → logprob: -16.87908363342285
    7. 'F' → logprob: -17.75408363342285
    8. '.False' → logprob: -18.50408363342285
    9. 'false' → logprob: -19.12908363342285
    10. 'Falsy' → logprob: -19.50408363342285

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12628278136253357
    2. '<|end|>' → logprob: -2.2512826919555664
    3. 'is' → logprob: -4.876282691955566
    4. ' is' → logprob: -5.501282691955566
    5. '<|end|>' → logprob: -7.376282691955566
    6. '  
' → logprob: -7.626282691955566
    7. '0' → logprob: -9.126282691955566
    8. ' 
' → logprob: -9.501282691955566
    9. '
' → logprob: -9.626282691955566
    10. '1' → logprob: -9.876282691955566

Token 38: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0005956856766715646
    2. '<|end|>' → logprob: -7.875595569610596
    3. ' is' → logprob: -8.500596046447754
    4. '```' → logprob: -12.000596046447754
    5. '<|end|>' → logprob: -12.875596046447754
    6. '
' → logprob: -13.875596046447754
    7. '0' → logprob: -14.125596046447754
    8. 'and' → logprob: -14.250596046447754
    9. '[' → logprob: -15.625596046447754
    10. 'import' → logprob: -15.750596046447754

Token 39: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0007220837287604809
    2. '_' → logprob: -7.2507219314575195
    3. 'prime' → logprob: -11.50072193145752
    4. ' _' → logprob: -14.62572193145752
    5. '_pr' → logprob: -15.00072193145752
    6. '_prior' → logprob: -15.25072193145752
    7. '_true' → logprob: -15.37572193145752
    8. '_p' → logprob: -16.250722885131836
    9. ''_' → logprob: -16.375722885131836
    10. '_pi' → logprob: -16.500722885131836

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '\[' → logprob: -16.125
    3. '1' → logprob: -16.375
    4. '<|end|>' → logprob: -17.25
    5. ' [' → logprob: -17.375
    6. '```' → logprob: -18.0
    7. '[
' → logprob: -18.375
    8. '[...]' → logprob: -19.5
    9. 'True' → logprob: -20.5
    10. '<|end|>' → logprob: -20.5

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '[' → logprob: -18.00010871887207
    4. '  ' → logprob: -19.00010871887207
    5. '```' → logprob: -19.37510871887207
    6. '0' → logprob: -19.62510871887207
    7. '   ' → logprob: -19.81260871887207
    8. '۱' → logprob: -20.00010871887207
    9. ' ' → logprob: -20.12510871887207
    10. ')' → logprob: -20.75010871887207

Token 42: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18168528378009796
    2. ' =' → logprob: -2.431685209274292
    3. ']' → logprob: -2.556685209274292
    4. ')' → logprob: -7.556685447692871
    5. ']=' → logprob: -8.931685447692871
    6. ' ]' → logprob: -11.181685447692871
    7. ' ' → logprob: -12.056685447692871
    8. ')=' → logprob: -12.681685447692871
    9. '<|end|>' → logprob: -13.181685447692871
    10. '=False' → logprob: -13.556685447692871

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868728280067444
    2. '=' → logprob: -1.1368727684020996
    3. '=False' → logprob: -13.386873245239258
    4. ' =
' → logprob: -16.511873245239258
    5. '=

' → logprob: -16.886873245239258
    6. '=True' → logprob: -17.011873245239258
    7. '＝' → logprob: -17.386873245239258
    8. ')' → logprob: -18.011873245239258
    9. ' =)' → logprob: -18.011873245239258
    10. ']' → logprob: -18.136873245239258

Token 44: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16022412478923798
    2. ' False' → logprob: -1.9102240800857544
    3. '(False' → logprob: -19.03522491455078
    4. '=False' → logprob: -19.16022491455078
    5. '.False' → logprob: -19.91022491455078
    6. '_false' → logprob: -20.16022491455078
    7. ' false' → logprob: -22.41022491455078
    8. 'True' → logprob: -22.41022491455078
    9. ' True' → logprob: -23.16022491455078
    10. 'false' → logprob: -23.16022491455078

Token 45: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001463692169636488
    2. '
' → logprob: -7.251463890075684
    3. ' for' → logprob: -7.376463890075684
    4. '```' → logprob: -9.376463890075684
    5. '\n' → logprob: -10.376463890075684
    6. '' → logprob: -12.001463890075684
    7. '\' → logprob: -13.126463890075684
    8. '#' → logprob: -13.876463890075684
    9. '
' → logprob: -14.251463890075684
    10. '

' → logprob: -14.251463890075684

Token 46: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008099827100522816
    2. ' for' → logprob: -7.250810146331787
    3. '
' → logprob: -9.625809669494629
    4. '```' → logprob: -10.375809669494629
    5. '#' → logprob: -14.125809669494629
    6. '\n' → logprob: -14.500809669494629
    7. '' → logprob: -15.250809669494629
    8. 'def' → logprob: -15.250809669494629
    9. '	for' → logprob: -15.500809669494629
    10. '

' → logprob: -15.625809669494629

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005837911274284124
    2. 'i' → logprob: -5.505837917327881
    3. ' ' → logprob: -6.380837917327881
    4. ' p' → logprob: -10.005837440490723
    5. '	i' → logprob: -12.130837440490723
    6. '  ' → logprob: -12.255837440490723
    7. ' x' → logprob: -12.880837440490723
    8. ' num' → logprob: -13.755837440490723
    9. '2' → logprob: -13.880837440490723
    10. ' number' → logprob: -14.005837440490723

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05514833331108093
    2. 'in' → logprob: -2.9301483631134033
    3. ' ' → logprob: -8.305148124694824
    4. '	in' → logprob: -11.930148124694824
    5. 'range' → logprob: -13.055148124694824
    6. '2' → logprob: -13.180148124694824
    7. '  ' → logprob: -13.430148124694824
    8. '1' → logprob: -13.555148124694824
    9. ' i' → logprob: -13.680148124694824
    10. ',' → logprob: -14.305148124694824

Token 49: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023257127031683922
    2. 'range' → logprob: -3.77325701713562
    3. '2' → logprob: -11.3982572555542
    4. ' ' → logprob: -15.5232572555542
    5. '	range' → logprob: -15.5232572555542
    6. '(range' → logprob: -16.898256301879883
    7. ' xrange' → logprob: -17.898256301879883
    8. '.range' → logprob: -19.398256301879883
    9. '```' → logprob: -19.898256301879883
    10. '3' → logprob: -20.023256301879883

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027749205473810434
    2. '2' → logprob: -6.002774715423584
    3. ' ' → logprob: -8.127775192260742
    4. ' (' → logprob: -12.502775192260742
    5. '(
' → logprob: -16.502775192260742
    6. '```' → logprob: -16.627775192260742
    7. '   ' → logprob: -17.627775192260742
    8. '[' → logprob: -17.752775192260742
    9. '	' → logprob: -17.877775192260742
    10. ',' → logprob: -19.002775192260742

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.125045776367188
    4. '	' → logprob: -19.750045776367188
    5. '(' → logprob: -19.750045776367188
    6. '  ' → logprob: -19.875045776367188
    7. '```' → logprob: -19.875045776367188
    8. '２' → logprob: -20.000045776367188
    9. ')' → logprob: -20.125045776367188
    10. '۲' → logprob: -20.375045776367188

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009784776717424393
    2. ' ,' → logprob: -4.634784698486328
    3. ')' → logprob: -11.134784698486328
    4. ' )' → logprob: -12.384784698486328
    5. ',
' → logprob: -12.509784698486328
    6. ' ' → logprob: -12.634784698486328
    7. ',)' → logprob: -14.009784698486328
    8. ' ,
' → logprob: -14.384784698486328
    9. ',int' → logprob: -14.759784698486328
    10. '):' → logprob: -15.009784698486328

Token 53: ' int' (ID: 677)
  Prédit: 'MP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MP' → logprob: -0.008470137603580952
    2. 'int' → logprob: -5.508470058441162
    3. ' MP' → logprob: -5.508470058441162
    4. 'mp' → logprob: -9.00847053527832
    5. ' int' → logprob: -9.63347053527832
    6. '100' → logprob: -9.75847053527832
    7. '_MP' → logprob: -10.38347053527832
    8. ' ' → logprob: -10.88347053527832
    9. 'Mp' → logprob: -11.63347053527832
    10. '_mp' → logprob: -12.75847053527832

Token 54: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6963889598846436
    2. '(M' → logprob: -0.6963889598846436
    3. '((' → logprob: -5.946389198303223
    4. '(s' → logprob: -7.696389198303223
    5. ' (' → logprob: -9.321389198303223
    6. '(pow' → logprob: -10.321389198303223
    7. '(mp' → logprob: -11.446389198303223
    8. '(
' → logprob: -11.446389198303223
    9. ' ' → logprob: -11.946389198303223
    10. '```' → logprob: -12.696389198303223

Token 55: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.771655115589965e-05
    2. '**' → logprob: -12.000018119812012
    3. '.sqrt' → logprob: -12.250018119812012
    4. 'ath' → logprob: -13.375018119812012
    5. '(' → logprob: -13.625018119812012
    6. '.P' → logprob: -14.375018119812012
    7. '   ' → logprob: -14.500018119812012
    8. 'p' → logprob: -14.625018119812012
    9. '[' → logprob: -14.750018119812012
    10. '.' → logprob: -15.000018119812012

Token 56: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0008114131633192301
    2. ' **' → logprob: -7.125811576843262
    3. '*' → logprob: -12.000811576843262
    4. '0' → logprob: -15.250811576843262
    5. '1' → logprob: -16.375810623168945
    6. '***' → logprob: -16.375810623168945
    7. '.' → logprob: -16.375810623168945
    8. ')**' → logprob: -16.500810623168945
    9. '.sqrt' → logprob: -16.875810623168945
    10. ')' → logprob: -17.250810623168945

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -11.000031471252441
    3. '.' → logprob: -11.125031471252441
    4. ' ' → logprob: -18.375032424926758
    5. '(' → logprob: -18.625032424926758
    6. ' .' → logprob: -19.125032424926758
    7. '```' → logprob: -19.125032424926758
    8. '2' → logprob: -19.687532424926758
    9. '-' → logprob: -19.875032424926758
    10. '   ' → logprob: -20.187532424926758

Token 58: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.008129963040119e-06
    2. '0' → logprob: -13.500003814697266
    3. '5' → logprob: -13.750003814697266
    4. '2' → logprob: -14.625003814697266
    5. '1' → logprob: -15.250003814697266
    6. '3' → logprob: -15.750003814697266
    7. ' .' → logprob: -15.875003814697266
    8. '```' → logprob: -16.750003814697266
    9. '6' → logprob: -17.000003814697266
    10. '​.' → logprob: -17.125003814697266

Token 59: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -13.375003814697266
    3. 'five' → logprob: -15.125003814697266
    4. '```' → logprob: -15.437503814697266
    5. '4' → logprob: -15.500003814697266
    6. '   ' → logprob: -15.500003814697266
    7. '0' → logprob: -15.562503814697266
    8. '25' → logprob: -15.875003814697266
    9. '``' → logprob: -16.625003814697266
    10. '**' → logprob: -16.875003814697266

Token 60: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6964530348777771
    2. ')+' → logprob: -1.3214530944824219
    3. ')' → logprob: -1.5714530944824219
    4. ' +' → logprob: -3.821453094482422
    5. '(' → logprob: -6.071453094482422
    6. '()+' → logprob: -6.321453094482422
    7. '()' → logprob: -7.071453094482422
    8. '2' → logprob: -9.571453094482422
    9. ' )' → logprob: -9.821453094482422
    10. ' ' → logprob: -10.071453094482422

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11299958825111389
    2. ' +' → logprob: -2.237999677658081
    3. ')+' → logprob: -8.98799991607666
    4. '()+' → logprob: -10.36299991607666
    5. ')' → logprob: -10.98799991607666
    6. ' ' → logprob: -13.61299991607666
    7. '()' → logprob: -13.98799991607666
    8. '+i' → logprob: -14.61299991607666
    9. '+)' → logprob: -15.36299991607666
    10. ' )' → logprob: -15.36299991607666

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '2' → logprob: -16.753599166870117
    4. '```' → logprob: -17.253599166870117
    5. ' ' → logprob: -18.503599166870117
    6. '   ' → logprob: -19.003599166870117
    7. '۱' → logprob: -19.128599166870117
    8. ')' → logprob: -19.628599166870117
    9. '	' → logprob: -19.816099166870117
    10. '  ' → logprob: -19.816099166870117

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009128939709626138
    2. ' ' → logprob: -7.000912666320801
    3. '2' → logprob: -14.6259126663208
    4. '  ' → logprob: -15.0009126663208
    5. '   ' → logprob: -15.2509126663208
    6. '```' → logprob: -15.6259126663208
    7. ' ' → logprob: -17.000913619995117
    8. '    ' → logprob: -17.250913619995117
    9. '(' → logprob: -17.500913619995117
    10. '+' → logprob: -17.875913619995117

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03026990219950676
    2. ':' → logprob: -3.5302698612213135
    3. ' ):' → logprob: -8.155269622802734
    4. ')' → logprob: -8.530269622802734
    5. '):
' → logprob: -10.530269622802734
    6. ',' → logprob: -12.780269622802734
    7. ' :' → logprob: -13.530269622802734
    8. ':)' → logprob: -13.530269622802734
    9. ':**' → logprob: -14.780269622802734
    10. '+:' → logprob: -15.030269622802734

Token 65: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03386859595775604
    2. '   ' → logprob: -3.9088685512542725
    3. ':
' → logprob: -5.033868789672852
    4. '<|end|>' → logprob: -5.283868789672852
    5. ' ' → logprob: -7.283868789672852
    6. ' :' → logprob: -8.283868789672852
    7. ' if' → logprob: -8.408868789672852
    8. '<|end|>' → logprob: -9.283868789672852
    9. ' :
' → logprob: -9.408868789672852
    10. '```' → logprob: -10.033868789672852

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.025419864803552628
    2. '   ' → logprob: -4.40041971206665
    3. 'if' (adapté à ' if') → logprob: -4.65041971206665
    4. ' ' → logprob: -6.52541971206665
    5. '    ' → logprob: -7.15041971206665
    6. '<|end|>' → logprob: -7.15041971206665
    7. '```' → logprob: -9.400420188903809
    8. '	if' → logprob: -9.775420188903809
    9. '    
' → logprob: -10.525420188903809
    10. '<|end|>' → logprob: -11.150420188903809

Token 67: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.009791863150894642
    2. 'is' → logprob: -4.634791851043701
    3. ' not' → logprob: -10.63479232788086
    4. ' ' → logprob: -11.88479232788086
    5. 'not' → logprob: -12.63479232788086
    6. '	is' → logprob: -13.88479232788086
    7. ' ' → logprob: -14.25979232788086
    8. '```' → logprob: -16.88479232788086
    9. '(is' → logprob: -17.00979232788086
    10. '‌' → logprob: -17.50979232788086

Token 68: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -6.372916686814278e-05
    2. '_' → logprob: -10.0000638961792
    3. 'prime' → logprob: -11.5000638961792
    4. '_pr' → logprob: -12.5000638961792
    5. ' _' → logprob: -13.2500638961792
    6. '_true' → logprob: -14.1250638961792
    7. '```' → logprob: -14.1250638961792
    8. ''_' → logprob: -15.2500638961792
    9. '_Pr' → logprob: -15.8750638961792
    10. '_private' → logprob: -16.250062942504883

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014096579980105162
    2. '[' → logprob: -8.875141143798828
    3. ' [' → logprob: -14.750141143798828
    4. '[I' → logprob: -15.000141143798828
    5. '\[' → logprob: -16.000141143798828
    6. ' ' → logprob: -16.250141143798828
    7. '```' → logprob: -16.250141143798828
    8. '   ' → logprob: -17.250141143798828
    9. 'i' → logprob: -17.375141143798828
    10. '[j' → logprob: -17.875141143798828

Token 70: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.273154079914093
    2. ']:' → logprob: -1.5231540203094482
    3. ':' → logprob: -3.8981540203094482
    4. ']' → logprob: -8.023154258728027
    5. '):
' → logprob: -8.898154258728027
    6. ']):' → logprob: -9.648154258728027
    7. ' ):' → logprob: -9.648154258728027
    8. '[' → logprob: -9.898154258728027
    9. ')' → logprob: -10.398154258728027
    10. ']:
' → logprob: -11.898154258728027

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032372258603572845
    2. '   ' → logprob: -3.657372236251831
    3. ' for' → logprob: -6.28237247467041
    4. '<|end|>' → logprob: -6.40737247467041
    5. '    ' → logprob: -7.28237247467041
    6. ' ' → logprob: -7.28237247467041
    7. ':' → logprob: -8.28237247467041
    8. '        
' → logprob: -9.03237247467041
    9. '     ' → logprob: -9.15737247467041
    10. ',' → logprob: -9.15737247467041

Token 72: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22840018570423126
    2. 'for' (adapté à ' for') → logprob: -1.6034002304077148
    3. '   ' → logprob: -5.978400230407715
    4. '       ' → logprob: -8.228400230407715
    5. ' j' → logprob: -9.728400230407715
    6. '    ' → logprob: -9.853400230407715
    7. '	for' → logprob: -10.603400230407715
    8. ' ' → logprob: -10.728400230407715
    9. '```' → logprob: -11.603400230407715
    10. '<|end|>' → logprob: -12.103400230407715

Token 73: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1269923597574234
    2. 'j' → logprob: -2.1269924640655518
    3. ' ' → logprob: -10.126992225646973
    4. '	j' → logprob: -10.876992225646973
    5. ' range' → logprob: -13.626992225646973
    6. ' x' → logprob: -14.376992225646973
    7. '   ' → logprob: -14.376992225646973
    8. '```' → logprob: -14.376992225646973
    9. 'range' → logprob: -14.751992225646973
    10. 'multip' → logprob: -14.876992225646973

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995977461338043
    2. 'in' → logprob: -2.694959878921509
    3. ' ' → logprob: -11.69495964050293
    4. '	in' → logprob: -12.19495964050293
    5. ' i' → logprob: -13.06995964050293
    6. '   ' → logprob: -13.44495964050293
    7. '<|end|>' → logprob: -13.44495964050293
    8. '    ' → logprob: -13.81995964050293
    9. 'i' → logprob: -13.94495964050293
    10. 'import' → logprob: -14.06995964050293

Token 75: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931549310684204
    2. 'range' → logprob: -0.6931549310684204
    3. '	range' → logprob: -11.943155288696289
    4. '   ' → logprob: -14.318155288696289
    5. '(range' → logprob: -15.193155288696289
    6. ' ' → logprob: -15.443155288696289
    7. 'i' → logprob: -16.44315528869629
    8. '  ' → logprob: -16.44315528869629
    9. '    ' → logprob: -17.06815528869629
    10. '```' → logprob: -17.19315528869629

Token 76: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.301394023466855e-05
    2. '(' → logprob: -9.750062942504883
    3. 'i' → logprob: -12.375062942504883
    4. ' i' → logprob: -15.750062942504883
    5. '	i' → logprob: -16.375062942504883
    6. '(j' → logprob: -17.000062942504883
    7. '(ii' → logprob: -17.125062942504883
    8. ' (' → logprob: -17.500062942504883
    9. '(I' → logprob: -17.625062942504883
    10. '   ' → logprob: -18.125062942504883

Token 77: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.002656989498063922
    2. 'i' → logprob: -6.002656936645508
    3. '*' → logprob: -8.627656936645508
    4. ' *' → logprob: -13.502656936645508
    5. '2' → logprob: -15.502656936645508
    6. '*j' → logprob: -15.502656936645508
    7. '```' → logprob: -16.002656936645508
    8. ',' → logprob: -16.002656936645508
    9. ' i' → logprob: -16.752656936645508
    10. '*
' → logprob: -17.127656936645508

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020461321400944144
    2. ' ,' → logprob: -8.500205039978027
    3. 'MP' → logprob: -14.250205039978027
    4. ',
' → logprob: -15.500205039978027
    5. ' MP' → logprob: -17.00020408630371
    6. ';' → logprob: -17.75020408630371
    7. '‌,' → logprob: -17.87520408630371
    8. '，' → logprob: -18.12520408630371
    9. ',M' → logprob: -18.12520408630371
    10. '_MP' → logprob: -18.12520408630371

Token 79: ' MP' (ID: 14857)
  Prédit: 'MP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MP' → logprob: -0.20141646265983582
    2. ' MP' → logprob: -1.7014164924621582
    3. '_MP' → logprob: -13.201416015625
    4. '   ' → logprob: -14.076416015625
    5. ' ' → logprob: -14.951416015625
    6. ' ' → logprob: -15.826416015625
    7. '999' → logprob: -17.826416015625
    8. ' MPs' → logprob: -17.951416015625
    9. '(M' → logprob: -17.951416015625
    10. 'mp' → logprob: -18.451416015625

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.615255839889869e-05
    2. ' +' → logprob: -9.250096321105957
    3. '+
' → logprob: -18.62509536743164
    4. '1' → logprob: -20.12509536743164
    5. '+,' → logprob: -20.87509536743164
    6. ' ' → logprob: -21.00009536743164
    7. '＋' → logprob: -21.37509536743164
    8. '+

' → logprob: -21.50009536743164
    9. '+j' → logprob: -21.75009536743164
    10. '+i' → logprob: -22.37509536743164

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -15.125006675720215
    4. '```' → logprob: -15.750006675720215
    5. '   ' → logprob: -16.37500762939453
    6. ',' → logprob: -17.00000762939453
    7. ')' → logprob: -18.00000762939453
    8. '  ' → logprob: -18.68750762939453
    9. '１' → logprob: -19.37500762939453
    10. '' → logprob: -19.43750762939453

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016292767599225044
    2. ',i' → logprob: -4.141292572021484
    3. ' ,' → logprob: -8.516292572021484
    4. ':i' → logprob: -10.641292572021484
    5. 'i' → logprob: -10.891292572021484
    6. ' i' → logprob: -11.766292572021484
    7. '```' → logprob: -13.266292572021484
    8. '   ' → logprob: -13.391292572021484
    9. '(i' → logprob: -13.891292572021484
    10. '
' → logprob: -13.891292572021484

Token 83: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061968810856342316
    2. ' i' → logprob: -2.8119688034057617
    3. '	i' → logprob: -14.186968803405762
    4. ' ' → logprob: -15.561968803405762
    5. ')i' → logprob: -16.186969757080078
    6. '   ' → logprob: -17.436969757080078
    7. 'j' → logprob: -17.811969757080078
    8. ')' → logprob: -17.936969757080078
    9. ' ' → logprob: -18.561969757080078
    10. '_i' → logprob: -19.186969757080078

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005967585020698607
    2. '):
' → logprob: -7.625596523284912
    3. ')' → logprob: -9.25059700012207
    4. ':' → logprob: -11.62559700012207
    5. ' ):' → logprob: -13.00059700012207
    6. ']:' → logprob: -14.62559700012207
    7. '):
' → logprob: -14.75059700012207
    8. ',' → logprob: -15.87559700012207
    9. '+' → logprob: -16.25059700012207
    10. '   ' → logprob: -16.87559700012207

Token 85: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5022643804550171
    2. ' is' → logprob: -1.627264380455017
    3. 'is' → logprob: -2.1272644996643066
    4. '           ' → logprob: -3.0022644996643066
    5. '   ' → logprob: -3.6272644996643066
    6. '               ' → logprob: -6.627264499664307
    7. '        ' → logprob: -8.502264022827148
    8. '	is' → logprob: -8.627264022827148
    9. '        
' → logprob: -8.752264022827148
    10. '    ' → logprob: -8.877264022827148

Token 86: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.038326848298311234
    2. ' is' → logprob: -3.2883267402648926
    3. '               ' → logprob: -8.28832721710205
    4. '           ' → logprob: -11.03832721710205
    5. '   ' → logprob: -11.53832721710205
    6. ' ' → logprob: -12.78832721710205
    7. '	is' → logprob: -13.16332721710205
    8. '                   ' → logprob: -13.28832721710205
    9. '```' → logprob: -14.66332721710205
    10. '       ' → logprob: -14.91332721710205

Token 87: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -1.7432603272027336e-06
    2. 'prime' → logprob: -13.875001907348633
    3. '_' → logprob: -14.125001907348633
    4. '```' → logprob: -17.375001907348633
    5. '_prior' → logprob: -18.125001907348633
    6. ' _' → logprob: -18.625001907348633
    7. '_primary' → logprob: -19.000001907348633
    8. '_true' → logprob: -19.250001907348633
    9. ''_' → logprob: -19.250001907348633
    10. '"_' → logprob: -19.750001907348633

Token 88: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012415809032972902
    2. '[' → logprob: -9.000123977661133
    3. '[i' → logprob: -14.250123977661133
    4. '\[' → logprob: -17.125123977661133
    5. '```' → logprob: -17.125123977661133
    6. '[js' → logprob: -17.250123977661133
    7. '[
' → logprob: -18.000123977661133
    8. ' [' → logprob: -18.125123977661133
    9. '[...]' → logprob: -18.750123977661133
    10. '[J' → logprob: -19.000123977661133

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016478167846798897
    2. '=' → logprob: -4.766478061676025
    3. ']=' → logprob: -4.891478061676025
    4. ' =' → logprob: -8.141478538513184
    5. ')' → logprob: -10.891478538513184
    6. '=False' → logprob: -12.016478538513184
    7. ' ]' → logprob: -12.266478538513184
    8. ')=' → logprob: -13.641478538513184
    9. '=True' → logprob: -15.016478538513184
    10. 'False' → logprob: -15.766478538513184

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00319482758641243
    2. ' =' → logprob: -5.753194808959961
    3. '=False' → logprob: -11.003194808959961
    4. '=True' → logprob: -15.003194808959961
    5. '=

' → logprob: -17.00319480895996
    6. '=
' → logprob: -17.37819480895996
    7. ']=' → logprob: -17.75319480895996
    8. '＝' → logprob: -18.25319480895996
    9. 'False' → logprob: -18.62819480895996
    10. ']' → logprob: -19.50319480895996

Token 91: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005233763717114925
    2. ' False' → logprob: -5.2552337646484375
    3. '(False' → logprob: -18.630233764648438
    4. '=False' → logprob: -20.005233764648438
    5. '.False' → logprob: -21.755233764648438
    6. '_false' → logprob: -21.880233764648438
    7. 'True' → logprob: -22.130233764648438
    8. 'F' → logprob: -22.630233764648438
    9. 'false' → logprob: -23.255233764648438
    10. '0' → logprob: -23.380233764648438

Token 92: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07976390421390533
    2. '
' → logprob: -2.954763889312744
    3. ' for' → logprob: -4.579763889312744
    4. '\n' → logprob: -5.954763889312744
    5. '    
' → logprob: -6.204763889312744
    6. 'newline' → logprob: -6.579763889312744
    7. '            
' → logprob: -6.704763889312744
    8. '```' → logprob: -6.704763889312744
    9. '   ' → logprob: -6.829763889312744
    10. '  
' → logprob: -7.454763889312744

Token 93: 'pr' (ID: 638)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01879921182990074
    2. 'pr' → logprob: -4.518799304962158
    3. ' for' → logprob: -5.893799304962158
    4. '   ' → logprob: -6.643799304962158
    5. ' primes' → logprob: -7.018799304962158
    6. '    
' → logprob: -7.768799304962158
    7. '```' → logprob: -7.768799304962158
    8. '#' → logprob: -8.143798828125
    9. 'p' → logprob: -8.268798828125
    10. 'prime' → logprob: -8.393798828125

Token 94: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.00022308611369226128
    2. 'i' → logprob: -9.375223159790039
    3. 'im' → logprob: -10.125223159790039
    4. 'mes' → logprob: -10.750223159790039
    5. 'ime' → logprob: -10.875223159790039
    6. '#' → logprob: -11.500223159790039
    7. '```' → logprob: -12.250223159790039
    8. '   ' → logprob: -12.625223159790039
    9. '

' → logprob: -12.750223159790039
    10. 'omes' → logprob: -12.875223159790039

Token 95: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12819558382034302
    2. '.' → logprob: -2.1281955242156982
    3. '.extend' → logprob: -6.753195762634277
    4. '.=' → logprob: -11.003195762634277
    5. '.Append' → logprob: -11.753195762634277
    6. 'append' → logprob: -11.753195762634277
    7. '.add' → logprob: -11.753195762634277
    8. '.push' → logprob: -11.878195762634277
    9. '.setdefault' → logprob: -11.878195762634277
    10. '.ap' → logprob: -12.503195762634277

Token 96: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4886302351951599
    2. '[' → logprob: -1.2386302947998047
    3. ' [' → logprob: -2.3636302947998047
    4. '[j' → logprob: -7.613630294799805
    5. '[idx' → logprob: -7.988630294799805
    6. '[int' → logprob: -8.363630294799805
    7. '[p' → logprob: -8.738630294799805
    8. '[list' → logprob: -8.863630294799805
    9. '[np' → logprob: -8.863630294799805
    10. '[num' → logprob: -9.113630294799805

Token 97: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008639508858323097
    2. 'x' → logprob: -4.758639335632324
    3. 'p' → logprob: -11.008639335632324
    4. ' i' → logprob: -12.258639335632324
    5. 'k' → logprob: -12.883639335632324
    6. 'idx' → logprob: -14.258639335632324
    7. 'num' → logprob: -14.508639335632324
    8. 'n' → logprob: -16.88364028930664
    9. ' x' → logprob: -17.00864028930664
    10. '```' → logprob: -17.38364028930664

Token 98: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004084216430783272
    2. 'for' → logprob: -5.50408411026001
    3. ' ' → logprob: -12.129084587097168
    4. '	for' → logprob: -15.379084587097168
    5. ' in' → logprob: -16.25408363342285
    6. ' ' → logprob: -16.62908363342285
    7. '```' → logprob: -18.50408363342285
    8. ' 
' → logprob: -18.75408363342285
    9. ' i' → logprob: -19.00408363342285
    10. ' fo' → logprob: -19.50408363342285

Token 99: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.724520206451416
    2. 'range' → logprob: -1.474520206451416
    3. ' range' → logprob: -1.724520206451416
    4. ' i' → logprob: -2.224520206451416
    5. ' in' → logprob: -8.974519729614258
    6. 'in' → logprob: -10.849519729614258
    7. ' ' → logprob: -11.349519729614258
    8. ',' → logprob: -11.474519729614258
    9. '(range' → logprob: -12.974519729614258
    10. 'pr' → logprob: -13.349519729614258

Token 100: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2641385793685913
    2. 'in' → logprob: -1.8891385793685913
    3. ' range' → logprob: -3.139138698577881
    4. 'range' → logprob: -3.389138698577881
    5. ',' → logprob: -5.639138698577881
    6. ' ' → logprob: -8.389138221740723
    7. ' i' → logprob: -10.264138221740723
    8. 'i' → logprob: -10.889138221740723
    9. '(range' → logprob: -11.639138221740723
    10. 'is' → logprob: -11.889138221740723

Token 101: ' val' (ID: 1459)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.4029649794101715
    2. ' val' → logprob: -2.1529650688171387
    3. 'val' → logprob: -2.2779650688171387
    4. ' prime' → logprob: -2.4029650688171387
    5. 'v' → logprob: -5.027965068817139
    6. 'p' → logprob: -5.152965068817139
    7. ' p' → logprob: -5.527965068817139
    8. 'x' → logprob: -6.152965068817139
    9. ' v' → logprob: -6.527965068817139
    10. 'value' → logprob: -6.902965068817139

Token 102: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132658004760742
    2. ' in' → logprob: -1.3132658004760742
    3. ' ' → logprob: -12.813265800476074
    4. '	in' → logprob: -14.688265800476074
    5. '<|end|>' → logprob: -14.813265800476074
    6. 'inthe' → logprob: -15.688265800476074
    7. ')' → logprob: -16.18826675415039
    8. ',' → logprob: -16.81326675415039
    9. 'import' → logprob: -17.31326675415039
    10. 'inth' → logprob: -17.68826675415039

Token 103: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06196768581867218
    2. ' enumerate' → logprob: -2.811967611312866
    3. 'enum' → logprob: -17.311967849731445
    4. '```' → logprob: -17.936967849731445
    5. 'en' → logprob: -19.936967849731445
    6. 'Enumer' → logprob: -20.186967849731445
    7. 'range' → logprob: -20.561967849731445
    8. ' ' → logprob: -20.561967849731445
    9. '.enumer' → logprob: -20.811967849731445
    10. ' enumer' → logprob: -21.061967849731445

Token 104: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -9.817902173381299e-05
    2. 'is' → logprob: -9.25009822845459
    3. '(' → logprob: -13.37509822845459
    4. ' (' → logprob: -15.75009822845459
    5. ',is' → logprob: -16.250097274780273
    6. ')is' → logprob: -16.375097274780273
    7. '```' → logprob: -17.250097274780273
    8. ' is' → logprob: -17.250097274780273
    9. '=is' → logprob: -17.625097274780273
    10. '(
' → logprob: -18.000097274780273

Token 105: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00014191943046171218
    2. 'prime' → logprob: -8.875142097473145
    3. 'is' → logprob: -14.000142097473145
    4. '_' → logprob: -14.375142097473145
    5. 'Prime' → logprob: -16.000141143798828
    6. '_pr' → logprob: -16.250141143798828
    7. 's' → logprob: -16.375141143798828
    8. 'pr' → logprob: -16.750141143798828
    9. '_true' → logprob: -17.000141143798828
    10. 'p' → logprob: -17.000141143798828

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017410075815860182
    2. ' )' → logprob: -8.875174522399902
    3. 'if' → logprob: -10.375174522399902
    4. ' if' → logprob: -12.875174522399902
    5. '()' → logprob: -15.625174522399902
    6. ')
' → logprob: -16.500173568725586
    7. '）' → logprob: -17.250173568725586
    8. ']' → logprob: -17.500173568725586
    9. '))' → logprob: -18.000173568725586
    10. '(' → logprob: -18.250173568725586

Token 107: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.251930832862854
    2. 'if' → logprob: -1.501930832862854
    3. ' ' → logprob: -13.751931190490723
    4. '	if' → logprob: -15.501931190490723
    5. '   ' → logprob: -15.876931190490723
    6. ')' → logprob: -16.626930236816406
    7. ' in' → logprob: -16.751930236816406
    8. ' ' → logprob: -16.876930236816406
    9. ',' → logprob: -17.501930236816406
    10. ']' → logprob: -17.626930236816406

Token 108: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.061967797577381134
    2. ' val' → logprob: -2.8119678497314453
    3. '	val' → logprob: -16.186967849731445
    4. '(val' → logprob: -18.311967849731445
    5. '[val' → logprob: -20.061967849731445
    6. '   ' → logprob: -21.186967849731445
    7. ',val' → logprob: -21.311967849731445
    8. ' ' → logprob: -21.436967849731445
    9. '_val' → logprob: -21.686967849731445
    10. '.val' → logprob: -21.811967849731445

Token 109: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.526570384972729e-05
    2. ' ]' → logprob: -9.875055313110352
    3. ' if' → logprob: -14.000055313110352
    4. ' and' → logprob: -14.250055313110352
    5. '()]' → logprob: -14.625055313110352
    6. ']

' → logprob: -14.750055313110352
    7. 'if' → logprob: -15.000055313110352
    8. ']
' → logprob: -15.125055313110352
    9. ')]' → logprob: -15.625055313110352
    10. ']==' → logprob: -15.750055313110352

Token 110: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0072805192321538925
    2. '
' → logprob: -6.507280349731445
    3. '\n' → logprob: -6.757280349731445
    4. '```' → logprob: -7.257280349731445
    5. '\' → logprob: -7.507280349731445
    6. '#' → logprob: -7.507280349731445
    7. ')' → logprob: -7.632280349731445
    8. 'n' → logprob: -7.632280349731445
    9. 'for' → logprob: -7.882280349731445
    10. 'print' → logprob: -8.382280349731445

Token 111: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7073898911476135
    2. '(' → logprob: -0.9573898911476135
    3. '_' → logprob: -2.4573898315429688
    4. '_data' → logprob: -4.207389831542969
    5. '_line' → logprob: -4.957389831542969
    6. ' =' → logprob: -5.082389831542969
    7. '=' → logprob: -5.832389831542969
    8. 's' → logprob: -6.082389831542969
    9. '_lines' → logprob: -7.207389831542969
    10. '.' → logprob: -7.582389831542969

Token 112: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2024243026971817
    2. 'sys' → logprob: -1.7024242877960205
    3. ' input' → logprob: -7.5774245262146
    4. 'input' → logprob: -7.7024245262146
    5. '	sys' → logprob: -10.952424049377441
    6. '=sys' → logprob: -11.077424049377441
    7. '(sys' → logprob: -11.577424049377441
    8. ' lambda' → logprob: -13.577424049377441
    9. 'lambda' → logprob: -13.827424049377441
    10. '```' → logprob: -13.952424049377441

Token 113: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5380592346191406
    2. '.' → logprob: -0.9130592346191406
    3. '.readline' → logprob: -4.288059234619141
    4. '.stdout' → logprob: -7.538059234619141
    5. ' .' → logprob: -8.78805923461914
    6. '.input' → logprob: -9.03805923461914
    7. '.argv' → logprob: -9.28805923461914
    8. 'stdin' → logprob: -10.16305923461914
    9. '.std' → logprob: -10.28805923461914
    10. '.`' → logprob: -10.78805923461914

Token 114: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003295109374448657
    2. '.' → logprob: -5.753294944763184
    3. '.readlines' → logprob: -9.503294944763184
    4. '.read' → logprob: -10.128294944763184
    5. 'read' → logprob: -13.253294944763184
    6. '.buffer' → logprob: -14.503294944763184
    7. ' readline' → logprob: -15.253294944763184
    8. 'buffer' → logprob: -15.753294944763184
    9. '.Read' → logprob: -17.1282958984375
    10. 'def' → logprob: -17.2532958984375

Token 115: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2732360064983368
    2. 'def' → logprob: -2.398236036300659
    3. '
' → logprob: -2.898236036300659
    4. '()
' → logprob: -3.148236036300659
    5. '()

' → logprob: -4.27323579788208
    6. '(' → logprob: -4.27323579788208
    7. 'for' → logprob: -5.77323579788208
    8. '<|end|>' → logprob: -5.77323579788208
    9. 'n' → logprob: -6.14823579788208
    10. '

' → logprob: -6.52323579788208

Token 116: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.204971045255661
    2. 'n' → logprob: -1.7049710750579834
    3. 'N' → logprob: -6.954970836639404
    4. '(n' → logprob: -7.454970836639404
    5. 'class' → logprob: -7.454970836639404
    6. 'num' → logprob: -8.329971313476562
    7. 'for' → logprob: -9.079971313476562
    8. '\' → logprob: -9.204971313476562
    9. 'data' → logprob: -9.454971313476562
    10. 'q' → logprob: -9.454971313476562

Token 117: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.009894086048007011
    2. 'True' → logprob: -4.634893894195557
    3. '(True' → logprob: -9.009894371032715
    4. ' ' → logprob: -11.259894371032715
    5. '1' → logprob: -13.634894371032715
    6. ' line' → logprob: -15.134894371032715
    7. ' (' → logprob: -15.384894371032715
    8. ' len' → logprob: -15.384894371032715
    9. ' not' → logprob: -15.384894371032715
    10. ' input' → logprob: -15.509894371032715

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032100381795316935
    2. '():' → logprob: -5.753210067749023
    3. ' :' → logprob: -11.253210067749023
    4. ':
' → logprob: -11.503210067749023
    5. '(' → logprob: -12.753210067749023
    6. ':**' → logprob: -13.003210067749023
    7. ',' → logprob: -13.128210067749023
    8. '):' → logprob: -14.128210067749023
    9. '():
' → logprob: -15.128210067749023
    10. '   ' → logprob: -15.503210067749023

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00171563564799726
    2. ' line' → logprob: -6.876715660095215
    3. ' try' → logprob: -7.376715660095215
    4. '   ' → logprob: -10.751715660095215
    5. 'try' → logprob: -11.376715660095215
    6. '    
' → logprob: -11.751715660095215
    7. ' readline' → logprob: -12.251715660095215
    8. '	line' → logprob: -13.126715660095215
    9. ' s' → logprob: -13.501715660095215
    10. '   ' → logprob: -13.626715660095215

Token 120: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.14487218856811523
    2. ' n' → logprob: -2.7698721885681152
    3. '   ' → logprob: -3.2698721885681152
    4. 'N' → logprob: -4.394872188568115
    5. ' line' → logprob: -4.394872188568115
    6. 'line' → logprob: -5.269872188568115
    7. 's' → logprob: -6.769872188568115
    8. 'try' → logprob: -7.019872188568115
    9. 'x' → logprob: -7.144872188568115
    10. ' try' → logprob: -7.644872188568115

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08911023288965225
    2. ' =' → logprob: -2.4641101360321045
    3. '=int' → logprob: -8.714110374450684
    4. '=input' → logprob: -13.464110374450684
    5. '=line' → logprob: -13.839110374450684
    6. ' =
' → logprob: -13.964110374450684
    7. '=
' → logprob: -14.214110374450684
    8. '=

' → logprob: -14.464110374450684
    9. ' ' → logprob: -14.714110374450684
    10. 'int' → logprob: -14.714110374450684

Token 122: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.32332009077072144
    2. 'input' → logprob: -1.6983201503753662
    3. ' int' → logprob: -2.948320150375366
    4. ' input' → logprob: -3.198320150375366
    5. ' ' → logprob: -12.698320388793945
    6. '(int' → logprob: -14.073320388793945
    7. 'in' → logprob: -14.573320388793945
    8. '(input' → logprob: -14.823320388793945
    9. 'list' → logprob: -14.823320388793945
    10. '<int' → logprob: -14.823320388793945

Token 123: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0016866049263626337
    2. '(' → logprob: -6.5016865730285645
    3. 'input' → logprob: -8.626687049865723
    4. '(
' → logprob: -12.626687049865723
    5. '()' → logprob: -14.251687049865723
    6. ' (' → logprob: -14.376687049865723
    7. ' input' → logprob: -15.751687049865723
    8. '=input' → logprob: -16.001686096191406
    9. '(

' → logprob: -16.501686096191406
    10. '(in' → logprob: -17.126686096191406

Token 124: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16677725315093994
    2. '().' → logprob: -1.91677725315094
    3. '()' → logprob: -5.04177713394165
    4. '())
' → logprob: -10.291777610778809
    5. '()
' → logprob: -11.291777610778809
    6. ')' → logprob: -11.416777610778809
    7. '(' → logprob: -12.041777610778809
    8. ' ())' → logprob: -13.041777610778809
    9. '())

' → logprob: -13.541777610778809
    10. '()

' → logprob: -14.166777610778809

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04677145183086395
    2. 'if' → logprob: -3.67177152633667
    3. ' if' → logprob: -3.92177152633667
    4. '<|end|>' → logprob: -8.296771049499512
    5. '    ' → logprob: -8.796771049499512
    6. ' ' → logprob: -11.046771049499512
    7. '  ' → logprob: -11.171771049499512
    8. '	if' → logprob: -12.046771049499512
    9. '    
' → logprob: -12.046771049499512
    10. '<|end|>' → logprob: -12.796771049499512

Token 126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05527196452021599
    2. ' if' → logprob: -2.930271863937378
    3. '   ' → logprob: -8.055272102355957
    4. '<|end|>' → logprob: -9.680272102355957
    5. '	if' → logprob: -12.930272102355957
    6. ' ' → logprob: -13.305272102355957
    7. '<|end|>' → logprob: -13.305272102355957
    8. 'If' → logprob: -13.805272102355957
    9. '    ' → logprob: -13.930272102355957
    10. '...' → logprob: -14.680272102355957

Token 127: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.002238162560388446
    2. 'n' → logprob: -6.6272382736206055
    3. ' not' → logprob: -7.0022382736206055
    4. 'not' → logprob: -13.752238273620605
    5. '	n' → logprob: -14.502238273620605
    6. ' ' → logprob: -14.752238273620605
    7. ' ' → logprob: -16.75223731994629
    8. '(n' → logprob: -17.62723731994629
    9. 'n't' → logprob: -17.75223731994629
    10. ' н' → logprob: -19.50223731994629

Token 128: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47957855463027954
    2. '==' → logprob: -1.1045784950256348
    3. '<=' → logprob: -3.6045784950256348
    4. ' <=' → logprob: -3.8545784950256348
    5. '<' → logprob: -7.229578495025635
    6. ' <' → logprob: -7.729578495025635
    7. '=' → logprob: -10.979578971862793
    8. '==-' → logprob: -11.354578971862793
    9. ' ' → logprob: -11.479578971862793
    10. ' ' → logprob: -12.479578971862793

Token 129: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011712945997714996
    2. ' ' → logprob: -6.751171112060547
    3. '-' → logprob: -14.251171112060547
    4. ' -' → logprob: -15.501171112060547
    5. '```' → logprob: -17.001171112060547
    6. ' ' → logprob: -18.001171112060547
    7. '   ' → logprob: -18.251171112060547
    8. '۰' → logprob: -18.501171112060547
    9. '1' → logprob: -19.001171112060547
    10. '_' → logprob: -19.063671112060547

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8670179997570813e-05
    2. '-' → logprob: -11.250019073486328
    3. ' ' → logprob: -12.125019073486328
    4. '```' → logprob: -16.625019073486328
    5. ' -' → logprob: -18.125019073486328
    6. '_' → logprob: -18.500019073486328
    7. '1' → logprob: -19.000019073486328
    8. '０' → logprob: -19.125019073486328
    9. '۰' → logprob: -19.500019073486328
    10. '   ' → logprob: -19.750019073486328

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033206648658961058
    2. ':
' → logprob: -5.753320693969727
    3. '   ' → logprob: -8.878320693969727
    4. ' :' → logprob: -13.628320693969727
    5. ':return' → logprob: -14.003320693969727
    6. '       ' → logprob: -14.628320693969727
    7. '):' → logprob: -14.753320693969727
    8. '	break' → logprob: -15.753320693969727
    9. ',' → logprob: -16.003320693969727
    10. ':
' → logprob: -16.378320693969727

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04301392287015915
    2. '   ' → logprob: -3.16801381111145
    3. ' break' → logprob: -12.418013572692871
    4. 'break' → logprob: -12.668013572692871
    5. '   ' → logprob: -13.168013572692871
    6. '      ' → logprob: -13.793013572692871
    7. '	break' → logprob: -14.043013572692871
    8. ':' → logprob: -14.418013572692871
    9. '     ' → logprob: -14.418013572692871
    10. '    ' → logprob: -14.543013572692871

Token 133: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.25365617871284485
    2. ' break' → logprob: -1.7536561489105225
    3. '       ' → logprob: -3.0036561489105225
    4. '   ' → logprob: -7.003656387329102
    5. '	break' → logprob: -7.878656387329102
    6. '           ' → logprob: -12.628656387329102
    7. '```' → logprob: -13.628656387329102
    8. '_break' → logprob: -13.753656387329102
    9. '-break' → logprob: -14.128656387329102
    10. '
' → logprob: -14.253656387329102

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024030047934502363
    2. '    
' → logprob: -6.3774027824401855
    3. 'print' → logprob: -8.002403259277344
    4. '
' → logprob: -9.002403259277344
    5. ' print' → logprob: -9.252403259277344
    6. '    ' → logprob: -9.877403259277344
    7. '   
' → logprob: -11.127403259277344
    8. 'count' → logprob: -11.502403259277344
    9. ' count' → logprob: -11.877403259277344
    10. '```' → logprob: -11.877403259277344

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25028011202812195
    2. 'count' → logprob: -1.8752801418304443
    3. 'print' → logprob: -3.6252801418304443
    4. ' count' → logprob: -3.7502801418304443
    5. '    
' → logprob: -5.750279903411865
    6. ' print' → logprob: -5.750279903411865
    7. 'left' → logprob: -6.125279903411865
    8. 'idx' → logprob: -6.125279903411865
    9. 'index' → logprob: -6.250279903411865
    10. 'start' → logprob: -6.875279903411865

Token 136: ' count' (ID: 3605)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.9353451728820801
    2. 'count' (adapté à ' count') → logprob: -1.06034517288208
    3. 'left' → logprob: -2.31034517288208
    4. 'index' → logprob: -3.18534517288208
    5. 'l' → logprob: -3.43534517288208
    6. 'cnt' → logprob: -3.81034517288208
    7. 'pos' → logprob: -4.31034517288208
    8. '   ' → logprob: -4.31034517288208
    9. 'start' → logprob: -4.81034517288208
    10. 'low' → logprob: -5.31034517288208

Token 137: '_by' (ID: 8214)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12723296880722046
    2. '=' → logprob: -2.1272330284118652
    3. '_' → logprob: -8.377232551574707
    4. '_space' → logprob: -10.752232551574707
    5. '_index' → logprob: -11.877232551574707
    6. ',' → logprob: -12.127232551574707
    7. 's' → logprob: -12.252232551574707
    8. ' ' → logprob: -12.377232551574707
    9. '_idx' → logprob: -12.377232551574707
    10. '(' → logprob: -12.627232551574707

Token 138: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1057544946670532
    2. ' =' → logprob: -1.2307544946670532
    3. 's' → logprob: -1.8557544946670532
    4. '_n' → logprob: -3.2307543754577637
    5. '=' → logprob: -3.7307543754577637
    6. ' ' → logprob: -3.9807543754577637
    7. 'pr' → logprob: -4.230754375457764
    8. '_prime' → logprob: -4.230754375457764
    9. '_pr' → logprob: -4.230754375457764
    10. 'pass' → logprob: -4.855754375457764

Token 139: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08211544901132584
    2. ' =' → logprob: -2.832115411758423
    3. 'air' → logprob: -5.207115650177002
    4. 'refix' → logprob: -5.707115650177002
    5. '=' → logprob: -5.832115650177002
    6. 'os' → logprob: -6.457115650177002
    7. 'airs' → logprob: -6.582115650177002
    8. 'al' → logprob: -6.957115650177002
    9. 'ow' → logprob: -7.332115650177002
    10. 'lus' → logprob: -8.082115173339844

Token 140: ' {}
' (ID: 11421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7507643103599548
    2. '{}' → logprob: -0.8757643103599548
    3. '[' → logprob: -2.6257643699645996
    4. 'bis' → logprob: -3.7507643699645996
    5. '[]' → logprob: -4.5007643699646
    6. '{' → logprob: -6.6257643699646
    7. ' ' → logprob: -7.7507643699646
    8. '[n' → logprob: -7.7507643699646
    9. '{}
' → logprob: -7.8757643699646
    10. '[b' → logprob: -8.125763893127441

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8125705718994141
    2. 'for' → logprob: -0.9375705718994141
    3. ' for' → logprob: -1.812570571899414
    4. '    
' → logprob: -6.937570571899414
    5. '    ' → logprob: -9.062570571899414
    6. ' ' → logprob: -10.062570571899414
    7. '   
' → logprob: -10.062570571899414
    8. '  ' → logprob: -10.187570571899414
    9. '	for' → logprob: -10.187570571899414
    10. ' 
' → logprob: -10.437570571899414

Token 142: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.031133726239204407
    2. ' for' → logprob: -4.281133651733398
    3. 'temp' → logprob: -5.031133651733398
    4. 'idx' → logprob: -5.781133651733398
    5. 'result' → logprob: -6.406133651733398
    6. 'count' → logprob: -7.031133651733398
    7. '   ' → logprob: -7.156133651733398
    8. 'remaining' → logprob: -7.531133651733398
    9. 'ans' → logprob: -7.781133651733398
    10. 'answer' → logprob: -7.781133651733398

Token 143: ' _' (ID: 1175)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.650779664516449
    2. 'p' → logprob: -0.775779664516449
    3. ' prime' → logprob: -4.775779724121094
    4. 'prime' → logprob: -5.525779724121094
    5. ' i' → logprob: -6.275779724121094
    6. 'i' → logprob: -6.525779724121094
    7. 'x' → logprob: -7.900779724121094
    8. ' x' → logprob: -7.900779724121094
    9. 'k' → logprob: -8.838279724121094
    10. '_p' → logprob: -8.900779724121094

Token 144: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3589162528514862
    2. ' in' → logprob: -1.2339162826538086
    3. 'p' → logprob: -5.108916282653809
    4. 'pr' → logprob: -6.358916282653809
    5. 'n' → logprob: -6.608916282653809
    6. 'i' → logprob: -7.608916282653809
    7. ' ' → logprob: -8.483916282653809
    8. 'prime' → logprob: -8.733916282653809
    9. ' p' → logprob: -8.858916282653809
    10. 'range' → logprob: -9.733916282653809

Token 145: ' range' (ID: 3352)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.16294406354427338
    2. 'range' → logprob: -2.0379440784454346
    3. ' primes' → logprob: -4.4129438400268555
    4. ' range' → logprob: -4.9129438400268555
    5. '(pr' → logprob: -7.9129438400268555
    6. 'prime' → logprob: -9.412943840026855
    7. '[' → logprob: -10.287943840026855
    8. ' pr' → logprob: -10.287943840026855
    9. 'p' → logprob: -11.412943840026855
    10. 'enumer' → logprob: -11.537943840026855

Token 146: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005663761985488236
    2. ' n' → logprob: -7.750566482543945
    3. '(n' → logprob: -9.250566482543945
    4. '2' → logprob: -10.375566482543945
    5. '	n' → logprob: -13.125566482543945
    6. '3' → logprob: -13.250566482543945
    7. '   ' → logprob: -14.500566482543945
    8. '10' → logprob: -14.625566482543945
    9. ' ' → logprob: -14.750566482543945
    10. '_n' → logprob: -14.750566482543945

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.041645344346761703
    2. '):
' → logprob: -3.2916452884674072
    3. ' ):' → logprob: -6.291645526885986
    4. ')' → logprob: -6.541645526885986
    5. ',' → logprob: -9.291645050048828
    6. '   ' → logprob: -9.541645050048828
    7. ' ):
' → logprob: -9.791645050048828
    8. ' )' → logprob: -10.291645050048828
    9. ':' → logprob: -11.166645050048828
    10. '):
' → logprob: -11.166645050048828

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014617849374189973
    2. ' x' → logprob: -7.376461982727051
    3. '	   ' → logprob: -8.50146198272705
    4. 'tokens' → logprob: -8.62646198272705
    5. 'x' → logprob: -9.37646198272705
    6. '   ' → logprob: -9.50146198272705
    7. ',' → logprob: -10.12646198272705
    8. ' tokens' → logprob: -10.25146198272705
    9. '<|end|>' → logprob: -10.87646198272705
    10. ' s' → logprob: -10.93896198272705

Token 149: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18032699823379517
    2. 'num' → logprob: -2.5553269386291504
    3. 'a' → logprob: -3.1803269386291504
    4. 'p' (adapté à ' p') → logprob: -4.18032693862915
    5. 'm' → logprob: -4.68032693862915
    6. ' x' → logprob: -4.93032693862915
    7. 'k' → logprob: -5.05532693862915
    8. 'number' → logprob: -6.05532693862915
    9. 'val' → logprob: -6.93032693862915
    10. ' num' → logprob: -6.93032693862915

Token 150: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9338734149932861
    2. ',' → logprob: -1.1838734149932861
    3. '=' → logprob: -1.3088734149932861
    4. 'r' → logprob: -4.058873176574707
    5. '=int' → logprob: -4.808873176574707
    6. ' ' → logprob: -6.058873176574707
    7. ' ,' → logprob: -7.058873176574707
    8. 'int' → logprob: -8.433873176574707
    9. 'ower' → logprob: -8.683873176574707
    10. '   ' → logprob: -8.683873176574707

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5774592161178589
    2. '=' → logprob: -0.8274592161178589
    3. '=int' → logprob: -8.077459335327148
    4. ',' → logprob: -8.077459335327148
    5. ' ' → logprob: -8.202459335327148
    6. '=input' → logprob: -8.327459335327148
    7. '   ' → logprob: -8.452459335327148
    8. 'ap' → logprob: -9.827459335327148
    9. '  ' → logprob: -11.077459335327148
    10. ',p' → logprob: -11.327459335327148

Token 152: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5759645700454712
    2. ' map' → logprob: -0.8259645700454712
    3. 'input' → logprob: -11.20096492767334
    4. ' input' → logprob: -12.45096492767334
    5. '	map' → logprob: -12.57596492767334
    6. ' ' → logprob: -13.07596492767334
    7. 'list' → logprob: -13.95096492767334
    8. '(map' → logprob: -15.07596492767334
    9. ' ' → logprob: -15.32596492767334
    10. 'sys' → logprob: -15.57596492767334

Token 153: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00043567578541114926
    2. '(' → logprob: -7.875435829162598
    3. '(str' → logprob: -10.750435829162598
    4. 'int' → logprob: -11.000435829162598
    5. '(input' → logprob: -11.125435829162598
    6. '[int' → logprob: -13.750435829162598
    7. '(list' → logprob: -14.250435829162598
    8. '(in' → logprob: -14.625435829162598
    9. '<int' → logprob: -15.750435829162598
    10. '=int' → logprob: -16.37543487548828

Token 154: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10045035928487778
    2. ',' → logprob: -2.350450277328491
    3. 'input' → logprob: -8.60045051574707
    4. '(input' → logprob: -9.97545051574707
    5. '(),' → logprob: -11.85045051574707
    6. ' ,' → logprob: -12.72545051574707
    7. '(' → logprob: -13.85045051574707
    8. ',int' → logprob: -14.72545051574707
    9. ' input' → logprob: -14.72545051574707
    10. ')' → logprob: -14.97545051574707

Token 155: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.125015258789062
    3. ' ().' → logprob: -16.375015258789062
    4. '(' → logprob: -16.625015258789062
    5. '()
' → logprob: -17.625015258789062
    6. '())' → logprob: -18.250015258789062
    7. '.split' → logprob: -18.375015258789062
    8. ')' → logprob: -18.500015258789062
    9. 'split' → logprob: -19.125015258789062
    10. '.' → logprob: -19.875015258789062

Token 156: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001625379954930395
    2. 'strip' → logprob: -8.750162124633789
    3. 'rstrip' → logprob: -12.625162124633789
    4. ' split' → logprob: -14.375162124633789
    5. '(split' → logprob: -15.875162124633789
    6. 'spl' → logprob: -17.75016212463379
    7. 'plit' → logprob: -19.50016212463379
    8. '.split' → logprob: -19.87516212463379
    9. '().' → logprob: -20.37516212463379
    10. ')' → logprob: -20.50016212463379

Token 157: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008468479849398136
    2. '())' → logprob: -4.8834686279296875
    3. ')
' → logprob: -7.6334686279296875
    4. '()' → logprob: -8.008468627929688
    5. '())
' → logprob: -11.133468627929688
    6. ')`' → logprob: -11.383468627929688
    7. '))' → logprob: -11.883468627929688
    8. ' )' → logprob: -12.133468627929688
    9. '(' → logprob: -13.008468627929688
    10. ')
' → logprob: -13.508468627929688

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1446276307106018
    2. '   ' → logprob: -2.019627571105957
    3. ' ' → logprob: -8.269627571105957
    4. ',' → logprob: -8.269627571105957
    5. '        
' → logprob: -8.519627571105957
    6. ' if' → logprob: -8.644627571105957
    7. '<|end|>' → logprob: -8.769627571105957
    8. ' for' → logprob: -8.769627571105957
    9. '
' → logprob: -8.894627571105957
    10. '    
' → logprob: -9.394627571105957

Token 159: ' left' (ID: 3561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30538466572761536
    2. 'if' → logprob: -2.055384635925293
    3. 'count' → logprob: -2.680384635925293
    4. 'for' → logprob: -3.555384635925293
    5. 'idx' → logprob: -4.305384635925293
    6. 'key' → logprob: -4.930384635925293
    7. ' if' → logprob: -5.555384635925293
    8. 'index' → logprob: -5.805384635925293
    9. ' count' → logprob: -6.430384635925293
    10. ' key' → logprob: -6.430384635925293

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11641553789377213
    2. '=' → logprob: -2.866415500640869
    3. '_idx' → logprob: -2.991415500640869
    4. '_index' → logprob: -6.616415500640869
    5. ',' → logprob: -7.241415500640869
    6. 'idx' → logprob: -7.366415500640869
    7. '_' → logprob: -11.241415977478027
    8. 'index' → logprob: -11.491415977478027
    9. '_ind' → logprob: -11.991415977478027
    10. '_key' → logprob: -12.116415977478027

Token 161: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.3154538869857788
    2. ' bis' → logprob: -1.3154538869857788
    3. '0' → logprob: -6.190454006195068
    4. ' ' → logprob: -9.94045352935791
    5. 'b' → logprob: -10.69045352935791
    6. '1' → logprob: -11.06545352935791
    7. ' p' → logprob: -11.19045352935791
    8. '   ' → logprob: -11.69045352935791
    9. '	b' → logprob: -11.81545352935791
    10. 'bs' → logprob: -12.06545352935791

Token 162: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.5048530030981055e-06
    2. 'e' → logprob: -14.500001907348633
    3. '```' → logprob: -14.875001907348633
    4. 'sect' → logprob: -16.250001907348633
    5. '<' → logprob: -16.750001907348633
    6. 'ext' → logprob: -16.875001907348633
    7. 'lect' → logprob: -16.875001907348633
    8. '#' → logprob: -17.625001907348633
    9. 'ects' → logprob: -17.875001907348633
    10. 'ectl' → logprob: -18.000001907348633

Token 163: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.11297287046909332
    2. '_left' → logprob: -2.2379729747772217
    3. '.pr' → logprob: -9.4879732131958
    4. 'left' → logprob: -10.6129732131958
    5. 'pr' → logprob: -11.3629732131958
    6. 'Left' → logprob: -11.3629732131958
    7. 'bis' → logprob: -11.6129732131958
    8. '.' → logprob: -12.1129732131958
    9. '(pr' → logprob: -12.4879732131958
    10. '.ins' → logprob: -12.8629732131958

Token 164: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46483927965164185
    2. 'sect' → logprob: -1.839839220046997
    3. 'is' → logprob: -2.339839220046997
    4. 'spect' → logprob: -3.214839220046997
    5. 'ct' → logprob: -3.714839220046997
    6. '```' → logprob: -4.339839458465576
    7. 'n' → logprob: -4.839839458465576
    8. 'r' → logprob: -5.339839458465576
    9. 'rs' → logprob: -5.714839458465576
    10. 'st' → logprob: -6.089839458465576

Token 165: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.093505099765025e-05
    2. 'e' → logprob: -11.250020980834961
    3. 'ct' → logprob: -12.250020980834961
    4. '```' → logprob: -14.125020980834961
    5. 'lect' → logprob: -14.500020980834961
    6. 'ectl' → logprob: -14.750020980834961
    7. 'ects' → logprob: -15.000020980834961
    8. 'sect' → logprob: -15.125020980834961
    9. '<' → logprob: -16.00002098083496
    10. 'ected' → logprob: -16.12502098083496

Token 166: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0015180727932602167
    2. '(pr' → logprob: -6.751518249511719
    3. '_right' → logprob: -8.001518249511719
    4. 'left' → logprob: -11.376518249511719
    5. 'Left' → logprob: -13.876518249511719
    6. '-left' → logprob: -16.25151824951172
    7. '_LEFT' → logprob: -16.37651824951172
    8. '_Left' → logprob: -17.25151824951172
    9. 's' → logprob: -17.37651824951172
    10. '(' → logprob: -17.50151824951172

Token 167: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -4.1080467781284824e-05
    2. 'pr' → logprob: -10.125041007995605
    3. '	pr' → logprob: -14.875041007995605
    4. '(pl' → logprob: -15.125041007995605
    5. '(' → logprob: -15.500041007995605
    6. '(p' → logprob: -17.875041961669922
    7. ' (' → logprob: -18.000041961669922
    8. ')' → logprob: -18.250041961669922
    9. '```' → logprob: -18.625041961669922
    10. '/pr' → logprob: -19.000041961669922

Token 168: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -1.6286106983898208e-05
    2. '[' → logprob: -13.500016212463379
    3. '

' → logprob: -13.750016212463379
    4. 'im' → logprob: -13.750016212463379
    5. '
' → logprob: -13.875016212463379
    6. 'imates' → logprob: -13.875016212463379
    7. 'mes' → logprob: -14.000016212463379
    8. '   ' → logprob: -14.375016212463379
    9. '`' → logprob: -14.375016212463379
    10. '#' → logprob: -14.500016212463379

Token 169: ',' (ID: 11)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.34092703461647034
    2. ',' → logprob: -1.340927004814148
    3. ',(' → logprob: -4.0909271240234375
    4. '(p' → logprob: -4.5909271240234375
    5. ',[' → logprob: -9.090927124023438
    6. '(pr' → logprob: -9.340927124023438
    7. ' ,' → logprob: -9.340927124023438
    8. ',m' → logprob: -9.965927124023438
    9. '(' → logprob: -10.215927124023438
    10. ',k' → logprob: -12.090927124023438

Token 170: ' max' (ID: 2999)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017073206836357713
    2. ' p' → logprob: -6.376707553863525
    3. '(p' → logprob: -12.376707077026367
    4. 'm' → logprob: -14.251707077026367
    5. 'pm' → logprob: -16.001707077026367
    6. '(' → logprob: -17.001707077026367
    7. ')' → logprob: -17.126707077026367
    8. ' ' → logprob: -17.376707077026367
    9. ')p' → logprob: -17.376707077026367
    10. '   ' → logprob: -17.376707077026367

Token 171: '(' (ID: 7)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.34928879141807556
    2. '(' → logprob: -1.224288821220398
    3. '(m' → logprob: -7.5992889404296875
    4. 'p' → logprob: -9.099288940429688
    5. '((' → logprob: -9.599288940429688
    6. ')' → logprob: -9.974288940429688
    7. '(pr' → logprob: -10.099288940429688
    8. '1' → logprob: -11.349288940429688
    9. '(left' → logprob: -11.849288940429688
    10. ')p' → logprob: -11.974288940429688

Token 172: '0' (ID: 15)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.4688059091567993
    2. 'p' → logprob: -1.4688059091567993
    3. '(' → logprob: -2.3438057899475098
    4. '1' → logprob: -3.2188057899475098
    5. '(m' → logprob: -5.34380578994751
    6. 'm' → logprob: -6.84380578994751
    7. '2' → logprob: -7.34380578994751
    8. ')' → logprob: -7.84380578994751
    9. '0' → logprob: -8.343806266784668
    10. ')p' → logprob: -8.968806266784668

Token 173: ',p' (ID: 14835)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.13867321610450745
    2. ',p' → logprob: -2.2636733055114746
    3. '(' → logprob: -4.513673305511475
    4. ',' → logprob: -4.513673305511475
    5. '(m' → logprob: -6.638673305511475
    6. 'p' → logprob: -7.263673305511475
    7. ',m' → logprob: -7.263673305511475
    8. ',(' → logprob: -8.263672828674316
    9. ')' → logprob: -8.763672828674316
    10. ' ,' → logprob: -8.888672828674316

Token 174: '-m' (ID: 2126)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.015361585654318333
    2. '))
' → logprob: -5.390361785888672
    3. '+' → logprob: -5.515361785888672
    4. ')' → logprob: -6.015361785888672
    5. '-m' → logprob: -6.890361785888672
    6. '-' → logprob: -7.015361785888672
    7. ' ))' → logprob: -7.390361785888672
    8. ' -' → logprob: -7.640361785888672
    9. '+p' → logprob: -7.765361785888672
    10. '+m' → logprob: -8.390361785888672

Token 175: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009916987270116806
    2. '))
' → logprob: -5.63491678237915
    3. ')' → logprob: -5.88491678237915
    4. '-' → logprob: -6.50991678237915
    5. ' ))' → logprob: -6.63491678237915
    6. '+' → logprob: -8.009917259216309
    7. ' -' → logprob: -9.259917259216309
    8. ' )' → logprob: -10.009917259216309
    9. ')))' → logprob: -10.009917259216309
    10. ' ))
' → logprob: -10.134917259216309

Token 176: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3841826617717743
    2. '   ' → logprob: -2.3841826915740967
    3. ' ' → logprob: -2.6341826915740967
    4. ',' → logprob: -2.8841826915740967
    5. '    
' → logprob: -3.7591826915740967
    6. '    ' → logprob: -4.384182453155518
    7. '<|end|>' → logprob: -4.634182453155518
    8. '\n' → logprob: -5.009182453155518
    9. ' 
' → logprob: -5.134182453155518
    10. 'newline' → logprob: -5.384182453155518

Token 177: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5791218280792236
    2. 'right' (adapté à ' right') → logprob: -0.8291218280792236
    3. '       ' → logprob: -6.3291215896606445
    4. '	right' → logprob: -6.8291215896606445
    5. ',right' → logprob: -9.204121589660645
    6. '[right' → logprob: -9.954121589660645
    7. '<|end|>' → logprob: -10.204121589660645
    8. '_right' → logprob: -10.329121589660645
    9. '.right' → logprob: -10.954121589660645
    10. ')' → logprob: -11.204121589660645

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054235339164734
    2. '=' → logprob: -3.8955423831939697
    3. '   ' → logprob: -15.89554214477539
    4. ')' → logprob: -16.27054214477539
    5. ' ' → logprob: -16.39554214477539
    6. ' =
' → logprob: -17.02054214477539
    7. '=b' → logprob: -17.39554214477539
    8. ' +=' → logprob: -17.64554214477539
    9. '	' → logprob: -18.02054214477539
    10. '+' → logprob: -18.02054214477539

Token 179: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.0889434963464737
    2. 'bis' → logprob: -2.4639434814453125
    3. 'b' → logprob: -13.588943481445312
    4. '   ' → logprob: -13.588943481445312
    5. '	b' → logprob: -14.463943481445312
    6. ' ' → logprob: -15.338943481445312
    7. 'len' → logprob: -16.338943481445312
    8. 'bi' → logprob: -16.901443481445312
    9. 'Bis' → logprob: -16.901443481445312
    10. ' ' → logprob: -16.963943481445312

Token 180: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.2783142626285553
    2. 'ct' → logprob: -1.528314232826233
    3. 'sect' → logprob: -3.6533143520355225
    4. 's' → logprob: -10.028314590454102
    5. '```' → logprob: -10.653314590454102
    6. 'с' → logprob: -10.903314590454102
    7. 'set' → logprob: -11.903314590454102
    8. 'rect' → logprob: -12.153314590454102
    9. 'ects' → logprob: -12.153314590454102
    10. 'lect' → logprob: -12.278314590454102

Token 181: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0004688034241553396
    2. '_right' → logprob: -7.875468730926514
    3. '.' → logprob: -9.375469207763672
    4. 'right' → logprob: -14.250469207763672
    5. '	b' → logprob: -14.500469207763672
    6. ' .' → logprob: -14.625469207763672
    7. 'bis' → logprob: -14.750469207763672
    8. '   ' → logprob: -15.000469207763672
    9. '_b' → logprob: -15.125469207763672
    10. 'Right' → logprob: -15.125469207763672

Token 182: 'is' (ID: 276)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.4008147120475769
    2. 'is' → logprob: -1.9008147716522217
    3. 'ct' → logprob: -2.4008147716522217
    4. 's' → logprob: -2.9008147716522217
    5. 'ect' → logprob: -3.5258147716522217
    6. 'st' → logprob: -6.525814533233643
    7. 'bis' → logprob: -7.025814533233643
    8. '```' → logprob: -7.025814533233643
    9. 'ist' → logprob: -7.900814533233643
    10. 'spect' → logprob: -8.1508150100708

Token 183: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.29697030782699585
    2. 'ect' → logprob: -1.7969703674316406
    3. 'sect' → logprob: -2.4219703674316406
    4. 's' → logprob: -6.671970367431641
    5. '```' → logprob: -8.04697036743164
    6. 'с' → logprob: -8.42197036743164
    7. 'st' → logprob: -9.17197036743164
    8. 'se' → logprob: -9.17197036743164
    9. 't' → logprob: -10.17197036743164
    10. 'sort' → logprob: -10.42197036743164

Token 184: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.001329287188127637
    2. '_left' → logprob: -6.62632942199707
    3. 'right' → logprob: -12.87632942199707
    4. '_' → logprob: -15.62632942199707
    5. '```' → logprob: -16.25132942199707
    6. 'r' → logprob: -16.37632942199707
    7. '_RIGHT' → logprob: -16.75132942199707
    8. 'ight' → logprob: -17.12632942199707
    9. '.b' → logprob: -17.25132942199707
    10. '_b' → logprob: -17.25132942199707

Token 185: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -1.7954958821064793e-05
    2. 'pr' → logprob: -11.000018119812012
    3. '(' → logprob: -13.875018119812012
    4. ' (' → logprob: -16.375017166137695
    5. '	pr' → logprob: -16.625017166137695
    6. '(pl' → logprob: -16.750017166137695
    7. '/pr' → logprob: -16.875017166137695
    8. '```' → logprob: -17.500017166137695
    9. '.pr' → logprob: -18.875017166137695
    10. ' ' → logprob: -19.875017166137695

Token 186: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.24933122098445892
    2. '(pr' → logprob: -1.8743312358856201
    3. 'pr' → logprob: -2.74933123588562
    4. 's' → logprob: -6.124330997467041
    5. 'im' → logprob: -8.1243314743042
    6. 'r' → logprob: -8.8743314743042
    7. 'es' → logprob: -9.1243314743042
    8. ',' → logprob: -9.6243314743042
    9. 'import' → logprob: -9.7493314743042
    10. ' primes' → logprob: -10.1243314743042

Token 187: ',' (ID: 11)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.12723560631275177
    2. ',' → logprob: -2.1272356510162354
    3. ' ,' → logprob: -8.877235412597656
    4. ' (' → logprob: -9.002235412597656
    5. ')' → logprob: -10.877235412597656
    6. '(' → logprob: -11.627235412597656
    7. ',(' → logprob: -12.627235412597656
    8. '),' → logprob: -12.877235412597656
    9. ',max' → logprob: -13.002235412597656
    10. '   ' → logprob: -13.627235412597656

Token 188: ' min' (ID: 1349)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29162028431892395
    2. 'min' → logprob: -1.9166202545166016
    3. ' p' → logprob: -2.4166202545166016
    4. ' min' → logprob: -4.166620254516602
    5. 'max' → logprob: -6.916620254516602
    6. ' max' → logprob: -9.291620254516602
    7. 'pr' → logprob: -11.541620254516602
    8. '(min' → logprob: -11.666620254516602
    9. ' ' → logprob: -12.541620254516602
    10. '   ' → logprob: -12.666620254516602

Token 189: '(M' (ID: 6103)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.023506464436650276
    2. '(pr' → logprob: -3.7735064029693604
    3. '(' → logprob: -8.523506164550781
    4. '(M' → logprob: -9.898506164550781
    5. '(PR' → logprob: -12.648506164550781
    6. '((' → logprob: -12.898506164550781
    7. 'pr' → logprob: -13.523506164550781
    8. ' (' → logprob: -13.648506164550781
    9. '(mp' → logprob: -14.023506164550781
    10. 'p' → logprob: -14.523506164550781

Token 190: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -8.494741632603109e-05
    2. ')' → logprob: -10.12508487701416
    3. 'p' → logprob: -11.75008487701416
    4. '   ' → logprob: -11.87508487701416
    5. ',' → logprob: -12.50008487701416
    6. ' P' → logprob: -12.62508487701416
    7. 'MP' → logprob: -12.62508487701416
    8. '100' → logprob: -12.87508487701416
    9. '999' → logprob: -12.87508487701416
    10. ' ' → logprob: -13.50008487701416

Token 191: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.16073077917099
    2. ',' → logprob: -1.9107308387756348
    3. ' ,' → logprob: -8.035730361938477
    4. 'p' → logprob: -8.910730361938477
    5. ',(' → logprob: -11.660730361938477
    6. ',max' → logprob: -11.785730361938477
    7. ',n' → logprob: -12.160730361938477
    8. ',
' → logprob: -12.785730361938477
    9. '(p' → logprob: -13.598230361938477
    10. ' p' → logprob: -13.598230361938477

Token 192: '+m' (ID: 139456)
  Prédit: '+m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.0007459024200215936
    2. '+' → logprob: -7.37574577331543
    3. ' +' → logprob: -9.12574577331543
    4. '+
' → logprob: -12.62574577331543
    5. '+p' → logprob: -13.12574577331543
    6. 'm' → logprob: -13.50074577331543
    7. ')+' → logprob: -13.75074577331543
    8. 'plus' → logprob: -14.12574577331543
    9. ')' → logprob: -14.87574577331543
    10. '＋' → logprob: -15.00074577331543

Token 193: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18340902030467987
    2. '))' → logprob: -1.8084089756011963
    3. ')+' → logprob: -5.808409214019775
    4. ')
' → logprob: -7.933409214019775
    5. '))+' → logprob: -8.933408737182617
    6. '))
' → logprob: -9.558408737182617
    7. '   ' → logprob: -10.683408737182617
    8. ' )' → logprob: -10.683408737182617
    9. '+' → logprob: -11.058408737182617
    10. ')))' → logprob: -11.683408737182617

Token 194: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002028446411713958
    2. '       ' → logprob: -6.627028465270996
    3. ')' → logprob: -8.002028465270996
    4. ' for' → logprob: -8.752028465270996
    5. '    
' → logprob: -9.502028465270996
    6. '
' → logprob: -9.752028465270996
    7. 'for' → logprob: -10.252028465270996
    8. '<|end|>' → logprob: -11.002028465270996
    9. '	for' → logprob: -12.752028465270996
    10. ',' → logprob: -12.752028465270996

Token 195: ' X' (ID: 2127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8714441657066345
    2. ' for' → logprob: -1.2464442253112793
    3. 'for' → logprob: -1.7464442253112793
    4. 'count' → logprob: -2.4964442253112793
    5. ' count' → logprob: -4.621444225311279
    6. '
' → logprob: -4.746444225311279
    7. '       ' → logprob: -5.746444225311279
    8. '    
' → logprob: -6.121444225311279
    9. ')' → logprob: -6.371444225311279
    10. 'print' → logprob: -6.371444225311279

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26576846837997437
    2. ' =' → logprob: -1.6407685279846191
    3. '=count' → logprob: -4.265768527984619
    4. 'count' → logprob: -4.640768527984619
    5. '_count' → logprob: -5.765768527984619
    6. '_' → logprob: -6.015768527984619
    7. '=len' → logprob: -6.390768527984619
    8. 'for' → logprob: -6.390768527984619
    9. ')' → logprob: -7.515768527984619
    10. '_counts' → logprob: -7.515768527984619

Token 197: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.18595364689826965
    2. 'pr' → logprob: -2.1859536170959473
    3. ' right' → logprob: -3.5609536170959473
    4. ' primes' → logprob: -5.060953617095947
    5. 'bis' → logprob: -5.185953617095947
    6. '0' → logprob: -5.310953617095947
    7. 'max' → logprob: -6.060953617095947
    8. '(pr' → logprob: -6.560953617095947
    9. 'sum' → logprob: -6.685953617095947
    10. 'len' → logprob: -6.685953617095947

Token 198: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5278518795967102
    2. '-' → logprob: -0.9028518795967102
    3. '-left' → logprob: -5.4028520584106445
    4. '-token' → logprob: -9.152852058410645
    5. '-l' → logprob: -10.152852058410645
    6. '[left' → logprob: -10.527852058410645
    7. '[' → logprob: -11.777852058410645
    8. ')' → logprob: -12.527852058410645
    9. ' ' → logprob: -12.902852058410645
    10. '-n' → logprob: -13.152852058410645

Token 199: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00038264848990365863
    2. ' left' → logprob: -7.875382423400879
    3. '1' → logprob: -13.000382423400879
    4. '[left' → logprob: -16.125383377075195
    5. '	left' → logprob: -17.000383377075195
    6. ' ' → logprob: -17.500383377075195
    7. '(left' → logprob: -18.625383377075195
    8. ',left' → logprob: -19.000383377075195
    9. '_left' → logprob: -19.125383377075195
    10. ':left' → logprob: -19.500383377075195

Token 200: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29769182205200195
    2. '   ' → logprob: -1.422691822052002
    3. '<|end|>' → logprob: -4.547691822052002
    4. ' for' → logprob: -5.797691822052002
    5. '    
' → logprob: -7.047691822052002
    6. 'for' → logprob: -8.172691345214844
    7. ' if' → logprob: -8.172691345214844
    8. ' 
' → logprob: -8.547691345214844
    9. '
' → logprob: -8.672691345214844
    10. '  
' → logprob: -8.797691345214844

Token 201: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22774074971675873
    2. '   ' → logprob: -1.97774076461792
    3. '<|end|>' → logprob: -3.22774076461792
    4. '    
' → logprob: -4.47774076461792
    5. ' 
' → logprob: -5.35274076461792
    6. '\n' → logprob: -5.97774076461792
    7. ' ' → logprob: -6.47774076461792
    8. '  
' → logprob: -6.60274076461792
    9. '       ' → logprob: -7.22774076461792
    10. ')' → logprob: -7.35274076461792

Token 202: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7173891067504883
    2. 'if' (adapté à ' if') → logprob: -1.5923891067504883
    3. ')' → logprob: -2.2173891067504883
    4. ' for' → logprob: -3.0923891067504883
    5. '   ' → logprob: -3.3423891067504883
    6. 'count' → logprob: -3.3423891067504883
    7. '
' → logprob: -3.4673891067504883
    8. 'for' → logprob: -3.8423891067504883
    9. ' 
' → logprob: -4.967389106750488
    10. ' count' → logprob: -5.342389106750488

Token 203: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8967023491859436
    2. ' X' → logprob: -1.2717022895812988
    3. ' (' → logprob: -2.021702289581299
    4. 'X' → logprob: -3.021702289581299
    5. 'p' → logprob: -3.021702289581299
    6. ' primes' → logprob: -3.271702289581299
    7. ' ' → logprob: -4.771702289581299
    8. '(p' → logprob: -4.896702289581299
    9. '(' → logprob: -5.271702289581299
    10. ' n' → logprob: -5.521702289581299

Token 204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08230124413967133
    2. ' not' → logprob: -3.207301139831543
    3. '-' → logprob: -3.957301139831543
    4. ' -' → logprob: -5.332301139831543
    5. '+' → logprob: -5.332301139831543
    6. 'in' → logprob: -6.082301139831543
    7. '>=' → logprob: -6.207301139831543
    8. '==' → logprob: -6.457301139831543
    9. '-m' → logprob: -6.832301139831543
    10. '>' → logprob: -7.582301139831543

Token 205: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00015872348740231246
    2. ' count' → logprob: -8.750158309936523
    3. '[count' → logprob: -16.250158309936523
    4. '   ' → logprob: -17.750158309936523
    5. '<count' → logprob: -18.250158309936523
    6. '(count' → logprob: -18.375158309936523
    7. '	count' → logprob: -18.500158309936523
    8. '
' → logprob: -18.750158309936523
    9. 'counts' → logprob: -19.000158309936523
    10. 'Count' → logprob: -19.125158309936523

Token 206: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -4.320199877838604e-07
    2. '_count' → logprob: -15.0
    3. 'by' → logprob: -17.25
    4. '_counts' → logprob: -18.125
    5. '_p' → logprob: -19.125
    6. 'By' → logprob: -19.5
    7. '...' → logprob: -20.0
    8. '\' → logprob: -20.0
    9. '_BY' → logprob: -20.0
    10. '_' → logprob: -20.0

Token 207: '_p' (ID: 1359)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0401342548429966
    2. '_p' → logprob: -3.6651341915130615
    3. 'count' → logprob: -4.290134429931641
    4. ' p' → logprob: -11.54013442993164
    5. '```' → logprob: -11.91513442993164
    6. 'range' → logprob: -12.66513442993164
    7. ' ' → logprob: -13.29013442993164
    8. '_count' → logprob: -13.29013442993164
    9. '
' → logprob: -13.41513442993164
    10. '   ' → logprob: -13.79013442993164

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005479914136230946
    2. ':
' → logprob: -5.25547981262207
    3. ']:' → logprob: -9.38047981262207
    4. '==' → logprob: -10.25547981262207
    5. ' :' → logprob: -10.50547981262207
    6. 'and' → logprob: -10.75547981262207
    7. '):' → logprob: -10.88047981262207
    8. ' and' → logprob: -11.13047981262207
    9. '.keys' → logprob: -11.88047981262207
    10. '>:' → logprob: -12.13047981262207

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07659483700990677
    2. '[count' → logprob: -3.576594829559326
    3. 'count' → logprob: -3.826594829559326
    4. ' count' → logprob: -4.451594829559326
    5. '       ' → logprob: -5.576594829559326
    6. '[' → logprob: -6.201594829559326
    7. '```' → logprob: -6.451594829559326
    8. '	       ' → logprob: -6.826594829559326
    9. '	count' → logprob: -7.576594829559326
    10. '<|end|>' → logprob: -7.701594829559326

Token 210: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.12727653980255127
    2. ' count' → logprob: -2.1272764205932617
    3. '       ' → logprob: -8.877276420593262
    4. '   ' → logprob: -9.127276420593262
    5. '           ' → logprob: -9.877276420593262
    6. '	count' → logprob: -10.252276420593262
    7. '[count' → logprob: -12.002276420593262
    8. '_count' → logprob: -13.377276420593262
    9. '
' → logprob: -13.502276420593262
    10. '.count' → logprob: -13.877276420593262

Token 211: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -1.9361264946837764e-07
    2. '[p' → logprob: -16.5
    3. 'By' → logprob: -17.75
    4. 'by' → logprob: -18.0
    5. '_BY' → logprob: -19.5
    6. '_of' → logprob: -20.0
    7. '_By' → logprob: -20.0
    8. 's' → logprob: -20.375
    9. '   ' → logprob: -20.75
    10. '_at' → logprob: -20.875

Token 212: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.4742968678474426
    2. 'p' → logprob: -0.9742968678474426
    3. 'count' → logprob: -8.474296569824219
    4. '[p' → logprob: -12.599296569824219
    5. '	p' → logprob: -13.849296569824219
    6. '
' → logprob: -13.849296569824219
    7. '```' → logprob: -13.849296569824219
    8. ' p' → logprob: -14.349296569824219
    9. 't' → logprob: -14.474296569824219
    10. 'get' → logprob: -14.724296569824219

Token 213: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.3856492842023727e-06
    2. 'p' → logprob: -14.250000953674316
    3. '[' → logprob: -14.625000953674316
    4. ' [' → logprob: -16.000001907348633
    5. '```' → logprob: -16.875001907348633
    6. '][' → logprob: -18.250001907348633
    7. '\[' → logprob: -19.000001907348633
    8. '	p' → logprob: -19.000001907348633
    9. ' p' → logprob: -19.125001907348633
    10. '[i' → logprob: -19.250001907348633

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10022630542516708
    2. ']+=' → logprob: -2.350226402282715
    3. ']+' → logprob: -11.475226402282715
    4. '+=' → logprob: -12.475226402282715
    5. '']' → logprob: -13.225226402282715
    6. ']=' → logprob: -13.475226402282715
    7. '[' → logprob: -13.725226402282715
    8. ' ]' → logprob: -14.475226402282715
    9. '"]' → logprob: -16.1002254486084
    10. ']]' → logprob: -16.1002254486084

Token 215: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10045801103115082
    2. ' +=' → logprob: -2.3504579067230225
    3. '=' → logprob: -8.600458145141602
    4. ']+=' → logprob: -9.975458145141602
    5. '+' → logprob: -11.350458145141602
    6. ' =' → logprob: -11.975458145141602
    7. '[' → logprob: -13.725458145141602
    8. ' +' → logprob: -14.225458145141602
    9. '+='' → logprob: -15.225458145141602
    10. ' ' → logprob: -15.475458145141602

Token 216: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00043686782009899616
    2. ' X' → logprob: -7.750436782836914
    3. '1' → logprob: -12.000436782836914
    4. ' ' → logprob: -17.500436782836914
    5. '	X' → logprob: -18.000436782836914
    6. '>X' → logprob: -18.875436782836914
    7. '   ' → logprob: -19.750436782836914
    8. '0' → logprob: -20.625436782836914
    9. '+' → logprob: -20.875436782836914
    10. '(X' → logprob: -21.000436782836914

Token 217: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6025999784469604
    2. '       ' → logprob: -0.9775999784469604
    3. ' else' → logprob: -2.60260009765625
    4. '	else' → logprob: -6.85260009765625
    5. '<|end|>' → logprob: -6.97760009765625
    6. '
' → logprob: -9.22760009765625
    7. '	' → logprob: -9.35260009765625
    8. '   ' → logprob: -10.22760009765625
    9. '}else' → logprob: -10.85260009765625
    10. '#else' → logprob: -10.97760009765625

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.745406448841095
    2. 'else' → logprob: -0.745406448841095
    3. ' else' → logprob: -2.99540638923645
    4. '	else' → logprob: -7.245406627655029
    5. '<|end|>' → logprob: -8.995406150817871
    6. '	' → logprob: -10.120406150817871
    7. '   ' → logprob: -12.245406150817871
    8. '}else' → logprob: -12.620406150817871
    9. '#else' → logprob: -12.745406150817871
    10. '_else' → logprob: -13.120406150817871

Token 219: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.14746738970279694
    2. ' else' → logprob: -2.1474673748016357
    3. '       ' → logprob: -3.8974673748016357
    4. '	else' → logprob: -10.272467613220215
    5. '   ' → logprob: -14.147467613220215
    6. '```' → logprob: -14.772467613220215
    7. '	' → logprob: -15.522467613220215
    8. '        ' → logprob: -16.2724666595459
    9. '_else' → logprob: -16.5224666595459
    10. '}else' → logprob: -16.6474666595459

Token 220: ':
' (ID: 734)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.06359583884477615
    2. '           ' → logprob: -3.188595771789551
    3. 'count' → logprob: -4.063595771789551
    4. ':' → logprob: -6.813595771789551
    5. '   ' → logprob: -7.188595771789551
    6. ':
' → logprob: -7.813595771789551
    7. '       ' → logprob: -8.06359577178955
    8. '	count' → logprob: -8.81359577178955
    9. '          ' → logprob: -9.31359577178955
    10. '[count' → logprob: -9.56359577178955

Token 221: '           ' (ID: 352)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.188831627368927
    2. 'count' → logprob: -2.1888315677642822
    3. '           ' → logprob: -2.8138315677642822
    4. '	count' → logprob: -11.063831329345703
    5. '          ' → logprob: -11.438831329345703
    6. '[count' → logprob: -12.063831329345703
    7. '       ' → logprob: -12.563831329345703
    8. ',count' → logprob: -12.813831329345703
    9. '   ' → logprob: -12.938831329345703
    10. '        ' → logprob: -12.938831329345703

Token 222: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00026169343618676066
    2. ' count' → logprob: -8.250261306762695
    3. '       ' → logprob: -15.625261306762695
    4. '           ' → logprob: -16.000261306762695
    5. '   ' → logprob: -16.750261306762695
    6. '	count' → logprob: -17.625261306762695
    7. ' ' → logprob: -18.000261306762695
    8. '_count' → logprob: -19.875261306762695
    9. '  ' → logprob: -20.000261306762695
    10. '[count' → logprob: -20.000261306762695

Token 223: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -1.9361264946837764e-07
    2. 'by' → logprob: -16.5
    3. 'By' → logprob: -17.875
    4. '_count' → logprob: -18.125
    5. '_to' → logprob: -19.0
    6. '_of' → logprob: -19.375
    7. '_By' → logprob: -19.625
    8. '_BY' → logprob: -19.875
    9. '_for' → logprob: -20.5
    10. '```' → logprob: -20.75

Token 224: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.05133041739463806
    2. 'p' → logprob: -3.176330327987671
    3. 'count' → logprob: -4.80133056640625
    4. '_count' → logprob: -9.80133056640625
    5. 'by' → logprob: -11.67633056640625
    6. '_by' → logprob: -12.05133056640625
    7. '```' → logprob: -12.92633056640625
    8. '{' → logprob: -13.92633056640625
    9. '
' → logprob: -14.05133056640625
    10. ''p' → logprob: -14.30133056640625

Token 225: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -8.458980300929397e-05
    2. '[' → logprob: -9.50008487701416
    3. ' [' → logprob: -12.12508487701416
    4. '   ' → logprob: -13.75008487701416
    5. 'p' → logprob: -14.00008487701416
    6. '```' → logprob: -14.12508487701416
    7. '       ' → logprob: -15.37508487701416
    8. '\[' → logprob: -15.87508487701416
    9. '[
' → logprob: -16.125083923339844
    10. '![' → logprob: -16.250083923339844

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0461302176117897
    2. '=' → logprob: -3.1711301803588867
    3. ']=' → logprob: -5.796130180358887
    4. ' =' → logprob: -9.421130180358887
    5. ')' → logprob: -13.046130180358887
    6. ' ]' → logprob: -13.796130180358887
    7. ']+=' → logprob: -14.171130180358887
    8. ':' → logprob: -15.296130180358887
    9. '```' → logprob: -15.421130180358887
    10. '+=' → logprob: -15.421130180358887

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858827963471413
    2. ' =' → logprob: -3.048588275909424
    3. '+=' → logprob: -13.923588752746582
    4. ' +=' → logprob: -17.048587799072266
    5. ' ' → logprob: -17.923587799072266
    6. '=
' → logprob: -19.048587799072266
    7. '＝' → logprob: -19.048587799072266
    8. ')' → logprob: -19.298587799072266
    9. '+' → logprob: -19.548587799072266
    10. '   ' → logprob: -19.548587799072266

Token 228: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -3.547789674485102e-05
    2. ' X' → logprob: -10.250035285949707
    3. '	X' → logprob: -20.000036239624023
    4. '   ' → logprob: -20.750036239624023
    5. '0' → logprob: -21.000036239624023
    6. '>X' → logprob: -21.625036239624023
    7. '       ' → logprob: -21.750036239624023
    8. '           ' → logprob: -21.875036239624023
    9. 'Xs' → logprob: -21.875036239624023
    10. ' ' → logprob: -22.500036239624023

Token 229: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23672303557395935
    2. '   ' → logprob: -2.111722946166992
    3. '
' → logprob: -3.236722946166992
    4. ' for' → logprob: -3.736722946166992
    5. 'print' → logprob: -3.861722946166992
    6. '<|end|>' → logprob: -5.861722946166992
    7. '    
' → logprob: -7.361722946166992
    8. ')' → logprob: -7.861722946166992
    9. '	for' → logprob: -8.486722946166992
    10. '#' → logprob: -8.861722946166992

Token 230: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3586493730545044
    2. 'for' → logprob: -1.4836493730545044
    3. '   ' → logprob: -1.6086493730545044
    4. 'print' → logprob: -1.8586493730545044
    5. '<|end|>' → logprob: -2.233649253845215
    6. ')' → logprob: -3.733649253845215
    7. ' for' → logprob: -3.983649253845215
    8. '    
' → logprob: -6.233649253845215
    9. '#' → logprob: -6.983649253845215
    10. '\n' → logprob: -7.108649253845215

Token 231: ' king' (ID: 13793)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.45047467947006226
    2. 'for' → logprob: -1.450474739074707
    3. 'print' → logprob: -2.700474739074707
    4. 'sorted' → logprob: -3.325474739074707
    5. 'answer' → logprob: -5.075474739074707
    6. '   ' → logprob: -5.325474739074707
    7. 'result' → logprob: -5.825474739074707
    8. ' for' → logprob: -6.200474739074707
    9. 'keys' → logprob: -6.200474739074707
    10. 'min' → logprob: -6.450474739074707

Token 232: '_cost' (ID: 36820)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.75985187292099
    2. 's' → logprob: -1.8848519325256348
    3. ' =' → logprob: -2.1348519325256348
    4. '=' → logprob: -2.1348519325256348
    5. 'dom' → logprob: -3.1348519325256348
    6. '_counts' → logprob: -3.3848519325256348
    7. '_' → logprob: -4.134851932525635
    8. '_count' → logprob: -4.259851932525635
    9. '_s' → logprob: -4.884851932525635
    10. '_positions' → logprob: -5.134851932525635

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6678763031959534
    2. ' =' → logprob: -1.1678762435913086
    3. 's' → logprob: -1.7928762435913086
    4. ',' → logprob: -5.292876243591309
    5. '[' → logprob: -5.917876243591309
    6. '_cost' → logprob: -7.917876243591309
    7. '_by' → logprob: -8.167876243591309
    8. '[p' → logprob: -8.917876243591309
    9. '_sum' → logprob: -9.167876243591309
    10. '_count' → logprob: -9.292876243591309

Token 234: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7596102952957153
    2. 'min' → logprob: -1.5096102952957153
    3. ' max' → logprob: -2.384610176086426
    4. '0' → logprob: -2.759610176086426
    5. ' min' → logprob: -2.884610176086426
    6. 'sum' → logprob: -3.134610176086426
    7. 'float' → logprob: -3.384610176086426
    8. ' sum' → logprob: -4.759610176086426
    9. ' float' → logprob: -5.009610176086426
    10. ' ' → logprob: -6.009610176086426

Token 235: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5778252482414246
    2. 'min' → logprob: -1.0778253078460693
    3. 'float' → logprob: -3.0778253078460693
    4. 'sum' → logprob: -3.5778253078460693
    5. '0' → logprob: -3.8278253078460693
    6. '999' → logprob: -7.57782506942749
    7. 'sys' → logprob: -7.57782506942749
    8. '10' → logprob: -8.077825546264648
    9. '1' → logprob: -8.202825546264648
    10. '100' → logprob: -8.327825546264648

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1732327789068222
    2. 'for' → logprob: -2.1732327938079834
    3. ' for' → logprob: -3.7982327938079834
    4. '
' → logprob: -3.7982327938079834
    5. '	for' → logprob: -8.548233032226562
    6. '    
' → logprob: -9.548233032226562
    7. '\n' → logprob: -10.298233032226562
    8. '  ' → logprob: -10.548233032226562
    9. '<|end|>' → logprob: -10.673233032226562
    10. ' ' → logprob: -10.923233032226562

Token 237: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6507500410079956
    2. '   ' → logprob: -0.9007500410079956
    3. ' for' → logprob: -2.650750160217285
    4. '
' → logprob: -7.150750160217285
    5. '	for' → logprob: -8.525750160217285
    6. 'sum' → logprob: -9.150750160217285
    7. 'max' → logprob: -9.650750160217285
    8. '    
' → logprob: -9.900750160217285
    9. '<|end|>' → logprob: -10.150750160217285
    10. 'sorted' → logprob: -10.275750160217285

Token 238: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019901362247765064
    2. 'keys' → logprob: -7.50199031829834
    3. 'sorted' → logprob: -7.75199031829834
    4. 'max' → logprob: -7.87699031829834
    5. '   ' → logprob: -9.25199031829834
    6. 'min' → logprob: -9.62699031829834
    7. 'cost' → logprob: -9.62699031829834
    8. 'pr' → logprob: -9.62699031829834
    9. 'items' → logprob: -9.75199031829834
    10. 'total' → logprob: -9.87699031829834

Token 239: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4798181354999542
    2. ' p' → logprob: -1.6048181056976318
    3. 'k' → logprob: -2.979818105697632
    4. ' key' → logprob: -2.979818105697632
    5. 'key' → logprob: -3.729818105697632
    6. ' val' → logprob: -4.229818344116211
    7. ' k' → logprob: -4.229818344116211
    8. 'val' → logprob: -5.229818344116211
    9. 'cost' → logprob: -5.229818344116211
    10. 'v' → logprob: -5.479818344116211

Token 240: ',total' (ID: 195794)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48005956411361694
    2. ' in' → logprob: -1.2300596237182617
    3. 'in' → logprob: -2.8550596237182617
    4. ',count' → logprob: -3.8550596237182617
    5. ',p' → logprob: -5.480059623718262
    6. ',value' → logprob: -6.355059623718262
    7. ' ,' → logprob: -6.605059623718262
    8. ',in' → logprob: -6.730059623718262
    9. ',val' → logprob: -7.230059623718262
    10. ',c' → logprob: -7.605059623718262

Token 241: '_X' (ID: 16245)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07330001145601273
    2. ' in' → logprob: -2.6983001232147217
    3. '_in' → logprob: -6.448299884796143
    4. 'p' → logprob: -7.448299884796143
    5. ',' → logprob: -7.698299884796143
    6. '_p' → logprob: -7.948299884796143
    7. '_cost' → logprob: -9.0733003616333
    8. ',p' → logprob: -9.4483003616333
    9. 'count' → logprob: -10.4483003616333
    10. ',count' → logprob: -10.4483003616333

Token 242: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5670211911201477
    2. ' in' → logprob: -0.9420211911201477
    3. ',' → logprob: -3.192021131515503
    4. ',p' → logprob: -6.817021369934082
    5. ',in' → logprob: -7.817021369934082
    6. ' ,' → logprob: -9.817021369934082
    7. 'items' → logprob: -10.067021369934082
    8. ' ' → logprob: -10.192021369934082
    9. 's' → logprob: -10.442021369934082
    10. '_in' → logprob: -10.567021369934082

Token 243: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.696889623621246e-06
    2. ' count' → logprob: -12.87500286102295
    3. '[count' → logprob: -17.875001907348633
    4. 'counter' → logprob: -19.750001907348633
    5. 'counts' → logprob: -20.250001907348633
    6. 'sorted' → logprob: -20.750001907348633
    7. '<count' → logprob: -20.750001907348633
    8. 'c' → logprob: -20.875001907348633
    9. '$count' → logprob: -21.000001907348633
    10. '(count' → logprob: -21.250001907348633

Token 244: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -4.320199877838604e-07
    2. '_count' → logprob: -15.5
    3. 'by' → logprob: -16.5
    4. '_of' → logprob: -17.75
    5. 'count' → logprob: -18.0
    6. '_in' → logprob: -18.125
    7. '_to' → logprob: -18.375
    8. '_BY' → logprob: -18.75
    9. 'By' → logprob: -18.875
    10. 'p' → logprob: -19.0

Token 245: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.008887192234396935
    2. 'count' → logprob: -4.75888729095459
    3. 'p' → logprob: -8.38388729095459
    4. '_count' → logprob: -11.13388729095459
    5. 'items' → logprob: -11.25888729095459
    6. 'range' → logprob: -11.88388729095459
    7. ' count' → logprob: -12.63388729095459
    8. '_by' → logprob: -13.13388729095459
    9. 'dict' → logprob: -14.13388729095459
    10. '(count' → logprob: -14.63388729095459

Token 246: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.001399164437316358
    2. '.values' → logprob: -7.751399040222168
    3. 'items' → logprob: -8.001399040222168
    4. '.iteritems' → logprob: -8.626399040222168
    5. '.' → logprob: -8.751399040222168
    6. ':' → logprob: -8.876399040222168
    7. '_items' → logprob: -9.376399040222168
    8. ' items' → logprob: -10.001399040222168
    9. '.keys' → logprob: -11.001399040222168
    10. '.Items' → logprob: -12.626399040222168

Token 247: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.787507714354433e-05
    2. '():
' → logprob: -10.50004768371582
    3. '()' → logprob: -11.12504768371582
    4. ' ():' → logprob: -12.12504768371582
    5. '():

' → logprob: -16.62504768371582
    6. ':' → logprob: -17.00004768371582
    7. '()>' → logprob: -17.62504768371582
    8. '():
' → logprob: -17.62504768371582
    9. '().' → logprob: -18.62504768371582
    10. '(' → logprob: -18.75004768371582

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032550732139497995
    2. ' king' → logprob: -6.8782548904418945
    3. '<|end|>' → logprob: -7.1282548904418945
    4. '	   ' → logprob: -7.7532548904418945
    5. '   ' → logprob: -8.378254890441895
    6. '        
' → logprob: -8.753254890441895
    7. '	' → logprob: -9.003254890441895
    8. '
' → logprob: -9.253254890441895
    9. '```' → logprob: -9.253254890441895
    10. ',' → logprob: -10.003254890441895

Token 249: ' if' (ID: 538)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.4904465973377228
    2. 'king' → logprob: -1.1154465675354004
    3. '   ' → logprob: -2.9904465675354004
    4. '       ' → logprob: -4.9904465675354
    5. ' if' → logprob: -6.6154465675354
    6. 'if' (adapté à ' if') → logprob: -6.9904465675354
    7. '```' → logprob: -8.240447044372559
    8. '	   ' → logprob: -9.365447044372559
    9. '   ' → logprob: -10.615447044372559
    10. 'k' → logprob: -11.115447044372559

Token 250: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.23649628460407257
    2. 'total' → logprob: -1.8614963293075562
    3. ' p' → logprob: -3.1114962100982666
    4. 'p' → logprob: -4.611496448516846
    5. ' abs' → logprob: -8.861495971679688
    6. '(total' → logprob: -9.486495971679688
    7. ' ' → logprob: -9.611495971679688
    8. 'abs' → logprob: -9.611495971679688
    9. 'pr' → logprob: -9.736495971679688
    10. ' (' → logprob: -9.986495971679688

Token 251: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -8.923874702304602e-05
    2. '_' → logprob: -10.375089645385742
    3. ' _' → logprob: -11.125089645385742
    4. '>' → logprob: -11.375089645385742
    5. '```' → logprob: -11.500089645385742
    6. 'X' → logprob: -12.125089645385742
    7. ' ' → logprob: -12.250089645385742
    8. '   ' → logprob: -12.500089645385742
    9. '>X' → logprob: -13.375089645385742
    10. '>=' → logprob: -13.750089645385742

Token 252: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9465938210487366
    2. ' >' → logprob: -0.9465938210487366
    3. '%' → logprob: -2.446593761444092
    4. ' >=' → logprob: -2.446593761444092
    5. '>=' → logprob: -3.321593761444092
    6. ' %' → logprob: -5.196593761444092
    7. ' <' → logprob: -5.821593761444092
    8. '==' → logprob: -6.696593761444092
    9. '<' → logprob: -6.946593761444092
    10. ' ==' → logprob: -6.946593761444092

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21472294628620148
    2. 'p' → logprob: -2.2147228717803955
    3. '0' → logprob: -2.7147228717803955
    4. ' ' → logprob: -4.714723110198975
    5. ' p' → logprob: -5.964723110198975
    6. '2' → logprob: -6.464723110198975
    7. 'max' → logprob: -6.589723110198975
    8. 'MP' → logprob: -7.089723110198975
    9. 'X' → logprob: -7.589723110198975
    10. '3' → logprob: -8.089722633361816

Token 254: '0' (ID: 15)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5493513941764832
    2. '1' → logprob: -1.299351453781128
    3. '0' → logprob: -2.049351453781128
    4. 'X' → logprob: -5.049351215362549
    5. 'MP' → logprob: -5.674351215362549
    6. 'max' → logprob: -5.924351215362549
    7. '2' → logprob: -6.674351215362549
    8. 'n' → logprob: -7.174351215362549
    9. ' ' → logprob: -7.174351215362549
    10. ' p' → logprob: -7.174351215362549

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038275111466646194
    2. ':
' → logprob: -3.2882750034332275
    3. '           ' → logprob: -9.163274765014648
    4. ' or' → logprob: -9.413274765014648
    5. '       ' → logprob: -10.788274765014648
    6. ':return' → logprob: -11.663274765014648
    7. ' and' → logprob: -12.038274765014648
    8. ' continue' → logprob: -12.288274765014648
    9. ',' → logprob: -12.913274765014648
    10. '   ' → logprob: -13.913274765014648

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012124499306082726
    2. 'continue' → logprob: -5.387124538421631
    3. ' continue' → logprob: -5.637124538421631
    4. '       ' → logprob: -6.762124538421631
    5. '
' → logprob: -7.137124538421631
    6. ',' → logprob: -7.637124538421631
    7. ':
' → logprob: -8.137124061584473
    8. '	       ' → logprob: -8.262124061584473
    9. '```' → logprob: -8.262124061584473
    10. ':' → logprob: -9.012124061584473

Token 257: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8581971526145935
    2. '           ' → logprob: -1.2331972122192383
    3. ' continue' → logprob: -1.6081972122192383
    4. ' king' → logprob: -3.2331972122192383
    5. 'king' → logprob: -3.7331972122192383
    6. '   ' → logprob: -4.608197212219238
    7. '       ' → logprob: -4.733197212219238
    8. '```' → logprob: -7.608197212219238
    9. '	continue' → logprob: -7.858197212219238
    10. '
' → logprob: -8.358197212219238

Token 258: ' X' (ID: 2127)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.8048281073570251
    2. 'continue' → logprob: -1.17982816696167
    3. 'king' → logprob: -2.05482816696167
    4. ' continue' → logprob: -2.30482816696167
    5. '           ' → logprob: -4.55482816696167
    6. '   ' → logprob: -5.67982816696167
    7. '       ' → logprob: -6.30482816696167
    8. 'pass' → logprob: -7.80482816696167
    9. '```' → logprob: -8.304827690124512
    10. '    ' → logprob: -8.679827690124512

Token 259: '=' (ID: 28)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8440974950790405
    2. '=' → logprob: -1.8440974950790405
    3. '+=' → logprob: -1.9690974950790405
    4. 'continue' → logprob: -2.09409761428833
    5. ' =' → logprob: -3.21909761428833
    6. '   ' → logprob: -3.59409761428833
    7. ' *=' → logprob: -4.09409761428833
    8. ' continue' → logprob: -4.59409761428833
    9. '*' → logprob: -4.96909761428833
    10. ' -=' → logprob: -5.09409761428833

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0917314663529396
    2. ' ' → logprob: -3.466731548309326
    3. '1' → logprob: -4.091731548309326
    4. 'p' → logprob: -4.216731548309326
    5. ' p' → logprob: -5.091731548309326
    6. 'continue' → logprob: -5.341731548309326
    7. 'pr' → logprob: -6.341731548309326
    8. ' continue' → logprob: -6.591731548309326
    9. 'MP' → logprob: -6.591731548309326
    10. 'max' → logprob: -6.591731548309326

Token 261: ',' (ID: 11)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8553479909896851
    2. ' continue' → logprob: -1.480347990989685
    3. '       ' → logprob: -1.730347990989685
    4. '           ' → logprob: -2.1053481101989746
    5. ':' → logprob: -3.6053481101989746
    6. ':
' → logprob: -4.230348110198975
    7. '
' → logprob: -6.230348110198975
    8. ' continues' → logprob: -6.980348110198975
    9. '	continue' → logprob: -6.980348110198975
    10. ',' → logprob: -7.105348110198975

Token 262: ' no' (ID: 860)
  Prédit: ' king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.4062308669090271
    2. ' continue' → logprob: -2.031230926513672
    3. 'continue' → logprob: -2.156230926513672
    4. '           ' → logprob: -2.781230926513672
    5. 'king' → logprob: -3.906230926513672
    6. '       ' → logprob: -6.281230926513672
    7. '               ' → logprob: -7.156230926513672
    8. '```' → logprob: -7.406230926513672
    9. '   ' → logprob: -8.156230926513672
    10. 'pass' → logprob: -9.093730926513672

Token 263: ' payout' (ID: 50076)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.682456374168396
    2. 'pr' → logprob: -1.807456374168396
    3. ' prime' → logprob: -2.1824564933776855
    4. 'prime' → logprob: -2.9324564933776855
    5. ' need' → logprob: -3.1824564933776855
    6. ' cost' → logprob: -3.8074564933776855
    7. 'need' → logprob: -4.1824564933776855
    8. 'cost' → logprob: -4.3074564933776855
    9. ' continue' → logprob: -4.4324564933776855
    10. 'continue' → logprob: -4.5574564933776855

Token 264: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2205036878585815
    2. '       ' → logprob: -1.3455036878585815
    3. ' continue' → logprob: -1.4705036878585815
    4. '
' → logprob: -2.345503807067871
    5. 'continue' → logprob: -2.595503807067871
    6. ',' → logprob: -3.595503807067871
    7. '\n' → logprob: -5.470503807067871
    8. ':
' → logprob: -5.595503807067871
    9. ':' → logprob: -6.095503807067871
    10. ',
' → logprob: -6.220503807067871

Token 265: ' ' (ID: 220)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21941781044006348
    2. '           ' → logprob: -2.3444178104400635
    3. ' continue' → logprob: -2.5944178104400635
    4. ' king' → logprob: -4.344417572021484
    5. '       ' → logprob: -4.844417572021484
    6. 'king' → logprob: -5.469417572021484
    7. '   ' → logprob: -7.344417572021484
    8. '               ' → logprob: -8.219417572021484
    9. '	continue' → logprob: -9.344417572021484
    10. 'pass' → logprob: -9.469417572021484

Token 266: '1' (ID: 16)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.008188646286725998
    2. 'king' → logprob: -4.883188724517822
    3. ' continue' → logprob: -8.133188247680664
    4. '   ' → logprob: -8.758188247680664
    5. ' king' → logprob: -10.633188247680664
    6. '       ' → logprob: -10.633188247680664
    7. 'pass' → logprob: -10.633188247680664
    8. 'continu' → logprob: -11.133188247680664
    9. '           ' → logprob: -11.758188247680664
    10. '	continue' → logprob: -12.008188247680664

Token 267: ' prime' (ID: 9197)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3843450546264648
    2. '
' → logprob: -1.5093450546264648
    3. '*' → logprob: -2.509345054626465
    4. ' continue' → logprob: -2.509345054626465
    5. '0' → logprob: -2.759345054626465
    6. 'continue' → logprob: -2.759345054626465
    7. ' *' → logprob: -3.134345054626465
    8. 'else' → logprob: -3.134345054626465
    9. ' +' → logprob: -3.259345054626465
    10. ' else' → logprob: -3.759345054626465

Token 268: ' goes' (ID: 8805)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040583521127700806
    2. '       ' → logprob: -3.915583610534668
    3. ' =' → logprob: -4.540583610534668
    4. '=' → logprob: -5.790583610534668
    5. ',' → logprob: -6.665583610534668
    6. ':' → logprob: -6.790583610534668
    7. ' +=' → logprob: -7.790583610534668
    8. ':
' → logprob: -8.165583610534668
    9. 'count' → logprob: -8.290583610534668
    10. '               ' → logprob: -8.415583610534668

Token 269: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1666163206100464
    2. 'continue' → logprob: -1.9166163206100464
    3. ' to' → logprob: -2.041616439819336
    4. 'on' → logprob: -2.541616439819336
    5. ' on' → logprob: -2.666616439819336
    6. ' continue' → logprob: -2.916616439819336
    7. '       ' → logprob: -2.916616439819336
    8. 'to' → logprob: -3.541616439819336
    9. '   ' → logprob: -3.916616439819336
    10. 'n' → logprob: -5.041616439819336

Token 270: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.12852291762828827
    2. 'p' → logprob: -2.8785228729248047
    3. 'the' → logprob: -3.3785228729248047
    4. ' king' → logprob: -4.253522872924805
    5. 'pr' → logprob: -5.503522872924805
    6. ' the' → logprob: -6.378522872924805
    7. ' p' → logprob: -6.503522872924805
    8. '0' → logprob: -6.628522872924805
    9. 'k' → logprob: -7.003522872924805
    10. 'King' → logprob: -7.191022872924805

Token 271: '’s' (ID: 802)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12589627504348755
    2. '       ' → logprob: -3.0008962154388428
    3. ' king' → logprob: -3.6258962154388428
    4. '               ' → logprob: -4.125896453857422
    5. '
' → logprob: -4.750896453857422
    6. '```' → logprob: -6.000896453857422
    7. 'king' → logprob: -6.125896453857422
    8. '   ' → logprob: -6.375896453857422
    9. 'continue' → logprob: -6.500896453857422
    10. ',' → logprob: -6.750896453857422

Token 272: ' fund' (ID: 4483)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5412406921386719
    2. 'king' → logprob: -2.666240692138672
    3. 'p' → logprob: -2.791240692138672
    4. 'tre' → logprob: -2.916240692138672
    5. 'share' → logprob: -3.166240692138672
    6. 'side' → logprob: -3.541240692138672
    7. 'cut' → logprob: -3.791240692138672
    8. 'pot' → logprob: -4.291240692138672
    9. 'pr' → logprob: -4.291240692138672
    10. 'hand' → logprob: -4.541240692138672

Token 273: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42189255356788635
    2. '           ' → logprob: -1.296892523765564
    3. '
' → logprob: -3.6718926429748535
    4. '+' → logprob: -4.5468926429748535
    5. '<|end|>' → logprob: -4.6718926429748535
    6. ',' → logprob: -4.7968926429748535
    7. '   ' → logprob: -5.2968926429748535
    8. ' +' → logprob: -6.5468926429748535
    9. '	       ' → logprob: -6.5468926429748535
    10. ' king' → logprob: -6.7968926429748535

Token 274: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3875536620616913
    2. '           ' → logprob: -1.1375536918640137
    3. '	       ' → logprob: -8.012553215026855
    4. ' king' → logprob: -8.387553215026855
    5. '   ' → logprob: -10.137553215026855
    6. '               ' → logprob: -10.637553215026855
    7. '	   ' → logprob: -11.387553215026855
    8. '```' → logprob: -11.387553215026855
    9. 'king' → logprob: -11.637553215026855
    10. '<|end|>' → logprob: -12.012553215026855

Token 275: ' king' (ID: 13793)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' (adapté à ' king') → logprob: -0.017743414267897606
    2. ' king' → logprob: -4.3927435874938965
    3. '           ' → logprob: -5.3927435874938965
    4. '       ' → logprob: -8.017743110656738
    5. '   ' → logprob: -8.142743110656738
    6. '```' → logprob: -11.142743110656738
    7. '               ' → logprob: -11.642743110656738
    8. '
' → logprob: -12.767743110656738
    9. '.king' → logprob: -12.892743110656738
    10. 'continue' → logprob: -13.267743110656738

Token 276: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.054500666621607e-06
    2. 'cost' → logprob: -13.12500286102295
    3. '_' → logprob: -15.37500286102295
    4. ' _' → logprob: -15.75000286102295
    5. '_code' → logprob: -15.87500286102295
    6. '_COST' → logprob: -16.000003814697266
    7. '_count' → logprob: -16.125003814697266
    8. '_c' → logprob: -16.750003814697266
    9. '\' → logprob: -17.125003814697266
    10. 'Cost' → logprob: -17.625003814697266

Token 277: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759475231170654
    2. '+=' → logprob: -0.8259475231170654
    3. '   ' → logprob: -12.700947761535645
    4. '+' → logprob: -13.075947761535645
    5. ']+=' → logprob: -14.075947761535645
    6. '=' → logprob: -14.325947761535645
    7. '```' → logprob: -14.575947761535645
    8. ' ' → logprob: -15.450947761535645
    9. ' ' → logprob: -15.575947761535645
    10. '    ' → logprob: -15.950947761535645

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.829823102336377e-05
    2. ' ' → logprob: -9.62509822845459
    3. 'p' → logprob: -10.62509822845459
    4. 'pr' → logprob: -11.87509822845459
    5. '0' → logprob: -16.000099182128906
    6. ' p' → logprob: -16.000099182128906
    7. 'prime' → logprob: -16.250099182128906
    8. ' primes' → logprob: -16.500099182128906
    9. '```' → logprob: -16.625099182128906
    10. '2' → logprob: -16.812599182128906

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. 'pr' → logprob: -11.375021934509277
    3. 'p' → logprob: -12.000021934509277
    4. ' ' → logprob: -12.500021934509277
    5. 'prime' → logprob: -16.000022888183594
    6. '0' → logprob: -16.375022888183594
    7. '2' → logprob: -16.687522888183594
    8. '(pr' → logprob: -16.750022888183594
    9. 'count' → logprob: -16.937522888183594
    10. '999' → logprob: -17.125022888183594

Token 280: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.035768475383520126
    2. ' else' → logprob: -3.785768508911133
    3. 'elif' → logprob: -4.535768508911133
    4. '   ' → logprob: -7.035768508911133
    5. '       ' → logprob: -7.410768508911133
    6. ' elif' → logprob: -8.660768508911133
    7. '	else' → logprob: -10.535768508911133
    8. '	elif' → logprob: -11.535768508911133
    9. '<|end|>' → logprob: -11.660768508911133
    10. 'continue' → logprob: -11.660768508911133

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09513403475284576
    2. '           ' → logprob: -2.4701340198516846
    3. ':
' → logprob: -5.595134258270264
    4. '       ' → logprob: -6.470134258270264
    5. ' king' → logprob: -7.720134258270264
    6. 'king' → logprob: -8.970133781433105
    7. '          ' → logprob: -9.470133781433105
    8. '*' → logprob: -9.720133781433105
    9. '   ' → logprob: -9.720133781433105
    10. '	       ' → logprob: -10.595133781433105

Token 284: '           ' (ID: 352)
  Prédit: 'king'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -0.14502151310443878
    2. ' king' → logprob: -2.395021438598633
    3. '           ' → logprob: -3.145021438598633
    4. '       ' → logprob: -7.395021438598633
    5. '   ' → logprob: -9.395021438598633
    6. 'for' → logprob: -11.520021438598633
    7. '```' → logprob: -11.645021438598633
    8. '	       ' → logprob: -12.020021438598633
    9. 'if' → logprob: -12.520021438598633
    10. '               ' → logprob: -12.520021438598633

Token 285: ' king' (ID: 13793)
  Prédit: ' king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' king' → logprob: -0.6341091990470886
    2. 'king' (adapté à ' king') → logprob: -0.7591091990470886
    3. '           ' → logprob: -6.884109020233154
    4. '   ' → logprob: -9.009109497070312
    5. '       ' → logprob: -9.884109497070312
    6. 'cost' → logprob: -10.009109497070312
    7. 'prime' → logprob: -10.634109497070312
    8. '               ' → logprob: -10.759109497070312
    9. ' cost' → logprob: -10.884109497070312
    10. 'for' → logprob: -11.009109497070312

Token 286: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1041145626222715e-05
    2. 'cost' → logprob: -11.625011444091797
    3. '_COST' → logprob: -14.375011444091797
    4. 'Cost' → logprob: -14.875011444091797
    5. '_' → logprob: -15.625011444091797
    6. '-cost' → logprob: -15.875011444091797
    7. '_code' → logprob: -16.000011444091797
    8. '_c' → logprob: -16.250011444091797
    9. ' cost' → logprob: -16.500011444091797
    10. ' _' → logprob: -16.750011444091797

Token 287: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06211680918931961
    2. '+=' → logprob: -2.812116861343384
    3. ' -=' → logprob: -9.062116622924805
    4. '+' → logprob: -11.187116622924805
    5. '+=(' → logprob: -11.812116622924805
    6. '=' → logprob: -12.812116622924805
    7. '   ' → logprob: -13.187116622924805
    8. '-=' → logprob: -13.187116622924805
    9. ' =' → logprob: -13.562116622924805
    10. ' +' → logprob: -14.187116622924805

Token 288: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.26703283190727234
    2. ' total' → logprob: -1.5170328617095947
    3. 'p' → logprob: -5.142032623291016
    4. ' p' → logprob: -6.267032623291016
    5. 'pr' → logprob: -6.642032623291016
    6. '1' → logprob: -6.767032623291016
    7. '(total' → logprob: -6.767032623291016
    8. ' (' → logprob: -7.017032623291016
    9. '(' → logprob: -7.767032623291016
    10. 'max' → logprob: -7.892032623291016

Token 289: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -9.968312951968983e-06
    2. 'X' → logprob: -11.875009536743164
    3. '_cost' → logprob: -13.125009536743164
    4. '\' → logprob: -15.125009536743164
    5. '```' → logprob: -15.625009536743164
    6. ' _' → logprob: -16.500009536743164
    7. '_' → logprob: -16.750009536743164
    8. '*_' → logprob: -17.125009536743164
    9. 'Cost' → logprob: -17.250009536743164
    10. '_C' → logprob: -17.375009536743164

Token 290: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007164848502725363
    2. ' ' → logprob: -7.500716686248779
    3. 'X' → logprob: -9.625716209411621
    4. 'len' → logprob: -10.375716209411621
    5. 'n' → logprob: -10.625716209411621
    6. 'count' → logprob: -10.875716209411621
    7. 'pr' → logprob: -12.375716209411621
    8. '(' → logprob: -12.625716209411621
    9. '2' → logprob: -13.000716209411621
    10. 'total' → logprob: -13.125716209411621

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020580526324920356
    2. ' ' → logprob: -8.875205993652344
    3. 'len' → logprob: -10.500205993652344
    4. 'count' → logprob: -11.000205993652344
    5. 'X' → logprob: -12.250205993652344
    6. 'total' → logprob: -12.625205993652344
    7. 'pr' → logprob: -12.750205993652344
    8. 'n' → logprob: -12.875205993652344
    9. '2' → logprob: -13.375205993652344
    10. '0' → logprob: -13.625205993652344

Token 293: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2762815058231354
    2. 'print' → logprob: -1.526281476020813
    3. '<|end|>' → logprob: -4.151281356811523
    4. '   ' → logprob: -4.901281356811523
    5. ' print' → logprob: -7.901281356811523
    6. '```' → logprob: -8.776281356811523
    7. '\n' → logprob: -9.026281356811523
    8. '    
' → logprob: -9.651281356811523
    9. '
' → logprob: -10.026281356811523
    10. ')' → logprob: -10.276281356811523

Token 294: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.615563690662384
    2. '<|end|>' → logprob: -0.990563690662384
    3. '
' → logprob: -2.9905636310577393
    4. '   ' → logprob: -3.7405636310577393
    5. '\n' → logprob: -5.115563869476318
    6. ')' → logprob: -5.240563869476318
    7. '```' → logprob: -6.490563869476318
    8. ' print' → logprob: -7.990563869476318
    9. 'return' → logprob: -8.24056339263916
    10. '<|end|>' → logprob: -8.99056339263916

Token 295: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00034142236108891666
    2. '   ' → logprob: -8.500341415405273
    3. ' print' → logprob: -9.000341415405273
    4. '<|end|>' → logprob: -11.500341415405273
    5. '	print' → logprob: -12.875341415405273
    6. '#print' → logprob: -14.750341415405273
    7. '```' → logprob: -14.750341415405273
    8. ')' → logprob: -15.000341415405273
    9. '
' → logprob: -15.000341415405273
    10. '\n' → logprob: -15.625341415405273

Token 296: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.127333340875339e-06
    2. '()' → logprob: -12.750003814697266
    3. '(k' → logprob: -14.625003814697266
    4. 'king' → logprob: -14.750003814697266
    5. '(f' → logprob: -16.000003814697266
    6. '('' → logprob: -16.375003814697266
    7. ' (' → logprob: -16.750003814697266
    8. '((' → logprob: -17.250003814697266
    9. '("' → logprob: -17.875003814697266
    10. '(K' → logprob: -18.000003814697266

Token 297: 'king' (ID: 6962)
  Prédit: 'king'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'king' → logprob: -1.0280383548888494e-06
    2. ' king' → logprob: -13.875000953674316
    3. 'queen' → logprob: -20.875001907348633
    4. 'kg' → logprob: -21.000001907348633
    5. '   ' → logprob: -21.250001907348633
    6. 'kin' → logprob: -21.375001907348633
    7. ')' → logprob: -21.375001907348633
    8. 'ken' → logprob: -21.500001907348633
    9. '.king' → logprob: -21.875001907348633
    10. 'k' → logprob: -22.250001907348633

Token 298: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -7.896309739408025e-07
    2. 'cost' → logprob: -14.250000953674316
    3. '_COST' → logprob: -17.125
    4. ')' → logprob: -17.75
    5. '_code' → logprob: -17.75
    6. '_' → logprob: -18.375
    7. '\' → logprob: -18.875
    8. ' cost' → logprob: -19.0
    9. '_cast' → logprob: -19.375
    10. ' _' → logprob: -19.375

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')`' → logprob: -18.000001907348633
    5. '`)' → logprob: -18.375001907348633
    6. '))' → logprob: -18.625001907348633
    7. '')' → logprob: -18.625001907348633
    8. '）' → logprob: -19.375001907348633
    9. '())' → logprob: -19.375001907348633
    10. '```' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 297
Tokens correctement prédits (1ère position, stricte): 133
Tokens correctement prédits (1ère position, avec adaptation): 145
Tokens correctement prédits (top 10): 262
Précision stricte (1ère position): 44.78%
Précision adaptée (1ère position): 48.82%
Précision (top 10): 88.22%
================================================================================
