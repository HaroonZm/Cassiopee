================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from itertools import permutations

def can_place(W, radii):
    n = len(radii)
    # For each permutation, check if cakes fit
    for perm in permutations(radii):
        # Calculate total width
        total_width = perm[0] * 2
        for i in range(n - 1):
            d = math.sqrt((perm[i] + perm[i+1])**2 - (perm[i] - perm[i+1])**2)
            total_width += d
        if total_width <= W + 1e-9:
            return True
    return False

input_lines = sys.stdin.read().strip().split('\n')
for line in input_lines:
    if not line.strip():
        continue
    tokens = line.strip().split()
    W = int(tokens[0])
    radii = list(map(int, tokens[1:]))
    if can_place(W, radii):
        print("OK")
    else:
        print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1524793654680252
    2. 'import' → logprob: -3.152479410171509
    3. '\' → logprob: -3.402479410171509
    4. '\n' → logprob: -3.777479410171509
    5. '
' → logprob: -4.02747917175293
    6. '

' → logprob: -5.02747917175293
    7. '```' → logprob: -5.27747917175293
    8. '<|end|>' → logprob: -5.40247917175293
    9. ',' → logprob: -5.90247917175293
    10. '<|end|>' → logprob: -6.90247917175293

Token 6: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.458339810371399
    2. '\n' → logprob: -1.458339810371399
    3. '.' → logprob: -1.583339810371399
    4. 'import' → logprob: -2.2083396911621094
    5. '

' → logprob: -2.3333396911621094
    6. '\' → logprob: -2.9583396911621094
    7. '```' → logprob: -3.2083396911621094
    8. '<|end|>' → logprob: -5.083339691162109
    9. ',' → logprob: -5.458339691162109
    10. '' → logprob: -5.583339691162109

Token 7: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5595126152038574
    2. ' os' → logprob: -1.0595126152038574
    3. 'collections' → logprob: -2.8095126152038574
    4. 'os' → logprob: -4.684512615203857
    5. ' datetime' → logprob: -5.309512615203857
    6. ' itertools' → logprob: -6.059512615203857
    7. ' typing' → logprob: -6.184512615203857
    8. 'datetime' → logprob: -7.934512615203857
    9. ' pathlib' → logprob: -8.059513092041016
    10. ' numpy' → logprob: -8.059513092041016

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.259976327419281
    2. ' import' → logprob: -1.5099763870239258
    3. '.' → logprob: -4.884976387023926
    4. '.import' → logprob: -8.384976387023926
    5. '	import' → logprob: -9.009976387023926
    6. '_import' → logprob: -10.509976387023926
    7. ' .' → logprob: -10.759976387023926
    8. '.im' → logprob: -11.134976387023926
    9. '<|end|>' → logprob: -11.634976387023926
    10. '```' → logprob: -12.259976387023926

Token 9: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -1.0964033603668213
    2. ' cycle' → logprob: -1.4714033603668213
    3. ' group' → logprob: -2.2214033603668213
    4. ' product' → logprob: -2.7214033603668213
    5. 'com' → logprob: -2.9714033603668213
    6. 'per' → logprob: -3.2214033603668213
    7. ' combinations' → logprob: -3.3464033603668213
    8. 'count' → logprob: -3.4714033603668213
    9. ' count' → logprob: -3.5964033603668213
    10. ' chain' → logprob: -3.8464033603668213

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06897678971290588
    2. '.' → logprob: -3.568976879119873
    3. '\n' → logprob: -4.318976879119873
    4. 'import' → logprob: -5.318976879119873
    5. '(
' → logprob: -5.318976879119873
    6. '\' → logprob: -5.568976879119873
    7. '```' → logprob: -5.943976879119873
    8. '<|end|>' → logprob: -6.193976879119873
    9. 'def' → logprob: -6.818976879119873
    10. ',' → logprob: -7.193976879119873

Token 11: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1194387674331665
    2. '.' → logprob: -1.7444387674331665
    3. 'def' → logprob: -1.7444387674331665
    4. 'import' → logprob: -2.119438648223877
    5. '\' → logprob: -2.369438648223877
    6. '```' → logprob: -3.744438648223877
    7. '\n' → logprob: -3.869438648223877
    8. 'a' → logprob: -4.244438648223877
    9. '`' → logprob: -4.744438648223877
    10. 'for' → logprob: -4.869438648223877

Token 12: ' can' (ID: 665)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.2246249914169312
    2. ' factorial' → logprob: -1.4746249914169312
    3. ' factor' → logprob: -2.0996251106262207
    4. ' permutations' → logprob: -2.2246251106262207
    5. ' ' → logprob: -2.8496251106262207
    6. ' ' → logprob: -2.9746251106262207
    7. ' find' → logprob: -3.9746251106262207
    8. ' longest' → logprob: -4.099625110626221
    9. '_' → logprob: -4.474625110626221
    10. ' generate' → logprob: -4.474625110626221

Token 13: '_place' (ID: 81501)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10803790390491486
    2. '_accept' → logprob: -3.8580379486083984
    3. '_construct' → logprob: -3.9830379486083984
    4. ' _' → logprob: -4.858037948608398
    5. '_apply' → logprob: -5.108037948608398
    6. '_form' → logprob: -5.233037948608398
    7. '_make' → logprob: -5.483037948608398
    8. '_jump' → logprob: -5.858037948608398
    9. '_generate' → logprob: -5.858037948608398
    10. '_access' → logprob: -5.858037948608398

Token 14: '(W' (ID: 26031)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7491388916969299
    2. '_' → logprob: -0.7491388916969299
    3. '(board' → logprob: -4.124138832092285
    4. ' (' → logprob: -5.249138832092285
    5. '_token' → logprob: -5.499138832092285
    6. ' ' → logprob: -5.874138832092285
    7. '_tile' → logprob: -5.874138832092285
    8. '_space' → logprob: -6.249138832092285
    9. '_cell' → logprob: -6.499138832092285
    10. '(x' → logprob: -6.499138832092285

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008585020899772644
    2. ' ,' → logprob: -5.133584976196289
    3. ')' → logprob: -6.633584976196289
    4. '[' → logprob: -7.258584976196289
    5. '[i' → logprob: -9.008584976196289
    6. ',i' → logprob: -9.258584976196289
    7. 'idth' → logprob: -10.258584976196289
    8. '_,' → logprob: -10.383584976196289
    9. ' )' → logprob: -10.383584976196289
    10. '):' → logprob: -10.383584976196289

Token 16: ' radi' (ID: 14041)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4166606664657593
    2. ' H' → logprob: -1.1666606664657593
    3. 'L' → logprob: -5.541660785675049
    4. 'i' → logprob: -5.666660785675049
    5. 'x' → logprob: -5.916660785675049
    6. ' i' → logprob: -6.104160785675049
    7. 'w' → logprob: -6.416660785675049
    8. ' word' → logprob: -6.541660785675049
    9. ' L' → logprob: -6.604160785675049
    10. ' x' → logprob: -7.041660785675049

Token 17: 'i' (ID: 72)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.4761532247066498
    2. 'i' → logprob: -0.9761532545089722
    3. 'uses' → logprob: -6.351153373718262
    4. 'ii' → logprob: -9.226153373718262
    5. 'ius' → logprob: -9.476153373718262
    6. '_i' → logprob: -10.851153373718262
    7. ',' → logprob: -10.851153373718262
    8. ')' → logprob: -11.351153373718262
    9. 'is' → logprob: -11.351153373718262
    10. '=' → logprob: -11.976153373718262

Token 18: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03002260997891426
    2. '):' → logprob: -3.655022621154785
    3. ')' → logprob: -5.655022621154785
    4. ' ,' → logprob: -9.155022621154785
    5. '[' → logprob: -9.905022621154785
    6. 's' → logprob: -11.155022621154785
    7. ' ):' → logprob: -11.780022621154785
    8. '_,' → logprob: -11.780022621154785
    9. '_list' → logprob: -12.655022621154785
    10. '[i' → logprob: -12.780022621154785

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0732001066207886
    2. '):' → logprob: -1.0732001066207886
    3. '   ' → logprob: -2.073200225830078
    4. ' :' → logprob: -2.448200225830078
    5. ')' → logprob: -3.323200225830078
    6. ' ):' → logprob: -3.948200225830078
    7. ' ' → logprob: -4.073200225830078
    8. ',' → logprob: -5.323200225830078
    9. '    ' → logprob: -5.573200225830078
    10. '```' → logprob: -5.823200225830078

Token 20: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5886381268501282
    2. ' :' → logprob: -0.9636381268501282
    3. ' :
' → logprob: -3.3386380672454834
    4. '   ' → logprob: -5.0886383056640625
    5. ' ' → logprob: -5.0886383056640625
    6. ':
' → logprob: -5.2136383056640625
    7. ' 
' → logprob: -6.0886383056640625
    8. ' for' → logprob: -6.4636383056640625
    9. '):' → logprob: -6.4636383056640625
    10. ' ):' → logprob: -7.4636383056640625

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08419664949178696
    2. '=' → logprob: -2.5841965675354004
    3. ' <=' → logprob: -6.7091965675354
    4. ')' → logprob: -6.7091965675354
    5. ',' → logprob: -7.3341965675354
    6. ' ==' → logprob: -7.5841965675354
    7. ' ' → logprob: -7.9591965675354
    8. ' ,' → logprob: -8.209197044372559
    9. ' >=' → logprob: -8.334197044372559
    10. ' )' → logprob: -8.834197044372559

Token 22: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.009774863719940186
    2. 'len' → logprob: -4.634774684906006
    3. '=len' → logprob: -12.134775161743164
    4. '(len' → logprob: -12.259775161743164
    5. '0' → logprob: -12.384775161743164
    6. ' W' → logprob: -13.259775161743164
    7. ' ' → logprob: -14.384775161743164
    8. '2' → logprob: -14.509775161743164
    9. '1' → logprob: -14.634775161743164
    10. '[len' → logprob: -15.384775161743164

Token 23: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.14604832231998444
    2. '(' → logprob: -2.5210483074188232
    3. '(W' → logprob: -2.8960483074188232
    4. '(R' → logprob: -8.896048545837402
    5. '(radius' → logprob: -9.646048545837402
    6. ' (' → logprob: -10.271048545837402
    7. 'r' → logprob: -11.521048545837402
    8. '(w' → logprob: -12.521048545837402
    9. 'W' → logprob: -12.771048545837402
    10. '(n' → logprob: -13.521048545837402

Token 24: 'adii' (ID: 55572)
  Prédit: 'adii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adii' → logprob: -0.00019150081789121032
    2. 'adi' → logprob: -8.625191688537598
    3. 'adius' → logprob: -11.750191688537598
    4. ')' → logprob: -13.750191688537598
    5. 'adia' → logprob: -13.750191688537598
    6. 'addi' → logprob: -14.625191688537598
    7. 'r' → logprob: -15.000191688537598
    8. 'ad' → logprob: -15.000191688537598
    9. 'a' → logprob: -15.250191688537598
    10. 'di' → logprob: -16.12519073486328

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011653638648567721
    2. ')
' → logprob: -9.500116348266602
    3. ' )' → logprob: -10.125116348266602
    4. ')return' → logprob: -15.125116348266602
    5. '))' → logprob: -15.625116348266602
    6. '   ' → logprob: -15.750116348266602
    7. ')n' → logprob: -15.750116348266602
    8. ' ' → logprob: -16.1251163482666
    9. ')
' → logprob: -16.1251163482666
    10. '):' → logprob: -16.3751163482666

Token 26: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9245957136154175
    2. '   ' → logprob: -0.9245957136154175
    3. '    
' → logprob: -2.674595832824707
    4. '<|end|>' → logprob: -3.299595832824707
    5. ')' → logprob: -3.799595832824707
    6. ' ' → logprob: -4.299595832824707
    7. '
' → logprob: -4.549595832824707
    8. '):' → logprob: -4.799595832824707
    9. ' 
' → logprob: -4.799595832824707
    10. '  
' → logprob: -4.799595832824707

Token 27: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3389616012573242
    2. ' positions' → logprob: -2.588961601257324
    3. ' ' → logprob: -3.338961601257324
    4. '    
' → logprob: -3.588961601257324
    5. ' ' → logprob: -3.963961601257324
    6. '  
' → logprob: -4.088961601257324
    7. '   
' → logprob: -4.463961601257324
    8. 'positions' → logprob: -4.588961601257324
    9. ' )' → logprob: -4.713961601257324
    10. ' x' → logprob: -4.713961601257324

Token 28: ' For' (ID: 2214)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.41786718368530273
    2. 'positions' → logprob: -2.0428671836853027
    3. 'dp' → logprob: -3.5428671836853027
    4. ' dp' → logprob: -3.5428671836853027
    5. ' dist' → logprob: -4.042867183685303
    6. ' distances' → logprob: -4.292867183685303
    7. 'dist' → logprob: -4.417867183685303
    8. ' x' → logprob: -4.417867183685303
    9. ' if' → logprob: -4.667867183685303
    10. ' radius' → logprob: -4.667867183685303

Token 29: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011944045312702656
    2. 'i' → logprob: -4.886943817138672
    3. ' all' → logprob: -6.136943817138672
    4. ' each' → logprob: -7.636943817138672
    5. ' ' → logprob: -7.761943817138672
    6. ' a' → logprob: -8.136943817138672
    7. ' small' → logprob: -8.136943817138672
    8. ' any' → logprob: -9.261943817138672
    9. ' n' → logprob: -9.386943817138672
    10. ' the' → logprob: -9.511943817138672

Token 30: ' permutation' (ID: 135200)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.053497061133384705
    2. 'i' → logprob: -3.928497076034546
    3. ' radius' → logprob: -4.553496837615967
    4. ' permutation' → logprob: -4.928496837615967
    5. ' possible' → logprob: -5.303496837615967
    6. ' circle' → logprob: -5.678496837615967
    7. ' arrangement' → logprob: -6.428496837615967
    8. ' placement' → logprob: -6.803496837615967
    9. ' pair' → logprob: -7.178496837615967
    10. ' position' → logprob: -8.178497314453125

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8539411425590515
    2. ' ,' → logprob: -1.3539412021636963
    3. ' ' → logprob: -2.2289412021636963
    4. ' of' → logprob: -2.6039412021636963
    5. ' in' → logprob: -2.8539412021636963
    6. '<|end|>' → logprob: -3.3539412021636963
    7. ':' → logprob: -3.9789412021636963
    8. ' for' → logprob: -4.853940963745117
    9. '<|end|>' → logprob: -4.853940963745117
    10. ' :' → logprob: -6.353940963745117

Token 32: ' check' (ID: 2371)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18974071741104126
    2. '<|end|>' → logprob: -2.1897406578063965
    3. ' ' → logprob: -4.1897406578063965
    4. '<|end|>' → logprob: -4.4397406578063965
    5. ' all' → logprob: -4.6897406578063965
    6. ' whether' → logprob: -4.9397406578063965
    7. ' the' → logprob: -5.0647406578063965
    8. '    ' → logprob: -5.1897406578063965
    9. 'if' → logprob: -6.9397406578063965
    10. '   ' → logprob: -7.0647406578063965

Token 34: ' cakes' (ID: 61222)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7474918365478516
    2. ' the' → logprob: -0.9974918365478516
    3. ' ' → logprob: -3.2474918365478516
    4. ' sum' → logprob: -3.9974918365478516
    5. ' we' → logprob: -4.122491836547852
    6. ' radi' → logprob: -4.247491836547852
    7. ' it' → logprob: -4.497491836547852
    8. ' they' → logprob: -4.872491836547852
    9. ' there' → logprob: -5.122491836547852
    10. 'the' → logprob: -5.122491836547852

Token 35: ' fit' (ID: 5769)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.028928812593221664
    2. ' ' → logprob: -3.903928756713867
    3. 'can' → logprob: -5.903928756713867
    4. ' are' → logprob: -6.278928756713867
    5. '_can' → logprob: -7.528928756713867
    6. ')' → logprob: -7.653928756713867
    7. '[' → logprob: -7.778928756713867
    8. '   ' → logprob: -7.903928756713867
    9. ' could' → logprob: -8.653928756713867
    10. ' _' → logprob: -8.778928756713867

Token 36: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0577565431594849
    2. '   ' → logprob: -1.6827565431594849
    3. '<|end|>' → logprob: -1.9327565431594849
    4. ' for' → logprob: -2.4327564239501953
    5. ' in' → logprob: -2.4327564239501953
    6. '    ' → logprob: -3.4327564239501953
    7. '<|end|>' → logprob: -3.5577564239501953
    8. ' ' → logprob: -3.9327564239501953
    9. ' on' → logprob: -4.307756423950195
    10. ' to' → logprob: -4.557756423950195

Token 37: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03645756468176842
    2. '   ' → logprob: -4.161457538604736
    3. ' for' → logprob: -4.661457538604736
    4. ' ' → logprob: -6.161457538604736
    5. '):' → logprob: -6.411457538604736
    6. ' :' → logprob: -6.661457538604736
    7. ',' → logprob: -6.661457538604736
    8. '<|end|>' → logprob: -7.036457538604736
    9. 'for' → logprob: -7.286457538604736
    10. ' in' → logprob: -7.536457538604736

Token 38: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0942577123641968
    2. ' for' → logprob: -1.3442577123641968
    3. ' 
' → logprob: -1.9692577123641968
    4. ':' → logprob: -2.2192578315734863
    5. 'for' (adapté à ' for') → logprob: -2.9692578315734863
    6. '\' → logprob: -2.9692578315734863
    7. '\n' → logprob: -4.344257831573486
    8. '<|end|>' → logprob: -4.344257831573486
    9. '  
' → logprob: -5.219257831573486
    10. ' \' → logprob: -5.719257831573486

Token 39: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.5747568607330322
    2. ' p' → logprob: -1.0747568607330322
    3. 'perm' → logprob: -3.3247568607330322
    4. ' radi' → logprob: -4.199756622314453
    5. ' perms' → logprob: -4.324756622314453
    6. ' r' → logprob: -4.449756622314453
    7. ' per' → logprob: -5.199756622314453
    8. ' radius' → logprob: -5.574756622314453
    9. 'per' → logprob: -5.949756622314453
    10. 'p' → logprob: -6.199756622314453

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007734865415841341
    2. 'in' → logprob: -5.257734775543213
    3. 'utations' → logprob: -6.632734775543213
    4. 'utation' → logprob: -7.007734775543213
    5. ' ' → logprob: -9.757735252380371
    6. 'ination' → logprob: -9.882735252380371
    7. 'ution' → logprob: -10.257735252380371
    8. 'ission' → logprob: -10.257735252380371
    9. 'uation' → logprob: -10.757735252380371
    10. 'ation' → logprob: -11.382735252380371

Token 41: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.008638797327876091
    2. 'per' → logprob: -4.758638858795166
    3. '	per' → logprob: -11.508638381958008
    4. '(per' → logprob: -11.883638381958008
    5. ' perm' → logprob: -12.508638381958008
    6. 'perm' → logprob: -13.883638381958008
    7. '_per' → logprob: -14.008638381958008
    8. '-per' → logprob: -14.383638381958008
    9. ' per' → logprob: -14.383638381958008
    10. '.per' → logprob: -15.508638381958008

Token 42: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0032059962395578623
    2. '(' → logprob: -6.2532057762146
    3. ' (' → logprob: -6.7532057762146
    4. '(range' → logprob: -10.003206253051758
    5. '(W' → logprob: -10.628206253051758
    6. ')' → logprob: -10.878206253051758
    7. '(n' → logprob: -12.128206253051758
    8. '(R' → logprob: -12.628206253051758
    9. ')(' → logprob: -13.253206253051758
    10. ',' → logprob: -13.253206253051758

Token 43: 'adii' (ID: 55572)
  Prédit: 'adii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adii' → logprob: -9.13388703338569e-06
    2. 'adi' → logprob: -11.750009536743164
    3. 'adius' → logprob: -15.000009536743164
    4. 'addi' → logprob: -15.250009536743164
    5. ')' → logprob: -15.875009536743164
    6. 'ad' → logprob: -16.375009536743164
    7. 'a' → logprob: -16.625009536743164
    8. 'adia' → logprob: -16.625009536743164
    9. 'addii' → logprob: -17.250009536743164
    10. '   ' → logprob: -17.500009536743164

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004318672232329845
    2. '):
' → logprob: -5.629318714141846
    3. ' ):' → logprob: -7.879318714141846
    4. ')' → logprob: -8.129318237304688
    5. ',' → logprob: -10.754318237304688
    6. '):
' → logprob: -11.379318237304688
    7. '   ' → logprob: -12.754318237304688
    8. ':' → logprob: -13.004318237304688
    9. '):

' → logprob: -13.004318237304688
    10. ' ):
' → logprob: -14.129318237304688

Token 45: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023423777893185616
    2. ' :' → logprob: -4.648423671722412
    3. '):' → logprob: -4.773423671722412
    4. '       ' → logprob: -6.273423671722412
    5. ':
' → logprob: -6.898423671722412
    6. '<|end|>' → logprob: -7.398423671722412
    7. ',' → logprob: -7.648423671722412
    8. '):
' → logprob: -8.02342414855957
    9. ' :
' → logprob: -8.89842414855957
    10. '   ' → logprob: -8.89842414855957

Token 46: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5767419934272766
    2. ' 
' → logprob: -1.5767419338226318
    3. '        
' → logprob: -3.451741933822632
    4. ' ' → logprob: -3.451741933822632
    5. ' x' → logprob: -3.576741933822632
    6. '        ' → logprob: -3.576741933822632
    7. ' spacing' → logprob: -4.201742172241211
    8. ' positions' → logprob: -4.451742172241211
    9. ' distances' → logprob: -4.701742172241211
    10. ' placement' → logprob: -4.701742172241211

Token 47: ' Calculate' (ID: 38942)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5480750203132629
    2. ' positions' → logprob: -1.6730749607086182
    3. '       ' → logprob: -3.048074960708618
    4. 'x' → logprob: -3.298074960708618
    5. 'positions' → logprob: -3.423074960708618
    6. ' placed' → logprob: -3.548074960708618
    7. ' valid' → logprob: -4.423075199127197
    8. ' width' → logprob: -4.923075199127197
    9. 'placed' → logprob: -5.173075199127197
    10. ' total' → logprob: -5.298075199127197

Token 48: ' total' (ID: 3609)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.4539385735988617
    2. ' total' → logprob: -2.2039384841918945
    3. ' x' → logprob: -2.4539384841918945
    4. ' the' → logprob: -2.8289384841918945
    5. 'positions' → logprob: -3.8289384841918945
    6. 'x' → logprob: -3.9539384841918945
    7. ' current' → logprob: -4.7039384841918945
    8. ' distances' → logprob: -4.8289384841918945
    9. ' circle' → logprob: -4.9539384841918945
    10. ' spacing' → logprob: -5.4539384841918945

Token 49: ' width' (ID: 4345)
  Prédit: '_width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.8039751648902893
    2. '_radius' → logprob: -1.5539751052856445
    3. '_d' → logprob: -1.9289751052856445
    4. '_' → logprob: -2.6789751052856445
    5. '_length' → logprob: -2.9289751052856445
    6. '_space' → logprob: -3.5539751052856445
    7. 'diam' → logprob: -4.5539751052856445
    8. ' diameter' → logprob: -5.0539751052856445
    9. '_spacing' → logprob: -5.3039751052856445
    10. ' =' → logprob: -5.5539751052856445

Token 50: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008299307897686958
    2. '=' → logprob: -5.508299350738525
    3. '        ' → logprob: -6.633299350738525
    4. ',' → logprob: -7.633299350738525
    5. '       ' → logprob: -7.633299350738525
    6. ':' → logprob: -8.008298873901367
    7. '<|end|>' → logprob: -8.008298873901367
    8. ' ' → logprob: -8.133298873901367
    9. '    ' → logprob: -8.633298873901367
    10. '<|end|>' → logprob: -8.758298873901367

Token 51: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032612401992082596
    2. '=' → logprob: -3.6576123237609863
    3. '       ' → logprob: -5.782612323760986
    4. '        ' → logprob: -6.532612323760986
    5. ',' → logprob: -7.532612323760986
    6. ':' → logprob: -8.157612800598145
    7. ' +' → logprob: -8.907612800598145
    8. ' and' → logprob: -9.157612800598145
    9. '           ' → logprob: -9.532612800598145
    10. 'sum' → logprob: -9.532612800598145

Token 52: ' total' (ID: 3609)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5103524923324585
    2. ' total' → logprob: -1.1353524923324585
    3. 'sum' → logprob: -3.260352611541748
    4. 'total' (adapté à ' total') → logprob: -4.010352611541748
    5. ' width' → logprob: -4.510352611541748
    6. ' ' → logprob: -5.885352611541748
    7. '    ' → logprob: -6.260352611541748
    8. ' w' → logprob: -6.510352611541748
    9. ' 
' → logprob: -7.135352611541748
    10. 'width' → logprob: -7.260352611541748

Token 53: '_width' (ID: 17595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35220950841903687
    2. '_width' → logprob: -1.3522095680236816
    3. ' _' → logprob: -3.4772095680236816
    4. '_radius' → logprob: -5.852209568023682
    5. ' =' → logprob: -6.102209568023682
    6. '_space' → logprob: -7.477209568023682
    7. '_length' → logprob: -7.477209568023682
    8. ' ' → logprob: -8.227209091186523
    9. '_sum' → logprob: -8.977209091186523
    10. '=' → logprob: -9.102209091186523

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003608505241572857
    2. '=' → logprob: -5.628608703613281
    3. ' +=' → logprob: -12.378608703613281
    4. ' ' → logprob: -12.878608703613281
    5. ')' → logprob: -14.753608703613281
    6. '=sum' → logprob: -15.003608703613281
    7. 's' → logprob: -15.878608703613281
    8. '_' → logprob: -16.12860870361328
    9. ' =)' → logprob: -16.12860870361328
    10. ' ==' → logprob: -16.25360870361328

Token 55: ' perm' (ID: 5961)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.027186911553144455
    2. 'sum' → logprob: -3.777186870574951
    3. ' perm' → logprob: -6.277186870574951
    4. '0' → logprob: -6.652186870574951
    5. ' ' → logprob: -7.777186870574951
    6. '1' → logprob: -9.02718734741211
    7. 'perm' → logprob: -9.77718734741211
    8. ' math' → logprob: -10.27718734741211
    9. '(sum' → logprob: -10.40218734741211
    10. '2' → logprob: -10.90218734741211

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001249925117008388
    2. '[-' → logprob: -10.00012493133545
    3. '0' → logprob: -11.12512493133545
    4. 'sum' → logprob: -11.25012493133545
    5. ')' → logprob: -11.62512493133545
    6. ' [' → logprob: -11.62512493133545
    7. '[len' → logprob: -12.50012493133545
    8. ',' → logprob: -12.87512493133545
    9. '   ' → logprob: -13.00012493133545
    10. '[n' → logprob: -13.25012493133545

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019066639652010053
    2. ' ' → logprob: -8.625190734863281
    3. ']' → logprob: -12.625190734863281
    4. '[' → logprob: -12.750190734863281
    5. '][' → logprob: -13.375190734863281
    6. ':' → logprob: -14.500190734863281
    7. '1' → logprob: -14.500190734863281
    8. '-' → logprob: -14.500190734863281
    9. '2' → logprob: -15.062690734863281
    10. ')' → logprob: -15.312690734863281

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049975305795669556
    2. ' *' → logprob: -3.7999753952026367
    3. ']*' → logprob: -4.799975395202637
    4. ' ]' → logprob: -4.924975395202637
    5. '*' → logprob: -5.174975395202637
    6. '[' → logprob: -6.174975395202637
    7. ')' → logprob: -6.299975395202637
    8. ']+' → logprob: -7.174975395202637
    9. ' ' → logprob: -8.924975395202637
    10. ' +' → logprob: -9.424975395202637

Token 59: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.48419681191444397
    2. '*' → logprob: -0.9841967821121216
    3. ' +' → logprob: -5.109196662902832
    4. '[' → logprob: -5.984196662902832
    5. '2' → logprob: -7.484196662902832
    6. '+' → logprob: -8.484196662902832
    7. ' ' → logprob: -8.734196662902832
    8. '
' → logprob: -8.984196662902832
    9. 's' → logprob: -9.609196662902832
    10. ')' → logprob: -9.984196662902832

Token 60: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009760221466422081
    2. ' ' → logprob: -4.63476037979126
    3. '1' → logprob: -14.197259902954102
    4. '3' → logprob: -14.509759902954102
    5. ' ' → logprob: -14.572259902954102
    6. '  ' → logprob: -14.572259902954102
    7. '4' → logprob: -14.697259902954102
    8. '   ' → logprob: -15.447259902954102
    9. '```' → logprob: -15.634759902954102
    10. '=' → logprob: -15.759759902954102

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.023293538717553e-05
    2. ' ' → logprob: -10.875030517578125
    3. '1' → logprob: -12.125030517578125
    4. '```' → logprob: -13.625030517578125
    5. '

' → logprob: -14.375030517578125
    6. '3' → logprob: -14.437530517578125
    7. '   ' → logprob: -14.750030517578125
    8. '}' → logprob: -14.812530517578125
    9. '0' → logprob: -15.312530517578125
    10. '  ' → logprob: -15.500030517578125

Token 62: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.21896052360534668
    2. '+' → logprob: -2.4689605236053467
    3. '<|end|>' → logprob: -2.4689605236053467
    4. ' ' → logprob: -4.093960762023926
    5. ' +
' → logprob: -6.093960762023926
    6. 'for' → logprob: -6.593960762023926
    7. 'import' → logprob: -6.593960762023926
    8. ' for' → logprob: -6.718960762023926
    9. '   ' → logprob: -6.968960762023926
    10. '<|end|>' → logprob: -7.593960762023926

Token 63: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09962954372167587
    2. '+' → logprob: -2.5996296405792236
    3. '<|end|>' → logprob: -3.9746296405792236
    4. ' ' → logprob: -6.8496294021606445
    5. ' +
' → logprob: -7.8496294021606445
    6. '   ' → logprob: -9.474629402160645
    7. ')' → logprob: -9.849629402160645
    8. '<|end|>' → logprob: -10.099629402160645
    9. '  ' → logprob: -10.349629402160645
    10. ' +

' → logprob: -11.224629402160645

Token 64: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.682063639163971
    2. '+' → logprob: -0.932063639163971
    3. ' +' → logprob: -2.682063579559326
    4. '<|end|>' → logprob: -4.057063579559326
    5. ' for' → logprob: -5.682063579559326
    6. ')' → logprob: -5.682063579559326
    7. ' )' → logprob: -5.932063579559326
    8. 'for' (adapté à ' for') → logprob: -6.432063579559326
    9. '  ' → logprob: -6.807063579559326
    10. ',' → logprob: -7.432063579559326

Token 65: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012542495504021645
    2. 'i' → logprob: -4.387542724609375
    3. ' ' → logprob: -10.512542724609375
    4. '	i' → logprob: -12.637542724609375
    5. ' in' → logprob: -13.387542724609375
    6. ' ' → logprob: -15.012542724609375
    7. '  ' → logprob: -15.137542724609375
    8. 'I' → logprob: -15.637542724609375
    9. ' I' → logprob: -17.262542724609375
    10. '_i' → logprob: -17.387542724609375

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003943304473068565
    2. 'in' → logprob: -7.875394344329834
    3. ' ' → logprob: -11.500393867492676
    4. '	in' → logprob: -14.125393867492676
    5. '  ' → logprob: -14.500393867492676
    6. ',' → logprob: -14.625393867492676
    7. '=' → logprob: -14.875393867492676
    8. '1' → logprob: -15.125393867492676
    9. ')' → logprob: -15.250393867492676
    10. ' =' → logprob: -15.625393867492676

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011053716763854027
    2. 'range' → logprob: -4.511053562164307
    3. ' ' → logprob: -12.636054039001465
    4. '	range' → logprob: -13.261054039001465
    5. ' xrange' → logprob: -15.011054039001465
    6. '(range' → logprob: -15.386054039001465
    7. '   ' → logprob: -15.886054039001465
    8. '  ' → logprob: -16.01105308532715
    9. '[' → logprob: -16.26105308532715
    10. ' ' → logprob: -17.26105308532715

Token 68: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.034592388459714e-06
    2. ' (' → logprob: -12.375005722045898
    3. '1' → logprob: -13.375005722045898
    4. ' ' → logprob: -16.6250057220459
    5. '(n' → logprob: -17.5000057220459
    6. '(len' → logprob: -19.0000057220459
    7. '   ' → logprob: -19.5000057220459
    8. '(
' → logprob: -19.8750057220459
    9. '[' → logprob: -20.3750057220459
    10. 'n' → logprob: -21.7500057220459

Token 69: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12096031755208969
    2. '):
' → logprob: -2.495960235595703
    3. ' -' → logprob: -4.870960235595703
    4. ' ):' → logprob: -4.870960235595703
    5. '1' → logprob: -4.995960235595703
    6. '-' → logprob: -4.995960235595703
    7. ')' → logprob: -6.870960235595703
    8. ' ):
' → logprob: -6.995960235595703
    9. ' ' → logprob: -8.120960235595703
    10. '):

' → logprob: -8.995960235595703

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815006136894226
    2. ' ' → logprob: -4.0181498527526855
    3. '2' → logprob: -16.768150329589844
    4. '   ' → logprob: -17.893150329589844
    5. '```' → logprob: -18.393150329589844
    6. '<|end|>' → logprob: -18.455650329589844
    7. '-' → logprob: -18.580650329589844
    8. '  ' → logprob: -18.893150329589844
    9. '0' → logprob: -18.955650329589844
    10. ' ' → logprob: -19.268150329589844

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -18.562517166137695
    4. '   ' → logprob: -18.687517166137695
    5. '2' → logprob: -19.000017166137695
    6. '  ' → logprob: -19.000017166137695
    7. '' → logprob: -19.937517166137695
    8. '۱' → logprob: -20.062517166137695
    9. '１' → logprob: -20.437517166137695
    10. '0' → logprob: -20.437517166137695

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18277791142463684
    2. '):
' → logprob: -1.8077778816223145
    3. '):
' → logprob: -6.5577778816223145
    4. ' ):' → logprob: -6.6827778816223145
    5. ' ):
' → logprob: -8.307778358459473
    6. ':' → logprob: -9.682778358459473
    7. '):

' → logprob: -10.807778358459473
    8. ')' → logprob: -11.057778358459473
    9. ',' → logprob: -12.807778358459473
    10. ' ' → logprob: -13.057778358459473

Token 73: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12433145195245743
    2. '+' → logprob: -2.874331474304199
    3. ' ' → logprob: -3.499331474304199
    4. ' +
' → logprob: -3.874331474304199
    5. '       ' → logprob: -5.749331474304199
    6. '        ' → logprob: -6.249331474304199
    7. '<|end|>' → logprob: -6.249331474304199
    8. ' +=' → logprob: -7.124331474304199
    9. '           ' → logprob: -8.3743314743042
    10. ')' → logprob: -8.8743314743042

Token 74: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0033871950581669807
    2. ' ' → logprob: -7.628386974334717
    3. ' 
' → logprob: -7.753386974334717
    4. '        ' → logprob: -8.003387451171875
    5. '<|end|>' → logprob: -8.003387451171875
    6. '         ' → logprob: -8.628387451171875
    7. '  ' → logprob: -8.878387451171875
    8. 'total' → logprob: -9.003387451171875
    9. ' total' → logprob: -9.003387451171875
    10. '     ' → logprob: -9.003387451171875

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18219318985939026
    2. '=' → logprob: -2.0571932792663574
    3. 'istance' → logprob: -3.3071932792663574
    4. 'ist' → logprob: -6.307193279266357
    5. 'i' → logprob: -9.6821928024292
    6. 'x' → logprob: -10.1821928024292
    7. ' ' → logprob: -10.5571928024292
    8. '_i' → logprob: -11.0571928024292
    9. 'is' → logprob: -11.0571928024292
    10. '   ' → logprob: -11.1821928024292

Token 76: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5935298204421997
    2. '2' → logprob: -1.8435298204421997
    3. ' math' → logprob: -1.9685298204421997
    4. 'perm' → logprob: -2.21852970123291
    5. '(' → logprob: -4.09352970123291
    6. '(math' → logprob: -4.84352970123291
    7. ' (' → logprob: -5.09352970123291
    8. ' ' → logprob: -5.21852970123291
    9. ' perm' → logprob: -5.96852970123291
    10. 'per' → logprob: -6.59352970123291

Token 77: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0007210109033621848
    2. '.ac' → logprob: -7.500720977783203
    3. 'sqrt' → logprob: -9.625720977783203
    4. '.ceil' → logprob: -10.250720977783203
    5. '.h' → logprob: -10.500720977783203
    6. '.cos' → logprob: -11.000720977783203
    7. '.atan' → logprob: -11.750720977783203
    8. '```' → logprob: -12.875720977783203
    9. '.pi' → logprob: -13.125720977783203
    10. '.c' → logprob: -13.250720977783203

Token 78: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04223485291004181
    2. '(' → logprob: -3.2922348976135254
    3. '(pow' → logprob: -5.542234897613525
    4. '(abs' → logprob: -9.917234420776367
    5. '(((' → logprob: -10.167234420776367
    6. ' (' → logprob: -10.167234420776367
    7. '(math' → logprob: -10.667234420776367
    8. ' ((' → logprob: -10.667234420776367
    9. '(r' → logprob: -10.917234420776367
    10. '(per' → logprob: -11.042234420776367

Token 79: 'perm' (ID: 34794)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37553369998931885
    2. 'perm' → logprob: -1.2505336999893188
    3. 'r' → logprob: -4.500533580780029
    4. '(r' → logprob: -5.000533580780029
    5. '4' → logprob: -5.125533580780029
    6. '2' → logprob: -6.250533580780029
    7. ')' → logprob: -8.125534057617188
    8. '((' → logprob: -8.500534057617188
    9. ' (' → logprob: -9.250534057617188
    10. ')(' → logprob: -9.375534057617188

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.558399319241289e-05
    2. '[' → logprob: -11.250025749206543
    3. ')[' → logprob: -12.125025749206543
    4. 'i' → logprob: -13.000025749206543
    5. ')' → logprob: -13.250025749206543
    6. '```' → logprob: -13.625025749206543
    7. '][' → logprob: -14.500025749206543
    8. ' [' → logprob: -14.625025749206543
    9. ')i' → logprob: -15.625025749206543
    10. '[idx' → logprob: -15.875025749206543

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07845398783683777
    2. ']+' → logprob: -2.70345401763916
    3. ']*' → logprob: -4.95345401763916
    4. '])' → logprob: -7.82845401763916
    5. ' ]' → logprob: -8.07845401763916
    6. '[' → logprob: -8.57845401763916
    7. '   ' → logprob: -9.07845401763916
    8. '[i' → logprob: -9.45345401763916
    9. '0' → logprob: -9.95345401763916
    10. '*' → logprob: -10.20345401763916

Token 82: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4856226146221161
    2. ' +' → logprob: -0.9856226444244385
    3. '*' → logprob: -4.860622406005859
    4. ')' → logprob: -6.235622406005859
    5. '[' → logprob: -6.985622406005859
    6. '+r' → logprob: -8.36062240600586
    7. 'r' → logprob: -9.11062240600586
    8. ' ' → logprob: -9.23562240600586
    9. ')+' → logprob: -9.61062240600586
    10. 'd' → logprob: -9.73562240600586

Token 83: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.31364840269088745
    2. ' perm' → logprob: -1.3136484622955322
    3. 'per' → logprob: -8.688648223876953
    4. ')' → logprob: -9.063648223876953
    5. '<|end|>' → logprob: -10.063648223876953
    6. ' ' → logprob: -10.313648223876953
    7. ' perms' → logprob: -11.938648223876953
    8. '_perm' → logprob: -12.313648223876953
    9. ' )' → logprob: -12.438648223876953
    10. 'perl' → logprob: -14.063648223876953

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3697262704372406
    2. '+' → logprob: -1.369726300239563
    3. '[' → logprob: -3.2447261810302734
    4. '```' → logprob: -4.619726181030273
    5. '1' → logprob: -5.619726181030273
    6. 'i' → logprob: -7.244726181030273
    7. '[next' → logprob: -8.119726181030273
    8. '+i' → logprob: -8.244726181030273
    9. '[j' → logprob: -8.244726181030273
    10. '`' → logprob: -8.619726181030273

Token 85: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01074394304305315
    2. '1' → logprob: -5.385744094848633
    3. '[i' → logprob: -5.510744094848633
    4. '[' → logprob: -6.885744094848633
    5. ' +' → logprob: -7.885744094848633
    6. 'i' → logprob: -8.010744094848633
    7. '   ' → logprob: -8.885744094848633
    8. '+i' → logprob: -9.260744094848633
    9. '```' → logprob: -10.135744094848633
    10. ' ' → logprob: -12.010744094848633

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.750015258789062
    3. '   ' → logprob: -12.500015258789062
    4. '+' → logprob: -13.750015258789062
    5. '```' → logprob: -14.125015258789062
    6. ']' → logprob: -15.625015258789062
    7. '

' → logprob: -15.687515258789062
    8. '  ' → logprob: -15.875015258789062
    9. '])' → logprob: -16.062515258789062
    10. '
' → logprob: -16.312515258789062

Token 87: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17179277539253235
    2. ')' → logprob: -2.17179274559021
    3. ')**' → logprob: -3.17179274559021
    4. '`)' → logprob: -7.921792984008789
    5. ' )' → logprob: -8.171792984008789
    6. '2' → logprob: -8.421792984008789
    7. ''])' → logprob: -8.671792984008789
    8. ')*' → logprob: -8.796792984008789
    9. '   ' → logprob: -8.796792984008789
    10. '})' → logprob: -9.421792984008789

Token 88: '**' (ID: 410)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6086040735244751
    2. ')**' → logprob: -0.8586040735244751
    3. ' )' → logprob: -4.1086039543151855
    4. '*' → logprob: -4.8586039543151855
    5. ')*' → logprob: -4.9836039543151855
    6. ' *' → logprob: -7.6086039543151855
    7. '2' → logprob: -8.483604431152344
    8. '*)' → logprob: -8.483604431152344
    9. '   ' → logprob: -9.858604431152344
    10. '```' → logprob: -10.358604431152344

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005027544684708118
    2. ' ' → logprob: -7.625502586364746
    3. ')' → logprob: -12.125502586364746
    4. '**' → logprob: -12.625502586364746
    5. '```' → logprob: -13.625502586364746
    6. '*' → logprob: -13.750502586364746
    7. '   ' → logprob: -14.000502586364746
    8. '  ' → logprob: -14.125502586364746
    9. '<|end|>' → logprob: -14.500502586364746
    10. '    ' → logprob: -16.000503540039062

Token 90: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09553185850381851
    2. ')' → logprob: -2.470531940460205
    3. ' ' → logprob: -6.095531940460205
    4. '-' → logprob: -6.595531940460205
    5. '    ' → logprob: -7.345531940460205
    6. '   ' → logprob: -7.345531940460205
    7. ' )' → logprob: -7.345531940460205
    8. '	' → logprob: -7.595531940460205
    9. '  ' → logprob: -9.095531463623047
    10. '),' → logprob: -9.845531463623047

Token 91: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6781437397003174
    2. '(' → logprob: -0.8031437397003174
    3. '(abs' → logprob: -3.4281437397003174
    4. '(math' → logprob: -4.928143501281738
    5. '(r' → logprob: -6.428143501281738
    6. '(per' → logprob: -6.553143501281738
    7. ' ' → logprob: -7.928143501281738
    8. '   ' → logprob: -8.428143501281738
    9. '((' → logprob: -8.428143501281738
    10. '(W' → logprob: -8.553143501281738

Token 92: 'perm' (ID: 34794)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7762932181358337
    2. '(abs' → logprob: -1.1512932777404785
    3. ' (' → logprob: -2.4012932777404785
    4. '0' → logprob: -3.5262932777404785
    5. '(min' → logprob: -3.6512932777404785
    6. ' abs' → logprob: -4.0262932777404785
    7. 'abs' → logprob: -4.0262932777404785
    8. '(r' → logprob: -4.4012932777404785
    9. 'min' → logprob: -5.2762932777404785
    10. ')' → logprob: -5.4012932777404785

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.780830830801278e-05
    2. '[' → logprob: -10.00008773803711
    3. 'i' → logprob: -10.25008773803711
    4. '[j' → logprob: -13.00008773803711
    5. ')' → logprob: -14.37508773803711
    6. '[I' → logprob: -14.56258773803711
    7. ' i' → logprob: -14.62508773803711
    8. ')i' → logprob: -15.31258773803711
    9. '(i' → logprob: -15.56258773803711
    10. '   ' → logprob: -15.56258773803711

Token 94: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1272311955690384
    2. '-' → logprob: -2.6272311210632324
    3. ']' → logprob: -3.6272311210632324
    4. '[' → logprob: -4.252231121063232
    5. ']-' → logprob: -5.877231121063232
    6. '+' → logprob: -6.502231121063232
    7. ' -' → logprob: -6.752231121063232
    8. '[-' → logprob: -8.25223159790039
    9. '```' → logprob: -8.87723159790039
    10. '   ' → logprob: -9.00223159790039

Token 95: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41292431950569153
    2. '[' → logprob: -1.7879242897033691
    3. '-' → logprob: -2.162924289703369
    4. '[i' → logprob: -2.912924289703369
    5. '[-' → logprob: -7.662924289703369
    6. '   ' → logprob: -7.912924289703369
    7. '<|end|>' → logprob: -8.287924766540527
    8. ')' → logprob: -9.162924766540527
    9. ' ' → logprob: -9.287924766540527
    10. '  ' → logprob: -9.912924766540527

Token 96: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.5760977268218994
    2. ' perm' → logprob: -0.8260977268218994
    3. 'per' → logprob: -9.32609748840332
    4. ' ' → logprob: -10.82609748840332
    5. '_perm' → logprob: -11.32609748840332
    6. '<|end|>' → logprob: -11.95109748840332
    7. ')' → logprob: -12.51359748840332
    8. 'r' → logprob: -12.70109748840332
    9. 'Perm' → logprob: -12.95109748840332
    10. 'pm' → logprob: -13.01359748840332

Token 97: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4750407934188843
    2. '[i' → logprob: -0.9750407934188843
    3. '[' → logprob: -7.725040912628174
    4. 'user' → logprob: -8.850040435791016
    5. 'perm' → logprob: -9.100040435791016
    6. 'per' → logprob: -9.600040435791016
    7. 'plus' → logprob: -9.975040435791016
    8. '   ' → logprob: -10.475040435791016
    9. '1' → logprob: -11.100040435791016
    10. '_plus' → logprob: -11.100040435791016

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003475816920399666
    2. '1' → logprob: -6.003475666046143
    3. '[' → logprob: -8.0034761428833
    4. '[i' → logprob: -8.2534761428833
    5. '   ' → logprob: -8.3784761428833
    6. ' +' → logprob: -9.3784761428833
    7. '-' → logprob: -11.0034761428833
    8. '])' → logprob: -11.0034761428833
    9. ' ' → logprob: -11.1284761428833
    10. '```' → logprob: -11.6284761428833

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. '+' → logprob: -11.125020980834961
    3. ' ' → logprob: -12.625020980834961
    4. '   ' → logprob: -13.375020980834961
    5. '```' → logprob: -15.000020980834961
    6. '

' → logprob: -16.06252098083496
    7. ')' → logprob: -16.75002098083496
    8. '  ' → logprob: -16.81252098083496
    9. '``' → logprob: -16.87502098083496
    10. '
' → logprob: -17.00002098083496

Token 100: '])' (ID: 4636)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.12801949679851532
    2. ')' → logprob: -2.6280195713043213
    3. '])' → logprob: -3.6280195713043213
    4. ' )' → logprob: -4.503019332885742
    5. '())' → logprob: -4.628019332885742
    6. '   ' → logprob: -8.753019332885742
    7. ' ' → logprob: -9.628019332885742
    8. '[' → logprob: -9.753019332885742
    9. '）' → logprob: -10.003019332885742
    10. '`)' → logprob: -10.128019332885742

Token 101: '**' (ID: 410)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.6999762654304504
    2. '**' → logprob: -1.6999762058258057
    3. ')' → logprob: -1.8249762058258057
    4. '2' → logprob: -2.3249762058258057
    5. '*' → logprob: -3.0749762058258057
    6. ' )' → logprob: -5.449976444244385
    7. ' *' → logprob: -5.699976444244385
    8. ' ' → logprob: -6.074976444244385
    9. '[' → logprob: -6.449976444244385
    10. '```' → logprob: -6.949976444244385

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009743517730385065
    2. ' ' → logprob: -7.125974178314209
    3. '22' → logprob: -9.250974655151367
    4. '21' → logprob: -11.000974655151367
    5. '210' → logprob: -11.625974655151367
    6. '1' → logprob: -12.125974655151367
    7. '**' → logprob: -12.375974655151367
    8. '20' → logprob: -12.375974655151367
    9. '```' → logprob: -12.500974655151367
    10. '212' → logprob: -12.750974655151367

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08225380629301071
    2. ')
' → logprob: -3.4572536945343018
    3. '           ' → logprob: -3.4572536945343018
    4. ' )' → logprob: -4.332253932952881
    5. ' )
' → logprob: -6.582253932952881
    6. '       ' → logprob: -6.707253932952881
    7. ')
' → logprob: -10.082253456115723
    8. ' +' → logprob: -10.457253456115723
    9. ')+' → logprob: -10.582253456115723
    10. '   ' → logprob: -11.832253456115723

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015549783129245043
    2. ' +' → logprob: -6.7515549659729
    3. '       ' → logprob: -8.501555442810059
    4. '+' → logprob: -9.376555442810059
    5. '               ' → logprob: -10.626555442810059
    6. ')' → logprob: -11.251555442810059
    7. '            
' → logprob: -11.751555442810059
    8. '		' → logprob: -11.876555442810059
    9. ' total' → logprob: -12.126555442810059
    10. ' ' → logprob: -12.251555442810059

Token 105: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.09120341390371323
    2. '           ' → logprob: -3.091203451156616
    3. 'total' (adapté à ' total') → logprob: -3.216203451156616
    4. ' +' → logprob: -7.216203212738037
    5. ' ' → logprob: -8.841203689575195
    6. '	total' → logprob: -8.966203689575195
    7. '            ' → logprob: -9.091203689575195
    8. '            
' → logprob: -9.341203689575195
    9. ' ' → logprob: -9.841203689575195
    10. '+' → logprob: -9.966203689575195

Token 106: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.00010247035970678553
    2. '_' → logprob: -9.375102043151855
    3. ' +=' → logprob: -11.500102043151855
    4. 'width' → logprob: -12.875102043151855
    5. '+=' → logprob: -13.625102043151855
    6. '_spacing' → logprob: -14.000102043151855
    7. 'Width' → logprob: -14.500102043151855
    8. '+' → logprob: -15.375102043151855
    9. '_length' → logprob: -15.500102043151855
    10. ' _' → logprob: -15.500102043151855

Token 107: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25194641947746277
    2. '+=' → logprob: -1.5019464492797852
    3. '+' → logprob: -11.626946449279785
    4. '=' → logprob: -12.251946449279785
    5. ' +' → logprob: -13.876946449279785
    6. '+=(' → logprob: -13.876946449279785
    7. ']+=' → logprob: -14.001946449279785
    8. '	' → logprob: -15.751946449279785
    9. ' =' → logprob: -15.751946449279785
    10. '+='' → logprob: -15.751946449279785

Token 108: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.039794523268938065
    2. 'd' → logprob: -3.289794445037842
    3. ' (' → logprob: -7.414794445037842
    4. ' ' → logprob: -7.664794445037842
    5. '"' → logprob: -8.664794921875
    6. ' "' → logprob: -8.914794921875
    7. ' perm' → logprob: -9.789794921875
    8. ' math' → logprob: -9.789794921875
    9. '(' → logprob: -10.227294921875
    10. ' '' → logprob: -10.289794921875

Token 109: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00157437555026263
    2. '           ' → logprob: -7.376574516296387
    3. ' ' → logprob: -8.001574516296387
    4. ' return' → logprob: -9.126574516296387
    5. '   ' → logprob: -9.376574516296387
    6. ' +' → logprob: -9.376574516296387
    7. '
' → logprob: -9.626574516296387
    8. ' if' → logprob: -9.751574516296387
    9. '        
' → logprob: -9.876574516296387
    10. '<|end|>' → logprob: -10.126574516296387

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038797620218247175
    2. '           ' → logprob: -6.128879547119141
    3. ' return' → logprob: -7.503879547119141
    4. 'return' → logprob: -7.753879547119141
    5. '<|end|>' → logprob: -8.37887954711914
    6. '        
' → logprob: -8.87887954711914
    7. '
' → logprob: -9.37887954711914
    8. '   ' → logprob: -9.50387954711914
    9. ' 
' → logprob: -10.12887954711914
    10. ' ' → logprob: -10.87887954711914

Token 111: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12147744745016098
    2. ' if' → logprob: -2.2464773654937744
    3. ' return' → logprob: -5.8714776039123535
    4. ' ' → logprob: -6.2464776039123535
    5. 'if' (adapté à ' if') → logprob: -6.6214776039123535
    6. '
' → logprob: -7.3714776039123535
    7. 'return' → logprob: -7.6214776039123535
    8. '        
' → logprob: -7.9964776039123535
    9. '<|end|>' → logprob: -8.496477127075195
    10. '   ' → logprob: -9.246477127075195

Token 112: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.10021573305130005
    2. 'total' → logprob: -2.3502156734466553
    3. '(total' → logprob: -12.850215911865234
    4. '	total' → logprob: -13.225215911865234
    5. ' ' → logprob: -13.350215911865234
    6. 'Total' → logprob: -14.100215911865234
    7. ' ' → logprob: -14.600215911865234
    8. 'otal' → logprob: -14.725215911865234
    9. '$total' → logprob: -14.975215911865234
    10. '   ' → logprob: -15.850215911865234

Token 113: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -2.6656825866666622e-05
    2. '_' → logprob: -10.75002670288086
    3. 'width' → logprob: -12.37502670288086
    4. ' _' → logprob: -15.12502670288086
    5. '_w' → logprob: -15.75002670288086
    6. '```' → logprob: -16.25002670288086
    7. '<=' → logprob: -16.50002670288086
    8. '   ' → logprob: -16.62502670288086
    9. '_WIDTH' → logprob: -17.00002670288086
    10. '_length' → logprob: -17.50002670288086

Token 114: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.012512356042861938
    2. '<=' → logprob: -4.38751220703125
    3. ' ' → logprob: -13.13751220703125
    4. ' ' → logprob: -15.26251220703125
    5. ')<=' → logprob: -15.26251220703125
    6. ' <' → logprob: -16.26251220703125
    7. '=' → logprob: -17.26251220703125
    8. 'le' → logprob: -17.38751220703125
    9. '<' → logprob: -17.38751220703125
    10. '[' → logprob: -17.51251220703125

Token 115: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.5231693983078003
    2. 'W' → logprob: -0.8981693983078003
    3. '	W' → logprob: -10.39816951751709
    4. ' ' → logprob: -11.77316951751709
    5. '   ' → logprob: -12.64816951751709
    6. ' ' → logprob: -13.02316951751709
    7. '_W' → logprob: -15.14816951751709
    8. '  ' → logprob: -15.33566951751709
    9. '
' → logprob: -15.39816951751709
    10. '    ' → logprob: -15.58566951751709

Token 116: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009219751693308353
    2. ':
' → logprob: -5.009219646453857
    3. ':return' → logprob: -6.009219646453857
    4. ' :' → logprob: -10.134220123291016
    5. ' :
' → logprob: -13.259220123291016
    6. ':
' → logprob: -13.384220123291016
    7. ' return' → logprob: -14.009220123291016
    8. ':

' → logprob: -14.759220123291016
    9. ' and' → logprob: -15.259220123291016
    10. 'return' → logprob: -15.509220123291016

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132705092430115
    2. ' ' → logprob: -1.3132705688476562
    3. '   ' → logprob: -12.688270568847656
    4. ' ' → logprob: -13.438270568847656
    5. '  ' → logprob: -13.813270568847656
    6. '0' → logprob: -13.938270568847656
    7. '-' → logprob: -14.750770568847656
    8. '(' → logprob: -15.188270568847656
    9. '2' → logprob: -15.438270568847656
    10. '```' → logprob: -15.500770568847656

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020520923135336488
    2. ' ' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.000205039978027
    4. '0' → logprob: -15.125205039978027
    5. '-' → logprob: -15.500205039978027
    6. '(' → logprob: -16.375205993652344
    7. ' ' → logprob: -16.625205993652344
    8. '10' → logprob: -17.125205993652344
    9. '2' → logprob: -17.250205993652344
    10. '  ' → logprob: -17.250205993652344

Token 119: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.670925358776003e-05
    2. '-' → logprob: -9.625066757202148
    3. ':' → logprob: -16.00006675720215
    4. '-e' → logprob: -16.00006675720215
    5. 'E' → logprob: -16.25006675720215
    6. '0' → logprob: -16.75006675720215
    7. ' -' → logprob: -17.12506675720215
    8. '   ' → logprob: -17.25006675720215
    9. '.' → logprob: -17.50006675720215
    10. '1' → logprob: -17.75006675720215

Token 120: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.25
    3. '```' → logprob: -18.0
    4. '6' → logprob: -19.25
    5. '3' → logprob: -19.875
    6. '7' → logprob: -20.0
    7. '−' → logprob: -20.5
    8. '   ' → logprob: -20.5
    9. '9' → logprob: -20.625
    10. '{-' → logprob: -20.625

Token 121: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5171231031417847
    2. '8' → logprob: -1.5171231031417847
    3. '7' → logprob: -2.267123222351074
    4. '10' → logprob: -3.142123222351074
    5. '12' → logprob: -3.767123222351074
    6. '6' → logprob: -4.267123222351074
    7. '5' → logprob: -8.642123222351074
    8. '11' → logprob: -9.267123222351074
    9. '14' → logprob: -9.517123222351074
    10. '-' → logprob: -9.767123222351074

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017695391550660133
    2. ':
' → logprob: -4.392695426940918
    3. ':return' → logprob: -5.267695426940918
    4. ' :' → logprob: -11.892695426940918
    5. ' return' → logprob: -12.767695426940918
    6. ':
' → logprob: -13.142695426940918
    7. ':

' → logprob: -13.267695426940918
    8. ' :
' → logprob: -13.892695426940918
    9. 'return' → logprob: -14.267695426940918
    10. '<|end|>' → logprob: -14.892695426940918

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032840673811733723
    2. ' return' → logprob: -5.878283977508545
    3. 'return' → logprob: -7.753283977508545
    4. '
' → logprob: -11.003284454345703
    5. '<|end|>' → logprob: -12.128284454345703
    6. '               ' → logprob: -12.378284454345703
    7. ':return' → logprob: -12.378284454345703
    8. '       ' → logprob: -12.378284454345703
    9. '```' → logprob: -12.503284454345703
    10. '	       ' → logprob: -12.878284454345703

Token 124: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.45923754572868347
    2. '           ' → logprob: -1.5842375755310059
    3. 'return' (adapté à ' return') → logprob: -1.8342375755310059
    4. '       ' → logprob: -6.084237575531006
    5. '               ' → logprob: -6.834237575531006
    6. '	return' → logprob: -11.209237098693848
    7. ' ' → logprob: -11.959237098693848
    8. '	       ' → logprob: -12.209237098693848
    9. '   ' → logprob: -12.584237098693848
    10. ':return' → logprob: -12.709237098693848

Token 125: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014163628220558167
    2. ' True' → logprob: -4.264163494110107
    3. '   ' → logprob: -16.389163970947266
    4. '(True' → logprob: -17.014163970947266
    5. '"' → logprob: -18.764163970947266
    6. ' ' → logprob: -19.514163970947266
    7. 'true' → logprob: -19.764163970947266
    8. '1' → logprob: -19.889163970947266
    9. 'False' → logprob: -19.889163970947266
    10. '       ' → logprob: -20.264163970947266

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008522736839950085
    2. '
' → logprob: -5.7585225105285645
    3. '    
' → logprob: -5.8835225105285645
    4. ' return' → logprob: -6.8835225105285645
    5. 'return' → logprob: -7.5085225105285645
    6. '<|end|>' → logprob: -7.8835225105285645
    7. '[' → logprob: -8.508522987365723
    8. ' 
' → logprob: -9.758522987365723
    9. '\n' → logprob: -10.008522987365723
    10. '	return' → logprob: -10.008522987365723

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016021346673369408
    2. ' return' → logprob: -4.641021251678467
    3. 'return' → logprob: -5.141021251678467
    4. '
' → logprob: -9.766021728515625
    5. '       ' → logprob: -9.891021728515625
    6. 'None' → logprob: -9.891021728515625
    7. '	return' → logprob: -10.016021728515625
    8. '    
' → logprob: -10.141021728515625
    9. '    ' → logprob: -10.266021728515625
    10. 'False' → logprob: -10.516021728515625

Token 128: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18961341679096222
    2. '   ' → logprob: -1.9396134614944458
    3. ' return' → logprob: -3.5646133422851562
    4. 'None' → logprob: -8.564613342285156
    5. '
' → logprob: -8.939613342285156
    6. '	return' → logprob: -9.314613342285156
    7. 'False' → logprob: -9.939613342285156
    8. '       ' → logprob: -10.564613342285156
    9. '    
' → logprob: -10.564613342285156
    10. ' ' → logprob: -10.564613342285156

Token 129: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. '(False' → logprob: -18.63604736328125
    4. '=False' → logprob: -21.76104736328125
    5. ' ' → logprob: -22.13604736328125
    6. '_false' → logprob: -23.13604736328125
    7. 'false' → logprob: -23.38604736328125
    8. 'True' → logprob: -23.63604736328125
    9. '.False' → logprob: -24.26104736328125
    10. '   ' → logprob: -24.26104736328125

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00129785411991179
    2. 'W' → logprob: -7.251297950744629
    3. 'if' → logprob: -7.876297950744629
    4. '#' → logprob: -9.001297950744629
    5. 'import' → logprob: -9.876297950744629
    6. '```' → logprob: -11.501297950744629
    7. 'n' → logprob: -12.501297950744629
    8. 'T' → logprob: -12.501297950744629
    9. ' def' → logprob: -12.876297950744629
    10. 'print' → logprob: -13.001297950744629

Token 132: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03607427701354027
    2. '_line' → logprob: -3.661074161529541
    3. '_data' → logprob: -5.536074161529541
    4. '_' → logprob: -6.161074161529541
    5. '_lines' → logprob: -6.536074161529541
    6. ' =' → logprob: -6.911074161529541
    7. '(' → logprob: -8.2860746383667
    8. '_size' → logprob: -8.5360746383667
    9. 's' → logprob: -8.9110746383667
    10. '().' → logprob: -8.9110746383667

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8849241733551025
    2. '()' → logprob: -1.1349241733551025
    3. '[' → logprob: -2.0099241733551025
    4. '(' → logprob: -2.6349241733551025
    5. '=' → logprob: -3.0099241733551025
    6. '.' → logprob: -5.759923934936523
    7. '[:]' → logprob: -5.759923934936523
    8. '[]' → logprob: -6.384923934936523
    9. '```' → logprob: -7.759923934936523
    10. '=[]' → logprob: -7.759923934936523

Token 134: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2525733411312103
    2. ' sys' → logprob: -1.5025733709335327
    3. '[]' → logprob: -7.877573490142822
    4. '[' → logprob: -8.502573013305664
    5. ' []' → logprob: -10.127573013305664
    6. ' [' → logprob: -11.377573013305664
    7. '=sys' → logprob: -12.377573013305664
    8. '	sys' → logprob: -13.002573013305664
    9. '(sys' → logprob: -13.252573013305664
    10. 'list' → logprob: -14.252573013305664

Token 135: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0018148827366530895
    2. '.readline' → logprob: -6.876814842224121
    3. '.' → logprob: -7.376814842224121
    4. '.argv' → logprob: -9.751814842224121
    5. '.stdout' → logprob: -10.251814842224121
    6. 'stdin' → logprob: -10.376814842224121
    7. ' .' → logprob: -10.876814842224121
    8. '.readlines' → logprob: -12.501814842224121
    9. '.std' → logprob: -13.001814842224121
    10. '.read' → logprob: -13.626814842224121

Token 136: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.010012589395046234
    2. '.readlines' → logprob: -5.135012626647949
    3. '.' → logprob: -6.135012626647949
    4. '=' → logprob: -7.260012626647949
    5. ' =' → logprob: -7.510012626647949
    6. 'for' → logprob: -8.26001262664795
    7. 'read' → logprob: -8.76001262664795
    8. '.read' → logprob: -8.88501262664795
    9. 'def' → logprob: -10.88501262664795
    10. 'buffer' → logprob: -11.26001262664795

Token 137: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3133130371570587
    2. '()' → logprob: -1.3133130073547363
    3. '(' → logprob: -10.688313484191895
    4. '()

' → logprob: -12.188313484191895
    5. '_lines' → logprob: -12.563313484191895
    6. '())' → logprob: -12.688313484191895
    7. ' ()' → logprob: -13.063313484191895
    8. '()\' → logprob: -13.063313484191895
    9. '.split' → logprob: -13.313313484191895
    10. '()
' → logprob: -13.438313484191895

Token 138: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.31326615810394287
    2. 'split' → logprob: -1.3132661581039429
    3. 'decode' → logprob: -12.563265800476074
    4. 'rstrip' → logprob: -14.063265800476074
    5. ' split' → logprob: -16.06326675415039
    6. ' strip' → logprob: -16.93826675415039
    7. 'read' → logprob: -18.93826675415039
    8. 'replace' → logprob: -19.43826675415039
    9. '(split' → logprob: -20.93826675415039
    10. 'plit' → logprob: -21.56326675415039

Token 139: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011083780787885189
    2. '()' → logprob: -4.511083602905273
    3. '('' → logprob: -10.511083602905273
    4. 'split' → logprob: -12.636083602905273
    5. '(' → logprob: -13.011083602905273
    6. '()
' → logprob: -14.136083602905273
    7. '(()' → logprob: -14.761083602905273
    8. '().'' → logprob: -15.011083602905273
    9. '()`' → logprob: -15.261083602905273
    10. '("' → logprob: -15.511083602905273

Token 140: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.5
    3. '(split' → logprob: -19.75
    4. 'spl' → logprob: -20.625
    5. 'replace' → logprob: -23.25
    6. '.split' → logprob: -23.625
    7. '```' → logprob: -24.5
    8. 'decode' → logprob: -24.625
    9. 'lines' → logprob: -24.75
    10. 's' → logprob: -24.875

Token 141: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005819887388497591
    2. '('' → logprob: -5.755819797515869
    3. '(' → logprob: -7.130819797515869
    4. '('\' → logprob: -7.505819797515869
    5. '()[' → logprob: -7.505819797515869
    6. 'lines' → logprob: -7.630819797515869
    7. '()]' → logprob: -9.005820274353027
    8. '()\' → logprob: -9.880820274353027
    9. '()
' → logprob: -11.255820274353027
    10. '()>' → logprob: -11.255820274353027

Token 142: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. ' n' → logprob: -14.750000953674316
    3. '\n' → logprob: -15.500000953674316
    4. 'newline' → logprob: -18.25
    5. 'lines' → logprob: -18.625
    6. '
' → logprob: -19.125
    7. '

' → logprob: -20.375
    8. 'b' → logprob: -20.5
    9. '	n' → logprob: -21.125
    10. '```' → logprob: -21.25

Token 143: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004131830297410488
    2. '')' → logprob: -5.50413179397583
    3. '[' → logprob: -10.754132270812988
    4. ']' → logprob: -11.254132270812988
    5. ')
' → logprob: -12.004132270812988
    6. ' )' → logprob: -12.379132270812988
    7. '")' → logprob: -12.504132270812988
    8. '`)' → logprob: -12.754132270812988
    9. '#' → logprob: -14.504132270812988
    10. '）' → logprob: -15.379132270812988

Token 144: 'for' (ID: 1938)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38719645142555237
    2. 'T' → logprob: -1.13719642162323
    3. 'num' → logprob: -8.51219654083252
    4. 'idx' → logprob: -10.13719654083252
    5. 'n' → logprob: -10.76219654083252
    6. ' t' → logprob: -11.13719654083252
    7. ' T' → logprob: -11.26219654083252
    8. 'Q' → logprob: -11.26219654083252
    9. 'test' → logprob: -12.51219654083252
    10. 'N' → logprob: -12.51219654083252

Token 145: ' line' (ID: 2543)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.7796669602394104
    2. ' i' → logprob: -1.2796669006347656
    3. ' _' → logprob: -1.5296669006347656
    4. ' T' → logprob: -4.029666900634766
    5. ' line' → logprob: -4.404666900634766
    6. ' case' → logprob: -5.154666900634766
    7. '_' → logprob: -5.779666900634766
    8. 'case' → logprob: -5.779666900634766
    9. ' test' → logprob: -6.779666900634766
    10. 'i' → logprob: -6.779666900634766

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0034258009400218725
    2. 'in' → logprob: -5.753425598144531
    3. ':' → logprob: -8.503425598144531
    4. ',' → logprob: -11.003425598144531
    5. ' =' → logprob: -11.878425598144531
    6. ':
' → logprob: -12.503425598144531
    7. '_in' → logprob: -12.628425598144531
    8. 's' → logprob: -12.878425598144531
    9. '=' → logprob: -12.878425598144531
    10. '	in' → logprob: -13.253425598144531

Token 147: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5767499804496765
    2. ' input' → logprob: -0.8267499804496765
    3. ' lines' → logprob: -7.951749801635742
    4. 'lines' → logprob: -8.701749801635742
    5. 'line' → logprob: -9.326749801635742
    6. 'range' → logprob: -9.826749801635742
    7. ' line' → logprob: -10.201749801635742
    8. ' sys' → logprob: -10.326749801635742
    9. ' range' → logprob: -10.576749801635742
    10. 'sys' → logprob: -11.076749801635742

Token 148: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.10903969407081604
    2. '_' → logprob: -2.859039783477783
    3. ':' → logprob: -3.609039783477783
    4. '_LINES' → logprob: -4.859039783477783
    5. '.' → logprob: -6.359039783477783
    6. '_:' → logprob: -6.609039783477783
    7. '[' → logprob: -6.609039783477783
    8. '.split' → logprob: -6.734039783477783
    9. '```' → logprob: -6.859039783477783
    10. ' in' → logprob: -7.859039783477783

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003086486831307411
    2. ':
' → logprob: -8.125308990478516
    3. '):' → logprob: -12.625308990478516
    4. ',' → logprob: -13.375308990478516
    5. '.split' → logprob: -13.500308990478516
    6. '():' → logprob: -13.500308990478516
    7. ':

' → logprob: -14.250308990478516
    8. '<|end|>' → logprob: -14.375308990478516
    9. '   ' → logprob: -14.625308990478516
    10. '=' → logprob: -14.750308990478516

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002887610113248229
    2. ',' → logprob: -6.877887725830078
    3. 'tokens' → logprob: -7.002887725830078
    4. ' if' → logprob: -8.002887725830078
    5. ' tokens' → logprob: -8.627887725830078
    6. ':' → logprob: -8.752887725830078
    7. ' parts' → logprob: -9.252887725830078
    8. '```' → logprob: -10.002887725830078
    9. '<|end|>' → logprob: -11.002887725830078
    10. ' ,' → logprob: -11.252887725830078

Token 151: ' if' (ID: 538)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.781146228313446
    2. ' parts' → logprob: -1.1561462879180908
    3. ' if' → logprob: -3.031146287918091
    4. '   ' → logprob: -3.281146287918091
    5. ' radi' → logprob: -3.406146287918091
    6. ' r' → logprob: -3.406146287918091
    7. 'W' → logprob: -4.031146049499512
    8. ' n' → logprob: -4.156146049499512
    9. ' values' → logprob: -4.281146049499512
    10. 'r' → logprob: -4.656146049499512

Token 152: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25255489349365234
    2. ' line' → logprob: -1.5025548934936523
    3. 'line' → logprob: -8.127554893493652
    4. 'not' → logprob: -8.252554893493652
    5. ' len' → logprob: -10.127554893493652
    6. ' ' → logprob: -10.502554893493652
    7. '(line' → logprob: -14.377554893493652
    8. '	line' → logprob: -14.877554893493652
    9. ' ' → logprob: -14.877554893493652
    10. '=line' → logprob: -15.502554893493652

Token 153: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20141343772411346
    2. 'line' → logprob: -1.7014133930206299
    3. '	line' → logprob: -16.201414108276367
    4. '(line' → logprob: -17.326414108276367
    5. '=line' → logprob: -18.201414108276367
    6. ' ' → logprob: -18.701414108276367
    7. '[line' → logprob: -19.701414108276367
    8. '#line' → logprob: -19.701414108276367
    9. '_line' → logprob: -19.951414108276367
    10. ' ' → logprob: -20.076414108276367

Token 154: '.strip' (ID: 40613)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004885996226221323
    2. '.strip' → logprob: -5.504886150360107
    3. ':
' → logprob: -7.754886150360107
    4. '.' → logprob: -8.75488567352295
    5. ' or' → logprob: -8.87988567352295
    6. '.startswith' → logprob: -10.37988567352295
    7. '.split' → logprob: -11.62988567352295
    8. ':return' → logprob: -11.62988567352295
    9. '   ' → logprob: -12.37988567352295
    10. ')' → logprob: -12.37988567352295

Token 155: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011159831658005714
    2. '():
' → logprob: -4.511159896850586
    3. '()' → logprob: -9.261159896850586
    4. ':' → logprob: -11.761159896850586
    5. '()==' → logprob: -12.011159896850586
    6. '():
' → logprob: -13.386159896850586
    7. '():

' → logprob: -13.761159896850586
    8. ' ():' → logprob: -15.136159896850586
    9. '().' → logprob: -16.886159896850586
    10. ':
' → logprob: -17.011159896850586

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007909284322522581
    2. '   ' → logprob: -7.375791072845459
    3. ' continue' → logprob: -9.7507905960083
    4. ',' → logprob: -10.2507905960083
    5. 'continue' → logprob: -11.0007905960083
    6. ':' → logprob: -11.2507905960083
    7. ' break' → logprob: -11.5007905960083
    8. '<|end|>' → logprob: -12.1257905960083
    9. '	   ' → logprob: -12.3757905960083
    10. '	' → logprob: -13.1257905960083

Token 157: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5062189102172852
    2. '       ' → logprob: -1.8812189102172852
    3. '   ' → logprob: -2.131218910217285
    4. ' continue' → logprob: -2.256218910217285
    5. 'break' → logprob: -4.381218910217285
    6. 'continue' (adapté à ' continue') → logprob: -4.756218910217285
    7. '	break' → logprob: -8.631218910217285
    8. '	continue' → logprob: -10.006218910217285
    9. ' ' → logprob: -10.881218910217285
    10. '   ' → logprob: -11.756218910217285

Token 158: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017944201827049255
    2. ' parts' → logprob: -7.001794338226318
    3. 'tokens' → logprob: -7.876794338226318
    4. ' tokens' → logprob: -8.751794815063477
    5. '<|end|>' → logprob: -9.626794815063477
    6. '    
' → logprob: -9.626794815063477
    7. ' n' → logprob: -10.001794815063477
    8. ',' → logprob: -10.376794815063477
    9. 'n' → logprob: -10.501794815063477
    10. ' line' → logprob: -11.251794815063477

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018962396308779716
    2. ' parts' → logprob: -4.393962383270264
    3. ' tokens' → logprob: -6.143962383270264
    4. 'tokens' → logprob: -6.393962383270264
    5. ' W' → logprob: -7.518962383270264
    6. ' radi' → logprob: -7.893962383270264
    7. ' n' → logprob: -8.143962860107422
    8. '    
' → logprob: -8.518962860107422
    9. ' r' → logprob: -8.768962860107422
    10. 'n' → logprob: -9.143962860107422

Token 160: ' tokens' (ID: 20290)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.0164257287979126
    2. ' W' → logprob: -1.1414257287979126
    3. ' parts' → logprob: -1.2664257287979126
    4. ' tokens' → logprob: -4.766425609588623
    5. 'tokens' (adapté à ' tokens') → logprob: -5.016425609588623
    6. 'parts' → logprob: -5.141425609588623
    7. '   ' → logprob: -5.641425609588623
    8. ' values' → logprob: -5.641425609588623
    9. 'n' → logprob: -6.266425609588623
    10. ' n' → logprob: -6.391425609588623

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283007264137268
    2. '=' → logprob: -2.23783016204834
    3. '=line' → logprob: -12.86283016204834
    4. '   ' → logprob: -12.98783016204834
    5. '[' → logprob: -14.61283016204834
    6. ' =[' → logprob: -14.73783016204834
    7. ' =
' → logprob: -15.11283016204834
    8. 'tokens' → logprob: -15.11283016204834
    9. '    ' → logprob: -15.48783016204834
    10. '<|end|>' → logprob: -15.48783016204834

Token 162: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.029980380088090897
    2. ' line' → logprob: -3.529980421066284
    3. 'list' → logprob: -8.404980659484863
    4. ' list' → logprob: -12.529980659484863
    5. '[line' → logprob: -13.029980659484863
    6. '=line' → logprob: -15.779980659484863
    7. '(line' → logprob: -16.029979705810547
    8. '	line' → logprob: -16.904979705810547
    9. '[' → logprob: -17.529979705810547
    10. '#line' → logprob: -17.904979705810547

Token 163: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03441883996129036
    2. '.strip' → logprob: -3.409418821334839
    3. '().' → logprob: -8.534419059753418
    4. '.' → logprob: -8.909419059753418
    5. '[' → logprob: -8.909419059753418
    6. ' .' → logprob: -9.784419059753418
    7. '   ' → logprob: -9.909419059753418
    8. ' =' → logprob: -10.159419059753418
    9. '=' → logprob: -10.159419059753418
    10. 'split' → logprob: -10.284419059753418

Token 164: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.856408536899835e-05
    2. '()' → logprob: -10.500028610229492
    3. '('' → logprob: -14.875028610229492
    4. ' ().' → logprob: -15.000028610229492
    5. '().'' → logprob: -16.000028610229492
    6. '(' → logprob: -16.375028610229492
    7. '.split' → logprob: -16.875028610229492
    8. 'split' → logprob: -18.000028610229492
    9. '()['' → logprob: -18.250028610229492
    10. '()
' → logprob: -19.125028610229492

Token 165: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.875
    3. '(split' → logprob: -17.25
    4. '.split' → logprob: -19.875
    5. 'strip' → logprob: -20.375
    6. '```' → logprob: -20.625
    7. 'plit' → logprob: -20.75
    8. 'spl' → logprob: -21.125
    9. 'rstrip' → logprob: -21.5
    10. 'tokens' → logprob: -22.125

Token 166: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3192415237426758
    2. '(' → logprob: -1.3192415237426758
    3. '('' → logprob: -5.319241523742676
    4. '()]' → logprob: -8.319241523742676
    5. '()[' → logprob: -8.319241523742676
    6. '[' → logprob: -8.569241523742676
    7. '())' → logprob: -9.569241523742676
    8. '("("' → logprob: -10.319241523742676
    9. '<|end|>' → logprob: -10.694241523742676
    10. '(
' → logprob: -10.694241523742676

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49833863973617554
    2. 'W' → logprob: -1.7483386993408203
    3. 'n' → logprob: -1.9983386993408203
    4. ' W' → logprob: -3.1233386993408203
    5. 'if' → logprob: -4.24833869934082
    6. ' n' → logprob: -4.87333869934082
    7. ' if' → logprob: -4.99833869934082
    8. 'N' → logprob: -5.37333869934082
    9. 'r' → logprob: -6.99833869934082
    10. 'm' → logprob: -7.49833869934082

Token 168: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.07914082705974579
    2. ' W' → logprob: -2.7041409015655518
    3. 'if' → logprob: -5.829140663146973
    4. ' if' → logprob: -5.954140663146973
    5. 'n' → logprob: -6.079140663146973
    6. ' n' → logprob: -7.829140663146973
    7. 'N' → logprob: -8.079140663146973
    8. '   ' → logprob: -8.454140663146973
    9. 'L' → logprob: -9.454140663146973
    10. 'w' → logprob: -9.454140663146973

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07661449164152145
    2. ',' → logprob: -3.2016143798828125
    3. '=' → logprob: -3.4516143798828125
    4. ')' → logprob: -7.7016143798828125
    5. ' ,' → logprob: -7.7016143798828125
    6. '<|end|>' → logprob: -8.326614379882812
    7. ' ' → logprob: -10.201614379882812
    8. '   ' → logprob: -10.451614379882812
    9. 'tokens' → logprob: -10.951614379882812
    10. '<|end|>' → logprob: -11.076614379882812

Token 170: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.03857738897204399
    2. 'int' → logprob: -3.2885773181915283
    3. ' float' → logprob: -7.538577556610107
    4. ' int' → logprob: -12.66357707977295
    5. '	float' → logprob: -16.413578033447266
    6. ' ' → logprob: -16.538578033447266
    7. '   ' → logprob: -16.538578033447266
    8. '  ' → logprob: -17.163578033447266
    9. '(float' → logprob: -17.413578033447266
    10. '=float' → logprob: -17.913578033447266

Token 171: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -4.56102097814437e-05
    2. 'tokens' → logprob: -10.000045776367188
    3. '(' → logprob: -15.750045776367188
    4. ' tokens' → logprob: -18.125045776367188
    5. '(token' → logprob: -18.500045776367188
    6. 'okens' → logprob: -20.375045776367188
    7. ' (' → logprob: -20.625045776367188
    8. '(tok' → logprob: -21.000045776367188
    9. '.tokens' → logprob: -21.625045776367188
    10. '_tokens' → logprob: -22.375045776367188

Token 172: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0802738870552275e-05
    2. '0' → logprob: -11.50001049041748
    3. ' [' → logprob: -14.50001049041748
    4. ')' → logprob: -16.125011444091797
    5. '   ' → logprob: -17.125011444091797
    6. '1' → logprob: -17.750011444091797
    7. '(' → logprob: -18.125011444091797
    8. '[
' → logprob: -18.375011444091797
    9. '[-' → logprob: -18.750011444091797
    10. '```' → logprob: -19.000011444091797

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '[' → logprob: -16.750001907348633
    4. '1' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ')' → logprob: -19.687501907348633
    7. '00' → logprob: -19.750001907348633
    8. '  ' → logprob: -19.937501907348633
    9. '```' → logprob: -20.000001907348633
    10. '
' → logprob: -20.062501907348633

Token 174: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027305472642183304
    2. '])' → logprob: -3.9023053646087646
    3. ')
' → logprob: -5.027305603027344
    4. ']' → logprob: -9.402305603027344
    5. '])
' → logprob: -9.527305603027344
    6. ')]' → logprob: -11.902305603027344
    7. ' )' → logprob: -12.152305603027344
    8. ')])' → logprob: -12.402305603027344
    9. '<|end|>' → logprob: -12.652305603027344
    10. '   ' → logprob: -13.527305603027344

Token 175: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09296416491270065
    2. '   ' → logprob: -3.3429641723632812
    3. 'n' → logprob: -3.4679641723632812
    4. 'k' → logprob: -4.467964172363281
    5. 'R' → logprob: -5.092964172363281
    6. 'if' → logprob: -6.467964172363281
    7. 'm' → logprob: -7.092964172363281
    8. 'K' → logprob: -7.342964172363281
    9. 'rest' → logprob: -7.467964172363281
    10. 'radi' → logprob: -7.967964172363281

Token 176: ' radi' (ID: 14041)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4657008647918701
    2. 'r' → logprob: -1.4657008647918701
    3. 'if' → logprob: -2.21570086479187
    4. 'N' → logprob: -3.84070086479187
    5. 'k' → logprob: -4.840701103210449
    6. 'R' → logprob: -6.840701103210449
    7. 'm' → logprob: -7.590701103210449
    8. 'K' → logprob: -8.09070110321045
    9. 'radi' (adapté à ' radi') → logprob: -8.09070110321045
    10. ' if' → logprob: -8.71570110321045

Token 177: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.484132169745862e-05
    2. 'us' → logprob: -9.750094413757324
    3. '=' → logprob: -10.500094413757324
    4. ' =' → logprob: -12.625094413757324
    5. 'uses' → logprob: -13.125094413757324
    6. 'is' → logprob: -13.375094413757324
    7. 'ii' → logprob: -14.625094413757324
    8. '   ' → logprob: -15.000094413757324
    9. 'tokens' → logprob: -15.125094413757324
    10. '[i' → logprob: -15.250094413757324

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.076414108276367
    4. '=[]' → logprob: -16.701414108276367
    5. '＝' → logprob: -17.076414108276367
    6. ' =
' → logprob: -17.201414108276367
    7. ',' → logprob: -17.326414108276367
    8. ')' → logprob: -17.326414108276367
    9. ' =[' → logprob: -17.326414108276367
    10. '<|end|>' → logprob: -17.451414108276367

Token 179: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01816246658563614
    2. ' list' → logprob: -4.018162250518799
    3. '[list' → logprob: -11.393162727355957
    4. '[' → logprob: -13.643162727355957
    5. ' [' → logprob: -15.643162727355957
    6. '	list' → logprob: -18.39316177368164
    7. 'List' → logprob: -18.64316177368164
    8. '=list' → logprob: -18.76816177368164
    9. '(list' → logprob: -19.39316177368164
    10. '   ' → logprob: -19.51816177368164

Token 180: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.960946772480384e-05
    2. '(' → logprob: -9.250099182128906
    3. '(int' → logprob: -13.250099182128906
    4. '(tokens' → logprob: -14.125099182128906
    5. 'map' → logprob: -14.250099182128906
    6. '()' → logprob: -16.875099182128906
    7. '(range' → logprob: -17.250099182128906
    8. '	map' → logprob: -17.250099182128906
    9. '(m' → logprob: -17.625099182128906
    10. ' map' → logprob: -17.625099182128906

Token 181: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001972765428945422
    2. 'int' → logprob: -6.251972675323486
    3. '(' → logprob: -10.626973152160645
    4. '<int' → logprob: -12.376973152160645
    5. '(float' → logprob: -12.501973152160645
    6. ',int' → logprob: -12.626973152160645
    7. '[int' → logprob: -13.126973152160645
    8. '=int' → logprob: -13.251973152160645
    9. '(lambda' → logprob: -13.501973152160645
    10. '	int' → logprob: -14.126973152160645

Token 182: ',' (ID: 11)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.22244961559772491
    2. ',' → logprob: -1.9724496603012085
    3. 'tokens' → logprob: -2.847449541091919
    4. ' tokens' → logprob: -6.222449779510498
    5. ' ,' → logprob: -8.34744930267334
    6. '.tokens' → logprob: -10.59744930267334
    7. ' (' → logprob: -10.72244930267334
    8. ',t' → logprob: -10.97244930267334
    9. '(' → logprob: -10.97244930267334
    10. '_tokens' → logprob: -11.22244930267334

Token 183: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.014164221473038197
    2. ' tokens' → logprob: -4.264164447784424
    3. '(tokens' → logprob: -14.389163970947266
    4. '.tokens' → logprob: -16.889163970947266
    5. '   ' → logprob: -17.889163970947266
    6. ' ' → logprob: -18.514163970947266
    7. 'token' → logprob: -18.889163970947266
    8. '           ' → logprob: -18.889163970947266
    9. '_tokens' → logprob: -18.889163970947266
    10. 't' → logprob: -19.639163970947266

Token 184: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6557215452194214
    2. 'tokens' → logprob: -0.9057215452194214
    3. '(tokens' → logprob: -3.030721664428711
    4. '(' → logprob: -3.655721664428711
    5. ' tokens' → logprob: -7.530721664428711
    6. '_tokens' → logprob: -7.780721664428711
    7. 'okens' → logprob: -7.780721664428711
    8. '][' → logprob: -8.030721664428711
    9. '.tokens' → logprob: -8.030721664428711
    10. ')[' → logprob: -8.405721664428711

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028449371457099915
    2. '2' → logprob: -5.87784481048584
    3. ' ' → logprob: -10.37784481048584
    4. '   ' → logprob: -12.62784481048584
    5. '3' → logprob: -12.87784481048584
    6. '(' → logprob: -14.50284481048584
    7. '```' → logprob: -14.62784481048584
    8. '])' → logprob: -14.87784481048584
    9. ')' → logprob: -15.06534481048584
    10. '))' → logprob: -15.62784481048584

Token 186: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10023502260446548
    2. ':]' → logprob: -2.3502349853515625
    3. ']))' → logprob: -10.975234985351562
    4. ':],' → logprob: -11.975234985351562
    5. ':].' → logprob: -12.600234985351562
    6. ']:' → logprob: -14.475234985351562
    7. ' :' → logprob: -14.975234985351562
    8. '():' → logprob: -15.100234985351562
    9. '1' → logprob: -16.225234985351562
    10. '']))' → logprob: -16.725234985351562

Token 187: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.00015347852604463696
    2. ']' → logprob: -9.000153541564941
    3. ']))
' → logprob: -11.125153541564941
    4. '))' → logprob: -11.750153541564941
    5. '']))' → logprob: -13.000153541564941
    6. ')))' → logprob: -13.125153541564941
    7. '"]))' → logprob: -14.000153541564941
    8. ']))

' → logprob: -14.750153541564941
    9. '}))' → logprob: -14.875153541564941
    10. ' ]' → logprob: -15.000153541564941

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07625988870859146
    2. 'if' → logprob: -3.3262598514556885
    3. ' if' → logprob: -3.7012598514556885
    4. '
' → logprob: -4.826260089874268
    5. '<|end|>' → logprob: -5.951260089874268
    6. 'print' → logprob: -6.951260089874268
    7. '    
' → logprob: -7.826260089874268
    8. '```' → logprob: -8.07625961303711
    9. 'while' → logprob: -9.45125961303711
    10. ' 
' → logprob: -9.70125961303711

Token 189: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6375868320465088
    2. ' if' → logprob: -1.3875868320465088
    3. 'res' → logprob: -2.762586832046509
    4. 'result' → logprob: -3.262586832046509
    5. 'low' → logprob: -3.637586832046509
    6. 'while' → logprob: -3.762586832046509
    7. 'r' → logprob: -4.01258659362793
    8. 'left' → logprob: -4.26258659362793
    9. ' low' → logprob: -4.63758659362793
    10. ' while' → logprob: -4.88758659362793

Token 190: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.055109743028879166
    2. 'can' → logprob: -2.930109739303589
    3. ' not' → logprob: -8.430109977722168
    4. ' len' → logprob: -12.805109977722168
    5. '(can' → logprob: -13.055109977722168
    6. '	can' → logprob: -13.055109977722168
    7. 'not' → logprob: -14.180109977722168
    8. '_can' → logprob: -14.555109977722168
    9. 'len' → logprob: -14.680109977722168
    10. ' ' → logprob: -15.430109977722168

Token 191: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -11.750009536743164
    3. '_put' → logprob: -14.375009536743164
    4. '_places' → logprob: -15.000009536743164
    5. ' _' → logprob: -15.625009536743164
    6. 'place' → logprob: -16.125009536743164
    7. '_raise' → logprob: -17.375009536743164
    8. 'Place' → logprob: -17.375009536743164
    9. '_continue' → logprob: -17.500009536743164
    10. '_PLACE' → logprob: -17.875009536743164

Token 192: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.011107014492154121
    2. '(' → logprob: -4.511106967926025
    3. ' (' → logprob: -9.761107444763184
    4. '(
' → logprob: -14.386107444763184
    5. '(w' → logprob: -15.761107444763184
    6. '(World' → logprob: -15.761107444763184
    7. '((' → logprob: -16.261106491088867
    8. ')' → logprob: -16.386106491088867
    9. '(

' → logprob: -16.386106491088867
    10. '(Window' → logprob: -16.636106491088867

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002354832977289334
    2. ',r' → logprob: -8.375235557556152
    3. ' ,' → logprob: -12.625235557556152
    4. ',
' → logprob: -14.125235557556152
    5. ',R' → logprob: -14.750235557556152
    6. '   ' → logprob: -16.000234603881836
    7. '(r' → logprob: -16.375234603881836
    8. '[' → logprob: -16.875234603881836
    9. '(' → logprob: -17.250234603881836
    10. ',

' → logprob: -17.375234603881836

Token 194: ' radi' (ID: 14041)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.0100624169572257e-05
    2. ' radi' → logprob: -11.000020027160645
    3. 'radi' → logprob: -13.500020027160645
    4. ')' → logprob: -14.125020027160645
    5. '   ' → logprob: -14.625020027160645
    6. ' r' → logprob: -15.000020027160645
    7. ' ' → logprob: -15.875020027160645
    8. 'R' → logprob: -16.50002098083496
    9. '[r' → logprob: -16.50002098083496
    10. '	r' → logprob: -16.75002098083496

Token 195: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.5107177862082608e-05
    2. 'a' → logprob: -11.750024795532227
    3. '   ' → logprob: -12.125024795532227
    4. 'us' → logprob: -13.250024795532227
    5. 'ii' → logprob: -13.625024795532227
    6. '[' → logprob: -13.750024795532227
    7. '[i' → logprob: -14.000024795532227
    8. 'ri' → logprob: -14.250024795532227
    9. 'adii' → logprob: -14.250024795532227
    10. 'di' → logprob: -14.375024795532227

Token 196: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1269349306821823
    2. '):
' → logprob: -2.1269350051879883
    3. ':' → logprob: -12.251935005187988
    4. '):
' → logprob: -13.376935005187988
    5. ')' → logprob: -15.626935005187988
    6. ':
' → logprob: -16.376934051513672
    7. '():
' → logprob: -16.376934051513672
    8. '   ' → logprob: -17.251934051513672
    9. '):

' → logprob: -17.251934051513672
    10. ' ):' → logprob: -17.376934051513672

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000410415610531345
    2. 'print' → logprob: -8.625410079956055
    3. ' print' → logprob: -8.750410079956055
    4. '
' → logprob: -10.000410079956055
    5. '        
' → logprob: -11.875410079956055
    6. '   ' → logprob: -12.500410079956055
    7. '	print' → logprob: -12.500410079956055
    8. '```' → logprob: -13.125410079956055
    9. '	' → logprob: -13.500410079956055
    10. '<|end|>' → logprob: -13.500410079956055

Token 198: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.9910483956336975
    2. '   ' → logprob: -1.2410483360290527
    3. ' print' → logprob: -1.2410483360290527
    4. '       ' → logprob: -2.9910483360290527
    5. '	print' → logprob: -8.116048812866211
    6. '
' → logprob: -10.116048812866211
    7. '```' → logprob: -10.491048812866211
    8. '           ' → logprob: -11.866048812866211
    9. '    
' → logprob: -11.866048812866211
    10. ' ' → logprob: -11.991048812866211

Token 199: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00715174525976181
    2. '('' → logprob: -5.3821516036987305
    3. '(' → logprob: -6.0071516036987305
    4. '"' → logprob: -10.50715160369873
    5. '(True' → logprob: -10.50715160369873
    6. '(F' → logprob: -13.25715160369873
    7. ' ("' → logprob: -13.75715160369873
    8. 'YES' → logprob: -14.00715160369873
    9. '(B' → logprob: -14.00715160369873
    10. 'Yes' → logprob: -14.00715160369873

Token 200: 'OK' (ID: 5175)
  Prédit: 'OK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OK' → logprob: -0.8265496492385864
    2. 'Yes' → logprob: -1.0765496492385864
    3. 'YES' → logprob: -1.7015496492385864
    4. 'yes' → logprob: -4.326549530029297
    5. 'S' → logprob: -4.451549530029297
    6. 'ok' → logprob: -5.451549530029297
    7. 'Y' → logprob: -5.951549530029297
    8. 'Ok' → logprob: -6.576549530029297
    9. 'Fits' → logprob: -6.826549530029297
    10. 'Can' → logprob: -6.951549530029297

Token 201: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0013830940006300807
    2. '")
' → logprob: -6.751383304595947
    3. '!")' → logprob: -8.876382827758789
    4. ' ")' → logprob: -10.001382827758789
    5. '"' → logprob: -11.751382827758789
    6. ')' → logprob: -12.251382827758789
    7. 'AY' → logprob: -12.251382827758789
    8. '")

' → logprob: -13.501382827758789
    9. '");' → logprob: -13.626382827758789
    10. '!' → logprob: -13.626382827758789

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21167539060115814
    2. 'else' → logprob: -1.7116754055023193
    3. ' else' → logprob: -4.58667516708374
    4. '	else' → logprob: -10.711675643920898
    5. '<|end|>' → logprob: -15.086675643920898
    6. '```' → logprob: -16.2116756439209
    7. '  ' → logprob: -17.0866756439209
    8. 'elif' → logprob: -17.2116756439209
    9. '_else' → logprob: -17.3366756439209
    10. '       ' → logprob: -17.4616756439209

Token 203: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0004587903094943613
    2. ' else' → logprob: -8.000458717346191
    3. '   ' → logprob: -9.000458717346191
    4. '	else' → logprob: -18.000459671020508
    5. 'elif' → logprob: -20.125459671020508
    6. '```' → logprob: -20.250459671020508
    7. '  ' → logprob: -20.625459671020508
    8. '       ' → logprob: -20.875459671020508
    9. ' ' → logprob: -20.875459671020508
    10. 'Else' → logprob: -21.250459671020508

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013585202395915985
    2. '       ' → logprob: -5.013585090637207
    3. ':
' → logprob: -5.138585090637207
    4. '   ' → logprob: -7.013585090637207
    5. '<|end|>' → logprob: -11.263585090637207
    6. '():' → logprob: -11.388585090637207
    7. ',' → logprob: -11.638585090637207
    8. '):' → logprob: -12.013585090637207
    9. ' :' → logprob: -12.138585090637207
    10. '{' → logprob: -12.263585090637207

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12540686130523682
    2. 'print' → logprob: -2.6254067420959473
    3. ' print' → logprob: -3.1254067420959473
    4. '   ' → logprob: -6.500406742095947
    5. '	print' → logprob: -10.750407218933105
    6. '           ' → logprob: -12.375407218933105
    7. '	   ' → logprob: -13.625407218933105
    8. ' ' → logprob: -14.625407218933105
    9. '```' → logprob: -14.750407218933105
    10. '    ' → logprob: -14.875407218933105

Token 206: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007245833403430879
    2. ' print' → logprob: -7.250724792480469
    3. '   ' → logprob: -11.250724792480469
    4. '	print' → logprob: -14.750724792480469
    5. '"' → logprob: -15.250724792480469
    6. '       ' → logprob: -15.625724792480469
    7. '```' → logprob: -16.00072479248047
    8. 'break' → logprob: -16.37572479248047
    9. 'raise' → logprob: -16.37572479248047
    10. '  ' → logprob: -16.62572479248047

Token 207: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007866628468036652
    2. '"' → logprob: -4.882866859436035
    3. '(' → logprob: -8.382866859436035
    4. '()' → logprob: -11.632866859436035
    5. ' ("' → logprob: -11.757866859436035
    6. '(":' → logprob: -11.757866859436035
    7. '("")' → logprob: -12.757866859436035
    8. '('' → logprob: -14.132866859436035
    9. ' ' → logprob: -14.257866859436035
    10. '("_' → logprob: -14.507866859436035

Token 208: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.18710413575172424
    2. 'NG' → logprob: -1.9371041059494019
    3. 'FAIL' → logprob: -4.812104225158691
    4. '"' → logprob: -5.562104225158691
    5. 'NO' → logprob: -6.312104225158691
    6. 'L' → logprob: -6.437104225158691
    7. '-' → logprob: -6.562104225158691
    8. 'IM' → logprob: -6.687104225158691
    9. '"L' → logprob: -7.062104225158691
    10. 'IMP' → logprob: -7.312104225158691

Token 209: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.1527552604675293
    2. 'T' → logprob: -3.1527552604675293
    3. 'N' → logprob: -3.6527552604675293
    4. 'L' → logprob: -3.6527552604675293
    5. 'M' → logprob: -4.027755260467529
    6. 'P' → logprob: -4.652755260467529
    7. ')' → logprob: -5.402755260467529
    8. 'S' → logprob: -5.902755260467529
    9. 'C' → logprob: -6.027755260467529
    10. 'R' → logprob: -6.527755260467529


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 207
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 106
Tokens correctement prédits (top 10): 177
Précision stricte (1ère position): 48.31%
Précision adaptée (1ère position): 51.21%
Précision (top 10): 85.51%
================================================================================
