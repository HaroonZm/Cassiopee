================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def main():
    input = sys.stdin.readline

    # Lecture des paramètres
    n, u, v, m = map(int, input().split())
    # u,v sont les conditions de victoires : nombre minimum de lignes alignées

    # Lecture des matrices de nombres écrits par Usagi et Neko
    # Matrice Usagi, taille n x n
    usagi_nums = [list(map(int, input().split())) for _ in range(n)]
    # Matrice Neko, taille n x n
    neko_nums = [list(map(int, input().split())) for _ in range(n)]

    # Lecture des m cartes tirées
    cards = [int(input()) for _ in range(m)]

    # Pré-traitement : pour chaque joueur, créer une table pour retrouver la position dans la matrice
    # des nombres donnés.
    # Clé = nombre, valeur = (ligne, colonne)
    pos_usagi = {}
    pos_neko = {}

    for i in range(n):
        for j in range(n):
            pos_usagi[usagi_nums[i][j]] = (i, j)
            pos_neko[neko_nums[i][j]] = (i, j)

    # On va conserver 2 matrices booléennes indiquant si le nombre correspondant est "marqué"
    marked_usagi = [[False]*n for _ in range(n)]
    marked_neko = [[False]*n for _ in range(n)]

    # Fonction pour calculer combien de lignes droites d'au moins n éléments sont marquées.
    # Ici, on veut compter combien de lignes contenant exactement n "marqués" sont alignées en ligne,
    # colonne ou diago.
    # Mais en fait, on cherche le nombre de ligne droite avec longueur n seulement.
    # Ici, la victoire est définie par le nombre de lines (chaque ligne est une ligne = n éléments)
    #  - Remarque : dans ce problème la ligne droite d'une n-uplet sur la même ligne/colonne/diagonale, 
    #    si le joueur a marqué T nombres alignés, ça vaut 1 si T==n, sinon 0.

    # Donc en réalité, forcer la forme du problème: on compte combien de lignes, colonnes, ou diagonales
    # entières sont marquées (composées de n éléments) = cela donne un entier count.
    # On compte combien de lignes de cette sorte sont présentes pour chaque joueur.

    # Pour un joueur, retourner le nombre de lignes droites de longueur n entièrement marquées.

    def count_lines(marked):
        count = 0
        # Lignes
        for i in range(n):
            if all(marked[i][j] for j in range(n)):
                count += 1
        # Colonnes
        for j in range(n):
            if all(marked[i][j] for i in range(n)):
                count += 1
        # Diagonale principale
        if all(marked[i][i] for i in range(n)):
            count += 1
        # Diagonale secondaire
        if all(marked[i][n - 1 - i] for i in range(n)):
            count += 1
        return count

    # Suivi de l'état de la partie
    # À chaque tirage de carte, on marque pour Usagi et Neko si le nombre est présent
    # On teste si l'un d'eux remplit la condition de victoire (>= u ou >= v)
    # On rend le verdict dès que possible (seulement si un joueur gagne seul à ce moment)

    winner = None

    for c in cards:
        # Marquer pour Usagi
        if c in pos_usagi:
            x, y = pos_usagi[c]
            marked_usagi[x][y] = True
        # Marquer pour Neko
        if c in pos_neko:
            x, y = pos_neko[c]
            marked_neko[x][y] = True

        # Vérifier victoires seulement si pas de victoire déjà déclarée
        if winner is None:
            usagi_count = count_lines(marked_usagi)
            neko_count = count_lines(marked_neko)

            # Vérifier conditions de victoire
            usagi_win = (usagi_count >= u)
            neko_win = (neko_count >= v)

            # Cas où l'un seul a gagné => décidez le gagnant
            if usagi_win and not neko_win:
                winner = "USAGI"
            elif neko_win and not usagi_win:
                winner = "NEKO"
            # Si les deux ont gagné simultanément ou aucun alors on continue

    # Si aucun vainqueur unique apparu durant les tirages => DRAW
    if winner is None:
        winner = "DRAW"

    print(winner)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0016044863732531667
    2. 'ursive' → logprob: -6.7516045570373535
    3. 'ision' → logprob: -9.501604080200195
    4. 'urs' → logprob: -9.626604080200195
    5. 'set' → logprob: -9.751604080200195
    6. 'alc' → logprob: -10.376604080200195
    7. 'ursor' → logprob: -10.376604080200195
    8. '_limit' → logprob: -10.876604080200195
    9. 'ursively' → logprob: -11.001604080200195
    10. 'sys' → logprob: -11.126604080200195

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.5727563500404358
    2. 'limit' → logprob: -1.072756290435791
    3. '_depth' → logprob: -2.447756290435791
    4. 'depth' → logprob: -5.947756290435791
    5. '_' → logprob: -6.072756290435791
    6. 'error' → logprob: -6.947756290435791
    7. '_error' → logprob: -7.572756290435791
    8. '_limits' → logprob: -8.82275676727295
    9. '('_' → logprob: -8.94775676727295
    10. '_stack' → logprob: -9.19775676727295

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16029003262519836
    2. '100' → logprob: -1.910290002822876
    3. '300' → logprob: -10.910289764404297
    4. ' ' → logprob: -11.035289764404297
    5. '500' → logprob: -11.285289764404297
    6. '150' → logprob: -12.160289764404297
    7. '999' → logprob: -12.660289764404297
    8. '1' → logprob: -12.785289764404297
    9. '200' → logprob: -12.785289764404297
    10. '   ' → logprob: -13.285289764404297

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08597590029239655
    2. '00' → logprob: -2.7109758853912354
    3. '000' → logprob: -4.3359761238098145
    4. '4' → logprob: -5.9609761238098145
    5. '6' → logprob: -9.335975646972656
    6. '2' → logprob: -9.835975646972656
    7. '3' → logprob: -9.835975646972656
    8. ')' → logprob: -10.710975646972656
    9. '5' → logprob: -11.710975646972656
    10. '```' → logprob: -11.710975646972656

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0047303494065999985
    2. '9' → logprob: -6.004730224609375
    3. '6' → logprob: -6.129730224609375
    4. '8' → logprob: -9.504730224609375
    5. '```' → logprob: -15.254730224609375
    6. ' ' → logprob: -15.629730224609375
    7. '(' → logprob: -16.754730224609375
    8. '``' → logprob: -17.879730224609375
    9. ')' → logprob: -18.129730224609375
    10. '5' → logprob: -18.254730224609375

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06509348005056381
    2. ' factorial' → logprob: -3.065093517303467
    3. ' dfs' → logprob: -4.440093517303467
    4. ' f' → logprob: -6.690093517303467
    5. ' factor' → logprob: -7.315093517303467
    6. ' space' → logprob: -7.690093517303467
    7. ' my' → logprob: -8.065093040466309
    8. ' fibonacci' → logprob: -8.315093040466309
    9. '_' → logprob: -8.565093040466309
    10. ' a' → logprob: -8.565093040466309

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004128622822463512
    2. '():' → logprob: -5.879128456115723
    3. '(:' → logprob: -7.004128456115723
    4. '_' → logprob: -9.379128456115723
    5. ':' → logprob: -9.629128456115723
    6. '):' → logprob: -10.004128456115723
    7. '(**' → logprob: -10.129128456115723
    8. '("("' → logprob: -10.379128456115723
    9. '(":' → logprob: -10.629128456115723
    10. ' (' → logprob: -11.129128456115723

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011926613748073578
    2. '    ' → logprob: -5.136926651000977
    3. '    
' → logprob: -5.386926651000977
    4. '\' → logprob: -8.261926651000977
    5. '\n' → logprob: -8.261926651000977
    6. 'n' → logprob: -8.761926651000977
    7. ' 
' → logprob: -8.886926651000977
    8. '<|end|>' → logprob: -9.261926651000977
    9. '
' → logprob: -9.761926651000977
    10. '(' → logprob: -9.761926651000977

Token 17: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6910613775253296
    2. 'n' → logprob: -1.0660613775253296
    3. ' n' → logprob: -2.316061496734619
    4. 'x' → logprob: -4.566061496734619
    5. '    ' → logprob: -4.941061496734619
    6. 'a' → logprob: -4.941061496734619
    7. 'i' → logprob: -5.066061496734619
    8. 'pass' → logprob: -5.066061496734619
    9. ' pass' → logprob: -5.816061496734619
    10. ' while' → logprob: -6.066061496734619

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3126084804534912
    2. '_data' → logprob: -1.5626084804534912
    3. '(' → logprob: -4.06260871887207
    4. 'data' → logprob: -4.43760871887207
    5. '_str' → logprob: -4.43760871887207
    6. '().' → logprob: -5.06260871887207
    7. '_line' → logprob: -5.56260871887207
    8. '_' → logprob: -6.31260871887207
    9. '_text' → logprob: -6.93760871887207
    10. '_string' → logprob: -7.31260871887207

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2537309229373932
    2. 'sys' → logprob: -1.8787308931350708
    3. 'input' → logprob: -3.0037310123443604
    4. ' input' → logprob: -3.8787310123443604
    5. ' lambda' → logprob: -7.878730773925781
    6. 'lambda' → logprob: -8.128730773925781
    7. ' ' → logprob: -8.378730773925781
    8. 'raw' → logprob: -10.003730773925781
    9. ' raw' → logprob: -10.378730773925781
    10. '=sys' → logprob: -11.253730773925781

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005074840970337391
    2. '.' → logprob: -5.630074977874756
    3. '.readline' → logprob: -6.880074977874756
    4. ' .' → logprob: -8.380074501037598
    5. '.stdout' → logprob: -9.005074501037598
    6. '.std' → logprob: -10.255074501037598
    7. '.argv' → logprob: -10.755074501037598
    8. '.read' → logprob: -11.255074501037598
    9. '.input' → logprob: -12.255074501037598
    10. 'stdin' → logprob: -12.505074501037598

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004686799366027117
    2. '.read' → logprob: -5.3796868324279785
    3. '.' → logprob: -9.87968635559082
    4. 'read' → logprob: -11.37968635559082
    5. '.buffer' → logprob: -13.25468635559082
    6. '.readlines' → logprob: -13.37968635559082
    7. '.Read' → logprob: -15.12968635559082
    8. ' readline' → logprob: -16.00468635559082
    9. 'buffer' → logprob: -16.25468635559082
    10. '<|end|>' → logprob: -17.12968635559082

Token 22: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002198313595727086
    2. '()
' → logprob: -6.502198219299316
    3. '()\' → logprob: -8.127198219299316
    4. '(' → logprob: -8.377198219299316
    5. '   ' → logprob: -9.752198219299316
    6. '
' → logprob: -10.377198219299316
    7. ' ()' → logprob: -10.877198219299316
    8. '().' → logprob: -11.002198219299316
    9. '())' → logprob: -11.752198219299316
    10. ')' → logprob: -11.752198219299316

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05024764686822891
    2. 'n' → logprob: -3.0502476692199707
    3. ' n' → logprob: -6.800247669219971
    4. '    
' → logprob: -8.175247192382812
    5. 'a' → logprob: -9.675247192382812
    6. 's' → logprob: -10.050247192382812
    7. 't' → logprob: -10.550247192382812
    8. 'data' → logprob: -10.675247192382812
    9. 'count' → logprob: -11.175247192382812
    10. '    ' → logprob: -11.425247192382812

Token 24: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00251145102083683
    2. 'N' → logprob: -6.377511501312256
    3. '   ' → logprob: -7.377511501312256
    4. 't' → logprob: -8.877511024475098
    5. ' n' → logprob: -11.127511024475098
    6. 's' → logprob: -11.252511024475098
    7. 'a' → logprob: -12.502511024475098
    8. 'x' → logprob: -12.752511024475098
    9. ' ' → logprob: -13.127511024475098
    10. 'h' → logprob: -13.252511024475098

Token 25: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5558554530143738
    2. ' n' → logprob: -0.9308554530143738
    3. 'N' → logprob: -4.5558552742004395
    4. '   ' → logprob: -4.6808552742004395
    5. ' N' → logprob: -4.8058552742004395
    6. 's' → logprob: -7.5558552742004395
    7. 't' → logprob: -7.5558552742004395
    8. ' data' → logprob: -7.5558552742004395
    9. ' ' → logprob: -7.9308552742004395
    10. ' t' → logprob: -8.055855751037598

Token 26: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6526294946670532
    2. ' notes' → logprob: -1.6526294946670532
    3. ' =' → logprob: -2.0276293754577637
    4. 's' → logprob: -2.0276293754577637
    5. '_notes' → logprob: -2.1526293754577637
    6. ':' → logprob: -2.5276293754577637
    7. '_' → logprob: -3.4026293754577637
    8. '()' → logprob: -3.9026293754577637
    9. ''s' → logprob: -4.277629375457764
    10. ' Notes' → logprob: -4.527629375457764

Token 27: ' paramètres' (ID: 130696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8323602676391602
    2. ' l' → logprob: -1.3323602676391602
    3. ' la' → logprob: -1.5823602676391602
    4. ' données' → logprob: -2.83236026763916
    5. 'l' → logprob: -3.58236026763916
    6. ' lignes' → logprob: -6.33236026763916
    7. ' data' → logprob: -6.83236026763916
    8. ' lines' → logprob: -7.08236026763916
    9. ' les' → logprob: -7.58236026763916
    10. ' line' → logprob: -7.70736026763916

Token 28: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9157572984695435
    2. ' ' → logprob: -1.0407572984695435
    3. ' (' → logprob: -3.040757179260254
    4. '    ' → logprob: -3.165757179260254
    5. ',' → logprob: -3.290757179260254
    6. ' ,' → logprob: -3.665757179260254
    7. ' :' → logprob: -4.040757179260254
    8. '(' → logprob: -4.165757179260254
    9. '  ' → logprob: -4.415757179260254
    10. ':' → logprob: -4.915757179260254

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049183137714862823
    2. ' ' → logprob: -4.674183368682861
    3. 'n' → logprob: -4.924183368682861
    4. ',' → logprob: -4.924183368682861
    5. '(' → logprob: -5.549183368682861
    6. '(n' → logprob: -5.674183368682861
    7. 's' → logprob: -5.799183368682861
    8. ' (' → logprob: -5.924183368682861
    9. '    ' → logprob: -6.299183368682861
    10. '  ' → logprob: -6.299183368682861

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38919970393180847
    2. 'n' (adapté à ' n') → logprob: -1.1391997337341309
    3. '   ' → logprob: -7.139199733734131
    4. ' N' → logprob: -7.514199733734131
    5. ' line' → logprob: -8.514199256896973
    6. ' ' → logprob: -8.514199256896973
    7. 'N' → logprob: -9.389199256896973
    8. ' t' → logprob: -9.514199256896973
    9. '	n' → logprob: -9.764199256896973
    10. 'a' → logprob: -10.264199256896973

Token 31: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3297143578529358
    2. ',' → logprob: -1.329714298248291
    3. '=' → logprob: -4.829714298248291
    4. ' ,' → logprob: -4.829714298248291
    5. '=int' → logprob: -8.70471477508545
    6. ' ' → logprob: -9.20471477508545
    7. ')' → logprob: -10.82971477508545
    8. '   ' → logprob: -11.45471477508545
    9. ',n' → logprob: -11.45471477508545
    10. ',int' → logprob: -11.82971477508545

Token 32: ' u' (ID: 337)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1624438762664795
    2. 'm' → logprob: -2.5374438762664795
    3. ' ' → logprob: -2.7874438762664795
    4. ' k' → logprob: -5.037444114685059
    5. 'k' → logprob: -7.787444114685059
    6. ' =' → logprob: -7.787444114685059
    7. ' input' → logprob: -7.787444114685059
    8. '    ' → logprob: -7.912444114685059
    9. ' space' → logprob: -8.662444114685059
    10. 'input' → logprob: -8.912444114685059

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6050625443458557
    2. '=' → logprob: -1.480062484741211
    3. ',' → logprob: -1.980062484741211
    4. 'p' → logprob: -2.480062484741211
    5. 's' → logprob: -6.480062484741211
    6. 'sers' → logprob: -6.855062484741211
    7. 'n' → logprob: -7.605062484741211
    8. 'ser' → logprob: -8.230062484741211
    9. 'se' → logprob: -8.355062484741211
    10. ' ' → logprob: -8.605062484741211

Token 34: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.24089226126670837
    2. 'd' → logprob: -2.240892171859741
    3. 'r' → logprob: -3.865892171859741
    4. 't' → logprob: -4.11589241027832
    5. 'l' → logprob: -4.24089241027832
    6. 'k' → logprob: -4.49089241027832
    7. 'p' → logprob: -4.86589241027832
    8. 'm' → logprob: -5.24089241027832
    9. ' v' → logprob: -5.36589241027832
    10. 'q' → logprob: -5.49089241027832

Token 35: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04949301853775978
    2. '=' → logprob: -3.0494930744171143
    3. ',' → logprob: -7.299492835998535
    4. ' ' → logprob: -8.424492835998535
    5. '  ' → logprob: -12.924492835998535
    6. ' ,' → logprob: -13.049492835998535
    7. '   ' → logprob: -13.549492835998535
    8. ')' → logprob: -13.924492835998535
    9. '=int' → logprob: -13.924492835998535
    10. '    ' → logprob: -14.549492835998535

Token 36: ' m' (ID: 284)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.9328253865242004
    2. 'w' → logprob: -1.0578253269195557
    3. ' t' → logprob: -2.9328253269195557
    4. 't' → logprob: -3.5578253269195557
    5. ' =' → logprob: -3.6828253269195557
    6. '=' → logprob: -4.182825565338135
    7. ' k' → logprob: -4.557825565338135
    8. ' ' → logprob: -4.557825565338135
    9. ' d' → logprob: -4.807825565338135
    10. 'x' → logprob: -4.807825565338135

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11331246793270111
    2. '=' → logprob: -2.2383124828338623
    3. ',' → logprob: -7.863312244415283
    4. ' ' → logprob: -9.613312721252441
    5. '   ' → logprob: -11.488312721252441
    6. '  ' → logprob: -11.738312721252441
    7. '    ' → logprob: -11.863312721252441
    8. ')' → logprob: -12.488312721252441
    9. '=input' → logprob: -12.738312721252441
    10. ' ' → logprob: -13.738312721252441

Token 38: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004194624722003937
    2. 'map' → logprob: -5.504194736480713
    3. ' ' → logprob: -9.629194259643555
    4. ' input' → logprob: -10.379194259643555
    5. ' list' → logprob: -12.504194259643555
    6. '  ' → logprob: -12.629194259643555
    7. '   ' → logprob: -12.879194259643555
    8. '	map' → logprob: -12.879194259643555
    9. 'input' → logprob: -13.129194259643555
    10. ' ' → logprob: -13.504194259643555

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.29407280683517456
    2. '(' → logprob: -1.4190728664398193
    3. '(input' → logprob: -4.66907262802124
    4. '(lambda' → logprob: -5.79407262802124
    5. '(
' → logprob: -8.544073104858398
    6. '(str' → logprob: -8.919073104858398
    7. '(sys' → logprob: -10.544073104858398
    8. '(eval' → logprob: -11.294073104858398
    9. '<|end|>' → logprob: -12.294073104858398
    10. 'int' → logprob: -12.294073104858398

Token 40: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.45080238580703735
    2. ',' → logprob: -1.4508023262023926
    3. ',input' → logprob: -2.4508023262023926
    4. '(' → logprob: -3.8258023262023926
    5. ')' → logprob: -3.9508023262023926
    6. 'input' → logprob: -7.450802326202393
    7. '(sys' → logprob: -8.07580280303955
    8. '),' → logprob: -8.70080280303955
    9. '=input' → logprob: -10.20080280303955
    10. '(
' → logprob: -11.07580280303955

Token 41: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519415020942688
    2. 'input' → logprob: -1.501941442489624
    3. ')' → logprob: -11.626941680908203
    4. ',input' → logprob: -13.751941680908203
    5. '(input' → logprob: -14.126941680908203
    6. ' )' → logprob: -14.876941680908203
    7. '=input' → logprob: -15.126941680908203
    8. '	input' → logprob: -15.876941680908203
    9. '<input' → logprob: -15.876941680908203
    10. '_input' → logprob: -15.876941680908203

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002072357019642368
    2. '()' → logprob: -8.50020694732666
    3. '())' → logprob: -12.87520694732666
    4. ' ().' → logprob: -14.75020694732666
    5. '()))' → logprob: -15.37520694732666
    6. ')' → logprob: -15.37520694732666
    7. '()
' → logprob: -15.62520694732666
    8. '(' → logprob: -16.125207901000977
    9. '.readline' → logprob: -17.375207901000977
    10. '   ' → logprob: -17.875207901000977

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.007760181091725826
    2. 'strip' → logprob: -5.007760047912598
    3. 'rstrip' → logprob: -6.882760047912598
    4. ' split' → logprob: -11.882760047912598
    5. ')' → logprob: -12.007760047912598
    6. '().' → logprob: -12.757760047912598
    7. '(split' → logprob: -13.007760047912598
    8. '())' → logprob: -15.632760047912598
    9. 'read' → logprob: -15.757760047912598
    10. '()' → logprob: -16.007761001586914

Token 44: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5806703567504883
    2. ')' → logprob: -0.8306703567504883
    3. '()' → logprob: -5.455670356750488
    4. '))' → logprob: -8.080670356750488
    5. '()))' → logprob: -9.830670356750488
    6. '(' → logprob: -9.830670356750488
    7. '())
' → logprob: -11.455670356750488
    8. ' ())' → logprob: -12.830670356750488
    9. '('' → logprob: -12.955670356750488
    10. ' )' → logprob: -13.205670356750488

Token 45: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03791042044758797
    2. '<|end|>' → logprob: -4.287910461425781
    3. '
' → logprob: -4.787910461425781
    4. '   ' → logprob: -4.787910461425781
    5. ')
' → logprob: -6.787910461425781
    6. '#' → logprob: -6.787910461425781
    7. '<|end|>' → logprob: -6.787910461425781
    8. ',' → logprob: -7.162910461425781
    9. '    
' → logprob: -7.287910461425781
    10. '  
' → logprob: -7.537910461425781

Token 46: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19298529624938965
    2. ')' → logprob: -2.4429852962493896
    3. 'n' → logprob: -4.192985534667969
    4. '\n' → logprob: -4.442985534667969
    5. ' 
' → logprob: -4.442985534667969
    6. '    
' → logprob: -4.817985534667969
    7. '  
' → logprob: -4.817985534667969
    8. '   ' → logprob: -4.942985534667969
    9. '<|end|>' → logprob: -4.942985534667969
    10. '<|end|>' → logprob: -5.817985534667969

Token 47: ' u' (ID: 337)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.8595603704452515
    2. 'graph' → logprob: -2.234560489654541
    3. ' distances' → logprob: -2.484560489654541
    4. ' data' → logprob: -2.609560489654541
    5. ' heights' → logprob: -2.609560489654541
    6. '   ' → logprob: -2.859560489654541
    7. 'a' → logprob: -2.984560489654541
    8. ' ' → logprob: -3.234560489654541
    9. 'data' → logprob: -3.359560489654541
    10. ' a' → logprob: -3.484560489654541

Token 48: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5081837773323059
    2. ' -=' → logprob: -1.1331837177276611
    3. '-' → logprob: -3.883183717727661
    4. '-=' → logprob: -3.883183717727661
    5. ' ,' → logprob: -4.25818395614624
    6. ' =' → logprob: -4.63318395614624
    7. ' +=' → logprob: -5.38318395614624
    8. '=' → logprob: -5.75818395614624
    9. ' -' → logprob: -7.00818395614624
    10. '+=' → logprob: -7.38318395614624

Token 49: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18988211452960968
    2. ',' → logprob: -2.3148820400238037
    3. '=' → logprob: -2.6898820400238037
    4. ')' → logprob: -5.564882278442383
    5. ' ,' → logprob: -6.689882278442383
    6. '<|end|>' → logprob: -8.189882278442383
    7. '<|end|>' → logprob: -8.439882278442383
    8. ' ' → logprob: -8.814882278442383
    9. ',v' → logprob: -10.064882278442383
    10. ',u' → logprob: -10.064882278442383

Token 50: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.3478800058364868
    2. ' les' → logprob: -1.3478800058364868
    3. 'des' → logprob: -1.4728800058364868
    4. 'les' → logprob: -1.5978800058364868
    5. 'dans' → logprob: -4.847879886627197
    6. ' ' → logprob: -5.472879886627197
    7. ' probablement' → logprob: -6.285379886627197
    8. ' reli' → logprob: -6.410379886627197
    9. ' dans' → logprob: -6.410379886627197
    10. 's' → logprob: -6.535379886627197

Token 51: ' conditions' (ID: 6409)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.8855821490287781
    2. 'indices' → logprob: -1.3855822086334229
    3. 's' → logprob: -2.385582208633423
    4. ' somm' → logprob: -2.885582208633423
    5. 'positions' → logprob: -3.510582208633423
    6. ' points' → logprob: -3.635582208633423
    7. 'n' → logprob: -4.385581970214844
    8. ' positions' → logprob: -4.385581970214844
    9. ' noe' → logprob: -4.573081970214844
    10. 'index' → logprob: -4.948081970214844

Token 52: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' vic' (ID: 31433)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passage' → logprob: -1.1579877138137817
    2. ' départ' → logprob: -2.532987594604492
    3. ' la' → logprob: -2.657987594604492
    4. ' l' → logprob: -2.907987594604492
    5. '```' → logprob: -3.032987594604492
    6. 'l' → logprob: -3.282987594604492
    7. ' déplacement' → logprob: -3.532987594604492
    8. ' distance' → logprob: -3.657987594604492
    9. ' victoire' → logprob: -3.657987594604492
    10. ' frontière' → logprob: -3.845487594604492

Token 54: 'to' (ID: 935)
  Prédit: 'toire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'toire' → logprob: -0.016820982098579407
    2. 'to' → logprob: -4.141820907592773
    3. 'toi' → logprob: -8.516820907592773
    4. '```' → logprob: -9.141820907592773
    5. ' to' → logprob: -9.641820907592773
    6. '[' → logprob: -9.766820907592773
    7. '>' → logprob: -10.016820907592773
    8. 't' → logprob: -10.141820907592773
    9. '   ' → logprob: -10.516820907592773
    10. '#' → logprob: -10.641820907592773

Token 55: 'ires' (ID: 5255)
  Prédit: 'ire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.2173849642276764
    2. 'ry' → logprob: -2.0923850536346436
    3. 'rie' → logprob: -3.5923850536346436
    4. 'ires' → logprob: -4.3423848152160645
    5. 'ir' → logprob: -5.2173848152160645
    6. '```' → logprob: -5.2173848152160645
    7. 'i' → logprob: -5.7173848152160645
    8. '   ' → logprob: -5.9673848152160645
    9. 'iry' → logprob: -6.2173848152160645
    10. '#' → logprob: -6.4673848152160645

Token 56: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' nombre' (ID: 9733)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5814199447631836
    2. ' ' → logprob: -1.4564199447631836
    3. ' "' → logprob: -3.4564199447631836
    4. 'u' → logprob: -3.5814199447631836
    5. ' n' → logprob: -4.206419944763184
    6. ')' → logprob: -4.331419944763184
    7. ' lambda' → logprob: -4.581419944763184
    8. '[u' → logprob: -4.956419944763184
    9. 'lambda' → logprob: -5.081419944763184
    10. ' (' → logprob: -5.206419944763184

Token 58: ' minimum' (ID: 11085)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8585689067840576
    2. ' d' → logprob: -1.6085689067840576
    3. '<|end|>' → logprob: -2.1085689067840576
    4. 'de' → logprob: -2.4835689067840576
    5. '<|end|>' → logprob: -3.2335689067840576
    6. ')' → logprob: -3.3585689067840576
    7. 's' → logprob: -3.8585689067840576
    8. ' ' → logprob: -3.9835689067840576
    9. '_' → logprob: -4.733569145202637
    10. 'd' → logprob: -4.858569145202637

Token 59: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9890112280845642
    2. ' d' → logprob: -1.114011287689209
    3. '<|end|>' → logprob: -2.239011287689209
    4. 'de' → logprob: -2.364011287689209
    5. 'd' → logprob: -3.114011287689209
    6. '_' → logprob: -3.989011287689209
    7. ' ' → logprob: -4.739011287689209
    8. '<|end|>' → logprob: -5.114011287689209
    9. 's' → logprob: -5.364011287689209
    10. '_de' → logprob: -5.614011287689209

Token 60: ' lignes' (ID: 81687)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.2019851803779602
    2. 'points' → logprob: -2.7019851207733154
    3. ' joueurs' → logprob: -3.7019851207733154
    4. ' tours' → logprob: -4.5769853591918945
    5. 's' → logprob: -4.8269853591918945
    6. 'cases' → logprob: -4.8269853591918945
    7. ' ' → logprob: -5.0769853591918945
    8. ' cases' → logprob: -5.4519853591918945
    9. ' coups' → logprob: -5.4519853591918945
    10. '<|end|>' → logprob: -5.4519853591918945

Token 61: ' align' (ID: 9538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8104907870292664
    2. ',' → logprob: -1.4354908466339111
    3. '<|end|>' → logprob: -1.8104908466339111
    4. ')' → logprob: -2.935490846633911
    5. ' ,' → logprob: -3.560490846633911
    6. '  ' → logprob: -4.185490608215332
    7. 'u' → logprob: -5.060490608215332
    8. '   ' → logprob: -5.185490608215332
    9. ' )' → logprob: -5.310490608215332
    10. '    ' → logprob: -5.560490608215332

Token 62: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.03322766721248627
    2. 'é' → logprob: -3.5332276821136475
    3. 'es' → logprob: -6.283227443695068
    4. 'és' → logprob: -7.283227443695068
    5. 'ée' → logprob: -7.283227443695068
    6. 'e' → logprob: -9.283227920532227
    7. '```' → logprob: -10.783227920532227
    8. 'ees' → logprob: -10.908227920532227
    9. '{' → logprob: -10.908227920532227
    10. 'ément' → logprob: -11.033227920532227

Token 63: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1018201112747192
    2. ' ' → logprob: -1.1018201112747192
    3. ' ,' → logprob: -1.7268201112747192
    4. '<|end|>' → logprob: -2.4768199920654297
    5. 'u' → logprob: -4.47681999206543
    6. ')' → logprob: -4.60181999206543
    7. '.' → logprob: -4.97681999206543
    8. ' )' → logprob: -5.10181999206543
    9. '  ' → logprob: -5.10181999206543
    10. '    ' → logprob: -5.35181999206543

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9762628078460693
    2. '   ' → logprob: -1.8512628078460693
    3. ',' → logprob: -2.3512628078460693
    4. '<|end|>' → logprob: -2.4762628078460693
    5. 'n' → logprob: -2.6012628078460693
    6. ')' → logprob: -2.9762628078460693
    7. ' ' → logprob: -3.6012628078460693
    8. '  
' → logprob: -3.6012628078460693
    9. ' 
' → logprob: -3.8512628078460693
    10. 'u' → logprob: -4.601263046264648

Token 65: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9085478782653809
    2. '   ' → logprob: -1.9085478782653809
    3. ')' → logprob: -2.158547878265381
    4. 'n' → logprob: -2.658547878265381
    5. 'graph' → logprob: -2.658547878265381
    6. '\n' → logprob: -3.783547878265381
    7. '<|end|>' → logprob: -3.908547878265381
    8. ',' → logprob: -4.033547878265381
    9. ' ' → logprob: -4.283547878265381
    10. ' graph' → logprob: -4.283547878265381

Token 66: ' Lecture' (ID: 106534)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.6069880723953247
    2. ' grid' → logprob: -1.8569880723953247
    3. 'graph' → logprob: -2.106987953186035
    4. 'grid' → logprob: -2.231987953186035
    5. ' graph' → logprob: -2.731987953186035
    6. '#' → logprob: -2.856987953186035
    7. ' lines' → logprob: -2.856987953186035
    8. 'board' → logprob: -3.481987953186035
    9. ' dp' → logprob: -3.481987953186035
    10. 'lines' → logprob: -3.981987953186035

Token 67: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.10706992447376251
    2. 'des' → logprob: -2.357069969177246
    3. '   ' → logprob: -5.607069969177246
    4. '<|end|>' → logprob: -6.482069969177246
    5. '<|end|>' → logprob: -7.982069969177246
    6. '()' → logprob: -8.107069969177246
    7. '...' → logprob: -8.357069969177246
    8. ' de' → logprob: -9.357069969177246
    9. '[]' → logprob: -9.482069969177246
    10. ')' → logprob: -9.482069969177246

Token 68: ' matrices' (ID: 75935)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.6279933452606201
    2. 'gr' → logprob: -1.8779933452606201
    3. 'l' → logprob: -2.25299334526062
    4. ' lignes' → logprob: -2.75299334526062
    5. 'd' → logprob: -2.87799334526062
    6. ' données' → logprob: -3.12799334526062
    7. ' positions' → logprob: -3.25299334526062
    8. 'm' → logprob: -3.62799334526062
    9. 'scores' → logprob: -3.62799334526062
    10. 't' → logprob: -4.002993583679199

Token 69: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8650723099708557
    2. 'mat' → logprob: -1.490072250366211
    3. ' matrices' → logprob: -2.365072250366211
    4. 'matrix' → logprob: -3.490072250366211
    5. 'a' → logprob: -3.740072250366211
    6. 's' → logprob: -3.865072250366211
    7. 'for' → logprob: -3.865072250366211
    8. 'n' → logprob: -4.115072250366211
    9. 'data' → logprob: -4.115072250366211
    10. ',' → logprob: -4.115072250366211

Token 70: ' nombres' (ID: 76205)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.9303402900695801
    2. ' jeu' → logprob: -1.05534029006958
    3. 'jeu' → logprob: -3.05534029006958
    4. ' code' → logprob: -3.93034029006958
    5. 'gr' → logprob: -4.43034029006958
    6. ' jeux' → logprob: -4.43034029006958
    7. ' ' → logprob: -4.43034029006958
    8. ' l' → logprob: -5.18034029006958
    9. ' caractères' → logprob: -5.18034029006958
    10. ' scores' → logprob: -5.24284029006958

Token 71: ' écr' (ID: 33691)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5384060144424438
    2. '<|end|>' → logprob: -2.0384058952331543
    3. ' matrices' → logprob: -2.2884058952331543
    4. 's' → logprob: -2.2884058952331543
    5. ',' → logprob: -2.6634058952331543
    6. '
' → logprob: -3.0384058952331543
    7. 'a' → logprob: -3.1634058952331543
    8. 'for' → logprob: -3.1634058952331543
    9. 'n' → logprob: -3.5384058952331543
    10. 'data' → logprob: -3.9134058952331543

Token 72: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.3055627942085266
    2. 'ites' → logprob: -1.8055627346038818
    3. 'it' → logprob: -2.805562734603882
    4. 'is' → logprob: -4.180562973022461
    5. 'us' → logprob: -5.805562973022461
    6. 'ite' → logprob: -5.930562973022461
    7. 'tis' → logprob: -6.493062973022461
    8. 'itas' → logprob: -6.805562973022461
    9. 't' → logprob: -6.805562973022461
    10. 's' → logprob: -6.868062973022461

Token 73: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.428177833557129
    2. 's' → logprob: -1.928177833557129
    3. '<|end|>' → logprob: -2.428177833557129
    4. ' ' → logprob: -2.928177833557129
    5. '   ' → logprob: -2.928177833557129
    6. ' ,' → logprob: -3.303177833557129
    7. ' matrices' → logprob: -3.428177833557129
    8. 'a' → logprob: -3.678177833557129
    9. '<|end|>' → logprob: -3.678177833557129
    10. 'n' → logprob: -3.928177833557129

Token 74: ' Us' (ID: 5268)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0065466165542603
    2. 'les' → logprob: -1.1315466165542603
    3. 'l' → logprob: -1.6315466165542603
    4. ' chaque' → logprob: -2.8815464973449707
    5. ' l' → logprob: -3.2565464973449707
    6. ' each' → logprob: -4.756546497344971
    7. 'each' → logprob: -6.006546497344971
    8. ' ' → logprob: -6.631546497344971
    9. 'cha' → logprob: -7.256546497344971
    10. ' joueurs' → logprob: -7.256546497344971

Token 75: 'agi' (ID: 13160)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7630056142807007
    2. 'u' → logprob: -2.2630057334899902
    3. 'eurs' → logprob: -2.6380057334899902
    4. 'ers' → logprob: -2.7630057334899902
    5. 'i' → logprob: -2.7630057334899902
    6. 'eur' → logprob: -3.5130057334899902
    7. '#' → logprob: -4.01300573348999
    8. 'r' → logprob: -4.01300573348999
    9. '```' → logprob: -4.38800573348999
    10. 'a' → logprob: -4.51300573348999

Token 76: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9986838102340698
    2. 'mat' → logprob: -1.8736838102340698
    3. ' matrices' → logprob: -1.8736838102340698
    4. 'for' → logprob: -2.2486839294433594
    5. '   ' → logprob: -2.4986839294433594
    6. ',' → logprob: -3.8736839294433594
    7. 'n' → logprob: -4.123683929443359
    8. 'u' → logprob: -4.623683929443359
    9. 'm' → logprob: -4.623683929443359
    10. ' for' → logprob: -4.998683929443359

Token 77: ' N' (ID: 478)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.7157166004180908
    2. 'K' → logprob: -2.340716600418091
    3. ' Ts' → logprob: -3.215716600418091
    4. ' M' → logprob: -3.590716600418091
    5. ' T' → logprob: -3.590716600418091
    6. '  ' → logprob: -3.715716600418091
    7. '    ' → logprob: -3.715716600418091
    8. ' Sen' → logprob: -3.840716600418091
    9. ' ' → logprob: -3.965716600418091
    10. '   ' → logprob: -4.340716361999512

Token 78: 'eko' (ID: 22286)
  Prédit: 'eko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eko' → logprob: -0.8575851917266846
    2. 'e' → logprob: -1.8575851917266846
    3. 'a' → logprob: -2.1075851917266846
    4. 'o' → logprob: -2.3575851917266846
    5. 'eo' → logprob: -4.1075849533081055
    6. 'yan' → logprob: -4.1075849533081055
    7. 'inja' → logprob: -4.6075849533081055
    8. 'ew' → logprob: -4.6700849533081055
    9. 'i' → logprob: -4.8575849533081055
    10. 'one' → logprob: -4.8575849533081055

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34392786026000977
    2. ' matrices' → logprob: -2.4689278602600098
    3. '
' → logprob: -3.3439278602600098
    4. 'u' → logprob: -3.7189278602600098
    5. 'us' → logprob: -3.8439278602600098
    6. '```' → logprob: -4.09392786026001
    7. ' for' → logprob: -4.46892786026001
    8. '\n' → logprob: -4.46892786026001
    9. 'n' → logprob: -4.46892786026001
    10. 'matrix' → logprob: -4.46892786026001

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20957328379154205
    2. 'us' → logprob: -2.209573268890381
    3. ' us' → logprob: -3.834573268890381
    4. 'u' → logprob: -4.084573268890381
    5. ' matrices' → logprob: -4.209573268890381
    6. 'mat' → logprob: -5.709573268890381
    7. 'matrix' → logprob: -5.834573268890381
    8. ' lines' → logprob: -6.209573268890381
    9. '```' → logprob: -6.459573268890381
    10. ' u' → logprob: -6.709573268890381

Token 81: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0559278726577759
    2. 'us' → logprob: -1.6809278726577759
    3. 'A' → logprob: -2.1809277534484863
    4. ' us' → logprob: -2.5559277534484863
    5. '   ' → logprob: -3.3059277534484863
    6. ' u' → logprob: -3.5559277534484863
    7. 'a' → logprob: -3.6809277534484863
    8. ' A' → logprob: -3.6809277534484863
    9. ' matrices' → logprob: -3.8059277534484863
    10. 'U' → logprob: -3.9309277534484863

Token 82: ' Mat' (ID: 9926)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.6446526646614075
    2. ' us' → logprob: -1.2696526050567627
    3. '   ' → logprob: -2.6446526050567627
    4. 'u' → logprob: -3.0196526050567627
    5. 'A' → logprob: -4.394652843475342
    6. ' lines' → logprob: -4.894652843475342
    7. ' A' → logprob: -5.269652843475342
    8. 'a' → logprob: -5.519652843475342
    9. ' for' → logprob: -5.644652843475342
    10. 'Us' → logprob: -5.769652843475342

Token 83: 'rice' (ID: 44478)
  Prédit: 'rices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rices' → logprob: -0.00597761943936348
    2. 'r' → logprob: -6.130977630615234
    3. 'atrices' → logprob: -6.380977630615234
    4. 'rix' → logprob: -6.505977630615234
    5. 'ices' → logprob: -8.380977630615234
    6. 'rics' → logprob: -8.505977630615234
    7. 'rice' → logprob: -10.380977630615234
    8. 'a' → logprob: -10.630977630615234
    9. 'ris' → logprob: -11.130977630615234
    10. 's' → logprob: -11.755977630615234

Token 84: ' Us' (ID: 5268)
  Prédit: '_us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_us' → logprob: -0.2679066061973572
    2. '_u' → logprob: -2.142906665802002
    3. 'us' → logprob: -3.142906665802002
    4. '1' → logprob: -3.642906665802002
    5. ' =' → logprob: -4.267906665802002
    6. 'u' → logprob: -4.517906665802002
    7. 'A' → logprob: -4.892906665802002
    8. '_' → logprob: -5.642906665802002
    9. '_a' → logprob: -5.892906665802002
    10. 'U' → logprob: -6.017906665802002

Token 85: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -0.4364944100379944
    2. 'a' → logprob: -1.5614943504333496
    3. ' =' → logprob: -2.4364943504333496
    4. '=' → logprob: -3.5614943504333496
    5. 'ag' → logprob: -4.06149435043335
    6. 's' → logprob: -5.56149435043335
    7. 'u' → logprob: -6.18649435043335
    8. '   ' → logprob: -6.68649435043335
    9. '=[]' → logprob: -7.68649435043335
    10. 'agai' → logprob: -8.186494827270508

Token 86: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3282090723514557
    2. 'u' → logprob: -2.328209161758423
    3. 'us' → logprob: -2.453209161758423
    4. '   ' → logprob: -4.078208923339844
    5. ':' → logprob: -4.328208923339844
    6. '=' → logprob: -4.328208923339844
    7. ' us' → logprob: -4.328208923339844
    8. ',' → logprob: -5.203208923339844
    9. '_us' → logprob: -5.703208923339844
    10. '[' → logprob: -5.953208923339844

Token 87: ' taille' (ID: 41644)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4997020363807678
    2. 'us' → logprob: -1.749701976776123
    3. ' us' → logprob: -2.499701976776123
    4. ' u' → logprob: -3.374701976776123
    5. 'U' → logprob: -3.499701976776123
    6. 'A' → logprob: -3.874701976776123
    7. 'a' → logprob: -4.749701976776123
    8. ' A' → logprob: -5.874701976776123
    9. ' U' → logprob: -5.999701976776123
    10. 'm' → logprob: -6.187201976776123

Token 88: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.151132732629776
    2. 'n' → logprob: -2.151132822036743
    3. ' ' → logprob: -4.526132583618164
    4. ' (' → logprob: -5.026132583618164
    5. ':' → logprob: -6.401132583618164
    6. '(n' → logprob: -6.401132583618164
    7. '  ' → logprob: -7.401132583618164
    8. ' u' → logprob: -7.651132583618164
    9. ' :' → logprob: -7.901132583618164
    10. 'u' → logprob: -8.151132583618164

Token 89: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5638352632522583
    2. ')' → logprob: -1.9388352632522583
    3. '*n' → logprob: -2.3138351440429688
    4. ',' → logprob: -3.0638351440429688
    5. 'x' → logprob: -3.4388351440429688
    6. ' ' → logprob: -3.5638351440429688
    7. ' n' → logprob: -3.9388351440429688
    8. '*' → logprob: -4.063835144042969
    9. '×' → logprob: -4.813835144042969
    10. 'n' → logprob: -5.063835144042969

Token 90: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4489537179470062
    2. 'm' → logprob: -1.0739537477493286
    3. ' n' → logprob: -4.448953628540039
    4. ' m' → logprob: -5.198953628540039
    5. 'u' → logprob: -6.448953628540039
    6. ' ' → logprob: -7.198953628540039
    7. 'v' → logprob: -9.198953628540039
    8. '4' → logprob: -9.573953628540039
    9. ' u' → logprob: -9.886453628540039
    10. '(n' → logprob: -10.136453628540039

Token 91: '
' (ID: 198)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.5421670079231262
    2. 'u' → logprob: -1.7921669483184814
    3. '
' → logprob: -2.6671669483184814
    4. '   ' → logprob: -3.2921669483184814
    5. ' us' → logprob: -3.5421669483184814
    6. 'matrix' → logprob: -3.7921669483184814
    7. 'mat' → logprob: -4.2921671867370605
    8. '```' → logprob: -4.6671671867370605
    9. ')' → logprob: -5.0421671867370605
    10. 'Us' → logprob: -5.1671671867370605

Token 92: '   ' (ID: 271)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.4608514606952667
    2. '   ' → logprob: -1.4608514308929443
    3. 'u' → logprob: -2.4608514308929443
    4. ' us' → logprob: -4.085851669311523
    5. 'mat' → logprob: -4.460851669311523
    6. 'matrix' → logprob: -4.960851669311523
    7. 'm' → logprob: -5.710851669311523
    8. '    
' → logprob: -6.710851669311523
    9. 'Us' → logprob: -7.210851669311523
    10. ' matrices' → logprob: -7.210851669311523

Token 93: ' us' (ID: 765)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' (adapté à ' us') → logprob: -0.4564104974269867
    2. 'u' → logprob: -1.456410527229309
    3. ' us' → logprob: -3.3314104080200195
    4. '   ' → logprob: -3.5814104080200195
    5. 'U' → logprob: -3.8314104080200195
    6. 'mat' → logprob: -4.9564104080200195
    7. 'matrix' → logprob: -5.0814104080200195
    8. ' u' → logprob: -5.2064104080200195
    9. 'Us' → logprob: -5.2064104080200195
    10. 'A' → logprob: -5.3314104080200195

Token 94: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -0.07097688317298889
    2. 's' → logprob: -3.195976972579956
    3. 'ag' → logprob: -4.445976734161377
    4. '   ' → logprob: -5.445976734161377
    5. 'a' → logprob: -5.820976734161377
    6. 'g' → logprob: -5.945976734161377
    7. ' =' → logprob: -6.195976734161377
    8. 'u' → logprob: -7.570976734161377
    9. '  ' → logprob: -7.820976734161377
    10. '=' → logprob: -8.070977210998535

Token 95: '_nums' (ID: 128266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2878872752189636
    2. '=' → logprob: -1.4128873348236084
    3. '_matrix' → logprob: -5.537887096405029
    4. '_' → logprob: -7.162887096405029
    5. ' ' → logprob: -7.787887096405029
    6. '_mat' → logprob: -7.787887096405029
    7. ',' → logprob: -8.287887573242188
    8. '_lines' → logprob: -8.787887573242188
    9. '   ' → logprob: -9.037887573242188
    10. '=[]' → logprob: -9.287887573242188

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10044292360544205
    2. '=' → logprob: -2.350442886352539
    3. ' ' → logprob: -9.100442886352539
    4. '   ' → logprob: -9.975442886352539
    5. ',' → logprob: -10.475442886352539
    6. ')' → logprob: -11.225442886352539
    7. '[' → logprob: -11.350442886352539
    8. '=[]' → logprob: -11.850442886352539
    9. '[]' → logprob: -12.850442886352539
    10. '  ' → logprob: -12.850442886352539

Token 97: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11602679640054703
    2. ' [' → logprob: -2.3660268783569336
    3. '[list' → logprob: -5.116026878356934
    4. '[int' → logprob: -5.616026878356934
    5. '[]' → logprob: -6.491026878356934
    6. '[n' → logprob: -6.616026878356934
    7. '[u' → logprob: -7.116026878356934
    8. '[array' → logprob: -7.491026878356934
    9. '[List' → logprob: -8.616026878356934
    10. '[str' → logprob: -8.741026878356934

Token 98: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12693651020526886
    2. ' list' → logprob: -2.126936435699463
    3. '[list' → logprob: -12.251936912536621
    4. '	list' → logprob: -13.376936912536621
    5. ' [' → logprob: -14.501936912536621
    6. 'input' → logprob: -14.501936912536621
    7. '   ' → logprob: -15.126936912536621
    8. '[' → logprob: -15.251936912536621
    9. '(list' → logprob: -15.876936912536621
    10. '=list' → logprob: -16.126935958862305

Token 99: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.888114098226652e-05
    2. '(' → logprob: -9.375088691711426
    3. 'map' → logprob: -13.000088691711426
    4. '(int' → logprob: -13.750088691711426
    5. '()' → logprob: -14.625088691711426
    6. ' map' → logprob: -16.125089645385742
    7. '	map' → logprob: -17.000089645385742
    8. '(
' → logprob: -17.500089645385742
    9. '(m' → logprob: -17.750089645385742
    10. ',map' → logprob: -18.500089645385742

Token 100: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -11.000024795532227
    3. '<int' → logprob: -12.750024795532227
    4. '=int' → logprob: -13.625024795532227
    5. ')' → logprob: -13.750024795532227
    6. 'int' → logprob: -13.875024795532227
    7. '[int' → logprob: -14.000024795532227
    8. ',int' → logprob: -14.500024795532227
    9. ']int' → logprob: -14.875024795532227
    10. '<|end|>' → logprob: -15.250024795532227

Token 101: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013548288494348526
    2. ',input' → logprob: -4.513548374176025
    3. 'input' → logprob: -7.138548374176025
    4. ',' → logprob: -7.138548374176025
    5. '(' → logprob: -7.513548374176025
    6. ' input' → logprob: -8.388547897338867
    7. ')' → logprob: -10.013547897338867
    8. '=input' → logprob: -10.138547897338867
    9. ' (' → logprob: -10.388547897338867
    10. '[input' → logprob: -12.388547897338867

Token 102: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08894579112529755
    2. ' input' → logprob: -2.4639458656311035
    3. ' ' → logprob: -13.463945388793945
    4. '(input' → logprob: -13.588945388793945
    5. ')' → logprob: -13.713945388793945
    6. '	input' → logprob: -14.088945388793945
    7. '   ' → logprob: -14.838945388793945
    8. '<input' → logprob: -15.338945388793945
    9. 'sys' → logprob: -15.588945388793945
    10. '=input' → logprob: -15.713945388793945

Token 103: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.2994620242971e-06
    2. '()' → logprob: -11.875008583068848
    3. '.readline' → logprob: -14.000008583068848
    4. ' ().' → logprob: -15.875008583068848
    5. '(' → logprob: -16.00000762939453
    6. '()))' → logprob: -16.87500762939453
    7. '()
' → logprob: -18.12500762939453
    8. '   ' → logprob: -18.12500762939453
    9. ')' → logprob: -18.12500762939453
    10. '().__' → logprob: -18.62500762939453

Token 104: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001037214300595224
    2. 'strip' → logprob: -7.001037120819092
    3. 'rstrip' → logprob: -9.00103759765625
    4. 'read' → logprob: -13.12603759765625
    5. '(split' → logprob: -15.25103759765625
    6. ' split' → logprob: -15.75103759765625
    7. 'spl' → logprob: -16.87603759765625
    8. ')' → logprob: -18.87603759765625
    9. 'plit' → logprob: -19.75103759765625
    10. ' strip' → logprob: -19.87603759765625

Token 105: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02956324629485607
    2. '))' → logprob: -3.6545631885528564
    3. '()' → logprob: -5.7795634269714355
    4. '(' → logprob: -9.279562950134277
    5. '())' → logprob: -10.779562950134277
    6. '()))
' → logprob: -10.904562950134277
    7. '()));' → logprob: -11.904562950134277
    8. '())))' → logprob: -12.029562950134277
    9. '().' → logprob: -12.404562950134277
    10. '())).' → logprob: -12.529562950134277

Token 106: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.208564892411232
    2. '()' → logprob: -1.8335648775100708
    3. '())' → logprob: -3.5835649967193604
    4. 'for' → logprob: -8.208564758300781
    5. ' for' → logprob: -8.583564758300781
    6. '   ' → logprob: -9.833564758300781
    7. ' )' → logprob: -9.958564758300781
    8. '(' → logprob: -10.083564758300781
    9. ' ' → logprob: -12.083564758300781
    10. ')]' → logprob: -12.208564758300781

Token 107: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07944311201572418
    2. 'range' → logprob: -2.5794432163238525
    3. '_' → logprob: -7.579442977905273
    4. '_range' → logprob: -10.204442977905273
    5. ' _' → logprob: -12.579442977905273
    6. '(range' → logprob: -13.579442977905273
    7. '	range' → logprob: -14.954442977905273
    8. ' in' → logprob: -15.454442977905273
    9. '.range' → logprob: -18.079442977905273
    10. '_i' → logprob: -18.204442977905273

Token 108: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0018432056531310081
    2. ' range' → logprob: -6.751842975616455
    3. ' in' → logprob: -7.751842975616455
    4. '(range' → logprob: -8.876843452453613
    5. 'in' → logprob: -9.376843452453613
    6. 'n' → logprob: -11.376843452453613
    7. '	range' → logprob: -12.501843452453613
    8. 'ange' → logprob: -14.001843452453613
    9. '(n' → logprob: -14.626843452453613
    10. '(' → logprob: -14.626843452453613

Token 109: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001593195047462359
    2. ' range' → logprob: -8.75015926361084
    3. '(range' → logprob: -14.37515926361084
    4. '   ' → logprob: -16.750160217285156
    5. '	range' → logprob: -17.125160217285156
    6. ' ' → logprob: -17.875160217285156
    7. '  ' → logprob: -18.625160217285156
    8. ')' → logprob: -18.875160217285156
    9. '```' → logprob: -19.000160217285156
    10. 'rang' → logprob: -19.625160217285156

Token 110: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.204720582696609e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -14.625052452087402
    4. '(
' → logprob: -16.625051498413086
    5. 'n' → logprob: -19.625051498413086
    6. '(N' → logprob: -20.250051498413086
    7. '(nn' → logprob: -20.625051498413086
    8. '((' → logprob: -20.750051498413086
    9. ' ' → logprob: -21.375051498413086
    10. '(int' → logprob: -21.500051498413086

Token 111: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010521204239921644
    2. ']' → logprob: -9.375104904174805
    3. ')' → logprob: -10.875104904174805
    4. ')]
' → logprob: -15.125104904174805
    5. '])]' → logprob: -15.125104904174805
    6. '   ' → logprob: -15.375104904174805
    7. '])' → logprob: -15.375104904174805
    8. ')])' → logprob: -16.000104904174805
    9. ' )' → logprob: -16.500104904174805
    10. '')]' → logprob: -16.500104904174805

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06616395711898804
    2. '
' → logprob: -3.191164016723633
    3. 'ne' → logprob: -4.566164016723633
    4. '    
' → logprob: -4.816164016723633
    5. 'n' → logprob: -6.941164016723633
    6. '  
' → logprob: -7.066164016723633
    7. '#' → logprob: -7.191164016723633
    8. ' ' → logprob: -7.816164016723633
    9. '```' → logprob: -8.566164016723633
    10. '   
' → logprob: -8.691164016723633

Token 113: ' #' (ID: 1069)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.33984827995300293
    2. '#' (adapté à ' #') → logprob: -2.339848279953003
    3. '   ' → logprob: -2.589848279953003
    4. '
' → logprob: -2.589848279953003
    5. 'n' → logprob: -3.839848279953003
    6. '    
' → logprob: -4.464848518371582
    7. '  
' → logprob: -5.589848518371582
    8. '```' → logprob: -6.714848518371582
    9. ' ' → logprob: -7.839848518371582
    10. '
' → logprob: -8.089848518371582

Token 114: ' Mat' (ID: 9926)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0653802677989006
    2. ' neko' → logprob: -3.690380334854126
    3. '#' → logprob: -3.940380334854126
    4. 'nek' → logprob: -5.065380096435547
    5. 'mat' → logprob: -5.690380096435547
    6. 'n' → logprob: -6.315380096435547
    7. 'matrix' → logprob: -7.127880096435547
    8. ' ne' → logprob: -7.252880096435547
    9. '
' → logprob: -7.502880096435547
    10. ' #' → logprob: -7.690380096435547

Token 115: 'rice' (ID: 44478)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9237313866615295
    2. 'eko' → logprob: -1.5487313270568848
    3. 'rice' → logprob: -1.7987313270568848
    4. 'rices' → logprob: -2.4237313270568848
    5. 'ek' → logprob: -3.4237313270568848
    6. 'mat' → logprob: -3.9237313270568848
    7. 'ne' → logprob: -4.298731327056885
    8. 'ke' → logprob: -4.423731327056885
    9. 'atrix' → logprob: -4.798731327056885
    10. '#' → logprob: -4.798731327056885

Token 116: ' N' (ID: 478)
  Prédit: ' neko'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neko' → logprob: -0.1650366485118866
    2. 'ne' → logprob: -1.915036678314209
    3. ' nek' → logprob: -7.165036678314209
    4. 'n' → logprob: -7.290036678314209
    5. ' ne' → logprob: -7.540036678314209
    6. ' niko' → logprob: -7.665036678314209
    7. 'nek' → logprob: -7.790036678314209
    8. 'N' → logprob: -8.29003620147705
    9. '```' → logprob: -8.41503620147705
    10. ' ' → logprob: -8.91503620147705

Token 117: 'eko' (ID: 22286)
  Prédit: 'eko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eko' → logprob: -4.23917081207037e-05
    2. 'e' → logprob: -11.000041961669922
    3. '```' → logprob: -11.750041961669922
    4. 'ek' → logprob: -12.000041961669922
    5. 'ko' → logprob: -12.125041961669922
    6. 'еко' → logprob: -13.500041961669922
    7. 'ne' → logprob: -13.875041961669922
    8. 'eco' → logprob: -14.250041961669922
    9. 'ekom' → logprob: -14.375041961669922
    10. 'k' → logprob: -14.875041961669922

Token 118: ',' (ID: 11)
  Prédit: '_nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.00030948311905376613
    2. '_n' → logprob: -8.375309944152832
    3. '_' → logprob: -10.875309944152832
    4. ' =' → logprob: -11.250309944152832
    5. '_num' → logprob: -11.500309944152832
    6. 'nums' → logprob: -11.750309944152832
    7. '=' → logprob: -11.875309944152832
    8. 's' → logprob: -12.250309944152832
    9. '_vals' → logprob: -13.000309944152832
    10. '_numbers' → logprob: -13.000309944152832

Token 119: ' taille' (ID: 41644)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.2555515170097351
    2. ' neko' → logprob: -2.38055157661438
    3. '[' → logprob: -2.63055157661438
    4. ' [' → logprob: -3.38055157661438
    5. ' ne' → logprob: -4.755551338195801
    6. 'nek' → logprob: -5.005551338195801
    7. 'n' → logprob: -5.505551338195801
    8. '   ' → logprob: -6.630551338195801
    9. ' ' → logprob: -7.255551338195801
    10. ' n' → logprob: -7.380551338195801

Token 120: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6326308846473694
    2. ' n' → logprob: -0.7576308846473694
    3. '[n' → logprob: -10.882631301879883
    4. '(n' → logprob: -11.632631301879883
    5. ' [' → logprob: -13.757631301879883
    6. '	n' → logprob: -14.007631301879883
    7. '   ' → logprob: -14.257631301879883
    8. '[' → logprob: -14.882631301879883
    9. ' ' → logprob: -15.632631301879883
    10. '```' → logprob: -15.757631301879883

Token 121: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.011078117415308952
    2. 'x' → logprob: -4.511077880859375
    3. ' ' → logprob: -11.511077880859375
    4. '   ' → logprob: -12.136077880859375
    5. ' ' → logprob: -12.511077880859375
    6. '×' → logprob: -12.636077880859375
    7. ' *' → logprob: -12.886077880859375
    8. '*' → logprob: -13.136077880859375
    9. ' ×' → logprob: -13.761077880859375
    10. '	x' → logprob: -14.136077880859375

Token 122: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.698698704596609e-05
    2. ' n' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.750097274780273
    4. 'int' → logprob: -15.750097274780273
    5. ' ' → logprob: -16.500097274780273
    6. '	n' → logprob: -16.625097274780273
    7. '  ' → logprob: -16.875097274780273
    8. '<|end|>' → logprob: -17.000097274780273
    9. '```' → logprob: -17.250097274780273
    10. 'nne' → logprob: -17.250097274780273

Token 123: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7880885601043701
    2. ' =' → logprob: -0.9130885601043701
    3. 'ne' → logprob: -2.28808856010437
    4. 'n' → logprob: -4.163088798522949
    5. ' ne' → logprob: -5.038088798522949
    6. '=' → logprob: -5.288088798522949
    7. ' neko' → logprob: -5.288088798522949
    8. '
' → logprob: -5.663088798522949
    9. ' n' → logprob: -6.413088798522949
    10. '    
' → logprob: -7.038088798522949

Token 124: '   ' (ID: 271)
  Prédit: ' neko'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neko' → logprob: -0.5148760676383972
    2. 'ne' → logprob: -1.139876127243042
    3. '   ' → logprob: -3.639876127243042
    4. 'n' → logprob: -3.639876127243042
    5. 'nek' → logprob: -4.639875888824463
    6. ' =' → logprob: -5.389875888824463
    7. ' ' → logprob: -5.639875888824463
    8. '```' → logprob: -6.014875888824463
    9. ' ne' → logprob: -6.139875888824463
    10. '
' → logprob: -6.514875888824463

Token 125: ' neko' (ID: 125590)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.023316286504268646
    2. ' neko' → logprob: -3.7733163833618164
    3. 'nek' → logprob: -10.273316383361816
    4. 'n' → logprob: -11.523316383361816
    5. ' ne' → logprob: -11.898316383361816
    6. ' ' → logprob: -12.273316383361816
    7. '   ' → logprob: -12.398316383361816
    8. ' nek' → logprob: -12.773316383361816
    9. '```' → logprob: -13.023316383361816
    10. '
' → logprob: -14.148316383361816

Token 126: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -4.692145012086257e-05
    2. '_num' → logprob: -10.750046730041504
    3. '_n' → logprob: -11.625046730041504
    4. '_vals' → logprob: -12.250046730041504
    5. '_' → logprob: -12.750046730041504
    6. '_numbers' → logprob: -13.000046730041504
    7. ' _' → logprob: -14.000046730041504
    8. '_s' → logprob: -14.000046730041504
    9. '_probs' → logprob: -14.375046730041504
    10. '_chars' → logprob: -14.625046730041504

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. '=[' → logprob: -16.068147659301758
    4. ' ' → logprob: -16.318147659301758
    5. '=[]' → logprob: -16.818147659301758
    6. ' =[' → logprob: -17.568147659301758
    7. ')' → logprob: -17.818147659301758
    8. '   ' → logprob: -18.568147659301758
    9. '=list' → logprob: -19.068147659301758
    10. '＝' → logprob: -19.318147659301758

Token 128: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.253227174282074
    2. '[list' → logprob: -1.5032272338867188
    3. '[' → logprob: -6.753227233886719
    4. '[List' → logprob: -9.003227233886719
    5. '[n' → logprob: -12.753227233886719
    6. '[int' → logprob: -13.878227233886719
    7. '   ' → logprob: -14.378227233886719
    8. '[next' → logprob: -14.753227233886719
    9. '[line' → logprob: -15.128227233886719
    10. ' ' → logprob: -15.128227233886719

Token 129: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00020497082732617855
    2. ' list' → logprob: -8.500205039978027
    3. '[list' → logprob: -13.500205039978027
    4. '(list' → logprob: -18.50020408630371
    5. '=list' → logprob: -19.62520408630371
    6. ':list' → logprob: -20.12520408630371
    7. ' [' → logprob: -20.25020408630371
    8. 'List' → logprob: -20.25020408630371
    9. '	list' → logprob: -20.37520408630371
    10. '[' → logprob: -20.50020408630371

Token 130: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0052721803076565266
    2. '(list' → logprob: -5.255272388458252
    3. '(int' → logprob: -10.505271911621094
    4. ' (' → logprob: -12.130271911621094
    5. '(' → logprob: -12.755271911621094
    6. 'map' → logprob: -13.005271911621094
    7. ',map' → logprob: -16.130271911621094
    8. '(lambda' → logprob: -16.505271911621094
    9. '.map' → logprob: -16.880271911621094
    10. 'int' → logprob: -17.130271911621094

Token 131: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003212805895600468
    2. 'int' → logprob: -8.500321388244629
    3. '[int' → logprob: -9.500321388244629
    4. '<int' → logprob: -11.000321388244629
    5. '=int' → logprob: -11.375321388244629
    6. ']int' → logprob: -11.750321388244629
    7. ',int' → logprob: -12.500321388244629
    8. ' (' → logprob: -14.250321388244629
    9. '(lambda' → logprob: -14.250321388244629
    10. '(' → logprob: -14.625321388244629

Token 132: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004909835290163755
    2. ',' → logprob: -5.754909992218018
    3. ',int' → logprob: -6.379909992218018
    4. 'int' → logprob: -10.75490951538086
    5. '=int' → logprob: -12.25490951538086
    6. '<int' → logprob: -12.62990951538086
    7. '(input' → logprob: -13.50490951538086
    8. '[int' → logprob: -13.75490951538086
    9. ' (' → logprob: -14.00490951538086
    10. '(' → logprob: -14.00490951538086

Token 133: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0016668500611558557
    2. 'input' → logprob: -6.626667022705078
    3. ' int' → logprob: -8.001667022705078
    4. ' input' → logprob: -12.251667022705078
    5. '(int' → logprob: -14.126667022705078
    6. '[int' → logprob: -15.251667022705078
    7. '<int' → logprob: -16.751667022705078
    8. ' ' → logprob: -17.501667022705078
    9. '   ' → logprob: -18.001667022705078
    10. ')' → logprob: -18.126667022705078

Token 134: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.625
    3. '.' → logprob: -17.125
    4. ' ().' → logprob: -17.875
    5. ').' → logprob: -18.25
    6. '.split' → logprob: -18.875
    7. '()).' → logprob: -19.75
    8. '()[' → logprob: -19.875
    9. ' .' → logprob: -20.0
    10. '.readline' → logprob: -20.625

Token 135: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.5
    3. '(split' → logprob: -16.5
    4. 'spl' → logprob: -17.375
    5. 'strip' → logprob: -19.375
    6. ')' → logprob: -19.625
    7. 'sys' → logprob: -20.0
    8. 'read' → logprob: -20.5
    9. '_split' → logprob: -21.0
    10. '.split' → logprob: -21.25

Token 136: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00010223194840364158
    2. '()' → logprob: -10.125102043151855
    3. '())).' → logprob: -10.750102043151855
    4. '())' → logprob: -10.875102043151855
    5. '().' → logprob: -11.750102043151855
    6. '()[' → logprob: -11.875102043151855
    7. '))' → logprob: -13.250102043151855
    8. '())))' → logprob: -13.750102043151855
    9. '()));' → logprob: -13.875102043151855
    10. '()))
' → logprob: -14.000102043151855

Token 137: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012601356022059917
    2. 'for' → logprob: -4.637601375579834
    3. ')' → logprob: -6.137601375579834
    4. ' for' → logprob: -7.512601375579834
    5. '())' → logprob: -9.012600898742676
    6. ' ()' → logprob: -12.512600898742676
    7. '()]' → logprob: -12.512600898742676
    8. '()
' → logprob: -13.762600898742676
    9. '(' → logprob: -13.887600898742676
    10. ']' → logprob: -14.262600898742676

Token 138: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35310906171798706
    2. ' range' → logprob: -1.6031091213226318
    3. ' _' → logprob: -2.353109121322632
    4. 'range' → logprob: -6.853108882904053
    5. '_range' → logprob: -9.603109359741211
    6. ' in' → logprob: -10.353109359741211
    7. '(range' → logprob: -14.853109359741211
    8. ' ' → logprob: -15.728109359741211
    9. ' ' → logprob: -15.853109359741211
    10. 'in' → logprob: -16.22810935974121

Token 139: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09593971818685532
    2. ' in' → logprob: -2.8459396362304688
    3. ' range' → logprob: -4.095939636230469
    4. 'in' → logprob: -4.095939636230469
    5. '_' → logprob: -9.345939636230469
    6. '(range' → logprob: -10.720939636230469
    7. '_range' → logprob: -11.970939636230469
    8. '(' → logprob: -12.595939636230469
    9. '	range' → logprob: -13.970939636230469
    10. ' ' → logprob: -14.720939636230469

Token 140: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164801687002182
    2. ' range' → logprob: -4.264164924621582
    3. '(range' → logprob: -13.764164924621582
    4. '	range' → logprob: -16.014163970947266
    5. '_range' → logprob: -16.639163970947266
    6. '.range' → logprob: -19.139163970947266
    7. ' xrange' → logprob: -19.889163970947266
    8. '_' → logprob: -19.889163970947266
    9. '   ' → logprob: -20.389163970947266
    10. '
' → logprob: -20.514163970947266

Token 141: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2352385965641588e-05
    2. 'n' → logprob: -11.625012397766113
    3. '(' → logprob: -12.625012397766113
    4. ' (' → logprob: -17.375011444091797
    5. 'range' → logprob: -17.750011444091797
    6. '(range' → logprob: -18.125011444091797
    7. '
' → logprob: -19.250011444091797
    8. ' n' → logprob: -19.375011444091797
    9. '(m' → logprob: -20.250011444091797
    10. 'import' → logprob: -20.250011444091797

Token 142: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.158350151963532e-05
    2. ']' → logprob: -9.750061988830566
    3. ')' → logprob: -13.500061988830566
    4. '])]' → logprob: -14.250061988830566
    5. ')]
' → logprob: -14.500061988830566
    6. '])' → logprob: -14.625061988830566
    7. ')])' → logprob: -16.25006103515625
    8. '))' → logprob: -17.00006103515625
    9. '()]' → logprob: -17.00006103515625
    10. ')]

' → logprob: -17.00006103515625

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8100987076759338
    2. '#' → logprob: -0.9350987076759338
    3. '
' → logprob: -2.310098648071289
    4. 'def' → logprob: -2.935098648071289
    5. '<|end|>' → logprob: -5.935098648071289
    6. '    
' → logprob: -6.435098648071289
    7. '<|end|>' → logprob: -6.810098648071289
    8. '```' → logprob: -7.185098648071289
    9. 'max' → logprob: -7.560098648071289
    10. ' #' → logprob: -8.060098648071289

Token 144: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6946817636489868
    2. 'dp' → logprob: -1.1946817636489868
    3. 'score' → logprob: -2.3196816444396973
    4. 'def' → logprob: -3.9446816444396973
    5. 'diff' → logprob: -3.9446816444396973
    6. 'scores' → logprob: -4.069681644439697
    7. '   ' → logprob: -5.069681644439697
    8. 'result' → logprob: -5.069681644439697
    9. 'us' → logprob: -5.194681644439697
    10. 'points' → logprob: -6.194681644439697

Token 145: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39598673582077026
    2. 'def' → logprob: -1.520986795425415
    3. 'dp' → logprob: -2.895986795425415
    4. 'result' → logprob: -3.770986795425415
    5. 'score' → logprob: -5.520986557006836
    6. 'max' → logprob: -6.020986557006836
    7. 'dire' → logprob: -6.270986557006836
    8. 'results' → logprob: -6.270986557006836
    9. 'scores' → logprob: -6.395986557006836
    10. 'us' → logprob: -6.520986557006836

Token 146: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8948372602462769
    2. ' =' → logprob: -1.7698372602462769
    3. '   ' → logprob: -1.8948372602462769
    4. ' des' → logprob: -2.1448373794555664
    5. '()' → logprob: -2.6448373794555664
    6. '#' → logprob: -4.144837379455566
    7. '=' → logprob: -4.269837379455566
    8. 's' → logprob: -4.394837379455566
    9. 'de' → logprob: -5.144837379455566
    10. 'def' → logprob: -5.269837379455566

Token 147: ' m' (ID: 284)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'scores' → logprob: -1.7725231647491455
    2. 'queries' → logprob: -2.2725231647491455
    3. 'actions' → logprob: -2.7725231647491455
    4. 'positions' → logprob: -2.7725231647491455
    5. 'moves' → logprob: -3.0225231647491455
    6. 'points' → logprob: -3.1475231647491455
    7. 'questions' → logprob: -3.2725231647491455
    8. 'gr' → logprob: -3.7725231647491455
    9. 'us' → logprob: -3.7725231647491455
    10. 'lines' → logprob: -4.085022926330566

Token 148: ' cartes' (ID: 70753)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -1.1476919651031494
    2. 'moves' → logprob: -2.0226919651031494
    3. 'operations' → logprob: -2.5226919651031494
    4. ' queries' → logprob: -2.7726919651031494
    5. 'actions' → logprob: -3.5226919651031494
    6. 'positions' → logprob: -3.6476919651031494
    7. 'lines' → logprob: -3.6476919651031494
    8. '#' → logprob: -3.6476919651031494
    9. 'questions' → logprob: -4.14769172668457
    10. ' lines' → logprob: -4.14769172668457

Token 149: ' tir' (ID: 16690)
  Prédit: 'cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cart' → logprob: -0.8897541761398315
    2. 'cards' → logprob: -1.5147541761398315
    3. ' =' → logprob: -1.8897541761398315
    4. '   ' → logprob: -2.389754295349121
    5. '_cards' → logprob: -3.014754295349121
    6. 'for' → logprob: -3.639754295349121
    7. '=' → logprob: -3.639754295349121
    8. 'car' → logprob: -5.389754295349121
    9. '_cart' → logprob: -5.389754295349121
    10. ' cartes' → logprob: -5.764754295349121

Token 150: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.00032497590291313827
    2. 'es' → logprob: -9.125325202941895
    3. 'é' → logprob: -9.375325202941895
    4. 'ée' → logprob: -9.750325202941895
    5. 'és' → logprob: -10.375325202941895
    6. 'nées' → logprob: -11.000325202941895
    7. 'ant' → logprob: -11.875325202941895
    8. 'ees' → logprob: -12.125325202941895
    9. '```' → logprob: -12.125325202941895
    10. 'e' → logprob: -12.250325202941895

Token 151: '
' (ID: 198)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.28339874744415283
    2. '   ' → logprob: -2.2833986282348633
    3. 'draw' → logprob: -2.4083986282348633
    4. 'cart' → logprob: -4.408398628234863
    5. 'for' → logprob: -4.533398628234863
    6. 'car' → logprob: -4.658398628234863
    7. 'card' → logprob: -5.283398628234863
    8. 'deck' → logprob: -5.658398628234863
    9. ' cards' → logprob: -6.533398628234863
    10. ' drawn' → logprob: -7.033398628234863

Token 152: '   ' (ID: 271)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.7562000751495361
    2. 'draw' → logprob: -1.0062000751495361
    3. '   ' → logprob: -2.631200075149536
    4. 'for' → logprob: -3.756200075149536
    5. 'card' → logprob: -4.256199836730957
    6. 'cart' → logprob: -4.381199836730957
    7. ' cards' → logprob: -5.006199836730957
    8. 'car' → logprob: -5.006199836730957
    9. ' drawn' → logprob: -5.006199836730957
    10. 'deck' → logprob: -5.381199836730957

Token 153: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.9142188429832458
    2. ' cards' → logprob: -1.0392189025878906
    3. ' drawn' → logprob: -2.1642189025878906
    4. 'draw' → logprob: -2.1642189025878906
    5. ' draws' → logprob: -5.164218902587891
    6. ' cartes' → logprob: -5.914218902587891
    7. ' draw' → logprob: -7.164218902587891
    8. 'cart' → logprob: -7.289218902587891
    9. 'called' → logprob: -7.414218902587891
    10. ' card' → logprob: -7.789218902587891

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014168561436235905
    2. '=' → logprob: -4.264168739318848
    3. ' ' → logprob: -12.514168739318848
    4. '   ' → logprob: -15.264168739318848
    5. ')' → logprob: -15.389168739318848
    6. '  ' → logprob: -15.514168739318848
    7. ',' → logprob: -15.764168739318848
    8. '=[]' → logprob: -16.13916778564453
    9. '_' → logprob: -16.26416778564453
    10. '[]' → logprob: -16.76416778564453

Token 155: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5652641654014587
    2. ' [' → logprob: -1.1902642250061035
    3. '[input' → logprob: -2.1902642250061035
    4. '[' → logprob: -4.8152642250061035
    5. ' list' → logprob: -5.4402642250061035
    6. 'list' → logprob: -5.8152642250061035
    7. '[List' → logprob: -9.565263748168945
    8. '[line' → logprob: -9.815263748168945
    9. '[int' → logprob: -9.815263748168945
    10. 'input' → logprob: -10.815263748168945

Token 156: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013111637905240059
    2. 'input' → logprob: -4.888111591339111
    3. 'tuple' → logprob: -5.513111591339111
    4. 'list' → logprob: -7.013111591339111
    5. ' int' → logprob: -7.638111591339111
    6. 'map' → logprob: -10.38811206817627
    7. ' tuple' → logprob: -10.88811206817627
    8. ' input' → logprob: -11.38811206817627
    9. '   ' → logprob: -12.51311206817627
    10. '
' → logprob: -13.26311206817627

Token 157: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00023929782037157565
    2. '(' → logprob: -8.375239372253418
    3. 'input' → logprob: -11.875239372253418
    4. ' (' → logprob: -13.750239372253418
    5. '(x' → logprob: -15.250239372253418
    6. ',input' → logprob: -15.625239372253418
    7. ' input' → logprob: -15.750239372253418
    8. '(in' → logprob: -17.1252384185791
    9. '=input' → logprob: -17.2502384185791
    10. '(
' → logprob: -17.5002384185791

Token 158: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10041531175374985
    2. '().' → logprob: -2.3504152297973633
    3. '()' → logprob: -8.600415229797363
    4. '()
' → logprob: -11.850415229797363
    5. '()]' → logprob: -11.850415229797363
    6. '())
' → logprob: -12.225415229797363
    7. ')' → logprob: -12.975415229797363
    8. ' ())' → logprob: -13.225415229797363
    9. '(' → logprob: -14.975415229797363
    10. '()),' → logprob: -15.225415229797363

Token 159: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07765451073646545
    2. '().' → logprob: -3.0776546001434326
    3. '())' → logprob: -3.5776546001434326
    4. ')' → logprob: -7.4526543617248535
    5. '.strip' → logprob: -10.077654838562012
    6. '()]' → logprob: -10.702654838562012
    7. '(' → logprob: -11.077654838562012
    8. '.readline' → logprob: -11.202654838562012
    9. 'strip' → logprob: -11.327654838562012
    10. '()
' → logprob: -11.577654838562012

Token 160: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5788010358810425
    2. ' range' → logprob: -0.8288010358810425
    3. ' _' → logprob: -6.328801155090332
    4. 'range' → logprob: -7.078801155090332
    5. '_range' → logprob: -8.703801155090332
    6. ' in' → logprob: -9.703801155090332
    7. ' ' → logprob: -12.828801155090332
    8. '	range' → logprob: -14.828801155090332
    9. '(range' → logprob: -15.203801155090332
    10. 'in' → logprob: -16.328800201416016

Token 161: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005039428360760212
    2. ' range' → logprob: -7.625504016876221
    3. '_range' → logprob: -12.000503540039062
    4. '_' → logprob: -12.500503540039062
    5. 'ange' → logprob: -12.875503540039062
    6. 'in' → logprob: -13.250503540039062
    7. '(range' → logprob: -13.750503540039062
    8. '	range' → logprob: -14.375503540039062
    9. ' in' → logprob: -15.875503540039062
    10. ' ' → logprob: -18.000503540039062

Token 162: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -16.25020408630371
    4. 'ange' → logprob: -17.87520408630371
    5. '	range' → logprob: -18.50020408630371
    6. 'r' → logprob: -19.37520408630371
    7. 'ran' → logprob: -19.62520408630371
    8. 'rang' → logprob: -19.75020408630371
    9. '
' → logprob: -20.00020408630371
    10. 'm' → logprob: -20.37520408630371

Token 163: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.463036435074173e-05
    2. '(' → logprob: -11.250024795532227
    3. 'm' → logprob: -11.375024795532227
    4. ' (' → logprob: -16.875024795532227
    5. ' m' → logprob: -18.125024795532227
    6. '(M' → logprob: -18.250024795532227
    7. '	m' → logprob: -19.625024795532227
    8. ')m' → logprob: -19.750024795532227
    9. ',m' → logprob: -20.125024795532227
    10. '(n' → logprob: -20.125024795532227

Token 164: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007196996593847871
    2. ')' → logprob: -7.6257195472717285
    3. ']' → logprob: -8.375720024108887
    4. ' )' → logprob: -14.875720024108887
    5. '])]' → logprob: -15.375720024108887
    6. '])' → logprob: -15.750720024108887
    7. ')])' → logprob: -15.750720024108887
    8. ')}' → logprob: -16.00071907043457
    9. '))' → logprob: -16.37571907043457
    10. ')],' → logprob: -16.75071907043457

Token 165: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7331281900405884
    2. '   ' → logprob: -1.1081281900405884
    3. '<|end|>' → logprob: -2.483128070831299
    4. 'def' → logprob: -3.483128070831299
    5. '#' → logprob: -3.608128070831299
    6. '    
' → logprob: -3.983128070831299
    7. '<|end|>' → logprob: -4.608128070831299
    8. ')' → logprob: -5.733128070831299
    9. '

' → logprob: -5.983128070831299
    10. '  
' → logprob: -6.483128070831299

Token 166: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.886299192905426
    2. 'us' → logprob: -1.3862991333007812
    3. 'marked' → logprob: -2.0112991333007812
    4. 'used' → logprob: -2.8862991333007812
    5. 'def' → logprob: -3.0112991333007812
    6. '   ' → logprob: -3.6362991333007812
    7. 'board' → logprob: -4.886299133300781
    8. 'called' → logprob: -5.011299133300781
    9. 'visited' → logprob: -5.136299133300781
    10. 'marks' → logprob: -5.511299133300781

Token 167: ' Pré' (ID: 86400)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3966158330440521
    2. 'us' → logprob: -2.021615743637085
    3. 'def' → logprob: -2.271615743637085
    4. 'visited' → logprob: -3.771615743637085
    5. 'used' → logprob: -3.771615743637085
    6. 'dp' → logprob: -4.146615982055664
    7. 'from' → logprob: -5.271615982055664
    8. 'for' → logprob: -5.771615982055664
    9. 'marked' → logprob: -5.771615982055664
    10. 'seen' → logprob: -6.271615982055664

Token 168: '-tr' (ID: 15461)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -1.312179446220398
    2. 'sum' → logprob: -1.562179446220398
    3. 'dict' → logprob: -1.812179446220398
    4. 'sent' → logprob: -1.937179446220398
    5. 'd' → logprob: -2.3121795654296875
    6. 's' → logprob: -3.5621795654296875
    7. 'paration' → logprob: -3.9371795654296875
    8. 'c' → logprob: -4.1871795654296875
    9. 'v' → logprob: -4.3121795654296875
    10. 'cision' → logprob: -5.4371795654296875

Token 169: 'ait' (ID: 1271)
  Prédit: 'ait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.04502706602215767
    2. 'rait' → logprob: -3.170027017593384
    3. 'ra' → logprob: -7.295027256011963
    4. 'a' → logprob: -7.670027256011963
    5. 'trait' → logprob: -7.670027256011963
    6. 'ai' → logprob: -8.795026779174805
    7. 'aient' → logprob: -9.545026779174805
    8. 'processing' → logprob: -10.045026779174805
    9. 'rem' → logprob: -11.045026779174805
    10. 'r' → logprob: -11.045026779174805

Token 170: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.001760148094035685
    2. 'ment' → logprob: -7.001760005950928
    3. 'ion' → logprob: -8.251760482788086
    4. 'ements' → logprob: -8.626760482788086
    5. 'er' → logprob: -9.001760482788086
    6. 'e' → logprob: -9.251760482788086
    7. '#' → logprob: -9.501760482788086
    8. '```' → logprob: -10.126760482788086
    9. 'rement' → logprob: -10.876760482788086
    10. '_' → logprob: -12.001760482788086

Token 171: ' :' (ID: 712)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.27569580078125
    2. 'us' → logprob: -2.15069580078125
    3. 'marked' → logprob: -2.65069580078125
    4. '<|end|>' → logprob: -2.65069580078125
    5. ',' → logprob: -3.40069580078125
    6. ':' → logprob: -3.52569580078125
    7. 'counts' → logprob: -3.90069580078125
    8. ' us' → logprob: -3.90069580078125
    9. '```' → logprob: -3.90069580078125
    10. 'num' → logprob: -4.02569580078125

Token 172: ' pour' (ID: 1930)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.2952873408794403
    2. '#' → logprob: -2.0452873706817627
    3. 'def' → logprob: -3.9202873706817627
    4. 'marked' → logprob: -3.9202873706817627
    5. 'used' → logprob: -4.170287132263184
    6. 'from' → logprob: -4.295287132263184
    7. 'pos' → logprob: -4.545287132263184
    8. 'positions' → logprob: -4.670287132263184
    9. 'visited' → logprob: -4.670287132263184
    10. 'indices' → logprob: -6.170287132263184

Token 173: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2877706289291382
    2. ' each' → logprob: -1.5377706289291382
    3. 'each' → logprob: -1.7877706289291382
    4. ' us' → logprob: -2.1627707481384277
    5. 'us' → logprob: -2.2877707481384277
    6. ' chaque' → logprob: -2.4127707481384277
    7. 'i' → logprob: -4.037770748138428
    8. 'row' → logprob: -6.287770748138428
    9. 'def' → logprob: -6.412770748138428
    10. ' def' → logprob: -6.537770748138428

Token 174: ' joueur' (ID: 72629)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5730783939361572
    2. 'card' → logprob: -1.5730783939361572
    3. 'number' → logprob: -2.8230783939361572
    4. 'matrix' → logprob: -3.1980783939361572
    5. ' card' → logprob: -3.5730783939361572
    6. 'token' → logprob: -4.198078155517578
    7. 'player' → logprob: -4.448078155517578
    8. 'i' → logprob: -4.698078155517578
    9. ' i' → logprob: -4.698078155517578
    10. 'value' → logprob: -4.823078155517578

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00978170707821846
    2. ':' → logprob: -5.509781837463379
    3. ' ,' → logprob: -6.009781837463379
    4. '#' → logprob: -7.009781837463379
    5. '<|end|>' → logprob: -7.759781837463379
    6. 'def' → logprob: -8.509781837463379
    7. ')' → logprob: -8.759781837463379
    8. '   ' → logprob: -9.259781837463379
    9. '_,' → logprob: -9.259781837463379
    10. 'us' → logprob: -9.259781837463379

Token 176: ' créer' (ID: 40938)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5127662420272827
    2. 'def' → logprob: -1.8877662420272827
    3. ' on' → logprob: -2.7627663612365723
    4. 'us' → logprob: -3.1377663612365723
    5. 'marked' → logprob: -3.5127663612365723
    6. ' #' → logprob: -4.012766361236572
    7. ' marked' → logprob: -4.012766361236572
    8. 'on' → logprob: -4.012766361236572
    9. 'for' → logprob: -5.137766361236572
    10. ' us' → logprob: -5.262766361236572

Token 177: ' une' (ID: 2463)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.36690494418144226
    2. 'un' → logprob: -2.2419049739837646
    3. ' deux' → logprob: -2.3669049739837646
    4. 'd' → logprob: -3.2419049739837646
    5. 'une' → logprob: -3.3669049739837646
    6. 'des' → logprob: -4.2419047355651855
    7. ' un' → logprob: -5.3669047355651855
    8. ' des' → logprob: -5.4919047355651855
    9. ' une' → logprob: -6.1169047355651855
    10. 'two' → logprob: -6.3669047355651855

Token 178: ' table' (ID: 3293)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7091131806373596
    2. 'dict' → logprob: -1.2091131210327148
    3. 'dictionary' → logprob: -2.209113121032715
    4. 'mapping' → logprob: -3.334113121032715
    5. 'position' → logprob: -3.959113121032715
    6. 'default' → logprob: -4.459113121032715
    7. 'lookup' → logprob: -5.334113121032715
    8. 'def' → logprob: -5.334113121032715
    9. 'gr' → logprob: -5.584113121032715
    10. 'map' → logprob: -5.959113121032715

Token 179: ' pour' (ID: 1930)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9414741396903992
    2. '_de' → logprob: -1.566474199295044
    3. 'def' → logprob: -2.441474199295044
    4. '_' → logprob: -2.566474199295044
    5. '_des' → logprob: -3.941474199295044
    6. '_of' → logprob: -3.941474199295044
    7. ' de' → logprob: -4.066473960876465
    8. ' =' → logprob: -4.066473960876465
    9. 'des' → logprob: -4.191473960876465
    10. '_us' → logprob: -4.316473960876465

Token 180: ' retrouver' (ID: 53435)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8768527507781982
    2. ' mar' → logprob: -1.5018527507781982
    3. 'cha' → logprob: -2.3768527507781982
    4. 'acc' → logprob: -3.5018527507781982
    5. ' vérifier' → logprob: -3.5018527507781982
    6. 're' → logprob: -3.7518527507781982
    7. 'v' → logprob: -4.001852989196777
    8. 'mar' → logprob: -4.126852989196777
    9. 'su' → logprob: -4.501852989196777
    10. ' savoir' → logprob: -4.626852989196777

Token 181: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5072405338287354
    2. ' les' → logprob: -2.1322405338287354
    3. ' l' → logprob: -2.3822405338287354
    4. 'les' → logprob: -2.5072405338287354
    5. ',' → logprob: -3.1322405338287354
    6. 'la' → logprob: -4.257240295410156
    7. 'l' → logprob: -4.507240295410156
    8. '<|end|>' → logprob: -4.507240295410156
    9. ' rapidement' → logprob: -4.757240295410156
    10. 'le' → logprob: -5.007240295410156

Token 182: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.131488636136055
    2. 'ligne' → logprob: -3.131488561630249
    3. ' position' → logprob: -3.631488561630249
    4. 'pos' → logprob: -4.131488800048828
    5. 'positions' → logprob: -5.006488800048828
    6. 'case' → logprob: -5.006488800048828
    7. 'dern' → logprob: -5.506488800048828
    8. 'der' → logprob: -5.756488800048828
    9. 'coord' → logprob: -6.006488800048828
    10. ' ligne' → logprob: -6.256488800048828

Token 183: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0102676153182983
    2. '<|end|>' → logprob: -1.3852676153182983
    3. 's' → logprob: -2.135267734527588
    4. ' (' → logprob: -2.635267734527588
    5. '(s' → logprob: -3.135267734527588
    6. 'des' → logprob: -3.260267734527588
    7. '[' → logprob: -3.385267734527588
    8. ' of' → logprob: -4.385267734527588
    9. ' des' → logprob: -4.385267734527588
    10. '[]' → logprob: -4.635267734527588

Token 184: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14167816936969757
    2. ' la' → logprob: -2.2666780948638916
    3. 'leur' → logprob: -4.891678333282471
    4. 'us' → logprob: -5.516678333282471
    5. 'leurs' → logprob: -5.891678333282471
    6. 'mat' → logprob: -6.141678333282471
    7. 'the' → logprob: -6.266678333282471
    8. 'une' → logprob: -6.391678333282471
    9. ' leurs' → logprob: -6.891678333282471
    10. 'l' → logprob: -7.016678333282471

Token 185: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.608818531036377
    2. 'gr' → logprob: -0.858818531036377
    3. 'matrix' → logprob: -3.733818531036377
    4. 'grid' → logprob: -5.483818531036377
    5. 'board' → logprob: -6.858818531036377
    6. 'plate' → logprob: -7.358818531036377
    7. 'ligne' → logprob: -7.483818531036377
    8. '```' → logprob: -7.983818531036377
    9. 'm' → logprob: -8.483818054199219
    10. 'car' → logprob: -8.733818054199219

Token 186: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -5.061676347395405e-05
    2. 'ices' → logprob: -10.12505054473877
    3. '```' → logprob: -13.00005054473877
    4. 'ix' → logprob: -13.25005054473877
    5. 'ic' → logprob: -13.50005054473877
    6. 'ce' → logprob: -14.00005054473877
    7. 'rice' → logprob: -14.37505054473877
    8. '#' → logprob: -14.87505054473877
    9. 'Ice' → logprob: -15.00005054473877
    10. 'ixe' → logprob: -15.37505054473877

Token 187: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.5598478317260742
    2. 's' → logprob: -1.8098478317260742
    3. ' of' → logprob: -2.059847831726074
    4. ' (' → logprob: -2.934847831726074
    5. '{' → logprob: -3.309847831726074
    6. '_positions' → logprob: -3.309847831726074
    7. ' ' → logprob: -3.434847831726074
    8. ' {' → logprob: -3.434847831726074
    9. ',' → logprob: -3.434847831726074
    10. '_' → logprob: -3.809847831726074

Token 188: '   ' (ID: 271)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.6255303621292114
    2. '_us' → logprob: -1.3755303621292114
    3. ' us' → logprob: -1.8755303621292114
    4. '(us' → logprob: -3.750530242919922
    5. '   ' → logprob: -3.875530242919922
    6. '_' → logprob: -6.000530242919922
    7. ' for' → logprob: -6.000530242919922
    8. 'def' → logprob: -6.375530242919922
    9. '	us' → logprob: -6.750530242919922
    10. ',' → logprob: -6.875530242919922

Token 189: ' #' (ID: 1069)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.046963587403297424
    2. ' us' → logprob: -3.171963691711426
    3. 'pos' → logprob: -6.171963691711426
    4. '   ' → logprob: -6.921963691711426
    5. 'position' → logprob: -8.421963691711426
    6. '    
' → logprob: -8.546963691711426
    7. 'positions' → logprob: -9.046963691711426
    8. 'u' → logprob: -9.796963691711426
    9. 'def' → logprob: -9.921963691711426
    10. ' positions' → logprob: -10.546963691711426

Token 190: ' des' (ID: 731)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.06709866225719452
    2. 'pos' → logprob: -3.067098617553711
    3. ' us' → logprob: -4.442098617553711
    4. 'position' → logprob: -5.817098617553711
    5. '   ' → logprob: -6.567098617553711
    6. 'positions' → logprob: -6.942098617553711
    7. 'def' → logprob: -7.442098617553711
    8. ' pos' → logprob: -8.192098617553711
    9. 'u' → logprob: -9.192098617553711
    10. '#' → logprob: -9.442098617553711

Token 191: ' nombres' (ID: 76205)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3496040999889374
    2. ' num' → logprob: -2.0996041297912598
    3. ' nombres' → logprob: -2.2246041297912598
    4. 'positions' → logprob: -3.9746041297912598
    5. 'nombre' → logprob: -4.72460412979126
    6. 'n' → logprob: -4.97460412979126
    7. ' valeurs' → logprob: -4.97460412979126
    8. 'val' → logprob: -5.22460412979126
    9. ' positions' → logprob: -5.59960412979126
    10. 'us' → logprob: -5.84960412979126

Token 192: ' donn' (ID: 20414)
  Prédit: '_us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_us' → logprob: -0.25472569465637207
    2. 'us' → logprob: -1.629725694656372
    3. ' us' → logprob: -4.004725456237793
    4. '_' → logprob: -5.129725456237793
    5. ' for' → logprob: -6.754725456237793
    6. '_u' → logprob: -7.504725456237793
    7. '(us' → logprob: -7.504725456237793
    8. 'def' → logprob: -7.754725456237793
    9. ' _' → logprob: -8.129725456237793
    10. ' of' → logprob: -8.379725456237793

Token 193: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.1068200096487999
    2. 'es' → logprob: -2.4818201065063477
    3. '   ' → logprob: -5.731820106506348
    4. 'er' → logprob: -6.106820106506348
    5. 'in' → logprob: -6.231820106506348
    6. 'e' → logprob: -6.606820106506348
    7. 'is' → logprob: -6.981820106506348
    8. '       ' → logprob: -7.106820106506348
    9. '=' → logprob: -7.356820106506348
    10. 'ed' → logprob: -7.606820106506348

Token 194: '.
' (ID: 558)
  Prédit: ' us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' us' → logprob: -0.4221120774745941
    2. 'us' → logprob: -1.1721121072769165
    3. ' for' → logprob: -4.422111988067627
    4. '   ' → logprob: -4.797111988067627
    5. '_us' → logprob: -5.797111988067627
    6. '(us' → logprob: -5.922111988067627
    7. 'def' → logprob: -6.547111988067627
    8. '
' → logprob: -6.547111988067627
    9. ',' → logprob: -6.672111988067627
    10. 'for' → logprob: -6.922111988067627

Token 195: '   ' (ID: 271)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.4650123715400696
    2. ' us' → logprob: -1.0900123119354248
    3. '   ' → logprob: -3.465012311935425
    4. '    
' → logprob: -6.590012550354004
    5. 'pos' → logprob: -7.340012550354004
    6. 'position' → logprob: -7.840012550354004
    7. '
' → logprob: -8.090012550354004
    8. 'u' → logprob: -8.465012550354004
    9. ' positions' → logprob: -8.465012550354004
    10. 'positions' → logprob: -8.465012550354004

Token 196: ' #' (ID: 1069)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.10555794835090637
    2. ' us' → logprob: -2.730557918548584
    3. 'pos' → logprob: -4.105557918548584
    4. '   ' → logprob: -5.355557918548584
    5. '    
' → logprob: -5.355557918548584
    6. '
' → logprob: -5.480557918548584
    7. 'position' → logprob: -6.355557918548584
    8. 'positions' → logprob: -7.105557918548584
    9. '  
' → logprob: -7.480557918548584
    10. ' 
' → logprob: -8.105558395385742

Token 197: ' Cl' (ID: 2190)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.09914331883192062
    2. 'pos' → logprob: -2.5991432666778564
    3. ' us' → logprob: -4.3491435050964355
    4. 'position' → logprob: -5.4741435050964355
    5. 'positions' → logprob: -6.7241435050964355
    6. ' pos' → logprob: -7.7241435050964355
    7. '   ' → logprob: -7.9741435050964355
    8. 'def' → logprob: -8.099143028259277
    9. '#' → logprob: -8.349143028259277
    10. 'u' → logprob: -9.099143028259277

Token 198: 'é' (ID: 377)
  Prédit: 'ear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ear' → logprob: -0.5753165483474731
    2. 'ass' → logprob: -1.5753165483474731
    3. 'asses' → logprob: -3.2003164291381836
    4. 'ean' → logprob: -3.2003164291381836
    5. '#' → logprob: -3.8253164291381836
    6. 'e' → logprob: -3.8253164291381836
    7. '   ' → logprob: -4.450316429138184
    8. 'positions' → logprob: -4.575316429138184
    9. '_positions' → logprob: -4.575316429138184
    10. 'es' → logprob: -4.700316429138184

Token 199: ' =' (ID: 314)
  Prédit: '_us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -0.6782571077346802
    2. ' =' → logprob: -1.5532571077346802
    3. '_u' → logprob: -2.6782569885253906
    4. 's' → logprob: -2.6782569885253906
    5. '_pos' → logprob: -3.4282569885253906
    6. '_positions' → logprob: -3.6782569885253906
    7. 'u' → logprob: -3.9282569885253906
    8. '_' → logprob: -4.053256988525391
    9. ':' → logprob: -4.553256988525391
    10. '_to' → logprob: -4.928256988525391

Token 200: ' nombre' (ID: 9733)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.2003207802772522
    2. 'nombre' → logprob: -2.5753207206726074
    3. ' number' → logprob: -2.7003207206726074
    4. 'num' → logprob: -4.200320720672607
    5. ' nombre' → logprob: -4.200320720672607
    6. 'value' → logprob: -5.825320720672607
    7. 'int' → logprob: -6.700320720672607
    8. '(number' → logprob: -7.075320720672607
    9. 'n' → logprob: -7.200320720672607
    10. '(int' → logprob: -8.200321197509766

Token 201: ',' (ID: 11)
  Prédit: '_us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -0.0766032263636589
    2. '_' → logprob: -3.7016031742095947
    3. '_positions' → logprob: -4.451603412628174
    4. ' =' → logprob: -4.576603412628174
    5. ',' → logprob: -5.076603412628174
    6. '_u' → logprob: -5.326603412628174
    7. '_pos' → logprob: -5.576603412628174
    8. 'us' → logprob: -5.701603412628174
    9. '   ' → logprob: -6.326603412628174
    10. '_position' → logprob: -6.576603412628174

Token 202: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3132764399051666
    2. ' valeur' → logprob: -1.8132764101028442
    3. ' val' → logprob: -3.563276529312134
    4. ' #' → logprob: -3.688276529312134
    5. '#' → logprob: -3.938276529312134
    6. ' value' → logprob: -4.438276290893555
    7. 'value' → logprob: -4.563276290893555
    8. 'Vale' → logprob: -6.063276290893555
    9. '_val' → logprob: -6.188276290893555
    10. ' ' → logprob: -6.563276290893555

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5016384720802307
    2. ' =' → logprob: -1.001638412475586
    3. ':' → logprob: -3.626638412475586
    4. ')' → logprob: -8.626638412475586
    5. ' :' → logprob: -8.751638412475586
    6. '[' → logprob: -9.126638412475586
    7. ' (' → logprob: -10.001638412475586
    8. '   ' → logprob: -11.001638412475586
    9. ']' → logprob: -11.251638412475586
    10. '=lambda' → logprob: -11.501638412475586

Token 204: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7878314852714539
    2. '(u' → logprob: -1.0378315448760986
    3. ' (' → logprob: -2.5378315448760986
    4. '(lambda' → logprob: -3.2878315448760986
    5. '(x' → logprob: -3.4128315448760986
    6. '(i' → logprob: -4.4128313064575195
    7. '(position' → logprob: -4.7878313064575195
    8. '(None' → logprob: -4.7878313064575195
    9. '(' → logprob: -5.1628313064575195
    10. '(a' → logprob: -6.2878313064575195

Token 205: 'ligne' (ID: 94660)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7019446492195129
    2. 'x' → logprob: -1.4519445896148682
    3. 'i' → logprob: -2.076944589614868
    4. 'ligne' → logprob: -2.326944589614868
    5. ' i' → logprob: -4.451944828033447
    6. ' ligne' → logprob: -4.701944828033447
    7. ' row' → logprob: -4.951944828033447
    8. ' x' → logprob: -5.076944828033447
    9. 'line' → logprob: -5.201944828033447
    10. ' (' → logprob: -6.076944828033447

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.587483221665025e-05
    2. ' ,' → logprob: -10.500065803527832
    3. '   ' → logprob: -10.750065803527832
    4. ')' → logprob: -12.375065803527832
    5. '[' → logprob: -12.500065803527832
    6. ',num' → logprob: -14.125065803527832
    7. '_,' → logprob: -14.125065803527832
    8. ',n' → logprob: -14.250065803527832
    9. ',col' → logprob: -14.375065803527832
    10. ',index' → logprob: -14.500065803527832

Token 207: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.47524380683898926
    2. ' colonne' → logprob: -0.9752438068389893
    3. 'column' → logprob: -7.60024356842041
    4. ' col' → logprob: -7.60024356842041
    5. 'colon' → logprob: -9.22524356842041
    6. ' ' → logprob: -10.47524356842041
    7. ' colon' → logprob: -11.10024356842041
    8. 'indice' → logprob: -12.10024356842041
    9. ' column' → logprob: -12.60024356842041
    10. '	col' → logprob: -12.97524356842041

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.286852345103398e-05
    2. ')}' → logprob: -10.625042915344238
    3. '}' → logprob: -11.375042915344238
    4. ' )' → logprob: -12.625042915344238
    5. '),' → logprob: -13.000042915344238
    6. ')
' → logprob: -14.500042915344238
    7. '   ' → logprob: -16.000041961669922
    8. ' ' → logprob: -16.000041961669922
    9. ',' → logprob: -16.125041961669922
    10. '[' → logprob: -16.250041961669922

Token 209: '   ' (ID: 271)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.03350713849067688
    2. ' us' → logprob: -3.7835071086883545
    3. '   ' → logprob: -4.658507347106934
    4. 'u' → logprob: -7.908507347106934
    5. 'pos' → logprob: -9.283507347106934
    6. '    
' → logprob: -9.658507347106934
    7. '	us' → logprob: -10.283507347106934
    8. 'def' → logprob: -10.408507347106934
    9. ' u' → logprob: -11.033507347106934
    10. ')' → logprob: -11.158507347106934

Token 210: ' pos' (ID: 1253)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.10435178875923157
    2. 'pos' (adapté à ' pos') → logprob: -2.479351758956909
    3. '   ' → logprob: -4.229351997375488
    4. 'position' → logprob: -7.729351997375488
    5. 'positions' → logprob: -9.104351997375488
    6. ' us' → logprob: -9.104351997375488
    7. ' pos' → logprob: -10.604351997375488
    8. 'def' → logprob: -11.479351997375488
    9. 'u' → logprob: -11.854351997375488
    10. '    
' → logprob: -12.104351997375488

Token 211: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -0.0035108684096485376
    2. '_u' → logprob: -6.75351095199585
    3. ' =' → logprob: -7.00351095199585
    4. '_' → logprob: -7.50351095199585
    5. 's' → logprob: -7.62851095199585
    6. 'us' → logprob: -8.503510475158691
    7. 'Us' → logprob: -9.878510475158691
    8. '=' → logprob: -10.628510475158691
    9. '_um' → logprob: -10.628510475158691
    10. 'ition' → logprob: -11.628510475158691

Token 212: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -5.478889215737581e-05
    2. '_' → logprob: -10.875054359436035
    3. 'a' → logprob: -10.875054359436035
    4. ' =' → logprob: -12.750054359436035
    5. 'ag' → logprob: -12.875054359436035
    6. '=' → logprob: -13.125054359436035
    7. '   ' → logprob: -13.500054359436035
    8. '[' → logprob: -13.750054359436035
    9. 'age' → logprob: -13.750054359436035
    10. '__' → logprob: -14.250054359436035

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061988748610019684
    2. ' =' → logprob: -2.8119888305664062
    3. '_' → logprob: -11.436988830566406
    4. '={}' → logprob: -12.311988830566406
    5. '_pos' → logprob: -12.936988830566406
    6. 's' → logprob: -13.811988830566406
    7. '_us' → logprob: -14.561988830566406
    8. '[' → logprob: -14.561988830566406
    9. '={' → logprob: -14.686988830566406
    10. '_=' → logprob: -15.186988830566406

Token 214: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0016795829869806767
    2. ' {}' → logprob: -6.501679420471191
    3. 'dict' → logprob: -9.251679420471191
    4. '{' → logprob: -10.376679420471191
    5. '{}
' → logprob: -10.376679420471191
    6. ' dict' → logprob: -11.501679420471191
    7. '[' → logprob: -12.001679420471191
    8. ' [' → logprob: -13.876679420471191
    9. '{}

' → logprob: -14.001679420471191
    10. ' {}
' → logprob: -14.126679420471191

Token 215: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1626882702112198
    2. ' for' → logprob: -1.9126882553100586
    3. 'pos' → logprob: -6.287688255310059
    4. '   ' → logprob: -7.662688255310059
    5. '	for' → logprob: -9.537688255310059
    6. ' pos' → logprob: -10.912688255310059
    7. '    
' → logprob: -11.662688255310059
    8. ' 
' → logprob: -11.787688255310059
    9. '
' → logprob: -11.787688255310059
    10. '<|end|>' → logprob: -11.912688255310059

Token 216: ' pos' (ID: 1253)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01039845123887062
    2. ' for' → logprob: -4.8853983879089355
    3. 'pos' (adapté à ' pos') → logprob: -5.8853983879089355
    4. 'i' → logprob: -12.135398864746094
    5. ' pos' → logprob: -13.635398864746094
    6. 'col' → logprob: -14.385398864746094
    7. '   ' → logprob: -14.385398864746094
    8. '	for' → logprob: -14.760398864746094
    9. 'idx' → logprob: -15.135398864746094
    10. 'line' → logprob: -16.385398864746094

Token 217: '_ne' (ID: 35498)
  Prédit: '_us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -0.1605997085571289
    2. '_ne' → logprob: -1.910599708557129
    3. '_' → logprob: -8.660599708557129
    4. '_te' → logprob: -9.535599708557129
    5. '_ut' → logprob: -10.410599708557129
    6. '_ke' → logprob: -11.285599708557129
    7. '_um' → logprob: -11.535599708557129
    8. '_pe' → logprob: -11.660599708557129
    9. '_u' → logprob: -11.785599708557129
    10. '_uc' → logprob: -11.910599708557129

Token 218: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.3977491855621338
    2. 's' → logprob: -1.7727491855621338
    3. 'k' → logprob: -1.8977491855621338
    4. 'ne' → logprob: -5.397748947143555
    5. 'us' → logprob: -6.272748947143555
    6. 'kos' → logprob: -7.272748947143555
    7. 'os' → logprob: -7.397748947143555
    8. 'ok' → logprob: -8.647748947143555
    9. 'ks' → logprob: -9.522748947143555
    10. 'z' → logprob: -10.022748947143555

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0889546200633049
    2. ' =' → logprob: -2.4639546871185303
    3. '={}' → logprob: -11.33895492553711
    4. '=[]' → logprob: -14.21395492553711
    5. '＝' → logprob: -14.83895492553711
    6. '=}' → logprob: -15.08895492553711
    7. '[' → logprob: -15.08895492553711
    8. ' ' → logprob: -15.21395492553711
    9. ')' → logprob: -15.46395492553711
    10. '_=' → logprob: -15.58895492553711

Token 220: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -5.8961017202818766e-05
    2. ' {}' → logprob: -9.750059127807617
    3. '{}
' → logprob: -14.375059127807617
    4. '{}

' → logprob: -17.375059127807617
    5. '{' → logprob: -17.500059127807617
    6. '{}\' → logprob: -17.625059127807617
    7. '={}' → logprob: -18.375059127807617
    8. '{}_' → logprob: -18.750059127807617
    9. 'dict' → logprob: -19.375059127807617
    10. '{})' → logprob: -19.375059127807617

Token 221: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15046940743923187
    2. ' for' → logprob: -2.0254693031311035
    3. '   ' → logprob: -4.9004693031311035
    4. '	for' → logprob: -8.775469779968262
    5. '
' → logprob: -9.525469779968262
    6. '    
' → logprob: -10.025469779968262
    7. '<|end|>' → logprob: -10.400469779968262
    8. ' 
' → logprob: -12.150469779968262
    9. ' ' → logprob: -12.650469779968262
    10. '  
' → logprob: -12.900469779968262

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0020824549719691277
    2. ' for' → logprob: -6.752082347869873
    3. '   ' → logprob: -7.002082347869873
    4. '	for' → logprob: -13.252082824707031
    5. '
' → logprob: -17.50208282470703
    6. ' ' → logprob: -17.87708282470703
    7. '    
' → logprob: -18.25208282470703
    8. '  ' → logprob: -18.62708282470703
    9. 'i' → logprob: -19.37708282470703
    10. '#' → logprob: -20.75208282470703

Token 223: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5244847536087036
    2. ' i' → logprob: -0.8994847536087036
    3. 'num' → logprob: -7.024484634399414
    4. ' num' → logprob: -8.274484634399414
    5. 'r' → logprob: -9.274484634399414
    6. ' r' → logprob: -9.774484634399414
    7. ' player' → logprob: -10.899484634399414
    8. 'x' → logprob: -11.149484634399414
    9. '	i' → logprob: -12.149484634399414
    10. 'player' → logprob: -12.399484634399414

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03368304297327995
    2. 'in' → logprob: -3.4086830615997314
    3. ',' → logprob: -11.033682823181152
    4. ' ' → logprob: -11.533682823181152
    5. 'n' → logprob: -12.533682823181152
    6. '   ' → logprob: -12.908682823181152
    7. 'range' → logprob: -13.908682823181152
    8. '  ' → logprob: -14.158682823181152
    9. ' ,' → logprob: -14.533682823181152
    10. ')' → logprob: -15.033682823181152

Token 225: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0485873706638813
    2. 'range' → logprob: -3.0485873222351074
    3. '(range' → logprob: -16.798587799072266
    4. '	range' → logprob: -17.298587799072266
    5. 'Range' → logprob: -19.423587799072266
    6. '_range' → logprob: -19.798587799072266
    7. ' ' → logprob: -20.048587799072266
    8. 'rang' → logprob: -20.298587799072266
    9. '   ' → logprob: -20.548587799072266
    10. '.range' → logprob: -20.548587799072266

Token 226: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.209963900502771e-05
    2. 'n' → logprob: -9.500092506408691
    3. '(' → logprob: -11.500092506408691
    4. ' n' → logprob: -12.125092506408691
    5. ' (' → logprob: -13.375092506408691
    6. '	n' → logprob: -17.125091552734375
    7. '(
' → logprob: -17.625091552734375
    8. '   ' → logprob: -18.375091552734375
    9. ' ' → logprob: -18.750091552734375
    10. ',n' → logprob: -18.750091552734375

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38691815733909607
    2. '):
' → logprob: -1.1369181871414185
    3. '):
' → logprob: -10.761918067932129
    4. ':' → logprob: -11.511918067932129
    5. '   ' → logprob: -11.636918067932129
    6. ' ):' → logprob: -12.511918067932129
    7. ')' → logprob: -13.886918067932129
    8. ' ):
' → logprob: -14.261918067932129
    9. '):

' → logprob: -14.886918067932129
    10. ':
' → logprob: -14.886918067932129

Token 228: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11661871522665024
    2. '       ' → logprob: -2.4916186332702637
    3. ' for' → logprob: -3.7416186332702637
    4. '	for' → logprob: -5.866618633270264
    5. 'for' → logprob: -7.366618633270264
    6. '	   ' → logprob: -9.741619110107422
    7. '<|end|>' → logprob: -9.991619110107422
    8. '   ' → logprob: -12.866619110107422
    9. '    
' → logprob: -12.991619110107422
    10. '    ' → logprob: -13.241619110107422

Token 229: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1719190776348114
    2. 'for' (adapté à ' for') → logprob: -2.421919107437134
    3. '   ' → logprob: -2.671919107437134
    4. '	for' → logprob: -9.921918869018555
    5. '       ' → logprob: -10.796918869018555
    6. ' ' → logprob: -11.671918869018555
    7. '    ' → logprob: -13.046918869018555
    8. '<|end|>' → logprob: -14.546918869018555
    9. '   ' → logprob: -14.671918869018555
    10. '    
' → logprob: -14.921918869018555

Token 230: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.313262403011322
    2. ' j' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.188261985778809
    4. '   ' → logprob: -15.438261985778809
    5. '	j' → logprob: -16.313262939453125
    6. '    ' → logprob: -16.938262939453125
    7. 'range' → logprob: -17.563262939453125
    8. '_j' → logprob: -17.938262939453125
    9. '```' → logprob: -17.938262939453125
    10. '0' → logprob: -18.063262939453125

Token 231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038454193621873856
    2. 'in' → logprob: -3.288454294204712
    3. ' ' → logprob: -8.788454055786133
    4. '   ' → logprob: -9.038454055786133
    5. '    ' → logprob: -9.538454055786133
    6. '=' → logprob: -11.413454055786133
    7. '<|end|>' → logprob: -11.538454055786133
    8. ')' → logprob: -11.663454055786133
    9. '  ' → logprob: -12.163454055786133
    10. ' =' → logprob: -12.288454055786133

Token 232: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020849853754044
    2. 'range' → logprob: -2.3502085208892822
    3. ' ' → logprob: -14.225208282470703
    4. '(range' → logprob: -14.225208282470703
    5. 'n' → logprob: -15.725208282470703
    6. ' n' → logprob: -15.975208282470703
    7. '	range' → logprob: -16.225208282470703
    8. '   ' → logprob: -16.600208282470703
    9. '  ' → logprob: -17.475208282470703
    10. ' xrange' → logprob: -17.725208282470703

Token 233: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10634058713912964
    2. 'n' → logprob: -2.3563406467437744
    3. ' n' → logprob: -5.731340408325195
    4. 'range' → logprob: -6.606340408325195
    5. ' (' → logprob: -6.856340408325195
    6. ' range' → logprob: -7.981340408325195
    7. '(' → logprob: -9.356340408325195
    8. ')' → logprob: -10.981340408325195
    9. '   ' → logprob: -11.606340408325195
    10. '(range' → logprob: -11.731340408325195

Token 234: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01778990402817726
    2. '):
' → logprob: -4.142789840698242
    3. ')' → logprob: -6.392789840698242
    4. ':' → logprob: -10.767789840698242
    5. '   ' → logprob: -10.892789840698242
    6. ' ):' → logprob: -11.142789840698242
    7. '):

' → logprob: -11.892789840698242
    8. '):
' → logprob: -12.142789840698242
    9. '+' → logprob: -12.267789840698242
    10. '       ' → logprob: -12.767789840698242

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005747167742811143
    2. '       ' → logprob: -7.625574588775635
    3. ',' → logprob: -11.125575065612793
    4. '            
' → logprob: -11.375575065612793
    5. '	       ' → logprob: -11.375575065612793
    6. '               ' → logprob: -11.500575065612793
    7. '<|end|>' → logprob: -11.875575065612793
    8. '          ' → logprob: -12.375575065612793
    9. '        
' → logprob: -12.625575065612793
    10. 'pos' → logprob: -12.750575065612793

Token 236: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.652614951133728
    2. ' pos' → logprob: -0.777614951133728
    3. '           ' → logprob: -4.277615070343018
    4. '               ' → logprob: -5.277615070343018
    5. '   ' → logprob: -7.777615070343018
    6. ' if' → logprob: -8.40261459350586
    7. '       ' → logprob: -9.52761459350586
    8. 'if' → logprob: -9.77761459350586
    9. '	pos' → logprob: -10.65261459350586
    10. 'num' → logprob: -11.52761459350586

Token 237: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -13.000003814697266
    3. '_ul' → logprob: -15.125003814697266
    4. '_um' → logprob: -15.125003814697266
    5. '_ut' → logprob: -15.500003814697266
    6. '_uc' → logprob: -15.875003814697266
    7. '_u' → logprob: -16.125003814697266
    8. '[_' → logprob: -16.375003814697266
    9. '_uns' → logprob: -16.375003814697266
    10. '_usr' → logprob: -16.625003814697266

Token 238: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -7.584239938296378e-06
    2. 's' → logprob: -12.500007629394531
    3. '   ' → logprob: -14.500007629394531
    4. 'ag' → logprob: -14.500007629394531
    5. 'r' → logprob: -14.875007629394531
    6. 'u' → logprob: -15.125007629394531
    7. '_' → logprob: -15.250007629394531
    8. 'gi' → logprob: -15.375007629394531
    9. '_us' → logprob: -15.625007629394531
    10. 'g' → logprob: -15.875007629394531

Token 239: '[' (ID: 58)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.03034692257642746
    2. '[i' → logprob: -3.9053468704223633
    3. '[' → logprob: -4.655346870422363
    4. '[num' → logprob: -9.655346870422363
    5. '[pos' → logprob: -9.780346870422363
    6. '[u' → logprob: -9.905346870422363
    7. '=' → logprob: -10.280346870422363
    8. '[j' → logprob: -11.780346870422363
    9. '[n' → logprob: -11.780346870422363
    10. '[number' → logprob: -12.280346870422363

Token 240: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0015365236904472113
    2. ' us' → logprob: -6.5015363693237305
    3. '(us' → logprob: -10.50153636932373
    4. ']' → logprob: -13.25153636932373
    5. '	us' → logprob: -13.62653636932373
    6. '   ' → logprob: -14.00153636932373
    7. ''us' → logprob: -14.62653636932373
    8. '_us' → logprob: -15.25153636932373
    9. '(' → logprob: -15.31403636932373
    10. '[' → logprob: -15.37653636932373

Token 241: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -2.9160102712921798e-05
    2. 'ag' → logprob: -11.500029563903809
    3. '   ' → logprob: -12.000029563903809
    4. 'a' → logprob: -13.250029563903809
    5. 'gi' → logprob: -13.250029563903809
    6. '[' → logprob: -13.750029563903809
    7. 'u' → logprob: -13.875029563903809
    8. 'aki' → logprob: -14.000029563903809
    9. 'agai' → logprob: -14.000029563903809
    10. 's' → logprob: -14.375029563903809

Token 242: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -2.15310683415737e-05
    2. 'nums' → logprob: -11.000021934509277
    3. '_num' → logprob: -13.500021934509277
    4. '_' → logprob: -13.625021934509277
    5. '_numbers' → logprob: -14.875021934509277
    6. '[_' → logprob: -15.125021934509277
    7. 'Nums' → logprob: -15.500021934509277
    8. '[i' → logprob: -15.625021934509277
    9. '_n' → logprob: -15.625021934509277
    10. '   ' → logprob: -16.12502098083496

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00046177039621397853
    2. '][' → logprob: -8.25046157836914
    3. '[' → logprob: -9.25046157836914
    4. ']' → logprob: -9.87546157836914
    5. ' [' → logprob: -10.62546157836914
    6. '[(' → logprob: -11.50046157836914
    7. 'i' → logprob: -12.00046157836914
    8. '(i' → logprob: -12.12546157836914
    9. '   ' → logprob: -13.12546157836914
    10. ',i' → logprob: -13.50046157836914

Token 244: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.025385932996869087
    2. '[i' → logprob: -3.900385856628418
    3. '[j' → logprob: -5.900385856628418
    4. ']' → logprob: -6.900385856628418
    5. ']][' → logprob: -7.650385856628418
    6. ' ][' → logprob: -7.775385856628418
    7. '[' → logprob: -9.150385856628418
    8. ')][' → logprob: -10.275385856628418
    9. '   ' → logprob: -11.025385856628418
    10. ',j' → logprob: -11.275385856628418

Token 245: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.5577775128767826e-06
    2. ' j' → logprob: -12.125005722045898
    3. '	j' → logprob: -18.0000057220459
    4. ']' → logprob: -18.7500057220459
    5. '   ' → logprob: -18.8750057220459
    6. 'i' → logprob: -19.2500057220459
    7. '[j' → logprob: -20.1250057220459
    8. ' ' → logprob: -20.6250057220459
    9. '])' → logprob: -20.6250057220459
    10. '  ' → logprob: -20.8750057220459

Token 246: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01733671873807907
    2. ')]' → logprob: -4.642336845397949
    3. ']]' → logprob: -4.892336845397949
    4. ']=' → logprob: -10.64233684539795
    5. ' ]' → logprob: -11.51733684539795
    6. ')' → logprob: -11.76733684539795
    7. ']]=' → logprob: -12.76733684539795
    8. '])' → logprob: -13.39233684539795
    9. ' ]]' → logprob: -14.51733684539795
    10. '],' → logprob: -14.64233684539795

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761891603469849
    2. ' =' → logprob: -0.8261891603469849
    3. ']' → logprob: -8.451189041137695
    4. ']=' → logprob: -10.451189041137695
    5. ')' → logprob: -12.951189041137695
    6. '=(' → logprob: -13.326189041137695
    7. ',' → logprob: -13.826189041137695
    8. ' =(' → logprob: -14.701189041137695
    9. '=j' → logprob: -14.951189041137695
    10. ']=(' → logprob: -14.951189041137695

Token 248: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.38688212633132935
    2. ' (' → logprob: -1.1368820667266846
    3. '(' → logprob: -11.511881828308105
    4. '(j' → logprob: -14.011881828308105
    5. '   ' → logprob: -16.511882781982422
    6. '(I' → logprob: -16.511882781982422
    7. '(ii' → logprob: -16.636882781982422
    8. ' ' → logprob: -17.261882781982422
    9. '(n' → logprob: -18.136882781982422
    10. ' ' → logprob: -19.136882781982422

Token 249: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.836499985889532e-05
    2. ' i' → logprob: -9.7500581741333
    3. '	i' → logprob: -20.000059127807617
    4. '   ' → logprob: -20.125059127807617
    5. ')i' → logprob: -22.250059127807617
    6. '           ' → logprob: -24.625059127807617
    7. ' ' → logprob: -24.875059127807617
    8. ''i' → logprob: -25.125059127807617
    9. '(i' → logprob: -25.375059127807617
    10. '  ' → logprob: -25.375059127807617

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008713211864233017
    2. ',j' → logprob: -7.625871181488037
    3. ' ,' → logprob: -7.875871181488037
    4. ',
' → logprob: -13.375871658325195
    5. ')' → logprob: -14.750871658325195
    6. '   ' → logprob: -15.000871658325195
    7. ' ' → logprob: -15.125871658325195
    8. 'j' → logprob: -15.375871658325195
    9. '‌,' → logprob: -15.500871658325195
    10. '<|end|>' → logprob: -15.625871658325195

Token 251: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0485873706638813
    2. ' j' → logprob: -3.0485873222351074
    3. '	j' → logprob: -17.798587799072266
    4. ' ' → logprob: -18.173587799072266
    5. '   ' → logprob: -18.673587799072266
    6. ' ' → logprob: -19.298587799072266
    7. '    ' → logprob: -19.298587799072266
    8. '
' → logprob: -20.173587799072266
    9. '$j' → logprob: -20.548587799072266
    10. ' 
' → logprob: -20.673587799072266

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.978233846486546e-05
    2. ')
' → logprob: -10.000049591064453
    3. '           ' → logprob: -12.750049591064453
    4. ' )' → logprob: -14.125049591064453
    5. '<|end|>' → logprob: -15.000049591064453
    6. '       ' → logprob: -16.250049591064453
    7. ')#' → logprob: -16.250049591064453
    8. ')}' → logprob: -17.125049591064453
    9. '),' → logprob: -17.125049591064453
    10. '   ' → logprob: -17.375049591064453

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007175070699304342
    2. '
' → logprob: -5.257174968719482
    3. '<|end|>' → logprob: -7.007174968719482
    4. '       ' → logprob: -8.13217544555664
    5. '            
' → logprob: -8.75717544555664
    6. 'pos' → logprob: -9.13217544555664
    7. '          ' → logprob: -9.38217544555664
    8. '   ' → logprob: -9.63217544555664
    9. ' 
' → logprob: -9.75717544555664
    10. ' ' → logprob: -9.88217544555664

Token 254: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.011952760629355907
    2. ' pos' → logprob: -4.511952877044678
    3. '           ' → logprob: -7.011952877044678
    4. '       ' → logprob: -13.38695240020752
    5. '               ' → logprob: -14.13695240020752
    6. '   ' → logprob: -14.88695240020752
    7. '          ' → logprob: -15.13695240020752
    8. '            ' → logprob: -15.38695240020752
    9. '	pos' → logprob: -15.38695240020752
    10. ' ' → logprob: -17.386953353881836

Token 255: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -1.1637164789135568e-05
    2. '_te' → logprob: -12.000011444091797
    3. '_' → logprob: -13.125011444091797
    4. '_pos' → logprob: -14.125011444091797
    5. '_n' → logprob: -14.375011444091797
    6. 'ne' → logprob: -14.500011444091797
    7. '_ke' → logprob: -15.000011444091797
    8. '_le' → logprob: -15.750011444091797
    9. '_us' → logprob: -15.875011444091797
    10. '_pe' → logprob: -15.875011444091797

Token 256: 'ko' (ID: 3593)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22761599719524384
    2. 'ko' → logprob: -2.22761607170105
    3. 'us' → logprob: -3.10261607170105
    4. 'k' → logprob: -3.35261607170105
    5. 'ne' → logprob: -4.227615833282471
    6. '_us' → logprob: -7.852615833282471
    7. '_s' → logprob: -8.102616310119629
    8. 'os' → logprob: -9.352616310119629
    9. 'sak' → logprob: -9.352616310119629
    10. 'ok' → logprob: -10.102616310119629

Token 257: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. ' [' → logprob: -13.62500286102295
    3. '[pos' → logprob: -13.62500286102295
    4. 'ne' → logprob: -14.37500286102295
    5. '(ne' → logprob: -16.875003814697266
    6. '[(' → logprob: -17.625003814697266
    7. '```' → logprob: -17.625003814697266
    8. '   ' → logprob: -18.000003814697266
    9. ' ne' → logprob: -18.250003814697266
    10. '[num' → logprob: -18.500003814697266

Token 258: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0004263852315489203
    2. ' neko' → logprob: -8.375426292419434
    3. 'nek' → logprob: -9.500426292419434
    4. '(ne' → logprob: -10.000426292419434
    5. '[' → logprob: -10.875426292419434
    6. ' ne' → logprob: -11.000426292419434
    7. 'n' → logprob: -11.875426292419434
    8. '(' → logprob: -11.875426292419434
    9. '   ' → logprob: -12.250426292419434
    10. ' ' → logprob: -13.000426292419434

Token 259: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -3.726595241460018e-05
    2. 'k' → logprob: -11.00003719329834
    3. ' ko' → logprob: -12.00003719329834
    4. '[' → logprob: -12.25003719329834
    5. 'ku' → logprob: -13.25003719329834
    6. '
' → logprob: -13.75003719329834
    7. 'koj' → logprob: -14.25003719329834
    8. 'kos' → logprob: -14.37503719329834
    9. 'ко' → logprob: -14.50003719329834
    10. '...' → logprob: -14.87503719329834

Token 260: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -7.822646693966817e-06
    2. 'nums' → logprob: -12.250007629394531
    3. '[' → logprob: -13.625007629394531
    4. 'Nums' → logprob: -14.250007629394531
    5. '[i' → logprob: -15.125007629394531
    6. '[_' → logprob: -15.250007629394531
    7. '_num' → logprob: -15.250007629394531
    8. '```' → logprob: -16.25000762939453
    9. '[j' → logprob: -16.87500762939453
    10. '_vals' → logprob: -17.50000762939453

Token 261: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2603901015827432e-05
    2. '][' → logprob: -11.000022888183594
    3. ' [' → logprob: -12.625022888183594
    4. '[' → logprob: -14.125022888183594
    5. 'i' → logprob: -14.500022888183594
    6. ')[' → logprob: -15.250022888183594
    7. '[j' → logprob: -15.500022888183594
    8. ']' → logprob: -15.625022888183594
    9. '   ' → logprob: -16.000022888183594
    10. '(i' → logprob: -16.125022888183594

Token 262: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.0629870858974755e-05
    2. '[j' → logprob: -10.50006103515625
    3. ' ][' → logprob: -11.25006103515625
    4. ']' → logprob: -11.37506103515625
    5. ')[' → logprob: -12.87506103515625
    6. ']][' → logprob: -13.37506103515625
    7. ')][' → logprob: -13.37506103515625
    8. '   ' → logprob: -14.37506103515625
    9. '[i' → logprob: -14.50006103515625
    10. '])' → logprob: -14.62506103515625

Token 263: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.5577775128767826e-06
    2. ' j' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.000005722045898
    4. '[j' → logprob: -16.0000057220459
    5. '][' → logprob: -16.5000057220459
    6. '           ' → logprob: -16.7500057220459
    7. ']' → logprob: -17.3750057220459
    8. ' ' → logprob: -17.6250057220459
    9. '       ' → logprob: -17.6250057220459
    10. '
' → logprob: -17.7500057220459

Token 264: ']]' (ID: 8928)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.23375830054283142
    2. ']' → logprob: -1.8587583303451538
    3. ')]' → logprob: -3.1087582111358643
    4. ')' → logprob: -4.858758449554443
    5. ']]' → logprob: -9.983757972717285
    6. ' ])' → logprob: -10.358757972717285
    7. ']=' → logprob: -10.983757972717285
    8. ' ]' → logprob: -11.108757972717285
    9. ' )' → logprob: -11.483757972717285
    10. '],' → logprob: -11.608757972717285

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011050889268517494
    2. ' =' → logprob: -4.511050701141357
    3. '[' → logprob: -13.136051177978516
    4. ']' → logprob: -15.011051177978516
    5. ')' → logprob: -15.261051177978516
    6. ']=' → logprob: -16.011051177978516
    7. '=(' → logprob: -16.136051177978516
    8. '[j' → logprob: -16.261051177978516
    9. '[i' → logprob: -17.511051177978516
    10. ' =(' → logprob: -17.511051177978516

Token 266: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06197138875722885
    2. ' (' → logprob: -2.811971426010132
    3. '(' → logprob: -12.561971664428711
    4. '(I' → logprob: -15.811971664428711
    5. '(ii' → logprob: -16.81197166442871
    6. '(j' → logprob: -17.06197166442871
    7. ' ' → logprob: -17.18697166442871
    8. '   ' → logprob: -19.06197166442871
    9. '(int' → logprob: -19.31197166442871
    10. '(True' → logprob: -19.93697166442871

Token 267: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.11996734328568e-05
    2. ' i' → logprob: -10.125041007995605
    3. '(i' → logprob: -14.250041007995605
    4. '   ' → logprob: -15.625041007995605
    5. ')' → logprob: -15.750041007995605
    6. ')i' → logprob: -17.000041961669922
    7. ' ' → logprob: -17.375041961669922
    8. '
' → logprob: -17.500041961669922
    9. '[i' → logprob: -18.250041961669922
    10. ' (' → logprob: -18.375041961669922

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008381003513932228
    2. ' ,' → logprob: -5.383380889892578
    3. ',j' → logprob: -5.633380889892578
    4. ' j' → logprob: -9.258380889892578
    5. 'j' → logprob: -10.383380889892578
    6. '           ' → logprob: -11.383380889892578
    7. ',i' → logprob: -11.383380889892578
    8. ')' → logprob: -11.633380889892578
    9. '][' → logprob: -12.258380889892578
    10. ' ' → logprob: -12.258380889892578

Token 269: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014164329506456852
    2. ' j' → logprob: -4.264164447784424
    3. '   ' → logprob: -15.014163970947266
    4. ' ' → logprob: -15.139163970947266
    5. 'i' → logprob: -15.264163970947266
    6. '	j' → logprob: -17.014163970947266
    7. ')' → logprob: -17.139163970947266
    8. '    ' → logprob: -17.264163970947266
    9. '           ' → logprob: -17.764163970947266
    10. '     ' → logprob: -17.889163970947266

Token 270: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001652796781854704
    2. ')
' → logprob: -8.875164985656738
    3. '           ' → logprob: -11.125164985656738
    4. '<|end|>' → logprob: -11.750164985656738
    5. '       ' → logprob: -13.500164985656738
    6. ' )' → logprob: -14.125164985656738
    7. '   ' → logprob: -15.375164985656738
    8. ')#' → logprob: -16.375165939331055
    9. '               ' → logprob: -16.625165939331055
    10. ')\
' → logprob: -17.125165939331055

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4074729084968567
    2. '<|end|>' → logprob: -1.407472848892212
    3. '
' → logprob: -3.157472848892212
    4. 'def' → logprob: -3.282472848892212
    5. '    
' → logprob: -5.532473087310791
    6. '```' → logprob: -6.157473087310791
    7. '<|end|>' → logprob: -6.782473087310791
    8. ')' → logprob: -7.657473087310791
    9. '  
' → logprob: -8.657472610473633
    10. 'tokens' → logprob: -8.782472610473633

Token 272: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8313063383102417
    2. 'dire' → logprob: -1.0813063383102417
    3. 'def' → logprob: -2.0813064575195312
    4. 'marked' → logprob: -3.4563064575195312
    5. 'dp' → logprob: -4.456306457519531
    6. 'visited' → logprob: -4.581306457519531
    7. '#' (adapté à ' #') → logprob: -4.831306457519531
    8. ' directions' → logprob: -5.206306457519531
    9. 'direction' → logprob: -5.581306457519531
    10. 'lines' → logprob: -5.581306457519531

Token 273: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4267197847366333
    2. 'dire' → logprob: -1.1767197847366333
    3. '#' → logprob: -3.9267196655273438
    4. 'dx' → logprob: -5.176719665527344
    5. 'dirs' → logprob: -5.551719665527344
    6. 'visited' → logprob: -5.801719665527344
    7. 'dp' → logprob: -6.801719665527344
    8. 'direction' → logprob: -7.051719665527344
    9. 'used' → logprob: -7.426719665527344
    10. 'dy' → logprob: -7.676719665527344

Token 274: ' va' (ID: 3423)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23362763226032257
    2. '#' → logprob: -2.1086275577545166
    3. 'visited' → logprob: -3.1086275577545166
    4. '   ' → logprob: -4.483627796173096
    5. ' #' → logprob: -4.858627796173096
    6. ' def' → logprob: -5.608627796173096
    7. 'used' → logprob: -6.358627796173096
    8. 'score' → logprob: -6.358627796173096
    9. 'dire' → logprob: -6.483627796173096
    10. 'for' → logprob: -6.733627796173096

Token 275: ' conserver' (ID: 116877)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.363760381937027
    2. 'def' → logprob: -2.113760471343994
    3. '#' → logprob: -3.613760471343994
    4. 'util' → logprob: -3.988760471343994
    5. 'v' → logprob: -4.113760471343994
    6. 'check' → logprob: -4.238760471343994
    7. ' continuer' → logprob: -4.238760471343994
    8. ' vérifier' → logprob: -4.613760471343994
    9. 'chercher' → logprob: -4.738760471343994
    10. 'import' → logprob: -4.863760471343994

Token 276: ' ' (ID: 220)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.6318963766098022
    2. '   ' → logprob: -1.3818963766098022
    3. 'def' → logprob: -2.006896495819092
    4. 'visited' → logprob: -3.381896495819092
    5. '#' → logprob: -4.006896495819092
    6. 'u' → logprob: -5.381896495819092
    7. ' us' → logprob: -5.631896495819092
    8. ' for' → logprob: -6.131896495819092
    9. ' #' → logprob: -6.381896495819092
    10. 'les' → logprob: -6.506896495819092

Token 277: '2' (ID: 17)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6658638715744019
    2. '#' → logprob: -1.5408638715744019
    3. 'us' → logprob: -1.6658638715744019
    4. 'for' → logprob: -3.6658639907836914
    5. '   ' → logprob: -4.040863990783691
    6. ' deux' → logprob: -4.415863990783691
    7. 'une' → logprob: -5.415863990783691
    8. 'des' → logprob: -5.540863990783691
    9. 'pour' → logprob: -5.665863990783691
    10. 'les' → logprob: -5.915863990783691

Token 278: ' matrices' (ID: 75935)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.1234997510910034
    2. ' matrices' → logprob: -1.3734997510910034
    3. ' grids' → logprob: -2.248499870300293
    4. 'sets' → logprob: -2.248499870300293
    5. ' sets' → logprob: -2.748499870300293
    6. 'n' → logprob: -3.498499870300293
    7. 'mat' → logprob: -3.748499870300293
    8. 'boards' → logprob: -3.748499870300293
    9. ' gr' → logprob: -4.498499870300293
    10. 'def' → logprob: -4.998499870300293

Token 279: ' bool' (ID: 3792)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3207208812236786
    2. 'us' → logprob: -1.695720911026001
    3. 'de' → logprob: -4.320720672607422
    4. 'align' → logprob: -4.695720672607422
    5. ' de' → logprob: -4.945720672607422
    6. ',' → logprob: -5.070720672607422
    7. 'mar' → logprob: -5.820720672607422
    8. ' =' → logprob: -5.945720672607422
    9. '[' → logprob: -5.945720672607422
    10. 'marked' → logprob: -5.945720672607422

Token 280: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2323555052280426
    2. 'ean' → logprob: -1.6073554754257202
    3. 'iennes' → logprob: -6.23235559463501
    4. 'éan' → logprob: -6.35735559463501
    5. 'ées' → logprob: -6.98235559463501
    6. 'ennes' → logprob: -7.85735559463501
    7. '   ' → logprob: -8.107355117797852
    8. '[' → logprob: -8.357355117797852
    9. 'e' → logprob: -8.482355117797852
    10. 'è' → logprob: -8.982355117797852

Token 281: 'ennes' (ID: 21989)
  Prédit: 'ennes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ennes' → logprob: -0.05122317001223564
    2. 'enes' → logprob: -4.051223278045654
    3. 'anes' → logprob: -4.051223278045654
    4. 'ines' → logprob: -5.551223278045654
    5. 'es' → logprob: -5.926223278045654
    6. 'iennes' → logprob: -6.176223278045654
    7. 'an' → logprob: -6.301223278045654
    8. 'nes' → logprob: -6.926223278045654
    9. 'ens' → logprob: -7.176223278045654
    10. 'aines' → logprob: -7.676223278045654

Token 282: ' indiqu' (ID: 100773)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7296581268310547
    2. 'us' → logprob: -0.9796581268310547
    3. ' us' → logprob: -2.2296581268310547
    4. ',' → logprob: -4.229658126831055
    5. '_us' → logprob: -5.354658126831055
    6. ' for' → logprob: -5.479658126831055
    7. '(us' → logprob: -6.354658126831055
    8. 'visited' → logprob: -6.854658126831055
    9. '	us' → logprob: -7.104658126831055
    10. ' True' → logprob: -7.667158126831055

Token 283: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.013375152833759785
    2. 'er' → logprob: -5.638375282287598
    3. 'ent' → logprob: -6.013375282287598
    4. '   ' → logprob: -6.388375282287598
    5. 'ng' → logprob: -6.763375282287598
    6. 'ons' → logprob: -6.763375282287598
    7. '[' → logprob: -7.638375282287598
    8. '  ' → logprob: -8.013375282287598
    9. 'g' → logprob: -8.138375282287598
    10. 'r' → logprob: -8.263375282287598

Token 284: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.2672524452209473
    2. 'si' → logprob: -1.2672524452209473
    3. 'l' → logprob: -2.6422524452209473
    4. 'la' → logprob: -2.7672524452209473
    5. 'les' → logprob: -2.8922524452209473
    6. ',' → logprob: -3.1422524452209473
    7. ' quelles' → logprob: -3.1422524452209473
    8. 'if' → logprob: -3.5172524452209473
    9. 'pour' → logprob: -3.5172524452209473
    10. ' la' → logprob: -3.6422524452209473

Token 285: ' le' (ID: 505)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0774996280670166
    2. ' us' → logprob: -2.9524996280670166
    3. ' la' → logprob: -5.0774993896484375
    4. 'la' → logprob: -5.3274993896484375
    5. 'les' → logprob: -6.3274993896484375
    6. ' une' → logprob: -6.4524993896484375
    7. ' chaque' → logprob: -6.4524993896484375
    8. 'une' → logprob: -6.7024993896484375
    9. '(us' → logprob: -6.8274993896484375
    10. ' les' → logprob: -7.0774993896484375

Token 286: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7127987146377563
    2. 'us' → logprob: -1.3377987146377563
    3. 'num' → logprob: -2.462798595428467
    4. ' nombre' → logprob: -2.587798595428467
    5. 'jou' → logprob: -3.587798595428467
    6. 'jet' → logprob: -4.712798595428467
    7. 'numero' → logprob: -5.087798595428467
    8. 'n' → logprob: -5.212798595428467
    9. ' joueur' → logprob: -5.212798595428467
    10. 'number' → logprob: -5.337798595428467

Token 287: ' correspondant' (ID: 146058)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6229336857795715
    2. 'a' → logprob: -1.1229336261749268
    3. ' est' → logprob: -2.8729336261749268
    4. 'est' → logprob: -4.247933864593506
    5. 'us' → logprob: -4.247933864593506
    6. ' marqué' → logprob: -4.372933864593506
    7. ' has' → logprob: -4.872933864593506
    8. 'jou' → logprob: -5.872933864593506
    9. 'dé' → logprob: -6.122933864593506
    10. 'prés' → logprob: -6.122933864593506

Token 288: ' est' (ID: 893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40935200452804565
    2. ' a' → logprob: -1.1593520641326904
    3. ' est' → logprob: -4.784351825714111
    4. 'à' → logprob: -5.159351825714111
    5. ' has' → logprob: -6.034351825714111
    6. ' à' → logprob: -6.034351825714111
    7. 'est' → logprob: -6.159351825714111
    8. 'has' → logprob: -8.65935230255127
    9. ' dans' → logprob: -8.78435230255127
    10. ' ' → logprob: -9.03435230255127

Token 289: ' "' (ID: 392)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.5228970050811768
    2. 'mar' → logprob: -2.2728970050811768
    3. 'jou' → logprob: -2.3978970050811768
    4. ' marqué' → logprob: -2.5228970050811768
    5. ' True' → logprob: -3.3978970050811768
    6. 'c' → logprob: -3.3978970050811768
    7. 'dé' → logprob: -4.522896766662598
    8. 'True' → logprob: -4.772896766662598
    9. 'align' → logprob: -4.897896766662598
    10. 'marked' → logprob: -4.897896766662598

Token 290: 'mar' (ID: 8185)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.6624638438224792
    2. ' marqué' → logprob: -1.662463903427124
    3. 'mar' → logprob: -1.912463903427124
    4. 'jou' → logprob: -3.787463903427124
    5. 'align' → logprob: -3.787463903427124
    6. 'marked' → logprob: -3.912463903427124
    7. ' mar' → logprob: -4.287463665008545
    8. 'us' → logprob: -4.287463665008545
    9. 'prés' → logprob: -4.662463665008545
    10. 'c' → logprob: -5.412463665008545

Token 291: 'qué' (ID: 23535)
  Prédit: 'qué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qué' → logprob: -0.4509419798851013
    2. 'qu' → logprob: -1.075942039489746
    3. 'que' → logprob: -4.450942039489746
    4. 'ked' → logprob: -5.325942039489746
    5. 'quée' → logprob: -5.700942039489746
    6. 'q' → logprob: -6.575942039489746
    7. 'k' → logprob: -7.700942039489746
    8. 'què' → logprob: -9.575942039489746
    9. 'qués' → logprob: -9.825942039489746
    10. 'quee' → logprob: -10.075942039489746

Token 292: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00021962920436635613
    2. ' "' → logprob: -9.500219345092773
    3. '":' → logprob: -10.750219345092773
    4. '",' → logprob: -11.000219345092773
    5. '".' → logprob: -11.375219345092773
    6. '"
' → logprob: -11.500219345092773
    7. ')"' → logprob: -11.500219345092773
    8. ' ou' → logprob: -11.750219345092773
    9. '")' → logprob: -12.250219345092773
    10. '."' → logprob: -12.250219345092773

Token 293: '   ' (ID: 271)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.1473289281129837
    2. '   ' → logprob: -2.2723288536071777
    3. ' us' → logprob: -3.5223288536071777
    4. '(us' → logprob: -6.397328853607178
    5. ' for' → logprob: -7.647328853607178
    6. ' ' → logprob: -8.147329330444336
    7. '	us' → logprob: -8.272329330444336
    8. '_us' → logprob: -8.397329330444336
    9. 'u' → logprob: -8.522329330444336
    10. 'marked' → logprob: -8.522329330444336

Token 294: ' marked' (ID: 20779)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.04959738627076149
    2. ' us' → logprob: -3.1745975017547607
    3. '   ' → logprob: -5.799597263336182
    4. '(us' → logprob: -6.549597263336182
    5. ' for' → logprob: -7.674597263336182
    6. 'marked' (adapté à ' marked') → logprob: -8.29959774017334
    7. '_us' → logprob: -8.42459774017334
    8. '```' → logprob: -8.79959774017334
    9. ' or' → logprob: -8.92459774017334
    10. 'u' → logprob: -9.04959774017334

Token 295: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -0.0006050990778021514
    2. '_u' → logprob: -8.125604629516602
    3. '_' → logprob: -8.625604629516602
    4. ' =' → logprob: -9.125604629516602
    5. 'us' → logprob: -12.250604629516602
    6. '_uc' → logprob: -12.625604629516602
    7. '=' → logprob: -13.125604629516602
    8. '_um' → logprob: -13.125604629516602
    9. 'u' → logprob: -13.500604629516602
    10. ' _' → logprob: -14.125604629516602

Token 296: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -0.0005501718260347843
    2. 'aki' → logprob: -7.750550270080566
    3. 'ag' → logprob: -10.250550270080566
    4. 'aged' → logprob: -11.125550270080566
    5. 'k' → logprob: -11.500550270080566
    6. '[' → logprob: -11.750550270080566
    7. '_' → logprob: -11.875550270080566
    8. '   ' → logprob: -12.000550270080566
    9. 'aggi' → logprob: -12.000550270080566
    10. 't' → logprob: -12.625550270080566

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408103942871094
    2. ' =' → logprob: -0.9740810394287109
    3. ')' → logprob: -13.849081039428711
    4. '   ' → logprob: -14.099081039428711
    5. ' ' → logprob: -14.474081039428711
    6. '=[' → logprob: -14.474081039428711
    7. ']' → logprob: -14.474081039428711
    8. '=[[' → logprob: -15.849081039428711
    9. '[' → logprob: -15.974081039428711
    10. ']=' → logprob: -16.34908103942871

Token 298: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.06196824833750725
    2. ' [[' → logprob: -2.8119683265686035
    3. ' [' → logprob: -14.811967849731445
    4. '[' → logprob: -15.311967849731445
    5. ' ' → logprob: -20.061967849731445
    6. '[n' → logprob: -20.186967849731445
    7. '   ' → logprob: -20.186967849731445
    8. '([[' → logprob: -20.686967849731445
    9. '[
' → logprob: -21.061967849731445
    10. '[['' → logprob: -22.936967849731445

Token 299: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. '(False' → logprob: -19.625045776367188
    4. '   ' → logprob: -20.500045776367188
    5. '=False' → logprob: -21.375045776367188
    6. 'false' → logprob: -23.875045776367188
    7. 'True' → logprob: -23.875045776367188
    8. '0' → logprob: -24.000045776367188
    9. '.False' → logprob: -24.000045776367188
    10. '
' → logprob: -24.625045776367188

Token 300: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04659273102879524
    2. 'for' → logprob: -3.1715927124023438
    3. ']' → logprob: -6.171592712402344
    4. '   ' → logprob: -6.796592712402344
    5. ']*' → logprob: -8.296592712402344
    6. '(n' → logprob: -10.421592712402344
    7. '	for' → logprob: -10.921592712402344
    8. '           ' → logprob: -11.171592712402344
    9. ')' → logprob: -11.296592712402344
    10. ' ' → logprob: -11.421592712402344

Token 301: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.588793960167095e-05
    2. ' n' → logprob: -9.500076293945312
    3. '(n' → logprob: -14.125076293945312
    4. '   ' → logprob: -15.500076293945312
    5. '(' → logprob: -17.750076293945312
    6. '	n' → logprob: -17.875076293945312
    7. ' (' → logprob: -19.125076293945312
    8. ')n' → logprob: -19.625076293945312
    9. '
' → logprob: -19.750076293945312
    10. ' ' → logprob: -20.125076293945312

Token 302: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07004757970571518
    2. 'for' → logprob: -2.695047616958618
    3. '   ' → logprob: -9.320047378540039
    4. ']' → logprob: -11.570047378540039
    5. ')' → logprob: -12.570047378540039
    6. '	for' → logprob: -12.570047378540039
    7. ' ' → logprob: -12.820047378540039
    8. '       ' → logprob: -14.570047378540039
    9. '           ' → logprob: -14.695047378540039
    10. '  ' → logprob: -14.945047378540039

Token 303: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006836376152932644
    2. ' _' → logprob: -5.006836414337158
    3. '_range' → logprob: -9.3818359375
    4. ' range' → logprob: -10.7568359375
    5. '_i' → logprob: -11.5068359375
    6. '_in' → logprob: -13.2568359375
    7. '_n' → logprob: -13.8818359375
    8. '_=' → logprob: -14.2568359375
    9. '_a' → logprob: -14.8818359375
    10. ' in' → logprob: -15.0068359375

Token 304: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08453267812728882
    2. ' range' → logprob: -2.5845327377319336
    3. 'in' → logprob: -5.459532737731934
    4. ' in' → logprob: -6.709532737731934
    5. '_' → logprob: -9.084532737731934
    6. '_range' → logprob: -10.959532737731934
    7. 'n' → logprob: -11.334532737731934
    8. '(range' → logprob: -11.959532737731934
    9. ' _' → logprob: -13.834532737731934
    10. 'i' → logprob: -14.209532737731934

Token 305: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150178715586662
    2. ' range' → logprob: -4.018150329589844
    3. '_range' → logprob: -15.393150329589844
    4. '(range' → logprob: -18.143150329589844
    5. ' ' → logprob: -19.018150329589844
    6. '   ' → logprob: -19.643150329589844
    7. '	range' → logprob: -19.768150329589844
    8. '_' → logprob: -20.143150329589844
    9. 'n' → logprob: -20.268150329589844
    10. '  ' → logprob: -21.768150329589844

Token 306: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.030942589044570923
    2. 'n' → logprob: -3.530942678451538
    3. 'range' → logprob: -6.905942440032959
    4. ' n' → logprob: -9.155942916870117
    5. ' range' → logprob: -9.780942916870117
    6. ' (' → logprob: -10.655942916870117
    7. '(range' → logprob: -13.030942916870117
    8. '(' → logprob: -13.655942916870117
    9. '   ' → logprob: -15.530942916870117
    10. ')n' → logprob: -16.530942916870117

Token 307: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.5690089639974758e-05
    2. ')]
' → logprob: -11.750015258789062
    3. ')' → logprob: -12.000015258789062
    4. ']' → logprob: -13.875015258789062
    5. '   ' → logprob: -14.875015258789062
    6. ' )' → logprob: -15.875015258789062
    7. ')]

' → logprob: -16.125015258789062
    8. ')]
' → logprob: -17.000015258789062
    9. ')],' → logprob: -17.375015258789062
    10. '')]' → logprob: -17.625015258789062

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02190701849758625
    2. 'marked' → logprob: -4.021906852722168
    3. ' marked' → logprob: -6.021906852722168
    4. '
' → logprob: -6.646906852722168
    5. '    
' → logprob: -10.771906852722168
    6. ' ' → logprob: -13.396906852722168
    7. ',' → logprob: -14.021906852722168
    8. '       ' → logprob: -14.271906852722168
    9. '   ' → logprob: -14.646906852722168
    10. '    ' → logprob: -14.646906852722168

Token 309: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' (adapté à ' marked') → logprob: -0.00046618093620054424
    2. '   ' → logprob: -7.750466346740723
    3. ' marked' → logprob: -10.250466346740723
    4. '
' → logprob: -16.500465393066406
    5. ' ' → logprob: -17.750465393066406
    6. '  ' → logprob: -18.625465393066406
    7. '    
' → logprob: -19.000465393066406
    8. '       ' → logprob: -19.250465393066406
    9. 'mar' → logprob: -19.750465393066406
    10. '    ' → logprob: -20.000465393066406

Token 310: '_ne' (ID: 35498)
  Prédit: '_us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -0.009296991862356663
    2. '_ne' → logprob: -4.759296894073486
    3. '_' → logprob: -7.384296894073486
    4. '_te' → logprob: -10.884297370910645
    5. ' _' → logprob: -12.009297370910645
    6. '_ut' → logprob: -12.759297370910645
    7. '_up' → logprob: -12.884297370910645
    8. '_ud' → logprob: -12.884297370910645
    9. '_ul' → logprob: -13.009297370910645
    10. '_uc' → logprob: -13.009297370910645

Token 311: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.0037918882444500923
    2. 'k' → logprob: -5.628791809082031
    3. 's' → logprob: -10.003791809082031
    4. 'eko' → logprob: -10.253791809082031
    5. 'ako' → logprob: -10.753791809082031
    6. 'z' → logprob: -11.003791809082031
    7. 'o' → logprob: -11.378791809082031
    8. 'kos' → logprob: -11.378791809082031
    9. 'ne' → logprob: -11.628791809082031
    10. 'koz' → logprob: -12.253791809082031

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3891080915927887
    2. '=' → logprob: -1.1391080617904663
    3. '=[[' → logprob: -6.639108180999756
    4. '   ' → logprob: -7.639108180999756
    5. '=[' → logprob: -8.014107704162598
    6. '[' → logprob: -9.889107704162598
    7. '[[' → logprob: -10.764107704162598
    8. '[n' → logprob: -11.264107704162598
    9. ' =[' → logprob: -11.764107704162598
    10. '[i' → logprob: -12.514107704162598

Token 313: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.004078401252627373
    2. ' [[' → logprob: -5.504078388214111
    3. '([[' → logprob: -18.504077911376953
    4. ' ' → logprob: -19.254077911376953
    5. '[' → logprob: -19.629077911376953
    6. 'False' → logprob: -21.254077911376953
    7. '   ' → logprob: -21.379077911376953
    8. '=[[' → logprob: -21.504077911376953
    9. '[['' → logprob: -22.129077911376953
    10. ' ' → logprob: -23.504077911376953

Token 314: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.500001907348633
    3. ' False' → logprob: -14.000001907348633
    4. '(False' → logprob: -16.250001907348633
    5. '.False' → logprob: -20.250001907348633
    6. 'n' → logprob: -20.750001907348633
    7. '[n' → logprob: -21.250001907348633
    8. '
' → logprob: -22.250001907348633
    9. '=False' → logprob: -22.750001907348633
    10. 'True' → logprob: -22.750001907348633

Token 315: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.04575657472014427
    2. '*n' → logprob: -3.1707565784454346
    3. '*' → logprob: -6.2957563400268555
    4. '*[' → logprob: -7.7957563400268555
    5. '[n' → logprob: -8.170756340026855
    6. ')*' → logprob: -9.295756340026855
    7. 'False' → logprob: -10.295756340026855
    8. 'n' → logprob: -10.420756340026855
    9. ']' → logprob: -10.795756340026855
    10. 'True' → logprob: -11.420756340026855

Token 316: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5690089639974758e-05
    2. ' n' → logprob: -11.625015258789062
    3. '(n' → logprob: -12.875015258789062
    4. '[n' → logprob: -13.125015258789062
    5. 'False' → logprob: -13.250015258789062
    6. '[' → logprob: -15.500015258789062
    7. '
' → logprob: -17.750015258789062
    8. '	n' → logprob: -18.000015258789062
    9. ' [' → logprob: -19.000015258789062
    10. '   ' → logprob: -19.125015258789062

Token 317: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10441664606332779
    2. 'for' → logprob: -2.479416608810425
    3. '[n' → logprob: -4.229416847229004
    4. '   ' → logprob: -7.979416847229004
    5. ']' → logprob: -8.979416847229004
    6. 'n' → logprob: -9.729416847229004
    7. '(n' → logprob: -9.854416847229004
    8. '[' → logprob: -9.854416847229004
    9. ' [' → logprob: -10.229416847229004
    10. '	for' → logprob: -10.229416847229004

Token 318: ' _' (ID: 1175)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006797902286052704
    2. ' n' → logprob: -5.006797790527344
    3. '[n' → logprob: -9.756797790527344
    4. '(n' → logprob: -11.381797790527344
    5. 'range' → logprob: -11.881797790527344
    6. ' range' → logprob: -12.631797790527344
    7. ' [' → logprob: -14.006797790527344
    8. '	n' → logprob: -14.131797790527344
    9. '   ' → logprob: -14.381797790527344
    10. '
' → logprob: -15.006797790527344

Token 319: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.5027299822540954e-05
    2. ' n' → logprob: -10.250055313110352
    3. '(n' → logprob: -10.875055313110352
    4. 'range' → logprob: -15.000055313110352
    5. '   ' → logprob: -16.25005531311035
    6. '	n' → logprob: -16.37505531311035
    7. '
' → logprob: -16.50005531311035
    8. '_n' → logprob: -17.87505531311035
    9. '[n' → logprob: -17.87505531311035
    10. '       ' → logprob: -19.00005531311035

Token 320: ' range' (ID: 3352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5919537544250488
    2. '(n' → logprob: -0.8419537544250488
    3. 'range' → logprob: -4.341953754425049
    4. ' range' → logprob: -6.216953754425049
    5. ' n' → logprob: -7.216953754425049
    6. ' (' → logprob: -8.96695327758789
    7. '
' → logprob: -12.09195327758789
    8. '(range' → logprob: -12.09195327758789
    9. '[n' → logprob: -12.21695327758789
    10. '(' → logprob: -13.71695327758789

Token 321: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6933493614196777
    2. '(n' → logprob: -0.6933493614196777
    3. ' n' → logprob: -9.068349838256836
    4. ' (' → logprob: -9.568349838256836
    5. '[n' → logprob: -12.068349838256836
    6. ')n' → logprob: -12.818349838256836
    7. '
' → logprob: -12.943349838256836
    8. '(' → logprob: -13.193349838256836
    9. '	n' → logprob: -13.818349838256836
    10. '   ' → logprob: -13.943349838256836

Token 322: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.412610233994201e-05
    2. ')' → logprob: -9.875094413757324
    3. ']' → logprob: -10.125094413757324
    4. '   ' → logprob: -14.000094413757324
    5. ')]
' → logprob: -14.875094413757324
    6. '])]' → logprob: -15.125094413757324
    7. ')],' → logprob: -15.375094413757324
    8. ']]' → logprob: -15.500094413757324
    9. ')].' → logprob: -15.750094413757324
    10. ' )' → logprob: -15.750094413757324

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027538372203707695
    2. ' for' → logprob: -4.777538299560547
    3. 'def' → logprob: -5.027538299560547
    4. 'for' → logprob: -5.027538299560547
    5. '    
' → logprob: -5.277538299560547
    6. '```' → logprob: -8.027538299560547
    7. '
' → logprob: -9.277538299560547
    8. '  
' → logprob: -11.527538299560547
    9. ' def' → logprob: -11.527538299560547
    10. ' 
' → logprob: -11.652538299560547

Token 324: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011414187029004097
    2. 'for' → logprob: -5.136414051055908
    3. 'dire' → logprob: -6.261414051055908
    4. '   ' → logprob: -6.386414051055908
    5. '
' → logprob: -6.886414051055908
    6. 'direction' → logprob: -7.886414051055908
    7. '    
' → logprob: -8.386414527893066
    8. 'import' → logprob: -9.636414527893066
    9. 'from' → logprob: -9.886414527893066
    10. ' for' → logprob: -10.386414527893066

Token 325: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07029673457145691
    2. 'dire' → logprob: -2.9452967643737793
    3. 'for' → logprob: -4.320296764373779
    4. 'dx' → logprob: -7.570296764373779
    5. 'direction' → logprob: -7.820296764373779
    6. 'dirs' → logprob: -7.945296764373779
    7. 'from' → logprob: -8.320296287536621
    8. '#' → logprob: -8.570296287536621
    9. '   ' → logprob: -10.070296287536621
    10. ' directions' → logprob: -10.195296287536621

Token 326: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06309355050325394
    2. ' def' → logprob: -2.813093662261963
    3. ' check' → logprob: -7.063093662261963
    4. '
' → logprob: -9.188093185424805
    5. 'check' → logprob: -9.688093185424805
    6. '_check' → logprob: -10.188093185424805
    7. ' is' → logprob: -10.563093185424805
    8. 'is' → logprob: -11.313093185424805
    9. '   ' → logprob: -11.813093185424805
    10. ' to' → logprob: -11.938093185424805

Token 327: ' calcul' (ID: 7559)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5922428965568542
    2. 'check' → logprob: -1.217242956161499
    3. 'v' → logprob: -2.217242956161499
    4. ' vérifier' → logprob: -3.592242956161499
    5. 'checker' → logprob: -5.59224271774292
    6. 'dé' → logprob: -5.71724271774292
    7. 'ver' → logprob: -5.84224271774292
    8. 'checking' → logprob: -6.71724271774292
    9. ' check' → logprob: -7.09224271774292
    10. 'mar' → logprob: -7.21724271774292

Token 328: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.014546815305948257
    2. 'def' → logprob: -5.014546871185303
    3. 'ate' → logprob: -5.389546871185303
    4. 'ter' → logprob: -6.389546871185303
    5. 'ating' → logprob: -7.264546871185303
    6. 'r' → logprob: -8.139546394348145
    7. 'ber' → logprob: -8.889546394348145
    8. 'rer' → logprob: -9.139546394348145
    9. 'ver' → logprob: -9.639546394348145
    10. '#' → logprob: -10.014546394348145

Token 329: ' combien' (ID: 106648)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05522797629237175
    2. ' la' → logprob: -3.9302279949188232
    3. 'la' → logprob: -3.9302279949188232
    4. ' def' → logprob: -4.680227756500244
    5. 'max' → logprob: -6.555227756500244
    6. '   ' → logprob: -6.930227756500244
    7. 'le' → logprob: -6.930227756500244
    8. ' if' → logprob: -7.930227756500244
    9. 'if' → logprob: -8.055228233337402
    10. ' max' → logprob: -8.180228233337402

Token 330: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.42568159103393555
    2. 'de' → logprob: -1.3006815910339355
    3. '   ' → logprob: -3.3006815910339355
    4. 'def' → logprob: -3.6756815910339355
    5. 'd' → logprob: -4.6756815910339355
    6. '_de' → logprob: -7.1756815910339355
    7. '_' → logprob: -7.3006815910339355
    8. ' d' → logprob: -8.175682067871094
    9. ' ' → logprob: -8.925682067871094
    10. 'au' → logprob: -9.550682067871094

Token 331: ' lignes' (ID: 81687)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.004961371421814
    2. 'c' → logprob: -1.754961371421814
    3. 'cons' → logprob: -2.0049614906311035
    4. 'con' → logprob: -2.5049614906311035
    5. ' cons' → logprob: -2.6299614906311035
    6. 'mar' → logprob: -2.6299614906311035
    7. 'align' → logprob: -3.1299614906311035
    8. 'contin' → logprob: -5.0049614906311035
    9. 'aligned' → logprob: -5.2549614906311035
    10. '```' → logprob: -5.5049614906311035

Token 332: ' dro' (ID: 6517)
  Prédit: 'align'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'align' → logprob: -1.3851561546325684
    2. ' cons' → logprob: -1.5101561546325684
    3. 'con' → logprob: -2.0101561546325684
    4. '_cont' → logprob: -2.3851561546325684
    5. 'cons' → logprob: -2.6351561546325684
    6. '_align' → logprob: -3.5101561546325684
    7. 'aligned' → logprob: -3.7601561546325684
    8. '_con' → logprob: -3.7601561546325684
    9. '_al' → logprob: -3.8851561546325684
    10. 'contin' → logprob: -4.010156154632568

Token 333: 'ites' (ID: 3915)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.7019439339637756
    2. 'ites' → logprob: -1.0769438743591309
    3. 'it' → logprob: -3.201943874359131
    4. 'nées' → logprob: -3.201943874359131
    5. 'n' → logprob: -3.951943874359131
    6. 'ital' → logprob: -4.576943874359131
    7. 't' → logprob: -4.576943874359131
    8. 'ite' → logprob: -4.576943874359131
    9. 'u' → logprob: -5.576943874359131
    10. 'p' → logprob: -5.701943874359131

Token 334: ' d' (ID: 272)
  Prédit: 'align'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'align' → logprob: -0.9633994102478027
    2. 'con' → logprob: -1.4633994102478027
    3. ' cons' → logprob: -2.2133994102478027
    4. ' mar' → logprob: -2.7133994102478027
    5. 'mar' → logprob: -3.3383994102478027
    6. ' align' → logprob: -3.4633994102478027
    7. 'cons' → logprob: -3.5883994102478027
    8. ',' → logprob: -3.8383994102478027
    9. 'aligned' → logprob: -4.088399410247803
    10. 'd' → logprob: -4.213399410247803

Token 335: ''au' (ID: 63689)
  Prédit: ''au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''au' → logprob: -0.5082319974899292
    2. 'e' → logprob: -1.7582319974899292
    3. 'u' → logprob: -2.6332321166992188
    4. ''une' → logprob: -3.5082321166992188
    5. 'au' → logprob: -3.7582321166992188
    6. ' au' → logprob: -4.008232116699219
    7. ' cons' → logprob: -4.633232116699219
    8. 'ans' → logprob: -4.633232116699219
    9. ''' → logprob: -4.758232116699219
    10. ''u' → logprob: -5.383232116699219

Token 336: ' moins' (ID: 15924)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.7736161947250366
    2. 'moins' → logprob: -1.2736161947250366
    3. 'long' → logprob: -2.148616313934326
    4. 'len' → logprob: -3.648616313934326
    5. 'leng' → logprob: -4.398616313934326
    6. 'tail' → logprob: -4.773616313934326
    7. ' moins' → logprob: -4.773616313934326
    8. '#' → logprob: -5.023616313934326
    9. '```' → logprob: -5.148616313934326
    10. 'rée' → logprob: -5.148616313934326

Token 337: ' n' (ID: 297)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.18383145332336426
    2. 'long' → logprob: -2.1838314533233643
    3. 'length' → logprob: -4.058831214904785
    4. ' u' → logprob: -4.433831214904785
    5. 'v' → logprob: -4.683831214904785
    6. ' longueur' → logprob: -4.933831214904785
    7. 'c' → logprob: -5.933831214904785
    8. 'k' → logprob: -7.058831214904785
    9. 'def' → logprob: -7.433831214904785
    10. 'tail' → logprob: -7.808831214904785

Token 338: ' éléments' (ID: 57375)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.592953622341156
    2. ' u' → logprob: -1.4679536819458008
    3. 'aligned' → logprob: -3.092953681945801
    4. ' align' → logprob: -3.342953681945801
    5. ' aligned' → logprob: -3.467953681945801
    6. '_' → logprob: -3.967953681945801
    7. ' cons' → logprob: -4.092953681945801
    8. 'align' → logprob: -4.217953681945801
    9. '_align' → logprob: -4.842953681945801
    10. '```' → logprob: -4.967953681945801

Token 339: ' sont' (ID: 5242)
  Prédit: ' cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.2054573893547058
    2. ' mar' → logprob: -2.2054574489593506
    3. ' align' → logprob: -4.2054572105407715
    4. 'align' → logprob: -4.3304572105407715
    5. 'con' → logprob: -4.8304572105407715
    6. 'cons' → logprob: -4.9554572105407715
    7. 'mar' → logprob: -5.0804572105407715
    8. '_cont' → logprob: -5.4554572105407715
    9. '_con' → logprob: -5.5804572105407715
    10. '_align' → logprob: -5.7054572105407715

Token 340: ' mar' (ID: 2674)
  Prédit: ' mar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.35416242480278015
    2. 'align' → logprob: -2.6041624546051025
    3. ' align' → logprob: -3.1041624546051025
    4. 'mar' → logprob: -3.2291624546051025
    5. '   ' → logprob: -3.8541624546051025
    6. 'def' → logprob: -3.9791624546051025
    7. '1' → logprob: -4.229162216186523
    8. ' marqué' → logprob: -4.229162216186523
    9. 'aligned' → logprob: -4.854162216186523
    10. '```' → logprob: -4.854162216186523

Token 341: 'quées' (ID: 111264)
  Prédit: 'quées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.22207804024219513
    2. 'qu' → logprob: -1.7220780849456787
    3. 'qués' → logprob: -4.2220778465271
    4. 'quée' → logprob: -5.8470778465271
    5. 'que' → logprob: -6.3470778465271
    6. 'qué' → logprob: -7.5970778465271
    7. 'q' → logprob: -8.472078323364258
    8. 'ques' → logprob: -9.347078323364258
    9. '```' → logprob: -9.472078323364258
    10. '
' → logprob: -10.597078323364258

Token 342: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26385176181793213
    2. '_' → logprob: -1.6388517618179321
    3. ' def' → logprob: -4.388851642608643
    4. '   ' → logprob: -5.263851642608643
    5. ' de' → logprob: -5.888851642608643
    6. ' _' → logprob: -6.388851642608643
    7. 's' → logprob: -6.388851642608643
    8. ' (' → logprob: -6.388851642608643
    9. '
' → logprob: -6.638851642608643
    10. '(' → logprob: -6.763851642608643

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4312564432621002
    2. 'def' → logprob: -1.0562564134597778
    3. ' def' → logprob: -6.556256294250488
    4. '    
' → logprob: -7.056256294250488
    5. '
' → logprob: -9.681256294250488
    6. '    ' → logprob: -9.806256294250488
    7. ' 
' → logprob: -10.181256294250488
    8. '       ' → logprob: -10.681256294250488
    9. '  ' → logprob: -11.056256294250488
    10. ' ' → logprob: -11.306256294250488

Token 344: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08459818363189697
    2. '   ' → logprob: -2.7095980644226074
    3. ' def' → logprob: -4.584598064422607
    4. '
' → logprob: -5.709598064422607
    5. ' 
' → logprob: -7.834598064422607
    6. '    
' → logprob: -8.084598541259766
    7. 'd' → logprob: -9.209598541259766
    8. '\' → logprob: -9.459598541259766
    9. ' ' → logprob: -10.459598541259766
    10. '    ' → logprob: -10.834598541259766

Token 345: ' Ici' (ID: 145754)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00422940868884325
    2. ' def' → logprob: -5.754229545593262
    3. '   ' → logprob: -6.879229545593262
    4. '
' → logprob: -11.129229545593262
    5. ' ' → logprob: -12.754229545593262
    6. '  ' → logprob: -14.129229545593262
    7. ' 
' → logprob: -14.629229545593262
    8. '	def' → logprob: -14.629229545593262
    9. '    
' → logprob: -14.879229545593262
    10. 'de' → logprob: -14.879229545593262

Token 346: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13313093781471252
    2. ' def' → logprob: -2.1331310272216797
    3. '   ' → logprob: -5.25813102722168
    4. '
' → logprob: -7.75813102722168
    5. ':' → logprob: -8.50813102722168
    6. ',' → logprob: -9.38313102722168
    7. ':def' → logprob: -9.63313102722168
    8. ' de' → logprob: -9.75813102722168
    9. '    
' → logprob: -10.75813102722168
    10. ' déf' → logprob: -10.88313102722168

Token 347: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002882721892092377
    2. ' def' → logprob: -8.375288009643555
    3. '   ' → logprob: -10.125288009643555
    4. '
' → logprob: -12.000288009643555
    5. '#' → logprob: -12.875288009643555
    6. 'import' → logprob: -13.125288009643555
    7. 'v' → logprob: -14.125288009643555
    8. 'n' → logprob: -14.125288009643555
    9. 'de' → logprob: -14.250288009643555
    10. ')' → logprob: -14.625288009643555

Token 348: ' veut' (ID: 41653)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06335675716400146
    2. 'cherche' → logprob: -4.063356876373291
    3. 'check' → logprob: -5.188356876373291
    4. 'v' → logprob: -5.188356876373291
    5. ' va' → logprob: -5.438356876373291
    6. ' vér' → logprob: -5.688356876373291
    7. 'dé' → logprob: -5.688356876373291
    8. ' def' → logprob: -5.813356876373291
    9. ' check' → logprob: -5.938356876373291
    10. 'va' → logprob: -6.063356876373291

Token 349: ' compter' (ID: 81694)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2462269514799118
    2. '   ' → logprob: -2.8712270259857178
    3. ' vérifier' → logprob: -3.1212270259857178
    4. 'v' → logprob: -3.2462270259857178
    5. ' compter' → logprob: -3.9962270259857178
    6. 'count' → logprob: -4.246226787567139
    7. ' def' → logprob: -4.746226787567139
    8. 'dé' → logprob: -5.121226787567139
    9. 'check' → logprob: -5.496226787567139
    10. ' check' → logprob: -6.121226787567139

Token 350: ' combien' (ID: 106648)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8707236647605896
    2. 'def' → logprob: -1.6207237243652344
    3. ' les' → logprob: -2.4957237243652344
    4. ' combien' → logprob: -2.6207237243652344
    5. 'le' → logprob: -3.3707237243652344
    6. 'the' → logprob: -4.120723724365234
    7. 'l' → logprob: -4.120723724365234
    8. '   ' → logprob: -4.370723724365234
    9. ' how' → logprob: -4.495723724365234
    10. 'u' → logprob: -4.495723724365234

Token 351: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1777488738298416
    2. 'de' → logprob: -2.052748918533325
    3. '   ' → logprob: -4.302748680114746
    4. 'def' → logprob: -4.552748680114746
    5. 'd' → logprob: -5.552748680114746
    6. '    ' → logprob: -6.552748680114746
    7. ' of' → logprob: -7.177748680114746
    8. ' d' → logprob: -7.427748680114746
    9. ' ' → logprob: -7.427748680114746
    10. ',' → logprob: -7.677748680114746

Token 352: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7862280011177063
    2. 'lines' → logprob: -1.5362279415130615
    3. ' lignes' → logprob: -2.1612279415130615
    4. 'align' → logprob: -2.7862279415130615
    5. ' lines' → logprob: -2.9112279415130615
    6. 'con' → logprob: -3.5362279415130615
    7. 'u' → logprob: -4.411228179931641
    8. ' align' → logprob: -4.786228179931641
    9. 'aligned' → logprob: -4.786228179931641
    10. ' u' → logprob: -5.411228179931641

Token 353: ' contenant' (ID: 131049)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9010743498802185
    2. '   ' → logprob: -1.6510744094848633
    3. ' cons' → logprob: -1.9010744094848633
    4. ' au' → logprob: -3.5260744094848633
    5. 'dro' → logprob: -3.5260744094848633
    6. 'd' → logprob: -4.026074409484863
    7. ' mar' → logprob: -4.026074409484863
    8. ' d' → logprob: -4.276074409484863
    9. 'align' → logprob: -4.526074409484863
    10. 'con' → logprob: -4.526074409484863

Token 354: ' exactement' (ID: 108701)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5696002840995789
    2. ' au' → logprob: -1.9446003437042236
    3. ' u' → logprob: -2.1946003437042236
    4. 'au' → logprob: -2.3196003437042236
    5. 'at' → logprob: -3.6946003437042236
    6. '   ' → logprob: -4.1946001052856445
    7. ' at' → logprob: -4.9446001052856445
    8. 'k' → logprob: -5.6946001052856445
    9. ' cons' → logprob: -5.8196001052856445
    10. 'con' → logprob: -6.1946001052856445

Token 355: ' n' (ID: 297)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2604380249977112
    2. ' u' → logprob: -1.7604379653930664
    3. 'k' → logprob: -3.5104379653930664
    4. 'n' → logprob: -4.385437965393066
    5. 'v' → logprob: -5.510437965393066
    6. ' k' → logprob: -5.635437965393066
    7. ' n' → logprob: -6.135437965393066
    8. 'length' → logprob: -6.510437965393066
    9. ' v' → logprob: -7.135437965393066
    10. ' ' → logprob: -8.010437965393066

Token 356: ' "' (ID: 392)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.9834430813789368
    2. ')' → logprob: -1.733443021774292
    3. ' marked' → logprob: -1.733443021774292
    4. '   ' → logprob: -2.983443021774292
    5. ' mar' → logprob: -3.233443021774292
    6. '_' → logprob: -3.358443021774292
    7. ' _' → logprob: -4.233443260192871
    8. ',' → logprob: -4.358443260192871
    9. '_mark' → logprob: -4.733443260192871
    10. 'mar' → logprob: -4.733443260192871

Token 357: 'mar' (ID: 8185)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.33961302042007446
    2. ' True' → logprob: -1.3396129608154297
    3. 'marked' → logprob: -4.08961296081543
    4. ' marked' → logprob: -5.08961296081543
    5. 'mar' → logprob: -6.83961296081543
    6. ' mar' → logprob: -7.71461296081543
    7. '(True' → logprob: -8.71461296081543
    8. '
' → logprob: -8.71461296081543
    9. 'False' → logprob: -8.90211296081543
    10. '=True' → logprob: -9.21461296081543

Token 358: 'qués' (ID: 70348)
  Prédit: 'quées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.8237297534942627
    2. 'qués' → logprob: -1.5737297534942627
    3. 'ked' → logprob: -1.5737297534942627
    4. 'qu' → logprob: -2.3237297534942627
    5. 'k' → logprob: -4.198729515075684
    6. 'rk' → logprob: -4.323729515075684
    7. 'qué' → logprob: -5.073729515075684
    8. 'quée' → logprob: -5.198729515075684
    9. 'arked' → logprob: -5.573729515075684
    10. 'r' → logprob: -7.198729515075684

Token 359: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018547415733337402
    2. '",' → logprob: -5.143547534942627
    3. ' "' → logprob: -5.518547534942627
    4. 's' → logprob: -6.518547534942627
    5. ',' → logprob: -7.143547534942627
    6. '_' → logprob: -7.768547534942627
    7. ')' → logprob: -7.893547534942627
    8. ' ' → logprob: -8.018547058105469
    9. 'True' → logprob: -8.143547058105469
    10. ',"' → logprob: -8.393547058105469

Token 360: ' sont' (ID: 5242)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08582131564617157
    2. '   ' → logprob: -3.4608213901519775
    3. 'u' → logprob: -4.710821151733398
    4. '(n' → logprob: -4.960821151733398
    5. '_us' → logprob: -5.085821151733398
    6. ' (' → logprob: -5.335821151733398
    7. '_u' → logprob: -5.460821151733398
    8. '(' → logprob: -5.960821151733398
    9. '
' → logprob: -5.960821151733398
    10. ' def' → logprob: -6.210821151733398

Token 361: ' align' (ID: 9538)
  Prédit: ' compl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compl' → logprob: -1.4260427951812744
    2. 'com' → logprob: -1.5510427951812744
    3. 'align' → logprob: -1.8010427951812744
    4. ' mar' → logprob: -2.5510427951812744
    5. 'compl' → logprob: -2.5510427951812744
    6. ' align' → logprob: -3.1760427951812744
    7. 'mar' → logprob: -3.5510427951812744
    8. ' présentes' → logprob: -4.176042556762695
    9. ' trouv' → logprob: -4.426042556762695
    10. 'valid' → logprob: -4.551042556762695

Token 362: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.20422810316085815
    2. 'és' → logprob: -1.704228162765503
    3. 'é' → logprob: -6.079227924346924
    4. 'ée' → logprob: -7.954227924346924
    5. 'es' → logprob: -9.204228401184082
    6. 'ed' → logprob: -10.704228401184082
    7. '```' → logprob: -11.204228401184082
    8. 'nées' → logprob: -11.704228401184082
    9. 'e' → logprob: -12.579228401184082
    10. 'É' → logprob: -12.579228401184082

Token 363: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13517522811889648
    2. '
' → logprob: -3.1351752281188965
    3. '   ' → logprob: -3.1351752281188965
    4. 'u' → logprob: -4.3851752281188965
    5. ':' → logprob: -5.0101752281188965
    6. '_' → logprob: -5.1351752281188965
    7. '_u' → logprob: -5.5101752281188965
    8. ' def' → logprob: -5.6351752281188965
    9. ',' → logprob: -6.2601752281188965
    10. ' ' → logprob: -7.7601752281188965

Token 364: ' ligne' (ID: 19583)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.440542459487915
    2. 'suite' → logprob: -1.815542459487915
    3. 'une' → logprob: -2.065542459487915
    4. 'l' → logprob: -2.440542459487915
    5. 'horizontal' → logprob: -2.815542459487915
    6. 'a' → logprob: -2.940542459487915
    7. 'contin' → logprob: -3.065542459487915
    8. 'succ' → logprob: -3.190542459487915
    9. 'ligne' → logprob: -3.315542459487915
    10. '   ' → logprob: -4.065542221069336

Token 365: ',
' (ID: 412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1101202517747879
    2. '_' → logprob: -2.9851202964782715
    3. ',' → logprob: -3.7351202964782715
    4. '_s' → logprob: -4.1101202964782715
    5. ' s' → logprob: -5.4851202964782715
    6. '(s' → logprob: -6.2351202964782715
    7. 'def' → logprob: -6.4851202964782715
    8. ':' → logprob: -6.8601202964782715
    9. ' ' → logprob: -7.6101202964782715
    10. '_\' → logprob: -7.7351202964782715

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4396500289440155
    2. '#' → logprob: -1.064650058746338
    3. 'ou' → logprob: -6.064650058746338
    4. ' #' → logprob: -6.064650058746338
    5. 'def' → logprob: -6.189650058746338
    6. ',' → logprob: -6.439650058746338
    7. 'et' → logprob: -6.939650058746338
    8. ' et' → logprob: -7.939650058746338
    9. ' ou' → logprob: -8.18964958190918
    10. '    ' → logprob: -8.93964958190918

Token 367: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29565688967704773
    2. 'col' → logprob: -1.7956569194793701
    3. ' colonne' → logprob: -3.67065691947937
    4. 'colon' → logprob: -4.795656681060791
    5. ' col' → logprob: -5.045656681060791
    6. '#' (adapté à ' #') → logprob: -5.045656681060791
    7. ',' → logprob: -5.170656681060791
    8. 'ou' → logprob: -5.295656681060791
    9. ' colon' → logprob: -5.420656681060791
    10. 'column' → logprob: -5.670656681060791

Token 368: ' colonne' (ID: 148275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4787864685058594
    2. '#' → logprob: -1.4787864685058594
    3. 'def' → logprob: -2.6037864685058594
    4. ' #' → logprob: -4.103786468505859
    5. 'col' → logprob: -4.228786468505859
    6. 'vertical' → logprob: -5.228786468505859
    7. ',' → logprob: -5.353786468505859
    8. '    ' → logprob: -5.353786468505859
    9. 'ou' → logprob: -5.478786468505859
    10. ' en' → logprob: -5.603786468505859

Token 369: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.386660099029541
    2. '   ' → logprob: -2.136660099029541
    3. 'def' → logprob: -2.261660099029541
    4. ' or' → logprob: -2.886660099029541
    5. ' ou' → logprob: -4.011660099029541
    6. ',
' → logprob: -5.136660099029541
    7. '.' → logprob: -5.636660099029541
    8. ':' → logprob: -5.636660099029541
    9. 's' → logprob: -5.886660099029541
    10. '#' → logprob: -6.511660099029541

Token 370: ' di' (ID: 1320)
  Prédit: ' diagon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diagon' → logprob: -0.621479332447052
    2. 'di' → logprob: -0.871479332447052
    3. ' diagonal' → logprob: -3.4964792728424072
    4. 'diag' → logprob: -4.496479511260986
    5. '#' → logprob: -6.746479511260986
    6. ' diag' → logprob: -6.871479511260986
    7. ' ' → logprob: -7.621479511260986
    8. ' #' → logprob: -9.121479034423828
    9. '   ' → logprob: -9.246479034423828
    10. '_di' → logprob: -9.496479034423828

Token 371: 'ago' (ID: 6334)
  Prédit: 'agon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agon' → logprob: -0.08107564598321915
    2. 'ag' → logprob: -2.581075668334961
    3. 'agonal' → logprob: -6.456075668334961
    4. 'a' → logprob: -7.831075668334961
    5. 'agn' → logprob: -9.456075668334961
    6. 'ago' → logprob: -9.706075668334961
    7. 'аг' → logprob: -10.956075668334961
    8. 'agno' → logprob: -10.956075668334961
    9. 'agona' → logprob: -11.331075668334961
    10. 'ags' → logprob: -12.956075668334961

Token 372: '.
' (ID: 558)
  Prédit: 'nale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nale' → logprob: -0.2672477662563324
    2. 'n' → logprob: -1.5172477960586548
    3. 'nal' → logprob: -4.267247676849365
    4. 'na' → logprob: -7.392247676849365
    5. 'ne' → logprob: -9.142248153686523
    6. 'nes' → logprob: -9.892248153686523
    7. 'nelle' → logprob: -10.767248153686523
    8. 'nable' → logprob: -10.767248153686523
    9. 'nas' → logprob: -10.892248153686523
    10. 'ale' → logprob: -11.017248153686523

Token 373: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11088845878839493
    2. '
' → logprob: -2.3608884811401367
    3. '   ' → logprob: -5.235888481140137
    4. ' 
' → logprob: -5.985888481140137
    5. '    
' → logprob: -7.235888481140137
    6. '\' → logprob: -7.360888481140137
    7. ' def' → logprob: -7.735888481140137
    8. '\n' → logprob: -8.360888481140137
    9. '  
' → logprob: -8.360888481140137
    10. '

' → logprob: -9.360888481140137

Token 374: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17254504561424255
    2. '   ' → logprob: -2.0475449562072754
    3. '
' → logprob: -4.172544956207275
    4. '    
' → logprob: -4.797544956207275
    5. ' def' → logprob: -5.547544956207275
    6. ' 
' → logprob: -7.047544956207275
    7. '\' → logprob: -7.672544956207275
    8. '   
' → logprob: -8.922545433044434
    9. '  
' → logprob: -9.172545433044434
    10. '\n' → logprob: -9.547545433044434

Token 375: ' Mais' (ID: 13880)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004256596323102713
    2. '
' → logprob: -5.754256725311279
    3. '   ' → logprob: -7.504256725311279
    4. ' def' → logprob: -7.629256725311279
    5. '    
' → logprob: -10.504256248474121
    6. ' 
' → logprob: -12.129256248474121
    7. '  
' → logprob: -13.254256248474121
    8. '

' → logprob: -13.879256248474121
    9. 'import' → logprob: -14.004256248474121
    10. '\' → logprob: -14.004256248474121

Token 376: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05827938765287399
    2. '   ' → logprob: -3.683279275894165
    3. ' def' → logprob: -3.808279275894165
    4. ' la' → logprob: -6.308279514312744
    5. '#' → logprob: -6.558279514312744
    6. '    ' → logprob: -7.058279514312744
    7. ' for' → logprob: -7.308279514312744
    8. 'n' → logprob: -7.808279514312744
    9. ' voici' → logprob: -8.058279037475586
    10. ' #' → logprob: -8.183279037475586

Token 377: ' fait' (ID: 7473)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.5435522198677063
    2. 'faite' → logprob: -1.9185521602630615
    3. 'suite' → logprob: -2.6685521602630615
    4. 'def' → logprob: -2.9185521602630615
    5. ' fait' → logprob: -2.9185521602630615
    6. 'cours' → logprob: -4.293552398681641
    7. 'continu' → logprob: -4.418552398681641
    8. 'continue' → logprob: -4.668552398681641
    9. 'python' → logprob: -4.918552398681641
    10. '#' → logprob: -4.918552398681641

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09437001496553421
    2. 'def' → logprob: -3.219370126724243
    3. '   ' → logprob: -3.594370126724243
    4. ' ,' → logprob: -4.219369888305664
    5. ':' → logprob: -6.594369888305664
    6. ' on' → logprob: -6.594369888305664
    7. ' def' → logprob: -6.719369888305664
    8. '#' → logprob: -6.969369888305664
    9. '    ' → logprob: -7.969369888305664
    10. ' :' → logprob: -8.094369888305664

Token 379: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6065640449523926
    2. ' on' → logprob: -1.9815640449523926
    3. '#' → logprob: -2.2315640449523926
    4. ' il' → logprob: -3.2315640449523926
    5. ' for' → logprob: -3.3565640449523926
    6. ' def' → logprob: -3.4815640449523926
    7. ' #' → logprob: -3.4815640449523926
    8. '   ' → logprob: -3.8565640449523926
    9. ' la' → logprob: -4.356564044952393
    10. ' nous' → logprob: -5.356564044952393

Token 380: ' cherche' (ID: 52345)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2151250839233398
    2. ' need' → logprob: -2.34012508392334
    3. ' va' → logprob: -2.46512508392334
    4. ' continue' → logprob: -2.46512508392334
    5. 'n' → logprob: -2.96512508392334
    6. ' veut' → logprob: -3.21512508392334
    7. ' can' → logprob: -3.46512508392334
    8. ' n' → logprob: -3.59012508392334
    9. '#' → logprob: -3.59012508392334
    10. ''ll' → logprob: -3.84012508392334

Token 381: ' le' (ID: 505)
  Prédit: ' combien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combien' → logprob: -1.3109939098358154
    2. ' le' → logprob: -1.5609939098358154
    3. ' à' → logprob: -1.8109939098358154
    4. 'le' → logprob: -2.3109939098358154
    5. ' la' → logprob: -2.4359939098358154
    6. 'les' → logprob: -3.9359939098358154
    7. 'à' → logprob: -3.9359939098358154
    8. ' les' → logprob: -3.9359939098358154
    9. ' juste' → logprob: -4.3109941482543945
    10. ' au' → logprob: -4.4359941482543945

Token 382: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.28411683440208435
    2. ' nombre' → logprob: -2.034116744995117
    3. 'maximum' → logprob: -3.159116744995117
    4. ' maximum' → logprob: -3.784116744995117
    5. 'plus' → logprob: -4.034116744995117
    6. 'max' → logprob: -4.159116744995117
    7. 'minimum' → logprob: -5.159116744995117
    8. 'score' → logprob: -6.159116744995117
    9. 'u' → logprob: -6.409116744995117
    10. ' plus' → logprob: -6.659116744995117

Token 383: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19198735058307648
    2. 'de' → logprob: -2.6919872760772705
    3. ' d' → logprob: -3.1919872760772705
    4. 'def' → logprob: -3.8169872760772705
    5. '   ' → logprob: -4.56698751449585
    6. 'd' → logprob: -4.94198751449585
    7. ' of' → logprob: -5.81698751449585
    8. 'minimum' → logprob: -5.81698751449585
    9. 'total' → logprob: -6.06698751449585
    10. ' maximal' → logprob: -6.19198751449585

Token 384: ' ligne' (ID: 19583)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31742969155311584
    2. ' lignes' → logprob: -1.8174296617507935
    3. 'lines' → logprob: -3.192429780960083
    4. ' lines' → logprob: -3.692429780960083
    5. 'align' → logprob: -3.817429780960083
    6. ' align' → logprob: -5.692429542541504
    7. 'cases' → logprob: -5.817429542541504
    8. '```' → logprob: -5.942429542541504
    9. 'vict' → logprob: -6.317429542541504
    10. ' lign' → logprob: -6.817429542541504

Token 385: ' droite' (ID: 61428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.027951950207352638
    2. ' s' → logprob: -4.277951717376709
    3. '_' → logprob: -5.652951717376709
    4. ',' → logprob: -5.652951717376709
    5. '_s' → logprob: -6.027951717376709
    6. ' ' → logprob: -7.277951717376709
    7. '   ' → logprob: -7.527951717376709
    8. ' mar' → logprob: -8.152952194213867
    9. 'def' → logprob: -8.277952194213867
    10. ' complète' → logprob: -8.402952194213867

Token 386: ' avec' (ID: 3937)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03114308789372444
    2. ' s' → logprob: -4.2811431884765625
    3. ',' → logprob: -5.4061431884765625
    4. ' mar' → logprob: -5.5311431884765625
    5. '_' → logprob: -6.5311431884765625
    6. ' cons' → logprob: -6.9061431884765625
    7. ' de' → logprob: -7.2811431884765625
    8. ' continue' → logprob: -7.6561431884765625
    9. 'def' → logprob: -7.6561431884765625
    10. '_s' → logprob: -7.9061431884765625

Token 387: ' longueur' (ID: 104613)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.6796339750289917
    2. 'u' → logprob: -1.0546339750289917
    3. 'length' → logprob: -3.0546340942382812
    4. ' u' → logprob: -3.1796340942382812
    5. ' au' → logprob: -3.8046340942382812
    6. 'une' → logprob: -4.929634094238281
    7. '   ' → logprob: -5.304634094238281
    8. '>=' → logprob: -5.304634094238281
    9. 'long' → logprob: -5.804634094238281
    10. 'minimum' → logprob: -6.304634094238281

Token 388: ' n' (ID: 297)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.44423532485961914
    2. 'u' → logprob: -1.3192353248596191
    3. 'au' → logprob: -3.444235324859619
    4. ' au' → logprob: -3.569235324859619
    5. '>=' → logprob: -4.569235324859619
    6. ' >=' → logprob: -5.444235324859619
    7. ' d' → logprob: -5.569235324859619
    8. ' minimale' → logprob: -6.319235324859619
    9. ' v' → logprob: -6.694235324859619
    10. 'd' → logprob: -6.819235324859619

Token 389: ' seulement' (ID: 32072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43840083479881287
    2. '
' → logprob: -1.4384008646011353
    3. '   ' → logprob: -2.3134007453918457
    4. '

' → logprob: -5.313400745391846
    5. ':' → logprob: -6.063400745391846
    6. ' def' → logprob: -6.313400745391846
    7. 'u' → logprob: -6.563400745391846
    8. ',' → logprob: -6.938400745391846
    9. '    
' → logprob: -7.063400745391846
    10. 'n' → logprob: -7.438400745391846

Token 390: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2262023538351059
    2. '
' → logprob: -1.976202368736267
    3. '   ' → logprob: -2.8512022495269775
    4. ':' → logprob: -6.101202487945557
    5. '    
' → logprob: -7.101202487945557
    6. '

' → logprob: -7.351202487945557
    7. ' def' → logprob: -7.601202487945557
    8. 'u' → logprob: -7.851202487945557
    9. '  
' → logprob: -8.601202011108398
    10. ' ' → logprob: -8.976202011108398

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5743812322616577
    2. 'def' → logprob: -1.0743812322616577
    3. '
' → logprob: -2.4493813514709473
    4. ':' → logprob: -6.574381351470947
    5. '    
' → logprob: -6.574381351470947
    6. ' def' → logprob: -6.574381351470947
    7. '<|end|>' → logprob: -6.824381351470947
    8. '\' → logprob: -7.324381351470947
    9. '  
' → logprob: -7.574381351470947
    10. ' ' → logprob: -7.949381351470947

Token 392: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.059591684490442276
    2. '   ' → logprob: -2.934591770172119
    3. '
' → logprob: -5.934591770172119
    4. '    
' → logprob: -6.434591770172119
    5. ' def' → logprob: -8.809591293334961
    6. '  
' → logprob: -9.559591293334961
    7. '\' → logprob: -9.934591293334961
    8. ' 
' → logprob: -10.809591293334961
    9. '   
' → logprob: -10.934591293334961
    10. 'import' → logprob: -11.184591293334961

Token 393: ' Ici' (ID: 145754)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015023564919829369
    2. '   ' → logprob: -4.265023708343506
    3. '
' → logprob: -7.515023708343506
    4. 'u' → logprob: -8.765023231506348
    5. ' def' → logprob: -9.390023231506348
    6. '    
' → logprob: -9.765023231506348
    7. 'v' → logprob: -12.765023231506348
    8. ' u' → logprob: -13.140023231506348
    9. '  
' → logprob: -13.390023231506348
    10. 'threshold' → logprob: -13.515023231506348

Token 394: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007941493764519691
    2. '   ' → logprob: -5.257941722869873
    3. ' def' → logprob: -6.882941722869873
    4. ':' → logprob: -7.257941722869873
    5. '
' → logprob: -7.632941722869873
    6. ',' → logprob: -8.132941246032715
    7. ':def' → logprob: -9.882941246032715
    8. '#' → logprob: -10.007941246032715
    9. '    
' → logprob: -10.632941246032715
    10. ' :' → logprob: -11.507941246032715

Token 395: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007539675571024418
    2. ' def' → logprob: -5.007539749145508
    3. '#' → logprob: -7.882539749145508
    4. '
' → logprob: -8.882539749145508
    5. '   ' → logprob: -9.382539749145508
    6. ' on' → logprob: -9.757539749145508
    7. 'pass' → logprob: -10.382539749145508
    8. 'n' → logprob: -11.257539749145508
    9. ' #' → logprob: -11.382539749145508
    10. ' pass' → logprob: -11.507539749145508

Token 396: ' victoire' (ID: 96596)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008306046947836876
    2. ' def' → logprob: -4.88330602645874
    3. '#' → logprob: -8.633306503295898
    4. ' code' → logprob: -9.258306503295898
    5. 'n' → logprob: -9.883306503295898
    6. 'import' → logprob: -10.133306503295898
    7. ' ' → logprob: -10.133306503295898
    8. '   ' → logprob: -10.508306503295898
    9. ' #' → logprob: -10.758306503295898
    10. '
' → logprob: -10.758306503295898

Token 397: ' est' (ID: 893)
  Prédit: ' condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.5915588736534119
    2. ' conditions' → logprob: -1.9665589332580566
    3. 'def' → logprob: -2.3415589332580566
    4. 'condition' → logprob: -2.3415589332580566
    5. ' est' → logprob: -3.4665589332580566
    6. ':' → logprob: -3.9665589332580566
    7. 'conditions' → logprob: -4.091558933258057
    8. '_condition' → logprob: -4.591558933258057
    9. 's' → logprob: -5.216558933258057
    10. 'est' → logprob: -5.341558933258057

Token 398: ' défin' (ID: 57890)
  Prédit: ' atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' atte' → logprob: -0.28671854734420776
    2. ' obten' → logprob: -2.5367186069488525
    3. ' défin' → logprob: -3.1617186069488525
    4. ' u' → logprob: -3.2867186069488525
    5. 'v' → logprob: -4.536718368530273
    6. ' atteint' → logprob: -4.661718368530273
    7. ' at' → logprob: -4.911718368530273
    8. 'u' → logprob: -4.911718368530273
    9. ':' → logprob: -5.286718368530273
    10. ' d' → logprob: -5.661718368530273

Token 399: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0001564586127642542
    2. 'e' → logprob: -10.00015640258789
    3. 'i' → logprob: -10.87515640258789
    4. '#' → logprob: -11.12515640258789
    5. ' par' → logprob: -11.25015640258789
    6. '   ' → logprob: -11.75015640258789
    7. '
' → logprob: -12.00015640258789
    8. ' ie' → logprob: -12.00015640258789
    9. 'ite' → logprob: -12.25015640258789
    10. 'it' → logprob: -12.75015640258789

Token 400: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.148850679397583
    2. 'par' → logprob: -2.648850679397583
    3. ' comme' → logprob: -3.023850679397583
    4. 'comme' → logprob: -4.648850440979004
    5. ':' → logprob: -5.398850440979004
    6. ' pour' → logprob: -6.648850440979004
    7. ',' → logprob: -7.148850440979004
    8. 'pour' → logprob: -7.898850440979004
    9. ' sur' → logprob: -8.023850440979004
    10. 'sur' → logprob: -8.273850440979004

Token 401: ' le' (ID: 505)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.9824460744857788
    2. 'u' → logprob: -1.3574460744857788
    3. ' la' → logprob: -1.4824460744857788
    4. ' v' → logprob: -2.8574461936950684
    5. 'v' → logprob: -3.1074461936950684
    6. 'la' → logprob: -4.107446193695068
    7. '"' → logprob: -5.357446193695068
    8. ' the' → logprob: -5.857446193695068
    9. 'l' → logprob: -6.107446193695068
    10. ' f' → logprob: -6.482446193695068

Token 402: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5103075504302979
    2. 'u' → logprob: -1.2603075504302979
    3. 'align' → logprob: -3.135307550430298
    4. 'minimum' → logprob: -3.885307550430298
    5. ' nombre' → logprob: -4.010307312011719
    6. 'v' → logprob: -5.010307312011719
    7. 'n' → logprob: -5.635307312011719
    8. 'token' → logprob: -5.760307312011719
    9. 'length' → logprob: -5.760307312011719
    10. 'long' → logprob: -6.260307312011719

Token 403: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.894906222820282
    2. ' d' → logprob: -1.5199062824249268
    3. 'minimum' → logprob: -2.1449062824249268
    4. 'de' → logprob: -2.3949062824249268
    5. ' minimum' → logprob: -2.5199062824249268
    6. '   ' → logprob: -3.6449062824249268
    7. 'd' → logprob: -3.8949062824249268
    8. 'def' → logprob: -4.644906044006348
    9. ' of' → logprob: -5.394906044006348
    10. '_' → logprob: -6.394906044006348

Token 404: ' lines' (ID: 8698)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7002051472663879
    2. 'mar' → logprob: -1.8252050876617432
    3. 'align' → logprob: -2.950205087661743
    4. 'élé' → logprob: -3.075205087661743
    5. ' lignes' → logprob: -3.200205087661743
    6. 'cases' → logprob: -3.575205087661743
    7. ' mar' → logprob: -3.700205087661743
    8. 'lines' → logprob: -4.200205326080322
    9. 'aligned' → logprob: -4.200205326080322
    10. 'cart' → logprob: -4.450205326080322

Token 405: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1382814645767212
    2. ' de' → logprob: -2.2632813453674316
    3. 's' → logprob: -2.3882813453674316
    4. ' _' → logprob: -3.0132813453674316
    5. '_s' → logprob: -3.1382813453674316
    6. '_required' → logprob: -3.1382813453674316
    7. ' mar' → logprob: -3.2632813453674316
    8. 'def' → logprob: -3.7632813453674316
    9. '_needed' → logprob: -3.8882813453674316
    10. ' s' → logprob: -3.8882813453674316

Token 406: 'cha' (ID: 3836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3839337825775146
    2. ' mar' → logprob: -1.5089337825775146
    3. ' u' → logprob: -2.1339337825775146
    4. 'u' → logprob: -3.0089337825775146
    5. '_' → logprob: -3.6339337825775146
    6. ' de' → logprob: -3.7589337825775146
    7. ' cons' → logprob: -3.7589337825775146
    8. ' align' → logprob: -4.008934020996094
    9. '_cont' → logprob: -4.133934020996094
    10. '_mark' → logprob: -4.383934020996094

Token 407: 'que' (ID: 1126)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05285682901740074
    2. 'que' → logprob: -3.927856922149658
    3. 'îne' → logprob: -4.177856922149658
    4. '```' → logprob: -4.927856922149658
    5. 'înes' → logprob: -5.927856922149658
    6. 'î' → logprob: -6.427856922149658
    7. 'rne' → logprob: -7.427856922149658
    8. 'rc' → logprob: -7.677856922149658
    9. 'n' → logprob: -7.677856922149658
    10. 'ine' → logprob: -7.802856922149658

Token 408: ' ligne' (ID: 19583)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.126902461051941
    2. ')' → logprob: -2.2519025802612305
    3. ' aligned' → logprob: -2.2519025802612305
    4. ' line' → logprob: -2.7519025802612305
    5. ' _' → logprob: -2.8769025802612305
    6. ' ligne' → logprob: -3.2519025802612305
    7. 'def' → logprob: -3.5019025802612305
    8. ' de' → logprob: -3.7519025802612305
    9. ' def' → logprob: -3.7519025802612305
    10. 'ligne' → logprob: -3.7519025802612305

Token 409: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.01800537109375
    2. ' mar' → logprob: -2.01800537109375
    3. 's' → logprob: -2.39300537109375
    4. ' marked' → logprob: -2.76800537109375
    5. ',' → logprob: -3.01800537109375
    6. '_cont' → logprob: -3.26800537109375
    7. ' droite' → logprob: -3.64300537109375
    8. ' =' → logprob: -3.76800537109375
    9. ' continu' → logprob: -3.76800537109375
    10. ' complète' → logprob: -3.76800537109375

Token 410: ' une' (ID: 2463)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8391014933586121
    2. 'une' → logprob: -1.4641015529632568
    3. ' u' → logprob: -2.714101552963257
    4. 'v' → logprob: -2.839101552963257
    5. 'un' → logprob: -3.214101552963257
    6. 'au' → logprob: -4.089101314544678
    7. ' une' → logprob: -4.089101314544678
    8. ' exactly' → logprob: -4.214101314544678
    9. ' exactement' → logprob: -4.464101314544678
    10. ' au' → logprob: -4.714101314544678

Token 411: ' ligne' (ID: 19583)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.7629860639572144
    2. 'def' → logprob: -2.137986183166504
    3. 'sequence' → logprob: -2.512986183166504
    4. '\n' → logprob: -3.012986183166504
    5. ' line' → logprob: -3.012986183166504
    6. 'ligne' → logprob: -3.012986183166504
    7. 'line' → logprob: -3.512986183166504
    8. ')' → logprob: -3.512986183166504
    9. 'n' → logprob: -3.512986183166504
    10. 'continuous' → logprob: -3.887986183166504

Token 412: ' =' (ID: 314)
  Prédit: ' droite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' droite' → logprob: -1.2618480920791626
    2. ',' → logprob: -1.3868480920791626
    3. ')' → logprob: -1.6368480920791626
    4. ' )' → logprob: -3.136847972869873
    5. ' s' → logprob: -3.261847972869873
    6. 's' → logprob: -3.261847972869873
    7. ' complète' → logprob: -3.761847972869873
    8. ' continu' → logprob: -3.886847972869873
    9. ' ' → logprob: -4.011847972869873
    10. '_' → logprob: -4.261847972869873

Token 413: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.863108515739441
    2. 'n' → logprob: -1.988108515739441
    3. ' u' → logprob: -2.1131086349487305
    4. ')' → logprob: -2.3631086349487305
    5. 'u' → logprob: -2.7381086349487305
    6. '1' → logprob: -3.2381086349487305
    7. ' marked' → logprob: -3.2381086349487305
    8. ' aligned' → logprob: -3.4881086349487305
    9. ' ' → logprob: -3.6131086349487305
    10. 'aligned' → logprob: -3.6131086349487305

Token 414: ' éléments' (ID: 57375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03496979549527168
    2. ' )' → logprob: -3.7849698066711426
    3. ',' → logprob: -5.159969806671143
    4. ')
' → logprob: -6.784969806671143
    5. '   ' → logprob: -7.284969806671143
    6. '):' → logprob: -7.659969806671143
    7. '*' → logprob: -8.284969329833984
    8. ' or' → logprob: -8.409969329833984
    9. ' ,' → logprob: -8.659969329833984
    10. '[' → logprob: -8.784969329833984

Token 415: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11292144656181335
    2. ',' → logprob: -3.6129214763641357
    3. '   ' → logprob: -3.8629214763641357
    4. ' )' → logprob: -4.112921237945557
    5. ' mar' → logprob: -4.362921237945557
    6. 's' → logprob: -4.362921237945557
    7. ' s' → logprob: -5.237921237945557
    8. '):' → logprob: -6.487921237945557
    9. ' marked' → logprob: -6.612921237945557
    10. ' de' → logprob: -6.987921237945557

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7445087432861328
    2. 'def' → logprob: -0.7445087432861328
    3. '
' → logprob: -4.119508743286133
    4. ',' → logprob: -4.494508743286133
    5. ':' → logprob: -4.744508743286133
    6. ' def' → logprob: -5.744508743286133
    7. '    
' → logprob: -6.744508743286133
    8. 's' → logprob: -6.994508743286133
    9. ',
' → logprob: -6.994508743286133
    10. ')' → logprob: -6.994508743286133

Token 417: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27853140234947205
    2. 'def' → logprob: -1.6535314321517944
    3. ':' → logprob: -3.653531312942505
    4. ',' → logprob: -4.653531551361084
    5. '
' → logprob: -5.403531551361084
    6. ' ' → logprob: -5.903531551361084
    7. ')' → logprob: -6.278531551361084
    8. '  ' → logprob: -6.778531551361084
    9. '    
' → logprob: -6.903531551361084
    10. ' def' → logprob: -7.528531551361084

Token 418: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03142660856246948
    2. '
' → logprob: -3.5314266681671143
    3. '   ' → logprob: -6.531426429748535
    4. '    
' → logprob: -9.406426429748535
    5. ' def' → logprob: -9.906426429748535
    6. ' 
' → logprob: -10.906426429748535
    7. '#' → logprob: -11.406426429748535
    8. '

' → logprob: -11.531426429748535
    9. 'import' → logprob: -11.531426429748535
    10. '```' → logprob: -11.781426429748535

Token 419: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001968958182260394
    2. '   ' → logprob: -6.751968860626221
    3. '
' → logprob: -7.251968860626221
    4. 'dire' → logprob: -10.251969337463379
    5. 'direction' → logprob: -10.876969337463379
    6. '    
' → logprob: -11.376969337463379
    7. '#' → logprob: -11.501969337463379
    8. ' def' → logprob: -12.251969337463379
    9. 'import' → logprob: -13.626969337463379
    10. ' directions' → logprob: -14.126969337463379

Token 420: ' Rem' (ID: 6890)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00908378791064024
    2. '   ' → logprob: -5.5090837478637695
    3. ' def' → logprob: -6.2590837478637695
    4. '
' → logprob: -6.6340837478637695
    5. 'for' → logprob: -7.1340837478637695
    6. ' for' → logprob: -8.13408374786377
    7. '#' → logprob: -8.13408374786377
    8. '```' → logprob: -9.00908374786377
    9. 'import' → logprob: -9.75908374786377
    10. ' ' → logprob: -10.38408374786377

Token 421: 'arque' (ID: 167524)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.7111507654190063
    2. 'arque' → logprob: -1.0861507654190063
    3. 'placer' → logprob: -2.586150646209717
    4. 'aining' → logprob: -3.086150646209717
    5. 'ar' → logprob: -3.586150646209717
    6. 'ark' → logprob: -4.961150646209717
    7. 'a' → logprob: -6.086150646209717
    8. 'ain' → logprob: -6.211150646209717
    9. 'pla' → logprob: -6.211150646209717
    10. 'p' → logprob: -6.711150646209717

Token 422: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7097704410552979
    2. '   ' → logprob: -1.2097704410552979
    3. ' :' → logprob: -1.9597704410552979
    4. 'def' → logprob: -3.459770441055298
    5. ',' → logprob: -4.084770202636719
    6. '#' → logprob: -4.959770202636719
    7. '    ' → logprob: -5.084770202636719
    8. ' ' → logprob: -6.084770202636719
    9. '  ' → logprob: -7.459770202636719
    10. 'import' → logprob: -7.584770202636719

Token 423: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8260894417762756
    2. 'def' → logprob: -0.9510894417762756
    3. '#' → logprob: -2.076089382171631
    4. ' for' → logprob: -4.451089382171631
    5. ' #' → logprob: -5.326089382171631
    6. '
' → logprob: -5.326089382171631
    7. 'for' → logprob: -5.451089382171631
    8. ' la' → logprob: -5.576089382171631
    9. ' def' → logprob: -5.576089382171631
    10. ' on' → logprob: -6.201089382171631

Token 424: ' ce' (ID: 2357)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9288583397865295
    2. 'le' → logprob: -1.1788582801818848
    3. ' la' → logprob: -2.1788582801818848
    4. ' le' → logprob: -3.5538582801818848
    5. ' ce' → logprob: -3.5538582801818848
    6. 'def' → logprob: -3.8038582801818848
    7. 'l' → logprob: -3.8038582801818848
    8. 'les' → logprob: -4.428858280181885
    9. ' cette' → logprob: -4.428858280181885
    10. 'this' → logprob: -4.553858280181885

Token 425: ' problème' (ID: 35630)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9122780561447144
    2. 'code' → logprob: -1.5372780561447144
    3. ' code' → logprob: -1.6622780561447144
    4. '#' → logprob: -2.662278175354004
    5. 'jeu' → logprob: -2.662278175354004
    6. 'comment' → logprob: -3.787278175354004
    7. 'main' → logprob: -5.662278175354004
    8. '```' → logprob: -6.037278175354004
    9. 'game' → logprob: -6.287278175354004
    10. ' jeu' → logprob: -6.287278175354004

Token 426: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07049483805894852
    2. '   ' → logprob: -3.4454948902130127
    3. ' ,' → logprob: -3.9454948902130127
    4. 'def' → logprob: -4.945494651794434
    5. ':' → logprob: -5.445494651794434
    6. ')' → logprob: -6.445494651794434
    7. '<|end|>' → logprob: -7.570494651794434
    8. ' ' → logprob: -7.695494651794434
    9. ',
' → logprob: -8.070494651794434
    10. ' la' → logprob: -8.570494651794434

Token 427: ' ligne' (ID: 19583)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11417075246572495
    2. '#' → logprob: -3.364170789718628
    3. 'vict' → logprob: -3.739170789718628
    4. 'while' → logprob: -5.114170551300049
    5. 'v' → logprob: -5.364170551300049
    6. 'dé' → logprob: -5.614170551300049
    7. 'for' → logprob: -5.739170551300049
    8. 'vic' → logprob: -5.864170551300049
    9. ' code' → logprob: -5.864170551300049
    10. 'code' → logprob: -5.864170551300049

Token 428: ' droite' (ID: 61428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17800602316856384
    2. ' s' → logprob: -3.0530059337615967
    3. 'def' → logprob: -4.553006172180176
    4. ' suivante' → logprob: -4.553006172180176
    5. ' complète' → logprob: -4.803006172180176
    6. '<|end|>' → logprob: -4.803006172180176
    7. ' continu' → logprob: -4.928006172180176
    8. ' droite' → logprob: -5.053006172180176
    9. 'break' → logprob: -5.178006172180176
    10. 'continue' → logprob: -5.303006172180176

Token 429: ' d' (ID: 272)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.247025489807129
    2. 's' → logprob: -1.497025489807129
    3. ' n' → logprob: -2.372025489807129
    4. ' est' → logprob: -2.372025489807129
    5. ' de' → logprob: -2.872025489807129
    6. ',' → logprob: -2.997025489807129
    7. ' complète' → logprob: -3.497025489807129
    8. ' continue' → logprob: -3.747025489807129
    9. 'def' → logprob: -3.872025489807129
    10. ' is' → logprob: -4.622025489807129

Token 430: ''une' (ID: 13337)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -1.156203269958496
    2. 'e' → logprob: -1.281203269958496
    3. ''au' → logprob: -1.281203269958496
    4. ''' → logprob: -3.406203269958496
    5. 'code' → logprob: -3.656203269958496
    6. ''une' → logprob: -4.281203269958496
    7. 'u' → logprob: -4.281203269958496
    8. ''un' → logprob: -4.531203269958496
    9. 'align' → logprob: -5.781203269958496
    10. ''é' → logprob: -6.281203269958496

Token 431: ' n' (ID: 297)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7202786207199097
    2. 'gr' → logprob: -2.095278739929199
    3. ' grille' → logprob: -2.095278739929199
    4. ' matr' → logprob: -2.220278739929199
    5. 'mat' → logprob: -3.095278739929199
    6. ' ligne' → logprob: -3.220278739929199
    7. 'jou' → logprob: -4.345278739929199
    8. 'liste' → logprob: -5.220278739929199
    9. ' partie' → logprob: -5.595278739929199
    10. 'vict' → logprob: -5.720278739929199

Token 432: '-' (ID: 12)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7069821953773499
    2. ' =' → logprob: -1.706982135772705
    3. ' x' → logprob: -1.831982135772705
    4. 'x' → logprob: -3.456982135772705
    5. 'e' → logprob: -3.956982135772705
    6. ')' → logprob: -3.956982135772705
    7. '*' → logprob: -4.706982135772705
    8. 'u' → logprob: -4.831982135772705
    9. ',' → logprob: -4.956982135772705
    10. ''importe' → logprob: -5.206982135772705

Token 433: 'uple' (ID: 16616)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.10013053566217422
    2. 'elements' → logprob: -3.725130558013916
    3. '*' → logprob: -4.350130558013916
    4. ')' → logprob: -4.600130558013916
    5. 'l' → logprob: -4.600130558013916
    6. 'x' → logprob: -5.225130558013916
    7. '=' → logprob: -5.475130558013916
    8. 'element' → logprob: -5.725130558013916
    9. ' éléments' → logprob: -5.850130558013916
    10. 'n' → logprob: -5.975130558013916

Token 434: 't' (ID: 83)
  Prédit: 'mé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mé' → logprob: -1.6108022928237915
    2. 'm' → logprob: -1.8608022928237915
    3. 'r' → logprob: -1.8608022928237915
    4. 'mer' → logprob: -2.485802173614502
    5. 'ma' → logprob: -2.860802173614502
    6. 'plets' → logprob: -2.860802173614502
    7. 'ment' → logprob: -2.985802173614502
    8. 'me' → logprob: -3.610802173614502
    9. 'plet' → logprob: -3.985802173614502
    10. 'ts' → logprob: -3.985802173614502

Token 435: ' sur' (ID: 1512)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8551622033119202
    2. 's' → logprob: -0.8551622033119202
    3. ' s' → logprob: -3.2301621437072754
    4. 'es' → logprob: -4.105162143707275
    5. ' de' → logprob: -4.480162143707275
    6. ',' → logprob: -4.730162143707275
    7. 'de' → logprob: -5.230162143707275
    8. ')' → logprob: -5.230162143707275
    9. ' ' → logprob: -5.230162143707275
    10. ' est' → logprob: -5.355162143707275

Token 436: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9234631657600403
    2. 'l' → logprob: -1.7984631061553955
    3. 'une' → logprob: -2.0484631061553955
    4. 'au' → logprob: -2.1734631061553955
    5. 'n' → logprob: -2.9234631061553955
    6. 'le' → logprob: -3.0484631061553955
    7. 'les' → logprob: -3.6734631061553955
    8. 'ligne' → logprob: -4.048463344573975
    9. ' ' → logprob: -5.048463344573975
    10. 'un' → logprob: -5.298463344573975

Token 437: ' même' (ID: 9679)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6326645016670227
    2. 'ligne' → logprob: -1.132664442062378
    3. ' grille' → logprob: -2.507664442062378
    4. 'mat' → logprob: -3.632664442062378
    5. 'n' → logprob: -4.257664680480957
    6. 'l' → logprob: -5.882664680480957
    7. 'range' → logprob: -6.257664680480957
    8. 'plate' → logprob: -6.257664680480957
    9. 'def' → logprob: -6.257664680480957
    10. 'contin' → logprob: -6.882664680480957

Token 438: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.022597339004278183
    2. ' ligne' → logprob: -4.522597312927246
    3. 'case' → logprob: -5.272597312927246
    4. 'l' → logprob: -6.397597312927246
    5. 'line' → logprob: -6.897597312927246
    6. ' ' → logprob: -7.272597312927246
    7. 'direction' → logprob: -7.647597312927246
    8. ' case' → logprob: -7.897597312927246
    9. 'lig' → logprob: -8.022597312927246
    10. '   ' → logprob: -8.147597312927246

Token 439: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3352653682231903
    2. ' ou' → logprob: -1.7102653980255127
    3. '   ' → logprob: -2.8352653980255127
    4. ' or' → logprob: -4.085265159606934
    5. 's' → logprob: -4.835265159606934
    6. 'def' → logprob: -5.585265159606934
    7. '#' → logprob: -5.835265159606934
    8. ')' → logprob: -5.835265159606934
    9. ' ,' → logprob: -5.835265159606934
    10. ',
' → logprob: -6.460265159606934

Token 440: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.32239794731140137
    2. '   ' → logprob: -2.4473979473114014
    3. ' colonne' → logprob: -3.0723979473114014
    4. 'column' → logprob: -3.3223979473114014
    5. ',' → logprob: -3.4473979473114014
    6. '<|end|>' → logprob: -4.5723981857299805
    7. ' col' → logprob: -4.5723981857299805
    8. ' or' → logprob: -4.5723981857299805
    9. 'colon' → logprob: -5.3223981857299805
    10. ' ' → logprob: -5.5723981857299805

Token 441: 'onne' (ID: 25335)
  Prédit: 'onne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onne' → logprob: -0.002468643942847848
    2. 'onnes' → logprob: -7.002468585968018
    3. 'ne' → logprob: -8.002469062805176
    4. 'ine' → logprob: -8.252469062805176
    5. '```' → logprob: -8.377469062805176
    6. 'e' → logprob: -8.627469062805176
    7. '#' → logprob: -9.502469062805176
    8. 'igne' → logprob: -9.877469062805176
    9. '+' → logprob: -10.502469062805176
    10. 'onn' → logprob: -10.502469062805176

Token 442: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8415848612785339
    2. '   ' → logprob: -0.9665848612785339
    3. ' ou' → logprob: -2.7165849208831787
    4. ' or' → logprob: -3.0915849208831787
    5. ')' → logprob: -3.2165849208831787
    6. '<|end|>' → logprob: -4.4665846824646
    7. 'def' → logprob: -4.9665846824646
    8. '#' → logprob: -5.5915846824646
    9. 's' → logprob: -5.8415846824646
    10. 'n' → logprob: -6.4665846824646

Token 443: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.024216972291469574
    2. '#' → logprob: -4.524217128753662
    3. 'diag' → logprob: -4.524217128753662
    4. ' diagon' → logprob: -7.774217128753662
    5. '(di' → logprob: -8.149216651916504
    6. ' diagonal' → logprob: -8.274216651916504
    7. 'or' → logprob: -8.649216651916504
    8. 'd' → logprob: -8.649216651916504
    9. '
' → logprob: -8.774216651916504
    10. '_diag' → logprob: -9.399216651916504

Token 444: 'agon' (ID: 9863)
  Prédit: 'agon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agon' → logprob: -0.5886734127998352
    2. 'ag' → logprob: -1.2136733531951904
    3. 'ago' → logprob: -2.5886733531951904
    4. 'agonal' → logprob: -2.7136733531951904
    5. 'a' → logprob: -5.8386735916137695
    6. 'agona' → logprob: -6.4636735916137695
    7. 'agno' → logprob: -6.8386735916137695
    8. 'аг' → logprob: -8.58867359161377
    9. 'agg' → logprob: -9.58867359161377
    10. 'aga' → logprob: -10.15117359161377

Token 445: 'ale' (ID: 1167)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.26804354786872864
    2. 'e' → logprob: -2.2680435180664062
    3. 'née' → logprob: -2.6430435180664062
    4. 'ée' → logprob: -3.3930435180664062
    5. 'n' → logprob: -4.893043518066406
    6. 'nées' → logprob: -4.893043518066406
    7. 'nne' → logprob: -6.018043518066406
    8. 'nee' → logprob: -6.518043518066406
    9. 'ñe' → logprob: -6.643043518066406
    10. 'né' → logprob: -6.768043518066406

Token 446: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9786989688873291
    2. 'def' → logprob: -1.353698968887329
    3. ':' → logprob: -1.478698968887329
    4. '   ' → logprob: -2.603698968887329
    5. ')' → logprob: -3.228698968887329
    6. ',' → logprob: -4.85369873046875
    7. '):
' → logprob: -5.72869873046875
    8. ' def' → logprob: -5.85369873046875
    9. 's' → logprob: -6.10369873046875
    10. '.' → logprob: -7.47869873046875

Token 447: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8296589255332947
    2. 'def' → logprob: -0.8296589255332947
    3. '#' → logprob: -2.2046589851379395
    4. 'n' → logprob: -6.0796589851379395
    5. ' #' → logprob: -6.4546589851379395
    6. ')' → logprob: -6.8296589851379395
    7. 'v' → logprob: -6.8296589851379395
    8. ' def' → logprob: -6.8296589851379395
    9. 'not' → logprob: -6.8296589851379395
    10. ',' → logprob: -7.0796589851379395

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01362154446542263
    2. '#' → logprob: -5.2636213302612305
    3. '       ' → logprob: -6.8886213302612305
    4. '    ' → logprob: -7.0136213302612305
    5. '  ' → logprob: -7.2636213302612305
    6. ' ' → logprob: -7.2636213302612305
    7. 'def' → logprob: -7.6386213302612305
    8. ',' → logprob: -7.7636213302612305
    9. ')' → logprob: -7.8886213302612305
    10. ' mais' → logprob: -8.01362133026123

Token 449: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10319744050502777
    2. '   ' → logprob: -2.3531973361968994
    3. 'n' → logprob: -7.4781975746154785
    4. ' #' → logprob: -7.8531975746154785
    5. 'mais' → logprob: -7.8531975746154785
    6. '       ' → logprob: -8.22819709777832
    7. 'but' → logprob: -8.97819709777832
    8. 'est' → logprob: -8.97819709777832
    9. 'et' → logprob: -9.10319709777832
    10. 'def' → logprob: -9.22819709777832

Token 450: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6927483677864075
    2. '   ' → logprob: -0.9427483677864075
    3. '#' → logprob: -2.3177483081817627
    4. 'n' → logprob: -6.067748546600342
    5. '    ' → logprob: -6.817748546600342
    6. '       ' → logprob: -6.942748546600342
    7. ' #' → logprob: -7.067748546600342
    8. 'for' → logprob: -7.192748546600342
    9. ')' → logprob: -7.442748546600342
    10. '  ' → logprob: -7.692748546600342

Token 451: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22078600525856018
    2. '   ' → logprob: -2.3457860946655273
    3. 'on' → logprob: -4.220786094665527
    4. 'c' → logprob: -4.470786094665527
    5. ' #' → logprob: -4.845786094665527
    6. ' on' → logprob: -4.970786094665527
    7. 'il' → logprob: -5.470786094665527
    8. 'continue' → logprob: -5.470786094665527
    9. 'la' → logprob: -5.595786094665527
    10. 'pas' → logprob: -5.595786094665527

Token 452: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.8888975381851196
    2. ' on' → logprob: -2.13889741897583
    3. 'marked' → logprob: -2.13889741897583
    4. 'on' → logprob: -2.26389741897583
    5. 'u' → logprob: -3.01389741897583
    6. ' mar' → logprob: -3.38889741897583
    7. ' marked' → logprob: -3.51389741897583
    8. 'mar' → logprob: -3.63889741897583
    9. ' len' → logprob: -3.63889741897583
    10. 'une' → logprob: -3.63889741897583

Token 453: ' joueur' (ID: 72629)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -1.1156986951828003
    2. ' marked' → logprob: -2.24069881439209
    3. 'nombre' → logprob: -2.61569881439209
    4. ' code' → logprob: -2.61569881439209
    5. ' nombre' → logprob: -3.24069881439209
    6. 'len' → logprob: -3.49069881439209
    7. 'n' → logprob: -3.61569881439209
    8. ' line' → logprob: -3.74069881439209
    9. 'line' → logprob: -3.99069881439209
    10. 'code' → logprob: -3.99069881439209

Token 454: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2674601078033447
    2. '#' → logprob: -1.6424601078033447
    3. 'a' → logprob: -2.3924601078033447
    4. ' has' → logprob: -2.5174601078033447
    5. '   ' → logprob: -2.5174601078033447
    6. ' n' → logprob: -2.5174601078033447
    7. 's' → logprob: -3.5174601078033447
    8. ')' → logprob: -3.8924601078033447
    9. 'n' → logprob: -4.017459869384766
    10. ' est' → logprob: -4.267459869384766

Token 455: ' marqué' (ID: 141173)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6994445323944092
    2. 'au' → logprob: -1.8244445323944092
    3. 'mar' → logprob: -2.074444532394409
    4. ' une' → logprob: -3.324444532394409
    5. 'align' → logprob: -3.574444532394409
    6. 'n' → logprob: -3.699444532394409
    7. ' au' → logprob: -3.949444532394409
    8. 'u' → logprob: -4.199444770812988
    9. 'un' → logprob: -4.199444770812988
    10. ' marqué' → logprob: -4.574444770812988

Token 456: ' T' (ID: 353)
  Prédit: ' toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -1.7638784646987915
    2. 'une' → logprob: -1.8888784646987915
    3. ' au' → logprob: -2.263878345489502
    4. ' une' → logprob: -2.638878345489502
    5. ' toute' → logprob: -2.638878345489502
    6. ' tous' → logprob: -2.763878345489502
    7. 'ent' → logprob: -2.763878345489502
    8. 'au' → logprob: -3.263878345489502
    9. 't' → logprob: -3.513878345489502
    10. 'all' → logprob: -3.638878345489502

Token 457: ' nombres' (ID: 76205)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4236139953136444
    2. '>=' → logprob: -2.298614025115967
    3. 'he' → logprob: -3.048614025115967
    4. ' ==' → logprob: -3.298614025115967
    5. 'u' → logprob: -3.423614025115967
    6. ' <' → logprob: -3.673614025115967
    7. 'okens' → logprob: -4.173614025115967
    8. ' >' → logprob: -4.298614025115967
    9. '==' → logprob: -4.673614025115967
    10. 'outes' → logprob: -4.923614025115967

Token 458: ' align' (ID: 9538)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.6362411975860596
    2. ' >=' → logprob: -1.1362411975860596
    3. '>=' → logprob: -2.6362411975860596
    4. ',' → logprob: -3.8862411975860596
    5. ' <' → logprob: -4.5112409591674805
    6. ' marqué' → logprob: -4.7612409591674805
    7. '   ' → logprob: -5.1362409591674805
    8. ' >' → logprob: -5.1362409591674805
    9. 'mar' → logprob: -5.3862409591674805
    10. ' marked' → logprob: -6.0112409591674805

Token 459: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0024498500861227512
    2. 'ées' → logprob: -6.877449989318848
    3. 'es' → logprob: -7.127449989318848
    4. 'é' → logprob: -7.877449989318848
    5. '   ' → logprob: -10.252449989318848
    6. 'ed' → logprob: -10.377449989318848
    7. '__' → logprob: -10.502449989318848
    8. 'nés' → logprob: -10.752449989318848
    9. 'ign' → logprob: -11.002449989318848
    10. '```' → logprob: -11.252449989318848

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15025287866592407
    2. '   ' → logprob: -3.1502528190612793
    3. ' ,' → logprob: -3.7752528190612793
    4. ' dans' → logprob: -4.400252819061279
    5. ')' → logprob: -5.150252819061279
    6. ' au' → logprob: -5.150252819061279
    7. ' in' → logprob: -5.400252819061279
    8. ' de' → logprob: -5.650252819061279
    9. '>=' → logprob: -5.650252819061279
    10. '),' → logprob: -5.775252819061279

Token 461: ' ça' (ID: 13590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7205215096473694
    2. '#' → logprob: -1.4705214500427246
    3. ' il' → logprob: -2.3455214500427246
    4. ' n' → logprob: -3.0955214500427246
    5. ' #' → logprob: -3.3455214500427246
    6. ',' → logprob: -3.9705214500427246
    7. 'n' → logprob: -4.220521450042725
    8. ' la' → logprob: -4.595521450042725
    9. 'il' → logprob: -4.595521450042725
    10. ' on' → logprob: -5.220521450042725

Token 462: ' vaut' (ID: 83004)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.6501609086990356
    2. 's' → logprob: -1.7751609086990356
    3. ' suffit' → logprob: -1.9001609086990356
    4. 'n' → logprob: -2.150160789489746
    5. 'ne' → logprob: -2.525160789489746
    6. 'est' → logprob: -3.150160789489746
    7. '>=' → logprob: -3.150160789489746
    8. ' n' → logprob: -3.275160789489746
    9. ' suff' → logprob: -3.400160789489746
    10. '>' → logprob: -3.650160789489746

Token 463: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2953715324401855
    2. 'u' → logprob: -1.4203715324401855
    3. '0' → logprob: -2.1703715324401855
    4. 'T' → logprob: -2.5453715324401855
    5. 'exact' → logprob: -2.5453715324401855
    6. ' ' → logprob: -2.7953715324401855
    7. ' T' → logprob: -3.0453715324401855
    8. ' u' → logprob: -3.5453715324401855
    9. 'v' → logprob: -3.7953715324401855
    10. ' exactement' → logprob: -4.0453715324401855

Token 464: '1' (ID: 16)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.688583493232727
    2. 'v' → logprob: -1.063583493232727
    3. '0' → logprob: -2.6885833740234375
    4. ' u' → logprob: -3.3135833740234375
    5. ' v' → logprob: -4.0635833740234375
    6. '1' → logprob: -4.1885833740234375
    7. ' ' → logprob: -4.6885833740234375
    8. 'n' → logprob: -6.4385833740234375
    9. '100' → logprob: -6.9385833740234375
    10. 'exact' → logprob: -7.3135833740234375

Token 465: ' si' (ID: 1784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31697553396224976
    2. '
' → logprob: -1.9419755935668945
    3. '   ' → logprob: -2.1919755935668945
    4. ':' → logprob: -5.5669755935668945
    5. '

' → logprob: -6.0669755935668945
    6. '    
' → logprob: -6.3169755935668945
    7. '<|end|>' → logprob: -6.8169755935668945
    8. ',' → logprob: -7.0669755935668945
    9. '\n' → logprob: -7.3169755935668945
    10. '  
' → logprob: -7.4419755935668945

Token 466: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.055532168596982956
    2. ' T' → logprob: -2.930532217025757
    3. 't' → logprob: -7.430531978607178
    4. ' t' → logprob: -10.680532455444336
    5. ' ' → logprob: -11.055532455444336
    6. ' ' → logprob: -12.555532455444336
    7. 'u' → logprob: -12.805532455444336
    8. 'v' → logprob: -13.055532455444336
    9. '_T' → logprob: -13.305532455444336
    10. '   ' → logprob: -13.430532455444336

Token 467: '==' (ID: 560)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.9215170741081238
    2. ' ==' → logprob: -1.1715171337127686
    3. '==' → logprob: -2.1715171337127686
    4. '>=' → logprob: -2.4215171337127686
    5. ' >' → logprob: -2.7965171337127686
    6. '>' → logprob: -4.4215168952941895
    7. 'u' → logprob: -5.0465168952941895
    8. ' <=' → logprob: -6.1715168952941895
    9. '+' → logprob: -6.5465168952941895
    10. '=' → logprob: -6.5465168952941895

Token 468: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.022446751594543457
    2. 'u' → logprob: -4.147446632385254
    3. ' n' → logprob: -5.147446632385254
    4. 'v' → logprob: -8.022446632385254
    5. ' u' → logprob: -8.397446632385254
    6. '```' → logprob: -12.397446632385254
    7. '_n' → logprob: -12.647446632385254
    8. '   ' → logprob: -12.772446632385254
    9. ' v' → logprob: -13.022446632385254
    10. ' ' → logprob: -13.147446632385254

Token 469: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4563918709754944
    2. '
' → logprob: -1.0813918113708496
    3. '    
' → logprob: -4.33139181137085
    4. 'def' → logprob: -5.45639181137085
    5. ':' → logprob: -5.95639181137085
    6. '  
' → logprob: -6.58139181137085
    7. '

' → logprob: -6.95639181137085
    8. '\n' → logprob: -7.20639181137085
    9. ' 
' → logprob: -7.58139181137085
    10. ',' → logprob: -7.70639181137085

Token 470: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043455854058265686
    2. ' and' → logprob: -4.043456077575684
    3. 'def' → logprob: -4.793456077575684
    4. ' et' → logprob: -5.543456077575684
    5. 'et' → logprob: -6.543456077575684
    6. ',' → logprob: -6.543456077575684
    7. '    
' → logprob: -6.668456077575684
    8. ' else' → logprob: -7.168456077575684
    9. '       ' → logprob: -7.168456077575684
    10. '#' → logprob: -7.168456077575684

Token 471: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12804853916168213
    2. ' ' → logprob: -2.1280484199523926
    3. '   ' → logprob: -7.628048419952393
    4. '1' → logprob: -8.50304889678955
    5. ' rien' → logprob: -8.75304889678955
    6. ' ce' → logprob: -10.12804889678955
    7. ',' → logprob: -10.62804889678955
    8. 'continue' → logprob: -11.00304889678955
    9. ' c' → logprob: -11.12804889678955
    10. '  ' → logprob: -11.25304889678955

Token 472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018065694894175977
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.5001802444458
    4. 'c' → logprob: -15.7501802444458
    5. 'auc' → logprob: -16.125181198120117
    6. ' ' → logprob: -16.250181198120117
    7. '  ' → logprob: -16.250181198120117
    8. 'zero' → logprob: -16.875181198120117
    9. 'ce' → logprob: -17.000181198120117
    10. '1' → logprob: -17.125181198120117

Token 473: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16250357031822205
    2. '   ' → logprob: -2.037503480911255
    3. '
' → logprob: -4.162503719329834
    4. '    
' → logprob: -5.662503719329834
    5. ' def' → logprob: -8.162503242492676
    6. '<|end|>' → logprob: -9.537503242492676
    7. 'import' → logprob: -10.162503242492676
    8. '  
' → logprob: -10.287503242492676
    9. '```' → logprob: -10.537503242492676
    10. '   
' → logprob: -11.037503242492676

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13045118749141693
    2. 'def' → logprob: -2.505451202392578
    3. '```' → logprob: -4.005451202392578
    4. '    
' → logprob: -4.255451202392578
    5. ' for' → logprob: -5.880451202392578
    6. '
' → logprob: -6.005451202392578
    7. 'for' → logprob: -6.755451202392578
    8. '  
' → logprob: -7.630451202392578
    9. ' 
' → logprob: -8.130451202392578
    10. '\' → logprob: -9.130451202392578

Token 475: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001278534036828205
    2. '   ' → logprob: -9.375127792358398
    3. '
' → logprob: -10.250127792358398
    4. ' def' → logprob: -12.500127792358398
    5. '    
' → logprob: -12.875127792358398
    6. 'import' → logprob: -14.375127792358398
    7. '	def' → logprob: -15.125127792358398
    8. ' 
' → logprob: -16.2501277923584
    9. ':def' → logprob: -16.3751277923584
    10. '  
' → logprob: -16.3751277923584

Token 476: ' Donc' (ID: 88837)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005294414004310966
    2. '
' → logprob: -7.7505292892456055
    3. ' def' → logprob: -9.750529289245605
    4. '   ' → logprob: -11.500529289245605
    5. '#' → logprob: -11.875529289245605
    6. 'import' → logprob: -12.250529289245605
    7. 'n' → logprob: -12.250529289245605
    8. '
' → logprob: -12.750529289245605
    9. 'd' → logprob: -13.375529289245605
    10. ' 
' → logprob: -13.625529289245605

Token 477: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010926496179308742
    2. '   ' → logprob: -9.375109672546387
    3. ' def' → logprob: -11.375109672546387
    4. '
' → logprob: -11.375109672546387
    5. '    
' → logprob: -14.750109672546387
    6. '

' → logprob: -15.875109672546387
    7. ':def' → logprob: -15.875109672546387
    8. '#' → logprob: -16.00010871887207
    9. 'de' → logprob: -16.12510871887207
    10. 'import' → logprob: -16.25010871887207

Token 478: ' réalité' (ID: 63047)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004530400037765503
    2. 'suite' → logprob: -6.754530429840088
    3. 'continue' → logprob: -7.754530429840088
    4. '#' → logprob: -7.754530429840088
    5. '```' → logprob: -8.12952995300293
    6. 'code' → logprob: -8.25452995300293
    7. 'part' → logprob: -8.25452995300293
    8. 'fin' → logprob: -8.62952995300293
    9. 'continu' → logprob: -8.75452995300293
    10. 'python' → logprob: -9.00452995300293

Token 479: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012291006743907928
    2. ',' → logprob: -5.137290954589844
    3. '   ' → logprob: -6.012290954589844
    4. ':' → logprob: -6.387290954589844
    5. ' def' → logprob: -6.637290954589844
    6. ':def' → logprob: -7.387290954589844
    7. '
' → logprob: -8.512290954589844
    8. '    
' → logprob: -11.012290954589844
    9. ':
' → logprob: -11.137290954589844
    10. ' ,' → logprob: -11.887290954589844

Token 480: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020544764993246645
    2. ' def' → logprob: -8.875205039978027
    3. '   ' → logprob: -10.375205039978027
    4. '    
' → logprob: -11.625205039978027
    5. '
' → logprob: -12.250205039978027
    6. ' ' → logprob: -13.000205039978027
    7. 'import' → logprob: -13.125205039978027
    8. '<|end|>' → logprob: -13.125205039978027
    9. ' 
' → logprob: -13.250205039978027
    10. '#' → logprob: -13.375205039978027

Token 481: 'cer' (ID: 3308)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1700633466243744
    2. ' line' → logprob: -2.5450632572174072
    3. ' k' → logprob: -3.6700632572174072
    4. 'i' → logprob: -3.9200632572174072
    5. ' j' → logprob: -4.670063495635986
    6. 'k' → logprob: -5.045063495635986
    7. ' def' → logprob: -5.170063495635986
    8. 'def' → logprob: -5.420063495635986
    9. ' l' → logprob: -7.295063495635986
    10. '   ' → logprob: -7.420063495635986

Token 482: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41954362392425537
    2. ' def' → logprob: -1.1695436239242554
    3. ' i' → logprob: -4.669543743133545
    4. ' n' → logprob: -5.294543743133545
    5. ' marked' → logprob: -5.294543743133545
    6. ' ' → logprob: -6.169543743133545
    7. 'marked' → logprob: -6.544543743133545
    8. '   ' → logprob: -6.544543743133545
    9. ' line' → logprob: -6.794543743133545
    10. ' la' → logprob: -7.044543743133545

Token 483: ' forme' (ID: 27450)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.893766462802887
    2. ' u' → logprob: -2.018766403198242
    3. 'u' → logprob: -2.143766403198242
    4. 'i' → logprob: -2.893766403198242
    5. ' i' → logprob: -3.143766403198242
    6. ' line' → logprob: -3.393766403198242
    7. ' n' → logprob: -3.893766403198242
    8. 'player' → logprob: -4.018766403198242
    9. 'n' → logprob: -4.268766403198242
    10. 'count' → logprob: -4.268766403198242

Token 484: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07741270214319229
    2. ' def' → logprob: -3.2024126052856445
    3. ':' → logprob: -3.9524126052856445
    4. ' :' → logprob: -5.4524126052856445
    5. '   ' → logprob: -5.7024126052856445
    6. ' marked' → logprob: -6.5774126052856445
    7. ':def' → logprob: -7.0774126052856445
    8. '
' → logprob: -7.0774126052856445
    9. 'marked' → logprob: -7.7024126052856445
    10. '():' → logprob: -7.7024126052856445

Token 485: ' problème' (ID: 35630)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042049817740917206
    2. 'code' → logprob: -3.7920498847961426
    3. 'dé' → logprob: -5.417049884796143
    4. ' code' → logprob: -5.667049884796143
    5. 'for' → logprob: -5.792049884796143
    6. 'n' → logprob: -6.667049884796143
    7. 'if' → logprob: -6.792049884796143
    8. '```' → logprob: -7.167049884796143
    9. 'next' → logprob: -7.292049884796143
    10. 'board' → logprob: -7.667049884796143

Token 486: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5162813067436218
    2. ':' → logprob: -1.0162813663482666
    3. '   ' → logprob: -4.1412811279296875
    4. ' def' → logprob: -5.0162811279296875
    5. ':def' → logprob: -5.0162811279296875
    6. '<|end|>' → logprob: -5.5162811279296875
    7. ',' → logprob: -6.2662811279296875
    8. ':
' → logprob: -6.3912811279296875
    9. '<|end|>' → logprob: -6.8912811279296875
    10. '
' → logprob: -7.2662811279296875

Token 487: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016849929466843605
    2. ' def' → logprob: -4.391849994659424
    3. '   ' → logprob: -6.141849994659424
    4. '
' → logprob: -6.641849994659424
    5. 'import' → logprob: -8.016849517822266
    6. '    
' → logprob: -8.391849517822266
    7. '```' → logprob: -8.891849517822266
    8. ' 
' → logprob: -9.891849517822266
    9. '  
' → logprob: -10.766849517822266
    10. ' déf' → logprob: -10.766849517822266

Token 488: ' compte' (ID: 19657)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027471914887428284
    2. 'continue' → logprob: -4.027472019195557
    3. ' continue' → logprob: -5.902472019195557
    4. '   ' → logprob: -6.277472019195557
    5. 'contin' → logprob: -6.902472019195557
    6. ' def' → logprob: -7.527472019195557
    7. ' va' → logprob: -7.902472019195557
    8. 'n' → logprob: -8.027471542358398
    9. 'check' → logprob: -8.277471542358398
    10. '#' → logprob: -8.277471542358398

Token 489: ' combien' (ID: 106648)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0284138917922974
    2. 'le' → logprob: -1.2784138917922974
    3. ' combien' → logprob: -1.5284138917922974
    4. ' les' → logprob: -3.653413772583008
    5. ' le' → logprob: -3.778413772583008
    6. 'for' → logprob: -4.028413772583008
    7. 'comb' → logprob: -4.278413772583008
    8. 'lines' → logprob: -4.278413772583008
    9. ' ' → logprob: -4.903413772583008
    10. '_lines' → logprob: -5.278413772583008

Token 490: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.629497766494751
    2. '   ' → logprob: -1.379497766494751
    3. 'de' → logprob: -1.879497766494751
    4. 'def' → logprob: -3.379497766494751
    5. '    ' → logprob: -4.504497528076172
    6. 'd' → logprob: -5.504497528076172
    7. ' ' → logprob: -5.879497528076172
    8. '  ' → logprob: -5.879497528076172
    9. 'of' → logprob: -6.129497528076172
    10. ' of' → logprob: -6.254497528076172

Token 491: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.7955695986747742
    2. ' lines' → logprob: -1.045569658279419
    3. ' lignes' → logprob: -2.670569658279419
    4. 'l' → logprob: -2.920569658279419
    5. 'def' → logprob: -3.420569658279419
    6. ' marked' → logprob: -4.79556941986084
    7. ' def' → logprob: -5.42056941986084
    8. 'rows' → logprob: -5.42056941986084
    9. 'marked' → logprob: -5.92056941986084
    10. ' rows' → logprob: -6.04556941986084

Token 492: ',' (ID: 11)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -1.0193121433258057
    2. ',' → logprob: -1.7693121433258057
    3. ' mar' → logprob: -2.1443121433258057
    4. 'def' → logprob: -2.7693121433258057
    5. '   ' → logprob: -2.8943121433258057
    6. ' dro' → logprob: -3.0193121433258057
    7. ' marked' → logprob: -3.6443121433258057
    8. 'marked' → logprob: -3.8943121433258057
    9. ' (' → logprob: -4.269311904907227
    10. ' de' → logprob: -5.019311904907227

Token 493: ' colon' (ID: 20947)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8710912466049194
    2. 'marked' → logprob: -2.246091365814209
    3. 'rows' → logprob: -2.496091365814209
    4. '   ' → logprob: -2.496091365814209
    5. ' marked' → logprob: -2.871091365814209
    6. 'cols' → logprob: -2.871091365814209
    7. 'colon' → logprob: -3.621091365814209
    8. '    ' → logprob: -3.746091365814209
    9. 'col' → logprob: -4.121091365814209
    10. 'columns' → logprob: -4.371091365814209

Token 494: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.32372644543647766
    2. 'ne' → logprob: -1.3237264156341553
    3. 'es' → logprob: -4.948726654052734
    4. 'e' → logprob: -5.823726654052734
    5. 'nne' → logprob: -9.823726654052734
    6. 'onnes' → logprob: -9.948726654052734
    7. '   ' → logprob: -10.198726654052734
    8. 'ie' → logprob: -10.448726654052734
    9. '```' → logprob: -10.448726654052734
    10. 'n' → logprob: -11.073726654052734

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39822566509246826
    2. ' ou' → logprob: -1.2732256650924683
    3. 'ou' → logprob: -3.648225784301758
    4. ' or' → logprob: -4.398225784301758
    5. 'et' → logprob: -5.898225784301758
    6. 'or' → logprob: -5.898225784301758
    7. ' et' → logprob: -6.273225784301758
    8. '   ' → logprob: -6.773225784301758
    9. ' ,' → logprob: -7.898225784301758
    10. 'marked' → logprob: -8.398225784301758

Token 496: ' ou' (ID: 2031)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -1.1474212408065796
    2. 'ou' → logprob: -1.5224212408065796
    3. ' ou' → logprob: -1.6474212408065796
    4. '#' → logprob: -1.8974212408065796
    5. ' diagon' → logprob: -2.647421360015869
    6. '   ' → logprob: -4.147421360015869
    7. 'or' → logprob: -4.522421360015869
    8. ' or' → logprob: -4.897421360015869
    9. 'diag' → logprob: -5.397421360015869
    10. 'et' → logprob: -5.397421360015869

Token 497: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.010507339611649513
    2. ' diagon' → logprob: -4.885507106781006
    3. 'diag' → logprob: -6.260507106781006
    4. '   ' → logprob: -8.010507583618164
    5. '#' → logprob: -8.760507583618164
    6. ' diagonal' → logprob: -9.385507583618164
    7. '(di' → logprob: -9.510507583618164
    8. ' ' → logprob: -9.760507583618164
    9. '_di' → logprob: -10.135507583618164
    10. '```' → logprob: -10.510507583618164

Token 498: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.005102122202515602
    2. 'ale' → logprob: -6.630102157592773
    3. '\' → logprob: -7.130102157592773
    4. 'a' → logprob: -7.755102157592773
    5. 'als' → logprob: -7.755102157592773
    6. '```' → logprob: -7.755102157592773
    7. 'al' → logprob: -8.255102157592773
    8. 'aux' → logprob: -8.505102157592773
    9. '   ' → logprob: -8.630102157592773
    10. 'es' → logprob: -9.255102157592773

Token 499: '
' (ID: 198)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mar' → logprob: -1.1036489009857178
    2. ' sont' → logprob: -1.3536489009857178
    3. ' compl' → logprob: -1.7286489009857178
    4. ',' → logprob: -2.9786489009857178
    5. 'mar' → logprob: -3.9786489009857178
    6. 'ont' → logprob: -4.228649139404297
    7. ' fully' → logprob: -4.353649139404297
    8. 'com' → logprob: -4.728649139404297
    9. ' entièrement' → logprob: -4.728649139404297
    10. ' exactly' → logprob: -4.853649139404297

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3910304009914398
    2. ' mar' → logprob: -1.8910304307937622
    3. 'mar' → logprob: -3.6410303115844727
    4. ',' → logprob: -3.6410303115844727
    5. ' sont' → logprob: -3.8910303115844727
    6. 'ont' → logprob: -4.516030311584473
    7. ' de' → logprob: -4.516030311584473
    8. '==' → logprob: -4.516030311584473
    9. 'com' → logprob: -4.641030311584473
    10. ' compl' → logprob: -5.016030311584473

Token 501: ' #' (ID: 1069)
  Prédit: ' compl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compl' → logprob: -0.8454425930976868
    2. 'ont' → logprob: -1.970442533493042
    3. ' sont' → logprob: -2.720442533493042
    4. ' mar' → logprob: -2.970442533493042
    5. 'compl' → logprob: -2.970442533493042
    6. 'ent' → logprob: -3.220442533493042
    7. ' ent' → logprob: -3.345442533493042
    8. '   ' → logprob: -3.470442533493042
    9. 'com' → logprob: -3.470442533493042
    10. ' ont' → logprob: -4.220442771911621

Token 502: ' ent' (ID: 1121)
  Prédit: 'compl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compl' → logprob: -1.010441780090332
    2. 'com' → logprob: -1.760441780090332
    3. 'ont' → logprob: -2.010441780090332
    4. ' compl' → logprob: -2.260441780090332
    5. 'mar' → logprob: -3.510441780090332
    6. ' mar' → logprob: -3.635441780090332
    7. 's' → logprob: -3.760441780090332
    8. 'ent' → logprob: -3.760441780090332
    9. ' sont' → logprob: -4.385441780090332
    10. 'complete' → logprob: -4.385441780090332

Token 503: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.5931209325790405
    2. 'ière' → logprob: -0.8431209325790405
    3. 'ier' → logprob: -5.21812105178833
    4. 'i' → logprob: -5.34312105178833
    5. 'ire' → logprob: -6.09312105178833
    6. 'iers' → logprob: -6.71812105178833
    7. 're' → logprob: -7.34312105178833
    8. '```' → logprob: -7.46812105178833
    9. 'iere' → logprob: -7.84312105178833
    10. 'ieres' → logprob: -8.593120574951172

Token 504: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1031488180160522
    2. ' sont' → logprob: -1.3531488180160522
    3. ' mar' → logprob: -2.228148937225342
    4. 'mar' → logprob: -2.353148937225342
    5. '   ' → logprob: -2.728148937225342
    6. 'ont' → logprob: -3.228148937225342
    7. 'def' → logprob: -4.353148937225342
    8. 'n' → logprob: -4.478148937225342
    9. 'com' → logprob: -4.978148937225342
    10. ' (' → logprob: -5.103148937225342

Token 505: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.5259931683540344
    2. ' mar' → logprob: -1.9009931087493896
    3. 'compl' → logprob: -2.9009931087493896
    4. 'ent' → logprob: -2.9009931087493896
    5. 'com' → logprob: -3.0259931087493896
    6. ' compl' → logprob: -3.4009931087493896
    7. ' entièrement' → logprob: -3.5259931087493896
    8. ' True' → logprob: -4.650993347167969
    9. 'True' → logprob: -4.775993347167969
    10. ' complètement' → logprob: -5.525993347167969

Token 506: 'quées' (ID: 111264)
  Prédit: 'quées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.060067880898714066
    2. 'qu' → logprob: -2.935067892074585
    3. 'k' → logprob: -6.060067653656006
    4. 'quée' → logprob: -7.060067653656006
    5. 'qués' → logprob: -7.060067653656006
    6. 'que' → logprob: -8.310068130493164
    7. 'qué' → logprob: -8.310068130493164
    8. 'rk' → logprob: -8.810068130493164
    9. 'q' → logprob: -8.935068130493164
    10. 'ked' → logprob: -9.685068130493164

Token 507: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44049128890037537
    2. 'def' → logprob: -1.4404913187026978
    3. ':' → logprob: -2.815491199493408
    4. '
' → logprob: -3.315491199493408
    5. '<|end|>' → logprob: -4.315491199493408
    6. '<|end|>' → logprob: -5.565491199493408
    7. '    
' → logprob: -6.315491199493408
    8. ' def' → logprob: -7.065491199493408
    9. ':def' → logprob: -7.065491199493408
    10. ')' → logprob: -7.190491199493408

Token 508: 'com' (ID: 639)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03691205754876137
    2. '   ' → logprob: -4.036911964416504
    3. ').' → logprob: -4.411911964416504
    4. ' )' → logprob: -5.786911964416504
    5. 'def' → logprob: -6.036911964416504
    6. '),' → logprob: -8.786911964416504
    7. ')
' → logprob: -8.911911964416504
    8. '):' → logprob: -9.161911964416504
    9. ')n' → logprob: -9.286911964416504
    10. '.' → logprob: -9.786911964416504

Token 509: 'pos' (ID: 1103)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.0843978151679039
    2. 'plet' → logprob: -3.709397792816162
    3. 'pletely' → logprob: -3.709397792816162
    4. 'plete' → logprob: -4.709397792816162
    5. 'plt' → logprob: -4.959397792816162
    6. 'plets' → logprob: -5.084397792816162
    7. 'ple' → logprob: -6.209397792816162
    8. '```' → logprob: -6.334397792816162
    9. 'p' → logprob: -6.459397792816162
    10. ')' → logprob: -6.834397792816162

Token 510: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.19653630256652832
    2. 'ees' → logprob: -3.1965363025665283
    3. 'ee' → logprob: -3.8215363025665283
    4. 'ed' → logprob: -3.8215363025665283
    5. 'ent' → logprob: -4.321536064147949
    6. ')' → logprob: -4.446536064147949
    7. 'ée' → logprob: -4.446536064147949
    8. 'es' → logprob: -4.821536064147949
    9. 'é' → logprob: -5.071536064147949
    10. '}' → logprob: -5.321536064147949

Token 511: ' de' (ID: 334)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.823846697807312
    2. ' uniquement' → logprob: -1.073846697807312
    3. 'd' → logprob: -2.8238468170166016
    4. ' entièrement' → logprob: -3.0738468170166016
    5. 'de' → logprob: -3.6988468170166016
    6. '   ' → logprob: -3.8238468170166016
    7. ' de' → logprob: -4.073846817016602
    8. ' d' → logprob: -4.573846817016602
    9. ')' → logprob: -4.823846817016602
    10. ' of' → logprob: -5.073846817016602

Token 512: ' n' (ID: 297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6464731693267822
    2. 'True' → logprob: -0.7714731693267822
    3. 'marked' → logprob: -4.896472930908203
    4. ' True' → logprob: -6.146472930908203
    5. '[n' → logprob: -6.396472930908203
    6. 'n' → logprob: -6.896472930908203
    7. ' [' → logprob: -7.521472930908203
    8. 'all' → logprob: -7.771472930908203
    9. '(True' → logprob: -9.021472930908203
    10. '   ' → logprob: -9.396472930908203

Token 513: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.1018904447555542
    2. ' éléments' → logprob: -1.1018904447555542
    3. ')' → logprob: -1.9768904447555542
    4. ' True' → logprob: -2.6018905639648438
    5. ' elements' → logprob: -3.8518905639648438
    6. 'True' → logprob: -3.8518905639648438
    7. '=True' → logprob: -4.851890563964844
    8. ''' → logprob: -4.851890563964844
    9. 'cases' → logprob: -5.101890563964844
    10. ' False' → logprob: -5.351890563964844

Token 514: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14780627191066742
    2. '   ' → logprob: -2.147806167602539
    3. 'def' → logprob: -5.397806167602539
    4. ').' → logprob: -5.522806167602539
    5. '])' → logprob: -6.022806167602539
    6. ' )' → logprob: -6.397806167602539
    7. ')
' → logprob: -6.397806167602539
    8. ' mar' → logprob: -6.897806167602539
    9. ',' → logprob: -7.147806167602539
    10. '),' → logprob: -7.397806167602539

Token 515: ' =' (ID: 314)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08064068853855133
    2. '   ' → logprob: -2.8306407928466797
    3. '
' → logprob: -4.08064079284668
    4. '    
' → logprob: -6.95564079284668
    5. '<|end|>' → logprob: -8.20564079284668
    6. ' def' → logprob: -8.83064079284668
    7. '<|end|>' → logprob: -9.95564079284668
    8. ':' → logprob: -9.95564079284668
    9. ')' → logprob: -10.45564079284668
    10. ':def' → logprob: -10.45564079284668

Token 516: ' cela' (ID: 17542)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008175051771104336
    2. ' def' → logprob: -6.133174896240234
    3. '   ' → logprob: -6.133174896240234
    4. '1' → logprob: -6.883174896240234
    5. 'u' → logprob: -7.133174896240234
    6. '
' → logprob: -7.383174896240234
    7. 'n' → logprob: -7.758174896240234
    8. '0' → logprob: -8.758174896240234
    9. '#' → logprob: -9.008174896240234
    10. 'sum' → logprob: -9.258174896240234

Token 517: ' donne' (ID: 30004)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0899205207824707
    2. '   ' → logprob: -4.089920520782471
    3. ' revient' → logprob: -4.339920520782471
    4. 'est' → logprob: -4.464920520782471
    5. ' =' → logprob: -4.839920520782471
    6. ' vaut' → logprob: -5.214920520782471
    7. 'n' → logprob: -5.339920520782471
    8. 'return' → logprob: -5.589920520782471
    9. ' est' → logprob: -5.714920520782471
    10. '#' → logprob: -5.839920520782471

Token 518: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1166893243789673
    2. ' le' → logprob: -1.4916893243789673
    3. ' la' → logprob: -1.6166893243789673
    4. '   ' → logprob: -2.7416892051696777
    5. 'def' → logprob: -2.7416892051696777
    6. ' ' → logprob: -3.3666892051696777
    7. ' the' → logprob: -3.9916892051696777
    8. 'la' → logprob: -4.241689205169678
    9. '1' → logprob: -4.616689205169678
    10. '0' → logprob: -4.741689205169678

Token 519: ' entier' (ID: 80473)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.05671362951397896
    2. ' score' → logprob: -3.056713581085205
    3. 'int' → logprob: -6.181713581085205
    4. 'count' → logprob: -6.306713581085205
    5. 'nombre' → logprob: -6.681713581085205
    6. 'point' → logprob: -7.056713581085205
    7. ' entier' → logprob: -7.556713581085205
    8. 'total' → logprob: -8.431714057922363
    9. 'def' → logprob: -8.556714057922363
    10. 'ent' → logprob: -8.556714057922363

Token 520: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42217132449150085
    2. 'def' → logprob: -1.1721713542938232
    3. ':' → logprob: -3.7971713542938232
    4. '
' → logprob: -4.922171115875244
    5. '<|end|>' → logprob: -6.547171115875244
    6. ')' → logprob: -7.172171115875244
    7. '    
' → logprob: -7.172171115875244
    8. '<|end|>' → logprob: -7.672171115875244
    9. ' def' → logprob: -7.797171115875244
    10. ':def' → logprob: -8.047171592712402

Token 521: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20860882103443146
    2. '   ' → logprob: -2.208608865737915
    3. '
' → logprob: -2.583608865737915
    4. '    
' → logprob: -6.208608627319336
    5. '<|end|>' → logprob: -8.458608627319336
    6. ' def' → logprob: -8.583608627319336
    7. '<|end|>' → logprob: -8.708608627319336
    8. ')' → logprob: -9.083608627319336
    9. 'import' → logprob: -9.583608627319336
    10. '  
' → logprob: -10.708608627319336

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5057595372200012
    2. 'def' → logprob: -1.0057594776153564
    3. '<|end|>' → logprob: -4.0057597160339355
    4. '
' → logprob: -4.8807597160339355
    5. '    
' → logprob: -5.6307597160339355
    6. '<|end|>' → logprob: -7.1307597160339355
    7. ' def' → logprob: -7.3807597160339355
    8. ')' → logprob: -9.755759239196777
    9. ' 
' → logprob: -10.005759239196777
    10. ' ' → logprob: -10.130759239196777

Token 523: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41825294494628906
    2. 'def' → logprob: -1.168252944946289
    3. '    
' → logprob: -3.668252944946289
    4. '
' → logprob: -5.293252944946289
    5. ' def' → logprob: -9.043252944946289
    6. 'import' → logprob: -9.418252944946289
    7. '        
' → logprob: -10.543252944946289
    8. '   
' → logprob: -11.043252944946289
    9. '```' → logprob: -11.293252944946289
    10. ' 
' → logprob: -11.418252944946289

Token 524: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004797257483005524
    2. '
' → logprob: -5.754797458648682
    3. '   ' → logprob: -6.504797458648682
    4. '    
' → logprob: -9.629796981811523
    5. ' def' → logprob: -10.004796981811523
    6. '  
' → logprob: -12.879796981811523
    7. ' 
' → logprob: -13.004796981811523
    8. '

' → logprob: -13.254796981811523
    9. '   
' → logprob: -13.754796981811523
    10. 'import' → logprob: -14.129796981811523

Token 525: ' compte' (ID: 19657)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00037478472222574055
    2. ' def' → logprob: -8.500374794006348
    3. 'continue' → logprob: -9.875374794006348
    4. '#' → logprob: -10.375374794006348
    5. '
' → logprob: -10.625374794006348
    6. 'define' → logprob: -11.000374794006348
    7. '   ' → logprob: -11.000374794006348
    8. 'return' → logprob: -12.500374794006348
    9. ' 
' → logprob: -12.500374794006348
    10. 'dé' → logprob: -12.625374794006348

Token 526: ' combien' (ID: 106648)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12145696580410004
    2. '   ' → logprob: -2.3714568614959717
    3. ' def' → logprob: -5.371457099914551
    4. 'marked' → logprob: -5.871457099914551
    5. '_' → logprob: -5.996457099914551
    6. '=' → logprob: -6.371457099914551
    7. 'lines' → logprob: -6.621457099914551
    8. '_lines' → logprob: -6.621457099914551
    9. 'for' → logprob: -6.621457099914551
    10. ' =' → logprob: -6.871457099914551

Token 527: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0659458637237549
    2. '   ' → logprob: -1.3159458637237549
    3. ' de' → logprob: -1.3159458637237549
    4. '_' → logprob: -3.690945863723755
    5. 'de' → logprob: -3.690945863723755
    6. '    ' → logprob: -4.440945625305176
    7. '  ' → logprob: -4.690945625305176
    8. '_us' → logprob: -4.690945625305176
    9. '_de' → logprob: -4.690945625305176
    10. ')' → logprob: -5.690945625305176

Token 528: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.39470136165618896
    2. ' lines' → logprob: -2.1447014808654785
    3. 'l' → logprob: -2.5197014808654785
    4. 'marked' → logprob: -3.3947014808654785
    5. 'def' → logprob: -3.7697014808654785
    6. ' lignes' → logprob: -3.7697014808654785
    7. 'full' → logprob: -4.6447014808654785
    8. 'rows' → logprob: -4.7697014808654785
    9. ' marked' → logprob: -4.8947014808654785
    10. ' full' → logprob: -5.2697014808654785

Token 529: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03395894169807434
    2. '_complete' → logprob: -5.408958911895752
    3. 'ent' → logprob: -5.533958911895752
    4. 'com' → logprob: -5.783958911895752
    5. 'def' → logprob: -5.908958911895752
    6. 'marked' → logprob: -6.033958911895752
    7. 'dro' → logprob: -6.158958911895752
    8. '_completed' → logprob: -6.658958911895752
    9. ' mar' → logprob: -6.783958911895752
    10. '   ' → logprob: -6.908958911895752

Token 530: ' cette' (ID: 7696)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.9906702041625977
    2. 'marked' → logprob: -1.3656702041625977
    3. ' code' → logprob: -2.1156702041625977
    4. 'mar' → logprob: -2.2406702041625977
    5. 'n' → logprob: -3.6156702041625977
    6. 'True' → logprob: -4.115670204162598
    7. ' marked' → logprob: -4.240670204162598
    8. ' mar' → logprob: -4.365670204162598
    9. 'l' → logprob: -4.365670204162598
    10. 'def' → logprob: -4.490670204162598

Token 531: ' sorte' (ID: 37800)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.391433596611023
    2. 'man' → logprob: -1.766433596611023
    3. 'count' → logprob: -1.766433596611023
    4. 'mar' → logprob: -2.0164337158203125
    5. 'def' → logprob: -3.0164337158203125
    6. '```' → logprob: -3.2664337158203125
    7. ' mar' → logprob: -3.7664337158203125
    8. ' count' → logprob: -3.7664337158203125
    9. 'fois' → logprob: -4.1414337158203125
    10. 'code' → logprob: -4.2664337158203125

Token 532: ' sont' (ID: 5242)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04694310948252678
    2. ',' → logprob: -4.046943187713623
    3. ' marked' → logprob: -4.546943187713623
    4. '   ' → logprob: -4.796943187713623
    5. ' def' → logprob: -5.671943187713623
    6. 'marked' → logprob: -6.546943187713623
    7. ' mar' → logprob: -7.046943187713623
    8. ' sont' → logprob: -7.171943187713623
    9. ' (' → logprob: -7.296943187713623
    10. '.' → logprob: -8.796942710876465

Token 533: ' présentes' (ID: 154902)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.80046546459198
    2. ' mar' → logprob: -0.92546546459198
    3. 'True' → logprob: -3.1754655838012695
    4. ' True' → logprob: -3.4254655838012695
    5. 'us' → logprob: -3.5504655838012695
    6. 'marked' → logprob: -4.3004655838012695
    7. 'valid' → logprob: -5.4254655838012695
    8. 'v' → logprob: -5.4254655838012695
    9. 'mark' → logprob: -6.1754655838012695
    10. 'com' → logprob: -6.1754655838012695

Token 534: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16980665922164917
    2. '   ' → logprob: -2.169806718826294
    3. '
' → logprob: -3.544806718826294
    4. ':' → logprob: -5.044806480407715
    5. '<|end|>' → logprob: -5.669806480407715
    6. ' def' → logprob: -6.794806480407715
    7. '<|end|>' → logprob: -7.294806480407715
    8. '    
' → logprob: -7.794806480407715
    9. ':def' → logprob: -8.044806480407715
    10. '.' → logprob: -8.794806480407715

Token 535: ' chaque' (ID: 21194)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.28485921025276184
    2. 'player' → logprob: -2.5348591804504395
    3. 'marked' → logprob: -3.0348591804504395
    4. 'each' → logprob: -3.2848591804504395
    5. ' each' → logprob: -3.7848591804504395
    6. ' chaque' → logprob: -4.4098591804504395
    7. ' player' → logprob: -4.6598591804504395
    8. ' joueur' → logprob: -5.0348591804504395
    9. ' marked' → logprob: -5.1598591804504395
    10. 'ch' → logprob: -5.4098591804504395

Token 536: ' joueur' (ID: 72629)
  Prédit: ' joueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joueur' → logprob: -0.44032591581344604
    2. 'jou' → logprob: -1.0653259754180908
    3. 'player' → logprob: -4.690325736999512
    4. ' player' → logprob: -7.190325736999512
    5. 'def' → logprob: -7.565325736999512
    6. 'j' → logprob: -8.190325736999512
    7. ' joueurs' → logprob: -8.565325736999512
    8. '   ' → logprob: -8.940325736999512
    9. ')' → logprob: -9.565325736999512
    10. ' ' → logprob: -9.815325736999512

Token 537: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5178754329681396
    2. 'def' → logprob: -1.0178754329681396
    3. '<|end|>' → logprob: -3.3928754329681396
    4. '
' → logprob: -5.392875671386719
    5. '<|end|>' → logprob: -5.892875671386719
    6. '    
' → logprob: -6.767875671386719
    7. ' def' → logprob: -8.392875671386719
    8. ')' → logprob: -8.392875671386719
    9. ':' → logprob: -9.017875671386719
    10. '#' → logprob: -10.267875671386719

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36654847860336304
    2. 'def' → logprob: -1.2415485382080078
    3. '    
' → logprob: -4.366548538208008
    4. '
' → logprob: -6.241548538208008
    5. ' def' → logprob: -7.116548538208008
    6. '  
' → logprob: -7.741548538208008
    7. ':' → logprob: -7.741548538208008
    8. '```' → logprob: -7.866548538208008
    9. '\' → logprob: -8.241548538208008
    10. ' 
' → logprob: -8.366548538208008

Token 539: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013134514447301626
    2. '   ' → logprob: -7.12631368637085
    3. '
' → logprob: -8.001313209533691
    4. ' def' → logprob: -9.001313209533691
    5. '    
' → logprob: -10.376313209533691
    6. 'import' → logprob: -11.001313209533691
    7. ':def' → logprob: -14.001313209533691
    8. ' 
' → logprob: -14.751313209533691
    9. '	def' → logprob: -15.001313209533691
    10. '```' → logprob: -15.376313209533691

Token 540: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002646735229063779
    2. ' def' → logprob: -9.000265121459961
    3. '   ' → logprob: -9.125265121459961
    4. '
' → logprob: -10.375265121459961
    5. '    
' → logprob: -14.625265121459961
    6. 'import' → logprob: -15.125265121459961
    7. 'for' → logprob: -15.875265121459961
    8. '	def' → logprob: -16.75026512145996
    9. ':def' → logprob: -17.00026512145996
    10. '#' → logprob: -17.25026512145996

Token 541: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9478080868721008
    2. 'def' → logprob: -1.197808027267456
    3. ' i' → logprob: -1.947808027267456
    4. ' def' → logprob: -2.947808027267456
    5. 'check' → logprob: -3.947808027267456
    6. ' check' → logprob: -4.072808265686035
    7. ' vérifier' → logprob: -4.072808265686035
    8. 'count' → logprob: -4.322808265686035
    9. 'checking' → logprob: -4.697808265686035
    10. ' la' → logprob: -5.447808265686035

Token 542: ' joueur' (ID: 72629)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -1.1151336431503296
    2. ' joueur' → logprob: -1.1151336431503296
    3. 'i' → logprob: -1.9901336431503296
    4. 'def' → logprob: -2.615133762359619
    5. ' player' → logprob: -3.365133762359619
    6. ' i' → logprob: -3.490133762359619
    7. 'jou' → logprob: -3.615133762359619
    8. 'j' → logprob: -5.240133762359619
    9. 'ligne' → logprob: -5.240133762359619
    10. ' def' → logprob: -5.490133762359619

Token 543: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.059512171894311905
    2. ',' → logprob: -3.059512138366699
    3. '   ' → logprob: -5.559512138366699
    4. 'marked' → logprob: -6.309512138366699
    5. ':' → logprob: -6.559512138366699
    6. '):' → logprob: -6.684512138366699
    7. ' def' → logprob: -7.184512138366699
    8. ' marked' → logprob: -7.434512138366699
    9. ' ,' → logprob: -8.5595121383667
    10. ')' → logprob: -8.8095121383667

Token 544: ' retourner' (ID: 116656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005282376892864704
    2. ' def' → logprob: -5.255282402038574
    3. '   ' → logprob: -10.630282402038574
    4. '
' → logprob: -11.880282402038574
    5. ' déf' → logprob: -12.130282402038574
    6. ' on' → logprob: -12.755282402038574
    7. ' voici' → logprob: -13.005282402038574
    8. 'dé' → logprob: -13.880282402038574
    9. ' définir' → logprob: -14.005282402038574
    10. '#' → logprob: -14.380282402038574

Token 545: ' le' (ID: 505)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010201065801084042
    2. 'marked' → logprob: -5.3852009773254395
    3. ' def' → logprob: -5.5102009773254395
    4. ' marked' → logprob: -7.5102009773254395
    5. 'lambda' → logprob: -7.7602009773254395
    6. '   ' → logprob: -8.510201454162598
    7. 'True' → logprob: -9.135201454162598
    8. ' True' → logprob: -9.760201454162598
    9. 'count' → logprob: -9.885201454162598
    10. ' lambda' → logprob: -9.885201454162598

Token 546: ' nombre' (ID: 9733)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14703145623207092
    2. 'count' → logprob: -2.147031545639038
    3. 'nombre' → logprob: -4.272031307220459
    4. 'score' → logprob: -6.397031307220459
    5. 'next' → logprob: -7.022031307220459
    6. 'bool' → logprob: -7.272031307220459
    7. 'nb' → logprob: -7.647031307220459
    8. 'dé' → logprob: -8.272031784057617
    9. ' count' → logprob: -8.397031784057617
    10. 'int' → logprob: -8.522031784057617

Token 547: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.040431953966617584
    2. '   ' → logprob: -3.7904319763183594
    3. '_de' → logprob: -5.540431976318359
    4. ' de' → logprob: -5.790431976318359
    5. 'de' → logprob: -6.040431976318359
    6. '_mark' → logprob: -6.290431976318359
    7. '_' → logprob: -6.665431976318359
    8. 'marked' → logprob: -6.915431976318359
    9. ' def' → logprob: -7.040431976318359
    10. '_lines' → logprob: -7.665431976318359

Token 548: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.3745938539505005
    2. 'marked' → logprob: -1.4995938539505005
    3. 'l' → logprob: -3.374593734741211
    4. 'def' → logprob: -3.999593734741211
    5. ' lines' → logprob: -4.624593734741211
    6. 'complete' → logprob: -5.124593734741211
    7. ' lignes' → logprob: -5.249593734741211
    8. ' marked' → logprob: -5.624593734741211
    9. 'full' → logprob: -5.749593734741211
    10. ' full' → logprob: -6.749593734741211

Token 549: ' dro' (ID: 6517)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025387322530150414
    2. ',' → logprob: -4.400387287139893
    3. '   ' → logprob: -4.900387287139893
    4. 'marked' → logprob: -6.525387287139893
    5. '_count' → logprob: -7.900387287139893
    6. '_' → logprob: -8.27538776397705
    7. '_mark' → logprob: -8.27538776397705
    8. ')' → logprob: -8.27538776397705
    9. 'com' → logprob: -8.40038776397705
    10. ' def' → logprob: -8.52538776397705

Token 550: 'ites' (ID: 3915)
  Prédit: 'ites'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ites' → logprob: -0.03508121892809868
    2. 'ite' → logprob: -3.535081148147583
    3. 'it' → logprob: -5.785081386566162
    4. 'ight' → logprob: -6.785081386566162
    5. 'tes' → logprob: -7.535081386566162
    6. 'itt' → logprob: -9.285080909729004
    7. '=' → logprob: -10.035080909729004
    8. 'ité' → logprob: -10.160080909729004
    9. 'ght' → logprob: -10.410080909729004
    10. 't' → logprob: -10.535080909729004

Token 551: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007374239154160023
    2. '
' → logprob: -6.757374286651611
    3. ',' → logprob: -6.882374286651611
    4. ' (' → logprob: -7.007374286651611
    5. 'marked' → logprob: -7.132374286651611
    6. '_mark' → logprob: -7.257374286651611
    7. '(n' → logprob: -7.382374286651611
    8. ' def' → logprob: -7.757374286651611
    9. '_' → logprob: -8.507373809814453
    10. '   ' → logprob: -8.757373809814453

Token 552: ' longueur' (ID: 104613)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.5014404654502869
    2. 'n' → logprob: -2.1264405250549316
    3. 'mar' → logprob: -2.2514405250549316
    4. ' marked' → logprob: -3.2514405250549316
    5. ' mar' → logprob: -3.3764405250549316
    6. ' True' → logprob: -3.7514405250549316
    7. '```' → logprob: -4.126440525054932
    8. ' n' → logprob: -4.251440525054932
    9. 'True' → logprob: -4.626440525054932
    10. 'mark' → logprob: -5.001440525054932

Token 553: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006272528320550919
    2. ' n' → logprob: -5.131272315979004
    3. 'def' → logprob: -9.006272315979004
    4. '```' → logprob: -9.131272315979004
    5. 'exact' → logprob: -10.506272315979004
    6. '=' → logprob: -10.881272315979004
    7. 'marked' → logprob: -11.631272315979004
    8. '=n' → logprob: -11.881272315979004
    9. ',' → logprob: -12.131272315979004
    10. ' exactly' → logprob: -12.256272315979004

Token 554: ' entièrement' (ID: 79300)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007964082062244415
    2. '
' → logprob: -5.007964134216309
    3. '(n' → logprob: -8.382964134216309
    4. 'marked' → logprob: -8.382964134216309
    5. ' marked' → logprob: -8.757964134216309
    6. ' def' → logprob: -8.757964134216309
    7. ' (' → logprob: -9.007964134216309
    8. ',' → logprob: -9.382964134216309
    9. '   ' → logprob: -10.257964134216309
    10. '
' → logprob: -10.257964134216309

Token 555: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.3456040620803833
    2. 'marked' → logprob: -1.7206040620803833
    3. ' mar' → logprob: -2.5956039428710938
    4. 'True' → logprob: -4.220603942871094
    5. ' marked' → logprob: -4.470603942871094
    6. ' True' → logprob: -4.720603942871094
    7. 'mark' → logprob: -6.345603942871094
    8. '```' → logprob: -7.470603942871094
    9. 'cont' → logprob: -8.345603942871094
    10. 'def' → logprob: -8.470603942871094

Token 556: 'quées' (ID: 111264)
  Prédit: 'quées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.14786888659000397
    2. 'quée' → logprob: -2.2728688716888428
    3. 'qués' → logprob: -4.147869110107422
    4. 'qu' → logprob: -4.272869110107422
    5. 'qué' → logprob: -5.522869110107422
    6. 'que' → logprob: -8.522869110107422
    7. 'q' → logprob: -8.772869110107422
    8. '
' → logprob: -8.897869110107422
    9. 'quee' → logprob: -10.522869110107422
    10. 'ques' → logprob: -10.647869110107422

Token 557: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04897383600473404
    2. '
' → logprob: -3.048973798751831
    3. '   ' → logprob: -8.92397403717041
    4. ':' → logprob: -9.92397403717041
    5. ':
' → logprob: -9.92397403717041
    6. '

' → logprob: -10.29897403717041
    7. ' def' → logprob: -10.79897403717041
    8. ':def' → logprob: -10.79897403717041
    9. '(n' → logprob: -10.92397403717041
    10. '  
' → logprob: -11.17397403717041

Token 558: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005675395485013723
    2. '   ' → logprob: -5.630675315856934
    3. '
' → logprob: -6.380675315856934
    4. '    
' → logprob: -8.630675315856934
    5. ' def' → logprob: -8.880675315856934
    6. ':def' → logprob: -11.130675315856934
    7. '```' → logprob: -11.255675315856934
    8. '  
' → logprob: -11.505675315856934
    9. ' 
' → logprob: -12.130675315856934
    10. '   
' → logprob: -12.505675315856934

Token 559: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01822860911488533
    2. '
' → logprob: -4.018228530883789
    3. '   ' → logprob: -10.143228530883789
    4. ' def' → logprob: -11.393228530883789
    5. '    
' → logprob: -11.518228530883789
    6. '\' → logprob: -11.893228530883789
    7. '\n' → logprob: -12.393228530883789
    8. '  
' → logprob: -12.893228530883789
    9. '

' → logprob: -13.393228530883789
    10. ':def' → logprob: -14.018228530883789

Token 560: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.023388616740703583
    2. ' count' → logprob: -3.773388624191284
    3. 'check' → logprob: -9.148388862609863
    4. 'def' → logprob: -10.398388862609863
    5. ' check' → logprob: -12.898388862609863
    6. 'get' → logprob: -14.023388862609863
    7. 'compute' → logprob: -14.273388862609863
    8. '	count' → logprob: -14.523388862609863
    9. ' def' → logprob: -15.148388862609863
    10. '   ' → logprob: -15.273388862609863

Token 561: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.5059083700180054
    2. '_complete' → logprob: -1.8809083700180054
    3. '_mark' → logprob: -1.8809083700180054
    4. '_completed' → logprob: -2.880908489227295
    5. '_f' → logprob: -3.630908489227295
    6. '_full' → logprob: -4.755908489227295
    7. '_rows' → logprob: -8.630908012390137
    8. '_' → logprob: -8.630908012390137
    9. '_ent' → logprob: -9.005908012390137
    10. '_com' → logprob: -9.005908012390137

Token 562: '(mark' (ID: 126438)
  Prédit: '(player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(player' → logprob: -0.2612112760543823
    2. '(mark' → logprob: -1.6362112760543823
    3. '_mark' → logprob: -3.761211395263672
    4. '(' → logprob: -4.886211395263672
    5. '_' → logprob: -6.886211395263672
    6. '_of' → logprob: -7.386211395263672
    7. '(board' → logprob: -7.386211395263672
    8. '_player' → logprob: -7.511211395263672
    9. '(matrix' → logprob: -7.761211395263672
    10. '(grid' → logprob: -8.886211395263672

Token 563: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -6.704273118884885e-07
    2. '_ed' → logprob: -15.375000953674316
    3. 'edf' → logprob: -16.0
    4. 'e' → logprob: -16.5
    5. 'eded' → logprob: -17.375
    6. '_' → logprob: -17.625
    7. 'edin' → logprob: -17.75
    8. '   ' → logprob: -18.375
    9. 'def' → logprob: -18.75
    10. 'eed' → logprob: -18.875

Token 564: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06924991309642792
    2. '_player' → logprob: -3.1942498683929443
    3. '):' → logprob: -4.694250106811523
    4. '_,' → logprob: -5.319250106811523
    5. '_' → logprob: -5.694250106811523
    6. '):
' → logprob: -5.819250106811523
    7. '   ' → logprob: -6.444250106811523
    8. 'player' → logprob: -6.694250106811523
    9. '[player' → logprob: -6.694250106811523
    10. '(player' → logprob: -7.944250106811523

Token 565: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7891376614570618
    2. '       ' → logprob: -1.039137601852417
    3. '(n' → logprob: -1.664137601852417
    4. 'n' → logprob: -7.164137840270996
    5. 'def' → logprob: -7.664137840270996
    6. ':' → logprob: -7.664137840270996
    7. '    ' → logprob: -8.414137840270996
    8. '(' → logprob: -8.789137840270996
    9. '(lines' → logprob: -8.789137840270996
    10. '    
' → logprob: -9.039137840270996

Token 566: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.3389624357223511
    2. '   ' → logprob: -1.463962435722351
    3. '       ' → logprob: -3.0889625549316406
    4. ' count' → logprob: -4.963962554931641
    5. 'n' → logprob: -7.088962554931641
    6. 'cnt' → logprob: -7.213962554931641
    7. ' lines' → logprob: -7.713962554931641
    8. 'lines' → logprob: -8.08896255493164
    9. '
' → logprob: -8.21396255493164
    10. '	count' → logprob: -8.33896255493164

Token 567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014186978340149
    2. ' =' → logprob: -1.7014186382293701
    3. ' ' → logprob: -13.70141887664795
    4. ',' → logprob: -13.95141887664795
    5. ' +=' → logprob: -13.95141887664795
    6. '   ' → logprob: -14.20141887664795
    7. '+=' → logprob: -14.70141887664795
    8. ')' → logprob: -14.70141887664795
    9. '  ' → logprob: -14.82641887664795
    10. '_' → logprob: -16.451417922973633

Token 568: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008614926598966122
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.758614540100098
    4. '    ' → logprob: -18.258615493774414
    5. '  ' → logprob: -18.633615493774414
    6. ' ' → logprob: -19.883615493774414
    7. '       ' → logprob: -20.008615493774414
    8. '     ' → logprob: -21.258615493774414
    9. ',' → logprob: -22.258615493774414
    10. '=' → logprob: -22.258615493774414

Token 569: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.750004768371582
    3. '   ' → logprob: -13.875004768371582
    4. 'int' → logprob: -15.250004768371582
    5. 'sum' → logprob: -15.875004768371582
    6. '1' → logprob: -17.375003814697266
    7. '
' → logprob: -17.750003814697266
    8. '       ' → logprob: -18.250003814697266
    9. 'n' → logprob: -18.250003814697266
    10. '=' → logprob: -18.375003814697266

Token 570: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.034989021718502045
    2. '   ' → logprob: -4.034988880157471
    3. '    
' → logprob: -4.284988880157471
    4. '  
' → logprob: -6.659988880157471
    5. '   
' → logprob: -7.909988880157471
    6. '\n' → logprob: -8.159989356994629
    7. '
' → logprob: -8.409989356994629
    8. 'for' → logprob: -8.534989356994629
    9. '        
' → logprob: -8.659989356994629
    10. ' for' → logprob: -8.659989356994629

Token 571: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3993319869041443
    2. '
' → logprob: -1.649332046508789
    3. '    
' → logprob: -2.024332046508789
    4. '        
' → logprob: -6.524332046508789
    5. '       ' → logprob: -6.649332046508789
    6. 'for' → logprob: -7.024332046508789
    7. ' for' → logprob: -7.899332046508789
    8. '  
' → logprob: -8.149332046508789
    9. 'n' → logprob: -8.524332046508789
    10. '   
' → logprob: -9.149332046508789

Token 572: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4941847622394562
    2. ' for' → logprob: -0.9941847324371338
    3. '   ' → logprob: -4.744184970855713
    4. 'n' → logprob: -4.994184970855713
    5. '
' → logprob: -5.619184970855713
    6. ' n' → logprob: -8.244184494018555
    7. '       ' → logprob: -8.619184494018555
    8. '        
' → logprob: -9.244184494018555
    9. '    
' → logprob: -9.244184494018555
    10. '\n' → logprob: -9.744184494018555

Token 573: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10393179208040237
    2. ' for' → logprob: -2.3539319038391113
    3. '   ' → logprob: -5.603931903839111
    4. '#' → logprob: -10.978931427001953
    5. 'n' → logprob: -11.978931427001953
    6. '       ' → logprob: -12.603931427001953
    7. 'range' → logprob: -12.978931427001953
    8. '
' → logprob: -13.478931427001953
    9. 'def' → logprob: -13.603931427001953
    10. '	for' → logprob: -14.103931427001953

Token 574: 'ignes' (ID: 53389)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30692389607429504
    2. '   ' → logprob: -1.6819238662719727
    3. ' for' → logprob: -2.8069238662719727
    4. 'ines' → logprob: -4.431923866271973
    5. 'ine' → logprob: -6.431923866271973
    6. 'en' → logprob: -6.431923866271973
    7. '       ' → logprob: -7.056923866271973
    8. 'n' → logprob: -7.431923866271973
    9. 'range' → logprob: -7.806923866271973
    10. 'def' → logprob: -7.931923866271973

Token 575: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4926511347293854
    2. 'for' → logprob: -1.492651104927063
    3. '   ' → logprob: -1.867651104927063
    4. ' =' → logprob: -5.367650985717773
    5. ' in' → logprob: -6.242650985717773
    6. ':' → logprob: -6.867650985717773
    7. '=' → logprob: -6.867650985717773
    8. '
' → logprob: -7.867650985717773
    9. '	for' → logprob: -8.367650985717773
    10. '       ' → logprob: -9.742650985717773

Token 576: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.393688827753067
    2. '   ' → logprob: -1.7686887979507446
    3. 'for' → logprob: -1.8936887979507446
    4. ' =' → logprob: -6.768688678741455
    5. '       ' → logprob: -6.893688678741455
    6. ':' → logprob: -7.143688678741455
    7. '	for' → logprob: -8.018689155578613
    8. '=' → logprob: -8.268689155578613
    9. ' range' → logprob: -8.268689155578613
    10. ' in' → logprob: -8.393689155578613

Token 577: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06264274567365646
    2. ' for' → logprob: -2.812642812728882
    3. '   ' → logprob: -7.312642574310303
    4. '       ' → logprob: -12.562643051147461
    5. '	for' → logprob: -12.562643051147461
    6. '```' → logprob: -14.562643051147461
    7. '
' → logprob: -15.312643051147461
    8. 'n' → logprob: -17.06264305114746
    9. ' 
' → logprob: -17.18764305114746
    10. '    
' → logprob: -17.43764305114746

Token 578: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018183186650276184
    2. ' i' → logprob: -4.01818323135376
    3. '   ' → logprob: -10.768182754516602
    4. 'row' → logprob: -12.018182754516602
    5. '_i' → logprob: -13.518182754516602
    6. ' row' → logprob: -13.768182754516602
    7. 'range' → logprob: -13.893182754516602
    8. '_' → logprob: -14.143182754516602
    9. ' ' → logprob: -14.393182754516602
    10. '	i' → logprob: -14.643182754516602

Token 579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00761951832100749
    2. 'in' → logprob: -4.882619380950928
    3. '   ' → logprob: -12.632619857788086
    4. ' ' → logprob: -12.882619857788086
    5. '    ' → logprob: -13.007619857788086
    6. 'range' → logprob: -13.257619857788086
    7. ',' → logprob: -14.257619857788086
    8. '  ' → logprob: -14.632619857788086
    9. ')' → logprob: -14.882619857788086
    10. 'n' → logprob: -15.257619857788086

Token 580: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804860636591911
    2. ' range' → logprob: -3.288048505783081
    3. '   ' → logprob: -12.16304874420166
    4. ' ' → logprob: -13.53804874420166
    5. '  ' → logprob: -15.28804874420166
    6. '    ' → logprob: -15.78804874420166
    7. '	range' → logprob: -16.413047790527344
    8. '0' → logprob: -16.913047790527344
    9. ')' → logprob: -16.913047790527344
    10. 'in' → logprob: -17.663047790527344

Token 581: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1757386475801468
    2. '(n' → logprob: -1.9257386922836304
    3. ' n' → logprob: -4.17573881149292
    4. '	n' → logprob: -11.550738334655762
    5. ' (' → logprob: -11.800738334655762
    6. '   ' → logprob: -11.925738334655762
    7. '(' → logprob: -12.675738334655762
    8. ')n' → logprob: -13.300738334655762
    9. '
' → logprob: -13.925738334655762
    10. ')' → logprob: -14.800738334655762

Token 582: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020662866532802582
    2. '):' → logprob: -3.895662784576416
    3. '):
' → logprob: -9.770663261413574
    4. '   ' → logprob: -10.520663261413574
    5. ')' → logprob: -11.145663261413574
    6. '       ' → logprob: -11.395663261413574
    7. ' ):
' → logprob: -11.895663261413574
    8. ':
' → logprob: -13.520663261413574
    9. ':' → logprob: -13.770663261413574
    10. '):

' → logprob: -14.395663261413574

Token 583: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1210472509264946
    2. ' if' → logprob: -2.246047258377075
    3. 'if' → logprob: -4.871047019958496
    4. '       ' → logprob: -8.496047019958496
    5. '	       ' → logprob: -9.371047019958496
    6. '   ' → logprob: -10.371047019958496
    7. '	   ' → logprob: -10.496047019958496
    8. '            
' → logprob: -10.621047019958496
    9. '            ' → logprob: -10.996047019958496
    10. ' ' → logprob: -11.121047019958496

Token 584: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1621035486459732
    2. ' if' → logprob: -1.912103533744812
    3. '           ' → logprob: -6.287103652954102
    4. '	if' → logprob: -12.162103652954102
    5. '       ' → logprob: -12.662103652954102
    6. '   ' → logprob: -12.787103652954102
    7. '               ' → logprob: -12.787103652954102
    8. ' ' → logprob: -13.537103652954102
    9. '	       ' → logprob: -14.287103652954102
    10. '		' → logprob: -14.787103652954102

Token 585: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00011570196511456743
    2. ' all' → logprob: -9.250115394592285
    3. '   ' → logprob: -11.000115394592285
    4. '	all' → logprob: -14.000115394592285
    5. ' ' → logprob: -14.500115394592285
    6. '(all' → logprob: -14.875115394592285
    7. 'marked' → logprob: -15.250115394592285
    8. '       ' → logprob: -15.875115394592285
    9. 'False' → logprob: -16.1251163482666
    10. '    ' → logprob: -16.2501163482666

Token 586: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -0.00048656106810085475
    2. 'marked' → logprob: -7.750486373901367
    3. '(' → logprob: -10.000486373901367
    4. ' marked' → logprob: -11.750486373901367
    5. '(marker' → logprob: -13.625486373901367
    6. ' (' → logprob: -13.750486373901367
    7. '_mark' → logprob: -16.125486373901367
    8. '(x' → logprob: -17.375486373901367
    9. '(
' → logprob: -17.375486373901367
    10. 'Marked' → logprob: -17.375486373901367

Token 587: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.00000286102295
    3. 'ED' → logprob: -14.50000286102295
    4. '[i' → logprob: -17.125003814697266
    5. 'edi' → logprob: -17.625003814697266
    6. 'edas' → logprob: -17.875003814697266
    7. 'eded' → logprob: -17.875003814697266
    8. 'e' → logprob: -18.000003814697266
    9. '   ' → logprob: -18.125003814697266
    10. 'edin' → logprob: -18.375003814697266

Token 588: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.024604277219623e-05
    2. '[' → logprob: -10.375040054321289
    3. ' [' → logprob: -12.500040054321289
    4. ')[' → logprob: -13.000040054321289
    5. '[u' → logprob: -14.500040054321289
    6. 'marked' → logprob: -14.875040054321289
    7. '   ' → logprob: -15.000040054321289
    8. 'i' → logprob: -15.125040054321289
    9. ')' → logprob: -15.250040054321289
    10. '[m' → logprob: -16.00004005432129

Token 589: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6732744574546814
    2. ']):' → logprob: -0.7982744574546814
    3. ']' → logprob: -4.423274517059326
    4. '])' → logprob: -4.548274517059326
    5. ']):
' → logprob: -4.798274517059326
    6. '[j' → logprob: -5.423274517059326
    7. ']))' → logprob: -6.423274517059326
    8. '])):
' → logprob: -6.798274517059326
    9. '])]' → logprob: -7.173274517059326
    10. ']]' → logprob: -8.548274040222168

Token 590: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0032175222877413034
    2. 'k' → logprob: -5.753217697143555
    3. ' j' → logprob: -11.128217697143555
    4. 'x' → logprob: -12.378217697143555
    5. 'i' → logprob: -12.503217697143555
    6. '
' → logprob: -13.003217697143555
    7. ':j' → logprob: -13.003217697143555
    8. '[j' → logprob: -13.378217697143555
    9. 'True' → logprob: -13.378217697143555
    10. '_j' → logprob: -13.503217697143555

Token 591: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09018950164318085
    2. ' for' → logprob: -3.5901894569396973
    3. '])' → logprob: -3.7151894569396973
    4. 'for' → logprob: -3.8401894569396973
    5. ']==' → logprob: -5.340189456939697
    6. '==' → logprob: -5.590189456939697
    7. ')' → logprob: -6.590189456939697
    8. ' ]' → logprob: -6.590189456939697
    9. '[j' → logprob: -7.715189456939697
    10. ']):
' → logprob: -7.965189456939697

Token 592: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35757744312286377
    2. 'for' → logprob: -1.2325774431228638
    3. ')' → logprob: -5.357577323913574
    4. '==' → logprob: -5.482577323913574
    5. '):' → logprob: -9.982577323913574
    6. '):
' → logprob: -10.107577323913574
    7. '           ' → logprob: -10.232577323913574
    8. ' )' → logprob: -11.232577323913574
    9. '       ' → logprob: -11.232577323913574
    10. ' ==' → logprob: -11.357577323913574

Token 593: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029754308983683586
    2. ' j' → logprob: -3.529754400253296
    3. ' range' → logprob: -12.904754638671875
    4. 'range' → logprob: -13.779754638671875
    5. ' in' → logprob: -16.154754638671875
    6. ' ' → logprob: -16.154754638671875
    7. '	j' → logprob: -16.779754638671875
    8. 'in' → logprob: -18.029754638671875
    9. '   ' → logprob: -18.404754638671875
    10. '  ' → logprob: -18.529754638671875

Token 594: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.386880099773407
    2. 'in' → logprob: -1.1368801593780518
    3. 'j' → logprob: -12.761879920959473
    4. ' j' → logprob: -12.886879920959473
    5. ')' → logprob: -14.136879920959473
    6. '<|end|>' → logprob: -14.386879920959473
    7. ' ' → logprob: -14.761879920959473
    8. 'n' → logprob: -14.886879920959473
    9. 'range' → logprob: -15.011879920959473
    10. '	in' → logprob: -15.761879920959473

Token 595: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. ' ' → logprob: -18.755233764648438
    4. '   ' → logprob: -18.880233764648438
    5. '	range' → logprob: -19.380233764648438
    6. '(range' → logprob: -20.005233764648438
    7. ')' → logprob: -20.755233764648438
    8. '  ' → logprob: -21.380233764648438
    9. '
' → logprob: -21.505233764648438
    10. 'n' → logprob: -22.130233764648438

Token 596: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011050059460103512
    2. 'n' → logprob: -4.511050224304199
    3. '(' → logprob: -13.7610502243042
    4. '	n' → logprob: -14.8860502243042
    5. ' n' → logprob: -15.1360502243042
    6. '   ' → logprob: -15.3860502243042
    7. ')n' → logprob: -15.8860502243042
    8. ' (' → logprob: -16.511049270629883
    9. '(
' → logprob: -17.136049270629883
    10. '<n' → logprob: -17.636049270629883

Token 597: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13967664539813995
    2. '):
' → logprob: -2.389676570892334
    3. ')):' → logprob: -3.389676570892334
    4. ')):
' → logprob: -5.764676570892334
    5. ')' → logprob: -6.639676570892334
    6. '))' → logprob: -8.764677047729492
    7. '           ' → logprob: -8.764677047729492
    8. '):
' → logprob: -9.139677047729492
    9. ')):
' → logprob: -10.389677047729492
    10. ' ):' → logprob: -10.889677047729492

Token 598: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01664876751601696
    2. ':' → logprob: -4.766648769378662
    3. ':
' → logprob: -5.141648769378662
    4. '           ' → logprob: -6.516648769378662
    5. '):
' → logprob: -7.891648769378662
    6. '):' → logprob: -8.891648292541504
    7. ')' → logprob: -9.391648292541504
    8. ' :' → logprob: -10.766648292541504
    9. ' :
' → logprob: -11.266648292541504
    10. '                   ' → logprob: -11.766648292541504

Token 599: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.001156770158559084
    2. '               ' → logprob: -7.251156806945801
    3. ' count' → logprob: -8.0011568069458
    4. '                   ' → logprob: -9.1261568069458
    5. '   ' → logprob: -13.7511568069458
    6. '           ' → logprob: -14.1261568069458
    7. '	count' → logprob: -14.2511568069458
    8. '[count' → logprob: -15.2511568069458
    9. ',count' → logprob: -16.626155853271484
    10. '_count' → logprob: -16.876155853271484

Token 600: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0052725342102348804
    2. ' +=' → logprob: -5.255272388458252
    3. '               ' → logprob: -10.75527286529541
    4. '                ' → logprob: -11.50527286529541
    5. '                   ' → logprob: -12.25527286529541
    6. '           ' → logprob: -14.13027286529541
    7. ']+=' → logprob: -14.25527286529541
    8. '            ' → logprob: -14.38027286529541
    9. '                    ' → logprob: -15.50527286529541
    10. '+' → logprob: -15.50527286529541

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.125003814697266
    4. '```' → logprob: -22.875003814697266
    5. '１' → logprob: -23.250003814697266
    6. '
' → logprob: -23.250003814697266
    7. ' ' → logprob: -23.500003814697266
    8. '  ' → logprob: -24.250003814697266
    9. '۱' → logprob: -24.750003814697266
    10. '+' → logprob: -24.750003814697266

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -22.625
    5. '１' → logprob: -23.125
    6. '+' → logprob: -24.0
    7. '2' → logprob: -24.75
    8. 'def' → logprob: -25.1875
    9. '۱' → logprob: -25.375
    10. 'python' → logprob: -25.4375

Token 603: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16593308746814728
    2. '       ' → logprob: -2.290933132171631
    3. '<|end|>' → logprob: -4.165933132171631
    4. '\n' → logprob: -4.540933132171631
    5. '    
' → logprob: -5.040933132171631
    6. '  
' → logprob: -5.040933132171631
    7. '        
' → logprob: -5.665933132171631
    8. '   ' → logprob: -6.165933132171631
    9. '           ' → logprob: -6.290933132171631
    10. '' → logprob: -6.665933132171631

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003919463779311627
    2. '
' → logprob: -9.000391960144043
    3. '        
' → logprob: -9.125391960144043
    4. '   ' → logprob: -9.500391960144043
    5. '           ' → logprob: -10.375391960144043
    6. '    
' → logprob: -11.375391960144043
    7. '        ' → logprob: -11.500391960144043
    8. '    ' → logprob: -11.875391960144043
    9. '```' → logprob: -12.250391960144043
    10. '​' → logprob: -13.000391960144043

Token 605: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31839150190353394
    2. '#' (adapté à ' #') → logprob: -1.3183915615081787
    3. '   ' → logprob: -5.3183913230896
    4. '```' → logprob: -8.568391799926758
    5. '
' → logprob: -11.943391799926758
    6. 'for' → logprob: -12.193391799926758
    7. '           ' → logprob: -12.693391799926758
    8. '        
' → logprob: -12.943391799926758
    9. ' #' → logprob: -13.068391799926758
    10. '	' → logprob: -13.443391799926758

Token 606: ' Colon' (ID: 52570)
  Prédit: 'Colon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Colon' → logprob: -0.22222170233726501
    2. 'colon' → logprob: -1.7222217321395874
    3. '#' → logprob: -4.222221851348877
    4. '   ' → logprob: -5.972221851348877
    5. 'for' → logprob: -6.222221851348877
    6. ' Colon' → logprob: -6.972221851348877
    7. ' colon' → logprob: -8.097221374511719
    8. 'Cols' → logprob: -9.722221374511719
    9. '       ' → logprob: -10.222221374511719
    10. 'cols' → logprob: -10.347221374511719

Token 607: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -9.484132169745862e-05
    2. 'n' → logprob: -9.750094413757324
    3. '#' → logprob: -11.125094413757324
    4. 'es' → logprob: -11.875094413757324
    5. '   ' → logprob: -13.125094413757324
    6. '=' → logprob: -13.250094413757324
    7. 'nn' → logprob: -13.500094413757324
    8. '```' → logprob: -13.500094413757324
    9. 'ns' → logprob: -13.875094413757324
    10. '\' → logprob: -14.125094413757324

Token 608: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026787486858665943
    2. '
' → logprob: -6.377678871154785
    3. '   ' → logprob: -7.502678871154785
    4. ' for' → logprob: -8.127678871154785
    5. 'for' → logprob: -9.627678871154785
    6. '        
' → logprob: -10.877678871154785
    7. '           ' → logprob: -11.377678871154785
    8. '        ' → logprob: -12.252678871154785
    9. '=' → logprob: -12.377678871154785
    10. ':
' → logprob: -12.627678871154785

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06003408879041672
    2. ' for' → logprob: -3.8100340366363525
    3. '
' → logprob: -3.9350340366363525
    4. 'for' → logprob: -4.310034275054932
    5. '   ' → logprob: -5.935034275054932
    6. '        
' → logprob: -8.310033798217773
    7. '  
' → logprob: -10.185033798217773
    8. '           ' → logprob: -10.310033798217773
    9. '```' → logprob: -10.435033798217773
    10. '    
' → logprob: -10.435033798217773

Token 610: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6932055950164795
    2. 'for' (adapté à ' for') → logprob: -0.6932055950164795
    3. '       ' → logprob: -10.193205833435059
    4. '   ' → logprob: -10.818205833435059
    5. '
' → logprob: -14.068205833435059
    6. '```' → logprob: -16.568204879760742
    7. '	for' → logprob: -16.693204879760742
    8. '           ' → logprob: -19.068204879760742
    9. 'n' → logprob: -19.318204879760742
    10. ' 
' → logprob: -19.568204879760742

Token 611: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009115827269852161
    2. ' j' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.625911712646484
    4. 'i' → logprob: -17.500911712646484
    5. '	j' → logprob: -18.250911712646484
    6. '```' → logprob: -19.250911712646484
    7. ' ' → logprob: -20.125911712646484
    8. '_j' → logprob: -20.375911712646484
    9. '    ' → logprob: -20.500911712646484
    10. '$j' → logprob: -21.375911712646484

Token 612: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001503313542343676
    2. 'in' → logprob: -6.5015034675598145
    3. ' ' → logprob: -15.001502990722656
    4. 'range' → logprob: -15.626502990722656
    5. 'n' → logprob: -16.001502990722656
    6. '   ' → logprob: -16.126502990722656
    7. 'import' → logprob: -17.001502990722656
    8. '```' → logprob: -17.126502990722656
    9. 'In' → logprob: -17.376502990722656
    10. '(' → logprob: -17.626502990722656

Token 613: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061967797577381134
    2. ' range' → logprob: -2.8119678497314453
    3. '0' → logprob: -16.436967849731445
    4. ' ' → logprob: -17.186967849731445
    5. 'in' → logprob: -17.936967849731445
    6. '   ' → logprob: -17.936967849731445
    7. '(range' → logprob: -18.561967849731445
    8. ' in' → logprob: -18.811967849731445
    9. '(' → logprob: -20.311967849731445
    10. '[' → logprob: -20.561967849731445

Token 614: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01999470964074135
    2. '(n' → logprob: -4.269994735717773
    3. ' range' → logprob: -5.269994735717773
    4. 'n' → logprob: -7.519994735717773
    5. '(range' → logprob: -9.019994735717773
    6. '(' → logprob: -12.519994735717773
    7. 'in' → logprob: -12.519994735717773
    8. ' in' → logprob: -15.519994735717773
    9. '   ' → logprob: -16.019994735717773
    10. ' (' → logprob: -16.894994735717773

Token 615: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.30520564317703247
    2. 'in' → logprob: -2.0552055835723877
    3. ' in' → logprob: -2.9302055835723877
    4. '   ' → logprob: -3.3052055835723877
    5. '):' → logprob: -3.3052055835723877
    6. 'n' → logprob: -5.680205821990967
    7. '       ' → logprob: -6.055205821990967
    8. 'range' → logprob: -7.430205821990967
    9. ':
' → logprob: -7.555205821990967
    10. ',' → logprob: -7.930205821990967

Token 616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020149879157543182
    2. '       ' → logprob: -4.2701497077941895
    3. ' if' → logprob: -5.6451497077941895
    4. 'if' → logprob: -6.2701497077941895
    5. '   ' → logprob: -7.6451497077941895
    6. '```' → logprob: -10.395150184631348
    7. ' for' → logprob: -12.020150184631348
    8. ':
' → logprob: -12.395150184631348
    9. '	   ' → logprob: -12.645150184631348
    10. '	       ' → logprob: -12.895150184631348

Token 617: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03805112838745117
    2. ' if' → logprob: -3.288051128387451
    3. '   ' → logprob: -11.78805160522461
    4. '       ' → logprob: -13.53805160522461
    5. '           ' → logprob: -14.16305160522461
    6. ' ' → logprob: -17.03805160522461
    7. '```' → logprob: -18.03805160522461
    8. '    ' → logprob: -18.16305160522461
    9. 'count' → logprob: -18.41305160522461
    10. 'all' → logprob: -18.91305160522461

Token 618: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.04858759790658951
    2. ' all' → logprob: -3.0485875606536865
    3. '   ' → logprob: -15.673587799072266
    4. ' ' → logprob: -16.423587799072266
    5. '	all' → logprob: -17.798587799072266
    6. '(all' → logprob: -19.423587799072266
    7. '  ' → logprob: -19.548587799072266
    8. '    ' → logprob: -20.298587799072266
    9. 'All' → logprob: -20.548587799072266
    10. ' ' → logprob: -20.798587799072266

Token 619: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -14.375001907348633
    3. '(marker' → logprob: -14.375001907348633
    4. ' (' → logprob: -15.375001907348633
    5. 'marked' → logprob: -16.250001907348633
    6. '   ' → logprob: -17.875001907348633
    7. ' marked' → logprob: -18.625001907348633
    8. '(mask' → logprob: -19.125001907348633
    9. '((' → logprob: -19.750001907348633
    10. '(
' → logprob: -19.875001907348633

Token 620: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.038273051381111145
    2. 'arked' → logprob: -3.2882730960845947
    3. 'marked' → logprob: -8.788272857666016
    4. '[' → logprob: -10.538272857666016
    5. '[j' → logprob: -10.788272857666016
    6. 'ked' → logprob: -12.288272857666016
    7. 'ged' → logprob: -12.413272857666016
    8. '(mark' → logprob: -12.413272857666016
    9. '[i' → logprob: -12.538272857666016
    10. 'eded' → logprob: -12.663272857666016

Token 621: '[i' (ID: 1768)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 622: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01332904864102602
    2. '[j' → logprob: -4.763329029083252
    3. '][' → logprob: -5.888329029083252
    4. 'for' → logprob: -6.388329029083252
    5. '[' → logprob: -9.26332950592041
    6. ' for' → logprob: -10.13832950592041
    7. '   ' → logprob: -10.63832950592041
    8. 'in' → logprob: -10.76332950592041
    9. ' [' → logprob: -10.76332950592041
    10. '[in' → logprob: -11.51332950592041

Token 623: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.33438414335250854
    2. 'i' → logprob: -1.8343842029571533
    3. 'range' → logprob: -2.0843842029571533
    4. ' range' → logprob: -9.459383964538574
    5. ' j' → logprob: -10.959383964538574
    6. '[j' → logprob: -11.709383964538574
    7. 'n' → logprob: -11.834383964538574
    8. '   ' → logprob: -13.084383964538574
    9. '[i' → logprob: -13.084383964538574
    10. 'Range' → logprob: -13.084383964538574

Token 624: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05668007209897041
    2. ' for' → logprob: -2.9316799640655518
    3. ']' → logprob: -6.431680202484131
    4. '   ' → logprob: -9.931679725646973
    5. ')' → logprob: -10.056679725646973
    6. ' ' → logprob: -10.306679725646973
    7. 'in' → logprob: -10.431679725646973
    8. ' in' → logprob: -11.556679725646973
    9. '       ' → logprob: -12.431679725646973
    10. '           ' → logprob: -12.681679725646973

Token 625: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12693755328655243
    2. ' for' → logprob: -2.1269376277923584
    3. '   ' → logprob: -12.001937866210938
    4. 'in' → logprob: -13.376937866210938
    5. '       ' → logprob: -14.376937866210938
    6. ' ' → logprob: -14.626937866210938
    7. ' in' → logprob: -14.876937866210938
    8. ')' → logprob: -16.001937866210938
    9. '	for' → logprob: -16.251937866210938
    10. '           ' → logprob: -16.501937866210938

Token 626: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00030388421146199107
    2. ' i' → logprob: -8.125304222106934
    3. 'range' → logprob: -12.125304222106934
    4. 'in' → logprob: -13.750304222106934
    5. ' range' → logprob: -14.250304222106934
    6. ' in' → logprob: -14.625304222106934
    7. '   ' → logprob: -15.375304222106934
    8. '
' → logprob: -16.875303268432617
    9. ' ' → logprob: -18.125303268432617
    10. '	i' → logprob: -18.500303268432617

Token 627: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2525917589664459
    2. 'in' → logprob: -1.5025917291641235
    3. 'range' → logprob: -7.502591609954834
    4. ' range' → logprob: -9.127592086791992
    5. ')' → logprob: -14.002592086791992
    6. '   ' → logprob: -14.877592086791992
    7. 'import' → logprob: -15.377592086791992
    8. ' ' → logprob: -15.627592086791992
    9. '(range' → logprob: -15.627592086791992
    10. '```' → logprob: -16.127592086791992

Token 628: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150877207517624
    2. ' range' → logprob: -4.018150806427002
    3. '(range' → logprob: -14.01815128326416
    4. 'n' → logprob: -16.893150329589844
    5. '   ' → logprob: -16.893150329589844
    6. ' ' → logprob: -17.893150329589844
    7. '
' → logprob: -18.893150329589844
    8. '	range' → logprob: -19.268150329589844
    9. '    ' → logprob: -20.518150329589844
    10. 'in' → logprob: -20.643150329589844

Token 629: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39581742882728577
    2. '(n' → logprob: -1.1458173990249634
    3. '(range' → logprob: -4.895817279815674
    4. ' range' → logprob: -6.645817279815674
    5. 'n' → logprob: -9.270817756652832
    6. '(' → logprob: -10.270817756652832
    7. '
' → logprob: -15.520817756652832
    8. '   ' → logprob: -16.270816802978516
    9. 'in' → logprob: -16.645816802978516
    10. 'Range' → logprob: -17.020816802978516

Token 630: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13329912722110748
    2. '):
' → logprob: -2.5082991123199463
    3. ')):' → logprob: -3.2582991123199463
    4. ')):
' → logprob: -5.383299350738525
    5. ')' → logprob: -8.758298873901367
    6. '       ' → logprob: -9.508298873901367
    7. '))' → logprob: -10.258298873901367
    8. ':' → logprob: -10.633298873901367
    9. ']):' → logprob: -11.008298873901367
    10. '   ' → logprob: -11.383298873901367

Token 631: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010711626149713993
    2. '           ' → logprob: -4.635711669921875
    3. ':
' → logprob: -7.635711669921875
    4. ':' → logprob: -7.885711669921875
    5. 'count' → logprob: -10.510711669921875
    6. '              ' → logprob: -10.885711669921875
    7. '):
' → logprob: -11.135711669921875
    8. '[count' → logprob: -11.635711669921875
    9. '```' → logprob: -12.010711669921875
    10. '       ' → logprob: -12.885711669921875

Token 632: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0005624461336992681
    2. ' count' → logprob: -7.50056266784668
    3. '               ' → logprob: -11.75056266784668
    4. '                   ' → logprob: -13.50056266784668
    5. '           ' → logprob: -16.25056266784668
    6. '	count' → logprob: -16.87556266784668
    7. '   ' → logprob: -17.00056266784668
    8. '[count' → logprob: -17.12556266784668
    9. '.count' → logprob: -18.12556266784668
    10. '_count' → logprob: -18.37556266784668

Token 633: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023301731795072556
    2. ' +=' → logprob: -3.773301839828491
    3. '           ' → logprob: -10.64830207824707
    4. '               ' → logprob: -10.89830207824707
    5. '            ' → logprob: -12.52330207824707
    6. '          ' → logprob: -12.77330207824707
    7. ']+=' → logprob: -13.14830207824707
    8. '                   ' → logprob: -13.27330207824707
    9. '                ' → logprob: -13.77330207824707
    10. '+' → logprob: -14.02330207824707

Token 634: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016035307198762894
    2. ' ' → logprob: -4.141035079956055
    3. 'n' → logprob: -14.266035079956055
    4. ' n' → logprob: -15.266035079956055
    5. '   ' → logprob: -16.891035079956055
    6. '```' → logprob: -19.391035079956055
    7. '+' → logprob: -19.516035079956055
    8. '0' → logprob: -19.766035079956055
    9. '
' → logprob: -19.766035079956055
    10. ')' → logprob: -19.766035079956055

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01817101612687111
    2. 'n' → logprob: -4.0181708335876465
    3. ' n' → logprob: -11.018171310424805
    4. ' ' → logprob: -12.643171310424805
    5. 'range' → logprob: -14.018171310424805
    6. 'count' → logprob: -14.268171310424805
    7. 'int' → logprob: -17.643171310424805
    8. '(n' → logprob: -17.768171310424805
    9. '
' → logprob: -18.268171310424805
    10. '0' → logprob: -18.393171310424805

Token 636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08844912052154541
    2. '
' → logprob: -2.588449001312256
    3. '   ' → logprob: -4.713449001312256
    4. '<|end|>' → logprob: -8.588449478149414
    5. '        
' → logprob: -9.088449478149414
    6. '    
' → logprob: -9.713449478149414
    7. '```' → logprob: -10.338449478149414
    8. '  
' → logprob: -10.463449478149414
    9. '\n' → logprob: -10.838449478149414
    10. '	' → logprob: -10.963449478149414

Token 637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037575334310531616
    2. '   ' → logprob: -3.4125752449035645
    3. '
' → logprob: -5.7875752449035645
    4. '```' → logprob: -7.7875752449035645
    5. '#' → logprob: -8.662575721740723
    6. '<|end|>' → logprob: -8.787575721740723
    7. '	' → logprob: -11.162575721740723
    8. '        
' → logprob: -11.162575721740723
    9. ' for' → logprob: -11.162575721740723
    10. '    
' → logprob: -11.412575721740723

Token 638: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2057265341281891
    2. '       ' → logprob: -1.7057265043258667
    3. '   ' → logprob: -5.455726623535156
    4. '```' → logprob: -10.955726623535156
    5. 'for' → logprob: -11.330726623535156
    6. ' #' → logprob: -14.330726623535156
    7. '``' → logprob: -14.830726623535156
    8. '  ' → logprob: -14.830726623535156
    9. '
' → logprob: -15.080726623535156
    10. '     ' → logprob: -15.580726623535156

Token 639: ' Di' (ID: 9196)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13416604697704315
    2. 'for' → logprob: -2.1341660022735596
    3. 'di' → logprob: -5.134166240692139
    4. 'def' → logprob: -7.759166240692139
    5. '   ' → logprob: -8.25916576385498
    6. 'diag' → logprob: -8.63416576385498
    7. ' for' → logprob: -8.75916576385498
    8. 'Di' → logprob: -8.88416576385498
    9. 'd' → logprob: -9.63416576385498
    10. ' #' → logprob: -9.88416576385498

Token 640: 'agon' (ID: 9863)
  Prédit: 'agon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agon' → logprob: -0.0008208265644498169
    2. 'ag' → logprob: -7.125820636749268
    3. 'agonal' → logprob: -12.000821113586426
    4. 'gon' → logprob: -12.250821113586426
    5. 'ago' → logprob: -13.375821113586426
    6. 'ags' → logprob: -14.000821113586426
    7. 'agan' → logprob: -14.000821113586426
    8. 'a' → logprob: -14.625821113586426
    9. '   ' → logprob: -15.250821113586426
    10. '#' → logprob: -15.250821113586426

Token 641: 'ale' (ID: 1167)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.12697240710258484
    2. 'al' → logprob: -2.1269724369049072
    3. 'ales' → logprob: -10.376972198486328
    4. 'ale' → logprob: -12.626972198486328
    5. 'nal' → logprob: -12.751972198486328
    6. 'ally' → logprob: -13.501972198486328
    7. '#' → logprob: -13.626972198486328
    8. 'on' → logprob: -13.876972198486328
    9. '```' → logprob: -14.251972198486328
    10. 'n' → logprob: -14.626972198486328

Token 642: ' principale' (ID: 68926)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09552623331546783
    2. '
' → logprob: -3.3455262184143066
    3. ' =' → logprob: -3.7205262184143066
    4. 'd' → logprob: -5.345526218414307
    5. '=' → logprob: -5.470526218414307
    6. 'for' → logprob: -5.595526218414307
    7. '       ' → logprob: -5.720526218414307
    8. 's' → logprob: -5.845526218414307
    9. 'count' → logprob: -5.845526218414307
    10. '\' → logprob: -6.095526218414307

Token 643: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9530919790267944
    2. '   ' → logprob: -1.4530919790267944
    3. '       ' → logprob: -1.8280919790267944
    4. 'if' → logprob: -2.203092098236084
    5. ' if' → logprob: -2.953092098236084
    6. '
' → logprob: -3.578092098236084
    7. '=' → logprob: -3.703092098236084
    8. '=
' → logprob: -6.328092098236084
    9. 'for' → logprob: -7.953092098236084
    10. ' =
' → logprob: -7.953092098236084

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02124856226146221
    2. 'for' → logprob: -4.5212483406066895
    3. 'if' → logprob: -5.8962483406066895
    4. ' for' → logprob: -6.1462483406066895
    5. ' =' → logprob: -6.2712483406066895
    6. '   ' → logprob: -6.2712483406066895
    7. ' if' → logprob: -7.3962483406066895
    8. '=' → logprob: -7.6462483406066895
    9. 'count' → logprob: -9.521248817443848
    10. '
' → logprob: -9.521248817443848

Token 645: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003088871017098427
    2. ' if' → logprob: -8.375308990478516
    3. '       ' → logprob: -9.875308990478516
    4. 'count' → logprob: -11.000308990478516
    5. 'for' → logprob: -11.750308990478516
    6. 'all' → logprob: -13.000308990478516
    7. '   ' → logprob: -17.625308990478516
    8. 'di' → logprob: -17.625308990478516
    9. '        
' → logprob: -18.250308990478516
    10. 'i' → logprob: -18.375308990478516

Token 646: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0040793512016534805
    2. ' all' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.254079818725586
    4. ' ' → logprob: -15.879079818725586
    5. '	all' → logprob: -16.754079818725586
    6. '
' → logprob: -19.004079818725586
    7. '  ' → logprob: -19.129079818725586
    8. '    ' → logprob: -19.629079818725586
    9. ' ' → logprob: -19.629079818725586
    10. '(all' → logprob: -20.129079818725586

Token 647: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -4.723352049040841e-06
    2. 'marked' → logprob: -12.375004768371582
    3. '(' → logprob: -15.000004768371582
    4. '(marker' → logprob: -15.500004768371582
    5. ' marked' → logprob: -17.000003814697266
    6. ' (' → logprob: -17.875003814697266
    7. '((' → logprob: -18.500003814697266
    8. '(mask' → logprob: -19.500003814697266
    9. '(
' → logprob: -19.875003814697266
    10. 'Marked' → logprob: -20.125003814697266

Token 648: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.009104345925152302
    2. 'arked' → logprob: -4.759104251861572
    3. '[i' → logprob: -8.25910472869873
    4. '[' → logprob: -8.75910472869873
    5. 'marked' → logprob: -10.63410472869873
    6. 'ked' → logprob: -10.88410472869873
    7. '[k' → logprob: -12.13410472869873
    8. 'ED' → logprob: -12.50910472869873
    9. '(mark' → logprob: -12.63410472869873
    10. 'eded' → logprob: -13.50910472869873

Token 649: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.500000953674316
    3. '[k' → logprob: -16.125
    4. '   ' → logprob: -17.125
    5. '[' → logprob: -17.875
    6. '[d' → logprob: -18.75
    7. '[j' → logprob: -18.875
    8. '```' → logprob: -20.75
    9. '(i' → logprob: -20.875
    10. 'd' → logprob: -21.125

Token 650: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008624859154224396
    2. '[i' → logprob: -4.758625030517578
    3. ' ][' → logprob: -12.258625030517578
    4. '[' → logprob: -13.133625030517578
    5. ']' → logprob: -13.383625030517578
    6. '   ' → logprob: -14.133625030517578
    7. ' [' → logprob: -15.258625030517578
    8. '[j' → logprob: -15.258625030517578
    9. 'i' → logprob: -15.258625030517578
    10. ')[' → logprob: -16.258625030517578

Token 651: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001394161517964676
    2. '[i' → logprob: -9.375139236450195
    3. '][' → logprob: -10.750139236450195
    4. ' i' → logprob: -11.125139236450195
    5. '0' → logprob: -11.625139236450195
    6. '[' → logprob: -13.000139236450195
    7. 'n' → logprob: -13.250139236450195
    8. '   ' → logprob: -13.375139236450195
    9. 'True' → logprob: -14.000139236450195
    10. 'range' → logprob: -14.000139236450195

Token 652: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019376569252926856
    2. 'for' → logprob: -8.62519359588623
    3. ' ]' → logprob: -11.50019359588623
    4. ' for' → logprob: -13.62519359588623
    5. ')' → logprob: -14.00019359588623
    6. '])' → logprob: -14.62519359588623
    7. 'i' → logprob: -14.75019359588623
    8. ']
' → logprob: -15.00019359588623
    9. '}' → logprob: -15.50019359588623
    10. '   ' → logprob: -16.000194549560547

Token 653: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38692429661750793
    2. 'for' → logprob: -1.1369242668151855
    3. '       ' → logprob: -11.011924743652344
    4. ')' → logprob: -11.386924743652344
    5. '           ' → logprob: -11.386924743652344
    6. '        ' → logprob: -12.761924743652344
    7. ']' → logprob: -12.761924743652344
    8. '	for' → logprob: -13.261924743652344
    9. ' ' → logprob: -13.761924743652344
    10. '         ' → logprob: -13.886924743652344

Token 654: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01752321980893612
    2. ' range' → logprob: -4.517523288726807
    3. 'range' → logprob: -5.517523288726807
    4. ' i' → logprob: -6.017523288726807
    5. ' in' → logprob: -13.392522811889648
    6. 'in' → logprob: -13.392522811889648
    7. '   ' → logprob: -17.14252281188965
    8. ' ' → logprob: -17.64252281188965
    9. '  ' → logprob: -18.76752281188965
    10. '
' → logprob: -18.89252281188965

Token 655: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10023611038923264
    2. 'in' → logprob: -2.350236177444458
    3. 'range' → logprob: -10.850235939025879
    4. 'n' → logprob: -11.975235939025879
    5. ' range' → logprob: -13.600235939025879
    6. ')' → logprob: -14.225235939025879
    7. '   ' → logprob: -14.350235939025879
    8. '
' → logprob: -14.850235939025879
    9. ' ' → logprob: -15.100235939025879
    10. '```' → logprob: -16.100236892700195

Token 656: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -17.751928329467773
    4. 'n' → logprob: -19.126928329467773
    5. '   ' → logprob: -19.126928329467773
    6. ' ' → logprob: -19.126928329467773
    7. '
' → logprob: -20.126928329467773
    8. ')' → logprob: -21.126928329467773
    9. '	range' → logprob: -21.376928329467773
    10. '  ' → logprob: -22.001928329467773

Token 657: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16022726893424988
    2. 'n' → logprob: -1.9102272987365723
    3. '(' → logprob: -13.285226821899414
    4. ' n' → logprob: -13.910226821899414
    5. 'range' → logprob: -15.410226821899414
    6. ' (' → logprob: -16.285226821899414
    7. '	n' → logprob: -16.410226821899414
    8. ')n' → logprob: -17.035226821899414
    9. '
' → logprob: -17.535226821899414
    10. ')' → logprob: -17.660226821899414

Token 658: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31771379709243774
    2. '):
' → logprob: -1.317713737487793
    3. ')' → logprob: -6.317713737487793
    4. ')):' → logprob: -6.317713737487793
    5. ')):
' → logprob: -7.192713737487793
    6. '))' → logprob: -10.567713737487793
    7. '):
' → logprob: -10.567713737487793
    8. '       ' → logprob: -11.067713737487793
    9. '):

' → logprob: -11.942713737487793
    10. '   ' → logprob: -12.692713737487793

Token 659: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09045132249593735
    2. ':
' → logprob: -2.715451240539551
    3. ':' → logprob: -3.965451240539551
    4. '           ' → logprob: -7.715451240539551
    5. '   ' → logprob: -7.840451240539551
    6. '):
' → logprob: -7.840451240539551
    7. '):' → logprob: -10.09045124053955
    8. '               ' → logprob: -10.21545124053955
    9. '==' → logprob: -11.96545124053955
    10. ')' → logprob: -12.09045124053955

Token 660: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.01594133861362934
    2. '       ' → logprob: -4.390941143035889
    3. ' count' → logprob: -6.140941143035889
    4. '           ' → logprob: -7.390941143035889
    5. '   ' → logprob: -8.265941619873047
    6. '               ' → logprob: -8.515941619873047
    7. '
' → logprob: -8.765941619873047
    8. '```' → logprob: -10.890941619873047
    9. '	count' → logprob: -11.515941619873047
    10. '[count' → logprob: -12.140941619873047

Token 661: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029773514717817307
    2. ' +=' → logprob: -3.529773473739624
    3. '           ' → logprob: -11.654773712158203
    4. ']+=' → logprob: -11.779773712158203
    5. '   ' → logprob: -13.154773712158203
    6. '+' → logprob: -13.904773712158203
    7. '            ' → logprob: -14.029773712158203
    8. '       ' → logprob: -14.404773712158203
    9. '               ' → logprob: -14.779773712158203
    10. '          ' → logprob: -15.029773712158203

Token 662: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.379077911376953
    4. ' ' → logprob: -17.004077911376953
    5. '
' → logprob: -19.629077911376953
    6. '```' → logprob: -19.629077911376953
    7. '１' → logprob: -19.754077911376953
    8. '+' → logprob: -20.629077911376953
    9. '  ' → logprob: -21.066577911376953
    10. ')' → logprob: -21.316577911376953

Token 663: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -19.625
    5. 'n' → logprob: -20.8125
    6. '+' → logprob: -21.4375
    7. '0' → logprob: -21.625
    8. '１' → logprob: -21.6875
    9. '[' → logprob: -21.6875
    10. 'def' → logprob: -21.875

Token 664: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17491623759269714
    2. '   ' → logprob: -2.4249162673950195
    3. '\n' → logprob: -2.7999162673950195
    4. '<|end|>' → logprob: -5.5499162673950195
    5. '\
' → logprob: -6.4249162673950195
    6. '       ' → logprob: -6.5499162673950195
    7. '\' → logprob: -6.6749162673950195
    8. '  
' → logprob: -6.9249162673950195
    9. '    
' → logprob: -7.0499162673950195
    10. ' 
' → logprob: -8.42491626739502

Token 665: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12151883542537689
    2. '#' → logprob: -2.746518850326538
    3. '       ' → logprob: -2.996518850326538
    4. '
' → logprob: -8.996519088745117
    5. '```' → logprob: -9.621519088745117
    6. 'if' → logprob: -10.121519088745117
    7. ' #' → logprob: -10.496519088745117
    8. ' ' → logprob: -11.121519088745117
    9. '  ' → logprob: -11.371519088745117
    10. '    
' → logprob: -11.871519088745117

Token 666: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07117505371570587
    2. '#' (adapté à ' #') → logprob: -2.9461750984191895
    3. '   ' → logprob: -4.4461750984191895
    4. 'if' → logprob: -5.6961750984191895
    5. ' if' → logprob: -7.0711750984191895
    6. ' #' → logprob: -8.946174621582031
    7. ' ' → logprob: -10.571174621582031
    8. '	' → logprob: -10.571174621582031
    9. '\' → logprob: -11.821174621582031
    10. '        
' → logprob: -11.946174621582031

Token 667: ' Di' (ID: 9196)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08931390196084976
    2. 'if' → logprob: -2.4643139839172363
    3. '   ' → logprob: -8.839313507080078
    4. '       ' → logprob: -9.464313507080078
    5. 'for' → logprob: -9.964313507080078
    6. 'Di' → logprob: -10.339313507080078
    7. 'di' → logprob: -10.839313507080078
    8. ' if' → logprob: -10.964313507080078
    9. '
' → logprob: -11.214313507080078
    10. ' #' → logprob: -11.714313507080078

Token 668: 'agon' (ID: 9863)
  Prédit: 'agon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agon' → logprob: -2.7610454708337784e-05
    2. 'ag' → logprob: -11.125027656555176
    3. 'agonal' → logprob: -11.500027656555176
    4. 'AGON' → logprob: -14.500027656555176
    5. '
' → logprob: -14.875027656555176
    6. '[' → logprob: -14.875027656555176
    7. 'ago' → logprob: -15.125027656555176
    8. 'agona' → logprob: -15.250027656555176
    9. 'agog' → logprob: -15.375027656555176
    10. '#' → logprob: -15.500027656555176

Token 669: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0005605389014817774
    2. 'al' → logprob: -7.500560760498047
    3. 'ales' → logprob: -13.000560760498047
    4. '[' → logprob: -13.375560760498047
    5. 'nale' → logprob: -14.000560760498047
    6. 'cale' → logprob: -14.500560760498047
    7. 'alle' → logprob: -14.750560760498047
    8. 'але' → logprob: -14.750560760498047
    9. '[(' → logprob: -15.250560760498047
    10. '#' → logprob: -15.500560760498047

Token 670: ' secondaire' (ID: 166050)
  Prédit: 'principal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'principal' → logprob: -0.4281810522079468
    2. '[i' → logprob: -2.1781811714172363
    3. 'anti' → logprob: -2.1781811714172363
    4. '   ' → logprob: -3.1781811714172363
    5. '[' → logprob: -4.303181171417236
    6. 'if' → logprob: -4.303181171417236
    7. 'ant' → logprob: -4.428181171417236
    8. 'secondary' → logprob: -4.928181171417236
    9. 'off' → logprob: -5.178181171417236
    10. ' secondaire' → logprob: -5.678181171417236

Token 671: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4867691099643707
    2. ' if' → logprob: -0.9867690801620483
    3. '   ' → logprob: -5.361769199371338
    4. '
' → logprob: -5.986769199371338
    5. ' =' → logprob: -5.986769199371338
    6. '=' → logprob: -6.361769199371338
    7. ':
' → logprob: -8.11176872253418
    8. '=
' → logprob: -8.23676872253418
    9. '(
' → logprob: -9.61176872253418
    10. ',' → logprob: -9.61176872253418

Token 672: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14617882668972015
    2. '   ' → logprob: -2.646178722381592
    3. ' if' → logprob: -2.896178722381592
    4. '       ' → logprob: -5.021178722381592
    5. '=' → logprob: -6.521178722381592
    6. '
' → logprob: -7.021178722381592
    7. ' =' → logprob: -7.271178722381592
    8. '```' → logprob: -9.77117919921875
    9. '=
' → logprob: -10.89617919921875
    10. '(if' → logprob: -11.02117919921875

Token 673: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4741455018520355
    2. ' if' → logprob: -0.9741455316543579
    3. 'all' → logprob: -10.349145889282227
    4. ' all' → logprob: -10.474145889282227
    5. '   ' → logprob: -11.974145889282227
    6. '[' → logprob: -15.224145889282227
    7. ' (' → logprob: -15.474145889282227
    8. '       ' → logprob: -15.474145889282227
    9. 'for' → logprob: -15.599145889282227
    10. '	if' → logprob: -15.599145889282227

Token 674: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5759395956993103
    2. ' all' → logprob: -0.8259395956993103
    3. ' ' → logprob: -16.450939178466797
    4. '   ' → logprob: -16.700939178466797
    5. '	all' → logprob: -16.950939178466797
    6. ' ' → logprob: -17.575939178466797
    7. '(all' → logprob: -17.700939178466797
    8. '.all' → logprob: -18.825939178466797
    9. 'All' → logprob: -19.325939178466797
    10. '_all' → logprob: -19.700939178466797

Token 675: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -15.250000953674316
    3. '(not' → logprob: -15.500000953674316
    4. '(marker' → logprob: -16.25
    5. 'marked' → logprob: -16.375
    6. '([' → logprob: -17.625
    7. '(mask' → logprob: -18.25
    8. ' (' → logprob: -19.375
    9. '((' → logprob: -19.625
    10. ' marked' → logprob: -20.25

Token 676: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.010425708256661892
    2. '[i' → logprob: -4.635425567626953
    3. 'arked' → logprob: -8.260425567626953
    4. 'marked' → logprob: -8.385425567626953
    5. 'ged' → logprob: -9.385425567626953
    6. '[' → logprob: -9.510425567626953
    7. '[k' → logprob: -11.760425567626953
    8. '[j' → logprob: -12.010425567626953
    9. '(mark' → logprob: -12.885425567626953
    10. '_mark' → logprob: -13.135425567626953

Token 677: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000273136975010857
    2. '[n' → logprob: -8.250272750854492
    3. '[' → logprob: -11.625272750854492
    4. '[j' → logprob: -12.875272750854492
    5. '   ' → logprob: -15.375272750854492
    6. ' [' → logprob: -17.000272750854492
    7. 'i' → logprob: -17.125272750854492
    8. '(i' → logprob: -17.500272750854492
    9. '[k' → logprob: -17.500272750854492
    10. '```' → logprob: -18.375272750854492

Token 678: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009923362173140049
    2. '[n' → logprob: -4.634923458099365
    3. '[i' → logprob: -9.384922981262207
    4. '[j' → logprob: -10.134922981262207
    5. '[' → logprob: -11.134922981262207
    6. ']' → logprob: -11.759922981262207
    7. '<n' → logprob: -12.009922981262207
    8. '][-' → logprob: -12.384922981262207
    9. '==' → logprob: -13.134922981262207
    10. '(n' → logprob: -13.259922981262207

Token 679: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0028980709612369537
    2. '(n' → logprob: -5.877898216247559
    3. '[n' → logprob: -9.877898216247559
    4. ' n' → logprob: -10.627898216247559
    5. '   ' → logprob: -12.002898216247559
    6. ' (' → logprob: -12.877898216247559
    7. '{' → logprob: -13.127898216247559
    8. '
' → logprob: -13.627898216247559
    9. '(' → logprob: -13.752898216247559
    10. '<n' → logprob: -13.752898216247559

Token 680: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015424765879288316
    2. ' -' → logprob: -6.501542568206787
    3. '1' → logprob: -10.251542091369629
    4. '-i' → logprob: -12.251542091369629
    5. ' ' → logprob: -17.001543045043945
    6. '−' → logprob: -17.751543045043945
    7. '   ' → logprob: -18.251543045043945
    8. 'i' → logprob: -18.376543045043945
    9. '
' → logprob: -19.376543045043945
    10. '```' → logprob: -19.751543045043945

Token 681: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048642918467522
    2. 'i' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.261048316955566
    4. ' i' → logprob: -15.636048316955566
    5. '[i' → logprob: -18.261049270629883
    6. '   ' → logprob: -18.386049270629883
    7. '(i' → logprob: -18.636049270629883
    8. '
' → logprob: -18.761049270629883
    9. '-' → logprob: -19.761049270629883
    10. '```' → logprob: -19.761049270629883

Token 682: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12693388760089874
    2. 'i' → logprob: -2.1269338130950928
    3. ' ' → logprob: -12.376934051513672
    4. ' i' → logprob: -13.501934051513672
    5. '(i' → logprob: -16.626934051513672
    6. '[i' → logprob: -16.751934051513672
    7. '   ' → logprob: -17.001934051513672
    8. '
' → logprob: -17.376934051513672
    9. '_i' → logprob: -17.376934051513672
    10. '{i' → logprob: -17.876934051513672

Token 683: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759421586990356
    2. ' -' → logprob: -0.8259421586990356
    3. '-i' → logprob: -12.950942039489746
    4. ' ' → logprob: -15.200942039489746
    5. '   ' → logprob: -16.700942993164062
    6. 'i' → logprob: -18.450942993164062
    7. ']' → logprob: -18.700942993164062
    8. '[' → logprob: -18.950942993164062
    9. '```' → logprob: -18.950942993164062
    10. '
' → logprob: -19.825942993164062

Token 684: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.339278580620885e-06
    2. ' i' → logprob: -13.000001907348633
    3. '	i' → logprob: -19.250001907348633
    4. '   ' → logprob: -20.000001907348633
    5. ')i' → logprob: -22.375001907348633
    6. ' ' → logprob: -22.875001907348633
    7. '[i' → logprob: -23.125001907348633
    8. '(i' → logprob: -23.250001907348633
    9. '*i' → logprob: -23.625001907348633
    10. '{i' → logprob: -23.625001907348633

Token 685: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.253090865968261e-06
    2. 'for' → logprob: -12.500009536743164
    3. '])' → logprob: -13.000009536743164
    4. ' ]' → logprob: -13.375009536743164
    5. ')' → logprob: -13.625009536743164
    6. ']
' → logprob: -15.250009536743164
    7. ']]' → logprob: -16.375009536743164
    8. ' for' → logprob: -16.875009536743164
    9. ']==' → logprob: -17.000009536743164
    10. '']' → logprob: -17.375009536743164

Token 686: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08745939284563065
    2. ']' → logprob: -3.0874593257904053
    3. ' for' → logprob: -3.3374593257904053
    4. ')' → logprob: -5.962459564208984
    5. '   ' → logprob: -12.087459564208984
    6. ' ' → logprob: -12.212459564208984
    7. '])' → logprob: -12.462459564208984
    8. '	for' → logprob: -12.837459564208984
    9. '[' → logprob: -13.087459564208984
    10. ' ]' → logprob: -13.712459564208984

Token 687: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021442919969559
    2. ' i' → logprob: -2.3502144813537598
    3. ' range' → logprob: -11.850214004516602
    4. 'range' → logprob: -14.350214004516602
    5. ' in' → logprob: -18.2252140045166
    6. '   ' → logprob: -18.8502140045166
    7. '	i' → logprob: -18.8502140045166
    8. '[i' → logprob: -19.3502140045166
    9. ' ' → logprob: -19.6002140045166
    10. '
' → logprob: -19.7252140045166

Token 688: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47410640120506287
    2. 'in' → logprob: -0.9741064310073853
    3. 'range' → logprob: -10.599106788635254
    4. 'n' → logprob: -13.599106788635254
    5. ' range' → logprob: -13.599106788635254
    6. ')' → logprob: -14.224106788635254
    7. 'import' → logprob: -14.599106788635254
    8. '```' → logprob: -14.974106788635254
    9. '
' → logprob: -16.349105834960938
    10. '(' → logprob: -16.349105834960938

Token 689: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.541112427134067e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -14.500075340270996
    4. '   ' → logprob: -19.125076293945312
    5. '
' → logprob: -19.250076293945312
    6. '	range' → logprob: -21.000076293945312
    7. 'in' → logprob: -21.250076293945312
    8. '```' → logprob: -21.375076293945312
    9. 'n' → logprob: -21.750076293945312
    10. ' ' → logprob: -22.000076293945312

Token 690: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00441706320270896
    2. 'n' → logprob: -5.5044169425964355
    3. 'range' → logprob: -8.004417419433594
    4. '(range' → logprob: -12.754417419433594
    5. '(' → logprob: -13.504417419433594
    6. ' range' → logprob: -14.879417419433594
    7. ' (' → logprob: -17.504417419433594
    8. ' n' → logprob: -18.254417419433594
    9. '
' → logprob: -19.629417419433594
    10. '(
' → logprob: -20.629417419433594

Token 691: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048890288919210434
    2. '):
' → logprob: -3.0488903522491455
    3. ')' → logprob: -8.673890113830566
    4. ')):' → logprob: -9.798890113830566
    5. '       ' → logprob: -10.548890113830566
    6. ']):' → logprob: -10.673890113830566
    7. '   ' → logprob: -11.298890113830566
    8. '):
' → logprob: -12.298890113830566
    9. ')):
' → logprob: -12.548890113830566
    10. ':' → logprob: -13.298890113830566

Token 692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32216131687164307
    2. '       ' → logprob: -1.322161316871643
    3. ':
' → logprob: -6.0721611976623535
    4. '               ' → logprob: -6.1971611976623535
    5. 'count' → logprob: -6.4471611976623535
    6. ':' → logprob: -7.1971611976623535
    7. '   ' → logprob: -7.1971611976623535
    8. '):
' → logprob: -7.9471611976623535
    9. ')' → logprob: -8.447161674499512
    10. '          ' → logprob: -8.572161674499512

Token 693: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.001556163071654737
    2. ' count' → logprob: -6.501556396484375
    3. '           ' → logprob: -10.376556396484375
    4. '   ' → logprob: -11.126556396484375
    5. '               ' → logprob: -12.501556396484375
    6. '       ' → logprob: -12.626556396484375
    7. '
' → logprob: -14.876556396484375
    8. '	count' → logprob: -15.126556396484375
    9. '[count' → logprob: -16.126556396484375
    10. '(count' → logprob: -16.751556396484375

Token 694: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00978182628750801
    2. ' +=' → logprob: -4.634781837463379
    3. '           ' → logprob: -11.759781837463379
    4. ']+=' → logprob: -12.509781837463379
    5. '!=' → logprob: -12.759781837463379
    6. '+' → logprob: -13.259781837463379
    7. '          ' → logprob: -13.259781837463379
    8. '   ' → logprob: -13.384781837463379
    9. '       ' → logprob: -13.634781837463379
    10. '            ' → logprob: -14.134781837463379

Token 695: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.913042068481445
    4. ' ' → logprob: -18.663042068481445
    5. '(' → logprob: -18.788042068481445
    6. 'count' → logprob: -19.288042068481445
    7. '0' → logprob: -19.413042068481445
    8. '  ' → logprob: -20.288042068481445
    9. '```' → logprob: -20.288042068481445
    10. '+' → logprob: -20.600542068481445

Token 696: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 'count' → logprob: -17.25
    4. '   ' → logprob: -18.625
    5. '```' → logprob: -19.0
    6. '+' → logprob: -20.25
    7. 'n' → logprob: -20.375
    8. ')' → logprob: -20.75
    9. '
' → logprob: -20.75
    10. '۱' → logprob: -21.0625

Token 697: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008974744938313961
    2. '	return' → logprob: -5.758974552154541
    3. '       ' → logprob: -5.883974552154541
    4. '
' → logprob: -6.758974552154541
    5. 'return' → logprob: -6.758974552154541
    6. ' return' → logprob: -7.883974552154541
    7. '<|end|>' → logprob: -8.6339750289917
    8. '    
' → logprob: -9.6339750289917
    9. '<|end|>' → logprob: -11.2589750289917
    10. '```' → logprob: -11.3839750289917

Token 698: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002209973521530628
    2. '	return' → logprob: -6.8772101402282715
    3. '
' → logprob: -7.5022101402282715
    4. 'return' → logprob: -7.8772101402282715
    5. '<|end|>' → logprob: -9.377209663391113
    6. ' return' → logprob: -9.877209663391113
    7. '    
' → logprob: -9.877209663391113
    8. '       ' → logprob: -10.752209663391113
    9. '```' → logprob: -11.002209663391113
    10. '<|end|>' → logprob: -11.252209663391113

Token 699: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11390580236911774
    2. 'return' (adapté à ' return') → logprob: -2.738905906677246
    3. ' return' → logprob: -3.988905906677246
    4. '
' → logprob: -4.363905906677246
    5. '	return' → logprob: -4.613905906677246
    6. '       ' → logprob: -6.863905906677246
    7. '<|end|>' → logprob: -7.738905906677246
    8. '    
' → logprob: -9.113905906677246
    9. '```' → logprob: -9.113905906677246
    10. ':return' → logprob: -9.988905906677246

Token 700: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0001584850688232109
    2. ' count' → logprob: -8.750158309936523
    3. '   ' → logprob: -21.250158309936523
    4. '[count' → logprob: -21.500158309936523
    5. '(count' → logprob: -22.625158309936523
    6. '	count' → logprob: -22.875158309936523
    7. '$count' → logprob: -24.000158309936523
    8. ' ' → logprob: -24.750158309936523
    9. 'counts' → logprob: -24.750158309936523
    10. '0' → logprob: -25.000158309936523

Token 701: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0063732098788022995
    2. '    
' → logprob: -5.631373405456543
    3. '```' → logprob: -6.881373405456543
    4. '<|end|>' → logprob: -7.256373405456543
    5. '
' → logprob: -7.506373405456543
    6. 'def' → logprob: -8.006373405456543
    7. '<|end|>' → logprob: -9.381373405456543
    8. 'for' → logprob: -11.131373405456543
    9. '  
' → logprob: -11.256373405456543
    10. '        
' → logprob: -11.756373405456543

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020847124978899956
    2. 'for' → logprob: -6.627084732055664
    3. '    
' → logprob: -8.127084732055664
    4. '```' → logprob: -8.127084732055664
    5. 'def' → logprob: -9.502084732055664
    6. ' for' → logprob: -10.252084732055664
    7. '
' → logprob: -10.752084732055664
    8. 'marked' → logprob: -11.127084732055664
    9. 'current' → logprob: -11.502084732055664
    10. '``' → logprob: -13.502084732055664

Token 703: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.253301203250885
    2. '   ' → logprob: -1.5033011436462402
    3. 'current' → logprob: -7.87830114364624
    4. ' for' → logprob: -8.128301620483398
    5. '```' → logprob: -8.628301620483398
    6. 'def' → logprob: -8.753301620483398
    7. 'marked' → logprob: -8.753301620483398
    8. 'score' → logprob: -9.378301620483398
    9. 'result' → logprob: -9.878301620483398
    10. '    
' → logprob: -10.503301620483398

Token 704: ' Su' (ID: 3893)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003997665364295244
    2. '   ' → logprob: -6.378997802734375
    3. 'score' → logprob: -6.753997802734375
    4. 'marked' → logprob: -7.628997802734375
    5. 'def' → logprob: -8.503997802734375
    6. '#' → logprob: -9.003997802734375
    7. 'result' → logprob: -9.128997802734375
    8. 'current' → logprob: -10.003997802734375
    9. 'winner' → logprob: -10.253997802734375
    10. ' for' → logprob: -10.628997802734375

Token 705: 'ivi' (ID: 14709)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2543005347251892
    2. 'per' → logprob: -1.629300594329834
    3. 'b' → logprob: -4.504300594329834
    4. 'p' → logprob: -5.004300594329834
    5. 'rv' → logprob: -5.129300594329834
    6. 'pp' → logprob: -7.004300594329834
    7. '   ' → logprob: -7.129300594329834
    8. 'prem' → logprob: -7.754300594329834
    9. 'pers' → logprob: -7.879300594329834
    10. 're' → logprob: -7.879300594329834

Token 706: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1996612846851349
    2. 'for' → logprob: -3.0746612548828125
    3. 'marked' → logprob: -3.1996612548828125
    4. ' for' → logprob: -3.6996612548828125
    5. 'de' → logprob: -3.9496612548828125
    6. 'def' → logprob: -4.4496612548828125
    7. ' marked' → logprob: -4.6996612548828125
    8. 'us' → logprob: -4.8246612548828125
    9. 'des' → logprob: -5.4496612548828125
    10. 'mar' → logprob: -5.9496612548828125

Token 707: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.014750361442566
    2. 'la' → logprob: -1.514750361442566
    3. ' la' → logprob: -2.0147504806518555
    4. 'for' → logprob: -2.6397504806518555
    5. 'score' → logprob: -3.1397504806518555
    6. 'us' → logprob: -3.2647504806518555
    7. 'def' → logprob: -3.7647504806518555
    8. 'count' → logprob: -3.8897504806518555
    9. '#' → logprob: -4.3897504806518555
    10. ' l' → logprob: -4.5147504806518555

Token 708: ''état' (ID: 116357)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.165511131286621
    2. 'marked' → logprob: -1.165511131286621
    3. 'p' → logprob: -1.415511131286621
    4. 'count' → logprob: -3.915511131286621
    5. 'players' → logprob: -4.665511131286621
    6. 'state' → logprob: -4.665511131286621
    7. 's' → logprob: -4.665511131286621
    8. '#' → logprob: -4.915511131286621
    9. 'mar' → logprob: -5.165511131286621
    10. 'u' → logprob: -5.165511131286621

Token 709: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33199945092201233
    2. 'for' → logprob: -2.5819995403289795
    3. 'us' → logprob: -2.9569995403289795
    4. ' for' → logprob: -3.0819995403289795
    5. ' =' → logprob: -3.8319995403289795
    6. 'marked' → logprob: -4.0819993019104
    7. ' mar' → logprob: -4.5819993019104
    8. ' de' → logprob: -4.9569993019104
    9. 'def' → logprob: -4.9569993019104
    10. ' des' → logprob: -5.0819993019104

Token 710: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3745361566543579
    2. 'vic' → logprob: -1.624536156654358
    3. 'vict' → logprob: -2.4995360374450684
    4. 'jeu' → logprob: -3.8745360374450684
    5. 'cha' → logprob: -5.874536037445068
    6. ' la' → logprob: -5.874536037445068
    7. 'l' → logprob: -6.249536037445068
    8. ' victoire' → logprob: -6.749536037445068
    9. 'def' → logprob: -7.374536037445068
    10. '```' → logprob: -7.499536037445068

Token 711: ' partie' (ID: 22139)
  Prédit: 'jeu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jeu' → logprob: -0.41958749294281006
    2. 'part' → logprob: -1.29458749294281
    3. 'for' → logprob: -3.7945876121520996
    4. 'def' → logprob: -3.7945876121520996
    5. 'game' → logprob: -4.2945876121521
    6. 'mar' → logprob: -6.1695876121521
    7. 'while' → logprob: -6.2945876121521
    8. 'vic' → logprob: -6.4195876121521
    9. 'vict' → logprob: -6.7945876121521
    10. 'jou' → logprob: -7.0445876121521

Token 712: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26904168725013733
    2. 'marked' → logprob: -1.644041657447815
    3. ' marked' → logprob: -3.3940417766571045
    4. ' for' → logprob: -6.269041538238525
    5. 'for' → logprob: -6.394041538238525
    6. 'mar' → logprob: -6.769041538238525
    7. 'def' → logprob: -6.894041538238525
    8. 'us' → logprob: -7.019041538238525
    9. '    
' → logprob: -8.144042015075684
    10. ' mar' → logprob: -8.144042015075684

Token 713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7061731815338135
    2. 'for' → logprob: -1.7061731815338135
    3. ' for' → logprob: -1.9561731815338135
    4. 'marked' → logprob: -2.5811731815338135
    5. ' marked' → logprob: -3.3311731815338135
    6. 'score' → logprob: -3.8311731815338135
    7. 'us' → logprob: -3.9561731815338135
    8. 'def' → logprob: -5.456172943115234
    9. 'result' → logprob: -5.581172943115234
    10. 'winner' → logprob: -5.581172943115234

Token 714: ' #' (ID: 1069)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.4787391424179077
    2. 'for' → logprob: -1.7287391424179077
    3. 'winner' → logprob: -2.4787392616271973
    4. 'score' → logprob: -2.8537392616271973
    5. 'u' → logprob: -4.603739261627197
    6. 'result' → logprob: -4.853739261627197
    7. 'win' → logprob: -5.103739261627197
    8. 'wins' → logprob: -5.228739261627197
    9. ' for' → logprob: -5.353739261627197
    10. 'vict' → logprob: -5.353739261627197

Token 715: ' À' (ID: 27643)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9242550134658813
    2. 'us' → logprob: -1.1742550134658813
    3. 'winner' → logprob: -1.6742550134658813
    4. 'score' → logprob: -3.174254894256592
    5. 'u' → logprob: -4.424254894256592
    6. 'wins' → logprob: -4.799254894256592
    7. 'result' → logprob: -4.924254894256592
    8. 'turn' → logprob: -5.174254894256592
    9. 'marked' → logprob: -5.424254894256592
    10. 'win' → logprob: -5.424254894256592

Token 716: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29933464527130127
    2. ' chaque' → logprob: -1.9243346452713013
    3. 'marked' → logprob: -3.2993345260620117
    4. ' for' → logprob: -4.049334526062012
    5. 'part' → logprob: -4.549334526062012
    6. 'each' → logprob: -4.924334526062012
    7. 'tour' → logprob: -5.549334526062012
    8. 'u' → logprob: -5.799334526062012
    9. ' marked' → logprob: -6.049334526062012
    10. ' each' → logprob: -6.299334526062012

Token 717: ' tir' (ID: 16690)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.38229459524154663
    2. ' card' → logprob: -2.0072946548461914
    3. 'for' → logprob: -2.1322946548461914
    4. ' for' → logprob: -4.257294654846191
    5. 'tour' → logprob: -4.382294654846191
    6. 'iteration' → logprob: -5.007294654846191
    7. ' iteration' → logprob: -5.132294654846191
    8. ' tour' → logprob: -5.257294654846191
    9. ' step' → logprob: -5.757294654846191
    10. 'token' → logprob: -6.257294654846191

Token 718: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.35437846183776855
    2. 'ée' → logprob: -1.2293784618377686
    3. 'née' → logprob: -6.229378700256348
    4. 'é' → logprob: -6.604378700256348
    5. 'e' → logprob: -6.729378700256348
    6. 'er' → logprob: -7.604378700256348
    7. 'nage' → logprob: -7.854378700256348
    8. 'tage' → logprob: -9.104378700256348
    9. 'ee' → logprob: -9.104378700256348
    10. 'ed' → logprob: -9.354378700256348

Token 719: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6362687945365906
    2. '   ' → logprob: -1.1362688541412354
    3. ',' → logprob: -2.1362688541412354
    4. ' de' → logprob: -4.261268615722656
    5. ':
' → logprob: -4.886268615722656
    6. 'de' → logprob: -5.761268615722656
    7. ' of' → logprob: -6.261268615722656
    8. ' for' → logprob: -6.511268615722656
    9. 'for' → logprob: -6.636268615722656
    10. ' des' → logprob: -7.261268615722656

Token 720: ' carte' (ID: 30276)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.10414706915616989
    2. 'cards' → logprob: -2.979146957397461
    3. ' carte' → logprob: -3.979146957397461
    4. 'token' → logprob: -4.229146957397461
    5. ' card' → logprob: -4.604146957397461
    6. ' cards' → logprob: -6.729146957397461
    7. 'car' → logprob: -7.229146957397461
    8. 'c' → logprob: -7.354146957397461
    9. 'cart' → logprob: -7.479146957397461
    10. ' cartes' → logprob: -7.854146957397461

Token 721: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5915274620056152
    2. ':' → logprob: -0.9665274620056152
    3. ',' → logprob: -3.0915274620056152
    4. ':
' → logprob: -3.9665274620056152
    5. ' :' → logprob: -6.841527462005615
    6. ' :
' → logprob: -8.966527938842773
    7. '```' → logprob: -9.091527938842773
    8. ' ,' → logprob: -9.091527938842773
    9. 'for' → logprob: -9.841527938842773
    10. ' for' → logprob: -10.216527938842773

Token 722: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009343652985990047
    2. ' for' → logprob: -5.63434362411499
    3. '```' → logprob: -6.38434362411499
    4. 'for' → logprob: -7.13434362411499
    5. 'num' → logprob: -7.13434362411499
    6. ' num' → logprob: -7.63434362411499
    7. ' number' → logprob: -7.75934362411499
    8. 'number' → logprob: -8.259344100952148
    9. '       ' → logprob: -8.259344100952148
    10. ' token' → logprob: -8.884344100952148

Token 723: ' marque' (ID: 38644)
  Prédit: ' marque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marque' → logprob: -1.1561380624771118
    2. '   ' → logprob: -1.2811380624771118
    3. 'for' → logprob: -1.2811380624771118
    4. ' for' → logprob: -2.2811379432678223
    5. '    ' → logprob: -4.281137943267822
    6. ' mark' → logprob: -5.656137943267822
    7. '       ' → logprob: -5.906137943267822
    8. 'mark' → logprob: -7.031137943267822
    9. ' marcar' → logprob: -7.156137943267822
    10. '#' → logprob: -7.281137943267822

Token 724: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2551310062408447
    2. 'for' → logprob: -1.3801310062408447
    3. ' les' → logprob: -1.6301310062408447
    4. 'les' → logprob: -2.7551310062408447
    5. '   ' → logprob: -2.8801310062408447
    6. 'le' → logprob: -3.1301310062408447
    7. ' la' → logprob: -3.5051310062408447
    8. ' le' → logprob: -4.630130767822266
    9. ' une' → logprob: -4.755130767822266
    10. 'pos' → logprob: -4.880130767822266

Token 725: ' Us' (ID: 5268)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.9862193465232849
    2. 'us' → logprob: -1.2362194061279297
    3. ' each' → logprob: -2.2362194061279297
    4. 'each' → logprob: -2.7362194061279297
    5. 'ch' → logprob: -3.1112194061279297
    6. ' chacun' → logprob: -3.2362194061279297
    7. ' both' → logprob: -3.9862194061279297
    8. 'cha' → logprob: -4.23621940612793
    9. 'les' → logprob: -4.61121940612793
    10. ' les' → logprob: -4.86121940612793

Token 726: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -0.0002448893792461604
    2. '   ' → logprob: -8.500245094299316
    3. 'ag' → logprob: -11.500245094299316
    4. 'a' → logprob: -11.500245094299316
    5. 'u' → logprob: -11.875245094299316
    6. 's' → logprob: -12.500245094299316
    7. 'aggi' → logprob: -13.750245094299316
    8. 'ugi' → logprob: -13.875245094299316
    9. '#' → logprob: -14.000245094299316
    10. 'asi' → logprob: -14.125245094299316

Token 727: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23838582634925842
    2. ',' → logprob: -1.988385796546936
    3. '   ' → logprob: -3.6133859157562256
    4. '[' → logprob: -3.8633859157562256
    5. 'and' → logprob: -4.9883856773376465
    6. '[pos' → logprob: -5.7383856773376465
    7. '<|end|>' → logprob: -6.2383856773376465
    8. ' ,' → logprob: -6.3633856773376465
    9. ' ' → logprob: -6.3633856773376465
    10. '_' → logprob: -6.8633856773376465

Token 728: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02439207397401333
    2. ' N' → logprob: -4.149392127990723
    3. 'for' → logprob: -5.399392127990723
    4. ' for' → logprob: -5.649392127990723
    5. 'ne' → logprob: -8.524392127990723
    6. 'Ne' → logprob: -9.774392127990723
    7. ' Ne' → logprob: -11.899392127990723
    8. '#' → logprob: -12.399392127990723
    9. ' ' → logprob: -12.649392127990723
    10. ' ne' → logprob: -12.774392127990723

Token 729: 'eko' (ID: 22286)
  Prédit: 'eko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eko' → logprob: -0.005333251319825649
    2. '```' → logprob: -6.130333423614502
    3. 'e' → logprob: -6.255333423614502
    4. 'еко' → logprob: -8.505332946777344
    5. '``' → logprob: -8.630332946777344
    6. 'ne' → logprob: -8.630332946777344
    7. 'ko' → logprob: -9.505332946777344
    8. '`' → logprob: -9.755332946777344
    9. '
' → logprob: -9.755332946777344
    10. 'ek' → logprob: -9.755332946777344

Token 730: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006743087433278561
    2. ' for' → logprob: -7.875674247741699
    3. 'for' → logprob: -9.0006742477417
    4. '
' → logprob: -9.6256742477417
    5. '    
' → logprob: -10.1256742477417
    6. ',' → logprob: -10.6256742477417
    7. '<|end|>' → logprob: -11.2506742477417
    8. ':' → logprob: -11.7506742477417
    9. '<|end|>' → logprob: -11.8756742477417
    10. '```' → logprob: -12.1256742477417

Token 731: ' le' (ID: 505)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -1.0075089931488037
    2. ' pos' → logprob: -1.1325089931488037
    3. 'pos' → logprob: -1.2575089931488037
    4. 'cards' → logprob: -4.132509231567383
    5. ' card' → logprob: -5.882509231567383
    6. ' (' → logprob: -6.382509231567383
    7. 'card' → logprob: -6.382509231567383
    8. '(pos' → logprob: -6.507509231567383
    9. '(cards' → logprob: -6.507509231567383
    10. ' ' → logprob: -7.007509231567383

Token 732: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5642925500869751
    2. ' number' → logprob: -1.564292550086975
    3. 'nombre' → logprob: -2.3142924308776855
    4. ' card' → logprob: -2.9392924308776855
    5. 'number' → logprob: -3.5642924308776855
    6. 'card' → logprob: -4.3142924308776855
    7. ' numero' → logprob: -5.0642924308776855
    8. ' numéro' → logprob: -5.6892924308776855
    9. 'num' → logprob: -5.8142924308776855
    10. ' ' → logprob: -6.1892924308776855

Token 733: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.04557082802057266
    2. 'est' → logprob: -4.6705708503723145
    3. ' a' → logprob: -5.2955708503723145
    4. ' apparaît' → logprob: -5.2955708503723145
    5. ' appar' → logprob: -5.4205708503723145
    6. ' mar' → logprob: -5.6705708503723145
    7. ' marqué' → logprob: -6.0455708503723145
    8. ' appara' → logprob: -6.0455708503723145
    9. 'appar' → logprob: -6.1705708503723145
    10. 'prés' → logprob: -6.4205708503723145

Token 734: ' présent' (ID: 24129)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.5048596262931824
    2. 'dans' → logprob: -1.6298596858978271
    3. ' présent' → logprob: -2.629859685897827
    4. 'present' → logprob: -3.129859685897827
    5. ' present' → logprob: -3.254859685897827
    6. ' dans' → logprob: -3.254859685897827
    7. ' in' → logprob: -5.754859447479248
    8. 'in' → logprob: -6.504859447479248
    9. ' trouvé' → logprob: -7.004859447479248
    10. 'found' → logprob: -7.629859447479248

Token 735: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003629527287557721
    2. '
' → logprob: -6.253629684448242
    3. ':' → logprob: -7.503629684448242
    4. ',' → logprob: -7.878629684448242
    5. ' dans' → logprob: -7.878629684448242
    6. '    
' → logprob: -9.253629684448242
    7. '  ' → logprob: -9.753629684448242
    8. '```' → logprob: -9.878629684448242
    9. ' in' → logprob: -10.503629684448242
    10. '    ' → logprob: -10.878629684448242

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004618896055035293
    2. '
' → logprob: -8.12546157836914
    3. '    
' → logprob: -9.12546157836914
    4. ' for' → logprob: -11.37546157836914
    5. '       ' → logprob: -11.50046157836914
    6. ',' → logprob: -11.50046157836914
    7. '  ' → logprob: -12.12546157836914
    8. 'for' → logprob: -12.25046157836914
    9. '  
' → logprob: -12.37546157836914
    10. '<|end|>' → logprob: -13.00046157836914

Token 737: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013184702955186367
    2. 'for' → logprob: -4.638184547424316
    3. ' for' → logprob: -5.763184547424316
    4. '
' → logprob: -8.263184547424316
    5. '    
' → logprob: -10.763184547424316
    6. '```' → logprob: -13.513184547424316
    7. ' ' → logprob: -15.138184547424316
    8. '  
' → logprob: -15.138184547424316
    9. '       ' → logprob: -15.263184547424316
    10. '  ' → logprob: -15.763184547424316

Token 738: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6391217112541199
    2. 'for' → logprob: -1.1391217708587646
    3. ' for' → logprob: -1.8891217708587646
    4. '
' → logprob: -7.0141215324401855
    5. '    
' → logprob: -11.264122009277344
    6. ' ' → logprob: -11.264122009277344
    7. '```' → logprob: -11.514122009277344
    8. '	for' → logprob: -13.514122009277344
    9. '  ' → logprob: -13.639122009277344
    10. '       ' → logprob: -14.264122009277344

Token 739: ' teste' (ID: 62670)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2733219861984253
    2. '   ' → logprob: -2.023322105407715
    3. ' for' → logprob: -2.398322105407715
    4. ' continue' → logprob: -5.148322105407715
    5. 'contin' → logprob: -5.398322105407715
    6. 'continue' → logprob: -6.023322105407715
    7. '       ' → logprob: -7.273322105407715
    8. '    ' → logprob: -7.523322105407715
    9. ' continues' → logprob: -7.898322105407715
    10. ' continuer' → logprob: -8.273322105407715

Token 740: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8252103328704834
    2. '   ' → logprob: -1.0752103328704834
    3. 'if' → logprob: -2.4502103328704834
    4. ' si' → logprob: -2.5752103328704834
    5. '       ' → logprob: -4.3252105712890625
    6. ' for' → logprob: -4.7002105712890625
    7. ':' → logprob: -4.8252105712890625
    8. 'for' → logprob: -4.8252105712890625
    9. ' après' → logprob: -5.4502105712890625
    10. '    ' → logprob: -5.9502105712890625

Token 741: ' l' (ID: 305)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.3824077248573303
    2. 'count' → logprob: -2.0074076652526855
    3. ' marked' → logprob: -2.2574076652526855
    4. ' la' → logprob: -4.1324076652526855
    5. ' mark' → logprob: -4.3824076652526855
    6. 'marked' → logprob: -4.7574076652526855
    7. ' any' → logprob: -4.8824076652526855
    8. 'u' → logprob: -5.2574076652526855
    9. ' ' → logprob: -5.2574076652526855
    10. 'us' → logprob: -5.6324076652526855

Token 742: ''un' (ID: 9788)
  Prédit: ' marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.871845543384552
    2. ' count' → logprob: -1.3718454837799072
    3. 'count' → logprob: -1.3718454837799072
    4. 'marked' → logprob: -3.6218454837799072
    5. 'e' → logprob: -4.746845722198486
    6. ' all' → logprob: -4.871845722198486
    7. 'all' → logprob: -5.246845722198486
    8. ' ' → logprob: -5.246845722198486
    9. 'pos' → logprob: -5.746845722198486
    10. ' pos' → logprob: -5.871845722198486

Token 743: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4651564359664917
    2. ' ou' → logprob: -1.7151564359664917
    3. ' ==' → logprob: -2.7151565551757812
    4. ' or' → logprob: -2.8401565551757812
    5. 'e' → logprob: -3.2151565551757812
    6. '==' → logprob: -5.340156555175781
    7. 'ou' → logprob: -5.465156555175781
    8. '   ' → logprob: -5.840156555175781
    9. 'des' → logprob: -6.090156555175781
    10. ' est' → logprob: -6.090156555175781

Token 744: ''e' (ID: 17920)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8903006315231323
    2. 'eux' → logprob: -1.8903006315231323
    3. ' e' → logprob: -2.015300750732422
    4. ' des' → logprob: -2.390300750732422
    5. ' les' → logprob: -3.265300750732422
    6. ''e' → logprob: -3.390300750732422
    7. ' players' → logprob: -3.640300750732422
    8. 'u' → logprob: -4.265300750732422
    9. ''' → logprob: -4.890300750732422
    10. '#' → logprob: -4.890300750732422

Token 745: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.0076254382729530334
    2. 'eux' → logprob: -4.882625579833984
    3. 'u' → logprob: -11.257625579833984
    4. 'e' → logprob: -13.632625579833984
    5. 'aux' → logprob: -13.757625579833984
    6. '```' → logprob: -14.132625579833984
    7. 's' → logprob: -14.257625579833984
    8. 'us' → logprob: -14.382625579833984
    9. 'x' → logprob: -14.507625579833984
    10. '``' → logprob: -15.382625579833984

Token 746: ' rem' (ID: 1662)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.526202380657196
    2. 'a' → logprob: -1.4012024402618408
    3. 'est' → logprob: -2.651202440261841
    4. ' est' → logprob: -2.651202440261841
    5. ' marque' → logprob: -5.651202201843262
    6. ' has' → logprob: -5.901202201843262
    7. ' devient' → logprob: -6.026202201843262
    8. ' marked' → logprob: -6.276202201843262
    9. ' mar' → logprob: -6.526202201843262
    10. '   ' → logprob: -6.776202201843262

Token 747: 'plit' (ID: 4059)
  Prédit: 'plit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.10463891178369522
    2. 'port' → logprob: -3.1046388149261475
    3. 'porte' → logprob: -3.3546388149261475
    4. 'p' → logprob: -4.479639053344727
    5. 'place' → logprob: -5.729639053344727
    6. 'pl' → logprob: -6.104639053344727
    7. 'r' → logprob: -6.729639053344727
    8. 't' → logprob: -7.604639053344727
    9. 'ports' → logprob: -7.979639053344727
    10. '#' → logprob: -9.729639053344727

Token 748: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4250403344631195
    2. 'une' → logprob: -1.175040364265442
    3. ' une' → logprob: -3.8000402450561523
    4. '       ' → logprob: -5.050040245056152
    5. '    ' → logprob: -6.175040245056152
    6. ' la' → logprob: -6.925040245056152
    7. '```' → logprob: -7.175040245056152
    8. 'au' → logprob: -7.175040245056152
    9. 'la' → logprob: -7.300040245056152
    10. ''une' → logprob: -7.550040245056152

Token 749: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.9425340294837952
    2. ' crit' → logprob: -1.3175339698791504
    3. 'crit' → logprob: -2.1925339698791504
    4. 'conditions' → logprob: -2.4425339698791504
    5. ' condition' → logprob: -3.3175339698791504
    6. 'nombre' → logprob: -3.5675339698791504
    7. 'cond' → logprob: -4.06753396987915
    8. ' conditions' → logprob: -4.31753396987915
    9. 'count' → logprob: -5.31753396987915
    10. '```' → logprob: -5.44253396987915

Token 750: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024597056210041046
    2. 'for' → logprob: -4.27459716796875
    3. ' for' → logprob: -4.89959716796875
    4. '
' → logprob: -5.89959716796875
    5. '    
' → logprob: -8.89959716796875
    6. '```' → logprob: -10.27459716796875
    7. 'def' → logprob: -12.14959716796875
    8. ':' → logprob: -12.52459716796875
    9. '	for' → logprob: -13.52459716796875
    10. '       ' → logprob: -13.52459716796875

Token 751: ' victoire' (ID: 96596)
  Prédit: 'vic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vic' → logprob: -0.06442037969827652
    2. ' victoire' → logprob: -2.939420461654663
    3. 'vict' → logprob: -4.689420223236084
    4. ' victory' → logprob: -9.189420700073242
    5. 'v' → logprob: -9.814420700073242
    6. '```' → logprob: -10.189420700073242
    7. 'win' → logprob: -10.814420700073242
    8. ' vic' → logprob: -10.814420700073242
    9. 'la' → logprob: -11.189420700073242
    10. 'u' → logprob: -12.064420700073242

Token 752: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01862313225865364
    2. 'for' → logprob: -4.643623352050781
    3. '
' → logprob: -5.268623352050781
    4. ' for' → logprob: -5.643623352050781
    5. '    
' → logprob: -9.643623352050781
    6. '```' → logprob: -9.643623352050781
    7. '  
' → logprob: -13.393623352050781
    8. '``' → logprob: -13.643623352050781
    9. 'def' → logprob: -13.768623352050781
    10. '
' → logprob: -14.018623352050781

Token 753: '>=' (ID: 20974)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.0559749603271484
    2. 'u' → logprob: -1.5559749603271484
    3. ' u' → logprob: -1.6809749603271484
    4. 'count' → logprob: -2.0559749603271484
    5. '   ' → logprob: -2.8059749603271484
    6. ' v' → logprob: -4.305974960327148
    7. ')' → logprob: -4.930974960327148
    8. 'v' → logprob: -5.055974960327148
    9. ' ' → logprob: -5.055974960327148
    10. ' len' → logprob: -5.555974960327148

Token 754: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6951841711997986
    2. ' u' → logprob: -0.6951841711997986
    3. 'v' → logprob: -7.070184230804443
    4. ' v' → logprob: -7.195184230804443
    5. ' ' → logprob: -8.570183753967285
    6. '   ' → logprob: -9.695183753967285
    7. ')' → logprob: -9.820183753967285
    8. ' min' → logprob: -10.070183753967285
    9. ' max' → logprob: -11.195183753967285
    10. 'min' → logprob: -11.320183753967285

Token 755: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6976785659790039
    2. '):' → logprob: -1.322678565979004
    3. ' or' → logprob: -1.697678565979004
    4. ' and' → logprob: -3.697678565979004
    5. 'or' → logprob: -4.322678565979004
    6. '):
' → logprob: -5.197678565979004
    7. '   ' → logprob: -5.947678565979004
    8. 'and' → logprob: -6.322678565979004
    9. ' )' → logprob: -6.572678565979004
    10. '),' → logprob: -6.822678565979004

Token 756: ' >=' (ID: 5064)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6330035924911499
    2. ' v' → logprob: -0.7580035924911499
    3. ' ' → logprob: -8.758003234863281
    4. '>=' → logprob: -9.383003234863281
    5. '```' → logprob: -10.258003234863281
    6. ' ' → logprob: -10.633003234863281
    7. ' >=' → logprob: -10.883003234863281
    8. '_v' → logprob: -11.258003234863281
    9. '	v' → logprob: -11.383003234863281
    10. '<=' → logprob: -11.508003234863281

Token 757: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.22563906013965607
    2. 'v' → logprob: -1.6006391048431396
    3. ' ' → logprob: -9.600639343261719
    4. ' ' → logprob: -9.600639343261719
    5. '1' → logprob: -10.100639343261719
    6. ' u' → logprob: -10.975639343261719
    7. 'u' → logprob: -11.600639343261719
    8. '	v' → logprob: -11.850639343261719
    9. '
' → logprob: -12.600639343261719
    10. '_v' → logprob: -13.100639343261719

Token 758: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5983163714408875
    2. ')' → logprob: -0.9733163714408875
    3. '):
' → logprob: -2.7233164310455322
    4. '   ' → logprob: -5.223316192626953
    5. ' )' → logprob: -7.473316192626953
    6. ' ):' → logprob: -8.223316192626953
    7. ')
' → logprob: -8.348316192626953
    8. ' ):
' → logprob: -8.973316192626953
    9. ').' → logprob: -9.723316192626953
    10. '       ' → logprob: -10.348316192626953

Token 759: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011915372451767325
    2. 'for' → logprob: -7.00119161605835
    3. '
' → logprob: -8.376191139221191
    4. ' for' → logprob: -10.251191139221191
    5. '    
' → logprob: -11.501191139221191
    6. '```' → logprob: -12.501191139221191
    7. '  
' → logprob: -16.001192092895508
    8. '``' → logprob: -16.251192092895508
    9. '       ' → logprob: -16.376192092895508
    10. '<|end|>' → logprob: -16.501192092895508

Token 760: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068147084675729275
    2. 'for' → logprob: -5.256814479827881
    3. '
' → logprob: -6.631814479827881
    4. ' for' → logprob: -8.381814956665039
    5. '    
' → logprob: -10.506814956665039
    6. '```' → logprob: -12.256814956665039
    7. 'def' → logprob: -15.756814956665039
    8. '	for' → logprob: -15.756814956665039
    9. '  
' → logprob: -15.881814956665039
    10. '       ' → logprob: -16.63181495666504

Token 761: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3992582857608795
    2. '   ' → logprob: -1.1492582559585571
    3. ' for' → logprob: -4.399258136749268
    4. '
' → logprob: -11.149258613586426
    5. '```' → logprob: -11.649258613586426
    6. '	for' → logprob: -14.649258613586426
    7. '    
' → logprob: -14.774258613586426
    8. '``' → logprob: -15.649258613586426
    9. 'import' → logprob: -16.52425765991211
    10. 'from' → logprob: -16.89925765991211

Token 762: ' rend' (ID: 15016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13561707735061646
    2. ' for' → logprob: -2.1356170177459717
    3. '   ' → logprob: -5.260617256164551
    4. 'continue' → logprob: -6.385617256164551
    5. ' continue' → logprob: -6.885617256164551
    6. '       ' → logprob: -7.885617256164551
    7. 'def' → logprob: -9.01061725616455
    8. '    ' → logprob: -10.01061725616455
    9. '
' → logprob: -10.13561725616455
    10. '```' → logprob: -10.63561725616455

Token 763: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7640599608421326
    2. ' None' → logprob: -1.1390600204467773
    3. 'ra' → logprob: -2.8890600204467773
    4. '```' → logprob: -3.1390600204467773
    5. 'None' → logprob: -3.6390600204467773
    6. 'e' → logprob: -3.8890600204467773
    7. 'len' → logprob: -4.764060020446777
    8. ' ' → logprob: -4.889060020446777
    9. '   ' → logprob: -5.014060020446777
    10. '0' → logprob: -5.389060020446777

Token 764: ' verdict' (ID: 75722)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.32668229937553406
    2. 'count' → logprob: -3.4516823291778564
    3. 'for' → logprob: -3.8266823291778564
    4. 'score' → logprob: -3.8266823291778564
    5. 'next' → logprob: -3.9516823291778564
    6. 'u' → logprob: -4.201682090759277
    7. 'None' → logprob: -4.326682090759277
    8. ' result' → logprob: -4.451682090759277
    9. 'number' → logprob: -4.451682090759277
    10. 'turn' → logprob: -4.451682090759277

Token 765: ' dès' (ID: 37926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02052764594554901
    2. '
' → logprob: -4.1455278396606445
    3. 'for' → logprob: -5.7705278396606445
    4. ' for' → logprob: -6.7705278396606445
    5. '```' → logprob: -9.020527839660645
    6. '    
' → logprob: -9.270527839660645
    7. '``' → logprob: -13.770527839660645
    8. '  
' → logprob: -14.645527839660645
    9. '
' → logprob: -15.020527839660645
    10. '       ' → logprob: -15.395527839660645

Token 766: ' que' (ID: 661)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4625404179096222
    2. '```' → logprob: -1.8375403881072998
    3. ' ' → logprob: -2.8375403881073
    4. ' chaque' → logprob: -3.0875403881073
    5. ' la' → logprob: -3.9625403881073
    6. 'True' → logprob: -4.462540626525879
    7. '   ' → logprob: -4.587540626525879
    8. 'print' → logprob: -4.712540626525879
    9. 'le' → logprob: -4.712540626525879
    10. ' True' → logprob: -4.837540626525879

Token 767: ' possible' (ID: 4149)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.18693070113658905
    2. 'True' → logprob: -1.8119306564331055
    3. '```' → logprob: -5.9369306564331055
    4. ' une' → logprob: -6.8119306564331055
    5. '(True' → logprob: -7.8119306564331055
    6. ' ' → logprob: -8.186930656433105
    7. 'une' → logprob: -8.186930656433105
    8. ' not' → logprob: -8.311930656433105
    9. ' marked' → logprob: -8.561930656433105
    10. ' la' → logprob: -8.686930656433105

Token 768: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007721270900219679
    2. '
' → logprob: -5.007721424102783
    3. 'for' → logprob: -7.257721424102783
    4. ' for' → logprob: -8.382720947265625
    5. '    
' → logprob: -9.632720947265625
    6. '```' → logprob: -12.382720947265625
    7. '  
' → logprob: -14.132720947265625
    8. '   
' → logprob: -15.007720947265625
    9. '
' → logprob: -15.007720947265625
    10. '  ' → logprob: -15.757720947265625

Token 769: 'se' (ID: 344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1060185581445694
    2. '       ' → logprob: -2.856018543243408
    3. ' for' → logprob: -3.481018543243408
    4. 'for' → logprob: -4.606018543243408
    5. ')' → logprob: -6.856018543243408
    6. '  ' → logprob: -8.106019020080566
    7. '```' → logprob: -8.481019020080566
    8. ' ' → logprob: -8.731019020080566
    9. '
' → logprob: -8.731019020080566
    10. '    ' → logprob: -9.106019020080566

Token 770: 'u' (ID: 84)
  Prédit: 'lf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.553830087184906
    2. 'm' → logprob: -2.553830146789551
    3. '   ' → logprob: -2.553830146789551
    4. '```' → logprob: -2.678830146789551
    5. 't' → logprob: -3.553830146789551
    6. 'lected' → logprob: -4.303830146789551
    7. ')' → logprob: -4.303830146789551
    8. 'mester' → logprob: -4.428830146789551
    9. 'r' → logprob: -4.553830146789551
    10. 'q' → logprob: -4.803830146789551

Token 771: 'lement' (ID: 1254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5807464718818665
    2. 'lf' → logprob: -2.3307464122772217
    3. 'rv' → logprob: -2.8307464122772217
    4. '```' → logprob: -3.2057464122772217
    5. '   ' → logprob: -3.3307464122772217
    6. 'quence' → logprob: -3.4557464122772217
    7. 'l' → logprob: -3.7057464122772217
    8. 'lement' → logprob: -3.7057464122772217
    9. 'rie' → logprob: -4.580746650695801
    10. 'p' → logprob: -4.580746650695801

Token 772: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9264883399009705
    2. ' )' → logprob: -1.8014883995056152
    3. ')' → logprob: -2.1764883995056152
    4. '    ' → logprob: -2.8014883995056152
    5. ' après' → logprob: -2.8014883995056152
    6. ' un' → logprob: -2.9264883995056152
    7. ' une' → logprob: -3.0514883995056152
    8. ' ' → logprob: -4.301488399505615
    9. '```' → logprob: -4.301488399505615
    10. '       ' → logprob: -4.426488399505615

Token 773: ' un' (ID: 537)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.7346445918083191
    2. 'True' → logprob: -1.7346446514129639
    3. 'count' → logprob: -1.8596446514129639
    4. ' count' → logprob: -2.109644651412964
    5. 'u' → logprob: -3.484644651412964
    6. ' marked' → logprob: -4.484644412994385
    7. ' u' → logprob: -4.609644412994385
    8. 'marked' → logprob: -4.984644412994385
    9. '(True' → logprob: -6.359644412994385
    10. ' not' → logprob: -7.234644412994385

Token 774: ' joueur' (ID: 72629)
  Prédit: ' joueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joueur' → logprob: -0.25243061780929565
    2. ' player' → logprob: -2.3774306774139404
    3. ')' → logprob: -3.3774306774139404
    4. 'player' → logprob: -3.5024306774139404
    5. ' ' → logprob: -4.127430438995361
    6. ' )' → logprob: -4.502430438995361
    7. '_' → logprob: -4.627430438995361
    8. 'e' → logprob: -4.752430438995361
    9. 'jou' → logprob: -4.752430438995361
    10. '   ' → logprob: -5.752430438995361

Token 775: ' gagne' (ID: 141776)
  Prédit: ' rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.6786724328994751
    2. ' a' → logprob: -1.928672432899475
    3. 's' → logprob: -2.9286723136901855
    4. ' mar' → logprob: -3.0536723136901855
    5. '_' → logprob: -3.1786723136901855
    6. ')' → logprob: -3.4286723136901855
    7. 'a' → logprob: -3.6786723136901855
    8. '_mark' → logprob: -3.9286723136901855
    9. ' est' → logprob: -4.0536723136901855
    10. ' s' → logprob: -4.0536723136901855

Token 776: ' seul' (ID: 33041)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5522875785827637
    2. '):' → logprob: -0.9272875785827637
    3. '):
' → logprob: -4.677287578582764
    4. ' )' → logprob: -4.802287578582764
    5. '   ' → logprob: -5.177287578582764
    6. ' ):' → logprob: -5.802287578582764
    7. ':' → logprob: -6.552287578582764
    8. ' ):
' → logprob: -7.677287578582764
    9. ')
' → logprob: -8.052288055419922
    10. ' )
' → logprob: -9.552288055419922

Token 777: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11740630120038986
    2. '):' → logprob: -2.2424063682556152
    3. ' )' → logprob: -6.367406368255615
    4. '   ' → logprob: -6.867406368255615
    5. ':' → logprob: -7.117406368255615
    6. '):
' → logprob: -7.492406368255615
    7. ')
' → logprob: -8.742405891418457
    8. ' ):' → logprob: -9.242405891418457
    9. ').' → logprob: -9.992405891418457
    10. ':)' → logprob: -10.617405891418457

Token 778: ' ce' (ID: 2357)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -1.0002318620681763
    2. 'this' → logprob: -1.2502318620681763
    3. ' ce' → logprob: -2.6252317428588867
    4. ' a' → logprob: -3.0002317428588867
    5. 'a' → logprob: -3.1252317428588867
    6. ' cette' → logprob: -3.7502317428588867
    7. ' that' → logprob: -4.000231742858887
    8. 'that' → logprob: -4.000231742858887
    9. ' any' → logprob: -4.125231742858887
    10. 'ce' → logprob: -4.250231742858887

Token 779: ' moment' (ID: 4205)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.23797941207885742
    2. 'point' → logprob: -1.6129794120788574
    3. 'moment' → logprob: -4.987979412078857
    4. ' tour' → logprob: -6.237979412078857
    5. '```' → logprob: -6.737979412078857
    6. 't' → logprob: -7.112979412078857
    7. 'tir' → logprob: -7.987979412078857
    8. 'st' → logprob: -8.362979888916016
    9. '   ' → logprob: -8.612979888916016
    10. 'step' → logprob: -8.737979888916016

Token 780: ')

' (ID: 1029)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04654834792017937
    2. ':
' → logprob: -3.671548366546631
    3. '   ' → logprob: -4.671548366546631
    4. '):
' → logprob: -5.421548366546631
    5. '):' → logprob: -5.421548366546631
    6. ')' → logprob: -6.421548366546631
    7. ')
' → logprob: -10.171547889709473
    8. '       ' → logprob: -10.296547889709473
    9. ' :' → logprob: -10.671547889709473
    10. ',' → logprob: -10.796547889709473

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007162463734857738
    2. 'for' → logprob: -7.250716209411621
    3. '
' → logprob: -12.875716209411621
    4. ' for' → logprob: -13.250716209411621
    5. '    
' → logprob: -13.375716209411621
    6. '```' → logprob: -15.000716209411621
    7. '       ' → logprob: -17.500717163085938
    8. '  
' → logprob: -19.875717163085938
    9. '``' → logprob: -19.875717163085938
    10. '   
' → logprob: -20.000717163085938

Token 782: ' winner' (ID: 19499)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16696985065937042
    2. 'for' → logprob: -1.916969895362854
    3. ' for' → logprob: -5.0419697761535645
    4. '
' → logprob: -8.416970252990723
    5. '    
' → logprob: -10.666970252990723
    6. 'result' → logprob: -11.666970252990723
    7. 'def' → logprob: -12.791970252990723
    8. '```' → logprob: -13.166970252990723
    9. 'current' → logprob: -13.416970252990723
    10. '	for' → logprob: -14.541970252990723

Token 783: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09069490432739258
    2. '=' → logprob: -2.7156949043273926
    3. '_' → logprob: -3.9656949043273926
    4. 's' → logprob: -6.590694904327393
    5. '=None' → logprob: -9.590694427490234
    6. '   ' → logprob: -10.215694427490234
    7. '_us' → logprob: -10.590694427490234
    8. '_s' → logprob: -10.840694427490234
    9. ':' → logprob: -11.090694427490234
    10. ',' → logprob: -11.840694427490234

Token 784: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00020783171930816025
    2. '0' → logprob: -9.000207901000977
    3. ' None' → logprob: -9.500207901000977
    4. '""' → logprob: -11.750207901000977
    5. '''' → logprob: -13.875207901000977
    6. '"' → logprob: -14.750207901000977
    7. '_None' → logprob: -16.250207901000977
    8. '-' → logprob: -16.500207901000977
    9. '   ' → logprob: -16.750207901000977
    10. '(None' → logprob: -17.250207901000977

Token 785: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1503128856420517
    2. '   ' → logprob: -2.400312900543213
    3. ' for' → logprob: -3.650312900543213
    4. 'for' → logprob: -4.025312900543213
    5. '    
' → logprob: -5.650312900543213
    6. '  
' → logprob: -6.900312900543213
    7. ' 
' → logprob: -8.650312423706055
    8. '   
' → logprob: -9.525312423706055
    9. ':' → logprob: -9.900312423706055
    10. '\n' → logprob: -9.900312423706055

Token 786: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7640183568000793
    2. '   ' → logprob: -1.0140182971954346
    3. 'for' → logprob: -1.8890182971954346
    4. '
' → logprob: -4.139018535614014
    5. '    
' → logprob: -5.889018535614014
    6. ' 
' → logprob: -7.264018535614014
    7. '  
' → logprob: -7.639018535614014
    8. '```' → logprob: -9.514018058776855
    9. '\n' → logprob: -9.764018058776855
    10. ' ' → logprob: -9.889018058776855

Token 787: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004474732850212604
    2. ' for' → logprob: -7.7504472732543945
    3. '   ' → logprob: -11.000447273254395
    4. '
' → logprob: -17.00044822692871
    5. '```' → logprob: -17.00044822692871
    6. '	for' → logprob: -18.12544822692871
    7. '    
' → logprob: -20.12544822692871
    8. ' ' → logprob: -20.87544822692871
    9. '``' → logprob: -21.25044822692871
    10. 'def' → logprob: -22.50044822692871

Token 788: ' c' (ID: 274)
  Prédit: ' card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.8139943480491638
    2. 'card' → logprob: -0.8139943480491638
    3. 'c' → logprob: -2.8139944076538086
    4. ' c' → logprob: -4.063994407653809
    5. 'x' → logprob: -4.313994407653809
    6. 'num' → logprob: -4.438994407653809
    7. ' x' → logprob: -5.188994407653809
    8. ' num' → logprob: -5.813994407653809
    9. 'k' → logprob: -7.188994407653809
    10. ' number' → logprob: -7.313994407653809

Token 789: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016139237210154533
    2. 'in' → logprob: -4.141139030456543
    3. ' ' → logprob: -9.391139030456543
    4. 'n' → logprob: -12.266139030456543
    5. 's' → logprob: -12.266139030456543
    6. '  ' → logprob: -12.641139030456543
    7. ' i' → logprob: -12.891139030456543
    8. 'i' → logprob: -13.266139030456543
    9. '_' → logprob: -13.516139030456543
    10. '   ' → logprob: -13.891139030456543

Token 790: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0002682496269699186
    2. ' cards' → logprob: -8.25026798248291
    3. 'range' → logprob: -12.62526798248291
    4. '(cards' → logprob: -13.75026798248291
    5. 'c' → logprob: -13.87526798248291
    6. '   ' → logprob: -14.00026798248291
    7. 'card' → logprob: -14.62526798248291
    8. 'codes' → logprob: -16.500268936157227
    9. '.cards' → logprob: -16.625268936157227
    10. 'cars' → logprob: -17.125268936157227

Token 791: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06497272849082947
    2. ':
' → logprob: -2.8149726390838623
    3. '   ' → logprob: -6.189972877502441
    4. '       ' → logprob: -7.189972877502441
    5. '):
' → logprob: -8.939972877502441
    6. '):' → logprob: -10.439972877502441
    7. ' :' → logprob: -11.314972877502441
    8. '=' → logprob: -11.939972877502441
    9. ' :
' → logprob: -12.314972877502441
    10. ',' → logprob: -12.439972877502441

Token 792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006284964270889759
    2. '   ' → logprob: -5.881285190582275
    3. '        
' → logprob: -5.881285190582275
    4. '    
' → logprob: -7.881285190582275
    5. ' if' → logprob: -9.131284713745117
    6. '  
' → logprob: -9.756284713745117
    7. '
' → logprob: -10.881284713745117
    8. ' 
' → logprob: -10.881284713745117
    9. '<|end|>' → logprob: -10.881284713745117
    10. '       
' → logprob: -11.631284713745117

Token 793: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7073894739151001
    2. '       ' → logprob: -1.2073894739151
    3. 'if' → logprob: -1.9573894739151
    4. '   ' → logprob: -2.7073893547058105
    5. '#' (adapté à ' #') → logprob: -9.957389831542969
    6. '	if' → logprob: -10.332389831542969
    7. ' #' → logprob: -11.207389831542969
    8. ' ' → logprob: -11.207389831542969
    9. '    ' → logprob: -11.832389831542969
    10. '        
' → logprob: -11.832389831542969

Token 794: ' Mar' (ID: 3145)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003673471510410309
    2. '       ' → logprob: -5.878673553466797
    3. '   ' → logprob: -7.253673553466797
    4. ' if' → logprob: -9.253673553466797
    5. 'pos' → logprob: -9.878673553466797
    6. '#' → logprob: -11.503673553466797
    7. 'for' → logprob: -13.503673553466797
    8. 'found' → logprob: -13.753673553466797
    9. '	if' → logprob: -14.378673553466797
    10. '           ' → logprob: -16.378673553466797

Token 795: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.7758427262306213
    2. 'k' → logprob: -0.9008427262306213
    3. 'ker' → logprob: -2.1508426666259766
    4. 'ked' → logprob: -5.150842666625977
    5. 'qué' → logprob: -5.525842666625977
    6. '   ' → logprob: -5.775842666625977
    7. 'qu' → logprob: -6.150842666625977
    8. '       ' → logprob: -7.275842666625977
    9. 'q' → logprob: -8.400842666625977
    10. '           ' → logprob: -8.400842666625977

Token 796: ' pour' (ID: 1930)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5104809999465942
    2. 'if' → logprob: -1.0104809999465942
    3. '       ' → logprob: -3.3854808807373047
    4. ' for' → logprob: -7.135480880737305
    5. '   ' → logprob: -7.260480880737305
    6. 'for' → logprob: -8.010480880737305
    7. '	if' → logprob: -10.635480880737305
    8. 'us' → logprob: -11.760480880737305
    9. '           ' → logprob: -12.510480880737305
    10. 'pos' → logprob: -12.635480880737305

Token 797: ' Us' (ID: 5268)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.2225787341594696
    2. 'if' → logprob: -2.472578763961792
    3. 'pos' → logprob: -3.222578763961792
    4. ' us' → logprob: -3.347578763961792
    5. ' if' → logprob: -4.222578525543213
    6. 'c' → logprob: -4.722578525543213
    7. ' c' → logprob: -5.847578525543213
    8. ' pos' → logprob: -5.972578525543213
    9. '   ' → logprob: -6.097578525543213
    10. '_us' → logprob: -6.347578525543213

Token 798: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -0.01646411046385765
    2. ' if' → logprob: -5.0164642333984375
    3. 'if' → logprob: -5.5164642333984375
    4. '   ' → logprob: -5.7664642333984375
    5. 's' → logprob: -6.8914642333984375
    6. 'us' → logprob: -7.6414642333984375
    7. '       ' → logprob: -7.7664642333984375
    8. 'agai' → logprob: -8.516464233398438
    9. '           ' → logprob: -9.391464233398438
    10. 'u' → logprob: -9.516464233398438

Token 799: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008224829100072384
    2. ' if' → logprob: -4.883224964141846
    3. 'if' → logprob: -8.258224487304688
    4. '   ' → logprob: -8.383224487304688
    5. '        
' → logprob: -10.133224487304688
    6. '<|end|>' → logprob: -10.383224487304688
    7. ',' → logprob: -11.008224487304688
    8. '
' → logprob: -11.133224487304688
    9. ':' → logprob: -11.633224487304688
    10. '	if' → logprob: -12.758224487304688

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005761691834777594
    2. ' if' → logprob: -5.255761623382568
    3. 'if' → logprob: -7.755761623382568
    4. '   ' → logprob: -9.380762100219727
    5. ',' → logprob: -11.880762100219727
    6. '        
' → logprob: -12.755762100219727
    7. '	if' → logprob: -13.755762100219727
    8. '           ' → logprob: -13.755762100219727
    9. ':' → logprob: -14.505762100219727
    10. '	' → logprob: -14.755762100219727

Token 801: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16371159255504608
    2. ' if' → logprob: -1.9137115478515625
    3. '       ' → logprob: -5.6637115478515625
    4. 'pos' → logprob: -11.913711547851562
    5. '   ' → logprob: -12.413711547851562
    6. '	if' → logprob: -14.038711547851562
    7. ' ' → logprob: -16.788711547851562
    8. '           ' → logprob: -16.788711547851562
    9. 'If' → logprob: -17.288711547851562
    10. ' pos' → logprob: -17.538711547851562

Token 802: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.012509997934103012
    2. ' c' → logprob: -4.387509822845459
    3. '   ' → logprob: -15.637510299682617
    4. '	c' → logprob: -16.512510299682617
    5. ' ' → logprob: -17.137510299682617
    6. 'cation' → logprob: -18.387510299682617
    7. 'pos' → logprob: -18.825010299682617
    8. '       ' → logprob: -18.887510299682617
    9. '(c' → logprob: -18.950010299682617
    10. '     ' → logprob: -19.012510299682617

Token 803: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1797594577074051
    2. 'in' → logprob: -1.8047595024108887
    3. ' ' → logprob: -12.17975902557373
    4. ')' → logprob: -12.92975902557373
    5. '	in' → logprob: -13.80475902557373
    6. '   ' → logprob: -14.05475902557373
    7. 'c' → logprob: -14.30475902557373
    8. 'In' → logprob: -14.80475902557373
    9. ']' → logprob: -14.92975902557373
    10. '=' → logprob: -15.11725902557373

Token 804: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0007099286303855479
    2. ' pos' → logprob: -7.2507100105285645
    3. '	pos' → logprob: -17.250709533691406
    4. '   ' → logprob: -18.500709533691406
    5. '_pos' → logprob: -18.750709533691406
    6. 'position' → logprob: -19.250709533691406
    7. '[pos' → logprob: -19.625709533691406
    8. ' ' → logprob: -19.750709533691406
    9. '(pos' → logprob: -19.750709533691406
    10. '.pos' → logprob: -20.875709533691406

Token 805: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -9.372294698550832e-06
    2. 'us' → logprob: -11.625009536743164
    3. '_' → logprob: -15.750009536743164
    4. '   ' → logprob: -15.875009536743164
    5. '_u' → logprob: -17.250009536743164
    6. '_ut' → logprob: -19.000009536743164
    7. '_uc' → logprob: -19.000009536743164
    8. ' _' → logprob: -19.250009536743164
    9. '	us' → logprob: -19.250009536743164
    10. '_um' → logprob: -19.250009536743164

Token 806: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -3.531315314830863e-06
    2. 's' → logprob: -13.000003814697266
    3. 'ag' → logprob: -15.750003814697266
    4. '#' → logprob: -16.000003814697266
    5. '[' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.000003814697266
    7. 'ugi' → logprob: -16.125003814697266
    8. 'a' → logprob: -16.250003814697266
    9. 'u' → logprob: -16.500003814697266
    10. '_' → logprob: -16.625003814697266

Token 807: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20222817361354828
    2. ':' → logprob: -1.7022281885147095
    3. '):
' → logprob: -7.70222806930542
    4. '       ' → logprob: -8.202228546142578
    5. ' :
' → logprob: -10.452228546142578
    6. '():
' → logprob: -11.077228546142578
    7. '):' → logprob: -11.327228546142578
    8. '   ' → logprob: -11.702228546142578
    9. ' :' → logprob: -11.702228546142578
    10. '=' → logprob: -12.202228546142578

Token 808: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09115336090326309
    2. ':
' → logprob: -2.591153383255005
    3. ':' → logprob: -4.591153144836426
    4. ' :
' → logprob: -7.341153144836426
    5. '       ' → logprob: -8.091153144836426
    6. ' :' → logprob: -8.216153144836426
    7. ',' → logprob: -8.716153144836426
    8. '	       ' → logprob: -8.841153144836426
    9. '):
' → logprob: -9.091153144836426
    10. ' =' → logprob: -9.091153144836426

Token 809: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.476613849401474
    2. 'i' → logprob: -0.9766138792037964
    3. ' x' → logprob: -6.351613998413086
    4. 'x' (adapté à ' x') → logprob: -7.601613998413086
    5. '           ' → logprob: -8.351613998413086
    6. '(i' → logprob: -11.601613998413086
    7. '_i' → logprob: -11.601613998413086
    8. '   ' → logprob: -11.726613998413086
    9. '```' → logprob: -11.851613998413086
    10. ' (' → logprob: -12.351613998413086

Token 810: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011246702633798122
    2. ',y' → logprob: -4.511246681213379
    3. ' ,' → logprob: -8.636246681213379
    4. ',x' → logprob: -11.261246681213379
    5. ',j' → logprob: -12.761246681213379
    6. 'y' → logprob: -13.011246681213379
    7. ',
' → logprob: -14.011246681213379
    8. ',pos' → logprob: -14.511246681213379
    9. ' y' → logprob: -14.636246681213379
    10. '_,' → logprob: -15.386246681213379

Token 811: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.25192946195602417
    2. ' y' → logprob: -1.501929521560669
    3. '	y' → logprob: -14.75192928314209
    4. ',y' → logprob: -18.001930236816406
    5. ')y' → logprob: -18.251930236816406
    6. '<|end|>' → logprob: -18.501930236816406
    7. ' ' → logprob: -19.001930236816406
    8. '_y' → logprob: -19.251930236816406
    9. ''y' → logprob: -19.376930236816406
    10. '    ' → logprob: -19.626930236816406

Token 812: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06212228909134865
    2. '=' → logprob: -2.812122344970703
    3. ')' → logprob: -9.437122344970703
    4. ']' → logprob: -10.312122344970703
    5. '           ' → logprob: -10.687122344970703
    6. ',' → logprob: -11.687122344970703
    7. '<|end|>' → logprob: -12.562122344970703
    8. '   ' → logprob: -13.312122344970703
    9. ')=' → logprob: -13.687122344970703
    10. ']=' → logprob: -13.687122344970703

Token 813: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.1002068892121315
    2. 'pos' → logprob: -2.3502068519592285
    3. '           ' → logprob: -16.35020637512207
    4. '	pos' → logprob: -16.60020637512207
    5. '(pos' → logprob: -17.85020637512207
    6. '_pos' → logprob: -18.22520637512207
    7. 'Pos' → logprob: -18.97520637512207
    8. '[pos' → logprob: -19.85020637512207
    9. '.pos' → logprob: -20.10020637512207
    10. ',pos' → logprob: -20.60020637512207

Token 814: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -6.027225754223764e-05
    2. 'us' → logprob: -9.750060081481934
    3. 'pos' → logprob: -13.500060081481934
    4. '_' → logprob: -15.500060081481934
    5. '_pos' → logprob: -16.75006103515625
    6. '   ' → logprob: -16.75006103515625
    7. '_US' → logprob: -17.12506103515625
    8. '_u' → logprob: -17.12506103515625
    9. '_usr' → logprob: -17.25006103515625
    10. '_um' → logprob: -17.75006103515625

Token 815: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -3.173704271830502e-06
    2. 's' → logprob: -13.62500286102295
    3. 'ag' → logprob: -14.25000286102295
    4. '   ' → logprob: -15.25000286102295
    5. 'ugi' → logprob: -15.50000286102295
    6. 'a' → logprob: -15.62500286102295
    7. 'gi' → logprob: -15.87500286102295
    8. 'aki' → logprob: -16.375003814697266
    9. 'u' → logprob: -16.625003814697266
    10. '[' → logprob: -16.750003814697266

Token 816: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.002852305769920349
    2. 'c' → logprob: -5.877852439880371
    3. '[u' → logprob: -11.002852439880371
    4. '[' → logprob: -11.127852439880371
    5. '[x' → logprob: -11.752852439880371
    6. ' c' → logprob: -12.752852439880371
    7. ' [' → logprob: -13.752852439880371
    8. '   ' → logprob: -13.752852439880371
    9. ')c' → logprob: -14.252852439880371
    10. '	c' → logprob: -14.627852439880371

Token 817: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04969051852822304
    2. ']
' → logprob: -3.1746904850006104
    3. ')' → logprob: -5.0496907234191895
    4. ')
' → logprob: -8.674690246582031
    5. '           ' → logprob: -10.299690246582031
    6. '       ' → logprob: -10.674690246582031
    7. ']
' → logprob: -11.549690246582031
    8. ']

' → logprob: -12.049690246582031
    9. ')]' → logprob: -12.549690246582031
    10. '   ' → logprob: -13.049690246582031

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006020034197717905
    2. ' marked' → logprob: -8.000601768493652
    3. 'marked' → logprob: -8.500601768493652
    4. '            
' → logprob: -10.875601768493652
    5. '   ' → logprob: -10.875601768493652
    6. '       ' → logprob: -11.375601768493652
    7. '
' → logprob: -11.875601768493652
    8. '[' → logprob: -14.000601768493652
    9. '    
' → logprob: -14.125601768493652
    10. '	   ' → logprob: -14.125601768493652

Token 819: ' marked' (ID: 20779)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9586649537086487
    2. 'marked' (adapté à ' marked') → logprob: -0.9586649537086487
    3. ' marked' → logprob: -1.458664894104004
    4. '   ' → logprob: -7.458664894104004
    5. '               ' → logprob: -10.458664894104004
    6. '       ' → logprob: -10.708664894104004
    7. ' ' → logprob: -12.708664894104004
    8. '            
' → logprob: -12.833664894104004
    9. ' if' → logprob: -13.083664894104004
    10. '```' → logprob: -13.208664894104004

Token 820: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.875001907348633
    3. '[' → logprob: -14.750001907348633
    4. 'us' → logprob: -15.250001907348633
    5. '[_' → logprob: -15.625001907348633
    6. '_' → logprob: -15.750001907348633
    7. '_uc' → logprob: -16.875001907348633
    8. '	us' → logprob: -16.875001907348633
    9. '_ul' → logprob: -17.000001907348633
    10. '_US' → logprob: -17.500001907348633

Token 821: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -4.024604277219623e-05
    2. '_us' → logprob: -11.000040054321289
    3. 's' → logprob: -12.125040054321289
    4. '[' → logprob: -12.125040054321289
    5. 'ag' → logprob: -12.375040054321289
    6. '   ' → logprob: -12.750040054321289
    7. 'us' → logprob: -13.000040054321289
    8. 'ugi' → logprob: -14.000040054321289
    9. 'u' → logprob: -14.625040054321289
    10. 'agai' → logprob: -14.875040054321289

Token 822: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.4121114822482923e-06
    2. '][' → logprob: -12.875003814697266
    3. '[' → logprob: -14.875003814697266
    4. ' [' → logprob: -15.125003814697266
    5. ')[' → logprob: -16.750003814697266
    6. '```' → logprob: -17.500003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '[i' → logprob: -18.375003814697266
    9. '}[' → logprob: -18.375003814697266
    10. 'x' → logprob: -18.625003814697266

Token 823: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.0020742492051795e-05
    2. ']' → logprob: -10.375049591064453
    3. ' ][' → logprob: -11.875049591064453
    4. '[y' → logprob: -12.125049591064453
    5. '           ' → logprob: -12.875049591064453
    6. '[x' → logprob: -13.750049591064453
    7. '       ' → logprob: -13.875049591064453
    8. '"][' → logprob: -14.625049591064453
    9. '[' → logprob: -15.125049591064453
    10. ']][' → logprob: -15.250049591064453

Token 824: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.15310683415737e-05
    2. ' y' → logprob: -10.750021934509277
    3. '	y' → logprob: -18.25002098083496
    4. '   ' → logprob: -20.50002098083496
    5. ')y' → logprob: -21.37502098083496
    6. ' ' → logprob: -22.00002098083496
    7. ''y' → logprob: -22.37502098083496
    8. ']' → logprob: -22.50002098083496
    9. '
' → logprob: -22.75002098083496
    10. '    ' → logprob: -22.75002098083496

Token 825: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.624555291840807e-05
    2. ']=' → logprob: -9.875076293945312
    3. ' ]' → logprob: -11.250076293945312
    4. '=' → logprob: -11.375076293945312
    5. ' =' → logprob: -15.125076293945312
    6. ')' → logprob: -16.875076293945312
    7. '=True' → logprob: -17.750076293945312
    8. '[' → logprob: -19.750076293945312
    9. '   ' → logprob: -19.875076293945312
    10. ']
' → logprob: -20.125076293945312

Token 826: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=True' → logprob: -16.255233764648438
    4. '＝' → logprob: -22.005233764648438
    5. ']=' → logprob: -22.630233764648438
    6. ']' → logprob: -22.630233764648438
    7. ' ' → logprob: -22.755233764648438
    8. ')' → logprob: -23.130233764648438
    9. '   ' → logprob: -23.755233764648438
    10. '[' → logprob: -23.880233764648438

Token 827: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002613358374219388
    2. ' True' → logprob: -8.250261306762695
    3. '(True' → logprob: -20.375261306762695
    4. '=True' → logprob: -22.375261306762695
    5. '   ' → logprob: -22.625261306762695
    6. 'true' → logprob: -24.375261306762695
    7. '.True' → logprob: -25.375261306762695
    8. 'TRUE' → logprob: -25.625261306762695
    9. '1' → logprob: -25.750261306762695
    10. 'Tr' → logprob: -26.250261306762695

Token 828: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034734364598989487
    2. '
' → logprob: -5.753473281860352
    3. '        
' → logprob: -8.503473281860352
    4. '           ' → logprob: -10.253473281860352
    5. '<|end|>' → logprob: -10.253473281860352
    6. '  
' → logprob: -12.253473281860352
    7. '    
' → logprob: -12.253473281860352
    8. '   ' → logprob: -12.378473281860352
    9. '```' → logprob: -12.503473281860352
    10. '            
' → logprob: -13.753473281860352

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019049299880862236
    2. '<|end|>' → logprob: -4.144049167633057
    3. '
' → logprob: -6.144049167633057
    4. '        
' → logprob: -7.644049167633057
    5. '           ' → logprob: -8.769049644470215
    6. '<|end|>' → logprob: -9.894049644470215
    7. '   ' → logprob: -10.019049644470215
    8. '  
' → logprob: -10.394049644470215
    9. '```' → logprob: -10.394049644470215
    10. '    
' → logprob: -10.894049644470215

Token 830: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019066639652010053
    2. '   ' → logprob: -9.375190734863281
    3. 'if' → logprob: -9.750190734863281
    4. '
' → logprob: -10.750190734863281
    5. '        
' → logprob: -11.500190734863281
    6. ' if' → logprob: -11.750190734863281
    7. '#' (adapté à ' #') → logprob: -13.000190734863281
    8. '           ' → logprob: -13.000190734863281
    9. '```' → logprob: -13.375190734863281
    10. '     ' → logprob: -14.750190734863281

Token 831: ' Mar' (ID: 3145)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018976546823978424
    2. '       ' → logprob: -4.01897668838501
    3. ' if' → logprob: -7.89397668838501
    4. '#' → logprob: -8.268976211547852
    5. '   ' → logprob: -8.643976211547852
    6. '```' → logprob: -11.518976211547852
    7. '           ' → logprob: -12.018976211547852
    8. '        
' → logprob: -13.768976211547852
    9. '
' → logprob: -13.893976211547852
    10. ' ' → logprob: -14.018976211547852

Token 832: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.09283142536878586
    2. 'ker' → logprob: -2.9678313732147217
    3. 'r' → logprob: -3.3428313732147217
    4. 'rk' → logprob: -6.842831611633301
    5. 'k' → logprob: -7.342831611633301
    6. 'qu' → logprob: -9.5928316116333
    7. 'rer' → logprob: -10.4678316116333
    8. 'kker' → logprob: -10.8428316116333
    9. 'kr' → logprob: -11.0928316116333
    10. 'que' → logprob: -11.4678316116333

Token 833: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1584124118089676
    2. 'for' → logprob: -2.283412456512451
    3. '       ' → logprob: -3.158412456512451
    4. ' if' → logprob: -7.158412456512451
    5. ' pour' → logprob: -7.158412456512451
    6. 'if' → logprob: -8.783411979675293
    7. '   ' → logprob: -8.908411979675293
    8. '        ' → logprob: -9.658411979675293
    9. '	for' → logprob: -9.908411979675293
    10. 'pour' → logprob: -10.283411979675293

Token 834: ' N' (ID: 478)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5435301065444946
    2. ' pos' → logprob: -1.6685301065444946
    3. 'ne' → logprob: -2.168529987335205
    4. 'if' → logprob: -2.793529987335205
    5. ' if' → logprob: -3.418529987335205
    6. '       ' → logprob: -4.918529987335205
    7. '           ' → logprob: -6.043529987335205
    8. '
' → logprob: -6.168529987335205
    9. 'c' → logprob: -6.418529987335205
    10. '   ' → logprob: -6.543529987335205

Token 835: 'eko' (ID: 22286)
  Prédit: 'eko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eko' → logprob: -0.05546156316995621
    2. 'ne' → logprob: -2.9304616451263428
    3. 'ek' → logprob: -7.680461406707764
    4. 'pos' → logprob: -10.180461883544922
    5. '```' → logprob: -10.680461883544922
    6. 'e' → logprob: -11.180461883544922
    7. 'ko' → logprob: -11.555461883544922
    8. 'se' → logprob: -11.805461883544922
    9. 'teko' → logprob: -12.180461883544922
    10. '_ne' → logprob: -12.180461883544922

Token 836: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001514557225164026
    2. '
' → logprob: -9.375151634216309
    3. ' if' → logprob: -10.250151634216309
    4. '        
' → logprob: -11.500151634216309
    5. 'if' → logprob: -11.750151634216309
    6. '   ' → logprob: -12.375151634216309
    7. '```' → logprob: -12.625151634216309
    8. '<|end|>' → logprob: -13.375151634216309
    9. '  
' → logprob: -13.625151634216309
    10. '           ' → logprob: -13.875151634216309

Token 837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006925394991412759
    2. 'if' → logprob: -7.750692367553711
    3. ' if' → logprob: -8.500692367553711
    4. '   ' → logprob: -10.000692367553711
    5. '```' → logprob: -11.500692367553711
    6. '
' → logprob: -13.625692367553711
    7. '           ' → logprob: -14.125692367553711
    8. '        
' → logprob: -14.625692367553711
    9. ' ' → logprob: -14.625692367553711
    10. '     ' → logprob: -16.87569236755371

Token 838: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015645412728190422
    2. 'if' (adapté à ' if') → logprob: -4.265645503997803
    3. '       ' → logprob: -6.515645503997803
    4. '   ' → logprob: -15.640645027160645
    5. ' ' → logprob: -16.39064598083496
    6. '	if' → logprob: -16.51564598083496
    7. ' ' → logprob: -16.51564598083496
    8. '```' → logprob: -16.51564598083496
    9. '        
' → logprob: -16.51564598083496
    10. '        ' → logprob: -16.76564598083496

Token 839: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03804194927215576
    2. 'c' → logprob: -3.2880420684814453
    3. '(c' → logprob: -15.288042068481445
    4. ' ' → logprob: -15.788042068481445
    5. ' ' → logprob: -16.413042068481445
    6. '	c' → logprob: -16.538042068481445
    7. '   ' → logprob: -18.163042068481445
    8. ' (' → logprob: -18.350542068481445
    9. '```' → logprob: -18.788042068481445
    10. '`' → logprob: -18.975542068481445

Token 840: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061969365924596786
    2. 'in' → logprob: -2.81196928024292
    3. ' ' → logprob: -14.186969757080078
    4. 'import' → logprob: -15.436969757080078
    5. '
' → logprob: -15.811969757080078
    6. '   ' → logprob: -15.936969757080078
    7. '	in' → logprob: -16.186969757080078
    8. ' ' → logprob: -16.436969757080078
    9. 'In' → logprob: -16.811969757080078
    10. '           ' → logprob: -17.249469757080078

Token 841: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.31326204538345337
    2. 'pos' → logprob: -1.3132619857788086
    3. '[pos' → logprob: -15.688261985778809
    4. '(pos' → logprob: -16.563262939453125
    5. '	pos' → logprob: -16.813262939453125
    6. '   ' → logprob: -18.938262939453125
    7. '_pos' → logprob: -19.063262939453125
    8. '.pos' → logprob: -19.313262939453125
    9. ' ' → logprob: -19.438262939453125
    10. ',pos' → logprob: -19.438262939453125

Token 842: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -9.841743303695694e-05
    2. 'ne' → logprob: -9.25009822845459
    3. 'pos' → logprob: -13.12509822845459
    4. '_pos' → logprob: -16.125099182128906
    5. '```' → logprob: -16.500099182128906
    6. '_te' → logprob: -17.375099182128906
    7. '
' → logprob: -18.000099182128906
    8. '(ne' → logprob: -18.250099182128906
    9. '_' → logprob: -18.500099182128906
    10. '   ' → logprob: -19.000099182128906

Token 843: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -4.008129963040119e-06
    2. 'eko' → logprob: -12.500003814697266
    3. 'oko' → logprob: -16.750003814697266
    4. 'ко' → logprob: -17.000003814697266
    5. 'k' → logprob: -17.250003814697266
    6. 'cko' → logprob: -17.500003814697266
    7. 'ne' → logprob: -17.625003814697266
    8. '_' → logprob: -18.000003814697266
    9. ' ko' → logprob: -18.750003814697266
    10. '
' → logprob: -19.375003814697266

Token 844: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14944638311862946
    2. ':' → logprob: -2.024446487426758
    3. '[x' → logprob: -6.149446487426758
    4. ',' → logprob: -6.274446487426758
    5. '           ' → logprob: -6.274446487426758
    6. '       ' → logprob: -8.024446487426758
    7. '=' → logprob: -8.899446487426758
    8. '(x' → logprob: -9.899446487426758
    9. '         ' → logprob: -9.899446487426758
    10. 'x' → logprob: -10.274446487426758

Token 845: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09051273763179779
    2. 'x' → logprob: -2.590512752532959
    3. ' x' → logprob: -4.465512752532959
    4. '       ' → logprob: -10.7155122756958
    5. '(x' → logprob: -11.9655122756958
    6. '   ' → logprob: -12.0905122756958
    7. '	       ' → logprob: -12.3405122756958
    8. '
' → logprob: -12.8405122756958
    9. '               ' → logprob: -13.0905122756958
    10. ' y' → logprob: -13.2155122756958

Token 846: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.002475777640938759
    2. ' x' → logprob: -6.002475738525391
    3. '           ' → logprob: -15.62747573852539
    4. '	x' → logprob: -19.25247573852539
    5. '(x' → logprob: -19.62747573852539
    6. '   ' → logprob: -20.50247573852539
    7. '
' → logprob: -21.25247573852539
    8. '       ' → logprob: -22.00247573852539
    9. '```' → logprob: -22.25247573852539
    10. '               ' → logprob: -22.37747573852539

Token 847: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. ',y' → logprob: -10.625025749206543
    3. ' ,' → logprob: -13.750025749206543
    4. ',x' → logprob: -15.250025749206543
    5. ',
' → logprob: -16.37502670288086
    6. '<|end|>' → logprob: -17.37502670288086
    7. 'y' → logprob: -17.87502670288086
    8. 'x' → logprob: -18.62502670288086
    9. '[' → logprob: -18.75002670288086
    10. '=' → logprob: -18.87502670288086

Token 848: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759583711624146
    2. ' y' → logprob: -0.8259583711624146
    3. 'pos' → logprob: -10.950958251953125
    4. ' pos' → logprob: -13.575958251953125
    5. ',y' → logprob: -16.700958251953125
    6. '	y' → logprob: -17.575958251953125
    7. '_y' → logprob: -18.700958251953125
    8. ''y' → logprob: -20.575958251953125
    9. '.y' → logprob: -20.575958251953125
    10. 'x' → logprob: -21.200958251953125

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5240572094917297
    2. ',' → logprob: -0.8990572094917297
    3. ' =' → logprob: -7.399057388305664
    4. '           ' → logprob: -8.399057388305664
    5. ',y' → logprob: -9.649057388305664
    6. ',x' → logprob: -11.274057388305664
    7. 'x' → logprob: -12.274057388305664
    8. '       ' → logprob: -12.524057388305664
    9. ')' → logprob: -13.149057388305664
    10. '   ' → logprob: -13.524057388305664

Token 850: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.029750484973192215
    2. ' pos' → logprob: -3.5297505855560303
    3. '	pos' → logprob: -18.15475082397461
    4. '   ' → logprob: -18.40475082397461
    5. '[pos' → logprob: -18.40475082397461
    6. '(pos' → logprob: -19.27975082397461
    7. '           ' → logprob: -19.65475082397461
    8. '_pos' → logprob: -19.77975082397461
    9. '0' → logprob: -21.02975082397461
    10. '       ' → logprob: -21.27975082397461

Token 851: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -0.010043746791779995
    2. 'pos' → logprob: -5.135043621063232
    3. 'ne' → logprob: -5.510043621063232
    4. '[pos' → logprob: -10.13504409790039
    5. '[' → logprob: -12.38504409790039
    6. 'Ne' → logprob: -12.63504409790039
    7. ' pos' → logprob: -13.38504409790039
    8. 'po' → logprob: -13.51004409790039
    9. 'n' → logprob: -13.76004409790039
    10. '_n' → logprob: -13.76004409790039

Token 852: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -6.704273118884885e-07
    2. 'ко' → logprob: -14.625000953674316
    3. ' ko' → logprob: -17.125
    4. 'k' → logprob: -17.625
    5. 'Ko' → logprob: -18.625
    6. '[' → logprob: -18.625
    7. 'eko' → logprob: -19.375
    8. '
' → logprob: -19.5
    9. 'cko' → logprob: -19.75
    10. 'o' → logprob: -19.875

Token 853: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0005435001221485436
    2. '[x' → logprob: -8.000543594360352
    3. 'c' → logprob: -8.625543594360352
    4. '[y' → logprob: -11.375543594360352
    5. '[' → logprob: -11.750543594360352
    6. 'ne' → logprob: -11.875543594360352
    7. '(c' → logprob: -14.625543594360352
    8. '_ne' → logprob: -14.625543594360352
    9. '```' → logprob: -14.875543594360352
    10. '=c' → logprob: -16.00054359436035

Token 854: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11792394518852234
    2. ']' → logprob: -2.3679239749908447
    3. '[c' → logprob: -4.367923736572266
    4. '[y' → logprob: -5.742923736572266
    5. ']
' → logprob: -6.867923736572266
    6. '[x' → logprob: -7.617923736572266
    7. 'c' → logprob: -9.242923736572266
    8. ')[' → logprob: -11.367923736572266
    9. '],' → logprob: -11.867923736572266
    10. '[
' → logprob: -11.867923736572266

Token 855: '           ' (ID: 352)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.031082767993211746
    2. '           ' → logprob: -3.53108286857605
    3. '[y' → logprob: -7.281082630157471
    4. ' marked' → logprob: -7.531082630157471
    5. '[x' → logprob: -10.156083106994629
    6. 'y' → logprob: -10.156083106994629
    7. '[' → logprob: -10.906083106994629
    8. 'x' → logprob: -13.156083106994629
    9. '   ' → logprob: -13.281083106994629
    10. '          ' → logprob: -13.531083106994629

Token 856: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' (adapté à ' marked') → logprob: -8.792751032160595e-05
    2. '           ' → logprob: -9.50008773803711
    3. ' marked' → logprob: -11.25008773803711
    4. '   ' → logprob: -19.62508773803711
    5. 'masked' → logprob: -20.50008773803711
    6. '       ' → logprob: -21.12508773803711
    7. '```' → logprob: -21.12508773803711
    8. '            
' → logprob: -21.25008773803711
    9. '          ' → logprob: -21.37508773803711
    10. 'Marked' → logprob: -21.62508773803711

Token 857: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -0.016298050060868263
    2. '[x' → logprob: -4.141297817230225
    3. '_n' → logprob: -9.016298294067383
    4. '_[' → logprob: -9.891298294067383
    5. 'ne' → logprob: -10.016298294067383
    6. '_us' → logprob: -10.891298294067383
    7. '```' → logprob: -12.516298294067383
    8. '[' → logprob: -12.891298294067383
    9. '[y' → logprob: -13.016298294067383
    10. '_te' → logprob: -13.141298294067383

Token 858: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.00020926215802319348
    2. 'k' → logprob: -8.875208854675293
    3. 'eko' → logprob: -9.875208854675293
    4. 'kai' → logprob: -11.750208854675293
    5. 'aki' → logprob: -13.500208854675293
    6. 'o' → logprob: -13.500208854675293
    7. 'ako' → logprob: -13.500208854675293
    8. '[' → logprob: -13.750208854675293
    9. 'ka' → logprob: -13.750208854675293
    10. 'koz' → logprob: -14.500208854675293

Token 859: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -14.500000953674316
    3. '```' → logprob: -18.125
    4. '[' → logprob: -18.875
    5. '	x' → logprob: -19.75
    6. ' [' → logprob: -20.0
    7. '[
' → logprob: -20.625
    8. '=x' → logprob: -20.875
    9. '(x' → logprob: -20.875
    10. ' x' → logprob: -21.0

Token 860: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -9.043078898685053e-05
    2. '[y' → logprob: -9.875090599060059
    3. ']' → logprob: -10.875090599060059
    4. '[' → logprob: -12.125090599060059
    5. '       ' → logprob: -12.375090599060059
    6. '           ' → logprob: -12.500090599060059
    7. '[x' → logprob: -13.000090599060059
    8. ' ][' → logprob: -13.000090599060059
    9. ']][' → logprob: -15.000090599060059
    10. '   ' → logprob: -15.250090599060059

Token 861: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.696889623621246e-06
    2. 'x' → logprob: -13.50000286102295
    3. ' y' → logprob: -13.75000286102295
    4. '
' → logprob: -16.375001907348633
    5. ']' → logprob: -16.875001907348633
    6. '	y' → logprob: -17.375001907348633
    7. '(y' → logprob: -18.125001907348633
    8. '[y' → logprob: -18.375001907348633
    9. ''y' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.500001907348633

Token 862: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024949219077825546
    2. '=' → logprob: -6.127494812011719
    3. ']=' → logprob: -8.252494812011719
    4. ' =' → logprob: -10.002494812011719
    5. ' ]' → logprob: -13.127494812011719
    6. ')' → logprob: -13.377494812011719
    7. '       ' → logprob: -16.25249481201172
    8. '           ' → logprob: -16.62749481201172
    9. '   ' → logprob: -17.00249481201172
    10. '[' → logprob: -17.12749481201172

Token 863: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03809255361557007
    2. ' =' → logprob: -3.288092613220215
    3. '=True' → logprob: -9.913092613220215
    4. ']' → logprob: -13.663092613220215
    5. '[' → logprob: -15.788092613220215
    6. ']=' → logprob: -15.913092613220215
    7. 'True' → logprob: -16.2880916595459
    8. '=
' → logprob: -17.1630916595459
    9. '[x' → logprob: -17.4130916595459
    10. '           ' → logprob: -17.5380916595459

Token 864: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. '=True' → logprob: -20.250003814697266
    4. '(True' → logprob: -21.750003814697266
    5. 'true' → logprob: -22.375003814697266
    6. '.True' → logprob: -23.500003814697266
    7. 'False' → logprob: -23.875003814697266
    8. '   ' → logprob: -24.750003814697266
    9. '_true' → logprob: -25.250003814697266
    10. 'TRUE' → logprob: -25.750003814697266

Token 865: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.325014591217041
    2. '
' → logprob: -1.575014591217041
    3. '        
' → logprob: -2.825014591217041
    4. '    
' → logprob: -5.075014591217041
    5. '```' → logprob: -6.200014591217041
    6. '  
' → logprob: -6.325014591217041
    7. '   ' → logprob: -7.825014591217041
    8. '   
' → logprob: -8.950014114379883
    9. '       
' → logprob: -9.075014114379883
    10. ' 
' → logprob: -9.075014114379883

Token 866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03817460685968399
    2. '
' → logprob: -3.538174629211426
    3. '   ' → logprob: -5.288174629211426
    4. '```' → logprob: -6.288174629211426
    5. '        
' → logprob: -6.913174629211426
    6. '    
' → logprob: -7.913174629211426
    7. '``' → logprob: -10.413174629211426
    8. '  
' → logprob: -10.913174629211426
    9. 'count' → logprob: -11.538174629211426
    10. 'score' → logprob: -11.538174629211426

Token 867: ' #' (ID: 1069)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.4102659225463867
    2. 'count' → logprob: -1.7852659225463867
    3. '   ' → logprob: -2.6602659225463867
    4. '       ' → logprob: -3.2852659225463867
    5. 'lines' → logprob: -3.2852659225463867
    6. 'u' → logprob: -4.160265922546387
    7. 'cnt' → logprob: -5.660265922546387
    8. 'score' → logprob: -6.410265922546387
    9. 'ua' → logprob: -7.285265922546387
    10. 'line' → logprob: -7.535265922546387

Token 868: ' Vér' (ID: 159169)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3441069424152374
    2. 'us' → logprob: -2.094106912612915
    3. 'lines' → logprob: -2.219106912612915
    4. 'cnt' → logprob: -3.219106912612915
    5. 'u' → logprob: -4.469107151031494
    6. 'score' → logprob: -5.219107151031494
    7. 'ua' → logprob: -7.719107151031494
    8. 'win' → logprob: -7.969107151031494
    9. 'line' → logprob: -8.094106674194336
    10. 'su' → logprob: -8.719106674194336

Token 869: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.05455012619495392
    2. 'if' → logprob: -3.0545501708984375
    3. 'ification' → logprob: -5.8045501708984375
    4. 'ifer' → logprob: -6.6795501708984375
    5. '   ' → logprob: -7.3045501708984375
    6. ' if' → logprob: -7.8045501708984375
    7. 'ifie' → logprob: -8.179550170898438
    8. '#' → logprob: -9.179550170898438
    9. 'i' → logprob: -10.304550170898438
    10. 'ifi' → logprob: -10.429550170898438

Token 870: ' vic' (ID: 31433)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.29327696561813354
    2. '   ' → logprob: -1.7932770252227783
    3. ' lines' → logprob: -3.1682770252227783
    4. 'lines' → logprob: -3.7932770252227783
    5. ' us' → logprob: -4.293276786804199
    6. 'count' → logprob: -5.793276786804199
    7. 'u' → logprob: -6.543276786804199
    8. '       ' → logprob: -6.668276786804199
    9. ' count' → logprob: -6.668276786804199
    10. '	us' → logprob: -7.793276786804199

Token 871: 'to' (ID: 935)
  Prédit: 'toire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'toire' → logprob: -0.46916627883911133
    2. 't' → logprob: -1.5941662788391113
    3. 'tor' → logprob: -1.8441662788391113
    4. 'to' → logprob: -4.719166278839111
    5. 'for' → logprob: -6.969166278839111
    6. 'toi' → logprob: -7.094166278839111
    7. 'tores' → logprob: -7.719166278839111
    8. '#' → logprob: -8.219165802001953
    9. 'dict' → logprob: -8.594165802001953
    10. 'toc' → logprob: -8.719165802001953

Token 872: 'ires' (ID: 5255)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.7964880466461182
    2. 're' → logprob: -1.0464880466461182
    3. 'res' → logprob: -2.921488046646118
    4. 'rance' → logprob: -3.296488046646118
    5. 'rie' → logprob: -3.671488046646118
    6. 'ries' → logprob: -3.671488046646118
    7. 'r' → logprob: -4.046487808227539
    8. 'rence' → logprob: -4.046487808227539
    9. 'toire' → logprob: -5.921487808227539
    10. 'e' → logprob: -5.921487808227539

Token 873: ' seulement' (ID: 32072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012645211536437273
    2. '   ' → logprob: -7.001264572143555
    3. ' us' → logprob: -8.501264572143555
    4. 'us' → logprob: -9.001264572143555
    5. '        
' → logprob: -11.626264572143555
    6. '	us' → logprob: -12.501264572143555
    7. 'count' → logprob: -13.001264572143555
    8. '_us' → logprob: -13.126264572143555
    9. ' count' → logprob: -13.501264572143555
    10. 'u' → logprob: -13.626264572143555

Token 874: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001923352392623201
    2. '        
' → logprob: -9.625192642211914
    3. '   ' → logprob: -10.000192642211914
    4. '
' → logprob: -10.250192642211914
    5. ' if' → logprob: -11.375192642211914
    6. ',' → logprob: -11.625192642211914
    7. '       
' → logprob: -12.875192642211914
    8. '           ' → logprob: -13.000192642211914
    9. ' us' → logprob: -13.000192642211914
    10. 'u' → logprob: -13.125192642211914

Token 875: ' pas' (ID: 2173)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -1.4021237802808173e-05
    2. ' winner' → logprob: -12.125014305114746
    3. 'w' → logprob: -12.250014305114746
    4. 'not' → logprob: -12.875014305114746
    5. 'u' → logprob: -14.625014305114746
    6. '   ' → logprob: -15.000014305114746
    7. '(w' → logprob: -15.875014305114746
    8. '       ' → logprob: -17.25001335144043
    9. '  ' → logprob: -17.37501335144043
    10. '(' → logprob: -17.50001335144043

Token 876: ' de' (ID: 334)
  Prédit: ' winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.030024340376257896
    2. 'winner' → logprob: -3.530024290084839
    3. 'None' → logprob: -8.530024528503418
    4. ' None' → logprob: -9.780024528503418
    5. 'w' → logprob: -11.905024528503418
    6. ' yet' → logprob: -12.655024528503418
    7. '(w' → logprob: -13.030024528503418
    8. 'Winner' → logprob: -13.280024528503418
    9. ' found' → logprob: -13.405024528503418
    10. ' ' → logprob: -13.655024528503418

Token 877: ' victoire' (ID: 96596)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.002964865416288376
    2. ' winner' → logprob: -5.877964973449707
    3. 'w' → logprob: -8.752964973449707
    4. 'None' → logprob: -13.877964973449707
    5. 'vict' → logprob: -15.002964973449707
    6. '```' → logprob: -15.377964973449707
    7. ' ' → logprob: -15.627964973449707
    8. 'win' → logprob: -16.00296401977539
    9. ' None' → logprob: -16.12796401977539
    10. '   ' → logprob: -17.12796401977539

Token 878: ' déjà' (ID: 21229)
  Prédit: ' winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.5436955690383911
    2. 'winner' → logprob: -0.9186955690383911
    3. ' yet' → logprob: -5.043695449829102
    4. ' if' → logprob: -5.793695449829102
    5. ' or' → logprob: -6.043695449829102
    6. 'if' → logprob: -6.043695449829102
    7. '       ' → logprob: -6.668695449829102
    8. 'w' → logprob: -6.918695449829102
    9. '   ' → logprob: -7.043695449829102
    10. ' established' → logprob: -7.293695449829102

Token 879: ' déclar' (ID: 53264)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.4250888526439667
    2. '   ' → logprob: -1.675088882446289
    3. 'detect' → logprob: -3.550088882446289
    4. 'dé' → logprob: -3.550088882446289
    5. 'found' → logprob: -3.550088882446289
    6. '       ' → logprob: -3.675088882446289
    7. 'det' → logprob: -4.675088882446289
    8. 'tr' → logprob: -4.800088882446289
    9. '```' → logprob: -4.925088882446289
    10. 'faite' → logprob: -5.675088882446289

Token 880: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.002717141527682543
    2. 'ee' → logprob: -6.377717018127441
    3. 'é' → logprob: -7.127717018127441
    4. 'rée' → logprob: -9.252717018127441
    5. 'er' → logprob: -9.627717018127441
    6. 'ed' → logprob: -10.627717018127441
    7. 'ées' → logprob: -11.127717018127441
    8. 'e' → logprob: -12.752717018127441
    9. '
' → logprob: -13.627717018127441
    10. '   ' → logprob: -14.377717018127441

Token 881: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005095454398542643
    2. '<|end|>' → logprob: -7.875509738922119
    3. '        
' → logprob: -9.625509262084961
    4. ' if' → logprob: -10.750509262084961
    5. '
' → logprob: -11.125509262084961
    6. '```' → logprob: -11.875509262084961
    7. '   ' → logprob: -12.125509262084961
    8. '  
' → logprob: -12.375509262084961
    9. '<|end|>' → logprob: -12.375509262084961
    10. ',' → logprob: -13.125509262084961

Token 882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001078183762729168
    2. '```' → logprob: -7.126078128814697
    3. '        
' → logprob: -9.126078605651855
    4. ' if' → logprob: -9.376078605651855
    5. 'if' → logprob: -10.126078605651855
    6. '
' → logprob: -11.001078605651855
    7. '   ' → logprob: -11.751078605651855
    8. '<|end|>' → logprob: -12.251078605651855
    9. '``' → logprob: -12.501078605651855
    10. '  
' → logprob: -13.126078605651855

Token 883: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10080113261938095
    2. 'if' (adapté à ' if') → logprob: -2.6008012294769287
    3. ' if' → logprob: -3.8508012294769287
    4. '   ' → logprob: -8.100801467895508
    5. '
' → logprob: -9.975801467895508
    6. '        
' → logprob: -10.600801467895508
    7. '```' → logprob: -10.600801467895508
    8. ' ' → logprob: -12.350801467895508
    9. '    
' → logprob: -13.100801467895508
    10. '  
' → logprob: -13.475801467895508

Token 884: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.12706543505191803
    2. ' winner' → logprob: -2.127065420150757
    3. 'w' → logprob: -9.127065658569336
    4. 'not' → logprob: -10.752065658569336
    5. ' not' → logprob: -12.127065658569336
    6. '   ' → logprob: -13.877065658569336
    7. ' ' → logprob: -15.127065658569336
    8. 'Winner' → logprob: -16.377065658569336
    9. 'win' → logprob: -16.502065658569336
    10. '	w' → logprob: -16.502065658569336

Token 885: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02632073685526848
    2. 'is' → logprob: -3.651320695877075
    3. '==' → logprob: -10.901320457458496
    4. ')' → logprob: -13.651320457458496
    5. '	is' → logprob: -15.776320457458496
    6. ' ==' → logprob: -16.026321411132812
    7. ' ' → logprob: -16.026321411132812
    8. 'None' → logprob: -16.151321411132812
    9. '[' → logprob: -16.401321411132812
    10. ')is' → logprob: -16.526321411132812

Token 886: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01416398212313652
    2. ' None' → logprob: -4.264163970947266
    3. '_None' → logprob: -15.514163970947266
    4. 'not' → logprob: -15.639163970947266
    5. ' not' → logprob: -16.764163970947266
    6. '=None' → logprob: -17.014163970947266
    7. '(None' → logprob: -17.264163970947266
    8. 'none' → logprob: -18.264163970947266
    9. '_none' → logprob: -19.014163970947266
    10. '   ' → logprob: -19.139163970947266

Token 887: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05830143019556999
    2. ':
' → logprob: -2.9333014488220215
    3. ' and' → logprob: -5.8083014488220215
    4. '       ' → logprob: -8.308300971984863
    5. '           ' → logprob: -9.558300971984863
    6. '=' → logprob: -10.558300971984863
    7. ',' → logprob: -10.933300971984863
    8. ':

' → logprob: -11.058300971984863
    9. 'and' → logprob: -11.308300971984863
    10. ' :' → logprob: -12.558300971984863

Token 888: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013513120822608471
    2. '           ' → logprob: -5.013513088226318
    3. ' us' → logprob: -5.513513088226318
    4. '        
' → logprob: -6.888513088226318
    5. '```' → logprob: -7.638513088226318
    6. 'u' → logprob: -8.013513565063477
    7. '   ' → logprob: -8.513513565063477
    8. ',' → logprob: -8.763513565063477
    9. 'count' → logprob: -9.013513565063477
    10. 'us' → logprob: -9.638513565063477

Token 889: ' us' (ID: 765)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' (adapté à ' us') → logprob: -0.831298828125
    2. 'count' → logprob: -0.956298828125
    3. '   ' → logprob: -2.831298828125
    4. '           ' → logprob: -3.331298828125
    5. '       ' → logprob: -3.581298828125
    6. 'lines' → logprob: -4.206298828125
    7. 'ua' → logprob: -4.331298828125
    8. 'u' → logprob: -4.706298828125
    9. ' count' → logprob: -4.706298828125
    10. 'cnt' → logprob: -5.581298828125

Token 890: 'agi' (ID: 13160)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.3308677673339844
    2. '_lines' → logprob: -1.3308677673339844
    3. '_score' → logprob: -4.580867767333984
    4. '_' → logprob: -6.080867767333984
    5. 'count' → logprob: -6.330867767333984
    6. '_l' → logprob: -7.455867767333984
    7. '_counts' → logprob: -7.580867767333984
    8. 'agi' → logprob: -8.080867767333984
    9. '_line' → logprob: -8.205867767333984
    10. '_cnt' → logprob: -8.455867767333984

Token 891: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.160305455327034
    2. '_lines' → logprob: -1.9103055000305176
    3. '_score' → logprob: -9.91030502319336
    4. 'count' → logprob: -11.53530502319336
    5. '_line' → logprob: -11.91030502319336
    6. '_cnt' → logprob: -12.16030502319336
    7. '_counts' → logprob: -12.16030502319336
    8. '_' → logprob: -13.28530502319336
    9. '_rows' → logprob: -13.78530502319336
    10. '_l' → logprob: -14.28530502319336

Token 892: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12756158411502838
    2. '=' → logprob: -2.127561569213867
    3. '_lines' → logprob: -7.377561569213867
    4. '   ' → logprob: -13.002561569213867
    5. '=count' → logprob: -13.752561569213867
    6. '_' → logprob: -13.877561569213867
    7. '_count' → logprob: -14.002561569213867
    8. '()' → logprob: -14.502561569213867
    9. 'Lines' → logprob: -14.752561569213867
    10. 'lines' → logprob: -15.252561569213867

Token 893: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024756586644798517
    2. ' count' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.62747573852539
    4. '	count' → logprob: -21.37747573852539
    5. '(count' → logprob: -21.50247573852539
    6. ' ' → logprob: -21.75247573852539
    7. '           ' → logprob: -22.87747573852539
    8. '       ' → logprob: -23.00247573852539
    9. '.count' → logprob: -23.00247573852539
    10. '=count' → logprob: -23.37747573852539

Token 894: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.750000953674316
    3. 'lines' → logprob: -16.125
    4. '_tokens' → logprob: -16.75
    5. '(_' → logprob: -16.875
    6. 's' → logprob: -16.875
    7. '_rows' → logprob: -17.0
    8. '_LINES' → logprob: -17.25
    9. '_marks' → logprob: -17.375
    10. '(' → logprob: -17.875

Token 895: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -4.60414821645827e-06
    2. '(marker' → logprob: -12.625004768371582
    3. '(' → logprob: -14.250004768371582
    4. ' (' → logprob: -14.750004768371582
    5. 'marked' → logprob: -16.250003814697266
    6. ' marked' → logprob: -16.625003814697266
    7. '(mask' → logprob: -16.625003814697266
    8. '(m' → logprob: -19.000003814697266
    9. '_mark' → logprob: -19.500003814697266
    10. '.mark' → logprob: -19.750003814697266

Token 896: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.004271188750863075
    2. 'arked' → logprob: -5.629271030426025
    3. 'ked' → logprob: -7.879271030426025
    4. 'marked' → logprob: -8.254271507263184
    5. '_mark' → logprob: -12.379271507263184
    6. '[' → logprob: -12.379271507263184
    7. 'red' → logprob: -12.629271507263184
    8. '_us' → logprob: -12.629271507263184
    9. '(mark' → logprob: -12.879271507263184
    10. 'ark' → logprob: -13.129271507263184

Token 897: '_us' (ID: 43779)
  Prédit: '_us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_us' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.875
    3. 'us' → logprob: -17.625
    4. '_' → logprob: -18.0
    5. '_um' → logprob: -18.125
    6. '_is' → logprob: -18.625
    7. '_usr' → logprob: -18.625
    8. '_uc' → logprob: -18.75
    9. '_es' → logprob: -19.0
    10. ')_' → logprob: -19.0

Token 898: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -3.128163257315464e-07
    2. 'ag' → logprob: -15.875
    3. 'gi' → logprob: -16.875
    4. 'ugi' → logprob: -17.125
    5. 'agai' → logprob: -17.375
    6. 'a' → logprob: -18.125
    7. '[' → logprob: -18.25
    8. '   ' → logprob: -18.375
    9. 's' → logprob: -19.0
    10. '#' → logprob: -19.5

Token 899: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11161886155605316
    2. ')
' → logprob: -2.361618757247925
    3. ')>=' → logprob: -5.236618995666504
    4. '>=' → logprob: -5.861618995666504
    5. ' >=' → logprob: -6.236618995666504
    6. '<|end|>' → logprob: -7.611618995666504
    7. '           ' → logprob: -7.736618995666504
    8. ' )' → logprob: -9.611618995666504
    9. ' )
' → logprob: -10.111618995666504
    10. ')
' → logprob: -10.236618995666504

Token 900: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7223494648933411
    2. '       ' → logprob: -1.3473494052886963
    3. '           ' → logprob: -1.5973494052886963
    4. 'if' → logprob: -3.8473494052886963
    5. '        
' → logprob: -4.472349643707275
    6. '            
' → logprob: -5.097349643707275
    7. '
' → logprob: -5.347349643707275
    8. '               ' → logprob: -6.347349643707275
    9. '```' → logprob: -6.347349643707275
    10. ' 
' → logprob: -7.097349643707275

Token 901: ' neko' (ID: 125590)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.618141770362854
    2. ' neko' → logprob: -0.868141770362854
    3. 'n' → logprob: -4.1181416511535645
    4. '       ' → logprob: -5.2431416511535645
    5. 'nek' → logprob: -5.6181416511535645
    6. '   ' → logprob: -5.8681416511535645
    7. ' if' → logprob: -6.1181416511535645
    8. '```' → logprob: -6.3681416511535645
    9. 'nego' → logprob: -6.7431416511535645
    10. ' ' → logprob: -6.8681416511535645

Token 902: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.7697225252486533e-06
    2. '_counts' → logprob: -13.500003814697266
    3. '```' → logprob: -15.000003814697266
    4. ''_' → logprob: -15.125003814697266
    5. '_' → logprob: -15.500003814697266
    6. '\' → logprob: -15.500003814697266
    7. '_code' → logprob: -15.625003814697266
    8. '"_' → logprob: -15.750003814697266
    9. '_lines' → logprob: -15.750003814697266
    10. '##_' → logprob: -16.250003814697266

Token 903: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. '=count' → logprob: -15.950939178466797
    4. ' ' → logprob: -16.450939178466797
    5. '＝' → logprob: -17.450939178466797
    6. ' ' → logprob: -17.575939178466797
    7. ',' → logprob: -17.950939178466797
    8. ')' → logprob: -18.200939178466797
    9. '   ' → logprob: -19.325939178466797
    10. '==' → logprob: -19.325939178466797

Token 904: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6931471824645996
    2. 'count' → logprob: -0.6931471824645996
    3. '(count' → logprob: -16.443147659301758
    4. '	count' → logprob: -17.818147659301758
    5. '=count' → logprob: -20.193147659301758
    6. '[count' → logprob: -20.318147659301758
    7. '0' → logprob: -20.443147659301758
    8. '.count' → logprob: -20.693147659301758
    9. ' ' → logprob: -20.943147659301758
    10. '_count' → logprob: -21.068147659301758

Token 905: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.749814019713085e-06
    2. '_mark' → logprob: -12.375006675720215
    3. '_count' → logprob: -14.750006675720215
    4. 'lines' → logprob: -14.875006675720215
    5. '```' → logprob: -14.875006675720215
    6. 'count' → logprob: -15.000006675720215
    7. '_marks' → logprob: -15.375006675720215
    8. '_' → logprob: -15.375006675720215
    9. 's' → logprob: -15.750006675720215
    10. 'Lines' → logprob: -16.12500762939453

Token 906: '(mark' (ID: 126438)
  Prédit: '(mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mark' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.750004768371582
    3. '(marker' → logprob: -13.375004768371582
    4. ' (' → logprob: -16.5000057220459
    5. 'marked' → logprob: -16.7500057220459
    6. '(mask' → logprob: -16.7500057220459
    7. '(
' → logprob: -18.0000057220459
    8. '_mark' → logprob: -18.8750057220459
    9. '(m' → logprob: -19.3750057220459
    10. '```' → logprob: -19.6250057220459

Token 907: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0017540723783895373
    2. '_ne' → logprob: -6.376754283905029
    3. '_mark' → logprob: -10.251753807067871
    4. '_ed' → logprob: -11.876753807067871
    5. 'e' → logprob: -12.626753807067871
    6. 'marked' → logprob: -13.001753807067871
    7. '_mar' → logprob: -13.626753807067871
    8. '_e' → logprob: -14.251753807067871
    9. 'ered' → logprob: -14.251753807067871
    10. 'er' → logprob: -15.376753807067871

Token 908: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -0.0007233949727378786
    2. '_mark' → logprob: -7.250723361968994
    3. 'marked' → logprob: -12.125723838806152
    4. 'ne' → logprob: -12.625723838806152
    5. '_marks' → logprob: -13.250723838806152
    6. '_mar' → logprob: -14.000723838806152
    7. '```' → logprob: -14.250723838806152
    8. '[' → logprob: -15.125723838806152
    9. ')' → logprob: -15.250723838806152
    10. '_' → logprob: -15.750723838806152

Token 909: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.004105473402887583
    2. 'eko' → logprob: -6.129105567932129
    3. 'ako' → logprob: -7.254105567932129
    4. 'k' → logprob: -7.379105567932129
    5. 'aki' → logprob: -7.879105567932129
    6. 'o' → logprob: -8.754105567932129
    7. 'marked' → logprob: -11.254105567932129
    8. 'kai' → logprob: -11.754105567932129
    9. 'akai' → logprob: -11.754105567932129
    10. 'oko' → logprob: -12.379105567932129

Token 910: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030986623838543892
    2. ')
' → logprob: -3.5309865474700928
    3. '           ' → logprob: -7.155986785888672
    4. '       ' → logprob: -7.780986785888672
    5. ')

' → logprob: -10.530986785888672
    6. ' )' → logprob: -13.405986785888672
    7. '()' → logprob: -13.530986785888672
    8. '
' → logprob: -13.655986785888672
    9. '<|end|>' → logprob: -13.655986785888672
    10. ')
' → logprob: -13.780986785888672

Token 911: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0040408833883702755
    2. '```' → logprob: -5.879040718078613
    3. '   ' → logprob: -7.004040718078613
    4. '           ' → logprob: -8.879040718078613
    5. '<|end|>' → logprob: -9.379040718078613
    6. '[' → logprob: -10.629040718078613
    7. '\' → logprob: -11.129040718078613
    8. '        
' → logprob: -11.879040718078613
    9. '      ' → logprob: -12.254040718078613
    10. '``' → logprob: -12.254040718078613

Token 912: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0024528263602405787
    2. '       ' → logprob: -6.252452850341797
    3. '           ' → logprob: -8.252452850341797
    4. ' if' → logprob: -8.252452850341797
    5. '```' → logprob: -12.877452850341797
    6. '   ' → logprob: -14.877452850341797
    7. '	if' → logprob: -17.252452850341797
    8. '               ' → logprob: -18.502452850341797
    9. 'If' → logprob: -19.252452850341797
    10. '
' → logprob: -19.752452850341797

Token 913: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0045607807114720345
    2. ' if' → logprob: -6.004560947418213
    3. '           ' → logprob: -6.254560947418213
    4. '       ' → logprob: -8.754560470581055
    5. '   ' → logprob: -12.629560470581055
    6. '```' → logprob: -15.754560470581055
    7. '	if' → logprob: -17.129560470581055
    8. ' ' → logprob: -17.754560470581055
    9. 'If' → logprob: -18.379560470581055
    10. '               ' → logprob: -18.379560470581055

Token 914: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6973040103912354
    2. 'ifier' → logprob: -0.6973040103912354
    3. 'ification' → logprob: -6.572303771972656
    4. '           ' → logprob: -7.322303771972656
    5. 'ifiez' → logprob: -7.572303771972656
    6. '   ' → logprob: -7.822303771972656
    7. 'ifié' → logprob: -8.072303771972656
    8. 'ifie' → logprob: -8.322303771972656
    9. 'dict' → logprob: -8.822303771972656
    10. 'ifiant' → logprob: -9.197303771972656

Token 915: ' conditions' (ID: 6409)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4311830699443817
    2. '           ' → logprob: -1.431183099746704
    3. 'if' → logprob: -2.306183099746704
    4. '       ' → logprob: -4.681182861328125
    5. '
' → logprob: -6.931182861328125
    6. '```' → logprob: -7.056182861328125
    7. '               ' → logprob: -7.931182861328125
    8. '          ' → logprob: -10.431182861328125
    9. ' whether' → logprob: -10.931182861328125
    10. '   ' → logprob: -10.931182861328125

Token 916: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027006161399185658
    2. '       ' → logprob: -6.2527008056640625
    3. ' if' → logprob: -8.252700805664062
    4. 'if' → logprob: -9.002700805664062
    5. '```' → logprob: -9.252700805664062
    6. ':' → logprob: -9.502700805664062
    7. '<|end|>' → logprob: -9.877700805664062
    8. '            
' → logprob: -9.877700805664062
    9. ',' → logprob: -11.002700805664062
    10. ' =' → logprob: -11.127700805664062

Token 917: ' victoire' (ID: 96596)
  Prédit: 'vic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vic' → logprob: -0.42082223296165466
    2. 'vict' → logprob: -1.670822262763977
    3. ' victoire' → logprob: -2.2958221435546875
    4. ' victory' → logprob: -3.1708221435546875
    5. 'win' → logprob: -4.9208221435546875
    6. ' vic' → logprob: -6.0458221435546875
    7. 'if' → logprob: -6.4208221435546875
    8. 'u' → logprob: -8.420822143554688
    9. ' win' → logprob: -8.545822143554688
    10. 'v' → logprob: -8.670822143554688

Token 918: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15397308766841888
    2. '       ' → logprob: -2.90397310256958
    3. '<|end|>' → logprob: -2.90397310256958
    4. ':' → logprob: -4.40397310256958
    5. ' if' → logprob: -4.77897310256958
    6. '```' → logprob: -5.27897310256958
    7. '<|end|>' → logprob: -5.40397310256958
    8. ' and' → logprob: -7.77897310256958
    9. ' =' → logprob: -7.77897310256958
    10. 'if' → logprob: -7.90397310256958

Token 919: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42760950326919556
    2. '       ' → logprob: -1.1776094436645508
    3. ' if' → logprob: -3.677609443664551
    4. '<|end|>' → logprob: -5.552609443664551
    5. '```' → logprob: -5.802609443664551
    6. ' =' → logprob: -5.927609443664551
    7. 'if' → logprob: -6.677609443664551
    8. ':' → logprob: -7.552609443664551
    9. '   ' → logprob: -7.677609443664551
    10. ' and' → logprob: -7.677609443664551

Token 920: ' us' (ID: 765)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5732808113098145
    2. ' if' → logprob: -1.3232808113098145
    3. '           ' → logprob: -2.4482808113098145
    4. '       ' → logprob: -2.5732808113098145
    5. '```' → logprob: -4.9482808113098145
    6. '<|end|>' → logprob: -8.948280334472656
    7. '   ' → logprob: -11.198280334472656
    8. '               ' → logprob: -11.198280334472656
    9. '	if' → logprob: -11.448280334472656
    10. '            
' → logprob: -11.448280334472656

Token 921: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -0.00037037418223917484
    2. 'ag' → logprob: -9.000370025634766
    3. '   ' → logprob: -9.750370025634766
    4. '_count' → logprob: -10.125370025634766
    5. '_' → logprob: -10.375370025634766
    6. '_ag' → logprob: -10.625370025634766
    7. 'if' → logprob: -11.000370025634766
    8. 'age' → logprob: -11.250370025634766
    9. 'aggi' → logprob: -11.250370025634766
    10. 'agai' → logprob: -11.750370025634766

Token 922: '_win' (ID: 63099)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.11203469336032867
    2. ' >=' → logprob: -2.737034797668457
    3. '>=' → logprob: -3.362034797668457
    4. '_lines' → logprob: -5.487034797668457
    5. '_counts' → logprob: -6.987034797668457
    6. '_' → logprob: -7.112034797668457
    7. '=' → logprob: -8.862034797668457
    8. ' =' → logprob: -9.112034797668457
    9. 'count' → logprob: -9.737034797668457
    10. '_cnt' → logprob: -9.862034797668457

Token 923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03826548159122467
    2. ' =' → logprob: -3.2882654666900635
    3. '>=' → logprob: -8.663265228271484
    4. 'if' → logprob: -10.663265228271484
    5. ' >=' → logprob: -12.163265228271484
    6. '_' → logprob: -12.538265228271484
    7. ' ' → logprob: -12.913265228271484
    8. '==' → logprob: -13.038265228271484
    9. '=True' → logprob: -13.163265228271484
    10. ' if' → logprob: -13.288265228271484

Token 924: ' (' (ID: 350)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.1340191662311554
    2. '(us' → logprob: -2.259019136428833
    3. ' us' → logprob: -3.884019136428833
    4. ' (' → logprob: -7.884019374847412
    5. '	us' → logprob: -11.509018898010254
    6. '(' → logprob: -11.634018898010254
    7. '   ' → logprob: -12.634018898010254
    8. ''us' → logprob: -13.384018898010254
    9. ' ' → logprob: -13.509018898010254
    10. '_us' → logprob: -13.759018898010254

Token 925: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.00026526954025030136
    2. ' us' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.125265121459961
    4. '	us' → logprob: -14.000265121459961
    5. '(us' → logprob: -14.000265121459961
    6. '           ' → logprob: -16.62526512145996
    7. '       ' → logprob: -16.75026512145996
    8. ''us' → logprob: -16.87526512145996
    9. 'u' → logprob: -17.50026512145996
    10. ' ' → logprob: -17.75026512145996

Token 926: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -4.60414821645827e-06
    2. 'ag' → logprob: -13.375004768371582
    3. 'age' → logprob: -13.750004768371582
    4. 'a' → logprob: -15.000004768371582
    5. 'agai' → logprob: -15.125004768371582
    6. 'gi' → logprob: -15.125004768371582
    7. 'aggi' → logprob: -15.625004768371582
    8. 'count' → logprob: -16.000003814697266
    9. 'asi' → logprob: -16.000003814697266
    10. 'g' → logprob: -16.375003814697266

Token 927: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.2200749754119897e-06
    2. 'count' → logprob: -13.375001907348633
    3. '_' → logprob: -15.500001907348633
    4. '>=' → logprob: -15.625001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '_counts' → logprob: -17.375001907348633
    7. ')' → logprob: -17.625001907348633
    8. ' _' → logprob: -17.875001907348633
    9. ' count' → logprob: -18.000001907348633
    10. '>' → logprob: -18.000001907348633

Token 928: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.34907862544059753
    2. '>=' → logprob: -1.22407865524292
    3. ')>=' → logprob: -7.59907865524292
    4. ')' → logprob: -9.974078178405762
    5. ' ' → logprob: -9.974078178405762
    6. ']>=' → logprob: -10.599078178405762
    7. '   ' → logprob: -12.224078178405762
    8. '    ' → logprob: -12.599078178405762
    9. '>' → logprob: -13.724078178405762
    10. ' ' → logprob: -13.849078178405762

Token 929: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0004307884373702109
    2. ' u' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.375431060791016
    4. '	u' → logprob: -18.750431060791016
    5. '       ' → logprob: -20.375431060791016
    6. '
' → logprob: -21.000431060791016
    7. '           ' → logprob: -21.125431060791016
    8. ' ' → logprob: -21.750431060791016
    9. '```' → logprob: -21.750431060791016
    10. '[u' → logprob: -22.125431060791016

Token 930: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21159984171390533
    2. ' and' → logprob: -1.7115998268127441
    3. 'and' → logprob: -5.086599826812744
    4. ')
' → logprob: -5.711599826812744
    5. ' )' → logprob: -8.211600303649902
    6. ' or' → logprob: -8.336600303649902
    7. '           ' → logprob: -9.086600303649902
    8. ' )
' → logprob: -11.836600303649902
    9. 'or' → logprob: -12.211600303649902
    10. '       ' → logprob: -12.586600303649902

Token 931: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.49155595898628235
    2. '           ' → logprob: -1.11655592918396
    3. 'and' → logprob: -3.24155592918396
    4. ' or' → logprob: -3.99155592918396
    5. '
' → logprob: -6.491556167602539
    6. 'or' → logprob: -7.491556167602539
    7. '       ' → logprob: -7.616556167602539
    8. '<|end|>' → logprob: -8.491556167602539
    9. '            
' → logprob: -9.241556167602539
    10. '          ' → logprob: -9.366556167602539

Token 932: ' neko' (ID: 125590)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.008133783005177975
    2. ' neko' → logprob: -5.383133888244629
    3. 'nek' → logprob: -6.258133888244629
    4. '   ' → logprob: -7.508133888244629
    5. '       ' → logprob: -8.008133888244629
    6. '```' → logprob: -8.633133888244629
    7. 'n' → logprob: -9.508133888244629
    8. '     ' → logprob: -9.633133888244629
    9. '           ' → logprob: -9.633133888244629
    10. ' ' → logprob: -9.758133888244629

Token 933: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -6.360996485454962e-05
    2. '_' → logprob: -9.8750638961792
    3. '_w' → logprob: -12.3750638961792
    4. ' _' → logprob: -13.7500638961792
    5. '_v' → logprob: -14.0000638961792
    6. '_count' → logprob: -14.1250638961792
    7. 'win' → logprob: -14.1250638961792
    8. '_finish' → logprob: -14.6250638961792
    9. '=' → logprob: -14.7500638961792
    10. '_continue' → logprob: -15.0000638961792

Token 934: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042180240154266
    2. '=' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.288042068481445
    4. ' ==' → logprob: -17.288042068481445
    5. ' ' → logprob: -17.663042068481445
    6. '   ' → logprob: -17.788042068481445
    7. ' |=' → logprob: -17.788042068481445
    8. ')' → logprob: -17.913042068481445
    9. ' =(' → logprob: -17.913042068481445
    10. '＝' → logprob: -18.163042068481445

Token 935: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04978851601481438
    2. '(ne' → logprob: -3.049788475036621
    3. '(' → logprob: -7.424788475036621
    4. '(n' → logprob: -7.674788475036621
    5. '(k' → logprob: -8.924788475036621
    6. '(no' → logprob: -13.049788475036621
    7. '(kn' → logprob: -13.549788475036621
    8. '(le' → logprob: -14.549788475036621
    9. ' ' → logprob: -14.674788475036621
    10. '(not' → logprob: -14.799788475036621

Token 936: 'ne' (ID: 611)
  Prédit: '(ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.637214720249176
    2. 'ne' → logprob: -0.887214720249176
    3. ' (' → logprob: -3.6372146606445312
    4. 'nek' → logprob: -4.387214660644531
    5. '(' → logprob: -4.637214660644531
    6. '(n' → logprob: -4.762214660644531
    7. ' neko' → logprob: -7.512214660644531
    8. '(k' → logprob: -7.637214660644531
    9. '(no' → logprob: -8.137214660644531
    10. 'nk' → logprob: -8.762214660644531

Token 937: 'ko' (ID: 3593)
  Prédit: 'ko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -2.0339031834737398e-05
    2. 'o' → logprob: -11.625020027160645
    3. 'eko' → logprob: -12.375020027160645
    4. 'oko' → logprob: -12.875020027160645
    5. 'k' → logprob: -13.000020027160645
    6. 'co' → logprob: -14.375020027160645
    7. 'ко' → logprob: -14.625020027160645
    8. '`' → logprob: -15.125020027160645
    9. '_' → logprob: -15.500020027160645
    10. ' ko' → logprob: -15.500020027160645

Token 938: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.625866030342877e-05
    2. 'count' → logprob: -9.375085830688477
    3. 'v' → logprob: -14.250085830688477
    4. 'Count' → logprob: -16.125085830688477
    5. '_c' → logprob: -16.750085830688477
    6. ')' → logprob: -16.750085830688477
    7. '_' → logprob: -16.750085830688477
    8. '_v' → logprob: -17.125085830688477
    9. '>' → logprob: -17.250085830688477
    10. '>=' → logprob: -17.375085830688477

Token 939: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0232953242957592
    2. '>=' → logprob: -3.7732954025268555
    3. ' ' → logprob: -10.898295402526855
    4. ')>=' → logprob: -11.023295402526855
    5. ')' → logprob: -12.023295402526855
    6. ' ' → logprob: -12.523295402526855
    7. ' ==' → logprob: -13.023295402526855
    8. '==' → logprob: -14.148295402526855
    9. ' ≥' → logprob: -14.273295402526855
    10. '≥' → logprob: -15.023295402526855

Token 940: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12700191140174866
    2. 'v' → logprob: -2.127002000808716
    3. '(v' → logprob: -9.627001762390137
    4. ' (' → logprob: -12.002001762390137
    5. '	v' → logprob: -14.252001762390137
    6. ' ' → logprob: -15.002001762390137
    7. ' ' → logprob: -15.127001762390137
    8. '_v' → logprob: -15.502001762390137
    9. ')v' → logprob: -15.877001762390137
    10. ')' → logprob: -16.877002716064453

Token 941: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011594036914175376
    2. ')
' → logprob: -10.000116348266602
    3. '       ' → logprob: -10.125116348266602
    4. '           ' → logprob: -11.250116348266602
    5. ' )' → logprob: -11.375116348266602
    6. ')

' → logprob: -12.750116348266602
    7. '   ' → logprob: -14.000116348266602
    8. '<|end|>' → logprob: -14.625116348266602
    9. ' and' → logprob: -15.000116348266602
    10. '```' → logprob: -15.625116348266602

Token 942: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003531655529513955
    2. '           ' → logprob: -6.253531455993652
    3. '```' → logprob: -6.878531455993652
    4. '
' → logprob: -8.128531455993652
    5. 'if' → logprob: -9.753531455993652
    6. '        
' → logprob: -9.878531455993652
    7. '<|end|>' → logprob: -9.878531455993652
    8. '   ' → logprob: -10.378531455993652
    9. ' if' → logprob: -10.503531455993652
    10. '``' → logprob: -11.628531455993652

Token 943: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.518929123878479
    2. '       ' → logprob: -1.018929123878479
    3. '           ' → logprob: -3.5189290046691895
    4. ' if' → logprob: -4.2689290046691895
    5. '   ' → logprob: -8.393929481506348
    6. '```' → logprob: -12.143929481506348
    7. '
' → logprob: -14.018929481506348
    8. '	if' → logprob: -15.018929481506348
    9. '               ' → logprob: -15.893929481506348
    10. ' ' → logprob: -16.39392852783203

Token 944: ' Cas' (ID: 8066)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020246754866093397
    2. '           ' → logprob: -9.000202178955078
    3. ' if' → logprob: -9.500202178955078
    4. '       ' → logprob: -12.500202178955078
    5. '   ' → logprob: -14.875202178955078
    6. '```' → logprob: -17.250202178955078
    7. 'If' → logprob: -20.125202178955078
    8. '               ' → logprob: -20.375202178955078
    9. '	if' → logprob: -21.125202178955078
    10. '     ' → logprob: -21.875202178955078

Token 945: ' où' (ID: 15113)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0778583213686943
    2. '           ' → logprob: -2.9528582096099854
    3. '               ' → logprob: -4.8278584480285645
    4. ' elif' → logprob: -4.9528584480285645
    5. 'if' → logprob: -5.8278584480285645
    6. 'elif' → logprob: -6.0778584480285645
    7. '            ' → logprob: -6.7028584480285645
    8. '       ' → logprob: -7.9528584480285645
    9. '```' → logprob: -8.827857971191406
    10. ' :' → logprob: -9.327857971191406

Token 946: ' l' (ID: 305)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.18823078274726868
    2. ' us' → logprob: -1.8132307529449463
    3. '           ' → logprob: -4.938230991363525
    4. 'if' → logprob: -7.688230991363525
    5. ' if' → logprob: -8.313230514526367
    6. '       ' → logprob: -8.563230514526367
    7. '   ' → logprob: -8.688230514526367
    8. '(us' → logprob: -9.188230514526367
    9. ' winner' → logprob: -10.563230514526367
    10. '               ' → logprob: -10.688230514526367

Token 947: ''un' (ID: 9788)
  Prédit: ' winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.5619310736656189
    2. 'if' → logprob: -1.6869311332702637
    3. 'winner' → logprob: -1.9369311332702637
    4. ' if' → logprob: -2.4369311332702637
    5. 'us' → logprob: -4.686931133270264
    6. ' us' → logprob: -6.061931133270264
    7. ' not' → logprob: -6.811931133270264
    8. 'not' → logprob: -8.811930656433105
    9. 'elif' → logprob: -9.186930656433105
    10. '   ' → logprob: -9.436930656433105

Token 948: ' seul' (ID: 33041)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8062971830368042
    2. ' if' → logprob: -1.4312971830368042
    3. 'if' → logprob: -1.9312971830368042
    4. '==' → logprob: -2.5562973022460938
    5. '       ' → logprob: -3.8062973022460938
    6. 'elif' → logprob: -3.8062973022460938
    7. '           ' → logprob: -3.9312973022460938
    8. '   ' → logprob: -4.431297302246094
    9. ' or' → logprob: -4.806297302246094
    10. ' elif' → logprob: -5.431297302246094

Token 949: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09338859468698502
    2. ' if' → logprob: -2.468388557434082
    3. ':' → logprob: -6.093388557434082
    4. '==' → logprob: -7.093388557434082
    5. '       ' → logprob: -8.218388557434082
    6. ' ==' → logprob: -8.343388557434082
    7. '   ' → logprob: -8.593388557434082
    8. 'player' → logprob: -8.718388557434082
    9. '           ' → logprob: -8.968388557434082
    10. ' joueur' → logprob: -9.468388557434082

Token 950: ' gagné' (ID: 150990)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.84194016456604
    2. 'won' → logprob: -1.34194016456604
    3. ' gagné' → logprob: -2.09194016456604
    4. 'winner' → logprob: -2.84194016456604
    5. 'g' → logprob: -3.34194016456604
    6. ' remporté' → logprob: -3.34194016456604
    7. ' win' → logprob: -3.71694016456604
    8. ' won' → logprob: -4.716939926147461
    9. 'w' → logprob: -4.716939926147461
    10. 'wins' → logprob: -5.591939926147461

Token 951: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7598636150360107
    2. '           ' → logprob: -1.3848636150360107
    3. ':' → logprob: -1.7598636150360107
    4. ':
' → logprob: -2.3848636150360107
    5. '```' → logprob: -5.13486385345459
    6. ' if' → logprob: -6.25986385345459
    7. '<|end|>' → logprob: -6.38486385345459
    8. '               ' → logprob: -6.50986385345459
    9. '   ' → logprob: -6.75986385345459
    10. ',' → logprob: -6.75986385345459

Token 952: ' déc' (ID: 8498)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10136206448078156
    2. ' if' → logprob: -2.9763619899749756
    3. '           ' → logprob: -3.1013619899749756
    4. '               ' → logprob: -7.976362228393555
    5. '   ' → logprob: -10.351362228393555
    6. '       ' → logprob: -10.476362228393555
    7. '```' → logprob: -10.851362228393555
    8. 'winner' → logprob: -12.976362228393555
    9. 'elif' → logprob: -14.351362228393555
    10. '
' → logprob: -14.601362228393555

Token 953: 'idez' (ID: 36753)
  Prédit: 'ider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ider' → logprob: -0.25931039452552795
    2. 'ide' → logprob: -1.6343103647232056
    3. 'ision' → logprob: -4.759310245513916
    4. 'l' → logprob: -4.884310245513916
    5. 'idé' → logprob: -5.134310245513916
    6. 'ided' → logprob: -5.634310245513916
    7. 'lar' → logprob: -5.759310245513916
    8. 'id' → logprob: -6.259310245513916
    9. 'ouvrir' → logprob: -7.634310245513916
    10. 'idere' → logprob: -8.259310722351074

Token 954: ' le' (ID: 505)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6869197487831116
    2. '               ' → logprob: -1.3119196891784668
    3. '           ' → logprob: -1.6869196891784668
    4. 'if' → logprob: -3.186919689178467
    5. ' winner' → logprob: -7.311919689178467
    6. 'winner' → logprob: -9.311920166015625
    7. '                   ' → logprob: -9.436920166015625
    8. '       ' → logprob: -10.186920166015625
    9. '            
' → logprob: -10.186920166015625
    10. '{
' → logprob: -10.311920166015625

Token 955: ' gagn' (ID: 58408)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.3427857458591461
    2. ' winner' → logprob: -1.3427857160568237
    3. 'if' → logprob: -4.217785835266113
    4. '           ' → logprob: -4.967785835266113
    5. ' if' → logprob: -5.342785835266113
    6. '       ' → logprob: -6.967785835266113
    7. '               ' → logprob: -7.342785835266113
    8. '   ' → logprob: -7.467785835266113
    9. '=' → logprob: -9.217785835266113
    10. '                   ' → logprob: -9.842785835266113

Token 956: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00412957277148962
    2. 'er' → logprob: -6.129129409790039
    3. 'e' → logprob: -6.879129409790039
    4. 'eur' → logprob: -7.254129409790039
    5. '```' → logprob: -8.879129409790039
    6. 'ent' → logprob: -10.879129409790039
    7. 'é' → logprob: -11.004129409790039
    8. '``' → logprob: -12.254129409790039
    9. 'a' → logprob: -12.504129409790039
    10. 'ateur' → logprob: -12.629129409790039

Token 957: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007542393868789077
    2. '
' → logprob: -8.500754356384277
    3. ' if' → logprob: -8.625754356384277
    4. '               ' → logprob: -8.875754356384277
    5. '```' → logprob: -9.500754356384277
    6. ':
' → logprob: -10.000754356384277
    7. 'if' → logprob: -10.375754356384277
    8. '            
' → logprob: -10.625754356384277
    9. '       ' → logprob: -10.750754356384277
    10. ',' → logprob: -11.875754356384277

Token 958: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024132427643053234
    2. '               ' → logprob: -9.25024127960205
    3. '       ' → logprob: -9.37524127960205
    4. '```' → logprob: -10.37524127960205
    5. ' if' → logprob: -11.75024127960205
    6. '            
' → logprob: -12.00024127960205
    7. 'if' → logprob: -12.25024127960205
    8. '
' → logprob: -12.87524127960205
    9. '<|end|>' → logprob: -13.87524127960205
    10. '{
' → logprob: -13.87524127960205

Token 959: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1256873905658722
    2. 'if' (adapté à ' if') → logprob: -2.50068736076355
    3. ' if' → logprob: -3.37568736076355
    4. '       ' → logprob: -6.375687599182129
    5. '   ' → logprob: -9.875687599182129
    6. '               ' → logprob: -10.000687599182129
    7. '
' → logprob: -10.375687599182129
    8. 'elif' → logprob: -10.625687599182129
    9. '```' → logprob: -10.750687599182129
    10. '{
' → logprob: -12.625687599182129

Token 960: ' us' (ID: 765)
  Prédit: ' us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' us' → logprob: -0.22543677687644958
    2. 'us' → logprob: -1.600436806678772
    3. '(us' → logprob: -11.85043716430664
    4. '	us' → logprob: -11.85043716430664
    5. '   ' → logprob: -12.10043716430664
    6. '       ' → logprob: -13.85043716430664
    7. ' ' → logprob: -14.10043716430664
    8. '           ' → logprob: -14.10043716430664
    9. '    ' → logprob: -15.10043716430664
    10. '     ' → logprob: -15.22543716430664

Token 961: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -1.6240566083070007e-06
    2. 'asi' → logprob: -14.375001907348633
    3. 'age' → logprob: -14.625001907348633
    4. 'aggi' → logprob: -15.375001907348633
    5. 'ag' → logprob: -16.000001907348633
    6. 'gi' → logprob: -16.625001907348633
    7. 'aki' → logprob: -17.125001907348633
    8. 'agai' → logprob: -17.500001907348633
    9. 'a' → logprob: -17.625001907348633
    10. 'agu' → logprob: -18.250001907348633

Token 962: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -4.961759259458631e-06
    2. '_count' → logprob: -13.125004768371582
    3. '_' → logprob: -13.750004768371582
    4. 'win' → logprob: -14.375004768371582
    5. '_w' → logprob: -14.750004768371582
    6. ' _' → logprob: -15.375004768371582
    7. ')_' → logprob: -15.750004768371582
    8. 'Win' → logprob: -15.875004768371582
    9. '
' → logprob: -16.2500057220459
    10. '_WIN' → logprob: -16.8750057220459

Token 963: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16473014652729034
    2. ':' → logprob: -1.914730191230774
    3. 'and' → logprob: -5.539730072021484
    4. '           ' → logprob: -8.414730072021484
    5. ' :' → logprob: -8.914730072021484
    6. ':
' → logprob: -10.039730072021484
    7. ' or' → logprob: -10.164730072021484
    8. '<|end|>' → logprob: -10.164730072021484
    9. '       ' → logprob: -10.539730072021484
    10. '            ' → logprob: -11.289730072021484

Token 964: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0621073953807354
    2. ' not' → logprob: -2.8121073246002197
    3. 'ne' → logprob: -9.56210708618164
    4. '(not' → logprob: -10.43710708618164
    5. '!' → logprob: -10.56210708618164
    6. '   ' → logprob: -12.06210708618164
    7. '	not' → logprob: -13.43710708618164
    8. 'no' → logprob: -13.81210708618164
    9. ' ' → logprob: -13.93710708618164
    10. 'n' → logprob: -14.06210708618164

Token 965: ' neko' (ID: 125590)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.11649925261735916
    2. ' neko' → logprob: -2.241499185562134
    3. 'nek' → logprob: -6.491499423980713
    4. 'ko' → logprob: -6.991499423980713
    5. 'k' → logprob: -7.491499423980713
    6. 'teko' → logprob: -8.991498947143555
    7. 'n' → logprob: -9.116498947143555
    8. 'no' → logprob: -9.241498947143555
    9. '(' → logprob: -9.366498947143555
    10. ' ' → logprob: -10.116498947143555

Token 966: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -3.4121114822482923e-06
    2. 'win' → logprob: -12.625003814697266
    3. '_w' → logprob: -17.500003814697266
    4. 'Win' → logprob: -18.125003814697266
    5. '
' → logprob: -18.500003814697266
    6. ' win' → logprob: -18.750003814697266
    7. '_WIN' → logprob: -18.875003814697266
    8. '_' → logprob: -19.500003814697266
    9. '	win' → logprob: -19.875003814697266
    10. '(win' → logprob: -20.125003814697266

Token 967: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05720493569970131
    2. ':
' → logprob: -2.9322049617767334
    3. '               ' → logprob: -6.182204723358154
    4. '           ' → logprob: -8.557205200195312
    5. ':return' → logprob: -11.307205200195312
    6. '       ' → logprob: -11.557205200195312
    7. '):
' → logprob: -11.807205200195312
    8. ':

' → logprob: -12.432205200195312
    9. '<|end|>' → logprob: -12.432205200195312
    10. '):' → logprob: -12.557205200195312

Token 968: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.500108141452074e-05
    2. '           ' → logprob: -11.875035285949707
    3. '                   ' → logprob: -12.000035285949707
    4. '```' → logprob: -12.375035285949707
    5. '                
' → logprob: -12.750035285949707
    6. 'return' → logprob: -13.000035285949707
    7. '
' → logprob: -13.000035285949707
    8. ' return' → logprob: -13.125035285949707
    9. '                       ' → logprob: -13.375035285949707
    10. ':
' → logprob: -14.125035285949707

Token 969: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.35871419310569763
    2. '               ' → logprob: -1.48371422290802
    3. ' winner' → logprob: -2.6087141036987305
    4. '           ' → logprob: -7.6087141036987305
    5. '                   ' → logprob: -8.23371410369873
    6. 'w' → logprob: -9.60871410369873
    7. '```' → logprob: -9.73371410369873
    8. '
' → logprob: -9.98371410369873
    9. '   ' → logprob: -10.35871410369873
    10. '       ' → logprob: -11.23371410369873

Token 970: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132619559764862
    2. ' =' → logprob: -1.3132619857788086
    3. '＝' → logprob: -16.438261032104492
    4. ' ' → logprob: -16.938261032104492
    5. ' ="' → logprob: -17.688261032104492
    6. '=True' → logprob: -17.938261032104492
    7. ' ='' → logprob: -18.438261032104492
    8. '='' → logprob: -18.688261032104492
    9. '=

' → logprob: -19.313261032104492
    10. ' =
' → logprob: -19.813261032104492

Token 971: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03231455385684967
    2. ' "' → logprob: -4.157314777374268
    3. ''' → logprob: -4.407314777374268
    4. ''us' → logprob: -6.407314777374268
    5. ' '' → logprob: -6.532314777374268
    6. ''US' → logprob: -7.157314777374268
    7. ' ' → logprob: -10.03231430053711
    8. '   ' → logprob: -10.65731430053711
    9. ''"' → logprob: -12.78231430053711
    10. ''U' → logprob: -13.65731430053711

Token 972: 'US' (ID: 3042)
  Prédit: 'Us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Us' → logprob: -0.0046326881274580956
    2. 'US' → logprob: -6.004632472991943
    3. '"' → logprob: -6.504632472991943
    4. 'us' → logprob: -7.504632472991943
    5. ''' → logprob: -9.754632949829102
    6. ''us' → logprob: -10.629632949829102
    7. 'U' → logprob: -12.004632949829102
    8. '_us' → logprob: -12.504632949829102
    9. ''US' → logprob: -12.504632949829102
    10. ' Us' → logprob: -12.629632949829102

Token 973: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -6.349075556499884e-05
    2. 'agi' → logprob: -10.8750638961792
    3. '"' → logprob: -11.3750638961792
    4. 'AK' → logprob: -12.0000638961792
    5. 'A' → logprob: -12.2500638961792
    6. '_AG' → logprob: -12.3750638961792
    7. 'S' → logprob: -12.7500638961792
    8. ' AG' → logprob: -12.7500638961792
    9. 'Ag' → logprob: -13.1250638961792
    10. '\' → logprob: -13.3750638961792

Token 974: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00013524403038900346
    2. 'AI' → logprob: -9.00013542175293
    3. ' I' → logprob: -11.50013542175293
    4. '"I' → logprob: -14.37513542175293
    5. 'A' → logprob: -14.50013542175293
    6. '"' → logprob: -16.00013542175293
    7. '
' → logprob: -16.00013542175293
    8. 'i' → logprob: -16.62513542175293
    9. '\' → logprob: -16.62513542175293
    10. '_I' → logprob: -17.25013542175293

Token 975: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.13186398148536682
    2. '"' → logprob: -2.131864070892334
    3. '\n' → logprob: -5.756864070892334
    4. '"
' → logprob: -6.881864070892334
    5. '"\' → logprob: -7.256864070892334
    6. '"`
' → logprob: -11.006863594055176
    7. ' "
' → logprob: -12.131863594055176
    8. '```' → logprob: -13.506863594055176
    9. '\"\' → logprob: -13.756863594055176
    10. ''"
' → logprob: -13.756863594055176

Token 976: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043310198932886124
    2. 'elif' → logprob: -3.1683101654052734
    3. ' elif' → logprob: -8.543310165405273
    4. '            
' → logprob: -10.543310165405273
    5. '               ' → logprob: -10.543310165405273
    6. '       ' → logprob: -10.543310165405273
    7. 'else' → logprob: -12.043310165405273
    8. '\n' → logprob: -12.043310165405273
    9. '```' → logprob: -12.293310165405273
    10. '
' → logprob: -12.793310165405273

Token 977: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05125873163342476
    2. 'elif' (adapté à ' elif') → logprob: -3.0512588024139404
    3. ' elif' → logprob: -6.176258563995361
    4. '       ' → logprob: -7.551258563995361
    5. 'else' → logprob: -11.55125904083252
    6. '               ' → logprob: -11.67625904083252
    7. '          ' → logprob: -11.80125904083252
    8. '            
' → logprob: -11.80125904083252
    9. '   ' → logprob: -12.17625904083252
    10. '		' → logprob: -12.42625904083252

Token 978: ' neko' (ID: 125590)
  Prédit: ' neko'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neko' → logprob: -0.01415974646806717
    2. 'ne' → logprob: -4.639159679412842
    3. ' ' → logprob: -6.264159679412842
    4. 'nek' → logprob: -6.389159679412842
    5. 'k' → logprob: -8.63916015625
    6. 'ko' → logprob: -9.01416015625
    7. 'not' → logprob: -9.13916015625
    8. 'us' → logprob: -9.76416015625
    9. '   ' → logprob: -9.88916015625
    10. '  ' → logprob: -10.01416015625

Token 979: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.125001907348633
    3. '_w' → logprob: -14.750001907348633
    4. 'win' → logprob: -15.375001907348633
    5. ' _' → logprob: -15.500001907348633
    6. '_WIN' → logprob: -15.750001907348633
    7. '
' → logprob: -16.125001907348633
    8. '```' → logprob: -17.000001907348633
    9. '   ' → logprob: -18.250001907348633
    10. 'Win' → logprob: -18.250001907348633

Token 980: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014163863845169544
    2. 'and' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.514163970947266
    4. '	and' → logprob: -17.139163970947266
    5. ' и' → logprob: -17.889163970947266
    6. ' và' → logprob: -18.389163970947266
    7. ')' → logprob: -18.514163970947266
    8. '   ' → logprob: -18.639163970947266
    9. ' و' → logprob: -19.014163970947266
    10. ' ' → logprob: -19.514163970947266

Token 981: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3132617771625519
    2. 'not' → logprob: -1.3132617473602295
    3. '(not' → logprob: -17.063261032104492
    4. '	not' → logprob: -17.313261032104492
    5. '   ' → logprob: -17.938261032104492
    6. ' ' → logprob: -18.813261032104492
    7. ' ' → logprob: -20.063261032104492
    8. '_not' → logprob: -20.438261032104492
    9. '!' → logprob: -20.438261032104492
    10. '           ' → logprob: -20.688261032104492

Token 982: ' us' (ID: 765)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.023248042911291122
    2. ' us' → logprob: -3.7732479572296143
    3. '(us' → logprob: -13.273247718811035
    4. '	us' → logprob: -14.398247718811035
    5. ' ' → logprob: -16.02324867248535
    6. '   ' → logprob: -16.52324867248535
    7. '_us' → logprob: -18.14824867248535
    8. '  ' → logprob: -18.52324867248535
    9. ''us' → logprob: -18.64824867248535
    10. '       ' → logprob: -19.27324867248535

Token 983: 'agi' (ID: 13160)
  Prédit: 'agi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agi' → logprob: -3.643152740551159e-05
    2. 'aki' → logprob: -10.875036239624023
    3. 'ag' → logprob: -12.125036239624023
    4. 'agai' → logprob: -13.250036239624023
    5. 'gi' → logprob: -13.625036239624023
    6. '   ' → logprob: -13.750036239624023
    7. 'age' → logprob: -13.875036239624023
    8. 'ugi' → logprob: -13.875036239624023
    9. 'asi' → logprob: -14.000036239624023
    10. 'aggi' → logprob: -14.125036239624023

Token 984: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -7.624555291840807e-05
    2. 'win' → logprob: -9.500076293945312
    3. 'Win' → logprob: -14.750076293945312
    4. '```' → logprob: -15.625076293945312
    5. '   ' → logprob: -15.750076293945312
    6. '_' → logprob: -16.250076293945312
    7. '_w' → logprob: -16.500076293945312
    8. '_WIN' → logprob: -16.625076293945312
    9. ' win' → logprob: -17.250076293945312
    10. 'a' → logprob: -17.375076293945312

Token 985: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07895378768444061
    2. ':
' → logprob: -2.578953742980957
    3. ' :' → logprob: -10.453953742980957
    4. ':

' → logprob: -11.828953742980957
    5. ' :
' → logprob: -12.078953742980957
    6. '           ' → logprob: -12.328953742980957
    7. '=' → logprob: -12.328953742980957
    8. '):
' → logprob: -12.703953742980957
    9. '):' → logprob: -13.078953742980957
    10. '       ' → logprob: -13.453953742980957

Token 986: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002821158617734909
    2. ':
' → logprob: -6.37782096862793
    3. ':' → logprob: -6.87782096862793
    4. '           ' → logprob: -11.25282096862793
    5. '):
' → logprob: -11.50282096862793
    6. '```' → logprob: -11.75282096862793
    7. '              ' → logprob: -11.87782096862793
    8. ' :
' → logprob: -12.00282096862793
    9. '<|end|>' → logprob: -12.12782096862793
    10. '=' → logprob: -12.50282096862793

Token 987: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.7082775831222534
    2. '               ' → logprob: -1.2082775831222534
    3. ' winner' → logprob: -1.5832775831222534
    4. '           ' → logprob: -6.208277702331543
    5. 'w' → logprob: -7.458277702331543
    6. '                   ' → logprob: -8.333277702331543
    7. '"' → logprob: -9.083277702331543
    8. ' ' → logprob: -9.333277702331543
    9. '   ' → logprob: -9.333277702331543
    10. '       ' → logprob: -9.458277702331543

Token 988: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '＝' → logprob: -17.001928329467773
    4. ' ' → logprob: -18.251928329467773
    5. ' ="' → logprob: -18.626928329467773
    6. ')' → logprob: -18.626928329467773
    7. '<|end|>' → logprob: -18.751928329467773
    8. '="' → logprob: -19.376928329467773
    9. '=True' → logprob: -19.626928329467773
    10. '==' → logprob: -19.876928329467773

Token 989: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002158945193514228
    2. ' "' → logprob: -6.252159118652344
    3. '"N' → logprob: -8.377159118652344
    4. ''' → logprob: -16.002159118652344
    5. '"K' → logprob: -16.252159118652344
    6. '"S' → logprob: -17.252159118652344
    7. '("' → logprob: -17.252159118652344
    8. '"C' → logprob: -17.877159118652344
    9. '"T' → logprob: -18.752159118652344
    10. ' ' → logprob: -18.752159118652344

Token 990: 'NE' (ID: 8553)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12961046397686005
    2. 'NE' → logprob: -2.129610538482666
    3. ''' → logprob: -6.129610538482666
    4. '"N' → logprob: -7.629610538482666
    5. '`' → logprob: -12.129610061645508
    6. '_NE' → logprob: -13.629610061645508
    7. 'N' → logprob: -13.629610061645508
    8. ' NE' → logprob: -13.879610061645508
    9. ' "' → logprob: -14.129610061645508
    10. '""' → logprob: -14.254610061645508

Token 991: 'KO' (ID: 50294)
  Prédit: 'KO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'KO' → logprob: -0.016803160309791565
    2. 'K' → logprob: -4.14180326461792
    3. 'OK' → logprob: -7.26680326461792
    4. 'AK' → logprob: -10.391802787780762
    5. '"' → logprob: -12.016802787780762
    6. 'КО' → logprob: -12.141802787780762
    7. '``' → logprob: -12.641802787780762
    8. '`' → logprob: -12.891802787780762
    9. '...' → logprob: -13.266802787780762
    10. '
' → logprob: -13.391802787780762

Token 992: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0012608295073732734
    2. '"
' → logprob: -6.751260757446289
    3. '">' → logprob: -10.376260757446289
    4. '<|end|>' → logprob: -10.376260757446289
    5. '".' → logprob: -12.251260757446289
    6. '")' → logprob: -12.751260757446289
    7. '```' → logprob: -12.751260757446289
    8. '           ' → logprob: -12.751260757446289
    9. '<|end|>' → logprob: -12.751260757446289
    10. '\n' → logprob: -13.251260757446289

Token 993: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024140048772096634
    2. '       ' → logprob: -3.7741401195526123
    3. 'elif' → logprob: -7.649139881134033
    4. '<|end|>' → logprob: -8.649140357971191
    5. ' elif' → logprob: -9.274140357971191
    6. 'else' → logprob: -9.774140357971191
    7. '```' → logprob: -10.399140357971191
    8. ' else' → logprob: -10.899140357971191
    9. '   ' → logprob: -10.899140357971191
    10. '<|end|>' → logprob: -12.399140357971191

Token 994: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7729185223579407
    2. 'elif' → logprob: -1.022918462753296
    3. '       ' → logprob: -1.772918462753296
    4. 'else' → logprob: -5.397918701171875
    5. ' elif' → logprob: -5.522918701171875
    6. '	elif' → logprob: -8.647918701171875
    7. '   ' → logprob: -9.772918701171875
    8. ' else' → logprob: -10.022918701171875
    9. 'break' → logprob: -10.147918701171875
    10. '```' → logprob: -10.272918701171875

Token 995: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0003244990948587656
    2. ' elif' → logprob: -8.125324249267578
    3. 'else' → logprob: -11.750324249267578
    4. 'continue' → logprob: -11.750324249267578
    5. '```' → logprob: -13.125324249267578
    6. 'el' → logprob: -13.250324249267578
    7. '           ' → logprob: -13.250324249267578
    8. '   ' → logprob: -13.375324249267578
    9. 'break' → logprob: -13.375324249267578
    10. '       ' → logprob: -13.750324249267578

Token 996: ' les' (ID: 1341)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.6754359006881714
    2. ' us' → logprob: -0.8004359006881714
    3. ' not' → logprob: -3.300436019897461
    4. 'not' → logprob: -5.425436019897461
    5. '   ' → logprob: -8.675436019897461
    6. ' neither' → logprob: -8.925436019897461
    7. '(us' → logprob: -9.050436019897461
    8. '           ' → logprob: -9.800436019897461
    9. '	us' → logprob: -10.175436019897461
    10. ' winner' → logprob: -10.550436019897461

Token 997: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.34788981080055237
    2. ' deux' → logprob: -1.72288978099823
    3. 'us' → logprob: -2.4728899002075195
    4. ' two' → logprob: -4.2228899002075195
    5. 'two' → logprob: -4.4728899002075195
    6. 'both' → logprob: -6.5978899002075195
    7. '   ' → logprob: -6.7228899002075195
    8. ' us' → logprob: -7.5978899002075195
    9. ' ' → logprob: -7.5978899002075195
    10. '2' → logprob: -7.9728899002075195

Token 998: ' ont' (ID: 4930)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.1981867402791977
    2. '_win' → logprob: -1.8231867551803589
    3. ' win' → logprob: -4.323186874389648
    4. 'wins' → logprob: -5.448186874389648
    5. '(win' → logprob: -8.448186874389648
    6. 's' → logprob: -9.323186874389648
    7. 'g' → logprob: -9.948186874389648
    8. 'Win' → logprob: -9.948186874389648
    9. 'won' → logprob: -10.073186874389648
    10. ' gagn' → logprob: -10.073186874389648

Token 999: ' gagné' (ID: 150990)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.09429874271154404
    2. 'win' → logprob: -3.094298839569092
    3. 'winner' → logprob: -4.594298839569092
    4. 'not' → logprob: -4.719298839569092
    5. '(us' → logprob: -5.219298839569092
    6. 'won' → logprob: -5.344298839569092
    7. '```' → logprob: -5.844298839569092
    8. ' us' → logprob: -5.969298839569092
    9. 'vic' → logprob: -6.469298839569092
    10. '   ' → logprob: -6.719298839569092

Token 1000: ' simult' (ID: 27260)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06473329663276672
    2. ':
' → logprob: -3.5647332668304443
    3. 'and' → logprob: -3.8147332668304443
    4. ':' → logprob: -4.939733505249023
    5. ' or' → logprob: -6.189733505249023
    6. ' et' → logprob: -6.439733505249023
    7. 'et' → logprob: -6.814733505249023
    8. '           ' → logprob: -8.939733505249023
    9. '```' → logprob: -9.564733505249023
    10. '       ' → logprob: -10.314733505249023

Token 1001: 'anément' (ID: 193192)
  Prédit: 'anément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anément' → logprob: -0.004709580447524786
    2. 'an' → logprob: -5.379709720611572
    3. 'ément' → logprob: -10.004709243774414
    4. 'ènement' → logprob: -11.754709243774414
    5. 'à' → logprob: -11.879709243774414
    6. 'è' → logprob: -12.254709243774414
    7. 'a' → logprob: -12.379709243774414
    8. '   ' → logprob: -12.629709243774414
    9. 'ain' → logprob: -12.879709243774414
    10. 'énement' → logprob: -13.129709243774414

Token 1002: ' ou' (ID: 2031)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20268821716308594
    2. ' and' → logprob: -2.327688217163086
    3. ':' → logprob: -3.077688217163086
    4. ' or' → logprob: -3.452688217163086
    5. '           ' → logprob: -5.327688217163086
    6. 'and' → logprob: -6.452688217163086
    7. '               ' → logprob: -7.202688217163086
    8. ' :
' → logprob: -8.327688217163086
    9. ',' → logprob: -8.452688217163086
    10. '==' → logprob: -8.827688217163086

Token 1003: ' aucun' (ID: 41678)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5598765015602112
    2. 'us' → logprob: -1.9348764419555664
    3. ' us' → logprob: -2.5598764419555664
    4. ' (' → logprob: -2.8098764419555664
    5. '(us' → logprob: -2.8098764419555664
    6. 'not' → logprob: -3.0598764419555664
    7. ' winner' → logprob: -4.309876441955566
    8. '(not' → logprob: -4.559876441955566
    9. '(' → logprob: -4.809876441955566
    10. ' neither' → logprob: -5.434876441955566

Token 1004: ' alors' (ID: 17971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.770407497882843
    2. 'n' → logprob: -1.5204074382781982
    3. ':' → logprob: -2.1454074382781982
    4. ' n' → logprob: -3.5204074382781982
    5. 'continue' → logprob: -3.7704074382781982
    6. '   ' → logprob: -3.8954074382781982
    7. 'ne' → logprob: -4.020407676696777
    8. 'win' → logprob: -4.145407676696777
    9. 'winner' → logprob: -4.145407676696777
    10. '==' → logprob: -4.395407676696777

Token 1005: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6477317810058594
    2. ' continue' → logprob: -1.0227317810058594
    3. '               ' → logprob: -2.6477317810058594
    4. 'winner' → logprob: -4.022731781005859
    5. ' winner' → logprob: -4.522731781005859
    6. '           ' → logprob: -4.897731781005859
    7. 'pass' → logprob: -5.022731781005859
    8. ' pass' → logprob: -6.522731781005859
    9. '```' → logprob: -6.772731781005859
    10. '	continue' → logprob: -8.14773178100586

Token 1006: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.15748141705989838
    2. ' continue' → logprob: -2.6574814319610596
    3. '       ' → logprob: -2.7824814319610596
    4. '           ' → logprob: -4.6574811935424805
    5. '	continue' → logprob: -6.5324811935424805
    6. 'pass' → logprob: -6.6574811935424805
    7. '   ' → logprob: -7.2824811935424805
    8. '```' → logprob: -7.9074811935424805
    9. '               ' → logprob: -9.15748119354248
    10. 'contin' → logprob: -9.40748119354248

Token 1007: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1008: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19358092546463013
    2. '   ' → logprob: -1.9435808658599854
    3. '```' → logprob: -4.5685811042785645
    4. '<|end|>' → logprob: -4.6935811042785645
    5. '    
' → logprob: -4.9435811042785645
    6. '  
' → logprob: -6.1935811042785645
    7. 'if' → logprob: -6.5685811042785645
    8. ')
' → logprob: -7.4435811042785645
    9. ')' → logprob: -7.9435811042785645
    10. ' if' → logprob: -8.068580627441406

Token 1009: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21207930147647858
    2. '   ' → logprob: -1.7120792865753174
    3. '```' → logprob: -4.8370795249938965
    4. 'print' → logprob: -6.5870795249938965
    5. '
' → logprob: -7.3370795249938965
    6. ' if' → logprob: -7.7120795249938965
    7. '    
' → logprob: -8.712079048156738
    8. '``' → logprob: -10.962079048156738
    9. 'for' → logprob: -11.712079048156738
    10. '  
' → logprob: -12.587079048156738

Token 1010: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004218247719109058
    2. '   ' → logprob: -5.504218101501465
    3. 'print' → logprob: -9.004218101501465
    4. ' if' → logprob: -11.004218101501465
    5. '```' → logprob: -15.129218101501465
    6. '
' → logprob: -16.50421905517578
    7. '	if' → logprob: -17.50421905517578
    8. '    
' → logprob: -18.00421905517578
    9. 'return' → logprob: -19.00421905517578
    10. '#' → logprob: -19.50421905517578

Token 1011: ' aucun' (ID: 41678)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.5799254179000854
    2. ' winner' → logprob: -0.8299254179000854
    3. '   ' → logprob: -5.579925537109375
    4. 'w' → logprob: -8.579925537109375
    5. ' not' → logprob: -12.329925537109375
    6. '  ' → logprob: -12.454925537109375
    7. 'print' → logprob: -13.079925537109375
    8. '    ' → logprob: -13.329925537109375
    9. ' ' → logprob: -13.829925537109375
    10. 'if' → logprob: -14.204925537109375

Token 1012: ' vain' (ID: 34253)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11406375467777252
    2. 'winner' → logprob: -2.3640637397766113
    3. ' if' → logprob: -4.864063739776611
    4. 'print' → logprob: -5.614063739776611
    5. ' winner' → logprob: -7.114063739776611
    6. '   ' → logprob: -7.114063739776611
    7. 'result' → logprob: -8.11406421661377
    8. '=' → logprob: -8.36406421661377
    9. '#' → logprob: -10.48906421661377
    10. '
' → logprob: -10.48906421661377

Token 1013: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -6.988221684878226e-06
    2. 'q' → logprob: -12.625006675720215
    3. 'ce' → logprob: -13.375006675720215
    4. 'cu' → logprob: -14.250006675720215
    5. 'cre' → logprob: -14.875006675720215
    6. 'cue' → logprob: -15.375006675720215
    7. 'c' → logprob: -15.875006675720215
    8. 'queue' → logprob: -16.00000762939453
    9. 'cur' → logprob: -16.12500762939453
    10. 'quant' → logprob: -16.25000762939453

Token 1014: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.003695920342579484
    2. 'que' → logprob: -5.628695964813232
    3. 'u' → logprob: -9.878695487976074
    4. 'eur' → logprob: -11.503695487976074
    5. 'ant' → logprob: -12.003695487976074
    6. 'q' → logprob: -12.253695487976074
    7. 'reur' → logprob: -12.503695487976074
    8. 'def' → logprob: -12.753695487976074
    9. 'r' → logprob: -13.003695487976074
    10. 'dor' → logprob: -13.628695487976074

Token 1015: ' unique' (ID: 5746)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06371273100376129
    2. '   ' → logprob: -3.8137128353118896
    3. ':' → logprob: -4.1887125968933105
    4. ' if' → logprob: -4.3137125968933105
    5. '==' → logprob: -5.5637125968933105
    6. 'print' → logprob: -5.9387125968933105
    7. ' is' → logprob: -6.0637125968933105
    8. 'is' → logprob: -7.0637125968933105
    9. ':
' → logprob: -7.6887125968933105
    10. ' ==' → logprob: -8.063713073730469

Token 1016: ' appar' (ID: 13643)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1635502725839615
    2. ' if' → logprob: -2.66355037689209
    3. ':' → logprob: -3.41355037689209
    4. '   ' → logprob: -3.41355037689209
    5. ':
' → logprob: -4.66355037689209
    6. 'print' → logprob: -5.53855037689209
    7. ' and' → logprob: -7.03855037689209
    8. ',' → logprob: -8.16355037689209
    9. 'and' → logprob: -8.41355037689209
    10. ' print' → logprob: -9.28855037689209

Token 1017: 'u' (ID: 84)
  Prédit: 'ait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.5408480763435364
    2. 'u' → logprob: -0.9158480763435364
    3. 'ut' → logprob: -4.415848255157471
    4. 'ue' → logprob: -5.790848255157471
    5. 't' → logprob: -7.165848255157471
    6. 'a' → logprob: -7.790848255157471
    7. '```' → logprob: -8.165847778320312
    8. '
' → logprob: -8.665847778320312
    9. 'ent' → logprob: -8.790847778320312
    10. 'ais' → logprob: -8.915847778320312

Token 1018: ' durant' (ID: 39590)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07146301120519638
    2. ':
' → logprob: -3.696463108062744
    3. '   ' → logprob: -3.946463108062744
    4. ' if' → logprob: -4.321463108062744
    5. ':' → logprob: -4.571463108062744
    6. 'print' → logprob: -7.071463108062744
    7. ',' → logprob: -9.071462631225586
    8. 'else' → logprob: -9.321462631225586
    9. '```' → logprob: -9.821462631225586
    10. 'in' → logprob: -11.446462631225586

Token 1019: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.19747038185596466
    2. 'le' → logprob: -2.0724704265594482
    3. 'les' → logprob: -3.4474704265594482
    4. 'tout' → logprob: -4.447470188140869
    5. 't' → logprob: -5.322470188140869
    6. 'l' → logprob: -6.197470188140869
    7. ' la' → logprob: -6.322470188140869
    8. 'for' → logprob: -7.822470188140869
    9. ' le' → logprob: -8.072470664978027
    10. '   ' → logprob: -9.072470664978027

Token 1020: ' tir' (ID: 16690)
  Prédit: 'tir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tir' → logprob: -0.15621547400951385
    2. 't' → logprob: -2.0312154293060303
    3. 'for' → logprob: -5.031215667724609
    4. 'tour' → logprob: -5.906215667724609
    5. '#' → logprob: -6.031215667724609
    6. ' tir' → logprob: -7.906215667724609
    7. 'tests' → logprob: -8.28121566772461
    8. 'process' → logprob: -8.65621566772461
    9. 'draw' → logprob: -9.03121566772461
    10. 'bou' → logprob: -9.15621566772461

Token 1021: 'ages' (ID: 1461)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.3515278398990631
    2. 'ages' → logprob: -1.2265278100967407
    3. 'a' → logprob: -6.726527690887451
    4. '```' → logprob: -7.476527690887451
    5. 'ais' → logprob: -7.601527690887451
    6. 'ées' → logprob: -8.35152816772461
    7. '   ' → logprob: -9.22652816772461
    8. 'ée' → logprob: -9.22652816772461
    9. 'aux' → logprob: -9.47652816772461
    10. 'ai' → logprob: -10.22652816772461

Token 1022: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09788254648447037
    2. ':
' → logprob: -3.2228825092315674
    3. ':' → logprob: -3.7228825092315674
    4. ' if' → logprob: -4.4728827476501465
    5. ' and' → logprob: -4.8478827476501465
    6. ',' → logprob: -5.2228827476501465
    7. 'if' → logprob: -5.5978827476501465
    8. 'and' → logprob: -7.7228827476501465
    9. ' or' → logprob: -8.847882270812988
    10. '```' → logprob: -9.847882270812988

Token 1023: ' DRAW' (ID: 150813)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5971036553382874
    2. 'if' → logprob: -0.8471036553382874
    3. ' if' → logprob: -4.097103595733643
    4. ' print' → logprob: -5.847103595733643
    5. 'winner' → logprob: -7.097103595733643
    6. '   ' → logprob: -7.597103595733643
    7. ' winner' → logprob: -9.8471040725708
    8. '```' → logprob: -10.2221040725708
    9. '
' → logprob: -12.2221040725708
    10. 'pass' → logprob: -12.9721040725708

Token 1024: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0500677190721035
    2. 'print' → logprob: -3.675067663192749
    3. 'if' → logprob: -3.925067663192749
    4. ' if' → logprob: -5.675067901611328
    5. ' print' → logprob: -8.675067901611328
    6. '```' → logprob: -9.550067901611328
    7. '    
' → logprob: -10.175067901611328
    8. 'return' → logprob: -10.800067901611328
    9. '
' → logprob: -12.550067901611328
    10. '	print' → logprob: -12.800067901611328

Token 1025: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41789090633392334
    2. 'print' → logprob: -1.4178909063339233
    3. '```' → logprob: -2.667891025543213
    4. '
' → logprob: -4.417891025543213
    5. ' print' → logprob: -5.042891025543213
    6. ' if' → logprob: -5.417891025543213
    7. 'if' → logprob: -5.542891025543213
    8. '    
' → logprob: -6.917891025543213
    9. '``' → logprob: -7.042891025543213
    10. 'return' → logprob: -7.417891025543213

Token 1026: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07241768389940262
    2. 'if' (adapté à ' if') → logprob: -2.822417736053467
    3. '   ' → logprob: -4.822417736053467
    4. ' if' → logprob: -6.322417736053467
    5. ' print' → logprob: -7.572417736053467
    6. '```' → logprob: -10.447417259216309
    7. 'return' → logprob: -11.697417259216309
    8. '
' → logprob: -14.572417259216309
    9. '``' → logprob: -15.572417259216309
    10. '    
' → logprob: -16.572418212890625

Token 1027: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.0020912576001137495
    2. ' winner' → logprob: -6.252091407775879
    3. 'w' → logprob: -8.752091407775879
    4. '   ' → logprob: -12.377091407775879
    5. '	w' → logprob: -15.752091407775879
    6. 'not' → logprob: -16.877090454101562
    7. ' not' → logprob: -18.127090454101562
    8. '  ' → logprob: -18.377090454101562
    9. ' ' → logprob: -19.002090454101562
    10. 'writer' → logprob: -19.127090454101562

Token 1028: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0036428342573344707
    2. 'is' → logprob: -5.753643035888672
    3. ' ==' → logprob: -8.378643035888672
    4. '==' → logprob: -8.378643035888672
    5. ' =' → logprob: -13.753643035888672
    6. ')' → logprob: -13.753643035888672
    7. '=' → logprob: -13.878643035888672
    8. ' ' → logprob: -14.003643035888672
    9. '===' → logprob: -14.878643035888672
    10. ' ===' → logprob: -15.878643035888672

Token 1029: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014166445471346378
    2. ' None' → logprob: -4.264166355133057
    3. '   ' → logprob: -12.764166831970215
    4. '_None' → logprob: -17.5141658782959
    5. '=None' → logprob: -17.8891658782959
    6. '(None' → logprob: -19.0141658782959
    7. '```' → logprob: -19.7641658782959
    8. 'none' → logprob: -19.8891658782959
    9. '==' → logprob: -20.2641658782959
    10. 'not' → logprob: -20.3891658782959

Token 1030: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3943929076194763
    2. ':
' → logprob: -1.644392967224121
    3. '   ' → logprob: -2.144392967224121
    4. '       ' → logprob: -4.519392967224121
    5. '=' → logprob: -5.644392967224121
    6. ' =' → logprob: -7.644392967224121
    7. 'print' → logprob: -8.019392967224121
    8. ' :' → logprob: -9.519392967224121
    9. ' print' → logprob: -9.769392967224121
    10. ',' → logprob: -10.269392967224121

Token 1031: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013636828400194645
    2. 'print' → logprob: -4.513637065887451
    3. 'winner' → logprob: -6.388637065887451
    4. '```' → logprob: -7.638637065887451
    5. '       ' → logprob: -7.888637065887451
    6. ' winner' → logprob: -10.513636589050293
    7. ' print' → logprob: -11.638636589050293
    8. 'return' → logprob: -12.138636589050293
    9. 'w' → logprob: -13.013636589050293
    10. '	print' → logprob: -13.763636589050293

Token 1032: ' winner' (ID: 19499)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000843576155602932
    2. 'winner' (adapté à ' winner') → logprob: -7.375843524932861
    3. '   ' → logprob: -8.75084400177002
    4. '       ' → logprob: -10.12584400177002
    5. ' print' → logprob: -11.25084400177002
    6. '```' → logprob: -12.37584400177002
    7. '	print' → logprob: -14.12584400177002
    8. ' winner' → logprob: -15.12584400177002
    9. 'return' → logprob: -16.000843048095703
    10. 'pr' → logprob: -16.375843048095703

Token 1033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004080301150679588
    2. ' =' → logprob: -5.504080295562744
    3. '='' → logprob: -13.754080772399902
    4. '=
' → logprob: -15.004080772399902
    5. '="' → logprob: -15.629080772399902
    6. 'print' → logprob: -16.379079818725586
    7. '   ' → logprob: -17.004079818725586
    8. '=True' → logprob: -17.129079818725586
    9. ' ='' → logprob: -17.504079818725586
    10. ' ="' → logprob: -17.629079818725586

Token 1034: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12807540595531464
    2. ' "' → logprob: -2.128075361251831
    3. '"D' → logprob: -7.12807559967041
    4. ''' → logprob: -8.12807559967041
    5. ' '' → logprob: -10.50307559967041
    6. ''D' → logprob: -11.00307559967041
    7. ''"' → logprob: -13.00307559967041
    8. ' DRAW' → logprob: -14.37807559967041
    9. ' ' → logprob: -14.62807559967041
    10. ' ' → logprob: -15.00307559967041

Token 1035: 'DRAW' (ID: 157145)
  Prédit: 'DRAW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DRAW' → logprob: -3.500108141452074e-05
    2. '"D' → logprob: -11.000035285949707
    3. '"' → logprob: -11.250035285949707
    4. 'D' → logprob: -13.375035285949707
    5. ' DRAW' → logprob: -13.375035285949707
    6. ''D' → logprob: -13.500035285949707
    7. 'DR' → logprob: -15.250035285949707
    8. '_DRAW' → logprob: -16.00003433227539
    9. ''' → logprob: -16.37503433227539
    10. 'NONE' → logprob: -16.37503433227539

Token 1036: '"

' (ID: 2678)
  Prédit: '"
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.4657065272331238
    2. '"' → logprob: -1.3407065868377686
    3. '   ' → logprob: -2.3407065868377686
    4. '"

' → logprob: -4.4657063484191895
    5. 'print' → logprob: -6.2157063484191895
    6. '")' → logprob: -7.9657063484191895
    7. ')' → logprob: -8.465706825256348
    8. '
' → logprob: -8.965706825256348
    9. ')
' → logprob: -9.715706825256348
    10. '"
' → logprob: -9.965706825256348

Token 1037: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4755787253379822
    2. 'print' → logprob: -0.9755787253379822
    3. 'return' → logprob: -7.100578784942627
    4. '    
' → logprob: -7.975578784942627
    5. '```' → logprob: -8.600578308105469
    6. 'main' → logprob: -9.600578308105469
    7. '
' → logprob: -9.725578308105469
    8. ' print' → logprob: -11.475578308105469
    9. '  
' → logprob: -12.850578308105469
    10. '``' → logprob: -13.100578308105469

Token 1038: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005340489558875561
    2. '   ' → logprob: -5.255340576171875
    3. 'return' → logprob: -9.380340576171875
    4. '```' → logprob: -11.505340576171875
    5. '
' → logprob: -12.005340576171875
    6. ' print' → logprob: -12.380340576171875
    7. '    
' → logprob: -13.505340576171875
    8. '	print' → logprob: -15.380340576171875
    9. '  
' → logprob: -16.505340576171875
    10. 'if' → logprob: -16.630340576171875

Token 1039: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -12.375009536743164
    3. 'winner' → logprob: -12.875009536743164
    4. '(f' → logprob: -13.250009536743164
    5. 'w' → logprob: -13.750009536743164
    6. '()' → logprob: -16.875009536743164
    7. '(win' → logprob: -17.500009536743164
    8. '((' → logprob: -17.625009536743164
    9. ' (' → logprob: -17.875009536743164
    10. ' winner' → logprob: -18.500009536743164

Token 1040: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -1.9361264946837764e-07
    2. 'winner' → logprob: -16.625
    3. '(inner' → logprob: -17.875
    4. 'inne' → logprob: -18.125
    5. '_inner' → logprob: -18.375
    6. 'inn' → logprob: -18.75
    7. ' inner' → logprob: -18.75
    8. 'nner' → logprob: -18.875
    9. 'INNER' → logprob: -19.5
    10. 'i' → logprob: -19.75

Token 1041: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0087516784551553e-05
    2. '())' → logprob: -12.00001049041748
    3. '()' → logprob: -12.75001049041748
    4. ')
' → logprob: -14.87501049041748
    5. '")' → logprob: -15.37501049041748
    6. ')`' → logprob: -16.000009536743164
    7. '`)' → logprob: -16.250009536743164
    8. ' )' → logprob: -16.500009536743164
    9. '   ' → logprob: -16.500009536743164
    10. '))' → logprob: -17.250009536743164

Token 1042: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0638885349035263
    2. '
' → logprob: -2.9388885498046875
    3. '```' → logprob: -5.5638885498046875
    4. '<|end|>' → logprob: -5.8138885498046875
    5. 'main' → logprob: -6.5638885498046875
    6. ' if' → logprob: -8.688888549804688
    7. '  
' → logprob: -8.938888549804688
    8. '    
' → logprob: -9.063888549804688
    9. '(main' → logprob: -9.313888549804688
    10. '``' → logprob: -9.688888549804688

Token 1043: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004079470410943031
    2. '__' → logprob: -5.504079341888428
    3. ' ' → logprob: -15.254079818725586
    4. '_' → logprob: -15.254079818725586
    5. ' _' → logprob: -15.754079818725586
    6. ' ' → logprob: -15.879079818725586
    7. '_name' → logprob: -16.129079818725586
    8. 'name' → logprob: -16.754079818725586
    9. '  ' → logprob: -17.379079818725586
    10. '___' → logprob: -17.379079818725586

Token 1044: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006678186822682619
    2. ' ==' → logprob: -5.631678104400635
    3. '==' → logprob: -6.131678104400635
    4. 'name' → logprob: -7.256678104400635
    5. '=="' → logprob: -9.006678581237793
    6. ' __' → logprob: -10.506678581237793
    7. '```' → logprob: -11.631678581237793
    8. '__.__' → logprob: -12.131678581237793
    9. 'if' → logprob: -12.256678581237793
    10. '=='' → logprob: -12.381678581237793

Token 1045: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.747814349073451e-05
    2. '==' → logprob: -11.875017166137695
    3. '=="' → logprob: -12.125017166137695
    4. '__.__' → logprob: -12.375017166137695
    5. '___' → logprob: -16.125017166137695
    6. '__.' → logprob: -16.250017166137695
    7. '```' → logprob: -16.250017166137695
    8. ' ==' → logprob: -16.250017166137695
    9. '__["' → logprob: -16.375017166137695
    10. '____' → logprob: -16.500017166137695

Token 1046: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016160471364855766
    2. '==' → logprob: -4.641160488128662
    3. ' ==' → logprob: -5.266160488128662
    4. '=="' → logprob: -6.766160488128662
    5. '=='' → logprob: -10.641160011291504
    6. '__.__' → logprob: -10.641160011291504
    7. '__":
' → logprob: -12.266160011291504
    8. '__["' → logprob: -12.391160011291504
    9. '_' → logprob: -13.016160011291504
    10. '___' → logprob: -13.391160011291504

Token 1047: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019487487152218819
    2. ''' → logprob: -6.251948833465576
    3. '__' → logprob: -10.876948356628418
    4. ' "__' → logprob: -13.626948356628418
    5. '"name' → logprob: -18.501949310302734
    6. ' '__' → logprob: -19.001949310302734
    7. '"user' → logprob: -19.251949310302734
    8. '("__' → logprob: -19.376949310302734
    9. '   ' → logprob: -19.501949310302734
    10. '"class' → logprob: -19.876949310302734

Token 1048: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1622295379638672
    2. '__' → logprob: -1.9122295379638672
    3. '"' → logprob: -6.287229537963867
    4. ''' → logprob: -9.287229537963867
    5. 'name' → logprob: -10.037229537963867
    6. 'built' → logprob: -13.287229537963867
    7. ' "__' → logprob: -13.412229537963867
    8. '_main' → logprob: -13.662229537963867
    9. '__":
' → logprob: -14.037229537963867
    10. ' main' → logprob: -14.912229537963867

Token 1049: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.024281544610857964
    2. '__' → logprob: -3.7742815017700195
    3. '__':
' → logprob: -6.8992815017700195
    4. '__["' → logprob: -11.52428150177002
    5. '__.' → logprob: -11.77428150177002
    6. '__.__' → logprob: -12.27428150177002
    7. '__
' → logprob: -12.77428150177002
    8. '__[' → logprob: -14.64928150177002
    9. '__()
' → logprob: -15.14928150177002
    10. '__
' → logprob: -15.27428150177002

Token 1050: '   ' (ID: 271)
  Prédit: '	main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	main' → logprob: -0.25454023480415344
    2. 'main' → logprob: -1.754540205001831
    3. '   ' → logprob: -3.254540205001831
    4. ' main' → logprob: -4.37954044342041
    5. '_main' → logprob: -8.25454044342041
    6. '(main' → logprob: -9.50454044342041
    7. '	Main' → logprob: -9.87954044342041
    8. '```' → logprob: -9.87954044342041
    9. '    
' → logprob: -10.37954044342041
    10. '<|end|>' → logprob: -10.62954044342041

Token 1051: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.7697225252486533e-06
    2. ' main' → logprob: -12.500003814697266
    3. '	main' → logprob: -17.000003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '.main' → logprob: -23.375003814697266
    6. '(main' → logprob: -23.500003814697266
    7. '_main' → logprob: -24.375003814697266
    8. 'Main' → logprob: -26.375003814697266
    9. 'import' → logprob: -27.250003814697266
    10. '/main' → logprob: -27.250003814697266

Token 1052: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1050
Tokens correctement prédits (1ère position, stricte): 345
Tokens correctement prédits (1ère position, avec adaptation): 375
Tokens correctement prédits (top 10): 719
Précision stricte (1ère position): 32.86%
Précision adaptée (1ère position): 35.71%
Précision (top 10): 68.48%
================================================================================
