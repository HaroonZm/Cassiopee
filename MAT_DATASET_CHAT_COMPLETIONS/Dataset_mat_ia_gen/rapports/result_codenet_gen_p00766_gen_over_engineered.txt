================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class ChocolateBar:
    def __init__(self, height: int, width: int, grid: list[str]):
        self.height = height
        self.width = width
        self.grid = grid
        self.horizontal_cuts = [False] * (self.height - 1)
        self.vertical_cuts = [False] * (self.width - 1)

    def can_cut_horizontally(self, row: int) -> bool:
        # A horizontal cut is possible iff all segments in the groove line are empty
        # groove line is between row and row+1; check all columns
        for col in range(self.width):
            if self.grid[row][col] == '#' and self.grid[row + 1][col] == '#':
                # if both cells above and below are chocolate, groove in between (cut) must exist
                continue
            if self.grid[row][col] == '#' or self.grid[row + 1][col] == '#':
                # if one side is chocolate and other is no chocolate, no groove possible
                return False
        return True

    def can_cut_vertically(self, col: int) -> bool:
        # A vertical cut is possible iff all segments in the groove line are empty
        # groove line is between col and col+1; check all rows
        for row in range(self.height):
            if self.grid[row][col] == '#' and self.grid[row][col + 1] == '#':
                # chocolate segments on both sides => groove possible
                continue
            if self.grid[row][col] == '#' or self.grid[row][col + 1] == '#':
                # one side chocolate, one side no chocolate => no groove
                return False
        return True

    def find_valid_cuts(self):
        # Find all possible horizontal cuts first
        for row in range(self.height - 1):
            # To cut here, all columns must have chocolate in both rows or both empty in groove
            can_cut = True
            for col in range(self.width):
                if self.grid[row][col] == '#' and self.grid[row + 1][col] == '#':
                    # groove line possible here
                    continue
                if self.grid[row][col] == '#' or self.grid[row + 1][col] == '#':
                    can_cut = False
                    break
            self.horizontal_cuts[row] = can_cut

        # Find all possible vertical cuts
        for col in range(self.width - 1):
            can_cut = True
            for row in range(self.height):
                if self.grid[row][col] == '#' and self.grid[row][col + 1] == '#':
                    # groove line possible here
                    continue
                if self.grid[row][col] == '#' or self.grid[row][col + 1] == '#':
                    can_cut = False
                    break
            self.vertical_cuts[col] = can_cut

    def count_pieces(self) -> int:
        self.find_valid_cuts()

        # Identify horizontal segments: grouping rows separated by horizontal cuts
        horizontal_segments = []
        start = 0
        for i in range(self.height - 1):
            if self.horizontal_cuts[i]:
                horizontal_segments.append((start, i))
                start = i + 1
        horizontal_segments.append((start, self.height - 1))

        # Identify vertical segments similarly
        vertical_segments = []
        start = 0
        for j in range(self.width - 1):
            if self.vertical_cuts[j]:
                vertical_segments.append((start, j))
                start = j + 1
        vertical_segments.append((start, self.width - 1))

        # Count pieces as number of rectangle blocks (horizontal segments * vertical segments)
        # But pieces must actually contain chocolate (some rectangles may be empty)
        count = 0
        for h_start, h_end in horizontal_segments:
            for v_start, v_end in vertical_segments:
                if self.contains_chocolate(h_start, h_end, v_start, v_end):
                    count += 1
        return count

    def contains_chocolate(self, row_start, row_end, col_start, col_end) -> bool:
        for r in range(row_start, row_end + 1):
            for c in range(col_start, col_end + 1):
                if self.grid[r][c] == '#':
                    return True
        return False


class ChocolateBarFactory:
    @staticmethod
    def from_input(h: int, w: int, lines: list[str]) -> ChocolateBar:
        return ChocolateBar(h, w, lines)


class ChocolateBarSolver:
    def __init__(self):
        self.results = []

    def solve(self):
        while True:
            h, w = map(int, input().strip().split())
            if h == 0 and w == 0:
                break
            lines = [input().rstrip('\n') for _ in range(h)]
            bar = ChocolateBarFactory.from_input(h, w, lines)
            result = bar.count_pieces()
            self.results.append(result)

    def output(self):
        for r in self.results:
            print(r)


if __name__ == "__main__":
    solver = ChocolateBarSolver()
    solver.solve()
    solver.output()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Chocolate' (ID: 54599)
  → Token d'amorce (pas de prédiction)

Token 2: 'Bar' (ID: 4622)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9534981846809387
    2. '{' → logprob: -1.078498125076294
    3. ':' → logprob: -1.328498125076294
    4. ' {' → logprob: -5.203498363494873
    5. '.' → logprob: -5.828498363494873
    6. '```' → logprob: -7.453498363494873
    7. '(:' → logprob: -9.203497886657715
    8. ' ' → logprob: -9.203497886657715
    9. '[' → logprob: -9.453497886657715
    10. 's' → logprob: -9.703497886657715

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4233393371105194
    2. ':' → logprob: -1.5483393669128418
    3. '   ' → logprob: -2.298339366912842
    4. '```' → logprob: -4.173339366912842
    5. '.' → logprob: -5.298339366912842
    6. '\' → logprob: -5.923339366912842
    7. ''' → logprob: -6.548339366912842
    8. ' ' → logprob: -6.673339366912842
    9. '()' → logprob: -6.923339366912842
    10. '():' → logprob: -7.048339366912842

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09113116562366486
    2. '    ' → logprob: -2.9661312103271484
    3. '   ' → logprob: -4.216131210327148
    4. ' def' → logprob: -5.091131210327148
    5. ' pass' → logprob: -6.091131210327148
    6. '<|end|>' → logprob: -6.091131210327148
    7. ' 
' → logprob: -6.341131210327148
    8. 's' → logprob: -7.091131210327148
    9. '```' → logprob: -7.216131210327148
    10. ' ```' → logprob: -7.341131210327148

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.23244081437587738
    2. '__' → logprob: -1.9824408292770386
    3. ' ' → logprob: -2.732440710067749
    4. ' init' → logprob: -6.107440948486328
    5. ' ' → logprob: -6.607440948486328
    6. '_' → logprob: -8.857440948486328
    7. '    ' → logprob: -9.232440948486328
    8. '  ' → logprob: -9.357440948486328
    9. 'init' → logprob: -9.482440948486328
    10. ' ```' → logprob: -9.607440948486328

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7835754988482222e-05
    2. ' init' → logprob: -11.000018119812012
    3. '_init' → logprob: -13.875018119812012
    4. 'ini' → logprob: -16.625017166137695
    5. '	init' → logprob: -17.125017166137695
    6. 'i' → logprob: -17.375017166137695
    7. '_' → logprob: -18.375017166137695
    8. 'in' → logprob: -18.750017166137695
    9. 'inite' → logprob: -20.125017166137695
    10. '__' → logprob: -20.125017166137695

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3727414011955261
    2. '__' → logprob: -1.247741460800171
    3. '(' → logprob: -4.122741222381592
    4. '__(
' → logprob: -5.497741222381592
    5. '_' → logprob: -6.247741222381592
    6. '(self' → logprob: -7.747741222381592
    7. '__((' → logprob: -7.747741222381592
    8. '```' → logprob: -7.872741222381592
    9. '__(*' → logprob: -9.12274169921875
    10. '__('' → logprob: -9.24774169921875

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024920646101236343
    2. ' self' → logprob: -6.0024919509887695
    3. '(self' → logprob: -11.87749195098877
    4. ')' → logprob: -12.37749195098877
    5. ' ' → logprob: -13.75249195098877
    6. 'ch' → logprob: -14.12749195098877
    7. '	self' → logprob: -14.37749195098877
    8. ' )' → logprob: -14.37749195098877
    9. '       ' → logprob: -14.87749195098877
    10. '_self' → logprob: -15.25249195098877

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06085122004151344
    2. 'self' → logprob: -3.0608513355255127
    3. ')' → logprob: -5.560851097106934
    4. '):' → logprob: -5.935851097106934
    5. ' ,' → logprob: -6.435851097106934
    6. '(self' → logprob: -6.935851097106934
    7. '_self' → logprob: -7.185851097106934
    8. '_' → logprob: -7.435851097106934
    9. ' self' → logprob: -7.560851097106934
    10. ',self' → logprob: -8.435851097106934

Token 11: ' height' (ID: 4679)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11347711831331253
    2. ' self' → logprob: -2.2384772300720215
    3. 's' → logprob: -8.488476753234863
    4. ')' → logprob: -8.613476753234863
    5. ' )' → logprob: -9.363476753234863
    6. 'weight' → logprob: -10.238476753234863
    7. ' chocolate' → logprob: -10.488476753234863
    8. 'name' → logprob: -10.738476753234863
    9. 'width' → logprob: -11.238476753234863
    10. 'size' → logprob: -11.738476753234863

Token 12: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07122546434402466
    2. '):' → logprob: -2.94622540473938
    3. ')' → logprob: -4.321225643157959
    4. '=' → logprob: -6.071225643157959
    5. ':' → logprob: -8.0712251663208
    6. ' ,' → logprob: -9.0712251663208
    7. '   ' → logprob: -9.6962251663208
    8. '_' → logprob: -10.6962251663208
    9. '<|end|>' → logprob: -11.3212251663208
    10. ',
' → logprob: -11.6962251663208

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47415581345558167
    2. ' int' → logprob: -0.9741557836532593
    3. ':int' → logprob: -10.47415542602539
    4. '=int' → logprob: -10.72415542602539
    5. ' ' → logprob: -11.84915542602539
    6. '<int' → logprob: -12.72415542602539
    7. '(int' → logprob: -12.84915542602539
    8. '    ' → logprob: -12.84915542602539
    9. ',int' → logprob: -13.22415542602539
    10. '[int' → logprob: -13.47415542602539

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055670637637376785
    2. '):' → logprob: -3.055670738220215
    3. ')' → logprob: -5.055670738220215
    4. '   ' → logprob: -7.555670738220215
    5. ':' → logprob: -10.430670738220215
    6. '):
' → logprob: -10.680670738220215
    7. ',
' → logprob: -10.805670738220215
    8. ' ,' → logprob: -10.805670738220215
    9. '       ' → logprob: -11.305670738220215
    10. ',int' → logprob: -11.555670738220215

Token 15: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.14561745524406433
    2. 'width' → logprob: -2.1456174850463867
    3. ' weight' → logprob: -4.145617485046387
    4. 'weight' → logprob: -6.020617485046387
    5. ' chocolate' → logprob: -9.145617485046387
    6. ' ' → logprob: -10.395617485046387
    7. ',width' → logprob: -11.145617485046387
    8. '    ' → logprob: -11.270617485046387
    9. ' length' → logprob: -11.395617485046387
    10. '	width' → logprob: -11.520617485046387

Token 16: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3536248803138733
    2. ')' → logprob: -1.7286248207092285
    3. ':' → logprob: -2.2286248207092285
    4. ',' → logprob: -4.4786248207092285
    5. '):
' → logprob: -7.2286248207092285
    6. '=' → logprob: -8.353625297546387
    7. '   ' → logprob: -8.853625297546387
    8. '```' → logprob: -9.853625297546387
    9. '),' → logprob: -10.728625297546387
    10. ' ' → logprob: -11.103625297546387

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31346023082733154
    2. 'int' → logprob: -1.3134602308273315
    3. ')' → logprob: -8.688460350036621
    4. ':int' → logprob: -11.313460350036621
    5. '=int' → logprob: -12.063460350036621
    6. ' )' → logprob: -12.813460350036621
    7. ']int' → logprob: -12.813460350036621
    8. '[int' → logprob: -13.188460350036621
    9. '(int' → logprob: -13.563460350036621
    10. ',int' → logprob: -13.688460350036621

Token 18: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010727196000516415
    2. ')' → logprob: -4.635727405548096
    3. ',' → logprob: -7.385727405548096
    4. '):
' → logprob: -8.510726928710938
    5. ':' → logprob: -9.635726928710938
    6. '   ' → logprob: -9.885726928710938
    7. '```' → logprob: -10.885726928710938
    8. '),' → logprob: -12.760726928710938
    9. ''):' → logprob: -12.885726928710938
    10. ')>' → logprob: -13.885726928710938

Token 19: ' grid' (ID: 10586)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.18283124268054962
    2. ' length' → logprob: -2.432831287384033
    3. ' depth' → logprob: -3.307831287384033
    4. 'weight' → logprob: -4.182831287384033
    5. ' color' → logprob: -4.432831287384033
    6. 'length' → logprob: -5.182831287384033
    7. 'depth' → logprob: -5.807831287384033
    8. ' chocolate' → logprob: -6.057831287384033
    9. 'color' → logprob: -6.932831287384033
    10. ' type' → logprob: -7.057831287384033

Token 20: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030083680525422096
    2. '):' → logprob: -3.530083656311035
    3. '   ' → logprob: -9.405083656311035
    4. ' :' → logprob: -9.655083656311035
    5. ')' → logprob: -9.780083656311035
    6. ',' → logprob: -10.155083656311035
    7. '):
' → logprob: -10.405083656311035
    8. ' ):' → logprob: -10.655083656311035
    9. '[' → logprob: -11.030083656311035
    10. '```' → logprob: -12.530083656311035

Token 21: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.3221609592437744
    2. ' List' → logprob: -1.8221609592437744
    3. '[List' → logprob: -3.0721609592437744
    4. '[int' → logprob: -3.8221609592437744
    5. '[' → logprob: -4.072160720825195
    6. 'list' → logprob: -4.697160720825195
    7. ' list' → logprob: -5.072160720825195
    8. ' [' → logprob: -5.822160720825195
    9. ')' → logprob: -6.322160720825195
    10. 'int' → logprob: -6.697160720825195

Token 22: '[str' (ID: 33439)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024753010366111994
    2. ')' → logprob: -7.127475261688232
    3. '):
' → logprob: -7.502475261688232
    4. ':' → logprob: -7.502475261688232
    5. '[' → logprob: -8.00247573852539
    6. '   ' → logprob: -9.25247573852539
    7. '[int' → logprob: -9.25247573852539
    8. ',' → logprob: -11.25247573852539
    9. ']:' → logprob: -12.25247573852539
    10. ' ):' → logprob: -12.50247573852539

Token 23: ']):
' (ID: 51989)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4336894154548645
    2. ']):' → logprob: -1.3086893558502197
    3. ']' → logprob: -2.5586893558502197
    4. ']:' → logprob: -6.308689594268799
    5. ']])' → logprob: -6.933689594268799
    6. '],' → logprob: -7.058689594268799
    7. ']):
' → logprob: -8.68368911743164
    8. '[str' → logprob: -9.18368911743164
    9. '])]' → logprob: -9.43368911743164
    10. '[' → logprob: -9.43368911743164

Token 24: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31527620553970337
    2. '       ' → logprob: -1.3152761459350586
    3. '):' → logprob: -7.690276145935059
    4. '```' → logprob: -7.940276145935059
    5. ':
' → logprob: -8.190276145935059
    6. '   ' → logprob: -8.190276145935059
    7. '<|end|>' → logprob: -8.565276145935059
    8. '\n' → logprob: -9.565276145935059
    9. ' :' → logprob: -9.690276145935059
    10. '\' → logprob: -10.065276145935059

Token 25: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5849507451057434
    2. '       ' → logprob: -0.8349507451057434
    3. ' self' → logprob: -5.584950923919678
    4. '   ' → logprob: -5.709950923919678
    5. '```' → logprob: -6.584950923919678
    6. '\' → logprob: -8.95995044708252
    7. '           ' → logprob: -8.95995044708252
    8. '        ' → logprob: -9.83495044708252
    9. '<|end|>' → logprob: -10.58495044708252
    10. '\n' → logprob: -11.08495044708252

Token 26: '.height' (ID: 11682)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00387061620131135
    2. '.height' → logprob: -5.753870487213135
    3. '.grid' → logprob: -7.878870487213135
    4. ' .' → logprob: -8.253870964050293
    5. '.width' → logprob: -11.878870964050293
    6. '.is' → logprob: -12.378870964050293
    7. '.he' → logprob: -12.503870964050293
    8. 'height' → logprob: -12.628870964050293
    9. '   ' → logprob: -12.878870964050293
    10. '.title' → logprob: -13.503870964050293

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1531084179878235
    2. ' =' → logprob: -3.1531083583831787
    3. '.' → logprob: -3.4031083583831787
    4. '<|end|>' → logprob: -3.7781083583831787
    5. ')' → logprob: -4.653108596801758
    6. '_' → logprob: -4.778108596801758
    7. ',' → logprob: -4.778108596801758
    8. '   ' → logprob: -4.903108596801758
    9. '       ' → logprob: -5.903108596801758
    10. ' ' → logprob: -6.028108596801758

Token 28: ' height' (ID: 4679)
  Prédit: ' height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.20141683518886566
    2. 'height' → logprob: -1.7014168500900269
    3. '	height' → logprob: -13.451416969299316
    4. '(height' → logprob: -13.951416969299316
    5. 'int' → logprob: -15.076416969299316
    6. ' ' → logprob: -15.326416969299316
    7. ' ' → logprob: -15.701416969299316
    8. '_height' → logprob: -16.076416015625
    9. 'Height' → logprob: -16.451416015625
    10. '   ' → logprob: -16.451416015625

Token 29: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0799345076084137
    2. '.' → logprob: -2.954934597015381
    3. '<|end|>' → logprob: -4.579934597015381
    4. '```' → logprob: -5.329934597015381
    5. '\' → logprob: -5.954934597015381
    6. 'self' → logprob: -6.454934597015381
    7. ')' → logprob: -6.704934597015381
    8. '        
' → logprob: -6.829934597015381
    9. ',' → logprob: -6.954934597015381
    10. '        ' → logprob: -7.829934597015381

Token 30: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5848645567893982
    2. '       ' → logprob: -0.8348645567893982
    3. '```' → logprob: -6.084864616394043
    4. 'self' → logprob: -6.334864616394043
    5. ')' → logprob: -6.709864616394043
    6. '[' → logprob: -7.459864616394043
    7. '   ' → logprob: -7.834864616394043
    8. '        ' → logprob: -7.834864616394043
    9. '<|end|>' → logprob: -7.834864616394043
    10. ',' → logprob: -7.834864616394043

Token 31: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5687645673751831
    2. '       ' → logprob: -2.0687646865844727
    3. '        ' → logprob: -2.1937646865844727
    4. 'width' → logprob: -2.5687646865844727
    5. ' self' → logprob: -2.9437646865844727
    6. ' ' → logprob: -3.1937646865844727
    7. ' 
' → logprob: -5.193764686584473
    8. ' width' → logprob: -5.443764686584473
    9. '    ' → logprob: -6.193764686584473
    10. '
' → logprob: -6.193764686584473

Token 32: '.width' (ID: 11038)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003428531577810645
    2. '.grid' → logprob: -6.7534284591674805
    3. '.width' → logprob: -6.7534284591674805
    4. '.height' → logprob: -6.8784284591674805
    5. ' .' → logprob: -10.25342845916748
    6. 'height' → logprob: -13.62842845916748
    7. ').' → logprob: -13.62842845916748
    8. '<|end|>' → logprob: -13.75342845916748
    9. '.content' → logprob: -13.87842845916748
    10. '.w' → logprob: -13.87842845916748

Token 33: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7605054378509521
    2. '=' → logprob: -1.2605054378509521
    3. '<|end|>' → logprob: -1.6355054378509521
    4. ')' → logprob: -3.385505437850952
    5. ' =' → logprob: -4.885505676269531
    6. ',' → logprob: -4.885505676269531
    7. '<|end|>' → logprob: -5.760505676269531
    8. ' ' → logprob: -7.760505676269531
    9. ' .' → logprob: -8.385505676269531
    10. '[' → logprob: -8.385505676269531

Token 34: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.014172209426760674
    2. 'width' → logprob: -4.264172077178955
    3. ' ' → logprob: -12.389172554016113
    4. '(width' → logprob: -13.014172554016113
    5. ' grid' → logprob: -14.139172554016113
    6. '	width' → logprob: -14.264172554016113
    7. '_width' → logprob: -15.264172554016113
    8. ' ' → logprob: -15.389172554016113
    9. '.width' → logprob: -16.014171600341797
    10. ';width' → logprob: -16.389171600341797

Token 35: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05328787490725517
    2. '<|end|>' → logprob: -3.053287982940674
    3. '
' → logprob: -6.553287982940674
    4. '\n' → logprob: -7.053287982940674
    5. '        
' → logprob: -7.428287982940674
    6. '\' → logprob: -7.553287982940674
    7. '   ' → logprob: -8.178287506103516
    8. 'newline' → logprob: -8.553287506103516
    9. ' ' → logprob: -8.928287506103516
    10. ' 
' → logprob: -9.053287506103516

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5246464014053345
    2. '<|end|>' → logprob: -0.8996464014053345
    3. '<|end|>' → logprob: -7.649646282196045
    4. '   ' → logprob: -8.274646759033203
    5. ' ' → logprob: -9.024646759033203
    6. '
' → logprob: -9.024646759033203
    7. '        ' → logprob: -9.024646759033203
    8. '        
' → logprob: -9.524646759033203
    9. ' 
' → logprob: -9.899646759033203
    10. 'newline' → logprob: -10.399646759033203

Token 37: ' self' (ID: 1051)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.21665026247501373
    2. ' grid' → logprob: -1.7166502475738525
    3. ' ' → logprob: -4.966650485992432
    4. '       ' → logprob: -6.091650485992432
    5. '        ' → logprob: -7.091650485992432
    6. '[' → logprob: -7.091650485992432
    7. '\' → logprob: -7.716650485992432
    8. '\n' → logprob: -7.841650485992432
    9. ' 
' → logprob: -7.966650485992432
    10. '    ' → logprob: -8.091650009155273

Token 38: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0010584142291918397
    2. '.' → logprob: -6.876058578491211
    3. '._' → logprob: -12.376058578491211
    4. '.cells' → logprob: -12.501058578491211
    5. '.rows' → logprob: -12.751058578491211
    6. '.height' → logprob: -13.126058578491211
    7. '.Grid' → logprob: -13.376058578491211
    8. '.content' → logprob: -13.501058578491211
    9. '.g' → logprob: -14.251058578491211
    10. '.gr' → logprob: -14.376058578491211

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07374425232410431
    2. ' =' → logprob: -3.073744297027588
    3. '[' → logprob: -3.823744297027588
    4. '.' → logprob: -6.823744297027588
    5. '[:]' → logprob: -6.823744297027588
    6. '<|end|>' → logprob: -8.32374382019043
    7. '.append' → logprob: -8.69874382019043
    8. '   ' → logprob: -9.32374382019043
    9. ')' → logprob: -9.44874382019043
    10. '```' → logprob: -10.19874382019043

Token 40: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.47410017251968384
    2. ' grid' → logprob: -0.9741001725196838
    3. ' [' → logprob: -11.599100112915039
    4. '	grid' → logprob: -12.849100112915039
    5. '(grid' → logprob: -12.849100112915039
    6. '.grid' → logprob: -12.849100112915039
    7. '[]' → logprob: -13.474100112915039
    8. ' []' → logprob: -13.599100112915039
    9. '[' → logprob: -13.849100112915039
    10. '_grid' → logprob: -14.849100112915039

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5006188750267029
    2. '
' → logprob: -1.1256189346313477
    3. '    
' → logprob: -3.8756189346313477
    4. '<|end|>' → logprob: -3.8756189346313477
    5. '\n' → logprob: -4.875618934631348
    6. '\' → logprob: -5.375618934631348
    7. '.' → logprob: -5.375618934631348
    8. 'def' → logprob: -6.375618934631348
    9. '[' → logprob: -6.375618934631348
    10. '```' → logprob: -7.000618934631348

Token 42: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22006173431873322
    2. '
' → logprob: -1.9700617790222168
    3. '    
' → logprob: -3.220061779022217
    4. '\' → logprob: -5.970061779022217
    5. '\n' → logprob: -6.220061779022217
    6. ':' → logprob: -6.345061779022217
    7. 'def' → logprob: -6.470061779022217
    8. '```' → logprob: -6.595061779022217
    9. '  
' → logprob: -6.845061779022217
    10. '<|end|>' → logprob: -6.970061779022217

Token 43: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1785443276166916
    2. '
' → logprob: -2.803544282913208
    3. '    
' → logprob: -3.178544282913208
    4. 'def' → logprob: -3.428544282913208
    5. ' 
' → logprob: -4.553544521331787
    6. ' def' → logprob: -4.678544521331787
    7. ')' → logprob: -6.928544521331787
    8. ',' → logprob: -7.178544521331787
    9. '    ' → logprob: -7.303544521331787
    10. ' ' → logprob: -7.303544521331787

Token 44: '.horizontal' (ID: 96605)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0021505001932382584
    2. '._' → logprob: -7.127150535583496
    3. '.grid' → logprob: -7.877150535583496
    4. '.is' → logprob: -8.377150535583496
    5. '.size' → logprob: -9.252150535583496
    6. ' .' → logprob: -9.377150535583496
    7. '.height' → logprob: -9.627150535583496
    8. '.count' → logprob: -10.252150535583496
    9. '.rows' → logprob: -10.627150535583496
    10. '.__' → logprob: -10.627150535583496

Token 45: '_c' (ID: 1303)
  Prédit: '_break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_break' → logprob: -0.748012125492096
    2. '_c' → logprob: -1.1230120658874512
    3. '_lines' → logprob: -2.498012065887451
    4. '_s' → logprob: -2.998012065887451
    5. '_' → logprob: -3.248012065887451
    6. '_b' → logprob: -4.998012065887451
    7. '_cut' → logprob: -5.123012065887451
    8. '_split' → logprob: -5.623012065887451
    9. 'Cuts' → logprob: -6.123012065887451
    10. '_edges' → logprob: -6.248012065887451

Token 46: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.0019956084433943033
    2. 'ut' → logprob: -6.50199556350708
    3. 'ount' → logprob: -8.251996040344238
    4. 'h' → logprob: -9.751996040344238
    5. 'ont' → logprob: -10.001996040344238
    6. 'on' → logprob: -10.126996040344238
    7. 'utting' → logprob: -10.626996040344238
    8. 'l' → logprob: -11.876996040344238
    9. 'o' → logprob: -12.126996040344238
    10. 'om' → logprob: -12.251996040344238

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1004125103354454
    2. '=' → logprob: -2.350412607192993
    3. '_' → logprob: -9.350412368774414
    4. '_count' → logprob: -10.100412368774414
    5. '=[]' → logprob: -10.725412368774414
    6. 's' → logprob: -10.725412368774414
    7. '_counts' → logprob: -11.350412368774414
    8. ' ' → logprob: -11.725412368774414
    9. '_spaces' → logprob: -13.850412368774414
    10. ',' → logprob: -13.850412368774414

Token 48: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.26140129566192627
    2. '[]' → logprob: -1.5114012956619263
    3. '0' → logprob: -4.761401176452637
    4. ' ' → logprob: -7.136401176452637
    5. '[' → logprob: -10.386401176452637
    6. ' [' → logprob: -10.636401176452637
    7. ' []
' → logprob: -11.761401176452637
    8. '1' → logprob: -12.511401176452637
    9. '[]
' → logprob: -12.636401176452637
    10. '[]

' → logprob: -13.511401176452637

Token 49: 'False' (ID: 8168)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005174091784283519
    2. ']' → logprob: -7.62551736831665
    3. '-' → logprob: -11.125517845153809
    4. ' ' → logprob: -12.375517845153809
    5. '[' → logprob: -12.500517845153809
    6. '[]' → logprob: -13.125517845153809
    7. 'True' → logprob: -13.375517845153809
    8. 'False' → logprob: -13.500517845153809
    9. '(' → logprob: -14.375517845153809
    10. '   ' → logprob: -15.125517845153809

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20648355782032013
    2. ',' → logprob: -1.7064836025238037
    3. ' ]' → logprob: -5.456483364105225
    4. ' for' → logprob: -7.706483364105225
    5. ' ,' → logprob: -9.206483840942383
    6. ')]' → logprob: -9.581483840942383
    7. ')' → logprob: -9.581483840942383
    8. ',
' → logprob: -10.456483840942383
    9. '<|end|>' → logprob: -10.706483840942383
    10. ']*' → logprob: -11.456483840942383

Token 51: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3152618706226349
    2. ',' → logprob: -2.0652618408203125
    3. '[' → logprob: -2.3152618408203125
    4. ' for' → logprob: -3.8152618408203125
    5. '<|end|>' → logprob: -4.8152618408203125
    6. '*' → logprob: -5.4402618408203125
    7. ' ]' → logprob: -5.5652618408203125
    8. '0' → logprob: -6.1902618408203125
    9. 'for' → logprob: -7.0652618408203125
    10. ')' → logprob: -7.3152618408203125

Token 52: ' (' (ID: 350)
  Prédit: '(height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(height' → logprob: -0.18884871900081635
    2. '(self' → logprob: -2.3138487339019775
    3. ' (' → logprob: -2.6888487339019775
    4. '(' → logprob: -6.063848495483398
    5. 'height' → logprob: -6.063848495483398
    6. 'self' → logprob: -7.938848495483398
    7. ' height' → logprob: -9.188848495483398
    8. ' self' → logprob: -9.688848495483398
    9. '(width' → logprob: -10.563848495483398
    10. '(length' → logprob: -11.188848495483398

Token 53: 'self' (ID: 1156)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.14320823550224304
    2. 'self' → logprob: -2.0182082653045654
    3. ' height' → logprob: -7.893208026885986
    4. ' self' → logprob: -9.393208503723145
    5. '   ' → logprob: -10.393208503723145
    6. '(height' → logprob: -10.393208503723145
    7. 'width' → logprob: -12.268208503723145
    8. ' ' → logprob: -13.018208503723145
    9. '(self' → logprob: -13.268208503723145
    10. '       ' → logprob: -13.768208503723145

Token 54: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -5.478889215737581e-05
    2. '.' → logprob: -10.375054359436035
    3. '.width' → logprob: -10.875054359436035
    4. 'height' → logprob: -12.375054359436035
    5. '.horizontal' → logprob: -15.375054359436035
    6. '	height' → logprob: -17.00005531311035
    7. ' .' → logprob: -17.12505531311035
    8. '.he' → logprob: -17.25005531311035
    9. ' height' → logprob: -18.25005531311035
    10. '.vertical' → logprob: -18.37505531311035

Token 55: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19076140224933624
    2. '-' → logprob: -1.8157614469528198
    3. ')' → logprob: -5.690761566162109
    4. ' )' → logprob: -5.815761566162109
    5. '+' → logprob: -5.940761566162109
    6. ' +' → logprob: -6.440761566162109
    7. ' ' → logprob: -7.940761566162109
    8. '<|end|>' → logprob: -12.31576156616211
    9. '-)' → logprob: -12.44076156616211
    10. '1' → logprob: -12.81576156616211

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04860088601708412
    2. ' ' → logprob: -3.048600912094116
    3. '<|end|>' → logprob: -11.298601150512695
    4. '<|end|>' → logprob: -14.673601150512695
    5. ')' → logprob: -15.673601150512695
    6. '```' → logprob: -16.048601150512695
    7. '2' → logprob: -16.423601150512695
    8. '0' → logprob: -16.548601150512695
    9. '۱' → logprob: -16.923601150512695
    10. '  ' → logprob: -17.173601150512695

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -17.000024795532227
    4. '   ' → logprob: -17.875024795532227
    5. '```' → logprob: -18.125024795532227
    6. '0' → logprob: -18.125024795532227
    7. '2' → logprob: -18.625024795532227
    8. ')' → logprob: -18.750024795532227
    9. '۱' → logprob: -19.687524795532227
    10. '  ' → logprob: -19.750024795532227

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5954712075181305e-05
    2. ' )' → logprob: -10.500036239624023
    3. ']' → logprob: -12.500036239624023
    4. ')]' → logprob: -13.125036239624023
    5. ')])' → logprob: -14.625036239624023
    6. '<|end|>' → logprob: -14.625036239624023
    7. ')
' → logprob: -14.875036239624023
    8. '))' → logprob: -15.375036239624023
    9. '),' → logprob: -15.625036239624023
    10. '）' → logprob: -15.750036239624023

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '.vertical' (ID: 104067)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013704678043723106
    2. '.vertical' → logprob: -4.388704776763916
    3. '.horizontal' → logprob: -7.013704776763916
    4. '.period' → logprob: -9.138704299926758
    5. ' .' → logprob: -9.263704299926758
    6. 'vertical' → logprob: -10.388704299926758
    7. '.user' → logprob: -10.638704299926758
    8. '.is' → logprob: -12.138704299926758
    9. '.Vertical' → logprob: -12.888704299926758
    10. '.s' → logprob: -13.638704299926758

Token 62: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0010869937250390649
    2. '_' → logprob: -7.001087188720703
    3. '_s' → logprob: -9.626087188720703
    4. '_cut' → logprob: -10.001087188720703
    5. ' _' → logprob: -10.126087188720703
    6. '<|end|>' → logprob: -11.251087188720703
    7. '\' → logprob: -13.501087188720703
    8. ')_' → logprob: -14.001087188720703
    9. '```' → logprob: -14.126087188720703
    10. '<|end|>' → logprob: -14.251087188720703

Token 63: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.0025718524120748043
    2. 'u' → logprob: -6.002572059631348
    3. '_' → logprob: -10.002572059631348
    4. 'ut' → logprob: -10.127572059631348
    5. '_u' → logprob: -12.252572059631348
    6. '```' → logprob: -13.502572059631348
    7. ' uts' → logprob: -14.002572059631348
    8. '_ut' → logprob: -14.252572059631348
    9. '_cut' → logprob: -14.502572059631348
    10. 'cuts' → logprob: -14.752572059631348

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301128908991814
    2. '=' → logprob: -3.16801118850708
    3. '[' → logprob: -12.293011665344238
    4. ' ' → logprob: -12.668011665344238
    5. '=[' → logprob: -13.793011665344238
    6. ' =[' → logprob: -14.168011665344238
    7. ']' → logprob: -14.418011665344238
    8. '=[]' → logprob: -14.543011665344238
    9. 's' → logprob: -14.918011665344238
    10. ')' → logprob: -14.918011665344238

Token 65: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12693093717098236
    2. '[' → logprob: -2.1269309520721436
    3. ' ' → logprob: -12.876931190490723
    4. ' ' → logprob: -16.001930236816406
    5. '   ' → logprob: -16.126930236816406
    6. 'False' → logprob: -16.876930236816406
    7. '  ' → logprob: -17.001930236816406
    8. ' False' → logprob: -17.751930236816406
    9. '	' → logprob: -19.126930236816406
    10. '    ' → logprob: -19.251930236816406

Token 66: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.002478273818269372
    2. ' False' → logprob: -6.002478122711182
    3. '(False' → logprob: -12.87747859954834
    4. '=False' → logprob: -18.752477645874023
    5. '.False' → logprob: -18.877477645874023
    6. '[' → logprob: -20.252477645874023
    7. '_false' → logprob: -20.502477645874023
    8. 'True' → logprob: -20.627477645874023
    9. 'false' → logprob: -20.877477645874023
    10. ' ' → logprob: -21.252477645874023

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017372576519846916
    2. ' ]' → logprob: -4.2673726081848145
    3. ')' → logprob: -5.7673726081848145
    4. ' *' → logprob: -10.892372131347656
    5. ' )' → logprob: -10.892372131347656
    6. ']*' → logprob: -11.517372131347656
    7. '']' → logprob: -12.142372131347656
    8. '}' → logprob: -12.392372131347656
    9. ' ' → logprob: -12.517372131347656
    10. '*' → logprob: -12.767372131347656

Token 68: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007957222871482372
    2. '*' → logprob: -5.007957458496094
    3. ' ' → logprob: -7.007957458496094
    4. '<|end|>' → logprob: -8.382957458496094
    5. ')' → logprob: -9.632957458496094
    6. ' (' → logprob: -11.007957458496094
    7. '*(' → logprob: -12.507957458496094
    8. '(' → logprob: -12.507957458496094
    9. ' #' → logprob: -13.382957458496094
    10. '<|end|>' → logprob: -13.507957458496094

Token 69: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.006779080722481012
    2. '(' → logprob: -5.006779193878174
    3. '(self' → logprob: -9.881778717041016
    4. '(s' → logprob: -12.631778717041016
    5. ' ' → logprob: -12.881778717041016
    6. '(w' → logprob: -13.256778717041016
    7. '(this' → logprob: -13.506778717041016
    8. '(space' → logprob: -13.881778717041016
    9. '(max' → logprob: -14.881778717041016
    10. '(n' → logprob: -15.131778717041016

Token 70: 'self' (ID: 1156)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1844485998153687
    2. 'self' → logprob: -1.3094485998153687
    3. '(self' → logprob: -1.4344485998153687
    4. ' self' → logprob: -1.6844485998153687
    5. '(' → logprob: -8.1844482421875
    6. ' ' → logprob: -10.8094482421875
    7. '   ' → logprob: -11.8094482421875
    8. '       ' → logprob: -12.5594482421875
    9. '	self' → logprob: -12.8094482421875
    10. '  ' → logprob: -12.9344482421875

Token 71: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.00015538577281404287
    2. '.' → logprob: -9.250155448913574
    3. 'width' → logprob: -10.000155448913574
    4. '.height' → logprob: -11.375155448913574
    5. ' .' → logprob: -13.250155448913574
    6. '   ' → logprob: -16.125154495239258
    7. '-' → logprob: -16.125154495239258
    8. '	width' → logprob: -16.125154495239258
    9. ' width' → logprob: -16.500154495239258
    10. ' -' → logprob: -16.875154495239258

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005266957450658083
    2. '-' → logprob: -5.255267143249512
    3. ' ' → logprob: -10.755267143249512
    4. ')' → logprob: -11.630267143249512
    5. ' )' → logprob: -13.505267143249512
    6. '1' → logprob: -14.255267143249512
    7. '   ' → logprob: -14.880267143249512
    8. ' ' → logprob: -15.880267143249512
    9. '2' → logprob: -16.380266189575195
    10. '  ' → logprob: -16.630266189575195

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020550064742565155
    2. ' ' → logprob: -3.895550012588501
    3. ')' → logprob: -11.770549774169922
    4. '-' → logprob: -16.270549774169922
    5. '   ' → logprob: -16.270549774169922
    6. ' )' → logprob: -16.770549774169922
    7. '2' → logprob: -16.895549774169922
    8. '<|end|>' → logprob: -17.020549774169922
    9. '```' → logprob: -17.270549774169922
    10. '0' → logprob: -17.770549774169922

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.000059127807617
    4. ')' → logprob: -17.750059127807617
    5. '2' → logprob: -18.500059127807617
    6. '```' → logprob: -18.625059127807617
    7. '-' → logprob: -19.000059127807617
    8. '       ' → logprob: -19.625059127807617
    9. '１' → logprob: -19.812559127807617
    10. '  ' → logprob: -19.937559127807617

Token 75: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2617008400848135e-05
    2. ')
' → logprob: -10.375032424926758
    3. ' )' → logprob: -14.250032424926758
    4. '       ' → logprob: -15.375032424926758
    5. '   ' → logprob: -15.500032424926758
    6. '<|end|>' → logprob: -16.125032424926758
    7. '`)' → logprob: -16.750032424926758
    8. ')

' → logprob: -17.750032424926758
    9. ')`' → logprob: -17.750032424926758
    10. '),' → logprob: -18.000032424926758

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07287540286779404
    2. '    
' → logprob: -3.197875499725342
    3. ' 
' → logprob: -3.947875499725342
    4. '
' → logprob: -5.822875499725342
    5. ' ' → logprob: -6.447875499725342
    6. 'def' → logprob: -6.572875499725342
    7. '  
' → logprob: -7.197875499725342
    8. ' def' → logprob: -7.322875499725342
    9. '    ' → logprob: -7.572875499725342
    10. '     
' → logprob: -7.572875499725342

Token 77: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06434928625822067
    2. ' def' → logprob: -3.3143491744995117
    3. 'def' (adapté à ' def') → logprob: -4.314349174499512
    4. ' ' → logprob: -5.564349174499512
    5. ' 
' → logprob: -5.564349174499512
    6. '    
' → logprob: -5.814349174499512
    7. '    ' → logprob: -7.439349174499512
    8. 'd' → logprob: -7.939349174499512
    9. ' \' → logprob: -8.689349174499512
    10. '  ' → logprob: -8.689349174499512

Token 78: ' can' (ID: 665)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0934168100357056
    2. ' make' → logprob: -1.7184168100357056
    3. ' horizontal' → logprob: -2.468416690826416
    4. ' space' → logprob: -2.593416690826416
    5. ' calculate' → logprob: -2.718416690826416
    6. ' is' → logprob: -2.843416690826416
    7. ' check' → logprob: -3.343416690826416
    8. ' _' → logprob: -3.843416690826416
    9. ' can' → logprob: -3.968416690826416
    10. ' mark' → logprob: -3.968416690826416

Token 79: '_cut' (ID: 81399)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10560901463031769
    2. '_make' → logprob: -2.9806089401245117
    3. '_cut' → logprob: -3.3556089401245117
    4. '_split' → logprob: -4.980608940124512
    5. '_break' → logprob: -5.730608940124512
    6. '_e' → logprob: -6.230608940124512
    7. ' _' → logprob: -7.605608940124512
    8. '_continue' → logprob: -7.855608940124512
    9. '_div' → logprob: -8.230608940124512
    10. '_take' → logprob: -8.605608940124512

Token 80: '_h' (ID: 3434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5712168216705322
    2. '_h' → logprob: -1.4462168216705322
    3. '_at' → logprob: -2.4462168216705322
    4. '_horizontal' → logprob: -2.9462168216705322
    5. '(self' → logprob: -3.0712168216705322
    6. '_here' → logprob: -5.821216583251953
    7. '(' → logprob: -6.071216583251953
    8. '_vert' → logprob: -6.196216583251953
    9. '_self' → logprob: -6.821216583251953
    10. '_between' → logprob: -6.821216583251953

Token 81: 'oriz' (ID: 8846)
  Prédit: 'orizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orizontal' → logprob: -0.12177174538373947
    2. 'oriz' → logprob: -3.121771812438965
    3. 'or' → logprob: -3.371771812438965
    4. '_' → logprob: -3.746771812438965
    5. 'orizon' → logprob: -5.621771812438965
    6. 'o' → logprob: -5.746771812438965
    7. 'orz' → logprob: -5.746771812438965
    8. '(self' → logprob: -6.871771812438965
    9. '```' → logprob: -7.371771812438965
    10. '_horizontal' → logprob: -7.746771812438965

Token 82: 'ont' (ID: 645)
  Prédit: 'ontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ontal' → logprob: -0.11071900278329849
    2. 'ont' → logprob: -2.4857189655303955
    3. '```' → logprob: -5.110719203948975
    4. '(self' → logprob: -6.235719203948975
    5. 'onal' → logprob: -6.360719203948975
    6. '_' → logprob: -6.610719203948975
    7. '   ' → logprob: -6.735719203948975
    8. 'on' → logprob: -7.110719203948975
    9. ')' → logprob: -7.485719203948975
    10. '#' → logprob: -7.610719203948975

Token 83: 'ally' (ID: 2146)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.4012795686721802
    2. 'ally' → logprob: -1.1512795686721802
    3. 'aly' → logprob: -4.401279449462891
    4. '   ' → logprob: -7.276279449462891
    5. '```' → logprob: -7.526279449462891
    6. '       ' → logprob: -8.90127944946289
    7. 'ly' → logprob: -9.52627944946289
    8. '[' → logprob: -9.83877944946289
    9. 'ion' → logprob: -10.15127944946289
    10. '           ' → logprob: -10.15127944946289

Token 84: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1816159039735794
    2. '(' → logprob: -1.806615948677063
    3. 'self' → logprob: -6.806615829467773
    4. ' (' → logprob: -7.681615829467773
    5. '(s' → logprob: -9.681615829467773
    6. '(
' → logprob: -10.056615829467773
    7. '_at' → logprob: -10.181615829467773
    8. ' self' → logprob: -10.681615829467773
    9. ' ' → logprob: -10.806615829467773
    10. '   ' → logprob: -10.931615829467773

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01104039791971445
    2. 'self' → logprob: -5.011040210723877
    3. '):' → logprob: -6.136040210723877
    4. ' ,' → logprob: -6.511040210723877
    5. ')' → logprob: -7.761040210723877
    6. ',index' → logprob: -9.761040687561035
    7. ',i' → logprob: -10.386040687561035
    8. ',line' → logprob: -10.511040687561035
    9. 'at' → logprob: -10.761040687561035
    10. ',row' → logprob: -11.011040687561035

Token 86: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.1770780235528946
    2. ' self' → logprob: -2.3020780086517334
    3. 'row' → logprob: -3.1770780086517334
    4. 'self' → logprob: -4.6770782470703125
    5. ' i' → logprob: -5.0520782470703125
    6. ' index' → logprob: -6.4270782470703125
    7. ' y' → logprob: -6.5520782470703125
    8. ' line' → logprob: -7.8020782470703125
    9. ' ' → logprob: -7.9270782470703125
    10. 'i' → logprob: -8.427078247070312

Token 87: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08277466148138046
    2. ' ):' → logprob: -3.2077746391296387
    3. '+' → logprob: -4.207774639129639
    4. ' +' → logprob: -4.582774639129639
    5. ')' → logprob: -4.582774639129639
    6. ':' → logprob: -6.457774639129639
    7. ' )' → logprob: -7.082774639129639
    8. '):
' → logprob: -7.582774639129639
    9. ',' → logprob: -7.957774639129639
    10. '_index' → logprob: -9.082775115966797

Token 88: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0824718326330185
    2. ' )' → logprob: -2.8324718475341797
    3. 'int' → logprob: -4.20747184753418
    4. '):' → logprob: -6.20747184753418
    5. ' int' → logprob: -6.45747184753418
    6. ' ):' → logprob: -7.33247184753418
    7. ':int' → logprob: -7.58247184753418
    8. '):
' → logprob: -8.83247184753418
    9. ' ' → logprob: -9.45747184753418
    10. '   ' → logprob: -9.58247184753418

Token 89: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4289981722831726
    2. ')' → logprob: -1.0539982318878174
    3. '):
' → logprob: -8.678997993469238
    4. ' ):' → logprob: -9.803997993469238
    5. ' )' → logprob: -10.678997993469238
    6. '   ' → logprob: -10.678997993469238
    7. ':' → logprob: -11.428997993469238
    8. ')->' → logprob: -12.428997993469238
    9. '):

' → logprob: -13.178997993469238
    10. ' ' → logprob: -13.303997993469238

Token 90: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009051773697137833
    2. '):' → logprob: -4.75905179977417
    3. '():' → logprob: -8.509051322937012
    4. ' :' → logprob: -8.884051322937012
    5. ')' → logprob: -10.509051322937012
    6. ':**' → logprob: -10.884051322937012
    7. ',' → logprob: -11.884051322937012
    8. ':
' → logprob: -12.009051322937012
    9. '(self' → logprob: -12.259051322937012
    10. '   ' → logprob: -12.259051322937012

Token 91: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.025618230924010277
    2. 'bool' → logprob: -3.775618314743042
    3. ' ' → logprob: -6.150618076324463
    4. '  ' → logprob: -9.650618553161621
    5. ' True' → logprob: -9.775618553161621
    6. ' ' → logprob: -10.650618553161621
    7. '	bool' → logprob: -10.775618553161621
    8. '   ' → logprob: -11.025618553161621
    9. '"' → logprob: -11.150618553161621
    10. ' "' → logprob: -11.275618553161621

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0046733953058719635
    2. '):' → logprob: -5.379673480987549
    3. ' :' → logprob: -10.87967300415039
    4. '():' → logprob: -11.50467300415039
    5. ':**' → logprob: -11.62967300415039
    6. ')' → logprob: -12.37967300415039
    7. ',' → logprob: -12.75467300415039
    8. ':
' → logprob: -12.87967300415039
    9. ':return' → logprob: -13.50467300415039
    10. '>:' → logprob: -13.62967300415039

Token 93: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19033968448638916
    2. '       ' → logprob: -2.1903395652770996
    3. ' :' → logprob: -3.3153395652770996
    4. ' ' → logprob: -4.0653395652771
    5. ')' → logprob: -5.9403395652771
    6. '   ' → logprob: -6.4403395652771
    7. '):' → logprob: -6.5653395652771
    8. '    ' → logprob: -7.6903395652771
    9. ' ):' → logprob: -7.8153395652771
    10. ' )' → logprob: -8.440340042114258

Token 94: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11825020611286163
    2. '#' (adapté à ' #') → logprob: -3.6182501316070557
    3. '       ' → logprob: -3.6182501316070557
    4. ' for' → logprob: -4.243250370025635
    5. ' \' → logprob: -4.743250370025635
    6. ' #' → logprob: -5.118250370025635
    7. '    ' → logprob: -5.243250370025635
    8. '   ' → logprob: -6.118250370025635
    9. ':' → logprob: -6.118250370025635
    10. ' 
' → logprob: -6.368250370025635

Token 95: ' A' (ID: 355)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19744651019573212
    2. 'for' → logprob: -2.197446584701538
    3. ' all' → logprob: -3.447446584701538
    4. ' return' → logprob: -4.072446346282959
    5. ' if' → logprob: -5.572446346282959
    6. 'all' → logprob: -5.572446346282959
    7. '#' → logprob: -5.572446346282959
    8. 'return' → logprob: -5.822446346282959
    9. ' #' → logprob: -6.697446346282959
    10. 'if' → logprob: -7.072446346282959

Token 96: ' horizontal' (ID: 25511)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5506999492645264
    2. 'll' → logprob: -1.9256999492645264
    3. '       ' → logprob: -2.0506999492645264
    4. ' ' → logprob: -2.3006999492645264
    5. 'for' → logprob: -2.6756999492645264
    6. '   ' → logprob: -3.0506999492645264
    7. 'row' → logprob: -3.0506999492645264
    8. 'return' → logprob: -3.1756999492645264
    9. ' return' → logprob: -3.1756999492645264
    10. '#' → logprob: -3.8006999492645264

Token 97: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.6933307647705078
    2. 'cut' → logprob: -1.3183307647705078
    3. ' for' → logprob: -2.318330764770508
    4. '_cut' → logprob: -2.568330764770508
    5. ')' → logprob: -4.193330764770508
    6. 'for' → logprob: -4.568330764770508
    7. ' line' → logprob: -4.568330764770508
    8. '       ' → logprob: -5.443330764770508
    9. ' if' → logprob: -5.568330764770508
    10. '
' → logprob: -6.318330764770508

Token 98: ' is' (ID: 382)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -1.214623212814331
    2. '<|end|>' → logprob: -1.214623212814331
    3. ' can' → logprob: -2.339623212814331
    4. ' at' → logprob: -2.464623212814331
    5. ' should' → logprob: -2.464623212814331
    6. ' would' → logprob: -3.214623212814331
    7. ' in' → logprob: -3.714623212814331
    8. ' ' → logprob: -3.964623212814331
    9. ' is' → logprob: -4.08962345123291
    10. ' will' → logprob: -4.71462345123291

Token 99: ' possible' (ID: 4149)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5736839175224304
    2. ' all' → logprob: -1.4486839771270752
    3. ' not' → logprob: -2.823683977127075
    4. ' possible' → logprob: -3.073683977127075
    5. 'True' → logprob: -3.198683977127075
    6. ' valid' → logprob: -4.073683738708496
    7. 'all' → logprob: -4.073683738708496
    8. 'possible' → logprob: -4.573683738708496
    9. 'not' → logprob: -5.323683738708496
    10. 'valid' → logprob: -6.073683738708496

Token 100: ' iff' (ID: 165577)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07415774464607239
    2. ' at' → logprob: -2.94915771484375
    3. '   ' → logprob: -5.07415771484375
    4. ' ' → logprob: -5.82415771484375
    5. '       ' → logprob: -5.82415771484375
    6. '<|end|>' → logprob: -6.32415771484375
    7. ' in' → logprob: -6.44915771484375
    8. ' only' → logprob: -7.07415771484375
    9. ':' → logprob: -7.44915771484375
    10. ',' → logprob: -7.44915771484375

Token 101: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1602092832326889
    2. ' all' → logprob: -2.0352091789245605
    3. 'self' → logprob: -4.6602091789245605
    4. 'not' → logprob: -5.6602091789245605
    5. ' not' → logprob: -6.2852091789245605
    6. ' self' → logprob: -7.1602091789245605
    7. ''all' → logprob: -7.2852091789245605
    8. 'row' → logprob: -7.4102091789245605
    9. ''' → logprob: -9.410209655761719
    10. '   ' → logprob: -9.535209655761719

Token 102: ' segments' (ID: 33749)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.067886583507061
    2. 'cell' → logprob: -3.4428865909576416
    3. ' self' → logprob: -5.3178863525390625
    4. 'c' → logprob: -5.3178863525390625
    5. 'cells' → logprob: -5.3178863525390625
    6. 's' → logprob: -5.6928863525390625
    7. '(self' → logprob: -5.6928863525390625
    8. 'x' → logprob: -5.9428863525390625
    9. 'all' → logprob: -6.0678863525390625
    10. 'grid' → logprob: -6.0678863525390625

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5416362881660461
    2. ' at' → logprob: -1.6666362285614014
    3. ' are' → logprob: -1.7916362285614014
    4. ' have' → logprob: -4.4166364669799805
    5. ' on' → logprob: -4.5416364669799805
    6. '       ' → logprob: -4.9166364669799805
    7. ' of' → logprob: -5.2916364669799805
    8. '[row' → logprob: -5.5416364669799805
    9. '   ' → logprob: -5.6666364669799805
    10. '[' → logprob: -6.0416364669799805

Token 104: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.709868848323822
    2. 'self' → logprob: -0.959868848323822
    3. ' range' → logprob: -2.334868907928467
    4. 'range' → logprob: -3.834868907928467
    5. ' the' → logprob: -5.959868907928467
    6. '   ' → logprob: -6.834868907928467
    7. ' row' → logprob: -7.459868907928467
    8. '
' → logprob: -7.584868907928467
    9. '[self' → logprob: -7.584868907928467
    10. 'row' → logprob: -8.084868431091309

Token 105: ' groove' (ID: 82774)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.8229119777679443
    2. 'row' → logprob: -0.9479119777679443
    3. 'grid' → logprob: -2.8229119777679443
    4. ' grid' → logprob: -2.9479119777679443
    5. ' same' → logprob: -3.3229119777679443
    6. 'same' → logprob: -4.697912216186523
    7. '   ' → logprob: -5.947912216186523
    8. 'self' → logprob: -6.197912216186523
    9. '[row' → logprob: -6.572912216186523
    10. ' previous' → logprob: -6.697912216186523

Token 106: ' line' (ID: 2543)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.5189070701599121
    2. ' at' → logprob: -1.393907070159912
    3. ' in' → logprob: -2.393907070159912
    4. ' are' → logprob: -3.643907070159912
    5. ' have' → logprob: -5.018907070159912
    6. '   ' → logprob: -5.143907070159912
    7. '       ' → logprob: -5.143907070159912
    8. '(row' → logprob: -5.643907070159912
    9. ' contain' → logprob: -6.143907070159912
    10. ' on' → logprob: -6.143907070159912

Token 107: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7854929566383362
    2. ' at' → logprob: -1.2854928970336914
    3. ' have' → logprob: -2.6604928970336914
    4. ' in' → logprob: -2.7854928970336914
    5. '[row' → logprob: -3.1604928970336914
    6. '   ' → logprob: -3.7854928970336914
    7. '       ' → logprob: -4.035492897033691
    8. ' contain' → logprob: -4.160492897033691
    9. ' ' → logprob: -4.535492897033691
    10. 's' → logprob: -5.410492897033691

Token 108: ' empty' (ID: 8213)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8409989476203918
    2. ' True' → logprob: -1.840998888015747
    3. ' '' → logprob: -2.715998888015747
    4. ' '#'' → logprob: -2.965998888015747
    5. ''s' → logprob: -3.340998888015747
    6. ' ' → logprob: -3.340998888015747
    7. ' '*'' → logprob: -3.340998888015747
    8. 'True' → logprob: -3.340998888015747
    9. ''#' → logprob: -3.340998888015747
    10. '"' → logprob: -4.215999126434326

Token 109: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3329025208950043
    2. '   ' → logprob: -2.207902431488037
    3. ' ' → logprob: -3.332902431488037
    4. ':' → logprob: -3.582902431488037
    5. '<|end|>' → logprob: -3.582902431488037
    6. ' and' → logprob: -3.832902431488037
    7. ' or' → logprob: -3.832902431488037
    8. ',' → logprob: -5.082902431488037
    9. '  ' → logprob: -5.332902431488037
    10. '    ' → logprob: -5.582902431488037

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011092972941696644
    2. '   ' → logprob: -5.2610931396484375
    3. '<|end|>' → logprob: -6.1360931396484375
    4. ':' → logprob: -7.1360931396484375
    5. ' ' → logprob: -8.011093139648438
    6. '.' → logprob: -8.011093139648438
    7. '    ' → logprob: -8.261093139648438
    8. '[' → logprob: -8.386093139648438
    9. '        ' → logprob: -8.386093139648438
    10. ',' → logprob: -8.386093139648438

Token 111: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3650072515010834
    2. ':' → logprob: -2.365007162094116
    3. '<|end|>' → logprob: -2.865007162094116
    4. ' ' → logprob: -2.990007162094116
    5. '   ' → logprob: -4.115007400512695
    6. '\n' → logprob: -4.240007400512695
    7. ' return' → logprob: -4.740007400512695
    8. '
' → logprob: -4.865007400512695
    9. ' for' → logprob: -4.865007400512695
    10. ':return' → logprob: -4.990007400512695

Token 112: ' groove' (ID: 82774)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43134477734565735
    2. '       ' → logprob: -1.681344747543335
    3. ' return' → logprob: -2.056344747543335
    4. ' ' → logprob: -4.556344985961914
    5. 'return' → logprob: -4.556344985961914
    6. 'for' → logprob: -5.181344985961914
    7. '   ' → logprob: -5.431344985961914
    8. ' if' → logprob: -6.181344985961914
    9. ')' → logprob: -7.681344985961914
    10. '    ' → logprob: -7.806344985961914

Token 113: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9890913963317871
    2. ' at' → logprob: -1.489091396331787
    3. ' in' → logprob: -1.989091396331787
    4. '_line' → logprob: -2.614091396331787
    5. '_' → logprob: -2.864091396331787
    6. '[line' → logprob: -3.364091396331787
    7. '_lines' → logprob: -4.239091396331787
    8. 'line' → logprob: -4.239091396331787
    9. '   ' → logprob: -4.364091396331787
    10. '_positions' → logprob: -4.864091396331787

Token 114: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2105720043182373
    2. '<|end|>' → logprob: -1.8355720043182373
    3. ':' → logprob: -1.9605720043182373
    4. ' in' → logprob: -2.5855720043182373
    5. ' =' → logprob: -2.7105720043182373
    6. '[row' → logprob: -2.9605720043182373
    7. ' at' → logprob: -3.2105720043182373
    8. '   ' → logprob: -3.5855720043182373
    9. '[' → logprob: -3.5855720043182373
    10. '<|end|>' → logprob: -3.8355720043182373

Token 115: ' between' (ID: 2870)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4870372712612152
    2. 'self' → logprob: -0.9870373010635376
    3. 'row' → logprob: -5.237037181854248
    4. ' row' → logprob: -5.237037181854248
    5. ' the' → logprob: -6.362037181854248
    6. 'the' → logprob: -8.862037658691406
    7. '       ' → logprob: -9.362037658691406
    8. '   ' → logprob: -9.362037658691406
    9. '(self' → logprob: -9.987037658691406
    10. '	self' → logprob: -10.362037658691406

Token 116: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34967711567878723
    2. 'row' → logprob: -1.3496770858764648
    3. ' self' → logprob: -3.974677085876465
    4. ' row' → logprob: -4.099677085876465
    5. '   ' → logprob: -8.474677085876465
    6. 'the' → logprob: -9.724677085876465
    7. ' the' → logprob: -10.474677085876465
    8. '[row' → logprob: -10.724677085876465
    9. '	row' → logprob: -10.724677085876465
    10. '	self' → logprob: -11.224677085876465

Token 117: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31800246238708496
    2. ' ' → logprob: -1.693002462387085
    3. '+' → logprob: -3.068002462387085
    4. 's' → logprob: -3.818002462387085
    5. ' +' → logprob: -4.818002700805664
    6. '[row' → logprob: -5.568002700805664
    7. 'and' → logprob: -6.068002700805664
    8. '<|end|>' → logprob: -6.943002700805664
    9. '-' → logprob: -7.068002700805664
    10. ')' → logprob: -7.193002700805664

Token 118: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.029774215072393417
    2. 'row' → logprob: -3.5297741889953613
    3. '	row' → logprob: -11.27977466583252
    4. '(row' → logprob: -11.65477466583252
    5. ' rows' → logprob: -14.27977466583252
    6. '[row' → logprob: -14.40477466583252
    7. '=row' → logprob: -15.15477466583252
    8. ' ' → logprob: -15.65477466583252
    9. '$row' → logprob: -16.029773712158203
    10. '.row' → logprob: -16.279773712158203

Token 119: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1045466884970665
    2. ' +' → logprob: -2.3545467853546143
    3. ' ' → logprob: -5.604546546936035
    4. 's' → logprob: -8.229546546936035
    5. '<|end|>' → logprob: -9.354546546936035
    6. ' row' → logprob: -9.479546546936035
    7. ' rows' → logprob: -10.229546546936035
    8. 'row' → logprob: -10.479546546936035
    9. ' and' → logprob: -10.604546546936035
    10. '(row' → logprob: -10.729546546936035

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002186426194384694
    2. ' ' → logprob: -6.127186298370361
    3. '<|end|>' → logprob: -13.87718677520752
    4. '   ' → logprob: -16.127185821533203
    5. '```' → logprob: -16.752185821533203
    6. '0' → logprob: -16.752185821533203
    7. '
' → logprob: -17.377185821533203
    8. 'row' → logprob: -17.502185821533203
    9. '  ' → logprob: -17.627185821533203
    10. '-' → logprob: -18.127185821533203

Token 121: ';' (ID: 26)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13851340115070343
    2. ' :' → logprob: -2.1385133266448975
    3. ' :
' → logprob: -5.763513565063477
    4. '<|end|>' → logprob: -6.013513565063477
    5. ' ' → logprob: -6.138513565063477
    6. ':
' → logprob: -6.888513565063477
    7. ':return' → logprob: -7.263513565063477
    8. '
' → logprob: -7.888513565063477
    9. ',' → logprob: -8.263513565063477
    10. '):' → logprob: -8.263513565063477

Token 122: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9432414770126343
    2. ' ' → logprob: -1.1932414770126343
    3. '       ' → logprob: -1.6932414770126343
    4. ' return' → logprob: -2.943241596221924
    5. '   ' → logprob: -4.568241596221924
    6. ' 
' → logprob: -4.568241596221924
    7. '        ' → logprob: -5.068241596221924
    8. '    ' → logprob: -5.193241596221924
    9. 'for' → logprob: -5.193241596221924
    10. ' if' → logprob: -5.443241596221924

Token 123: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5197724103927612
    2. ' self' → logprob: -1.2697724103927612
    3. 'self' → logprob: -2.269772529602051
    4. ' for' → logprob: -4.894772529602051
    5. 'all' → logprob: -5.144772529602051
    6. ' not' → logprob: -6.019772529602051
    7. '       ' → logprob: -6.519772529602051
    8. '
' → logprob: -7.269772529602051
    9. 'for' → logprob: -7.269772529602051
    10. ' ' → logprob: -7.519772529602051

Token 124: ' columns' (ID: 15697)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0702403783798218
    2. ' col' → logprob: -1.5702403783798218
    3. 'self' → logprob: -2.3202404975891113
    4. ' for' → logprob: -2.5702404975891113
    5. ' range' → logprob: -2.8202404975891113
    6. ' columns' → logprob: -2.9452404975891113
    7. 'col' → logprob: -3.0702404975891113
    8. ' cells' → logprob: -3.8202404975891113
    9. 'columns' → logprob: -3.9452404975891113
    10. 'range' → logprob: -4.195240497589111

Token 125: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06028607487678528
    2. '<|end|>' → logprob: -3.810286045074463
    3. ' for' → logprob: -4.935286045074463
    4. ' ' → logprob: -5.060286045074463
    5. ' :' → logprob: -5.185286045074463
    6. '       ' → logprob: -5.435286045074463
    7. ',' → logprob: -5.685286045074463
    8. ' if' → logprob: -6.435286045074463
    9. '   ' → logprob: -6.560286045074463
    10. ' in' → logprob: -6.935286045074463

Token 126: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030994828790426254
    2. '   ' → logprob: -5.155994892120361
    3. ' :' → logprob: -5.280994892120361
    4. '       ' → logprob: -5.405994892120361
    5. ' ' → logprob: -5.655994892120361
    6. ' and' → logprob: -6.280994892120361
    7. ' if' → logprob: -6.405994892120361
    8. ',' → logprob: -6.530994892120361
    9. ':
' → logprob: -6.655994892120361
    10. ' for' → logprob: -6.780994892120361

Token 127: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1655367612838745
    2. ' for' → logprob: -1.4155367612838745
    3. ' ' → logprob: -1.9155367612838745
    4. ' \' → logprob: -2.790536880493164
    5. '\n' → logprob: -2.790536880493164
    6. ':' → logprob: -3.165536880493164
    7. '   ' → logprob: -3.665536880493164
    8. '
' → logprob: -3.915536880493164
    9. ' 
' → logprob: -3.915536880493164
    10. '\' → logprob: -4.290536880493164

Token 128: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.0005675682332366705
    2. 'col' → logprob: -8.000567436218262
    3. ' c' → logprob: -8.625567436218262
    4. ' column' → logprob: -10.125567436218262
    5. '	col' → logprob: -11.750567436218262
    6. ' j' → logprob: -13.500567436218262
    7. '   ' → logprob: -14.250567436218262
    8. ' self' → logprob: -14.375567436218262
    9. ' ' → logprob: -14.500567436218262
    10. ' i' → logprob: -15.250567436218262

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005347959231585264
    2. 'in' → logprob: -5.255347728729248
    3. ' ' → logprob: -9.505348205566406
    4. '<|end|>' → logprob: -10.630348205566406
    5. '	in' → logprob: -12.130348205566406
    6. ')' → logprob: -13.380348205566406
    7. 'In' → logprob: -13.755348205566406
    8. '    ' → logprob: -14.005348205566406
    9. ' ,' → logprob: -14.005348205566406
    10. '_in' → logprob: -14.005348205566406

Token 130: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0011705794604495168
    2. 'range' → logprob: -6.751170635223389
    3. '	range' → logprob: -15.87617015838623
    4. '(range' → logprob: -16.501171112060547
    5. ' ' → logprob: -17.251171112060547
    6. ' self' → logprob: -17.626171112060547
    7. ' xrange' → logprob: -18.251171112060547
    8. '_range' → logprob: -18.626171112060547
    9. '.range' → logprob: -18.876171112060547
    10. 'self' → logprob: -19.126171112060547

Token 131: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015036711702123284
    2. '(' → logprob: -6.5015034675598145
    3. ' (' → logprob: -14.501503944396973
    4. '(
' → logprob: -15.251503944396973
    5. '(s' → logprob: -15.376503944396973
    6. '(len' → logprob: -15.376503944396973
    7. '<|end|>' → logprob: -16.626502990722656
    8. '(this' → logprob: -16.751502990722656
    9. ' self' → logprob: -17.501502990722656
    10. '(

' → logprob: -17.626502990722656

Token 132: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0001502636878285557
    2. '.' → logprob: -8.875150680541992
    3. ' .' → logprob: -11.625150680541992
    4. '.height' → logprob: -14.125150680541992
    5. 'width' → logprob: -14.250150680541992
    6. '	width' → logprob: -17.000150680541992
    7. ').' → logprob: -17.125150680541992
    8. ' width' → logprob: -17.125150680541992
    9. '   ' → logprob: -17.375150680541992
    10. '.w' → logprob: -18.125150680541992

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.128895103931427
    2. '):
' → logprob: -2.1288950443267822
    3. ' ):' → logprob: -6.378895282745361
    4. ' ):
' → logprob: -8.503894805908203
    5. ':' → logprob: -10.878894805908203
    6. '):
' → logprob: -11.003894805908203
    7. ')' → logprob: -11.253894805908203
    8. '   ' → logprob: -12.003894805908203
    9. '):

' → logprob: -12.378894805908203
    10. '       ' → logprob: -12.628894805908203

Token 134: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4185347855091095
    2. ':' → logprob: -1.418534755706787
    3. '           ' → logprob: -2.793534755706787
    4. ' if' → logprob: -3.668534755706787
    5. '<|end|>' → logprob: -5.418534755706787
    6. ',' → logprob: -5.543534755706787
    7. ' ' → logprob: -6.668534755706787
    8. '):' → logprob: -7.543534755706787
    9. '        ' → logprob: -7.793534755706787
    10. ':
' → logprob: -8.168535232543945

Token 135: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34574079513549805
    2. '           ' → logprob: -1.345740795135498
    3. 'if' (adapté à ' if') → logprob: -3.470740795135498
    4. '       ' → logprob: -7.345740795135498
    5. '   ' → logprob: -9.595741271972656
    6. '               ' → logprob: -9.970741271972656
    7. ' ' → logprob: -10.720741271972656
    8. '```' → logprob: -10.845741271972656
    9. '            
' → logprob: -11.595741271972656
    10. '          ' → logprob: -12.220741271972656

Token 136: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011926844716072083
    2. 'self' → logprob: -4.511926651000977
    3. ' not' → logprob: -7.136926651000977
    4. ' ' → logprob: -10.136926651000977
    5. ' '' → logprob: -11.261926651000977
    6. '   ' → logprob: -11.511926651000977
    7. '    ' → logprob: -12.511926651000977
    8. '	self' → logprob: -12.511926651000977
    9. 'not' → logprob: -12.761926651000977
    10. ' ' → logprob: -13.261926651000977

Token 137: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00980107020586729
    2. '.' → logprob: -4.634800910949707
    3. ' .' → logprob: -10.134800910949707
    4. '.horizontal' → logprob: -14.259800910949707
    5. ').' → logprob: -14.509800910949707
    6. '.row' → logprob: -14.884800910949707
    7. 'grid' → logprob: -14.884800910949707
    8. '.gr' → logprob: -15.134800910949707
    9. ':grid' → logprob: -15.134800910949707
    10. '	grid' → logprob: -15.384800910949707

Token 138: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.000007629394531
    3. ' [' → logprob: -14.125007629394531
    4. '][' → logprob: -14.875007629394531
    5. '[
' → logprob: -15.375007629394531
    6. ')[' → logprob: -15.875007629394531
    7. '```' → logprob: -16.37500762939453
    8. 'row' → logprob: -16.75000762939453
    9. ')' → logprob: -16.87500762939453
    10. '(row' → logprob: -17.12500762939453

Token 139: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005995001993142068
    2. '[col' → logprob: -7.750599384307861
    3. ' ][' → logprob: -9.00059986114502
    4. ''][' → logprob: -11.00059986114502
    5. ']' → logprob: -11.12559986114502
    6. '"][' → logprob: -11.75059986114502
    7. '+' → logprob: -13.12559986114502
    8. '[' → logprob: -14.00059986114502
    9. 'col' → logprob: -14.12559986114502
    10. ' col' → logprob: -14.50059986114502

Token 140: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.318681188422488e-05
    2. ' col' → logprob: -11.37501335144043
    3. '[col' → logprob: -13.37501335144043
    4. '(col' → logprob: -17.00001335144043
    5. '	col' → logprob: -17.37501335144043
    6. '][' → logprob: -17.87501335144043
    7. '
' → logprob: -18.62501335144043
    8. 'colm' → logprob: -18.75001335144043
    9. ',col' → logprob: -19.25001335144043
    10. '.col' → logprob: -19.50001335144043

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016569865867495537
    2. ' ]' → logprob: -4.891570091247559
    3. ' !=' → logprob: -5.641570091247559
    4. ']!=' → logprob: -5.766570091247559
    5. '!=' → logprob: -6.391570091247559
    6. ']!='' → logprob: -8.641570091247559
    7. ']==' → logprob: -8.891570091247559
    8. '']' → logprob: -10.016570091247559
    9. '!='' → logprob: -10.391570091247559
    10. '==' → logprob: -10.516570091247559

Token 142: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5851353406906128
    2. ' !=' → logprob: -0.8351353406906128
    3. '==' → logprob: -5.585135459899902
    4. '!='' → logprob: -6.210135459899902
    5. ' ==' → logprob: -6.460135459899902
    6. ' ' → logprob: -7.085135459899902
    7. '!' → logprob: -7.960135459899902
    8. '#' → logprob: -8.585135459899902
    9. '   ' → logprob: -9.710135459899902
    10. '!=-' → logprob: -9.835135459899902

Token 143: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.8388002514839172
    2. ''*' → logprob: -1.3388001918792725
    3. ''' → logprob: -1.5888001918792725
    4. ''C' → logprob: -3.4638001918792725
    5. ''o' → logprob: -4.088800430297852
    6. ''x' → logprob: -4.338800430297852
    7. ''S' → logprob: -4.713800430297852
    8. ' '#'' → logprob: -5.213800430297852
    9. ''O' → logprob: -5.338800430297852
    10. '#' → logprob: -5.713800430297852

Token 144: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0047959499061107635
    2. ':
' → logprob: -6.004796028137207
    3. ':return' → logprob: -7.254796028137207
    4. ' :' → logprob: -7.379796028137207
    5. '<|end|>' → logprob: -7.754796028137207
    6. ' or' → logprob: -8.254796028137207
    7. ' ' → logprob: -9.629796028137207
    8. '):' → logprob: -10.004796028137207
    9. '#:' → logprob: -10.254796028137207
    10. '#' → logprob: -10.379796028137207

Token 145: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6824633479118347
    2. ' not' → logprob: -0.8074633479118347
    3. 'self' → logprob: -4.1824631690979
    4. ' (' → logprob: -4.4324631690979
    5. ' ' → logprob: -5.0574631690979
    6. ' '#'' → logprob: -5.4324631690979
    7. ' '' → logprob: -5.5574631690979
    8. ' row' → logprob: -5.9324631690979
    9. 'not' → logprob: -6.9324631690979
    10. ' any' → logprob: -7.3074631690979

Token 146: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.04052446037530899
    2. '.horizontal' → logprob: -4.165524482727051
    3. '.' → logprob: -4.915524482727051
    4. 'grid' → logprob: -5.290524482727051
    5. '.vertical' → logprob: -5.665524482727051
    6. 'horizontal' → logprob: -5.790524482727051
    7. ' grid' → logprob: -6.165524482727051
    8. ' .' → logprob: -6.790524482727051
    9. 'vertical' → logprob: -7.165524482727051
    10. ' ' → logprob: -7.790524482727051

Token 147: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.0007537625497207046
    2. ' [' → logprob: -7.250753879547119
    3. ' row' → logprob: -10.250753402709961
    4. 'row' → logprob: -12.375753402709961
    5. '[' → logprob: -13.250753402709961
    6. '[line' → logprob: -14.625753402709961
    7. '(row' → logprob: -14.750753402709961
    8. '][' → logprob: -14.875753402709961
    9. '[
' → logprob: -15.375753402709961
    10. ' ' → logprob: -15.500753402709961

Token 148: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10320067405700684
    2. ' +' → logprob: -2.353200674057007
    3. '][' → logprob: -5.853200912475586
    4. '   ' → logprob: -10.103200912475586
    5. '1' → logprob: -10.853200912475586
    6. ']' → logprob: -10.978200912475586
    7. ' ][' → logprob: -10.978200912475586
    8. ' ' → logprob: -12.103200912475586
    9. ']+' → logprob: -12.728200912475586
    10. '[col' → logprob: -12.853200912475586

Token 149: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001454955490771681
    2. ' ' → logprob: -8.87514591217041
    3. '0' → logprob: -12.62514591217041
    4. '
' → logprob: -13.25014591217041
    5. '   ' → logprob: -15.12514591217041
    6. '

' → logprob: -16.750144958496094
    7. '```' → logprob: -16.875144958496094
    8. '１' → logprob: -17.875144958496094
    9. '+' → logprob: -18.000144958496094
    10. '  ' → logprob: -18.062644958496094

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017565040616318583
    2. '0' → logprob: -8.875175476074219
    3. ' ' → logprob: -10.250175476074219
    4. '   ' → logprob: -15.500175476074219
    5. '-' → logprob: -16.62517547607422
    6. '
' → logprob: -17.00017547607422
    7. '  ' → logprob: -17.00017547607422
    8. '`' → logprob: -18.18767547607422
    9. '```' → logprob: -18.18767547607422
    10. 'row' → logprob: -18.25017547607422

Token 151: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38742193579673767
    2. '[col' → logprob: -1.13742196559906
    3. ' ][' → logprob: -8.512421607971191
    4. ' col' → logprob: -8.762421607971191
    5. 'col' → logprob: -9.512421607971191
    6. ']' → logprob: -10.262421607971191
    7. '[row' → logprob: -10.637421607971191
    8. ''][' → logprob: -10.762421607971191
    9. '[' → logprob: -11.512421607971191
    10. '"][' → logprob: -12.137421607971191

Token 152: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0005828189896419644
    2. ' col' → logprob: -7.500582695007324
    3. '[col' → logprob: -10.750582695007324
    4. ''#' → logprob: -13.125582695007324
    5. '#' → logprob: -13.625582695007324
    6. 'colm' → logprob: -14.000582695007324
    7. '	col' → logprob: -14.250582695007324
    8. ' ' → logprob: -14.625582695007324
    9. 'coln' → logprob: -15.000582695007324
    10. '0' → logprob: -15.000582695007324

Token 153: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.455900639295578
    2. ' !=' → logprob: -1.8309006690979004
    3. ' ==' → logprob: -2.2059006690979004
    4. '==' → logprob: -3.0809006690979004
    5. '!=' → logprob: -3.8309006690979004
    6. ']==' → logprob: -4.3309006690979
    7. ' ]' → logprob: -5.3309006690979
    8. ']!=' → logprob: -5.5809006690979
    9. '#' → logprob: -5.7059006690979
    10. '']' → logprob: -6.7059006690979

Token 154: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.719276487827301
    2. '==' → logprob: -1.0942764282226562
    3. ' !=' → logprob: -1.9692764282226562
    4. '!=' → logprob: -3.4692764282226562
    5. '=='' → logprob: -5.719276428222656
    6. ' '#'' → logprob: -6.969276428222656
    7. ' ' → logprob: -7.469276428222656
    8. '#' → logprob: -7.469276428222656
    9. '!='' → logprob: -7.594276428222656
    10. '   ' → logprob: -7.719276428222656

Token 155: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.052106864750385284
    2. ''' → logprob: -3.1771068572998047
    3. ' '#'' → logprob: -4.927106857299805
    4. ''.' → logprob: -7.302106857299805
    5. ' '#' → logprob: -7.552106857299805
    6. ' '' → logprob: -8.802106857299805
    7. '  ' → logprob: -9.552106857299805
    8. ' ' → logprob: -9.677106857299805
    9. '   ' → logprob: -9.802106857299805
    10. '('#' → logprob: -9.802106857299805

Token 156: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02481895126402378
    2. ':
' → logprob: -3.7748188972473145
    3. '':' → logprob: -7.0248188972473145
    4. '):' → logprob: -8.774819374084473
    5. '):
' → logprob: -9.274819374084473
    6. ':return' → logprob: -9.274819374084473
    7. '#:' → logprob: -9.649819374084473
    8. ' :' → logprob: -9.774819374084473
    9. '#' → logprob: -9.899819374084473
    10. ')' → logprob: -10.399819374084473

Token 157: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003032255917787552
    2. '           ' → logprob: -5.878032207489014
    3. ':' → logprob: -9.503032684326172
    4. ' continue' → logprob: -10.003032684326172
    5. ' return' → logprob: -10.753032684326172
    6. '       ' → logprob: -11.503032684326172
    7. '                   ' → logprob: -11.503032684326172
    8. ':
' → logprob: -11.503032684326172
    9. ':return' → logprob: -11.753032684326172
    10. ' 
' → logprob: -12.253032684326172

Token 158: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4998277425765991
    2. ' return' → logprob: -0.9998277425765991
    3. '                   ' → logprob: -5.124827861785889
    4. ' 
' → logprob: -5.124827861785889
    5. 'return' → logprob: -5.249827861785889
    6. '           ' → logprob: -5.624827861785889
    7. '                ' → logprob: -6.624827861785889
    8. ' continue' → logprob: -6.749827861785889
    9. ' break' → logprob: -6.999827861785889
    10. ' False' → logprob: -7.624827861785889

Token 159: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.020078834146261215
    2. 'return' → logprob: -4.020078659057617
    3. ' continue' → logprob: -6.520078659057617
    4. ' break' → logprob: -8.145078659057617
    5. '           ' → logprob: -9.645078659057617
    6. '               ' → logprob: -10.520078659057617
    7. 'continue' → logprob: -10.520078659057617
    8. ' ' → logprob: -10.895078659057617
    9. 'break' → logprob: -12.395078659057617
    10. 'Return' → logprob: -12.645078659057617

Token 160: ' both' (ID: 2973)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3921339213848114
    2. ' not' → logprob: -1.5171339511871338
    3. 'self' → logprob: -2.767133951187134
    4. ' both' → logprob: -3.517133951187134
    5. 'not' → logprob: -5.392133712768555
    6. ' the' → logprob: -6.392133712768555
    7. ' True' → logprob: -6.642133712768555
    8. 'both' → logprob: -6.767133712768555
    9. ' (' → logprob: -7.267133712768555
    10. ' ' → logprob: -7.642133712768555

Token 161: ' cells' (ID: 11242)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7582879066467285
    2. ' '#'' → logprob: -1.6332879066467285
    3. ' are' → logprob: -1.8832879066467285
    4. ' cells' → logprob: -2.3832879066467285
    5. ' grid' → logprob: -3.5082879066467285
    6. ' #' → logprob: -3.8832879066467285
    7. ' positions' → logprob: -4.8832879066467285
    8. 'cells' → logprob: -5.1332879066467285
    9. ' sides' → logprob: -5.3832879066467285
    10. 'grid' → logprob: -5.5082879066467285

Token 162: ' above' (ID: 5151)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.007946698926389217
    2. 'are' → logprob: -5.757946491241455
    3. ' continue' → logprob: -6.257946491241455
    4. ' ==' → logprob: -7.257946491241455
    5. ' contain' → logprob: -7.507946491241455
    6. '#' → logprob: -7.632946491241455
    7. ' have' → logprob: -7.757946491241455
    8. ' '#'' → logprob: -8.757946968078613
    9. ' #' → logprob: -9.257946968078613
    10. ' at' → logprob: -9.507946968078613

Token 163: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06785328686237335
    2. 'and' → logprob: -2.8178532123565674
    3. ' or' → logprob: -5.5678534507751465
    4. ' ==' → logprob: -7.3178534507751465
    5. '               ' → logprob: -7.9428534507751465
    6. ' ' → logprob: -8.442852973937988
    7. '                ' → logprob: -8.442852973937988
    8. ' !=' → logprob: -8.692852973937988
    9. '==' → logprob: -9.192852973937988
    10. '           ' → logprob: -9.692852973937988

Token 164: ' below' (ID: 4895)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.13282692432403564
    2. ' below' → logprob: -2.132826805114746
    3. 'bene' → logprob: -7.007826805114746
    4. 'under' → logprob: -7.257826805114746
    5. ' under' → logprob: -7.507826805114746
    6. 'both' → logprob: -7.507826805114746
    7. 'the' → logprob: -7.882826805114746
    8. 'row' → logprob: -7.882826805114746
    9. 'b' → logprob: -8.132826805114746
    10. 'bottom' → logprob: -8.132826805114746

Token 165: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.02641361951828003
    2. ' the' → logprob: -4.151413440704346
    3. ' continue' → logprob: -5.526413440704346
    4. ' a' → logprob: -6.526413440704346
    5. ' '#'' → logprob: -6.901413440704346
    6. 'are' → logprob: -7.026413440704346
    7. ' #' → logprob: -7.651413440704346
    8. '#' → logprob: -7.776413440704346
    9. ' have' → logprob: -7.776413440704346
    10. ' ==' → logprob: -8.401413917541504

Token 166: ' chocolate' (ID: 20162)
  Prédit: ' '#''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '#'' → logprob: -0.7230924963951111
    2. ''#' → logprob: -1.0980925559997559
    3. '#' → logprob: -1.9730925559997559
    4. ' '#' → logprob: -3.473092555999756
    5. 'occupied' → logprob: -6.098092555999756
    6. ' not' → logprob: -6.098092555999756
    7. 'not' → logprob: -6.473092555999756
    8. ' #' → logprob: -6.848092555999756
    9. 'filled' → logprob: -7.598092555999756
    10. 'blocked' → logprob: -7.723092555999756

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10260334610939026
    2. ':' → logprob: -3.2276034355163574
    3. '           ' → logprob: -4.102603435516357
    4. '#' → logprob: -4.227603435516357
    5. ' continue' → logprob: -5.477603435516357
    6. ' and' → logprob: -5.852603435516357
    7. '   ' → logprob: -5.977603435516357
    8. ' '#'' → logprob: -5.977603435516357
    9. '               ' → logprob: -6.102603435516357
    10. ':
' → logprob: -6.352603435516357

Token 168: ' groove' (ID: 82774)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7127255201339722
    2. ' continue' → logprob: -1.0877255201339722
    3. '                   ' → logprob: -1.9627255201339722
    4. ' break' → logprob: -4.212725639343262
    5. '               ' → logprob: -4.462725639343262
    6. 'return' → logprob: -5.837725639343262
    7. 'continue' → logprob: -6.587725639343262
    8. '                ' → logprob: -6.837725639343262
    9. '           ' → logprob: -8.962725639343262
    10. ' ' → logprob: -9.212725639343262

Token 169: ' in' (ID: 306)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.15635883808135986
    2. 'line' → logprob: -3.0313587188720703
    3. ' is' → logprob: -3.1563587188720703
    4. '_line' → logprob: -4.03135871887207
    5. ' not' → logprob: -5.15635871887207
    6. '       ' → logprob: -5.40635871887207
    7. '           ' → logprob: -5.53135871887207
    8. ' can' → logprob: -5.78135871887207
    9. ' cannot' → logprob: -6.15635871887207
    10. '   ' → logprob: -6.40635871887207

Token 170: ' between' (ID: 2870)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.6938633918762207
    2. ' the' → logprob: -2.0688633918762207
    3. 'that' → logprob: -2.5688633918762207
    4. 'the' → logprob: -2.9438633918762207
    5. ' row' → logprob: -2.9438633918762207
    6. ' grid' → logprob: -3.1938633918762207
    7. 'row' → logprob: -3.5688633918762207
    8. ' None' → logprob: -3.6938633918762207
    9. ' neither' → logprob: -4.193863391876221
    10. 'None' → logprob: -4.568863391876221

Token 171: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8714094161987305
    2. ' continue' → logprob: -1.3714094161987305
    3. ' not' → logprob: -2.3714094161987305
    4. ' continues' → logprob: -2.8714094161987305
    5. '               ' → logprob: -2.9964094161987305
    6. '           ' → logprob: -3.1214094161987305
    7. ' return' → logprob: -3.2464094161987305
    8. ',' → logprob: -4.7464094161987305
    9. ' does' → logprob: -4.8714094161987305
    10. ' cannot' → logprob: -4.9964094161987305

Token 172: 'cut' (ID: 9804)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30662795901298523
    2. ' )' → logprob: -1.9316279888153076
    3. ' is' → logprob: -3.4316279888153076
    4. ' continue' → logprob: -3.6816279888153076
    5. ' return' → logprob: -4.5566277503967285
    6. '               ' → logprob: -4.6816277503967285
    7. ' )
' → logprob: -5.0566277503967285
    8. ')
' → logprob: -5.1816277503967285
    9. ' False' → logprob: -5.5566277503967285
    10. ' True' → logprob: -5.5566277503967285

Token 173: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7761555314064026
    2. ' is' → logprob: -1.5261554718017578
    3. ' )' → logprob: -2.151155471801758
    4. ' line' → logprob: -3.026155471801758
    5. '               ' → logprob: -3.526155471801758
    6. 'table' → logprob: -3.651155471801758
    7. ' possible' → logprob: -3.776155471801758
    8. '           ' → logprob: -3.901155471801758
    9. '                   ' → logprob: -4.401155471801758
    10. 's' → logprob: -5.026155471801758

Token 174: ' must' (ID: 2804)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7793195247650146
    2. '               ' → logprob: -0.9043195247650146
    3. ' is' → logprob: -2.1543195247650146
    4. ')' → logprob: -4.904319763183594
    5. ' return' → logprob: -6.029319763183594
    6. '                   ' → logprob: -6.154319763183594
    7. ' not' → logprob: -6.279319763183594
    8. ' continue' → logprob: -6.404319763183594
    9. ' cannot' → logprob: -6.529319763183594
    10. ' can' → logprob: -7.654319763183594

Token 175: ' exist' (ID: 4310)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.738320529460907
    2. ' not' → logprob: -0.863320529460907
    3. ' continue' → logprob: -2.6133205890655518
    4. 'continue' → logprob: -4.613320350646973
    5. 'not' → logprob: -5.113320350646973
    6. '<|end|>' → logprob: -6.238320350646973
    7. '
' → logprob: -6.488320350646973
    8. 'n't' → logprob: -6.613320350646973
    9. ' False' → logprob: -6.863320350646973
    10. 'False' → logprob: -6.863320350646973

Token 176: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47512105107307434
    2. '           ' → logprob: -1.225121021270752
    3. ':' → logprob: -3.475121021270752
    4. '                   ' → logprob: -3.975121021270752
    5. ' ' → logprob: -5.225121021270752
    6. '<|end|>' → logprob: -5.225121021270752
    7. ' and' → logprob: -5.725121021270752
    8. ':
' → logprob: -5.725121021270752
    9. ',' → logprob: -5.725121021270752
    10. ' return' → logprob: -5.850121021270752

Token 177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.551104724407196
    2. '           ' → logprob: -0.926104724407196
    3. ' return' → logprob: -3.676104784011841
    4. ' continue' → logprob: -6.676104545593262
    5. '                   ' → logprob: -7.801104545593262
    6. 'return' → logprob: -9.051104545593262
    7. '<|end|>' → logprob: -9.551104545593262
    8. ',' → logprob: -9.551104545593262
    9. ' 
' → logprob: -10.051104545593262
    10. '       ' → logprob: -10.301104545593262

Token 178: ' continue' (ID: 4901)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08114951103925705
    2. 'return' → logprob: -2.5811495780944824
    3. ' if' → logprob: -6.206149578094482
    4. 'if' → logprob: -9.456149101257324
    5. '               ' → logprob: -9.706149101257324
    6. ' continue' → logprob: -9.706149101257324
    7. '                   ' → logprob: -10.831149101257324
    8. '           ' → logprob: -11.331149101257324
    9. 'continue' (adapté à ' continue') → logprob: -12.081149101257324
    10. ' ' → logprob: -14.456149101257324

Token 179: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00039063513395376503
    2. ' else' → logprob: -8.250391006469727
    3. 'else' → logprob: -9.125391006469727
    4. '            
' → logprob: -12.000391006469727
    5. '
' → logprob: -12.375391006469727
    6. '       ' → logprob: -12.750391006469727
    7. '               ' → logprob: -13.750391006469727
    8. ' 
' → logprob: -13.750391006469727
    9. '          ' → logprob: -14.000391006469727
    10. '		' → logprob: -14.250391006469727

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047845521476119757
    2. ' else' → logprob: -8.250478744506836
    3. 'else' → logprob: -8.750478744506836
    4. '            
' → logprob: -11.000478744506836
    5. 'return' → logprob: -11.125478744506836
    6. '
' → logprob: -11.875478744506836
    7. ' 
' → logprob: -12.375478744506836
    8. '       ' → logprob: -13.000478744506836
    9. ' return' → logprob: -13.125478744506836
    10. '               ' → logprob: -13.250478744506836

Token 181: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15850763022899628
    2. '           ' → logprob: -3.4085075855255127
    3. 'return' → logprob: -3.5335075855255127
    4. 'else' → logprob: -3.5335075855255127
    5. ' else' → logprob: -3.7835075855255127
    6. ' if' → logprob: -4.408507823944092
    7. 'if' (adapté à ' if') → logprob: -4.533507823944092
    8. ' return' → logprob: -4.783507823944092
    9. 'elif' → logprob: -7.408507823944092
    10. ' elif' → logprob: -8.408507347106934

Token 182: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2535374164581299
    2. 'self' → logprob: -1.5035374164581299
    3. ' not' → logprob: -6.628537178039551
    4. ' (' → logprob: -8.87853717803955
    5. 'not' → logprob: -10.00353717803955
    6. ' ' → logprob: -10.00353717803955
    7. '(self' → logprob: -10.62853717803955
    8. '(' → logprob: -11.50353717803955
    9. ' col' → logprob: -11.62853717803955
    10. '   ' → logprob: -13.12853717803955

Token 183: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.002593492390587926
    2. 'grid' → logprob: -6.002593517303467
    3. '.' → logprob: -9.127593040466309
    4. '	grid' → logprob: -13.127593040466309
    5. '.horizontal' → logprob: -13.127593040466309
    6. ' grid' → logprob: -13.502593040466309
    7. ' .' → logprob: -13.627593040466309
    8. ':grid' → logprob: -14.627593040466309
    9. ' ' → logprob: -15.502593040466309
    10. 'horizontal' → logprob: -15.502593040466309

Token 184: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -3.750436007976532e-05
    2. ' [' → logprob: -10.25003719329834
    3. '[' → logprob: -13.75003719329834
    4. ' row' → logprob: -14.50003719329834
    5. 'row' → logprob: -16.000038146972656
    6. '   ' → logprob: -16.125038146972656
    7. '[line' → logprob: -16.500038146972656
    8. '[
' → logprob: -17.250038146972656
    9. ' ' → logprob: -17.500038146972656
    10. '[col' → logprob: -17.625038146972656

Token 185: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002119330922141671
    2. '[col' → logprob: -6.252119541168213
    3. ' ][' → logprob: -9.127119064331055
    4. '[' → logprob: -10.627119064331055
    5. ']' → logprob: -10.627119064331055
    6. '[row' → logprob: -11.502119064331055
    7. ' col' → logprob: -11.752119064331055
    8. ')[' → logprob: -13.002119064331055
    9. '       ' → logprob: -13.127119064331055
    10. '"][' → logprob: -13.377119064331055

Token 186: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -2.2007883671903983e-05
    2. ' col' → logprob: -10.875021934509277
    3. '[col' → logprob: -13.625021934509277
    4. '0' → logprob: -15.000021934509277
    5. '   ' → logprob: -15.000021934509277
    6. '][' → logprob: -15.500021934509277
    7. '(col' → logprob: -15.625021934509277
    8. '	col' → logprob: -15.875021934509277
    9. '1' → logprob: -16.000022888183594
    10. '
' → logprob: -16.000022888183594

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001545810722745955
    2. ']==' → logprob: -6.7515459060668945
    3. ' ]' → logprob: -8.501545906066895
    4. ']!=' → logprob: -9.001545906066895
    5. ']=='' → logprob: -10.376545906066895
    6. '==' → logprob: -11.751545906066895
    7. ']!='' → logprob: -12.126545906066895
    8. '']' → logprob: -13.126545906066895
    9. '!=' → logprob: -14.126545906066895
    10. ' ==' → logprob: -14.251545906066895

Token 188: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5520622134208679
    2. ' !=' → logprob: -1.3020622730255127
    3. '==' → logprob: -2.0520622730255127
    4. '!=' → logprob: -3.8020622730255127
    5. '=='' → logprob: -7.052062034606934
    6. '!='' → logprob: -8.052062034606934
    7. ' ' → logprob: -9.302062034606934
    8. ' =='' → logprob: -9.427062034606934
    9. ' '' → logprob: -10.677062034606934
    10. ''' → logprob: -10.927062034606934

Token 189: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.4458255469799042
    2. ''' → logprob: -1.0708255767822266
    3. ''.' → logprob: -4.195825576782227
    4. ' '#'' → logprob: -6.445825576782227
    5. ' '' → logprob: -9.445825576782227
    6. ''*' → logprob: -9.570825576782227
    7. ''\' → logprob: -11.070825576782227
    8. ''t' → logprob: -11.445825576782227
    9. ''o' → logprob: -11.570825576782227
    10. ''s' → logprob: -11.570825576782227

Token 190: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04065117612481117
    2. 'and' → logprob: -3.4156510829925537
    3. ' or' → logprob: -5.040651321411133
    4. ' ' → logprob: -8.540651321411133
    5. ' ==' → logprob: -9.540651321411133
    6. ':' → logprob: -9.665651321411133
    7. '           ' → logprob: -9.915651321411133
    8. '==' → logprob: -9.915651321411133
    9. '<|end|>' → logprob: -11.415651321411133
    10. '       ' → logprob: -11.415651321411133

Token 191: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12739597260951996
    2. 'self' → logprob: -2.1273958683013916
    3. '           ' → logprob: -7.877396106719971
    4. ' not' → logprob: -9.627395629882812
    5. 'not' → logprob: -12.002395629882812
    6. ' ' → logprob: -12.627395629882812
    7. '(self' → logprob: -13.127395629882812
    8. '            ' → logprob: -13.127395629882812
    9. '               ' → logprob: -13.252395629882812
    10. '	self' → logprob: -13.377395629882812

Token 192: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.008673192001879215
    2. 'grid' → logprob: -4.758673191070557
    3. '.' → logprob: -10.008673667907715
    4. ' grid' → logprob: -11.883673667907715
    5. ' .' → logprob: -12.883673667907715
    6. '	grid' → logprob: -13.133673667907715
    7. 'self' → logprob: -14.383673667907715
    8. '   ' → logprob: -14.883673667907715
    9. ':grid' → logprob: -15.258673667907715
    10. '_grid' → logprob: -15.383673667907715

Token 193: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -2.451116051815916e-05
    2. '[' → logprob: -11.750024795532227
    3. '[col' → logprob: -11.750024795532227
    4. ' [' → logprob: -12.500024795532227
    5. 'row' → logprob: -13.625024795532227
    6. '[
' → logprob: -13.625024795532227
    7. '[line' → logprob: -14.500024795532227
    8. '[next' → logprob: -14.625024795532227
    9. '```' → logprob: -15.500024795532227
    10. '(row' → logprob: -15.500024795532227

Token 194: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.35035380721092224
    2. ' +' → logprob: -1.2253538370132446
    3. '][' → logprob: -6.475353717803955
    4. '[col' → logprob: -8.725354194641113
    5. '[' → logprob: -9.600354194641113
    6. '[row' → logprob: -9.850354194641113
    7. '           ' → logprob: -10.725354194641113
    8. ' [' → logprob: -11.475354194641113
    9. ' ][' → logprob: -11.475354194641113
    10. '   ' → logprob: -11.600354194641113

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002486476907506585
    2. ' ' → logprob: -6.002486705780029
    3. '   ' → logprob: -12.752486228942871
    4. '```' → logprob: -13.127486228942871
    5. '           ' → logprob: -13.252486228942871
    6. '       ' → logprob: -14.377486228942871
    7. '0' → logprob: -14.439986228942871
    8. '<|end|>' → logprob: -15.189986228942871
    9. '`' → logprob: -15.502486228942871
    10. '  ' → logprob: -15.689986228942871

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000340945553034544
    2. ' ' → logprob: -8.000341415405273
    3. 'col' → logprob: -13.875341415405273
    4. '0' → logprob: -13.875341415405273
    5. '   ' → logprob: -14.000341415405273
    6. ' col' → logprob: -14.125341415405273
    7. '```' → logprob: -14.500341415405273
    8. '`' → logprob: -15.312841415405273
    9. '           ' → logprob: -15.562841415405273
    10. '  ' → logprob: -15.812841415405273

Token 197: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020867353305220604
    2. '[col' → logprob: -6.252086639404297
    3. ']' → logprob: -9.127086639404297
    4. '[row' → logprob: -10.877086639404297
    5. ' ][' → logprob: -11.127086639404297
    6. ''][' → logprob: -12.502086639404297
    7. '"][' → logprob: -12.627086639404297
    8. '[' → logprob: -13.252086639404297
    9. ')[' → logprob: -13.502086639404297
    10. 'col' → logprob: -14.002086639404297

Token 198: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00021438424300868064
    2. ' col' → logprob: -9.500214576721191
    3. '[col' → logprob: -10.250214576721191
    4. ']' → logprob: -10.375214576721191
    5. '#' → logprob: -10.500214576721191
    6. ''#' → logprob: -10.625214576721191
    7. ''' → logprob: -12.750214576721191
    8. 'colm' → logprob: -12.750214576721191
    9. '	col' → logprob: -12.875214576721191
    10. '']' → logprob: -13.125214576721191

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018579013645648956
    2. ']==' → logprob: -4.018579006195068
    3. '==' → logprob: -8.268579483032227
    4. ' ]' → logprob: -9.393579483032227
    5. ']=='' → logprob: -10.518579483032227
    6. ' ==' → logprob: -10.518579483032227
    7. '']' → logprob: -10.518579483032227
    8. '#' → logprob: -13.518579483032227
    9. '']==' → logprob: -13.768579483032227
    10. '[' → logprob: -14.018579483032227

Token 200: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5242249369621277
    2. ' ==' → logprob: -0.8992249369621277
    3. ' !=' → logprob: -7.649224758148193
    4. '!=' → logprob: -8.649225234985352
    5. '=='' → logprob: -8.899225234985352
    6. ']==' → logprob: -9.024225234985352
    7. ']' → logprob: -9.774225234985352
    8. ' ' → logprob: -10.524225234985352
    9. ')' → logprob: -10.899225234985352
    10. '=' → logprob: -10.899225234985352

Token 201: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.10081427544355392
    2. ''' → logprob: -2.8508143424987793
    3. ' '#'' → logprob: -3.4758143424987793
    4. ' '#' → logprob: -5.100814342498779
    5. ' '' → logprob: -7.100814342498779
    6. ' ' → logprob: -9.975813865661621
    7. '#' → logprob: -10.100813865661621
    8. '('#' → logprob: -10.100813865661621
    9. '"#' → logprob: -10.850813865661621
    10. ''s' → logprob: -11.100813865661621

Token 202: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1511695384979248
    2. ':
' → logprob: -2.151169538497925
    3. '               ' → logprob: -4.651169776916504
    4. ':return' → logprob: -5.276169776916504
    5. '           ' → logprob: -5.401169776916504
    6. '):
' → logprob: -6.651169776916504
    7. '       ' → logprob: -6.776169776916504
    8. '):' → logprob: -7.526169776916504
    9. '<|end|>' → logprob: -7.776169776916504
    10. ')' → logprob: -8.026169776916504

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2908678352832794
    2. '           ' → logprob: -1.665867805480957
    3. ' return' → logprob: -2.790867805480957
    4. 'return' → logprob: -6.665867805480957
    5. '       ' → logprob: -7.540867805480957
    6. '   ' → logprob: -9.790867805480957
    7. '                   ' → logprob: -10.415867805480957
    8. '	return' → logprob: -11.040867805480957
    9. ' ' → logprob: -11.165867805480957
    10. ':return' → logprob: -11.415867805480957

Token 204: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06150629743933678
    2. 'return' → logprob: -3.1865062713623047
    3. '           ' → logprob: -4.436506271362305
    4. '               ' → logprob: -5.061506271362305
    5. '   ' → logprob: -9.811506271362305
    6. '	return' → logprob: -9.936506271362305
    7. '       ' → logprob: -10.436506271362305
    8. '                   ' → logprob: -10.811506271362305
    9. '
' → logprob: -11.936506271362305
    10. ':return' → logprob: -13.436506271362305

Token 205: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6931902170181274
    2. 'return' → logprob: -0.6931902170181274
    3. '           ' → logprob: -10.318190574645996
    4. '               ' → logprob: -11.693190574645996
    5. '   ' → logprob: -14.193190574645996
    6. '#' → logprob: -15.318190574645996
    7. '       ' → logprob: -15.443190574645996
    8. '	return' → logprob: -15.943190574645996
    9. '                   ' → logprob: -16.19318962097168
    10. 'break' → logprob: -16.94318962097168

Token 206: ' one' (ID: 1001)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07235704362392426
    2. 'not' → logprob: -2.697356939315796
    3. ' self' → logprob: -7.197357177734375
    4. ' True' → logprob: -7.322357177734375
    5. 'self' → logprob: -8.072357177734375
    6. 'True' → logprob: -8.322357177734375
    7. ' the' → logprob: -9.197357177734375
    8. ' (' → logprob: -9.697357177734375
    9. ' ' → logprob: -10.072357177734375
    10. '(not' → logprob: -10.072357177734375

Token 207: ' side' (ID: 4307)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.084800362586975
    2. ' ' → logprob: -1.209800362586975
    3. ' space' → logprob: -2.4598002433776855
    4. ' !=' → logprob: -3.2098002433776855
    5. ' is' → logprob: -3.3348002433776855
    6. ' and' → logprob: -3.3348002433776855
    7. ' of' → logprob: -3.8348002433776855
    8. ')' → logprob: -3.9598002433776855
    9. 'space' → logprob: -4.3348002433776855
    10. '<|end|>' → logprob: -4.4598002433776855

Token 208: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4940602481365204
    2. ' and' → logprob: -1.7440602779388428
    3. ' has' → logprob: -3.1190602779388428
    4. '[row' → logprob: -3.2440602779388428
    5. ' not' → logprob: -3.4940602779388428
    6. ' ==' → logprob: -4.119060039520264
    7. 'and' → logprob: -4.244060039520264
    8. ' at' → logprob: -4.369060039520264
    9. '[col' → logprob: -4.869060039520264
    10. ' or' → logprob: -4.869060039520264

Token 209: ' chocolate' (ID: 20162)
  Prédit: ' '#''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '#'' → logprob: -0.6576012372970581
    2. ''#' → logprob: -1.032601237297058
    3. '#' → logprob: -2.4076013565063477
    4. ' chocolate' → logprob: -4.282601356506348
    5. 'ch' → logprob: -4.782601356506348
    6. ' '#' → logprob: -5.157601356506348
    7. ' #' → logprob: -6.032601356506348
    8. ' not' → logprob: -6.782601356506348
    9. ''' → logprob: -7.282601356506348
    10. ' ' → logprob: -7.782601356506348

Token 210: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16319309175014496
    2. ',' → logprob: -2.9131929874420166
    3. ':' → logprob: -3.1631929874420166
    4. '               ' → logprob: -3.9131929874420166
    5. '           ' → logprob: -4.038193225860596
    6. ':
' → logprob: -5.538193225860596
    7. 'and' → logprob: -5.663193225860596
    8. ' return' → logprob: -6.038193225860596
    9. ' or' → logprob: -6.163193225860596
    10. '                   ' → logprob: -6.538193225860596

Token 211: ' other' (ID: 1273)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.012737186625599861
    2. 'not' → logprob: -4.387737274169922
    3. ' True' → logprob: -9.262737274169922
    4. ' the' → logprob: -9.762737274169922
    5. 'True' → logprob: -10.887737274169922
    6. 'False' → logprob: -11.262737274169922
    7. '```' → logprob: -11.762737274169922
    8. ' False' → logprob: -11.762737274169922
    9. ' one' → logprob: -12.137737274169922
    10. ' self' → logprob: -12.512737274169922

Token 212: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12601356208324432
    2. 'is' → logprob: -2.7510135173797607
    3. ' not' → logprob: -4.12601375579834
    4. ' isn't' → logprob: -4.25101375579834
    5. ' !=' → logprob: -5.12601375579834
    6. '==' → logprob: -5.37601375579834
    7. ' ==' → logprob: -5.50101375579834
    8. ' space' → logprob: -5.87601375579834
    9. 'not' → logprob: -6.12601375579834
    10. 'space' → logprob: -6.50101375579834

Token 213: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.22859342396259308
    2. 'not' → logprob: -1.9785934686660767
    3. ''' → logprob: -2.978593349456787
    4. ' empty' → logprob: -5.228593349456787
    5. 'empty' → logprob: -5.478593349456787
    6. ''#' → logprob: -6.478593349456787
    7. ' '' → logprob: -6.603593349456787
    8. 'space' → logprob: -6.978593349456787
    9. ' '#'' → logprob: -7.728593349456787
    10. ' space' → logprob: -7.978593349456787

Token 214: ' chocolate' (ID: 20162)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0022387548815459013
    2. ' t' → logprob: -6.877238750457764
    3. ''#' → logprob: -8.252239227294922
    4. 'n' → logprob: -8.377239227294922
    5. '#' → logprob: -8.502239227294922
    6. ' chocolate' → logprob: -8.627239227294922
    7. ''t' → logprob: -8.877239227294922
    8. ''' → logprob: -10.252239227294922
    9. ' '#'' → logprob: -10.377239227294922
    10. 'ne' → logprob: -10.752239227294922

Token 215: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6037994623184204
    2. ',' → logprob: -1.3537994623184204
    3. ':
' → logprob: -2.478799343109131
    4. '               ' → logprob: -2.978799343109131
    5. '           ' → logprob: -4.103799343109131
    6. ':return' → logprob: -4.228799343109131
    7. '                   ' → logprob: -4.853799343109131
    8. ' and' → logprob: -4.978799343109131
    9. ' return' → logprob: -5.353799343109131
    10. ' or' → logprob: -5.603799343109131

Token 216: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0009255149052478373
    2. 'return' → logprob: -7.000925540924072
    3. ' break' → logprob: -11.875925064086914
    4. '               ' → logprob: -12.375925064086914
    5. ' ' → logprob: -13.750925064086914
    6. '                   ' → logprob: -14.375925064086914
    7. '                ' → logprob: -15.250925064086914
    8. ':return' → logprob: -15.250925064086914
    9. ' continue' → logprob: -15.500925064086914
    10. '           ' → logprob: -15.750925064086914

Token 217: ' groove' (ID: 82774)
  Prédit: ' cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.5705796480178833
    2. '<|end|>' → logprob: -1.4455796480178833
    3. ' ' → logprob: -2.9455795288085938
    4. ' space' → logprob: -3.4455795288085938
    5. ' True' → logprob: -3.5705795288085938
    6. 'cut' → logprob: -4.320579528808594
    7. '_cut' → logprob: -4.320579528808594
    8. ' continue' → logprob: -4.445579528808594
    9. 'space' → logprob: -4.695579528808594
    10. ' #' → logprob: -5.320579528808594

Token 218: ' possible' (ID: 4149)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7706225514411926
    2. '               ' → logprob: -1.6456224918365479
    3. '           ' → logprob: -2.270622491836548
    4. ':' → logprob: -2.645622491836548
    5. ' ' → logprob: -3.520622491836548
    6. ':
' → logprob: -3.645622491836548
    7. '                   ' → logprob: -3.895622491836548
    8. ':return' → logprob: -4.020622730255127
    9. '       ' → logprob: -4.270622730255127
    10. ' 
' → logprob: -4.770622730255127

Token 219: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4146651327610016
    2. '                   ' → logprob: -2.0396652221679688
    3. ':
' → logprob: -2.2896652221679688
    4. '           ' → logprob: -2.9146652221679688
    5. ':' → logprob: -4.039665222167969
    6. ' return' → logprob: -4.289665222167969
    7. ':return' → logprob: -4.664665222167969
    8. '
' → logprob: -5.789665222167969
    9. 'return' → logprob: -5.789665222167969
    10. '                       ' → logprob: -6.914665222167969

Token 220: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05310046672821045
    2. '                   ' → logprob: -3.3031005859375
    3. ' return' → logprob: -4.6781005859375
    4. '           ' → logprob: -5.5531005859375
    5. ':' → logprob: -7.8031005859375
    6. ':
' → logprob: -8.0531005859375
    7. 'return' → logprob: -8.5531005859375
    8. ':return' → logprob: -8.5531005859375
    9. '
' → logprob: -8.8031005859375
    10. ' 
' → logprob: -8.9281005859375

Token 221: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31395867466926575
    2. ' return' → logprob: -1.3139586448669434
    3. '               ' → logprob: -7.563958644866943
    4. '                   ' → logprob: -9.438959121704102
    5. '           ' → logprob: -9.938959121704102
    6. '	return' → logprob: -10.313959121704102
    7. '   ' → logprob: -11.438959121704102
    8. '
' → logprob: -12.438959121704102
    9. '                       ' → logprob: -14.313959121704102
    10. '       ' → logprob: -14.813959121704102

Token 222: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10020667314529419
    2. ' False' → logprob: -2.3502066135406494
    3. '(False' → logprob: -18.60020637512207
    4. '_false' → logprob: -20.47520637512207
    5. ' false' → logprob: -21.10020637512207
    6. 'false' → logprob: -21.22520637512207
    7. '=False' → logprob: -21.60020637512207
    8. 'True' → logprob: -24.35020637512207
    9. '.False' → logprob: -24.35020637512207
    10. '_FALSE' → logprob: -25.35020637512207

Token 223: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014526135055348277
    2. '
' → logprob: -7.376452445983887
    3. 'return' → logprob: -8.001452445983887
    4. ' return' → logprob: -8.251452445983887
    5. '        
' → logprob: -9.376452445983887
    6. '	return' → logprob: -9.876452445983887
    7. '   ' → logprob: -10.251452445983887
    8. '           ' → logprob: -10.501452445983887
    9. 'continue' → logprob: -12.251452445983887
    10. '<|end|>' → logprob: -12.626452445983887

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001263567479327321
    2. ' return' → logprob: -7.501263618469238
    3. '	' → logprob: -8.376263618469238
    4. 'return' → logprob: -8.501263618469238
    5. '	return' → logprob: -9.001263618469238
    6. '   ' → logprob: -9.376263618469238
    7. '
' → logprob: -10.626263618469238
    8. '        
' → logprob: -11.126263618469238
    9. '           ' → logprob: -11.501263618469238
    10. '	   ' → logprob: -12.251263618469238

Token 225: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20928756892681122
    2. '   ' → logprob: -1.9592875242233276
    3. 'return' (adapté à ' return') → logprob: -3.459287643432617
    4. ' return' → logprob: -4.209287643432617
    5. '	return' → logprob: -7.209287643432617
    6. '
' → logprob: -7.709287643432617
    7. 'eturn' → logprob: -9.209287643432617
    8. '    
' → logprob: -9.459287643432617
    9. '<|end|>' → logprob: -10.209287643432617
    10. '        
' → logprob: -10.334287643432617

Token 226: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. '(True' → logprob: -16.923587799072266
    4. '   ' → logprob: -18.173587799072266
    5. '       ' → logprob: -18.673587799072266
    6. ' ' → logprob: -20.298587799072266
    7. 'False' → logprob: -20.673587799072266
    8. '=True' → logprob: -20.798587799072266
    9. 'true' → logprob: -21.798587799072266
    10. '[' → logprob: -22.673587799072266

Token 227: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3816487193107605
    2. ' def' → logprob: -1.3816487789154053
    3. '   ' → logprob: -2.7566487789154053
    4. ')' → logprob: -7.256648540496826
    5. '_' → logprob: -7.506648540496826
    6. ' ' → logprob: -7.631648540496826
    7. ' 
' → logprob: -8.381649017333984
    8. '    
' → logprob: -8.631649017333984
    9. '       ' → logprob: -10.006649017333984
    10. 'd' → logprob: -10.006649017333984

Token 230: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5055739283561707
    2. ' can' → logprob: -1.0055739879608154
    3. 'cut' → logprob: -4.255573749542236
    4. ' cut' → logprob: -4.880573749542236
    5. '_can' → logprob: -5.130573749542236
    6. '_cut' → logprob: -7.005573749542236
    7. 'make' → logprob: -7.255573749542236
    8. ' make' → logprob: -7.380573749542236
    9. ' mark' → logprob: -7.630573749542236
    10. 'mark' → logprob: -9.005574226379395

Token 231: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -9.603335638530552e-05
    2. '_' → logprob: -10.375096321105957
    3. ' _' → logprob: -10.375096321105957
    4. '_continue' → logprob: -10.875096321105957
    5. '_can' → logprob: -13.000096321105957
    6. '_c' → logprob: -13.375096321105957
    7. '_take' → logprob: -13.500096321105957
    8. '_have' → logprob: -13.875096321105957
    9. '_keep' → logprob: -14.125096321105957
    10. '_make' → logprob: -14.625096321105957

Token 232: '_vert' (ID: 142112)
  Prédit: '_vert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vert' → logprob: -0.01704050414264202
    2. '_h' → logprob: -4.392040729522705
    3. '_vertical' → logprob: -5.767040729522705
    4. '_' → logprob: -6.767040729522705
    5. '_v' → logprob: -9.767040252685547
    6. ' _' → logprob: -10.017040252685547
    7. 'vert' → logprob: -10.142040252685547
    8. '_ver' → logprob: -10.517040252685547
    9. 'Vert' → logprob: -10.642040252685547
    10. '_VERT' → logprob: -11.767040252685547

Token 233: 'ically' (ID: 2905)
  Prédit: 'ically'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ically' → logprob: -0.00016754455282352865
    2. 'ical' → logprob: -8.875167846679688
    3. 'ally' → logprob: -12.375167846679688
    4. 'r' → logprob: -12.625167846679688
    5. 't' → logprob: -12.625167846679688
    6. 'ert' → logprob: -12.875167846679688
    7. '
' → logprob: -13.375167846679688
    8. '   ' → logprob: -13.375167846679688
    9. 'ic' → logprob: -13.500167846679688
    10. '_' → logprob: -13.625167846679688

Token 234: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. ' (' → logprob: -14.000001907348633
    3. 'self' → logprob: -14.000001907348633
    4. '(' → logprob: -14.625001907348633
    5. '   ' → logprob: -16.750001907348633
    6. ' self' → logprob: -18.000001907348633
    7. '(
' → logprob: -18.250001907348633
    8. ' ' → logprob: -18.875001907348633
    9. 'def' → logprob: -19.375001907348633
    10. ',' → logprob: -19.500001907348633

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006623993394896388
    2. 'self' → logprob: -7.625662326812744
    3. '(self' → logprob: -9.000662803649902
    4. ' ,' → logprob: -10.125662803649902
    5. '   ' → logprob: -12.625662803649902
    6. ',
' → logprob: -13.000662803649902
    7. ' self' → logprob: -13.125662803649902
    8. '       ' → logprob: -13.500662803649902
    9. '
' → logprob: -14.250662803649902
    10. ' (' → logprob: -14.750662803649902

Token 236: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.1032899022102356
    2. ' col' → logprob: -2.603289842605591
    3. 'self' → logprob: -3.853289842605591
    4. ' self' → logprob: -5.85329008102417
    5. 'column' → logprob: -11.103289604187012
    6. '   ' → logprob: -11.853289604187012
    7. ' ' → logprob: -13.853289604187012
    8. ' column' → logprob: -14.353289604187012
    9. ')' → logprob: -15.228289604187012
    10. '```' → logprob: -15.603289604187012

Token 237: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06666014343500137
    2. 'self' → logprob: -3.566660165786743
    3. ':' → logprob: -4.691659927368164
    4. '   ' → logprob: -4.941659927368164
    5. '(self' → logprob: -4.941659927368164
    6. '):
' → logprob: -5.191659927368164
    7. ')' → logprob: -5.441659927368164
    8. ',' → logprob: -6.816659927368164
    9. ' self' → logprob: -6.941659927368164
    10. ' ):' → logprob: -8.191659927368164

Token 238: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024762547109276056
    2. ' int' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.502476692199707
    4. '(int' → logprob: -16.37747573852539
    5. ' ' → logprob: -17.50247573852539
    6. 'def' → logprob: -18.37747573852539
    7. ')' → logprob: -18.50247573852539
    8. '  ' → logprob: -19.25247573852539
    9. '[int' → logprob: -19.50247573852539
    10. ':int' → logprob: -20.12747573852539

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. '):' → logprob: -12.875006675720215
    3. ' )' → logprob: -13.000006675720215
    4. '   ' → logprob: -13.875006675720215
    5. 'self' → logprob: -14.750006675720215
    6. '):
' → logprob: -15.000006675720215
    7. '`)' → logprob: -16.37500762939453
    8. 'def' → logprob: -17.12500762939453
    9. ' ' → logprob: -17.25000762939453
    10. '       ' → logprob: -17.62500762939453

Token 240: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03487401828169823
    2. ' ->' → logprob: -3.9098739624023438
    3. '->' → logprob: -4.409873962402344
    4. '   ' → logprob: -7.409873962402344
    5. ')' → logprob: -7.659873962402344
    6. '(self' → logprob: -8.034873962402344
    7. '       ' → logprob: -8.409873962402344
    8. ':
' → logprob: -8.659873962402344
    9. ' :' → logprob: -9.409873962402344
    10. '):' → logprob: -9.909873962402344

Token 241: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.313264399766922
    2. 'bool' → logprob: -1.3132643699645996
    3. ' ' → logprob: -13.313264846801758
    4. ')' → logprob: -15.188264846801758
    5. ' def' → logprob: -15.188264846801758
    6. '	bool' → logprob: -15.688264846801758
    7. '   ' → logprob: -15.688264846801758
    8. 'def' → logprob: -16.938264846801758
    9. '(bool' → logprob: -17.063264846801758
    10. '  ' → logprob: -17.188264846801758

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004637553822249174
    2. ':
' → logprob: -5.504637718200684
    3. '       ' → logprob: -7.879637718200684
    4. '   ' → logprob: -9.504637718200684
    5. '):' → logprob: -9.504637718200684
    6. '):
' → logprob: -11.754637718200684
    7. '():' → logprob: -11.879637718200684
    8. ' :' → logprob: -12.629637718200684
    9. ')' → logprob: -12.879637718200684
    10. ':return' → logprob: -12.879637718200684

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005543439765460789
    2. ' for' → logprob: -7.87555456161499
    3. 'for' → logprob: -9.375554084777832
    4. '   ' → logprob: -10.000554084777832
    5. '#' → logprob: -10.250554084777832
    6. ' #' → logprob: -12.625554084777832
    7. '           ' → logprob: -13.500554084777832
    8. '[' → logprob: -14.250554084777832
    9. '      ' → logprob: -14.250554084777832
    10. '     ' → logprob: -14.375554084777832

Token 244: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4386816620826721
    2. '       ' → logprob: -1.4386816024780273
    3. '#' (adapté à ' #') → logprob: -2.1886816024780273
    4. ' for' → logprob: -5.188681602478027
    5. ' #' → logprob: -8.938681602478027
    6. '   ' → logprob: -9.313681602478027
    7. '```' → logprob: -12.938681602478027
    8. 'return' → logprob: -13.188681602478027
    9. ' ' → logprob: -13.313681602478027
    10. '           ' → logprob: -13.938681602478027

Token 245: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07557373493909836
    2. ' for' → logprob: -2.700573682785034
    3. '#' → logprob: -5.450573921203613
    4. '       ' → logprob: -6.700573921203613
    5. '   ' → logprob: -9.825573921203613
    6. ' #' → logprob: -10.575573921203613
    7. 'A' → logprob: -11.700573921203613
    8. 'For' → logprob: -12.575573921203613
    9. ' ' → logprob: -13.325573921203613
    10. 'def' → logprob: -13.825573921203613

Token 246: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.4072512984275818
    2. ' vertical' → logprob: -1.1572513580322266
    3. 'for' → logprob: -4.032251358032227
    4. ' for' → logprob: -6.157251358032227
    5. 'horizontal' → logprob: -8.907251358032227
    6. 'def' → logprob: -9.282251358032227
    7. '#' → logprob: -10.157251358032227
    8. 'vert' → logprob: -11.532251358032227
    9. ' horizontal' → logprob: -11.657251358032227
    10. '   ' → logprob: -11.782251358032227

Token 247: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.45084813237190247
    2. 'cut' → logprob: -1.07584810256958
    3. '_cut' → logprob: -3.82584810256958
    4. 'def' → logprob: -10.075848579406738
    5. ' line' → logprob: -10.700848579406738
    6. '   ' → logprob: -11.325848579406738
    7. 'line' → logprob: -12.200848579406738
    8. ' def' → logprob: -12.700848579406738
    9. ' ' → logprob: -12.700848579406738
    10. ' for' → logprob: -12.825848579406738

Token 248: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.038069259375333786
    2. 'is' → logprob: -3.288069248199463
    3. ' ' → logprob: -10.913069725036621
    4. ' possible' → logprob: -12.663069725036621
    5. 'def' → logprob: -13.788069725036621
    6. ' ' → logprob: -13.913069725036621
    7. '   ' → logprob: -13.913069725036621
    8. 'possible' → logprob: -14.163069725036621
    9. ' can' → logprob: -14.413069725036621
    10. ' def' → logprob: -14.663069725036621

Token 249: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.3132998049259186
    2. 'possible' → logprob: -1.3132997751235962
    3. '_possible' → logprob: -11.438300132751465
    4. ' True' → logprob: -12.063300132751465
    5. '   ' → logprob: -12.313300132751465
    6. 'Possible' → logprob: -12.563300132751465
    7. 'True' → logprob: -12.563300132751465
    8. '       ' → logprob: -13.063300132751465
    9. ' posible' → logprob: -13.313300132751465
    10. ' ' → logprob: -13.438300132751465

Token 250: ' iff' (ID: 165577)
  Prédit: ' iff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iff' → logprob: -0.0789533481001854
    2. ' if' → logprob: -3.078953266143799
    3. '       ' → logprob: -3.953953266143799
    4. 'iff' → logprob: -5.203953266143799
    5. 'if' → logprob: -5.453953266143799
    6. '   ' → logprob: -7.328953266143799
    7. ' for' → logprob: -8.703953742980957
    8. ' ' → logprob: -10.078953742980957
    9. 'for' → logprob: -10.578953742980957
    10. '           ' → logprob: -10.828953742980957

Token 251: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.13259799778461456
    2. 'all' → logprob: -2.5075979232788086
    3. 'for' → logprob: -3.6325979232788086
    4. ' for' → logprob: -4.132597923278809
    5. 'self' → logprob: -9.007597923278809
    6. ' self' → logprob: -10.257597923278809
    7. 'col' → logprob: -10.882597923278809
    8. 'True' → logprob: -11.507597923278809
    9. '#' → logprob: -11.632597923278809
    10. ' col' → logprob: -12.132597923278809

Token 252: ' segments' (ID: 33749)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7870542407035828
    2. 'rows' → logprob: -0.9120542407035828
    3. 'self' → logprob: -2.6620543003082275
    4. ' rows' → logprob: -3.0370543003082275
    5. ' row' → logprob: -4.412054061889648
    6. 'cells' → logprob: -5.287054061889648
    7. 'segments' → logprob: -5.787054061889648
    8. ' cells' → logprob: -6.412054061889648
    9. ' self' → logprob: -6.537054061889648
    10. ' segments' → logprob: -7.787054061889648

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00681364256888628
    2. 'in' → logprob: -5.0068135261535645
    3. '   ' → logprob: -9.881814002990723
    4. '       ' → logprob: -10.256814002990723
    5. ' ' → logprob: -12.881814002990723
    6. '    ' → logprob: -13.131814002990723
    7. ' for' → logprob: -13.381814002990723
    8. '        ' → logprob: -14.006814002990723
    9. ',' → logprob: -14.256814002990723
    10. '           ' → logprob: -14.381814002990723

Token 254: ' the' (ID: 290)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026922952383756638
    2. ' range' → logprob: -4.151923179626465
    3. 'the' → logprob: -4.651923179626465
    4. 'self' → logprob: -6.776923179626465
    5. ' the' → logprob: -9.026923179626465
    6. '(range' → logprob: -11.526923179626465
    7. ' self' → logprob: -12.026923179626465
    8. 'for' → logprob: -12.401923179626465
    9. '   ' → logprob: -12.651923179626465
    10. ' ' → logprob: -14.401923179626465

Token 255: ' groove' (ID: 82774)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.4941810965538025
    2. 'range' → logprob: -0.9941810965538025
    3. 'for' → logprob: -4.869181156158447
    4. 'row' → logprob: -5.869181156158447
    5. 'height' → logprob: -5.994181156158447
    6. 'self' → logprob: -5.994181156158447
    7. ' range' → logprob: -6.619181156158447
    8. 'gro' → logprob: -7.119181156158447
    9. 'column' → logprob: -7.369181156158447
    10. ' grid' → logprob: -7.494181156158447

Token 256: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6959620714187622
    2. ' line' → logprob: -0.6959620714187622
    3. '[line' → logprob: -6.695961952209473
    4. '   ' → logprob: -6.945961952209473
    5. '       ' → logprob: -8.195961952209473
    6. ' ' → logprob: -8.570961952209473
    7. ' lines' → logprob: -9.945961952209473
    8. 'lines' → logprob: -10.570961952209473
    9. '(line' → logprob: -10.695961952209473
    10. ' are' → logprob: -11.570961952209473

Token 257: ' are' (ID: 553)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22229014337062836
    2. ' are' → logprob: -1.8472901582717896
    3. 'in' → logprob: -3.5972900390625
    4. ' for' → logprob: -4.8472900390625
    5. 'are' → logprob: -6.3472900390625
    6. ' between' → logprob: -6.4722900390625
    7. '   ' → logprob: -6.8472900390625
    8. '       ' → logprob: -6.9722900390625
    9. 'for' → logprob: -7.2222900390625
    10. ' ' → logprob: -9.0972900390625

Token 258: ' empty' (ID: 8213)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.4775493144989014
    2. 'False' → logprob: -1.4775493144989014
    3. ' empty' → logprob: -1.6025493144989014
    4. 'empty' → logprob: -1.7275493144989014
    5. ' True' → logprob: -2.3525493144989014
    6. ' False' → logprob: -3.1025493144989014
    7. ' ' → logprob: -5.7275495529174805
    8. 'self' → logprob: -5.8525495529174805
    9. ' self' → logprob: -5.9775495529174805
    10. 'col' → logprob: -6.7275495529174805

Token 259: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0991775393486023
    2. ' for' → logprob: -2.849177598953247
    3. 'for' → logprob: -3.349177598953247
    4. '   ' → logprob: -6.599177360534668
    5. '           ' → logprob: -10.974177360534668
    6. '
' → logprob: -11.349177360534668
    7. ' ' → logprob: -11.724177360534668
    8. '	for' → logprob: -12.474177360534668
    9. '        
' → logprob: -12.974177360534668
    10. '    ' → logprob: -13.599177360534668

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03021080046892166
    2. '   ' → logprob: -3.6552107334136963
    3. ' for' → logprob: -5.655210971832275
    4. 'for' → logprob: -8.030210494995117
    5. '<|end|>' → logprob: -10.780210494995117
    6. '
' → logprob: -11.030210494995117
    7. ' ' → logprob: -11.905210494995117
    8. '           ' → logprob: -11.905210494995117
    9. '    ' → logprob: -12.030210494995117
    10. '        
' → logprob: -12.280210494995117

Token 261: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6042499542236328
    2. 'for' → logprob: -1.1042499542236328
    3. '       ' → logprob: -2.104249954223633
    4. '   ' → logprob: -9.104249954223633
    5. ' ' → logprob: -12.604249954223633
    6. '	for' → logprob: -13.354249954223633
    7. '           ' → logprob: -13.854249954223633
    8. '```' → logprob: -14.854249954223633
    9. '        ' → logprob: -14.979249954223633
    10. '
' → logprob: -14.979249954223633

Token 262: ' groove' (ID: 82774)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04859861359000206
    2. ' for' → logprob: -3.048598527908325
    3. '       ' → logprob: -12.048598289489746
    4. '   ' → logprob: -12.423598289489746
    5. 'For' → logprob: -14.923598289489746
    6. '#' → logprob: -15.173598289489746
    7. 'def' → logprob: -15.673598289489746
    8. '```' → logprob: -15.923598289489746
    9. ' ' → logprob: -16.048599243164062
    10. '	for' → logprob: -16.173599243164062

Token 263: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5153034329414368
    2. 'line' → logprob: -1.015303373336792
    3. '       ' → logprob: -3.765303373336792
    4. ' is' → logprob: -4.265303611755371
    5. '#' → logprob: -7.265303611755371
    6. 'is' → logprob: -7.265303611755371
    7. ' #' → logprob: -7.390303611755371
    8. '[line' → logprob: -8.265303611755371
    9. ' for' → logprob: -8.515303611755371
    10. ' ' → logprob: -9.390303611755371

Token 264: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02062387205660343
    2. 'is' → logprob: -3.8956239223480225
    3. ' between' → logprob: -9.895624160766602
    4. ' =' → logprob: -12.020624160766602
    5. '       ' → logprob: -12.145624160766602
    6. '#' → logprob: -12.770624160766602
    7. '   ' → logprob: -12.770624160766602
    8. ' ' → logprob: -12.770624160766602
    9. 'between' → logprob: -13.145624160766602
    10. ' for' → logprob: -13.270624160766602

Token 265: ' between' (ID: 2870)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.08316690474748611
    2. ' between' → logprob: -2.5831668376922607
    3. 'for' → logprob: -6.20816707611084
    4. 'b' → logprob: -6.83316707611084
    5. '   ' → logprob: -7.95816707611084
    6. ' ' → logprob: -9.20816707611084
    7. 'bet' → logprob: -9.20816707611084
    8. ' for' → logprob: -9.33316707611084
    9. 'the' → logprob: -9.45816707611084
    10. '```' → logprob: -9.58316707611084

Token 266: ' col' (ID: 996)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.04173361510038376
    2. 'col' → logprob: -3.791733503341675
    3. 'rows' → logprob: -4.291733741760254
    4. ' row' → logprob: -5.666733741760254
    5. 'for' → logprob: -7.666733741760254
    6. ' rows' → logprob: -8.416733741760254
    7. 'self' → logprob: -8.541733741760254
    8. ' col' → logprob: -8.791733741760254
    9. '(row' → logprob: -10.916733741760254
    10. 'the' → logprob: -10.916733741760254

Token 267: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05593862012028694
    2. 'and' → logprob: -3.430938720703125
    3. '+' → logprob: -5.055938720703125
    4. '-' → logprob: -5.305938720703125
    5. ' -' → logprob: -5.805938720703125
    6. '   ' → logprob: -5.930938720703125
    7. ' +' → logprob: -6.305938720703125
    8. ' ' → logprob: -7.305938720703125
    9. '       ' → logprob: -7.305938720703125
    10. ' for' → logprob: -7.430938720703125

Token 268: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.2811550199985504
    2. 'col' → logprob: -1.406154990196228
    3. '(col' → logprob: -13.03115463256836
    4. '[col' → logprob: -14.78115463256836
    5. '.col' → logprob: -15.03115463256836
    6. 'self' → logprob: -15.15615463256836
    7. '	col' → logprob: -15.15615463256836
    8. 'column' → logprob: -15.28115463256836
    9. 'colm' → logprob: -15.28115463256836
    10. ' (' → logprob: -15.40615463256836

Token 269: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13034246861934662
    2. ' +' → logprob: -2.130342483520508
    3. ' col' → logprob: -6.005342483520508
    4. '   ' → logprob: -8.005342483520508
    5. 'col' → logprob: -8.255342483520508
    6. ' ' → logprob: -9.255342483520508
    7. '```' → logprob: -9.755342483520508
    8. ' and' → logprob: -10.255342483520508
    9. ')' → logprob: -10.755342483520508
    10. '+
' → logprob: -10.880342483520508

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -17.0000057220459
    4. '   ' → logprob: -17.2500057220459
    5. '0' → logprob: -18.7500057220459
    6. 'col' → logprob: -18.8750057220459
    7. '+' → logprob: -19.8750057220459
    8. '-' → logprob: -20.0000057220459
    9. 'def' → logprob: -20.3750057220459
    10. '
' → logprob: -20.3750057220459

Token 271: ';' (ID: 26)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07694723457098007
    2. '       ' → logprob: -2.9519472122192383
    3. 'for' → logprob: -3.8269472122192383
    4. '   ' → logprob: -10.576947212219238
    5. ',' → logprob: -12.326947212219238
    6. '
' → logprob: -12.451947212219238
    7. ':' → logprob: -12.451947212219238
    8. ' ' → logprob: -12.826947212219238
    9. '        
' → logprob: -13.826947212219238
    10. '	for' → logprob: -13.826947212219238

Token 272: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10021594911813736
    2. 'for' → logprob: -2.3502159118652344
    3. '       ' → logprob: -11.600215911865234
    4. '   ' → logprob: -16.725215911865234
    5. ' ' → logprob: -16.975215911865234
    6. '	for' → logprob: -17.600215911865234
    7. '```' → logprob: -17.725215911865234
    8. '
' → logprob: -19.350215911865234
    9. ' ' → logprob: -19.600215911865234
    10. '    ' → logprob: -20.725215911865234

Token 273: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47402048110961914
    2. 'range' → logprob: -1.2240204811096191
    3. ' for' → logprob: -3.349020481109619
    4. ' range' → logprob: -3.974020481109619
    5. 'row' → logprob: -4.349020481109619
    6. 'self' → logprob: -4.599020481109619
    7. 'the' → logprob: -5.849020481109619
    8. ' the' → logprob: -6.599020481109619
    9. 'rows' → logprob: -7.349020481109619
    10. ' row' → logprob: -7.599020481109619

Token 274: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.019112804904580116
    2. 'row' → logprob: -4.394112586975098
    3. ' rows' → logprob: -5.144112586975098
    4. 'range' → logprob: -7.394112586975098
    5. '   ' → logprob: -9.769112586975098
    6. '       ' → logprob: -10.394112586975098
    7. 'for' → logprob: -11.144112586975098
    8. ' row' → logprob: -11.144112586975098
    9. '_rows' → logprob: -12.144112586975098
    10. ' ' → logprob: -12.769112586975098

Token 275: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21629522740840912
    2. 'for' → logprob: -2.2162952423095703
    3. ' for' → logprob: -2.4662952423095703
    4. '   ' → logprob: -7.46629524230957
    5. '	for' → logprob: -11.34129524230957
    6. '           ' → logprob: -12.84129524230957
    7. '```' → logprob: -13.21629524230957
    8. ' ' → logprob: -14.09129524230957
    9. '<|end|>' → logprob: -14.34129524230957
    10. '        
' → logprob: -15.34129524230957

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12645801901817322
    2. ' for' → logprob: -2.251457929611206
    3. 'for' → logprob: -4.376458168029785
    4. '   ' → logprob: -7.001458168029785
    5. '	for' → logprob: -11.376458168029785
    6. '```' → logprob: -11.501458168029785
    7. '           ' → logprob: -11.626458168029785
    8. ' ' → logprob: -11.626458168029785
    9. '        
' → logprob: -12.001458168029785
    10. '
' → logprob: -12.126458168029785

Token 277: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12697409093379974
    2. ' for' → logprob: -2.126974105834961
    3. '       ' → logprob: -10.126974105834961
    4. '   ' → logprob: -12.126974105834961
    5. '```' → logprob: -14.751974105834961
    6. '	for' → logprob: -15.876974105834961
    7. '
' → logprob: -16.37697410583496
    8. ' ' → logprob: -17.12697410583496
    9. '``' → logprob: -19.00197410583496
    10. '  ' → logprob: -20.12697410583496

Token 278: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0052354102954268456
    2. ' row' → logprob: -5.255235195159912
    3. '   ' → logprob: -13.88023567199707
    4. 'r' → logprob: -15.00523567199707
    5. ' ' → logprob: -15.88023567199707
    6. '	row' → logprob: -15.88023567199707
    7. 'self' → logprob: -17.25523567199707
    8. '(row' → logprob: -17.88023567199707
    9. '```' → logprob: -18.00523567199707
    10. 'rown' → logprob: -18.50523567199707

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006293982733041048
    2. 'in' → logprob: -7.375629425048828
    3. ' ' → logprob: -13.250629425048828
    4. '<|end|>' → logprob: -14.375629425048828
    5. '   ' → logprob: -16.375629425048828
    6. 'import' → logprob: -16.875629425048828
    7. '(' → logprob: -16.875629425048828
    8. '        ' → logprob: -17.125629425048828
    9. 'In' → logprob: -17.250629425048828
    10. '    ' → logprob: -17.250629425048828

Token 280: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692831456661224
    2. 'range' → logprob: -2.1269283294677734
    3. '(range' → logprob: -16.626928329467773
    4. ' in' → logprob: -17.001928329467773
    5. 'self' → logprob: -17.126928329467773
    6. ' self' → logprob: -17.876928329467773
    7. '0' → logprob: -18.001928329467773
    8. '	range' → logprob: -20.126928329467773
    9. 'in' → logprob: -20.376928329467773
    10. '_range' → logprob: -20.626928329467773

Token 281: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003076950670219958
    2. 'self' → logprob: -8.3753080368042
    3. ' self' → logprob: -9.6253080368042
    4. '(' → logprob: -11.6253080368042
    5. '=self' → logprob: -14.0003080368042
    6. '       ' → logprob: -15.1253080368042
    7. '[self' → logprob: -15.2503080368042
    8. '	self' → logprob: -15.7503080368042
    9. ' (' → logprob: -16.125307083129883
    10. '0' → logprob: -16.125307083129883

Token 282: '.height' (ID: 11682)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.505635678768158
    2. '.height' → logprob: -1.0056357383728027
    3. ' self' → logprob: -3.5056357383728027
    4. 'height' → logprob: -7.505635738372803
    5. '(self' → logprob: -8.880635261535645
    6. '.self' → logprob: -9.130635261535645
    7. '   ' → logprob: -9.880635261535645
    8. '       ' → logprob: -10.005635261535645
    9. '[self' → logprob: -10.255635261535645
    10. ' height' → logprob: -10.755635261535645

Token 283: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3873150944709778
    2. '):
' → logprob: -1.137315034866333
    3. ' ):' → logprob: -9.137314796447754
    4. '-' → logprob: -9.512314796447754
    5. '       ' → logprob: -9.512314796447754
    6. '   ' → logprob: -10.012314796447754
    7. ' ):
' → logprob: -10.012314796447754
    8. ':' → logprob: -10.137314796447754
    9. '):
' → logprob: -10.387314796447754
    10. ' -' → logprob: -11.137314796447754

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025673536583781242
    2. 'if' → logprob: -4.2756733894348145
    3. ' if' → logprob: -4.6506733894348145
    4. '       ' → logprob: -6.4006733894348145
    5. '   ' → logprob: -8.400673866271973
    6. '```' → logprob: -14.025673866271973
    7. '	       ' → logprob: -14.400673866271973
    8. '          ' → logprob: -14.650673866271973
    9. '         ' → logprob: -14.775673866271973
    10. ' ' → logprob: -14.900673866271973

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029817141592502594
    2. ' if' → logprob: -3.7798171043395996
    3. '           ' → logprob: -5.0298171043396
    4. '       ' → logprob: -12.154817581176758
    5. '   ' → logprob: -12.404817581176758
    6. '```' → logprob: -15.279817581176758
    7. '               ' → logprob: -15.404817581176758
    8. ' ' → logprob: -16.154817581176758
    9. '	if' → logprob: -16.279817581176758
    10. 'If' → logprob: -17.654817581176758

Token 286: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2811638414859772
    2. 'self' → logprob: -1.4061638116836548
    3. '(self' → logprob: -11.656164169311523
    4. '[self' → logprob: -13.156164169311523
    5. ' ' → logprob: -14.031164169311523
    6. '	self' → logprob: -14.531164169311523
    7. '   ' → logprob: -14.781164169311523
    8. 'Self' → logprob: -15.531164169311523
    9. ' (' → logprob: -15.656164169311523
    10. '#' → logprob: -16.218664169311523

Token 287: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -2.176947600673884e-05
    2. 'grid' → logprob: -10.875021934509277
    3. '.' → logprob: -13.000021934509277
    4. '	grid' → logprob: -15.500021934509277
    5. ' .' → logprob: -15.750021934509277
    6. ' grid' → logprob: -15.875021934509277
    7. '.user' → logprob: -16.87502098083496
    8. ':grid' → logprob: -17.25002098083496
    9. '
' → logprob: -18.25002098083496
    10. '(grid' → logprob: -18.37502098083496

Token 288: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -5.080963092041202e-06
    2. 'row' → logprob: -12.375004768371582
    3. ' [' → logprob: -15.125004768371582
    4. '(row' → logprob: -15.375004768371582
    5. '[' → logprob: -16.3750057220459
    6. '[
' → logprob: -16.8750057220459
    7. ' row' → logprob: -17.3750057220459
    8. '=row' → logprob: -18.0000057220459
    9. '```' → logprob: -18.1250057220459
    10. '   ' → logprob: -18.5000057220459

Token 289: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007723979651927948
    2. '[col' → logprob: -4.882723808288574
    3. ']' → logprob: -9.632723808288574
    4. ' ][' → logprob: -10.507723808288574
    5. '[' → logprob: -11.257723808288574
    6. '[row' → logprob: -12.757723808288574
    7. '   ' → logprob: -13.382723808288574
    8. 'col' → logprob: -13.382723808288574
    9. '[column' → logprob: -13.507723808288574
    10. ' col' → logprob: -14.382723808288574

Token 290: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00020973898062948138
    2. ' col' → logprob: -8.50020980834961
    3. '[col' → logprob: -12.00020980834961
    4. '	col' → logprob: -17.25020980834961
    5. '   ' → logprob: -18.00020980834961
    6. '(col' → logprob: -18.12520980834961
    7. ',col' → logprob: -18.37520980834961
    8. '
' → logprob: -18.62520980834961
    9. 'colm' → logprob: -18.62520980834961
    10. '[' → logprob: -18.87520980834961

Token 291: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014242833713069558
    2. '][' → logprob: -7.251424312591553
    3. ']==' → logprob: -7.376424312591553
    4. ' ]' → logprob: -9.626423835754395
    5. ']=='' → logprob: -11.626423835754395
    6. '']' → logprob: -11.626423835754395
    7. '[col' → logprob: -13.251423835754395
    8. '[row' → logprob: -14.626423835754395
    9. ' ][' → logprob: -14.751423835754395
    10. '`]' → logprob: -15.126423835754395

Token 292: ' ==' (ID: 951)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030721420422196388
    2. ']==' → logprob: -4.155721187591553
    3. ' ==' → logprob: -4.405721187591553
    4. '==' → logprob: -6.530721187591553
    5. ' ]' → logprob: -7.405721187591553
    6. '][' → logprob: -9.405721664428711
    7. ']=='' → logprob: -9.405721664428711
    8. '[' → logprob: -10.655721664428711
    9. '   ' → logprob: -10.655721664428711
    10. ' '#'' → logprob: -11.280721664428711

Token 293: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.00012439649435691535
    2. ' '#'' → logprob: -9.000123977661133
    3. ''' → logprob: -14.125123977661133
    4. '"#' → logprob: -15.625123977661133
    5. '('#' → logprob: -17.250123977661133
    6. ' '#' → logprob: -18.000123977661133
    7. '#' → logprob: -18.500123977661133
    8. ''*' → logprob: -19.250123977661133
    9. '','#' → logprob: -19.500123977661133
    10. ''.' → logprob: -19.625123977661133

Token 294: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014181245118379593
    2. 'and' → logprob: -4.264181137084961
    3. ' ' → logprob: -12.139181137084961
    4. ']' → logprob: -12.764181137084961
    5. ' '#'' → logprob: -12.764181137084961
    6. '#' → logprob: -13.014181137084961
    7. '[' → logprob: -14.014181137084961
    8. ' ==' → logprob: -14.139181137084961
    9. '           ' → logprob: -14.764181137084961
    10. ''' → logprob: -14.764181137084961

Token 295: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03365042433142662
    2. 'self' → logprob: -3.4086503982543945
    3. ' ' → logprob: -13.283650398254395
    4. ' ' → logprob: -13.658650398254395
    5. '	self' → logprob: -15.283650398254395
    6. '[self' → logprob: -15.283650398254395
    7. '(self' → logprob: -15.408650398254395
    8. '#' → logprob: -15.408650398254395
    9. ' col' → logprob: -15.783650398254395
    10. '`' → logprob: -15.908650398254395

Token 296: '.grid' (ID: 19269)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.07256072014570236
    2. 'grid' → logprob: -2.8225607872009277
    3. '.grid' → logprob: -4.697560787200928
    4. '[row' → logprob: -6.822560787200928
    5. ' row' → logprob: -8.44756031036377
    6. 'row' → logprob: -10.07256031036377
    7. 'self' → logprob: -11.07256031036377
    8. '	grid' → logprob: -11.44756031036377
    9. '_grid' → logprob: -11.82256031036377
    10. ' ' → logprob: -12.07256031036377

Token 297: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.023511119186878204
    2. '[col' → logprob: -3.7735111713409424
    3. ' [' → logprob: -8.273510932922363
    4. '[' → logprob: -12.273510932922363
    5. '[column' → logprob: -12.523510932922363
    6. '[
' → logprob: -14.148510932922363
    7. 'row' → logprob: -14.398510932922363
    8. '][' → logprob: -15.398510932922363
    9. ' col' → logprob: -16.02351188659668
    10. '   ' → logprob: -16.02351188659668

Token 298: '][' (ID: 2696)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.7839559316635132
    2. ' +' → logprob: -1.1589559316635132
    3. '+' → logprob: -1.5339559316635132
    4. ' [' → logprob: -4.783956050872803
    5. '][' → logprob: -5.283956050872803
    6. '[' → logprob: -8.408955574035645
    7. '[row' → logprob: -9.533955574035645
    8. ' col' → logprob: -10.158955574035645
    9. ' ][' → logprob: -10.283955574035645
    10. '[column' → logprob: -10.408955574035645

Token 299: 'col' (ID: 1798)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.3876614272594452
    2. 'col' → logprob: -1.1376614570617676
    3. '+' → logprob: -7.762661457061768
    4. '[col' → logprob: -8.26266098022461
    5. '1' → logprob: -9.38766098022461
    6. ' ' → logprob: -11.01266098022461
    7. '   ' → logprob: -12.88766098022461
    8. '(col' → logprob: -13.01266098022461
    9. ' +' → logprob: -14.38766098022461
    10. '	col' → logprob: -15.01266098022461

Token 300: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408005595207214
    2. ' +' → logprob: -0.9740800857543945
    3. ']' → logprob: -13.474080085754395
    4. ' ' → logprob: -14.474080085754395
    5. '   ' → logprob: -15.224080085754395
    6. '[' → logprob: -15.224080085754395
    7. ' +
' → logprob: -15.224080085754395
    8. '+]' → logprob: -15.599080085754395
    9. '+
' → logprob: -15.849080085754395
    10. '1' → logprob: -16.474079132080078

Token 301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '0' → logprob: -15.750051498413086
    4. '#' → logprob: -17.625051498413086
    5. '   ' → logprob: -18.125051498413086
    6. '```' → logprob: -18.875051498413086
    7. '  ' → logprob: -20.062551498413086
    8. '`' → logprob: -20.125051498413086
    9. '-' → logprob: -20.187551498413086
    10. '
' → logprob: -20.875051498413086

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.375007629394531
    3. '#' → logprob: -12.750007629394531
    4. ''#' → logprob: -15.000007629394531
    5. '   ' → logprob: -16.25000762939453
    6. '
' → logprob: -18.50000762939453
    7. '`' → logprob: -18.62500762939453
    8. '"#' → logprob: -18.87500762939453
    9. '('#' → logprob: -19.00000762939453
    10. '  ' → logprob: -19.12500762939453

Token 303: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004160787910223007
    2. ']==' → logprob: -5.5041608810424805
    3. ' ]' → logprob: -10.25416088104248
    4. '==' → logprob: -10.62916088104248
    5. '']' → logprob: -11.37916088104248
    6. ']=='' → logprob: -12.37916088104248
    7. ' ==' → logprob: -12.37916088104248
    8. '#' → logprob: -13.12916088104248
    9. '[' → logprob: -14.87916088104248
    10. '`]' → logprob: -15.87916088104248

Token 304: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31375938653945923
    2. '==' → logprob: -1.3137593269348145
    3. '#' → logprob: -9.063759803771973
    4. ']' → logprob: -9.063759803771973
    5. '=='' → logprob: -9.063759803771973
    6. ']==' → logprob: -9.188759803771973
    7. '[' → logprob: -11.188759803771973
    8. '=' → logprob: -11.313759803771973
    9. '==
' → logprob: -12.188759803771973
    10. ' =='' → logprob: -12.813759803771973

Token 305: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0033892178907990456
    2. ' '#'' → logprob: -5.753389358520508
    3. ''' → logprob: -8.628389358520508
    4. ' '#' → logprob: -10.503389358520508
    5. '('#' → logprob: -13.128389358520508
    6. '"#' → logprob: -13.628389358520508
    7. '#' → logprob: -13.753389358520508
    8. ' '' → logprob: -15.503389358520508
    9. ' ' → logprob: -15.878389358520508
    10. '='#' → logprob: -16.253389358520508

Token 306: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6725049614906311
    2. ':
' → logprob: -1.0475049018859863
    3. ':' → logprob: -2.0475049018859863
    4. '           ' → logprob: -5.047504901885986
    5. ' continue' → logprob: -6.922504901885986
    6. '<|end|>' → logprob: -7.047504901885986
    7. 'continue' → logprob: -7.297504901885986
    8. '       ' → logprob: -8.422505378723145
    9. '):
' → logprob: -8.797505378723145
    10. ' and' → logprob: -9.672505378723145

Token 307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005624308250844479
    2. 'continue' → logprob: -5.505624294281006
    3. ' continue' → logprob: -6.505624294281006
    4. '           ' → logprob: -10.130624771118164
    5. '	           ' → logprob: -13.130624771118164
    6. '		       ' → logprob: -13.380624771118164
    7. '			' → logprob: -13.880624771118164
    8. 'Continue' → logprob: -14.005624771118164
    9. '<|end|>' → logprob: -14.130624771118164
    10. '	continue' → logprob: -14.255624771118164

Token 308: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.24635468423366547
    2. '               ' → logprob: -1.9963546991348267
    3. ' continue' → logprob: -2.496354579925537
    4. '           ' → logprob: -8.996355056762695
    5. '	continue' → logprob: -11.371355056762695
    6. '   ' → logprob: -13.996355056762695
    7. '       ' → logprob: -14.371355056762695
    8. '_continue' → logprob: -14.371355056762695
    9. '			' → logprob: -14.621355056762695
    10. '              ' → logprob: -14.871355056762695

Token 309: ' chocolate' (ID: 20162)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.25726354122161865
    2. ' continue' → logprob: -1.5072635412216187
    3. '               ' → logprob: -5.257263660430908
    4. '           ' → logprob: -9.25726318359375
    5. '	continue' → logprob: -11.88226318359375
    6. '                   ' → logprob: -12.13226318359375
    7. '   ' → logprob: -13.88226318359375
    8. '       ' → logprob: -14.63226318359375
    9. '_continue' → logprob: -14.75726318359375
    10. '                ' → logprob: -15.13226318359375

Token 310: ' segments' (ID: 33749)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1344601809978485
    2. '           ' → logprob: -2.634460210800171
    3. 'continue' → logprob: -3.134460210800171
    4. ' continue' → logprob: -4.759459972381592
    5. '              ' → logprob: -7.009459972381592
    6. '             ' → logprob: -8.50946044921875
    7. ' continues' → logprob: -8.63446044921875
    8. '       ' → logprob: -9.13446044921875
    9. '            ' → logprob: -9.13446044921875
    10. '                ' → logprob: -9.38446044921875

Token 311: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013090232387185097
    2. ' continue' → logprob: -4.888090133666992
    3. 'continue' → logprob: -5.263090133666992
    4. '           ' → logprob: -8.388090133666992
    5. '              ' → logprob: -11.888090133666992
    6. '<|end|>' → logprob: -12.013090133666992
    7. '	           ' → logprob: -12.138090133666992
    8. ':
' → logprob: -12.138090133666992
    9. '		       ' → logprob: -12.138090133666992
    10. ',' → logprob: -12.263090133666992

Token 312: ' both' (ID: 2973)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.1613687425851822
    2. ' both' → logprob: -1.911368727684021
    3. 'the' → logprob: -7.0363688468933105
    4. ' the' → logprob: -9.161368370056152
    5. 'Both' → logprob: -10.286368370056152
    6. 'continue' → logprob: -10.411368370056152
    7. 'each' → logprob: -11.036368370056152
    8. 'same' → logprob: -11.036368370056152
    9. 'col' → logprob: -11.536368370056152
    10. 'row' → logprob: -11.786368370056152

Token 313: ' sides' (ID: 18089)
  Prédit: ' sides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.20296579599380493
    2. 's' → logprob: -1.7029657363891602
    3. 'columns' → logprob: -7.70296573638916
    4. '<|end|>' → logprob: -7.70296573638916
    5. 'cells' → logprob: -8.32796573638916
    6. 'side' → logprob: -8.82796573638916
    7. 'col' → logprob: -9.70296573638916
    8. ' cells' → logprob: -9.82796573638916
    9. ' side' → logprob: -10.45296573638916
    10. 'cols' → logprob: -10.57796573638916

Token 314: ' =>' (ID: 871)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034963466227054596
    2. ' continue' → logprob: -3.659963369369507
    3. 'continue' → logprob: -4.784963607788086
    4. '           ' → logprob: -8.534963607788086
    5. '			' → logprob: -11.159963607788086
    6. ',' → logprob: -11.284963607788086
    7. '                   ' → logprob: -11.784963607788086
    8. '<|end|>' → logprob: -12.034963607788086
    9. '	           ' → logprob: -12.034963607788086
    10. '		       ' → logprob: -12.159963607788086

Token 315: ' groove' (ID: 82774)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.029856359586119652
    2. ' continue' → logprob: -3.5298564434051514
    3. '               ' → logprob: -9.40485668182373
    4. '	continue' → logprob: -11.65485668182373
    5. 'return' → logprob: -12.02985668182373
    6. 'continu' → logprob: -12.40485668182373
    7. '                   ' → logprob: -13.52985668182373
    8. '           ' → logprob: -13.65485668182373
    9. 'contin' → logprob: -14.40485668182373
    10. '   ' → logprob: -14.52985668182373

Token 316: ' possible' (ID: 4149)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005850577726960182
    2. 'continue' → logprob: -5.630850791931152
    3. ' continue' → logprob: -6.505850791931152
    4. '           ' → logprob: -7.380850791931152
    5. '			' → logprob: -10.880850791931152
    6. '              ' → logprob: -10.880850791931152
    7. ' must' → logprob: -11.005850791931152
    8. ' continues' → logprob: -11.630850791931152
    9. '                   ' → logprob: -11.755850791931152
    10. '		       ' → logprob: -11.755850791931152

Token 317: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04709220677614212
    2. 'continue' → logprob: -3.4220921993255615
    3. ' continue' → logprob: -4.797092437744141
    4. '           ' → logprob: -5.297092437744141
    5. '	continue' → logprob: -10.17209243774414
    6. '			' → logprob: -11.17209243774414
    7. '                   ' → logprob: -11.67209243774414
    8. '	           ' → logprob: -12.04709243774414
    9. '		       ' → logprob: -12.42209243774414
    10. '	       ' → logprob: -12.42209243774414

Token 318: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014405004680156708
    2. 'continue' → logprob: -4.639404773712158
    3. '           ' → logprob: -5.639404773712158
    4. ' continue' → logprob: -6.889404773712158
    5. '			' → logprob: -10.764405250549316
    6. '		       ' → logprob: -11.889405250549316
    7. '	           ' → logprob: -12.014405250549316
    8. '	continue' → logprob: -12.014405250549316
    9. '                   ' → logprob: -12.139405250549316
    10. '		' → logprob: -12.139405250549316

Token 319: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0014430918963626027
    2. ' continue' → logprob: -6.751442909240723
    3. '               ' → logprob: -8.251442909240723
    4. '           ' → logprob: -12.126442909240723
    5. '	continue' → logprob: -12.251442909240723
    6. '                   ' → logprob: -14.251442909240723
    7. 'contin' → logprob: -14.626442909240723
    8. 'continu' → logprob: -14.751442909240723
    9. '_continue' → logprob: -16.37644386291504
    10. '   ' → logprob: -16.62644386291504

Token 320: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.200166469876422e-06
    2. 'if' → logprob: -13.000004768371582
    3. '       ' → logprob: -13.875004768371582
    4. '
' → logprob: -14.000004768371582
    5. ' if' → logprob: -14.500004768371582
    6. '          ' → logprob: -15.375004768371582
    7. '               ' → logprob: -15.750004768371582
    8. '   ' → logprob: -16.0000057220459
    9. 'import' → logprob: -17.0000057220459
    10. '		' → logprob: -17.3750057220459

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.2729995988775045e-06
    2. '       ' → logprob: -12.375006675720215
    3. 'if' → logprob: -13.500006675720215
    4. '          ' → logprob: -14.625006675720215
    5. '   ' → logprob: -16.7500057220459
    6. '               ' → logprob: -16.8750057220459
    7. '         ' → logprob: -17.3750057220459
    8. '		' → logprob: -17.6250057220459
    9. '```' → logprob: -17.7500057220459
    10. 'import' → logprob: -18.0000057220459

Token 322: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032855138182640076
    2. 'if' (adapté à ' if') → logprob: -3.5328550338745117
    3. ' if' → logprob: -6.032855033874512
    4. '       ' → logprob: -7.282855033874512
    5. '   ' → logprob: -12.032855033874512
    6. '               ' → logprob: -12.782855033874512
    7. '          ' → logprob: -13.157855033874512
    8. '         ' → logprob: -14.032855033874512
    9. '```' → logprob: -14.407855033874512
    10. 'elif' → logprob: -14.407855033874512

Token 323: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03808600828051567
    2. ' self' → logprob: -3.2880859375
    3. '(self' → logprob: -10.0380859375
    4. ' (' → logprob: -15.0380859375
    5. '   ' → logprob: -15.6630859375
    6. ' ' → logprob: -15.7880859375
    7. '           ' → logprob: -16.2880859375
    8. '[self' → logprob: -16.6630859375
    9. '	self' → logprob: -17.4130859375
    10. '       ' → logprob: -17.4130859375

Token 324: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -8.180258191714529e-06
    2. 'grid' → logprob: -11.750008583068848
    3. '	grid' → logprob: -16.00000762939453
    4. '.' → logprob: -16.87500762939453
    5. ' grid' → logprob: -17.62500762939453
    6. ' .' → logprob: -18.12500762939453
    7. '.user' → logprob: -18.50000762939453
    8. ':grid' → logprob: -19.00000762939453
    9. '(grid' → logprob: -20.50000762939453
    10. '
' → logprob: -21.37500762939453

Token 325: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: 0.0
    2. 'row' → logprob: -16.75
    3. '[' → logprob: -18.625
    4. '(row' → logprob: -19.0
    5. ' [' → logprob: -19.375
    6. '[
' → logprob: -19.875
    7. '=row' → logprob: -20.375
    8. ' row' → logprob: -20.5
    9. '   ' → logprob: -20.625
    10. ',row' → logprob: -21.0

Token 326: '][' (ID: 2696)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.0863381177186966
    2. '][' → logprob: -2.5863380432128906
    3. '[row' → logprob: -4.961338043212891
    4. '[' → logprob: -8.71133804321289
    5. '   ' → logprob: -9.71133804321289
    6. ' ][' → logprob: -9.83633804321289
    7. ' [' → logprob: -10.21133804321289
    8. '       ' → logprob: -10.33633804321289
    9. '[column' → logprob: -10.83633804321289
    10. '}[' → logprob: -11.96133804321289

Token 327: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.000354769523255527
    2. '[col' → logprob: -8.125354766845703
    3. ' col' → logprob: -9.750354766845703
    4. '(col' → logprob: -15.375354766845703
    5. '	col' → logprob: -16.125354766845703
    6. '
' → logprob: -16.625354766845703
    7. '   ' → logprob: -17.375354766845703
    8. '```' → logprob: -18.125354766845703
    9. ',col' → logprob: -18.250354766845703
    10. 'colm' → logprob: -18.625354766845703

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014339430257678032
    2. ' ==' → logprob: -4.764339447021484
    3. ' ]' → logprob: -6.014339447021484
    4. ']==' → logprob: -6.139339447021484
    5. '==' → logprob: -6.889339447021484
    6. '']' → logprob: -10.389339447021484
    7. ''' → logprob: -10.514339447021484
    8. ']=='' → logprob: -11.264339447021484
    9. '[' → logprob: -12.514339447021484
    10. ' ' → logprob: -12.639339447021484

Token 329: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02331174910068512
    2. '==' → logprob: -3.7733118534088135
    3. '=='' → logprob: -10.023311614990234
    4. ''' → logprob: -11.273311614990234
    5. ' ' → logprob: -12.773311614990234
    6. ' =='' → logprob: -13.273311614990234
    7. '[' → logprob: -13.773311614990234
    8. ' '' → logprob: -13.773311614990234
    9. '=' → logprob: -14.148311614990234
    10. ']==' → logprob: -15.148311614990234

Token 330: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0002619318547658622
    2. ' '#'' → logprob: -8.500262260437012
    3. ''' → logprob: -9.750262260437012
    4. '"#' → logprob: -16.125261306762695
    5. ''*' → logprob: -18.000261306762695
    6. '('#' → logprob: -18.375261306762695
    7. ' '#' → logprob: -18.750261306762695
    8. '','#' → logprob: -18.875261306762695
    9. ''''' → logprob: -19.500261306762695
    10. '='#' → logprob: -19.625261306762695

Token 331: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -7.040457421680912e-05
    2. 'or' → logprob: -9.750070571899414
    3. ' and' → logprob: -12.125070571899414
    4. ' ' → logprob: -12.750070571899414
    5. ')' → logprob: -13.625070571899414
    6. '            ' → logprob: -14.250070571899414
    7. '           ' → logprob: -14.750070571899414
    8. 'and' → logprob: -15.375070571899414
    9. ' ' → logprob: -15.750070571899414
    10. '<|end|>' → logprob: -15.750070571899414

Token 332: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759403705596924
    2. ' self' → logprob: -0.8259403705596924
    3. '           ' → logprob: -15.575940132141113
    4. '(self' → logprob: -15.575940132141113
    5. '	self' → logprob: -15.825940132141113
    6. ' ' → logprob: -15.950940132141113
    7. '[self' → logprob: -16.57594108581543
    8. '   ' → logprob: -16.82594108581543
    9. ' ' → logprob: -17.20094108581543
    10. 'Self' → logprob: -17.45094108581543

Token 333: '.grid' (ID: 19269)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47461453080177307
    2. ' self' → logprob: -0.9746145009994507
    3. '[self' → logprob: -7.72461462020874
    4. ' grid' → logprob: -10.599614143371582
    5. 'grid' → logprob: -10.599614143371582
    6. '           ' → logprob: -11.224614143371582
    7. ' ' → logprob: -11.849614143371582
    8. ' ' → logprob: -12.099614143371582
    9. '[row' → logprob: -12.474614143371582
    10. '[' → logprob: -12.599614143371582

Token 334: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.1517960956552997e-05
    2. 'row' → logprob: -12.625011444091797
    3. ' [' → logprob: -13.250011444091797
    4. '[self' → logprob: -13.375011444091797
    5. '       ' → logprob: -13.375011444091797
    6. '           ' → logprob: -14.000011444091797
    7. '   ' → logprob: -14.625011444091797
    8. '[' → logprob: -14.750011444091797
    9. '[
' → logprob: -15.125011444091797
    10. '```' → logprob: -15.500011444091797

Token 335: '][' (ID: 2696)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.008798216469585896
    2. '][' → logprob: -5.508798122406006
    3. '[row' → logprob: -5.633798122406006
    4. '+' → logprob: -7.258798122406006
    5. 'col' → logprob: -8.883798599243164
    6. ' [' → logprob: -9.758798599243164
    7. ' +' → logprob: -10.133798599243164
    8. '[' → logprob: -10.133798599243164
    9. '[column' → logprob: -10.383798599243164
    10. ' ][' → logprob: -10.633798599243164

Token 336: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.006901851389557123
    2. ' col' → logprob: -5.006901741027832
    3. '1' → logprob: -9.006901741027832
    4. '[col' → logprob: -10.631901741027832
    5. ' ' → logprob: -11.006901741027832
    6. '+' → logprob: -11.756901741027832
    7. '   ' → logprob: -11.881901741027832
    8. '(col' → logprob: -12.131901741027832
    9. '           ' → logprob: -14.256901741027832
    10. '	col' → logprob: -14.756901741027832

Token 337: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6960440278053284
    2. ' +' → logprob: -0.6960440278053284
    3. ' col' → logprob: -6.071043968200684
    4. '[col' → logprob: -7.696043968200684
    5. 'col' → logprob: -9.446043968200684
    6. ' ' → logprob: -10.571043968200684
    7. '   ' → logprob: -11.321043968200684
    8. '1' → logprob: -11.946043968200684
    9. '(col' → logprob: -12.821043968200684
    10. '[' → logprob: -13.946043968200684

Token 338: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008052219054661691
    2. ' ' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.625804901123047
    4. '+' → logprob: -16.625804901123047
    5. '  ' → logprob: -16.625804901123047
    6. '```' → logprob: -17.063304901123047
    7. '`' → logprob: -17.625804901123047
    8. 'col' → logprob: -17.688304901123047
    9. '#' → logprob: -17.875804901123047
    10. '１' → logprob: -17.938304901123047

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.1250057220459
    4. '#' → logprob: -18.8750057220459
    5. 'col' → logprob: -19.1250057220459
    6. '+' → logprob: -19.7500057220459
    7. '

' → logprob: -20.1250057220459
    8. '
' → logprob: -20.1250057220459
    9. '```' → logprob: -20.3750057220459
    10. '１' → logprob: -20.5000057220459

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028401510789990425
    2. ']==' → logprob: -4.0284013748168945
    3. ' ==' → logprob: -5.2784013748168945
    4. '==' → logprob: -5.6534013748168945
    5. '']' → logprob: -6.6534013748168945
    6. ' ]' → logprob: -8.653401374816895
    7. ']=='' → logprob: -10.153401374816895
    8. '#' → logprob: -10.653401374816895
    9. '           ' → logprob: -10.778401374816895
    10. '']==' → logprob: -11.403401374816895

Token 341: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4750310778617859
    2. '==' → logprob: -0.9750310778617859
    3. '=='' → logprob: -7.350030899047852
    4. ''' → logprob: -9.475030899047852
    5. '#' → logprob: -9.600030899047852
    6. ']==' → logprob: -9.975030899047852
    7. ''#' → logprob: -10.225030899047852
    8. '=' → logprob: -10.975030899047852
    9. ']' → logprob: -11.100030899047852
    10. '```' → logprob: -11.725030899047852

Token 342: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.005370598752051592
    2. ' '#'' → logprob: -5.505370616912842
    3. ' '#' → logprob: -6.755370616912842
    4. ''' → logprob: -9.255370140075684
    5. '('#' → logprob: -11.380370140075684
    6. '"#' → logprob: -12.005370140075684
    7. ' ' → logprob: -12.505370140075684
    8. '#' → logprob: -12.755370140075684
    9. 'True' → logprob: -13.130370140075684
    10. '='#' → logprob: -13.880370140075684

Token 343: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6741896271705627
    2. ':
' → logprob: -1.049189567565918
    3. ':' → logprob: -2.299189567565918
    4. '):
' → logprob: -3.924189567565918
    5. ':return' → logprob: -4.299189567565918
    6. 'return' → logprob: -5.924189567565918
    7. '           ' → logprob: -6.674189567565918
    8. ')' → logprob: -7.049189567565918
    9. '):' → logprob: -7.049189567565918
    10. ' return' → logprob: -8.549189567565918

Token 344: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004696057178080082
    2. 'return' → logprob: -5.879695892333984
    3. ' return' → logprob: -6.504695892333984
    4. '           ' → logprob: -7.879695892333984
    5. '   ' → logprob: -12.004695892333984
    6. '       ' → logprob: -12.504695892333984
    7. ':return' → logprob: -13.129695892333984
    8. '                   ' → logprob: -14.254695892333984
    9. '              ' → logprob: -14.629695892333984
    10. '	return' → logprob: -14.879695892333984

Token 345: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4645794630050659
    2. '               ' → logprob: -1.464579463005066
    3. ' return' → logprob: -1.964579463005066
    4. '           ' → logprob: -8.589579582214355
    5. '   ' → logprob: -11.839579582214355
    6. '	return' → logprob: -11.964579582214355
    7. '       ' → logprob: -12.339579582214355
    8. '                   ' → logprob: -12.589579582214355
    9. '{return' → logprob: -13.714579582214355
    10. ':return' → logprob: -14.089579582214355

Token 346: ' one' (ID: 1001)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4746590256690979
    2. ' return' → logprob: -0.9746590256690979
    3. '               ' → logprob: -7.599658966064453
    4. '           ' → logprob: -9.474658966064453
    5. '   ' → logprob: -13.224658966064453
    6. '	return' → logprob: -13.724658966064453
    7. '       ' → logprob: -14.349658966064453
    8. ' ' → logprob: -15.099658966064453
    9. ':return' → logprob: -15.349658966064453
    10. '{return' → logprob: -15.849658966064453

Token 347: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.08637978136539459
    2. 'side' → logprob: -2.5863797664642334
    3. '           ' → logprob: -5.5863800048828125
    4. '_side' → logprob: -6.2113800048828125
    5. '.side' → logprob: -8.461380004882812
    6. '       ' → logprob: -8.711380004882812
    7. ' or' → logprob: -8.836380004882812
    8. ' col' → logprob: -9.086380004882812
    9. '          ' → logprob: -9.336380004882812
    10. ')' → logprob: -9.461380004882812

Token 348: ' chocolate' (ID: 20162)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5865775346755981
    2. '               ' → logprob: -1.3365775346755981
    3. 'return' → logprob: -1.9615775346755981
    4. '           ' → logprob: -3.3365774154663086
    5. ' is' → logprob: -6.211577415466309
    6. ':return' → logprob: -6.961577415466309
    7. '==' → logprob: -8.211577415466309
    8. '{return' → logprob: -8.461577415466309
    9. '                   ' → logprob: -8.586577415466309
    10. '              ' → logprob: -8.711577415466309

Token 349: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029753267765045166
    2. '           ' → logprob: -4.2797532081604
    3. 'return' → logprob: -4.7797532081604
    4. ' return' → logprob: -5.1547532081604
    5. '                   ' → logprob: -8.029753684997559
    6. '              ' → logprob: -8.154753684997559
    7. ':return' → logprob: -8.654753684997559
    8. '                ' → logprob: -8.654753684997559
    9. '==' → logprob: -9.529753684997559
    10. ' or' → logprob: -9.529753684997559

Token 350: ' one' (ID: 1001)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2586537301540375
    2. 'return' → logprob: -1.5086537599563599
    3. '               ' → logprob: -5.00865364074707
    4. '           ' → logprob: -11.88365364074707
    5. '	return' → logprob: -12.00865364074707
    6. '                   ' → logprob: -12.50865364074707
    7. ' ' → logprob: -13.38365364074707
    8. ':return' → logprob: -13.88365364074707
    9. '```' → logprob: -14.13365364074707
    10. '   ' → logprob: -14.13365364074707

Token 351: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.02997390180826187
    2. 'side' → logprob: -3.9049739837646484
    3. ' is' → logprob: -4.779973983764648
    4. 'is' → logprob: -7.654973983764648
    5. '==' → logprob: -8.404973983764648
    6. ' or' → logprob: -9.779973983764648
    7. ' ==' → logprob: -9.904973983764648
    8. '           ' → logprob: -9.904973983764648
    9. '_side' → logprob: -10.529973983764648
    10. ' col' → logprob: -10.904973983764648

Token 352: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6028144359588623
    2. ' return' → logprob: -1.2278144359588623
    3. 'return' → logprob: -2.4778144359588623
    4. '           ' → logprob: -3.2278144359588623
    5. ' no' → logprob: -4.102814674377441
    6. ' is' → logprob: -4.852814674377441
    7. '==' → logprob: -5.602814674377441
    8. ' not' → logprob: -6.727814674377441
    9. ' ==' → logprob: -6.852814674377441
    10. '```' → logprob: -7.102814674377441

Token 353: ' chocolate' (ID: 20162)
  Prédit: ' chocolate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chocolate' → logprob: -0.5037992000579834
    2. '#' → logprob: -3.2537992000579834
    3. ' '#'' → logprob: -3.2537992000579834
    4. '=' → logprob: -3.3787992000579834
    5. 'cut' → logprob: -3.5037992000579834
    6. 't' → logprob: -3.7537992000579834
    7. ' col' → logprob: -3.8787992000579834
    8. ''' → logprob: -4.0037994384765625
    9. '<|end|>' → logprob: -4.0037994384765625
    10. '_' → logprob: -4.1287994384765625

Token 354: ' =>' (ID: 871)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019985849503427744
    2. 'return' → logprob: -7.126998424530029
    3. ' return' → logprob: -7.251998424530029
    4. '           ' → logprob: -8.376998901367188
    5. ':return' → logprob: -8.876998901367188
    6. ':
' → logprob: -9.626998901367188
    7. '                   ' → logprob: -10.751998901367188
    8. ':' → logprob: -11.376998901367188
    9. '              ' → logprob: -12.876998901367188
    10. '{return' → logprob: -13.251998901367188

Token 355: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5760323405265808
    2. 'return' → logprob: -0.8260323405265808
    3. '               ' → logprob: -9.326032638549805
    4. '           ' → logprob: -13.076032638549805
    5. '	return' → logprob: -14.576032638549805
    6. 'False' → logprob: -14.701032638549805
    7. '                   ' → logprob: -15.326032638549805
    8. '
' → logprob: -15.576032638549805
    9. 'Return' → logprob: -16.076032638549805
    10. ' ' → logprob: -16.451032638549805

Token 356: ' groove' (ID: 82774)
  Prédit: ' groove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groove' → logprob: -0.007223234977573156
    2. 'gro' → logprob: -5.382223129272461
    3. 'cut' → logprob: -6.132223129272461
    4. ' cut' → logprob: -8.507223129272461
    5. ' gro' → logprob: -9.507223129272461
    6. '_' → logprob: -10.257223129272461
    7. ' vertical' → logprob: -10.382223129272461
    8. ' grove' → logprob: -10.757223129272461
    9. 'vertical' → logprob: -10.882223129272461
    10. 'vert' → logprob: -11.882223129272461

Token 357: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033433556091040373
    2. '           ' → logprob: -6.37834358215332
    3. ' return' → logprob: -7.12834358215332
    4. 'return' → logprob: -7.25334358215332
    5. '                   ' → logprob: -9.25334358215332
    6. '       ' → logprob: -11.75334358215332
    7. ':return' → logprob: -12.37834358215332
    8. '
' → logprob: -12.50334358215332
    9. '   ' → logprob: -12.87834358215332
    10. '              ' → logprob: -13.12834358215332

Token 358: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012270158622413874
    2. ' return' → logprob: -7.626226902008057
    3. 'return' → logprob: -7.876226902008057
    4. '           ' → logprob: -8.001227378845215
    5. '                   ' → logprob: -10.751227378845215
    6. '
' → logprob: -13.751227378845215
    7. '       ' → logprob: -15.126227378845215
    8. ':return' → logprob: -15.376227378845215
    9. '   ' → logprob: -15.501227378845215
    10. '{return' → logprob: -15.751227378845215

Token 359: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1675925850868225
    2. ' return' → logprob: -1.9175925254821777
    3. '               ' → logprob: -4.917592525482178
    4. '           ' → logprob: -10.917593002319336
    5. '                   ' → logprob: -12.292593002319336
    6. '   ' → logprob: -14.417593002319336
    7. '       ' → logprob: -14.792593002319336
    8. '
' → logprob: -15.167593002319336
    9. '	return' → logprob: -15.167593002319336
    10. ':return' → logprob: -15.917593002319336

Token 360: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. 'True' → logprob: -21.375709533691406
    4. '(False' → logprob: -21.375709533691406
    5. '=False' → logprob: -23.000709533691406
    6. '_false' → logprob: -23.250709533691406
    7. 'false' → logprob: -23.625709533691406
    8. 'F' → logprob: -24.875709533691406
    9. '.False' → logprob: -26.250709533691406
    10. 'Fal' → logprob: -26.500709533691406

Token 361: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007166040013544261
    2. '
' → logprob: -7.750716686248779
    3. '   ' → logprob: -9.375716209411621
    4. '	' → logprob: -9.750716209411621
    5. ' return' → logprob: -9.875716209411621
    6. 'return' → logprob: -9.875716209411621
    7. '	return' → logprob: -10.875716209411621
    8. '        
' → logprob: -12.125716209411621
    9. '           ' → logprob: -12.375716209411621
    10. '<|end|>' → logprob: -12.750716209411621

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012213163427077234
    2. 'return' → logprob: -10.0001220703125
    3. '
' → logprob: -10.8751220703125
    4. '	' → logprob: -10.8751220703125
    5. ' return' → logprob: -10.8751220703125
    6. '   ' → logprob: -11.1251220703125
    7. '	return' → logprob: -12.7501220703125
    8. '           ' → logprob: -13.8751220703125
    9. '```' → logprob: -14.8751220703125
    10. '        
' → logprob: -15.6251220703125

Token 363: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15455412864685059
    2. '       ' → logprob: -2.2795541286468506
    3. ' return' → logprob: -3.9045541286468506
    4. '   ' → logprob: -3.9045541286468506
    5. '	return' → logprob: -8.27955436706543
    6. '
' → logprob: -8.52955436706543
    7. 'eturn' → logprob: -10.15455436706543
    8. '```' → logprob: -10.40455436706543
    9. '        
' → logprob: -11.65455436706543
    10. '           ' → logprob: -11.77955436706543

Token 364: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01416350994259119
    2. ' True' → logprob: -4.264163494110107
    3. 'False' → logprob: -18.514163970947266
    4. '(True' → logprob: -19.014163970947266
    5. '=True' → logprob: -22.389163970947266
    6. 'true' → logprob: -22.639163970947266
    7. 'Tr' → logprob: -23.639163970947266
    8. ' ' → logprob: -24.389163970947266
    9. '```' → logprob: -25.264163970947266
    10. 'T' → logprob: -25.389163970947266

Token 365: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2306329905986786
    2. '<|end|>' → logprob: -1.605633020401001
    3. '```' → logprob: -6.605632781982422
    4. '    
' → logprob: -6.980632781982422
    5. '<|end|>' → logprob: -7.355632781982422
    6. ' ' → logprob: -7.480632781982422
    7. '       ' → logprob: -7.855632781982422
    8. ')' → logprob: -7.855632781982422
    9. ' 
' → logprob: -8.980632781982422
    10. 'def' → logprob: -8.980632781982422

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011490796692669392
    2. 'def' → logprob: -5.011490821838379
    3. ' def' → logprob: -6.136490821838379
    4. '    
' → logprob: -6.511490821838379
    5. '<|end|>' → logprob: -7.761490821838379
    6. '```' → logprob: -8.636490821838379
    7. '        
' → logprob: -9.011490821838379
    8. ' 
' → logprob: -9.261490821838379
    9. '	def' → logprob: -9.761490821838379
    10. '
' → logprob: -9.886490821838379

Token 367: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07998677343130112
    2. '   ' → logprob: -2.579986810684204
    3. ' def' → logprob: -6.829986572265625
    4. '	def' → logprob: -11.829986572265625
    5. ' ' → logprob: -13.079986572265625
    6. '<|end|>' → logprob: -13.454986572265625
    7. '  ' → logprob: -13.579986572265625
    8. '    
' → logprob: -13.829986572265625
    9. '#' → logprob: -14.204986572265625
    10. '       ' → logprob: -14.329986572265625

Token 368: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.3191035985946655
    2. 'possible' → logprob: -1.6941035985946655
    3. ' possible' → logprob: -2.194103717803955
    4. 'make' → logprob: -2.444103717803955
    5. 'max' → logprob: -2.444103717803955
    6. ' make' → logprob: -2.569103717803955
    7. 'find' → logprob: -2.944103717803955
    8. ' max' → logprob: -3.444103717803955
    9. ' mark' → logprob: -3.444103717803955
    10. 'mark' → logprob: -4.569103717803955

Token 369: '_valid' (ID: 23321)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.41128066182136536
    2. '_horizontal' → logprob: -1.786280632019043
    3. '_' → logprob: -2.161280632019043
    4. '_possible' → logprob: -3.536280632019043
    5. '_all' → logprob: -4.286280632019043
    6. '_cut' → logprob: -5.036280632019043
    7. '_best' → logprob: -6.161280632019043
    8. '_next' → logprob: -6.661280632019043
    9. '_available' → logprob: -8.036280632019043
    10. '_opt' → logprob: -8.036280632019043

Token 370: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0026974014472216368
    2. '_cut' → logprob: -6.377697467803955
    3. '_horizontal' → logprob: -7.252697467803955
    4. '_s' → logprob: -8.627696990966797
    5. '_' → logprob: -9.627696990966797
    6. 'cuts' → logprob: -10.627696990966797
    7. ' cuts' → logprob: -12.377696990966797
    8. '_segments' → logprob: -13.627696990966797
    9. '_positions' → logprob: -13.877696990966797
    10. '_break' → logprob: -13.877696990966797

Token 371: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.0034538409672677517
    2. 'ut' → logprob: -5.753453731536865
    3. 'utting' → logprob: -9.003454208374023
    4. 'u' → logprob: -10.878454208374023
    5. ' uts' → logprob: -11.003454208374023
    6. 'horizontal' → logprob: -11.128454208374023
    7. '_' → logprob: -11.753454208374023
    8. 'on' → logprob: -11.940954208374023
    9. 'utter' → logprob: -12.128454208374023
    10. '#' → logprob: -12.253454208374023

Token 372: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0030851366464048624
    2. '(' → logprob: -6.003085136413574
    3. '_(' → logprob: -7.503085136413574
    4. '_' → logprob: -10.878085136413574
    5. 'self' → logprob: -11.003085136413574
    6. ' (' → logprob: -11.628085136413574
    7. '__(' → logprob: -12.503085136413574
    8. 's' → logprob: -13.003085136413574
    9. '   ' → logprob: -13.253085136413574
    10. '_self' → logprob: -13.253085136413574

Token 373: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062469176948070526
    2. 'self' → logprob: -3.062469244003296
    3. ',' → logprob: -4.687469005584717
    4. '(self' → logprob: -6.312469005584717
    5. '):
' → logprob: -6.437469005584717
    6. ')' → logprob: -7.187469005584717
    7. '_' → logprob: -9.187469482421875
    8. ' ):' → logprob: -9.187469482421875
    9. ' self' → logprob: -9.937469482421875
    10. '   ' → logprob: -10.062469482421875

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002444381359964609
    2. ' for' → logprob: -6.127444267272949
    3. 'for' → logprob: -8.50244426727295
    4. '
' → logprob: -11.12744426727295
    5. '   ' → logprob: -11.12744426727295
    6. '```' → logprob: -11.12744426727295
    7. ',' → logprob: -12.37744426727295
    8. '        
' → logprob: -13.12744426727295
    9. 'self' → logprob: -13.75244426727295
    10. '<|end|>' → logprob: -14.00244426727295

Token 375: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8709343075752258
    2. 'for' → logprob: -1.120934247970581
    3. ' for' → logprob: -1.370934247970581
    4. 'self' → logprob: -7.12093448638916
    5. ' self' → logprob: -7.74593448638916
    6. '   ' → logprob: -8.24593448638916
    7. '
' → logprob: -10.24593448638916
    8. '#' (adapté à ' #') → logprob: -10.24593448638916
    9. '        
' → logprob: -12.37093448638916
    10. ' ' → logprob: -12.62093448638916

Token 376: ' Find' (ID: 9764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18759064376354218
    2. ' for' → logprob: -2.3125905990600586
    3. 'self' → logprob: -3.0625905990600586
    4. ' self' → logprob: -4.312590599060059
    5. '       ' → logprob: -4.562590599060059
    6. '#' → logprob: -6.687590599060059
    7. '   ' → logprob: -9.312590599060059
    8. ' #' → logprob: -9.437590599060059
    9. 'def' → logprob: -11.687590599060059
    10. ' ' → logprob: -11.937590599060059

Token 377: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06785418093204498
    2. 'for' → logprob: -3.317854166030884
    3. ' valid' → logprob: -3.817854166030884
    4. ' horizontal' → logprob: -5.567854404449463
    5. ' all' → logprob: -5.817854404449463
    6. 'horizontal' → logprob: -8.692853927612305
    7. ' self' → logprob: -9.317853927612305
    8. ' possible' → logprob: -9.317853927612305
    9. 'self' → logprob: -9.817853927612305
    10. '#' → logprob: -10.442853927612305

Token 378: ' possible' (ID: 4149)
  Prédit: ' horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.5690739154815674
    2. 'horizontal' → logprob: -1.0690739154815674
    3. ' possible' → logprob: -2.9440739154815674
    4. 'possible' → logprob: -3.3190739154815674
    5. ' valid' → logprob: -6.944073677062988
    6. 'self' → logprob: -8.569073677062988
    7. 'for' → logprob: -8.569073677062988
    8. ' for' → logprob: -9.194073677062988
    9. 'valid' → logprob: -9.194073677062988
    10. ' potential' → logprob: -9.569073677062988

Token 379: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.10090070962905884
    2. 'horizontal' → logprob: -2.350900650024414
    3. '_horizontal' → logprob: -7.350900650024414
    4. '   ' → logprob: -11.350900650024414
    5. ' horizont' → logprob: -11.350900650024414
    6. ' self' → logprob: -11.350900650024414
    7. 'self' → logprob: -12.100900650024414
    8. ' horiz' → logprob: -12.225900650024414
    9. '_h' → logprob: -13.975900650024414
    10. '       ' → logprob: -14.100900650024414

Token 380: ' cuts' (ID: 29505)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.32280945777893066
    2. ' cuts' → logprob: -1.4478094577789307
    3. '_c' → logprob: -3.5728094577789307
    4. 'for' → logprob: -5.197809219360352
    5. 'cut' → logprob: -5.822809219360352
    6. ' for' → logprob: -6.447809219360352
    7. ' cut' → logprob: -7.197809219360352
    8. '   ' → logprob: -7.697809219360352
    9. '_cut' → logprob: -7.697809219360352
    10. ' lines' → logprob: -7.947809219360352

Token 381: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03485870733857155
    2. 'for' → logprob: -3.9098587036132812
    3. ' for' → logprob: -4.284858703613281
    4. '   ' → logprob: -8.659858703613281
    5. ':' → logprob: -8.909858703613281
    6. ',' → logprob: -9.909858703613281
    7. '
' → logprob: -10.534858703613281
    8. '        
' → logprob: -11.284858703613281
    9. '(self' → logprob: -11.909858703613281
    10. ':
' → logprob: -11.909858703613281

Token 382: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019377315416932106
    2. '
' → logprob: -4.7693772315979
    3. 'for' → logprob: -4.7693772315979
    4. ' for' → logprob: -6.1443772315979
    5. '   ' → logprob: -10.769377708435059
    6. '        
' → logprob: -11.019377708435059
    7. '```' → logprob: -11.519377708435059
    8. ',' → logprob: -11.769377708435059
    9. '
' → logprob: -12.894377708435059
    10. '           ' → logprob: -13.019377708435059

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015638722106814384
    2. 'for' → logprob: -4.640638828277588
    3. ' for' → logprob: -5.140638828277588
    4. '   ' → logprob: -12.39063835144043
    5. ',' → logprob: -12.89063835144043
    6. '
' → logprob: -13.01563835144043
    7. '```' → logprob: -14.01563835144043
    8. '	for' → logprob: -14.64063835144043
    9. '        
' → logprob: -14.89063835144043
    10. '	' → logprob: -15.14063835144043

Token 384: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15648595988750458
    2. '       ' → logprob: -2.4064860343933105
    3. ' for' → logprob: -2.9064860343933105
    4. '   ' → logprob: -9.906485557556152
    5. '
' → logprob: -12.156485557556152
    6. '	for' → logprob: -14.031485557556152
    7. ' ' → logprob: -14.531485557556152
    8. 'self' → logprob: -15.531485557556152
    9. '        
' → logprob: -15.531485557556152
    10. '```' → logprob: -15.781485557556152

Token 385: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.20190803706645966
    2. 'row' → logprob: -1.701907992362976
    3. 'i' → logprob: -8.201908111572266
    4. ' i' → logprob: -8.451908111572266
    5. 'r' → logprob: -12.451908111572266
    6. '   ' → logprob: -13.701908111572266
    7. '	row' → logprob: -14.326908111572266
    8. ' ' → logprob: -15.076908111572266
    9. 'self' → logprob: -15.201908111572266
    10. ' self' → logprob: -15.701908111572266

Token 386: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006724602542817593
    2. 'in' → logprob: -5.006724834442139
    3. ' ' → logprob: -11.88172435760498
    4. '   ' → logprob: -15.13172435760498
    5. 'In' → logprob: -15.25672435760498
    6. ',' → logprob: -15.25672435760498
    7. '1' → logprob: -15.75672435760498
    8. ')' → logprob: -15.75672435760498
    9. '	in' → logprob: -15.88172435760498
    10. '```' → logprob: -16.006725311279297

Token 387: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.474077969789505
    2. ' range' → logprob: -0.9740779399871826
    3. '0' → logprob: -14.224078178405762
    4. ' ' → logprob: -15.974078178405762
    5. '(range' → logprob: -16.349077224731445
    6. '	range' → logprob: -16.724077224731445
    7. '   ' → logprob: -17.599077224731445
    8. ' in' → logprob: -18.099077224731445
    9. '1' → logprob: -19.099077224731445
    10. '_range' → logprob: -19.224077224731445

Token 388: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005236717872321606
    2. '(' → logprob: -5.255236625671387
    3. '1' → logprob: -13.380236625671387
    4. ' self' → logprob: -13.755236625671387
    5. 'self' → logprob: -15.380236625671387
    6. ' (' → logprob: -16.005237579345703
    7. '(
' → logprob: -17.630237579345703
    8. ' ' → logprob: -18.380237579345703
    9. '   ' → logprob: -19.130237579345703
    10. '	self' → logprob: -19.505237579345703

Token 389: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -4.320199877838604e-07
    2. 'height' → logprob: -14.75
    3. '   ' → logprob: -17.875
    4. '.' → logprob: -18.25
    5. ' height' → logprob: -19.5
    6. '.width' → logprob: -19.5
    7. 'self' → logprob: -19.625
    8. ' .' → logprob: -20.125
    9. '	height' → logprob: -20.375
    10. '       ' → logprob: -21.0

Token 390: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004640284460037947
    2. '-' → logprob: -5.379640102386475
    3. '   ' → logprob: -11.004640579223633
    4. ' ' → logprob: -12.754640579223633
    5. '       ' → logprob: -15.379640579223633
    6. ' ' → logprob: -16.379640579223633
    7. ')' → logprob: -16.504640579223633
    8. '  ' → logprob: -16.504640579223633
    9. '1' → logprob: -16.629640579223633
    10. '):
' → logprob: -16.754640579223633

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.375040054321289
    4. '```' → logprob: -17.12504005432129
    5. '<|end|>' → logprob: -18.50004005432129
    6. '2' → logprob: -18.62504005432129
    7. '       ' → logprob: -18.87504005432129
    8. ')' → logprob: -18.87504005432129
    9. '۱' → logprob: -19.50004005432129
    10. '  ' → logprob: -19.75004005432129

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.75000762939453
    4. '```' → logprob: -18.25000762939453
    5. '
' → logprob: -18.37500762939453
    6. '2' → logprob: -18.87500762939453
    7. '<|end|>' → logprob: -19.87500762939453
    8. ')' → logprob: -20.75000762939453
    9. '۱' → logprob: -20.75000762939453
    10. 'class' → logprob: -21.12500762939453

Token 393: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04865765571594238
    2. '):' → logprob: -3.0486576557159424
    3. '):
' → logprob: -10.173657417297363
    4. ' ):
' → logprob: -11.548657417297363
    5. '   ' → logprob: -11.673657417297363
    6. '       ' → logprob: -11.923657417297363
    7. ':' → logprob: -12.548657417297363
    8. ':
' → logprob: -13.673657417297363
    9. '):

' → logprob: -13.923657417297363
    10. ' ):' → logprob: -14.423657417297363

Token 394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002320937579497695
    2. '       ' → logprob: -6.627320766448975
    3. ':' → logprob: -7.502320766448975
    4. ':
' → logprob: -8.377321243286133
    5. ' if' → logprob: -9.377321243286133
    6. ',' → logprob: -9.752321243286133
    7. 'self' → logprob: -10.752321243286133
    8. '```' → logprob: -11.252321243286133
    9. 'if' → logprob: -11.502321243286133
    10. '   ' → logprob: -11.627321243286133

Token 395: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7374018430709839
    2. 'if' → logprob: -1.2374018430709839
    3. '           ' → logprob: -2.1124019622802734
    4. 'self' → logprob: -2.4874019622802734
    5. ' self' → logprob: -3.6124019622802734
    6. '   ' → logprob: -8.612401962280273
    7. '       ' → logprob: -8.737401962280273
    8. '               ' → logprob: -9.487401962280273
    9. '```' → logprob: -11.737401962280273
    10. '
' → logprob: -11.862401962280273

Token 396: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9390741586685181
    2. ' if' → logprob: -1.064074158668518
    3. 'self' → logprob: -1.564074158668518
    4. ' self' → logprob: -3.1890740394592285
    5. '           ' → logprob: -4.3140740394592285
    6. '   ' → logprob: -9.939074516296387
    7. '       ' → logprob: -11.064074516296387
    8. ' ' → logprob: -11.564074516296387
    9. '               ' → logprob: -12.189074516296387
    10. '```' → logprob: -12.439074516296387

Token 397: ' cut' (ID: 6092)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4775308072566986
    2. ' self' → logprob: -1.227530837059021
    3. '           ' → logprob: -3.3525307178497314
    4. '       ' → logprob: -3.9775307178497314
    5. ' if' → logprob: -4.3525309562683105
    6. 'if' → logprob: -4.9775309562683105
    7. 'make' → logprob: -5.6025309562683105
    8. ' make' → logprob: -6.3525309562683105
    9. '_cut' → logprob: -6.6025309562683105
    10. ' cut' → logprob: -6.8525309562683105

Token 398: ' here' (ID: 2105)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33952561020851135
    2. 'self' → logprob: -2.0895256996154785
    3. 'if' → logprob: -2.4645256996154785
    4. ' self' → logprob: -2.9645256996154785
    5. '           ' → logprob: -5.2145256996154785
    6. '(self' → logprob: -5.4645256996154785
    7. ',' → logprob: -5.5895256996154785
    8. '_' → logprob: -6.2145256996154785
    9. '       ' → logprob: -6.2145256996154785
    10. ' =' → logprob: -6.2145256996154785

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6440145969390869
    2. '           ' → logprob: -1.144014596939087
    3. ' if' → logprob: -1.894014596939087
    4. '       ' → logprob: -5.769014358520508
    5. 'self' → logprob: -7.019014358520508
    6. '               ' → logprob: -7.269014358520508
    7. 'if' → logprob: -8.269014358520508
    8. ' ,' → logprob: -8.519014358520508
    9. ' self' → logprob: -8.644014358520508
    10. '   ' → logprob: -8.769014358520508

Token 400: ' all' (ID: 722)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.26065197587013245
    2. 'if' → logprob: -1.76065194606781
    3. 'self' → logprob: -3.2606520652770996
    4. ' self' → logprob: -4.1356520652771
    5. '           ' → logprob: -5.7606520652771
    6. '               ' → logprob: -12.635651588439941
    7. '       ' → logprob: -12.885651588439941
    8. ' ' → logprob: -13.260651588439941
    9. '   ' → logprob: -13.510651588439941
    10. '	if' → logprob: -14.135651588439941

Token 401: ' columns' (ID: 15697)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.046732787042856216
    2. ' self' → logprob: -3.2967329025268555
    3. '(self' → logprob: -4.7967329025268555
    4. '[self' → logprob: -9.296732902526855
    5. 'not' → logprob: -9.421732902526855
    6. '           ' → logprob: -10.296732902526855
    7. '       ' → logprob: -10.421732902526855
    8. 'if' → logprob: -10.671732902526855
    9. '   ' → logprob: -10.671732902526855
    10. 'segments' → logprob: -10.921732902526855

Token 402: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.4771444499492645
    2. 'must' → logprob: -1.727144479751587
    3. '           ' → logprob: -2.227144479751587
    4. ' if' → logprob: -3.352144479751587
    5. ' in' → logprob: -3.602144479751587
    6. 'if' → logprob: -4.727144241333008
    7. ' at' → logprob: -5.352144241333008
    8. ' have' → logprob: -5.852144241333008
    9. '       ' → logprob: -5.852144241333008
    10. ' for' → logprob: -5.977144241333008

Token 403: ' have' (ID: 679)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.3538894057273865
    2. 'self' → logprob: -1.7288894653320312
    3. ' self' → logprob: -2.2288894653320312
    4. 'be' → logprob: -5.103889465332031
    5. '           ' → logprob: -5.728889465332031
    6. ' have' → logprob: -6.103889465332031
    7. ' allow' → logprob: -7.978889465332031
    8. 'have' → logprob: -8.353889465332031
    9. '       ' → logprob: -8.853889465332031
    10. ' return' → logprob: -9.603889465332031

Token 404: ' chocolate' (ID: 20162)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.036523427814245224
    2. ' self' → logprob: -3.4115233421325684
    3. 'True' → logprob: -6.661523342132568
    4. ''#' → logprob: -7.786523342132568
    5. '(self' → logprob: -8.161523818969727
    6. 'not' → logprob: -8.411523818969727
    7. ''' → logprob: -8.911523818969727
    8. ' not' → logprob: -9.411523818969727
    9. ' True' → logprob: -9.411523818969727
    10. ' '#'' → logprob: -9.536523818969727

Token 405: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14270491898059845
    2. ' if' → logprob: -3.017704963684082
    3. 'and' → logprob: -3.392704963684082
    4. ' at' → logprob: -4.267704963684082
    5. '           ' → logprob: -4.767704963684082
    6. ' in' → logprob: -4.892704963684082
    7. 'if' → logprob: -5.017704963684082
    8. ' or' → logprob: -5.142704963684082
    9. '==' → logprob: -6.267704963684082
    10. '       ' → logprob: -6.517704963684082

Token 406: ' both' (ID: 2973)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.1346617043018341
    2. 'this' → logprob: -3.3846616744995117
    3. ' both' → logprob: -3.8846616744995117
    4. 'row' → logprob: -4.134661674499512
    5. 'the' → logprob: -4.259661674499512
    6. 'grid' → logprob: -4.509661674499512
    7. 'self' → logprob: -4.509661674499512
    8. 'that' → logprob: -5.759661674499512
    9. 'at' → logprob: -6.009661674499512
    10. ''#' → logprob: -6.384661674499512

Token 407: ' rows' (ID: 13585)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.863604724407196
    2. 'rows' → logprob: -1.3636047840118408
    3. 'self' → logprob: -1.8636047840118408
    4. '[row' → logprob: -2.363604784011841
    5. 'grid' → logprob: -3.613604784011841
    6. ' rows' → logprob: -3.863604784011841
    7. ' row' → logprob: -5.113604545593262
    8. ' self' → logprob: -5.738604545593262
    9. 'cells' → logprob: -5.863604545593262
    10. '[self' → logprob: -6.113604545593262

Token 408: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.567469596862793
    2. '           ' → logprob: -0.942469596862793
    3. ' if' → logprob: -3.567469596862793
    4. 'and' → logprob: -5.067469596862793
    5. ' or' → logprob: -5.192469596862793
    6. '       ' → logprob: -6.567469596862793
    7. '               ' → logprob: -7.317469596862793
    8. ' at' → logprob: -7.942469596862793
    9. 'if' → logprob: -8.442469596862793
    10. ',' → logprob: -8.567469596862793

Token 409: ' both' (ID: 2973)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5216342210769653
    2. ' self' → logprob: -1.7716342210769653
    3. ' a' → logprob: -3.146634101867676
    4. ' have' → logprob: -3.146634101867676
    5. ' be' → logprob: -3.271634101867676
    6. 'have' → logprob: -3.521634101867676
    7. 'a' → logprob: -3.646634101867676
    8. ' not' → logprob: -4.646634101867676
    9. 'not' → logprob: -4.646634101867676
    10. ' all' → logprob: -4.896634101867676

Token 410: ' empty' (ID: 8213)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.14836056530475616
    2. 'grid' → logprob: -2.89836049079895
    3. 'not' → logprob: -3.89836049079895
    4. 'row' → logprob: -4.273360729217529
    5. ' rows' → logprob: -4.398360729217529
    6. 'cells' → logprob: -4.523360729217529
    7. ' not' → logprob: -5.023360729217529
    8. 'empty' → logprob: -5.648360729217529
    9. 'False' → logprob: -6.023360729217529
    10. 'or' → logprob: -6.398360729217529

Token 411: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26344332098960876
    2. ' if' → logprob: -2.1384432315826416
    3. '       ' → logprob: -2.8884432315826416
    4. ' or' → logprob: -3.2634432315826416
    5. ' and' → logprob: -4.888443470001221
    6. ',' → logprob: -5.388443470001221
    7. 'if' → logprob: -5.888443470001221
    8. '.' → logprob: -7.138443470001221
    9. '               ' → logprob: -7.263443470001221
    10. ' for' → logprob: -7.388443470001221

Token 412: ' groove' (ID: 82774)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.3172966241836548
    2. ' row' → logprob: -2.8172965049743652
    3. 'the' → logprob: -2.8172965049743652
    4. ' the' → logprob: -3.6922965049743652
    5. '[row' → logprob: -3.8172965049743652
    6. 'both' → logprob: -3.8172965049743652
    7. 'that' → logprob: -4.317296504974365
    8. ' both' → logprob: -4.567296504974365
    9. 'self' → logprob: -4.567296504974365
    10. 'range' → logprob: -4.817296504974365

Token 413: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05186501517891884
    2. '       ' → logprob: -3.3018651008605957
    3. ' if' → logprob: -5.426865100860596
    4. '<|end|>' → logprob: -6.176865100860596
    5. ' and' → logprob: -6.926865100860596
    6. 's' → logprob: -7.051865100860596
    7. ' or' → logprob: -7.051865100860596
    8. '.' → logprob: -7.176865100860596
    9. ',' → logprob: -7.176865100860596
    10. '               ' → logprob: -7.551865100860596

Token 414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01170171145349741
    2. ' if' → logprob: -4.886701583862305
    3. '       ' → logprob: -5.636701583862305
    4. 'if' → logprob: -8.261701583862305
    5. ',' → logprob: -9.511701583862305
    6. '   ' → logprob: -9.511701583862305
    7. 'self' → logprob: -9.886701583862305
    8. '               ' → logprob: -10.761701583862305
    9. ' self' → logprob: -11.261701583862305
    10. '	       ' → logprob: -12.261701583862305

Token 415: ' can' (ID: 665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6444863677024841
    2. '           ' → logprob: -1.644486427307129
    3. ' if' → logprob: -1.644486427307129
    4. 'self' → logprob: -2.519486427307129
    5. ' self' → logprob: -4.894486427307129
    6. '   ' → logprob: -7.269486427307129
    7. '       ' → logprob: -9.644486427307129
    8. '               ' → logprob: -10.644486427307129
    9. '```' → logprob: -10.894486427307129
    10. ' ' → logprob: -11.019486427307129

Token 416: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -3.054500666621607e-06
    2. '_' → logprob: -14.00000286102295
    3. ' _' → logprob: -14.50000286102295
    4. '_make' → logprob: -15.00000286102295
    5. '_put' → logprob: -15.12500286102295
    6. '_c' → logprob: -15.25000286102295
    7. '_continue' → logprob: -15.25000286102295
    8. '-cut' → logprob: -16.000003814697266
    9. '=cut' → logprob: -16.375003814697266
    10. 'cut' → logprob: -16.375003814697266

Token 417: ' =' (ID: 314)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00017946491425391287
    2. '_' → logprob: -9.000179290771484
    3. ' =' → logprob: -10.125179290771484
    4. '=' → logprob: -11.750179290771484
    5. '_horizontal' → logprob: -12.750179290771484
    6. '=_' → logprob: -13.375179290771484
    7. 's' → logprob: -13.625179290771484
    8. '_here' → logprob: -14.500179290771484
    9. '_=' → logprob: -15.000179290771484
    10. 'Horiz' → logprob: -15.125179290771484

Token 418: ' True' (ID: 6432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048589982092380524
    2. ' self' → logprob: -3.0485899448394775
    3. '           ' → logprob: -13.798589706420898
    4. 'True' → logprob: -14.048589706420898
    5. '(self' → logprob: -14.923589706420898
    6. '       ' → logprob: -16.1735897064209
    7. '[self' → logprob: -16.2985897064209
    8. '	self' → logprob: -16.6735897064209
    9. ' True' → logprob: -16.7985897064209
    10. '`' → logprob: -17.2985897064209

Token 419: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006784639321267605
    2. ' if' → logprob: -5.756784439086914
    3. '<|end|>' → logprob: -6.381784439086914
    4. ',' → logprob: -7.506784439086914
    5. '
' → logprob: -8.006784439086914
    6. '       ' → logprob: -8.256784439086914
    7. '<|end|>' → logprob: -8.756784439086914
    8. '            
' → logprob: -9.006784439086914
    9. ' and' → logprob: -9.256784439086914
    10. ' for' → logprob: -9.256784439086914

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021760274830739945
    2. ' for' → logprob: -9.25021743774414
    3. ' if' → logprob: -9.62521743774414
    4. '       ' → logprob: -10.62521743774414
    5. 'for' → logprob: -11.50021743774414
    6. 'if' → logprob: -12.12521743774414
    7. '   ' → logprob: -12.75021743774414
    8. '
' → logprob: -12.87521743774414
    9. ',' → logprob: -12.87521743774414
    10. '<|end|>' → logprob: -12.87521743774414

Token 421: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031572502106428146
    2. ' for' → logprob: -4.156572341918945
    3. ' if' → logprob: -4.906572341918945
    4. 'for' (adapté à ' for') → logprob: -5.156572341918945
    5. 'if' → logprob: -6.281572341918945
    6. '       ' → logprob: -8.156572341918945
    7. '   ' → logprob: -10.406572341918945
    8. 'can' → logprob: -10.906572341918945
    9. ' can' → logprob: -11.281572341918945
    10. '               ' → logprob: -11.281572341918945

Token 422: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.016052084043622017
    2. 'col' → logprob: -4.14105224609375
    3. ' self' → logprob: -11.39105224609375
    4. 'self' → logprob: -12.39105224609375
    5. '	col' → logprob: -13.76605224609375
    6. ' row' → logprob: -14.51605224609375
    7. '_col' → logprob: -15.51605224609375
    8. ' ' → logprob: -15.89105224609375
    9. '(col' → logprob: -15.89105224609375
    10. ' ' → logprob: -16.14105224609375

Token 423: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017842605710029602
    2. 'in' → logprob: -4.142842769622803
    3. '<|end|>' → logprob: -6.392842769622803
    4. '<|end|>' → logprob: -9.517842292785645
    5. ' ' → logprob: -10.392842292785645
    6. '            ' → logprob: -11.892842292785645
    7. '        ' → logprob: -12.392842292785645
    8. ')' → logprob: -12.517842292785645
    9. '           ' → logprob: -12.892842292785645
    10. '	in' → logprob: -13.642842292785645

Token 424: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889562100172043
    2. 'range' → logprob: -2.5788955688476562
    3. ' in' → logprob: -13.078895568847656
    4. '(range' → logprob: -13.328895568847656
    5. ' ' → logprob: -13.953895568847656
    6. ')' → logprob: -14.328895568847656
    7. '	range' → logprob: -14.953895568847656
    8. '<|end|>' → logprob: -16.578895568847656
    9. '    ' → logprob: -16.703895568847656
    10. 'in' → logprob: -16.828895568847656

Token 425: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004182793782092631
    2. 'self' → logprob: -7.875418186187744
    3. ' self' → logprob: -10.500418663024902
    4. '(' → logprob: -12.000418663024902
    5. '=self' → logprob: -13.250418663024902
    6. '           ' → logprob: -13.500418663024902
    7. '       ' → logprob: -15.125418663024902
    8. '[self' → logprob: -15.250418663024902
    9. '	self' → logprob: -15.750418663024902
    10. ' (' → logprob: -16.125417709350586

Token 426: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0001105762057704851
    2. 'width' → logprob: -9.500110626220703
    3. '.height' → logprob: -11.125110626220703
    4. '   ' → logprob: -12.000110626220703
    5. ' width' → logprob: -12.500110626220703
    6. ')' → logprob: -12.625110626220703
    7. ' .' → logprob: -13.000110626220703
    8. '.' → logprob: -13.500110626220703
    9. '       ' → logprob: -13.875110626220703
    10. '(width' → logprob: -14.125110626220703

Token 427: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760612487792969
    2. '):
' → logprob: -0.8260612487792969
    3. ' ):' → logprob: -10.326061248779297
    4. '       ' → logprob: -10.826061248779297
    5. '):
' → logprob: -10.951061248779297
    6. '           ' → logprob: -11.201061248779297
    7. '   ' → logprob: -11.826061248779297
    8. ')' → logprob: -11.826061248779297
    9. ' ):
' → logprob: -11.826061248779297
    10. ':' → logprob: -12.201061248779297

Token 428: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008059990592300892
    2. '<|end|>' → logprob: -5.758059978485107
    3. ' if' → logprob: -6.133059978485107
    4. ':' → logprob: -7.133059978485107
    5. '           ' → logprob: -7.258059978485107
    6. '<|end|>' → logprob: -8.383060455322266
    7. ',' → logprob: -8.508060455322266
    8. '                ' → logprob: -8.758060455322266
    9. '                
' → logprob: -8.758060455322266
    10. ' ' → logprob: -9.383060455322266

Token 429: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0755520686507225
    2. '               ' → logprob: -2.950551986694336
    3. 'if' (adapté à ' if') → logprob: -4.075551986694336
    4. '           ' → logprob: -6.200551986694336
    5. '                ' → logprob: -7.450551986694336
    6. '                   ' → logprob: -8.200551986694336
    7. '            ' → logprob: -8.700551986694336
    8. ' ' → logprob: -8.825551986694336
    9. '<|end|>' → logprob: -9.700551986694336
    10. '   ' → logprob: -10.575551986694336

Token 430: ' self' (ID: 1051)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3965953588485718
    2. 'not' → logprob: -1.7715953588485718
    3. 'self' → logprob: -2.5215954780578613
    4. ' self' → logprob: -2.7715954780578613
    5. '(self' → logprob: -4.771595478057861
    6. ' (' → logprob: -5.646595478057861
    7. '(not' → logprob: -6.771595478057861
    8. '           ' → logprob: -7.396595478057861
    9. '   ' → logprob: -8.146595001220703
    10. ' ' → logprob: -8.646595001220703

Token 431: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0034862698521465063
    2. 'grid' → logprob: -5.878486156463623
    3. '.can' → logprob: -8.128486633300781
    4. '.' → logprob: -8.503486633300781
    5. '.horizontal' → logprob: -9.503486633300781
    6. 'can' → logprob: -10.628486633300781
    7. ' .' → logprob: -10.628486633300781
    8. ' grid' → logprob: -10.878486633300781
    9. '   ' → logprob: -11.378486633300781
    10. ' can' → logprob: -12.128486633300781

Token 432: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -7.159660890465602e-05
    2. ' [' → logprob: -9.75007152557373
    3. '][' → logprob: -12.62507152557373
    4. '           ' → logprob: -12.87507152557373
    5. '[' → logprob: -13.37507152557373
    6. '[
' → logprob: -14.12507152557373
    7. 'row' → logprob: -14.12507152557373
    8. ' row' → logprob: -14.50007152557373
    9. ')[' → logprob: -14.50007152557373
    10. '```' → logprob: -14.75007152557373

Token 433: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006831994745880365
    2. '[col' → logprob: -5.006832122802734
    3. ' ][' → logprob: -9.881832122802734
    4. ']' → logprob: -10.631832122802734
    5. '[' → logprob: -11.256832122802734
    6. '"][' → logprob: -11.756832122802734
    7. '[row' → logprob: -12.256832122802734
    8. ''][' → logprob: -12.631832122802734
    9. '<|end|>' → logprob: -12.756832122802734
    10. '           ' → logprob: -13.131832122802734

Token 434: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -8.482821431243792e-05
    2. ' col' → logprob: -10.00008487701416
    3. '][' → logprob: -10.25008487701416
    4. '[col' → logprob: -12.75008487701416
    5. ' ][' → logprob: -15.12508487701416
    6. '	col' → logprob: -15.25008487701416
    7. ']' → logprob: -16.000083923339844
    8. ' ' → logprob: -16.250083923339844
    9. '
' → logprob: -16.500083923339844
    10. '(col' → logprob: -16.625083923339844

Token 435: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01175190880894661
    2. ']==' → logprob: -4.636752128601074
    3. ' ]' → logprob: -6.886752128601074
    4. ']!=' → logprob: -7.511752128601074
    5. '==' → logprob: -8.386752128601074
    6. ']=='' → logprob: -9.136752128601074
    7. ' ==' → logprob: -10.261752128601074
    8. '!=' → logprob: -11.386752128601074
    9. '']' → logprob: -11.511752128601074
    10. ']!='' → logprob: -11.636752128601074

Token 436: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03560594096779823
    2. '!=' → logprob: -3.7856059074401855
    3. ' ==' → logprob: -4.9106059074401855
    4. '=='' → logprob: -6.2856059074401855
    5. ' !=' → logprob: -6.4106059074401855
    6. ']' → logprob: -7.6606059074401855
    7. ']==' → logprob: -7.7856059074401855
    8. ''#' → logprob: -8.285606384277344
    9. ''' → logprob: -9.660606384277344
    10. '!='' → logprob: -9.785606384277344

Token 437: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.008722944185137749
    2. ''' → logprob: -4.75872278213501
    3. ' '#'' → logprob: -9.258723258972168
    4. ''.' → logprob: -12.758723258972168
    5. '"#' → logprob: -12.758723258972168
    6. ''*' → logprob: -13.258723258972168
    7. ''^' → logprob: -13.258723258972168
    8. ''\' → logprob: -14.008723258972168
    9. ''$' → logprob: -14.758723258972168
    10. ''s' → logprob: -15.008723258972168

Token 438: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6975196003913879
    2. ' and' → logprob: -1.1975195407867432
    3. ' !=' → logprob: -1.8225195407867432
    4. 'and' → logprob: -3.822519540786743
    5. 'or' → logprob: -4.947519779205322
    6. '!=' → logprob: -4.947519779205322
    7. ' ' → logprob: -6.947519779205322
    8. '               ' → logprob: -8.197519302368164
    9. ' xor' → logprob: -8.322519302368164
    10. '                ' → logprob: -8.572519302368164

Token 439: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11704275012016296
    2. 'self' → logprob: -2.3670427799224854
    3. ' not' → logprob: -4.242042541503906
    4. 'not' → logprob: -6.992042541503906
    5. ' '' → logprob: -7.367042541503906
    6. ''' → logprob: -7.492042541503906
    7. ' ' → logprob: -9.492042541503906
    8. ''s' → logprob: -10.992042541503906
    9. ' '#'' → logprob: -11.054542541503906
    10. ' (' → logprob: -11.117042541503906

Token 440: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.5960269570350647
    2. ' grid' → logprob: -1.22102689743042
    3. 'grid' → logprob: -2.22102689743042
    4. 'self' → logprob: -3.72102689743042
    5. ' self' → logprob: -4.22102689743042
    6. ' not' → logprob: -5.72102689743042
    7. '           ' → logprob: -7.22102689743042
    8. '.' → logprob: -7.59602689743042
    9. '
' → logprob: -8.096027374267578
    10. 'not' → logprob: -8.471027374267578

Token 441: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.0054679443128407
    2. ' [' → logprob: -5.255467891693115
    3. ' +' → logprob: -10.255468368530273
    4. '+' → logprob: -10.380468368530273
    5. 'row' → logprob: -10.505468368530273
    6. ' row' → logprob: -10.630468368530273
    7. '[self' → logprob: -10.880468368530273
    8. '           ' → logprob: -11.255468368530273
    9. 'grid' → logprob: -11.380468368530273
    10. '   ' → logprob: -11.380468368530273

Token 442: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7010954022407532
    2. ' +' → logprob: -0.7010954022407532
    3. '][' → logprob: -5.2010955810546875
    4. '[row' → logprob: -6.3260955810546875
    5. '[col' → logprob: -8.076095581054688
    6. ' [' → logprob: -9.451095581054688
    7. '[' → logprob: -9.951095581054688
    8. '+[' → logprob: -9.951095581054688
    9. '   ' → logprob: -10.201095581054688
    10. 'row' → logprob: -11.201095581054688

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020568605395965278
    2. ' ' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.375205993652344
    4. '0' → logprob: -15.500205993652344
    5. '```' → logprob: -15.875205993652344
    6. '           ' → logprob: -16.375205993652344
    7. '       ' → logprob: -16.875205993652344
    8. ' col' → logprob: -16.875205993652344
    9. 'col' → logprob: -17.250205993652344
    10. '<|end|>' → logprob: -17.625205993652344

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038682064041495323
    2. 'col' → logprob: -8.000387191772461
    3. ' ' → logprob: -10.250387191772461
    4. ' col' → logprob: -11.250387191772461
    5. '[col' → logprob: -13.125387191772461
    6. '   ' → logprob: -14.250387191772461
    7. '0' → logprob: -15.750387191772461
    8. '(col' → logprob: -16.87538719177246
    9. '```' → logprob: -17.37538719177246
    10. '       ' → logprob: -17.75038719177246

Token 445: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05525347217917442
    2. '[col' → logprob: -2.930253505706787
    3. '[row' → logprob: -8.055253028869629
    4. ' ][' → logprob: -11.180253028869629
    5. ']' → logprob: -11.805253028869629
    6. '[' → logprob: -11.930253028869629
    7. 'col' → logprob: -12.055253028869629
    8. '"][' → logprob: -12.430253028869629
    9. ''][' → logprob: -12.430253028869629
    10. '       ' → logprob: -13.180253028869629

Token 446: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.04973611980676651
    2. '[col' → logprob: -3.0497360229492188
    3. ' col' → logprob: -6.799736022949219
    4. ']' → logprob: -12.424736022949219
    5. '	col' → logprob: -12.549736022949219
    6. '[row' → logprob: -12.549736022949219
    7. 'row' → logprob: -12.549736022949219
    8. '#' → logprob: -12.674736022949219
    9. ''#' → logprob: -12.674736022949219
    10. '(col' → logprob: -12.924736022949219

Token 447: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002284076064825058
    2. ']!=' → logprob: -6.877284049987793
    3. ']==' → logprob: -7.127284049987793
    4. '']' → logprob: -8.127284049987793
    5. ' ]' → logprob: -9.377284049987793
    6. ']!='' → logprob: -11.252284049987793
    7. ' !=' → logprob: -11.502284049987793
    8. '==' → logprob: -11.627284049987793
    9. '!=' → logprob: -11.877284049987793
    10. ']=='' → logprob: -12.002284049987793

Token 448: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.12448546290397644
    2. '!=' → logprob: -2.374485492706299
    3. ' ==' → logprob: -3.999485492706299
    4. '==' → logprob: -5.249485492706299
    5. '!='' → logprob: -8.37448501586914
    6. ']!=' → logprob: -10.37448501586914
    7. '```' → logprob: -10.74948501586914
    8. ']' → logprob: -10.74948501586914
    9. ' not' → logprob: -10.87448501586914
    10. ')' → logprob: -10.87448501586914

Token 449: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0739196315407753
    2. ''' → logprob: -2.9489195346832275
    3. ''.' → logprob: -4.198919773101807
    4. ' '#' → logprob: -6.198919773101807
    5. ' '#'' → logprob: -7.198919773101807
    6. ' '' → logprob: -8.573919296264648
    7. ' ' → logprob: -9.198919296264648
    8. '   ' → logprob: -9.573919296264648
    9. '"#' → logprob: -9.886419296264648
    10. ''t' → logprob: -10.136419296264648

Token 450: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23144085705280304
    2. ':
' → logprob: -2.106440782546997
    3. '               ' → logprob: -2.606440782546997
    4. ' continue' → logprob: -5.606441020965576
    5. '           ' → logprob: -5.731441020965576
    6. '                   ' → logprob: -6.731441020965576
    7. 'continue' → logprob: -6.981441020965576
    8. '==' → logprob: -7.481441020965576
    9. '<|end|>' → logprob: -8.231440544128418
    10. ':return' → logprob: -8.856440544128418

Token 451: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6568872332572937
    2. '                   ' → logprob: -1.2818872928619385
    3. ':' → logprob: -2.1568872928619385
    4. ' continue' → logprob: -2.6568872928619385
    5. ':
' → logprob: -4.281887054443359
    6. '                       ' → logprob: -7.031887054443359
    7. 'continue' → logprob: -7.031887054443359
    8. '           ' → logprob: -7.406887054443359
    9. ',' → logprob: -7.656887054443359
    10. ' or' → logprob: -8.78188705444336

Token 452: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4940085709095001
    2. '               ' → logprob: -1.1190085411071777
    3. 'continue' → logprob: -2.8690085411071777
    4. '                   ' → logprob: -5.244008541107178
    5. '	continue' → logprob: -7.494008541107178
    6. '                       ' → logprob: -7.619008541107178
    7. '	               ' → logprob: -10.744009017944336
    8. '_continue' → logprob: -10.744009017944336
    9. '           ' → logprob: -10.994009017944336
    10. ' ' → logprob: -11.494009017944336

Token 453: ' groove' (ID: 82774)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.06493272632360458
    2. 'continue' → logprob: -2.8149328231811523
    3. '               ' → logprob: -6.439932823181152
    4. '                   ' → logprob: -6.689932823181152
    5. '	continue' → logprob: -9.564932823181152
    6. '                       ' → logprob: -10.564932823181152
    7. '           ' → logprob: -11.689932823181152
    8. ' pass' → logprob: -12.439932823181152
    9. ' ' → logprob: -12.939932823181152
    10. '                ' → logprob: -13.689932823181152

Token 454: ' line' (ID: 2543)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9313088059425354
    2. '                   ' → logprob: -1.5563087463378906
    3. ' continue' → logprob: -2.4313087463378906
    4. ' is' → logprob: -2.6813087463378906
    5. '           ' → logprob: -2.8063087463378906
    6. ' must' → logprob: -3.0563087463378906
    7. ' =' → logprob: -3.1813087463378906
    8. 'continue' → logprob: -3.5563087463378906
    9. '                       ' → logprob: -4.931308746337891
    10. '=' → logprob: -5.056308746337891

Token 455: ' possible' (ID: 4149)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3927900493144989
    2. ' continue' → logprob: -1.7677900791168213
    3. '               ' → logprob: -2.7677900791168213
    4. ' =' → logprob: -3.6427900791168213
    5. 'continue' → logprob: -3.7677900791168213
    6. '                       ' → logprob: -4.142789840698242
    7. '<|end|>' → logprob: -5.017789840698242
    8. ' is' → logprob: -5.267789840698242
    9. '           ' → logprob: -5.642789840698242
    10. '=' → logprob: -6.267789840698242

Token 456: ' here' (ID: 2105)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.062350574880838394
    2. '               ' → logprob: -3.3123505115509033
    3. ' continue' → logprob: -4.312350749969482
    4. '                       ' → logprob: -4.812350749969482
    5. 'continue' → logprob: -6.687350749969482
    6. ',' → logprob: -8.437350273132324
    7. '           ' → logprob: -8.437350273132324
    8. '	continue' → logprob: -8.812350273132324
    9. '       ' → logprob: -9.187350273132324
    10. '
' → logprob: -9.312350273132324

Token 457: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6738484501838684
    2. '                   ' → logprob: -0.7988484501838684
    3. ' continue' → logprob: -3.7988483905792236
    4. '                       ' → logprob: -4.673848628997803
    5. 'continue' → logprob: -5.798848628997803
    6. '           ' → logprob: -6.423848628997803
    7. '<|end|>' → logprob: -6.923848628997803
    8. '	continue' → logprob: -7.423848628997803
    9. ',' → logprob: -7.548848628997803
    10. '	               ' → logprob: -8.173848152160645

Token 458: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11564617604017258
    2. '               ' → logprob: -2.4906461238861084
    3. ' continue' → logprob: -3.7406461238861084
    4. 'continue' → logprob: -6.8656463623046875
    5. '                       ' → logprob: -7.8656463623046875
    6. '	continue' → logprob: -8.115646362304688
    7. '           ' → logprob: -8.365646362304688
    8. '	               ' → logprob: -8.615646362304688
    9. '		           ' → logprob: -8.990646362304688
    10. '<|end|>' → logprob: -9.240646362304688

Token 459: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1832885444164276
    2. '                   ' → logprob: -2.05828857421875
    3. 'continue' (adapté à ' continue') → logprob: -3.55828857421875
    4. '               ' → logprob: -4.68328857421875
    5. '                       ' → logprob: -6.80828857421875
    6. '	continue' → logprob: -7.30828857421875
    7. '           ' → logprob: -9.30828857421875
    8. ' ' → logprob: -10.05828857421875
    9. '   ' → logprob: -10.43328857421875
    10. '	               ' → logprob: -10.68328857421875

Token 460: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000327956018736586
    2. '<|end|>' → logprob: -8.375328063964844
    3. '           ' → logprob: -9.875328063964844
    4. '                
' → logprob: -11.500328063964844
    5. ' else' → logprob: -12.750328063964844
    6. '                   ' → logprob: -12.750328063964844
    7. '       ' → logprob: -12.875328063964844
    8. '		       ' → logprob: -13.000328063964844
    9. ' ' → logprob: -13.125328063964844
    10. 'elif' → logprob: -13.125328063964844

Token 461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001439459010725841
    2. '           ' → logprob: -9.375144004821777
    3. 'if' → logprob: -11.625144004821777
    4. ' if' → logprob: -11.875144004821777
    5. '       ' → logprob: -12.000144004821777
    6. ' ' → logprob: -12.125144004821777
    7. '                   ' → logprob: -12.250144004821777
    8. '<|end|>' → logprob: -12.625144004821777
    9. 'elif' → logprob: -12.625144004821777
    10. '                
' → logprob: -12.750144004821777

Token 462: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12854765355587006
    2. 'if' (adapté à ' if') → logprob: -3.1285476684570312
    3. ' if' → logprob: -3.1285476684570312
    4. '           ' → logprob: -3.5035476684570312
    5. ' else' → logprob: -6.878547668457031
    6. 'else' → logprob: -7.003547668457031
    7. 'elif' → logprob: -7.628547668457031
    8. ' elif' → logprob: -8.003547668457031
    9. '                   ' → logprob: -9.753547668457031
    10. '       ' → logprob: -10.253547668457031

Token 463: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.05499715730547905
    2. 'self' → logprob: -2.929997205734253
    3. ' not' → logprob: -9.304997444152832
    4. '(self' → logprob: -11.304997444152832
    5. ' (' → logprob: -11.679997444152832
    6. 'not' → logprob: -13.929997444152832
    7. ' ' → logprob: -14.429997444152832
    8. '           ' → logprob: -14.554997444152832
    9. '               ' → logprob: -15.679997444152832
    10. '   ' → logprob: -15.679997444152832

Token 464: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.026329444721341133
    2. 'grid' → logprob: -3.651329517364502
    3. '.' → logprob: -11.651329040527344
    4. ' grid' → logprob: -12.026329040527344
    5. '	grid' → logprob: -12.151329040527344
    6. '.user' → logprob: -13.151329040527344
    7. '.horizontal' → logprob: -13.651329040527344
    8. 'user' → logprob: -13.776329040527344
    9. ' .' → logprob: -13.776329040527344
    10. '   ' → logprob: -13.901329040527344

Token 465: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.5048530030981055e-06
    2. 'row' → logprob: -14.375001907348633
    3. '   ' → logprob: -15.875001907348633
    4. '
' → logprob: -16.125001907348633
    5. '[
' → logprob: -16.125001907348633
    6. '[' → logprob: -16.125001907348633
    7. ' [' → logprob: -16.250001907348633
    8. '           ' → logprob: -16.375001907348633
    9. '[user' → logprob: -16.750001907348633
    10. '[line' → logprob: -17.000001907348633

Token 466: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01569599285721779
    2. '[col' → logprob: -4.640696048736572
    3. '[row' → logprob: -5.140696048736572
    4. '[' → logprob: -11.140695571899414
    5. ' ][' → logprob: -11.140695571899414
    6. '       ' → logprob: -12.015695571899414
    7. ']' → logprob: -12.140695571899414
    8. '   ' → logprob: -12.265695571899414
    9. 'col' → logprob: -12.515695571899414
    10. '"][' → logprob: -13.265695571899414

Token 467: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.6286106983898208e-05
    2. 'row' → logprob: -11.250016212463379
    3. '[col' → logprob: -13.250016212463379
    4. ' col' → logprob: -13.625016212463379
    5. '
' → logprob: -16.125017166137695
    6. '(col' → logprob: -16.375017166137695
    7. '	col' → logprob: -17.375017166137695
    8. '   ' → logprob: -18.000017166137695
    9. '```' → logprob: -18.000017166137695
    10. 'colm' → logprob: -18.250017166137695

Token 468: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07827300578355789
    2. ']==' → logprob: -3.078273057937622
    3. '==' → logprob: -4.453272819519043
    4. ' ==' → logprob: -4.703272819519043
    5. ' ]' → logprob: -5.578272819519043
    6. '[' → logprob: -6.203272819519043
    7. ']=='' → logprob: -6.828272819519043
    8. ']!=' → logprob: -7.203272819519043
    9. '][' → logprob: -8.578272819519043
    10. ' !=' → logprob: -8.578272819519043

Token 469: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5356087684631348
    2. '==' → logprob: -0.9106087684631348
    3. ' !=' → logprob: -4.785608768463135
    4. '!=' → logprob: -6.035608768463135
    5. '=='' → logprob: -6.660608768463135
    6. ' or' → logprob: -9.535608291625977
    7. ' =='' → logprob: -9.785608291625977
    8. '=' → logprob: -10.160608291625977
    9. 'or' → logprob: -10.535608291625977
    10. ' ' → logprob: -10.785608291625977

Token 470: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0002087853499688208
    2. ''' → logprob: -8.625208854675293
    3. ' '#'' → logprob: -11.000208854675293
    4. '"#' → logprob: -11.750208854675293
    5. ''.' → logprob: -13.625208854675293
    6. ''*' → logprob: -13.625208854675293
    7. ''^' → logprob: -14.375208854675293
    8. '('#' → logprob: -15.125208854675293
    9. ''\' → logprob: -15.375208854675293
    10. '''' → logprob: -15.375208854675293

Token 471: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.000769009639043361
    2. ' and' → logprob: -7.750769138336182
    3. 'or' → logprob: -9.000768661499023
    4. '               ' → logprob: -9.750768661499023
    5. '           ' → logprob: -9.875768661499023
    6. '==' → logprob: -10.500768661499023
    7. ' ==' → logprob: -10.625768661499023
    8. 'and' → logprob: -11.375768661499023
    9. ' ' → logprob: -11.625768661499023
    10. '<|end|>' → logprob: -11.625768661499023

Token 472: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31336861848831177
    2. 'self' → logprob: -1.313368558883667
    3. '               ' → logprob: -9.313368797302246
    4. '           ' → logprob: -12.563368797302246
    5. '(self' → logprob: -12.688368797302246
    6. '                   ' → logprob: -13.313368797302246
    7. ' not' → logprob: -13.313368797302246
    8. '	self' → logprob: -13.563368797302246
    9. '[self' → logprob: -13.688368797302246
    10. ' ' → logprob: -13.813368797302246

Token 473: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.07041629403829575
    2. 'self' → logprob: -4.195416450500488
    3. '[row' → logprob: -4.195416450500488
    4. 'grid' → logprob: -4.320416450500488
    5. ' grid' → logprob: -4.445416450500488
    6. ' self' → logprob: -5.445416450500488
    7. '[self' → logprob: -5.445416450500488
    8. '_grid' → logprob: -6.070416450500488
    9. '           ' → logprob: -6.695416450500488
    10. '       ' → logprob: -8.570416450500488

Token 474: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.0005321830976754427
    2. ' [' → logprob: -8.000532150268555
    3. '[' → logprob: -8.875532150268555
    4. '[
' → logprob: -10.375532150268555
    5. '   ' → logprob: -12.125532150268555
    6. 'row' → logprob: -12.375532150268555
    7. '[user' → logprob: -13.000532150268555
    8. '(row' → logprob: -13.000532150268555
    9. ' row' → logprob: -13.375532150268555
    10. '```' → logprob: -13.375532150268555

Token 475: ' +' (ID: 659)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.0057301633059978485
    2. '+' → logprob: -5.255730152130127
    3. '[col' → logprob: -8.130730628967285
    4. ' +' → logprob: -8.880730628967285
    5. 'row' → logprob: -10.755730628967285
    6. ' [' → logprob: -11.255730628967285
    7. '   ' → logprob: -12.130730628967285
    8. '[' → logprob: -12.255730628967285
    9. '           ' → logprob: -12.255730628967285
    10. '(row' → logprob: -13.005730628967285

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013654737267643213
    2. ' ' → logprob: -6.626365661621094
    3. '   ' → logprob: -10.626365661621094
    4. '           ' → logprob: -12.376365661621094
    5. '       ' → logprob: -12.626365661621094
    6. '```' → logprob: -13.126365661621094
    7. 'row' → logprob: -14.126365661621094
    8. '  ' → logprob: -14.501365661621094
    9. '...' → logprob: -14.501365661621094
    10. '+' → logprob: -14.563865661621094

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009461151785217226
    2. ' ' → logprob: -7.000946044921875
    3. 'row' → logprob: -11.125946044921875
    4. '[row' → logprob: -11.500946044921875
    5. '+' → logprob: -12.500946044921875
    6. '(row' → logprob: -13.500946044921875
    7. '   ' → logprob: -13.750946044921875
    8. ' row' → logprob: -14.250946044921875
    9. 'col' → logprob: -14.500946044921875
    10. '-' → logprob: -14.688446044921875

Token 478: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18143317103385925
    2. '[row' → logprob: -2.4314332008361816
    3. '[col' → logprob: -2.5564332008361816
    4. '           ' → logprob: -9.306432723999023
    5. '[' → logprob: -9.931432723999023
    6. ')[' → logprob: -9.931432723999023
    7. ']' → logprob: -10.056432723999023
    8. '[self' → logprob: -10.556432723999023
    9. '[column' → logprob: -10.806432723999023
    10. '>[' → logprob: -11.056432723999023

Token 479: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.04974938556551933
    2. '[col' → logprob: -3.0497493743896484
    3. ' col' → logprob: -6.924749374389648
    4. '[row' → logprob: -9.299749374389648
    5. 'row' → logprob: -9.549749374389648
    6. '(col' → logprob: -13.049749374389648
    7. '	col' → logprob: -13.049749374389648
    8. '   ' → logprob: -13.424749374389648
    9. '#' → logprob: -13.674749374389648
    10. 'cols' → logprob: -13.674749374389648

Token 480: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0433230996131897
    2. '[col' → logprob: -3.793323040008545
    3. ']==' → logprob: -4.043323040008545
    4. '==' → logprob: -6.418323040008545
    5. '[row' → logprob: -7.918323040008545
    6. ' ==' → logprob: -8.793323516845703
    7. '[' → logprob: -10.293323516845703
    8. '']' → logprob: -10.543323516845703
    9. ']=='' → logprob: -10.793323516845703
    10. '```' → logprob: -10.793323516845703

Token 481: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4761144816875458
    2. '==' → logprob: -0.9761145114898682
    3. ']==' → logprob: -6.851114273071289
    4. ']' → logprob: -7.601114273071289
    5. '=='' → logprob: -8.601114273071289
    6. '           ' → logprob: -9.226114273071289
    7. '#' → logprob: -9.976114273071289
    8. '```' → logprob: -10.101114273071289
    9. '[' → logprob: -11.101114273071289
    10. ' !=' → logprob: -11.226114273071289

Token 482: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.003436965635046363
    2. ' '#'' → logprob: -5.878437042236328
    3. ''' → logprob: -7.628437042236328
    4. ' '#' → logprob: -9.253437042236328
    5. 'True' → logprob: -11.378437042236328
    6. '"#' → logprob: -11.378437042236328
    7. '#' → logprob: -11.503437042236328
    8. '('#' → logprob: -11.628437042236328
    9. '='#' → logprob: -13.128437042236328
    10. ''s' → logprob: -14.378437042236328

Token 483: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027089811861515045
    2. ':' → logprob: -4.527089595794678
    3. ':
' → logprob: -4.527089595794678
    4. '                   ' → logprob: -6.277089595794678
    5. '):
' → logprob: -6.527089595794678
    6. ':return' → logprob: -7.277089595794678
    7. '           ' → logprob: -7.902089595794678
    8. '                       ' → logprob: -8.527090072631836
    9. 'return' → logprob: -9.027090072631836
    10. '):' → logprob: -9.777090072631836

Token 484: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3544565737247467
    2. '               ' → logprob: -1.2294565439224243
    3. '                       ' → logprob: -5.479456424713135
    4. '           ' → logprob: -7.229456424713135
    5. ' return' → logprob: -7.354456424713135
    6. 'return' → logprob: -8.354456901550293
    7. '       ' → logprob: -9.604456901550293
    8. '   ' → logprob: -10.604456901550293
    9. ':
' → logprob: -10.854456901550293
    10. '                    
' → logprob: -11.229456901550293

Token 485: ' can' (ID: 665)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7263650894165039
    2. '                   ' → logprob: -0.7263650894165039
    3. ' can' → logprob: -4.226365089416504
    4. '                       ' → logprob: -4.976365089416504
    5. ' return' → logprob: -5.101365089416504
    6. '           ' → logprob: -6.226365089416504
    7. 'can' (adapté à ' can') → logprob: -6.726365089416504
    8. 'return' → logprob: -7.226365089416504
    9. '
' → logprob: -7.976365089416504
    10. '   ' → logprob: -8.101365089416504

Token 486: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -7.707997428951785e-05
    2. '_' → logprob: -9.875077247619629
    3. '_continue' → logprob: -11.625077247619629
    4. '_return' → logprob: -12.500077247619629
    5. ' _' → logprob: -12.750077247619629
    6. '           ' → logprob: -12.750077247619629
    7. '=cut' → logprob: -13.375077247619629
    8. '               ' → logprob: -13.875077247619629
    9. '_c' → logprob: -13.875077247619629
    10. '```' → logprob: -14.875077247619629

Token 487: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38804394006729126
    2. '=' → logprob: -1.1380438804626465
    3. '=False' → logprob: -6.7630438804626465
    4. '               ' → logprob: -12.263044357299805
    5. '           ' → logprob: -12.388044357299805
    6. '                   ' → logprob: -13.388044357299805
    7. '==' → logprob: -13.763044357299805
    8. '=True' → logprob: -13.888044357299805
    9. '=
' → logprob: -14.138044357299805
    10. 'return' → logprob: -14.388044357299805

Token 488: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031777136027812958
    2. ' False' → logprob: -5.753177642822266
    3. '=False' → logprob: -20.628177642822266
    4. '(False' → logprob: -21.628177642822266
    5. '   ' → logprob: -22.003177642822266
    6. '_false' → logprob: -23.003177642822266
    7. 'false' → logprob: -23.378177642822266
    8. '.False' → logprob: -25.253177642822266
    9. 'True' → logprob: -25.378177642822266
    10. '           ' → logprob: -25.753177642822266

Token 489: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006656142068095505
    2. '                       ' → logprob: -7.875665664672852
    3. '           ' → logprob: -9.375665664672852
    4. '               ' → logprob: -9.500665664672852
    5. '       ' → logprob: -10.250665664672852
    6. '<|end|>' → logprob: -10.750665664672852
    7. '		           ' → logprob: -11.375665664672852
    8. '                    ' → logprob: -11.375665664672852
    9. '
' → logprob: -11.750665664672852
    10. '                           ' → logprob: -12.000665664672852

Token 490: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002015139180002734
    2. '           ' → logprob: -9.625201225280762
    3. '                       ' → logprob: -9.625201225280762
    4. '               ' → logprob: -10.250201225280762
    5. '       ' → logprob: -11.625201225280762
    6. '		           ' → logprob: -11.875201225280762
    7. '				' → logprob: -12.375201225280762
    8. '<|end|>' → logprob: -12.875201225280762
    9. '                    ' → logprob: -13.125201225280762
    10. '                  ' → logprob: -13.250201225280762

Token 491: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028590597212314606
    2. 'break' (adapté à ' break') → logprob: -3.903590679168701
    3. ' break' → logprob: -5.028590679168701
    4. '	break' → logprob: -7.028590679168701
    5. '				' → logprob: -8.153590202331543
    6. '               ' → logprob: -8.528590202331543
    7. '                       ' → logprob: -10.778590202331543
    8. '	               ' → logprob: -10.778590202331543
    9. '		           ' → logprob: -10.903590202331543
    10. '           ' → logprob: -11.153590202331543

Token 492: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000685391016304493
    2. '		' → logprob: -8.500685691833496
    3. '       ' → logprob: -8.625685691833496
    4. '
' → logprob: -8.750685691833496
    5. '               ' → logprob: -10.500685691833496
    6. '	       ' → logprob: -10.500685691833496
    7. '<|end|>' → logprob: -11.125685691833496
    8. '            
' → logprob: -11.875685691833496
    9. '    
' → logprob: -11.875685691833496
    10. '[' → logprob: -12.000685691833496

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008806154946796596
    2. '       ' → logprob: -7.875880718231201
    3. '		' → logprob: -8.250880241394043
    4. '               ' → logprob: -9.625880241394043
    5. '
' → logprob: -9.750880241394043
    6. '	       ' → logprob: -10.250880241394043
    7. '            
' → logprob: -11.250880241394043
    8. '	' → logprob: -11.875880241394043
    9. ' 
' → logprob: -12.125880241394043
    10. '    
' → logprob: -12.125880241394043

Token 494: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01739460602402687
    2. '       ' → logprob: -4.142394542694092
    3. 'self' (adapté à ' self') → logprob: -7.142394542694092
    4. ' if' → logprob: -8.51739501953125
    5. ' self' → logprob: -8.76739501953125
    6. 'if' → logprob: -9.01739501953125
    7. '   ' → logprob: -10.39239501953125
    8. '               ' → logprob: -10.51739501953125
    9. '
' → logprob: -11.64239501953125
    10. '```' → logprob: -12.14239501953125

Token 495: '.horizontal' (ID: 96605)
  Prédit: '.horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.horizontal' → logprob: -2.9160102712921798e-05
    2. '.' → logprob: -10.500029563903809
    3. '.vertical' → logprob: -14.125029563903809
    4. ' .' → logprob: -15.000029563903809
    5. 'horizontal' → logprob: -15.500029563903809
    6. '.Horizontal' → logprob: -16.000028610229492
    7. '.h' → logprob: -16.375028610229492
    8. '.python' → logprob: -17.625028610229492
    9. '.HORIZONTAL' → logprob: -18.125028610229492
    10. '.angular' → logprob: -18.875028610229492

Token 496: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.9361264946837764e-07
    2. '_cut' → logprob: -15.75
    3. ' cuts' → logprob: -18.75
    4. ' _' → logprob: -19.25
    5. 'cuts' → logprob: -20.25
    6. '_' → logprob: -20.75
    7. '\' → logprob: -21.125
    8. '._' → logprob: -21.5
    9. 's' → logprob: -21.625
    10. 'Cuts' → logprob: -21.875

Token 497: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -1.7954958821064793e-05
    2. 'ts' → logprob: -12.750018119812012
    3. 'cuts' → logprob: -12.875018119812012
    4. 'utter' → logprob: -12.875018119812012
    5. 'ut' → logprob: -13.000018119812012
    6. ' uts' → logprob: -13.500018119812012
    7. '```' → logprob: -14.375018119812012
    8. '[' → logprob: -14.625018119812012
    9. 'ust' → logprob: -14.625018119812012
    10. 'its' → logprob: -14.687518119812012

Token 498: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -3.762356209335849e-05
    2. '[' → logprob: -10.25003719329834
    3. ' [' → logprob: -13.12503719329834
    4. '[col' → logprob: -16.375038146972656
    5. '\[' → logprob: -17.375038146972656
    6. '[line' → logprob: -18.000038146972656
    7. '=row' → logprob: -18.625038146972656
    8. '[
' → logprob: -18.750038146972656
    9. '[column' → logprob: -18.875038146972656
    10. '```' → logprob: -19.000038146972656

Token 499: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008263377472758293
    2. ' ]' → logprob: -5.00826358795166
    3. '=' → logprob: -7.25826358795166
    4. ']=' → logprob: -7.50826358795166
    5. ' =' → logprob: -8.13326358795166
    6. '=True' → logprob: -16.258262634277344
    7. ' ' → logprob: -16.633262634277344
    8. '[' → logprob: -16.633262634277344
    9. ')' → logprob: -17.383262634277344
    10. ']==' → logprob: -18.133262634277344

Token 500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687145709991455
    2. ' =' → logprob: -1.1368714570999146
    3. '[' → logprob: -15.261871337890625
    4. '=True' → logprob: -16.136871337890625
    5. ' ' → logprob: -17.011871337890625
    6. '＝' → logprob: -17.511871337890625
    7. ' =
' → logprob: -18.636871337890625
    8. '=
' → logprob: -19.011871337890625
    9. ' =[' → logprob: -19.386871337890625
    10. ' |=' → logprob: -19.511871337890625

Token 501: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0619683600962162
    2. ' can' → logprob: -2.8119683265686035
    3. 'True' → logprob: -14.561968803405762
    4. ' True' → logprob: -15.686968803405762
    5. '	can' → logprob: -16.436967849731445
    6. '(can' → logprob: -18.186967849731445
    7. '   ' → logprob: -18.811967849731445
    8. '_can' → logprob: -19.436967849731445
    9. ' ' → logprob: -19.561967849731445
    10. 'Can' → logprob: -20.311967849731445

Token 502: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.0006204616511240602
    2. 'ut' → logprob: -8.25062084197998
    3. 't' → logprob: -8.50062084197998
    4. 'cut' → logprob: -9.75062084197998
    5. '_can' → logprob: -10.62562084197998
    6. '=cut' → logprob: -11.37562084197998
    7. '-cut' → logprob: -12.00062084197998
    8. 'utable' → logprob: -12.25062084197998
    9. '_c' → logprob: -12.37562084197998
    10. 'ute' → logprob: -12.62562084197998

Token 503: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18847419321537018
    2. '<|end|>' → logprob: -1.813474178314209
    3. '       ' → logprob: -4.938474178314209
    4. '<|end|>' → logprob: -7.438474178314209
    5. 'newline' → logprob: -7.938474178314209
    6. '        
' → logprob: -8.938474655151367
    7. '\n' → logprob: -9.188474655151367
    8. '

' → logprob: -9.438474655151367
    9. '```' → logprob: -10.813474655151367
    10. '   ' → logprob: -10.813474655151367

Token 504: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16068601608276367
    2. '       ' → logprob: -2.0356860160827637
    3. '<|end|>' → logprob: -4.160686016082764
    4. '        
' → logprob: -6.785686016082764
    5. '   ' → logprob: -7.910686016082764
    6. '```' → logprob: -8.910686492919922
    7. '    
' → logprob: -9.035686492919922
    8. '

' → logprob: -9.410686492919922
    9. '<|end|>' → logprob: -9.410686492919922
    10. 'newline' → logprob: -9.410686492919922

Token 505: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20246295630931854
    2. '
' → logprob: -1.702462911605835
    3. '        
' → logprob: -7.077463150024414
    4. 'for' → logprob: -8.952463150024414
    5. '   ' → logprob: -10.577463150024414
    6. ' for' → logprob: -10.702463150024414
    7. '```' → logprob: -11.452463150024414
    8. '    
' → logprob: -12.077463150024414
    9. '

' → logprob: -12.952463150024414
    10. '<|end|>' → logprob: -13.077463150024414

Token 506: ' Find' (ID: 9764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.055878646671772
    2. '#' → logprob: -3.0558786392211914
    3. '       ' → logprob: -5.055878639221191
    4. ' for' → logprob: -7.680878639221191
    5. 'Find' → logprob: -8.305878639221191
    6. 'For' → logprob: -9.180878639221191
    7. '   ' → logprob: -10.430878639221191
    8. 'def' → logprob: -10.555878639221191
    9. 'self' → logprob: -11.055878639221191
    10. '
' → logprob: -12.680878639221191

Token 507: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.10021993517875671
    2. 'all' → logprob: -2.350219964981079
    3. '       ' → logprob: -12.1002197265625
    4. 'for' → logprob: -13.4752197265625
    5. '   ' → logprob: -13.7252197265625
    6. ' vertical' → logprob: -13.7252197265625
    7. '_all' → logprob: -13.8502197265625
    8. ' for' → logprob: -13.8502197265625
    9. '	all' → logprob: -14.8502197265625
    10. ' possible' → logprob: -14.9752197265625

Token 508: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.2551998794078827
    2. 'possible' → logprob: -1.755199909210205
    3. ' vertical' → logprob: -3.255199909210205
    4. 'vertical' → logprob: -4.505199909210205
    5. '       ' → logprob: -6.380199909210205
    6. '_possible' → logprob: -7.255199909210205
    7. '(vertical' → logprob: -9.130199432373047
    8. '   ' → logprob: -9.380199432373047
    9. 'vert' → logprob: -10.255199432373047
    10. ' for' → logprob: -10.505199432373047

Token 509: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.5759517550468445
    2. 'vertical' → logprob: -0.8259517550468445
    3. '_vertical' → logprob: -12.20095157623291
    4. 'vert' → logprob: -12.82595157623291
    5. '(vertical' → logprob: -13.07595157623291
    6. '       ' → logprob: -13.57595157623291
    7. '   ' → logprob: -14.45095157623291
    8. 'Vertical' → logprob: -14.95095157623291
    9. 'for' → logprob: -16.450952529907227
    10. '.vertical' → logprob: -16.450952529907227

Token 510: ' cuts' (ID: 29505)
  Prédit: 'cuts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cuts' → logprob: -0.07897736877202988
    2. ' cuts' → logprob: -2.578977346420288
    3. '_c' → logprob: -9.828977584838867
    4. '   ' → logprob: -10.828977584838867
    5. 'cut' → logprob: -12.078977584838867
    6. '       ' → logprob: -12.703977584838867
    7. 'for' → logprob: -13.203977584838867
    8. '
' → logprob: -13.453977584838867
    9. 'c' → logprob: -14.828977584838867
    10. '```' → logprob: -14.953977584838867

Token 511: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011780180968344212
    2. ' for' → logprob: -4.761780261993408
    3. 'for' → logprob: -5.761780261993408
    4. '
' → logprob: -11.76177978515625
    5. '   ' → logprob: -12.01177978515625
    6. '           ' → logprob: -14.63677978515625
    7. '	for' → logprob: -15.63677978515625
    8. '```' → logprob: -15.63677978515625
    9. '        
' → logprob: -16.38677978515625
    10. '      ' → logprob: -16.38677978515625

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1345735490322113
    2. ' for' → logprob: -2.134573459625244
    3. 'for' → logprob: -4.884573459625244
    4. '   ' → logprob: -9.884573936462402
    5. '           ' → logprob: -14.134573936462402
    6. '	for' → logprob: -14.634573936462402
    7. '      ' → logprob: -14.759573936462402
    8. ' at' → logprob: -15.009573936462402
    9. ' ' → logprob: -15.134573936462402
    10. '     ' → logprob: -15.509573936462402

Token 513: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021273408085107803
    2. ' for' → logprob: -4.021273612976074
    3. '       ' → logprob: -5.771273612976074
    4. '   ' → logprob: -12.896273612976074
    5. '	for' → logprob: -15.521273612976074
    6. '```' → logprob: -16.896272659301758
    7. ' ' → logprob: -17.396272659301758
    8. '
' → logprob: -18.146272659301758
    9. '    ' → logprob: -20.271272659301758
    10. '	' → logprob: -20.396272659301758

Token 514: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.16022412478923798
    2. 'col' → logprob: -1.9102240800857544
    3. ' ' → logprob: -18.28522491455078
    4. '	col' → logprob: -18.91022491455078
    5. '   ' → logprob: -19.53522491455078
    6. '(col' → logprob: -19.91022491455078
    7. 'range' → logprob: -21.41022491455078
    8. '_col' → logprob: -21.66022491455078
    9. '.col' → logprob: -21.78522491455078
    10. '[col' → logprob: -21.78522491455078

Token 515: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00103352265432477
    2. 'in' → logprob: -6.876033306121826
    3. 'range' → logprob: -14.501033782958984
    4. ' ' → logprob: -15.376033782958984
    5. '   ' → logprob: -17.001033782958984
    6. ' range' → logprob: -18.126033782958984
    7. 'In' → logprob: -18.251033782958984
    8. 's' → logprob: -18.626033782958984
    9. 'n' → logprob: -18.751033782958984
    10. '```' → logprob: -19.001033782958984

Token 516: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692810595035553
    2. ' range' → logprob: -2.1269280910491943
    3. '(range' → logprob: -17.376928329467773
    4. ' ' → logprob: -19.876928329467773
    5. ' in' → logprob: -20.001928329467773
    6. '	range' → logprob: -21.251928329467773
    7. 'in' → logprob: -21.376928329467773
    8. '0' → logprob: -21.501928329467773
    9. '   ' → logprob: -21.876928329467773
    10. 'self' → logprob: -23.376928329467773

Token 517: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.727905979962088e-05
    2. '(' → logprob: -10.00004768371582
    3. 'self' → logprob: -13.25004768371582
    4. ' self' → logprob: -17.00004768371582
    5. '1' → logprob: -17.12504768371582
    6. ' (' → logprob: -19.50004768371582
    7. '[self' → logprob: -19.87504768371582
    8. '=self' → logprob: -20.37504768371582
    9. '	self' → logprob: -20.75004768371582
    10. '   ' → logprob: -20.75004768371582

Token 518: '.width' (ID: 11038)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8285166025161743
    2. '.width' → logprob: -0.8285166025161743
    3. 'width' → logprob: -2.0785164833068848
    4. '   ' → logprob: -7.578516483306885
    5. '       ' → logprob: -7.828516483306885
    6. ' width' → logprob: -8.203516960144043
    7. '1' → logprob: -8.453516960144043
    8. ' self' → logprob: -9.703516960144043
    9. '(self' → logprob: -10.953516960144043
    10. '(width' → logprob: -12.578516960144043

Token 519: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0006282062386162579
    2. '-' → logprob: -7.3756279945373535
    3. '   ' → logprob: -14.000628471374512
    4. ' ' → logprob: -14.125628471374512
    5. '  ' → logprob: -18.500627517700195
    6. '       ' → logprob: -18.625627517700195
    7. '1' → logprob: -18.750627517700195
    8. '()-' → logprob: -18.875627517700195
    9. ' -
' → logprob: -19.125627517700195
    10. 's' → logprob: -19.500627517700195

Token 520: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017033906187862158
    2. ' ' → logprob: -6.376703262329102
    3. '   ' → logprob: -13.751703262329102
    4. '```' → logprob: -17.2517032623291
    5. '       ' → logprob: -18.3767032623291
    6. '<|end|>' → logprob: -18.5017032623291
    7. '  ' → logprob: -19.0017032623291
    8. '-' → logprob: -19.5017032623291
    9. '           ' → logprob: -19.5642032623291
    10. ')' → logprob: -19.7517032623291

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.000015258789062
    4. '```' → logprob: -18.625015258789062
    5. '<|end|>' → logprob: -19.750015258789062
    6. '۱' → logprob: -20.750015258789062
    7. '2' → logprob: -21.125015258789062
    8. '-' → logprob: -21.437515258789062
    9. '  ' → logprob: -21.937515258789062
    10. '0' → logprob: -22.187515258789062

Token 522: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0019223258132115006
    2. '):' → logprob: -6.376922130584717
    3. '       ' → logprob: -9.751922607421875
    4. ':
' → logprob: -9.751922607421875
    5. ':' → logprob: -10.126922607421875
    6. '   ' → logprob: -10.501922607421875
    7. '():
' → logprob: -11.376922607421875
    8. '):
' → logprob: -11.751922607421875
    9. ' ):
' → logprob: -11.876922607421875
    10. '           ' → logprob: -12.501922607421875

Token 523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031055594445206225
    2. '       ' → logprob: -9.000310897827148
    3. '   ' → logprob: -9.625310897827148
    4. ':' → logprob: -10.375310897827148
    5. '#' → logprob: -10.750310897827148
    6. ' for' → logprob: -11.250310897827148
    7. '
' → logprob: -11.625310897827148
    8. ',' → logprob: -12.125310897827148
    9. '	       ' → logprob: -12.125310897827148
    10. ':
' → logprob: -12.250310897827148

Token 524: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' (adapté à ' can') → logprob: -0.22098195552825928
    2. '#' → logprob: -1.9709819555282593
    3. '           ' → logprob: -2.970982074737549
    4. '   ' → logprob: -5.720982074737549
    5. '       ' → logprob: -6.220982074737549
    6. ' can' → logprob: -6.470982074737549
    7. ' #' → logprob: -7.595982074737549
    8. '```' → logprob: -8.97098159790039
    9. '               ' → logprob: -9.59598159790039
    10. 'col' → logprob: -9.84598159790039

Token 525: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.00023488728038500994
    2. '_' → logprob: -8.875234603881836
    3. '_c' → logprob: -10.375234603881836
    4. '_code' → logprob: -11.125234603881836
    5. ' _' → logprob: -11.625234603881836
    6. ' =' → logprob: -11.750234603881836
    7. '=cut' → logprob: -11.750234603881836
    8. '_col' → logprob: -12.000234603881836
    9. '=' → logprob: -12.125234603881836
    10. '_can' → logprob: -13.000234603881836

Token 526: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409942746162415
    2. ' =' → logprob: -0.9740993976593018
    3. '=True' → logprob: -10.724099159240723
    4. '=False' → logprob: -15.099099159240723
    5. ' ' → logprob: -17.47410011291504
    6. '＝' → logprob: -17.84910011291504
    7. '=

' → logprob: -18.97410011291504
    8. '   ' → logprob: -19.34910011291504
    9. '	' → logprob: -19.34910011291504
    10. '_=' → logprob: -19.34910011291504

Token 527: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -19.006715774536133
    4. 'self' → logprob: -19.381715774536133
    5. '=True' → logprob: -20.131715774536133
    6. 'False' → logprob: -20.881715774536133
    7. 'true' → logprob: -21.006715774536133
    8. '       ' → logprob: -21.381715774536133
    9. '           ' → logprob: -21.506715774536133
    10. '   ' → logprob: -21.631715774536133

Token 528: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16974298655986786
    2. ' for' → logprob: -2.044743061065674
    3. 'for' → logprob: -4.169743061065674
    4. '		' → logprob: -6.044743061065674
    5. '	for' → logprob: -6.044743061065674
    6. '<|end|>' → logprob: -6.169743061065674
    7. '       ' → logprob: -6.794743061065674
    8. '   ' → logprob: -6.919743061065674
    9. '	       ' → logprob: -7.044743061065674
    10. '               ' → logprob: -7.794743061065674

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07314213365316391
    2. ' for' → logprob: -2.8231420516967773
    3. 'for' → logprob: -4.698142051696777
    4. '       ' → logprob: -7.198142051696777
    5. '
' → logprob: -7.823142051696777
    6. '   ' → logprob: -7.948142051696777
    7. '	for' → logprob: -8.073142051696777
    8. '		' → logprob: -9.573142051696777
    9. '               ' → logprob: -10.198142051696777
    10. ' ' → logprob: -10.573142051696777

Token 530: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1272248923778534
    2. ' for' → logprob: -2.127224922180176
    3. '           ' → logprob: -8.127224922180176
    4. '   ' → logprob: -14.752224922180176
    5. '       ' → logprob: -14.752224922180176
    6. '	for' → logprob: -14.877224922180176
    7. '```' → logprob: -15.877224922180176
    8. ' ' → logprob: -16.12722396850586
    9. '               ' → logprob: -16.50222396850586
    10. '
' → logprob: -17.50222396850586

Token 531: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6931519508361816
    2. ' row' → logprob: -0.6931519508361816
    3. 'range' → logprob: -12.818151473999023
    4. ' range' → logprob: -13.568151473999023
    5. '(row' → logprob: -15.693151473999023
    6. '	row' → logprob: -15.943151473999023
    7. 'self' → logprob: -16.193151473999023
    8. ' ' → logprob: -16.318151473999023
    9. 'r' → logprob: -16.443151473999023
    10. '=row' → logprob: -16.943151473999023

Token 532: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00464882655069232
    2. 'in' → logprob: -5.379648685455322
    3. '<|end|>' → logprob: -11.12964916229248
    4. ' ' → logprob: -11.37964916229248
    5. '	in' → logprob: -14.12964916229248
    6. ')' → logprob: -15.25464916229248
    7. '<|end|>' → logprob: -15.50464916229248
    8. 'range' → logprob: -15.75464916229248
    9. '[' → logprob: -15.75464916229248
    10. '  ' → logprob: -16.004648208618164

Token 533: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47407716512680054
    2. 'range' → logprob: -0.9740771651268005
    3. '(range' → logprob: -16.724077224731445
    4. 'self' → logprob: -17.724077224731445
    5. '0' → logprob: -17.974077224731445
    6. ' ' → logprob: -18.849077224731445
    7. '	range' → logprob: -19.474077224731445
    8. '   ' → logprob: -20.099077224731445
    9. '.range' → logprob: -20.724077224731445
    10. ' self' → logprob: -21.724077224731445

Token 534: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00043376852408982813
    2. 'self' → logprob: -7.750433921813965
    3. '(' → logprob: -13.125433921813965
    4. ' self' → logprob: -14.250433921813965
    5. '[self' → logprob: -16.00043296813965
    6. '=self' → logprob: -16.37543296813965
    7. '       ' → logprob: -16.87543296813965
    8. 's' → logprob: -17.25043296813965
    9. '   ' → logprob: -18.00043296813965
    10. '0' → logprob: -18.12543296813965

Token 535: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.00021069261129014194
    2. 'height' → logprob: -8.625210762023926
    3. 'self' → logprob: -10.500210762023926
    4. '.width' → logprob: -13.375210762023926
    5. ')' → logprob: -14.250210762023926
    6. ' height' → logprob: -14.250210762023926
    7. '       ' → logprob: -15.875210762023926
    8. '   ' → logprob: -16.25020980834961
    9. ' self' → logprob: -16.25020980834961
    10. '.row' → logprob: -16.37520980834961

Token 536: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23246993124485016
    2. '):' → logprob: -1.607469916343689
    3. ':' → logprob: -5.2324700355529785
    4. '<|end|>' → logprob: -7.4824700355529785
    5. '       ' → logprob: -7.9824700355529785
    6. ':
' → logprob: -8.23246955871582
    7. '           ' → logprob: -8.85746955871582
    8. ')' → logprob: -9.48246955871582
    9. ']:
' → logprob: -9.85746955871582
    10. '):
' → logprob: -10.23246955871582

Token 537: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011892046313732862
    2. ' if' → logprob: -9.87511920928955
    3. 'if' → logprob: -10.00011920928955
    4. '           ' → logprob: -10.87511920928955
    5. '       ' → logprob: -14.25011920928955
    6. '	           ' → logprob: -14.50011920928955
    7. '                   ' → logprob: -14.62511920928955
    8. '<|end|>' → logprob: -14.62511920928955
    9. '		       ' → logprob: -15.25011920928955
    10. '```' → logprob: -15.75011920928955

Token 538: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.555065393447876
    2. 'if' (adapté à ' if') → logprob: -1.055065393447876
    3. ' if' → logprob: -2.555065393447876
    4. '           ' → logprob: -9.430065155029297
    5. '                   ' → logprob: -10.930065155029297
    6. '   ' → logprob: -12.555065155029297
    7. '```' → logprob: -12.680065155029297
    8. '       ' → logprob: -13.305065155029297
    9. 'If' → logprob: -14.805065155029297
    10. ' ' → logprob: -15.305065155029297

Token 539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.576022207736969
    2. ' self' → logprob: -0.826022207736969
    3. '(self' → logprob: -9.951022148132324
    4. '           ' → logprob: -10.826022148132324
    5. '               ' → logprob: -11.701022148132324
    6. '[self' → logprob: -12.451022148132324
    7. '	self' → logprob: -14.076022148132324
    8. '   ' → logprob: -14.576022148132324
    9. '                   ' → logprob: -14.951022148132324
    10. ' ' → logprob: -14.951022148132324

Token 540: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -4.513339445111342e-05
    2. 'grid' → logprob: -10.375044822692871
    3. ' .' → logprob: -11.875044822692871
    4. '.user' → logprob: -12.375044822692871
    5. '.' → logprob: -13.875044822692871
    6. 'self' → logprob: -14.125044822692871
    7. ' grid' → logprob: -15.000044822692871
    8. '	grid' → logprob: -15.375044822692871
    9. 'user' → logprob: -16.250045776367188
    10. '   ' → logprob: -17.250045776367188

Token 541: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.250000953674316
    3. ' [' → logprob: -15.625000953674316
    4. 'row' → logprob: -16.25
    5. '(row' → logprob: -17.375
    6. '][' → logprob: -17.625
    7. '
' → logprob: -17.625
    8. '       ' → logprob: -17.875
    9. '[
' → logprob: -18.125
    10. '           ' → logprob: -18.25

Token 542: '][' (ID: 2696)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.06201283633708954
    2. '][' → logprob: -2.8120129108428955
    3. '[row' → logprob: -10.437012672424316
    4. '       ' → logprob: -12.687012672424316
    5. '           ' → logprob: -12.687012672424316
    6. '[' → logprob: -13.062012672424316
    7. ' [' → logprob: -13.437012672424316
    8. '[column' → logprob: -13.562012672424316
    9. '   ' → logprob: -13.687012672424316
    10. ' ][' → logprob: -14.437012672424316

Token 543: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0010062543442472816
    2. ' col' → logprob: -7.251006126403809
    3. '[col' → logprob: -8.126006126403809
    4. ',col' → logprob: -15.251006126403809
    5. '	col' → logprob: -15.751006126403809
    6. '(col' → logprob: -16.251007080078125
    7. '][' → logprob: -17.376007080078125
    8. '.col' → logprob: -17.376007080078125
    9. '
' → logprob: -17.501007080078125
    10. 'colm' → logprob: -17.876007080078125

Token 544: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003191386058460921
    2. ']==' → logprob: -8.125319480895996
    3. ' ]' → logprob: -10.750319480895996
    4. ']=='' → logprob: -14.875319480895996
    5. '==' → logprob: -15.250319480895996
    6. ' ==' → logprob: -15.250319480895996
    7. '   ' → logprob: -15.375319480895996
    8. '[' → logprob: -15.875319480895996
    9. '#' → logprob: -16.12531852722168
    10. '']' → logprob: -16.25031852722168

Token 545: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23109036684036255
    2. '==' → logprob: -1.6060903072357178
    3. ']' → logprob: -5.856090545654297
    4. ']==' → logprob: -6.356090545654297
    5. '[' → logprob: -7.481090545654297
    6. '=='' → logprob: -8.231090545654297
    7. '#' → logprob: -9.356090545654297
    8. '```' → logprob: -10.856090545654297
    9. ''' → logprob: -11.231090545654297
    10. '=' → logprob: -11.231090545654297

Token 546: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0010387639049440622
    2. ' '#'' → logprob: -6.876038551330566
    3. ''' → logprob: -12.626038551330566
    4. '"#' → logprob: -13.251038551330566
    5. ' '#' → logprob: -14.876038551330566
    6. '('#' → logprob: -15.126038551330566
    7. '#' → logprob: -15.251038551330566
    8. '='#' → logprob: -17.376039505004883
    9. ''*' → logprob: -17.626039505004883
    10. '','#' → logprob: -17.751039505004883

Token 547: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03804366663098335
    2. 'and' → logprob: -3.288043737411499
    3. ' ' → logprob: -14.038043975830078
    4. ' ==' → logprob: -14.538043975830078
    5. '==' → logprob: -14.913043975830078
    6. '#' → logprob: -15.163043975830078
    7. ')' → logprob: -16.288043975830078
    8. '           ' → logprob: -16.288043975830078
    9. '[' → logprob: -17.288043975830078
    10. '<|end|>' → logprob: -17.413043975830078

Token 548: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1426786631345749
    2. 'self' → logprob: -2.017678737640381
    3. '(self' → logprob: -14.017678260803223
    4. '[self' → logprob: -14.392678260803223
    5. ' ' → logprob: -14.767678260803223
    6. '	self' → logprob: -14.892678260803223
    7. '<|end|>' → logprob: -15.142678260803223
    8. '           ' → logprob: -15.142678260803223
    9. '```' → logprob: -15.392678260803223
    10. ' ' → logprob: -15.767678260803223

Token 549: '.grid' (ID: 19269)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4297458529472351
    2. 'self' → logprob: -1.0547459125518799
    3. ' grid' → logprob: -7.304745674133301
    4. 'grid' → logprob: -8.9297456741333
    5. '[self' → logprob: -9.0547456741333
    6. '.grid' → logprob: -9.5547456741333
    7. ' ' → logprob: -10.9297456741333
    8. ' row' → logprob: -12.3047456741333
    9. '	self' → logprob: -12.3047456741333
    10. '[' → logprob: -12.4297456741333

Token 550: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -4.842555426876061e-06
    2. '[col' → logprob: -13.625004768371582
    3. ' [' → logprob: -13.750004768371582
    4. '[self' → logprob: -14.500004768371582
    5. '[' → logprob: -14.625004768371582
    6. '[user' → logprob: -14.875004768371582
    7. '```' → logprob: -15.250004768371582
    8. '][' → logprob: -15.375004768371582
    9. 'row' → logprob: -15.875004768371582
    10. '[
' → logprob: -16.0000057220459

Token 551: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07134069502353668
    2. '[col' → logprob: -2.821340799331665
    3. '[row' → logprob: -4.696340560913086
    4. ' [' → logprob: -9.446340560913086
    5. ' ][' → logprob: -10.071340560913086
    6. '       ' → logprob: -10.696340560913086
    7. '+' → logprob: -11.196340560913086
    8. '           ' → logprob: -11.571340560913086
    9. '   ' → logprob: -11.571340560913086
    10. 'col' → logprob: -12.321340560913086

Token 552: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.004081128165125847
    2. ' col' → logprob: -5.5040812492370605
    3. '[col' → logprob: -12.879080772399902
    4. '1' → logprob: -17.50408172607422
    5. '(col' → logprob: -17.62908172607422
    6. ',col' → logprob: -17.62908172607422
    7. '+' → logprob: -18.12908172607422
    8. '.col' → logprob: -18.87908172607422
    9. '	col' → logprob: -19.00408172607422
    10. '_col' → logprob: -19.12908172607422

Token 553: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141811668872833
    2. '+' → logprob: -1.701418161392212
    3. '   ' → logprob: -13.201417922973633
    4. ' ' → logprob: -13.326417922973633
    5. '[' → logprob: -13.951417922973633
    6. '1' → logprob: -15.826417922973633
    7. ' ' → logprob: -16.076417922973633
    8. ' +
' → logprob: -16.451417922973633
    9. '+
' → logprob: -16.826417922973633
    10. '[col' → logprob: -17.201417922973633

Token 554: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043233807082287967
    2. ' ' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.500432014465332
    4. '
' → logprob: -14.625432014465332
    5. '```' → logprob: -16.12543296813965
    6. '#' → logprob: -16.18793296813965
    7. '  ' → logprob: -16.31293296813965
    8. ']' → logprob: -16.62543296813965
    9. '`' → logprob: -16.87543296813965
    10. '           ' → logprob: -17.06293296813965

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '#' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.875000953674316
    4. ''#' → logprob: -17.0
    5. '
' → logprob: -17.625
    6. '#
' → logprob: -18.25
    7. ']' → logprob: -19.125
    8. '   ' → logprob: -19.5
    9. '`' → logprob: -20.125
    10. 'col' → logprob: -20.625

Token 556: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016388937830924988
    2. ']==' → logprob: -4.141388893127441
    3. '==' → logprob: -9.141388893127441
    4. ' ]' → logprob: -9.266388893127441
    5. ' ==' → logprob: -9.516388893127441
    6. ']=='' → logprob: -10.391388893127441
    7. '']' → logprob: -10.516388893127441
    8. '#' → logprob: -11.516388893127441
    9. '[' → logprob: -12.766388893127441
    10. '           ' → logprob: -13.016388893127441

Token 557: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22801125049591064
    2. '==' → logprob: -1.6030112504959106
    3. ']==' → logprob: -6.478011131286621
    4. ']' → logprob: -7.478011131286621
    5. '=='' → logprob: -7.728011131286621
    6. '#' → logprob: -10.978011131286621
    7. ']=='' → logprob: -11.728011131286621
    8. '']' → logprob: -12.228011131286621
    9. '           ' → logprob: -12.478011131286621
    10. '']==' → logprob: -12.728011131286621

Token 558: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0012832103529945016
    2. ' '#' → logprob: -7.376283168792725
    3. ' '#'' → logprob: -7.376283168792725
    4. '#' → logprob: -10.876283645629883
    5. '('#' → logprob: -12.501283645629883
    6. '"#' → logprob: -12.626283645629883
    7. ''' → logprob: -12.751283645629883
    8. '='#' → logprob: -14.376283645629883
    9. '','#' → logprob: -15.001283645629883
    10. ':'#' → logprob: -15.376283645629883

Token 559: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9297499656677246
    2. ':
' → logprob: -1.0547499656677246
    3. ':' → logprob: -1.6797499656677246
    4. '                   ' → logprob: -2.8047499656677246
    5. '<|end|>' → logprob: -5.429749965667725
    6. '           ' → logprob: -6.304749965667725
    7. '):
' → logprob: -7.054749965667725
    8. 'continue' → logprob: -7.179749965667725
    9. '                       ' → logprob: -7.179749965667725
    10. ' continue' → logprob: -7.679749965667725

Token 560: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018104171380400658
    2. '                   ' → logprob: -4.268104076385498
    3. 'continue' → logprob: -6.018104076385498
    4. ' continue' → logprob: -6.768104076385498
    5. '           ' → logprob: -8.768104553222656
    6. '<|end|>' → logprob: -9.143104553222656
    7. '                       ' → logprob: -10.518104553222656
    8. '```' → logprob: -11.143104553222656
    9. '       ' → logprob: -11.518104553222656
    10. ':
' → logprob: -12.143104553222656

Token 561: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9406696557998657
    2. 'continue' → logprob: -1.1906696557998657
    3. ' continue' → logprob: -1.1906696557998657
    4. '                   ' → logprob: -7.065669536590576
    5. '                       ' → logprob: -7.315669536590576
    6. '	continue' → logprob: -10.315670013427734
    7. '           ' → logprob: -11.315670013427734
    8. '_continue' → logprob: -11.315670013427734
    9. '       ' → logprob: -12.190670013427734
    10. 'Continue' → logprob: -12.940670013427734

Token 562: ' groove' (ID: 82774)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2575759291648865
    2. ' continue' → logprob: -1.5075759887695312
    3. '               ' → logprob: -5.257575988769531
    4. '                   ' → logprob: -7.882575988769531
    5. '           ' → logprob: -10.882575988769531
    6. '	continue' → logprob: -12.257575988769531
    7. '
' → logprob: -12.507575988769531
    8. '                       ' → logprob: -12.507575988769531
    9. '   ' → logprob: -12.632575988769531
    10. ' ' → logprob: -13.007575988769531

Token 563: ' line' (ID: 2543)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.3524034321308136
    2. 'possible' → logprob: -1.6024034023284912
    3. ' line' → logprob: -3.102403402328491
    4. '_possible' → logprob: -3.727403402328491
    5. '                   ' → logprob: -3.977403402328491
    6. '               ' → logprob: -5.60240364074707
    7. 'line' → logprob: -6.10240364074707
    8. '           ' → logprob: -7.10240364074707
    9. 'Possible' → logprob: -7.72740364074707
    10. '                       ' → logprob: -9.22740364074707

Token 564: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.37448006868362427
    2. 'possible' → logprob: -1.7494800090789795
    3. '                   ' → logprob: -1.9994800090789795
    4. '               ' → logprob: -6.499480247497559
    5. '_possible' → logprob: -7.249480247497559
    6. '           ' → logprob: -7.874480247497559
    7. '                       ' → logprob: -8.874480247497559
    8. '       ' → logprob: -8.999480247497559
    9. ' is' → logprob: -9.249480247497559
    10. 'Possible' → logprob: -10.124480247497559

Token 565: ' here' (ID: 2105)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20838719606399536
    2. '               ' → logprob: -2.0833871364593506
    3. '                       ' → logprob: -3.4583871364593506
    4. 'continue' → logprob: -4.20838737487793
    5. ' continue' → logprob: -4.20838737487793
    6. '           ' → logprob: -6.83338737487793
    7. '<|end|>' → logprob: -6.83338737487793
    8. '       ' → logprob: -9.58338737487793
    9. '```' → logprob: -11.08338737487793
    10. ',' → logprob: -11.20838737487793

Token 566: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14535000920295715
    2. '                       ' → logprob: -3.0203499794006348
    3. '               ' → logprob: -3.5203499794006348
    4. 'continue' → logprob: -3.5203499794006348
    5. ' continue' → logprob: -3.6453499794006348
    6. '           ' → logprob: -7.645349979400635
    7. '<|end|>' → logprob: -7.645349979400635
    8. '       ' → logprob: -10.145350456237793
    9. '```' → logprob: -10.520350456237793
    10. '_continue' → logprob: -10.895350456237793

Token 567: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7897268533706665
    2. 'continue' → logprob: -1.1647268533706665
    3. ' continue' → logprob: -2.039726734161377
    4. '               ' → logprob: -2.289726734161377
    5. '                       ' → logprob: -6.164726734161377
    6. '           ' → logprob: -7.789726734161377
    7. '<|end|>' → logprob: -10.539727210998535
    8. '_continue' → logprob: -10.664727210998535
    9. '```' → logprob: -10.789727210998535
    10. '	continue' → logprob: -11.039727210998535

Token 568: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.10562285780906677
    2. ' continue' → logprob: -2.3556227684020996
    3. '                   ' → logprob: -5.3556227684021
    4. '               ' → logprob: -7.4806227684021
    5. '                       ' → logprob: -9.355623245239258
    6. '           ' → logprob: -11.105623245239258
    7. '	continue' → logprob: -11.605623245239258
    8. '   ' → logprob: -13.730623245239258
    9. '       ' → logprob: -13.730623245239258
    10. '_continue' → logprob: -13.980623245239258

Token 569: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016206118743866682
    2. '           ' → logprob: -9.875162124633789
    3. '<|end|>' → logprob: -10.125162124633789
    4. 'if' → logprob: -10.750162124633789
    5. ' if' → logprob: -11.000162124633789
    6. '                   ' → logprob: -11.375162124633789
    7. '       ' → logprob: -12.125162124633789
    8. '```' → logprob: -12.250162124633789
    9. '
' → logprob: -12.500162124633789
    10. '                
' → logprob: -13.125162124633789

Token 570: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.4285862057004124e-05
    2. '           ' → logprob: -11.37503433227539
    3. 'if' → logprob: -11.50003433227539
    4. ' if' → logprob: -12.25003433227539
    5. '```' → logprob: -12.50003433227539
    6. '                   ' → logprob: -13.37503433227539
    7. '       ' → logprob: -13.75003433227539
    8. '<|end|>' → logprob: -14.62503433227539
    9. '   ' → logprob: -14.75003433227539
    10. ' ' → logprob: -15.00003433227539

Token 571: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003213245654478669
    2. 'if' (adapté à ' if') → logprob: -6.253213405609131
    3. '           ' → logprob: -7.253213405609131
    4. ' if' → logprob: -7.503213405609131
    5. '                   ' → logprob: -11.253212928771973
    6. '       ' → logprob: -12.503212928771973
    7. '```' → logprob: -12.628212928771973
    8. '   ' → logprob: -13.253212928771973
    9. ' ' → logprob: -13.753212928771973
    10. '              ' → logprob: -14.753212928771973

Token 572: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38688457012176514
    2. ' self' → logprob: -1.1368845701217651
    3. '(self' → logprob: -11.511884689331055
    4. '               ' → logprob: -13.386884689331055
    5. '           ' → logprob: -13.886884689331055
    6. ' ' → logprob: -15.386884689331055
    7. '                   ' → logprob: -15.386884689331055
    8. '[self' → logprob: -15.511884689331055
    9. '   ' → logprob: -16.386884689331055
    10. ' (' → logprob: -16.386884689331055

Token 573: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0790572315454483
    2. 'grid' → logprob: -2.579057216644287
    3. ' grid' → logprob: -8.829057693481445
    4. 'self' → logprob: -11.454057693481445
    5. '	grid' → logprob: -12.579057693481445
    6. ' .' → logprob: -13.454057693481445
    7. '_grid' → logprob: -13.829057693481445
    8. '.user' → logprob: -13.954057693481445
    9. '.' → logprob: -14.204057693481445
    10. 'user' → logprob: -14.329057693481445

Token 574: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.9361264946837764e-07
    2. 'row' → logprob: -16.125
    3. '[user' → logprob: -17.75
    4. '(row' → logprob: -18.25
    5. '[' → logprob: -18.875
    6. '[col' → logprob: -19.125
    7. '=row' → logprob: -19.125
    8. '[
' → logprob: -19.375
    9. '
' → logprob: -19.5
    10. ',row' → logprob: -20.5

Token 575: '][' (ID: 2696)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.0028361345175653696
    2. '][' → logprob: -5.877836227416992
    3. '[col' → logprob: -10.627836227416992
    4. '           ' → logprob: -13.377836227416992
    5. 'row' → logprob: -13.627836227416992
    6. '   ' → logprob: -14.127836227416992
    7. ',row' → logprob: -14.127836227416992
    8. '(row' → logprob: -14.252836227416992
    9. '[' → logprob: -14.502836227416992
    10. '       ' → logprob: -15.002836227416992

Token 576: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00020854694594163448
    2. '[col' → logprob: -9.125208854675293
    3. ' col' → logprob: -9.250208854675293
    4. 'row' → logprob: -13.250208854675293
    5. '(col' → logprob: -14.500208854675293
    6. '#' → logprob: -14.875208854675293
    7. ''#' → logprob: -15.250208854675293
    8. '	col' → logprob: -15.500208854675293
    9. 'colm' → logprob: -16.000207901000977
    10. ''' → logprob: -16.875207901000977

Token 577: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04673870652914047
    2. ' ==' → logprob: -3.921738624572754
    3. ']==' → logprob: -4.296738624572754
    4. '==' → logprob: -4.421738624572754
    5. ']=='' → logprob: -9.796738624572754
    6. '           ' → logprob: -10.171738624572754
    7. '][' → logprob: -10.296738624572754
    8. '[' → logprob: -10.796738624572754
    9. ' ]' → logprob: -10.796738624572754
    10. '']' → logprob: -10.921738624572754

Token 578: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1799631267786026
    2. '==' → logprob: -1.8049631118774414
    3. '=='' → logprob: -8.679963111877441
    4. '[' → logprob: -10.929963111877441
    5. ''' → logprob: -11.554963111877441
    6. ' =='' → logprob: -11.929963111877441
    7. '=' → logprob: -12.679963111877441
    8. ']==' → logprob: -12.679963111877441
    9. ']' → logprob: -13.179963111877441
    10. ' ' → logprob: -13.429963111877441

Token 579: ' '#'' (ID: 139870)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0141702089458704
    2. ' '#'' → logprob: -4.264170169830322
    3. ''' → logprob: -12.26417064666748
    4. '"#' → logprob: -13.76417064666748
    5. ' '#' → logprob: -15.13917064666748
    6. '('#' → logprob: -15.38917064666748
    7. '='#' → logprob: -16.264169692993164
    8. ' ' → logprob: -16.514169692993164
    9. ''*' → logprob: -16.639169692993164
    10. ''''' → logprob: -16.764169692993164

Token 580: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003612424246966839
    2. 'or' → logprob: -5.628612518310547
    3. ' ' → logprob: -11.878612518310547
    4. ')' → logprob: -12.628612518310547
    5. '<|end|>' → logprob: -14.628612518310547
    6. '```' → logprob: -14.753612518310547
    7. '	or' → logprob: -15.253612518310547
    8. ''or' → logprob: -15.628612518310547
    9. '               ' → logprob: -15.753612518310547
    10. '`' → logprob: -15.878612518310547

Token 581: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6932083368301392
    2. 'self' → logprob: -0.6932083368301392
    3. '               ' → logprob: -10.068208694458008
    4. '           ' → logprob: -12.568208694458008
    5. '                   ' → logprob: -12.568208694458008
    6. '```' → logprob: -12.818208694458008
    7. '[self' → logprob: -12.818208694458008
    8. ' ' → logprob: -13.568208694458008
    9. ' not' → logprob: -13.693208694458008
    10. '(self' → logprob: -13.818208694458008

Token 582: '.grid' (ID: 19269)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.415097713470459
    2. 'self' → logprob: -1.540097713470459
    3. '[self' → logprob: -2.290097713470459
    4. ' self' → logprob: -3.915097713470459
    5. 'grid' → logprob: -6.165097713470459
    6. ' [' → logprob: -7.540097713470459
    7. '           ' → logprob: -8.040098190307617
    8. ' grid' → logprob: -8.665098190307617
    9. '[' → logprob: -8.665098190307617
    10. '   ' → logprob: -8.915098190307617

Token 583: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.05489819496870041
    2. '[self' → logprob: -3.679898262023926
    3. 'self' → logprob: -3.804898262023926
    4. ' self' → logprob: -6.179898262023926
    5. '           ' → logprob: -6.429898262023926
    6. '       ' → logprob: -7.679898262023926
    7. ' [' → logprob: -7.679898262023926
    8. '1' → logprob: -7.929898262023926
    9. '[col' → logprob: -8.304898262023926
    10. '               ' → logprob: -8.429898262023926

Token 584: '][' (ID: 2696)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.09108208119869232
    2. '][' → logprob: -2.4660820960998535
    3. '[row' → logprob: -7.5910820960998535
    4. 'col' → logprob: -7.5910820960998535
    5. '+' → logprob: -8.091081619262695
    6. ' col' → logprob: -8.341081619262695
    7. '           ' → logprob: -9.341081619262695
    8. '   ' → logprob: -9.466081619262695
    9. '       ' → logprob: -9.466081619262695
    10. '[' → logprob: -9.591081619262695

Token 585: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.1017431914806366
    2. ' col' → logprob: -2.476743221282959
    3. '1' → logprob: -4.851743221282959
    4. '[col' → logprob: -5.601743221282959
    5. 'row' → logprob: -7.601743221282959
    6. ' ' → logprob: -7.851743221282959
    7. '(col' → logprob: -9.3517427444458
    8. '+' → logprob: -10.2267427444458
    9. '[row' → logprob: -10.2267427444458
    10. ' row' → logprob: -10.6017427444458

Token 586: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08158260583877563
    2. ' +' → logprob: -2.581582546234131
    3. '[col' → logprob: -5.956582546234131
    4. ' col' → logprob: -10.206583023071289
    5. '[' → logprob: -10.206583023071289
    6. 'col' → logprob: -11.081583023071289
    7. '   ' → logprob: -12.831583023071289
    8. ' ' → logprob: -13.081583023071289
    9. '(col' → logprob: -13.706583023071289
    10. '           ' → logprob: -13.706583023071289

Token 587: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005423243157565594
    2. ' ' → logprob: -5.255423069000244
    3. '+' → logprob: -8.755423545837402
    4. 'col' → logprob: -11.755423545837402
    5. '[col' → logprob: -12.255423545837402
    6. ' col' → logprob: -12.505423545837402
    7. '   ' → logprob: -12.755423545837402
    8. ''' → logprob: -13.005423545837402
    9. ''+' → logprob: -13.380423545837402
    10. ' +' → logprob: -13.630423545837402

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. '+' → logprob: -9.125261306762695
    3. ' ' → logprob: -9.250261306762695
    4. 'col' → logprob: -9.875261306762695
    5. ' col' → logprob: -13.250261306762695
    6. '   ' → logprob: -13.750261306762695
    7. '[col' → logprob: -13.875261306762695
    8. '(col' → logprob: -15.250261306762695
    9. ' +' → logprob: -15.375261306762695
    10. ''+' → logprob: -15.750261306762695

Token 589: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009068545885384083
    2. ']==' → logprob: -4.884068489074707
    3. '[col' → logprob: -7.509068489074707
    4. '[row' → logprob: -7.634068489074707
    5. '           ' → logprob: -8.009068489074707
    6. '==' → logprob: -10.134068489074707
    7. '               ' → logprob: -11.259068489074707
    8. ' ]' → logprob: -11.884068489074707
    9. ']=='' → logprob: -12.009068489074707
    10. '][' → logprob: -12.134068489074707

Token 590: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.616428554058075
    2. ' ==' → logprob: -1.3664286136627197
    3. '[col' → logprob: -2.2414286136627197
    4. '[row' → logprob: -2.8664286136627197
    5. ']' → logprob: -3.9914286136627197
    6. ']==' → logprob: -4.616428375244141
    7. '           ' → logprob: -4.741428375244141
    8. '[' → logprob: -6.366428375244141
    9. '               ' → logprob: -6.866428375244141
    10. '=='' → logprob: -7.491428375244141

Token 591: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.01364106498658657
    2. 'True' → logprob: -4.388640880584717
    3. ' '#'' → logprob: -7.638640880584717
    4. ' '#' → logprob: -7.888640880584717
    5. ''' → logprob: -8.763641357421875
    6. ' True' → logprob: -9.513641357421875
    7. 'False' → logprob: -10.513641357421875
    8. '"#' → logprob: -12.013641357421875
    9. '('#' → logprob: -13.138641357421875
    10. '1' → logprob: -13.138641357421875

Token 592: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4575343430042267
    2. ':
' → logprob: -1.3325343132019043
    3. ':' → logprob: -2.8325343132019043
    4. ']:
' → logprob: -3.9575343132019043
    5. '):
' → logprob: -4.832534313201904
    6. '                   ' → logprob: -5.457534313201904
    7. '           ' → logprob: -5.457534313201904
    8. '=' → logprob: -5.457534313201904
    9. ']' → logprob: -6.707534313201904
    10. '==' → logprob: -7.332534313201904

Token 593: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7681425213813782
    2. '                   ' → logprob: -1.0181424617767334
    3. ' can' → logprob: -2.1431424617767334
    4. 'can' → logprob: -3.0181424617767334
    5. '           ' → logprob: -5.6431427001953125
    6. '=' → logprob: -5.7681427001953125
    7. '                       ' → logprob: -7.1431427001953125
    8. ' =' → logprob: -8.018142700195312
    9. '	can' → logprob: -8.643142700195312
    10. '_can' → logprob: -9.143142700195312

Token 594: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' (adapté à ' can') → logprob: -0.3134835660457611
    2. ' can' → logprob: -1.3134835958480835
    3. '               ' → logprob: -8.938483238220215
    4. '                   ' → logprob: -9.563483238220215
    5. '	can' → logprob: -11.563483238220215
    6. '           ' → logprob: -12.313483238220215
    7. '_can' → logprob: -12.688483238220215
    8. '
' → logprob: -13.938483238220215
    9. '```' → logprob: -14.688483238220215
    10. '(can' → logprob: -14.688483238220215

Token 595: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -2.618001053633634e-05
    2. 'cut' → logprob: -10.750025749206543
    3. '_c' → logprob: -12.750025749206543
    4. '=cut' → logprob: -13.625025749206543
    5. '_' → logprob: -15.000025749206543
    6. '-cut' → logprob: -16.50002670288086
    7. 'Cut' → logprob: -16.50002670288086
    8. ' cut' → logprob: -16.62502670288086
    9. '.cut' → logprob: -17.62502670288086
    10. '
' → logprob: -19.00002670288086

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011081771925091743
    2. '=' → logprob: -4.511081695556641
    3. '=False' → logprob: -10.38608169555664
    4. ' ' → logprob: -14.01108169555664
    5. '           ' → logprob: -14.13608169555664
    6. '=True' → logprob: -14.26108169555664
    7. '   ' → logprob: -15.26108169555664
    8. '[row' → logprob: -15.38608169555664
    9. '=row' → logprob: -15.88608169555664
    10. '[col' → logprob: -16.88608169555664

Token 597: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0485873706638813
    2. ' False' → logprob: -3.0485873222351074
    3. '(False' → logprob: -19.923587799072266
    4. '=False' → logprob: -20.173587799072266
    5. '_false' → logprob: -21.798587799072266
    6. '.False' → logprob: -22.423587799072266
    7. 'F' → logprob: -22.548587799072266
    8. 'false' → logprob: -23.548587799072266
    9. '   ' → logprob: -23.548587799072266
    10. 'True' → logprob: -23.673587799072266

Token 598: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002167986473068595
    2. '               ' → logprob: -7.12716817855835
    3. '                       ' → logprob: -7.62716817855835
    4. '				' → logprob: -8.002167701721191
    5. '           ' → logprob: -8.627167701721191
    6. '<|end|>' → logprob: -8.752167701721191
    7. '		           ' → logprob: -9.377167701721191
    8. '
' → logprob: -10.627167701721191
    9. '			       ' → logprob: -11.252167701721191
    10. '                    ' → logprob: -11.377167701721191

Token 599: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002445317804813385
    2. '
' → logprob: -9.625244140625
    3. '				' → logprob: -9.750244140625
    4. '               ' → logprob: -10.000244140625
    5. '		           ' → logprob: -10.750244140625
    6. '           ' → logprob: -10.875244140625
    7. '                       ' → logprob: -11.375244140625
    8. '<|end|>' → logprob: -12.125244140625
    9. '	               ' → logprob: -12.625244140625
    10. 'break' → logprob: -13.000244140625

Token 600: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2260422259569168
    2. ' break' → logprob: -1.7260422706604004
    3. '                   ' → logprob: -3.7260422706604004
    4. '               ' → logprob: -9.476041793823242
    5. '                       ' → logprob: -9.601041793823242
    6. '
' → logprob: -9.726041793823242
    7. '	break' → logprob: -11.101041793823242
    8. '           ' → logprob: -11.601041793823242
    9. '                    ' → logprob: -13.226041793823242
    10. '				' → logprob: -13.226041793823242

Token 601: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044258590787649155
    2. '		' → logprob: -8.500442504882812
    3. '       ' → logprob: -9.000442504882812
    4. '               ' → logprob: -9.500442504882812
    5. '                   ' → logprob: -11.750442504882812
    6. '<|end|>' → logprob: -11.750442504882812
    7. '	       ' → logprob: -12.000442504882812
    8. ',' → logprob: -12.875442504882812
    9. '   ' → logprob: -13.125442504882812
    10. '
' → logprob: -13.250442504882812

Token 602: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002814982086420059
    2. '		' → logprob: -6.002814769744873
    3. '       ' → logprob: -8.752815246582031
    4. '               ' → logprob: -9.502815246582031
    5. '	       ' → logprob: -9.627815246582031
    6. '	   ' → logprob: -11.502815246582031
    7. '	' → logprob: -12.127815246582031
    8. '		   ' → logprob: -12.127815246582031
    9. '                   ' → logprob: -12.752815246582031
    10. '[' → logprob: -13.002815246582031

Token 603: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2663239538669586
    2. 'self' (adapté à ' self') → logprob: -1.5163239240646362
    3. '       ' → logprob: -4.641324043273926
    4. ' self' → logprob: -5.516324043273926
    5. '               ' → logprob: -8.266324043273926
    6. '	self' → logprob: -8.516324043273926
    7. '   ' → logprob: -9.391324043273926
    8. '                   ' → logprob: -10.266324043273926
    9. '		' → logprob: -11.391324043273926
    10. '```' → logprob: -11.641324043273926

Token 604: '.vertical' (ID: 104067)
  Prédit: '.vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertical' → logprob: -0.0009019309654831886
    2. '.' → logprob: -7.500901699066162
    3. '.horizontal' → logprob: -8.00090217590332
    4. 'vertical' → logprob: -11.25090217590332
    5. ' .' → logprob: -14.50090217590332
    6. '.Vertical' → logprob: -16.62590217590332
    7. ' vertical' → logprob: -16.87590217590332
    8. '.virtual' → logprob: -17.50090217590332
    9. '.v' → logprob: -17.87590217590332
    10. '.VERTICAL' → logprob: -18.50090217590332

Token 605: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.6240566083070007e-06
    2. ' _' → logprob: -14.375001907348633
    3. '_cut' → logprob: -14.375001907348633
    4. '[_' → logprob: -15.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. '[' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '_' → logprob: -17.250001907348633
    9. '
' → logprob: -18.000001907348633
    10. '._' → logprob: -18.375001907348633

Token 606: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -5.6100132496794686e-05
    2. '_' → logprob: -10.750056266784668
    3. 'cuts' → logprob: -11.125056266784668
    4. '_c' → logprob: -13.125056266784668
    5. '```' → logprob: -13.125056266784668
    6. 'ut' → logprob: -13.250056266784668
    7. '__' → logprob: -13.250056266784668
    8. '[' → logprob: -13.375056266784668
    9. 'ts' → logprob: -13.750056266784668
    10. 's' → logprob: -14.000056266784668

Token 607: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.25000286102295
    3. ' col' → logprob: -15.62500286102295
    4. ' [' → logprob: -15.62500286102295
    5. '[row' → logprob: -15.87500286102295
    6. '[column' → logprob: -16.875001907348633
    7. '[
' → logprob: -17.375001907348633
    8. '```' → logprob: -17.750001907348633
    9. '[val' → logprob: -17.750001907348633
    10. '][' → logprob: -18.375001907348633

Token 608: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002011314034461975
    2. ']=' → logprob: -6.752011299133301
    3. '=' → logprob: -7.502011299133301
    4. ' =' → logprob: -8.5020112991333
    5. ' ]' → logprob: -9.3770112991333
    6. '[' → logprob: -14.6270112991333
    7. '=True' → logprob: -15.5020112991333
    8. ')' → logprob: -16.127012252807617
    9. ']==' → logprob: -16.752012252807617
    10. '           ' → logprob: -16.877012252807617

Token 609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. ']=' → logprob: -15.75192928314209
    4. ']' → logprob: -16.376930236816406
    5. '=True' → logprob: -16.501930236816406
    6. '[' → logprob: -16.501930236816406
    7. '=cut' → logprob: -17.251930236816406
    8. '<|end|>' → logprob: -17.251930236816406
    9. ')' → logprob: -17.501930236816406
    10. ')=' → logprob: -17.626930236816406

Token 610: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.01814994215965271
    2. ' can' → logprob: -4.0181498527526855
    3. '	can' → logprob: -17.143150329589844
    4. 'False' → logprob: -17.893150329589844
    5. '(can' → logprob: -18.893150329589844
    6. '_can' → logprob: -19.518150329589844
    7. 'Can' → logprob: -19.893150329589844
    8. 'c' → logprob: -20.143150329589844
    9. ' False' → logprob: -20.643150329589844
    10. '.can' → logprob: -21.018150329589844

Token 611: '_cut' (ID: 81399)
  Prédit: '_cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cut' → logprob: -0.030297202989459038
    2. 'ut' → logprob: -3.53029727935791
    3. 'cut' → logprob: -7.78029727935791
    4. 't' → logprob: -9.53029727935791
    5. '_can' → logprob: -10.53029727935791
    6. 'at' → logprob: -12.40529727935791
    7. '   ' → logprob: -12.78029727935791
    8. '=cut' → logprob: -12.90529727935791
    9. 'an' → logprob: -13.15529727935791
    10. '_' → logprob: -13.15529727935791

Token 612: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18346409499645233
    2. '<|end|>' → logprob: -1.8084640502929688
    3. '
' → logprob: -6.433464050292969
    4. '```' → logprob: -6.808464050292969
    5. '<|end|>' → logprob: -7.933464050292969
    6. 'def' → logprob: -8.308464050292969
    7. '       ' → logprob: -8.683464050292969
    8. ' ' → logprob: -9.683464050292969
    9. '    
' → logprob: -10.058464050292969
    10. ' def' → logprob: -10.308464050292969

Token 614: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.069768026471138
    2. '   ' → logprob: -2.819767951965332
    3. ' def' → logprob: -5.444767951965332
    4. '<|end|>' → logprob: -5.819767951965332
    5. '
' → logprob: -8.194767951965332
    6. '	def' → logprob: -9.569767951965332
    7. '```' → logprob: -9.569767951965332
    8. '    
' → logprob: -10.569767951965332
    9. ' ' → logprob: -10.944767951965332
    10. '<|end|>' → logprob: -11.319767951965332

Token 615: ' count' (ID: 3605)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.8996917009353638
    2. ' count' → logprob: -1.1496917009353638
    3. 'count' → logprob: -2.774691581726074
    4. 'get' → logprob: -3.149691581726074
    5. ' is' → logprob: -3.774691581726074
    6. ' cut' → logprob: -3.774691581726074
    7. 'def' → logprob: -3.899691581726074
    8. ' find' → logprob: -4.024691581726074
    9. ' def' → logprob: -4.024691581726074
    10. ' calculate' → logprob: -4.399691581726074

Token 616: '_p' (ID: 1359)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.8828409314155579
    2. '_p' → logprob: -1.257840871810913
    3. '_' → logprob: -2.007840871810913
    4. '_s' → logprob: -2.382840871810913
    5. '_parts' → logprob: -3.507840871810913
    6. '_possible' → logprob: -4.257841110229492
    7. '_sub' → logprob: -5.007841110229492
    8. '_chunks' → logprob: -5.632841110229492
    9. '_ch' → logprob: -6.007841110229492
    10. '_c' → logprob: -6.007841110229492

Token 617: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.01905982755124569
    2. 'arts' → logprob: -4.519059658050537
    3. 'art' → logprob: -5.644059658050537
    4. 'iece' → logprob: -5.644059658050537
    5. 'e' → logprob: -8.394060134887695
    6. 'oss' → logprob: -8.519060134887695
    7. 'ie' → logprob: -8.769060134887695
    8. 'er' → logprob: -9.019060134887695
    9. 'ar' → logprob: -10.019060134887695
    10. 'iec' → logprob: -10.644060134887695

Token 618: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0020116716623306274
    2. '(' → logprob: -6.252011775970459
    3. 'self' → logprob: -9.5020112991333
    4. '   ' → logprob: -12.5020112991333
    5. '(
' → logprob: -13.5020112991333
    6. ' (' → logprob: -13.6270112991333
    7. '(s' → logprob: -14.8770112991333
    8. ' self' → logprob: -14.8770112991333
    9. '       ' → logprob: -15.0020112991333
    10. '	self' → logprob: -15.3770112991333

Token 619: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8998550772666931
    2. '):
' → logprob: -0.8998550772666931
    3. '):' → logprob: -1.774855136871338
    4. '(self' → logprob: -4.149855136871338
    5. ')' → logprob: -6.899855136871338
    6. '   ' → logprob: -8.27485466003418
    7. '       ' → logprob: -9.52485466003418
    8. '):

' → logprob: -10.14985466003418
    9. ',' → logprob: -10.64985466003418
    10. ' self' → logprob: -10.77485466003418

Token 620: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008170200511813164
    2. '(' → logprob: -5.508170127868652
    3. '   ' → logprob: -6.258170127868652
    4. '       ' → logprob: -6.633170127868652
    5. ':' → logprob: -8.008170127868652
    6. 'self' → logprob: -8.133170127868652
    7. '(
' → logprob: -8.883170127868652
    8. 'def' → logprob: -10.383170127868652
    9. ':
' → logprob: -11.258170127868652
    10. ' self' → logprob: -11.508170127868652

Token 621: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002622894535306841
    2. ' int' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.625262260437012
    4. '(int' → logprob: -15.125262260437012
    5. '```' → logprob: -16.250263214111328
    6. 'None' → logprob: -16.500263214111328
    7. '
' → logprob: -18.000263214111328
    8. '	int' → logprob: -18.125263214111328
    9. ' ' → logprob: -18.250263214111328
    10. '       ' → logprob: -18.750263214111328

Token 622: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5150390863418579
    2. '       ' → logprob: -1.015039086341858
    3. ':' → logprob: -4.140038967132568
    4. '(' → logprob: -4.515038967132568
    5. ':
' → logprob: -4.640038967132568
    6. '(
' → logprob: -6.515038967132568
    7. '   ' → logprob: -6.640038967132568
    8. 'self' → logprob: -7.890038967132568
    9. '):
' → logprob: -9.390039443969727
    10. ' self' → logprob: -9.890039443969727

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00893279816955328
    2. 'count' → logprob: -5.633932590484619
    3. 'pieces' → logprob: -5.633932590484619
    4. ' pieces' → logprob: -8.008933067321777
    5. 'cuts' → logprob: -8.258933067321777
    6. 'cut' → logprob: -8.633933067321777
    7. '   ' → logprob: -8.758933067321777
    8. ' cuts' → logprob: -9.258933067321777
    9. 'result' → logprob: -9.383933067321777
    10. ' count' → logprob: -9.508933067321777

Token 624: ' self' (ID: 1051)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.3664121627807617
    2. 'cuts' → logprob: -1.8664121627807617
    3. 'count' → logprob: -2.6164121627807617
    4. '       ' → logprob: -3.1164121627807617
    5. 'cut' → logprob: -5.116412162780762
    6. 'rows' → logprob: -5.116412162780762
    7. ' pieces' → logprob: -5.366412162780762
    8. 'horizontal' → logprob: -5.616412162780762
    9. 'total' → logprob: -5.741412162780762
    10. 'result' → logprob: -5.866412162780762

Token 625: '.find' (ID: 4231)
  Prédit: '.horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.horizontal' → logprob: -0.5784424543380737
    2. '.find' → logprob: -0.8284424543380737
    3. '.' → logprob: -6.828442573547363
    4. 'horizontal' → logprob: -7.453442573547363
    5. '._' → logprob: -7.828442573547363
    6. '.vertical' → logprob: -8.328442573547363
    7. '.
' → logprob: -10.328442573547363
    8. 'def' → logprob: -10.703442573547363
    9. 'find' → logprob: -11.078442573547363
    10. '.calculate' → logprob: -11.078442573547363

Token 626: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.5048530030981055e-06
    2. '_possible' → logprob: -14.000001907348633
    3. 'valid' → logprob: -15.500001907348633
    4. '_invalid' → logprob: -15.625001907348633
    5. '_' → logprob: -16.375001907348633
    6. '_val' → logprob: -17.125001907348633
    7. ' _' → logprob: -17.625001907348633
    8. '_self' → logprob: -17.750001907348633
    9. '```' → logprob: -18.375001907348633
    10. '_safe' → logprob: -18.625001907348633

Token 627: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.625001907348633
    3. '_cut' → logprob: -14.875001907348633
    4. ' _' → logprob: -15.000001907348633
    5. '_p' → logprob: -18.375001907348633
    6. '_
' → logprob: -19.250001907348633
    7. '_horizontal' → logprob: -19.250001907348633
    8. '```' → logprob: -19.250001907348633
    9. '_calls' → logprob: -19.500001907348633
    10. 'cuts' → logprob: -19.625001907348633

Token 628: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -1.843177233240567e-05
    2. 'ut' → logprob: -12.250018119812012
    3. 'cuts' → logprob: -12.625018119812012
    4. 'ts' → logprob: -12.750018119812012
    5. ' uts' → logprob: -13.375018119812012
    6. '```' → logprob: -13.375018119812012
    7. '
' → logprob: -14.625018119812012
    8. 'utter' → logprob: -14.750018119812012
    9. 'u' → logprob: -14.875018119812012
    10. '`' → logprob: -15.375018119812012

Token 629: '()

' (ID: 5874)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.25202709436416626
    2. '()' → logprob: -1.5020270347595215
    3. '()

' → logprob: -9.37702751159668
    4. '()
' → logprob: -11.62702751159668
    5. '       ' → logprob: -12.50202751159668
    6. '
' → logprob: -15.75202751159668
    7. '_' → logprob: -16.00202751159668
    8. '()\' → logprob: -16.00202751159668
    9. '()`' → logprob: -16.37702751159668
    10. 'def' → logprob: -16.37702751159668

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05102517083287239
    2. 'count' → logprob: -3.801025152206421
    3. 'pieces' → logprob: -4.176025390625
    4. ' pieces' → logprob: -5.801025390625
    5. ' count' → logprob: -6.426025390625
    6. 'cut' → logprob: -6.801025390625
    7. 'cuts' → logprob: -7.051025390625
    8. '
' → logprob: -7.051025390625
    9. 'num' → logprob: -7.176025390625
    10. ' cuts' → logprob: -7.301025390625

Token 631: ' #' (ID: 1069)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.47096899151802063
    2. 'pieces' → logprob: -1.4709689617156982
    3. 'h' → logprob: -2.8459689617156982
    4. 'rows' → logprob: -2.8459689617156982
    5. 'visited' → logprob: -4.970969200134277
    6. 'num' → logprob: -5.095969200134277
    7. 'cuts' → logprob: -5.220969200134277
    8. 'row' → logprob: -5.470969200134277
    9. 'hor' → logprob: -5.845969200134277
    10. 'piece' → logprob: -7.095969200134277

Token 632: ' Identify' (ID: 88495)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.9477903246879578
    2. 'pieces' → logprob: -1.1977903842926025
    3. 'rows' → logprob: -1.8227903842926025
    4. 'h' → logprob: -2.5727903842926025
    5. 'visited' → logprob: -3.5727903842926025
    6. 'num' → logprob: -4.447790145874023
    7. 'row' → logprob: -4.447790145874023
    8. '#' → logprob: -4.947790145874023
    9. 'hor' → logprob: -5.322790145874023
    10. 'cuts' → logprob: -6.072790145874023

Token 633: ' horizontal' (ID: 25511)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.31442204117774963
    2. 'horizontal' → logprob: -2.314422130584717
    3. 'rows' → logprob: -2.689422130584717
    4. 'cuts' → logprob: -3.064422130584717
    5. ' pieces' → logprob: -4.064422130584717
    6. 'cut' → logprob: -4.439422130584717
    7. ' horizontal' → logprob: -5.314422130584717
    8. 'piece' → logprob: -5.314422130584717
    9. 'h' → logprob: -5.439422130584717
    10. 'visited' → logprob: -5.689422130584717

Token 634: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4864955544471741
    2. '_segments' → logprob: -1.6114954948425293
    3. 'cuts' → logprob: -2.3614954948425293
    4. 'pieces' → logprob: -3.3614954948425293
    5. '_c' → logprob: -4.236495494842529
    6. '_lines' → logprob: -4.236495494842529
    7. '_p' → logprob: -4.361495494842529
    8. ' segments' → logprob: -5.611495494842529
    9. 'lines' → logprob: -6.361495494842529
    10. ' cuts' → logprob: -6.361495494842529

Token 635: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3631162941455841
    2. 'segments' → logprob: -1.3631162643432617
    3. 'pieces' → logprob: -4.238116264343262
    4. ' segments' → logprob: -4.488116264343262
    5. ' pieces' → logprob: -4.863116264343262
    6. 'count' → logprob: -5.488116264343262
    7. '
' → logprob: -6.113116264343262
    8. 'cuts' → logprob: -6.613116264343262
    9. 'segment' → logprob: -6.738116264343262
    10. '        
' → logprob: -7.363116264343262

Token 636: ' grouping' (ID: 97243)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7853317260742188
    2. ' segments' → logprob: -1.6603317260742188
    3. 'segment' → logprob: -2.4103317260742188
    4. ' segment' → logprob: -2.7853317260742188
    5. 'pieces' → logprob: -3.4103317260742188
    6. ' pieces' → logprob: -3.4103317260742188
    7. '       ' → logprob: -3.6603317260742188
    8. 'count' → logprob: -4.160331726074219
    9. 'num' → logprob: -4.285331726074219
    10. 'cut' → logprob: -4.660331726074219

Token 637: ' rows' (ID: 13585)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -1.3126156330108643
    2. 'rows' → logprob: -1.4376156330108643
    3. 'current' → logprob: -2.3126156330108643
    4. 'segments' → logprob: -2.4376156330108643
    5. 'row' → logprob: -2.6876156330108643
    6. ' pieces' → logprob: -3.0626156330108643
    7. 'start' → logprob: -3.1876156330108643
    8. 'prev' → logprob: -3.3126156330108643
    9. 'lines' → logprob: -4.187615394592285
    10. 'cuts' → logprob: -4.312615394592285

Token 638: ' separated' (ID: 33930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1425849199295044
    2. '       ' → logprob: -3.017584800720215
    3. '=' → logprob: -3.142584800720215
    4. 'segments' → logprob: -4.767584800720215
    5. 'self' → logprob: -5.392584800720215
    6. ',' → logprob: -5.767584800720215
    7. ' by' → logprob: -6.017584800720215
    8. 'def' → logprob: -6.142584800720215
    9. '_start' → logprob: -6.892584800720215
    10. 'by' → logprob: -6.892584800720215

Token 639: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.1602519452571869
    2. ' by' → logprob: -1.9102519750595093
    3. '   ' → logprob: -10.78525161743164
    4. '```' → logprob: -12.53525161743164
    5. 'def' → logprob: -13.78525161743164
    6. ' ' → logprob: -14.66025161743164
    7. '+' → logprob: -15.16025161743164
    8. '       ' → logprob: -15.28525161743164
    9. '1' → logprob: -15.53525161743164
    10. '    ' → logprob: -15.66025161743164

Token 640: ' horizontal' (ID: 25511)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8165040612220764
    2. 'not' → logprob: -1.6915040016174316
    3. 'False' → logprob: -2.1915040016174316
    4. 'cuts' → logprob: -2.4415040016174316
    5. 'self' → logprob: -2.9415040016174316
    6. ' True' → logprob: -3.5665040016174316
    7. 'any' → logprob: -3.8165040016174316
    8. '[' → logprob: -4.066504001617432
    9. 'cut' → logprob: -4.191504001617432
    10. ' not' → logprob: -4.316504001617432

Token 641: ' cuts' (ID: 29505)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5281933546066284
    2. 'cuts' → logprob: -1.0281933546066284
    3. ' cuts' → logprob: -3.153193473815918
    4. '_cut' → logprob: -4.653193473815918
    5. 'cut' → logprob: -7.903193473815918
    6. '_' → logprob: -11.028193473815918
    7. '
' → logprob: -11.028193473815918
    8. 'Cuts' → logprob: -11.528193473815918
    9. ' cut' → logprob: -12.778193473815918
    10. '_false' → logprob: -12.778193473815918

Token 642: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19484315812587738
    2. 'segments' → logprob: -1.9448431730270386
    3. ' segments' → logprob: -4.569843292236328
    4. '
' → logprob: -4.694843292236328
    5. '        
' → logprob: -6.319843292236328
    6. ' pieces' → logprob: -6.569843292236328
    7. 'current' → logprob: -6.569843292236328
    8. ' lines' → logprob: -6.694843292236328
    9. ' groups' → logprob: -6.819843292236328
    10. 'row' → logprob: -6.944843292236328

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06026587262749672
    2. 'segments' → logprob: -3.3102657794952393
    3. ' segments' → logprob: -5.685266017913818
    4. ' pieces' → logprob: -5.810266017913818
    5. 'pieces' → logprob: -6.060266017913818
    6. 'row' → logprob: -6.310266017913818
    7. ' lines' → logprob: -6.310266017913818
    8. 'rows' → logprob: -6.560266017913818
    9. 'current' → logprob: -6.685266017913818
    10. '
' → logprob: -6.685266017913818

Token 644: ' horizontal' (ID: 25511)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3408615291118622
    2. 'pieces' → logprob: -1.9658615589141846
    3. ' segments' → logprob: -3.0908615589141846
    4. 'horizontal' (adapté à ' horizontal') → logprob: -3.8408615589141846
    5. 'row' → logprob: -3.9658615589141846
    6. '       ' → logprob: -4.3408613204956055
    7. ' pieces' → logprob: -4.5908613204956055
    8. 'current' → logprob: -4.5908613204956055
    9. 'rows' → logprob: -4.9658613204956055
    10. ' horizontal' → logprob: -5.0908613204956055

Token 645: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.010806919075548649
    2. '_groups' → logprob: -4.885807037353516
    3. '_lines' → logprob: -6.635807037353516
    4. '_c' → logprob: -7.635807037353516
    5. '_p' → logprob: -8.260807037353516
    6. '_parts' → logprob: -8.760807037353516
    7. '_s' → logprob: -8.885807037353516
    8. '_segment' → logprob: -8.885807037353516
    9. '_levels' → logprob: -9.010807037353516
    10. '_seg' → logprob: -9.135807037353516

Token 646: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486217737197876
    2. '=' → logprob: -3.048621654510498
    3. '=[]' → logprob: -10.798622131347656
    4. ',' → logprob: -11.548622131347656
    5. '=[]
' → logprob: -13.173622131347656
    6. 's' → logprob: -13.673622131347656
    7. '=[' → logprob: -14.798622131347656
    8. ':' → logprob: -15.673622131347656
    9. ' ' → logprob: -15.673622131347656
    10. ' =[' → logprob: -15.673622131347656

Token 647: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1512213796377182
    2. '1' → logprob: -2.15122127532959
    3. '[]
' → logprob: -3.77622127532959
    4. ' [' → logprob: -7.52622127532959
    5. '[]' → logprob: -7.90122127532959
    6. ' ' → logprob: -8.90122127532959
    7. ' []
' → logprob: -10.77622127532959
    8. '0' → logprob: -11.65122127532959
    9. '[]

' → logprob: -12.27622127532959
    10. '   ' → logprob: -12.52622127532959

Token 648: '       ' (ID: 309)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.20371480286121368
    2. ' start' → logprob: -1.9537148475646973
    3. 'current' → logprob: -3.7037148475646973
    4. ' current' → logprob: -4.703714847564697
    5. '       ' → logprob: -5.203714847564697
    6. 'segment' → logprob: -6.578714847564697
    7. 'last' → logprob: -7.453714847564697
    8. 'prev' → logprob: -7.578714847564697
    9. ' segment' → logprob: -7.953714847564697
    10. ' last' → logprob: -8.203714370727539

Token 649: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.03613360971212387
    2. 'current' → logprob: -3.5361335277557373
    3. ' start' → logprob: -6.161133766174316
    4. 'segment' → logprob: -6.161133766174316
    5. 'last' → logprob: -6.536133766174316
    6. 'prev' → logprob: -7.911133766174316
    7. ' current' → logprob: -8.411133766174316
    8. ' segment' → logprob: -10.786133766174316
    9. 'curr' → logprob: -11.036133766174316
    10. 'seg' → logprob: -11.161133766174316

Token 650: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21511025726795197
    2. ' =' → logprob: -1.7151103019714355
    3. '_row' → logprob: -4.3401103019714355
    4. '_' → logprob: -7.5901103019714355
    5. '=row' → logprob: -10.465109825134277
    6. '_=' → logprob: -11.715109825134277
    7. '_idx' → logprob: -12.090109825134277
    8. '=_' → logprob: -12.340109825134277
    9. 'row' → logprob: -12.715109825134277
    10. 'Row' → logprob: -12.965109825134277

Token 651: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '=' → logprob: -17.87504005432129
    4. '   ' → logprob: -18.75004005432129
    5. '۰' → logprob: -19.62504005432129
    6. '[' → logprob: -20.37504005432129
    7. '```' → logprob: -20.50004005432129
    8. '00' → logprob: -21.18754005432129
    9. '
' → logprob: -21.56254005432129
    10. '`' → logprob: -21.56254005432129

Token 652: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -20.25
    4. '=' → logprob: -20.5
    5. '00' → logprob: -21.625
    6. '```' → logprob: -21.625
    7. '[' → logprob: -21.75
    8. '   ' → logprob: -21.875
    9. '000' → logprob: -22.5
    10. '０' → logprob: -22.625

Token 653: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08443594723939896
    2. '       ' → logprob: -2.8344359397888184
    3. ' for' → logprob: -4.334435939788818
    4. '<|end|>' → logprob: -4.959435939788818
    5. 'for' → logprob: -6.709435939788818
    6. ' 
' → logprob: -8.584436416625977
    7. '        
' → logprob: -8.959436416625977
    8. '  
' → logprob: -9.084436416625977
    9. '<|end|>' → logprob: -9.334436416625977
    10. '   ' → logprob: -9.459436416625977

Token 654: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10385850816965103
    2. ' for' → logprob: -2.603858470916748
    3. '
' → logprob: -4.228858470916748
    4. 'for' → logprob: -4.728858470916748
    5. '        
' → logprob: -7.603858470916748
    6. '<|end|>' → logprob: -8.103858947753906
    7. '```' → logprob: -9.228858947753906
    8. '   ' → logprob: -9.353858947753906
    9. '	for' → logprob: -9.978858947753906
    10. ' 
' → logprob: -10.103858947753906

Token 655: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07958360016345978
    2. ' for' → logprob: -2.5795836448669434
    3. '       ' → logprob: -7.704583644866943
    4. '
' → logprob: -8.329583168029785
    5. '	for' → logprob: -13.704583168029785
    6. '        
' → logprob: -15.829583168029785
    7. '```' → logprob: -15.829583168029785
    8. '   ' → logprob: -16.0795841217041
    9. ' 
' → logprob: -17.2045841217041
    10. '<|end|>' → logprob: -18.0795841217041

Token 656: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8534789085388184
    2. 'row' → logprob: -0.8534789085388184
    3. ' row' → logprob: -2.6034789085388184
    4. ' i' → logprob: -2.6034789085388184
    5. 'idx' → logprob: -10.103479385375977
    6. 'r' → logprob: -10.228479385375977
    7. 'cut' → logprob: -10.978479385375977
    8. ' idx' → logprob: -11.478479385375977
    9. ' cut' → logprob: -13.853479385375977
    10. 'index' → logprob: -14.478479385375977

Token 657: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0026213128585368395
    2. 'in' → logprob: -6.002621173858643
    3. ',' → logprob: -8.8776216506958
    4. ' ' → logprob: -12.8776216506958
    5. '	in' → logprob: -13.6276216506958
    6. 'n' → logprob: -13.8776216506958
    7. '   ' → logprob: -14.2526216506958
    8. ' ,' → logprob: -15.2526216506958
    9. 'range' → logprob: -16.002620697021484
    10. '  ' → logprob: -16.002620697021484

Token 658: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07888989895582199
    2. ' range' → logprob: -2.578889846801758
    3. '	range' → logprob: -16.828889846801758
    4. '   ' → logprob: -16.953889846801758
    5. '(range' → logprob: -18.328889846801758
    6. 'self' → logprob: -19.828889846801758
    7. '  ' → logprob: -19.828889846801758
    8. ' ' → logprob: -19.828889846801758
    9. '0' → logprob: -20.453889846801758
    10. '    ' → logprob: -20.578889846801758

Token 659: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020103710994590074
    2. '(' → logprob: -9.000201225280762
    3. '(len' → logprob: -9.750201225280762
    4. 'self' → logprob: -11.000201225280762
    5. '1' → logprob: -13.125201225280762
    6. 'len' → logprob: -14.625201225280762
    7. ' self' → logprob: -15.625201225280762
    8. '0' → logprob: -17.750200271606445
    9. ' (' → logprob: -18.000200271606445
    10. '   ' → logprob: -18.875200271606445

Token 660: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -2.057743949990254e-05
    2. 'height' → logprob: -11.375020980834961
    3. '-' → logprob: -12.375020980834961
    4. '1' → logprob: -13.125020980834961
    5. '.width' → logprob: -14.375020980834961
    6. 'self' → logprob: -14.625020980834961
    7. '   ' → logprob: -14.625020980834961
    8. ' -' → logprob: -14.750020980834961
    9. ' .' → logprob: -15.000020980834961
    10. '.' → logprob: -15.625020980834961

Token 661: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04910345748066902
    2. '-' → logprob: -3.0491034984588623
    3. '):
' → logprob: -7.924103260040283
    4. '):' → logprob: -9.299103736877441
    5. '   ' → logprob: -10.049103736877441
    6. '1' → logprob: -11.799103736877441
    7. '       ' → logprob: -12.424103736877441
    8. ')' → logprob: -12.549103736877441
    9. ' ' → logprob: -13.549103736877441
    10. ' ):
' → logprob: -13.799103736877441

Token 662: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.875075340270996
    4. '       ' → logprob: -17.50007438659668
    5. '```' → logprob: -17.62507438659668
    6. '0' → logprob: -18.87507438659668
    7. '-' → logprob: -19.62507438659668
    8. '<|end|>' → logprob: -19.68757438659668
    9. '           ' → logprob: -19.93757438659668
    10. '  ' → logprob: -20.06257438659668

Token 663: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.37501335144043
    4. '```' → logprob: -17.37501335144043
    5. '
' → logprob: -18.62501335144043
    6. '-' → logprob: -19.43751335144043
    7. '0' → logprob: -19.62501335144043
    8. '۱' → logprob: -20.06251335144043
    9. '  ' → logprob: -20.43751335144043
    10. '`' → logprob: -20.50001335144043

Token 664: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0067603676579892635
    2. '):' → logprob: -5.006760597229004
    3. '):
' → logprob: -10.631760597229004
    4. ':
' → logprob: -11.881760597229004
    5. ':' → logprob: -12.006760597229004
    6. ' ):
' → logprob: -12.881760597229004
    7. '+' → logprob: -13.131760597229004
    8. '():
' → logprob: -13.881760597229004
    9. '       ' → logprob: -14.006760597229004
    10. '):

' → logprob: -15.006760597229004

Token 665: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011934408685192466
    2. '   ' → logprob: -7.751193523406982
    3. ' if' → logprob: -7.876193523406982
    4. '<|end|>' → logprob: -8.876193046569824
    5. '       ' → logprob: -9.876193046569824
    6. ',' → logprob: -10.001193046569824
    7. '<|end|>' → logprob: -10.251193046569824
    8. 'if' → logprob: -10.251193046569824
    9. ':' → logprob: -11.126193046569824
    10. ' ' → logprob: -11.376193046569824

Token 666: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20399656891822815
    2. ' if' → logprob: -1.9539965391159058
    3. '           ' → logprob: -3.2039966583251953
    4. '       ' → logprob: -6.328996658325195
    5. '   ' → logprob: -7.953996658325195
    6. '```' → logprob: -9.453996658325195
    7. '               ' → logprob: -12.328996658325195
    8. ' ' → logprob: -12.578996658325195
    9. '	if' → logprob: -13.578996658325195
    10. '        ' → logprob: -13.578996658325195

Token 667: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931487321853638
    2. 'self' → logprob: -0.6931487321853638
    3. '           ' → logprob: -13.568148612976074
    4. '(self' → logprob: -16.44314956665039
    5. '       ' → logprob: -16.56814956665039
    6. '	self' → logprob: -16.69314956665039
    7. ' not' → logprob: -17.19314956665039
    8. '[self' → logprob: -17.44314956665039
    9. '   ' → logprob: -18.06814956665039
    10. ' ' → logprob: -18.31814956665039

Token 668: '.horizontal' (ID: 96605)
  Prédit: '.horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.horizontal' → logprob: -7.941850526549388e-06
    2. 'horizontal' → logprob: -11.750007629394531
    3. ' .' → logprob: -17.87500762939453
    4. '.' → logprob: -18.00000762939453
    5. '.vertical' → logprob: -18.75000762939453
    6. ' horizontal' → logprob: -19.37500762939453
    7. '.self' → logprob: -19.75000762939453
    8. 'self' → logprob: -20.00000762939453
    9. 'Horizontal' → logprob: -20.12500762939453
    10. '_horizontal' → logprob: -20.12500762939453

Token 669: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.088346359931165e-07
    2. '_cut' → logprob: -14.500000953674316
    3. '_' → logprob: -15.625000953674316
    4. ' _' → logprob: -16.0
    5. '
' → logprob: -17.0
    6. '\' → logprob: -18.0
    7. '```' → logprob: -18.5
    8. '[_' → logprob: -19.0
    9. ']_' → logprob: -19.0
    10. 'cuts' → logprob: -19.0

Token 670: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -1.2233183042553719e-05
    2. 'cuts' → logprob: -11.750012397766113
    3. 'ut' → logprob: -13.875012397766113
    4. ' uts' → logprob: -14.625012397766113
    5. '```' → logprob: -14.750012397766113
    6. '[' → logprob: -15.000012397766113
    7. 'u' → logprob: -15.250012397766113
    8. '`' → logprob: -15.375012397766113
    9. '#' → logprob: -15.625012397766113
    10. 'ts' → logprob: -15.625012397766113

Token 671: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.25
    3. '[' → logprob: -16.5
    4. 'i' → logprob: -17.0
    5. '```' → logprob: -18.625
    6. '   ' → logprob: -19.125
    7. '[I' → logprob: -19.125
    8. '[
' → logprob: -19.375
    9. '
' → logprob: -19.5
    10. ')[' → logprob: -20.75

Token 672: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.8955901861190796
    2. ']:' → logprob: -1.2705901861190796
    3. ':' → logprob: -1.3955901861190796
    4. ':
' → logprob: -2.770590305328369
    5. ']' → logprob: -8.395589828491211
    6. ']==' → logprob: -8.770589828491211
    7. '):
' → logprob: -9.395589828491211
    8. '==' → logprob: -9.895589828491211
    9. ']:
' → logprob: -9.895589828491211
    10. '():
' → logprob: -10.770589828491211

Token 673: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2337847203016281
    2. '           ' → logprob: -1.8587846755981445
    3. '       ' → logprob: -4.1087846755981445
    4. '
' → logprob: -4.2337846755981445
    5. ',' → logprob: -5.3587846755981445
    6. ' and' → logprob: -5.6087846755981445
    7. ':
' → logprob: -5.7337846755981445
    8. ' continue' → logprob: -6.2337846755981445
    9. 'continue' → logprob: -6.2337846755981445
    10. '<|end|>' → logprob: -6.6087846755981445

Token 674: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' (adapté à ' horizontal') → logprob: -0.4777981638908386
    2. ' horizontal' → logprob: -0.9777981638908386
    3. '           ' → logprob: -5.852797985076904
    4. '   ' → logprob: -7.977797985076904
    5. 'end' → logprob: -8.227798461914062
    6. '       ' → logprob: -9.102798461914062
    7. ' end' → logprob: -10.352798461914062
    8. '
' → logprob: -10.477798461914062
    9. '               ' → logprob: -11.102798461914062
    10. 'segments' → logprob: -11.602798461914062

Token 675: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00020342117932159454
    2. 'segments' → logprob: -8.875203132629395
    3. 'Segments' → logprob: -10.000203132629395
    4. '
' → logprob: -11.250203132629395
    5. '_segment' → logprob: -13.250203132629395
    6. 'end' → logprob: -14.750203132629395
    7. '   ' → logprob: -15.000203132629395
    8. ' segments' → logprob: -15.000203132629395
    9. 's' → logprob: -15.125203132629395
    10. '_cut' → logprob: -15.250203132629395

Token 676: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003404687449801713
    2. '.' → logprob: -8.000340461730957
    3. 'append' → logprob: -12.875340461730957
    4. ' .' → logprob: -13.625340461730957
    5. '.extend' → logprob: -14.500340461730957
    6. '   ' → logprob: -15.375340461730957
    7. '
' → logprob: -15.750340461730957
    8. '.
' → logprob: -16.500341415405273
    9. 'end' → logprob: -16.750341415405273
    10. '_append' → logprob: -16.875341415405273

Token 677: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2119087129831314
    2. '(self' → logprob: -1.9619086980819702
    3. '(start' → logprob: -3.8369088172912598
    4. '((' → logprob: -4.58690881729126
    5. '(' → logprob: -4.83690881729126
    6. 'self' → logprob: -4.96190881729126
    7. ' (' → logprob: -6.46190881729126
    8. 'i' → logprob: -7.21190881729126
    9. 'start' → logprob: -7.46190881729126
    10. ' i' → logprob: -7.96190881729126

Token 678: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.088346359931165e-07
    2. ' start' → logprob: -14.000000953674316
    3. '(start' → logprob: -19.625
    4. '0' → logprob: -20.75
    5. '[start' → logprob: -21.75
    6. ')' → logprob: -22.5
    7. '	start' → logprob: -22.75
    8. '   ' → logprob: -23.25
    9. ',start' → logprob: -23.5
    10. '
' → logprob: -23.75

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036161087919026613
    2. ',i' → logprob: -5.8786163330078125
    3. ' ,' → logprob: -7.3786163330078125
    4. ',
' → logprob: -8.628616333007812
    5. '   ' → logprob: -13.128616333007812
    6. '+' → logprob: -13.503616333007812
    7. 'i' → logprob: -14.003616333007812
    8. ')' → logprob: -14.253616333007812
    9. '
' → logprob: -15.128616333007812
    10. ' ' → logprob: -15.253616333007812

Token 680: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001502717612311244
    2. ' i' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.126502990722656
    4. '               ' → logprob: -17.376502990722656
    5. '           ' → logprob: -18.251502990722656
    6. '(i' → logprob: -18.501502990722656
    7. '                   ' → logprob: -18.501502990722656
    8. '	i' → logprob: -18.626502990722656
    9. ' ' → logprob: -18.876502990722656
    10. '       ' → logprob: -19.001502990722656

Token 681: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8271481394767761
    2. '))' → logprob: -1.327148199081421
    3. ' +' → logprob: -1.327148199081421
    4. '))
' → logprob: -3.452148199081421
    5. ' ))' → logprob: -7.952147960662842
    6. ' ))
' → logprob: -9.2021484375
    7. ')' → logprob: -9.7021484375
    8. '
' → logprob: -11.4521484375
    9. '+
' → logprob: -11.5771484375
    10. '))

' → logprob: -11.9521484375

Token 682: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015019700862467289
    2. '
' → logprob: -4.89001989364624
    3. 'start' → logprob: -5.51501989364624
    4. ' start' → logprob: -6.01501989364624
    5. '                
' → logprob: -8.265019416809082
    6. '[start' → logprob: -8.265019416809082
    7. '           ' → logprob: -9.390019416809082
    8. '			' → logprob: -9.390019416809082
    9. '       ' → logprob: -9.640019416809082
    10. ' 
' → logprob: -10.765019416809082

Token 683: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.03804493322968483
    2. ' start' → logprob: -3.2880449295043945
    3. '	start' → logprob: -13.413044929504395
    4. '               ' → logprob: -13.788044929504395
    5. '
' → logprob: -15.038044929504395
    6. '   ' → logprob: -15.538044929504395
    7. '       ' → logprob: -15.913044929504395
    8. '[start' → logprob: -16.03804588317871
    9. '           ' → logprob: -16.53804588317871
    10. ' ' → logprob: -17.66304588317871

Token 684: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196096301078796
    2. ' =' → logprob: -1.5019609928131104
    3. '=i' → logprob: -10.376960754394531
    4. '=
' → logprob: -15.001960754394531
    5. 'i' → logprob: -15.876960754394531
    6. ' i' → logprob: -16.75196075439453
    7. ')' → logprob: -16.87696075439453
    8. ' ' → logprob: -17.00196075439453
    9. ' =
' → logprob: -17.00196075439453
    10. '＝' → logprob: -17.87696075439453

Token 685: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009117019944824278
    2. ' i' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.250911712646484
    4. '	i' → logprob: -16.750911712646484
    5. '(i' → logprob: -17.750911712646484
    6. '=i' → logprob: -18.625911712646484
    7. '{i' → logprob: -19.125911712646484
    8. '[i' → logprob: -19.625911712646484
    9. 'I' → logprob: -20.000911712646484
    10. ')i' → logprob: -20.250911712646484

Token 686: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12694206833839417
    2. ' +' → logprob: -2.1269421577453613
    3. ' ' → logprob: -11.751941680908203
    4. '1' → logprob: -12.501941680908203
    5. '+
' → logprob: -14.376941680908203
    6. ' plus' → logprob: -14.626941680908203
    7. '+i' → logprob: -14.751941680908203
    8. ' +
' → logprob: -15.251941680908203
    9. '<|end|>' → logprob: -15.626941680908203
    10. 's' → logprob: -16.251941680908203

Token 687: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -18.750001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '0' → logprob: -20.000001907348633
    6. '2' → logprob: -20.875001907348633
    7. '
' → logprob: -21.375001907348633
    8. '           ' → logprob: -21.750001907348633
    9. '``' → logprob: -22.000001907348633
    10. '       ' → logprob: -22.375001907348633

Token 688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '0' → logprob: -19.25
    4. '```' → logprob: -19.625
    5. '<|end|>' → logprob: -20.25
    6. '
' → logprob: -21.625
    7. '2' → logprob: -21.625
    8. '   ' → logprob: -21.75
    9. '۱' → logprob: -22.625
    10. '``' → logprob: -23.0625

Token 689: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009004870429635048
    2. '
' → logprob: -4.759005069732666
    3. '<|end|>' → logprob: -9.009004592895508
    4. '        
' → logprob: -9.134004592895508
    5. ' 
' → logprob: -10.009004592895508
    6. '  
' → logprob: -11.259004592895508
    7. '    
' → logprob: -11.384004592895508
    8. '	' → logprob: -11.509004592895508
    9. '[
' → logprob: -11.759004592895508
    10. '\
' → logprob: -11.759004592895508

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.158350151963532e-05
    2. '
' → logprob: -9.750061988830566
    3. '```' → logprob: -13.750061988830566
    4. '	' → logprob: -14.750061988830566
    5. '      ' → logprob: -15.250061988830566
    6. '   ' → logprob: -15.250061988830566
    7. ',' → logprob: -15.250061988830566
    8. '        
' → logprob: -15.375061988830566
    9. '<|end|>' → logprob: -15.625061988830566
    10. ')' → logprob: -16.75006103515625

Token 691: ' horizontal' (ID: 25511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002387018030276522
    2. '
' → logprob: -9.250238418579102
    3. 'horizontal' (adapté à ' horizontal') → logprob: -9.875238418579102
    4. ' horizontal' → logprob: -10.000238418579102
    5. '```' → logprob: -10.625238418579102
    6. '   ' → logprob: -11.500238418579102
    7. ')' → logprob: -12.250238418579102
    8. ' ' → logprob: -13.500238418579102
    9. '      ' → logprob: -14.125238418579102
    10. '#' → logprob: -14.375238418579102

Token 692: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -2.15310683415737e-05
    2. 'segments' → logprob: -10.875021934509277
    3. 's' → logprob: -13.625021934509277
    4. 'Segments' → logprob: -14.875021934509277
    5. '_s' → logprob: -15.250021934509277
    6. '
' → logprob: -15.750021934509277
    7. '_sections' → logprob: -15.875021934509277
    8. '_tokens' → logprob: -16.00002098083496
    9. '_parts' → logprob: -16.87502098083496
    10. '_ranges' → logprob: -17.37502098083496

Token 693: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.64970643306151e-05
    2. '.' → logprob: -10.125086784362793
    3. 'append' → logprob: -11.125086784362793
    4. ',' → logprob: -11.375086784362793
    5. '       ' → logprob: -11.375086784362793
    6. ' .' → logprob: -12.375086784362793
    7. '
' → logprob: -13.750086784362793
    8. ' if' → logprob: -14.875086784362793
    9. '.setdefault' → logprob: -14.875086784362793
    10. '<|end|>' → logprob: -14.875086784362793

Token 694: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.5649528298527e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -14.500075340270996
    4. '(start' → logprob: -15.625075340270996
    5. ' ((' → logprob: -18.375076293945312
    6. '   ' → logprob: -18.500076293945312
    7. '[(' → logprob: -19.750076293945312
    8. ' (' → logprob: -19.875076293945312
    9. '       ' → logprob: -20.500076293945312
    10. ' ' → logprob: -20.875076293945312

Token 695: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.5048530030981055e-06
    2. ' start' → logprob: -13.500001907348633
    3. '   ' → logprob: -21.000001907348633
    4. '
' → logprob: -21.875001907348633
    5. '(start' → logprob: -22.750001907348633
    6. ' ' → logprob: -23.250001907348633
    7. '	start' → logprob: -23.375001907348633
    8. '       ' → logprob: -24.125001907348633
    9. '  ' → logprob: -24.375001907348633
    10. '[start' → logprob: -24.750001907348633

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4272752852994017e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',
' → logprob: -12.87502384185791
    4. ',self' → logprob: -15.75002384185791
    5. 'self' → logprob: -17.000024795532227
    6. '‌,' → logprob: -17.750024795532227
    7. ',

' → logprob: -19.125024795532227
    8. '
' → logprob: -19.125024795532227
    9. '   ' → logprob: -19.250024795532227
    10. '	' → logprob: -19.750024795532227

Token 697: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015860427811276168
    2. ' self' → logprob: -8.750158309936523
    3. '
' → logprob: -17.000158309936523
    4. '   ' → logprob: -17.000158309936523
    5. '       ' → logprob: -17.750158309936523
    6. '(self' → logprob: -18.250158309936523
    7. '	self' → logprob: -19.500158309936523
    8. '           ' → logprob: -19.875158309936523
    9. ' ' → logprob: -20.500158309936523
    10. '     ' → logprob: -21.375158309936523

Token 698: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.029755808413028717
    2. 'height' → logprob: -3.5297558307647705
    3. ' height' → logprob: -12.904755592346191
    4. 'self' → logprob: -13.029755592346191
    5. '.' → logprob: -15.279755592346191
    6. '.width' → logprob: -16.279756546020508
    7. '	height' → logprob: -16.654756546020508
    8. '_height' → logprob: -16.779756546020508
    9. '   ' → logprob: -16.904756546020508
    10. ' .' → logprob: -17.279756546020508

Token 699: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4741118848323822
    2. ' -' → logprob: -0.9741119146347046
    3. ')' → logprob: -10.474111557006836
    4. ' ' → logprob: -12.974111557006836
    5. '   ' → logprob: -13.099111557006836
    6. '))' → logprob: -13.474111557006836
    7. '       ' → logprob: -15.349111557006836
    8. ' )' → logprob: -16.224111557006836
    9. '1' → logprob: -16.349111557006836
    10. '  ' → logprob: -16.349111557006836

Token 700: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -9.875053405761719
    3. '-' → logprob: -13.375053405761719
    4. '
' → logprob: -15.375053405761719
    5. '   ' → logprob: -16.12505340576172
    6. '```' → logprob: -16.87505340576172
    7. ')' → logprob: -17.12505340576172
    8. '  ' → logprob: -18.62505340576172
    9. ' -' → logprob: -18.87505340576172
    10. ' ' → logprob: -19.00005340576172

Token 701: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '-' → logprob: -14.500000953674316
    4. '
' → logprob: -16.375001907348633
    5. '```' → logprob: -17.875001907348633
    6. ')' → logprob: -18.500001907348633
    7. '0' → logprob: -18.625001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '2' → logprob: -19.125001907348633
    10. '

' → logprob: -19.500001907348633

Token 702: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0486091673374176
    2. '))' → logprob: -3.0486092567443848
    3. ')
' → logprob: -11.048608779907227
    4. '       ' → logprob: -13.548608779907227
    5. '))
' → logprob: -13.673608779907227
    6. ' )' → logprob: -13.798608779907227
    7. ')}' → logprob: -14.423608779907227
    8. ')))' → logprob: -14.673608779907227
    9. ')`' → logprob: -15.298608779907227
    10. ')")' → logprob: -15.298608779907227

Token 703: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2918529510498047
    2. '       ' → logprob: -1.4168529510498047
    3. '        
' → logprob: -5.041852951049805
    4. '```' → logprob: -6.291852951049805
    5. '

' → logprob: -6.541852951049805
    6. '<|end|>' → logprob: -7.916852951049805
    7. '#' → logprob: -9.041852951049805
    8. '   ' → logprob: -9.791852951049805
    9. '  
' → logprob: -9.791852951049805
    10. '`
' → logprob: -9.916852951049805

Token 704: ' #' (ID: 1069)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.06383442133665085
    2. '       ' → logprob: -2.8138344287872314
    3. ' vertical' → logprob: -6.688834190368652
    4. 'pieces' → logprob: -7.813834190368652
    5. '#' (adapté à ' #') → logprob: -9.563834190368652
    6. 'horizontal' → logprob: -9.813834190368652
    7. '   ' → logprob: -10.063834190368652
    8. 'segments' → logprob: -10.813834190368652
    9. 'result' → logprob: -12.313834190368652
    10. 'vert' → logprob: -12.438834190368652

Token 705: ' Identify' (ID: 88495)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.0006491714157164097
    2. '#' → logprob: -7.8756489753723145
    3. ' vertical' → logprob: -8.750649452209473
    4. '       ' → logprob: -9.875649452209473
    5. 'Identify' → logprob: -10.750649452209473
    6. '   ' → logprob: -11.625649452209473
    7. 'horizontal' → logprob: -11.750649452209473
    8. 'pieces' → logprob: -12.250649452209473
    9. 'vert' → logprob: -12.375649452209473
    10. 'column' → logprob: -13.000649452209473

Token 706: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.12694323062896729
    2. ' vertical' → logprob: -2.1269431114196777
    3. '   ' → logprob: -11.626943588256836
    4. 'horizontal' → logprob: -12.501943588256836
    5. '       ' → logprob: -14.126943588256836
    6. '(vertical' → logprob: -15.001943588256836
    7. ' ' → logprob: -15.126943588256836
    8. 'self' → logprob: -15.376943588256836
    9. '_vertical' → logprob: -15.376943588256836
    10. '#' → logprob: -16.001943588256836

Token 707: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.038408078253269196
    2. 'segments' → logprob: -3.288408041000366
    3. ' segments' → logprob: -7.913408279418945
    4. 'Segments' → logprob: -14.913408279418945
    5. '_sections' → logprob: -15.663408279418945
    6. 's' → logprob: -16.663408279418945
    7. '_' → logprob: -17.163408279418945
    8. '_seg' → logprob: -17.413408279418945
    9. '
' → logprob: -17.413408279418945
    10. 'seg' → logprob: -17.913408279418945

Token 708: ' similarly' (ID: 60314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02968464605510235
    2. 'vertical' → logprob: -3.779684543609619
    3. '=[]
' → logprob: -6.154684543609619
    4. ' vertical' → logprob: -6.404684543609619
    5. ' =' → logprob: -6.904684543609619
    6. '=' → logprob: -7.279684543609619
    7. '[]
' → logprob: -8.154685020446777
    8. 'segments' → logprob: -8.404685020446777
    9. '(vertical' → logprob: -9.404685020446777
    10. '        
' → logprob: -9.529685020446777

Token 709: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017451176419854164
    2. 'vertical' → logprob: -4.142451286315918
    3. '
' → logprob: -7.017451286315918
    4. ' vertical' → logprob: -7.767451286315918
    5. '        
' → logprob: -10.017451286315918
    6. '   ' → logprob: -10.767451286315918
    7. '```' → logprob: -11.392451286315918
    8. '(vertical' → logprob: -11.767451286315918
    9. 'vert' → logprob: -12.892451286315918
    10. 'start' → logprob: -13.892451286315918

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0669984519481659
    2. 'vertical' → logprob: -2.8169984817504883
    3. ' vertical' → logprob: -5.316998481750488
    4. '
' → logprob: -9.816998481750488
    5. '   ' → logprob: -10.691998481750488
    6. '(vertical' → logprob: -11.191998481750488
    7. '        
' → logprob: -11.441998481750488
    8. 'vert' → logprob: -13.441998481750488
    9. '_vertical' → logprob: -13.816998481750488
    10. '```' → logprob: -13.816998481750488

Token 711: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' (adapté à ' vertical') → logprob: -0.0005681642796844244
    2. ' vertical' → logprob: -7.500568389892578
    3. '       ' → logprob: -11.125568389892578
    4. 'horizontal' → logprob: -15.250568389892578
    5. '   ' → logprob: -16.250568389892578
    6. '.vertical' → logprob: -17.500568389892578
    7. '(vertical' → logprob: -17.875568389892578
    8. 'vert' → logprob: -18.125568389892578
    9. '_vertical' → logprob: -18.125568389892578
    10. 'width' → logprob: -18.625568389892578

Token 712: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -9.610702363715973e-06
    2. 'segments' → logprob: -12.125009536743164
    3. '_s' → logprob: -13.125009536743164
    4. '_c' → logprob: -14.875009536743164
    5. '```' → logprob: -15.000009536743164
    6. '_' → logprob: -15.125009536743164
    7. 'Segments' → logprob: -15.250009536743164
    8. '_seg' → logprob: -15.375009536743164
    9. 's' → logprob: -15.625009536743164
    10. '_sections' → logprob: -16.125009536743164

Token 713: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759963393211365
    2. ' =' → logprob: -0.8259963393211365
    3. '=[]' → logprob: -9.825996398925781
    4. '=[]
' → logprob: -12.950996398925781
    5. '=[' → logprob: -15.825996398925781
    6. 's' → logprob: -15.950996398925781
    7. ':' → logprob: -16.70099639892578
    8. ' ' → logprob: -16.95099639892578
    9. '   ' → logprob: -17.20099639892578
    10. '=
' → logprob: -17.70099639892578

Token 714: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.004948631394654512
    2. '[]' → logprob: -6.004948616027832
    3. ' []
' → logprob: -6.004948616027832
    4. ' []' → logprob: -12.629948616027832
    5. '[]

' → logprob: -16.50494956970215
    6. ' []
' → logprob: -16.75494956970215
    7. '([])
' → logprob: -17.62994956970215
    8. '[])
' → logprob: -17.87994956970215
    9. '=[]
' → logprob: -18.00494956970215
    10. '[' → logprob: -18.25494956970215

Token 715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25204092264175415
    2. 'start' → logprob: -1.5020408630371094
    3. ' start' → logprob: -9.12704086303711
    4. '   ' → logprob: -12.87704086303711
    5. '[start' → logprob: -16.00204086303711
    6. '
' → logprob: -16.12704086303711
    7. '	start' → logprob: -16.12704086303711
    8. '      ' → logprob: -17.00204086303711
    9. '```' → logprob: -17.00204086303711
    10. '[' → logprob: -17.50204086303711

Token 716: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -3.643152740551159e-05
    2. ' start' → logprob: -10.250036239624023
    3. '       ' → logprob: -13.875036239624023
    4. '   ' → logprob: -18.875036239624023
    5. '```' → logprob: -21.250036239624023
    6. '
' → logprob: -22.000036239624023
    7. '	start' → logprob: -22.000036239624023
    8. '[start' → logprob: -22.875036239624023
    9. '           ' → logprob: -23.000036239624023
    10. 'Start' → logprob: -23.375036239624023

Token 717: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868710398674011
    2. '=' → logprob: -1.136871099472046
    3. ' ' → logprob: -18.261871337890625
    4. '0' → logprob: -19.011871337890625
    5. ' =
' → logprob: -19.636871337890625
    6. '＝' → logprob: -19.886871337890625
    7. ',' → logprob: -20.011871337890625
    8. '=
' → logprob: -20.136871337890625
    9. '   ' → logprob: -21.136871337890625
    10. '=}' → logprob: -21.511871337890625

Token 718: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -21.5000057220459
    4. '       ' → logprob: -21.6250057220459
    5. '۰' → logprob: -22.5000057220459
    6. '00' → logprob: -22.8750057220459
    7. '(' → logprob: -23.0000057220459
    8. '=' → logprob: -23.3750057220459
    9. '[' → logprob: -24.0000057220459
    10. 'def' → logprob: -24.6250057220459

Token 719: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.625001907348633
    4. '=' → logprob: -21.125001907348633
    5. '۰' → logprob: -21.250001907348633
    6. '(' → logprob: -21.375001907348633
    7. '00' → logprob: -22.062501907348633
    8. '```' → logprob: -22.125001907348633
    9. '1' → logprob: -22.500001907348633
    10. '[' → logprob: -22.625001907348633

Token 720: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0744316428899765
    2. 'for' → logprob: -2.8244316577911377
    3. ' for' → logprob: -5.074431419372559
    4. '
' → logprob: -5.449431419372559
    5. '<|end|>' → logprob: -6.449431419372559
    6. 'For' → logprob: -10.074431419372559
    7. '```' → logprob: -10.074431419372559
    8. '<|end|>' → logprob: -10.074431419372559
    9. '0' → logprob: -10.199431419372559
    10. '	for' → logprob: -10.699431419372559

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19561134278774261
    2. 'for' → logprob: -1.9456113576889038
    3. ' for' → logprob: -3.5706112384796143
    4. '
' → logprob: -5.070611476898193
    5. '<|end|>' → logprob: -8.820611000061035
    6. '```' → logprob: -9.445611000061035
    7. '	for' → logprob: -10.570611000061035
    8. '	' → logprob: -10.695611000061035
    9. '<|end|>' → logprob: -10.695611000061035
    10. '   ' → logprob: -11.070611000061035

Token 722: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007177923689596355
    2. ' for' → logprob: -7.250717639923096
    3. '       ' → logprob: -12.000718116760254
    4. '
' → logprob: -13.500718116760254
    5. '	for' → logprob: -15.125718116760254
    6. '   ' → logprob: -18.375717163085938
    7. '```' → logprob: -20.125717163085938
    8. '	' → logprob: -21.125717163085938
    9. '        ' → logprob: -21.125717163085938
    10. '           ' → logprob: -21.500717163085938

Token 723: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.039145100861787796
    2. ' i' → logprob: -3.289144992828369
    3. 'col' → logprob: -7.289144992828369
    4. ' col' → logprob: -7.789144992828369
    5. 'j' → logprob: -12.789145469665527
    6. '   ' → logprob: -13.539145469665527
    7. ' in' → logprob: -15.039145469665527
    8. ' j' → logprob: -15.039145469665527
    9. '_' → logprob: -15.539145469665527
    10. '```' → logprob: -15.539145469665527

Token 724: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03364858031272888
    2. 'in' → logprob: -3.4086484909057617
    3. 'n' → logprob: -14.283648490905762
    4. '   ' → logprob: -14.408648490905762
    5. ' ' → logprob: -14.533648490905762
    6. '       ' → logprob: -15.033648490905762
    7. '```' → logprob: -15.908648490905762
    8. 'j' → logprob: -16.033649444580078
    9. 'In' → logprob: -16.283649444580078
    10. 'i' → logprob: -16.533649444580078

Token 725: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052354102954268456
    2. ' range' → logprob: -5.255235195159912
    3. '(range' → logprob: -13.63023567199707
    4. 'in' → logprob: -14.63023567199707
    5. ' in' → logprob: -16.38023567199707
    6. 'self' → logprob: -18.88023567199707
    7. '
' → logprob: -19.38023567199707
    8. '.range' → logprob: -20.13023567199707
    9. '_range' → logprob: -20.50523567199707
    10. 'for' → logprob: -20.88023567199707

Token 726: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16972991824150085
    2. '(self' → logprob: -1.9197299480438232
    3. 'range' → logprob: -4.669729709625244
    4. ' self' → logprob: -10.044730186462402
    5. ' range' → logprob: -11.294730186462402
    6. '(' → logprob: -11.544730186462402
    7. '   ' → logprob: -12.169730186462402
    8. '       ' → logprob: -12.294730186462402
    9. '(range' → logprob: -12.544730186462402
    10. '1' → logprob: -13.169730186462402

Token 727: '.width' (ID: 11038)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.30712300539016724
    2. '.width' → logprob: -1.8071229457855225
    3. 'self' → logprob: -2.3071229457855225
    4. '       ' → logprob: -7.682123184204102
    5. '   ' → logprob: -8.807123184204102
    6. ' width' → logprob: -9.557123184204102
    7. '(width' → logprob: -10.182123184204102
    8. '(self' → logprob: -10.932123184204102
    9. '_width' → logprob: -11.682123184204102
    10. '           ' → logprob: -11.932123184204102

Token 728: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011070695705711842
    2. '-' → logprob: -4.511070728302002
    3. '   ' → logprob: -11.511070251464844
    4. ' ' → logprob: -11.761070251464844
    5. ')' → logprob: -12.886070251464844
    6. '):
' → logprob: -13.386070251464844
    7. '):' → logprob: -15.386070251464844
    8. '       ' → logprob: -15.886070251464844
    9. ':' → logprob: -16.386070251464844
    10. ' ' → logprob: -16.386070251464844

Token 729: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '-' → logprob: -15.00001049041748
    4. '   ' → logprob: -15.50001049041748
    5. '```' → logprob: -15.75001049041748
    6. '       ' → logprob: -18.937511444091797
    7. '(' → logprob: -19.125011444091797
    8. ')' → logprob: -19.250011444091797
    9. '  ' → logprob: -19.375011444091797
    10. '
' → logprob: -19.437511444091797

Token 730: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.750004768371582
    4. '-' → logprob: -15.875004768371582
    5. '```' → logprob: -16.0000057220459
    6. '
' → logprob: -17.6250057220459
    7. ')' → logprob: -18.6875057220459
    8. '  ' → logprob: -18.9375057220459
    9. '۱' → logprob: -19.5625057220459
    10. '...' → logprob: -19.6875057220459

Token 731: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005635689478367567
    2. ':
' → logprob: -5.880635738372803
    3. '):' → logprob: -6.255635738372803
    4. ':' → logprob: -7.380635738372803
    5. '():
' → logprob: -8.380635261535645
    6. '   ' → logprob: -10.755635261535645
    7. '):
' → logprob: -11.130635261535645
    8. '       ' → logprob: -11.880635261535645
    9. ']:
' → logprob: -12.505635261535645
    10. '):

' → logprob: -13.505635261535645

Token 732: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012414169497787952
    2. '   ' → logprob: -4.51241397857666
    3. '       ' → logprob: -6.88741397857666
    4. ' if' → logprob: -9.38741397857666
    5. '<|end|>' → logprob: -9.38741397857666
    6. '	       ' → logprob: -9.88741397857666
    7. 'if' → logprob: -10.13741397857666
    8. '	   ' → logprob: -10.26241397857666
    9. '<|end|>' → logprob: -10.63741397857666
    10. '```' → logprob: -12.38741397857666

Token 733: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39777010679244995
    2. '           ' → logprob: -1.3977701663970947
    3. ' if' → logprob: -2.5227701663970947
    4. '   ' → logprob: -7.397769927978516
    5. '       ' → logprob: -8.897769927978516
    6. '	if' → logprob: -11.272769927978516
    7. '               ' → logprob: -11.397769927978516
    8. '	       ' → logprob: -11.897769927978516
    9. ' ' → logprob: -12.272769927978516
    10. '```' → logprob: -12.647769927978516

Token 734: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859123006463051
    2. ' self' → logprob: -3.048591136932373
    3. '(self' → logprob: -13.298591613769531
    4. '           ' → logprob: -13.923591613769531
    5. '       ' → logprob: -14.923591613769531
    6. '   ' → logprob: -15.423591613769531
    7. '[self' → logprob: -15.548591613769531
    8. ' ' → logprob: -15.923591613769531
    9. '	self' → logprob: -16.42359161376953
    10. '```' → logprob: -16.79859161376953

Token 735: '.vertical' (ID: 104067)
  Prédit: '.vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vertical' → logprob: -0.03838616609573364
    2. 'vertical' → logprob: -3.288386106491089
    3. '.horizontal' → logprob: -8.038386344909668
    4. '_vertical' → logprob: -11.038386344909668
    5. 'horizontal' → logprob: -12.663386344909668
    6. ' vertical' → logprob: -13.288386344909668
    7. '.' → logprob: -14.163386344909668
    8. 'Vertical' → logprob: -17.28838539123535
    9. '(vertical' → logprob: -17.41338539123535
    10. ' вертик' → logprob: -17.53838539123535

Token 736: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.107425062713446e-06
    2. '_cut' → logprob: -12.125006675720215
    3. ' _' → logprob: -14.125006675720215
    4. '_segments' → logprob: -15.750006675720215
    5. '_' → logprob: -16.12500762939453
    6. '
' → logprob: -16.37500762939453
    7. 'cuts' → logprob: -16.62500762939453
    8. '```' → logprob: -16.62500762939453
    9. ')_' → logprob: -17.00000762939453
    10. '\' → logprob: -17.00000762939453

Token 737: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.0040433756075799465
    2. 'cuts' → logprob: -5.6290435791015625
    3. '_c' → logprob: -7.8790435791015625
    4. 'ut' → logprob: -11.254043579101562
    5. '```' → logprob: -11.754043579101562
    6. ' cuts' → logprob: -12.004043579101562
    7. '_' → logprob: -12.129043579101562
    8. 'Cuts' → logprob: -12.379043579101562
    9. '[' → logprob: -12.504043579101562
    10. '_cut' → logprob: -12.754043579101562

Token 738: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: 0.0
    2. '   ' → logprob: -17.375
    3. '[i' → logprob: -17.625
    4. 'j' → logprob: -17.625
    5. '[' → logprob: -18.0
    6. '```' → logprob: -18.125
    7. ' [' → logprob: -19.125
    8. '[
' → logprob: -19.25
    9. '[js' → logprob: -19.25
    10. '           ' → logprob: -20.25

Token 739: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0789753794670105
    2. ']:
' → logprob: -2.5789754390716553
    3. ':' → logprob: -10.328975677490234
    4. ']' → logprob: -10.828975677490234
    5. ']:
' → logprob: -11.453975677490234
    6. ']:

' → logprob: -11.578975677490234
    7. ']==' → logprob: -12.953975677490234
    8. '"]:' → logprob: -13.328975677490234
    9. '):' → logprob: -13.453975677490234
    10. ']>' → logprob: -13.703975677490234

Token 740: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014895245840307325
    2. '           ' → logprob: -9.62514877319336
    3. '   ' → logprob: -10.62514877319336
    4. '<|end|>' → logprob: -10.75014877319336
    5. 'vertical' → logprob: -11.25014877319336
    6. '       ' → logprob: -11.87514877319336
    7. '{
' → logprob: -12.37514877319336
    8. ' vertical' → logprob: -13.00014877319336
    9. '              ' → logprob: -13.25014877319336
    10. '(vertical' → logprob: -13.25014877319336

Token 741: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' (adapté à ' vertical') → logprob: -0.0789450854063034
    2. ' vertical' → logprob: -2.5789451599121094
    3. '           ' → logprob: -9.95394515991211
    4. '               ' → logprob: -12.32894515991211
    5. '(vertical' → logprob: -13.32894515991211
    6. '   ' → logprob: -13.95394515991211
    7. '_vertical' → logprob: -15.20394515991211
    8. '.vertical' → logprob: -15.32894515991211
    9. '                   ' → logprob: -15.32894515991211
    10. '       ' → logprob: -16.95394515991211

Token 742: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00013035668234806508
    2. 'segments' → logprob: -9.000130653381348
    3. '_tokens' → logprob: -12.750130653381348
    4. 'Segments' → logprob: -12.875130653381348
    5. '
' → logprob: -14.500130653381348
    6. '_s' → logprob: -15.750130653381348
    7. 's' → logprob: -15.750130653381348
    8. '.append' → logprob: -16.25012969970703
    9. '_' → logprob: -16.50012969970703
    10. '_sections' → logprob: -16.87512969970703

Token 743: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.988221684878226e-06
    2. 'append' → logprob: -12.375006675720215
    3. '.' → logprob: -12.875006675720215
    4. '.app' → logprob: -17.12500762939453
    5. 'app' → logprob: -18.00000762939453
    6. ' .' → logprob: -18.12500762939453
    7. '.Append' → logprob: -18.62500762939453
    8. '_append' → logprob: -18.62500762939453
    9. '           ' → logprob: -18.75000762939453
    10. 'Append' → logprob: -19.37500762939453

Token 744: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0021165965590626
    2. '(start' → logprob: -6.252116680145264
    3. '(' → logprob: -8.627116203308105
    4. '   ' → logprob: -12.252116203308105
    5. ' (' → logprob: -13.002116203308105
    6. ' ' → logprob: -14.877116203308105
    7. '  ' → logprob: -15.127116203308105
    8. '       ' → logprob: -15.377116203308105
    9. ' ((' → logprob: -15.377116203308105
    10. '           ' → logprob: -15.502116203308105

Token 745: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.9361264946837764e-07
    2. ' start' → logprob: -16.0
    3. '0' → logprob: -18.5
    4. '(start' → logprob: -19.625
    5. '[start' → logprob: -21.375
    6. '   ' → logprob: -22.125
    7. ' ' → logprob: -24.125
    8. '
' → logprob: -24.375
    9. '	start' → logprob: -24.375
    10. '       ' → logprob: -24.875

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ',j' → logprob: -12.625007629394531
    3. ' ,' → logprob: -12.875007629394531
    4. ',
' → logprob: -13.500007629394531
    5. '),' → logprob: -16.87500762939453
    6. 'j' → logprob: -17.00000762939453
    7. '‌,' → logprob: -17.25000762939453
    8. '           ' → logprob: -17.50000762939453
    9. '0' → logprob: -17.62500762939453
    10. '<|end|>' → logprob: -18.00000762939453

Token 747: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004896456957794726
    2. ' j' → logprob: -7.625489711761475
    3. '   ' → logprob: -13.750489234924316
    4. '    ' → logprob: -15.500489234924316
    5. '	j' → logprob: -15.750489234924316
    6. ' ' → logprob: -16.000490188598633
    7. '  ' → logprob: -16.250490188598633
    8. '     ' → logprob: -17.250490188598633
    9. '       ' → logprob: -17.250490188598633
    10. '           ' → logprob: -17.500490188598633

Token 748: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1760653853416443
    2. ')
' → logprob: -1.926065444946289
    3. '))' → logprob: -4.301065444946289
    4. '))
' → logprob: -6.176065444946289
    5. '               ' → logprob: -9.801065444946289
    6. '+' → logprob: -11.676065444946289
    7. ')

' → logprob: -11.801065444946289
    8. '       ' → logprob: -13.051065444946289
    9. ' )' → logprob: -13.176065444946289
    10. '           ' → logprob: -13.551065444946289

Token 749: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002889871597290039
    2. '       ' → logprob: -5.877889633178711
    3. '
' → logprob: -10.502889633178711
    4. '```' → logprob: -10.877889633178711
    5. '           ' → logprob: -11.377889633178711
    6. '<|end|>' → logprob: -11.752889633178711
    7. '              ' → logprob: -12.252889633178711
    8. '   ' → logprob: -12.752889633178711
    9. '[' → logprob: -13.127889633178711
    10. '		       ' → logprob: -13.377889633178711

Token 750: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6932045221328735
    2. 'start' (adapté à ' start') → logprob: -0.6932045221328735
    3. '               ' → logprob: -10.068204879760742
    4. '                   ' → logprob: -12.943204879760742
    5. '   ' → logprob: -13.193204879760742
    6. '                ' → logprob: -13.193204879760742
    7. '           ' → logprob: -13.318204879760742
    8. ' ' → logprob: -13.568204879760742
    9. '	start' → logprob: -13.693204879760742
    10. '    ' → logprob: -13.818204879760742

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -15.768150329589844
    4. '=j' → logprob: -17.768150329589844
    5. ' ' → logprob: -17.893150329589844
    6. ' =
' → logprob: -18.768150329589844
    7. 'j' → logprob: -18.893150329589844
    8. '```' → logprob: -19.393150329589844
    9. '<|end|>' → logprob: -19.643150329589844
    10. '   ' → logprob: -19.768150329589844

Token 752: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011049231514334679
    2. ' j' → logprob: -4.511049270629883
    3. '   ' → logprob: -14.136049270629883
    4. '	j' → logprob: -14.386049270629883
    5. ' ' → logprob: -16.761049270629883
    6. '    ' → logprob: -17.886049270629883
    7. '$j' → logprob: -17.886049270629883
    8. '  ' → logprob: -18.136049270629883
    9. '[j' → logprob: -18.136049270629883
    10. '       ' → logprob: -18.136049270629883

Token 753: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519422471523285
    2. '+' → logprob: -1.5019422769546509
    3. ' ' → logprob: -11.37694263458252
    4. ' plus' → logprob: -14.62694263458252
    5. '1' → logprob: -15.00194263458252
    6. '0' → logprob: -15.75194263458252
    7. '+j' → logprob: -16.376941680908203
    8. 'j' → logprob: -16.501941680908203
    9. '<|end|>' → logprob: -16.626941680908203
    10. '```' → logprob: -16.876941680908203

Token 754: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2895529270172119
    2. '1' → logprob: -1.414552927017212
    3. ' j' → logprob: -4.914552688598633
    4. ' ' → logprob: -7.164552688598633
    5. '+' → logprob: -8.914552688598633
    6. ' col' → logprob: -9.789552688598633
    7. 'col' → logprob: -9.914552688598633
    8. '   ' → logprob: -12.039552688598633
    9. 'k' → logprob: -13.539552688598633
    10. ' +' → logprob: -13.664552688598633

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03809404745697975
    2. 'j' → logprob: -3.2880940437316895
    3. ' ' → logprob: -10.788094520568848
    4. '+' → logprob: -11.038094520568848
    5. ' j' → logprob: -11.913094520568848
    6. '   ' → logprob: -12.288094520568848
    7. 'col' → logprob: -14.038094520568848
    8. '0' → logprob: -14.163094520568848
    9. '```' → logprob: -14.538094520568848
    10. '`' → logprob: -14.663094520568848

Token 756: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.749814019713085e-06
    2. '	' → logprob: -13.000006675720215
    3. '<|end|>' → logprob: -13.625006675720215
    4. '      ' → logprob: -13.875006675720215
    5. '   ' → logprob: -14.250006675720215
    6. 'vertical' → logprob: -15.250006675720215
    7. '
' → logprob: -15.375006675720215
    8. ')' → logprob: -15.625006675720215
    9. '	   ' → logprob: -16.00000762939453
    10. '[' → logprob: -16.12500762939453

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020652047533076257
    2. 'vertical' → logprob: -8.75020694732666
    3. '	' → logprob: -10.75020694732666
    4. '   ' → logprob: -11.25020694732666
    5. ' vertical' → logprob: -11.62520694732666
    6. '      ' → logprob: -13.50020694732666
    7. '	   ' → logprob: -14.25020694732666
    8. '           ' → logprob: -14.37520694732666
    9. '[' → logprob: -14.87520694732666
    10. '(vertical' → logprob: -15.37520694732666

Token 758: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' (adapté à ' vertical') → logprob: -0.005465928930789232
    2. ' vertical' → logprob: -5.255465984344482
    3. '       ' → logprob: -8.380465507507324
    4. '.vertical' → logprob: -14.005465507507324
    5. '(vertical' → logprob: -14.130465507507324
    6. '   ' → logprob: -14.255465507507324
    7. 'horizontal' → logprob: -14.755465507507324
    8. ' ' → logprob: -17.00546646118164
    9. '[' → logprob: -17.13046646118164
    10. '_vertical' → logprob: -17.38046646118164

Token 759: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.2948405128554441e-05
    2. 'segments' → logprob: -11.37501335144043
    3. '_tokens' → logprob: -14.25001335144043
    4. '_s' → logprob: -14.87501335144043
    5. 'Segments' → logprob: -14.87501335144043
    6. 's' → logprob: -17.87501335144043
    7. '_' → logprob: -18.25001335144043
    8. '_segment' → logprob: -18.25001335144043
    9. '_sequences' → logprob: -18.50001335144043
    10. '_sections' → logprob: -18.50001335144043

Token 760: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1994775377388578e-05
    2. '.' → logprob: -11.625012397766113
    3. '.app' → logprob: -13.000012397766113
    4. ').' → logprob: -15.500012397766113
    5. ' .' → logprob: -15.500012397766113
    6. 'append' → logprob: -15.875012397766113
    7. '.ap' → logprob: -16.000011444091797
    8. '.Append' → logprob: -17.625011444091797
    9. 'app' → logprob: -18.125011444091797
    10. '.add' → logprob: -18.125011444091797

Token 761: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.018524831160902977
    2. '(start' → logprob: -4.018524646759033
    3. '(' → logprob: -7.893524646759033
    4. ' (' → logprob: -13.643525123596191
    5. '(
' → logprob: -14.768525123596191
    6. '([' → logprob: -17.018524169921875
    7. '(Start' → logprob: -17.893524169921875
    8. ' ' → logprob: -18.018524169921875
    9. ' ((' → logprob: -18.018524169921875
    10. '(end' → logprob: -18.143524169921875

Token 762: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.128163257315464e-07
    2. ' start' → logprob: -15.5
    3. '(start' → logprob: -17.375
    4. '[start' → logprob: -20.75
    5. '   ' → logprob: -21.5
    6. '	start' → logprob: -22.875
    7. '0' → logprob: -24.25
    8. ' ' → logprob: -24.875
    9. '
' → logprob: -25.125
    10. '  ' → logprob: -25.25

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5597102396423e-05
    2. ' ,' → logprob: -10.500035285949707
    3. ',
' → logprob: -11.875035285949707
    4. ',self' → logprob: -14.250035285949707
    5. 'self' → logprob: -15.250035285949707
    6. '),' → logprob: -17.000036239624023
    7. ',

' → logprob: -17.500036239624023
    8. '',' → logprob: -17.625036239624023
    9. '`,' → logprob: -17.625036239624023
    10. '(' → logprob: -18.000036239624023

Token 764: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163747429847717
    2. ' self' → logprob: -4.264163970947266
    3. '   ' → logprob: -16.014163970947266
    4. '(self' → logprob: -16.139163970947266
    5. '       ' → logprob: -17.264163970947266
    6. '
' → logprob: -17.764163970947266
    7. ' ' → logprob: -17.764163970947266
    8. '	self' → logprob: -17.889163970947266
    9. '           ' → logprob: -18.514163970947266
    10. '    ' → logprob: -18.514163970947266

Token 765: '.width' (ID: 11038)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.004298607353121042
    2. ' width' → logprob: -6.129298686981201
    3. '.width' → logprob: -6.379298686981201
    4. 'self' → logprob: -7.879298686981201
    5. '       ' → logprob: -11.629298210144043
    6. '   ' → logprob: -11.754298210144043
    7. '
' → logprob: -11.879298210144043
    8. '_width' → logprob: -13.004298210144043
    9. '	width' → logprob: -13.254298210144043
    10. ',' → logprob: -13.379298210144043

Token 766: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.061969030648469925
    2. '-' → logprob: -2.811969041824341
    3. ' ' → logprob: -13.936968803405762
    4. ')' → logprob: -15.186968803405762
    5. '[' → logprob: -16.936969757080078
    6. '   ' → logprob: -17.186969757080078
    7. '1' → logprob: -17.436969757080078
    8. '−' → logprob: -17.811969757080078
    9. ' ' → logprob: -18.186969757080078
    10. '–' → logprob: -18.561969757080078

Token 767: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021125076338648796
    2. '-' → logprob: -4.396124839782715
    3. ' ' → logprob: -4.771124839782715
    4. ' -' → logprob: -9.146124839782715
    5. ')' → logprob: -14.896124839782715
    6. '   ' → logprob: -15.271124839782715
    7. '7' → logprob: -16.02112579345703
    8. '0' → logprob: -16.77112579345703
    9. '```' → logprob: -17.27112579345703
    10. '`' → logprob: -17.39612579345703

Token 768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015158153837546706
    2. '-' → logprob: -6.501515865325928
    3. ' ' → logprob: -11.25151538848877
    4. ' -' → logprob: -14.87651538848877
    5. '   ' → logprob: -16.001516342163086
    6. ')' → logprob: -17.001516342163086
    7. '```' → logprob: -17.251516342163086
    8. '
' → logprob: -18.251516342163086
    9. 'width' → logprob: -18.876516342163086
    10. 'minus' → logprob: -19.501516342163086

Token 769: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ')
' → logprob: -11.875007629394531
    3. '))' → logprob: -15.875007629394531
    4. ' )' → logprob: -16.12500762939453
    5. '       ' → logprob: -16.50000762939453
    6. ')

' → logprob: -16.75000762939453
    7. '<|end|>' → logprob: -17.12500762939453
    8. ')return' → logprob: -17.25000762939453
    9. ')`' → logprob: -17.37500762939453
    10. ')}' → logprob: -17.62500762939453

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05851900577545166
    2. '
' → logprob: -3.058518886566162
    3. 'result' → logprob: -6.058518886566162
    4. 'pieces' → logprob: -6.183518886566162
    5. '```' → logprob: -6.433518886566162
    6. '        
' → logprob: -6.683518886566162
    7. 'count' → logprob: -6.808518886566162
    8. 'total' → logprob: -7.808518886566162
    9. 'return' → logprob: -8.05851936340332
    10. ' pieces' → logprob: -8.05851936340332

Token 771: ' #' (ID: 1069)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -1.0299344062805176
    2. 'total' → logprob: -1.5299344062805176
    3. 'count' → logprob: -2.1549344062805176
    4. '       ' → logprob: -2.1549344062805176
    5. 'result' → logprob: -2.5299344062805176
    6. 'return' → logprob: -2.6549344062805176
    7. 'num' → logprob: -3.2799344062805176
    8. 'piece' → logprob: -5.154934406280518
    9. 'segments' → logprob: -7.779934406280518
    10. 'counts' → logprob: -9.02993392944336

Token 772: ' Count' (ID: 6789)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.4349540174007416
    2. 'count' → logprob: -1.434954047203064
    3. 'total' → logprob: -2.9349539279937744
    4. 'piece' → logprob: -3.3099539279937744
    5. 'num' → logprob: -4.9349541664123535
    6. 'result' → logprob: -5.0599541664123535
    7. '#' → logprob: -5.1849541664123535
    8. '   ' → logprob: -6.0599541664123535
    9. '       ' → logprob: -6.5599541664123535
    10. ' pieces' → logprob: -8.059953689575195

Token 773: ' pieces' (ID: 12762)
  Prédit: 'pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pieces' → logprob: -0.07022562623023987
    2. ' pieces' → logprob: -3.195225715637207
    3. 'count' → logprob: -4.195225715637207
    4. '       ' → logprob: -4.695225715637207
    5. 'result' → logprob: -6.820225715637207
    6. 'total' → logprob: -7.195225715637207
    7. ' count' → logprob: -7.945225715637207
    8. 'piece' → logprob: -8.820225715637207
    9. 'num' → logprob: -8.945225715637207
    10. ' total' → logprob: -9.445225715637207

Token 774: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4503479301929474
    2. 'count' → logprob: -1.950347900390625
    3. 'pieces' → logprob: -1.950347900390625
    4. 'return' → logprob: -2.700347900390625
    5. 'result' → logprob: -5.325347900390625
    6. ' pieces' → logprob: -6.450347900390625
    7. '        
' → logprob: -6.575347900390625
    8. 'total' → logprob: -6.575347900390625
    9. '
' → logprob: -7.700347900390625
    10. 'piece' → logprob: -7.950347900390625

Token 775: ' number' (ID: 2086)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008778243325650692
    2. ' len' → logprob: -4.758778095245361
    3. '(len' → logprob: -8.75877857208252
    4. '       ' → logprob: -12.75877857208252
    5. '           ' → logprob: -12.75877857208252
    6. '	len' → logprob: -15.75877857208252
    7. ' (' → logprob: -15.88377857208252
    8. '   ' → logprob: -16.133777618408203
    9. 'return' → logprob: -16.258777618408203
    10. '
' → logprob: -16.258777618408203

Token 776: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.010392668657004833
    2. ' of' → logprob: -5.510392665863037
    3. '       ' → logprob: -5.635392665863037
    4. '=' → logprob: -6.760392665863037
    5. ' =' → logprob: -7.135392665863037
    6. '_of' → logprob: -7.760392665863037
    7. 'horizontal' → logprob: -9.260393142700195
    8. '(len' → logprob: -9.510393142700195
    9. '(horizontal' → logprob: -10.260393142700195
    10. '   ' → logprob: -10.510393142700195

Token 777: ' rectangle' (ID: 45808)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.14704762399196625
    2. ' horizontal' → logprob: -2.397047519683838
    3. '(horizontal' → logprob: -3.147047519683838
    4. 'pieces' → logprob: -6.272047519683838
    5. ' (' → logprob: -8.397047996520996
    6. ' pieces' → logprob: -8.397047996520996
    7. 'vertical' → logprob: -9.272047996520996
    8. '(' → logprob: -9.522047996520996
    9. '(h' → logprob: -10.022047996520996
    10. '_horizontal' → logprob: -10.022047996520996

Token 778: ' blocks' (ID: 18125)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0030554274562746286
    2. '       ' → logprob: -6.378055572509766
    3. ' pieces' → logprob: -7.878055572509766
    4. 'pieces' → logprob: -7.878055572509766
    5. 'segments' → logprob: -8.628055572509766
    6. '   ' → logprob: -9.503055572509766
    7. '
' → logprob: -9.753055572509766
    8. ' s' → logprob: -10.128055572509766
    9. 'horizontal' → logprob: -10.128055572509766
    10. ' segments' → logprob: -10.378055572509766

Token 779: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2138654887676239
    2. 'return' → logprob: -1.8388655185699463
    3. ' return' → logprob: -3.7138655185699463
    4. '        
' → logprob: -5.213865280151367
    5. ' =' → logprob: -6.338865280151367
    6. 'result' → logprob: -7.713865280151367
    7. 'count' → logprob: -7.713865280151367
    8. '
' → logprob: -7.963865280151367
    9. '=' → logprob: -9.463865280151367
    10. ' *' → logprob: -9.588865280151367

Token 780: 'horizontal' (ID: 62473)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03164630010724068
    2. ' len' → logprob: -3.531646251678467
    3. '(len' → logprob: -6.406646251678467
    4. ')' → logprob: -8.781646728515625
    5. '=len' → logprob: -10.281646728515625
    6. 'return' → logprob: -11.031646728515625
    7. '
' → logprob: -11.406646728515625
    8. '       ' → logprob: -11.656646728515625
    9. '           ' → logprob: -12.031646728515625
    10. '[len' → logprob: -12.406646728515625

Token 781: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.000859531108289957
    2. '_' → logprob: -7.37585973739624
    3. '_p' → logprob: -9.625859260559082
    4. 'segments' → logprob: -9.750859260559082
    5. ' _' → logprob: -10.000859260559082
    6. '_ranges' → logprob: -11.750859260559082
    7. '_inter' → logprob: -12.000859260559082
    8. '_s' → logprob: -12.250859260559082
    9. '```' → logprob: -12.250859260559082
    10. '
' → logprob: -12.375859260559082

Token 782: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.42763233184814453
    2. ' *' → logprob: -1.1776323318481445
    3. ')' → logprob: -3.3026323318481445
    4. '   ' → logprob: -6.9276323318481445
    5. '       ' → logprob: -7.1776323318481445
    6. ',' → logprob: -7.8026323318481445
    7. '```' → logprob: -8.302632331848145
    8. ')*' → logprob: -8.552632331848145
    9. ' multiplied' → logprob: -9.302632331848145
    10. '[' → logprob: -9.427632331848145

Token 783: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.4754275381565094
    2. ' vertical' → logprob: -0.975427508354187
    3. 'len' → logprob: -6.850427627563477
    4. ' len' → logprob: -8.225427627563477
    5. '(vertical' → logprob: -11.350427627563477
    6. ' ' → logprob: -12.350427627563477
    7. '   ' → logprob: -12.475427627563477
    8. '
' → logprob: -14.225427627563477
    9. '(len' → logprob: -14.475427627563477
    10. '       ' → logprob: -15.350427627563477

Token 784: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00010318557906430215
    2. '_' → logprob: -9.625102996826172
    3. ' _' → logprob: -11.250102996826172
    4. 'segments' → logprob: -11.375102996826172
    5. '```' → logprob: -12.250102996826172
    6. '_p' → logprob: -12.875102996826172
    7. ')_' → logprob: -14.000102996826172
    8. '_sections' → logprob: -14.375102996826172
    9. ''_' → logprob: -14.500102996826172
    10. '_blocks' → logprob: -15.000102996826172

Token 785: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08649808168411255
    2. ')' → logprob: -3.2114980220794678
    3. '<|end|>' → logprob: -3.7114980220794678
    4. '
' → logprob: -4.836498260498047
    5. '        
' → logprob: -5.836498260498047
    6. '*' → logprob: -6.336498260498047
    7. ' +' → logprob: -7.211498260498047
    8. '+' → logprob: -7.336498260498047
    9. '```' → logprob: -7.336498260498047
    10. ')
' → logprob: -7.461498260498047

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13910254836082458
    2. '
' → logprob: -2.1391024589538574
    3. 'return' → logprob: -4.514102458953857
    4. ' return' → logprob: -7.264102458953857
    5. '        
' → logprob: -8.139102935791016
    6. '```' → logprob: -9.639102935791016
    7. '  
' → logprob: -10.264102935791016
    8. '    
' → logprob: -11.514102935791016
    9. '   ' → logprob: -11.639102935791016
    10. '	return' → logprob: -12.639102935791016

Token 787: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01830773800611496
    2. '       ' → logprob: -4.018307685852051
    3. ' return' → logprob: -8.76830768585205
    4. '```' → logprob: -13.51830768585205
    5. '
' → logprob: -15.14330768585205
    6. 'pieces' → logprob: -15.76830768585205
    7. 'result' → logprob: -16.018308639526367
    8. '   ' → logprob: -16.268308639526367
    9. '        
' → logprob: -16.393308639526367
    10. '	return' → logprob: -16.518308639526367

Token 788: ' But' (ID: 3072)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022003119811415672
    2. '       ' → logprob: -4.522003173828125
    3. ' return' → logprob: -4.522003173828125
    4. 'pieces' → logprob: -11.647003173828125
    5. 'count' → logprob: -11.897003173828125
    6. 'result' → logprob: -12.522003173828125
    7. '
' → logprob: -12.647003173828125
    8. 'num' → logprob: -12.897003173828125
    9. '```' → logprob: -13.647003173828125
    10. ' pieces' → logprob: -13.897003173828125

Token 789: ' pieces' (ID: 12762)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.802802324295044
    2. '       ' → logprob: -1.177802324295044
    3. 'for' → logprob: -2.802802324295044
    4. ' if' → logprob: -3.177802324295044
    5. '#' → logprob: -3.302802324295044
    6. ' #' → logprob: -3.552802324295044
    7. ' only' → logprob: -3.927802324295044
    8. ' pieces' → logprob: -4.427802085876465
    9. ' result' → logprob: -4.927802085876465
    10. ' return' → logprob: -4.927802085876465

Token 790: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5237058997154236
    2. '=' → logprob: -1.2737059593200684
    3. '_count' → logprob: -2.7737059593200684
    4. 'may' → logprob: -4.898705959320068
    5. ' may' → logprob: -5.273705959320068
    6. 'with' → logprob: -5.273705959320068
    7. 'can' → logprob: -5.273705959320068
    8. 'are' → logprob: -5.273705959320068
    9. ' can' → logprob: -5.398705959320068
    10. '_are' → logprob: -5.523705959320068

Token 791: ' actually' (ID: 4771)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.4136406183242798
    2. ' not' → logprob: -1.4136406183242798
    3. ' only' → logprob: -1.9136406183242798
    4. 'only' → logprob: -2.6636404991149902
    5. 'not' → logprob: -2.7886404991149902
    6. 'contain' → logprob: -2.9136404991149902
    7. ' contain' → logprob: -3.2886404991149902
    8. 'be' → logprob: -3.2886404991149902
    9. ' all' → logprob: -3.6636404991149902
    10. 'all' → logprob: -4.28864049911499

Token 792: ' contain' (ID: 10232)
  Prédit: 'contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contain' → logprob: -0.36126843094825745
    2. ' contain' → logprob: -1.361268401145935
    3. ' be' → logprob: -4.111268520355225
    4. 'have' → logprob: -4.361268520355225
    5. ' have' → logprob: -5.236268520355225
    6. 'be' → logprob: -5.361268520355225
    7. ' consist' → logprob: -6.611268520355225
    8. ' correspond' → logprob: -6.736268520355225
    9. ' not' → logprob: -6.986268520355225
    10. 'cons' → logprob: -7.361268520355225

Token 793: ' chocolate' (ID: 20162)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7266470193862915
    2. 'at' → logprob: -1.4766470193862915
    3. 'ch' → logprob: -1.8516470193862915
    4. ' chocolate' → logprob: -2.601646900177002
    5. ''#' → logprob: -3.976646900177002
    6. 'a' → logprob: -4.851646900177002
    7. 'any' → logprob: -4.851646900177002
    8. '#' → logprob: -4.976646900177002
    9. 'some' → logprob: -5.226646900177002
    10. ' '#'' → logprob: -5.351646900177002

Token 794: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23860576748847961
    2. 'count' → logprob: -2.4886057376861572
    3. 'pieces' → logprob: -2.7386057376861572
    4. '
' → logprob: -3.2386057376861572
    5. ' pieces' → logprob: -4.238605976104736
    6. '        
' → logprob: -5.363605976104736
    7. ' count' → logprob: -6.363605976104736
    8. 'result' → logprob: -6.488605976104736
    9. 'total' → logprob: -6.988605976104736
    10. 'piece' → logprob: -8.113605499267578

Token 795: 'some' (ID: 25231)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.190252423286438
    2. ' for' → logprob: -1.690252423286438
    3. ' at' → logprob: -1.690252423286438
    4. '       ' → logprob: -2.0652523040771484
    5. ')' → logprob: -2.3152523040771484
    6. ')
' → logprob: -2.6902523040771484
    7. ' any' → logprob: -4.690252304077148
    8. '#' → logprob: -4.940252304077148
    9. '
' → logprob: -5.190252304077148
    10. 'def' → logprob: -6.315252304077148

Token 796: ' rectangles' (ID: 164265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7123273611068726
    2. ' piece' → logprob: -2.337327480316162
    3. 'times' → logprob: -2.587327480316162
    4. '#' → logprob: -2.587327480316162
    5. ' times' → logprob: -2.587327480316162
    6. ' #' → logprob: -2.712327480316162
    7. ' for' → logprob: -3.087327480316162
    8. 'where' → logprob: -3.212327480316162
    9. 'one' → logprob: -3.462327480316162
    10. ')' → logprob: -3.712327480316162

Token 797: ' may' (ID: 1340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3108348846435547
    2. ' with' → logprob: -1.5608348846435547
    3. ' must' → logprob: -1.8108348846435547
    4. ' contain' → logprob: -2.3108348846435547
    5. ' containing' → logprob: -2.6858348846435547
    6. 'with' → logprob: -3.0608348846435547
    7. ' that' → logprob: -3.1858348846435547
    8. '       ' → logprob: -3.3108348846435547
    9. 'must' → logprob: -4.185834884643555
    10. '           ' → logprob: -4.810834884643555

Token 798: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.20574118196964264
    2. 'be' → logprob: -2.8307411670684814
    3. ' not' → logprob: -2.9557411670684814
    4. ' contain' → logprob: -3.0807411670684814
    5. 'not' → logprob: -4.5807414054870605
    6. 'contain' → logprob: -4.7057414054870605
    7. ' have' → logprob: -5.3307414054870605
    8. 'have' → logprob: -6.4557414054870605
    9. '
' → logprob: -6.5807414054870605
    10. '```' → logprob: -7.9557414054870605

Token 799: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.03903482109308243
    2. ' empty' → logprob: -3.289034843444824
    3. '   ' → logprob: -7.414034843444824
    4. '```' → logprob: -9.039034843444824
    5. 'all' → logprob: -9.289034843444824
    6. ')' → logprob: -10.164034843444824
    7. 'com' → logprob: -10.164034843444824
    8. 'ent' → logprob: -11.414034843444824
    9. 'blank' → logprob: -11.539034843444824
    10. ' all' → logprob: -11.664034843444824

Token 800: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5259298086166382
    2. '       ' → logprob: -1.0259298086166382
    3. ')' → logprob: -3.0259299278259277
    4. ' )
' → logprob: -7.650929927825928
    5. '   ' → logprob: -7.775929927825928
    6. '           ' → logprob: -8.77592945098877
    7. '
' → logprob: -8.90092945098877
    8. ',' → logprob: -9.02592945098877
    9. ')

' → logprob: -9.15092945098877
    10. ' if' → logprob: -9.27592945098877

Token 801: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0809924304485321
    2. '
' → logprob: -2.5809924602508545
    3. '        
' → logprob: -6.455992221832275
    4. 'count' → logprob: -8.580992698669434
    5. '```' → logprob: -9.080992698669434
    6. 'result' → logprob: -9.580992698669434
    7. 'pieces' → logprob: -9.955992698669434
    8. ' pieces' → logprob: -10.455992698669434
    9. '    
' → logprob: -11.205992698669434
    10. '``' → logprob: -11.705992698669434

Token 802: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2832217514514923
    2. 'pieces' → logprob: -1.78322172164917
    3. 'count' (adapté à ' count') → logprob: -3.28322172164917
    4. ' pieces' → logprob: -3.78322172164917
    5. '
' → logprob: -4.78322172164917
    6. '        
' → logprob: -5.78322172164917
    7. ' count' → logprob: -6.03322172164917
    8. 'result' → logprob: -6.15822172164917
    9. 'total' → logprob: -7.28322172164917
    10. 'piece' → logprob: -7.53322172164917

Token 803: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197899952530861
    2. '=' → logprob: -2.811979055404663
    3. '_' → logprob: -11.686979293823242
    4. ' ' → logprob: -13.561979293823242
    5. ' =
' → logprob: -14.561979293823242
    6. 's' → logprob: -14.936979293823242
    7. ' +=' → logprob: -15.311979293823242
    8. ',' → logprob: -15.561979293823242
    9. '	' → logprob: -15.936979293823242
    10. '_=' → logprob: -15.936979293823242

Token 804: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.014163970947266
    4. '   ' → logprob: -18.139163970947266
    5. '       ' → logprob: -19.889163970947266
    6. '۰' → logprob: -20.889163970947266
    7. '  ' → logprob: -21.139163970947266
    8. '```' → logprob: -21.264163970947266
    9. '00' → logprob: -21.701663970947266
    10. '2' → logprob: -21.701663970947266

Token 805: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. 'len' → logprob: -15.875008583068848
    4. '   ' → logprob: -16.50000762939453
    5. '```' → logprob: -18.62500762939453
    6. 'sum' → logprob: -18.75000762939453
    7. '       ' → logprob: -19.25000762939453
    8. '=' → logprob: -19.31250762939453
    9. '000' → logprob: -19.81250762939453
    10. '۰' → logprob: -19.87500762939453

Token 806: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35112547874450684
    2. '
' → logprob: -1.2261254787445068
    3. '        
' → logprob: -6.351125717163086
    4. ' for' → logprob: -7.851125717163086
    5. 'for' → logprob: -8.226125717163086
    6. '  
' → logprob: -9.476125717163086
    7. ' 
' → logprob: -9.726125717163086
    8. '    
' → logprob: -9.851125717163086
    9. '   ' → logprob: -10.851125717163086
    10. '
' → logprob: -10.976125717163086

Token 807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43154376745224
    2. '
' → logprob: -1.0565438270568848
    3. '        
' → logprob: -6.306543827056885
    4. 'for' → logprob: -7.931543827056885
    5. '
' → logprob: -8.806543350219727
    6. ' for' → logprob: -8.806543350219727
    7. '    
' → logprob: -8.931543350219727
    8. '  
' → logprob: -9.556543350219727
    9. ' 
' → logprob: -10.056543350219727
    10. '' → logprob: -10.556543350219727

Token 808: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.934207022190094
    2. 'for' (adapté à ' for') → logprob: -0.934207022190094
    3. '       ' → logprob: -1.6842069625854492
    4. '
' → logprob: -3.559206962585449
    5. '	for' → logprob: -9.80920696258545
    6. '        
' → logprob: -10.18420696258545
    7. '   ' → logprob: -10.68420696258545
    8. ' 
' → logprob: -11.30920696258545
    9. '```' → logprob: -11.93420696258545
    10. '	' → logprob: -12.18420696258545

Token 809: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10771309584379196
    2. '(h' → logprob: -2.732712984085083
    3. 'hs' → logprob: -3.357712984085083
    4. 'hor' → logprob: -7.232713222503662
    5. ' h' → logprob: -7.482713222503662
    6. 'hr' → logprob: -7.982713222503662
    7. '(' → logprob: -8.482712745666504
    8. ' (' → logprob: -9.107712745666504
    9. '(hr' → logprob: -9.232712745666504
    10. ' hs' → logprob: -9.982712745666504

Token 810: '_start' (ID: 10949)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.3179057538509369
    2. '_seg' → logprob: -1.3179057836532593
    3. 'seg' → logprob: -6.317905902862549
    4. ' in' → logprob: -6.567905902862549
    5. '_segments' → logprob: -7.067905902862549
    6. 'segment' → logprob: -8.56790542602539
    7. '_range' → logprob: -8.94290542602539
    8. '_start' → logprob: -9.56790542602539
    9. '_' → logprob: -10.19290542602539
    10. 'in' → logprob: -10.56790542602539

Token 811: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06646429002285004
    2. 'in' → logprob: -3.3164641857147217
    3. ' in' → logprob: -3.6914641857147217
    4. ' ,' → logprob: -6.441464424133301
    5. ',in' → logprob: -7.191464424133301
    6. ',
' → logprob: -7.941464424133301
    7. ',h' → logprob: -8.3164644241333
    8. ')' → logprob: -10.5664644241333
    9. '       ' → logprob: -10.6914644241333
    10. '           ' → logprob: -11.1914644241333

Token 812: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.008614808320999146
    2. ' h' → logprob: -4.758615016937256
    3. '	h' → logprob: -16.133615493774414
    4. '   ' → logprob: -16.758615493774414
    5. ' ' → logprob: -17.758615493774414
    6. '    ' → logprob: -17.758615493774414
    7. '_h' → logprob: -18.008615493774414
    8. '        ' → logprob: -18.883615493774414
    9. '       ' → logprob: -19.008615493774414
    10. '           ' → logprob: -19.258615493774414

Token 813: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.47985246777534485
    2. '_start' → logprob: -0.9798524379730225
    3. ',' → logprob: -5.854852676391602
    4. '_stop' → logprob: -6.479852676391602
    5. '_,' → logprob: -8.104852676391602
    6. '_' → logprob: -8.104852676391602
    7. ',_' → logprob: -8.354852676391602
    8. ' _' → logprob: -9.479852676391602
    9. 'end' → logprob: -9.729852676391602
    10. '_add' → logprob: -10.104852676391602

Token 814: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031763747334480286
    2. ',' → logprob: -3.781763792037964
    3. 'in' → logprob: -4.781763553619385
    4. ':
' → logprob: -10.031764030456543
    5. ' ,' → logprob: -11.031764030456543
    6. ',
' → logprob: -11.781764030456543
    7. '   ' → logprob: -11.781764030456543
    8. ')' → logprob: -12.281764030456543
    9. '<|end|>' → logprob: -12.281764030456543
    10. '	in' → logprob: -12.906764030456543

Token 815: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.061988864094018936
    2. ' horizontal' → logprob: -2.8119888305664062
    3. 'self' → logprob: -11.561988830566406
    4. 'vertical' → logprob: -11.936988830566406
    5. '(horizontal' → logprob: -12.811988830566406
    6. 'range' → logprob: -13.811988830566406
    7. ' self' → logprob: -14.436988830566406
    8. '   ' → logprob: -15.061988830566406
    9. '_horizontal' → logprob: -15.686988830566406
    10. '.horizontal' → logprob: -16.186988830566406

Token 816: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0014347549295052886
    2. ',' → logprob: -7.751434803009033
    3. '_segment' → logprob: -8.126434326171875
    4. ',_' → logprob: -8.626434326171875
    5. '_s' → logprob: -8.876434326171875
    6. '_start' → logprob: -9.001434326171875
    7. '_seg' → logprob: -9.626434326171875
    8. ' _' → logprob: -10.376434326171875
    9. '_p' → logprob: -10.501434326171875
    10. '_se' → logprob: -10.876434326171875

Token 817: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48152509331703186
    2. ':' → logprob: -0.9815250635147095
    3. '           ' → logprob: -5.60652494430542
    4. ',' → logprob: -5.85652494430542
    5. '       ' → logprob: -7.23152494430542
    6. '   ' → logprob: -10.481525421142578
    7. '):
' → logprob: -10.481525421142578
    8. ' for' → logprob: -10.731525421142578
    9. '<|end|>' → logprob: -10.856525421142578
    10. '[' → logprob: -11.231525421142578

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2122114896774292
    2. ' for' → logprob: -2.0872116088867188
    3. '       ' → logprob: -3.2122116088867188
    4. '   ' → logprob: -3.9622116088867188
    5. '        ' → logprob: -6.587211608886719
    6. '```' → logprob: -6.587211608886719
    7. '               ' → logprob: -7.212211608886719
    8. '
' → logprob: -7.212211608886719
    9. 'for' → logprob: -7.462211608886719
    10. '<|end|>' → logprob: -7.712211608886719

Token 819: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0939590185880661
    2. ' for' → logprob: -2.468959093093872
    3. '   ' → logprob: -5.593958854675293
    4. 'for' (adapté à ' for') → logprob: -7.218958854675293
    5. '       ' → logprob: -8.343958854675293
    6. '               ' → logprob: -8.593958854675293
    7. '	for' → logprob: -10.218958854675293
    8. '		' → logprob: -10.718958854675293
    9. '	   ' → logprob: -11.093958854675293
    10. ' ' → logprob: -11.343958854675293

Token 820: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00043162284418940544
    2. ' v' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.875432014465332
    4. ' ' → logprob: -15.250432014465332
    5. 'w' → logprob: -16.250431060791016
    6. '	v' → logprob: -16.500431060791016
    7. '  ' → logprob: -17.500431060791016
    8. '_v' → logprob: -17.625431060791016
    9. '```' → logprob: -17.750431060791016
    10. '    ' → logprob: -18.000431060791016

Token 821: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -9.729906196298543e-06
    2. 'start' → logprob: -11.625009536743164
    3. ',' → logprob: -15.625009536743164
    4. '_' → logprob: -15.750009536743164
    5. '_START' → logprob: -15.750009536743164
    6. 'Start' → logprob: -16.250009536743164
    7. '_,' → logprob: -16.375009536743164
    8. '```' → logprob: -17.875009536743164
    9. '_end' → logprob: -18.000009536743164
    10. ' _' → logprob: -18.250009536743164

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040457461727783084
    2. ',v' → logprob: -7.875404357910156
    3. ' ,' → logprob: -10.750404357910156
    4. ',
' → logprob: -12.750404357910156
    5. '‌,' → logprob: -17.000404357910156
    6. '`,' → logprob: -17.375404357910156
    7. 'v' → logprob: -17.875404357910156
    8. ',j' → logprob: -18.375404357910156
    9. 'in' → logprob: -18.500404357910156
    10. '           ' → logprob: -18.500404357910156

Token 823: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5759396553039551
    2. ' v' → logprob: -0.8259396553039551
    3. '	v' → logprob: -15.575939178466797
    4. '_v' → logprob: -17.450939178466797
    5. '(v' → logprob: -17.700939178466797
    6. ' ' → logprob: -17.700939178466797
    7. '   ' → logprob: -18.200939178466797
    8. ',v' → logprob: -18.200939178466797
    9. ' ' → logprob: -18.325939178466797
    10. 'h' → logprob: -18.825939178466797

Token 824: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.006956553552299738
    2. 'end' → logprob: -5.006956577301025
    3. '_start' → logprob: -8.381956100463867
    4. 'End' → logprob: -12.256956100463867
    5. '_END' → logprob: -13.131956100463867
    6. '_' → logprob: -13.506956100463867
    7. 'END' → logprob: -14.631956100463867
    8. 'start' → logprob: -14.756956100463867
    9. '   ' → logprob: -14.881956100463867
    10. ',' → logprob: -15.006956100463867

Token 825: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0040793512016534805
    2. 'in' → logprob: -5.504079341888428
    3. '	in' → logprob: -14.254079818725586
    4. ' ' → logprob: -16.129079818725586
    5. '_in' → logprob: -16.754079818725586
    6. ',' → logprob: -17.254079818725586
    7. '<|end|>' → logprob: -17.629079818725586
    8. ')' → logprob: -17.754079818725586
    9. 'In' → logprob: -17.879079818725586
    10. '           ' → logprob: -18.379079818725586

Token 826: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.38847947120666504
    2. ' vertical' → logprob: -1.138479471206665
    3. 'horizontal' → logprob: -7.138479232788086
    4. '(vertical' → logprob: -7.763479232788086
    5. 'range' → logprob: -8.513479232788086
    6. ' range' → logprob: -9.138479232788086
    7. ' horizontal' → logprob: -9.513479232788086
    8. '_vertical' → logprob: -12.763479232788086
    9. '(horizontal' → logprob: -13.888479232788086
    10. '   ' → logprob: -14.638479232788086

Token 827: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0002625278721097857
    2. 'segments' → logprob: -8.375262260437012
    3. 'Segments' → logprob: -10.375262260437012
    4. ' segments' → logprob: -15.375262260437012
    5. '```' → logprob: -15.500262260437012
    6. 's' → logprob: -16.000263214111328
    7. '_start' → logprob: -16.875263214111328
    8. '           ' → logprob: -17.125263214111328
    9. '
' → logprob: -17.250263214111328
    10. '_ranges' → logprob: -17.500263214111328

Token 828: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.541848361492157
    2. ':
' → logprob: -0.916848361492157
    3. '               ' → logprob: -4.041848182678223
    4. '           ' → logprob: -7.291848182678223
    5. '<|end|>' → logprob: -9.791848182678223
    6. '       ' → logprob: -9.916848182678223
    7. '):
' → logprob: -10.041848182678223
    8. '[' → logprob: -10.791848182678223
    9. '                       ' → logprob: -10.791848182678223
    10. ':

' → logprob: -10.791848182678223

Token 829: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018612842541188002
    2. '                
' → logprob: -7.626861095428467
    3. '           ' → logprob: -8.251861572265625
    4. '                ' → logprob: -8.626861572265625
    5. '                   ' → logprob: -8.876861572265625
    6. ' 
' → logprob: -9.251861572265625
    7. '                               ' → logprob: -9.376861572265625
    8. '       ' → logprob: -9.501861572265625
    9. '<|end|>' → logprob: -9.626861572265625
    10. '
' → logprob: -9.751861572265625

Token 830: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06595898419618607
    2. 'has' → logprob: -4.3159589767456055
    3. '               ' → logprob: -4.5659589767456055
    4. ' has' → logprob: -4.6909589767456055
    5. '   ' → logprob: -5.1909589767456055
    6. 'if' (adapté à ' if') → logprob: -5.3159589767456055
    7. 'piece' → logprob: -5.4409589767456055
    8. 'ch' → logprob: -6.0659589767456055
    9. 'empty' → logprob: -6.1909589767456055
    10. '
' → logprob: -6.4409589767456055

Token 831: ' self' (ID: 1051)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.011170192621648312
    2. ' any' → logprob: -4.511170387268066
    3. '   ' → logprob: -9.261170387268066
    4. ' ' → logprob: -11.761170387268066
    5. '(any' → logprob: -12.511170387268066
    6. ''any' → logprob: -12.511170387268066
    7. '               ' → logprob: -12.886170387268066
    8. 'all' → logprob: -13.511170387268066
    9. '    ' → logprob: -13.511170387268066
    10. '
' → logprob: -13.511170387268066

Token 832: '.contains' (ID: 13678)
  Prédit: '.grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.6387631893157959
    2. '.has' → logprob: -1.888763189315796
    3. '.any' → logprob: -2.388763189315796
    4. '._' → logprob: -2.888763189315796
    5. '.can' → logprob: -3.013763189315796
    6. '.count' → logprob: -3.138763189315796
    7. 'def' → logprob: -4.013763427734375
    8. '.' → logprob: -4.013763427734375
    9. '.contains' → logprob: -4.763763427734375
    10. 'any' → logprob: -4.763763427734375

Token 833: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.27982261776924133
    2. '(h' → logprob: -1.529822587966919
    3. 'ch' → logprob: -4.529822826385498
    4. 'Chocolate' → logprob: -5.529822826385498
    5. '_any' → logprob: -5.904822826385498
    6. '(ch' → logprob: -5.904822826385498
    7. '(self' → logprob: -6.029822826385498
    8. '(' → logprob: -6.154822826385498
    9. '_h' → logprob: -7.529822826385498
    10. 'any' → logprob: -7.904822826385498

Token 834: 'ocolate' (ID: 16017)
  Prédit: 'ocolate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ocolate' → logprob: -0.08232759684324265
    2. 'ocol' → logprob: -2.9573276042938232
    3. 'oc' → logprob: -3.9573276042938232
    4. '```' → logprob: -6.332327365875244
    5. 'oco' → logprob: -6.582327365875244
    6. 'col' → logprob: -6.582327365875244
    7. 'o' → logprob: -7.207327365875244
    8. '(col' → logprob: -7.707327365875244
    9. '#' → logprob: -7.707327365875244
    10. 'h' → logprob: -8.207327842712402

Token 835: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0005644689663313329
    2. '(' → logprob: -8.250564575195312
    3. ' (' → logprob: -8.625564575195312
    4. '(
' → logprob: -9.375564575195312
    5. '(self' → logprob: -10.875564575195312
    6. '           ' → logprob: -12.375564575195312
    7. '               ' → logprob: -12.375564575195312
    8. '[h' → logprob: -13.000564575195312
    9. '   ' → logprob: -13.125564575195312
    10. '((' → logprob: -13.250564575195312

Token 836: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.080963092041202e-06
    2. '_START' → logprob: -13.125004768371582
    3. '[start' → logprob: -14.250004768371582
    4. ')_' → logprob: -15.000004768371582
    5. '_end' → logprob: -15.000004768371582
    6. '_' → logprob: -15.125004768371582
    7. 'start' → logprob: -15.125004768371582
    8. '```' → logprob: -15.250004768371582
    9. '               ' → logprob: -16.0000057220459
    10. '           ' → logprob: -16.2500057220459

Token 837: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007011185516603291
    2. ' ,' → logprob: -8.000700950622559
    3. ',v' → logprob: -8.125700950622559
    4. ',
' → logprob: -9.750700950622559
    5. ',h' → logprob: -12.000700950622559
    6. ')' → logprob: -12.750700950622559
    7. '<|end|>' → logprob: -14.875700950622559
    8. '           ' → logprob: -15.125700950622559
    9. '```' → logprob: -15.875700950622559
    10. ',j' → logprob: -15.875700950622559

Token 838: ' h' (ID: 312)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000912774819880724
    2. ' v' → logprob: -7.000912666320801
    3. '                   ' → logprob: -15.0009126663208
    4. '   ' → logprob: -15.3759126663208
    5. '               ' → logprob: -15.6259126663208
    6. '                               ' → logprob: -16.250913619995117
    7. '           ' → logprob: -16.500913619995117
    8. '                           ' → logprob: -16.750913619995117
    9. '                                   ' → logprob: -16.875913619995117
    10. '	v' → logprob: -17.125913619995117

Token 839: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.20186302065849304
    2. '_start' → logprob: -1.7018630504608154
    3. 'end' → logprob: -7.826862812042236
    4. 'start' → logprob: -9.951863288879395
    5. 'End' → logprob: -14.201863288879395
    6. '_' → logprob: -14.326863288879395
    7. '_END' → logprob: -14.701863288879395
    8. '```' → logprob: -15.451863288879395
    9. 'Start' → logprob: -15.701863288879395
    10. '_START' → logprob: -16.326862335205078

Token 840: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002622894535306841
    2. ' ,' → logprob: -8.375262260437012
    3. ',v' → logprob: -10.625262260437012
    4. ',
' → logprob: -12.000262260437012
    5. '               ' → logprob: -14.000262260437012
    6. '                   ' → logprob: -15.250262260437012
    7. '           ' → logprob: -17.000263214111328
    8. ',

' → logprob: -17.500263214111328
    9. '   ' → logprob: -18.250263214111328
    10. '                ' → logprob: -18.500263214111328

Token 841: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005236837547272444
    2. ' v' → logprob: -5.255236625671387
    3. '                               ' → logprob: -14.380236625671387
    4. '                   ' → logprob: -14.880236625671387
    5. '                                ' → logprob: -15.255236625671387
    6. '                              ' → logprob: -15.255236625671387
    7. '               ' → logprob: -15.380236625671387
    8. '                                   ' → logprob: -15.755236625671387
    9. '                ' → logprob: -15.880236625671387
    10. '                            ' → logprob: -15.880236625671387

Token 842: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -3.3213025744771585e-05
    2. '_end' → logprob: -10.500033378601074
    3. 'start' → logprob: -12.375033378601074
    4. '_START' → logprob: -15.000033378601074
    5. 'Start' → logprob: -15.250033378601074
    6. '_' → logprob: -15.500033378601074
    7. '```' → logprob: -15.625033378601074
    8. ' _' → logprob: -15.875033378601074
    9. ')_' → logprob: -16.250032424926758
    10. '_
' → logprob: -16.750032424926758

Token 843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001422770437784493
    2. ' ,' → logprob: -9.500142097473145
    3. ',v' → logprob: -10.000142097473145
    4. ',
' → logprob: -10.750142097473145
    5. ',

' → logprob: -16.50014305114746
    6. '               ' → logprob: -17.00014305114746
    7. ',\
' → logprob: -17.12514305114746
    8. '‌,' → logprob: -17.25014305114746
    9. ')' → logprob: -17.62514305114746
    10. '           ' → logprob: -17.62514305114746

Token 844: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0380416102707386
    2. ' v' → logprob: -3.288041591644287
    3. '	v' → logprob: -16.413042068481445
    4. ' ' → logprob: -18.288042068481445
    5. '_v' → logprob: -18.413042068481445
    6. ',v' → logprob: -18.538042068481445
    7. ')v' → logprob: -19.288042068481445
    8. '```' → logprob: -19.413042068481445
    9. ' ' → logprob: -19.663042068481445
    10. '   ' → logprob: -20.288042068481445

Token 845: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0046636611223220825
    2. '_start' → logprob: -5.379663467407227
    3. 'end' → logprob: -10.129663467407227
    4. 'start' → logprob: -13.504663467407227
    5. 'End' → logprob: -13.629663467407227
    6. '+' → logprob: -15.129663467407227
    7. 'nd' → logprob: -15.379663467407227
    8. '_' → logprob: -15.629663467407227
    9. '_END' → logprob: -15.629663467407227
    10. '```' → logprob: -16.254663467407227

Token 846: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25230133533477783
    2. '):
' → logprob: -1.5023013353347778
    3. '               ' → logprob: -8.627301216125488
    4. ')' → logprob: -9.127301216125488
    5. '                   ' → logprob: -10.502301216125488
    6. '):
' → logprob: -10.502301216125488
    7. ' ):' → logprob: -11.627301216125488
    8. '):

' → logprob: -12.127301216125488
    9. '           ' → logprob: -12.252301216125488
    10. ':' → logprob: -12.502301216125488

Token 847: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0760534256696701
    2. '                       ' → logprob: -2.7010533809661865
    3. '                           ' → logprob: -6.576053619384766
    4. ':' → logprob: -7.201053619384766
    5. '               ' → logprob: -7.326053619384766
    6. ':
' → logprob: -7.451053619384766
    7. '                               ' → logprob: -7.451053619384766
    8. '                    ' → logprob: -7.701053619384766
    9. '                  ' → logprob: -7.826053619384766
    10. '                    
' → logprob: -8.076053619384766

Token 848: ' count' (ID: 3605)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.411918967962265
    2. 'count' (adapté à ' count') → logprob: -1.4119189977645874
    3. '                   ' → logprob: -2.411918878555298
    4. '
' → logprob: -6.161919116973877
    5. ' count' → logprob: -6.786919116973877
    6. '                           ' → logprob: -7.911919116973877
    7. '               ' → logprob: -8.286918640136719
    8. '                               ' → logprob: -8.786918640136719
    9. '           ' → logprob: -9.161918640136719
    10. '       ' → logprob: -9.786918640136719

Token 849: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2014530897140503
    2. ' +=' → logprob: -1.7014530897140503
    3. '=' → logprob: -10.95145320892334
    4. ']+=' → logprob: -11.07645320892334
    5. '+' → logprob: -12.95145320892334
    6. ')' → logprob: -14.20145320892334
    7. '<|end|>' → logprob: -14.20145320892334
    8. '```' → logprob: -14.57645320892334
    9. '               ' → logprob: -14.95145320892334
    10. '                       ' → logprob: -14.95145320892334

Token 850: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '                   ' → logprob: -16.87523078918457
    4. '   ' → logprob: -17.87523078918457
    5. '```' → logprob: -18.00023078918457
    6. '               ' → logprob: -18.12523078918457
    7. '                       ' → logprob: -18.87523078918457
    8. ' ' → logprob: -19.37523078918457
    9. '           ' → logprob: -19.87523078918457
    10. '
' → logprob: -20.75023078918457

Token 851: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -19.0
    5. '
' → logprob: -19.375
    6. '۱' → logprob: -20.5
    7. '１' → logprob: -21.25
    8. '2' → logprob: -21.5
    9. '0' → logprob: -21.5
    10. '       ' → logprob: -21.625

Token 852: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14695151150226593
    2. '       ' → logprob: -2.02195143699646
    3. '    
' → logprob: -6.146951675415039
    4. '   ' → logprob: -7.646951675415039
    5. '        
' → logprob: -7.646951675415039
    6. '	' → logprob: -8.396951675415039
    7. 'return' → logprob: -8.646951675415039
    8. ' 
' → logprob: -9.146951675415039
    9. '  
' → logprob: -9.271951675415039
    10. '
' → logprob: -9.396951675415039

Token 853: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43762242794036865
    2. '       ' → logprob: -1.0626224279403687
    3. '    
' → logprob: -5.562622547149658
    4. '   ' → logprob: -6.562622547149658
    5. '        
' → logprob: -6.937622547149658
    6. '	' → logprob: -6.937622547149658
    7. 'return' → logprob: -8.0626220703125
    8. ' 
' → logprob: -8.1876220703125
    9. '	return' → logprob: -8.5626220703125
    10. ' return' → logprob: -8.8126220703125

Token 854: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7294659614562988
    2. 'return' (adapté à ' return') → logprob: -0.7294659614562988
    3. '
' → logprob: -3.479465961456299
    4. ' return' → logprob: -5.979465961456299
    5. '	return' → logprob: -6.729465961456299
    6. '   ' → logprob: -6.979465961456299
    7. '	' → logprob: -8.72946548461914
    8. '
' → logprob: -11.97946548461914
    9. 'def' → logprob: -12.35446548461914
    10. '           ' → logprob: -13.10446548461914

Token 855: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0485873706638813
    2. ' count' → logprob: -3.0485873222351074
    3. '	count' → logprob: -20.298587799072266
    4. '(count' → logprob: -22.423587799072266
    5. '[count' → logprob: -23.423587799072266
    6. ' ' → logprob: -23.423587799072266
    7. '   ' → logprob: -23.673587799072266
    8. '$count' → logprob: -23.923587799072266
    9. '_count' → logprob: -24.548587799072266
    10. '=count' → logprob: -24.923587799072266

Token 856: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0396941713988781
    2. '   ' → logprob: -3.28969407081604
    3. 'def' → logprob: -7.164694309234619
    4. '    
' → logprob: -7.414694309234619
    5. '```' → logprob: -9.414693832397461
    6. ' 
' → logprob: -9.914693832397461
    7. ' def' → logprob: -10.039693832397461
    8. '  
' → logprob: -10.914693832397461
    9. '<|end|>' → logprob: -10.914693832397461
    10. '

' → logprob: -11.289693832397461

Token 857: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44459930062294006
    2. '
' → logprob: -1.0695992708206177
    3. '    
' → logprob: -4.819599151611328
    4. 'def' → logprob: -5.319599151611328
    5. '```' → logprob: -6.069599151611328
    6. ' def' → logprob: -8.569599151611328
    7. ' 
' → logprob: -9.444599151611328
    8. '        
' → logprob: -9.569599151611328
    9. '  
' → logprob: -10.444599151611328
    10. '	def' → logprob: -10.694599151611328

Token 858: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.036324914544820786
    2. '   ' → logprob: -3.536324977874756
    3. ' def' → logprob: -5.036324977874756
    4. '
' → logprob: -9.911324501037598
    5. '```' → logprob: -12.911324501037598
    6. '    
' → logprob: -13.536324501037598
    7. '	def' → logprob: -13.786324501037598
    8. ' 
' → logprob: -15.411324501037598
    9. '  ' → logprob: -15.661324501037598
    10. ' ' → logprob: -16.036325454711914

Token 859: ' contains' (ID: 8895)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.2014627456665039
    2. ' contains' → logprob: -1.701462745666504
    3. '_contains' → logprob: -9.951462745666504
    4. 'def' → logprob: -14.076462745666504
    5. '.contains' → logprob: -14.826462745666504
    6. 'Contains' → logprob: -14.951462745666504
    7. 'contain' → logprob: -16.201461791992188
    8. ' ' → logprob: -16.576461791992188
    9. 'cont' → logprob: -17.076461791992188
    10. ' def' → logprob: -17.201461791992188

Token 860: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -5.633853652398102e-05
    2. '_' → logprob: -9.875056266784668
    3. 'self' → logprob: -13.375056266784668
    4. ' _' → logprob: -14.000056266784668
    5. '(self' → logprob: -14.125056266784668
    6. 'ch' → logprob: -14.500056266784668
    7. 'Chocolate' → logprob: -15.500056266784668
    8. '_self' → logprob: -15.625056266784668
    9. '_che' → logprob: -15.875056266784668
    10. '_
' → logprob: -15.875056266784668

Token 861: 'ocolate' (ID: 16017)
  Prédit: 'ocolate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ocolate' → logprob: -0.00266186217777431
    2. 'ocol' → logprob: -6.00266170501709
    3. 'o' → logprob: -9.50266170501709
    4. 'oc' → logprob: -10.12766170501709
    5. '_' → logprob: -10.75266170501709
    6. '```' → logprob: -10.87766170501709
    7. '_o' → logprob: -11.75266170501709
    8. '   ' → logprob: -12.50266170501709
    9. 'ocal' → logprob: -12.75266170501709
    10. '``' → logprob: -12.75266170501709

Token 862: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009137284359894693
    2. '(' → logprob: -7.000913619995117
    3. ' (' → logprob: -13.750913619995117
    4. '(
' → logprob: -14.125913619995117
    5. '   ' → logprob: -15.250913619995117
    6. 'self' → logprob: -15.375913619995117
    7. '       ' → logprob: -17.000913619995117
    8. '(s' → logprob: -19.000913619995117
    9. '(Self' → logprob: -19.000913619995117
    10. ' ' → logprob: -19.250913619995117

Token 863: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018603935837745667
    2. ')(' → logprob: -5.143603801727295
    3. ')' → logprob: -5.518603801727295
    4. ',' → logprob: -5.518603801727295
    5. 'self' → logprob: -5.768603801727295
    6. '       ' → logprob: -7.018603801727295
    7. '(' → logprob: -8.393604278564453
    8. '   ' → logprob: -8.518604278564453
    9. ' (' → logprob: -10.018604278564453
    10. '           ' → logprob: -11.018604278564453

Token 864: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.13221988081932068
    2. 'top' → logprob: -2.1322197914123535
    3. 'h' → logprob: -5.8822197914123535
    4. 'r' → logprob: -6.3822197914123535
    5. 'start' → logprob: -7.3822197914123535
    6. ' row' → logprob: -9.132220268249512
    7. ' top' → logprob: -9.757220268249512
    8. '   ' → logprob: -12.507220268249512
    9. 'self' → logprob: -12.632220268249512
    10. 'hs' → logprob: -13.382220268249512

Token 865: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.38137564063072205
    2. ',' → logprob: -1.2563756704330444
    3. ':' → logprob: -3.881375551223755
    4. '   ' → logprob: -5.756375789642334
    5. 'start' → logprob: -5.756375789642334
    6. '_s' → logprob: -6.256375789642334
    7. 'self' → logprob: -7.006375789642334
    8. '_,' → logprob: -7.256375789642334
    9. ' ,' → logprob: -7.506375789642334
    10. '       ' → logprob: -7.631375789642334

Token 866: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011784763046307489
    2. ' ,' → logprob: -9.750118255615234
    3. ':' → logprob: -10.000118255615234
    4. ',row' → logprob: -11.500118255615234
    5. ':int' → logprob: -12.750118255615234
    6. '   ' → logprob: -14.750118255615234
    7. ',
' → logprob: -14.750118255615234
    8. ',int' → logprob: -16.000118255615234
    9. ':,' → logprob: -17.875118255615234
    10. '       ' → logprob: -17.875118255615234

Token 867: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.02327774278819561
    2. ' row' → logprob: -3.773277759552002
    3. 'col' → logprob: -10.773277282714844
    4. ' col' → logprob: -11.523277282714844
    5. '   ' → logprob: -14.023277282714844
    6. 'column' → logprob: -15.398277282714844
    7. ' ' → logprob: -15.648277282714844
    8. '	row' → logprob: -16.898277282714844
    9. '       ' → logprob: -17.773277282714844
    10. '  ' → logprob: -18.023277282714844

Token 868: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0007212492637336254
    2. '_end' → logprob: -7.250721454620361
    3. 'start' → logprob: -11.750720977783203
    4. '_stop' → logprob: -13.500720977783203
    5. ',' → logprob: -14.625720977783203
    6. '_START' → logprob: -14.625720977783203
    7. '   ' → logprob: -15.125720977783203
    8. ')_' → logprob: -15.250720977783203
    9. '_finish' → logprob: -15.875720977783203
    10. ' _' → logprob: -15.875720977783203

Token 869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ' ,' → logprob: -10.375031471252441
    3. ',row' → logprob: -14.875031471252441
    4. ',
' → logprob: -16.250032424926758
    5. '_,' → logprob: -17.625032424926758
    6. '   ' → logprob: -17.625032424926758
    7. ',v' → logprob: -18.375032424926758
    8. '       ' → logprob: -19.125032424926758
    9. '‌,' → logprob: -19.125032424926758
    10. ':' → logprob: -20.000032424926758

Token 870: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.4740772247314453
    2. ' col' → logprob: -0.9740772247314453
    3. '   ' → logprob: -15.974077224731445
    4. ' ' → logprob: -17.849077224731445
    5. '	col' → logprob: -17.849077224731445
    6. 'column' → logprob: -19.099077224731445
    7. '_col' → logprob: -19.224077224731445
    8. '    ' → logprob: -19.974077224731445
    9. '  ' → logprob: -20.724077224731445
    10. 'colm' → logprob: -20.974077224731445

Token 871: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.165027217415627e-05
    2. 'start' → logprob: -11.125021934509277
    3. ',' → logprob: -12.250021934509277
    4. '_START' → logprob: -14.125021934509277
    5. '_,' → logprob: -14.500021934509277
    6. '_end' → logprob: -15.125021934509277
    7. 'Start' → logprob: -15.250021934509277
    8. 's' → logprob: -16.50002098083496
    9. '   ' → logprob: -16.75002098083496
    10. '_Start' → logprob: -17.37502098083496

Token 872: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',
' → logprob: -15.500027656555176
    4. ',col' → logprob: -15.750027656555176
    5. '‌,' → logprob: -17.375028610229492
    6. '_,' → logprob: -17.500028610229492
    7. ',column' → logprob: -18.500028610229492
    8. ',row' → logprob: -18.875028610229492
    9. ',

' → logprob: -19.000028610229492
    10. '<|end|>' → logprob: -19.250028610229492

Token 873: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.3868713080883026
    2. 'col' → logprob: -1.136871337890625
    3. ' ' → logprob: -16.261871337890625
    4. '   ' → logprob: -17.386871337890625
    5. '	col' → logprob: -17.386871337890625
    6. ',col' → logprob: -17.511871337890625
    7. '    ' → logprob: -18.636871337890625
    8. '(col' → logprob: -19.511871337890625
    9. '  ' → logprob: -19.636871337890625
    10. 'colm' → logprob: -19.761871337890625

Token 874: '_end' (ID: 13707)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.13276031613349915
    2. '_end' → logprob: -2.1327602863311768
    3. ',' → logprob: -5.382760524749756
    4. '   ' → logprob: -8.007760047912598
    5. '+' → logprob: -8.257760047912598
    6. '_,' → logprob: -9.007760047912598
    7. '):
' → logprob: -9.257760047912598
    8. '       ' → logprob: -9.632760047912598
    9. '):' → logprob: -9.632760047912598
    10. '_' → logprob: -9.757760047912598

Token 875: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16059809923171997
    2. ')' → logprob: -2.160598039627075
    3. '):
' → logprob: -3.410598039627075
    4. ':' → logprob: -10.160597801208496
    5. '):
' → logprob: -10.785597801208496
    6. '   ' → logprob: -10.910597801208496
    7. ' ):' → logprob: -12.160597801208496
    8. '):

' → logprob: -13.035597801208496
    9. ' )' → logprob: -14.035597801208496
    10. '       ' → logprob: -14.285597801208496

Token 876: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01605008915066719
    2. ':
' → logprob: -4.141049861907959
    3. '   ' → logprob: -12.266050338745117
    4. '       ' → logprob: -12.266050338745117
    5. '):' → logprob: -13.141050338745117
    6. ' :' → logprob: -13.641050338745117
    7. ':
' → logprob: -14.141050338745117
    8. '):
' → logprob: -14.266050338745117
    9. ':def' → logprob: -14.516050338745117
    10. ':return' → logprob: -14.641050338745117

Token 877: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.02975292131304741
    2. ' bool' → logprob: -3.5297529697418213
    3. '   ' → logprob: -13.779752731323242
    4. ' ' → logprob: -14.029752731323242
    5. '  ' → logprob: -15.529752731323242
    6. 'True' → logprob: -15.654752731323242
    7. '	bool' → logprob: -16.279752731323242
    8. 'int' → logprob: -16.404752731323242
    9. '    ' → logprob: -17.904752731323242
    10. '```' → logprob: -18.404752731323242

Token 878: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31428804993629456
    2. ':
' → logprob: -1.3142880201339722
    3. '       ' → logprob: -6.939288139343262
    4. '   ' → logprob: -10.314288139343262
    5. '):
' → logprob: -11.439288139343262
    6. ':
' → logprob: -12.689288139343262
    7. ':

' → logprob: -12.814288139343262
    8. ':return' → logprob: -13.064288139343262
    9. ' :
' → logprob: -14.189288139343262
    10. '):' → logprob: -14.189288139343262

Token 879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004251931968610734
    2. ' for' → logprob: -8.250425338745117
    3. '
' → logprob: -9.125425338745117
    4. '	' → logprob: -11.000425338745117
    5. 'for' → logprob: -11.500425338745117
    6. '\n' → logprob: -12.000425338745117
    7. '   ' → logprob: -12.375425338745117
    8. '        
' → logprob: -12.625425338745117
    9. '\' → logprob: -12.875425338745117
    10. '' → logprob: -13.125425338745117

Token 880: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13154247403144836
    2. ' for' → logprob: -2.256542444229126
    3. '
' → logprob: -4.131542682647705
    4. 'for' (adapté à ' for') → logprob: -6.131542682647705
    5. '   ' → logprob: -9.131542205810547
    6. '\n' → logprob: -9.881542205810547
    7. '	for' → logprob: -10.256542205810547
    8. '	' → logprob: -10.506542205810547
    9. ' 
' → logprob: -10.756542205810547
    10. '' → logprob: -11.006542205810547

Token 881: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10043299198150635
    2. 'row' → logprob: -2.350432872772217
    3. ' row' → logprob: -9.100433349609375
    4. ' r' → logprob: -9.100433349609375
    5. 'i' → logprob: -12.725433349609375
    6. '   ' → logprob: -16.600433349609375
    7. 'rs' → logprob: -16.975433349609375
    8. ' i' → logprob: -17.600433349609375
    9. '	row' → logprob: -17.850433349609375
    10. '```' → logprob: -18.100433349609375

Token 882: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005935909226536751
    2. 'in' → logprob: -5.130936145782471
    3. 'row' → logprob: -12.880935668945312
    4. '=row' → logprob: -14.130935668945312
    5. ' ' → logprob: -14.380935668945312
    6. 'range' → logprob: -14.505935668945312
    7. '_' → logprob: -14.630935668945312
    8. ')' → logprob: -15.005935668945312
    9. '	in' → logprob: -15.005935668945312
    10. '=' → logprob: -15.255935668945312

Token 883: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006811291445046663
    2. ' range' → logprob: -5.006811141967773
    3. 'row' → logprob: -9.256811141967773
    4. ' row' → logprob: -15.131811141967773
    5. '(range' → logprob: -16.256811141967773
    6. 'r' → logprob: -17.131811141967773
    7. '	range' → logprob: -17.881811141967773
    8. '   ' → logprob: -18.256811141967773
    9. ' ' → logprob: -19.131811141967773
    10. 'rang' → logprob: -19.256811141967773

Token 884: '(row' (ID: 15945)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.06381562352180481
    2. '(row' → logprob: -2.8138155937194824
    3. ' row' → logprob: -6.313815593719482
    4. '=row' → logprob: -10.81381607055664
    5. '	row' → logprob: -11.56381607055664
    6. '[row' → logprob: -12.31381607055664
    7. ',row' → logprob: -14.18881607055664
    8. '$row' → logprob: -15.68881607055664
    9. '_row' → logprob: -16.93881607055664
    10. '(' → logprob: -16.93881607055664

Token 885: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -5.514650183613412e-05
    2. 'start' → logprob: -10.000055313110352
    3. 'Start' → logprob: -12.875055313110352
    4. '_row' → logprob: -13.375055313110352
    5. '_START' → logprob: -13.750055313110352
    6. '_end' → logprob: -14.000055313110352
    7. 'row' → logprob: -14.375055313110352
    8. '=row' → logprob: -14.500055313110352
    9. '(row' → logprob: -14.625055313110352
    10. '   ' → logprob: -15.125055313110352

Token 886: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007505440153181553
    2. ' ,' → logprob: -7.250750541687012
    3. ',row' → logprob: -10.375750541687012
    4. ',r' → logprob: -11.875750541687012
    5. ',
' → logprob: -13.875750541687012
    6. '<|end|>' → logprob: -14.250750541687012
    7. '   ' → logprob: -15.500750541687012
    8. ',col' → logprob: -15.875750541687012
    9. '       ' → logprob: -16.500751495361328
    10. ',column' → logprob: -16.500751495361328

Token 887: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.004079589620232582
    2. ' row' → logprob: -5.504079818725586
    3. 'col' → logprob: -13.879079818725586
    4. 'r' → logprob: -15.629079818725586
    5. ' col' → logprob: -17.504079818725586
    6. '(row' → logprob: -17.879079818725586
    7. ' ' → logprob: -20.004079818725586
    8. '	row' → logprob: -20.129079818725586
    9. '   ' → logprob: -21.129079818725586
    10. '[row' → logprob: -21.629079818725586

Token 888: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0002669384120963514
    2. '_start' → logprob: -8.250267028808594
    3. 'end' → logprob: -12.125267028808594
    4. 'End' → logprob: -16.375267028808594
    5. '_END' → logprob: -17.625267028808594
    6. '+' → logprob: -18.000267028808594
    7. '_' → logprob: -18.375267028808594
    8. '_out' → logprob: -19.750267028808594
    9. 'start' → logprob: -19.875267028808594
    10. '   ' → logprob: -19.875267028808594

Token 889: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868711292743683
    2. '+' → logprob: -1.136871099472046
    3. ' +
' → logprob: -17.136871337890625
    4. '   ' → logprob: -17.761871337890625
    5. '+
' → logprob: -18.011871337890625
    6. '＋' → logprob: -18.386871337890625
    7. ' ' → logprob: -19.136871337890625
    8. '<|end|>' → logprob: -19.386871337890625
    9. ' ' → logprob: -19.511871337890625
    10. ',' → logprob: -19.511871337890625

Token 890: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.875019073486328
    4. '```' → logprob: -19.875019073486328
    5. ')' → logprob: -20.875019073486328
    6. '+' → logprob: -22.750019073486328
    7. '0' → logprob: -22.875019073486328
    8. '):
' → logprob: -22.875019073486328
    9. '=' → logprob: -23.000019073486328
    10. '
' → logprob: -23.250019073486328

Token 891: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -19.250001907348633
    4. '   ' → logprob: -19.250001907348633
    5. ')' → logprob: -20.125001907348633
    6. '```' → logprob: -20.750001907348633
    7. '۱' → logprob: -21.750001907348633
    8. '0' → logprob: -22.250001907348633
    9. '１' → logprob: -22.625001907348633
    10. '):
' → logprob: -22.625001907348633

Token 892: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6328166127204895
    2. '):' → logprob: -0.7578166127204895
    3. '<|end|>' → logprob: -9.132816314697266
    4. '):
' → logprob: -10.257816314697266
    5. '       ' → logprob: -10.632816314697266
    6. ':' → logprob: -11.132816314697266
    7. '   ' → logprob: -11.257816314697266
    8. ',' → logprob: -11.507816314697266
    9. '):

' → logprob: -12.632816314697266
    10. ')' → logprob: -12.757816314697266

Token 893: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20728519558906555
    2. '           ' → logprob: -1.7072851657867432
    3. 'for' → logprob: -5.832285404205322
    4. '       ' → logprob: -6.957285404205322
    5. '               ' → logprob: -7.082285404205322
    6. '   ' → logprob: -7.582285404205322
    7. '<|end|>' → logprob: -7.582285404205322
    8. ' ' → logprob: -10.582284927368164
    9. '```' → logprob: -11.082284927368164
    10. '	for' → logprob: -11.082284927368164

Token 894: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12693913280963898
    2. 'for' (adapté à ' for') → logprob: -2.126939058303833
    3. '	for' → logprob: -12.126938819885254
    4. '           ' → logprob: -13.001938819885254
    5. '       ' → logprob: -13.501938819885254
    6. '               ' → logprob: -13.626938819885254
    7. '        ' → logprob: -15.001938819885254
    8. ' ' → logprob: -16.25193977355957
    9. ' ' → logprob: -16.37693977355957
    10. '            ' → logprob: -16.62693977355957

Token 895: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0067154900170862675
    2. ' c' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.131715774536133
    4. '	c' → logprob: -17.506715774536133
    5. 'col' → logprob: -17.506715774536133
    6. '
' → logprob: -17.881715774536133
    7. ')c' → logprob: -18.756715774536133
    8. '(c' → logprob: -18.881715774536133
    9. 'cc' → logprob: -19.381715774536133
    10. ' ' → logprob: -19.506715774536133

Token 896: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033656761050224304
    2. 'in' → logprob: -3.4086568355560303
    3. '<|end|>' → logprob: -12.03365707397461
    4. ' ' → logprob: -13.40865707397461
    5. 'In' → logprob: -13.65865707397461
    6. ' col' → logprob: -14.90865707397461
    7. ')' → logprob: -14.90865707397461
    8. '            ' → logprob: -15.15865707397461
    9. 'col' → logprob: -15.28365707397461
    10. '           ' → logprob: -15.65865707397461

Token 897: ' range' (ID: 3352)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.039917901158332825
    2. 'range' → logprob: -3.2899179458618164
    3. ' col' → logprob: -6.539917945861816
    4. ' range' → logprob: -7.789917945861816
    5. '(col' → logprob: -11.039917945861816
    6. '(range' → logprob: -16.4149169921875
    7. '[col' → logprob: -16.6649169921875
    8. 'colon' → logprob: -17.6649169921875
    9. ',col' → logprob: -19.9149169921875
    10. 'column' → logprob: -20.2899169921875

Token 898: '(col' (ID: 37070)
  Prédit: '(col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.0005811501177959144
    2. 'col' → logprob: -7.50058126449585
    3. ' col' → logprob: -10.875580787658691
    4. ' (' → logprob: -12.000580787658691
    5. '(' → logprob: -13.375580787658691
    6. ',col' → logprob: -13.500580787658691
    7. '[col' → logprob: -15.750580787658691
    8. '	col' → logprob: -17.125581741333008
    9. '.col' → logprob: -17.250581741333008
    10. '(column' → logprob: -17.375581741333008

Token 899: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0003005464968737215
    2. 'start' → logprob: -9.250300407409668
    3. '_col' → logprob: -9.750300407409668
    4. 'col' → logprob: -9.750300407409668
    5. 'Start' → logprob: -9.750300407409668
    6. ',' → logprob: -11.750300407409668
    7. '[col' → logprob: -12.000300407409668
    8. '_,' → logprob: -12.125300407409668
    9. ',col' → logprob: -12.375300407409668
    10. '(col' → logprob: -12.875300407409668

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002690840628929436
    2. ' ,' → logprob: -8.250268936157227
    3. ',c' → logprob: -12.250268936157227
    4. ',col' → logprob: -12.875268936157227
    5. ',
' → logprob: -16.375268936157227
    6. 'c' → logprob: -16.375268936157227
    7. ' col' → logprob: -16.750268936157227
    8. ',column' → logprob: -16.875268936157227
    9. '           ' → logprob: -17.000268936157227
    10. '‌,' → logprob: -17.125268936157227

Token 901: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.005233763717114925
    2. ' col' → logprob: -5.2552337646484375
    3. '	col' → logprob: -19.255233764648438
    4. 'c' → logprob: -20.130233764648438
    5. '(col' → logprob: -20.255233764648438
    6. ' ' → logprob: -21.380233764648438
    7. '   ' → logprob: -21.380233764648438
    8. 'colon' → logprob: -21.755233764648438
    9. '_col' → logprob: -22.005233764648438
    10. 'coln' → logprob: -22.130233764648438

Token 902: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.062241703271865845
    2. '_start' → logprob: -2.812241792678833
    3. 'End' → logprob: -8.937241554260254
    4. '+' → logprob: -9.437241554260254
    5. 'end' → logprob: -10.062241554260254
    6. 'Start' → logprob: -11.687241554260254
    7. 'start' → logprob: -12.187241554260254
    8. ',' → logprob: -13.812241554260254
    9. '_col' → logprob: -13.812241554260254
    10. '   ' → logprob: -14.062241554260254

Token 903: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10026243329048157
    2. '+' → logprob: -2.350262403488159
    3. ',' → logprob: -9.850262641906738
    4. '           ' → logprob: -13.725262641906738
    5. ' ' → logprob: -15.350262641906738
    6. '          ' → logprob: -15.600262641906738
    7. '            ' → logprob: -15.725262641906738
    8. ')' → logprob: -15.725262641906738
    9. '               ' → logprob: -15.725262641906738
    10. '       ' → logprob: -15.850262641906738

Token 904: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '+' → logprob: -15.500051498413086
    4. ')' → logprob: -17.625051498413086
    5. 'col' → logprob: -18.750051498413086
    6. '   ' → logprob: -19.250051498413086
    7. '
' → logprob: -21.625051498413086
    8. 'end' → logprob: -21.750051498413086
    9. 'c' → logprob: -21.875051498413086
    10. '`' → logprob: -22.125051498413086

Token 905: '1' (ID: 16)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.018467487767338753
    2. 'end' → logprob: -4.268467426300049
    3. '1' → logprob: -5.518467426300049
    4. ' col' → logprob: -8.518467903137207
    5. 'c' → logprob: -9.518467903137207
    6. '_end' → logprob: -12.893467903137207
    7. '(col' → logprob: -13.143467903137207
    8. 'End' → logprob: -13.518467903137207
    9. '+' → logprob: -13.643467903137207
    10. '(end' → logprob: -13.768467903137207

Token 906: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06045260280370712
    2. '               ' → logprob: -3.310452699661255
    3. '):' → logprob: -4.060452461242676
    4. ':' → logprob: -6.560452461242676
    5. ':
' → logprob: -6.685452461242676
    6. '<|end|>' → logprob: -7.060452461242676
    7. '                       ' → logprob: -7.810452461242676
    8. '           ' → logprob: -8.560452461242676
    9. ')' → logprob: -8.685452461242676
    10. '():
' → logprob: -8.935452461242676

Token 907: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00922778807580471
    2. ' if' → logprob: -4.759227752685547
    3. 'if' → logprob: -7.509227752685547
    4. '           ' → logprob: -10.259227752685547
    5. '                   ' → logprob: -11.884227752685547
    6. '                ' → logprob: -12.509227752685547
    7. '                               ' → logprob: -12.634227752685547
    8. '	           ' → logprob: -12.759227752685547
    9. '   ' → logprob: -12.884227752685547
    10. ' ' → logprob: -13.134227752685547

Token 908: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31396484375
    2. ' if' → logprob: -1.56396484375
    3. '                   ' → logprob: -2.81396484375
    4. '               ' → logprob: -8.93896484375
    5. '           ' → logprob: -10.31396484375
    6. '   ' → logprob: -11.43896484375
    7. '                       ' → logprob: -13.43896484375
    8. '                ' → logprob: -13.68896484375
    9. '                  ' → logprob: -13.68896484375
    10. 'If' → logprob: -13.81396484375

Token 909: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0788901224732399
    2. ' self' → logprob: -2.578890085220337
    3. '               ' → logprob: -15.828889846801758
    4. '(self' → logprob: -16.078889846801758
    5. '	self' → logprob: -17.578889846801758
    6. '[self' → logprob: -17.703889846801758
    7. '                   ' → logprob: -18.078889846801758
    8. ' ' → logprob: -18.828889846801758
    9. '           ' → logprob: -19.078889846801758
    10. '                       ' → logprob: -20.578889846801758

Token 910: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -1.2113979209971149e-05
    2. 'grid' → logprob: -11.500012397766113
    3. '.' → logprob: -13.875012397766113
    4. ' .' → logprob: -14.875012397766113
    5. ' grid' → logprob: -15.250012397766113
    6. '	grid' → logprob: -15.500012397766113
    7. 'self' → logprob: -16.500011444091797
    8. ':grid' → logprob: -17.250011444091797
    9. '.user' → logprob: -17.375011444091797
    10. '.Grid' → logprob: -18.750011444091797

Token 911: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.128163257315464e-07
    2. 'r' → logprob: -15.75
    3. '[' → logprob: -16.75
    4. '[row' → logprob: -17.0
    5. ' [' → logprob: -18.75
    6. '[c' → logprob: -19.375
    7. '[
' → logprob: -19.5
    8. '```' → logprob: -19.5
    9. '][' → logprob: -20.125
    10. '	r' → logprob: -20.25

Token 912: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.2519761621952057
    2. '][' → logprob: -1.5019761323928833
    3. '[r' → logprob: -11.126976013183594
    4. '}[' → logprob: -12.126976013183594
    5. '>[' → logprob: -12.251976013183594
    6. '[' → logprob: -12.251976013183594
    7. ')[' → logprob: -12.376976013183594
    8. '[C' → logprob: -13.126976013183594
    9. '           ' → logprob: -13.251976013183594
    10. '               ' → logprob: -13.376976013183594

Token 913: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.963691804325208e-05
    2. 'col' → logprob: -10.500029563903809
    3. '[c' → logprob: -13.875029563903809
    4. ' c' → logprob: -15.125029563903809
    5. '][' → logprob: -15.500029563903809
    6. ')c' → logprob: -15.750029563903809
    7. '```' → logprob: -15.875029563903809
    8. '[' → logprob: -16.250030517578125
    9. '[col' → logprob: -16.250030517578125
    10. '
' → logprob: -17.375030517578125

Token 914: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6971993446350098
    2. '==' → logprob: -0.9471993446350098
    3. ']==' → logprob: -2.5721993446350098
    4. ' ==' → logprob: -3.3221993446350098
    5. ']=='' → logprob: -7.07219934463501
    6. '=='' → logprob: -7.32219934463501
    7. '==
' → logprob: -8.822198867797852
    8. '']=='' → logprob: -10.822198867797852
    9. '=' → logprob: -10.947198867797852
    10. '']' → logprob: -11.197198867797852

Token 915: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08021179586648941
    2. ' ==' → logprob: -2.580211877822876
    3. '=='' → logprob: -6.955211639404297
    4. '==
' → logprob: -8.455211639404297
    5. ']==' → logprob: -9.330211639404297
    6. '=' → logprob: -9.955211639404297
    7. ']' → logprob: -11.330211639404297
    8. ']=='' → logprob: -13.330211639404297
    9. '=="' → logprob: -13.330211639404297
    10. '[' → logprob: -13.830211639404297

Token 916: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -2.522638169466518e-05
    2. ' '#'' → logprob: -10.750024795532227
    3. '"#' → logprob: -12.625024795532227
    4. ' '#' → logprob: -15.500024795532227
    5. '('#' → logprob: -16.375024795532227
    6. '#' → logprob: -16.625024795532227
    7. '','#' → logprob: -17.625024795532227
    8. ''' → logprob: -17.625024795532227
    9. '='#' → logprob: -18.750024795532227
    10. ':'#' → logprob: -18.875024795532227

Token 917: '':
' (ID: 7669)
  Prédit: ':return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.7221878170967102
    2. ':
' → logprob: -1.2221877574920654
    3. ':' → logprob: -1.8471877574920654
    4. 'return' → logprob: -2.9721877574920654
    5. '                   ' → logprob: -5.7221879959106445
    6. '               ' → logprob: -5.9721879959106445
    7. '):
' → logprob: -6.5971879959106445
    8. ' return' → logprob: -6.5971879959106445
    9. '                       ' → logprob: -6.8471879959106445
    10. '<|end|>' → logprob: -7.8471879959106445

Token 918: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005623715929687023
    2. 'return' → logprob: -5.505623817443848
    3. ' return' → logprob: -6.505623817443848
    4. '                       ' → logprob: -10.505623817443848
    5. '                           ' → logprob: -11.880623817443848
    6. '                  ' → logprob: -12.630623817443848
    7. '               ' → logprob: -12.755623817443848
    8. ':return' → logprob: -13.130623817443848
    9. '   ' → logprob: -13.380623817443848
    10. '                    ' → logprob: -13.755623817443848

Token 919: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1345975250005722
    2. ' return' → logprob: -2.1345975399017334
    3. '                       ' → logprob: -5.509597301483154
    4. '                   ' → logprob: -5.634597301483154
    5. '	return' → logprob: -11.759597778320312
    6. '                           ' → logprob: -12.509597778320312
    7. '
' → logprob: -13.384597778320312
    8. ':return' → logprob: -13.384597778320312
    9. '               ' → logprob: -13.509597778320312
    10. '   ' → logprob: -13.509597778320312

Token 920: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07888978719711304
    2. ' True' → logprob: -2.578889846801758
    3. '(True' → logprob: -21.953889846801758
    4. '=True' → logprob: -22.953889846801758
    5. 'true' → logprob: -23.453889846801758
    6. ' ' → logprob: -25.203889846801758
    7. '_true' → logprob: -25.578889846801758
    8. '   ' → logprob: -25.703889846801758
    9. '.True' → logprob: -25.703889846801758
    10. 'T' → logprob: -25.703889846801758

Token 921: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16217105090618134
    2. '               ' → logprob: -2.0371711254119873
    3. '                
' → logprob: -5.287170886993408
    4. '        
' → logprob: -5.787170886993408
    5. 'return' → logprob: -6.037170886993408
    6. ' return' → logprob: -6.162170886993408
    7. '                ' → logprob: -6.662170886993408
    8. '        ' → logprob: -6.662170886993408
    9. '<|end|>' → logprob: -6.662170886993408
    10. '                        
' → logprob: -8.162171363830566

Token 922: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008559550042264163
    2. '        ' → logprob: -7.500855922698975
    3. '	' → logprob: -9.000856399536133
    4. '               ' → logprob: -9.375856399536133
    5. 'return' → logprob: -10.500856399536133
    6. '      ' → logprob: -11.000856399536133
    7. '   ' → logprob: -11.500856399536133
    8. '        
' → logprob: -11.500856399536133
    9. ' return' → logprob: -11.875856399536133
    10. '                       ' → logprob: -12.250856399536133

Token 923: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023524489370174706
    2. 'return' (adapté à ' return') → logprob: -8.625235557556152
    3. '               ' → logprob: -10.375235557556152
    4. ' return' → logprob: -11.625235557556152
    5. '                   ' → logprob: -12.375235557556152
    6. '
' → logprob: -12.500235557556152
    7. '   ' → logprob: -12.500235557556152
    8. '           ' → logprob: -13.500235557556152
    9. '                       ' → logprob: -14.000235557556152
    10. '	' → logprob: -14.625235557556152

Token 924: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019286326132714748
    2. ' False' → logprob: -6.251928806304932
    3. '(False' → logprob: -21.501928329467773
    4. '_false' → logprob: -24.876928329467773
    5. 'false' → logprob: -25.001928329467773
    6. 'True' → logprob: -25.126928329467773
    7. '=False' → logprob: -25.876928329467773
    8. '.False' → logprob: -26.376928329467773
    9. 'FALSE' → logprob: -28.001928329467773
    10. 'F' → logprob: -28.376928329467773

Token 925: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 926: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 927: ' Chocolate' (ID: 54599)
  Prédit: ' Chocolate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Chocolate' → logprob: -0.957988977432251
    2. ' Cookie' → logprob: -1.707988977432251
    3. ' Candy' → logprob: -2.082988977432251
    4. 'Chocolate' → logprob: -2.457988977432251
    5. ' Wrapper' → logprob: -2.832988977432251
    6. 'Candy' → logprob: -2.957988977432251
    7. ' Checker' → logprob: -4.332988739013672
    8. ' Cocoa' → logprob: -4.457988739013672
    9. ' Sweet' → logprob: -4.832988739013672
    10. ' Cake' → logprob: -4.832988739013672

Token 928: 'Bar' (ID: 4622)
  Prédit: 'Bar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bar' → logprob: -0.48532167077064514
    2. 'Box' → logprob: -2.2353217601776123
    3. 'Pie' → logprob: -2.4853217601776123
    4. 'Piece' → logprob: -2.7353217601776123
    5. 'Cake' → logprob: -3.3603217601776123
    6. 'Grid' → logprob: -3.7353217601776123
    7. 'Puzzle' → logprob: -4.610321521759033
    8. 'Factory' → logprob: -5.110321521759033
    9. 'Tray' → logprob: -5.485321521759033
    10. 'Pizza' → logprob: -5.610321521759033

Token 929: 'Factory' (ID: 4870)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.7665387988090515
    2. 'Divider' → logprob: -1.7665388584136963
    3. 'Splitter' → logprob: -2.0165388584136963
    4. ':' → logprob: -2.8915388584136963
    5. 'Puzzle' → logprob: -3.2665388584136963
    6. 'Partition' → logprob: -3.6415388584136963
    7. 'C' → logprob: -3.7665388584136963
    8. 'Breaker' → logprob: -4.141538619995117
    9. ':
' → logprob: -4.391538619995117
    10. 'Segment' → logprob: -4.641538619995117

Token 930: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006282062386162579
    2. ':
' → logprob: -7.3756279945373535
    3. ':

' → logprob: -14.500628471374512
    4. ':def' → logprob: -14.500628471374512
    5. ' :' → logprob: -15.000628471374512
    6. '(' → logprob: -15.625628471374512
    7. '():' → logprob: -16.250627517700195
    8. '<|end|>' → logprob: -17.000627517700195
    9. '):' → logprob: -17.125627517700195
    10. ':**' → logprob: -17.500627517700195

Token 931: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003936152206733823
    2. ' def' → logprob: -8.125393867492676
    3. 'def' → logprob: -9.750393867492676
    4. 'class' → logprob: -11.125393867492676
    5. '```' → logprob: -11.250393867492676
    6. '    
' → logprob: -11.875393867492676
    7. ' class' → logprob: -13.000393867492676
    8. '	def' → logprob: -14.750393867492676
    9. '    ' → logprob: -14.875393867492676
    10. '<|end|>' → logprob: -15.125393867492676

Token 932: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10652567446231842
    2. 'def' → logprob: -2.6065256595611572
    3. '   ' → logprob: -3.6065256595611572
    4. 'class' → logprob: -9.231525421142578
    5. ' class' → logprob: -11.606525421142578
    6. '```' → logprob: -13.231525421142578
    7. '	def' → logprob: -13.606525421142578
    8. '    ' → logprob: -14.606525421142578
    9. ' ' → logprob: -15.106525421142578
    10. ':def' → logprob: -16.481525421142578

Token 933: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.00026753442944027483
    2. 'classmethod' → logprob: -8.25026798248291
    3. 'dat' → logprob: -12.00026798248291
    4. 'property' → logprob: -17.000267028808594
    5. 'static' → logprob: -17.500267028808594
    6. 'st' → logprob: -23.875267028808594
    7. '@' → logprob: -25.125267028808594
    8. ' static' → logprob: -25.375267028808594
    9. 'sta' → logprob: -26.375267028808594
    10. 'cache' → logprob: -26.625267028808594

Token 934: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06627441197633743
    2. '   ' → logprob: -3.191274404525757
    3. ' def' → logprob: -3.941274404525757
    4. '
' → logprob: -5.691274642944336
    5. '(' → logprob: -9.316274642944336
    6. '	def' → logprob: -10.191274642944336
    7. '(def' → logprob: -10.691274642944336
    8. '    
' → logprob: -10.941274642944336
    9. ' ' → logprob: -11.566274642944336
    10. '(
' → logprob: -11.691274642944336

Token 935: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004237627435941249
    2. ' def' → logprob: -8.500423431396484
    3. '   ' → logprob: -9.000423431396484
    4. '
' → logprob: -9.250423431396484
    5. 'class' → logprob: -15.375423431396484
    6. '```' → logprob: -15.750423431396484
    7. '	def' → logprob: -15.875423431396484
    8. '    
' → logprob: -16.625423431396484
    9. '  ' → logprob: -17.500423431396484
    10. ':def' → logprob: -17.625423431396484

Token 936: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.875001907348633
    3. ' def' → logprob: -14.125001907348633
    4. 'class' → logprob: -14.625001907348633
    5. 'classmethod' → logprob: -16.125001907348633
    6. 'staticmethod' → logprob: -17.625001907348633
    7. '    
' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.125001907348633
    9. 'from' → logprob: -18.500001907348633
    10. 'define' → logprob: -19.500001907348633

Token 937: ' from' (ID: 591)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.49280092120170593
    2. ' create' → logprob: -0.9928009510040283
    3. 'from' → logprob: -4.117800712585449
    4. ' from' → logprob: -6.242800712585449
    5. 'make' → logprob: -8.49280071258545
    6. 'def' → logprob: -10.11780071258545
    7. ' make' → logprob: -10.74280071258545
    8. 'generate' → logprob: -11.36780071258545
    9. 'produce' → logprob: -11.74280071258545
    10. 'build' → logprob: -12.11780071258545

Token 938: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.19081734120845795
    2. '_strings' → logprob: -2.315817356109619
    3. '_list' → logprob: -3.565817356109619
    4. '_lines' → logprob: -3.940817356109619
    5. '_str' → logprob: -4.315817356109619
    6. '_string' → logprob: -5.315817356109619
    7. '_text' → logprob: -6.065817356109619
    8. '_lists' → logprob: -6.440817356109619
    9. '_raw' → logprob: -7.190817356109619
    10. '_code' → logprob: -7.315817356109619

Token 939: '(h' (ID: 8120)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.019247062504291534
    2. '(input' → logprob: -5.144247055053711
    3. '(' → logprob: -5.269247055053711
    4. '(rows' → logprob: -5.894247055053711
    5. '(data' → logprob: -6.894247055053711
    6. '(strings' → logprob: -6.894247055053711
    7. '_lines' → logprob: -7.269247055053711
    8. '(list' → logprob: -7.394247055053711
    9. '(text' → logprob: -8.144247055053711
    10. '():' → logprob: -8.394247055053711

Token 940: ':' (ID: 25)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.011378132738173008
    2. ',' → logprob: -4.761378288269043
    3. '   ' → logprob: -6.511378288269043
    4. 'e' → logprob: -7.761378288269043
    5. ' eight' → logprob: -7.886378288269043
    6. '       ' → logprob: -8.136378288269043
    7. '           ' → logprob: -10.761378288269043
    8. 'ight' → logprob: -11.011378288269043
    9. '=' → logprob: -11.011378288269043
    10. 'int' → logprob: -11.011378288269043

Token 941: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009969274513423443
    2. ' int' → logprob: -4.634969234466553
    3. '[int' → logprob: -9.134969711303711
    4. '   ' → logprob: -10.759969711303711
    5. '(int' → logprob: -11.009969711303711
    6. ')' → logprob: -11.009969711303711
    7. ',' → logprob: -11.134969711303711
    8. '=int' → logprob: -11.384969711303711
    9. ',int' → logprob: -11.884969711303711
    10. ':int' → logprob: -12.134969711303711

Token 942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4034345187828876e-05
    2. ' ,' → logprob: -11.37502384185791
    3. ',w' → logprob: -11.62502384185791
    4. ',width' → logprob: -13.12502384185791
    5. ',
' → logprob: -13.87502384185791
    6. 'w' → logprob: -14.37502384185791
    7. ',int' → logprob: -17.375024795532227
    8. '   ' → logprob: -17.875024795532227
    9. ',h' → logprob: -18.125024795532227
    10. '‌,' → logprob: -19.000024795532227

Token 943: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0017232499085366726
    2. ' w' → logprob: -6.376723289489746
    3. 'grid' → logprob: -11.001723289489746
    4. '   ' → logprob: -13.251723289489746
    5. '```' → logprob: -14.126723289489746
    6. ' grid' → logprob: -14.251723289489746
    7. ' lines' → logprob: -15.501723289489746
    8. '       ' → logprob: -15.751723289489746
    9. 'lines' → logprob: -15.876723289489746
    10. '           ' → logprob: -16.00172233581543

Token 944: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06203266233205795
    2. ':' → logprob: -2.812032699584961
    3. ' ,' → logprob: -10.187032699584961
    4. '   ' → logprob: -11.437032699584961
    5. ':int' → logprob: -12.312032699584961
    6. ' :' → logprob: -12.812032699584961
    7. ',
' → logprob: -12.937032699584961
    8. ')' → logprob: -13.312032699584961
    9. '):' → logprob: -13.687032699584961
    10. 't' → logprob: -13.687032699584961

Token 945: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011705794604495168
    2. ' int' → logprob: -6.751170635223389
    3. '[int' → logprob: -15.50117015838623
    4. 'list' → logprob: -16.251171112060547
    5. '   ' → logprob: -17.126171112060547
    6. ')' → logprob: -18.251171112060547
    7. ':int' → logprob: -18.251171112060547
    8. 'List' → logprob: -18.501171112060547
    9. 'str' → logprob: -18.751171112060547
    10. '
' → logprob: -19.001171112060547

Token 946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.53050296427682e-05
    2. ' ,' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.25008487701416
    4. ')' → logprob: -16.125085830688477
    5. ',
' → logprob: -16.750085830688477
    6. '       ' → logprob: -18.375085830688477
    7. '‌,' → logprob: -19.125085830688477
    8. '  ' → logprob: -19.250085830688477
    9. ',List' → logprob: -19.750085830688477
    10. '    ' → logprob: -19.875085830688477

Token 947: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.4593053460121155
    2. 'grid' → logprob: -1.2093052864074707
    3. ' lines' → logprob: -2.9593052864074707
    4. 'rows' → logprob: -4.334305286407471
    5. ' grid' → logprob: -5.459305286407471
    6. ' rows' → logprob: -8.584305763244629
    7. 'g' → logprob: -8.834305763244629
    8. 'input' → logprob: -9.209305763244629
    9. 'strings' → logprob: -9.459305763244629
    10. 'data' → logprob: -10.459305763244629

Token 948: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013828554656356573
    2. '):' → logprob: -6.626382827758789
    3. '):
' → logprob: -10.001382827758789
    4. ')' → logprob: -11.501382827758789
    5. ':list' → logprob: -13.501382827758789
    6. '```' → logprob: -16.62638282775879
    7. ' :' → logprob: -17.25138282775879
    8. '):

' → logprob: -17.75138282775879
    9. '):
' → logprob: -17.87638282775879
    10. '[]):' → logprob: -17.87638282775879

Token 949: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.4498052223643754e-05
    2. ' list' → logprob: -11.500014305114746
    3. '[list' → logprob: -12.500014305114746
    4. ')' → logprob: -14.250014305114746
    5. ':list' → logprob: -18.375015258789062
    6. '(list' → logprob: -19.375015258789062
    7. '```' → logprob: -20.000015258789062
    8. 'List' → logprob: -20.000015258789062
    9. '=list' → logprob: -20.250015258789062
    10. '):
' → logprob: -20.875015258789062

Token 950: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. 'str' → logprob: -17.375
    3. ')' → logprob: -19.375
    4. '):
' → logprob: -20.25
    5. '[' → logprob: -20.5
    6. '	str' → logprob: -20.625
    7. ':str' → logprob: -20.625
    8. '```' → logprob: -20.625
    9. '[
' → logprob: -20.875
    10. '(str' → logprob: -20.875

Token 951: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024953833781182766
    2. '):
' → logprob: -8.625249862670898
    3. '])' → logprob: -10.125249862670898
    4. '):' → logprob: -10.750249862670898
    5. '   ' → logprob: -12.375249862670898
    6. '`)' → logprob: -13.125249862670898
    7. ')->' → logprob: -14.250249862670898
    8. '）' → logprob: -14.500249862670898
    9. ' )' → logprob: -15.125249862670898
    10. '>)' → logprob: -16.0002498626709

Token 952: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02568085677921772
    2. '->' → logprob: -4.025681018829346
    3. ' ->' → logprob: -5.150681018829346
    4. '   ' → logprob: -7.650681018829346
    5. ':
' → logprob: -7.650681018829346
    6. '():' → logprob: -8.275680541992188
    7. ':return' → logprob: -8.275680541992188
    8. ')' → logprob: -9.525680541992188
    9. '()->' → logprob: -10.025680541992188
    10. '       ' → logprob: -10.650680541992188

Token 953: ' Chocolate' (ID: 54599)
  Prédit: 'Chocolate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chocolate' → logprob: -0.07908057421445847
    2. ' Chocolate' → logprob: -2.579080581665039
    3. ''' → logprob: -8.954080581665039
    4. ' chocolate' → logprob: -10.454080581665039
    5. '"' → logprob: -10.829080581665039
    6. ' '' → logprob: -11.454080581665039
    7. '`' → logprob: -14.204080581665039
    8. '   ' → logprob: -14.829080581665039
    9. ' "' → logprob: -15.704080581665039
    10. ''M' → logprob: -15.829080581665039

Token 954: 'Bar' (ID: 4622)
  Prédit: 'Bar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bar' → logprob: -9.014684110297821e-06
    2. 'bar' → logprob: -11.750008583068848
    3. '_bar' → logprob: -14.250008583068848
    4. 'Chocolate' → logprob: -15.750008583068848
    5. ' Bar' → logprob: -16.000009536743164
    6. 'Бар' → logprob: -16.625009536743164
    7. ' bar' → logprob: -17.250009536743164
    8. 'Bart' → logprob: -18.000009536743164
    9. 'Barr' → logprob: -18.125009536743164
    10. 'B' → logprob: -18.125009536743164

Token 955: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04349864646792412
    2. ':
' → logprob: -3.6684987545013428
    3. '():' → logprob: -4.918498516082764
    4. '   ' → logprob: -5.293498516082764
    5. '       ' → logprob: -5.918498516082764
    6. '():
' → logprob: -6.793498516082764
    7. '):' → logprob: -8.043498992919922
    8. '):
' → logprob: -9.168498992919922
    9. ':return' → logprob: -9.168498992919922
    10. '<|end|>' → logprob: -9.418498992919922

Token 956: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010139751975657418
    2. 'return' → logprob: -9.625101089477539
    3. ' return' → logprob: -11.000101089477539
    4. '<|end|>' → logprob: -11.625101089477539
    5. '        
' → logprob: -12.250101089477539
    6. '   ' → logprob: -13.750101089477539
    7. '      ' → logprob: -14.000101089477539
    8. '
' → logprob: -15.000101089477539
    9. '	       ' → logprob: -15.000101089477539
    10. '```' → logprob: -15.250101089477539

Token 957: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012693287804722786
    2. '       ' → logprob: -4.762693405151367
    3. ' return' → logprob: -5.512693405151367
    4. 'grid' → logprob: -10.387693405151367
    5. '   ' → logprob: -12.887693405151367
    6. '```' → logprob: -13.762693405151367
    7. '
' → logprob: -14.637693405151367
    8. ' grid' → logprob: -15.012693405151367
    9. '``' → logprob: -17.762693405151367
    10. '        ' → logprob: -17.762693405151367

Token 958: ' Chocolate' (ID: 54599)
  Prédit: 'Chocolate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chocolate' → logprob: -0.0067154900170862675
    2. ' Chocolate' → logprob: -5.006715297698975
    3. 'Ch' → logprob: -16.381715774536133
    4. ' chocolate' → logprob: -17.131715774536133
    5. '   ' → logprob: -18.881715774536133
    6. ' ' → logprob: -20.881715774536133
    7. 'Chess' → logprob: -21.256715774536133
    8. ' Chocol' → logprob: -21.631715774536133
    9. 'ch' → logprob: -21.881715774536133
    10. 'class' → logprob: -22.756715774536133

Token 959: 'Bar' (ID: 4622)
  Prédit: 'Bar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bar' → logprob: -3.128163257315464e-07
    2. 'bar' → logprob: -15.625
    3. '_bar' → logprob: -17.5
    4. 'Бар' → logprob: -17.625
    5. 'Chocolate' → logprob: -18.375
    6. ' Bar' → logprob: -18.5
    7. 'B' → logprob: -19.5
    8. 'Barcode' → logprob: -19.5
    9. '.Bar' → logprob: -20.125
    10. ' bar' → logprob: -20.5

Token 960: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.000001907348633
    3. 'h' → logprob: -14.500001907348633
    4. '(height' → logprob: -17.000001907348633
    5. '(
' → logprob: -18.375001907348633
    6. ' (' → logprob: -20.750001907348633
    7. 'height' → logprob: -21.500001907348633
    8. '(H' → logprob: -21.750001907348633
    9. '   ' → logprob: -22.625001907348633
    10. '	h' → logprob: -22.750001907348633

Token 961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000344640837283805
    2. ',w' → logprob: -8.125344276428223
    3. ' ,' → logprob: -10.000344276428223
    4. ',
' → logprob: -13.125344276428223
    5. 'w' → logprob: -13.750344276428223
    6. ',width' → logprob: -16.37534523010254
    7. '   ' → logprob: -17.25034523010254
    8. ')' → logprob: -17.62534523010254
    9. '       ' → logprob: -18.00034523010254
    10. ',h' → logprob: -18.62534523010254

Token 962: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0015023599844425917
    2. ' w' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.501502990722656
    4. '       ' → logprob: -19.626502990722656
    5. '	w' → logprob: -19.751502990722656
    6. '    ' → logprob: -20.001502990722656
    7. ' ' → logprob: -20.376502990722656
    8. '           ' → logprob: -21.501502990722656
    9. '
' → logprob: -21.626502990722656
    10. '<|end|>' → logprob: -21.626502990722656

Token 963: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.578184497309849e-05
    2. ' ,' → logprob: -9.625085830688477
    3. ' lines' → logprob: -11.125085830688477
    4. 'lines' → logprob: -12.625085830688477
    5. '(lines' → logprob: -14.375085830688477
    6. ',
' → logprob: -14.375085830688477
    7. '       ' → logprob: -15.250085830688477
    8. '   ' → logprob: -15.750085830688477
    9. '[' → logprob: -17.375085830688477
    10. '	lines' → logprob: -17.500085830688477

Token 964: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.02344963513314724
    2. ' lines' → logprob: -3.773449659347534
    3. '[' → logprob: -9.148449897766113
    4. '[line' → logprob: -10.023449897766113
    5. ' [' → logprob: -10.148449897766113
    6. 'list' → logprob: -12.273449897766113
    7. '(lines' → logprob: -12.273449897766113
    8. '[list' → logprob: -13.523449897766113
    9. '[
' → logprob: -14.273449897766113
    10. '	lines' → logprob: -14.273449897766113

Token 965: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. '   ' → logprob: -12.500009536743164
    3. ' )' → logprob: -12.875009536743164
    4. ')
' → logprob: -13.625009536743164
    5. '<|end|>' → logprob: -14.375009536743164
    6. '       ' → logprob: -14.500009536743164
    7. '[' → logprob: -15.250009536743164
    8. ' ' → logprob: -17.375009536743164
    9. ')return' → logprob: -17.750009536743164
    10. '),' → logprob: -17.750009536743164

Token 966: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8822743892669678
    2. '<|end|>' → logprob: -1.1322743892669678
    3. 'class' → logprob: -2.1322743892669678
    4. '```' → logprob: -2.6322743892669678
    5. '#' → logprob: -2.8822743892669678
    6. '<|end|>' → logprob: -4.507274627685547
    7. '
' → logprob: -5.632274627685547
    8. 'import' → logprob: -7.757274627685547
    9. 'if' → logprob: -8.507274627685547
    10. 'a' → logprob: -8.757274627685547

Token 967: ' Chocolate' (ID: 54599)
  Prédit: 'Chocolate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chocolate' → logprob: -0.18613547086715698
    2. 'Solution' → logprob: -2.5611355304718018
    3. ' Chocolate' → logprob: -2.6861355304718018
    4. 'Test' → logprob: -4.811135292053223
    5. 'Solver' → logprob: -4.936135292053223
    6. 'Cut' → logprob: -5.811135292053223
    7. ' Solution' → logprob: -6.311135292053223
    8. 'Ch' → logprob: -7.061135292053223
    9. 'Tester' → logprob: -7.811135292053223
    10. 'Bar' → logprob: -7.936135292053223

Token 968: 'Bar' (ID: 4622)
  Prédit: 'Bar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bar' → logprob: -0.013175411149859428
    2. 'Piece' → logprob: -5.0131754875183105
    3. 'Solver' → logprob: -6.3881754875183105
    4. 'Cut' → logprob: -6.6381754875183105
    5. 'Pie' → logprob: -7.6381754875183105
    6. 'Divider' → logprob: -7.6381754875183105
    7. 'Puzzle' → logprob: -7.7631754875183105
    8. 'Breaker' → logprob: -8.013175010681152
    9. 'Segment' → logprob: -8.138175010681152
    10. 'Splitter' → logprob: -8.263175010681152

Token 969: 'Solver' (ID: 70484)
  Prédit: 'Splitter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Splitter' → logprob: -0.7511802315711975
    2. 'Solver' → logprob: -0.8761802315711975
    3. 'Divider' → logprob: -3.7511801719665527
    4. ':' → logprob: -4.001180171966553
    5. 'Tester' → logprob: -4.376180171966553
    6. 'Factory' → logprob: -5.001180171966553
    7. 'Cut' → logprob: -5.376180171966553
    8. 'Piece' → logprob: -5.501180171966553
    9. 'Puzzle' → logprob: -5.501180171966553
    10. 'Breaker' → logprob: -5.501180171966553

Token 970: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02056676335632801
    2. ':
' → logprob: -3.895566701889038
    3. '<|end|>' → logprob: -11.895566940307617
    4. '(' → logprob: -12.895566940307617
    5. ':def' → logprob: -12.895566940307617
    6. ' :' → logprob: -13.020566940307617
    7. ':

' → logprob: -13.020566940307617
    8. '():
' → logprob: -13.145566940307617
    9. '   ' → logprob: -13.270566940307617
    10. '():' → logprob: -13.895566940307617

Token 971: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034212760627269745
    2. ' def' → logprob: -3.409212827682495
    3. 'def' → logprob: -7.534212589263916
    4. '	def' → logprob: -11.159213066101074
    5. '```' → logprob: -12.034213066101074
    6. '   ' → logprob: -13.034213066101074
    7. ' class' → logprob: -13.284213066101074
    8. '    
' → logprob: -13.534213066101074
    9. 'class' → logprob: -13.659213066101074
    10. '    ' → logprob: -13.784213066101074

Token 972: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05197412148118019
    2. '@' → logprob: -3.301974058151245
    3. ' def' → logprob: -4.301974296569824
    4. '   ' → logprob: -8.301974296569824
    5. ' @' → logprob: -10.426974296569824
    6. 'staticmethod' → logprob: -11.051974296569824
    7. 'class' → logprob: -14.551974296569824
    8. 'classmethod' → logprob: -16.301973342895508
    9. '	def' → logprob: -16.426973342895508
    10. '```' → logprob: -16.676973342895508

Token 973: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11336366832256317
    2. ' __' → logprob: -3.363363742828369
    3. 'def' → logprob: -3.488363742828369
    4. 'staticmethod' → logprob: -3.613363742828369
    5. ' static' → logprob: -4.988363742828369
    6. ' solve' → logprob: -5.613363742828369
    7. ' init' → logprob: -6.863363742828369
    8. '__' → logprob: -7.113363742828369
    9. 'init' → logprob: -7.238363742828369
    10. 'static' → logprob: -7.738363742828369

Token 974: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2961512513575144e-05
    2. 'new' → logprob: -11.375022888183594
    3. 'it' → logprob: -12.000022888183594
    4. 'def' → logprob: -12.750022888183594
    5. 'staticmethod' → logprob: -14.375022888183594
    6. ' init' → logprob: -14.500022888183594
    7. 'int' → logprob: -14.750022888183594
    8. 'iter' → logprob: -15.125022888183594
    9. 'static' → logprob: -15.375022888183594
    10. 'nit' → logprob: -16.125022888183594

Token 975: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009305497631430626
    2. '__' → logprob: -5.509305477142334
    3. '__(
' → logprob: -5.884305477142334
    4. '(self' → logprob: -6.384305477142334
    5. '(' → logprob: -7.634305477142334
    6. '__((' → logprob: -9.259305953979492
    7. ' (' → logprob: -10.009305953979492
    8. '<|end|>' → logprob: -10.259305953979492
    9. '_(' → logprob: -10.384305953979492
    10. '<>(' → logprob: -11.384305953979492

Token 976: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.478889215737581e-05
    2. ' self' → logprob: -10.875054359436035
    3. '   ' → logprob: -11.125054359436035
    4. '
' → logprob: -11.500054359436035
    5. ')' → logprob: -12.500054359436035
    6. '       ' → logprob: -12.625054359436035
    7. '(self' → logprob: -12.875054359436035
    8. '```' → logprob: -15.125054359436035
    9. ',self' → logprob: -15.375054359436035
    10. ',' → logprob: -16.00005531311035

Token 977: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008096250821836293
    2. 'self' → logprob: -7.375809669494629
    3. ' ,' → logprob: -8.875809669494629
    4. ' self' → logprob: -11.625809669494629
    5. '):' → logprob: -11.875809669494629
    6. ')' → logprob: -12.000809669494629
    7. ',self' → logprob: -12.000809669494629
    8. '):
' → logprob: -12.375809669494629
    9. '(self' → logprob: -12.625809669494629
    10. '   ' → logprob: -12.750809669494629

Token 978: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048952389508485794
    2. '       ' → logprob: -3.048952341079712
    3. ' self' → logprob: -8.673952102661133
    4. '   ' → logprob: -8.923952102661133
    5. '(self' → logprob: -9.923952102661133
    6. '
' → logprob: -12.298952102661133
    7. '```' → logprob: -12.548952102661133
    8. ',' → logprob: -13.923952102661133
    9. '	self' → logprob: -13.923952102661133
    10. '           ' → logprob: -14.673952102661133

Token 979: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5431954264640808
    2. '       ' → logprob: -1.0431954860687256
    3. 'pass' → logprob: -2.7931954860687256
    4. ' pass' → logprob: -5.6681952476501465
    5. ' self' → logprob: -6.4181952476501465
    6. '   ' → logprob: -7.9181952476501465
    7. 'def' → logprob: -9.668195724487305
    8. '
' → logprob: -10.918195724487305
    9. '0' → logprob: -11.418195724487305
    10. 'None' → logprob: -12.918195724487305

Token 980: '.results' (ID: 53203)
  Prédit: '.bar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bar' → logprob: -0.0942116305232048
    2. '.ch' → logprob: -2.8442115783691406
    3. '.b' → logprob: -4.844211578369141
    4. '.results' → logprob: -5.094211578369141
    5. '.solution' → logprob: -5.344211578369141
    6. '.input' → logprob: -6.594211578369141
    7. '.result' → logprob: -6.719211578369141
    8. '._' → logprob: -7.094211578369141
    9. '.data' → logprob: -7.344211578369141
    10. '.context' → logprob: -7.844211578369141

Token 981: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.127113938331604
    2. '=' → logprob: -2.1271138191223145
    3. '=[]' → logprob: -9.127114295959473
    4. ':' → logprob: -10.127114295959473
    5. ' ' → logprob: -11.252114295959473
    6. '[' → logprob: -11.877114295959473
    7. '   ' → logprob: -12.502114295959473
    8. '[]' → logprob: -12.627114295959473
    9. '.append' → logprob: -13.002114295959473
    10. '[:]' → logprob: -13.127114295959473

Token 982: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -6.630610641877865e-06
    2. '[]
' → logprob: -12.750006675720215
    3. ' []' → logprob: -12.875006675720215
    4. '{}' → logprob: -14.000006675720215
    5. '[]}' → logprob: -15.375006675720215
    6. '[' → logprob: -16.2500057220459
    7. '[]

' → logprob: -17.6250057220459
    8. '[]>' → logprob: -17.8750057220459
    9. '[])' → logprob: -18.0000057220459
    10. '=[]' → logprob: -18.8750057220459

Token 983: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004363302141427994
    2. ' def' → logprob: -5.629363536834717
    3. 'def' → logprob: -8.129363059997559
    4. '<|end|>' → logprob: -8.254363059997559
    5. '
' → logprob: -9.879363059997559
    6. '    
' → logprob: -10.004363059997559
    7. '	def' → logprob: -10.379363059997559
    8. ' ' → logprob: -10.754363059997559
    9. '<|end|>' → logprob: -10.879363059997559
    10. ' ind' → logprob: -11.379363059997559

Token 984: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012935701524838805
    2. ' def' → logprob: -6.751293659210205
    3. '   ' → logprob: -9.001293182373047
    4. '	def' → logprob: -16.751293182373047
    5. ' ' → logprob: -19.251293182373047
    6. '```' → logprob: -20.376293182373047
    7. '
' → logprob: -20.751293182373047
    8. '  ' → logprob: -21.501293182373047
    9. '@' → logprob: -22.001293182373047
    10. '       ' → logprob: -22.501293182373047

Token 985: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.12644709646701813
    2. ' solve' → logprob: -2.2514472007751465
    3. 'process' → logprob: -5.1264472007751465
    4. 'add' → logprob: -5.7514472007751465
    5. ' process' → logprob: -6.2514472007751465
    6. ' add' → logprob: -7.1264472007751465
    7. 'def' → logprob: -7.5014472007751465
    8. ' def' → logprob: -7.8764472007751465
    9. ' run' → logprob: -8.376446723937988
    10. 'submit' → logprob: -8.626446723937988

Token 986: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002637199067976326
    2. '(' → logprob: -8.250264167785645
    3. 'self' → logprob: -13.500264167785645
    4. ' (' → logprob: -14.500264167785645
    5. '(
' → logprob: -14.625264167785645
    6. '(sel' → logprob: -16.750263214111328
    7. ' self' → logprob: -17.000263214111328
    8. '(s' → logprob: -17.625263214111328
    9. '_self' → logprob: -17.875263214111328
    10. '_(' → logprob: -17.875263214111328

Token 987: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009344478603452444
    2. 'self' → logprob: -7.125934600830078
    3. ' ,' → logprob: -9.500934600830078
    4. '(self' → logprob: -10.750934600830078
    5. ',self' → logprob: -11.125934600830078
    6. ',input' → logprob: -12.000934600830078
    7. '):' → logprob: -13.000934600830078
    8. ',
' → logprob: -13.250934600830078
    9. '_,' → logprob: -13.500934600830078
    10. ')(' → logprob: -13.500934600830078

Token 988: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003577495808713138
    2. '```' → logprob: -9.250357627868652
    3. '   ' → logprob: -9.875357627868652
    4. ' for' → logprob: -10.375357627868652
    5. 'input' → logprob: -10.500357627868652
    6. 'h' → logprob: -10.875357627868652
    7. 'n' → logprob: -11.000357627868652
    8. ' lines' → logprob: -11.375357627868652
    9. 'import' → logprob: -11.500357627868652
    10. '        ' → logprob: -11.625357627868652

Token 989: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3425210416316986
    2. ' t' → logprob: -1.342521071434021
    3. 'import' → logprob: -4.3425211906433105
    4. '       ' → logprob: -5.0925211906433105
    5. 'n' → logprob: -5.5925211906433105
    6. ' n' → logprob: -6.0925211906433105
    7. 'T' → logprob: -6.3425211906433105
    8. ' import' → logprob: -6.8425211906433105
    9. ' T' → logprob: -7.2175211906433105
    10. 'test' → logprob: -9.842520713806152

Token 990: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5770263075828552
    2. ' True' → logprob: -0.8270263075828552
    3. '(True' → logprob: -6.8270263671875
    4. '1' → logprob: -14.3270263671875
    5. '=True' → logprob: -14.3270263671875
    6. 'true' → logprob: -14.7020263671875
    7. 'self' → logprob: -15.5770263671875
    8. '   ' → logprob: -16.4520263671875
    9. '(' → logprob: -16.5770263671875
    10. '_true' → logprob: -16.7020263671875

Token 991: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05506090447306633
    2. '           ' → logprob: -3.305060863494873
    3. ':
' → logprob: -4.180060863494873
    4. ',' → logprob: -7.305060863494873
    5. '<|end|>' → logprob: -8.055061340332031
    6. '<|end|>' → logprob: -8.305061340332031
    7. '():' → logprob: -9.930061340332031
    8. ' and' → logprob: -9.930061340332031
    9. '():
' → logprob: -10.555061340332031
    10. '       ' → logprob: -10.680061340332031

Token 992: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08548188209533691
    2. ' try' → logprob: -3.335481882095337
    3. 'try' → logprob: -3.460481882095337
    4. ' line' → logprob: -4.585481643676758
    5. '   ' → logprob: -5.585481643676758
    6. 'line' → logprob: -6.960481643676758
    7. '```' → logprob: -12.585481643676758
    8. '       ' → logprob: -12.835481643676758
    9. 'row' → logprob: -13.210481643676758
    10. 'n' → logprob: -13.210481643676758

Token 993: ' h' (ID: 312)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16633987426757812
    2. ' line' → logprob: -1.9163398742675781
    3. 'try' → logprob: -5.416339874267578
    4. '           ' → logprob: -7.166339874267578
    5. 'n' → logprob: -7.791339874267578
    6. ' try' → logprob: -8.041339874267578
    7. 'raw' → logprob: -10.041339874267578
    8. 'input' → logprob: -10.166339874267578
    9. ' n' → logprob: -10.291339874267578
    10. '   ' → logprob: -11.791339874267578

Token 994: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0175898689776659
    2. ',w' → logprob: -4.392590045928955
    3. '=' → logprob: -5.517590045928955
    4. 'w' → logprob: -7.267590045928955
    5. ' =' → logprob: -8.142589569091797
    6. ' w' → logprob: -11.017589569091797
    7. ' ,' → logprob: -11.142589569091797
    8. 's' → logprob: -11.767589569091797
    9. '=w' → logprob: -12.267589569091797
    10. ',width' → logprob: -12.267589569091797

Token 995: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005234356038272381
    2. ' w' → logprob: -5.255234241485596
    3. '*w' → logprob: -15.630234718322754
    4. ' ' → logprob: -16.880233764648438
    5. ',w' → logprob: -17.005233764648438
    6. '=w' → logprob: -17.255233764648438
    7. 's' → logprob: -17.380233764648438
    8. '	w' → logprob: -17.630233764648438
    9. '    ' → logprob: -17.755233764648438
    10. '<|end|>' → logprob: -17.880233764648438

Token 996: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021907102782279253
    2. ' =' → logprob: -6.127190589904785
    3. '=input' → logprob: -12.377190589904785
    4. ',' → logprob: -13.627190589904785
    5. '=line' → logprob: -16.8771915435791
    6. '<|end|>' → logprob: -16.8771915435791
    7. '=
' → logprob: -17.7521915435791
    8. ')' → logprob: -17.7521915435791
    9. ')=' → logprob: -18.0021915435791
    10. 'input' → logprob: -18.5021915435791

Token 997: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0009287334396503866
    2. ' map' → logprob: -7.00092887878418
    3. '(map' → logprob: -11.62592887878418
    4. '[' → logprob: -12.12592887878418
    5. 'input' → logprob: -13.37592887878418
    6. '
' → logprob: -14.62592887878418
    7. 'list' → logprob: -14.87592887878418
    8. 'self' → logprob: -14.87592887878418
    9. '	map' → logprob: -16.75092887878418
    10. 'tuple' → logprob: -17.87592887878418

Token 998: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005611150525510311
    2. '(input' → logprob: -5.255610942840576
    3. 'int' → logprob: -8.880611419677734
    4. '(' → logprob: -8.880611419677734
    5. 'input' → logprob: -9.755611419677734
    6. '(str' → logprob: -10.130611419677734
    7. '[int' → logprob: -14.880611419677734
    8. 'str' → logprob: -15.130611419677734
    9. '(
' → logprob: -15.255611419677734
    10. '=int' → logprob: -15.755611419677734

Token 999: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6124916076660156
    2. '(input' → logprob: -1.2374916076660156
    3. ',input' → logprob: -1.9874916076660156
    4. ',' → logprob: -4.237491607666016
    5. ')' → logprob: -4.612491607666016
    6. ' input' → logprob: -5.737491607666016
    7. '(' → logprob: -6.362491607666016
    8. '=input' → logprob: -7.237491607666016
    9. 'self' → logprob: -7.612491607666016
    10. '[input' → logprob: -8.862491607666016

Token 1000: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. '(input' → logprob: -18.62520408630371
    4. '=input' → logprob: -18.62520408630371
    5. 'self' → logprob: -19.50020408630371
    6. '<input' → logprob: -21.00020408630371
    7. ',input' → logprob: -21.00020408630371
    8. '	input' → logprob: -21.25020408630371
    9. '_input' → logprob: -21.87520408630371
    10. ')' → logprob: -22.62520408630371

Token 1001: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.5
    3. '()
' → logprob: -18.5
    4. ' ().' → logprob: -18.875
    5. '(' → logprob: -20.5
    6. '('').' → logprob: -21.375
    7. '("").' → logprob: -21.625
    8. '.split' → logprob: -22.125
    9. '()[' → logprob: -22.5
    10. '()?.' → logprob: -22.625

Token 1002: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032536466605961323
    2. 'strip' → logprob: -5.75325345993042
    3. '().' → logprob: -9.503253936767578
    4. 'rstrip' → logprob: -14.253253936767578
    5. '.split' → logprob: -15.003253936767578
    6. ' split' → logprob: -15.628253936767578
    7. 'read' → logprob: -16.253253936767578
    8. '(split' → logprob: -16.503253936767578
    9. '.strip' → logprob: -18.628253936767578
    10. 'spl' → logprob: -18.628253936767578

Token 1003: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -14.75
    3. ' ().' → logprob: -18.5
    4. '.split' → logprob: -19.0
    5. '()
' → logprob: -19.625
    6. '(' → logprob: -21.0
    7. '())' → logprob: -21.25
    8. '   ' → logprob: -22.0
    9. '('').' → logprob: -22.0
    10. 'split' → logprob: -22.125

Token 1004: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.25
    3. '(split' → logprob: -19.5
    4. 'spl' → logprob: -19.5
    5. '.split' → logprob: -20.375
    6. '().' → logprob: -22.5
    7. 'rstrip' → logprob: -22.625
    8. '```' → logprob: -24.0
    9. '   ' → logprob: -24.125
    10. 'sp' → logprob: -24.625

Token 1005: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002964746206998825
    2. '()' → logprob: -6.002964973449707
    3. ')' → logprob: -8.377964973449707
    4. '('' → logprob: -9.002964973449707
    5. '(' → logprob: -9.627964973449707
    6. '())
' → logprob: -9.752964973449707
    7. '(','' → logprob: -11.627964973449707
    8. '(',' → logprob: -14.127964973449707
    9. '(),' → logprob: -14.252964973449707
    10. '()))' → logprob: -15.002964973449707

Token 1006: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006154885049909353
    2. '<|end|>' → logprob: -5.756155014038086
    3. '       ' → logprob: -6.756155014038086
    4. 'if' → logprob: -7.006155014038086
    5. ' if' → logprob: -7.381155014038086
    6. '<|end|>' → logprob: -9.131155014038086
    7. '          ' → logprob: -9.881155014038086
    8. '   ' → logprob: -10.131155014038086
    9. '		' → logprob: -10.631155014038086
    10. '[' → logprob: -11.881155014038086

Token 1007: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20570537447929382
    2. ' if' → logprob: -1.7057054042816162
    3. '           ' → logprob: -5.455705165863037
    4. '<|end|>' → logprob: -12.955705642700195
    5. '	if' → logprob: -13.080705642700195
    6. '       ' → logprob: -13.205705642700195
    7. '          ' → logprob: -13.455705642700195
    8. '            ' → logprob: -13.830705642700195
    9. '               ' → logprob: -14.580705642700195
    10. 'If' → logprob: -14.955705642700195

Token 1008: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00012773419439326972
    2. ' h' → logprob: -9.000127792358398
    3. '(h' → logprob: -12.375127792358398
    4. '(' → logprob: -17.1251277923584
    5. '	h' → logprob: -18.2501277923584
    6. ' (' → logprob: -18.3751277923584
    7. '[h' → logprob: -20.7501277923584
    8. '   ' → logprob: -21.3751277923584
    9. '<h' → logprob: -21.8751277923584
    10. '_h' → logprob: -22.1251277923584

Token 1009: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1602427214384079
    2. ' ==' → logprob: -1.9102426767349243
    3. '=' → logprob: -11.410243034362793
    4. '===' → logprob: -12.535243034362793
    5. ')==' → logprob: -13.910243034362793
    6. '()==' → logprob: -14.285243034362793
    7. '==
' → logprob: -14.410243034362793
    8. ' ' → logprob: -15.035243034362793
    9. '```' → logprob: -15.160243034362793
    10. '0' → logprob: -15.285243034362793

Token 1010: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'w' → logprob: -14.000075340270996
    4. ' w' → logprob: -18.625076293945312
    5. '
' → logprob: -19.125076293945312
    6. '۰' → logprob: -19.625076293945312
    7. '=' → logprob: -20.000076293945312
    8. '  ' → logprob: -20.375076293945312
    9. '

' → logprob: -20.500076293945312
    10. '   ' → logprob: -20.625076293945312

Token 1011: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. 'w' → logprob: -15.750000953674316
    4. '
' → logprob: -19.375
    5. '```' → logprob: -21.875
    6. '-' → logprob: -22.125
    7. '۰' → logprob: -22.5
    8. 'and' → logprob: -22.75
    9. '

' → logprob: -22.75
    10. ' w' → logprob: -22.875

Token 1012: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25195640325546265
    2. 'and' → logprob: -1.5019564628601074
    3. ' or' → logprob: -10.87695598602295
    4. ' ' → logprob: -13.00195598602295
    5. '0' → logprob: -13.25195598602295
    6. '   ' → logprob: -13.50195598602295
    7. '           ' → logprob: -13.62695598602295
    8. '	and' → logprob: -13.62695598602295
    9. 'or' → logprob: -15.62695598602295
    10. '               ' → logprob: -15.87695598602295

Token 1013: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005233882926404476
    2. ' w' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.505233764648438
    4. '	w' → logprob: -19.130233764648438
    5. '           ' → logprob: -20.755233764648438
    6. '  ' → logprob: -20.755233764648438
    7. '       ' → logprob: -21.005233764648438
    8. '    ' → logprob: -21.005233764648438
    9. ' ' → logprob: -21.630233764648438
    10. '
' → logprob: -22.505233764648438

Token 1014: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1269419640302658
    2. ' ==' → logprob: -2.1269419193267822
    3. '=' → logprob: -12.126941680908203
    4. ')==' → logprob: -13.126941680908203
    5. '===' → logprob: -13.376941680908203
    6. '<|end|>' → logprob: -13.626941680908203
    7. '0' → logprob: -13.751941680908203
    8. '==
' → logprob: -14.001941680908203
    9. '()==' → logprob: -14.251941680908203
    10. ']==' → logprob: -14.501941680908203

Token 1015: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -21.375001907348633
    4. '۰' → logprob: -21.500001907348633
    5. '
' → logprob: -23.250001907348633
    6. '   ' → logprob: -23.375001907348633
    7. '```' → logprob: -23.500001907348633
    8. '=' → logprob: -24.000001907348633
    9. '০' → logprob: -24.250001907348633
    10. '०' → logprob: -24.500001907348633

Token 1016: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -18.25000762939453
    4. '۰' → logprob: -20.25000762939453
    5. '<|end|>' → logprob: -20.37500762939453
    6. '   ' → logprob: -20.50000762939453
    7. '=' → logprob: -21.00000762939453
    8. '  ' → logprob: -21.81250762939453
    9. '```' → logprob: -21.81250762939453
    10. '
' → logprob: -22.12500762939453

Token 1017: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5252262949943542
    2. ':
' → logprob: -0.9002262949943542
    3. '               ' → logprob: -6.40022611618042
    4. '           ' → logprob: -8.150226593017578
    5. ':return' → logprob: -9.025226593017578
    6. '):
' → logprob: -11.525226593017578
    7. ',' → logprob: -12.650226593017578
    8. '                   ' → logprob: -13.025226593017578
    9. '():
' → logprob: -13.025226593017578
    10. ':
' → logprob: -13.150226593017578

Token 1018: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00038169484469108284
    2. ':' → logprob: -8.625381469726562
    3. ':
' → logprob: -8.750381469726562
    4. '           ' → logprob: -10.500381469726562
    5. '                   ' → logprob: -11.875381469726562
    6. '   ' → logprob: -13.125381469726562
    7. '	           ' → logprob: -13.125381469726562
    8. '              ' → logprob: -13.750381469726562
    9. '			' → logprob: -14.000381469726562
    10. ',' → logprob: -14.375381469726562

Token 1019: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.004831668920814991
    2. '               ' → logprob: -6.004831790924072
    3. 'return' → logprob: -6.754831790924072
    4. ' break' → logprob: -6.754831790924072
    5. '	break' → logprob: -10.879831314086914
    6. '                   ' → logprob: -12.879831314086914
    7. '           ' → logprob: -14.629831314086914
    8. '_break' → logprob: -14.754831314086914
    9. ' return' → logprob: -15.629831314086914
    10. '
' → logprob: -16.504831314086914

Token 1020: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012068998767063022
    2. '            
' → logprob: -7.251206874847412
    3. '<|end|>' → logprob: -8.12620735168457
    4. '
' → logprob: -9.12620735168457
    5. '<|end|>' → logprob: -10.50120735168457
    6. '       ' → logprob: -11.12620735168457
    7. '    
' → logprob: -11.75120735168457
    8. '        
' → logprob: -11.87620735168457
    9. '  
' → logprob: -12.50120735168457
    10. '           
' → logprob: -12.50120735168457

Token 1021: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009973214473575354
    2. '       ' → logprob: -7.625997543334961
    3. '
' → logprob: -7.875997543334961
    4. '   ' → logprob: -10.125997543334961
    5. '            
' → logprob: -10.250997543334961
    6. '```' → logprob: -11.500997543334961
    7. '<|end|>' → logprob: -12.125997543334961
    8. ' lines' → logprob: -12.125997543334961
    9. '	       ' → logprob: -12.750997543334961
    10. 'n' → logprob: -12.875997543334961

Token 1022: ' lines' (ID: 8698)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2533394992351532
    2. 'lines' (adapté à ' lines') → logprob: -1.5033395290374756
    3. '           ' → logprob: -6.7533392906188965
    4. ' lines' → logprob: -9.628339767456055
    5. ' grid' → logprob: -10.003339767456055
    6. 'bar' → logprob: -10.128339767456055
    7. 'rows' → logprob: -10.253339767456055
    8. 'line' → logprob: -11.253339767456055
    9. 'bars' → logprob: -12.003339767456055
    10. '   ' → logprob: -12.003339767456055

Token 1023: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741651117801666
    2. '=' → logprob: -0.9741650819778442
    3. '=[]' → logprob: -9.599164962768555
    4. '=[]
' → logprob: -11.599164962768555
    5. '           ' → logprob: -12.474164962768555
    6. '[]' → logprob: -13.974164962768555
    7. '       ' → logprob: -14.099164962768555
    8. '.append' → logprob: -14.224164962768555
    9. '=[' → logprob: -14.349164962768555
    10. '   ' → logprob: -14.349164962768555

Token 1024: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05100681260228157
    2. '[input' → logprob: -3.05100679397583
    3. '[ind' → logprob: -7.80100679397583
    4. '[]
' → logprob: -7.80100679397583
    5. '[int' → logprob: -8.051007270812988
    6. '[str' → logprob: -8.551007270812988
    7. '[list' → logprob: -8.676007270812988
    8. ' [' → logprob: -9.551007270812988
    9. '[item' → logprob: -9.551007270812988
    10. '[id' → logprob: -9.676007270812988

Token 1025: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1472419600977446e-06
    2. ' input' → logprob: -13.750000953674316
    3. '<input' → logprob: -21.375001907348633
    4. '(input' → logprob: -22.125001907348633
    5. '[input' → logprob: -22.125001907348633
    6. '	input' → logprob: -22.750001907348633
    7. '=input' → logprob: -23.000001907348633
    8. '   ' → logprob: -23.000001907348633
    9. '
' → logprob: -23.125001907348633
    10. '           ' → logprob: -24.125001907348633

Token 1026: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0110534792765975
    2. '()' → logprob: -4.511053562164307
    3. '()
' → logprob: -12.886053085327148
    4. '.strip' → logprob: -13.011053085327148
    5. ' ().' → logprob: -15.011053085327148
    6. ' ()' → logprob: -16.01105308532715
    7. 'for' → logprob: -16.13605308532715
    8. ' for' → logprob: -16.63605308532715
    9. '   ' → logprob: -16.63605308532715
    10. '()]' → logprob: -16.88605308532715

Token 1027: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00861456897109747
    2. 'rstrip' → logprob: -4.758614540100098
    3. ' strip' → logprob: -16.758615493774414
    4. '_strip' → logprob: -18.508615493774414
    5. '(strip' → logprob: -19.758615493774414
    6. '.strip' → logprob: -21.133615493774414
    7. '-strip' → logprob: -21.508615493774414
    8. 'r' → logprob: -21.508615493774414
    9. '.rstrip' → logprob: -21.758615493774414
    10. 'replace' → logprob: -21.758615493774414

Token 1028: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00028505371301434934
    2. '('\' → logprob: -8.250285148620605
    3. ')' → logprob: -11.125285148620605
    4. '()
' → logprob: -12.625285148620605
    5. '()\' → logprob: -13.375285148620605
    6. ' for' → logprob: -13.750285148620605
    7. ' ()' → logprob: -14.000285148620605
    8. '()]' → logprob: -14.000285148620605
    9. 'for' → logprob: -14.125285148620605
    10. '())' → logprob: -14.750285148620605

Token 1029: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. '\n' → logprob: -15.25
    3. ')' → logprob: -17.0
    4. 'r' → logprob: -18.75
    5. 'newline' → logprob: -19.0
    6. ')\' → logprob: -19.5
    7. '
' → logprob: -20.0
    8. 'ndef' → logprob: -20.75
    9. ')n' → logprob: -20.875
    10. '('\' → logprob: -21.375

Token 1030: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004769495688378811
    2. '')' → logprob: -6.004769325256348
    3. '())' → logprob: -6.629769325256348
    4. '()' → logprob: -7.004769325256348
    5. '")' → logprob: -10.379769325256348
    6. ' )' → logprob: -10.629769325256348
    7. ')
' → logprob: -12.629769325256348
    8. ')]' → logprob: -14.254769325256348
    9. '）' → logprob: -14.504769325256348
    10. ').' → logprob: -14.504769325256348

Token 1031: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023575274273753166
    2. 'for' → logprob: -4.273575305938721
    3. '           ' → logprob: -4.773575305938721
    4. '               ' → logprob: -7.648575305938721
    5. '()' → logprob: -8.398574829101562
    6. '	for' → logprob: -9.398574829101562
    7. '            ' → logprob: -10.148574829101562
    8. ')' → logprob: -10.898574829101562
    9. '                   ' → logprob: -11.398574829101562
    10. '		' → logprob: -11.773574829101562

Token 1032: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.5027299822540954e-05
    2. ' _' → logprob: -10.000055313110352
    3. '_in' → logprob: -12.875055313110352
    4. '_h' → logprob: -13.000055313110352
    5. '_i' → logprob: -13.125055313110352
    6. '_range' → logprob: -13.875055313110352
    7. '_
' → logprob: -14.250055313110352
    8. ' in' → logprob: -15.375055313110352
    9. '_=' → logprob: -16.00005531311035
    10. '_w' → logprob: -16.50005531311035

Token 1033: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4123958349227905
    2. 'range' → logprob: -1.1623958349227905
    3. 'in' → logprob: -3.78739595413208
    4. ' range' → logprob: -6.16239595413208
    5. '_' → logprob: -7.91239595413208
    6. '_range' → logprob: -9.787395477294922
    7. 'i' → logprob: -12.537395477294922
    8. '	range' → logprob: -13.162395477294922
    9. '
' → logprob: -13.537395477294922
    10. '_in' → logprob: -13.537395477294922

Token 1034: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007112398743629456
    2. ' range' → logprob: -7.250711441040039
    3. '_range' → logprob: -13.625711441040039
    4. '_' → logprob: -16.75071144104004
    5. '
' → logprob: -18.50071144104004
    6. '	range' → logprob: -19.50071144104004
    7. '   ' → logprob: -20.00071144104004
    8. '(range' → logprob: -20.37571144104004
    9. ' ' → logprob: -21.12571144104004
    10. '_h' → logprob: -21.62571144104004

Token 1035: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.300083648762666e-05
    2. 'h' → logprob: -9.875053405761719
    3. '           ' → logprob: -13.500053405761719
    4. ' h' → logprob: -17.00005340576172
    5. '	h' → logprob: -17.25005340576172
    6. '               ' → logprob: -17.75005340576172
    7. '       ' → logprob: -18.37505340576172
    8. '(' → logprob: -18.75005340576172
    9. '=h' → logprob: -19.12505340576172
    10. '                   ' → logprob: -19.50005340576172

Token 1036: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02384047769010067
    2. ']' → logprob: -3.7738404273986816
    3. ')' → logprob: -7.648840427398682
    4. '           ' → logprob: -9.39884090423584
    5. ']
' → logprob: -11.27384090423584
    6. ')]
' → logprob: -11.52384090423584
    7. '       ' → logprob: -11.77384090423584
    8. '])' → logprob: -13.27384090423584
    9. '               ' → logprob: -14.64884090423584
    10. '`]' → logprob: -14.77384090423584

Token 1037: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029846295714378357
    2. '       ' → logprob: -3.52984619140625
    3. '
' → logprob: -10.15484619140625
    4. '   ' → logprob: -10.40484619140625
    5. '               ' → logprob: -11.52984619140625
    6. '        
' → logprob: -12.27984619140625
    7. '            
' → logprob: -12.90484619140625
    8. '          ' → logprob: -13.15484619140625
    9. 'ch' → logprob: -13.65484619140625
    10. ' chocolate' → logprob: -13.65484619140625

Token 1038: ' bar' (ID: 3608)
  Prédit: 'bar'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bar' (adapté à ' bar') → logprob: -0.16197772324085236
    2. 'ch' → logprob: -1.911977767944336
    3. ' bar' → logprob: -7.286977767944336
    4. 'cb' → logprob: -7.536977767944336
    5. ' chocolate' → logprob: -7.786977767944336
    6. '           ' → logprob: -9.161977767944336
    7. '       ' → logprob: -12.911977767944336
    8. '               ' → logprob: -13.536977767944336
    9. 'chip' → logprob: -13.536977767944336
    10. 'c' → logprob: -13.661977767944336

Token 1039: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033646274358034134
    2. '=' → logprob: -3.40864634513855
    3. '<|end|>' → logprob: -15.158646583557129
    4. '=create' → logprob: -17.033645629882812
    5. '<|end|>' → logprob: -17.158645629882812
    6. '   ' → logprob: -17.408645629882812
    7. ' =
' → logprob: -17.533645629882812
    8. ':' → logprob: -17.658645629882812
    9. ' ' → logprob: -17.783645629882812
    10. ')' → logprob: -18.408645629882812

Token 1040: ' Chocolate' (ID: 54599)
  Prédit: 'Chocolate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chocolate' → logprob: -0.25193214416503906
    2. ' Chocolate' → logprob: -1.501932144165039
    3. ' chocolate' → logprob: -12.876932144165039
    4. 'Ch' → logprob: -15.251932144165039
    5. ' Chocol' → logprob: -15.626932144165039
    6. ' Cocoa' → logprob: -19.37693214416504
    7. 'Chess' → logprob: -19.75193214416504
    8. 'self' → logprob: -20.25193214416504
    9. '   ' → logprob: -20.50193214416504
    10. 'ch' → logprob: -20.50193214416504

Token 1041: 'Bar' (ID: 4622)
  Prédit: 'Bar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bar' → logprob: -4.320199877838604e-07
    2. 'bar' → logprob: -16.0
    3. ' Bar' → logprob: -16.25
    4. '_bar' → logprob: -17.125
    5. 'Бар' → logprob: -17.75
    6. '
' → logprob: -18.0
    7. 'Factory' → logprob: -18.25
    8. 'Barcode' → logprob: -18.875
    9. 'Chocolate' → logprob: -19.125
    10. '.Bar' → logprob: -19.125

Token 1042: 'Factory' (ID: 4870)
  Prédit: 'Factory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factory' → logprob: -0.0009292102768085897
    2. '.factory' → logprob: -7.875929355621338
    3. 'factory' → logprob: -8.12592887878418
    4. '.' → logprob: -9.25092887878418
    5. '.from' → logprob: -10.50092887878418
    6. ' =' → logprob: -10.50092887878418
    7. '=' → logprob: -10.62592887878418
    8. '_factory' → logprob: -10.62592887878418
    9. '(h' → logprob: -10.87592887878418
    10. '.Factory' → logprob: -11.25092887878418

Token 1043: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -7.076218025758862e-05
    2. '.' → logprob: -9.875070571899414
    3. 'from' → logprob: -11.250070571899414
    4. ' .' → logprob: -13.000070571899414
    5. '   ' → logprob: -13.500070571899414
    6. '.From' → logprob: -14.500070571899414
    7. '	from' → logprob: -14.750070571899414
    8. '<|end|>' → logprob: -15.250070571899414
    9. '#from' → logprob: -15.875070571899414
    10. '().' → logprob: -15.875070571899414

Token 1044: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.6286106983898208e-05
    2. 'input' → logprob: -11.625016212463379
    3. 'Input' → logprob: -11.875016212463379
    4. '_code' → logprob: -16.000017166137695
    5. '_output' → logprob: -16.500017166137695
    6. '_inputs' → logprob: -16.625017166137695
    7. '_INPUT' → logprob: -17.750017166137695
    8. '```' → logprob: -17.875017166137695
    9. '_Input' → logprob: -18.250017166137695
    10. 'import' → logprob: -18.500017166137695

Token 1045: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.128163257315464e-07
    2. 'h' → logprob: -16.0
    3. '(' → logprob: -16.75
    4. '(
' → logprob: -17.5
    5. '           ' → logprob: -19.875
    6. '
' → logprob: -20.375
    7. '(H' → logprob: -20.5
    8. '	h' → logprob: -20.625
    9. '(w' → logprob: -20.75
    10. ' (' → logprob: -21.0

Token 1046: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011094938963651657
    2. ',w' → logprob: -6.876109600067139
    3. ' ,' → logprob: -10.50110912322998
    4. '           ' → logprob: -10.62610912322998
    5. 'w' → logprob: -10.87610912322998
    6. ',
' → logprob: -12.50110912322998
    7. '   ' → logprob: -14.37610912322998
    8. '               ' → logprob: -14.50110912322998
    9. ' w' → logprob: -15.12610912322998
    10. '       ' → logprob: -15.12610912322998

Token 1047: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0005530327325686812
    2. ' w' → logprob: -7.500553131103516
    3. '           ' → logprob: -16.250553131103516
    4. '
' → logprob: -19.875553131103516
    5. '   ' → logprob: -20.375553131103516
    6. '       ' → logprob: -20.625553131103516
    7. '	w' → logprob: -20.875553131103516
    8. '               ' → logprob: -21.000553131103516
    9. '            ' → logprob: -21.250553131103516
    10. '          ' → logprob: -22.000553131103516

Token 1048: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4140441635390744e-05
    2. ' ,' → logprob: -11.250014305114746
    3. '           ' → logprob: -14.125014305114746
    4. ',
' → logprob: -16.12501335144043
    5. '(lines' → logprob: -16.50001335144043
    6. 'lines' → logprob: -16.62501335144043
    7. ' lines' → logprob: -16.87501335144043
    8. ',line' → logprob: -17.37501335144043
    9. '               ' → logprob: -18.87501335144043
    10. '   ' → logprob: -18.87501335144043

Token 1049: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.000553151941858232
    2. ' lines' → logprob: -7.500553131103516
    3. '           ' → logprob: -16.000553131103516
    4. '	lines' → logprob: -18.000553131103516
    5. '(lines' → logprob: -18.250553131103516
    6. '   ' → logprob: -18.500553131103516
    7. 'line' → logprob: -19.000553131103516
    8. '               ' → logprob: -19.750553131103516
    9. '       ' → logprob: -20.250553131103516
    10. '                   ' → logprob: -20.625553131103516

Token 1050: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.44117239117622375
    2. ')' → logprob: -1.1911723613739014
    3. '           ' → logprob: -2.9411723613739014
    4. '       ' → logprob: -10.44117259979248
    5. ')
' → logprob: -12.06617259979248
    6. ' )
' → logprob: -13.19117259979248
    7. '               ' → logprob: -13.31617259979248
    8. '   ' → logprob: -13.44117259979248
    9. ')

' → logprob: -13.44117259979248
    10. '          ' → logprob: -13.69117259979248

Token 1051: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003232136834412813
    2. 'bar' → logprob: -5.878232002258301
    3. '       ' → logprob: -8.0032320022583
    4. ' bar' → logprob: -9.6282320022583
    5. 'count' → logprob: -12.0032320022583
    6. '   ' → logprob: -12.3782320022583
    7. 'self' → logprob: -12.5032320022583
    8. 'token' → logprob: -12.6282320022583
    9. 'result' → logprob: -13.2532320022583
    10. '<|end|>' → logprob: -13.3782320022583

Token 1052: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.09601585566997528
    2. 'pieces' → logprob: -2.5960159301757812
    3. 'count' → logprob: -4.471015930175781
    4. 'self' → logprob: -6.096015930175781
    5. ' result' → logprob: -6.721015930175781
    6. 'answer' → logprob: -7.096015930175781
    7. '           ' → logprob: -7.471015930175781
    8. 'res' → logprob: -8.221015930175781
    9. ' pieces' → logprob: -8.471015930175781
    10. 'piece' → logprob: -9.096015930175781

Token 1053: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14498171210289001
    2. '=' → logprob: -2.019981622695923
    3. '.' → logprob: -6.269981861114502
    4. 's' → logprob: -8.519981384277344
    5. '.append' → logprob: -9.269981384277344
    6. '   ' → logprob: -10.894981384277344
    7. '       ' → logprob: -11.269981384277344
    8. '           ' → logprob: -11.269981384277344
    9. '.=' → logprob: -11.769981384277344
    10. '<|end|>' → logprob: -11.769981384277344

Token 1054: ' bar' (ID: 3608)
  Prédit: 'bar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bar' → logprob: -0.011047814972698689
    2. ' bar' → logprob: -4.511047840118408
    3. 'str' → logprob: -18.38604736328125
    4. '	bar' → logprob: -18.51104736328125
    5. '(bar' → logprob: -19.51104736328125
    6. 'b' → logprob: -21.13604736328125
    7. '           ' → logprob: -21.63604736328125
    8. '   ' → logprob: -22.01104736328125
    9. '
' → logprob: -23.13604736328125
    10. '_bar' → logprob: -23.26104736328125

Token 1055: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.3544423381972592e-05
    2. '.' → logprob: -11.75001335144043
    3. 'count' → logprob: -12.12501335144043
    4. ' .' → logprob: -16.00001335144043
    5. '.calculate' → logprob: -16.62501335144043
    6. ' count' → logprob: -16.87501335144043
    7. '	count' → logprob: -17.25001335144043
    8. '.
' → logprob: -17.87501335144043
    9. '.Count' → logprob: -18.25001335144043
    10. '=count' → logprob: -18.25001335144043

Token 1056: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00026753442944027483
    2. '()' → logprob: -8.87526798248291
    3. '_' → logprob: -9.62526798248291
    4. 'pieces' → logprob: -10.00026798248291
    5. '(' → logprob: -12.50026798248291
    6. '_parts' → logprob: -13.00026798248291
    7. 'Pieces' → logprob: -13.37526798248291
    8. '_segments' → logprob: -13.62526798248291
    9. '_piece' → logprob: -14.00026798248291
    10. '_points' → logprob: -14.12526798248291

Token 1057: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.00020377879263833165
    2. 'pieces' → logprob: -8.500204086303711
    3. ' pieces' → logprob: -16.37520408630371
    4. 'ie' → logprob: -17.00020408630371
    5. '```' → logprob: -17.00020408630371
    6. 'i' → logprob: -18.00020408630371
    7. '_' → logprob: -18.12520408630371
    8. 'e' → logprob: -18.37520408630371
    9. 'Pieces' → logprob: -18.37520408630371
    10. 'iec' → logprob: -18.37520408630371

Token 1058: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4373924136161804
    2. '
' → logprob: -1.1873924732208252
    3. '       ' → logprob: -4.562392234802246
    4. '<|end|>' → logprob: -4.562392234802246
    5. ')' → logprob: -4.687392234802246
    6. ')
' → logprob: -5.062392234802246
    7. 'print' → logprob: -5.812392234802246
    8. 'self' → logprob: -6.062392234802246
    9. '.append' → logprob: -6.312392234802246
    10. '()
' → logprob: -6.937392234802246

Token 1059: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00711067533120513
    2. '
' → logprob: -5.007110595703125
    3. 'self' → logprob: -8.632110595703125
    4. '<|end|>' → logprob: -9.507110595703125
    5. '            
' → logprob: -9.882110595703125
    6. '       ' → logprob: -10.507110595703125
    7. ' self' → logprob: -10.507110595703125
    8. '<|end|>' → logprob: -11.632110595703125
    9. '    
' → logprob: -12.507110595703125
    10. '```' → logprob: -12.507110595703125

Token 1060: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0031888822559267282
    2. '           ' → logprob: -6.0031890869140625
    3. ' self' → logprob: -7.2531890869140625
    4. 'print' → logprob: -12.753189086914062
    5. '
' → logprob: -13.628189086914062
    6. '       ' → logprob: -14.628189086914062
    7. '            
' → logprob: -15.753189086914062
    8. '               ' → logprob: -16.628189086914062
    9. '   ' → logprob: -16.753189086914062
    10. '	self' → logprob: -16.753189086914062

Token 1061: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.038054004311561584
    2. 'results' → logprob: -3.2880539894104004
    3. ' results' → logprob: -12.288054466247559
    4. '	results' → logprob: -12.788054466247559
    5. '.' → logprob: -12.913054466247559
    6. ' .' → logprob: -13.913054466247559
    7. '
' → logprob: -14.663054466247559
    8. '   ' → logprob: -15.163054466247559
    9. '_results' → logprob: -15.288054466247559
    10. '.
' → logprob: -15.663054466247559

Token 1062: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.861651490908116e-05
    2. '.' → logprob: -9.625068664550781
    3. '.app' → logprob: -13.750068664550781
    4. '.extend' → logprob: -13.875068664550781
    5. '.ap' → logprob: -15.500068664550781
    6. '.push' → logprob: -15.875068664550781
    7. '.setdefault' → logprob: -16.62506866455078
    8. '.insert' → logprob: -17.75006866455078
    9. '.add' → logprob: -18.00006866455078
    10. '.Append' → logprob: -18.12506866455078

Token 1063: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.6405310816480778e-05
    2. '(' → logprob: -11.500016212463379
    3. 'result' → logprob: -12.000016212463379
    4. '(
' → logprob: -17.625017166137695
    5. '=result' → logprob: -18.250017166137695
    6. '(results' → logprob: -18.625017166137695
    7. '(str' → logprob: -19.250017166137695
    8. ' result' → logprob: -19.375017166137695
    9. '[result' → logprob: -19.750017166137695
    10. '(resultado' → logprob: -20.250017166137695

Token 1064: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0675206184387207
    2. '<|end|>' → logprob: -3.3175206184387207
    3. '           ' → logprob: -3.6925206184387207
    4. '       ' → logprob: -6.067520618438721
    5. '<|end|>' → logprob: -7.192520618438721
    6. ')
' → logprob: -7.692520618438721
    7. '
' → logprob: -8.192520141601562
    8. '   ' → logprob: -9.442520141601562
    9. '               ' → logprob: -9.567520141601562
    10. '		' → logprob: -11.067520141601562

Token 1065: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08755309879779816
    2. '<|end|>' → logprob: -3.212553024291992
    3. '
' → logprob: -3.337553024291992
    4. 'def' → logprob: -5.087553024291992
    5. ' def' → logprob: -7.212553024291992
    6. '    
' → logprob: -7.337553024291992
    7. '```' → logprob: -8.837553024291992
    8. '	def' → logprob: -8.962553024291992
    9. '<|end|>' → logprob: -9.337553024291992
    10. '       ' → logprob: -9.837553024291992

Token 1066: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009396891109645367
    2. ' def' → logprob: -7.000939846038818
    3. '   ' → logprob: -10.50093936920166
    4. '
' → logprob: -14.37593936920166
    5. '	def' → logprob: -16.125940322875977
    6. '    
' → logprob: -18.500940322875977
    7. ' ' → logprob: -18.875940322875977
    8. '_def' → logprob: -20.250940322875977
    9. '```' → logprob: -20.625940322875977
    10. '       ' → logprob: -21.125940322875977

Token 1067: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015574338613077998
    2. 'output' → logprob: -9.000155448913574
    3. ' print' → logprob: -10.500155448913574
    4. 'display' → logprob: -12.500155448913574
    5. 'get' → logprob: -14.250155448913574
    6. ' output' → logprob: -15.000155448913574
    7. 'write' → logprob: -17.37515640258789
    8. 'show' → logprob: -19.50015640258789
    9. 'report' → logprob: -19.75015640258789
    10. 'format' → logprob: -20.75015640258789

Token 1068: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00044092073221690953
    2. '(' → logprob: -8.00044059753418
    3. 'self' → logprob: -9.50044059753418
    4. '()' → logprob: -11.25044059753418
    5. '_results' → logprob: -12.00044059753418
    6. '   ' → logprob: -12.12544059753418
    7. '(
' → logprob: -12.75044059753418
    8. 'def' → logprob: -14.00044059753418
    9. ' (' → logprob: -14.62544059753418
    10. '_' → logprob: -14.87544059753418

Token 1069: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2753320634365082
    2. '):
' → logprob: -1.5253320932388306
    3. 'self' → logprob: -4.275331974029541
    4. ')' → logprob: -5.275331974029541
    5. '   ' → logprob: -6.150331974029541
    6. '(self' → logprob: -6.400331974029541
    7. '       ' → logprob: -8.9003324508667
    8. 'def' → logprob: -9.6503324508667
    9. '):

' → logprob: -10.7753324508667
    10. ' ' → logprob: -11.1503324508667

Token 1070: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022348284255713224
    2. '   ' → logprob: -6.127234935760498
    3. 'self' → logprob: -11.25223445892334
    4. 'def' → logprob: -11.37723445892334
    5. 'for' → logprob: -11.75223445892334
    6. '(self' → logprob: -11.75223445892334
    7. ' for' → logprob: -12.37723445892334
    8. '           ' → logprob: -13.75223445892334
    9. ' ' → logprob: -14.00223445892334
    10. ' self' → logprob: -14.12723445892334

Token 1071: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4140792787075043
    2. '       ' → logprob: -1.1640793085098267
    3. ' for' → logprob: -3.664079189300537
    4. '   ' → logprob: -6.789079189300537
    5. 'def' → logprob: -9.789079666137695
    6. '```' → logprob: -10.789079666137695
    7. 'print' → logprob: -12.289079666137695
    8. '	for' → logprob: -12.539079666137695
    9. '
' → logprob: -13.039079666137695
    10. '           ' → logprob: -15.414079666137695

Token 1072: ' r' (ID: 428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6998624205589294
    2. 'result' → logprob: -0.6998624205589294
    3. ' res' → logprob: -5.199862480163574
    4. ' result' → logprob: -6.949862480163574
    5. 'r' → logprob: -8.449862480163574
    6. ' r' → logprob: -12.949862480163574
    7. '   ' → logprob: -15.324862480163574
    8. '       ' → logprob: -16.574861526489258
    9. 'answer' → logprob: -16.824861526489258
    10. 'ans' → logprob: -18.949861526489258

Token 1073: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013171432074159384
    2. 'es' → logprob: -6.751317024230957
    3. 'in' → logprob: -9.751317024230957
    4. 'e' → logprob: -10.376317024230957
    5. ' ' → logprob: -10.876317024230957
    6. 'eturn' → logprob: -11.001317024230957
    7. 'ender' → logprob: -12.251317024230957
    8. 'ef' → logprob: -12.376317024230957
    9. 'ange' → logprob: -12.751317024230957
    10. 'int' → logprob: -13.126317024230957

Token 1074: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.935296834039036e-06
    2. ' self' → logprob: -12.75000286102295
    3. '   ' → logprob: -20.000003814697266
    4. '(self' → logprob: -21.000003814697266
    5. ' ' → logprob: -21.500003814697266
    6. '
' → logprob: -21.625003814697266
    7. 'result' → logprob: -22.750003814697266
    8. '```' → logprob: -23.625003814697266
    9. 'range' → logprob: -23.625003814697266
    10. '[self' → logprob: -24.000003814697266

Token 1075: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -7.743758760625497e-05
    2. 'results' → logprob: -9.500077247619629
    3. 's' → logprob: -13.875077247619629
    4. ' .' → logprob: -14.375077247619629
    5. '.s' → logprob: -14.750077247619629
    6. '	results' → logprob: -15.500077247619629
    7. '.result' → logprob: -16.375078201293945
    8. '.res' → logprob: -16.375078201293945
    9. '.' → logprob: -16.625078201293945
    10. '(results' → logprob: -16.875078201293945

Token 1076: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7702776789665222
    2. 'print' → logprob: -1.270277738571167
    3. ':' → logprob: -1.395277738571167
    4. '           ' → logprob: -5.270277500152588
    5. '       ' → logprob: -6.895277500152588
    6. ' print' → logprob: -7.270277500152588
    7. '):
' → logprob: -7.395277500152588
    8. '.print' → logprob: -7.770277500152588
    9. '():
' → logprob: -8.520277976989746
    10. ',' → logprob: -9.145277976989746

Token 1077: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02372138574719429
    2. 'print' → logprob: -3.77372145652771
    3. '       ' → logprob: -8.398721694946289
    4. ' print' → logprob: -8.648721694946289
    5. '```' → logprob: -9.898721694946289
    6. '   ' → logprob: -10.898721694946289
    7. '	       ' → logprob: -13.273721694946289
    8. '	print' → logprob: -13.273721694946289
    9. '.print' → logprob: -13.648721694946289
    10. '_print' → logprob: -14.773721694946289

Token 1078: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.250000953674316
    3. '           ' → logprob: -16.25
    4. '```' → logprob: -22.0
    5. '	print' → logprob: -23.125
    6. '   ' → logprob: -23.25
    7. '
' → logprob: -24.25
    8. 'println' → logprob: -24.625
    9. 'printf' → logprob: -25.0
    10. '       ' → logprob: -25.25

Token 1079: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0004309076175559312
    2. 'r' → logprob: -7.750431060791016
    3. ' r' → logprob: -15.750431060791016
    4. '(' → logprob: -16.375431060791016
    5. '(f' → logprob: -17.500431060791016
    6. '(
' → logprob: -20.125431060791016
    7. '	r' → logprob: -20.500431060791016
    8. '_r' → logprob: -21.875431060791016
    9. '=r' → logprob: -22.000431060791016
    10. 'f' → logprob: -22.000431060791016

Token 1080: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '())' → logprob: -13.250003814697266
    3. '()' → logprob: -13.500003814697266
    4. ')
' → logprob: -14.000003814697266
    5. ' )' → logprob: -16.250003814697266
    6. ')`' → logprob: -17.375003814697266
    7. '       ' → logprob: -17.750003814697266
    8. '))' → logprob: -18.125003814697266
    9. '   ' → logprob: -18.625003814697266
    10. '')' → logprob: -18.875003814697266

Token 1081: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006079599261283875
    2. 'def' → logprob: -7.750607967376709
    3. 'solver' → logprob: -9.00060749053955
    4. '```' → logprob: -10.50060749053955
    5. ' if' → logprob: -10.62560749053955
    6. 'Chocolate' → logprob: -14.50060749053955
    7. '
' → logprob: -14.87560749053955
    8. '#' → logprob: -15.25060749053955
    9. 's' → logprob: -15.37560749053955
    10. '    
' → logprob: -15.75060749053955

Token 1082: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5759456157684326
    2. '__' → logprob: -0.8259456157684326
    3. 'name' → logprob: -12.700945854187012
    4. '_name' → logprob: -13.325945854187012
    5. '_' → logprob: -13.950945854187012
    6. '___' → logprob: -15.075945854187012
    7. ' ' → logprob: -15.575945854187012
    8. 'Name' → logprob: -16.325944900512695
    9. '/__' → logprob: -16.950944900512695
    10. ' name' → logprob: -18.075944900512695

Token 1083: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.027915209531784058
    2. ' __' → logprob: -4.152915000915527
    3. ' ==' → logprob: -5.027915000915527
    4. 'name' → logprob: -5.402915000915527
    5. '==' → logprob: -7.527915000915527
    6. 'if' → logprob: -9.902915000915527
    7. '__.__' → logprob: -10.027915000915527
    8. 'main' → logprob: -11.027915000915527
    9. '__':
' → logprob: -11.027915000915527
    10. '__":
' → logprob: -11.402915000915527

Token 1084: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2200749754119897e-06
    2. '__.__' → logprob: -13.375001907348633
    3. '__
' → logprob: -15.625001907348633
    4. '__.' → logprob: -15.750001907348633
    5. 'name' → logprob: -16.125001907348633
    6. '____' → logprob: -16.375001907348633
    7. '==' → logprob: -16.750001907348633
    8. ' ==' → logprob: -17.250001907348633
    9. '__('' → logprob: -17.625001907348633
    10. '___' → logprob: -17.625001907348633

Token 1085: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6430286169052124
    2. '__' → logprob: -1.1430286169052124
    3. '==' → logprob: -1.8930286169052124
    4. '=="' → logprob: -5.518028736114502
    5. '=='' → logprob: -7.143028736114502
    6. '==
' → logprob: -11.268028259277344
    7. '   ' → logprob: -13.143028259277344
    8. '.__' → logprob: -13.143028259277344
    9. '_' → logprob: -13.268028259277344
    10. ' __' → logprob: -13.393028259277344

Token 1086: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048598840832710266
    2. ''' → logprob: -3.0485987663269043
    3. ' "__' → logprob: -11.923599243164062
    4. '__' → logprob: -12.548599243164062
    5. ' '__' → logprob: -14.673599243164062
    6. ''"' → logprob: -15.173599243164062
    7. '"class' → logprob: -15.548599243164062
    8. '   ' → logprob: -16.298599243164062
    9. '"'' → logprob: -16.423599243164062
    10. '("__' → logprob: -17.173599243164062

Token 1087: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0024821963161230087
    2. '__' → logprob: -6.0024824142456055
    3. 'name' → logprob: -12.002482414245605
    4. '_main' → logprob: -15.252482414245605
    5. ' main' → logprob: -16.50248146057129
    6. '__":
' → logprob: -16.87748146057129
    7. '"' → logprob: -17.12748146057129
    8. '__
' → logprob: -17.12748146057129
    9. '___' → logprob: -17.87748146057129
    10. 'MAIN' → logprob: -18.25248146057129

Token 1088: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0025418936274945736
    2. '__' → logprob: -6.002542018890381
    3. '__':
' → logprob: -9.627541542053223
    4. '_' → logprob: -15.752541542053223
    5. '__
' → logprob: -16.37754249572754
    6. '":
' → logprob: -17.62754249572754
    7. '__:' → logprob: -17.62754249572754
    8. '   ' → logprob: -18.87754249572754
    9. '__["' → logprob: -19.00254249572754
    10. '___' → logprob: -19.12754249572754

Token 1089: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014718878082931042
    2. ' solver' → logprob: -7.001471996307373
    3. 'solver' → logprob: -7.501471996307373
    4. '_solver' → logprob: -12.626471519470215
    5. '   ' → logprob: -13.251471519470215
    6. 'Solver' → logprob: -14.001471519470215
    7. 's' → logprob: -14.626471519470215
    8. '	s' → logprob: -15.001471519470215
    9. '    
' → logprob: -15.251471519470215
    10. '```' → logprob: -15.251471519470215

Token 1090: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.00026419671485200524
    2. ' solver' → logprob: -8.250264167785645
    3. 'Solver' → logprob: -13.875264167785645
    4. '   ' → logprob: -14.250264167785645
    5. 'sol' → logprob: -14.500264167785645
    6. 'import' → logprob: -14.625264167785645
    7. 'solve' → logprob: -15.625264167785645
    8. '_solver' → logprob: -16.37526512145996
    9. 'solution' → logprob: -16.37526512145996
    10. 'resolver' → logprob: -17.75026512145996

Token 1091: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24699190258979797
    2. '.' → logprob: -2.4969918727874756
    3. '.solve' → logprob: -2.6219918727874756
    4. '=' → logprob: -2.9969918727874756
    5. '   ' → logprob: -4.496992111206055
    6. '().' → logprob: -6.246992111206055
    7. '.s' → logprob: -7.621992111206055
    8. '_solver' → logprob: -9.746992111206055
    9. '=s' → logprob: -9.871992111206055
    10. '  ' → logprob: -10.371992111206055

Token 1092: ' Chocolate' (ID: 54599)
  Prédit: 'Chocolate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chocolate' → logprob: -0.07889099419116974
    2. ' Chocolate' → logprob: -2.5788910388946533
    3. ' chocolate' → logprob: -14.453890800476074
    4. 'Ch' → logprob: -14.578890800476074
    5. ' Chocol' → logprob: -15.078890800476074
    6. 'Chess' → logprob: -18.20389175415039
    7. '```' → logprob: -20.20389175415039
    8. '   ' → logprob: -20.57889175415039
    9. ' chocolade' → logprob: -20.57889175415039
    10. 'Solver' → logprob: -20.70389175415039

Token 1093: 'Bar' (ID: 4622)
  Prédit: 'Bar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bar' → logprob: -2.176947600673884e-05
    2. 'Solver' → logprob: -10.875021934509277
    3. '   ' → logprob: -13.250021934509277
    4. ' Bar' → logprob: -14.750021934509277
    5. 'solver' → logprob: -15.500021934509277
    6. ' solver' → logprob: -16.62502098083496
    7. '
' → logprob: -16.75002098083496
    8. 'bar' → logprob: -17.00002098083496
    9. '       ' → logprob: -17.25002098083496
    10. 'Bot' → logprob: -17.50002098083496

Token 1094: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -8.947715832618997e-05
    2. 'solver' → logprob: -9.375089645385742
    3. '.solve' → logprob: -12.875089645385742
    4. '_solver' → logprob: -14.000089645385742
    5. '()' → logprob: -14.500089645385742
    6. ' solver' → logprob: -15.375089645385742
    7. 'Solve' → logprob: -15.875089645385742
    8. 'solve' → logprob: -16.125089645385742
    9. '   ' → logprob: -17.000089645385742
    10. '()
' → logprob: -17.125089645385742

Token 1095: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03898230940103531
    2. '
' → logprob: -3.788982391357422
    3. 'solver' → logprob: -4.163982391357422
    4. '    
' → logprob: -10.163982391357422
    5. ' solver' → logprob: -11.413982391357422
    6. '_solver' → logprob: -12.413982391357422
    7. '	s' → logprob: -12.663982391357422
    8. '
' → logprob: -12.788982391357422
    9. '```' → logprob: -13.163982391357422
    10. '  ' → logprob: -13.163982391357422

Token 1096: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6934616565704346
    2. 'solver' → logprob: -0.6934616565704346
    3. ' solver' → logprob: -9.318461418151855
    4. '	s' → logprob: -9.318461418151855
    5. '
' → logprob: -9.818461418151855
    6. '_solver' → logprob: -10.568461418151855
    7. '```' → logprob: -10.693461418151855
    8. '    
' → logprob: -10.818461418151855
    9. 's' → logprob: -12.443461418151855
    10. '  ' → logprob: -12.818461418151855

Token 1097: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -1.0280383548888494e-06
    2. 'solve' → logprob: -14.500000953674316
    3. ' solver' → logprob: -14.625000953674316
    4. 'scheduler' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '```' → logprob: -20.000001907348633
    7. 'solution' → logprob: -21.625001907348633
    8. 's' → logprob: -21.625001907348633
    9. '
' → logprob: -21.875001907348633
    10. '_solver' → logprob: -22.000001907348633

Token 1098: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.0011706985533237457
    2. '.' → logprob: -6.751170635223389
    3. ' .' → logprob: -15.376171112060547
    4. '.sol' → logprob: -15.876171112060547
    5. '.run' → logprob: -16.751171112060547
    6. '.save' → logprob: -16.751171112060547
    7. '.s' → logprob: -17.501171112060547
    8. '.execute' → logprob: -17.751171112060547
    9. '.
' → logprob: -18.626171112060547
    10. '.perform' → logprob: -19.501171112060547

Token 1099: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010359067237004638
    2. 'solver' → logprob: -6.876035690307617
    3. '```' → logprob: -13.626035690307617
    4. ' solver' → logprob: -14.376035690307617
    5. '
' → logprob: -14.501035690307617
    6. '    
' → logprob: -15.126035690307617
    7. '  ' → logprob: -15.251035690307617
    8. '_solver' → logprob: -16.001035690307617
    9. '	s' → logprob: -16.001035690307617
    10. '   ' → logprob: -17.501035690307617

Token 1100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0052392068319022655
    2. 'solver' → logprob: -5.255239009857178
    3. ' solver' → logprob: -12.255239486694336
    4. '```' → logprob: -15.255239486694336
    5. '   ' → logprob: -15.380239486694336
    6. '	s' → logprob: -15.880239486694336
    7. '_solver' → logprob: -16.880239486694336
    8. '       ' → logprob: -17.255239486694336
    9. 'sol' → logprob: -18.505239486694336
    10. '  ' → logprob: -18.630239486694336

Token 1101: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.00026181264547631145
    2. '   ' → logprob: -8.250262260437012
    3. ' solver' → logprob: -14.500262260437012
    4. 'scheduler' → logprob: -18.875261306762695
    5. '```' → logprob: -19.500261306762695
    6. '_solver' → logprob: -21.125261306762695
    7. '  ' → logprob: -21.625261306762695
    8. 'sol' → logprob: -22.375261306762695
    9. 's' → logprob: -23.000261306762695
    10. 'solution' → logprob: -23.250261306762695

Token 1102: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.625004768371582
    3. 'output' → logprob: -14.125004768371582
    4. ' .' → logprob: -14.750004768371582
    5. '.input' → logprob: -15.375004768371582
    6. '.out' → logprob: -16.0000057220459
    7. '.print' → logprob: -16.1250057220459
    8. '.
' → logprob: -16.8750057220459
    9. '.py' → logprob: -16.8750057220459
    10. '​.' → logprob: -17.1250057220459

Token 1103: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1101
Tokens correctement prédits (1ère position, stricte): 505
Tokens correctement prédits (1ère position, avec adaptation): 553
Tokens correctement prédits (top 10): 933
Précision stricte (1ère position): 45.87%
Précision adaptée (1ère position): 50.23%
Précision (top 10): 84.74%
================================================================================
