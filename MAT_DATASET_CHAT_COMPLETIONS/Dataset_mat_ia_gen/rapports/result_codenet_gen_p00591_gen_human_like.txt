================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    matrix = [list(map(int, input().split())) for _ in range(n)]
    row_mins = [min(row) for row in matrix]
    col_maxs = [max(matrix[i][j] for i in range(n)) for j in range(n)]
    result = 0
    for i in range(n):
        for j in range(n):
            if matrix[i][j] == row_mins[i] and matrix[i][j] == col_maxs[j]:
                result = matrix[i][j]
                break
        if result != 0:
            break
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6244295239448547
    2. '    ' → logprob: -2.12442946434021
    3. '    
' → logprob: -2.62442946434021
    4. '\' → logprob: -2.87442946434021
    5. '\n' → logprob: -2.87442946434021
    6. '```' → logprob: -3.24942946434021
    7. ' ' → logprob: -3.37442946434021
    8. ' 
' → logprob: -3.62442946434021
    9. '  
' → logprob: -4.249429702758789
    10. '     
' → logprob: -4.249429702758789

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010247779078781605
    2. '    ' → logprob: -4.760247707366943
    3. '```' → logprob: -7.260247707366943
    4. 'print' → logprob: -9.260248184204102
    5. 'i' → logprob: -9.385248184204102
    6. '   ' → logprob: -9.385248184204102
    7. 'pass' → logprob: -9.385248184204102
    8. 'a' → logprob: -9.385248184204102
    9. 's' → logprob: -9.510248184204102
    10. 'try' → logprob: -9.760248184204102

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9284094572067261
    2. 'u' → logprob: -1.553409457206726
    3. '=' → logprob: -2.1784095764160156
    4. '+' → logprob: -2.3034095764160156
    5. 'o' → logprob: -2.8034095764160156
    6. '   ' → logprob: -3.5534095764160156
    7. '_' → logprob: -4.178409576416016
    8. '.' → logprob: -4.428409576416016
    9. '%' → logprob: -4.553409576416016
    10. ' =' → logprob: -4.928409576416016

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4866943657398224
    2. ' input' → logprob: -1.1116943359375
    3. 'input' → logprob: -3.1116943359375
    4. 'int' → logprob: -4.6116943359375
    5. ' n' → logprob: -6.6116943359375
    6. ' ' → logprob: -8.1116943359375
    7. 'n' → logprob: -9.9866943359375
    8. '```' → logprob: -10.6116943359375
    9. ' randint' → logprob: -10.7366943359375
    10. ' a' → logprob: -11.1116943359375

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06997556239366531
    2. '(input' → logprob: -2.6949756145477295
    3. '()' → logprob: -11.194975852966309
    4. 'input' → logprob: -11.444975852966309
    5. ' (' → logprob: -12.444975852966309
    6. '(
' → logprob: -12.694975852966309
    7. '(n' → logprob: -13.069975852966309
    8. '('' → logprob: -14.319975852966309
    9. '(

' → logprob: -14.694975852966309
    10. '(int' → logprob: -14.694975852966309

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7426531910896301
    2. ')' → logprob: -0.9926531910896301
    3. '()' → logprob: -2.3676531314849854
    4. '())' → logprob: -2.9926531314849854
    5. '))' → logprob: -5.4926533699035645
    6. '('' → logprob: -6.8676533699035645
    7. ' ' → logprob: -6.8676533699035645
    8. '()))' → logprob: -6.9926533699035645
    9. '```' → logprob: -7.2426533699035645
    10. '(""))' → logprob: -8.367652893066406

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.959385335445404
    2. ' if' → logprob: -1.7093853950500488
    3. '<|end|>' → logprob: -1.9593853950500488
    4. ' ' → logprob: -2.209385395050049
    5. ')' → logprob: -2.209385395050049
    6. '    
' → logprob: -4.209385395050049
    7. '```' → logprob: -4.584385395050049
    8. ':' → logprob: -4.709385395050049
    9. '    ' → logprob: -4.834385395050049
    10. ' 
' → logprob: -4.834385395050049

Token 10: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.011614441871643
    2. '   ' → logprob: -1.261614441871643
    3. '<|end|>' → logprob: -2.2616143226623535
    4. ')' → logprob: -2.3866143226623535
    5. ' if' → logprob: -2.5116143226623535
    6. '    ' → logprob: -3.5116143226623535
    7. '  ' → logprob: -4.5116143226623535
    8. ' )' → logprob: -4.5116143226623535
    9. 'if' (adapté à ' if') → logprob: -5.1366143226623535
    10. '    
' → logprob: -6.1366143226623535

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007633839268237352
    2. ' ' → logprob: -5.007633686065674
    3. ' not' → logprob: -7.632633686065674
    4. 'n' → logprob: -7.757633686065674
    5. ' ' → logprob: -12.632634162902832
    6. 'not' → logprob: -14.132634162902832
    7. '  ' → logprob: -14.257634162902832
    8. ' (' → logprob: -15.132634162902832
    9. '<|end|>' → logprob: -15.257634162902832
    10. '	n' → logprob: -15.507634162902832

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31323790550231934
    2. ' >' → logprob: -1.8132379055023193
    3. ' <=' → logprob: -2.8132379055023193
    4. ' <' → logprob: -4.188238143920898
    5. '==' → logprob: -4.438238143920898
    6. ' ' → logprob: -4.438238143920898
    7. '>' → logprob: -5.688238143920898
    8. ')' → logprob: -7.063238143920898
    9. '<|end|>' → logprob: -7.188238143920898
    10. '  ' → logprob: -7.813238143920898

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1797505021095276
    2. '0' → logprob: -1.8047504425048828
    3. '1' → logprob: -13.929750442504883
    4. ' ' → logprob: -13.929750442504883
    5. '  ' → logprob: -14.179750442504883
    6. ')' → logprob: -15.179750442504883
    7. '100' → logprob: -15.242250442504883
    8. ' -' → logprob: -15.304750442504883
    9. '20' → logprob: -15.429750442504883
    10. '<|end|>' → logprob: -15.617250442504883

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019584903493523598
    2. ' ' → logprob: -6.25195837020874
    3. '-' → logprob: -10.626958847045898
    4. ' -' → logprob: -13.126958847045898
    5. '1' → logprob: -13.501958847045898
    6. '   ' → logprob: -14.376958847045898
    7. '42' → logprob: -14.876958847045898
    8. '  ' → logprob: -15.126958847045898
    9. '```' → logprob: -15.126958847045898
    10. '4' → logprob: -15.501958847045898

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.598092684522271e-05
    2. ':
' → logprob: -10.500056266784668
    3. ' :' → logprob: -11.250056266784668
    4. '   ' → logprob: -12.500056266784668
    5. ':return' → logprob: -12.625056266784668
    6. '):' → logprob: -12.750056266784668
    7. ':\' → logprob: -13.250056266784668
    8. '       ' → logprob: -13.500056266784668
    9. '':' → logprob: -14.625056266784668
    10. '():' → logprob: -15.000056266784668

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002336758654564619
    2. '   ' → logprob: -6.8773369789123535
    3. ' break' → logprob: -6.8773369789123535
    4. '\n' → logprob: -9.127336502075195
    5. ':' → logprob: -10.502336502075195
    6. '    ' → logprob: -10.502336502075195
    7. '	break' → logprob: -10.752336502075195
    8. '\' → logprob: -11.252336502075195
    9. '      ' → logprob: -11.377336502075195
    10. ' ' → logprob: -11.627336502075195

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.1046905592083931
    2. '       ' → logprob: -2.4796905517578125
    3. 'break' (adapté à ' break') → logprob: -4.3546905517578125
    4. '   ' → logprob: -6.1046905517578125
    5. '	break' → logprob: -8.604690551757812
    6. '\n' → logprob: -9.229690551757812
    7. '_break' → logprob: -9.604690551757812
    8. '```' → logprob: -9.979690551757812
    9. '    ' → logprob: -10.104690551757812
    10. '        
' → logprob: -10.479690551757812

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2311967611312866
    2. '\n' → logprob: -1.2311967611312866
    3. '
' → logprob: -2.231196880340576
    4. '    
' → logprob: -2.481196880340576
    5. '<|end|>' → logprob: -2.481196880340576
    6. ':' → logprob: -2.856196880340576
    7. '```' → logprob: -3.606196880340576
    8. '\' → logprob: -3.856196880340576
    9. ')' → logprob: -5.106196880340576
    10. '#' → logprob: -5.356196880340576

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09031159430742264
    2. '<|end|>' → logprob: -3.7153115272521973
    3. '    
' → logprob: -3.9653115272521973
    4. '\n' → logprob: -4.590311527252197
    5. '```' → logprob: -4.715311527252197
    6. '#' → logprob: -5.465311527252197
    7. ')' → logprob: -5.465311527252197
    8. ':' → logprob: -5.715311527252197
    9. '
' → logprob: -5.840311527252197
    10. 'n' → logprob: -6.215311527252197

Token 20: ' matrix' (ID: 12248)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3427201509475708
    2. ' ' → logprob: -1.9677201509475708
    3. 'print' → logprob: -3.0927200317382812
    4. '    ' → logprob: -3.3427200317382812
    5. ')' → logprob: -3.9677200317382812
    6. '       ' → logprob: -4.592720031738281
    7. '#' → logprob: -5.592720031738281
    8. '\' → logprob: -5.717720031738281
    9. ',' → logprob: -5.842720031738281
    10. '<|end|>' → logprob: -5.842720031738281

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6221997141838074
    2. ' =' → logprob: -0.9971997141838074
    3. '=' → logprob: -2.747199773788452
    4. '_' → logprob: -3.872199773788452
    5. ' ' → logprob: -5.497199535369873
    6. '<|end|>' → logprob: -7.247199535369873
    7. ')' → logprob: -7.372199535369873
    8. '.append' → logprob: -7.622199535369873
    9. '[:]' → logprob: -7.622199535369873
    10. '[]' → logprob: -7.872199535369873

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4866425395011902
    2. '[]' → logprob: -1.486642599105835
    3. ' [' → logprob: -2.236642599105835
    4. '[' → logprob: -2.986642599105835
    5. ' [[' → logprob: -6.986642360687256
    6. ' [[]' → logprob: -8.236642837524414
    7. '[n' → logprob: -8.361642837524414
    8. '[[' → logprob: -8.736642837524414
    9. '[][]' → logprob: -8.861642837524414
    10. ' [][]' → logprob: -10.111642837524414

Token 23: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6407648921012878
    2. '[list' → logprob: -1.3907649517059326
    3. '[' → logprob: -2.3907649517059326
    4. ' list' → logprob: -2.8907649517059326
    5. ' [' → logprob: -3.1407649517059326
    6. '[]' → logprob: -3.6407649517059326
    7. '[input' → logprob: -5.7657647132873535
    8. ' []' → logprob: -5.7657647132873535
    9. '[int' → logprob: -7.1407647132873535
    10. '   ' → logprob: -8.265765190124512

Token 24: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.010707266628742218
    2. '(' → logprob: -4.635707378387451
    3. '(input' → logprob: -7.010707378387451
    4. '(int' → logprob: -10.885706901550293
    5. '()' → logprob: -11.385706901550293
    6. 'map' → logprob: -11.760706901550293
    7. '(range' → logprob: -12.135706901550293
    8. '(
' → logprob: -12.760706901550293
    9. ' map' → logprob: -14.510706901550293
    10. '(

' → logprob: -14.760706901550293

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00761017482727766
    2. '(' → logprob: -5.007610321044922
    3. ' int' → logprob: -8.132610321044922
    4. '(str' → logprob: -8.632610321044922
    5. 'int' → logprob: -9.007610321044922
    6. '(input' → logprob: -9.382610321044922
    7. ')' → logprob: -10.007610321044922
    8. '(lambda' → logprob: -10.132610321044922
    9. '<int' → logprob: -10.257610321044922
    10. ' (' → logprob: -10.382610321044922

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0065080090425908566
    2. '(' → logprob: -5.256507873535156
    3. ',input' → logprob: -7.131507873535156
    4. 'input' → logprob: -8.131507873535156
    5. ')' → logprob: -9.631507873535156
    6. ',' → logprob: -9.756507873535156
    7. '=input' → logprob: -11.006507873535156
    8. ' input' → logprob: -11.256507873535156
    9. ' (' → logprob: -11.506507873535156
    10. '(
' → logprob: -12.381507873535156

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011062094010412693
    2. ' input' → logprob: -4.511062145233154
    3. ')' → logprob: -11.886061668395996
    4. '(input' → logprob: -12.261061668395996
    5. ',input' → logprob: -13.511061668395996
    6. '))' → logprob: -14.886061668395996
    7. '=input' → logprob: -15.136061668395996
    8. '<input' → logprob: -15.386061668395996
    9. '	input' → logprob: -16.011062622070312
    10. 'list' → logprob: -16.636062622070312

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014418430509977043
    2. '()' → logprob: -8.875144004821777
    3. '()))' → logprob: -13.375144004821777
    4. '(' → logprob: -13.750144004821777
    5. '())' → logprob: -14.625144004821777
    6. ' ().' → logprob: -14.750144004821777
    7. '()
' → logprob: -15.500144004821777
    8. '.split' → logprob: -15.500144004821777
    9. ')' → logprob: -15.750144004821777
    10. '.' → logprob: -16.750144958496094

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004317420825827867
    2. 'strip' → logprob: -7.875431537628174
    3. 'rstrip' → logprob: -10.000432014465332
    4. ' split' → logprob: -12.250432014465332
    5. '(split' → logprob: -13.625432014465332
    6. 'spl' → logprob: -16.125431060791016
    7. ')' → logprob: -17.125431060791016
    8. ' ' → logprob: -17.125431060791016
    9. 's' → logprob: -17.250431060791016
    10. '.split' → logprob: -18.000431060791016

Token 30: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002930514281615615
    2. '())' → logprob: -6.752930641174316
    3. '))' → logprob: -7.002930641174316
    4. '()' → logprob: -7.502930641174316
    5. '(' → logprob: -8.377930641174316
    6. '())))' → logprob: -10.252930641174316
    7. '()))
' → logprob: -11.002930641174316
    8. '('' → logprob: -12.502930641174316
    9. '()));' → logprob: -12.627930641174316
    10. '())).' → logprob: -13.752930641174316

Token 31: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -1.1055999994277954
    2. '(' → logprob: -1.4805999994277954
    3. ')' → logprob: -1.8555999994277954
    4. '()' → logprob: -2.105599880218506
    5. '())' → logprob: -2.480599880218506
    6. '(n' → logprob: -3.230599880218506
    7. ')]' → logprob: -3.855599880218506
    8. ']' → logprob: -4.480599880218506
    9. '   ' → logprob: -5.105599880218506
    10. 'for' → logprob: -8.230600357055664

Token 32: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004290896002203226
    2. 'range' → logprob: -6.75429105758667
    3. ' ' → logprob: -6.87929105758667
    4. '(range' → logprob: -7.00429105758667
    5. ' _' → logprob: -7.37929105758667
    6. '_' → logprob: -8.004290580749512
    7. '	range' → logprob: -9.129290580749512
    8. '(' → logprob: -9.754290580749512
    9. ' xrange' → logprob: -11.254290580749512
    10. '_range' → logprob: -11.254290580749512

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8166201710700989
    2. 'range' → logprob: -0.9416201710700989
    3. ' range' → logprob: -2.191620111465454
    4. 'in' → logprob: -3.566620111465454
    5. '(range' → logprob: -3.816620111465454
    6. ' ' → logprob: -5.691620349884033
    7. '(' → logprob: -6.691620349884033
    8. '  ' → logprob: -7.316620349884033
    9. ' xrange' → logprob: -8.566619873046875
    10. '	range' → logprob: -8.691619873046875

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16024473309516907
    2. ' range' → logprob: -1.9102447032928467
    3. ' ' → logprob: -11.910244941711426
    4. '(range' → logprob: -11.910244941711426
    5. '	range' → logprob: -13.035244941711426
    6. '  ' → logprob: -13.785244941711426
    7. '   ' → logprob: -14.160244941711426
    8. '[' → logprob: -14.285244941711426
    9. 'rang' → logprob: -14.410244941711426
    10. 'r' → logprob: -15.035244941711426

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019316127290949225
    2. '(' → logprob: -6.251931667327881
    3. ' (' → logprob: -13.751931190490723
    4. 'n' → logprob: -14.126931190490723
    5. '(
' → logprob: -15.251931190490723
    6. ')n' → logprob: -15.376931190490723
    7. ' n' → logprob: -15.501931190490723
    8. '(len' → logprob: -16.00193214416504
    9. '(N' → logprob: -16.50193214416504
    10. ')' → logprob: -16.50193214416504

Token 36: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00015860427811276168
    2. ')' → logprob: -9.500158309936523
    3. ']' → logprob: -9.625158309936523
    4. ' )' → logprob: -12.500158309936523
    5. ')]
' → logprob: -12.625158309936523
    6. '   ' → logprob: -12.875158309936523
    7. ')])' → logprob: -12.875158309936523
    8. '])]' → logprob: -13.000158309936523
    9. '))' → logprob: -13.750158309936523
    10. '])' → logprob: -14.125158309936523

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5822598338127136
    2. '
' → logprob: -1.3322598934173584
    3. '<|end|>' → logprob: -2.0822598934173584
    4. ' ' → logprob: -3.8322598934173584
    5. '    
' → logprob: -4.707259654998779
    6. 'n' → logprob: -5.582259654998779
    7. '  
' → logprob: -5.832259654998779
    8. '\n' → logprob: -6.207259654998779
    9. ' 
' → logprob: -6.207259654998779
    10. ')' → logprob: -6.207259654998779

Token 38: ' row' (ID: 5225)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2707101106643677
    2. '   ' → logprob: -1.5207101106643677
    3. 'n' → logprob: -2.270709991455078
    4. 'm' → logprob: -3.020709991455078
    5. 's' → logprob: -3.145709991455078
    6. '\' → logprob: -3.270709991455078
    7. '    
' → logprob: -3.645709991455078
    8. ')' → logprob: -3.770709991455078
    9. 'sum' → logprob: -3.770709991455078
    10. 'for' → logprob: -4.020709991455078

Token 39: '_m' (ID: 1285)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.1347188949584961
    2. '_sum' → logprob: -2.634718894958496
    3. '_' → logprob: -3.509718894958496
    4. 's' → logprob: -3.759718894958496
    5. 'S' → logprob: -7.759718894958496
    6. ' _' → logprob: -8.509718894958496
    7. '_max' → logprob: -9.009718894958496
    8. 'sum' → logprob: -9.134718894958496
    9. ' =' → logprob: -10.509718894958496
    10. '_counts' → logprob: -10.759718894958496

Token 40: 'ins' (ID: 1564)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.08800066262483597
    2. 'in' → logprob: -2.838000774383545
    3. 'a' → logprob: -5.088000774383545
    4. 'atrix' → logprob: -5.588000774383545
    5. 'ins' → logprob: -5.838000774383545
    6. '_' → logprob: -5.963000774383545
    7. '_ax' → logprob: -6.213000774383545
    8. '_sum' → logprob: -6.713000774383545
    9. 'ean' → logprob: -7.088000774383545
    10. '   ' → logprob: -7.088000774383545

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5801694989204407
    2. ' =' → logprob: -0.8301694989204407
    3. '[' → logprob: -5.955169677734375
    4. '_' → logprob: -7.705169677734375
    5. ']' → logprob: -7.830169677734375
    6. '[]' → logprob: -8.330169677734375
    7. '[:]' → logprob: -8.705169677734375
    8. '=[]' → logprob: -8.830169677734375
    9. ' ' → logprob: -10.330169677734375
    10. '   ' → logprob: -10.330169677734375

Token 42: ' [' (ID: 723)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.09972352534532547
    2. '[' → logprob: -2.9747235774993896
    3. ' [' → logprob: -3.7247235774993896
    4. '[list' → logprob: -3.9747235774993896
    5. '[m' → logprob: -7.8497233390808105
    6. ' list' → logprob: -8.849723815917969
    7. 'list' → logprob: -8.974723815917969
    8. 'min' → logprob: -9.224723815917969
    9. '[max' → logprob: -9.974723815917969
    10. '[]' → logprob: -10.099723815917969

Token 43: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.020549247041344643
    2. ' min' → logprob: -3.8955492973327637
    3. '   ' → logprob: -12.895548820495605
    4. 'max' → logprob: -13.145548820495605
    5. '(min' → logprob: -13.520548820495605
    6. '	min' → logprob: -14.645548820495605
    7. ' ' → logprob: -14.770548820495605
    8. '```' → logprob: -15.145548820495605
    9. '[min' → logprob: -15.770548820495605
    10. '  ' → logprob: -15.895548820495605

Token 44: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.003827987238764763
    2. 'row' → logprob: -5.628828048706055
    3. '(matrix' → logprob: -9.003828048706055
    4. '(' → logprob: -9.253828048706055
    5. ' row' → logprob: -12.753828048706055
    6. '(r' → logprob: -13.378828048706055
    7. '(rows' → logprob: -13.878828048706055
    8. ')' → logprob: -14.003828048706055
    9. '	row' → logprob: -14.003828048706055
    10. 'matrix' → logprob: -14.878828048706055

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000549814198166132
    2. ' )' → logprob: -8.500550270080566
    3. '(row' → logprob: -8.625550270080566
    4. '   ' → logprob: -9.375550270080566
    5. '())' → logprob: -10.000550270080566
    6. ')]' → logprob: -10.875550270080566
    7. ')])' → logprob: -12.125550270080566
    8. 'row' → logprob: -13.125550270080566
    9. ')
' → logprob: -13.250550270080566
    10. '(' → logprob: -13.750550270080566

Token 46: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22605791687965393
    2. 'for' → logprob: -2.601058006286621
    3. ')' → logprob: -2.976058006286621
    4. '   ' → logprob: -3.101058006286621
    5. ']' → logprob: -3.976058006286621
    6. ' ' → logprob: -4.726058006286621
    7. '(' → logprob: -6.601058006286621
    8. '()' → logprob: -6.726058006286621
    9. ' ]' → logprob: -7.851058006286621
    10. '  ' → logprob: -7.976058006286621

Token 47: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.0031131880823522806
    2. 'row' → logprob: -6.128113269805908
    3. ' matrix' → logprob: -7.003113269805908
    4. 'matrix' → logprob: -11.62811279296875
    5. ' ' → logprob: -12.25311279296875
    6. '	row' → logprob: -12.62811279296875
    7. '(row' → logprob: -13.62811279296875
    8. '=row' → logprob: -16.37811279296875
    9. '	matrix' → logprob: -16.75311279296875
    10. ',row' → logprob: -17.00311279296875

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048963505774736404
    2. 'in' → logprob: -3.0489635467529297
    3. ')' → logprob: -8.92396354675293
    4. ']' → logprob: -9.42396354675293
    5. '<|end|>' → logprob: -9.79896354675293
    6. ')]' → logprob: -10.42396354675293
    7. ' )' → logprob: -10.79896354675293
    8. ' ]' → logprob: -11.29896354675293
    9. '<|end|>' → logprob: -11.29896354675293
    10. 'row' → logprob: -12.29896354675293

Token 49: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3869257867336273
    2. ' matrix' → logprob: -1.1369258165359497
    3. '	matrix' → logprob: -10.38692569732666
    4. ' ' → logprob: -11.38692569732666
    5. '(matrix' → logprob: -11.88692569732666
    6. '.matrix' → logprob: -13.63692569732666
    7. 'atrix' → logprob: -14.01192569732666
    8. '   ' → logprob: -14.13692569732666
    9. '_matrix' → logprob: -14.38692569732666
    10. 'm' → logprob: -14.38692569732666

Token 50: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010174031369388103
    2. '   ' → logprob: -5.010173797607422
    3. ' ]' → logprob: -6.385173797607422
    4. ']
' → logprob: -6.385173797607422
    5. ')' → logprob: -11.010173797607422
    6. '
' → logprob: -11.260173797607422
    7. ')]' → logprob: -11.510173797607422
    8. ' ' → logprob: -11.885173797607422
    9. ' ]
' → logprob: -12.010173797607422
    10. '  ' → logprob: -12.885173797607422

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3362313210964203
    2. '
' → logprob: -1.3362313508987427
    3. '    
' → logprob: -4.336231231689453
    4. '<|end|>' → logprob: -5.086231231689453
    5. '  
' → logprob: -6.586231231689453
    6. '   
' → logprob: -7.961231231689453
    7. '  ' → logprob: -8.211231231689453
    8. '```' → logprob: -8.336231231689453
    9. 'row' → logprob: -8.711231231689453
    10. '[' → logprob: -8.711231231689453

Token 52: ' col' (ID: 996)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25407689809799194
    2. '
' → logprob: -1.8790769577026367
    3. '<|end|>' → logprob: -3.5040769577026367
    4. '    
' → logprob: -4.129076957702637
    5. ' ' → logprob: -5.129076957702637
    6. 'row' → logprob: -5.754076957702637
    7. '  ' → logprob: -5.879076957702637
    8. '    ' → logprob: -6.004076957702637
    9. ' 
' → logprob: -6.379076957702637
    10. '  
' → logprob: -6.754076957702637

Token 53: '_max' (ID: 13731)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.004473200999200344
    2. '_s' → logprob: -5.7544732093811035
    3. '_max' → logprob: -7.7544732093811035
    4. '_' → logprob: -8.379472732543945
    5. '_min' → logprob: -8.504472732543945
    6. '_vals' → logprob: -9.129472732543945
    7. ' _' → logprob: -9.754472732543945
    8. 's' → logprob: -10.129472732543945
    9. '=' → logprob: -10.129472732543945
    10. '=_' → logprob: -10.629472732543945

Token 54: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013036110438406467
    2. '=' → logprob: -4.388036251068115
    3. ' =' → logprob: -7.763036251068115
    4. '=[' → logprob: -10.638035774230957
    5. '=s' → logprob: -10.763035774230957
    6. '   ' → logprob: -10.888035774230957
    7. 'es' → logprob: -11.013035774230957
    8. '=[]' → logprob: -12.263035774230957
    9. 'is' → logprob: -12.513035774230957
    10. ' ' → logprob: -13.388035774230957

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806077316403389
    2. '=' → logprob: -3.2880606651306152
    3. '[' → logprob: -11.663061141967773
    4. ' =[' → logprob: -12.663061141967773
    5. ' ' → logprob: -12.913061141967773
    6. '=[' → logprob: -13.788061141967773
    7. ']' → logprob: -13.913061141967773
    8. ')' → logprob: -14.163061141967773
    9. '   ' → logprob: -14.413061141967773
    10. 's' → logprob: -14.413061141967773

Token 56: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.32421326637268066
    2. '[max' → logprob: -1.3242132663726807
    3. '[' → logprob: -5.074213027954102
    4. '[list' → logprob: -5.449213027954102
    5. ' ' → logprob: -8.699213027954102
    6. '[col' → logprob: -9.324213027954102
    7. '[len' → logprob: -10.949213027954102
    8. '[min' → logprob: -11.324213027954102
    9. '[int' → logprob: -11.574213027954102
    10. '[
' → logprob: -11.824213027954102

Token 57: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04307010397315025
    2. ' max' → logprob: -3.168070077896118
    3. '[max' → logprob: -9.918069839477539
    4. '(max' → logprob: -10.918069839477539
    5. '
' → logprob: -14.418069839477539
    6. ' ' → logprob: -14.668069839477539
    7. '=max' → logprob: -14.793069839477539
    8. '	max' → logprob: -14.793069839477539
    9. ',max' → logprob: -14.918069839477539
    10. '0' → logprob: -15.293069839477539

Token 58: '(matrix' (ID: 57027)
  Prédit: '(col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(col' → logprob: -0.06631224602460861
    2. '(column' → logprob: -3.066312313079834
    3. '([' → logprob: -4.316312313079834
    4. '(row' → logprob: -5.816312313079834
    5. '(' → logprob: -7.566312313079834
    6. '(matrix' → logprob: -8.066311836242676
    7. 'col' → logprob: -8.316311836242676
    8. '[col' → logprob: -9.316311836242676
    9. '(list' → logprob: -10.941311836242676
    10. ' col' → logprob: -11.316311836242676

Token 59: '[i' (ID: 1768)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.07424107939004898
    2. '[i' → logprob: -2.8242411613464355
    3. '[r' → logprob: -4.4492411613464355
    4. '[j' → logprob: -8.074240684509277
    5. '[' → logprob: -9.324240684509277
    6. 'row' → logprob: -10.199240684509277
    7. '   ' → logprob: -10.949240684509277
    8. ')' → logprob: -11.074240684509277
    9. '(row' → logprob: -11.199240684509277
    10. '[col' → logprob: -11.699240684509277

Token 60: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1843322366476059
    2. '][' → logprob: -2.0593321323394775
    3. '[i' → logprob: -3.3093321323394775
    4. '[row' → logprob: -6.684332370758057
    5. '[' → logprob: -6.809332370758057
    6. '[r' → logprob: -6.934332370758057
    7. ']' → logprob: -8.184331893920898
    8. ' ][' → logprob: -8.934331893920898
    9. '[col' → logprob: -9.684331893920898
    10. ' [' → logprob: -9.684331893920898

Token 61: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0052694459445774555
    2. ' j' → logprob: -5.255269527435303
    3. 'row' → logprob: -11.630269050598145
    4. 'col' → logprob: -11.880269050598145
    5. 'i' → logprob: -12.130269050598145
    6. ' col' → logprob: -12.380269050598145
    7. 'r' → logprob: -12.880269050598145
    8. '])' → logprob: -13.255269050598145
    9. '   ' → logprob: -13.630269050598145
    10. 'range' → logprob: -13.880269050598145

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17987747490406036
    2. ' for' → logprob: -2.054877519607544
    3. 'for' → logprob: -3.929877519607544
    4. ' ]' → logprob: -4.304877281188965
    5. ')' → logprob: -5.929877281188965
    6. '   ' → logprob: -8.429877281188965
    7. '])' → logprob: -8.804877281188965
    8. ' ' → logprob: -9.179877281188965
    9. '    ' → logprob: -9.304877281188965
    10. ' )' → logprob: -10.054877281188965

Token 63: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11309829354286194
    2. 'for' → logprob: -2.238098382949829
    3. ')' → logprob: -8.86309814453125
    4. '   ' → logprob: -9.61309814453125
    5. ' ' → logprob: -10.48809814453125
    6. '	for' → logprob: -10.86309814453125
    7. '    ' → logprob: -11.36309814453125
    8. ']' → logprob: -12.73809814453125
    9. '  ' → logprob: -12.86309814453125
    10. ' )' → logprob: -13.86309814453125

Token 64: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5804471373558044
    2. ' i' → logprob: -0.8304471373558044
    3. 'i' → logprob: -5.955447196960449
    4. 'range' → logprob: -6.330447196960449
    5. ' j' → logprob: -9.58044719696045
    6. ' ' → logprob: -10.95544719696045
    7. ' in' → logprob: -11.08044719696045
    8. 'j' → logprob: -12.33044719696045
    9. '   ' → logprob: -12.45544719696045
    10. '	i' → logprob: -12.58044719696045

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.045117657631635666
    2. ' range' → logprob: -3.2951176166534424
    3. '<|end|>' → logprob: -5.1701178550720215
    4. 'range' → logprob: -6.9201178550720215
    5. 'in' → logprob: -8.920117378234863
    6. ' ' → logprob: -9.170117378234863
    7. ' xrange' → logprob: -9.795117378234863
    8. '	range' → logprob: -10.045117378234863
    9. '<|end|>' → logprob: -10.670117378234863
    10. ')' → logprob: -11.795117378234863

Token 66: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0067154900170862675
    2. 'range' → logprob: -5.006715297698975
    3. '	range' → logprob: -16.256715774536133
    4. ' xrange' → logprob: -18.631715774536133
    5. '(range' → logprob: -19.381715774536133
    6. ' ' → logprob: -21.131715774536133
    7. '_range' → logprob: -21.131715774536133
    8. '.range' → logprob: -22.131715774536133
    9. ' rango' → logprob: -22.506715774536133
    10. '<|end|>' → logprob: -23.381715774536133

Token 67: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5052068829536438
    2. ' n' → logprob: -1.005206823348999
    3. '(n' → logprob: -3.505206823348999
    4. '	n' → logprob: -8.005207061767578
    5. '   ' → logprob: -8.755207061767578
    6. '(' → logprob: -9.630207061767578
    7. ')n' → logprob: -10.255207061767578
    8. ')' → logprob: -11.380207061767578
    9. ' ' → logprob: -13.130207061767578
    10. '_n' → logprob: -14.255207061767578

Token 68: '))' (ID: 915)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03750735893845558
    2. ')' → logprob: -3.4125072956085205
    3. ' )' → logprob: -5.7875075340271
    4. ')])' → logprob: -7.9125075340271
    5. '))' → logprob: -8.662507057189941
    6. '])' → logprob: -9.037507057189941
    7. '   ' → logprob: -9.787507057189941
    8. ' ' → logprob: -10.662507057189941
    9. ']' → logprob: -11.162507057189941
    10. '])]' → logprob: -11.412507057189941

Token 69: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03409017622470856
    2. 'for' → logprob: -4.159090042114258
    3. '   ' → logprob: -4.784090042114258
    4. ')' → logprob: -5.034090042114258
    5. ']' → logprob: -6.034090042114258
    6. ' in' → logprob: -8.534090042114258
    7. ')]' → logprob: -8.909090042114258
    8. ' ]' → logprob: -9.034090042114258
    9. '    ' → logprob: -9.659090042114258
    10. ' )' → logprob: -9.784090042114258

Token 70: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16165122389793396
    2. ' j' → logprob: -1.9116512537002563
    3. 'range' → logprob: -7.036651134490967
    4. 'j' → logprob: -7.536651134490967
    5. ' ' → logprob: -11.661651611328125
    6. '	j' → logprob: -13.161651611328125
    7. '	range' → logprob: -13.786651611328125
    8. '  ' → logprob: -14.536651611328125
    9. 'Range' → logprob: -14.661651611328125
    10. '   ' → logprob: -14.911651611328125

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002835899591445923
    2. 'in' → logprob: -5.877835750579834
    3. '<|end|>' → logprob: -11.002836227416992
    4. ' ' → logprob: -11.877836227416992
    5. 'range' → logprob: -12.627836227416992
    6. ' range' → logprob: -12.752836227416992
    7. 'n' → logprob: -14.627836227416992
    8. '	in' → logprob: -15.002836227416992
    9. ' n' → logprob: -15.752836227416992
    10. '<|end|>' → logprob: -16.127836227416992

Token 72: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00861468818038702
    2. 'range' → logprob: -4.758614540100098
    3. '	range' → logprob: -16.758615493774414
    4. '(range' → logprob: -17.758615493774414
    5. ' ' → logprob: -18.133615493774414
    6. '   ' → logprob: -18.508615493774414
    7. ' xrange' → logprob: -18.508615493774414
    8. 'n' → logprob: -18.883615493774414
    9. '  ' → logprob: -20.008615493774414
    10. ' n' → logprob: -20.008615493774414

Token 73: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010647247545421124
    2. '(' → logprob: -6.876064777374268
    3. ' (' → logprob: -10.62606430053711
    4. 'n' → logprob: -12.00106430053711
    5. ' n' → logprob: -14.12606430053711
    6. '(len' → logprob: -14.25106430053711
    7. ')' → logprob: -16.12606430053711
    8. '(
' → logprob: -17.25106430053711
    9. '(range' → logprob: -17.25106430053711
    10. '   ' → logprob: -17.50106430053711

Token 74: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.037968263030052185
    2. ']' → logprob: -3.412968158721924
    3. ')' → logprob: -5.537968158721924
    4. '])' → logprob: -8.412968635559082
    5. '])]' → logprob: -9.537968635559082
    6. ')])' → logprob: -10.537968635559082
    7. ' )' → logprob: -10.662968635559082
    8. '   ' → logprob: -11.162968635559082
    9. ' ]' → logprob: -11.287968635559082
    10. '))' → logprob: -13.287968635559082

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025904078502207994
    2. '
' → logprob: -6.502590179443359
    3. '    
' → logprob: -7.502590179443359
    4. '```' → logprob: -9.00259017944336
    5. 'for' → logprob: -9.12759017944336
    6. 's' → logprob: -9.25259017944336
    7. ' for' → logprob: -9.50259017944336
    8. '  
' → logprob: -10.62759017944336
    9. '<|end|>' → logprob: -10.62759017944336
    10. 'if' → logprob: -11.75259017944336

Token 76: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04904443770647049
    2. 's' → logprob: -3.549044370651245
    3. 'for' → logprob: -5.049044609069824
    4. ' for' → logprob: -5.424044609069824
    5. '    
' → logprob: -5.424044609069824
    6. '
' → logprob: -6.924044609069824
    7. 'found' → logprob: -6.924044609069824
    8. 'answer' → logprob: -8.674044609069824
    9. ' found' → logprob: -8.924044609069824
    10. '  
' → logprob: -8.924044609069824

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011404059827327728
    2. '=' → logprob: -4.511404037475586
    3. '_' → logprob: -8.511404037475586
    4. 's' → logprob: -9.636404037475586
    5. ' ' → logprob: -10.136404037475586
    6. ' +=' → logprob: -11.136404037475586
    7. ':' → logprob: -11.636404037475586
    8. '[:]' → logprob: -12.386404037475586
    9. '.' → logprob: -12.636404037475586
    10. '.append' → logprob: -12.886404037475586

Token 78: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4847029745578766
    2. ' [' → logprob: -1.8597029447555542
    3. '[]' → logprob: -2.8597030639648438
    4. '[next' → logprob: -2.8597030639648438
    5. '[row' → logprob: -3.9847030639648438
    6. '[min' → logprob: -4.234703063964844
    7. '[s' → logprob: -4.484703063964844
    8. 'sum' → logprob: -4.734703063964844
    9. 'any' → logprob: -4.984703063964844
    10. '[
' → logprob: -5.234703063964844

Token 79: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5338555574417114
    2. '[next' → logprob: -2.283855438232422
    3. '[min' → logprob: -2.408855438232422
    4. '[max' → logprob: -2.908855438232422
    5. '[row' → logprob: -3.283855438232422
    6. '[]' → logprob: -3.283855438232422
    7. 'any' → logprob: -3.908855438232422
    8. 'sum' → logprob: -4.033855438232422
    9. 'next' → logprob: -4.658855438232422
    10. '[n' → logprob: -5.033855438232422

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6362967491149902
    2. '
' → logprob: -0.7612967491149902
    3. ' for' → logprob: -6.76129674911499
    4. '    
' → logprob: -6.76129674911499
    5. 'for' → logprob: -7.26129674911499
    6. '<|end|>' → logprob: -8.511297225952148
    7. '  
' → logprob: -8.636297225952148
    8. '   
' → logprob: -9.511297225952148
    9. '\n' → logprob: -9.886297225952148
    10. '
' → logprob: -10.261297225952148

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08163787424564362
    2. '
' → logprob: -2.5816378593444824
    3. ' for' → logprob: -6.831637859344482
    4. 'for' → logprob: -7.331637859344482
    5. '    
' → logprob: -7.581637859344482
    6. '<|end|>' → logprob: -8.08163833618164
    7. '  
' → logprob: -9.70663833618164
    8. '   
' → logprob: -10.58163833618164
    9. '  ' → logprob: -10.70663833618164
    10. '\n' → logprob: -10.83163833618164

Token 82: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24282152950763702
    2. 'for' (adapté à ' for') → logprob: -1.7428215742111206
    3. ' for' → logprob: -3.242821455001831
    4. '
' → logprob: -6.74282169342041
    5. '	for' → logprob: -8.86782169342041
    6. '    
' → logprob: -9.49282169342041
    7. '  ' → logprob: -10.24282169342041
    8. ' ' → logprob: -10.99282169342041
    9. '```' → logprob: -10.99282169342041
    10. '\n' → logprob: -11.11782169342041

Token 83: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002219011075794697
    2. 'i' → logprob: -6.377219200134277
    3. ' ' → logprob: -7.627219200134277
    4. '   ' → logprob: -12.002219200134277
    5. '	i' → logprob: -12.002219200134277
    6. ' ' → logprob: -12.627219200134277
    7. '  ' → logprob: -12.627219200134277
    8. ' j' → logprob: -12.627219200134277
    9. ' _' → logprob: -13.252219200134277
    10. ' row' → logprob: -13.252219200134277

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004577395971864462
    2. 'in' → logprob: -5.504577159881592
    3. ' ' → logprob: -7.629577159881592
    4. '<|end|>' → logprob: -12.50457763671875
    5. '	in' → logprob: -12.87957763671875
    6. '  ' → logprob: -13.37957763671875
    7. '    ' → logprob: -13.75457763671875
    8. '   ' → logprob: -14.12957763671875
    9. 'n' → logprob: -14.12957763671875
    10. ',' → logprob: -14.62957763671875

Token 85: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014162540435791
    2. 'range' → logprob: -1.701416254043579
    3. '	range' → logprob: -13.201416015625
    4. '(range' → logprob: -13.951416015625
    5. ' ' → logprob: -16.326416015625
    6. '   ' → logprob: -16.826416015625
    7. ' xrange' → logprob: -16.826416015625
    8. '_range' → logprob: -17.201416015625
    9. ')' → logprob: -17.826416015625
    10. '.range' → logprob: -17.951416015625

Token 86: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014296548441052437
    2. '(' → logprob: -4.264296531677246
    3. ' n' → logprob: -9.764296531677246
    4. ' (' → logprob: -9.889296531677246
    5. 'n' → logprob: -10.639296531677246
    6. '(
' → logprob: -14.889296531677246
    7. ' ' → logprob: -15.014296531677246
    8. '(len' → logprob: -15.639296531677246
    9. ')' → logprob: -17.264297485351562
    10. '()' → logprob: -17.264297485351562

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002640579594299197
    2. '):
' → logprob: -6.252640724182129
    3. ')' → logprob: -7.752640724182129
    4. ':' → logprob: -8.377640724182129
    5. '   ' → logprob: -10.627640724182129
    6. ' ):' → logprob: -10.627640724182129
    7. ' ' → logprob: -13.877640724182129
    8. '):
' → logprob: -14.002640724182129
    9. '):

' → logprob: -15.377640724182129
    10. '       ' → logprob: -15.502640724182129

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05305355414748192
    2. '   ' → logprob: -3.178053617477417
    3. ':' → logprob: -5.178053379058838
    4. '<|end|>' → logprob: -5.928053379058838
    5. ' ' → logprob: -7.303053379058838
    6. ' for' → logprob: -7.928053379058838
    7. '    ' → logprob: -8.178053855895996
    8. '<|end|>' → logprob: -9.303053855895996
    9. '     ' → logprob: -10.053053855895996
    10. ':
' → logprob: -10.053053855895996

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3087785243988037
    2. 'for' (adapté à ' for') → logprob: -1.4337785243988037
    3. '   ' → logprob: -3.9337785243988037
    4. '       ' → logprob: -4.933778762817383
    5. ' ' → logprob: -8.433778762817383
    6. '<|end|>' → logprob: -8.933778762817383
    7. '	for' → logprob: -9.683778762817383
    8. '    ' → logprob: -9.933778762817383
    9. '	   ' → logprob: -12.058778762817383
    10. '  ' → logprob: -12.683778762817383

Token 90: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.14099621772766113
    2. ' range' → logprob: -2.390996217727661
    3. 'j' → logprob: -3.265996217727661
    4. 'range' → logprob: -6.390995979309082
    5. '    ' → logprob: -9.890995979309082
    6. ' n' → logprob: -10.015995979309082
    7. 'n' → logprob: -10.890995979309082
    8. ' ' → logprob: -11.890995979309082
    9. '   ' → logprob: -12.390995979309082
    10. '(range' → logprob: -13.515995979309082

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043059248477220535
    2. 'in' → logprob: -3.1680593490600586
    3. ' ' → logprob: -10.293059349060059
    4. '   ' → logprob: -11.543059349060059
    5. '    ' → logprob: -12.043059349060059
    6. '	in' → logprob: -12.918059349060059
    7. '<|end|>' → logprob: -13.043059349060059
    8. '  ' → logprob: -13.543059349060059
    9. 'n' → logprob: -14.043059349060059
    10. '0' → logprob: -14.043059349060059

Token 92: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16033633053302765
    2. 'range' → logprob: -1.9103363752365112
    3. '(range' → logprob: -9.1603364944458
    4. '	range' → logprob: -13.1603364944458
    5. ' ' → logprob: -13.4103364944458
    6. '(' → logprob: -14.1603364944458
    7. ' xrange' → logprob: -14.6603364944458
    8. ' (' → logprob: -14.7853364944458
    9. ' in' → logprob: -14.9103364944458
    10. 'n' → logprob: -15.2853364944458

Token 93: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12304145097732544
    2. ' (' → logprob: -2.2480413913726807
    3. '(' → logprob: -4.62304162979126
    4. ' n' → logprob: -8.873041152954102
    5. 'n' → logprob: -9.248041152954102
    6. ')' → logprob: -9.998041152954102
    7. ' range' → logprob: -10.623041152954102
    8. '(range' → logprob: -10.873041152954102
    9. ' )' → logprob: -11.373041152954102
    10. ' ' → logprob: -12.998041152954102

Token 94: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7021717429161072
    2. '):' → logprob: -0.7021717429161072
    3. ')]' → logprob: -5.452171802520752
    4. ':' → logprob: -5.452171802520752
    5. ']:' → logprob: -8.827171325683594
    6. ']' → logprob: -9.827171325683594
    7. ' )' → logprob: -9.952171325683594
    8. '+' → logprob: -10.327171325683594
    9. '   ' → logprob: -10.702171325683594
    10. ' ):' → logprob: -10.827171325683594

Token 95: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3149494230747223
    2. ':' → logprob: -1.5649493932724
    3. '           ' → logprob: -3.3149495124816895
    4. '<|end|>' → logprob: -4.4399495124816895
    5. ':
' → logprob: -5.8149495124816895
    6. ' if' → logprob: -6.1899495124816895
    7. '   ' → logprob: -6.3149495124816895
    8. ' ' → logprob: -6.6899495124816895
    9. 'if' → logprob: -6.9399495124816895
    10. ' :' → logprob: -7.3149495124816895

Token 96: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47278672456741333
    2. '               ' → logprob: -1.2227866649627686
    3. ' if' → logprob: -2.7227866649627686
    4. 'if' (adapté à ' if') → logprob: -4.722786903381348
    5. ' ' → logprob: -5.472786903381348
    6. '       ' → logprob: -6.972786903381348
    7. ' 
' → logprob: -7.222786903381348
    8. '   ' → logprob: -7.722786903381348
    9. '            
' → logprob: -8.222786903381348
    10. '            ' → logprob: -8.347786903381348

Token 97: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.47693580389022827
    2. ' row' → logprob: -0.9769358038902283
    3. 'matrix' → logprob: -6.351935863494873
    4. 'row' → logprob: -6.851935863494873
    5. ' ' → logprob: -11.226935386657715
    6. '	matrix' → logprob: -11.226935386657715
    7. '   ' → logprob: -11.601935386657715
    8. '    ' → logprob: -11.976935386657715
    9. '	row' → logprob: -12.851935386657715
    10. ' ' → logprob: -13.351935386657715

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.0629870858974755e-05
    2. '[' → logprob: -10.00006103515625
    3. '[j' → logprob: -11.37506103515625
    4. ' [' → logprob: -13.62506103515625
    5. '[I' → logprob: -13.62506103515625
    6. '```' → logprob: -14.37506103515625
    7. 'i' → logprob: -15.50006103515625
    8. '[
' → logprob: -15.87506103515625
    9. '\[' → logprob: -16.12506103515625
    10. '   ' → logprob: -16.75006103515625

Token 99: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07459717243909836
    2. '][' → logprob: -2.699597120285034
    3. '[j' → logprob: -5.574597358703613
    4. ']' → logprob: -8.324597358703613
    5. '[' → logprob: -8.699597358703613
    6. '[I' → logprob: -9.199597358703613
    7. ')[' → logprob: -9.324597358703613
    8. ' ][' → logprob: -9.449597358703613
    9. ' [' → logprob: -9.824597358703613
    10. ')][' → logprob: -10.324597358703613

Token 100: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.4121114822482923e-06
    2. ' j' → logprob: -13.000003814697266
    3. '[j' → logprob: -14.750003814697266
    4. '	j' → logprob: -15.250003814697266
    5. ']' → logprob: -15.625003814697266
    6. '][' → logprob: -16.000003814697266
    7. '```' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.875003814697266
    9. '_j' → logprob: -17.750003814697266
    10. ':j' → logprob: -17.875003814697266

Token 101: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009900575503706932
    2. '==' → logprob: -4.6349005699157715
    3. ' ' → logprob: -10.13490104675293
    4. '=' → logprob: -10.25990104675293
    5. ')' → logprob: -10.63490104675293
    6. ' =' → logprob: -11.25990104675293
    7. ' >' → logprob: -11.50990104675293
    8. '>' → logprob: -11.75990104675293
    9. ' ' → logprob: -13.00990104675293
    10. ']' → logprob: -13.13490104675293

Token 102: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2256486713886261
    2. '==' → logprob: -1.6006486415863037
    3. '=' → logprob: -9.475648880004883
    4. ' ' → logprob: -9.725648880004883
    5. '>' → logprob: -10.225648880004883
    6. ' ' → logprob: -10.600648880004883
    7. ' in' → logprob: -11.475648880004883
    8. 'in' → logprob: -12.100648880004883
    9. ' =' → logprob: -12.600648880004883
    10. ' >' → logprob: -12.725648880004883

Token 103: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5760539770126343
    2. ' row' → logprob: -0.8260539770126343
    3. ' col' → logprob: -9.451053619384766
    4. 'col' → logprob: -10.326053619384766
    5. ' ' → logprob: -12.951053619384766
    6. '	row' → logprob: -15.326053619384766
    7. '(row' → logprob: -16.201053619384766
    8. '   ' → logprob: -16.576053619384766
    9. '
' → logprob: -16.701053619384766
    10. ' min' → logprob: -16.826053619384766

Token 104: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0002767094410955906
    2. '_min' → logprob: -9.125276565551758
    3. '_s' → logprob: -9.125276565551758
    4. ' _' → logprob: -10.375276565551758
    5. 's' → logprob: -11.750276565551758
    6. '_' → logprob: -12.750276565551758
    7. '_max' → logprob: -12.875276565551758
    8. '[i' → logprob: -13.000276565551758
    9. '   ' → logprob: -13.125276565551758
    10. '```' → logprob: -13.625276565551758

Token 105: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.00015824666479602456
    2. 'in' → logprob: -8.875158309936523
    3. '[' → logprob: -12.250158309936523
    4. 'i' → logprob: -12.500158309936523
    5. '[i' → logprob: -12.500158309936523
    6. 'axs' → logprob: -13.500158309936523
    7. '   ' → logprob: -14.250158309936523
    8. '_ins' → logprob: -14.250158309936523
    9. 'ax' → logprob: -14.375158309936523
    10. '[row' → logprob: -14.500158309936523

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4987974029500037e-05
    2. '[j' → logprob: -11.000024795532227
    3. ' [' → logprob: -12.125024795532227
    4. '[' → logprob: -12.875024795532227
    5. ' ' → logprob: -16.500024795532227
    6. '   ' → logprob: -16.750024795532227
    7. ' and' → logprob: -17.125024795532227
    8. 'and' → logprob: -17.125024795532227
    9. '[
' → logprob: -17.250024795532227
    10. '
' → logprob: -17.750024795532227

Token 107: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007721390575170517
    2. 'and' → logprob: -5.132721424102783
    3. ')' → logprob: -7.007721424102783
    4. ']' → logprob: -7.382721424102783
    5. ' ' → logprob: -8.632720947265625
    6. ' )' → logprob: -10.382720947265625
    7. ' ]' → logprob: -10.382720947265625
    8. ')]' → logprob: -11.757720947265625
    9. ' or' → logprob: -12.882720947265625
    10. '	and' → logprob: -13.382720947265625

Token 108: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018155092373490334
    2. 'and' → logprob: -4.018155097961426
    3. ' or' → logprob: -12.518155097961426
    4. ' ' → logprob: -13.768155097961426
    5. '	and' → logprob: -15.143155097961426
    6. ' ' → logprob: -15.768155097961426
    7. '0' → logprob: -16.89315414428711
    8. ' an' → logprob: -17.76815414428711
    9. ' a' → logprob: -18.01815414428711
    10. ')' → logprob: -18.14315414428711

Token 109: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.008625093847513199
    2. 'matrix' → logprob: -4.758625030517578
    3. '	matrix' → logprob: -11.883625030517578
    4. ' ' → logprob: -13.383625030517578
    5. '(matrix' → logprob: -14.633625030517578
    6. '           ' → logprob: -15.258625030517578
    7. ' col' → logprob: -15.258625030517578
    8. '   ' → logprob: -15.258625030517578
    9. ' matriz' → logprob: -15.508625030517578
    10. ' mat' → logprob: -15.633625030517578

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12807057797908783
    2. '[j' → logprob: -2.128070592880249
    3. '[' → logprob: -6.87807035446167
    4. '```' → logprob: -10.003070831298828
    5. ' [' → logprob: -11.128070831298828
    6. '][' → logprob: -11.128070831298828
    7. '[
' → logprob: -11.503070831298828
    8. '[][' → logprob: -11.753070831298828
    9. 'j' → logprob: -12.878070831298828
    10. '[col' → logprob: -13.003070831298828

Token 111: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04998370260000229
    2. '[j' → logprob: -3.0499837398529053
    3. ']' → logprob: -6.924983501434326
    4. ' ][' → logprob: -8.799983978271484
    5. 'j' → logprob: -9.299983978271484
    6. '[' → logprob: -10.049983978271484
    7. ']==' → logprob: -10.299983978271484
    8. ']][' → logprob: -10.924983978271484
    9. '==' → logprob: -11.299983978271484
    10. ',j' → logprob: -11.674983978271484

Token 112: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.13388703338569e-06
    2. ' j' → logprob: -11.875009536743164
    3. '[j' → logprob: -13.125009536743164
    4. '	j' → logprob: -16.875009536743164
    5. ':j' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.000009536743164
    7. '$j' → logprob: -18.000009536743164
    8. '_j' → logprob: -18.500009536743164
    9. 'jj' → logprob: -18.875009536743164
    10. ' ' → logprob: -19.125009536743164

Token 113: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05156559497117996
    2. '==' → logprob: -3.051565647125244
    3. ']' → logprob: -6.301565647125244
    4. ']==' → logprob: -7.801565647125244
    5. ' ' → logprob: -7.926565647125244
    6. ')' → logprob: -8.176565170288086
    7. ' ' → logprob: -11.051565170288086
    8. ' in' → logprob: -11.176565170288086
    9. ' ]' → logprob: -11.676565170288086
    10. '    ' → logprob: -11.676565170288086

Token 114: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20156730711460114
    2. '==' → logprob: -1.70156729221344
    3. ' in' → logprob: -9.201567649841309
    4. ' ' → logprob: -10.326567649841309
    5. '=' → logprob: -12.451567649841309
    6. 'in' → logprob: -12.576567649841309
    7. ' ' → logprob: -12.951567649841309
    8. ']==' → logprob: -13.326567649841309
    9. '==
' → logprob: -13.701567649841309
    10. ')' → logprob: -13.826567649841309

Token 115: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.01815064437687397
    2. 'col' → logprob: -4.018150806427002
    3. '	col' → logprob: -14.643150329589844
    4. ' ' → logprob: -15.643150329589844
    5. '[col' → logprob: -16.893150329589844
    6. '.col' → logprob: -17.768150329589844
    7. '(col' → logprob: -18.393150329589844
    8. 'colm' → logprob: -18.643150329589844
    9. ' ' → logprob: -18.893150329589844
    10. ' coli' → logprob: -19.018150329589844

Token 116: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -4.3226136767771095e-05
    2. 'max' → logprob: -10.125042915344238
    3. 's' → logprob: -13.250042915344238
    4. '_' → logprob: -14.500042915344238
    5. '_m' → logprob: -15.500042915344238
    6. '[j' → logprob: -15.875042915344238
    7. 'Max' → logprob: -16.250043869018555
    8. ' _' → logprob: -16.250043869018555
    9. '_MAX' → logprob: -16.375043869018555
    10. '[_' → logprob: -17.625043869018555

Token 117: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13788723945617676
    2. 'axs' → logprob: -2.6378872394561768
    3. 'ax' → logprob: -2.8878872394561768
    4. 'max' → logprob: -7.387887001037598
    5. '   ' → logprob: -8.137887001037598
    6. 'xs' → logprob: -9.012887001037598
    7. 'axes' → logprob: -9.137887001037598
    8. '[j' → logprob: -9.262887001037598
    9. 'aks' → logprob: -9.887887001037598
    10. 'as' → logprob: -10.137887001037598

Token 118: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.2842308680992573e-05
    2. '][' → logprob: -11.375022888183594
    3. ' [' → logprob: -12.125022888183594
    4. 'j' → logprob: -13.500022888183594
    5. '[' → logprob: -14.000022888183594
    6. '[i' → logprob: -14.125022888183594
    7. '   ' → logprob: -14.125022888183594
    8. ']' → logprob: -14.250022888183594
    9. '```' → logprob: -14.500022888183594
    10. '[
' → logprob: -15.125022888183594

Token 119: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0913325771689415
    2. ']:' → logprob: -2.9663326740264893
    3. ':' → logprob: -3.3413326740264893
    4. '):
' → logprob: -8.96633243560791
    5. ')' → logprob: -9.21633243560791
    6. ']' → logprob: -9.59133243560791
    7. '       ' → logprob: -10.34133243560791
    8. '           ' → logprob: -10.84133243560791
    9. ']):' → logprob: -11.59133243560791
    10. '   ' → logprob: -11.71633243560791

Token 120: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00046558488975279033
    2. ':
' → logprob: -8.875465393066406
    3. 'result' → logprob: -9.125465393066406
    4. '
' → logprob: -9.500465393066406
    5. '           ' → logprob: -9.500465393066406
    6. '                   ' → logprob: -11.000465393066406
    7. ':' → logprob: -11.125465393066406
    8. ' result' → logprob: -11.750465393066406
    9. '                
' → logprob: -12.125465393066406
    10. '              ' → logprob: -12.250465393066406

Token 121: ' result' (ID: 1534)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5904614329338074
    2. '                   ' → logprob: -0.9654614329338074
    3. 'result' (adapté à ' result') → logprob: -3.590461492538452
    4. ' result' → logprob: -3.965461492538452
    5. '
' → logprob: -4.090461254119873
    6. '           ' → logprob: -7.340461254119873
    7. '                ' → logprob: -7.715461254119873
    8. '                       ' → logprob: -8.090461730957031
    9. '                  ' → logprob: -9.715461730957031
    10. '   ' → logprob: -9.840461730957031

Token 122: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.024819301441311836
    2. '+=' → logprob: -3.7748193740844727
    3. '+' → logprob: -6.524819374084473
    4. ' =' → logprob: -10.024819374084473
    5. '=' → logprob: -10.274819374084473
    6. ' +' → logprob: -10.649819374084473
    7. ' ' → logprob: -13.274819374084473
    8. ']+=' → logprob: -14.649819374084473
    9. ' ' → logprob: -15.649819374084473
    10. ')' → logprob: -15.774819374084473

Token 123: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.20150622725486755
    2. ' matrix' → logprob: -1.70150625705719
    3. '1' → logprob: -10.076506614685059
    4. '	matrix' → logprob: -10.826506614685059
    5. ' ' → logprob: -11.201506614685059
    6. '(matrix' → logprob: -11.951506614685059
    7. 'mat' → logprob: -13.076506614685059
    8. '   ' → logprob: -13.326506614685059
    9. 'm' → logprob: -13.326506614685059
    10. 'max' → logprob: -13.701506614685059

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.62500286102295
    3. '[I' → logprob: -13.87500286102295
    4. '<|end|>' → logprob: -16.750001907348633
    5. '```' → logprob: -17.000001907348633
    6. '[j' → logprob: -17.250001907348633
    7. 'i' → logprob: -17.750001907348633
    8. '[int' → logprob: -17.875001907348633
    9. '\[' → logprob: -18.250001907348633
    10. '][' → logprob: -18.375001907348633

Token 125: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.28809723258018494
    2. '][' → logprob: -1.4130972623825073
    3. '[j' → logprob: -5.163097381591797
    4. '[' → logprob: -6.913097381591797
    5. ']' → logprob: -9.038097381591797
    6. ')[' → logprob: -11.038097381591797
    7. ')' → logprob: -11.663097381591797
    8. 'i' → logprob: -11.663097381591797
    9. ' [' → logprob: -11.788097381591797
    10. '[I' → logprob: -12.163097381591797

Token 126: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -13.875001907348633
    3. ' j' → logprob: -15.250001907348633
    4. '[j' → logprob: -15.625001907348633
    5. '][' → logprob: -16.875001907348633
    6. ']' → logprob: -17.625001907348633
    7. '0' → logprob: -19.250001907348633
    8. '[i' → logprob: -19.500001907348633
    9. ' ' → logprob: -19.750001907348633
    10. '	j' → logprob: -19.750001907348633

Token 127: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04811236634850502
    2. ')
' → logprob: -3.423112392425537
    3. '               ' → logprob: -5.173112392425537
    4. ']' → logprob: -5.298112392425537
    5. '           ' → logprob: -6.423112392425537
    6. '
' → logprob: -7.298112392425537
    7. '                   ' → logprob: -7.423112392425537
    8. '<|end|>' → logprob: -7.673112392425537
    9. ']
' → logprob: -9.548111915588379
    10. '<|end|>' → logprob: -10.048111915588379

Token 128: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25489920377731323
    2. '
' → logprob: -1.629899263381958
    3. '               ' → logprob: -4.504899024963379
    4. '    
' → logprob: -4.629899024963379
    5. 'print' → logprob: -5.004899024963379
    6. '           ' → logprob: -7.004899024963379
    7. '\n' → logprob: -8.629899024963379
    8. '                   ' → logprob: -9.129899024963379
    9. '                
' → logprob: -9.129899024963379
    10. '       ' → logprob: -9.254899024963379

Token 129: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19157926738262177
    2. 'break' (adapté à ' break') → logprob: -1.8165792226791382
    3. '           ' → logprob: -5.066579341888428
    4. '       ' → logprob: -6.066579341888428
    5. ' break' → logprob: -6.566579341888428
    6. '   ' → logprob: -6.941579341888428
    7. ' print' → logprob: -7.691579341888428
    8. '               ' → logprob: -8.19157886505127
    9. '
' → logprob: -10.81657886505127
    10. '	break' → logprob: -12.31657886505127

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08340315520763397
    2. '   ' → logprob: -3.8334031105041504
    3. '<|end|>' → logprob: -3.9584031105041504
    4. '    
' → logprob: -4.08340311050415
    5. '\n' → logprob: -4.33340311050415
    6. '  
' → logprob: -5.58340311050415
    7. '       ' → logprob: -6.33340311050415
    8. '   
' → logprob: -6.95840311050415
    9. ' 
' → logprob: -7.08340311050415
    10. '  ' → logprob: -7.70840311050415

Token 131: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41562241315841675
    2. '
' → logprob: -1.6656224727630615
    3. '    
' → logprob: -2.7906224727630615
    4. '<|end|>' → logprob: -3.1656224727630615
    5. '       ' → logprob: -3.4156224727630615
    6. '  
' → logprob: -5.415622234344482
    7. '        
' → logprob: -6.290622234344482
    8. '\n' → logprob: -6.290622234344482
    9. ' ' → logprob: -6.665622234344482
    10. '    ' → logprob: -7.040622234344482

Token 132: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.003178544342517853
    2. 'result' → logprob: -5.753178596496582
    3. ' break' → logprob: -14.128178596496582
    4. '(result' → logprob: -16.628177642822266
    5. ' ' → logprob: -19.128177642822266
    6. '	result' → logprob: -19.253177642822266
    7. 'break' → logprob: -19.503177642822266
    8. '[result' → logprob: -19.628177642822266
    9. ' True' → logprob: -19.878177642822266
    10. '=result' → logprob: -20.128177642822266

Token 134: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1139359101653099
    2. ' !=' → logprob: -2.238935947418213
    3. ':' → logprob: -7.488935947418213
    4. '   ' → logprob: -8.238935470581055
    5. '>' → logprob: -8.613935470581055
    6. '==' → logprob: -9.488935470581055
    7. ')!=' → logprob: -11.488935470581055
    8. ':
' → logprob: -12.488935470581055
    9. 'break' → logprob: -13.113935470581055
    10. ' ==' → logprob: -13.113935470581055

Token 135: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00360019039362669
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -15.878600120544434
    4. '  ' → logprob: -17.81610107421875
    5. '    ' → logprob: -18.12860107421875
    6. '=' → logprob: -18.19110107421875
    7. ' ' → logprob: -18.87860107421875
    8. '۰' → logprob: -19.19110107421875
    9. '00' → logprob: -19.69110107421875
    10. '     ' → logprob: -20.19110107421875

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.875059127807617
    4. '۰' → logprob: -20.625059127807617
    5. '０' → logprob: -21.375059127807617
    6. '  ' → logprob: -21.500059127807617
    7. '    ' → logprob: -21.750059127807617
    8. ')' → logprob: -22.250059127807617
    9. ' ' → logprob: -22.500059127807617
    10. '```' → logprob: -23.125059127807617

Token 137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2251587212085724
    2. '           ' → logprob: -2.10015869140625
    3. ':
' → logprob: -2.60015869140625
    4. '       ' → logprob: -5.35015869140625
    5. '               ' → logprob: -9.22515869140625
    6. '   ' → logprob: -10.47515869140625
    7. 'break' → logprob: -11.35015869140625
    8. ':return' → logprob: -12.60015869140625
    9. '          ' → logprob: -12.72515869140625
    10. '         ' → logprob: -13.22515869140625

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002330992283532396
    2. '       ' → logprob: -8.500232696533203
    3. '               ' → logprob: -11.500232696533203
    4. 'break' → logprob: -11.750232696533203
    5. '		' → logprob: -12.000232696533203
    6. ' break' → logprob: -12.875232696533203
    7. '	       ' → logprob: -14.375232696533203
    8. '
' → logprob: -14.375232696533203
    9. '          ' → logprob: -14.625232696533203
    10. '   ' → logprob: -15.125232696533203

Token 139: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6439587473869324
    2. 'break' (adapté à ' break') → logprob: -0.8939587473869324
    3. ' break' → logprob: -2.893958806991577
    4. '       ' → logprob: -4.643958568572998
    5. '   ' → logprob: -7.768958568572998
    6. '	break' → logprob: -8.393959045410156
    7. '               ' → logprob: -9.768959045410156
    8. '
' → logprob: -10.268959045410156
    9. '		' → logprob: -10.518959045410156
    10. 'b' → logprob: -12.893959045410156

Token 140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5764562487602234
    2. 'print' → logprob: -0.8264562487602234
    3. '
' → logprob: -7.951456069946289
    4. '    
' → logprob: -9.201456069946289
    5. '```' → logprob: -10.201456069946289
    6. ' print' → logprob: -10.826456069946289
    7. '  
' → logprob: -12.576456069946289
    8. '        
' → logprob: -14.826456069946289
    9. '	print' → logprob: -15.076456069946289
    10. '(print' → logprob: -15.201456069946289

Token 141: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005265769083052874
    2. '   ' → logprob: -5.255265712738037
    3. ' print' → logprob: -10.755266189575195
    4. '```' → logprob: -12.130266189575195
    5. '    
' → logprob: -12.505266189575195
    6. '
' → logprob: -14.130266189575195
    7. '  
' → logprob: -15.630266189575195
    8. '(print' → logprob: -15.755266189575195
    9. 'else' → logprob: -16.380266189575195
    10. '	print' → logprob: -16.755266189575195

Token 142: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008655699901282787
    2. '   ' → logprob: -4.758655548095703
    3. ' print' → logprob: -10.133655548095703
    4. '```' → logprob: -13.633655548095703
    5. '    
' → logprob: -15.883655548095703
    6. '	print' → logprob: -17.633655548095703
    7. 'printf' → logprob: -17.883655548095703
    8. 'if' → logprob: -18.133655548095703
    9. '
' → logprob: -18.258655548095703
    10. '#print' → logprob: -18.758655548095703

Token 143: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.2528814673423767
    2. '(' → logprob: -1.5028815269470215
    3. '()' → logprob: -7.0028815269470215
    4. '('' → logprob: -10.252881050109863
    5. 'result' → logprob: -13.252881050109863
    6. '("' → logprob: -13.252881050109863
    7. '((' → logprob: -13.752881050109863
    8. '(f' → logprob: -14.252881050109863
    9. '(res' → logprob: -14.752881050109863
    10. '(results' → logprob: -14.752881050109863

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -15.875
    3. ')`' → logprob: -18.125
    4. '))' → logprob: -18.75
    5. ')
' → logprob: -18.875
    6. '()' → logprob: -19.625
    7. ')}' → logprob: -20.5
    8. '())' → logprob: -20.5
    9. '')' → logprob: -20.5
    10. '`)' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 128
Précision stricte (1ère position): 54.93%
Précision adaptée (1ère position): 55.63%
Précision (top 10): 90.14%
================================================================================
