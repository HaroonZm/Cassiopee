================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

N,M,K = map(int,input().split())
parent = [i for i in range(N+1)]
rank = [0]*(N+1)
club = [-1]*(N+1)

def find(x):
    while parent[x] != x:
        parent[x] = parent[parent[x]]
        x = parent[x]
    return x

def unite(x,y):
    x = find(x)
    y = find(y)
    if x == y:
        return
    if rank[x] < rank[y]:
        parent[x] = y
        # merge club info
        if club[y] == -1 and club[x] != -1:
            club[y] = club[x]
    else:
        parent[y] = x
        if rank[x] == rank[y]:
            rank[x] += 1
        # merge club info
        if club[x] == -1 and club[y] != -1:
            club[x] = club[y]

def get_club(x):
    return club[find(x)]

for i in range(1,K+1):
    t,*a = map(int,input().split())
    if t == 1:
        a1,a2 = a
        r1 = find(a1)
        r2 = find(a2)
        if r1 == r2:
            continue
        # check for contradiction in club assignment
        c1 = club[r1]
        c2 = club[r2]
        if c1 != -1 and c2 != -1 and c1 != c2:
            print(i)
            exit()
        unite(a1,a2)
    else:
        c,x = a
        r = find(c)
        if club[r] == -1:
            club[r] = x
        elif club[r] != x:
            print(i)
            exit()
print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17236806452274323
    2. '\n' → logprob: -2.172368049621582
    3. '<|end|>' → logprob: -4.047368049621582
    4. 'import' → logprob: -4.547368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. '\' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '[' → logprob: -6.922368049621582
    9. '```' → logprob: -7.172368049621582
    10. '.readline' → logprob: -7.172368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.5449705719947815
    2. 'set' → logprob: -2.2949705123901367
    3. 't' → logprob: -2.7949705123901367
    4. 'ex' → logprob: -2.9199705123901367
    5. 'encoding' → logprob: -2.9199705123901367
    6. 'default' → logprob: -3.2949705123901367
    7. 'x' → logprob: -3.6699705123901367
    8. 'e' → logprob: -4.169970512390137
    9. '_' → logprob: -5.044970512390137
    10. 'rec' → logprob: -5.044970512390137

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5803260207176208
    2. '_limit' → logprob: -0.8303260207176208
    3. '_depth' → logprob: -5.580326080322266
    4. 'depth' → logprob: -7.955326080322266
    5. '_' → logprob: -9.705326080322266
    6. ' limit' → logprob: -10.080326080322266
    7. 'lim' → logprob: -10.705326080322266
    8. '(' → logprob: -11.205326080322266
    9. '_rate' → logprob: -11.205326080322266
    10. '_limits' → logprob: -11.330326080322266

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023612022399902
    2. '100' → logprob: -1.910236120223999
    3. ' ' → logprob: -12.660236358642578
    4. '500' → logprob: -12.785236358642578
    5. '300' → logprob: -13.285236358642578
    6. '999' → logprob: -13.660236358642578
    7. '1' → logprob: -13.910236358642578
    8. '150' → logprob: -14.285236358642578
    9. '200' → logprob: -14.785236358642578
    10. '(' → logprob: -15.160236358642578

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5872175097465515
    2. '000' → logprob: -1.3372175693511963
    3. '00' → logprob: -1.7122175693511963
    4. '4' → logprob: -7.462217330932617
    5. '6' → logprob: -7.837217330932617
    6. '**' → logprob: -10.462217330932617
    7. '5' → logprob: -10.462217330932617
    8. '2' → logprob: -11.087217330932617
    9. '```' → logprob: -11.087217330932617
    10. '3' → logprob: -11.587217330932617

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004092408809810877
    2. '9' → logprob: -6.004092216491699
    3. '6' → logprob: -7.004092216491699
    4. '8' → logprob: -7.254092216491699
    5. '```' → logprob: -17.254093170166016
    6. ' ' → logprob: -17.379093170166016
    7. '``' → logprob: -20.504093170166016
    8. ')' → logprob: -20.629093170166016
    9. '(' → logprob: -21.129093170166016
    10. '**' → logprob: -21.629093170166016

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4553336501121521
    2. '\' → logprob: -2.330333709716797
    3. '

' → logprob: -2.830333709716797
    4. '\n' → logprob: -2.955333709716797
    5. '(' → logprob: -3.080333709716797
    6. 'def' → logprob: -3.455333709716797
    7. '```' → logprob: -3.705333709716797
    8. '
' → logprob: -3.955333709716797
    9. '' → logprob: -4.705333709716797
    10. ')' → logprob: -4.705333709716797

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0258511770516634
    2. '()' → logprob: -3.775851249694824
    3. '.' → logprob: -7.150851249694824
    4. '40' → logprob: -8.025851249694824
    5. '('' → logprob: -8.400851249694824
    6. ')' → logprob: -8.775851249694824
    7. '```' → logprob: -8.900851249694824
    8. '("")' → logprob: -9.025851249694824
    9. '("("' → logprob: -9.150851249694824
    10. '(
' → logprob: -9.400851249694824

Token 15: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1763271540403366
    2. 'input' → logprob: -1.926327109336853
    3. ' sys' → logprob: -4.176327228546143
    4. 'sys' → logprob: -7.676327228546143
    5. ' open' → logprob: -9.676326751708984
    6. '=input' → logprob: -10.926326751708984
    7. ' lambda' → logprob: -11.176326751708984
    8. ' ' → logprob: -11.426326751708984
    9. ' raw' → logprob: -11.426326751708984
    10. '```' → logprob: -11.551326751708984

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010250494815409184
    2. '.stdin' → logprob: -5.385250568389893
    3. '.readline' → logprob: -6.010250568389893
    4. ' .' → logprob: -6.010250568389893
    5. '.input' → logprob: -8.135250091552734
    6. '.import' → logprob: -9.010250091552734
    7. '.get' → logprob: -9.885250091552734
    8. '.stdout' → logprob: -10.385250091552734
    9. '.argv' → logprob: -11.010250091552734
    10. '.read' → logprob: -11.010250091552734

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.17101041972637177
    2. '.' → logprob: -1.9210103750228882
    3. '.read' → logprob: -4.546010494232178
    4. '.Read' → logprob: -9.42101001739502
    5. '.readlines' → logprob: -11.29601001739502
    6. '.buffer' → logprob: -11.67101001739502
    7. '.READ' → logprob: -12.92101001739502
    8. '.stdin' → logprob: -13.04601001739502
    9. '.
' → logprob: -13.17101001739502
    10. 'read' → logprob: -13.29601001739502

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39599570631980896
    2. '(' → logprob: -1.3959957361221313
    3. 'def' → logprob: -3.645995616912842
    4. '\n' → logprob: -4.395995616912842
    5. '(n' → logprob: -4.770995616912842
    6. '()
' → logprob: -5.270995616912842
    7. '(
' → logprob: -5.395995616912842
    8. 'for' → logprob: -5.520995616912842
    9. ')' → logprob: -5.645995616912842
    10. 'n' → logprob: -5.895995616912842

Token 19: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4745829403400421
    2. 'n' → logprob: -0.9745829105377197
    3. 'N' → logprob: -8.22458267211914
    4. 'd' → logprob: -9.09958267211914
    5. '```' → logprob: -10.22458267211914
    6. 't' → logprob: -10.72458267211914
    7. 'a' → logprob: -10.97458267211914
    8. 'class' → logprob: -11.09958267211914
    9. 'for' → logprob: -12.09958267211914
    10. '\' → logprob: -12.09958267211914

Token 20: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3183458745479584
    2. '=' → logprob: -1.4433459043502808
    3. ',' → logprob: -4.06834602355957
    4. ' ' → logprob: -4.19334602355957
    5. ')' → logprob: -5.94334602355957
    6. '<|end|>' → logprob: -7.44334602355957
    7. '.' → logprob: -8.31834602355957
    8. ' ,' → logprob: -8.56834602355957
    9. '=int' → logprob: -8.81834602355957
    10. '[' → logprob: -9.19334602355957

Token 21: ',K' (ID: 107147)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1189122423529625
    2. '=' → logprob: -2.2439122200012207
    3. ',' → logprob: -5.118912220001221
    4. ' ,' → logprob: -9.618912696838379
    5. ' ' → logprob: -11.493912696838379
    6. '=input' → logprob: -12.868912696838379
    7. ')' → logprob: -13.118912696838379
    8. '=int' → logprob: -13.368912696838379
    9. ' =
' → logprob: -13.618912696838379
    10. ',N' → logprob: -14.618912696838379

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931772828102112
    2. ' =' → logprob: -0.6931772828102112
    3. ',' → logprob: -10.943177223205566
    4. '=int' → logprob: -12.068177223205566
    5. '=input' → logprob: -12.693177223205566
    6. ' =
' → logprob: -13.818177223205566
    7. '=

' → logprob: -14.818177223205566
    8. '=sys' → logprob: -15.068177223205566
    9. ' ' → logprob: -15.318177223205566
    10. '=
' → logprob: -15.318177223205566

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.02326376549899578
    2. 'map' → logprob: -3.773263692855835
    3. ' list' → logprob: -11.648263931274414
    4. ' ' → logprob: -12.773263931274414
    5. ' tuple' → logprob: -13.148263931274414
    6. '	map' → logprob: -13.523263931274414
    7. 'list' → logprob: -14.023263931274414
    8. ' input' → logprob: -14.148263931274414
    9. '0' → logprob: -14.648263931274414
    10. '(map' → logprob: -15.273263931274414

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014420404098927975
    2. '(' → logprob: -4.264420509338379
    3. '(input' → logprob: -9.014420509338379
    4. '(lambda' → logprob: -9.139420509338379
    5. '(str' → logprob: -11.264420509338379
    6. 'int' → logprob: -12.764420509338379
    7. '(tuple' → logprob: -13.264420509338379
    8. '<int' → logprob: -13.264420509338379
    9. ' (' → logprob: -13.389420509338379
    10. '(
' → logprob: -13.514420509338379

Token 25: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2566419541835785
    2. ',' → logprob: -1.5066419839859009
    3. '(input' → logprob: -5.881641864776611
    4. '(' → logprob: -6.506641864776611
    5. 'input' → logprob: -8.50664234161377
    6. ' ,' → logprob: -8.88164234161377
    7. ',int' → logprob: -10.13164234161377
    8. ',(' → logprob: -11.25664234161377
    9. ' (' → logprob: -11.50664234161377
    10. ' input' → logprob: -12.00664234161377

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009827931644394994
    2. '()' → logprob: -7.625982761383057
    3. '())' → logprob: -7.625982761383057
    4. ' ().' → logprob: -12.875983238220215
    5. ')' → logprob: -13.000983238220215
    6. '(' → logprob: -14.250983238220215
    7. '()))' → logprob: -14.500983238220215
    8. '()
' → logprob: -14.875983238220215
    9. '();)' → logprob: -16.3759822845459
    10. '()[' → logprob: -16.6259822845459

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0026720918249338865
    2. 'strip' → logprob: -6.50267219543457
    3. 'rstrip' → logprob: -6.75267219543457
    4. 'read' → logprob: -14.87767219543457
    5. ' split' → logprob: -14.87767219543457
    6. '(split' → logprob: -15.37767219543457
    7. 'spl' → logprob: -16.12767219543457
    8. ')' → logprob: -16.12767219543457
    9. '```' → logprob: -16.62767219543457
    10. 'rs' → logprob: -17.37767219543457

Token 28: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032485672272741795
    2. '))' → logprob: -8.125325202941895
    3. '())' → logprob: -11.125325202941895
    4. '()' → logprob: -12.625325202941895
    5. '`)' → logprob: -12.750325202941895
    6. ')))' → logprob: -13.250325202941895
    7. '(' → logprob: -13.500325202941895
    8. ')`' → logprob: -13.500325202941895
    9. '),' → logprob: -13.875325202941895
    10. ' )' → logprob: -14.625325202941895

Token 29: 'parent' (ID: 4903)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.0583431720733643
    2. 'dp' → logprob: -2.0583431720733643
    3. 'data' → logprob: -2.4333431720733643
    4. ' 
' → logprob: -2.4333431720733643
    5. '
' → logprob: -2.6833431720733643
    6. 'a' → logprob: -2.6833431720733643
    7. 'A' → logprob: -3.5583431720733643
    8. ')' → logprob: -3.5583431720733643
    9. ' graph' → logprob: -3.9333431720733643
    10. 'arr' → logprob: -4.558342933654785

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04123979061841965
    2. '[' → logprob: -3.6662397384643555
    3. '=' → logprob: -4.5412397384643555
    4. 's' → logprob: -5.7912397384643555
    5. '[]' → logprob: -8.291239738464355
    6. ' ' → logprob: -8.541239738464355
    7. '=[' → logprob: -8.666239738464355
    8. ' =[' → logprob: -8.791239738464355
    9. '_' → logprob: -9.541239738464355
    10. '[:]' → logprob: -9.666239738464355

Token 31: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.33119720220565796
    2. '[list' → logprob: -2.0811972618103027
    3. '[' → logprob: -2.3311972618103027
    4. 'list' → logprob: -2.8311972618103027
    5. '[i' → logprob: -7.956197261810303
    6. ' [' → logprob: -8.081196784973145
    7. ' list' → logprob: -8.706196784973145
    8. ' [-' → logprob: -9.331196784973145
    9. '[node' → logprob: -10.456196784973145
    10. '[List' → logprob: -10.831196784973145

Token 32: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007064624223858118
    2. '-' → logprob: -5.0070648193359375
    3. ' i' → logprob: -8.382064819335938
    4. '-i' → logprob: -9.382064819335938
    5. '0' → logprob: -10.632064819335938
    6. ' -' → logprob: -12.632064819335938
    7. '_' → logprob: -12.882064819335938
    8. '_i' → logprob: -13.257064819335938
    9. '*i' → logprob: -13.382064819335938
    10. '	i' → logprob: -14.007064819335938

Token 33: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0699521079659462
    2. 'for' → logprob: -2.6949520111083984
    3. ')' → logprob: -12.194952011108398
    4. ' ' → logprob: -12.569952011108398
    5. '	for' → logprob: -12.694952011108398
    6. 'f' → logprob: -13.444952011108398
    7. 'in' → logprob: -14.319952011108398
    8. ' in' → logprob: -14.444952011108398
    9. ' f' → logprob: -14.694952011108398
    10. ' i' → logprob: -15.194952011108398

Token 34: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0065284958109259605
    2. ' i' → logprob: -5.631528377532959
    3. 'range' → logprob: -6.256528377532959
    4. ' in' → logprob: -7.506528377532959
    5. ' ' → logprob: -8.131528854370117
    6. '(range' → logprob: -9.381528854370117
    7. '	range' → logprob: -9.756528854370117
    8. '_range' → logprob: -12.256528854370117
    9. ' xrange' → logprob: -12.381528854370117
    10. '  ' → logprob: -12.881528854370117

Token 35: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6490359306335449
    2. ' in' → logprob: -0.7740359306335449
    3. ' range' → logprob: -4.649035930633545
    4. 'range' → logprob: -5.024035930633545
    5. ' ' → logprob: -9.399036407470703
    6. '  ' → logprob: -11.024036407470703
    7. 'n' → logprob: -11.024036407470703
    8. '(range' → logprob: -11.649036407470703
    9. ',' → logprob: -12.024036407470703
    10. '<|end|>' → logprob: -12.524036407470703

Token 36: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0788901224732399
    2. ' range' → logprob: -2.578890085220337
    3. '(range' → logprob: -15.328889846801758
    4. '	range' → logprob: -16.203889846801758
    5. ' ' → logprob: -18.578889846801758
    6. '_range' → logprob: -19.203889846801758
    7. 'rang' → logprob: -19.828889846801758
    8. '.range' → logprob: -20.203889846801758
    9. '  ' → logprob: -20.328889846801758
    10. '`' → logprob: -20.328889846801758

Token 37: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00031425125780515373
    2. '(' → logprob: -8.125314712524414
    3. 'N' → logprob: -11.625314712524414
    4. ' (' → logprob: -11.750314712524414
    5. '(M' → logprob: -14.500314712524414
    6. '(n' → logprob: -14.750314712524414
    7. ' N' → logprob: -15.125314712524414
    8. '((' → logprob: -16.875314712524414
    9. '	N' → logprob: -17.000314712524414
    10. ' ' → logprob: -17.375314712524414

Token 38: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006179584306664765
    2. '+' → logprob: -7.750617980957031
    3. ')]
' → logprob: -9.625617980957031
    4. ')' → logprob: -9.625617980957031
    5. ' )' → logprob: -10.125617980957031
    6. ')])' → logprob: -11.625617980957031
    7. ')]

' → logprob: -14.000617980957031
    8. ')]
' → logprob: -14.000617980957031
    9. '**' → logprob: -14.250617980957031
    10. ']' → logprob: -14.250617980957031

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020413640595506877
    2. ' ' → logprob: -8.500204086303711
    3. ')' → logprob: -14.875204086303711
    4. '```' → logprob: -16.37520408630371
    5. '１' → logprob: -16.62520408630371
    6. '2' → logprob: -16.68770408630371
    7. ' )' → logprob: -17.87520408630371
    8. '7' → logprob: -18.50020408630371
    9. '۱' → logprob: -18.75020408630371
    10. ' ' → logprob: -18.81270408630371

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0017367053078487515
    2. ')' → logprob: -6.501736640930176
    3. ']' → logprob: -8.376736640930176
    4. ' )' → logprob: -13.626736640930176
    5. ')]
' → logprob: -14.376736640930176
    6. ')])' → logprob: -14.626736640930176
    7. '])' → logprob: -14.626736640930176
    8. ' ]' → logprob: -15.126736640930176
    9. ')],' → logprob: -15.251736640930176
    10. '))' → logprob: -15.751736640930176

Token 41: 'rank' (ID: 30162)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050530578941106796
    2. '
' → logprob: -3.3005306720733643
    3. ' 
' → logprob: -5.175530433654785
    4. '```' → logprob: -5.800530433654785
    5. 'rank' → logprob: -6.675530433654785
    6. 'size' → logprob: -7.175530433654785
    7. 'parent' → logprob: -8.300530433654785
    8. ' def' → logprob: -8.550530433654785
    9. '

' → logprob: -8.800530433654785
    10. '
' → logprob: -8.800530433654785

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002042009960860014
    2. '=' → logprob: -6.252041816711426
    3. 's' → logprob: -9.627041816711426
    4. ' ' → logprob: -10.877041816711426
    5. '[' → logprob: -11.252041816711426
    6. ' =[' → logprob: -11.377041816711426
    7. '=[' → logprob: -13.627041816711426
    8. '_' → logprob: -14.252041816711426
    9. '=[]' → logprob: -14.377041816711426
    10. ',' → logprob: -15.252041816711426

Token 43: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014164921827614307
    2. ' [' → logprob: -4.264164924621582
    3. '0' → logprob: -14.139164924621582
    4. '[i' → logprob: -14.389164924621582
    5. '[N' → logprob: -15.514164924621582
    6. '[-' → logprob: -17.889163970947266
    7. '[int' → logprob: -18.889163970947266
    8. '[n' → logprob: -19.139163970947266
    9. '[M' → logprob: -19.139163970947266
    10. ' ' → logprob: -19.389163970947266

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5941604690160602e-05
    2. ' ' → logprob: -10.875025749206543
    3. '1' → logprob: -11.875025749206543
    4. '０' → logprob: -18.12502670288086
    5. '```' → logprob: -18.25002670288086
    6. '۰' → logprob: -19.00002670288086
    7. ')' → logprob: -19.25002670288086
    8. ']' → logprob: -19.68752670288086
    9. '-' → logprob: -19.93752670288086
    10. '   ' → logprob: -20.12502670288086

Token 45: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22166334092617035
    2. ']*(' → logprob: -1.8466633558273315
    3. ' for' → logprob: -3.221663236618042
    4. ' ]' → logprob: -6.971663475036621
    5. ']*' → logprob: -8.846663475036621
    6. 'for' → logprob: -9.846663475036621
    7. ' ' → logprob: -11.221663475036621
    8. '	for' → logprob: -12.471663475036621
    9. ')' → logprob: -12.471663475036621
    10. '*(' → logprob: -12.596663475036621

Token 46: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.4121114822482923e-06
    2. ' N' → logprob: -12.625003814697266
    3. '(N' → logprob: -18.125003814697266
    4. ' ' → logprob: -18.750003814697266
    5. '(' → logprob: -19.125003814697266
    6. 'n' → logprob: -19.625003814697266
    7. '   ' → logprob: -20.000003814697266
    8. 'Ｎ' → logprob: -20.000003814697266
    9. '	N' → logprob: -20.125003814697266
    10. ')' → logprob: -20.250003814697266

Token 47: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7432603272027336e-06
    2. ' +' → logprob: -13.375001907348633
    3. '+
' → logprob: -17.000001907348633
    4. '+)' → logprob: -18.000001907348633
    5. '1' → logprob: -18.125001907348633
    6. '```' → logprob: -18.750001907348633
    7. '＋' → logprob: -19.125001907348633
    8. ')' → logprob: -19.250001907348633
    9. '<|end|>' → logprob: -19.500001907348633
    10. ')+' → logprob: -20.375001907348633

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.875009536743164
    4. ')' → logprob: -16.250009536743164
    5. '+' → logprob: -16.625009536743164
    6. '2' → logprob: -17.125009536743164
    7. '   ' → logprob: -18.000009536743164
    8. '１' → logprob: -18.000009536743164
    9. '7' → logprob: -18.187509536743164
    10. '-' → logprob: -18.375009536743164

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3795937522663735e-05
    2. ')
' → logprob: -10.75002384185791
    3. ' )' → logprob: -13.25002384185791
    4. '<|end|>' → logprob: -15.50002384185791
    5. ')

' → logprob: -16.125022888183594
    6. '),' → logprob: -16.750022888183594
    7. ')
' → logprob: -17.250022888183594
    8. '))' → logprob: -17.375022888183594
    9. '```' → logprob: -17.375022888183594
    10. ']' → logprob: -18.125022888183594

Token 50: 'club' (ID: 34632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18315060436725616
    2. '
' → logprob: -1.8081506490707397
    3. '
' → logprob: -6.058150768280029
    4. '

' → logprob: -7.808150768280029
    5. '```' → logprob: -7.808150768280029
    6. ' 
' → logprob: -9.058150291442871
    7. ' def' → logprob: -10.683150291442871
    8. '  
' → logprob: -10.808150291442871
    9. '' → logprob: -10.808150291442871
    10. '\' → logprob: -10.933150291442871

Token 51: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6438716053962708
    2. '_size' → logprob: -1.518871545791626
    3. ' =' → logprob: -1.893871545791626
    4. '_members' → logprob: -2.893871545791626
    5. '_parent' → logprob: -4.393871784210205
    6. '_member' → logprob: -4.518871784210205
    7. '_sizes' → logprob: -5.268871784210205
    8. 'size' → logprob: -5.393871784210205
    9. '_' → logprob: -5.643871784210205
    10. '_count' → logprob: -6.143871784210205

Token 52: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1114891916513443
    2. ' [' → logprob: -2.7364892959594727
    3. '[]' → logprob: -3.4864892959594727
    4. '{}' → logprob: -5.986489295959473
    5. ' []' → logprob: -5.986489295959473
    6. '[-' → logprob: -6.486489295959473
    7. ' [[]' → logprob: -7.361489295959473
    8. '['' → logprob: -7.486489295959473
    9. ' {}' → logprob: -7.611489295959473
    10. ' [{}' → logprob: -7.736489295959473

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011336666066199541
    2. '(' → logprob: -7.876133441925049
    3. 'float' → logprob: -8.376133918762207
    4. '2' → logprob: -8.626133918762207
    5. '10' → logprob: -8.751133918762207
    6. '100' → logprob: -10.001133918762207
    7. 'K' → logprob: -11.001133918762207
    8. '(-' → logprob: -11.001133918762207
    9. '-' → logprob: -11.126133918762207
    10. '999' → logprob: -11.251133918762207

Token 54: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.20702247321605682
    2. ']' → logprob: -1.8320224285125732
    3. ' for' → logprob: -3.8320224285125732
    4. 'for' → logprob: -5.832022666931152
    5. ')' → logprob: -7.082022666931152
    6. ']+' → logprob: -7.207022666931152
    7. ')*(' → logprob: -8.582022666931152
    8. ' ]' → logprob: -8.582022666931152
    9. ']*' → logprob: -8.957022666931152
    10. '*(' → logprob: -9.082022666931152

Token 55: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008678628131747246
    2. '(N' → logprob: -4.758678436279297
    3. '(' → logprob: -10.758678436279297
    4. ' N' → logprob: -10.883678436279297
    5. 'M' → logprob: -11.883678436279297
    6. 'K' → logprob: -12.633678436279297
    7. ' (' → logprob: -12.758678436279297
    8. ')' → logprob: -13.633678436279297
    9. '	N' → logprob: -13.883678436279297
    10. '(M' → logprob: -13.883678436279297

Token 56: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0802738870552275e-05
    2. '1' → logprob: -11.50001049041748
    3. ' +' → logprob: -14.87501049041748
    4. '+
' → logprob: -15.62501049041748
    5. '＋' → logprob: -17.250011444091797
    6. '```' → logprob: -17.500011444091797
    7. '+

' → logprob: -18.625011444091797
    8. 'plus' → logprob: -18.625011444091797
    9. ')+' → logprob: -18.875011444091797
    10. '+)' → logprob: -19.500011444091797

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '2' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.375001907348633
    5. ')' → logprob: -16.625001907348633
    6. '```' → logprob: -16.750001907348633
    7. '-' → logprob: -17.000001907348633
    8. '(' → logprob: -17.000001907348633
    9. '+' → logprob: -17.125001907348633
    10. '7' → logprob: -17.250001907348633

Token 58: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.822646693966817e-06
    2. ')
' → logprob: -11.875007629394531
    3. '<|end|>' → logprob: -15.750007629394531
    4. ')

' → logprob: -15.875007629394531
    5. ' )' → logprob: -15.875007629394531
    6. ')
' → logprob: -16.25000762939453
    7. '))' → logprob: -16.50000762939453
    8. '),' → logprob: -16.62500762939453
    9. '`)' → logprob: -17.25000762939453
    10. '[' → logprob: -17.62500762939453

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004982246900908649
    2. '
' → logprob: -7.750498294830322
    3. 'for' → logprob: -10.125497817993164
    4. '
' → logprob: -11.125497817993164
    5. '```' → logprob: -12.250497817993164
    6. '

' → logprob: -13.000497817993164
    7. '\' → logprob: -13.000497817993164
    8. ' def' → logprob: -13.625497817993164
    9. '' → logprob: -14.625497817993164
    10. '\n' → logprob: -15.000497817993164

Token 60: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0010836597066372633
    2. 'find' → logprob: -6.876083850860596
    3. ' union' → logprob: -10.251083374023438
    4. ' make' → logprob: -11.626083374023438
    5. '	find' → logprob: -13.001083374023438
    6. ' def' → logprob: -13.876083374023438
    7. ' fin' → logprob: -14.001083374023438
    8. ' d' → logprob: -14.251083374023438
    9. ' ' → logprob: -14.501083374023438
    10. ' f' → logprob: -15.376083374023438

Token 61: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05075722560286522
    2. '(' → logprob: -3.3007571697235107
    3. '(u' → logprob: -4.92575740814209
    4. '(a' → logprob: -5.80075740814209
    5. '(node' → logprob: -6.55075740814209
    6. '(i' → logprob: -7.80075740814209
    7. '_parent' → logprob: -8.42575740814209
    8. '(parent' → logprob: -8.92575740814209
    9. '(v' → logprob: -10.17575740814209
    10. '(n' → logprob: -10.17575740814209

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013515453319996595
    2. ')' → logprob: -6.626351356506348
    3. '):
' → logprob: -11.001351356506348
    4. ' ):' → logprob: -11.876351356506348
    5. ':' → logprob: -13.501351356506348
    6. '():' → logprob: -15.376351356506348
    7. '):
' → logprob: -15.751351356506348
    8. ')：' → logprob: -17.126352310180664
    9. '):

' → logprob: -17.376352310180664
    10. ' )' → logprob: -17.626352310180664

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3817552924156189
    2. ' if' → logprob: -1.6317553520202637
    3. 'if' → logprob: -2.5067553520202637
    4. '	if' → logprob: -3.7567553520202637
    5. ':' → logprob: -4.506755352020264
    6. ' ' → logprob: -6.006755352020264
    7. ' while' → logprob: -7.006755352020264
    8. '	while' → logprob: -7.006755352020264
    9. ':
' → logprob: -7.506755352020264
    10. 'while' → logprob: -8.256754875183105

Token 64: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2530030310153961
    2. 'if' → logprob: -1.5030030012130737
    3. ' while' → logprob: -7.128003120422363
    4. '   ' → logprob: -8.878003120422363
    5. 'while' (adapté à ' while') → logprob: -9.128003120422363
    6. '	if' → logprob: -11.503003120422363
    7. ' 
' → logprob: -11.628003120422363
    8. '    
' → logprob: -13.503003120422363
    9. ' ' → logprob: -13.878003120422363
    10. '    ' → logprob: -14.503003120422363

Token 65: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.16028809547424316
    2. ' parent' → logprob: -1.9102880954742432
    3. 'x' → logprob: -9.785287857055664
    4. ' x' → logprob: -12.660287857055664
    5. '(parent' → logprob: -13.160287857055664
    6. '	parent' → logprob: -13.285287857055664
    7. 'paren' → logprob: -14.910287857055664
    8. '_parent' → logprob: -16.160287857055664
    9. '[parent' → logprob: -16.285287857055664
    10. 'par' → logprob: -16.410287857055664

Token 66: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.1008713702030946e-06
    2. 'x' → logprob: -13.625001907348633
    3. '[parent' → logprob: -14.125001907348633
    4. '[' → logprob: -17.125001907348633
    5. '```' → logprob: -17.500001907348633
    6. '[i' → logprob: -19.625001907348633
    7. '(x' → logprob: -19.750001907348633
    8. '[
' → logprob: -20.000001907348633
    9. ' [' → logprob: -20.500001907348633
    10. ' x' → logprob: -20.500001907348633

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009444033727049828
    2. ']!=' → logprob: -4.759444236755371
    3. '!=' → logprob: -7.134444236755371
    4. ' !=' → logprob: -10.509444236755371
    5. 'x' → logprob: -13.009444236755371
    6. ' ]' → logprob: -13.759444236755371
    7. '[' → logprob: -14.884444236755371
    8. ')!=' → logprob: -14.884444236755371
    9. '```' → logprob: -15.884444236755371
    10. '']' → logprob: -16.384443283081055

Token 68: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00039849523454904556
    2. ' !=' → logprob: -7.875398635864258
    3. ']!=' → logprob: -11.500398635864258
    4. '()!=' → logprob: -12.875398635864258
    5. 'x' → logprob: -13.000398635864258
    6. ')!=' → logprob: -13.375398635864258
    7. '!==' → logprob: -14.125398635864258
    8. '!=(' → logprob: -14.375398635864258
    9. '=' → logprob: -15.750398635864258
    10. '```' → logprob: -16.000398635864258

Token 69: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009114635176956654
    2. ' x' → logprob: -7.000911235809326
    3. '	x' → logprob: -18.625911712646484
    4. ')x' → logprob: -21.125911712646484
    5. ' ' → logprob: -22.875911712646484
    6. '{x' → logprob: -24.000911712646484
    7. '$x' → logprob: -24.250911712646484
    8. '>x' → logprob: -24.375911712646484
    9. '"x' → logprob: -24.750911712646484
    10. '(x' → logprob: -25.000911712646484

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20195703208446503
    2. ':
' → logprob: -1.7019569873809814
    3. '):
' → logprob: -8.701956748962402
    4. '   ' → logprob: -8.951956748962402
    5. ',' → logprob: -9.951956748962402
    6. '):' → logprob: -9.951956748962402
    7. 'x' → logprob: -10.076956748962402
    8. ':x' → logprob: -10.201956748962402
    9. ' :' → logprob: -10.826956748962402
    10. ' :
' → logprob: -11.201956748962402

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009632247500121593
    2. ' x' → logprob: -5.134632110595703
    3. '   ' → logprob: -6.384632110595703
    4. ' parent' → logprob: -7.009632110595703
    5. 'x' → logprob: -7.384632110595703
    6. 'parent' → logprob: -8.384632110595703
    7. '```' → logprob: -9.384632110595703
    8. '
' → logprob: -9.884632110595703
    9. '	parent' → logprob: -10.259632110595703
    10. ',' → logprob: -11.259632110595703

Token 72: ' parent' (ID: 5980)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5425876975059509
    2. 'parent' (adapté à ' parent') → logprob: -1.0425877571105957
    3. ' parent' → logprob: -2.7925877571105957
    4. '   ' → logprob: -5.917587757110596
    5. ' x' → logprob: -6.417587757110596
    6. '       ' → logprob: -7.417587757110596
    7. '	parent' → logprob: -10.667587280273438
    8. '.parent' → logprob: -13.292587280273438
    9. ' ' → logprob: -13.792587280273438
    10. '```' → logprob: -14.042587280273438

Token 73: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.282920129597187e-05
    2. 'x' → logprob: -11.625012397766113
    3. '[' → logprob: -13.125012397766113
    4. '[parent' → logprob: -13.500012397766113
    5. ' =' → logprob: -16.25001335144043
    6. '=' → logprob: -16.37501335144043
    7. '```' → logprob: -16.75001335144043
    8. ']' → logprob: -16.87501335144043
    9. '[
' → logprob: -16.87501335144043
    10. '	x' → logprob: -17.12501335144043

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009313415735960007
    2. '=' → logprob: -4.759313583374023
    3. ']=' → logprob: -7.384313583374023
    4. ' =' → logprob: -9.634313583374023
    5. ' ]' → logprob: -11.759313583374023
    6. ')' → logprob: -12.384313583374023
    7. 'parent' → logprob: -16.009313583374023
    8. 'x' → logprob: -17.134313583374023
    9. ']]' → logprob: -17.509313583374023
    10. ')=' → logprob: -17.634313583374023

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '＝' → logprob: -15.813261985778809
    4. ' ' → logprob: -17.813261032104492
    5. '=

' → logprob: -18.563261032104492
    6. ']' → logprob: -19.688261032104492
    7. 'parent' → logprob: -19.938261032104492
    8. '=x' → logprob: -20.063261032104492
    9. '.=' → logprob: -20.188261032104492
    10. '=sys' → logprob: -20.438261032104492

Token 76: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.002475777640938759
    2. ' parent' → logprob: -6.002475738525391
    3. '	parent' → logprob: -17.12747573852539
    4. '[parent' → logprob: -17.50247573852539
    5. '(parent' → logprob: -17.62747573852539
    6. ',parent' → logprob: -20.12747573852539
    7. '.parent' → logprob: -20.25247573852539
    8. 'paren' → logprob: -21.00247573852539
    9. '_parent' → logprob: -22.12747573852539
    10. 'Parent' → logprob: -23.50247573852539

Token 77: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -5.860340752406046e-05
    2. '[' → logprob: -10.2500581741333
    3. '[x' → logprob: -10.8750581741333
    4. 'parent' → logprob: -12.5000581741333
    5. '(parent' → logprob: -15.7500581741333
    6. 'x' → logprob: -16.125059127807617
    7. '```' → logprob: -16.625059127807617
    8. '	parent' → logprob: -16.875059127807617
    9. '[player' → logprob: -17.250059127807617
    10. '[
' → logprob: -17.500059127807617

Token 78: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.04859020933508873
    2. 'x' → logprob: -3.0485901832580566
    3. '(x' → logprob: -13.798590660095215
    4. '[' → logprob: -14.298590660095215
    5. '	x' → logprob: -14.923590660095215
    6. '```' → logprob: -15.298590660095215
    7. ' x' → logprob: -15.423590660095215
    8. ']' → logprob: -15.798590660095215
    9. '[parent' → logprob: -16.0485897064209
    10. '[
' → logprob: -16.4235897064209

Token 79: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12756021320819855
    2. ']]' → logprob: -2.1275601387023926
    3. '[x' → logprob: -8.00256061553955
    4. ')]' → logprob: -8.50256061553955
    5. 'x' → logprob: -10.50256061553955
    6. ']]]' → logprob: -11.12756061553955
    7. ' ]' → logprob: -11.37756061553955
    8. ']}' → logprob: -11.37756061553955
    9. '])' → logprob: -11.50256061553955
    10. ' ]]' → logprob: -12.75256061553955

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4922388792037964
    2. 'x' → logprob: -0.9922388792037964
    3. ' x' → logprob: -4.617238998413086
    4. '   ' → logprob: -4.867238998413086
    5. '	x' → logprob: -8.242238998413086
    6. '(x' → logprob: -10.492238998413086
    7. ',x' → logprob: -10.742238998413086
    8. '[x' → logprob: -10.742238998413086
    9. '	' → logprob: -11.242238998413086
    10. '           ' → logprob: -11.242238998413086

Token 81: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -4.5491004129871726e-05
    2. ' x' → logprob: -10.000045776367188
    3. '	x' → logprob: -19.875045776367188
    4. '   ' → logprob: -21.250045776367188
    5. '       ' → logprob: -22.125045776367188
    6. 'parent' → logprob: -22.250045776367188
    7. '```' → logprob: -24.000045776367188
    8. ')x' → logprob: -24.625045776367188
    9. ' parent' → logprob: -24.625045776367188
    10. ',x' → logprob: -25.250045776367188

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -16.16022491455078
    4. '=

' → logprob: -17.78522491455078
    5. '=}' → logprob: -18.91022491455078
    6. ',' → logprob: -19.78522491455078
    7. '.=' → logprob: -19.78522491455078
    8. ' ' → logprob: -20.03522491455078
    9. ' =)' → logprob: -20.41022491455078
    10. ')' → logprob: -20.78522491455078

Token 83: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.018150178715586662
    2. ' parent' → logprob: -4.018150329589844
    3. '(parent' → logprob: -15.893150329589844
    4. '	parent' → logprob: -16.018150329589844
    5. '[parent' → logprob: -16.768150329589844
    6. '.parent' → logprob: -19.018150329589844
    7. '_parent' → logprob: -19.518150329589844
    8. ',parent' → logprob: -19.643150329589844
    9. 'Parent' → logprob: -19.893150329589844
    10. ' ' → logprob: -20.518150329589844

Token 84: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.6166903151315637e-05
    2. '[parent' → logprob: -11.500016212463379
    3. 'x' → logprob: -12.250016212463379
    4. '[' → logprob: -13.750016212463379
    5. '```' → logprob: -16.500015258789062
    6. '[
' → logprob: -18.000015258789062
    7. 'parent' → logprob: -18.375015258789062
    8. '{x' → logprob: -18.625015258789062
    9. '(x' → logprob: -18.875015258789062
    10. ' x' → logprob: -19.375015258789062

Token 85: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18491658568382263
    2. ')' → logprob: -1.809916615486145
    3. ')]' → logprob: -5.5599164962768555
    4. '])' → logprob: -6.8099164962768555
    5. '.parent' → logprob: -9.309916496276855
    6. 'parent' → logprob: -10.184916496276855
    7. '[parent' → logprob: -10.934916496276855
    8. ')])' → logprob: -11.309916496276855
    9. ']
' → logprob: -11.434916496276855
    10. ' ]' → logprob: -11.934916496276855

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05545976385474205
    2. 'return' → logprob: -2.93045973777771
    3. ' return' → logprob: -8.430459976196289
    4. 'x' → logprob: -8.680459976196289
    5. '	return' → logprob: -10.055459976196289
    6. '    
' → logprob: -10.055459976196289
    7. '
' → logprob: -10.180459976196289
    8. ' ' → logprob: -11.430459976196289
    9. '  
' → logprob: -11.430459976196289
    10. '```' → logprob: -11.555459976196289

Token 87: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013810154981911182
    2. '   ' → logprob: -4.763810157775879
    3. ' return' → logprob: -5.263810157775879
    4. '	return' → logprob: -12.513810157775879
    5. ' ' → logprob: -13.638810157775879
    6. ':return' → logprob: -13.888810157775879
    7. '  ' → logprob: -15.388810157775879
    8. 'eturn' → logprob: -16.013809204101562
    9. '```' → logprob: -16.388809204101562
    10. '       ' → logprob: -16.763809204101562

Token 88: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015024791937321424
    2. ' x' → logprob: -6.501502513885498
    3. 'parent' → logprob: -15.62650203704834
    4. ' parent' → logprob: -19.001502990722656
    5. '(x' → logprob: -19.626502990722656
    6. '	x' → logprob: -21.626502990722656
    7. ' ' → logprob: -22.751502990722656
    8. ')x' → logprob: -23.376502990722656
    9. '(parent' → logprob: -24.501502990722656
    10. '_x' → logprob: -24.501502990722656

Token 89: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005942667368799448
    2. '
' → logprob: -6.0059428215026855
    3. '<|end|>' → logprob: -6.0059428215026855
    4. '```' → logprob: -7.2559428215026855
    5. ' def' → logprob: -9.255942344665527
    6. '\' → logprob: -9.755942344665527
    7. '<|end|>' → logprob: -10.005942344665527
    8. '

' → logprob: -10.755942344665527
    9. ' 
' → logprob: -10.880942344665527
    10. 'newline' → logprob: -11.880942344665527

Token 90: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000698972842656076
    2. '
' → logprob: -8.000699043273926
    3. '```' → logprob: -8.625699043273926
    4. '<|end|>' → logprob: -9.250699043273926
    5. ' def' → logprob: -10.125699043273926
    6. '\' → logprob: -11.250699043273926
    7. ')' → logprob: -11.875699043273926
    8. '\n' → logprob: -12.375699043273926
    9. ' 
' → logprob: -12.500699043273926
    10. '

' → logprob: -12.500699043273926

Token 91: ' unite' (ID: 96146)
  Prédit: ' union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.0382230319082737
    2. 'union' → logprob: -3.2882230281829834
    3. ' unite' → logprob: -8.788223266601562
    4. '_union' → logprob: -10.663223266601562
    5. ' merge' → logprob: -13.038223266601562
    6. 'un' → logprob: -13.788223266601562
    7. ' find' → logprob: -13.913223266601562
    8. ' rank' → logprob: -14.538223266601562
    9. '	union' → logprob: -14.913223266601562
    10. 'merge' → logprob: -15.663223266601562

Token 92: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1192421019077301
    2. '(' → logprob: -2.3692421913146973
    3. '(a' → logprob: -3.9942421913146973
    4. '(parent' → logprob: -7.994242191314697
    5. ' (' → logprob: -9.619241714477539
    6. '(u' → logprob: -10.869241714477539
    7. '(A' → logprob: -12.369241714477539
    8. '(p' → logprob: -13.369241714477539
    9. '(left' → logprob: -13.619241714477539
    10. '(`' → logprob: -14.369241714477539

Token 93: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.791440293658525e-05
    2. ',y' → logprob: -9.875078201293945
    3. ' ,' → logprob: -10.875078201293945
    4. ',x' → logprob: -11.875078201293945
    5. ',int' → logprob: -16.000078201293945
    6. ',b' → logprob: -16.375078201293945
    7. ',u' → logprob: -16.375078201293945
    8. ',
' → logprob: -16.750078201293945
    9. ',p' → logprob: -17.875078201293945
    10. '‌,' → logprob: -17.875078201293945

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.146429223008454e-05
    2. ')' → logprob: -10.25006103515625
    3. '):
' → logprob: -10.75006103515625
    4. ' ):' → logprob: -12.50006103515625
    5. ':' → logprob: -14.62506103515625
    6. '):
' → logprob: -15.87506103515625
    7. ')：' → logprob: -16.00006103515625
    8. ',' → logprob: -16.75006103515625
    9. '}:' → logprob: -17.37506103515625
    10. ']:' → logprob: -17.37506103515625

Token 95: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.025844091549515724
    2. ' x' → logprob: -4.525844097137451
    3. '   ' → logprob: -4.650844097137451
    4. 'px' → logprob: -5.400844097137451
    5. 'root' → logprob: -7.900844097137451
    6. ' px' → logprob: -8.900843620300293
    7. ' root' → logprob: -10.525843620300293
    8. '	x' → logprob: -10.775843620300293
    9. 'rx' → logprob: -10.775843620300293
    10. '```' → logprob: -11.150843620300293

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -2.3557529857498594e-05
    2. 'px' → logprob: -11.50002384185791
    3. 'root' → logprob: -12.00002384185791
    4. ' x' → logprob: -12.12502384185791
    5. 'rx' → logprob: -14.00002384185791
    6. '   ' → logprob: -14.37502384185791
    7. '	x' → logprob: -15.62502384185791
    8. '```' → logprob: -16.250022888183594
    9. 'fx' → logprob: -17.250022888183594
    10. 'a' → logprob: -17.375022888183594

Token 97: ' =' (ID: 314)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.8352248072624207
    2. '=' → logprob: -1.3352248668670654
    3. ' =' → logprob: -1.3352248668670654
    4. 'root' → logprob: -3.4602248668670654
    5. 'x' → logprob: -5.085224628448486
    6. '_parent' → logprob: -6.835224628448486
    7. '=find' → logprob: -7.710224628448486
    8. 'Root' → logprob: -8.335225105285645
    9. '=root' → logprob: -8.335225105285645
    10. '=x' → logprob: -8.335225105285645

Token 98: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -4.5491004129871726e-05
    2. ' find' → logprob: -10.000045776367188
    3. '(find' → logprob: -17.000045776367188
    4. '	find' → logprob: -18.500045776367188
    5. '=find' → logprob: -19.750045776367188
    6. ')find' → logprob: -20.125045776367188
    7. 'x' → logprob: -22.125045776367188
    8. '_find' → logprob: -22.875045776367188
    9. '.find' → logprob: -23.375045776367188
    10. 'get' → logprob: -23.625045776367188

Token 99: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002964935847558081
    2. '(' → logprob: -8.125296592712402
    3. 'x' → logprob: -15.125296592712402
    4. ' (' → logprob: -16.875295639038086
    5. '(
' → logprob: -17.875295639038086
    6. '(y' → logprob: -18.250295639038086
    7. '((' → logprob: -19.125295639038086
    8. ')' → logprob: -19.250295639038086
    9. ')x' → logprob: -20.125295639038086
    10. '```' → logprob: -20.250295639038086

Token 100: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3872587978839874
    2. ')' → logprob: -1.137258768081665
    3. ')
' → logprob: -8.137258529663086
    4. ')y' → logprob: -10.012258529663086
    5. ' )
' → logprob: -10.137258529663086
    6. ')

' → logprob: -12.262258529663086
    7. ' )' → logprob: -12.387258529663086
    8. 'y' → logprob: -13.887258529663086
    9. ',y' → logprob: -15.012258529663086
    10. ' y' → logprob: -15.887258529663086

Token 101: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007370573002845049
    2. ' y' → logprob: -5.007370471954346
    3. ',y' → logprob: -7.882370471954346
    4. '	y' → logprob: -8.257370948791504
    5. '   ' → logprob: -11.507370948791504
    6. ',' → logprob: -12.632370948791504
    7. ' ' → logprob: -13.882370948791504
    8. '<|end|>' → logprob: -14.132370948791504
    9. ';y' → logprob: -14.132370948791504
    10. 'if' → logprob: -14.757370948791504

Token 102: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -7.505351095460355e-05
    2. ' y' → logprob: -9.500075340270996
    3. '	y' → logprob: -16.37507438659668
    4. ',y' → logprob: -18.12507438659668
    5. '   ' → logprob: -19.25007438659668
    6. ')y' → logprob: -21.25007438659668
    7. ''y' → logprob: -21.87507438659668
    8. '*y' → logprob: -22.00007438659668
    9. '(y' → logprob: -22.12507438659668
    10. '  ' → logprob: -22.62507438659668

Token 103: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.006028692703694105
    2. ' find' → logprob: -5.506028652191162
    3. '(find' → logprob: -6.256028652191162
    4. 'x' → logprob: -10.63102912902832
    5. '(x' → logprob: -12.88102912902832
    6. 'y' → logprob: -13.38102912902832
    7. '	find' → logprob: -14.50602912902832
    8. '=find' → logprob: -14.88102912902832
    9. '.find' → logprob: -15.63102912902832
    10. ')find' → logprob: -16.13102912902832

Token 105: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.625003814697266
    3. 'y' → logprob: -15.250003814697266
    4. '(x' → logprob: -15.375003814697266
    5. ' (' → logprob: -19.500003814697266
    6. '(
' → logprob: -20.000003814697266
    7. ' y' → logprob: -20.375003814697266
    8. '(Y' → logprob: -20.875003814697266
    9. ')' → logprob: -21.000003814697266
    10. '()' → logprob: -21.000003814697266

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036998428404331207
    2. ')
' → logprob: -5.628699779510498
    3. 'def' → logprob: -10.253700256347656
    4. 'if' → logprob: -10.753700256347656
    5. '<|end|>' → logprob: -11.128700256347656
    6. ' )' → logprob: -11.753700256347656
    7. '   ' → logprob: -12.628700256347656
    8. '```' → logprob: -13.253700256347656
    9. '<|end|>' → logprob: -13.253700256347656
    10. '
' → logprob: -13.378700256347656

Token 107: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6561563014984131
    2. 'if' → logprob: -1.281156301498413
    3. '   ' → logprob: -2.531156301498413
    4. '<|end|>' → logprob: -2.531156301498413
    5. '	if' → logprob: -3.531156301498413
    6. '```' → logprob: -4.656156539916992
    7. '    
' → logprob: -6.156156539916992
    8. '
' → logprob: -7.406156539916992
    9. '  
' → logprob: -7.656156539916992
    10. ' 
' → logprob: -7.781156539916992

Token 108: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023599375039339066
    2. ' if' → logprob: -3.77359938621521
    3. '   ' → logprob: -8.148599624633789
    4. '	if' → logprob: -10.023599624633789
    5. '```' → logprob: -11.773599624633789
    6. '    ' → logprob: -12.398599624633789
    7. ' ' → logprob: -13.148599624633789
    8. '    
' → logprob: -13.273599624633789
    9. '       ' → logprob: -13.523599624633789
    10. ' 
' → logprob: -13.898599624633789

Token 109: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47407761216163635
    2. 'x' → logprob: -0.974077582359314
    3. 'rank' → logprob: -14.724077224731445
    4. ' rank' → logprob: -15.849077224731445
    5. ' ' → logprob: -16.724077224731445
    6. '(x' → logprob: -17.974077224731445
    7. '	x' → logprob: -18.224077224731445
    8. '   ' → logprob: -19.849077224731445
    9. '  ' → logprob: -21.349077224731445
    10. '```' → logprob: -21.474077224731445

Token 110: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22870002686977386
    2. ' ==' → logprob: -1.603700041770935
    3. '!=' → logprob: -5.978700160980225
    4. ' !=' → logprob: -7.228700160980225
    5. '=' → logprob: -11.103699684143066
    6. ']==' → logprob: -12.728699684143066
    7. '===' → logprob: -13.603699684143066
    8. '==-' → logprob: -13.603699684143066
    9. '==
' → logprob: -14.353699684143066
    10. '<' → logprob: -14.603699684143066

Token 111: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00317783304490149
    2. ' y' → logprob: -5.753177642822266
    3. '	y' → logprob: -16.378177642822266
    4. ''y' → logprob: -18.128177642822266
    5. '‘y' → logprob: -19.378177642822266
    6. ' ' → logprob: -20.128177642822266
    7. 'y's' → logprob: -20.253177642822266
    8. ')y' → logprob: -20.253177642822266
    9. '   ' → logprob: -20.378177642822266
    10. '<|end|>' → logprob: -20.753177642822266

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16036121547222137
    2. ':return' → logprob: -1.9103611707687378
    3. ':
' → logprob: -9.785361289978027
    4. 'return' → logprob: -9.910361289978027
    5. ' return' → logprob: -11.035361289978027
    6. ' :' → logprob: -12.160361289978027
    7. '   ' → logprob: -12.285361289978027
    8. ')return' → logprob: -13.785361289978027
    9. '{return' → logprob: -13.910361289978027
    10. ' or' → logprob: -14.285361289978027

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49126696586608887
    2. '   ' → logprob: -1.3662669658660889
    3. 'return' → logprob: -2.241266965866089
    4. ' return' → logprob: -3.741266965866089
    5. '	return' → logprob: -6.366267204284668
    6. ':return' → logprob: -6.991267204284668
    7. '	' → logprob: -8.741267204284668
    8. '
' → logprob: -9.741267204284668
    9. '    ' → logprob: -9.866267204284668
    10. '     ' → logprob: -10.616267204284668

Token 114: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011638808064162731
    2. ' return' → logprob: -4.511638641357422
    3. '   ' → logprob: -7.511638641357422
    4. '       ' → logprob: -10.136638641357422
    5. '	return' → logprob: -12.886638641357422
    6. '
' → logprob: -13.761638641357422
    7. '```' → logprob: -14.511638641357422
    8. '           ' → logprob: -15.761638641357422
    9. ':return' → logprob: -16.136638641357422
    10. '    ' → logprob: -16.886638641357422

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0905732810497284
    2. '   ' → logprob: -2.590573310852051
    3. ' 
' → logprob: -5.590573310852051
    4. '    
' → logprob: -5.965573310852051
    5. ' if' → logprob: -6.090573310852051
    6. 'if' → logprob: -6.965573310852051
    7. '<|end|>' → logprob: -7.090573310852051
    8. '  
' → logprob: -7.590573310852051
    9. '```' → logprob: -8.09057331085205
    10. '
' → logprob: -8.96557331085205

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055399201810359955
    2. '    
' → logprob: -3.680399179458618
    3. '
' → logprob: -4.680399417877197
    4. '<|end|>' → logprob: -5.055399417877197
    5. ' 
' → logprob: -5.180399417877197
    6. '  
' → logprob: -5.805399417877197
    7. '```' → logprob: -6.430399417877197
    8. ' if' → logprob: -7.180399417877197
    9. '   
' → logprob: -7.305399417877197
    10. '\n' → logprob: -8.430398941040039

Token 117: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2560291886329651
    2. ' if' → logprob: -1.5060291290283203
    3. '   ' → logprob: -5.75602912902832
    4. '```' → logprob: -7.13102912902832
    5. '	if' → logprob: -9.25602912902832
    6. ' ' → logprob: -10.63102912902832
    7. '``' → logprob: -12.38102912902832
    8. 'If' → logprob: -13.75602912902832
    9. '`' → logprob: -13.88102912902832
    10. '       ' → logprob: -14.38102912902832

Token 118: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.02975824475288391
    2. ' rank' → logprob: -3.5297582149505615
    3. '(rank' → logprob: -11.77975845336914
    4. 'ank' → logprob: -16.65475845336914
    5. '.rank' → logprob: -17.40475845336914
    6. '_rank' → logprob: -17.90475845336914
    7. ' ' → logprob: -18.02975845336914
    8. 'r' → logprob: -18.40475845336914
    9. 'Rank' → logprob: -20.15475845336914
    10. '   ' → logprob: -20.27975845336914

Token 119: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.895480277715251e-06
    2. 'x' → logprob: -11.750008583068848
    3. '[' → logprob: -14.375008583068848
    4. ' x' → logprob: -15.500008583068848
    5. ' [' → logprob: -16.875009536743164
    6. '[int' → logprob: -17.250009536743164
    7. '[root' → logprob: -18.125009536743164
    8. '[user' → logprob: -18.375009536743164
    9. '<x' → logprob: -18.500009536743164
    10. '[parent' → logprob: -18.625009536743164

Token 120: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10024948418140411
    2. ' <' → logprob: -2.3502495288848877
    3. '>' → logprob: -10.725249290466309
    4. '<x' → logprob: -10.975249290466309
    5. '[' → logprob: -14.225249290466309
    6. ' >' → logprob: -14.850249290466309
    7. ']<' → logprob: -14.850249290466309
    8. ']' → logprob: -14.850249290466309
    9. '<size' → logprob: -14.975249290466309
    10. ' ' → logprob: -15.600249290466309

Token 121: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07891842722892761
    2. ' <' → logprob: -2.57891845703125
    3. '<x' → logprob: -10.70391845703125
    4. '>' → logprob: -13.32891845703125
    5. ' ' → logprob: -13.95391845703125
    6. '<a' → logprob: -14.32891845703125
    7. '<size' → logprob: -14.82891845703125
    8. '<class' → logprob: -15.20391845703125
    9. '<int' → logprob: -15.20391845703125
    10. '<b' → logprob: -15.32891845703125

Token 122: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.002475777640938759
    2. ' rank' → logprob: -6.002475738525391
    3. '(rank' → logprob: -15.87747573852539
    4. '.rank' → logprob: -18.25247573852539
    5. '_rank' → logprob: -19.50247573852539
    6. ' ' → logprob: -21.75247573852539
    7. 'Rank' → logprob: -22.25247573852539
    8. 'y' → logprob: -23.12747573852539
    9. '
' → logprob: -23.12747573852539
    10. 'ranking' → logprob: -23.25247573852539

Token 123: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.2527482509613037
    2. '[y' → logprob: -1.5027482509613037
    3. '[' → logprob: -7.127748489379883
    4. 'x' → logprob: -11.752748489379883
    5. 'y' → logprob: -13.127748489379883
    6. '[s' → logprob: -13.752748489379883
    7. '[parent' → logprob: -13.752748489379883
    8. '```' → logprob: -13.877748489379883
    9. '[user' → logprob: -14.127748489379883
    10. '[
' → logprob: -14.252748489379883

Token 124: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003889146028086543
    2. '):' → logprob: -5.753889083862305
    3. ']:' → logprob: -7.503889083862305
    4. ':
' → logprob: -9.378889083862305
    5. '>:' → logprob: -10.003889083862305
    6. '}:' → logprob: -11.503889083862305
    7. ' :' → logprob: -12.128889083862305
    8. ':**' → logprob: -12.753889083862305
    9. '):
' → logprob: -12.878889083862305
    10. '#:' → logprob: -13.503889083862305

Token 125: '       ' (ID: 309)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.22099724411964417
    2. 'parent' → logprob: -2.4709973335266113
    3. '       ' → logprob: -3.4709973335266113
    4. '	parent' → logprob: -3.4709973335266113
    5. ' x' → logprob: -4.345997333526611
    6. '   ' → logprob: -4.720997333526611
    7. '(parent' → logprob: -4.845997333526611
    8. '.parent' → logprob: -4.970997333526611
    9. ',parent' → logprob: -5.220997333526611
    10. '[parent' → logprob: -5.720997333526611

Token 126: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.2532927095890045
    2. ' parent' → logprob: -1.5032926797866821
    3. '	parent' → logprob: -7.253292560577393
    4. ' x' → logprob: -8.00329303741455
    5. 'x' → logprob: -9.00329303741455
    6. ',parent' → logprob: -9.50329303741455
    7. '   ' → logprob: -10.37829303741455
    8. '(parent' → logprob: -10.37829303741455
    9. '.parent' → logprob: -10.50329303741455
    10. '_parent' → logprob: -11.00329303741455

Token 127: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.64839569455944e-05
    2. '[y' → logprob: -9.500076293945312
    3. '[' → logprob: -13.375076293945312
    4. 'x' → logprob: -16.625076293945312
    5. '```' → logprob: -17.625076293945312
    6. '[user' → logprob: -19.125076293945312
    7. ' [' → logprob: -19.750076293945312
    8. '\[' → logprob: -20.125076293945312
    9. '[s' → logprob: -20.250076293945312
    10. '[parent' → logprob: -20.875076293945312

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003478593716863543
    2. ']=' → logprob: -8.000348091125488
    3. ' ]' → logprob: -12.375348091125488
    4. ' =' → logprob: -12.500348091125488
    5. '=' → logprob: -12.875348091125488
    6. '[' → logprob: -13.500348091125488
    7. '[y' → logprob: -15.875348091125488
    8. ')' → logprob: -16.500347137451172
    9. '[x' → logprob: -16.750347137451172
    10. '=y' → logprob: -16.750347137451172

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252054899930954
    2. '=' → logprob: -1.5020549297332764
    3. '=y' → logprob: -9.002055168151855
    4. '=x' → logprob: -13.127055168151855
    5. 'y' → logprob: -15.377055168151855
    6. '＝' → logprob: -16.12705421447754
    7. '=user' → logprob: -16.25205421447754
    8. '=s' → logprob: -16.37705421447754
    9. '[' → logprob: -16.62705421447754
    10. ']' → logprob: -17.12705421447754

Token 130: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020354038861114532
    2. ' y' → logprob: -8.500203132629395
    3. '	y' → logprob: -18.62520408630371
    4. ''y' → logprob: -21.62520408630371
    5. ')y' → logprob: -22.00020408630371
    6. '[y' → logprob: -22.75020408630371
    7. '‘y' → logprob: -22.87520408630371
    8. '   ' → logprob: -23.00020408630371
    9. 'y's' → logprob: -23.50020408630371
    10. '```' → logprob: -24.00020408630371

Token 131: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5896366238594055
    2. '   ' → logprob: -0.8396366238594055
    3. ' else' → logprob: -4.71463680267334
    4. '
' → logprob: -5.71463680267334
    5. '    
' → logprob: -7.83963680267334
    6. '       ' → logprob: -8.46463680267334
    7. '	else' → logprob: -8.58963680267334
    8. 'elif' → logprob: -9.08963680267334
    9. '\n' → logprob: -9.33963680267334
    10. '  
' → logprob: -9.46463680267334

Token 132: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2505932152271271
    2. 'else' → logprob: -2.1255931854248047
    3. '<|end|>' → logprob: -3.1255931854248047
    4. ' else' → logprob: -3.6255931854248047
    5. '\n' → logprob: -4.625593185424805
    6. '
' → logprob: -5.250593185424805
    7. '       ' → logprob: -5.500593185424805
    8. '    
' → logprob: -6.000593185424805
    9. '```' → logprob: -6.375593185424805
    10. 'n' → logprob: -6.375593185424805

Token 133: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20374087989330292
    2. '   ' → logprob: -2.0787408351898193
    3. 'y' → logprob: -2.9537408351898193
    4. 'elif' → logprob: -5.953741073608398
    5. ' else' → logprob: -6.203741073608398
    6. '
' → logprob: -7.328741073608398
    7. 'x' → logprob: -7.953741073608398
    8. 'return' → logprob: -8.203741073608398
    9. '    
' → logprob: -8.203741073608398
    10. '```' → logprob: -8.328741073608398

Token 134: ' merge' (ID: 20345)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47954005002975464
    2. 'club' → logprob: -1.4795401096343994
    3. 'elif' → logprob: -2.3545401096343994
    4. 'parent' → logprob: -3.7295401096343994
    5. 'y' → logprob: -4.10453987121582
    6. 'return' → logprob: -4.60453987121582
    7. 'x' → logprob: -5.85453987121582
    8. ' else' → logprob: -6.85453987121582
    9. 'rank' → logprob: -7.22953987121582
    10. '   ' → logprob: -7.72953987121582

Token 135: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.03878842294216156
    2. ' club' → logprob: -3.288788318634033
    3. 'rank' → logprob: -8.663788795471191
    4. '.club' → logprob: -9.163788795471191
    5. 'cl' → logprob: -9.288788795471191
    6. 'for' → logprob: -9.663788795471191
    7. 'clubs' → logprob: -9.663788795471191
    8. 'if' → logprob: -9.913788795471191
    9. '_cl' → logprob: -10.413788795471191
    10. 'y' → logprob: -10.913788795471191

Token 136: ' info' (ID: 5377)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.8658221960067749
    2. '[y' → logprob: -0.9908221960067749
    3. '[' → logprob: -2.3658223152160645
    4. 's' → logprob: -2.8658223152160645
    5. ' if' → logprob: -3.6158223152160645
    6. 'if' → logprob: -4.6158223152160645
    7. '<|end|>' → logprob: -6.2408223152160645
    8. '.setdefault' → logprob: -6.3658223152160645
    9. '   ' → logprob: -6.4908223152160645
    10. 'count' → logprob: -6.6158223152160645

Token 137: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0296883583068848
    2. '<|end|>' → logprob: -1.0296883583068848
    3. '   ' → logprob: -2.6546883583068848
    4. ' for' → logprob: -2.9046883583068848
    5. ' if' → logprob: -3.2796883583068848
    6. 'elif' → logprob: -3.2796883583068848
    7. ' elif' → logprob: -3.5296883583068848
    8. '[' → logprob: -4.279688358306885
    9. '<|end|>' → logprob: -5.029688358306885
    10. ' else' → logprob: -5.279688358306885

Token 138: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0411168336868286
    2. 'elif' → logprob: -1.6661168336868286
    3. ' else' → logprob: -1.7911168336868286
    4. '<|end|>' → logprob: -2.041116714477539
    5. ' elif' → logprob: -2.416116714477539
    6. '   ' → logprob: -3.291116714477539
    7. '       ' → logprob: -3.541116714477539
    8. ' if' → logprob: -6.166116714477539
    9. '	elif' → logprob: -7.166116714477539
    10. '[' → logprob: -7.791116714477539

Token 139: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006443576887249947
    2. ' if' → logprob: -5.631443500518799
    3. 'for' → logprob: -6.006443500518799
    4. '<|end|>' → logprob: -9.131443977355957
    5. '```' → logprob: -9.631443977355957
    6. '[' → logprob: -10.006443977355957
    7. '       ' → logprob: -10.256443977355957
    8. 'continue' → logprob: -10.381443977355957
    9. 'elif' → logprob: -10.506443977355957
    10. ' for' → logprob: -11.006443977355957

Token 140: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.0001593195047462359
    2. ' club' → logprob: -8.75015926361084
    3. 'cl' → logprob: -14.37515926361084
    4. ' ' → logprob: -16.375160217285156
    5. '.club' → logprob: -16.875160217285156
    6. 'clinic' → logprob: -17.375160217285156
    7. '0' → logprob: -17.875160217285156
    8. 'cluster' → logprob: -17.875160217285156
    9. '(cl' → logprob: -18.000160217285156
    10. '   ' → logprob: -18.500160217285156

Token 141: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.4287392497062683
    2. '[y' → logprob: -1.053739309310913
    3. 'x' → logprob: -10.553739547729492
    4. 'y' → logprob: -11.928739547729492
    5. '[' → logprob: -12.803739547729492
    6. '```' → logprob: -14.053739547729492
    7. '[i' → logprob: -15.428739547729492
    8. '[u' → logprob: -15.428739547729492
    9. '[parent' → logprob: -15.678739547729492
    10. '[j' → logprob: -15.678739547729492

Token 142: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13370488584041595
    2. ']==' → logprob: -2.508704900741577
    3. '[x' → logprob: -3.383704900741577
    4. '[' → logprob: -5.133704662322998
    5. '==' → logprob: -6.008704662322998
    6. ']!=' → logprob: -7.633704662322998
    7. '==-' → logprob: -8.133705139160156
    8. '[y' → logprob: -8.383705139160156
    9. '][' → logprob: -8.883705139160156
    10. ' ==' → logprob: -9.508705139160156

Token 143: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014757211320102215
    2. ' ==' → logprob: -4.88975715637207
    3. '<' → logprob: -5.26475715637207
    4. '==-' → logprob: -6.38975715637207
    5. '!=' → logprob: -8.63975715637207
    6. '[' → logprob: -9.38975715637207
    7. '=' → logprob: -12.63975715637207
    8. '>=' → logprob: -12.63975715637207
    9. ' <' → logprob: -13.38975715637207
    10. ' !=' → logprob: -13.51475715637207

Token 144: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.0126840758603066e-05
    2. ' -' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.12504005432129
    4. '1' → logprob: -17.25004005432129
    5. ' ' → logprob: -18.50004005432129
    6. '-y' → logprob: -20.00004005432129
    7. 'None' → logprob: -20.00004005432129
    8. '  ' → logprob: -20.37504005432129
    9. '```' → logprob: -20.75004005432129
    10. '2' → logprob: -21.00004005432129

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.229872087715194e-05
    2. '-' → logprob: -9.750061988830566
    3. ' -' → logprob: -13.625061988830566
    4. ' ' → logprob: -14.000061988830566
    5. 'club' → logprob: -14.250061988830566
    6. '2' → logprob: -14.875061988830566
    7. '```' → logprob: -15.500061988830566
    8. '   ' → logprob: -15.500061988830566
    9. ' club' → logprob: -16.000062942504883
    10. 'x' → logprob: -17.437562942504883

Token 146: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12543274462223053
    2. 'and' → logprob: -2.3754327297210693
    3. ' or' → logprob: -3.7504327297210693
    4. ':' → logprob: -7.000432968139648
    5. ':
' → logprob: -8.875432968139648
    6. 'or' → logprob: -8.875432968139648
    7. '           ' → logprob: -9.500432968139648
    8. '<|end|>' → logprob: -10.000432968139648
    9. '=' → logprob: -10.625432968139648
    10. ' ' → logprob: -11.125432968139648

Token 147: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.02981378696858883
    2. ' club' → logprob: -3.529813766479492
    3. '   ' → logprob: -10.404813766479492
    4. '       ' → logprob: -11.779813766479492
    5. 'cl' → logprob: -12.029813766479492
    6. ' ' → logprob: -12.779813766479492
    7. '.club' → logprob: -12.779813766479492
    8. '           ' → logprob: -13.029813766479492
    9. '  ' → logprob: -13.279813766479492
    10. '    ' → logprob: -13.529813766479492

Token 148: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.269565634895116e-05
    2. 'x' → logprob: -9.750092506408691
    3. '[y' → logprob: -11.000092506408691
    4. '[' → logprob: -11.500092506408691
    5. '```' → logprob: -12.500092506408691
    6. ' [' → logprob: -13.625092506408691
    7. '<x' → logprob: -14.375092506408691
    8. '[
' → logprob: -15.125092506408691
    9. '`' → logprob: -15.375092506408691
    10. '(x' → logprob: -15.500092506408691

Token 149: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1473711133003235
    2. ' !=' → logprob: -2.2723710536956787
    3. ']' → logprob: -4.147371292114258
    4. '!=-' → logprob: -4.647371292114258
    5. ']!=' → logprob: -4.772371292114258
    6. ')!=' → logprob: -10.522371292114258
    7. ')' → logprob: -10.772371292114258
    8. '>' → logprob: -11.147371292114258
    9. '!==' → logprob: -11.272371292114258
    10. '()!=' → logprob: -11.522371292114258

Token 150: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11162088811397552
    2. ' !=' → logprob: -2.3616209030151367
    3. '!=-' → logprob: -4.486620903015137
    4. '>' → logprob: -10.486620903015137
    5. '>=' → logprob: -10.861620903015137
    6. ']!=' → logprob: -10.986620903015137
    7. '!==' → logprob: -11.736620903015137
    8. ')!=' → logprob: -12.361620903015137
    9. '()!=' → logprob: -12.486620903015137
    10. '==' → logprob: -12.736620903015137

Token 151: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0040785204619169235
    2. ' -' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.629077911376953
    4. ' ' → logprob: -17.004077911376953
    5. '  ' → logprob: -17.754077911376953
    6. '```' → logprob: -19.129077911376953
    7. '−' → logprob: -19.879077911376953
    8. '	' → logprob: -20.379077911376953
    9. '    ' → logprob: -21.129077911376953
    10. '
' → logprob: -21.504077911376953

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '-' → logprob: -12.25001049041748
    3. '```' → logprob: -13.06251049041748
    4. ' ' → logprob: -13.18751049041748
    5. ' -' → logprob: -15.00001049041748
    6. '2' → logprob: -16.000009536743164
    7. '   ' → logprob: -16.062509536743164
    8. '<|end|>' → logprob: -16.250009536743164
    9. '`' → logprob: -16.875009536743164
    10. '``' → logprob: -17.000009536743164

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06260567903518677
    2. ':
' → logprob: -2.812605619430542
    3. '           ' → logprob: -7.562605857849121
    4. '):' → logprob: -10.312605857849121
    5. ' :' → logprob: -10.562605857849121
    6. '):
' → logprob: -11.187605857849121
    7. ' and' → logprob: -11.562605857849121
    8. '       ' → logprob: -11.937605857849121
    9. ')' → logprob: -12.062605857849121
    10. ',' → logprob: -12.187605857849121

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012717889621853828
    2. 'club' → logprob: -4.5127177238464355
    3. ' club' → logprob: -7.0127177238464355
    4. '            
' → logprob: -8.512718200683594
    5. '	       ' → logprob: -8.887718200683594
    6. '
' → logprob: -9.512718200683594
    7. '.club' → logprob: -9.512718200683594
    8. '```' → logprob: -9.512718200683594
    9. '               ' → logprob: -10.012718200683594
    10. '   ' → logprob: -10.762718200683594

Token 155: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' (adapté à ' club') → logprob: -0.05697580799460411
    2. ' club' → logprob: -2.931975841522217
    3. '               ' → logprob: -6.306975841522217
    4. '.club' → logprob: -8.931975364685059
    5. '           ' → logprob: -9.181975364685059
    6. '   ' → logprob: -11.931975364685059
    7. ' clube' → logprob: -12.181975364685059
    8. 'cluster' → logprob: -12.306975364685059
    9. ' klub' → logprob: -12.681975364685059
    10. ' ' → logprob: -13.056975364685059

Token 156: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.8921695047756657e-05
    2. '[x' → logprob: -10.875028610229492
    3. '[' → logprob: -11.875028610229492
    4. 'y' → logprob: -12.875028610229492
    5. ' [' → logprob: -16.875028610229492
    6. '[j' → logprob: -17.000028610229492
    7. '[user' → logprob: -17.000028610229492
    8. '```' → logprob: -17.125028610229492
    9. '[u' → logprob: -17.750028610229492
    10. '[a' → logprob: -18.000028610229492

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1855023056268692
    2. '=' → logprob: -1.810502290725708
    3. ']=' → logprob: -5.560502529144287
    4. ' =' → logprob: -6.310502529144287
    5. ' ]' → logprob: -9.685502052307129
    6. ')' → logprob: -11.685502052307129
    7. '[' → logprob: -13.060502052307129
    8. '=x' → logprob: -13.560502052307129
    9. 'x' → logprob: -13.935502052307129
    10. 's' → logprob: -14.435502052307129

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -18.514163970947266
    4. '=

' → logprob: -19.264163970947266
    5. '=
' → logprob: -19.389163970947266
    6. '=user' → logprob: -19.639163970947266
    7. '=x' → logprob: -19.889163970947266
    8. '=int' → logprob: -20.264163970947266
    9. '=}' → logprob: -20.764163970947266
    10. '=sys' → logprob: -20.764163970947266

Token 159: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.008648253045976162
    2. ' club' → logprob: -4.75864839553833
    3. 'x' → logprob: -10.883647918701172
    4. 'cl' → logprob: -11.508647918701172
    5. '   ' → logprob: -13.508647918701172
    6. 'cluster' → logprob: -13.758647918701172
    7. ' x' → logprob: -14.008647918701172
    8. ' ' → logprob: -14.758647918701172
    9. 'clip' → logprob: -15.508647918701172
    10. '.club' → logprob: -15.758647918701172

Token 160: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0019286326132714748
    2. 'x' → logprob: -6.251928806304932
    3. '	x' → logprob: -17.126928329467773
    4. '[' → logprob: -17.251928329467773
    5. '```' → logprob: -18.251928329467773
    6. ' x' → logprob: -18.876928329467773
    7. '<x' → logprob: -19.001928329467773
    8. '[
' → logprob: -19.626928329467773
    9. '(x' → logprob: -20.001928329467773
    10. '{x' → logprob: -20.626928329467773

Token 161: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8174163699150085
    2. '<|end|>' → logprob: -0.8174163699150085
    3. ']' → logprob: -2.6924164295196533
    4. '       ' → logprob: -3.1924164295196533
    5. '<|end|>' → logprob: -5.192416191101074
    6. ')
' → logprob: -7.317416191101074
    7. 'else' → logprob: -8.067416191101074
    8. '
' → logprob: -8.317416191101074
    9. ' else' → logprob: -8.442416191101074
    10. '}' → logprob: -8.567416191101074

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035432863514870405
    2. '       ' → logprob: -5.753543376922607
    3. 'else' → logprob: -8.62854290008545
    4. 'elif' → logprob: -8.62854290008545
    5. ' else' → logprob: -12.50354290008545
    6. ' elif' → logprob: -13.37854290008545
    7. '	elif' → logprob: -13.87854290008545
    8. '```' → logprob: -15.12854290008545
    9. '<|end|>' → logprob: -15.25354290008545
    10. '	else' → logprob: -15.62854290008545

Token 163: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08447735011577606
    2. 'else' (adapté à ' else') → logprob: -2.584477424621582
    3. ' else' → logprob: -5.334477424621582
    4. 'elif' → logprob: -7.334477424621582
    5. '	else' → logprob: -9.709477424621582
    6. ' elif' → logprob: -10.584477424621582
    7. '	elif' → logprob: -12.209477424621582
    8. '       ' → logprob: -12.334477424621582
    9. '    
' → logprob: -14.584477424621582
    10. '```' → logprob: -15.209477424621582

Token 164: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4465460479259491
    2. ':' → logprob: -1.0715460777282715
    3. '   ' → logprob: -4.5715460777282715
    4. '{
' → logprob: -5.3215460777282715
    5. '       ' → logprob: -6.6965460777282715
    6. '{' → logprob: -7.3215460777282715
    7. '```' → logprob: -8.446545600891113
    8. '[' → logprob: -9.696545600891113
    9. 'parent' → logprob: -10.071545600891113
    10. ' :
' → logprob: -10.196545600891113

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027617458254098892
    2. '   ' → logprob: -3.6526174545288086
    3. 'parent' → logprob: -7.027617454528809
    4. ' parent' → logprob: -8.027617454528809
    5. '[parent' → logprob: -10.402617454528809
    6. '{
' → logprob: -10.527617454528809
    7. '	parent' → logprob: -10.652617454528809
    8. '```' → logprob: -11.902617454528809
    9. '[' → logprob: -12.652617454528809
    10. ',parent' → logprob: -12.652617454528809

Token 166: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.00897900015115738
    2. ' parent' → logprob: -4.758978843688965
    3. '       ' → logprob: -8.508978843688965
    4. '   ' → logprob: -8.883978843688965
    5. '	parent' → logprob: -10.883978843688965
    6. '[parent' → logprob: -12.758978843688965
    7. ',parent' → logprob: -13.758978843688965
    8. '.parent' → logprob: -14.383978843688965
    9. '(parent' → logprob: -15.008978843688965
    10. '           ' → logprob: -15.383978843688965

Token 167: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.3868735730648041
    2. '[x' → logprob: -1.1368736028671265
    3. '[' → logprob: -12.886873245239258
    4. '```' → logprob: -17.136873245239258
    5. ' [' → logprob: -17.636873245239258
    6. 'x' → logprob: -18.886873245239258
    7. 'y' → logprob: -19.136873245239258
    8. '[parent' → logprob: -19.261873245239258
    9. '[root' → logprob: -19.261873245239258
    10. '[z' → logprob: -19.261873245239258

Token 168: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7082526683807373
    2. ' =' → logprob: -1.2082526683807373
    3. ']' → logprob: -1.5832526683807373
    4. ']=' → logprob: -6.083252906799316
    5. ')' → logprob: -6.833252906799316
    6. ' ]' → logprob: -9.333252906799316
    7. ')=' → logprob: -11.833252906799316
    8. ' ' → logprob: -12.208252906799316
    9. '[' → logprob: -12.958252906799316
    10. ' )' → logprob: -12.958252906799316

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687223196029663
    2. ' =' → logprob: -1.1368722915649414
    3. ')' → logprob: -14.386872291564941
    4. ' ' → logprob: -15.761872291564941
    5. '   ' → logprob: -15.886872291564941
    6. ']' → logprob: -16.386871337890625
    7. '=y' → logprob: -17.136871337890625
    8. '[' → logprob: -17.261871337890625
    9. ']=' → logprob: -17.386871337890625
    10. '=s' → logprob: -17.386871337890625

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011047814972698689
    2. ' x' → logprob: -4.511047840118408
    3. '	x' → logprob: -17.51104736328125
    4. ')x' → logprob: -19.26104736328125
    5. '$x' → logprob: -21.01104736328125
    6. '"x' → logprob: -21.13604736328125
    7. '{x' → logprob: -21.26104736328125
    8. '%x' → logprob: -21.63604736328125
    9. '>x' → logprob: -22.01104736328125
    10. '<|end|>' → logprob: -22.01104736328125

Token 171: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.006788730621338
    2. '<|end|>' → logprob: -1.006788730621338
    3. '   ' → logprob: -2.381788730621338
    4. ' if' → logprob: -2.506788730621338
    5. '```' → logprob: -3.881788730621338
    6. '       ' → logprob: -4.006788730621338
    7. ' 
' → logprob: -4.256788730621338
    8. '
' → logprob: -4.381788730621338
    9. '    
' → logprob: -5.006788730621338
    10. '  
' → logprob: -5.131788730621338

Token 172: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6850868463516235
    2. '<|end|>' → logprob: -1.4350868463516235
    3. ' if' → logprob: -2.185086727142334
    4. '   ' → logprob: -2.435086727142334
    5. '```' → logprob: -3.810086727142334
    6. ' 
' → logprob: -4.560086727142334
    7. '
' → logprob: -5.060086727142334
    8. '    
' → logprob: -5.185086727142334
    9. '       ' → logprob: -5.560086727142334
    10. '    ' → logprob: -6.185086727142334

Token 173: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.763666947837919e-05
    2. ' if' → logprob: -10.12504768371582
    3. '       ' → logprob: -12.37504768371582
    4. '   ' → logprob: -12.87504768371582
    5. '```' → logprob: -14.75004768371582
    6. '	if' → logprob: -16.00004768371582
    7. '
' → logprob: -16.75004768371582
    8. '#' → logprob: -16.75004768371582
    9. 'club' → logprob: -17.12504768371582
    10. '        
' → logprob: -17.50004768371582

Token 174: ' rank' (ID: 10302)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.12352631986141205
    2. ' club' → logprob: -2.3735263347625732
    3. 'rank' → logprob: -3.9985263347625732
    4. ' rank' → logprob: -5.373526096343994
    5. 'cl' → logprob: -10.748526573181152
    6. ' ' → logprob: -11.123526573181152
    7. '   ' → logprob: -12.248526573181152
    8. '(rank' → logprob: -12.248526573181152
    9. ' clan' → logprob: -12.373526573181152
    10. 'cluster' → logprob: -12.998526573181152

Token 175: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.253090865968261e-06
    2. 'x' → logprob: -11.625009536743164
    3. '[' → logprob: -15.625009536743164
    4. ' x' → logprob: -17.875009536743164
    5. '```' → logprob: -18.125009536743164
    6. ' [' → logprob: -18.875009536743164
    7. '[s' → logprob: -19.500009536743164
    8. '[user' → logprob: -19.875009536743164
    9. '[int' → logprob: -20.125009536743164
    10. '	x' → logprob: -20.250009536743164

Token 176: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10073333233594894
    2. ' ==' → logprob: -2.3507332801818848
    3. ']==' → logprob: -7.600733280181885
    4. ']' → logprob: -11.100733757019043
    5. '==
' → logprob: -12.475733757019043
    6. ')==' → logprob: -13.350733757019043
    7. '[x' → logprob: -13.350733757019043
    8. '[]' → logprob: -13.350733757019043
    9. '===' → logprob: -14.475733757019043
    10. '[' → logprob: -14.600733757019043

Token 177: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04302305355668068
    2. ' ==' → logprob: -3.168023109436035
    3. ']==' → logprob: -11.543023109436035
    4. '[' → logprob: -11.918023109436035
    5. '===' → logprob: -12.918023109436035
    6. '==
' → logprob: -13.043023109436035
    7. ')==' → logprob: -13.918023109436035
    8. '=' → logprob: -14.043023109436035
    9. '[]' → logprob: -14.793023109436035
    10. '```' → logprob: -15.418023109436035

Token 178: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.0003360582049936056
    2. ' rank' → logprob: -8.000335693359375
    3. '(rank' → logprob: -15.125335693359375
    4. 'y' → logprob: -15.250335693359375
    5. '.rank' → logprob: -18.625335693359375
    6. '_rank' → logprob: -19.125335693359375
    7. 'x' → logprob: -19.125335693359375
    8. 'r' → logprob: -19.500335693359375
    9. 'Rank' → logprob: -19.875335693359375
    10. ' ' → logprob: -20.000335693359375

Token 179: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.01873919740319252
    2. '[y' → logprob: -4.018739223480225
    3. 'x' → logprob: -7.518739223480225
    4. '[' → logprob: -10.768738746643066
    5. 'y' → logprob: -10.768738746643066
    6. '```' → logprob: -13.143738746643066
    7. '[s' → logprob: -14.143738746643066
    8. '[u' → logprob: -14.518738746643066
    9. '[
' → logprob: -15.893738746643066
    10. '   ' → logprob: -16.018739700317383

Token 180: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020945880096405745
    2. ':
' → logprob: -6.252094745635986
    3. ']:' → logprob: -9.377094268798828
    4. '):' → logprob: -9.627094268798828
    5. '):
' → logprob: -12.377094268798828
    6. ' :' → logprob: -13.127094268798828
    7. ']' → logprob: -13.627094268798828
    8. '+:' → logprob: -13.627094268798828
    9. ']:
' → logprob: -13.877094268798828
    10. '}:' → logprob: -13.877094268798828

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25527867674827576
    2. '       ' → logprob: -1.7552787065505981
    3. 'rank' → logprob: -3.6302785873413086
    4. ' rank' → logprob: -4.130278587341309
    5. '   ' → logprob: -4.880278587341309
    6. '(rank' → logprob: -7.130278587341309
    7. ':
' → logprob: -7.505278587341309
    8. '
' → logprob: -7.755278587341309
    9. '               ' → logprob: -8.755278587341309
    10. '```' → logprob: -9.130278587341309

Token 182: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -0.0019288709154352546
    2. ' rank' → logprob: -6.251928806304932
    3. '(rank' → logprob: -16.126928329467773
    4. '   ' → logprob: -16.376928329467773
    5. '_rank' → logprob: -20.501928329467773
    6. '.rank' → logprob: -21.126928329467773
    7. 'Rank' → logprob: -22.501928329467773
    8. '
' → logprob: -22.626928329467773
    9. '       ' → logprob: -22.751928329467773
    10. 'r' → logprob: -24.126928329467773

Token 183: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.9361264946837764e-07
    2. 'x' → logprob: -16.75
    3. '[' → logprob: -18.0
    4. ' [' → logprob: -21.625
    5. '```' → logprob: -21.625
    6. '[i' → logprob: -22.125
    7. '[a' → logprob: -22.5
    8. '(x' → logprob: -22.5
    9. '[
' → logprob: -22.75
    10. '	x' → logprob: -23.125

Token 184: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0018484358442947268
    2. ' +=' → logprob: -6.501848220825195
    3. ']+=' → logprob: -8.001848220825195
    4. '[' → logprob: -11.626848220825195
    5. ']' → logprob: -13.751848220825195
    6. '+' → logprob: -13.876848220825195
    7. '[i' → logprob: -16.251848220825195
    8. '```' → logprob: -16.626848220825195
    9. '=' → logprob: -16.751848220825195
    10. '   ' → logprob: -16.751848220825195

Token 185: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.000915039679966867
    2. ' +=' → logprob: -7.000915050506592
    3. ']+=' → logprob: -13.000914573669434
    4. '=' → logprob: -13.625914573669434
    5. '[' → logprob: -18.12591552734375
    6. '+' → logprob: -18.12591552734375
    7. '```' → logprob: -19.37591552734375
    8. '+='' → logprob: -19.62591552734375
    9. '   ' → logprob: -20.37591552734375
    10. '+=(' → logprob: -20.87591552734375

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.5
    4. '```' → logprob: -21.125
    5. '１' → logprob: -21.5
    6. '  ' → logprob: -21.875
    7. '
' → logprob: -22.25
    8. '[' → logprob: -22.625
    9. '       ' → logprob: -23.5
    10. '	' → logprob: -23.5

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.75
    4. '１' → logprob: -20.75
    5. '```' → logprob: -21.125
    6. '
' → logprob: -21.25
    7. '  ' → logprob: -21.75
    8. '[' → logprob: -22.5
    9. '۱' → logprob: -22.5
    10. '१' → logprob: -22.625

Token 188: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016721799969673157
    2. '
' → logprob: -4.141721725463867
    3. '   ' → logprob: -8.266721725463867
    4. 'if' → logprob: -8.641721725463867
    5. ' if' → logprob: -9.266721725463867
    6. '<|end|>' → logprob: -9.391721725463867
    7. '#' → logprob: -11.016721725463867
    8. 'def' → logprob: -11.141721725463867
    9. '```' → logprob: -11.391721725463867
    10. '           ' → logprob: -12.141721725463867

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02208416536450386
    2. '   ' → logprob: -4.7720842361450195
    3. 'if' → logprob: -4.7720842361450195
    4. '
' → logprob: -5.3970842361450195
    5. ' if' → logprob: -8.64708423614502
    6. '#' → logprob: -9.77208423614502
    7. '```' → logprob: -9.77208423614502
    8. '        
' → logprob: -10.39708423614502
    9. 'def' → logprob: -10.77208423614502
    10. '           ' → logprob: -11.27208423614502

Token 190: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03137924522161484
    2. '#' (adapté à ' #') → logprob: -4.281379222869873
    3. '       ' → logprob: -4.281379222869873
    4. '   ' → logprob: -5.781379222869873
    5. ' if' → logprob: -8.781379699707031
    6. '
' → logprob: -12.906379699707031
    7. ' #' → logprob: -13.531379699707031
    8. '           ' → logprob: -13.656379699707031
    9. '        
' → logprob: -14.781379699707031
    10. '```' → logprob: -15.031379699707031

Token 191: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.4159383177757263
    2. ' merge' → logprob: -1.415938377380371
    3. 'if' → logprob: -2.665938377380371
    4. '#' → logprob: -4.040938377380371
    5. ' if' → logprob: -5.665938377380371
    6. '   ' → logprob: -5.665938377380371
    7. '       ' → logprob: -6.040938377380371
    8. '
' → logprob: -7.540938377380371
    9. ' #' → logprob: -8.040938377380371
    10. ' ' → logprob: -9.540938377380371

Token 192: ' club' (ID: 8522)
  Prédit: ' club'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' club' → logprob: -0.02630830556154251
    2. 'club' → logprob: -3.651308298110962
    3. '.club' → logprob: -12.151308059692383
    4. ' ' → logprob: -14.651308059692383
    5. ' clubhouse' → logprob: -14.651308059692383
    6. ' klubb' → logprob: -14.776308059692383
    7. ' clube' → logprob: -14.901308059692383
    8. ' klub' → logprob: -15.526308059692383
    9. '   ' → logprob: -15.651308059692383
    10. 'Club' → logprob: -15.651308059692383

Token 193: ' info' (ID: 5377)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -0.7909603714942932
    2. ' info' → logprob: -0.9159603714942932
    3. '[y' → logprob: -2.6659603118896484
    4. '[x' → logprob: -3.1659603118896484
    5. '   ' → logprob: -4.040960311889648
    6. 'if' → logprob: -4.665960311889648
    7. ' if' → logprob: -5.665960311889648
    8. ' information' → logprob: -6.540960311889648
    9. '_info' → logprob: -7.040960311889648
    10. '       ' → logprob: -7.540960311889648

Token 194: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009310456924140453
    2. '
' → logprob: -4.884310245513916
    3. ' if' → logprob: -6.884310245513916
    4. 'if' → logprob: -7.634310245513916
    5. '<|end|>' → logprob: -9.259310722351074
    6. '   ' → logprob: -9.634310722351074
    7. '        
' → logprob: -11.259310722351074
    8. ',' → logprob: -12.634310722351074
    9. '           ' → logprob: -13.259310722351074
    10. 'If' → logprob: -13.384310722351074

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003855297574773431
    2. 'if' → logprob: -5.878855228424072
    3. ' if' → logprob: -6.878855228424072
    4. '   ' → logprob: -11.25385570526123
    5. '```' → logprob: -12.37885570526123
    6. '
' → logprob: -13.87885570526123
    7. '           ' → logprob: -14.25385570526123
    8. 'If' → logprob: -14.87885570526123
    9. '        
' → logprob: -15.00385570526123
    10. ',' → logprob: -15.00385570526123

Token 196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07115152478218079
    2. '       ' → logprob: -2.8211514949798584
    3. ' if' → logprob: -4.6961517333984375
    4. '   ' → logprob: -11.696151733398438
    5. '```' → logprob: -13.571151733398438
    6. '	if' → logprob: -14.571151733398438
    7. ' ' → logprob: -14.696151733398438
    8. '           ' → logprob: -15.071151733398438
    9. '        
' → logprob: -15.946151733398438
    10. 'If' → logprob: -16.071151733398438

Token 197: ' club' (ID: 8522)
  Prédit: ' club'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' club' → logprob: -0.5762373805046082
    2. 'club' → logprob: -0.8262373805046082
    3. ' x' → logprob: -8.826237678527832
    4. 'x' → logprob: -9.201237678527832
    5. '   ' → logprob: -11.076237678527832
    6. 'cl' → logprob: -11.576237678527832
    7. '.club' → logprob: -11.701237678527832
    8. ' ' → logprob: -11.826237678527832
    9. ' clube' → logprob: -13.076237678527832
    10. ' klub' → logprob: -13.701237678527832

Token 198: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.004110457841306925
    2. '[y' → logprob: -5.504110336303711
    3. 'x' → logprob: -10.879110336303711
    4. '[' → logprob: -11.504110336303711
    5. ' [' → logprob: -14.504110336303711
    6. '```' → logprob: -14.629110336303711
    7. 'y' → logprob: -15.504110336303711
    8. '[u' → logprob: -15.629110336303711
    9. '   ' → logprob: -15.754110336303711
    10. '(x' → logprob: -15.879110336303711

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8024643659591675
    2. '==' → logprob: -0.9274643659591675
    3. ' ==' → logprob: -2.177464485168457
    4. ']==' → logprob: -3.177464485168457
    5. '==-' → logprob: -7.302464485168457
    6. ' ]' → logprob: -8.552464485168457
    7. ')' → logprob: -9.052464485168457
    8. '!=' → logprob: -9.677464485168457
    9. ' !=' → logprob: -10.052464485168457
    10. '[' → logprob: -10.052464485168457

Token 200: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6980628967285156
    2. ' ==' → logprob: -0.6980628967285156
    3. '==-' → logprob: -5.323062896728516
    4. '[' → logprob: -11.698062896728516
    5. ' ' → logprob: -12.198062896728516
    6. ']==' → logprob: -12.573062896728516
    7. '==
' → logprob: -12.823062896728516
    8. ')' → logprob: -13.323062896728516
    9. '   ' → logprob: -13.698062896728516
    10. '```' → logprob: -13.948062896728516

Token 201: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009114635176956654
    2. ' -' → logprob: -7.000911235809326
    3. '   ' → logprob: -19.375911712646484
    4. ' ' → logprob: -19.500911712646484
    5. '```' → logprob: -20.000911712646484
    6. '−' → logprob: -21.375911712646484
    7. '=' → logprob: -21.875911712646484
    8. '==-' → logprob: -21.875911712646484
    9. '  ' → logprob: -22.375911712646484
    10. '-y' → logprob: -22.500911712646484

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004629838280379772
    2. '-' → logprob: -5.379629611968994
    3. ' -' → logprob: -11.754630088806152
    4. ' ' → logprob: -13.504630088806152
    5. '```' → logprob: -15.129630088806152
    6. '   ' → logprob: -16.942129135131836
    7. '(-' → logprob: -18.067129135131836
    8. '１' → logprob: -18.504629135131836
    9. '==-' → logprob: -18.504629135131836
    10. '`' → logprob: -18.504629135131836

Token 203: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602257490158081
    2. 'and' → logprob: -1.910225749015808
    3. '=' → logprob: -15.035225868225098
    4. ' ' → logprob: -15.035225868225098
    5. '   ' → logprob: -15.785225868225098
    6. ')' → logprob: -15.910225868225098
    7. ',' → logprob: -16.03522491455078
    8. ' и' → logprob: -16.16022491455078
    9. ':' → logprob: -16.41022491455078
    10. '	and' → logprob: -16.53522491455078

Token 204: ' club' (ID: 8522)
  Prédit: ' club'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' club' → logprob: -0.523147702217102
    2. 'club' → logprob: -0.898147702217102
    3. 'cl' → logprob: -12.023147583007812
    4. '.club' → logprob: -12.273147583007812
    5. '   ' → logprob: -12.773147583007812
    6. ' ' → logprob: -12.773147583007812
    7. ' clube' → logprob: -13.398147583007812
    8. 'cluster' → logprob: -13.523147583007812
    9. ' klub' → logprob: -13.773147583007812
    10. 'clubs' → logprob: -14.898147583007812

Token 205: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.3319124011322856e-05
    2. 'y' → logprob: -10.875022888183594
    3. '[x' → logprob: -12.625022888183594
    4. '[' → logprob: -14.625022888183594
    5. ' [' → logprob: -15.875022888183594
    6. '```' → logprob: -16.250022888183594
    7. '[
' → logprob: -16.375022888183594
    8. '   ' → logprob: -17.250022888183594
    9. '[u' → logprob: -17.375022888183594
    10. '(y' → logprob: -17.500022888183594

Token 206: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.44910821318626404
    2. ' !=' → logprob: -1.0741082429885864
    3. ']!=' → logprob: -4.199108123779297
    4. ']' → logprob: -5.449108123779297
    5. '!=-' → logprob: -7.074108123779297
    6. ')!=' → logprob: -11.199108123779297
    7. '[' → logprob: -11.574108123779297
    8. '()!=' → logprob: -12.074108123779297
    9. ' ]' → logprob: -12.074108123779297
    10. ' ' → logprob: -13.324108123779297

Token 207: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4756276607513428
    2. ' !=' → logprob: -0.9756276607513428
    3. '!=-' → logprob: -6.475627899169922
    4. ']!=' → logprob: -12.600627899169922
    5. '()!=' → logprob: -12.725627899169922
    6. ')!=' → logprob: -13.475627899169922
    7. ' ' → logprob: -14.850627899169922
    8. '   ' → logprob: -15.600627899169922
    9. '!==' → logprob: -15.725627899169922
    10. ' ' → logprob: -16.225627899169922

Token 208: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001234428636962548
    2. ' -' → logprob: -9.000123023986816
    3. '```' → logprob: -19.500123977661133
    4. ' ' → logprob: -21.250123977661133
    5. '1' → logprob: -21.875123977661133
    6. '   ' → logprob: -22.625123977661133
    7. '−' → logprob: -22.625123977661133
    8. 'x' → logprob: -22.875123977661133
    9. 'None' → logprob: -23.500123977661133
    10. '-x' → logprob: -23.875123977661133

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018375257786829025
    2. '-' → logprob: -8.625184059143066
    3. '```' → logprob: -12.875184059143066
    4. ' -' → logprob: -13.875184059143066
    5. ' ' → logprob: -15.437684059143066
    6. '--' → logprob: -17.43768310546875
    7. '   ' → logprob: -17.62518310546875
    8. '１' → logprob: -17.62518310546875
    9. '`' → logprob: -17.93768310546875
    10. '...' → logprob: -18.18768310546875

Token 210: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0381355844438076
    2. ':' → logprob: -3.288135528564453
    3. '       ' → logprob: -10.163135528564453
    4. '):
' → logprob: -10.538135528564453
    5. '   ' → logprob: -11.413135528564453
    6. ':

' → logprob: -11.913135528564453
    7. ' :
' → logprob: -12.288135528564453
    8. ':
' → logprob: -12.538135528564453
    9. '           ' → logprob: -13.538135528564453
    10. '):' → logprob: -13.913135528564453

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21674460172653198
    2. 'club' → logprob: -1.8417446613311768
    3. ' club' → logprob: -3.3417446613311768
    4. '       ' → logprob: -7.341744422912598
    5. '   ' → logprob: -9.216744422912598
    6. '               ' → logprob: -9.466744422912598
    7. '.club' → logprob: -9.591744422912598
    8. '          ' → logprob: -11.341744422912598
    9. '```' → logprob: -11.466744422912598
    10. ':' → logprob: -12.216744422912598

Token 212: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' (adapté à ' club') → logprob: -0.0032007659319788218
    2. ' club' → logprob: -5.753200531005859
    3. '           ' → logprob: -11.75320053100586
    4. 'x' → logprob: -12.00320053100586
    5. 'cl' → logprob: -12.75320053100586
    6. 'cluster' → logprob: -13.00320053100586
    7. '.club' → logprob: -13.25320053100586
    8. '       ' → logprob: -14.12820053100586
    9. '   ' → logprob: -14.37820053100586
    10. '               ' → logprob: -15.75320053100586

Token 213: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.8921695047756657e-05
    2. 'x' → logprob: -10.500028610229492
    3. '[y' → logprob: -13.625028610229492
    4. '[' → logprob: -15.875028610229492
    5. '```' → logprob: -18.500028610229492
    6. '[
' → logprob: -18.875028610229492
    7. '=x' → logprob: -18.875028610229492
    8. ' [' → logprob: -19.000028610229492
    9. '=' → logprob: -19.250028610229492
    10. '	x' → logprob: -19.625028610229492

Token 214: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03681439533829689
    2. ' =' → logprob: -3.6618144512176514
    3. ']' → logprob: -4.661814212799072
    4. ']=' → logprob: -6.911814212799072
    5. ')' → logprob: -11.78681468963623
    6. ' ]' → logprob: -12.28681468963623
    7. ')=' → logprob: -14.41181468963623
    8. '=y' → logprob: -14.41181468963623
    9. '[' → logprob: -15.91181468963623
    10. ' ' → logprob: -16.661813735961914

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=y' → logprob: -17.38604736328125
    4. '=
' → logprob: -18.26104736328125
    5. '=

' → logprob: -18.26104736328125
    6. ')' → logprob: -18.51104736328125
    7. '＝' → logprob: -19.26104736328125
    8. '=user' → logprob: -19.38604736328125
    9. '.=' → logprob: -20.26104736328125
    10. ')=' → logprob: -20.38604736328125

Token 216: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.011054662987589836
    2. ' club' → logprob: -4.511054515838623
    3. 'cl' → logprob: -12.261054992675781
    4. 'cluster' → logprob: -13.886054992675781
    5. '.club' → logprob: -14.261054992675781
    6. 'clip' → logprob: -15.886054992675781
    7. ' ' → logprob: -16.26105499267578
    8. '   ' → logprob: -16.63605499267578
    9. 'chat' → logprob: -16.76105499267578
    10. 'clubs' → logprob: -17.01105499267578

Token 217: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.515961285913363e-05
    2. 'y' → logprob: -9.750064849853516
    3. '[' → logprob: -12.250064849853516
    4. '[x' → logprob: -13.750064849853516
    5. '```' → logprob: -15.375064849853516
    6. '[user' → logprob: -15.750064849853516
    7. '[
' → logprob: -15.875064849853516
    8. ' [' → logprob: -16.000064849853516
    9. '(y' → logprob: -16.125064849853516
    10. ' y' → logprob: -17.125064849853516

Token 218: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022406302392482758
    2. '<|end|>' → logprob: -3.8974063396453857
    3. ')return' → logprob: -7.147406101226807
    4. ']' → logprob: -8.022406578063965
    5. '   ' → logprob: -8.272406578063965
    6. '<|end|>' → logprob: -8.522406578063965
    7. '}' → logprob: -9.772406578063965
    8. ')
' → logprob: -9.897406578063965
    9. '
' → logprob: -9.897406578063965
    10. '```' → logprob: -10.022406578063965

Token 219: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3509816825389862
    2. '<|end|>' → logprob: -2.3509817123413086
    3. 'for' → logprob: -2.9759817123413086
    4. '
' → logprob: -3.2259817123413086
    5. 'def' → logprob: -3.6009817123413086
    6. '#' → logprob: -3.8509817123413086
    7. '\n' → logprob: -3.9759817123413086
    8. ' for' → logprob: -4.350981712341309
    9. ' 
' → logprob: -5.100981712341309
    10. ')' → logprob: -5.850981712341309

Token 220: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.28037142753601074
    2. 'main' → logprob: -1.5303714275360107
    3. 'dfs' → logprob: -4.65537166595459
    4. 'count' → logprob: -5.90537166595459
    5. ' dfs' → logprob: -5.90537166595459
    6. 'solve' → logprob: -6.40537166595459
    7. ' union' → logprob: -6.78037166595459
    8. ' solve' → logprob: -6.90537166595459
    9. 'process' → logprob: -7.28037166595459
    10. 'union' → logprob: -7.28037166595459

Token 221: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.8252171874046326
    2. '(' → logprob: -0.9502171874046326
    3. '(x' → logprob: -2.9502172470092773
    4. '_size' → logprob: -2.9502172470092773
    5. 'size' → logprob: -3.0752172470092773
    6. '_parent' → logprob: -5.075217247009277
    7. '_count' → logprob: -5.200217247009277
    8. 'club' → logprob: -5.950217247009277
    9. '_cluster' → logprob: -6.075217247009277
    10. '_' → logprob: -6.075217247009277

Token 222: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.00012535012501757592
    2. 'uster' → logprob: -10.25012493133545
    3. 'ust' → logprob: -10.50012493133545
    4. 'u' → logprob: -10.87512493133545
    5. '```' → logprob: -11.50012493133545
    6. 'ass' → logprob: -11.75012493133545
    7. 'ubs' → logprob: -12.12512493133545
    8. '#' → logprob: -13.12512493133545
    9. '[' → logprob: -13.25012493133545
    10. '_' → logprob: -13.37512493133545

Token 223: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004165183752775192
    2. '(' → logprob: -5.504165172576904
    3. '(u' → logprob: -10.129165649414062
    4. '(a' → logprob: -10.504165649414062
    5. '(node' → logprob: -12.129165649414062
    6. '(i' → logprob: -12.254165649414062
    7. '(n' → logprob: -12.504165649414062
    8. '(v' → logprob: -14.129165649414062
    9. '(player' → logprob: -14.129165649414062
    10. '(s' → logprob: -14.629165649414062

Token 224: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014166207052767277
    2. '):
' → logprob: -4.264166355133057
    3. ')' → logprob: -13.264165878295898
    4. '):
' → logprob: -14.014165878295898
    5. '):

' → logprob: -16.6391658782959
    6. ' ):' → logprob: -17.2641658782959
    7. ':' → logprob: -17.6391658782959
    8. ')：' → logprob: -18.2641658782959
    9. '）：' → logprob: -19.0141658782959
    10. '   ' → logprob: -19.3891658782959

Token 225: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.045215532183647156
    2. '   ' → logprob: -3.670215606689453
    3. 'return' → logprob: -5.295215606689453
    4. ' x' → logprob: -5.420215606689453
    5. 'px' → logprob: -5.795215606689453
    6. 'p' → logprob: -6.045215606689453
    7. 'root' → logprob: -6.670215606689453
    8. 'r' → logprob: -7.045215606689453
    9. ' return' → logprob: -7.045215606689453
    10. 'if' → logprob: -7.920215606689453

Token 226: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.294483482837677
    2. 'return' (adapté à ' return') → logprob: -2.0444834232330322
    3. 'p' → logprob: -2.9194834232330322
    4. 'if' → logprob: -3.4194834232330322
    5. 'px' → logprob: -3.9194834232330322
    6. 'root' → logprob: -4.544483661651611
    7. 'while' → logprob: -5.044483661651611
    8. 'r' → logprob: -6.919483661651611
    9. 'find' → logprob: -8.294483184814453
    10. 'fx' → logprob: -8.669483184814453

Token 227: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.002509070560336113
    2. ' club' → logprob: -6.002509117126465
    3. 'find' → logprob: -10.627509117126465
    4. 'cluster' → logprob: -12.502509117126465
    5. 'parent' → logprob: -13.377509117126465
    6. 'get' → logprob: -13.877509117126465
    7. 'cl' → logprob: -14.002509117126465
    8. '   ' → logprob: -14.502509117126465
    9. 'x' → logprob: -14.877509117126465
    10. ' find' → logprob: -15.377509117126465

Token 228: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.49659353494644165
    2. '[x' → logprob: -0.9965935349464417
    3. '[get' → logprob: -4.121593475341797
    4. '[parent' → logprob: -5.121593475341797
    5. '[
' → logprob: -10.996593475341797
    6. '[user' → logprob: -11.746593475341797
    7. 'x' → logprob: -12.121593475341797
    8. '[class' → logprob: -12.371593475341797
    9. '[node' → logprob: -12.371593475341797
    10. '[first' → logprob: -12.496593475341797

Token 229: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0046434844844043255
    2. 'x' → logprob: -5.379643440246582
    3. ' find' → logprob: -11.254643440246582
    4. '(find' → logprob: -11.754643440246582
    5. 'get' → logprob: -13.879643440246582
    6. 'parent' → logprob: -14.004643440246582
    7. '	find' → logprob: -15.004643440246582
    8. ' x' → logprob: -16.0046443939209
    9. ')find' → logprob: -16.6296443939209
    10. '=find' → logprob: -16.7546443939209

Token 230: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008618354797363281
    2. '(' → logprob: -4.758618354797363
    3. '(
' → logprob: -13.133618354797363
    4. ' (' → logprob: -14.008618354797363
    5. 'x' → logprob: -14.508618354797363
    6. '](' → logprob: -15.258618354797363
    7. ']' → logprob: -15.258618354797363
    8. '(

' → logprob: -16.883617401123047
    9. '```' → logprob: -18.008617401123047
    10. ')' → logprob: -18.258617401123047

Token 231: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.416665640543215e-05
    2. '(x' → logprob: -11.37503433227539
    3. ')' → logprob: -11.87503433227539
    4. '])' → logprob: -12.12503433227539
    5. ')])' → logprob: -12.62503433227539
    6. ']' → logprob: -13.25003433227539
    7. '])]' → logprob: -13.37503433227539
    8. ')]
' → logprob: -13.50003433227539
    9. '())' → logprob: -14.37503433227539
    10. '))' → logprob: -14.50003433227539

Token 232: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004235243541188538
    2. ' for' → logprob: -8.375423431396484
    3. 'i' → logprob: -9.875423431396484
    4. '```' → logprob: -9.875423431396484
    5. 'n' → logprob: -10.375423431396484
    6. 'x' → logprob: -11.125423431396484
    7. 'a' → logprob: -11.750423431396484
    8. '_' → logprob: -12.000423431396484
    9. '#' → logprob: -12.125423431396484
    10. 'def' → logprob: -12.250423431396484

Token 233: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09549838304519653
    2. '_' → logprob: -2.4704983234405518
    3. ' i' → logprob: -5.095498561859131
    4. 'i' → logprob: -7.845498561859131
    5. '_i' → logprob: -11.345498085021973
    6. ' player' → logprob: -12.345498085021973
    7. ' ' → logprob: -12.595498085021973
    8. ' student' → logprob: -14.345498085021973
    9. 'player' → logprob: -15.345498085021973
    10. ' person' → logprob: -15.845498085021973

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048791177570819855
    2. 'in' → logprob: -3.0487911701202393
    3. ' ' → logprob: -8.54879093170166
    4. 'range' → logprob: -12.67379093170166
    5. '	in' → logprob: -13.54879093170166
    6. '_' → logprob: -13.92379093170166
    7. ',' → logprob: -14.17379093170166
    8. '  ' → logprob: -14.42379093170166
    9. '0' → logprob: -14.42379093170166
    10. ' range' → logprob: -15.04879093170166

Token 235: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380416102707386
    2. ' range' → logprob: -3.288041591644287
    3. '(range' → logprob: -16.788042068481445
    4. ' ' → logprob: -17.538042068481445
    5. '	range' → logprob: -17.538042068481445
    6. 'rang' → logprob: -17.663042068481445
    7. 'r' → logprob: -17.788042068481445
    8. 'input' → logprob: -18.913042068481445
    9. 'ange' → logprob: -19.163042068481445
    10. '1' → logprob: -19.913042068481445

Token 236: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22658932209014893
    2. '(M' → logprob: -1.601589322090149
    3. '(N' → logprob: -7.476589202880859
    4. '(K' → logprob: -7.476589202880859
    5. '1' → logprob: -10.35158920288086
    6. 'M' → logprob: -11.72658920288086
    7. '(Q' → logprob: -14.72658920288086
    8. '(L' → logprob: -14.85158920288086
    9. '(int' → logprob: -15.35158920288086
    10. '(
' → logprob: -15.35158920288086

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01811693049967289
    2. 'M' → logprob: -4.6431169509887695
    3. 'N' → logprob: -4.8931169509887695
    4. 'K' → logprob: -7.1431169509887695
    5. '(' → logprob: -11.01811695098877
    6. ' ' → logprob: -11.26811695098877
    7. ' M' → logprob: -12.76811695098877
    8. ' N' → logprob: -13.51811695098877
    9. '2' → logprob: -13.76811695098877
    10. '(M' → logprob: -13.89311695098877

Token 238: ',K' (ID: 107147)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0326712392270565
    2. ' ,' → logprob: -3.5326712131500244
    3. ',N' → logprob: -6.0326714515686035
    4. ',M' → logprob: -7.6576714515686035
    5. ',K' → logprob: -10.782670974731445
    6. '(' → logprob: -12.157670974731445
    7. '(N' → logprob: -12.282670974731445
    8. ',n' → logprob: -13.282670974731445
    9. ' ' → logprob: -13.532670974731445
    10. '(M' → logprob: -13.782670974731445

Token 239: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0033326568081974983
    2. ' +' → logprob: -6.003332614898682
    3. '):' → logprob: -7.128332614898682
    4. '):
' → logprob: -10.12833309173584
    5. ' ):' → logprob: -12.25333309173584
    6. '1' → logprob: -13.50333309173584
    7. '+:' → logprob: -13.62833309173584
    8. '**' → logprob: -14.00333309173584
    9. ',' → logprob: -14.25333309173584
    10. '+
' → logprob: -14.25333309173584

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003930192324332893
    2. ' ' → logprob: -7.875392913818359
    3. '0' → logprob: -11.50039291381836
    4. '):' → logprob: -13.87539291381836
    5. ')' → logprob: -14.37539291381836
    6. '   ' → logprob: -15.12539291381836
    7. '```' → logprob: -15.37539291381836
    8. 'K' → logprob: -15.75039291381836
    9. '  ' → logprob: -15.87539291381836
    10. '):
' → logprob: -15.87539291381836

Token 241: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06644666939973831
    2. '):
' → logprob: -2.8164467811584473
    3. ':' → logprob: -5.441446781158447
    4. ')' → logprob: -9.691446304321289
    5. ':
' → logprob: -10.191446304321289
    6. ' ):' → logprob: -10.441446304321289
    7. ' ):
' → logprob: -12.566446304321289
    8. '):
' → logprob: -13.316446304321289
    9. ' :' → logprob: -14.191446304321289
    10. ',' → logprob: -14.691446304321289

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14549709856510162
    2. ' club' → logprob: -2.5204970836639404
    3. 'club' → logprob: -3.6454970836639404
    4. '    
' → logprob: -4.3954973220825195
    5. '
' → logprob: -5.6454973220825195
    6. '   ' → logprob: -6.0204973220825195
    7. ' 
' → logprob: -6.5204973220825195
    8. ',' → logprob: -6.6454973220825195
    9. ' player' → logprob: -7.6454973220825195
    10. 'a' → logprob: -7.6454973220825195

Token 243: ' t' (ID: 260)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17259490489959717
    2. 'u' → logprob: -2.7975950241088867
    3. 'a' → logprob: -3.1725950241088867
    4. 'club' → logprob: -3.4225950241088867
    5. ' c' → logprob: -5.172595024108887
    6. 'p' → logprob: -5.297595024108887
    7. 'x' → logprob: -5.922595024108887
    8. 'v' → logprob: -6.297595024108887
    9. ' club' → logprob: -6.547595024108887
    10. 'player' → logprob: -6.922595024108887

Token 244: ',*' (ID: 65674)
  Prédit: 'ype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ype' → logprob: -0.5669273734092712
    2. ',' → logprob: -1.691927433013916
    3. ' =' → logprob: -2.191927433013916
    4. 'eam' → logprob: -3.316927433013916
    5. 'emp' → logprob: -3.566927433013916
    6. '=' → logprob: -3.816927433013916
    7. ' ,' → logprob: -4.316927433013916
    8. 'oken' → logprob: -4.566927433013916
    9. 'okens' → logprob: -4.816927433013916
    10. 'ok' → logprob: -5.691927433013916

Token 245: 'a' (ID: 64)
  Prédit: '_='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_=' → logprob: -0.2995292544364929
    2. 'a' → logprob: -2.2995293140411377
    3. '_' → logprob: -2.4245293140411377
    4. '=' → logprob: -3.7995293140411377
    5. 's' → logprob: -4.424529075622559
    6. 'data' → logprob: -4.799529075622559
    7. '_rest' → logprob: -5.174529075622559
    8. 'tokens' → logprob: -5.799529075622559
    9. 'rest' → logprob: -5.924529075622559
    10. 'line' → logprob: -6.299529075622559

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014387380331754684
    2. ' =' → logprob: -4.264387607574463
    3. '=a' → logprob: -8.639387130737305
    4. '=list' → logprob: -11.389387130737305
    5. 'a' → logprob: -11.639387130737305
    6. '=_' → logprob: -12.014387130737305
    7. '=sys' → logprob: -12.764387130737305
    8. '=input' → logprob: -12.889387130737305
    9. '=s' → logprob: -13.014387130737305
    10. '=[]' → logprob: -13.139387130737305

Token 247: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -4.961759259458631e-06
    2. ' map' → logprob: -12.250004768371582
    3. 'list' → logprob: -16.5000057220459
    4. 'input' → logprob: -20.6250057220459
    5. '(map' → logprob: -20.8750057220459
    6. '	map' → logprob: -20.8750057220459
    7. '   ' → logprob: -21.8750057220459
    8. '
' → logprob: -22.1250057220459
    9. '.map' → logprob: -22.7500057220459
    10. 'm' → logprob: -22.7500057220459

Token 248: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02078302390873432
    2. 'int' → logprob: -3.895782947540283
    3. '=int' → logprob: -9.395783424377441
    4. '[int' → logprob: -9.395783424377441
    5. ',int' → logprob: -10.395783424377441
    6. ' int' → logprob: -10.770783424377441
    7. ']int' → logprob: -12.020783424377441
    8. '<int' → logprob: -12.145783424377441
    9. 'list' → logprob: -12.145783424377441
    10. '```' → logprob: -12.895783424377441

Token 249: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4104398488998413
    2. '(input' → logprob: -1.1604398488998413
    3. 'input' → logprob: -3.785439968109131
    4. ',' → logprob: -7.535439968109131
    5. ' input' → logprob: -10.410439491271973
    6. '=input' → logprob: -11.910439491271973
    7. ')(' → logprob: -12.035439491271973
    8. ')' → logprob: -12.035439491271973
    9. '[input' → logprob: -12.410439491271973
    10. '(' → logprob: -13.160439491271973

Token 250: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.080963092041202e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -15.500004768371582
    4. '(' → logprob: -16.8750057220459
    5. '.' → logprob: -17.6250057220459
    6. '()
' → logprob: -17.7500057220459
    7. '.readline' → logprob: -18.0000057220459
    8. ')' → logprob: -18.5000057220459
    9. '.split' → logprob: -20.2500057220459
    10. '('').' → logprob: -20.3750057220459

Token 251: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0206720617134124e-05
    2. 'strip' → logprob: -11.75001049041748
    3. '(split' → logprob: -13.87501049041748
    4. 'read' → logprob: -14.50001049041748
    5. 'rstrip' → logprob: -15.00001049041748
    6. '().' → logprob: -15.12501049041748
    7. ' split' → logprob: -15.75001049041748
    8. 'spl' → logprob: -15.87501049041748
    9. 's' → logprob: -19.625009536743164
    10. '```' → logprob: -19.750009536743164

Token 252: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004955866374075413
    2. '())
' → logprob: -6.004955768585205
    3. '()' → logprob: -6.129955768585205
    4. ')' → logprob: -8.379956245422363
    5. '(' → logprob: -9.754956245422363
    6. '()
' → logprob: -12.504956245422363
    7. ' ())' → logprob: -12.504956245422363
    8. '())

' → logprob: -13.129956245422363
    9. '()))' → logprob: -14.004956245422363
    10. '())
' → logprob: -14.379956245422363

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3645918369293213
    2. ' if' → logprob: -2.2395918369293213
    3. '
' → logprob: -2.3645918369293213
    4. '<|end|>' → logprob: -2.9895918369293213
    5. 'if' → logprob: -3.1145918369293213
    6. ' ' → logprob: -5.989591598510742
    7. ' 
' → logprob: -6.364591598510742
    8. '    
' → logprob: -6.614591598510742
    9. '	if' → logprob: -6.989591598510742
    10. '[' → logprob: -7.239591598510742

Token 254: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8747317790985107
    2. '   ' → logprob: -1.6247317790985107
    3. 'if' (adapté à ' if') → logprob: -2.2497317790985107
    4. ' 
' → logprob: -2.4997317790985107
    5. '<|end|>' → logprob: -2.6247317790985107
    6. '\n' → logprob: -2.8747317790985107
    7. '
' → logprob: -3.4997317790985107
    8. '    
' → logprob: -4.62473201751709
    9. '    ' → logprob: -4.62473201751709
    10. ' ' → logprob: -5.49973201751709

Token 255: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6931498050689697
    2. ' t' → logprob: -0.6931498050689697
    3. ' ' → logprob: -13.81814956665039
    4. '   ' → logprob: -14.94314956665039
    5. '`t' → logprob: -15.31814956665039
    6. 'a' → logprob: -15.44314956665039
    7. '	t' → logprob: -15.69314956665039
    8. ' a' → logprob: -15.94314956665039
    9. 'len' → logprob: -16.31814956665039
    10. ' ' → logprob: -16.44314956665039

Token 256: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2015758752822876
    2. ' ==' → logprob: -1.7015758752822876
    3. '=' → logprob: -9.576576232910156
    4. ')' → logprob: -10.451576232910156
    5. ')==' → logprob: -10.826576232910156
    6. ']==' → logprob: -11.326576232910156
    7. '[' → logprob: -11.451576232910156
    8. '()==' → logprob: -12.076576232910156
    9. '===' → logprob: -12.076576232910156
    10. '==
' → logprob: -13.201576232910156

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0074887811206281185
    2. ' ' → logprob: -5.00748872756958
    3. '2' → logprob: -8.007489204406738
    4. '3' → logprob: -8.507489204406738
    5. '0' → logprob: -8.757489204406738
    6. '4' → logprob: -9.507489204406738
    7. '5' → logprob: -13.007489204406738
    8. '6' → logprob: -14.132489204406738
    9. '  ' → logprob: -14.444989204406738
    10. '   ' → logprob: -14.819989204406738

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00888093002140522
    2. '0' → logprob: -5.258881092071533
    3. '2' → logprob: -6.133881092071533
    4. '3' → logprob: -7.508881092071533
    5. ' ' → logprob: -7.633881092071533
    6. '4' → logprob: -7.758881092071533
    7. '5' → logprob: -12.446380615234375
    8. '  ' → logprob: -13.946380615234375
    9. '=' → logprob: -14.071380615234375
    10. '   ' → logprob: -14.383880615234375

Token 259: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0067455661483109
    2. ':
' → logprob: -5.006745338439941
    3. '):' → logprob: -10.881745338439941
    4. ',' → logprob: -12.756745338439941
    5. '():' → logprob: -13.256745338439941
    6. ' and' → logprob: -13.381745338439941
    7. '   ' → logprob: -13.506745338439941
    8. '):
' → logprob: -13.881745338439941
    9. '<|end|>' → logprob: -13.881745338439941
    10. ' :' → logprob: -14.756745338439941

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1471427083015442
    2. 'un' → logprob: -2.5221426486968994
    3. 'a' → logprob: -4.1471428871154785
    4. ' un' → logprob: -4.7721428871154785
    5. '   ' → logprob: -5.0221428871154785
    6. ' unite' → logprob: -5.3971428871154785
    7. '
' → logprob: -5.6471428871154785
    8. '        
' → logprob: -5.6471428871154785
    9. 'x' → logprob: -6.1471428871154785
    10. ' a' → logprob: -6.5221428871154785

Token 261: ' a' (ID: 261)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.023470476269721985
    2. 'u' → logprob: -4.523470401763916
    3. 'x' → logprob: -4.773470401763916
    4. 'a' (adapté à ' a') → logprob: -6.023470401763916
    5. 'if' → logprob: -6.773470401763916
    6. 'for' → logprob: -8.898470878601074
    7. 'print' → logprob: -8.898470878601074
    8. '   ' → logprob: -10.648470878601074
    9. '```' → logprob: -10.898470878601074
    10. '    
' → logprob: -12.773470878601074

Token 262: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018005946651101112
    2. ' =' → logprob: -5.018005847930908
    3. '.append' → logprob: -5.393005847930908
    4. '=' → logprob: -6.268005847930908
    5. ',' → logprob: -6.393005847930908
    6. '0' → logprob: -7.643005847930908
    7. '[-' → logprob: -8.018006324768066
    8. 'a' → logprob: -8.143006324768066
    9. ',a' → logprob: -8.143006324768066
    10. '.' → logprob: -8.268006324768066

Token 263: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.11848815530538559
    2. ',' → logprob: -2.243488073348999
    3. ' =' → logprob: -6.493488311767578
    4. ',b' → logprob: -6.993488311767578
    5. 'a' → logprob: -7.493488311767578
    6. '=' → logprob: -7.493488311767578
    7. '=a' → logprob: -7.493488311767578
    8. ' ,' → logprob: -7.868488311767578
    9. ',n' → logprob: -8.368488311767578
    10. ',y' → logprob: -8.493488311767578

Token 264: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7460693717002869
    2. '=' → logprob: -0.8710693717002869
    3. ' =' → logprob: -2.7460694313049316
    4. '1' → logprob: -3.6210694313049316
    5. ',b' → logprob: -5.496069431304932
    6. 'b' → logprob: -5.871069431304932
    7. 'a' → logprob: -5.871069431304932
    8. '=a' → logprob: -5.871069431304932
    9. ',' → logprob: -5.996069431304932
    10. ',a' → logprob: -7.621069431304932

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5785789489746094
    2. '=' → logprob: -0.8285789489746094
    3. '=a' → logprob: -5.953578948974609
    4. ',a' → logprob: -11.07857894897461
    5. ',' → logprob: -11.07857894897461
    6. 'a' → logprob: -12.32857894897461
    7. ')=' → logprob: -13.95357894897461
    8. ' ' → logprob: -14.07857894897461
    9. '   ' → logprob: -14.32857894897461
    10. '    ' → logprob: -14.95357894897461

Token 266: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.836499985889532e-05
    2. ' a' → logprob: -9.7500581741333
    3. '	a' → logprob: -19.125059127807617
    4. '   ' → logprob: -21.375059127807617
    5. '*a' → logprob: -22.500059127807617
    6. '
' → logprob: -23.250059127807617
    7. 'а' → logprob: -23.500059127807617
    8. ' ' → logprob: -23.750059127807617
    9. '(a' → logprob: -24.500059127807617
    10. '  ' → logprob: -24.500059127807617

Token 267: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021377380937337875
    2. '
' → logprob: -4.5213775634765625
    3. '<|end|>' → logprob: -5.1463775634765625
    4. '[:' → logprob: -6.8963775634765625
    5. '  
' → logprob: -7.1463775634765625
    6. ',' → logprob: -7.2713775634765625
    7. '  ' → logprob: -8.271377563476562
    8. 'a' → logprob: -8.771377563476562
    9. '[]' → logprob: -8.771377563476562
    10. '[:]' → logprob: -8.771377563476562

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008202009834349155
    2. '
' → logprob: -5.258202075958252
    3. 'un' → logprob: -5.883202075958252
    4. '        
' → logprob: -9.883201599121094
    5. '   ' → logprob: -10.258201599121094
    6. '<|end|>' → logprob: -10.758201599121094
    7. ')
' → logprob: -11.383201599121094
    8. ',' → logprob: -11.508201599121094
    9. '  
' → logprob: -11.508201599121094
    10. ')' → logprob: -11.508201599121094

Token 269: ' r' (ID: 428)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0004001641063950956
    2. 'if' → logprob: -8.62540054321289
    3. ' unite' → logprob: -9.75040054321289
    4. 'print' → logprob: -10.00040054321289
    5. 'club' → logprob: -10.50040054321289
    6. '
' → logprob: -10.75040054321289
    7. 'for' → logprob: -11.12540054321289
    8. '   ' → logprob: -11.50040054321289
    9. '    
' → logprob: -11.75040054321289
    10. 'union' → logprob: -11.75040054321289

Token 270: '1' (ID: 16)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.23268626630306244
    2. 'a' → logprob: -2.7326862812042236
    3. 'e' → logprob: -3.1076862812042236
    4. 'ef' → logprob: -3.6076862812042236
    5. 'es' → logprob: -3.7326862812042236
    6. 'ep' → logprob: -3.9826862812042236
    7. '1' → logprob: -5.1076860427856445
    8. 'oot' → logprob: -5.8576860427856445
    9. 'ank' → logprob: -6.8576860427856445
    10. '=' → logprob: -6.9826860427856445

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2122281789779663
    2. '1' → logprob: -2.337228298187256
    3. '=find' → logprob: -2.462228298187256
    4. '=' → logprob: -5.462228298187256
    5. ' ' → logprob: -6.462228298187256
    6. ',' → logprob: -6.462228298187256
    7. 'find' → logprob: -6.962228298187256
    8. '[' → logprob: -7.712228298187256
    9. '   ' → logprob: -8.962227821350098
    10. '=get' → logprob: -9.587227821350098

Token 272: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0019546831026673317
    2. ' find' → logprob: -6.251954555511475
    3. 'get' → logprob: -10.751955032348633
    4. 'rank' → logprob: -13.126955032348633
    5. '(find' → logprob: -13.876955032348633
    6. 'a' → logprob: -14.126955032348633
    7. '	find' → logprob: -15.376955032348633
    8. '=find' → logprob: -15.876955032348633
    9. 'parent' → logprob: -16.126955032348633
    10. ' ' → logprob: -16.376955032348633

Token 273: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.5491004129871726e-05
    2. 'a' → logprob: -10.000045776367188
    3. '(' → logprob: -16.625045776367188
    4. 'r' → logprob: -18.125045776367188
    5. '(r' → logprob: -20.125045776367188
    6. '(A' → logprob: -20.375045776367188
    7. '(parent' → logprob: -20.875045776367188
    8. '(
' → logprob: -21.000045776367188
    9. '((' → logprob: -21.375045776367188
    10. '[a' → logprob: -21.625045776367188

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. 'a' → logprob: -9.000204086303711
    3. '[' → logprob: -9.625204086303711
    4. '(' → logprob: -12.250204086303711
    5. ' ' → logprob: -12.750204086303711
    6. '(a' → logprob: -13.125204086303711
    7. '[a' → logprob: -13.750204086303711
    8. ' a' → logprob: -14.062704086303711
    9. '```' → logprob: -14.500204086303711
    10. ')' → logprob: -14.812704086303711

Token 275: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31333091855049133
    2. ')' → logprob: -1.313330888748169
    3. ')
' → logprob: -9.68833065032959
    4. ' )
' → logprob: -12.43833065032959
    5. ')

' → logprob: -13.43833065032959
    6. ')a' → logprob: -14.18833065032959
    7. ' )' → logprob: -14.68833065032959
    8. 'r' → logprob: -15.18833065032959
    9. ')#' → logprob: -16.063331604003906
    10. '),' → logprob: -16.188331604003906

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13738684356212616
    2. 'r' → logprob: -2.2623867988586426
    3. ' 
' → logprob: -4.512386798858643
    4. '        
' → logprob: -5.012386798858643
    5. ' r' → logprob: -6.012386798858643
    6. '
' → logprob: -6.137386798858643
    7. '<|end|>' → logprob: -7.137386798858643
    8. '  
' → logprob: -8.5123872756958
    9. '   ' → logprob: -8.7623872756958
    10. ' ' → logprob: -9.0123872756958

Token 277: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0002534720697440207
    2. ' r' → logprob: -8.750253677368164
    3. '       ' → logprob: -9.375253677368164
    4. 'a' → logprob: -11.625253677368164
    5. '   ' → logprob: -14.125253677368164
    6. '	r' → logprob: -16.500253677368164
    7. '    ' → logprob: -16.625253677368164
    8. '      ' → logprob: -16.625253677368164
    9. '<|end|>' → logprob: -16.875253677368164
    10. '     ' → logprob: -17.000253677368164

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6240554451942444
    2. '1' → logprob: -1.2490553855895996
    3. '=' → logprob: -2.2490553855895996
    4. ' =' → logprob: -3.6240553855895996
    5. '[' → logprob: -3.8740553855895996
    6. 'r' → logprob: -4.1240553855896
    7. '_' → logprob: -6.1240553855896
    8. ',' → logprob: -6.6240553855896
    9. '=r' → logprob: -6.8740553855896
    10. '<|end|>' → logprob: -7.2490553855896

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16035887598991394
    2. '=' → logprob: -1.9103589057922363
    3. '=find' → logprob: -9.035358428955078
    4. ')' → logprob: -12.535358428955078
    5. '(find' → logprob: -13.160358428955078
    6. '[' → logprob: -13.410358428955078
    7. '=get' → logprob: -13.410358428955078
    8. '<|end|>' → logprob: -13.535358428955078
    9. ' ' → logprob: -13.785358428955078
    10. ',' → logprob: -13.785358428955078

Token 280: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.018225563690066338
    2. ' find' → logprob: -4.01822566986084
    3. '(find' → logprob: -9.51822566986084
    4. 'a' → logprob: -13.51822566986084
    5. '	find' → logprob: -14.39322566986084
    6. '=find' → logprob: -15.64322566986084
    7. '.find' → logprob: -17.018224716186523
    8. ')find' → logprob: -17.143224716186523
    9. 'r' → logprob: -17.518224716186523
    10. '(a' → logprob: -18.518224716186523

Token 281: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. 'a' → logprob: -15.750000953674316
    4. '(A' → logprob: -18.375
    5. '<|end|>' → logprob: -18.375
    6. '(
' → logprob: -19.125
    7. '(ai' → logprob: -19.75
    8. '((' → logprob: -19.75
    9. 'r' → logprob: -19.875
    10. '[a' → logprob: -20.125

Token 282: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00037716879160143435
    2. 'a' → logprob: -9.00037670135498
    3. '[' → logprob: -9.00037670135498
    4. '1' → logprob: -10.00037670135498
    5. '(a' → logprob: -10.00037670135498
    6. '(' → logprob: -10.25037670135498
    7. '[a' → logprob: -13.37537670135498
    8. ')' → logprob: -14.00037670135498
    9. '```' → logprob: -14.37537670135498
    10. '0' → logprob: -15.12537670135498

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020579613745212555
    2. ')
' → logprob: -3.8955795764923096
    3. '       ' → logprob: -11.14557933807373
    4. '<|end|>' → logprob: -11.27057933807373
    5. ')return' → logprob: -12.89557933807373
    6. '   ' → logprob: -13.14557933807373
    7. '<|end|>' → logprob: -13.39557933807373
    8. ')n' → logprob: -14.27057933807373
    9. ' )' → logprob: -14.77057933807373
    10. '
' → logprob: -14.89557933807373

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01878306455910206
    2. '
' → logprob: -4.393783092498779
    3. '<|end|>' → logprob: -5.268783092498779
    4. ' if' → logprob: -7.768783092498779
    5. 'if' → logprob: -7.893783092498779
    6. ')' → logprob: -9.518782615661621
    7. '   ' → logprob: -10.143782615661621
    8. '        
' → logprob: -10.268782615661621
    9. ',' → logprob: -10.393782615661621
    10. ')
' → logprob: -10.768782615661621

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0076657747849822044
    2. '       ' → logprob: -5.382665634155273
    3. 'un' → logprob: -6.382665634155273
    4. ' if' → logprob: -7.382665634155273
    5. 'print' → logprob: -7.632665634155273
    6. 'club' → logprob: -9.132665634155273
    7. 'parent' → logprob: -9.507665634155273
    8. '   ' → logprob: -10.882665634155273
    9. '
' → logprob: -11.257665634155273
    10. '```' → logprob: -11.507665634155273

Token 286: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25625765323638916
    2. ' r' → logprob: -1.5062576532363892
    3. 'get' → logprob: -6.2562575340271
    4. ' get' → logprob: -6.5062575340271
    5. ' club' → logprob: -7.7562575340271
    6. 'club' → logprob: -8.256258010864258
    7. ' find' → logprob: -9.381258010864258
    8. 'find' → logprob: -9.881258010864258
    9. ' ' → logprob: -10.631258010864258
    10. 'a' → logprob: -11.193758010864258

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '2' → logprob: -12.500011444091797
    3. ' ' → logprob: -12.500011444091797
    4. ' ==' → logprob: -13.875011444091797
    5. '```' → logprob: -14.000011444091797
    6. '[' → logprob: -15.000011444091797
    7. '==' → logprob: -15.000011444091797
    8. '_' → logprob: -15.500011444091797
    9. ')' → logprob: -15.687511444091797
    10. 's' → logprob: -16.312511444091797

Token 288: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21496343612670898
    2. '!=' → logprob: -1.839963436126709
    3. ' ==' → logprob: -3.589963436126709
    4. ' !=' → logprob: -4.964963436126709
    5. '=' → logprob: -10.839963912963867
    6. '==
' → logprob: -13.089963912963867
    7. '<|end|>' → logprob: -13.214963912963867
    8. ']==' → logprob: -13.839963912963867
    9. ' ' → logprob: -14.589963912963867
    10. ')!=' → logprob: -14.839963912963867

Token 289: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00023250321100931615
    2. ' r' → logprob: -8.375232696533203
    3. '-' → logprob: -14.000232696533203
    4. ' ' → logprob: -14.750232696533203
    5. '   ' → logprob: -15.375232696533203
    6. ' -' → logprob: -16.000232696533203
    7. '0' → logprob: -16.125232696533203
    8. '    ' → logprob: -16.875232696533203
    9. '	r' → logprob: -16.875232696533203
    10. '-r' → logprob: -17.250232696533203

Token 290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.375003814697266
    3. 'r' → logprob: -13.500003814697266
    4. '1' → logprob: -14.250003814697266
    5. '```' → logprob: -16.875003814697266
    6. 's' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.625003814697266
    8. ' r' → logprob: -17.750003814697266
    9. '       ' → logprob: -19.625003814697266
    10. '  ' → logprob: -19.687503814697266

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005614819470793009
    2. ' and' → logprob: -5.880614757537842
    3. ':
' → logprob: -6.255614757537842
    4. '           ' → logprob: -8.130615234375
    5. '==' → logprob: -8.755615234375
    6. ' or' → logprob: -9.130615234375
    7. 'and' → logprob: -9.255615234375
    8. ':return' → logprob: -9.380615234375
    9. ' ==' → logprob: -10.130615234375
    10. '       ' → logprob: -10.255615234375

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01583903282880783
    2. ':' → logprob: -4.265839099884033
    3. ':
' → logprob: -6.890839099884033
    4. '       ' → logprob: -9.265838623046875
    5. '\n' → logprob: -9.265838623046875
    6. '
' → logprob: -9.390838623046875
    7. ' and' → logprob: -9.890838623046875
    8. ' print' → logprob: -9.890838623046875
    9. '            
' → logprob: -9.890838623046875
    10. ' continue' → logprob: -9.890838623046875

Token 293: ' continue' (ID: 4901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15908165276050568
    2. '           ' → logprob: -2.0340816974639893
    3. 'continue' (adapté à ' continue') → logprob: -4.78408145904541
    4. '       ' → logprob: -5.53408145904541
    5. ' print' → logprob: -6.40908145904541
    6. '   ' → logprob: -7.28408145904541
    7. '               ' → logprob: -7.28408145904541
    8. '```' → logprob: -7.28408145904541
    9. ' continue' → logprob: -9.15908145904541
    10. 'if' → logprob: -9.78408145904541

Token 294: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0072738914750516415
    2. '
' → logprob: -5.2572736740112305
    3. '<|end|>' → logprob: -7.0072736740112305
    4. '   ' → logprob: -8.50727367401123
    5. 'else' → logprob: -8.50727367401123
    6. '        
' → logprob: -8.75727367401123
    7. ' else' → logprob: -8.75727367401123
    8. '\n' → logprob: -9.50727367401123
    9. ',' → logprob: -9.75727367401123
    10. '```' → logprob: -9.88227367401123

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06275852024555206
    2. '
' → logprob: -2.812758445739746
    3. '        
' → logprob: -8.312758445739746
    4. '   ' → logprob: -8.937758445739746
    5. '<|end|>' → logprob: -9.062758445739746
    6. 'else' → logprob: -9.437758445739746
    7. '```' → logprob: -9.937758445739746
    8. ' else' → logprob: -10.562758445739746
    9. '
' → logprob: -10.687758445739746
    10. 'if' → logprob: -11.187758445739746

Token 296: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5580912828445435
    2. 'if' → logprob: -1.0580912828445435
    3. 'un' → logprob: -2.933091163635254
    4. 'club' → logprob: -4.183091163635254
    5. ' if' → logprob: -4.808091163635254
    6. '   ' → logprob: -6.808091163635254
    7. '
' → logprob: -7.308091163635254
    8. '        
' → logprob: -7.683091163635254
    9. '#' (adapté à ' #') → logprob: -7.808091163635254
    10. '```' → logprob: -7.933091163635254

Token 297: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15182317793369293
    2. ' if' → logprob: -3.0268232822418213
    3. 'un' → logprob: -3.4018232822418213
    4. '#' → logprob: -3.4018232822418213
    5. 'club' → logprob: -4.151823043823242
    6. '       ' → logprob: -5.526823043823242
    7. ' #' → logprob: -6.901823043823242
    8. ' club' → logprob: -7.401823043823242
    9. 'for' → logprob: -7.526823043823242
    10. 'set' → logprob: -7.651823043823242

Token 298: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0838824212551117
    2. ' club' → logprob: -2.5838823318481445
    3. 'if' → logprob: -6.2088823318481445
    4. 'club' → logprob: -6.5838823318481445
    5. ' for' → logprob: -7.4588823318481445
    6. '<|end|>' → logprob: -8.458882331848145
    7. ' clubs' → logprob: -8.833882331848145
    8. ' whether' → logprob: -9.083882331848145
    9. '.club' → logprob: -9.208882331848145
    10. '       ' → logprob: -9.458882331848145

Token 299: ' contradiction' (ID: 133882)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.325883150100708
    2. 'club' → logprob: -1.325883150100708
    3. ' conflict' → logprob: -5.825882911682129
    4. 'cl' → logprob: -6.075882911682129
    5. ' club' → logprob: -6.325882911682129
    6. ' conflicts' → logprob: -6.325882911682129
    7. 'get' → logprob: -6.825882911682129
    8. 'existing' → logprob: -7.825882911682129
    9. '(cl' → logprob: -8.075882911682129
    10. 'a' → logprob: -8.325882911682129

Token 300: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01896321401000023
    2. ' if' → logprob: -4.64396333694458
    3. '
' → logprob: -5.76896333694458
    4. '        
' → logprob: -6.14396333694458
    5. '<|end|>' → logprob: -6.26896333694458
    6. 'if' → logprob: -7.14396333694458
    7. ',' → logprob: -7.26896333694458
    8. ':' → logprob: -9.518962860107422
    9. ' and' → logprob: -9.643962860107422
    10. '  
' → logprob: -10.268962860107422

Token 301: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.0980149507522583
    2. ' club' → logprob: -2.8480148315429688
    3. 'get' → logprob: -3.5980148315429688
    4. 'clubs' → logprob: -5.723014831542969
    5. 'if' → logprob: -6.223014831542969
    6. ' get' → logprob: -7.098014831542969
    7. '
' → logprob: -7.598014831542969
    8. 'cl' → logprob: -8.473014831542969
    9. 'union' → logprob: -8.973014831542969
    10. '   ' → logprob: -8.973014831542969

Token 302: ' assignment' (ID: 24618)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41581422090530396
    2. '       ' → logprob: -1.9158141613006592
    3. 'if' → logprob: -2.290814161300659
    4. '   ' → logprob: -3.665814161300659
    5. '           ' → logprob: -4.165814399719238
    6. 'info' → logprob: -4.165814399719238
    7. ' info' → logprob: -4.290814399719238
    8. 's' → logprob: -5.415814399719238
    9. ' information' → logprob: -6.290814399719238
    10. ' =' → logprob: -6.665814399719238

Token 303: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03993760049343109
    2. '<|end|>' → logprob: -3.4149374961853027
    3. ' if' → logprob: -5.789937496185303
    4. '
' → logprob: -6.289937496185303
    5. ',' → logprob: -7.289937496185303
    6. 'if' → logprob: -8.664937973022461
    7. '```' → logprob: -8.914937973022461
    8. '<|end|>' → logprob: -8.914937973022461
    9. '        
' → logprob: -9.164937973022461
    10. ' for' → logprob: -10.539937973022461

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01346572209149599
    2. '<|end|>' → logprob: -4.513465881347656
    3. ' if' → logprob: -6.263465881347656
    4. 'if' → logprob: -8.138465881347656
    5. '```' → logprob: -10.138465881347656
    6. '<|end|>' → logprob: -10.138465881347656
    7. '        
' → logprob: -10.263465881347656
    8. '        ' → logprob: -10.638465881347656
    9. ',' → logprob: -11.513465881347656
    10. ')' → logprob: -11.638465881347656

Token 305: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03130923584103584
    2. ' if' → logprob: -3.531309127807617
    3. '       ' → logprob: -6.906309127807617
    4. 'c' (adapté à ' c') → logprob: -8.406309127807617
    5. 'r' → logprob: -9.156309127807617
    6. 'for' → logprob: -9.781309127807617
    7. '```' → logprob: -10.156309127807617
    8. ' c' → logprob: -10.781309127807617
    9. 'p' → logprob: -11.031309127807617
    10. 'x' → logprob: -11.531309127807617

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1589227318763733
    2. 'r' → logprob: -2.0339226722717285
    3. '_r' → logprob: -4.1589226722717285
    4. 'a' → logprob: -8.283923149108887
    5. 'c' → logprob: -9.658923149108887
    6. 'if' → logprob: -10.408923149108887
    7. ' =' → logprob: -10.783923149108887
    8. 'x' → logprob: -10.908923149108887
    9. 't' → logprob: -10.908923149108887
    10. '_' → logprob: -11.533923149108887

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09286043047904968
    2. '=' → logprob: -2.467860460281372
    3. ',' → logprob: -5.592860221862793
    4. ',c' → logprob: -8.967860221862793
    5. ' ,' → logprob: -10.467860221862793
    6. '=c' → logprob: -11.592860221862793
    7. '=get' → logprob: -11.842860221862793
    8. 'c' → logprob: -11.967860221862793
    9. ' ==' → logprob: -12.717860221862793
    10. ' ' → logprob: -14.092860221862793

Token 308: ' club' (ID: 8522)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0010106575209647417
    2. 'club' → logprob: -7.126010894775391
    3. ' get' → logprob: -8.50101089477539
    4. ' club' → logprob: -14.00101089477539
    5. ' ' → logprob: -14.87601089477539
    6. '  ' → logprob: -15.00101089477539
    7. '	get' → logprob: -15.12601089477539
    8. '   ' → logprob: -15.25101089477539
    9. '(get' → logprob: -15.62601089477539
    10. '
' → logprob: -15.87601089477539

Token 309: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.010626357980072498
    2. '[get' → logprob: -4.635626316070557
    3. 'get' → logprob: -7.510626316070557
    4. 'r' → logprob: -8.635626792907715
    5. '[' → logprob: -8.885626792907715
    6. '[a' → logprob: -13.135626792907715
    7. '[c' → logprob: -14.135626792907715
    8. 'find' → logprob: -14.260626792907715
    9. '[root' → logprob: -14.885626792907715
    10. '.get' → logprob: -15.010626792907715

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001940040965564549
    2. 'r' → logprob: -8.62519359588623
    3. 'a' → logprob: -12.00019359588623
    4. '2' → logprob: -13.37519359588623
    5. '[r' → logprob: -13.37519359588623
    6. 's' → logprob: -13.75019359588623
    7. ' ' → logprob: -13.87519359588623
    8. 'c' → logprob: -14.25019359588623
    9. '(r' → logprob: -14.50019359588623
    10. '```' → logprob: -15.18769359588623

Token 311: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.160289004445076
    2. ']' → logprob: -1.9102890491485596
    3. ']
' → logprob: -10.28528881072998
    4. ' ]
' → logprob: -11.16028881072998
    5. ']

' → logprob: -11.41028881072998
    6. ' ]' → logprob: -12.78528881072998
    7. ']==' → logprob: -14.03528881072998
    8. '],' → logprob: -15.03528881072998
    9. ']!=' → logprob: -15.53528881072998
    10. ']<' → logprob: -16.160289764404297

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44306090474128723
    2. 'c' → logprob: -1.0680608749389648
    3. ' c' → logprob: -5.193060874938965
    4. '
' → logprob: -5.193060874938965
    5. '<|end|>' → logprob: -6.568060874938965
    6. ',' → logprob: -7.818060874938965
    7. '   ' → logprob: -8.068060874938965
    8. ',c' → logprob: -8.068060874938965
    9. ' ' → logprob: -8.443060874938965
    10. '           ' → logprob: -8.818060874938965

Token 313: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.252269446849823
    2. ' c' → logprob: -1.5022695064544678
    3. ' 
' → logprob: -9.252269744873047
    4. ' =' → logprob: -9.377269744873047
    5. ' ' → logprob: -9.502269744873047
    6. ',' → logprob: -10.877269744873047
    7. '[' → logprob: -11.627269744873047
    8. '<|end|>' → logprob: -11.752269744873047
    9. ' ,' → logprob: -12.127269744873047
    10. '=' → logprob: -12.127269744873047

Token 314: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08152910321950912
    2. '2' → logprob: -3.581529140472412
    3. '=' → logprob: -3.706529140472412
    4. '[' → logprob: -4.331529140472412
    5. ' =' → logprob: -4.581529140472412
    6. '#' → logprob: -7.081529140472412
    7. 'c' → logprob: -7.331529140472412
    8. '```' → logprob: -8.206528663635254
    9. '[c' → logprob: -8.456528663635254
    10. 's' → logprob: -9.206528663635254

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34915968775749207
    2. ' =' → logprob: -1.2241597175598145
    3. '[r' → logprob: -7.8491597175598145
    4. '[' → logprob: -8.099159240722656
    5. 'c' → logprob: -12.599159240722656
    6. '=r' → logprob: -12.724159240722656
    7. '[c' → logprob: -13.099159240722656
    8. '   ' → logprob: -13.474159240722656
    9. 's' → logprob: -13.474159240722656
    10. '=[' → logprob: -13.599159240722656

Token 316: ' club' (ID: 8522)
  Prédit: ' club'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' club' → logprob: -0.6931766867637634
    2. 'club' → logprob: -0.6931766867637634
    3. '.club' → logprob: -11.31817626953125
    4. 'c' → logprob: -12.44317626953125
    5. 'cluster' → logprob: -12.81817626953125
    6. 'cl' → logprob: -12.94317626953125
    7. ' clube' → logprob: -13.56817626953125
    8. 'get' → logprob: -14.06817626953125
    9. ' ' → logprob: -14.06817626953125
    10. ' clubhouse' → logprob: -14.19317626953125

Token 317: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -6.0391463193809614e-05
    2. 'r' → logprob: -10.000060081481934
    3. '[' → logprob: -11.125060081481934
    4. '[
' → logprob: -16.12506103515625
    5. '[c' → logprob: -16.37506103515625
    6. ' r' → logprob: -17.75006103515625
    7. '[root' → logprob: -18.25006103515625
    8. '	r' → logprob: -18.50006103515625
    9. '[a' → logprob: -19.00006103515625
    10. '(r' → logprob: -19.25006103515625

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.111979357432574e-05
    2. 'find' → logprob: -9.75007152557373
    3. 'r' → logprob: -11.62507152557373
    4. '1' → logprob: -13.12507152557373
    5. ' find' → logprob: -14.87507152557373
    6. '(find' → logprob: -15.00007152557373
    7. '```' → logprob: -15.37507152557373
    8. ' ' → logprob: -15.50007152557373
    9. '   ' → logprob: -16.250070571899414
    10. ']' → logprob: -16.375070571899414

Token 319: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031621530652046204
    2. ']
' → logprob: -5.878162384033203
    3. ' ]' → logprob: -8.628162384033203
    4. ']==' → logprob: -9.503162384033203
    5. ')' → logprob: -9.628162384033203
    6. '])' → logprob: -10.503162384033203
    7. ']

' → logprob: -13.253162384033203
    8. ']!=' → logprob: -13.378162384033203
    9. ']>' → logprob: -14.128162384033203
    10. ' ]
' → logprob: -14.253162384033203

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05705181881785393
    2. '<|end|>' → logprob: -3.05705189704895
    3. '
' → logprob: -5.182051658630371
    4. ' if' → logprob: -6.307051658630371
    5. '<|end|>' → logprob: -8.182051658630371
    6. ')' → logprob: -8.307051658630371
    7. ',' → logprob: -9.057051658630371
    8. 'if' → logprob: -9.307051658630371
    9. '```' → logprob: -9.557051658630371
    10. '        
' → logprob: -9.682051658630371

Token 321: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.581578254699707
    2. '       ' → logprob: -1.206578254699707
    3. ' if' → logprob: -1.956578254699707
    4. '   ' → logprob: -8.331578254699707
    5. '<|end|>' → logprob: -9.956578254699707
    6. '	if' → logprob: -10.706578254699707
    7. '```' → logprob: -10.706578254699707
    8. 'If' → logprob: -10.831578254699707
    9. ' ' → logprob: -11.081578254699707
    10. ')' → logprob: -11.456578254699707

Token 322: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010280465940013528
    2. ' c' → logprob: -7.001028060913086
    3. '(c' → logprob: -9.126028060913086
    4. ' (' → logprob: -12.626028060913086
    5. '(' → logprob: -13.251028060913086
    6. '   ' → logprob: -14.001028060913086
    7. ' ' → logprob: -14.251028060913086
    8. '
' → logprob: -15.001028060913086
    9. '	c' → logprob: -15.251028060913086
    10. ' ' → logprob: -16.001028060913086

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05000172182917595
    2. '2' → logprob: -3.050001621246338
    3. '[' → logprob: -7.175001621246338
    4. ' ' → logprob: -8.425002098083496
    5. '```' → logprob: -8.800002098083496
    6. '==' → logprob: -9.550002098083496
    7. ' ==' → logprob: -10.300002098083496
    8. '[c' → logprob: -10.425002098083496
    9. '0' → logprob: -10.550002098083496
    10. ')' → logprob: -10.800002098083496

Token 324: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11910951137542725
    2. ' !=' → logprob: -2.994109630584717
    3. ' is' → logprob: -3.494109630584717
    4. '==' → logprob: -3.619109630584717
    5. '!=-' → logprob: -5.869109630584717
    6. ' ==' → logprob: -6.744109630584717
    7. 'is' → logprob: -6.994109630584717
    8. '==-' → logprob: -9.744109153747559
    9. '>=' → logprob: -11.244109153747559
    10. 'and' → logprob: -12.119109153747559

Token 325: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001097417771234177
    2. ' -' → logprob: -9.125109672546387
    3. '-c' → logprob: -15.500109672546387
    4. 'c' → logprob: -15.625109672546387
    5. '1' → logprob: -16.500110626220703
    6. '   ' → logprob: -16.625110626220703
    7. '```' → logprob: -16.875110626220703
    8. ' ' → logprob: -17.750110626220703
    9. '0' → logprob: -18.375110626220703
    10. '
' → logprob: -18.625110626220703

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.875003814697266
    3. 'c' → logprob: -15.000003814697266
    4. '2' → logprob: -15.375003814697266
    5. ' -' → logprob: -15.687503814697266
    6. '-' → logprob: -15.875003814697266
    7. '```' → logprob: -15.937503814697266
    8. '
' → logprob: -17.125003814697266
    9. ' c' → logprob: -17.187503814697266
    10. '

' → logprob: -17.625003814697266

Token 327: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889540493488312
    2. 'and' → logprob: -2.578895330429077
    3. ' ' → logprob: -12.203895568847656
    4. '	and' → logprob: -15.328895568847656
    5. '```' → logprob: -16.078895568847656
    6. '   ' → logprob: -16.828895568847656
    7. ' ' → logprob: -16.953895568847656
    8. 'a' → logprob: -16.953895568847656
    9. '    ' → logprob: -17.453895568847656
    10. '  ' → logprob: -17.828895568847656

Token 328: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018159886822104454
    2. ' c' → logprob: -4.018159866333008
    3. '   ' → logprob: -12.643159866333008
    4. ' ' → logprob: -12.893159866333008
    5. '    ' → logprob: -13.768159866333008
    6. '  ' → logprob: -14.018159866333008
    7. '     ' → logprob: -14.643159866333008
    8. '	c' → logprob: -15.018159866333008
    9. '(c' → logprob: -15.518159866333008
    10. '
' → logprob: -15.643159866333008

Token 329: '2' (ID: 17)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.05320446938276291
    2. '!=' → logprob: -3.0532045364379883
    3. '2' → logprob: -5.678204536437988
    4. ' ==' → logprob: -7.678204536437988
    5. ' ' → logprob: -7.803204536437988
    6. '1' → logprob: -8.803204536437988
    7. '==' → logprob: -9.553204536437988
    8. ' c' → logprob: -10.678204536437988
    9. '```' → logprob: -10.678204536437988
    10. '   ' → logprob: -11.928204536437988

Token 330: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.011877845041453838
    2. '!=' → logprob: -4.63687801361084
    3. '<|end|>' → logprob: -6.51187801361084
    4. ' ' → logprob: -8.26187801361084
    5. ' ==' → logprob: -8.26187801361084
    6. '<|end|>' → logprob: -10.51187801361084
    7. ')!=' → logprob: -11.13687801361084
    8. '!=-' → logprob: -11.13687801361084
    9. ')' → logprob: -11.13687801361084
    10. '==' → logprob: -11.26187801361084

Token 331: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018831033259630203
    2. ' -' → logprob: -4.393831253051758
    3. 'c' → logprob: -5.143831253051758
    4. '1' → logprob: -8.268831253051758
    5. ' c' → logprob: -8.643831253051758
    6. ' ' → logprob: -11.018831253051758
    7. '=' → logprob: -12.393831253051758
    8. '   ' → logprob: -13.081331253051758
    9. '```' → logprob: -13.206331253051758
    10. '-c' → logprob: -13.456331253051758

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. '-' → logprob: -12.250009536743164
    3. '2' → logprob: -13.625009536743164
    4. ' ' → logprob: -13.812509536743164
    5. '```' → logprob: -14.187509536743164
    6. '<|end|>' → logprob: -14.812509536743164
    7. ' -' → logprob: -15.375009536743164
    8. '...' → logprob: -17.187509536743164
    9. '<|end|>' → logprob: -17.187509536743164
    10. 'The' → logprob: -17.375009536743164

Token 333: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011151102371513844
    2. 'and' → logprob: -4.511151313781738
    3. ':' → logprob: -10.011151313781738
    4. '           ' → logprob: -11.011151313781738
    5. ':
' → logprob: -11.261151313781738
    6. '<|end|>' → logprob: -11.636151313781738
    7. '       ' → logprob: -11.886151313781738
    8. ' ' → logprob: -12.636151313781738
    9. '	and' → logprob: -12.886151313781738
    10. '        ' → logprob: -13.636151313781738

Token 334: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.054883863776922226
    2. ' c' → logprob: -2.9298839569091797
    3. '	c' → logprob: -14.30488395690918
    4. '
' → logprob: -14.80488395690918
    5. ' ' → logprob: -15.80488395690918
    6. '   ' → logprob: -16.05488395690918
    7. '(c' → logprob: -16.42988395690918
    8. ' ' → logprob: -16.55488395690918
    9. 'cl' → logprob: -16.67988395690918
    10. ')c' → logprob: -17.92988395690918

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '2' → logprob: -12.250004768371582
    3. '```' → logprob: -14.875004768371582
    4. ' ' → logprob: -17.1250057220459
    5. ' c' → logprob: -17.5000057220459
    6. 'c' → logprob: -17.7500057220459
    7. '
' → logprob: -18.5000057220459
    8. '   ' → logprob: -18.6250057220459
    9. '[' → logprob: -19.3750057220459
    10. '``' → logprob: -19.5000057220459

Token 336: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09406135231256485
    2. ' ==' → logprob: -2.5940613746643066
    3. '!=' → logprob: -4.344061374664307
    4. ' !=' → logprob: -6.219061374664307
    5. '=' → logprob: -10.719060897827148
    6. '==
' → logprob: -10.719060897827148
    7. '```' → logprob: -11.469060897827148
    8. ' ' → logprob: -11.844060897827148
    9. '[' → logprob: -11.969060897827148
    10. ']==' → logprob: -12.719060897827148

Token 337: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007610886357724667
    2. ' c' → logprob: -4.88261079788208
    3. ' ' → logprob: -13.757611274719238
    4. '-' → logprob: -14.007611274719238
    5. '2' → logprob: -14.007611274719238
    6. '
' → logprob: -14.507611274719238
    7. '1' → logprob: -15.007611274719238
    8. '   ' → logprob: -15.570111274719238
    9. ' -' → logprob: -15.695111274719238
    10. '```' → logprob: -16.070110321044922

Token 338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -15.750000953674316
    4. '۲' → logprob: -17.375
    5. '<|end|>' → logprob: -17.625
    6. '   ' → logprob: -17.75
    7. '₂' → logprob: -17.875
    8. '２' → logprob: -18.0625
    9. 's' → logprob: -18.3125
    10. '২' → logprob: -19.0625

Token 339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10035774111747742
    2. ':
' → logprob: -2.3503577709198
    3. '):' → logprob: -9.975358009338379
    4. '       ' → logprob: -10.100358009338379
    5. ':return' → logprob: -10.100358009338379
    6. '):
' → logprob: -11.475358009338379
    7. '           ' → logprob: -12.225358009338379
    8. '   ' → logprob: -13.350358009338379
    9. ')' → logprob: -13.725358009338379
    10. ' and' → logprob: -13.725358009338379

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0047755492851138115
    2. ' continue' → logprob: -6.254775524139404
    3. 'continue' → logprob: -6.254775524139404
    4. ':
' → logprob: -7.504775524139404
    5. ':' → logprob: -8.254776000976562
    6. '       ' → logprob: -10.879776000976562
    7. '
' → logprob: -11.004776000976562
    8. 'print' → logprob: -11.129776000976562
    9. '```' → logprob: -11.254776000976562
    10. '               ' → logprob: -11.504776000976562

Token 341: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12170302867889404
    2. 'continue' → logprob: -2.3717031478881836
    3. ' print' → logprob: -4.621703147888184
    4. ' continue' → logprob: -4.996703147888184
    5. '       ' → logprob: -5.746703147888184
    6. '   ' → logprob: -7.371703147888184
    7. '           ' → logprob: -7.371703147888184
    8. 'raise' → logprob: -9.746703147888184
    9. '```' → logprob: -10.121703147888184
    10. 'exit' → logprob: -10.746703147888184

Token 342: '(i' (ID: 3649)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6641528606414795
    2. 'No' → logprob: -1.5391528606414795
    3. '("' → logprob: -1.7891528606414795
    4. '(-' → logprob: -3.5391528606414795
    5. '0' → logprob: -4.039153099060059
    6. '"No' → logprob: -4.039153099060059
    7. '"' → logprob: -4.164153099060059
    8. 'NO' → logprob: -5.164153099060059
    9. 'Impossible' → logprob: -5.539153099060059
    10. '(' → logprob: -5.789153099060059

Token 343: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25269538164138794
    2. ')' → logprob: -1.5026953220367432
    3. ',' → logprob: -8.002695083618164
    4. ' )
' → logprob: -8.752695083618164
    5. ' )' → logprob: -9.752695083618164
    6. ')
' → logprob: -9.877695083618164
    7. '   ' → logprob: -10.127695083618164
    8. '")' → logprob: -11.002695083618164
    9. '
' → logprob: -11.377695083618164
    10. '0' → logprob: -11.377695083618164

Token 344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8456068634986877
    2. ')' → logprob: -1.220606803894043
    3. '<|end|>' → logprob: -1.720606803894043
    4. '       ' → logprob: -3.220606803894043
    5. '
' → logprob: -3.220606803894043
    6. '               ' → logprob: -5.345606803894043
    7. ')
' → logprob: -5.970606803894043
    8. '            
' → logprob: -6.345606803894043
    9. 'continue' → logprob: -6.595606803894043
    10. 'exit' → logprob: -7.220606803894043

Token 345: ' exit' (ID: 10654)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.03136088326573372
    2. 'exit' (adapté à ' exit') → logprob: -3.5313608646392822
    3. ' break' → logprob: -7.031361103057861
    4. 'sys' → logprob: -7.281361103057861
    5. '       ' → logprob: -11.406360626220703
    6. 'import' → logprob: -11.781360626220703
    7. '           ' → logprob: -11.781360626220703
    8. ' exit' → logprob: -12.031360626220703
    9. ' sys' → logprob: -13.406360626220703
    10. '	break' → logprob: -13.781360626220703

Token 346: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20142211019992828
    2. '()' → logprob: -1.701422095298767
    3. '()
' → logprob: -11.826421737670898
    4. '0' → logprob: -13.826421737670898
    5. '()\' → logprob: -15.576421737670898
    6. ' ()' → logprob: -16.0764217376709
    7. '()`' → logprob: -16.2014217376709
    8. '(
' → logprob: -17.2014217376709
    9. '()]' → logprob: -17.3264217376709
    10. '()(' → logprob: -17.3264217376709

Token 347: '       ' (ID: 309)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.2750311493873596
    2. '       ' → logprob: -1.9000310897827148
    3. '   ' → logprob: -2.900031089782715
    4. ')' → logprob: -3.650031089782715
    5. '<|end|>' → logprob: -5.400031089782715
    6. '```' → logprob: -6.525031089782715
    7. '        
' → logprob: -6.900031089782715
    8. '    
' → logprob: -7.775031089782715
    9. ' un' → logprob: -8.025031089782715
    10. '	un' → logprob: -8.150031089782715

Token 348: ' unite' (ID: 96146)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3495157063007355
    2. 'un' → logprob: -1.224515676498413
    3. '   ' → logprob: -7.474515914916992
    4. ' unite' → logprob: -8.849515914916992
    5. '        
' → logprob: -9.474515914916992
    6. ' un' → logprob: -9.474515914916992
    7. ')' → logprob: -9.474515914916992
    8. '
' → logprob: -10.599515914916992
    9. '```' → logprob: -10.974515914916992
    10. ' unify' → logprob: -11.099515914916992

Token 349: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00020747410599142313
    2. '(r' → logprob: -8.500207901000977
    3. '(*' → logprob: -13.250207901000977
    4. 'a' → logprob: -13.750207901000977
    5. '(' → logprob: -14.250207901000977
    6. 'r' → logprob: -15.250207901000977
    7. '(t' → logprob: -15.750207901000977
    8. '(
' → logprob: -16.125207901000977
    9. '((' → logprob: -17.000207901000977
    10. '(i' → logprob: -17.750207901000977

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015454530948773026
    2. 'a' → logprob: -6.501545429229736
    3. '[' → logprob: -11.126545906066895
    4. ' ' → logprob: -12.126545906066895
    5. '(a' → logprob: -12.376545906066895
    6. '0' → logprob: -12.501545906066895
    7. '2' → logprob: -12.751545906066895
    8. '(' → logprob: -12.751545906066895
    9. '```' → logprob: -13.251545906066895
    10. ' a' → logprob: -13.251545906066895

Token 351: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.029954582452774048
    2. ',' → logprob: -3.529954671859741
    3. 'a' → logprob: -8.77995491027832
    4. ' ,' → logprob: -10.15495491027832
    5. '[' → logprob: -12.65495491027832
    6. ',
' → logprob: -13.02995491027832
    7. '[a' → logprob: -13.40495491027832
    8. ' a' → logprob: -13.65495491027832
    9. '   ' → logprob: -14.27995491027832
    10. '```' → logprob: -14.90495491027832

Token 352: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6047699318733066e-05
    2. 'a' → logprob: -11.250016212463379
    3. '1' → logprob: -13.000016212463379
    4. ' ' → logprob: -15.250016212463379
    5. '```' → logprob: -15.625016212463379
    6. '[' → logprob: -16.250015258789062
    7. '(' → logprob: -17.187515258789062
    8. '
' → logprob: -17.250015258789062
    9. '(a' → logprob: -17.437515258789062
    10. '0' → logprob: -17.500015258789062

Token 353: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3902033970225602e-05
    2. ')
' → logprob: -11.250014305114746
    3. ' )' → logprob: -14.625014305114746
    4. '<|end|>' → logprob: -16.12501335144043
    5. '))' → logprob: -17.00001335144043
    6. '")' → logprob: -17.12501335144043
    7. '   ' → logprob: -17.25001335144043
    8. '())' → logprob: -17.25001335144043
    9. '
' → logprob: -17.37501335144043
    10. ')return' → logprob: -17.50001335144043

Token 354: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.158105731010437
    2. '<|end|>' → logprob: -2.0331058502197266
    3. '   ' → logprob: -2.2831058502197266
    4. ' if' → logprob: -2.4081058502197266
    5. ' 
' → logprob: -2.6581058502197266
    6. ' elif' → logprob: -2.7831058502197266
    7. ' ' → logprob: -2.9081058502197266
    8. '\n' → logprob: -3.5331058502197266
    9. '
' → logprob: -3.6581058502197266
    10. '    
' → logprob: -3.6581058502197266

Token 355: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.17483775317668915
    2. ' elif' → logprob: -2.549837827682495
    3. 'else' (adapté à ' else') → logprob: -3.799837827682495
    4. ' 
' → logprob: -4.299837589263916
    5. ' ' → logprob: -4.674837589263916
    6. '    
' → logprob: -5.174837589263916
    7. '<|end|>' → logprob: -5.174837589263916
    8. ' else' → logprob: -5.174837589263916
    9. '\n' → logprob: -5.424837589263916
    10. '
' → logprob: -5.549837589263916

Token 356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021037407219409943
    2. ':
' → logprob: -4.146037578582764
    3. '   ' → logprob: -6.146037578582764
    4. ' :' → logprob: -6.146037578582764
    5. '{' → logprob: -7.771037578582764
    6. ',' → logprob: -9.271037101745605
    7. ' :
' → logprob: -9.646037101745605
    8. '    ' → logprob: -10.396037101745605
    9. '[' → logprob: -10.771037101745605
    10. '       ' → logprob: -11.271037101745605

Token 357: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23610323667526245
    2. '   ' → logprob: -2.4861032962799072
    3. 'c' → logprob: -2.7361032962799072
    4. 'x' → logprob: -3.7361032962799072
    5. ' a' → logprob: -3.9861032962799072
    6. '       ' → logprob: -4.736103057861328
    7. ' c' → logprob: -5.986103057861328
    8. 'u' → logprob: -6.236103057861328
    9. 'v' → logprob: -6.486103057861328
    10. ' x' → logprob: -7.111103057861328

Token 358: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10876162350177765
    2. 'c' (adapté à ' c') → logprob: -2.4837615489959717
    3. 'x' → logprob: -4.233761787414551
    4. ' a' → logprob: -6.483761787414551
    5. 'b' → logprob: -7.233761787414551
    6. 'u' → logprob: -7.358761787414551
    7. 'v' → logprob: -7.608761787414551
    8. 'p' → logprob: -8.10876178741455
    9. 'club' → logprob: -8.23376178741455
    10. ' c' → logprob: -8.35876178741455

Token 359: ',x' (ID: 29748)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4858393371105194
    2. ',' → logprob: -2.360839366912842
    3. ',*' → logprob: -2.735839366912842
    4. ',c' → logprob: -3.110839366912842
    5. ' =' → logprob: -3.235839366912842
    6. '=' → logprob: -3.360839366912842
    7. ',a' → logprob: -3.735839366912842
    8. ',x' → logprob: -4.610839366912842
    9. ',num' → logprob: -4.610839366912842
    10. 'x' → logprob: -5.235839366912842

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018741535022854805
    2. ' =' → logprob: -4.018741607666016
    3. ',c' → logprob: -8.018741607666016
    4. '=c' → logprob: -8.643741607666016
    5. ',' → logprob: -9.768741607666016
    6. '=x' → logprob: -11.518741607666016
    7. ',x' → logprob: -12.768741607666016
    8. '=int' → logprob: -12.768741607666016
    9. ',y' → logprob: -12.893741607666016
    10. ',a' → logprob: -13.893741607666016

Token 361: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0325924449716695e-05
    2. ' a' → logprob: -11.50001049041748
    3. 'map' → logprob: -16.500009536743164
    4. '*' → logprob: -18.750009536743164
    5. '*a' → logprob: -19.125009536743164
    6. 'club' → logprob: -19.250009536743164
    7. '	a' → logprob: -20.000009536743164
    8. '_a' → logprob: -20.750009536743164
    9. '   ' → logprob: -20.875009536743164
    10. 'а' → logprob: -21.250009536743164

Token 362: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4929853677749634
    2. '
' → logprob: -1.6179853677749634
    3. ' =' → logprob: -1.6179853677749634
    4. '=' → logprob: -1.8679853677749634
    5. ',' → logprob: -1.9929853677749634
    6. '1' → logprob: -3.992985248565674
    7. '        
' → logprob: -4.117985248565674
    8. '<|end|>' → logprob: -4.367985248565674
    9. '[' → logprob: -4.492985248565674
    10. ',x' → logprob: -4.867985248565674

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19610656797885895
    2. '
' → logprob: -1.9461065530776978
    3. '   ' → logprob: -4.071106433868408
    4. '        
' → logprob: -4.821106433868408
    5. '<|end|>' → logprob: -6.071106433868408
    6. '  
' → logprob: -6.196106433868408
    7. ',' → logprob: -7.071106433868408
    8. ' if' → logprob: -7.071106433868408
    9. '    
' → logprob: -7.196106433868408
    10. '
' → logprob: -7.571106433868408

Token 364: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.05446433275938034
    2. 'rx' → logprob: -3.554464340209961
    3. 'x' → logprob: -3.804464340209961
    4. 'root' → logprob: -6.429464340209961
    5. 'p' → logprob: -8.804464340209961
    6. 'px' → logprob: -9.179464340209961
    7. 'if' → logprob: -9.554464340209961
    8. 'cx' → logprob: -9.929464340209961
    9. 'rc' → logprob: -10.179464340209961
    10. 'c' → logprob: -10.554464340209961

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006827848497778177
    2. ' =' → logprob: -5.0068278312683105
    3. '=find' → logprob: -9.131828308105469
    4. 'find' → logprob: -13.006828308105469
    5. 'x' → logprob: -13.631828308105469
    6. ' find' → logprob: -14.506828308105469
    7. ',' → logprob: -16.00682830810547
    8. 'r' → logprob: -16.13182830810547
    9. 'c' → logprob: -16.50682830810547
    10. '[' → logprob: -17.25682830810547

Token 366: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -7.493430894101039e-05
    2. ' find' → logprob: -9.500075340270996
    3. '(find' → logprob: -16.87507438659668
    4. '	find' → logprob: -18.25007438659668
    5. '=find' → logprob: -18.50007438659668
    6. '   ' → logprob: -19.12507438659668
    7. 'parent' → logprob: -20.87507438659668
    8. 'get' → logprob: -21.00007438659668
    9. '  ' → logprob: -21.50007438659668
    10. ')find' → logprob: -21.62507438659668

Token 367: '(c' (ID: 2410)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0024876687675714493
    2. 'x' → logprob: -6.002487659454346
    3. '(' → logprob: -11.377488136291504
    4. ' (' → logprob: -15.502488136291504
    5. ' x' → logprob: -15.752488136291504
    6. 'c' → logprob: -16.502487182617188
    7. '(
' → logprob: -17.627487182617188
    8. 'r' → logprob: -17.752487182617188
    9. '(r' → logprob: -18.252487182617188
    10. ',x' → logprob: -18.877487182617188

Token 368: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16075879335403442
    2. ')
' → logprob: -1.9107587337493896
    3. ')x' → logprob: -7.785758972167969
    4. 'x' → logprob: -9.910758972167969
    5. ')
' → logprob: -10.910758972167969
    6. '(x' → logprob: -10.910758972167969
    7. ')c' → logprob: -11.410758972167969
    8. ')

' → logprob: -12.285758972167969
    9. 'r' → logprob: -12.285758972167969
    10. ')#' → logprob: -12.910758972167969

Token 369: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01941812038421631
    2. '       ' → logprob: -4.019418239593506
    3. ' if' → logprob: -7.269418239593506
    4. '   ' → logprob: -7.894418239593506
    5. 'club' → logprob: -8.644417762756348
    6. '```' → logprob: -11.644417762756348
    7. '#' → logprob: -12.144417762756348
    8. ' club' → logprob: -12.519417762756348
    9. '        
' → logprob: -13.894417762756348
    10. ' ' → logprob: -14.269417762756348

Token 370: ' if' (ID: 538)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.6335903406143188
    2. 'if' (adapté à ' if') → logprob: -0.7585903406143188
    3. '       ' → logprob: -8.133590698242188
    4. ' if' → logprob: -8.383590698242188
    5. ' club' → logprob: -9.258590698242188
    6. '   ' → logprob: -9.508590698242188
    7. 'parent' → logprob: -9.508590698242188
    8. '```' → logprob: -10.008590698242188
    9. '        
' → logprob: -10.133590698242188
    10. 'cl' → logprob: -10.258590698242188

Token 371: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.0004375830467324704
    2. ' club' → logprob: -7.7504377365112305
    3. 'cl' → logprob: -12.87543773651123
    4. 'c' → logprob: -13.37543773651123
    5. 'parent' → logprob: -14.12543773651123
    6. 'r' → logprob: -14.62543773651123
    7. 'rank' → logprob: -15.25043773651123
    8. 'x' → logprob: -15.37543773651123
    9. 'get' → logprob: -15.87543773651123
    10. 'card' → logprob: -16.000436782836914

Token 372: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -12.125009536743164
    3. 'r' → logprob: -12.500009536743164
    4. '[parent' → logprob: -17.250009536743164
    5. '[c' → logprob: -17.375009536743164
    6. '[root' → logprob: -18.750009536743164
    7. '[x' → logprob: -18.875009536743164
    8. '[
' → logprob: -19.125009536743164
    9. ' r' → logprob: -19.250009536743164
    10. '	r' → logprob: -20.125009536743164

Token 373: ']' (ID: 60)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00013154871703591198
    2. '==' → logprob: -9.500131607055664
    3. 'r' → logprob: -10.500131607055664
    4. '[' → logprob: -11.125131607055664
    5. '[c' → logprob: -12.000131607055664
    6. ']' → logprob: -12.375131607055664
    7. '[x' → logprob: -13.500131607055664
    8. ']==' → logprob: -13.625131607055664
    9. '==-' → logprob: -14.750131607055664
    10. ' ==' → logprob: -15.125131607055664

Token 374: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17039385437965393
    2. '==' → logprob: -1.9203938245773315
    3. '==-' → logprob: -5.420393943786621
    4. ' !=' → logprob: -5.545393943786621
    5. '!=' → logprob: -6.545393943786621
    6. ' ' → logprob: -8.920393943786621
    7. '[' → logprob: -9.170393943786621
    8. '        ' → logprob: -10.795393943786621
    9. ')' → logprob: -10.920393943786621
    10. '=' → logprob: -11.170393943786621

Token 375: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000495605927426368
    2. ' -' → logprob: -7.625495433807373
    3. 'x' → logprob: -12.625495910644531
    4. 'c' → logprob: -13.375495910644531
    5. '-c' → logprob: -13.500495910644531
    6. '   ' → logprob: -13.750495910644531
    7. '-x' → logprob: -15.625495910644531
    8. ' ' → logprob: -16.12549591064453
    9. '  ' → logprob: -17.75049591064453
    10. ' x' → logprob: -18.50049591064453

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03809014707803726
    2. '-' → logprob: -3.288090229034424
    3. ' -' → logprob: -10.038089752197266
    4. 'c' → logprob: -13.163089752197266
    5. ' ' → logprob: -13.788089752197266
    6. '-c' → logprob: -14.163089752197266
    7. '   ' → logprob: -14.538089752197266
    8. 'x' → logprob: -14.913089752197266
    9. '```' → logprob: -15.288089752197266
    10. '  ' → logprob: -17.225589752197266

Token 377: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47997933626174927
    2. ':' → logprob: -1.8549792766571045
    3. '=' → logprob: -2.2299792766571045
    4. '           ' → logprob: -2.4799792766571045
    5. ' =' → logprob: -3.4799792766571045
    6. ' or' → logprob: -6.104979515075684
    7. '       ' → logprob: -8.854979515075684
    8. ',' → logprob: -9.479979515075684
    9. ':

' → logprob: -9.729979515075684
    10. '               ' → logprob: -10.854979515075684

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03821029141545296
    2. ' club' → logprob: -3.538210391998291
    3. 'club' → logprob: -4.788210391998291
    4. ' =' → logprob: -9.913209915161133
    5. '=' → logprob: -11.163209915161133
    6. '.club' → logprob: -11.788209915161133
    7. '		' → logprob: -12.163209915161133
    8. '```' → logprob: -12.663209915161133
    9. '          ' → logprob: -12.788209915161133
    10. '   ' → logprob: -13.038209915161133

Token 379: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' (adapté à ' club') → logprob: -0.006884680595248938
    2. ' club' → logprob: -5.006884574890137
    3. '           ' → logprob: -8.756884574890137
    4. '   ' → logprob: -12.756884574890137
    5. '               ' → logprob: -13.006884574890137
    6. '.club' → logprob: -13.006884574890137
    7. '       ' → logprob: -13.506884574890137
    8. 'cluster' → logprob: -13.506884574890137
    9. ' ' → logprob: -14.381884574890137
    10. 'cl' → logprob: -15.006884574890137

Token 380: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.179569077678025e-05
    2. '[' → logprob: -10.625041961669922
    3. 'r' → logprob: -11.000041961669922
    4. '[c' → logprob: -14.750041961669922
    5. '[parent' → logprob: -16.125041961669922
    6. '[root' → logprob: -17.250041961669922
    7. '[t' → logprob: -17.500041961669922
    8. '	r' → logprob: -17.625041961669922
    9. '```' → logprob: -17.875041961669922
    10. '[u' → logprob: -18.000041961669922

Token 381: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3248338997364044
    2. ']' → logprob: -1.324833869934082
    3. ']=' → logprob: -4.949833869934082
    4. ' =' → logprob: -5.449833869934082
    5. '[c' → logprob: -9.574833869934082
    6. '[r' → logprob: -10.324833869934082
    7. '[' → logprob: -11.824833869934082
    8. '[x' → logprob: -12.324833869934082
    9. ')' → logprob: -12.574833869934082
    10. 'c' → logprob: -13.574833869934082

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009158630855381489
    2. ' =' → logprob: -7.000916004180908
    3. '[c' → logprob: -13.00091552734375
    4. '[x' → logprob: -13.87591552734375
    5. '=c' → logprob: -14.00091552734375
    6. '=x' → logprob: -15.62591552734375
    7. '[' → logprob: -15.87591552734375
    8. '=
' → logprob: -16.87591552734375
    9. 'x' → logprob: -18.00091552734375
    10. 'c' → logprob: -18.12591552734375

Token 383: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011735594598576427
    2. ' x' → logprob: -6.751173496246338
    3. 'c' → logprob: -12.751173973083496
    4. ' ' → logprob: -15.626173973083496
    5. '  ' → logprob: -16.75117301940918
    6. '	x' → logprob: -17.00117301940918
    7. '[x' → logprob: -17.25117301940918
    8. '1' → logprob: -17.31367301940918
    9. 'int' → logprob: -17.31367301940918
    10. '(x' → logprob: -17.37617301940918

Token 384: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.09142004698514938
    2. '       ' → logprob: -2.5914199352264404
    3. 'else' → logprob: -4.4664201736450195
    4. ' elif' → logprob: -7.3414201736450195
    5. '	elif' → logprob: -9.09142017364502
    6. '<|end|>' → logprob: -9.34142017364502
    7. '   ' → logprob: -9.84142017364502
    8. '	' → logprob: -10.96642017364502
    9. 'elseif' → logprob: -11.21642017364502
    10. '```' → logprob: -12.09142017364502

Token 387: ' club' (ID: 8522)
  Prédit: 'club'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'club' → logprob: -0.0010343570029363036
    2. ' club' → logprob: -6.876034259796143
    3. 'cl' → logprob: -13.7510347366333
    4. 'cluster' → logprob: -15.6260347366333
    5. '   ' → logprob: -15.7510347366333
    6. 'clinic' → logprob: -17.001033782958984
    7. '```' → logprob: -17.001033782958984
    8. '.club' → logprob: -17.126033782958984
    9. 'c' → logprob: -18.376033782958984
    10. '
' → logprob: -18.501033782958984

Token 388: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.000741134281270206
    2. '[' → logprob: -7.250741004943848
    3. 'r' → logprob: -10.500741004943848
    4. '[get' → logprob: -12.875741004943848
    5. '[parent' → logprob: -15.125741004943848
    6. '[c' → logprob: -15.625741004943848
    7. '[root' → logprob: -15.750741004943848
    8. '[f' → logprob: -16.500741958618164
    9. '	r' → logprob: -16.625741958618164
    10. ' r' → logprob: -16.875741958618164

Token 389: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5414304137229919
    2. '!=' → logprob: -1.1664304733276367
    3. ']!=' → logprob: -2.6664304733276367
    4. '[' → logprob: -3.9164304733276367
    5. ']' → logprob: -4.291430473327637
    6. ')!=' → logprob: -6.041430473327637
    7. ')' → logprob: -8.416430473327637
    8. ']==' → logprob: -8.916430473327637
    9. '==' → logprob: -9.166430473327637
    10. '		' → logprob: -9.166430473327637

Token 390: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.14270439743995667
    2. ' !=' → logprob: -2.017704486846924
    3. ')!=' → logprob: -11.392704010009766
    4. '==' → logprob: -11.767704010009766
    5. ']!=' → logprob: -12.517704010009766
    6. '()!=' → logprob: -13.017704010009766
    7. '[' → logprob: -13.392704010009766
    8. '!==' → logprob: -13.892704010009766
    9. ' ==' → logprob: -14.392704010009766
    10. '```' → logprob: -14.892704010009766

Token 391: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011047814972698689
    2. ' x' → logprob: -4.511047840118408
    3. '	x' → logprob: -17.51104736328125
    4. ' ' → logprob: -18.38604736328125
    5. '   ' → logprob: -18.63604736328125
    6. '       ' → logprob: -20.51104736328125
    7. '    ' → logprob: -20.63604736328125
    8. '(x' → logprob: -20.63604736328125
    9. '"x' → logprob: -20.76104736328125
    10. '0' → logprob: -20.88604736328125

Token 392: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6512840390205383
    2. ':' → logprob: -0.7762840390205383
    3. '           ' → logprob: -4.026284217834473
    4. '       ' → logprob: -7.901284217834473
    5. 'print' → logprob: -9.901284217834473
    6. ' and' → logprob: -10.401284217834473
    7. '   ' → logprob: -10.526284217834473
    8. '<|end|>' → logprob: -10.526284217834473
    9. '```' → logprob: -10.526284217834473
    10. ')' → logprob: -10.776284217834473

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00526447594165802
    2. 'print' → logprob: -6.0052642822265625
    3. '```' → logprob: -6.1302642822265625
    4. ' print' → logprob: -8.130264282226562
    5. '``' → logprob: -9.130264282226562
    6. '
' → logprob: -9.505264282226562
    7. ':
' → logprob: -9.755264282226562
    8. '               ' → logprob: -11.255264282226562
    9. '       ' → logprob: -11.255264282226562
    10. '   ' → logprob: -11.755264282226562

Token 394: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010676169040380046
    2. ' print' → logprob: -9.250106811523438
    3. '           ' → logprob: -11.625106811523438
    4. '```' → logprob: -13.625106811523438
    5. '       ' → logprob: -15.625106811523438
    6. '	print' → logprob: -15.875106811523438
    7. '``' → logprob: -16.625106811523438
    8. '   ' → logprob: -18.000106811523438
    9. ' ' → logprob: -18.125106811523438
    10. '#print' → logprob: -18.250106811523438

Token 395: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.000000953674316
    3. 'i' → logprob: -14.500000953674316
    4. '(
' → logprob: -20.375001907348633
    5. '(a' → logprob: -21.250001907348633
    6. '(ii' → logprob: -21.875001907348633
    7. 'a' → logprob: -22.250001907348633
    8. '(x' → logprob: -22.250001907348633
    9. '```' → logprob: -22.375001907348633
    10. ' i' → logprob: -23.000001907348633

Token 396: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03836321830749512
    2. '           ' → logprob: -3.913363218307495
    3. ')' → logprob: -4.038363456726074
    4. '       ' → logprob: -11.038363456726074
    5. ')
' → logprob: -12.288363456726074
    6. '               ' → logprob: -12.788363456726074
    7. '   ' → logprob: -12.913363456726074
    8. ' )
' → logprob: -13.163363456726074
    9. 'exit' → logprob: -13.163363456726074
    10. '```' → logprob: -13.538363456726074

Token 397: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006308287265710533
    2. '       ' → logprob: -8.375630378723145
    3. '   ' → logprob: -8.750630378723145
    4. 'exit' → logprob: -9.875630378723145
    5. '<|end|>' → logprob: -9.875630378723145
    6. '
' → logprob: -10.125630378723145
    7. '               ' → logprob: -10.625630378723145
    8. '	exit' → logprob: -11.250630378723145
    9. '```' → logprob: -11.250630378723145
    10. ' exit' → logprob: -11.500630378723145

Token 398: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.00032962486147880554
    2. ' exit' → logprob: -8.125329971313477
    3. '           ' → logprob: -10.375329971313477
    4. '       ' → logprob: -13.875329971313477
    5. '	exit' → logprob: -14.375329971313477
    6. '   ' → logprob: -14.750329971313477
    7. '.exit' → logprob: -15.000329971313477
    8. '(exit' → logprob: -16.000329971313477
    9. '_exit' → logprob: -16.750329971313477
    10. '
' → logprob: -17.375329971313477

Token 399: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.282920129597187e-05
    2. '(' → logprob: -12.000012397766113
    3. '()
' → logprob: -12.000012397766113
    4. '()`' → logprob: -15.375012397766113
    5. '()\' → logprob: -16.00001335144043
    6. ' ()' → logprob: -16.87501335144043
    7. '()<' → logprob: -17.50001335144043
    8. '()

' → logprob: -17.50001335144043
    9. '()]' → logprob: -17.50001335144043
    10. '()"' → logprob: -18.25001335144043

Token 400: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4776518642902374
    2. '(' → logprob: -0.977651834487915
    3. '('' → logprob: -6.227652072906494
    4. '(-' → logprob: -6.852652072906494
    5. '(S' → logprob: -8.102651596069336
    6. '0' → logprob: -8.852651596069336
    7. '(ok' → logprob: -9.852651596069336
    8. 'OK' → logprob: -11.227651596069336
    9. '(No' → logprob: -12.352651596069336
    10. 'ok' → logprob: -12.727651596069336

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011636088602244854
    2. '"' → logprob: -4.511636257171631
    3. 'OK' → logprob: -7.886636257171631
    4. '-' → logprob: -9.261635780334473
    5. ''' → logprob: -10.511635780334473
    6. 'ok' → logprob: -10.761635780334473
    7. 'Yes' → logprob: -11.011635780334473
    8. ' ' → logprob: -11.761635780334473
    9. 'Good' → logprob: -11.886635780334473
    10. '"No' → logprob: -12.261635780334473

Token 403: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -13.750001907348633
    4. '```' → logprob: -18.000001907348633
    5. '`)' → logprob: -18.250001907348633
    6. '))' → logprob: -18.625001907348633
    7. '')' → logprob: -19.000001907348633
    8. '）' → logprob: -19.125001907348633
    9. '
' → logprob: -19.125001907348633
    10. '())' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 401
Tokens correctement prédits (1ère position, stricte): 165
Tokens correctement prédits (1ère position, avec adaptation): 190
Tokens correctement prédits (top 10): 366
Précision stricte (1ère position): 41.15%
Précision adaptée (1ère position): 47.38%
Précision (top 10): 91.27%
================================================================================
